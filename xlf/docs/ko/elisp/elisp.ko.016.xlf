<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="2793d8b41a5fb22673ccbb20fb899bf671a14181" translate="yes" xml:space="preserve">
          <source>The user-level commands for using Imenu are described in the Emacs Manual (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html#Imenu&quot;&gt;Imenu&lt;/a&gt; in</source>
          <target state="translated">IMENU를 사용하는 사용자 - 레벨 명령어는 수동 이맥스에 기재되어있다 (참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html#Imenu&quot;&gt;IMENU를&lt;/a&gt; 년</target>
        </trans-unit>
        <trans-unit id="4b8f3d6a5479ec17f0291de524aeca77c644b100" translate="yes" xml:space="preserve">
          <source>The user-level commands for using Imenu are described in the Emacs Manual (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html#Imenu&quot;&gt;Imenu&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30be3069546127e24c5678d1a47150d319e9b5c5" translate="yes" xml:space="preserve">
          <source>The usual and simplest way is to set the variable &lt;code&gt;imenu-generic-expression&lt;/code&gt;:</source>
          <target state="translated">일반적이고 가장 간단한 방법은 &lt;code&gt;imenu-generic-expression&lt;/code&gt; 변수를 설정하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="90c75b3bffda92eeaca86bfbbe99a7430c08eb6e" translate="yes" xml:space="preserve">
          <source>The usual conventions for displaying characters.</source>
          <target state="translated">문자를 표시하는 일반적인 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="2bd44e25afda0f432266a4e8544ff3b09136787e" translate="yes" xml:space="preserve">
          <source>The usual effect of signaling an error is to terminate the command that is running and return immediately to the Emacs editor command loop. You can arrange to trap errors occurring in a part of your program by establishing an error handler, with the special form &lt;code&gt;condition-case&lt;/code&gt;. A simple example looks like this:</source>
          <target state="translated">오류 신호의 일반적인 효과는 실행중인 명령을 종료하고 즉시 Emacs 편집기 명령 루프로 돌아가는 것입니다. 특수한 형태의 &lt;code&gt;condition-case&lt;/code&gt; 를 사용하여 오류 처리기를 설정하여 프로그램의 일부에서 발생하는 오류를 트랩하도록 정렬 할 수 있습니다 . 간단한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bda6ef848c823990e6e54452a3858487c06e4809" translate="yes" xml:space="preserve">
          <source>The usual interface functions for visiting.</source>
          <target state="translated">방문을위한 일반적인 인터페이스 기능.</target>
        </trans-unit>
        <trans-unit id="af1901f1654ae4b4ade44f3e4daa9e941c61b525" translate="yes" xml:space="preserve">
          <source>The usual menu keymap item properties, &lt;code&gt;:visible&lt;/code&gt;, &lt;code&gt;:enable&lt;/code&gt;, &lt;code&gt;:button&lt;/code&gt;, and &lt;code&gt;:filter&lt;/code&gt;, are useful in tool bar bindings and have their normal meanings. The &lt;var&gt;real-binding&lt;/var&gt; in the item must be a command, not a keymap; in other words, it does not work to define a tool bar icon as a prefix key.</source>
          <target state="translated">일반적인 메뉴 키맵 항목 속성, &lt;code&gt;:visible&lt;/code&gt; , &lt;code&gt;:enable&lt;/code&gt; , &lt;code&gt;:button&lt;/code&gt; 및 &lt;code&gt;:filter&lt;/code&gt; 는 도구 모음 바인딩에 유용하며 일반적인 의미를 갖습니다. 항목 의 &lt;var&gt;real-binding&lt;/var&gt; 은 키맵이 아닌 명령이어야합니다. 즉, 도구 모음 아이콘을 접두사 키로 정의하는 것은 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ac47370c7e29666366c5084b597a830112308e12" translate="yes" xml:space="preserve">
          <source>The usual purpose of tracking mouse motion is to indicate on the screen the consequences of pushing or releasing a button at the current position.</source>
          <target state="translated">마우스 동작을 추적하는 일반적인 목적은 현재 위치에서 버튼을 누르거나 놓은 결과를 화면에 표시하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4945884c017dad70b10d5d997fdc2f6a3086adf5" translate="yes" xml:space="preserve">
          <source>The usual read syntax for alphanumeric characters is a question mark followed by the character; thus, &amp;lsquo;</source>
          <target state="translated">영숫자 문자에 대한 일반적인 읽기 구문은 물음표 다음에 문자가 오는 것입니다. 따라서 '</target>
        </trans-unit>
        <trans-unit id="5b4827bb568bf80753c3882d75fd2ab2a82f4c4c" translate="yes" xml:space="preserve">
          <source>The usual reason to specify a documentation string for a type is to provide more information about the meanings of alternatives inside a &lt;code&gt;choice&lt;/code&gt; type or the parts of some other composite type.</source>
          <target state="translated">유형에 대한 문서 문자열을 지정하는 일반적인 이유는 &lt;code&gt;choice&lt;/code&gt; 유형 내부의 대안의 의미 또는 다른 복합 유형의 일부 에 대한 자세한 정보를 제공하기위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="93b29e680886ef3e32073a78d95db6b48a506c98" translate="yes" xml:space="preserve">
          <source>The usual regexp special characters are not special inside a character alternative. A completely different set of characters is special: &amp;lsquo;</source>
          <target state="translated">일반적인 정규 표현식 특수 문자는 대체 문자 내에서 특별하지 않습니다. 완전히 다른 문자 세트는 특별합니다. '</target>
        </trans-unit>
        <trans-unit id="d9d1876d8ad2be0bc6c8de7cd54c94dfc02c0053" translate="yes" xml:space="preserve">
          <source>The usual regular expression functions do backtracking when necessary to handle the &amp;lsquo;</source>
          <target state="translated">일반적인 정규식 함수는 '를 처리하는 데 필요할 때 역 추적을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="c019ba7cb944335d1fef89c7810b797ce8729a29" translate="yes" xml:space="preserve">
          <source>The usual role of a terminal-specific library is to enable special keys to send sequences that Emacs can recognize. It may also need to set or add to &lt;code&gt;input-decode-map&lt;/code&gt; if the Termcap or Terminfo entry does not specify all the terminal&amp;rsquo;s function keys. See &lt;a href=&quot;terminal-input#Terminal-Input&quot;&gt;Terminal Input&lt;/a&gt;.</source>
          <target state="translated">터미널 특정 라이브러리의 일반적인 역할은 Emacs가 인식 할 수있는 시퀀스를 보낼 수있는 특수 키를 활성화하는 것입니다. 또한 Termcap 또는 Terminfo 항목이 터미널의 모든 기능 키를 지정하지 않는 경우 &lt;code&gt;input-decode-map&lt;/code&gt; 을 설정하거나 추가해야 할 수 있습니다 . &lt;a href=&quot;terminal-input#Terminal-Input&quot;&gt;터미널 입력을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3392a5efb2e33159132ee8ca55dd0bd95184127" translate="yes" xml:space="preserve">
          <source>The usual use of this feature is to fill comments in programming language modes. If the function needs to fill a paragraph in the usual way, it can do so as follows:</source>
          <target state="translated">이 기능의 일반적인 사용은 프로그래밍 언어 모드에서 주석을 채우는 것입니다. 함수가 일반적인 방법으로 단락을 채워야하는 경우 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba8560d5e995fe38c893b74271adb5dbf50667f4" translate="yes" xml:space="preserve">
          <source>The usual way to change the value of a variable is with the special form &lt;code&gt;setq&lt;/code&gt;. When you need to compute the choice of variable at run time, use the function &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">변수 값을 변경하는 일반적인 방법은 특수 형식 &lt;code&gt;setq&lt;/code&gt; 입니다. 런타임에 선택한 변수를 계산해야하는 경우 &lt;code&gt;set&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad41ba273b5018a4ad09f4b5ea08e124af9c068c" translate="yes" xml:space="preserve">
          <source>The usual way to define a face is through the &lt;code&gt;defface&lt;/code&gt; macro. This macro associates a face name (a symbol) with a default &lt;em&gt;face spec&lt;/em&gt;. A face spec is a construct which specifies what attributes a face should have on any given terminal; for example, a face spec might specify one foreground color on high-color terminals, and a different foreground color on low-color terminals.</source>
          <target state="translated">얼굴을 정의하는 일반적인 방법은 &lt;code&gt;defface&lt;/code&gt; 매크로를 사용하는 것입니다. 이 매크로는 얼굴 이름 (기호)을 기본 &lt;em&gt;얼굴 사양과 연결&lt;/em&gt; 합니다. 면 사양은 주어진 터미널에서면이 가져야하는 속성을 지정하는 구성입니다. 예를 들어, 얼굴 사양은 하이 컬러 터미널에서 하나의 전경색을 지정하고 낮은 컬러 터미널에서 다른 전경색을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab4be22e46f2537548bcdd8b14595a57667df9f7" translate="yes" xml:space="preserve">
          <source>The usual way to define the SMIE grammar of a language is by defining a new global variable that holds the precedence table by giving a set of BNF rules. For example, the grammar definition for a small Pascal-like language could look like:</source>
          <target state="translated">언어의 SMIE 문법을 정의하는 일반적인 방법은 일련의 BNF 규칙을 제공하여 우선 순위 테이블을 보유하는 새로운 전역 변수를 정의하는 것입니다. 예를 들어, 파스칼과 유사한 작은 언어에 대한 문법 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ea823ab039487ce6c627239fb33b038961688356" translate="yes" xml:space="preserve">
          <source>The usual way to make a buffer-local binding is with &lt;code&gt;make-local-variable&lt;/code&gt;, which is what major mode commands typically use. This affects just the current buffer; all other buffers (including those yet to be created) will continue to share the default value unless they are explicitly given their own buffer-local bindings.</source>
          <target state="translated">버퍼 로컬 바인딩을 만드는 일반적인 방법 은 메이저 모드 명령이 일반적으로 사용하는 &lt;code&gt;make-local-variable&lt;/code&gt; 을 사용하는 것입니다. 이것은 현재 버퍼에만 영향을줍니다. 다른 모든 버퍼 (아직 생성되지 않은 버퍼 포함)는 명시 적으로 자체 버퍼 로컬 바인딩이 제공되지 않는 한 기본값을 계속 공유합니다.</target>
        </trans-unit>
        <trans-unit id="0fe16ddfa309e34d499b3360c2ffbfd59734391f" translate="yes" xml:space="preserve">
          <source>The usual way to make a menu keymap produce a menu is to make it the definition of a prefix key. (A Lisp program can explicitly pop up a menu and receive the user&amp;rsquo;s choice&amp;mdash;see &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Pop-Up Menus&lt;/a&gt;.)</source>
          <target state="translated">메뉴 키맵이 메뉴를 생성하도록 만드는 일반적인 방법은 접두사 키의 정의로 만드는 것입니다. (A 리스프 프로그램이 명시 적으로 메뉴를 팝업 및 사용자의 수신 할 수있는 선택을-참조 &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;팝업 메뉴를&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="413eaf722746475cb7fc0070f78d8c7cbef5d401" translate="yes" xml:space="preserve">
          <source>The usual way to read a file into a buffer as a sequence of bytes, so you can decode the contents explicitly, is with &lt;code&gt;insert-file-contents-literally&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;); alternatively, specify a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;rawfile&lt;/var&gt; argument when visiting a file with &lt;code&gt;find-file-noselect&lt;/code&gt;. These methods result in a unibyte buffer.</source>
          <target state="translated">파일을 바이트 시퀀스로 버퍼에 읽는 일반적인 방법은 내용을 명시 적으로 디코딩 할 수 있도록 &lt;code&gt;insert-file-contents-literally&lt;/code&gt; 를 사용하는 것입니다 ( &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;파일에서 읽기&lt;/a&gt; 참조 ). 또는 &lt;code&gt;find-file-noselect&lt;/code&gt; 를 사용 하여 파일을 방문 할 때 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;var&gt;rawfile&lt;/var&gt; 인수를 지정하십시오 . 이러한 메서드는 유니 바이트 버퍼를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5a11c911f5b0f69a171b92b7cffb6822859b5ec3" translate="yes" xml:space="preserve">
          <source>The usual way to reference a variable is to write the symbol which names it. See &lt;a href=&quot;symbol-forms#Symbol-Forms&quot;&gt;Symbol Forms&lt;/a&gt;.</source>
          <target state="translated">변수를 참조하는 일반적인 방법은 이름을 지정하는 기호를 작성하는 것입니다. &lt;a href=&quot;symbol-forms#Symbol-Forms&quot;&gt;기호 양식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5526547f8b2c540a3aed5c614e44c4e6712243b8" translate="yes" xml:space="preserve">
          <source>The usual way to use the byte sequence that results from explicitly encoding text is to copy it to a file or process&amp;mdash;for example, to write it with &lt;code&gt;write-region&lt;/code&gt; (see &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;), and suppress encoding by binding &lt;code&gt;coding-system-for-write&lt;/code&gt; to &lt;code&gt;no-conversion&lt;/code&gt;.</source>
          <target state="translated">명시 적으로 텍스트를 인코딩 한 결과 인 바이트 시퀀스를 사용하는 일반적인 방법은이를 파일 또는 프로세스에 복사하는 것입니다. 예를 들어 &lt;code&gt;write-region&lt;/code&gt; ( &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;파일에 쓰기&lt;/a&gt; 참조 ) 을 사용하여 작성하고 &lt;code&gt;coding-system-for-write&lt;/code&gt; 을 바인딩하여 인코딩을 억제합니다. for-write to &lt;code&gt;no-conversion&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36be957267ce38e09b5982a5646ced40aa3279e5" translate="yes" xml:space="preserve">
          <source>The valid values of &lt;code&gt;syntax-table&lt;/code&gt; text property are:</source>
          <target state="translated">&lt;code&gt;syntax-table&lt;/code&gt; 텍스트 속성 의 유효한 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="356e00fd867a17cbdcb1217100288420420a4192" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;auto-raise&lt;/code&gt; should be used when your window manager has the focus automatically follow the position of the mouse pointer and a frame that gains focus is raised automatically.</source>
          <target state="translated">&lt;code&gt;auto-raise&lt;/code&gt; 값 은 창 관리자가 마우스 포인터의 위치를 ​​자동으로 따라가는 포커스가 있고 포커스를받는 프레임이 자동으로 올라갈 때 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="893aaa83d61bb05c575aed10c479a15392b8a63f" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;t&lt;/code&gt; should be used when your window manager has the focus automatically follow the position of the mouse pointer but a frame that gains focus is not raised automatically and may even remain occluded by other window-system windows.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 값 은 창 관리자가 마우스 포인터의 위치를 ​​자동으로 따라가는 포커스를 가지지 만 포커스를 얻는 프레임이 자동으로 올라가지 않고 다른 창 시스템 창에 의해 가려진 상태로 남아있을 때 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="aed9f61a23e975eb7392678e85f51f4d74310e87" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;color&lt;/var&gt; specifies the color to draw with. The default is the foreground color of the face for simple boxes, and the background color of the face for 3D boxes.</source>
          <target state="translated">값 &lt;var&gt;color&lt;/var&gt; 은 그릴 색상을 지정합니다. 기본값은 단순한 상자의 경우 얼굴의 전경색이고 3D 상자의 경우 얼굴의 배경색입니다.</target>
        </trans-unit>
        <trans-unit id="726b5e07fbd252dac7c2dae2a2b05f252281e1cf" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;height&lt;/var&gt; is the value that was specified for the height of the horizontal scroll bar (which may be &lt;code&gt;nil&lt;/code&gt;); &lt;var&gt;lines&lt;/var&gt; is the (possibly rounded) number of lines that the horizontally scroll bar actually occupies.</source>
          <target state="translated">값 &lt;var&gt;height&lt;/var&gt; (수있다 수평 스크롤 바의 높이에 대해 지정된 값이다 &lt;code&gt;nil&lt;/code&gt; ); &lt;var&gt;lines&lt;/var&gt; 은 가로 스크롤 막대가 실제로 차지하는 (반올림 된) 줄 수입니다.</target>
        </trans-unit>
        <trans-unit id="db2573e485b9f1d52d90fe7b697fd92212845cf8" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;style&lt;/var&gt; specifies whether to draw a 3D box. If it is &lt;code&gt;released-button&lt;/code&gt;, the box looks like a 3D button that is not being pressed. If it is &lt;code&gt;pressed-button&lt;/code&gt;, the box looks like a 3D button that is being pressed. If it is &lt;code&gt;nil&lt;/code&gt; or omitted, a plain 2D box is used.</source>
          <target state="translated">값 &lt;var&gt;style&lt;/var&gt; 은 3D 상자를 그릴 지 여부를 지정합니다. 그것은 경우 &lt;code&gt;released-button&lt;/code&gt; 누르면되지 않는 차원 버튼과 같은 상자 모양입니다. 그것은 경우 &lt;code&gt;pressed-button&lt;/code&gt; , 누르고있는 3 차원 버튼과 같은 상자 모양입니다. 이 경우 &lt;code&gt;nil&lt;/code&gt; 또는 생략, 일반 2D 상자가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1eb8d30e0ef6e2c616649855299438edaa4b6387" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;width&lt;/var&gt; is the value that was specified for the width of the vertical scroll bar (which may be &lt;code&gt;nil&lt;/code&gt;); &lt;var&gt;columns&lt;/var&gt; is the (possibly rounded) number of columns that the vertical scroll bar actually occupies.</source>
          <target state="translated">값 &lt;var&gt;width&lt;/var&gt; (수있다 수직 스크롤 바의 폭에 대해 지정된 값이다 &lt;code&gt;nil&lt;/code&gt; ); &lt;var&gt;columns&lt;/var&gt; 은 수직 스크롤 막대가 실제로 차지하는 (반올림 된) 열 수입니다.</target>
        </trans-unit>
        <trans-unit id="738dcd4e09dec82d9c9cbf00960b591b0d043018" translate="yes" xml:space="preserve">
          <source>The value can also be a list of error conditions (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Signaling Errors&lt;/a&gt;). Then the debugger is called only for error conditions in this list (except those also listed in &lt;code&gt;debug-ignored-errors&lt;/code&gt;). For example, if you set &lt;code&gt;debug-on-error&lt;/code&gt; to the list &lt;code&gt;(void-variable)&lt;/code&gt;, the debugger is only called for errors about a variable that has no value.</source>
          <target state="translated">이 값은 오류 조건 목록 일 수도 있습니다 ( &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;신호 오류&lt;/a&gt; 참조 ). 그런 다음이 목록의 오류 조건에 대해서만 디버거가 호출됩니다 ( &lt;code&gt;debug-ignored-errors&lt;/code&gt; 에 나열된 오류 조건 제외 ). 예를 들어, &lt;code&gt;debug-on-error&lt;/code&gt; 를 목록 &lt;code&gt;(void-variable)&lt;/code&gt; 으로 설정하면 디버거는 값이없는 변수에 대한 오류에 대해서만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0fca95603596a3c0776843a564cf75cbd2a26719" translate="yes" xml:space="preserve">
          <source>The value can also be a symbol with a function definition. That is equivalent to &lt;code&gt;t&lt;/code&gt;, except that the next warning will also call the function with no arguments with the warnings buffer current. The function can insert text which will serve as a header for the series of warnings.</source>
          <target state="translated">값은 함수 정의가있는 기호 일 수도 있습니다. 에 해당 즉 &lt;code&gt;t&lt;/code&gt; , 다음 경고는 또한 경고와 함께 인수없이 기능을 현재 버퍼 호출하는 것을 제외하고. 이 함수는 일련의 경고에 대한 헤더 역할을 할 텍스트를 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="036ce65d4e444cc9ca133db8c5ff911fde4b8b3b" translate="yes" xml:space="preserve">
          <source>The value can also be floating point or a function, which specifies the height relative to an &lt;em&gt;underlying face&lt;/em&gt; (see &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Displaying Faces&lt;/a&gt;). A floating-point value specifies the amount by which to scale the height of the underlying face. A function value is called with one argument, the height of the underlying face, and returns the height of the new face. If the function is passed an integer argument, it must return an integer.</source>
          <target state="translated">값은 부동 소수점 또는 &lt;em&gt;기본면에&lt;/em&gt; 상대적인 높이를 지정하는 함수일 수도 있습니다 ( &lt;em&gt;면 &lt;/em&gt;&lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;표시&lt;/a&gt; 참조 ). 부동 소수점 값은 기본 얼굴의 높이를 조정하는 양을 지정합니다. 함수 값은 하나의 인수, 기본 얼굴의 높이와 함께 호출되고 새 얼굴의 높이를 반환합니다. 함수에 정수 인수가 전달되면 정수를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="93f34264bf299dd9ff1623c4a048f9a90b6d13e4" translate="yes" xml:space="preserve">
          <source>The value can be &lt;code&gt;nil&lt;/code&gt; (don&amp;rsquo;t use parity), the symbol &lt;code&gt;odd&lt;/code&gt; (use odd parity), or the symbol &lt;code&gt;even&lt;/code&gt; (use even parity). If &lt;var&gt;parity&lt;/var&gt; is not given, it defaults to no parity.</source>
          <target state="translated">값은 다음 &lt;code&gt;nil&lt;/code&gt; (패리티를 사용하지 않음), 상기 심볼 &lt;code&gt;odd&lt;/code&gt; (홀수 패리티를 사용), 또는 기호 &lt;code&gt;even&lt;/code&gt; (짝수 패리티를 사용). &lt;var&gt;parity&lt;/var&gt; 가 제공되지 않으면 패리티 없음으로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b19ab7691b129f64fc5f72d4c526e81bb1415159" translate="yes" xml:space="preserve">
          <source>The value can be a string; that should be the name of a file containing external-format X bitmap data. The file is found in the directories listed in the variable &lt;code&gt;x-bitmap-file-path&lt;/code&gt;.</source>
          <target state="translated">값은 문자열 일 수 있습니다. 외부 형식 X 비트 맵 데이터를 포함하는 파일의 이름이어야합니다. 파일은 &lt;code&gt;x-bitmap-file-path&lt;/code&gt; 변수에 나열된 디렉토리에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90810279cbdbc3d6497008e3e858bcead8d9c860" translate="yes" xml:space="preserve">
          <source>The value can be an approximation. The function may avoid expensive processing and return an inexact result.</source>
          <target state="translated">값은 근사치 일 수 있습니다. 이 함수는 값 비싼 처리를 피하고 정확하지 않은 결과를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0ff635173abbeea2ba4af8f9b36759383fe725e" translate="yes" xml:space="preserve">
          <source>The value cell holds a symbol&amp;rsquo;s value as a variable, which is what you get if the symbol itself is evaluated as a Lisp expression. See &lt;a href=&quot;variables#Variables&quot;&gt;Variables&lt;/a&gt;, for details about how values are set and retrieved, including complications such as &lt;em&gt;local bindings&lt;/em&gt; and &lt;em&gt;scoping rules&lt;/em&gt;. Most symbols can have any Lisp object as a value, but certain special symbols have values that cannot be changed; these include &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;, and any symbol whose name starts with &amp;lsquo;</source>
          <target state="translated">값 셀은 기호의 값을 변수로 보유하며, 이는 기호 자체가 Lisp 표현식으로 평가되는 경우 얻을 수있는 것입니다. &lt;em&gt;로컬 바인딩&lt;/em&gt; 및 &lt;em&gt;범위 지정 규칙&lt;/em&gt; 과 같은 문제를 포함하여 값을 설정하고 검색하는 방법에 대한 자세한 내용은 &lt;a href=&quot;variables#Variables&quot;&gt;변수를&lt;/a&gt; 참조하십시오 . 대부분의 기호는 Lisp 객체를 값으로 가질 수 있지만 특정 특수 기호에는 변경할 수없는 값이 있습니다. 여기에는 &lt;code&gt;nil&lt;/code&gt; 및 &lt;code&gt;t&lt;/code&gt; 및 이름이 '로 시작하는 모든 기호가 포함됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00902684377c36ec854c666f66e1def68419f7f0" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use for representing a JSON array. It can be either &lt;code&gt;array&lt;/code&gt;, the default, to use Lisp arrays; or &lt;code&gt;list&lt;/code&gt; to use lists.</source>
          <target state="translated">값은 JSON 배열을 나타내는 데 사용할 Lisp 개체를 결정합니다. Lisp 배열을 사용하려면 기본값 인 &lt;code&gt;array&lt;/code&gt; 중 하나 일 수 있습니다 . 또는 &lt;code&gt;list&lt;/code&gt; 을 사용하려면 목록.</target>
        </trans-unit>
        <trans-unit id="16edef5cb81f91f4adf2188db4dc4f629deae17d" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use for representing the key-value mappings of a JSON object. It can be either &lt;code&gt;hash-table&lt;/code&gt;, the default, to make hashtables with strings as keys; &lt;code&gt;alist&lt;/code&gt; to use alists with symbols as keys; or &lt;code&gt;plist&lt;/code&gt; to use plists with keyword symbols as keys.</source>
          <target state="translated">이 값은 JSON 개체의 키-값 매핑을 나타내는 데 사용할 Lisp 개체를 결정합니다. 문자열을 키로 사용하여 해시 테이블을 만드는 것은 기본값 인 &lt;code&gt;hash-table&lt;/code&gt; 일 수 있습니다 . &lt;code&gt;alist&lt;/code&gt; 는 기호가있는 alist 를 키로 사용합니다. 또는 &lt;code&gt;plist&lt;/code&gt; 를 사용하여 키워드 기호가있는 plist 를 키로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3fa2905ebfc7e60316747f384efec8fd2b021c6b" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use to represent the JSON keyword &lt;code&gt;false&lt;/code&gt;. It defaults to the symbol &lt;code&gt;:false&lt;/code&gt;.</source>
          <target state="translated">값은 JSON 키워드 &lt;code&gt;false&lt;/code&gt; 를 나타내는 데 사용할 Lisp 객체를 결정합니다 . 기본값은 &lt;code&gt;:false&lt;/code&gt; 기호 입니다.</target>
        </trans-unit>
        <trans-unit id="70971f173ca78b68c08bef1aa1b243f7d8fcb51c" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use to represent the JSON keyword &lt;code&gt;null&lt;/code&gt;. It defaults to the symbol &lt;code&gt;:null&lt;/code&gt;.</source>
          <target state="translated">값은 JSON 키워드 &lt;code&gt;null&lt;/code&gt; 을 나타내는 데 사용할 Lisp 개체를 결정합니다 . 기본값은 &lt;code&gt;:null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0fe437d2786c53546e9e4721af67a363a80470e7" translate="yes" xml:space="preserve">
          <source>The value denotes the side of the frame or window where a new window displaying the buffer shall be created. This entry is used by &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; to indicate the side of the frame where a new side window shall be placed (see &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Displaying Buffers in Side Windows&lt;/a&gt;). It is also used by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; to indicate the side of an existing window where the new window shall be located (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">값은 버퍼를 표시하는 새 창이 생성 될 프레임 또는 창의 측면을 나타냅니다. 이 항목은 &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; 에서 새 사이드 윈도우가 배치 될 프레임의 측면을 표시하는 데 사용됩니다 ( &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;사이드 윈도우에 버퍼 표시&lt;/a&gt; 참조 ). 그것도 의해 사용되는 &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; (참조 새로운 윈도우가 위치한다 기존 창의 측면을 나타내도록 &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;원자 윈도우&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f7ee348338ce1106641a672b981019be718a72ff" translate="yes" xml:space="preserve">
          <source>The value has no effect when renaming would not alter the owner or group of the file; that is, for files which are owned by the user and whose group matches the default for a new file created there by the user.</source>
          <target state="translated">이름을 변경해도 파일의 소유자 또는 그룹이 변경되지 않으면 값이 적용되지 않습니다. 즉, 사용자가 소유하고 그룹이 사용자가 생성 한 새 파일의 기본값과 일치하는 파일의 경우.</target>
        </trans-unit>
        <trans-unit id="ffc415f45e41ef7cef7291f52d1ca8b82b116694" translate="yes" xml:space="preserve">
          <source>The value has the form &lt;code&gt;(&lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt;)&lt;/code&gt;. Here &lt;var&gt;offset&lt;/var&gt; is an integer giving the number of seconds ahead of Universal Time (east of Greenwich). A negative value means west of Greenwich. The second element, &lt;var&gt;abbr&lt;/var&gt;, is a string giving an abbreviation for the time zone, e.g., &amp;lsquo;</source>
          <target state="translated">값의 형식은 &lt;code&gt;(&lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt;)&lt;/code&gt; 입니다. 여기서 &lt;var&gt;offset&lt;/var&gt; 은 세계시 (그리니치 동부)보다 앞선 시간 (초)을 제공하는 정수입니다. 음수 값은 그리니치 서쪽을 의미합니다. 두 번째 요소 &lt;var&gt;abbr&lt;/var&gt; 은 시간대의 약어를 제공하는 문자열입니다 (예 : '</target>
        </trans-unit>
        <trans-unit id="d54c14bbe8e273d4103e284f553d7a5a47ac3803" translate="yes" xml:space="preserve">
          <source>The value is 5 because that is the</source>
          <target state="translated">값은 5입니다.</target>
        </trans-unit>
        <trans-unit id="fcb6e2e9389f7780a675906dacf95eb444c0772f" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; for a subexpression inside a &amp;lsquo;</source>
          <target state="translated">값은 '내부의 하위 표현식에 대해 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac9636b8cfc92069e35cc830e2013018fdbb6b7e" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;count&lt;/var&gt; is out of range, or for a subexpression inside a &amp;lsquo;</source>
          <target state="translated">값은 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;count&lt;/var&gt; 돌며 범위를 벗어나거나 표현식은 '</target>
        </trans-unit>
        <trans-unit id="c167e0d6bf2b798519700d2a08b4be56ddb7ac7a" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;pos&lt;/var&gt; is not visible in &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that stands for the selected window. If &lt;var&gt;pos&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that stands for the value of point in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">값은 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;pos&lt;/var&gt; 가 에 보이지 않는 &lt;var&gt;window&lt;/var&gt; . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 그 선택된 창을 의미합니다. 경우 &lt;var&gt;pos&lt;/var&gt; 가 있다 &lt;code&gt;nil&lt;/code&gt; , 그에서 점의 값을 의미합니다 &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a178845a64825fe33f0ce1505830cf0c8571ccb5" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;state&lt;/var&gt; represents a parse which has arrived at a top level position.</source>
          <target state="translated">&lt;var&gt;state&lt;/var&gt; 가 최상위 위치에 도달 한 구문 분석을 나타내는 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f1847ffb79e4ef977f22b0f89bbfa3a8711353ea" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if the properties remain unchanged all the way to the end of &lt;var&gt;object&lt;/var&gt; and &lt;var&gt;limit&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position greater than or equal to &lt;var&gt;pos&lt;/var&gt;. The value equals &lt;var&gt;pos&lt;/var&gt; only when &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">값은 &lt;code&gt;nil&lt;/code&gt; 속성이의 말에 모든 방법을 그대로 유지하는 경우 &lt;var&gt;object&lt;/var&gt; 및 &lt;var&gt;limit&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; . 값이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;pos&lt;/var&gt; 보다 크거나 같은 위치 입니다. 값은 &lt;var&gt;limit&lt;/var&gt; 가 &lt;var&gt;pos&lt;/var&gt; 일 때만 &lt;var&gt;pos&lt;/var&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f42191ef8fc8d62fa782e6182ae3d4adf74e945c" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if the property remains unchanged all the way to the end of &lt;var&gt;object&lt;/var&gt; and &lt;var&gt;limit&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position greater than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">값은 &lt;code&gt;nil&lt;/code&gt; 속성 줄곧의 끝까지 변하지 경우 &lt;var&gt;object&lt;/var&gt; 및 &lt;var&gt;limit&lt;/var&gt; 인 &lt;code&gt;nil&lt;/code&gt; . 값이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;pos&lt;/var&gt; 보다 크거나 같은 위치입니다 . 그것은 동일 &lt;var&gt;pos&lt;/var&gt; 경우에만 &lt;var&gt;limit&lt;/var&gt; 동일 &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="862c753ca19532a871df595b1b786989741df504" translate="yes" xml:space="preserve">
          <source>The value is a form (an expression).</source>
          <target state="translated">값은 양식 (표현식)입니다.</target>
        </trans-unit>
        <trans-unit id="ec33dbdc3801cba4b2a38abf814dcf1da00c4804" translate="yes" xml:space="preserve">
          <source>The value is a function.</source>
          <target state="translated">값은 함수입니다.</target>
        </trans-unit>
        <trans-unit id="18ad4635bccc9d11d2025c4e0e4bf454e39e4870" translate="yes" xml:space="preserve">
          <source>The value is a key sequence. The customization buffer shows the key sequence using the same syntax as the</source>
          <target state="translated">값은 키 시퀀스입니다. 사용자 정의 버퍼는 다음과 같은 구문을 사용하여 키 시퀀스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="92047d2ff22dd07d30de54ae74480f7db138859c" translate="yes" xml:space="preserve">
          <source>The value is a list of all defined character set names.</source>
          <target state="translated">값은 정의 된 모든 문자 세트 이름의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="42e3b3b8e9f18abe4b0e6fc019c88b2b88f0e5a7" translate="yes" xml:space="preserve">
          <source>The value is a list of forms (expressions).</source>
          <target state="translated">값은 양식 (표현식) 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d9d7add64fd5fda2d55573b4b40ddee4fa132824" translate="yes" xml:space="preserve">
          <source>The value is a list of functions.</source>
          <target state="translated">값은 함수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="744e014c080a028da5111b9957a721b5376e2f9e" translate="yes" xml:space="preserve">
          <source>The value is a predicate&amp;mdash;a function of one argument that returns non-&lt;code&gt;nil&lt;/code&gt; for success and &lt;code&gt;nil&lt;/code&gt; for failure.</source>
          <target state="translated">값은 하나 개의 인수의 조건 - 함수 반환이 아닌이 &lt;code&gt;nil&lt;/code&gt; 성공을위한 &lt;code&gt;nil&lt;/code&gt; 실패.</target>
        </trans-unit>
        <trans-unit id="fc95eed350ead41f92d508546cbe37902aff0c7a" translate="yes" xml:space="preserve">
          <source>The value is a program name.</source>
          <target state="translated">값은 프로그램 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b563d6300ce73a67d16482c93e6765622dfc6342" translate="yes" xml:space="preserve">
          <source>The value is a whole shell command.</source>
          <target state="translated">값은 전체 쉘 명령입니다.</target>
        </trans-unit>
        <trans-unit id="0fb0a1e296cb5eb5561689c7425698e96e4d5162" translate="yes" xml:space="preserve">
          <source>The value is always a string ending with a slash.</source>
          <target state="translated">값은 항상 슬래시로 끝나는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="38abcf64aec0a36e0f511c163ed2cd547b75773a" translate="yes" xml:space="preserve">
          <source>The value is an alist or nested alist in which each element describes one unpacked field.</source>
          <target state="translated">값은 각 요소가 압축 해제 된 하나의 필드를 설명하는 alist 또는 중첩 된 alist입니다.</target>
        </trans-unit>
        <trans-unit id="f7f574a40cde0014d34b1f4c77ea68404bc7d6db" translate="yes" xml:space="preserve">
          <source>The value is an expression for determining whether the named menu item should be enabled in menus. See &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;.</source>
          <target state="translated">값은 메뉴에서 명명 된 메뉴 항목을 활성화해야하는지 여부를 결정하기위한 표현식입니다. &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;간단한 메뉴 항목을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="988d1fb03cc87294d6912ad4a008a4a541a3d1cf" translate="yes" xml:space="preserve">
          <source>The value is an interactive form for the named function. Normally, you should not set this directly; use the &lt;code&gt;interactive&lt;/code&gt; special form instead. See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;.</source>
          <target state="translated">값은 명명 된 함수에 대한 대화 형 형식입니다. 일반적으로 직접 설정하면 안됩니다. 사용 &lt;code&gt;interactive&lt;/code&gt; 대신 특별한 양식을. &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;대화 형 통화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a2675782eef27c42642a60fce1752cbb34644db5" translate="yes" xml:space="preserve">
          <source>The value is boolean&amp;mdash;either &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;. Note that by using &lt;code&gt;choice&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; together (see the next section), you can specify that the value must be &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;, but also specify the text to describe each value in a way that fits the specific meaning of the alternative.</source>
          <target state="translated">값은 부울 ( &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;t&lt;/code&gt; ) 입니다. &lt;code&gt;choice&lt;/code&gt; 와 &lt;code&gt;const&lt;/code&gt; 를 함께 사용 하면 (다음 섹션 참조) 값이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;t&lt;/code&gt; 여야 함을 지정할 수 있지만 대안의 특정 의미에 맞는 방식으로 각 값을 설명하는 텍스트도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3894f2edc61204404042bc861be88ec42f3d3a29" translate="yes" xml:space="preserve">
          <source>The value is copied from &lt;code&gt;this-command&lt;/code&gt; when a command returns to the command loop, except when the command has specified a prefix argument for the following command.</source>
          <target state="translated">명령이 다음 명령에 대한 접두사 인수를 지정한 경우를 제외하고 명령이 명령 루프로 반환 될 때이 &lt;code&gt;this-command&lt;/code&gt; 에서 값이 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="306c554506d781ac28efad2e4ea92701f816dce5" translate="yes" xml:space="preserve">
          <source>The value is either a major mode or a list of major modes. &lt;code&gt;display-buffer-reuse-mode-window&lt;/code&gt; may reuse a window whenever the value specified by this entry matches the major mode of that window&amp;rsquo;s buffer. Other action functions ignore such entries.</source>
          <target state="translated">값은 주 모드 또는 주 모드 목록입니다. &lt;code&gt;display-buffer-reuse-mode-window&lt;/code&gt; 는이 항목에 지정된 값이 해당 창 버퍼의 주 모드와 일치 할 때마다 창을 재사용 할 수 있습니다. 다른 작업 함수는 이러한 항목을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="1843e0f5c17e7f0a09b0d1319f9a950d3c352fa5" translate="yes" xml:space="preserve">
          <source>The value is either the empty vector, or is a newly constructed nonempty vector that is not &lt;code&gt;eq&lt;/code&gt; to any existing vector.</source>
          <target state="translated">값은 빈 벡터이거나 기존 벡터에 &lt;code&gt;eq&lt;/code&gt; 이 아닌 새로 생성 된 비어 있지 않은 벡터입니다 .</target>
        </trans-unit>
        <trans-unit id="eb6e5361e7a91533e27cdf7399370f943e9ba10d" translate="yes" xml:space="preserve">
          <source>The value is measured in baud.</source>
          <target state="translated">값은 보드 단위로 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="be4e71b6f99d1f91e5e6b4886554248affe4a867" translate="yes" xml:space="preserve">
          <source>The value is negative if the first substring is less, positive if the first is greater, and zero if they are equal. The absolute value of the result is one plus the index of the first differing characters within the substrings.</source>
          <target state="translated">값은 첫 번째 부분 문자열이 더 작 으면 음수이고, 첫 번째 부분 문자열이 더 크면 양수, 같으면 0입니다. 결과의 절대 값은 1에 하위 문자열 내에서 처음으로 다른 문자의 인덱스를 더한 값입니다.</target>
        </trans-unit>
        <trans-unit id="a221deec0b7b326eded452b6cef1afc0c42096b1" translate="yes" xml:space="preserve">
          <source>The value is normally &lt;code&gt;nil&lt;/code&gt;; Lisp programs bind it to &lt;code&gt;t&lt;/code&gt; for brief periods of time.</source>
          <target state="translated">값은 일반적으로 &lt;code&gt;nil&lt;/code&gt; 입니다 . Lisp 프로그램 은 짧은 시간 동안이 를 &lt;code&gt;t&lt;/code&gt; 에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="a10d990baa1d6dc687c357d4165562f04a895757" translate="yes" xml:space="preserve">
          <source>The value is normally a list of the form &lt;code&gt;(&lt;var&gt;filenum&lt;/var&gt;
&lt;var&gt;devnum&lt;/var&gt;)&lt;/code&gt;. This pair of numbers uniquely identifies the file among all files accessible on the system. See the function &lt;code&gt;file-attributes&lt;/code&gt;, in &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;, for more information about them.</source>
          <target state="translated">값은 일반적으로 형식 &lt;code&gt;(&lt;var&gt;filenum&lt;/var&gt; &lt;var&gt;devnum&lt;/var&gt;)&lt;/code&gt; 의 목록입니다 . 이 숫자 쌍은 시스템에서 액세스 할 수있는 모든 파일 중에서 파일을 고유하게 식별합니다. 이에 대한 자세한 정보 는 &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;파일 속성의 &lt;/a&gt; &lt;code&gt;file-attributes&lt;/code&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6457f0bb5cd3fdfe83d6454775a62a020b7ae87" translate="yes" xml:space="preserve">
          <source>The value is normally an absolute file name. It can also be &lt;code&gt;nil&lt;/code&gt;, if the definition is not associated with any file. If &lt;var&gt;symbol&lt;/var&gt; specifies an autoloaded function, the value can be a relative file name without extension.</source>
          <target state="translated">값은 일반적으로 절대 파일 이름입니다. 정의가 파일과 연관되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 일 수도 있습니다 . &lt;var&gt;symbol&lt;/var&gt; 이 자동로드 된 함수를 지정하는 경우 값은 확장자가없는 상대 파일 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4bcfcbe7d05d1c0191cd0ba7af653328fe120d2" translate="yes" xml:space="preserve">
          <source>The value is significant only as to whether it is &lt;code&gt;nil&lt;/code&gt; or not. Since such variables often end up acquiring more values over time, this convention is not strongly recommended.</source>
          <target state="translated">이 값은 &lt;code&gt;nil&lt;/code&gt; 인지 여부에 대해서만 중요합니다 . 이러한 변수는 시간이 지남에 따라 더 많은 값을 획득하는 경우가 많으므로이 규칙은 강력히 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="778494fde2953cd1ddb11ad185ad2d2dd95186e4" translate="yes" xml:space="preserve">
          <source>The value may also be &lt;code&gt;nil&lt;/code&gt;. Then all commands work normally, even disabled ones.</source>
          <target state="translated">값은 &lt;code&gt;nil&lt;/code&gt; 일 수도 있습니다 . 그런 다음 모든 명령이 정상적으로 작동하며 비활성화 된 명령도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ef59b01ef55bdf2efe2493eea3cfaf23a97d2e9e" translate="yes" xml:space="preserve">
          <source>The value may be any Lisp object that can be printed and read back. You can use &lt;code&gt;sexp&lt;/code&gt; as a fall-back for any option, if you don&amp;rsquo;t want to take the time to work out a more specific type to use.</source>
          <target state="translated">값은 인쇄하고 다시 읽을 수있는 Lisp 개체 일 수 있습니다. 더 구체적인 유형을 사용하는 데 시간을 할애하지 않으려면 모든 옵션에 대한 &lt;code&gt;sexp&lt;/code&gt; 으로 sexp 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b99730ddec359b16348016cabda6e3291d81a09e" translate="yes" xml:space="preserve">
          <source>The value must be &lt;var&gt;value&lt;/var&gt;&amp;mdash;nothing else is allowed.</source>
          <target state="translated">값은해야 &lt;var&gt;value&lt;/var&gt; 허용되는 다른 - 아무것도.</target>
        </trans-unit>
        <trans-unit id="87b4d5cd14fe72c47e3003a8680a757eb4604dbf" translate="yes" xml:space="preserve">
          <source>The value must be a character code. A character code is actually an integer, but this type shows the value by inserting the character in the buffer, rather than by showing the number.</source>
          <target state="translated">값은 문자 코드 여야합니다. 문자 코드는 실제로 정수이지만이 유형은 숫자를 표시하는 대신 버퍼에 문자를 삽입하여 값을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="356d38d5cf3fa505e305c63022ab492161a1a6ed" translate="yes" xml:space="preserve">
          <source>The value must be a coding-system name, and you can do completion with</source>
          <target state="translated">값은 코딩 시스템 이름이어야하며 다음을 사용하여 완료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63573ffb5bc552f254086ecf27ae3051cb0cceff" translate="yes" xml:space="preserve">
          <source>The value must be a cons cell, its &lt;small&gt;CAR&lt;/small&gt; must fit &lt;var&gt;car-type&lt;/var&gt;, and its &lt;small&gt;CDR&lt;/small&gt; must fit &lt;var&gt;cdr-type&lt;/var&gt;. For example, &lt;code&gt;(cons string
symbol)&lt;/code&gt; is a customization type which matches values such as &lt;code&gt;(&quot;foo&quot; . foo)&lt;/code&gt;.</source>
          <target state="translated">값은 cons 셀 이어야 하고 &lt;small&gt;CAR&lt;/small&gt; 은 &lt;var&gt;car-type&lt;/var&gt; 에 맞아야 하며 &lt;small&gt;CDR&lt;/small&gt; 은 &lt;var&gt;cdr-type&lt;/var&gt; 에 맞아야 합니다 . 예를 들어, &lt;code&gt;(cons string symbol)&lt;/code&gt; 은 &lt;code&gt;(&quot;foo&quot; . foo)&lt;/code&gt; 와 같은 값과 일치하는 사용자 정의 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="57910dac76238c31c6f7af52f08cdcf756ebfb61" translate="yes" xml:space="preserve">
          <source>The value must be a directory. The widget provides completion.</source>
          <target state="translated">값은 디렉토리 여야합니다. 위젯이 완성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="810836eddfb49dd28f43e49c497214d6e73aaac5" translate="yes" xml:space="preserve">
          <source>The value must be a file name for an existing file. The widget provides completion.</source>
          <target state="translated">값은 기존 파일의 파일 이름이어야합니다. 위젯이 완성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b6a74a7f285c0c5906e259820de400e746147836" translate="yes" xml:space="preserve">
          <source>The value must be a file name. The widget provides completion.</source>
          <target state="translated">값은 파일 이름이어야합니다. 위젯이 완성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="13f9e716c79c89cbb1b9b4a0a3061a3b3b7535c7" translate="yes" xml:space="preserve">
          <source>The value must be a function taking one argument (a frame), supposed to return non-&lt;code&gt;nil&lt;/code&gt; if that frame is a candidate for displaying the buffer. This entry is used by &lt;code&gt;display-buffer-use-some-frame&lt;/code&gt;.</source>
          <target state="translated">값은 하나의 인수 (프레임)를 사용하는 함수 여야하며 해당 프레임이 버퍼를 표시 할 후보 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환해야합니다 . 이 항목은 &lt;code&gt;display-buffer-use-some-frame&lt;/code&gt; 에서 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="d0769814e541d4c1c6d9cf382832b62aff25584a" translate="yes" xml:space="preserve">
          <source>The value must be a function that takes one argument, a window, and returns either a new window (which will be used to display the desired buffer) or &lt;code&gt;nil&lt;/code&gt; (which means the splitting failed). The default value is &lt;code&gt;split-window-sensibly&lt;/code&gt;, which is documented next.</source>
          <target state="translated">값은 하나의 인수 인 창을 취하고 새 창 (원하는 버퍼를 표시하는 데 사용됨) 또는 &lt;code&gt;nil&lt;/code&gt; (분할 실패를 의미 함 )을 반환하는 함수 여야합니다 . 기본값은 &lt;code&gt;split-window-sensibly&lt;/code&gt; 이며 다음에 설명합니다.</target>
        </trans-unit>
        <trans-unit id="10add5bdc2dc784e1ca37482866dfd6d4c60ef8f" translate="yes" xml:space="preserve">
          <source>The value must be a list and each element of the list must fit the type &lt;var&gt;element-type&lt;/var&gt;. This appears in the customization buffer as a list of elements, with &amp;lsquo;</source>
          <target state="translated">값은 목록이어야하며 목록의 각 요소는 &lt;var&gt;element-type&lt;/var&gt; 유형에 맞아야합니다 . 이것은 사용자 정의 버퍼에 '</target>
        </trans-unit>
        <trans-unit id="69283ab46854490317f97e1feb0235ad06aef920" translate="yes" xml:space="preserve">
          <source>The value must be a list of cons-cells, the &lt;small&gt;CAR&lt;/small&gt; of each cell representing a key of customization type &lt;var&gt;key-type&lt;/var&gt;, and the &lt;small&gt;CDR&lt;/small&gt; of the same cell representing a value of customization type &lt;var&gt;value-type&lt;/var&gt;. The user can add and delete key/value pairs, and edit both the key and the value of each pair.</source>
          <target state="translated">값은 cons-cells 목록, 사용자 정의 유형 &lt;var&gt;key-type&lt;/var&gt; 의 키를 나타내는 각 셀 의 &lt;small&gt;CAR&lt;/small&gt; 및 사용자 정의 유형 &lt;var&gt;value-type&lt;/var&gt; 의 값을 나타내는 동일한 셀 의 &lt;small&gt;CDR&lt;/small&gt; 이어야합니다 . 사용자는 키 / 값 쌍을 추가 및 삭제할 수 있으며 각 쌍의 키와 값을 모두 편집 할 수 있습니다.&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e94e481856916cf8928303ce6c5fe6173ae9d7b6" translate="yes" xml:space="preserve">
          <source>The value must be a list of functions. This customization type is used for hook variables. You can use the &lt;code&gt;:options&lt;/code&gt; keyword in a hook variable&amp;rsquo;s &lt;code&gt;defcustom&lt;/code&gt; to specify a list of functions recommended for use in the hook; See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">값은 함수 목록이어야합니다. 이 사용자 정의 유형은 후크 변수에 사용됩니다. 당신이 사용할 수있는 &lt;code&gt;:options&lt;/code&gt; 후크 변수에 키워드 &lt;code&gt;defcustom&lt;/code&gt; 를 후크의 사용을 권장 기능 목록을 지정; &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;변수 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54b586711663d904f858b9b290b8d22b94a091f6" translate="yes" xml:space="preserve">
          <source>The value must be a list with exactly as many elements as the &lt;var&gt;element-types&lt;/var&gt; given; and each element must fit the corresponding &lt;var&gt;element-type&lt;/var&gt;.</source>
          <target state="translated">값은 주어진 &lt;var&gt;element-types&lt;/var&gt; 만큼 정확하게 많은 요소가있는 목록이어야합니다 . 각 요소는 해당 &lt;var&gt;element-type&lt;/var&gt; 맞아야합니다 .</target>
        </trans-unit>
        <trans-unit id="896d6796a36a3b3136852c309aa7d01c3792f5f6" translate="yes" xml:space="preserve">
          <source>The value must be a list, and each element of the list must match one of the &lt;var&gt;types&lt;/var&gt; specified.</source>
          <target state="translated">값은 목록이어야하며 목록의 각 요소는 지정된 &lt;var&gt;types&lt;/var&gt; 중 하나와 일치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3aeeaa45e096ad8313dd25ab21d8c10013208130" translate="yes" xml:space="preserve">
          <source>The value must be a number (floating point or integer).</source>
          <target state="translated">값은 숫자 (부동 소수점 또는 정수) 여야합니다.</target>
        </trans-unit>
        <trans-unit id="945efd91d2acb86b2c28413feb5748c4d0bd2079" translate="yes" xml:space="preserve">
          <source>The value must be a string. The customization buffer shows the string without delimiting &amp;lsquo;</source>
          <target state="translated">값은 문자열이어야합니다. 사용자 정의 버퍼는 '를 구분하지 않고 문자열을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4752821348ac6fabc91456f988d3e618cd05d1f6" translate="yes" xml:space="preserve">
          <source>The value must be a symbol which is a face name. The widget provides completion.</source>
          <target state="translated">값은 얼굴 이름 인 기호 여야합니다. 위젯이 완성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="67a06078fab94776bb45407ad95be9c13181139f" translate="yes" xml:space="preserve">
          <source>The value must be a symbol. It appears in the customization buffer as the symbol name. The widget provides completion.</source>
          <target state="translated">값은 기호 여야합니다. 사용자 정의 버퍼에 기호 이름으로 나타납니다. 위젯이 완성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5849f60cb5b32368a764c6539b8c8a00d225ed38" translate="yes" xml:space="preserve">
          <source>The value must be a valid color name. The widget provides completion for color names, as well as a sample and a button for selecting a color name from a list of color names shown in a</source>
          <target state="translated">값은 유효한 색상 이름이어야합니다. 위젯은 색상 이름에 대한 완성 기능을 제공 할뿐만 아니라에 표시된 색상 이름 목록에서 색상 이름을 선택하기위한 샘플 및 버튼을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d2c0b88b87276fde817f7f25e6fbe66a3b002536" translate="yes" xml:space="preserve">
          <source>The value must be a variable name. The widget provides completion.</source>
          <target state="translated">값은 변수 이름이어야합니다. 위젯이 완성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="866e1c92bc84fa3056c2cc92aa9eb34d171bc22b" translate="yes" xml:space="preserve">
          <source>The value must be an integer.</source>
          <target state="translated">값은 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ce3a6a49432bb3e2bb25953ebf11758d62c57727" translate="yes" xml:space="preserve">
          <source>The value must be either a lambda expression or a function name. The widget provides completion for function names.</source>
          <target state="translated">값은 람다 식 또는 함수 이름이어야합니다. 위젯은 함수 이름에 대한 완성 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9de80c74f410724e3e9d2d4e057e94956796434d" translate="yes" xml:space="preserve">
          <source>The value must be floating point.</source>
          <target state="translated">값은 부동 소수점이어야합니다.</target>
        </trans-unit>
        <trans-unit id="597960a6ce739f902fa9c94199257d090be01a23" translate="yes" xml:space="preserve">
          <source>The value must fit one of &lt;var&gt;alternative-types&lt;/var&gt;. For example, &lt;code&gt;(choice integer string)&lt;/code&gt; allows either an integer or a string.</source>
          <target state="translated">값은 &lt;var&gt;alternative-types&lt;/var&gt; 중 하나에 맞아야합니다 . 예를 들어, &lt;code&gt;(choice integer string)&lt;/code&gt; 은 정수 또는 문자열을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c16d4e66c8a9aef6f1bbfad4e5db9283eb01c2d3" translate="yes" xml:space="preserve">
          <source>The value must specify a window that may have displayed the buffer previously. &lt;code&gt;display-buffer-in-previous-window&lt;/code&gt; will give preference to such a window provided it is still live and not dedicated to another buffer.</source>
          <target state="translated">값은 이전에 버퍼를 표시했을 수있는 창을 지정해야합니다. &lt;code&gt;display-buffer-in-previous-window&lt;/code&gt; 는 여전히 라이브 상태이고 다른 버퍼 전용이 아닌 경우 이러한 창을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="a8dcd9a15008fc01a594ad9652de93cb7a57eb20" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;(acos &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; is a number between 0 and pi (inclusive) whose cosine is &lt;var&gt;arg&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is out of range (outside [-1, 1]), &lt;code&gt;acos&lt;/code&gt; returns a NaN.</source>
          <target state="translated">값 &lt;code&gt;(acos &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; 0 코사인 인 PI (포함) 사이의 수이다 &lt;var&gt;arg&lt;/var&gt; . 경우 &lt;var&gt;arg&lt;/var&gt; 범위를 벗어나 (외부 [-1, 1]) &lt;code&gt;acos&lt;/code&gt; 리턴 NaN이.</target>
        </trans-unit>
        <trans-unit id="fd06b4d6ba82cc559a28714761ccf61d840a6365" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;(asin &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; is a number between -pi/2 and pi/2 (inclusive) whose sine is &lt;var&gt;arg&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is out of range (outside [-1, 1]), &lt;code&gt;asin&lt;/code&gt; returns a NaN.</source>
          <target state="translated">&lt;code&gt;(asin &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; 의 값은 사인이 &lt;var&gt;arg&lt;/var&gt; 인 -pi / 2와 pi / 2 (포함) 사이의 숫자 입니다. 경우 &lt;var&gt;arg&lt;/var&gt; 범위를 벗어나 (외부 [-1, 1]) &lt;code&gt;asin&lt;/code&gt; 리턴 NaN이.</target>
        </trans-unit>
        <trans-unit id="9a7380bf9f6c5b9249cafc94b2adcec1cea58bac" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;(atan &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; is a number between -pi/2 and pi/2 (exclusive) whose tangent is &lt;var&gt;y&lt;/var&gt;. If the optional second argument &lt;var&gt;x&lt;/var&gt; is given, the value of &lt;code&gt;(atan y x)&lt;/code&gt; is the angle in radians between the vector &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;]&lt;/code&gt; and the &lt;code&gt;X&lt;/code&gt; axis.</source>
          <target state="translated">&lt;code&gt;(atan &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 의 값은 탄젠트가 &lt;var&gt;y&lt;/var&gt; 인 -pi / 2에서 pi / 2 (배타적) 사이의 숫자 입니다. 선택적 두 번째 인수 &lt;var&gt;x&lt;/var&gt; 가 주어지면 &lt;code&gt;(atan y x)&lt;/code&gt; 의 값은 벡터 &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;]&lt;/code&gt; 와 &lt;code&gt;X&lt;/code&gt; 축 사이의 각도 (라디안 단위 ) 입니다 .</target>
        </trans-unit>
        <trans-unit id="c9e728ea829977e40f53b131b5144e09a9f2f814" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;auto-fill-function&lt;/code&gt; is &lt;code&gt;do-auto-fill&lt;/code&gt; when Auto Fill mode is enabled. That is a function whose sole purpose is to implement the usual strategy for breaking a line.</source>
          <target state="translated">의 값 &lt;code&gt;auto-fill-function&lt;/code&gt; 있다 &lt;code&gt;do-auto-fill&lt;/code&gt; 자동 채우기 모드가 활성화 된 경우. 그것은 유일한 목적이 줄을 끊는 일반적인 전략을 구현하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d3bae7cd024789f811c4af6bb48478148919779d" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;exec-path&lt;/code&gt; is used by &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;start-process&lt;/code&gt; when the &lt;var&gt;program&lt;/var&gt; argument is not an absolute file name.</source>
          <target state="translated">값 &lt;code&gt;exec-path&lt;/code&gt; 에서 사용되는 &lt;code&gt;call-process&lt;/code&gt; 및 &lt;code&gt;start-process&lt;/code&gt; 때 &lt;var&gt;program&lt;/var&gt; 인수 절대 파일명 아니다.</target>
        </trans-unit>
        <trans-unit id="30c13d6566147e5f7ff2d3b3fa785aa4e4166cab" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;global-mode-string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;global-mode-string&lt;/code&gt; 값 .</target>
        </trans-unit>
        <trans-unit id="3d3a2b88654bd12f5337924840af3d4601a33e57" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;input-decode-map&lt;/code&gt; is usually set up automatically according to the terminal&amp;rsquo;s Terminfo or Termcap entry, but sometimes those need help from terminal-specific Lisp files. Emacs comes with terminal-specific files for many common terminals; their main purpose is to make entries in &lt;code&gt;input-decode-map&lt;/code&gt; beyond those that can be deduced from Termcap and Terminfo. See &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input-decode-map&lt;/code&gt; 의 값 은 일반적으로 터미널의 Terminfo 또는 Termcap 항목에 따라 자동으로 설정되지만 때로는 터미널 별 Lisp 파일의 도움이 필요합니다. Emacs는 많은 일반 터미널에 대한 터미널 특정 파일과 함께 제공됩니다. 주요 목적은 Termcap 및 Terminfo에서 추론 할 수있는 항목을 넘어서 &lt;code&gt;input-decode-map&lt;/code&gt; 항목을 만드는 것입니다 . &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;터미널 별을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="639680a63cdaad1e211652d86db8f9e826824dca" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; is always &lt;code&gt;eq&lt;/code&gt; to one of the links in the kill ring list. The element it identifies is the &lt;small&gt;CAR&lt;/small&gt; of that link. Kill commands, which change the kill ring, also set this variable to the value of &lt;code&gt;kill-ring&lt;/code&gt;. The effect is to rotate the ring so that the newly killed text is at the front.</source>
          <target state="translated">&lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; 의 값 은 항상 킬 링 목록의 링크 중 하나에 &lt;code&gt;eq&lt;/code&gt; 입니다. 식별하는 요소 는 해당 링크 의 &lt;small&gt;CAR&lt;/small&gt; 입니다. 킬 링을 변경하는 킬 명령도이 변수를 &lt;code&gt;kill-ring&lt;/code&gt; 값으로 설정합니다 . 효과는 새로 죽인 텍스트가 맨 앞에 오도록 링을 회전하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b0adbfa26a0f5e416e962a7d1ef1be229d44f4eb" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;load-history&lt;/code&gt; may have one element whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;nil&lt;/code&gt;. This element describes definitions made with &lt;code&gt;eval-buffer&lt;/code&gt; on a buffer that is not visiting a file.</source>
          <target state="translated">&lt;code&gt;load-history&lt;/code&gt; 값에는 &lt;small&gt;CAR&lt;/small&gt; 이 &lt;code&gt;nil&lt;/code&gt; 인 하나의 요소가있을 수 있습니다 . 이 요소 는 파일을 방문하지 않는 &lt;code&gt;eval-buffer&lt;/code&gt; 에서 eval-buffer 로 만든 정의를 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="0c0cf4e96ec8565ee4c3ece809d9e7876396b3e6" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;mode-name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mode-name&lt;/code&gt; 의 값 .</target>
        </trans-unit>
        <trans-unit id="01f5f8f11917d60cc33932b39ed53647b1e12540" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;pointm&lt;/code&gt; at the last redisplay time.</source>
          <target state="translated">마지막 다시 표시 시간 의 &lt;code&gt;pointm&lt;/code&gt; 값입니다 .</target>
        </trans-unit>
        <trans-unit id="15b964ce86184c0c14ba0a0fa6d8168b77cc4283" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;process-connection-type&lt;/code&gt; takes effect when &lt;code&gt;make-process&lt;/code&gt; or &lt;code&gt;start-process&lt;/code&gt; is called. So you can specify how to communicate with one subprocess by binding the variable around the call to these functions.</source>
          <target state="translated">&lt;code&gt;process-connection-type&lt;/code&gt; 의 값은 &lt;code&gt;make-process&lt;/code&gt; 또는 &lt;code&gt;start-process&lt;/code&gt; 가 호출 될 때 적용됩니다 . 따라서 이러한 함수에 대한 호출 주변의 변수를 바인딩하여 하나의 하위 프로세스와 통신하는 방법을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4917d7965a0a2a0eceea9527333fc312c3a1d97" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;track-mouse&lt;/code&gt; is that of the last form in &lt;var&gt;body&lt;/var&gt;. You should design &lt;var&gt;body&lt;/var&gt; to return when it sees the up-event that indicates the release of the button, or whatever kind of event means it is time to stop tracking.</source>
          <target state="translated">&lt;code&gt;track-mouse&lt;/code&gt; 의 값은 &lt;var&gt;body&lt;/var&gt; 의 마지막 형태 의 값입니다 . 버튼을 놓았 음을 나타내는 up-event 또는 어떤 종류의 이벤트가 추적을 중지 해야 하는지를 나타내는 이벤트를 볼 때 반환 할 &lt;var&gt;body&lt;/var&gt; 를 디자인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8e1d48548038a94283629f3b24139decfc462f06" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;geometry&lt;/var&gt; should be a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;width&lt;/var&gt; and &lt;var&gt;height&lt;/var&gt; specify the width and height of the cropped image. If &lt;var&gt;x&lt;/var&gt; is a positive number it specifies the offset of the cropped area from the left of the original image, and if negative the offset from the right. If &lt;var&gt;y&lt;/var&gt; is a positive number it specifies the offset from the top of the original image, and if negative from the bottom. If &lt;var&gt;x&lt;/var&gt; or &lt;var&gt;y&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; or unspecified the crop area will be centered on the original image.</source>
          <target state="translated">&lt;var&gt;geometry&lt;/var&gt; 값은 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 형식의 목록이어야합니다 . &lt;var&gt;width&lt;/var&gt; 와 &lt;var&gt;height&lt;/var&gt; 잘린 이미지의 너비 와 높이를 지정합니다. 경우에는 &lt;var&gt;x&lt;/var&gt; 가 원 화상의 좌측으로부터 잘라낸 영역의 오프셋을 지정하는 정수이며, 음수는 우측 오프셋. 경우 &lt;var&gt;y&lt;/var&gt; 는 양의 수이며 이는 원본 이미지의 상부로부터 오프셋을 지정하고, 아래에서 음수. 경우에는 &lt;var&gt;x&lt;/var&gt; 또는 &lt;var&gt;y&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; 또는 불특정 자르기 영역은 원본 이미지에 집중 될 것이다.</target>
        </trans-unit>
        <trans-unit id="f9a0aa42133a8566714c8da5cfb1ac14d08f0cbd" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;list&lt;/var&gt; specifies the objects to ask questions about. It should be either a list of objects or a generator function. If it is a function, it should expect no arguments, and should return either the next object to ask about, or &lt;code&gt;nil&lt;/code&gt;, meaning to stop asking questions.</source>
          <target state="translated">&lt;var&gt;list&lt;/var&gt; 의 값은 질문 할 개체를 지정합니다. 객체 목록이거나 생성기 함수 여야합니다. 함수 인 경우 인수를 기대하지 않아야하며 질문 할 다음 객체를 반환하거나 질문을 중지하는 것을 의미하는 &lt;code&gt;nil&lt;/code&gt; 을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="292f71c1213df0a0c0f3e562c978b3b0e7d59643" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;package&lt;/var&gt; needs to be unique and it needs to match the &lt;var&gt;package&lt;/var&gt; value appearing in the &lt;code&gt;:package-version&lt;/code&gt; keyword. Since the user might see the value in an error message, a good choice is the official name of the package, such as MH-E or Gnus.</source>
          <target state="translated">&lt;var&gt;package&lt;/var&gt; 값은 고유해야 하며 &lt;code&gt;:package-version&lt;/code&gt; 키워드에 나타나는 &lt;var&gt;package&lt;/var&gt; 값 과 일치해야 합니다. 사용자가 오류 메시지에서 값을 볼 수 있으므로 MH-E 또는 Gnus와 같은 패키지의 공식 이름을 선택하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fb4c37d36e42ca7bde0fbebe3ad9e40de14d67b3" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;persistent&lt;/var&gt; is the value specified for &lt;var&gt;window&lt;/var&gt; with the last successful invocation of &lt;code&gt;set-window-scroll-bars&lt;/code&gt;, &lt;code&gt;nil&lt;/code&gt; if there never was one.</source>
          <target state="translated">&lt;var&gt;persistent&lt;/var&gt; 값 은 &lt;code&gt;set-window-scroll-bars&lt;/code&gt; 를 마지막으로 성공적으로 호출 한 &lt;var&gt;window&lt;/var&gt; 지정된 값이며 , &lt;code&gt;nil&lt;/code&gt; 경우 nil 입니다.</target>
        </trans-unit>
        <trans-unit id="49f9de5cdd026d53e82afe5f7a540af01f423517" translate="yes" xml:space="preserve">
          <source>The value of a &lt;code&gt;while&lt;/code&gt; form is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 형식 의 값 은 항상 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9912c1305dfe708608a449f833a2f31f708f2dbf" translate="yes" xml:space="preserve">
          <source>The value of a hook variable should be a list of functions. You can manipulate that list using the normal Lisp facilities, but the modular way is to use the functions &lt;code&gt;add-hook&lt;/code&gt; and &lt;code&gt;remove-hook&lt;/code&gt;, defined below. They take care to handle some unusual situations and avoid problems.</source>
          <target state="translated">후크 변수의 값은 함수 목록이어야합니다. 일반 Lisp 기능을 사용하여 해당 목록을 조작 할 수 있지만 모듈 식 방법은 아래 정의 된 &lt;code&gt;add-hook&lt;/code&gt; 및 &lt;code&gt;remove-hook&lt;/code&gt; 함수를 사용하는 것 입니다. 그들은 비정상적인 상황을 처리하고 문제를 피하기 위해주의를 기울입니다.</target>
        </trans-unit>
        <trans-unit id="c0ed2587fe635b2d9e79d3541e6cc504fd9eebb9" translate="yes" xml:space="preserve">
          <source>The value of point in each displayed buffer is saved and restored if &lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 표시된 각 버퍼의 포인트 값이 저장되고 복원 됩니다 .</target>
        </trans-unit>
        <trans-unit id="0652902dbda00a1f1b8c6d489b8db651b1b2521c" translate="yes" xml:space="preserve">
          <source>The value of point is a number no less than 1, and no greater than the buffer size plus 1. If narrowing is in effect (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;), then point is constrained to fall within the accessible portion of the buffer (possibly at one end of it).</source>
          <target state="translated">포인트 값은 1보다 작지 않고 버퍼 크기에 1을 더한 값보다 크지 않습니다. 좁히기가 적용되는 경우 ( &lt;a href=&quot;narrowing#Narrowing&quot;&gt;좁히기&lt;/a&gt; 참조 ), 포인트는 버퍼의 액세스 가능한 부분 (아마도 한쪽 끝)에 속하도록 제한됩니다. 그것의).</target>
        </trans-unit>
        <trans-unit id="c649d29a460c292a996b1cc1a21ea82f922077f2" translate="yes" xml:space="preserve">
          <source>The value of such an element denotes the side of the existing window where the new window shall be located. Valid values are &lt;code&gt;below&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;above&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;. The default is &lt;code&gt;below&lt;/code&gt;. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the new window is set to this value.</source>
          <target state="translated">이러한 요소의 값은 새 창이 위치 할 기존 창의 측면을 나타냅니다. 유효한 값은 &lt;code&gt;below&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;above&lt;/code&gt; 및 &lt;code&gt;left&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;below&lt;/code&gt; . &lt;code&gt;window-atom&lt;/code&gt; 새로운 윈도우 파라미터 값이 설정된다.</target>
        </trans-unit>
        <trans-unit id="3bee44a93e7dbfe8f5da10b43e59eebc67ba3be4" translate="yes" xml:space="preserve">
          <source>The value of such an element specifies an existing window the new window shall be combined with. If it specifies an internal window, all children of that window become part of the atomic window too. If no window is specified, the new window becomes a sibling of the selected window. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the existing window is set to &lt;code&gt;main&lt;/code&gt; provided that window is live and its &lt;code&gt;window-atom&lt;/code&gt; parameter was not already set.</source>
          <target state="translated">이러한 요소의 값은 새 창이 결합 될 기존 창을 지정합니다. 내부 창을 지정하면 해당 창의 모든 자식도 원자 창의 일부가됩니다. 창을 지정하지 않으면 새 창이 선택한 창의 형제가됩니다. &lt;code&gt;window-atom&lt;/code&gt; 기존 윈도우의 매개 변수로 설정되어 &lt;code&gt;main&lt;/code&gt; 윈도우 라이브이고 그것의 것을 제공하는 &lt;code&gt;window-atom&lt;/code&gt; 매개 변수가 아직 설정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="36dca9fc8ccdca39123615ba9dd441f1ea0709cd" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:mime-charset&lt;/code&gt; property is also defined as an alias for the coding system.</source>
          <target state="translated">&lt;code&gt;:mime-charset&lt;/code&gt; 속성 값은 코딩 시스템의 별칭으로도 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="683fca4c2cdec479bdd8c0d4b67ec7a0cb22ccb8" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:align-to&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, and &lt;code&gt;:ascent&lt;/code&gt; properties can be a special kind of expression that is evaluated during redisplay. The result of the evaluation is used as an absolute number of pixels.</source>
          <target state="translated">의 값 &lt;code&gt;:width&lt;/code&gt; , &lt;code&gt;:align-to&lt;/code&gt; , &lt;code&gt;:height&lt;/code&gt; , 및 &lt;code&gt;:ascent&lt;/code&gt; 속성 재표시 평가 식의 특별한 종류 일 수있다. 평가 결과는 절대 픽셀 수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b5883233bcfdece07654ec3fc2db74080cba9898" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;setq&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">의 값 &lt;code&gt;setq&lt;/code&gt; 형태는 마지막의 값 &lt;var&gt;form&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c20effc01d2e40edc2a51c8522b1818bc27ec613" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;key-regexp&lt;/var&gt; argument specifies what part of each record is the sort key. The &lt;var&gt;key-regexp&lt;/var&gt; could match the whole record, or only a part. In the latter case, the rest of the record has no effect on the sorted order of records, but it is carried along when the record moves to its new position.</source>
          <target state="translated">&lt;var&gt;key-regexp&lt;/var&gt; 인수 의 값은 각 레코드에서 정렬 키인 부분을 지정합니다. &lt;var&gt;key-regexp&lt;/var&gt; 전체 레코드 또는 일부만 일치 할 수있다. 후자의 경우 나머지 레코드는 정렬 된 레코드 순서에 영향을주지 않지만 레코드가 새 위치로 이동할 때 함께 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="61f439d56d48d0b8c0f5d67dbcbbd53e2a928133" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;record-regexp&lt;/var&gt; argument specifies how to divide the buffer into sort records. At the end of each record, a search is done for this regular expression, and the text that matches it is taken as the next record. For example, the regular expression &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;record-regexp&lt;/var&gt; 인수 의 값은 버퍼를 정렬 레코드로 나누는 방법을 지정합니다. 각 레코드의 끝에서이 정규식에 대한 검색이 수행되고 일치하는 텍스트가 다음 레코드로 간주됩니다. 예를 들어 정규 표현식 '</target>
        </trans-unit>
        <trans-unit id="39ba2b3d88e32ebb4217d6fb97a97f51cd7ad773" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned, unless the argument &lt;var&gt;quit-function&lt;/var&gt; is specified. In that case, it is called with two arguments: the window showing the buffer and the result of &lt;var&gt;body&lt;/var&gt;. The final return value is then whatever &lt;var&gt;quit-function&lt;/var&gt; returns.</source>
          <target state="translated">&lt;var&gt;quit-function&lt;/var&gt; 인수 가 지정 되지 않은 경우 &lt;var&gt;body&lt;/var&gt; 의 마지막 양식 값 이 리턴 됩니다. 이 경우 버퍼를 보여주는 창과 &lt;var&gt;body&lt;/var&gt; 의 결과라는 두 개의 인수로 호출됩니다 . 최종 반환 값은 &lt;var&gt;quit-function&lt;/var&gt; 이 반환하는 값입니다 .</target>
        </trans-unit>
        <trans-unit id="e78b740538539c7c406d38d214ecf64e0a9c548f" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned.</source>
          <target state="translated">&lt;var&gt;body&lt;/var&gt; 의 마지막 양식 값 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5503ca30040ea0d8a2bf36ebd8b2d6d451adef8e" translate="yes" xml:space="preserve">
          <source>The value of the optional argument &lt;var&gt;require-match&lt;/var&gt; determines how the user may exit the minibuffer:</source>
          <target state="translated">선택적 인수 &lt;var&gt;require-match&lt;/var&gt; 의 값은 사용자가 미니 버퍼를 종료하는 방법을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="91cb6366ae526fcd118c1c7987633bf5fb25c0aa" translate="yes" xml:space="preserve">
          <source>The value of this abnormal hook should be a list of functions, which are used to compute a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) for completing the text at point. It can be used by major modes to provide mode-specific completion tables (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">이 비정상적인 후크의 값은 특정 시점에서 텍스트를 완료 하기 위해 완료 테이블 ( &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt; 참조)을 계산하는 데 사용되는 함수 목록이어야합니다 . 모드 별 완료 테이블을 제공하기 위해 주요 모드에서 사용할 수 있습니다 ( &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;주요 모드 규칙&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1f63a8b7cc8d9cea6e125635c39e1ca62c26e1ba" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the (mode-specific) abbreviation table of the current buffer. It can also be a list of such tables.</source>
          <target state="translated">이 버퍼 로컬 변수의 값은 현재 버퍼의 (모드 별) 약어 테이블입니다. 이러한 테이블 목록 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffb436c64e5dfdae7baf41af2904d33b30ffad65" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the default directory for the current buffer. It should be an absolute directory name; it may start with &amp;lsquo;</source>
          <target state="translated">이 버퍼 로컬 변수의 값은 현재 버퍼의 기본 디렉토리입니다. 절대 디렉토리 이름이어야합니다. '로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="911b12790a3948cec2a227be07bf8d24f3677dcc" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the length of the current buffer, when it was last read in, saved, or auto-saved. This is used to detect a substantial decrease in size, and turn off auto-saving in response.</source>
          <target state="translated">이 버퍼 로컬 변수의 값은 마지막으로 읽거나 저장하거나 자동 저장 한 현재 버퍼의 길이입니다. 이것은 크기의 상당한 감소를 감지하고 이에 대응하여 자동 저장을 해제하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0fd2598f40c31f5cad837711cfca8950d8dcbaeb" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the list of saved former marks of the current buffer, most recent first.</source>
          <target state="translated">이 버퍼 로컬 변수의 값은 현재 버퍼의 저장된 이전 마크 목록이며 가장 최근의 것입니다.</target>
        </trans-unit>
        <trans-unit id="34c1d5bd1b00a5f68781fa93debb24f2ea06a228" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the spacing between tab stops used for displaying tab characters in Emacs buffers. The value is in units of columns, and the default is 8. Note that this feature is completely independent of the user-settable tab stops used by the command &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. See &lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;Indent Tabs&lt;/a&gt;.</source>
          <target state="translated">이 버퍼 로컬 변수의 값은 Emacs 버퍼에서 탭 문자를 표시하는 데 사용되는 탭 정지 사이의 간격입니다. 값은 열 단위이며 기본값은 8입니다.이 기능은 &lt;code&gt;tab-to-tab-stop&lt;/code&gt; 명령에서 사용하는 사용자 설정 가능한 탭 중지와 완전히 독립적입니다 . &lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;탭 들여 쓰기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="519d26f1c87601f1ce760feed44524edd2e01ae9" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable should be a function (of no arguments) to be called after self-inserting a character from the table &lt;code&gt;auto-fill-chars&lt;/code&gt;, see below. It may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing special is done in that case.</source>
          <target state="translated">이 버퍼 로컬 변수의 값은 &lt;code&gt;auto-fill-chars&lt;/code&gt; 테이블에서 문자를 자체 삽입 한 후 호출 할 함수 (인수 없음) 여야합니다 ( 아래 참조). &lt;code&gt;nil&lt;/code&gt; 일 수 있으며이 경우 특별한 작업이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="caea4537a082e3806e14a0dedfb084a8ccdecf75" translate="yes" xml:space="preserve">
          <source>The value of this obsolete variable should be a list of functions that accept a single string argument and return another string. The default &lt;code&gt;filter-buffer-substring&lt;/code&gt; function passes the buffer substring to the first function in this list, and the return value of each function is passed to the next function. The return value of the last function is passed to &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt;.</source>
          <target state="translated">이 쓸모없는 변수의 값은 단일 문자열 인수를 받아들이고 다른 문자열을 반환하는 함수 목록이어야합니다. 기본 &lt;code&gt;filter-buffer-substring&lt;/code&gt; 함수는 버퍼 하위 문자열을이 목록의 첫 번째 함수로 전달하고 각 함수의 반환 값은 다음 함수로 전달됩니다. 마지막 함수의 반환 값은 &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt; 에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="14a333d5db25651595647364a355fb887be56865" translate="yes" xml:space="preserve">
          <source>The value of this option can be also a list of frame parameters. In that case, implied resizing is inhibited for the change of a parameter that appears in this list. Parameters currently handled by this option are &lt;code&gt;font&lt;/code&gt;, &lt;code&gt;font-backend&lt;/code&gt;, &lt;code&gt;internal-border-width&lt;/code&gt;, &lt;code&gt;menu-bar-lines&lt;/code&gt; and &lt;code&gt;tool-bar-lines&lt;/code&gt;.</source>
          <target state="translated">이 옵션의 값은 프레임 매개 변수 목록이 될 수도 있습니다. 이 경우이 목록에 표시되는 매개 변수의 변경에 대해 암시 적 크기 조정이 금지됩니다. 현재이 옵션으로 처리되는 매개 변수는 &lt;code&gt;font&lt;/code&gt; , &lt;code&gt;font-backend&lt;/code&gt; , &lt;code&gt;internal-border-width&lt;/code&gt; , &lt;code&gt;menu-bar-lines&lt;/code&gt; 및 &lt;code&gt;tool-bar-lines&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3e83ed5cb4d5f62c69d5bf2a02a4d3115ea77186" translate="yes" xml:space="preserve">
          <source>The value of this option is an alist mapping conditions to display actions. Each condition may be either a regular expression matching a buffer name or a function that takes two arguments: a buffer name and the &lt;var&gt;action&lt;/var&gt; argument passed to &lt;code&gt;display-buffer&lt;/code&gt;. If either the name of the buffer passed to &lt;code&gt;display-buffer&lt;/code&gt; matches a regular expression in this alist, or the function specified by a condition returns non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;display-buffer&lt;/code&gt; uses the corresponding display action to display the buffer.</source>
          <target state="translated">이 옵션의 값은 작업을 표시하기위한 매핑 조건 목록입니다. 각 조건은 버퍼 이름과 일치하는 정규식이거나 버퍼 이름과 &lt;code&gt;display-buffer&lt;/code&gt; 에 전달 된 &lt;var&gt;action&lt;/var&gt; 인수 라는 두 인수를 사용하는 함수일 수 있습니다. &lt;code&gt;display-buffer&lt;/code&gt; buffer에 전달 된 버퍼의 이름 이이 목록의 정규 표현식과 일치하거나 조건에 지정된 함수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환하는 경우 &lt;code&gt;display-buffer&lt;/code&gt; 는 해당 표시 작업을 사용하여 버퍼 를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f7f0d552de7fde481ea8ba3d348287bb76ef6370" translate="yes" xml:space="preserve">
          <source>The value of this option should be a display action. This option can be used to define a standard display action for calls to &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">이 옵션의 값은 표시 조치 여야합니다. 이 옵션은 &lt;code&gt;display-buffer&lt;/code&gt; 호출에 대한 표준 표시 작업을 정의하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1982bc460b3acf20b72b5d8f8e0b8f69732c0b5a" translate="yes" xml:space="preserve">
          <source>The value of this parameter is a cons cell whose &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specify the minimum values (in columns) for the left and right margin of this window (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;. When present, Emacs will use these values instead of the actual margin widths for determining whether a window can be split or shrunk horizontally.</source>
          <target state="translated">이 매개 변수의 값은 &lt;small&gt;CAR&lt;/small&gt; 및 &lt;small&gt;CDR이 &lt;/small&gt; &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우이 창의 왼쪽 및 오른쪽 여백에 대한 최소값 (열에서)을 지정 하는 cons 셀입니다 ( &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;여백 표시&lt;/a&gt; 참조 . 존재하는 경우 Emacs는이 값을 대신 사용합니다. 창을 수평으로 분할하거나 축소 할 수 있는지 여부를 결정하기위한 실제 여백 너비의</target>
        </trans-unit>
        <trans-unit id="73135c98ff9d5f3b757d7d2d8c8c54929aa02856" translate="yes" xml:space="preserve">
          <source>The value of this property, &lt;var&gt;help&lt;/var&gt;, specifies a help-echo string to display while the mouse is on that item. This is displayed in the same way as &lt;code&gt;help-echo&lt;/code&gt; text properties (see &lt;a href=&quot;special-properties#Help-display&quot;&gt;Help display&lt;/a&gt;). Note that this must be a constant string, unlike the &lt;code&gt;help-echo&lt;/code&gt; property for text and overlays.</source>
          <target state="translated">이 속성의 값인 &lt;var&gt;help&lt;/var&gt; 는 마우스가 해당 항목에있는 동안 표시 할 도움말 에코 문자열을 지정합니다. 이것은 &lt;code&gt;help-echo&lt;/code&gt; 텍스트 속성 과 같은 방식으로 표시됩니다 ( &lt;a href=&quot;special-properties#Help-display&quot;&gt;도움말 표시&lt;/a&gt; 참조 ). 이것은 텍스트 및 오버레이에 대한 &lt;code&gt;help-echo&lt;/code&gt; 속성 과 달리 상수 문자열이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="12db18bf704f645ea58921e288a12705f317f668" translate="yes" xml:space="preserve">
          <source>The value of this user option is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the option&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">이 사용자 옵션의 값은 Emacs가 도움말 및 메시지 문구에서 작은 따옴표로 사용해야하는 스타일을 지정하는 기호입니다. 옵션의 값이 &lt;code&gt;curve&lt;/code&gt; 이면 스타일은</target>
        </trans-unit>
        <trans-unit id="a39d636df5f5c9f6eeef4e7d617080a5753f3330" translate="yes" xml:space="preserve">
          <source>The value of this variable determines the major mode of the initial</source>
          <target state="translated">이 변수의 값은 초기의 주요 모드를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="ec9a110c01c8c7ed80a2b14875b7fd93b17a23df" translate="yes" xml:space="preserve">
          <source>The value of this variable indicates the time at which Emacs was built. It uses the style of &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;), or is &lt;code&gt;nil&lt;/code&gt; if the information is not available.</source>
          <target state="translated">이 변수의 값은 Emacs가 구축 된 시간을 나타냅니다. &lt;code&gt;current-time&lt;/code&gt; 스타일 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt; 참조 )을 사용하거나 정보를 사용할 수없는 경우 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7126b5bb562715f119a074a9fb6f9539c652ed90" translate="yes" xml:space="preserve">
          <source>The value of this variable is &lt;code&gt;t&lt;/code&gt; once the command line has been processed.</source>
          <target state="translated">이 변수의 값은 명령 줄이 처리 된 후 &lt;code&gt;t&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d734191b39f03642c9ca10157d8d93befc682dbb" translate="yes" xml:space="preserve">
          <source>The value of this variable is a buffer position (an integer or a marker) for &lt;code&gt;expand-abbrev&lt;/code&gt; to use as the start of the next abbrev to be expanded. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means to use the word before point instead. &lt;code&gt;abbrev-start-location&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt; each time &lt;code&gt;expand-abbrev&lt;/code&gt; is called. This variable is also set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;expand-abbrev&lt;/code&gt; 가 확장 될 다음 약어의 시작으로 사용할 버퍼 위치 (정수 또는 마커)입니다 . 값은 &lt;code&gt;nil&lt;/code&gt; 일 수도 있습니다 . 이는 대신 point 앞에 단어를 사용함을 의미합니다. &lt;code&gt;abbrev-start-location&lt;/code&gt; 은 &lt;code&gt;expand-abbrev&lt;/code&gt; 가 호출 될 때마다 &lt;code&gt;nil&lt;/code&gt; 로 설정됩니다 . 이 변수는 &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; 로도 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1fa6cf030fdf3d942d3466e8d2a76742bda4ab1b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) that specifies, for each character, its Unicode &lt;code&gt;General_Category&lt;/code&gt; property as a symbol.</source>
          <target state="translated">이 변수의 값은 각 문자에 대해 유니 코드 &lt;code&gt;General_Category&lt;/code&gt; 속성을 기호로 지정 하는 문자 테이블 ( &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt; 참조 )입니다 .</target>
        </trans-unit>
        <trans-unit id="7ba7ac5d05f8bee892363deea964b1380bb266d1" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies the width of each character in columns that it will occupy on the screen.</source>
          <target state="translated">이 변수의 값은 화면에서 차지할 열의 각 문자 너비를 지정하는 문자 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="fb2925010bd994bd500ca39b6e263f1a4fbc0618" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, a symbol whose name is the script to which the character belongs, according to the Unicode Standard classification of the Unicode code space into script-specific blocks. This char-table has a single extra slot whose value is the list of all script symbols.</source>
          <target state="translated">이 변수의 값은 유니 코드 코드 공간의 유니 코드 표준 분류에 따라 각 문자에 대해 문자가 속한 스크립트 인 기호를 스크립트 별 블록으로 지정하는 문자 테이블입니다. 이 문자 테이블에는 값이 모든 스크립트 기호 목록 인 단일 추가 슬롯이 있습니다.</target>
        </trans-unit>
        <trans-unit id="62e38dcba10ebd10ed021a19971e4e68aec9afdc" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, whether it is printable or not. That is, if evaluating &lt;code&gt;(aref printable-chars char)&lt;/code&gt; results in &lt;code&gt;t&lt;/code&gt;, the character is printable, and if it results in &lt;code&gt;nil&lt;/code&gt;, it is not.</source>
          <target state="translated">이 변수의 값은 각 문자에 대해 인쇄 가능한지 여부를 지정하는 문자 테이블입니다. 즉, &lt;code&gt;(aref printable-chars char)&lt;/code&gt; 평가 결과 &lt;code&gt;t&lt;/code&gt; 이면 문자가 인쇄 가능하고 결과가 &lt;code&gt;nil&lt;/code&gt; 인 경우 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d185fa900c5b6d5d5843afc08b4f7ca02fa56927" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table which defines glyphless characters and how they are displayed. Each entry must be one of the following display methods:</source>
          <target state="translated">이 변수의 값은 글리프없는 문자와 그 표시 방법을 정의하는 문자 테이블입니다. 각 항목은 다음 표시 방법 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="16053fd945be0355c0afa6bafe1716c51992d3ce" translate="yes" xml:space="preserve">
          <source>The value of this variable is a full keymap used by Electric Command Future mode. The functions in this map allow you to edit commands you have not yet thought about executing.</source>
          <target state="translated">이 변수의 값은 Electric Command Future 모드에서 사용하는 전체 키맵입니다. 이 맵의 기능을 사용하면 아직 실행에 대해 생각하지 않은 명령을 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc9b16dd544b211e330b1ab8935748a5b2ce4d61" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;expand-abbrev&lt;/code&gt; will call with no arguments to do the expansion. The function can do anything it wants before and after performing the expansion. It should return the abbrev symbol if expansion took place.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;expand-abbrev&lt;/code&gt; 가 확장을 수행하는 인수없이 호출 하는 함수입니다 . 이 함수는 확장을 수행하기 전후에 원하는 모든 작업을 수행 할 수 있습니다. 확장이 발생한 경우 약어 기호를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="895242d99288a5e7484baa95b5a0b6635e384c18" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;filter-buffer-substring&lt;/code&gt; will call to do the actual work. The function receives three arguments, the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt;, which it should treat as per the documentation of that function. It should return the filtered text (and optionally delete the source text).</source>
          <target state="translated">이 변수의 값은 실제 작업을 수행하기 위해 &lt;code&gt;filter-buffer-substring&lt;/code&gt; 이 호출 하는 함수입니다 . 이 함수는 &lt;code&gt;filter-buffer-substring&lt;/code&gt; 의 인수와 동일한 세 개의 인수를 수신 하며 해당 함수의 문서에 따라 처리해야합니다. 필터링 된 텍스트를 반환해야하며 선택적으로 소스 텍스트를 삭제해야합니다.</target>
        </trans-unit>
        <trans-unit id="fbbbbaa436e4df5bde4fbe1ba9b2858aa0e0c766" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that can be used by &lt;code&gt;indent-region&lt;/code&gt; as a short cut. It should take two arguments, the start and end of the region. You should design the function so that it will produce the same results as indenting the lines of the region one by one, but presumably faster.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;indent-region&lt;/code&gt; 에서 바로 가기 로 사용할 수있는 함수입니다 . 영역의 시작과 끝이라는 두 개의 인수가 필요합니다. 영역의 선을 하나씩 들여 쓰는 것과 동일한 결과를 생성하도록 함수를 디자인해야하지만 아마도 더 빠를 것입니다.</target>
        </trans-unit>
        <trans-unit id="f3821bf85d9aeff1378d29948aa261bfa194d593" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of ImageMagick image types which Emacs may attempt to render using ImageMagick. Each list element should be one of the symbols in the list returned by &lt;code&gt;imagemagick-types&lt;/code&gt;, or an equivalent string. Alternatively, a value of &lt;code&gt;t&lt;/code&gt; enables ImageMagick for all possible image types. Regardless of the value of this variable, &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; (see below) takes precedence.</source>
          <target state="translated">이 변수의 값은 Emacs가 ImageMagick을 사용하여 렌더링을 시도 할 수있는 ImageMagick 이미지 유형 목록입니다. 각 목록 요소는 &lt;code&gt;imagemagick-types&lt;/code&gt; 에서 반환 된 목록의 기호 중 하나 이거나 동등한 문자열 이어야 합니다. 또는 &lt;code&gt;t&lt;/code&gt; 값은 가능한 모든 이미지 유형에 대해 ImageMagick을 활성화합니다. 이 변수의 값에 관계없이 &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; (아래 참조)가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="9de9333a1769c5c462265b3d8bd79b1d5ee87d05" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of all minor mode commands.</source>
          <target state="translated">이 변수의 값은 모든 부 모드 명령 목록입니다.</target>
        </trans-unit>
        <trans-unit id="47a8ae72a588c611af4dd474d9a9965282c852e9" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of completion style (symbols) to use for performing completion. A &lt;em&gt;completion style&lt;/em&gt; is a set of rules for generating completions. Each symbol occurring this list must have a corresponding entry in &lt;code&gt;completion-styles-alist&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 완성을 수행하는 데 사용할 완성 스타일 (기호) 목록입니다. &lt;em&gt;완료 스타일&lt;/em&gt; 생성 완료에 대한 규칙의 집합입니다. 이 목록에 나오는 각 기호에는 &lt;code&gt;completion-styles-alist&lt;/code&gt; 에 해당 항목이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="29a32af46e4eeadb6fb35baac6ed9c6739f1c9f8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search for programs to run in subprocesses. Each element is either the name of a directory (i.e., a string), or &lt;code&gt;nil&lt;/code&gt;, which stands for the default directory (which is the value of &lt;code&gt;default-directory&lt;/code&gt;). See &lt;a href=&quot;locating-files#Locating-Files&quot;&gt;executable-find&lt;/a&gt;, for the details of this search.</source>
          <target state="translated">이 변수의 값은 하위 프로세스에서 실행할 프로그램을 검색하기위한 디렉토리 목록입니다. 각 요소는 디렉토리의 이름 (즉, 문자열)이거나 기본 디렉토리 ( &lt;code&gt;default-directory&lt;/code&gt; 의 값)를 나타내는 &lt;code&gt;nil&lt;/code&gt; 입니다. 이 검색에 대한 자세한 내용은 &lt;a href=&quot;locating-files#Locating-Files&quot;&gt;executable-find를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f32a4eab842de190c1e695fd9e2152827b42fc2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search when loading files with &lt;code&gt;load&lt;/code&gt;. Each element is a string (which must be a directory) or &lt;code&gt;nil&lt;/code&gt; (which stands for the current working directory).</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;load&lt;/code&gt; 로 파일을 로드 할 때 검색 할 디렉토리 목록입니다 . 각 요소는 문자열 (디렉토리 여야 함) 또는 &lt;code&gt;nil&lt;/code&gt; (현재 작업 디렉토리를 나타냄)입니다.</target>
        </trans-unit>
        <trans-unit id="253b1f7802a872862cd35b4dffcb6775c54311a8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; where &lt;var&gt;mode&lt;/var&gt; is the name of a variable: if the variable is bound to a non-&lt;code&gt;nil&lt;/code&gt; value, then the &lt;var&gt;abbrev-table&lt;/var&gt; is active, otherwise it is ignored. &lt;var&gt;abbrev-table&lt;/var&gt; can also be a list of abbrev tables.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; 형식의 요소 목록입니다 . 여기서 &lt;var&gt;mode&lt;/var&gt; 는 변수의 이름입니다. 변수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값에 바인드 되면 &lt;var&gt;abbrev-table&lt;/var&gt; 이 활성화되고 그렇지 않으면 무시됩니다. &lt;var&gt;abbrev-table&lt;/var&gt; 은 abbrev 테이블의 목록 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="40d59ecb84f610c7ca9b936f63f0ac181287b46b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of event types that serve as alternative help characters. These events are handled just like the event specified by &lt;code&gt;help-char&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 대체 도움말 문자로 사용되는 이벤트 유형 목록입니다. 이러한 이벤트는 &lt;code&gt;help-char&lt;/code&gt; 에 지정된 이벤트처럼 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="6ddcbef14446d78cc4e1ee3e9fae5bc0b58251c5" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called after a file is visited. The file&amp;rsquo;s local-variables specification (if any) will have been processed before the hooks are run. The buffer visiting the file is current when the hook functions are run.</source>
          <target state="translated">이 변수의 값은 파일을 방문한 후 호출 할 함수 목록입니다. 후크가 실행되기 전에 파일의 로컬 변수 사양 (있는 경우)이 처리됩니다. 파일을 방문하는 버퍼는 후크 함수가 실행될 때 최신 상태입니다.</target>
        </trans-unit>
        <trans-unit id="4a37504953ca04fe3adf8b140d470266df3deb66" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called before writing out a buffer to its visited file. If one of them returns non-&lt;code&gt;nil&lt;/code&gt;, the file is considered already written and the rest of the functions are not called, nor is the usual code for writing the file executed.</source>
          <target state="translated">이 변수의 값은 방문한 파일에 버퍼를 쓰기 전에 호출 할 함수 목록입니다. 그중 하나가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 하면 파일은 이미 작성된 것으로 간주되고 나머지 함수는 호출되지 않으며 파일을 작성하는 일반적인 코드도 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fb6acbc82868d45944f82b4791b7635aef8fde9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called when &lt;code&gt;find-file&lt;/code&gt; or &lt;code&gt;find-file-noselect&lt;/code&gt; is passed a nonexistent file name. &lt;code&gt;find-file-noselect&lt;/code&gt; calls these functions as soon as it detects a nonexistent file. It calls them in the order of the list, until one of them returns non-&lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;buffer-file-name&lt;/code&gt; is already set up.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;find-file&lt;/code&gt; 또는 &lt;code&gt;find-file-noselect&lt;/code&gt; 에 존재하지 않는 파일 이름이 전달 될 때 호출되는 함수 목록입니다 . &lt;code&gt;find-file-noselect&lt;/code&gt; 는 존재하지 않는 파일을 발견하자마자 이러한 함수를 호출합니다. 그들 중 하나가 non- &lt;code&gt;nil&lt;/code&gt; 을 반환 할 때까지 목록의 순서대로 호출합니다 . &lt;code&gt;buffer-file-name&lt;/code&gt; 이 이미 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="ce64d0031359699b8cfafc51d537afbdf1484ede" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of symbols that are the features loaded in the current Emacs session. Each symbol was put in this list with a call to &lt;code&gt;provide&lt;/code&gt;. The order of the elements in the &lt;code&gt;features&lt;/code&gt; list is not significant.</source>
          <target state="translated">이 변수의 값은 현재 Emacs 세션에로드 된 기능인 기호 목록입니다. 각 기호는을 (를) &lt;code&gt;provide&lt;/code&gt; 하라는 호출과 함께이 목록에 포함되었습니다 . &lt;code&gt;features&lt;/code&gt; 목록 의 요소 순서는 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="63e64601fef9cafb97c46d2990222c9f7f4311c8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the keywords to highlight. Lisp programs should not set this variable directly. Normally, the value is automatically set by Font Lock mode, using the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. The value can also be altered using the functions &lt;code&gt;font-lock-add-keywords&lt;/code&gt; and &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; (see &lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;Customizing Keywords&lt;/a&gt;).</source>
          <target state="translated">이 변수의 값은 강조 표시 할 키워드 목록입니다. Lisp 프로그램은이 변수를 직접 설정해서는 안됩니다. 일반적으로이 값은 &lt;code&gt;font-lock-defaults&lt;/code&gt; 의 &lt;var&gt;keywords&lt;/var&gt; 요소를 사용하여 글꼴 잠금 모드에 의해 자동으로 설정됩니다 . 이 값은 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 및 &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; 함수를 사용하여 변경할 수도 있습니다 ( 키워드 &lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;사용자 정의&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="133759324957b9672c4b0b1c0d11bac955ea2da2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the values returned by all the expressions that were read, evaluated, and printed from buffers (including the minibuffer) by the standard Emacs commands which do this. (Note that this does &lt;em&gt;not&lt;/em&gt; include evaluation in</source>
          <target state="translated">이 변수의 값은이를 수행하는 표준 Emacs 명령에 의해 버퍼 (미니 버퍼 포함)에서 읽고, 평가하고, 인쇄 한 모든 표현식에 의해 반환 된 값의 목록입니다. ( 여기에는 평가가 포함 되지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f54e2eed25b0db677a48a0649bd0311f6852f604" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of themes loaded into Emacs. Each theme is represented by a Lisp symbol (the theme name). The default value of this variable is a list containing two dummy themes: &lt;code&gt;(user changed)&lt;/code&gt;. The &lt;code&gt;changed&lt;/code&gt; theme stores settings made before any Custom themes are applied (e.g., variables set outside of Customize). The &lt;code&gt;user&lt;/code&gt; theme stores settings the user has customized and saved. Any additional themes declared with the &lt;code&gt;deftheme&lt;/code&gt; macro are added to the front of this list.</source>
          <target state="translated">이 변수의 값은 Emacs에로드 된 테마 목록입니다. 각 테마는 Lisp 기호 (테마 이름)로 표시됩니다. 이 변수의 기본값은 &lt;code&gt;(user changed)&lt;/code&gt; 두 개의 더미 테마를 포함하는 목록 입니다. &lt;code&gt;changed&lt;/code&gt; 모든 사용자 정의 테마 전에 만든 테마 저장 설정이 적용됩니다 (예를 들어, 변수 정의의 설정 외부). &lt;code&gt;user&lt;/code&gt; 테마 저장 설정을 사용자가 정의하고 저장하고있다. &lt;code&gt;deftheme&lt;/code&gt; 매크로로 선언 된 추가 테마는 이 목록의 맨 앞에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="124d3c23221104c7409d74944cb02f2b99b0114e" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of warnings to be displayed after the current command has finished. Each element must be a list</source>
          <target state="translated">이 변수의 값은 현재 명령이 완료된 후 표시되는 경고 목록입니다. 각 요소는 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="89d3ec324274c4cfefe0acf837435da3f85f3c47" translate="yes" xml:space="preserve">
          <source>The value of this variable is a local keymap for characters following the Help key,</source>
          <target state="translated">이 변수의 값은 도움말 키 다음에 오는 문자에 대한 로컬 키맵입니다.</target>
        </trans-unit>
        <trans-unit id="aa3a6a128eaffd7a416313e23382dec1addead25" translate="yes" xml:space="preserve">
          <source>The value of this variable is a mode line construct that controls the contents of the mode-line. It is always buffer-local in all buffers.</source>
          <target state="translated">이 변수의 값은 모드 라인의 내용을 제어하는 ​​모드 라인 구성입니다. 항상 모든 버퍼에서 로컬 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="25cd23c85bbb1ee221f951d01edffe0cd1ce0147" translate="yes" xml:space="preserve">
          <source>The value of this variable is a nonnegative integer that controls whether Emacs signals a range error when a large integer would be calculated. Integers with absolute values less than 2**&lt;var&gt;n&lt;/var&gt;, where &lt;var&gt;n&lt;/var&gt; is this variable&amp;rsquo;s value, do not signal a range error. Attempts to create larger integers typically signal a range error, although there might be no signal if a larger integer can be created cheaply. Setting this variable to a large number can be costly if a computation creates huge integers.</source>
          <target state="translated">이 변수의 값은 큰 정수가 계산 될 때 Emacs가 범위 오류를 신호할지 여부를 제어하는 ​​음이 아닌 정수입니다. 절대 값이 2 ** &lt;var&gt;n&lt;/var&gt; 미만인 정수 ( 여기서 &lt;var&gt;n&lt;/var&gt; 은이 변수의 값)는 범위 오류를 나타내지 않습니다. 더 큰 정수를 만들려는 시도는 일반적으로 범위 오류를 나타내지 만 더 큰 정수를 저렴하게 만들 수있는 경우 신호가 없을 수 있습니다. 계산이 거대한 정수를 생성하는 경우이 변수를 큰 수로 설정하면 비용이 많이들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0a0e6475857d62888333d14d74963c15033a16f" translate="yes" xml:space="preserve">
          <source>The value of this variable is a string, the name of a directory that contains programs that come with GNU Emacs and are intended for Emacs to invoke. The program &lt;code&gt;movemail&lt;/code&gt; is an example of such a program; Rmail uses it to fetch new mail from an inbox.</source>
          <target state="translated">이 변수의 값은 GNU Emacs와 함께 제공되고 Emacs가 호출 할 프로그램을 포함하는 디렉토리 이름 인 문자열입니다. &lt;code&gt;movemail&lt;/code&gt; 프로그램 은 이러한 프로그램 의 예입니다. Rmail은이를 사용하여받은 편지함에서 새 메일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cfb572f9bc2f44e32d32a8a2cdf630179f422cca" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol indicating the type of operating system Emacs is running on. The possible values are:</source>
          <target state="translated">이 변수의 값은 Emacs가 실행중인 운영 체제 유형을 나타내는 기호입니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8002c2c1eaf55d7b7ae8a209355f0464c509a693" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the variable&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">이 변수의 값은 Emacs가 도움말 및 메시지 문구에서 작은 따옴표로 사용해야하는 스타일을 지정하는 기호입니다. 변수 값이 &lt;code&gt;curve&lt;/code&gt; 이면 스타일은</target>
        </trans-unit>
        <trans-unit id="2bdd79099d412978e3bbbe37242d52feb2a029ee" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist of package archives recognized by the Emacs package manager.</source>
          <target state="translated">이 변수의 값은 Emacs 패키지 관리자가 인식하는 패키지 아카이브 목록입니다.</target>
        </trans-unit>
        <trans-unit id="c06b37baadabba3c87ddc88b38f5d0fd1b8c18ac" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist that associates the names of loaded library files with the names of the functions and variables they defined, as well as the features they provided or required.</source>
          <target state="translated">이 변수의 값은로드 된 라이브러리 파일의 이름을 정의한 함수 및 변수의 이름과 이들이 제공했거나 필요한 기능과 연관시키는 목록입니다.</target>
        </trans-unit>
        <trans-unit id="81c720fde775ca08c6d96c03b1485dbda6b71c77" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist whose elements have the form &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt;. This causes Emacs to display any text having the face &lt;var&gt;face&lt;/var&gt; with &lt;var&gt;remapping&lt;/var&gt;, rather than the ordinary definition of &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">이 변수의 값은 해당 요소의 형식은 alist이다 &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt; . 이 이맥스 얼굴 가진 모든 텍스트가 표시됩니다 &lt;var&gt;face&lt;/var&gt; 에 &lt;var&gt;remapping&lt;/var&gt; 대신의 일반적인 정의를보다 &lt;var&gt;face&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c2f18cf20c9a3c4ca8706679eb65fe735172405b" translate="yes" xml:space="preserve">
          <source>The value of this variable is not guaranteed to be accurate except while processing &lt;code&gt;frame-title-format&lt;/code&gt; or &lt;code&gt;icon-title-format&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;frame-title-format&lt;/code&gt; 또는 &lt;code&gt;icon-title-format&lt;/code&gt; 을 처리하는 동안을 제외하고는 정확하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="933998c144085b4faa6ba67abba92172b97c7da6" translate="yes" xml:space="preserve">
          <source>The value of this variable is the buffer for which &lt;code&gt;abbrev-start-location&lt;/code&gt; has been set. Trying to expand an abbrev in any other buffer clears &lt;code&gt;abbrev-start-location&lt;/code&gt;. This variable is set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;abbrev-start-location&lt;/code&gt; 이 설정된 버퍼입니다 . 다른 버퍼에서 약어를 확장하려고하면 &lt;code&gt;abbrev-start-location&lt;/code&gt; 이 지워 집니다 . 이 변수는 &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8abb5c97c277797f521989347c2e42ed6365ddf0" translate="yes" xml:space="preserve">
          <source>The value of this variable is the completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) used for completion in the minibuffer. This is the global variable that contains what &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt;. It is used by minibuffer completion commands such as &lt;code&gt;minibuffer-complete-word&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 미니 버퍼에서 완료에 사용되는 완료 테이블 ( &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;기본 완료&lt;/a&gt; 참조 )입니다. 이것은 &lt;code&gt;completing-read&lt;/code&gt; 가 &lt;code&gt;try-completion&lt;/code&gt; 에 전달하는 것을 포함하는 전역 변수입니다 . &lt;code&gt;minibuffer-complete-word&lt;/code&gt; 와 같은 미니 버퍼 완료 명령에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="96328791cd147154e17de70ea41f23cfbbba1087" translate="yes" xml:space="preserve">
          <source>The value of this variable is the default output stream&amp;mdash;the stream that print functions use when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;, meaning display in the echo area.</source>
          <target state="translated">이 변수의 값은 기본 출력 스트림, 즉 &lt;var&gt;stream&lt;/var&gt; 인수가 &lt;code&gt;nil&lt;/code&gt; 일 때 인쇄 함수가 사용하는 스트림 입니다. 기본값은 &lt;code&gt;t&lt;/code&gt; 이며 에코 영역에 표시됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ae0831846c75f4a338c383d0f402cd3358232b5d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function called to insert an entry at point, including its terminating newline. The function should accept two arguments, &lt;var&gt;id&lt;/var&gt; and &lt;var&gt;contents&lt;/var&gt;, having the same meanings as in &lt;code&gt;tabulated-list-entries&lt;/code&gt;. The default value is a function which inserts an entry in a straightforward way; a mode which uses Tabulated List mode in a more complex way can specify another function.</source>
          <target state="translated">이 변수의 값은 종료 줄 바꿈을 포함하여 지점에 항목을 삽입하기 위해 호출되는 함수입니다. 함수는 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 에서와 동일한 의미를 갖는 두 개의 인수, &lt;var&gt;id&lt;/var&gt; 및 &lt;var&gt;contents&lt;/var&gt; 를 받아야 합니다 . 기본값은 간단한 방법으로 항목을 삽입하는 함수입니다. 보다 복잡한 방식으로 Tabulated List 모드를 사용하는 모드는 다른 기능을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7eb19205eadf49f07947146594a55f4d23efc62f" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to call to invoke the debugger. Its value must be a function of any number of arguments, or, more typically, the name of a function. This function should invoke some kind of debugger. The default value of the variable is &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 디버거를 호출하기 위해 호출 할 함수입니다. 그 값은 여러 인수의 함수이거나보다 일반적으로 함수 이름이어야합니다. 이 함수는 일종의 디버거를 호출해야합니다. 변수의 기본값은 &lt;code&gt;debug&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2e04c4a7f8af8a9ebc7bdd81f634adf0304f9ff3" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to use to revert this buffer. It should be a function with two optional arguments to do the work of reverting. The two optional arguments, &lt;var&gt;ignore-auto&lt;/var&gt; and &lt;var&gt;noconfirm&lt;/var&gt;, are the arguments that &lt;code&gt;revert-buffer&lt;/code&gt; received.</source>
          <target state="translated">이 변수의 값은이 버퍼를 되 돌리는 데 사용할 함수입니다. 되돌리기 작업을 수행하려면 두 개의 선택적 인수가있는 함수 여야합니다. 두 개의 선택적 인수 인 &lt;var&gt;ignore-auto&lt;/var&gt; 및 &lt;var&gt;noconfirm&lt;/var&gt; 은 &lt;code&gt;revert-buffer&lt;/code&gt; 가 수신 한 인수입니다 .</target>
        </trans-unit>
        <trans-unit id="dccef0d640ff834b4588b6b92c1b4f8ea1188ab5" translate="yes" xml:space="preserve">
          <source>The value of this variable is the greatest &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. Typical values are 2**29 - 1 on 32-bit and 2**61 - 1 on 64-bit platforms.</source>
          <target state="translated">이 변수의 값은 Emacs Lisp가 처리 할 수있는 가장 큰 &quot;작은&quot;정수입니다. 일반적인 값은 32 비트에서 2 ** 29-1이고 64 비트 플랫폼에서 2 ** 61-1입니다.</target>
        </trans-unit>
        <trans-unit id="31d2e828cbc40f3144bc61afc08c98328c1ac5de" translate="yes" xml:space="preserve">
          <source>The value of this variable is the help character&amp;mdash;the character that Emacs recognizes as meaning Help. By default, its value is 8, which stands for</source>
          <target state="translated">이 변수의 값은 Emacs가 도움말을 의미하는 것으로 인식하는 문자 인 도움말 문자입니다. 기본적으로 해당 값은 8입니다.</target>
        </trans-unit>
        <trans-unit id="861876551f6ac7a8725b6a32b02dca6d5191372b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments passed to Emacs.</source>
          <target state="translated">이 변수의 값은 Emacs에 전달 된 명령 줄 인수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e1d06ef5c8374bd750485c57abb50eaf06daf7d7" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments that have not yet been processed.</source>
          <target state="translated">이 변수의 값은 아직 처리되지 않은 명령 줄 인수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="8621be2dbb39d088c193d4800a069de83beb18d9" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of properties to remove from inserted text. Its default value contains properties that might lead to annoying results, such as causing the text to respond to the mouse or specifying key bindings. It takes effect after &lt;code&gt;yank-handled-properties&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 삽입 된 텍스트에서 제거 할 속성 목록입니다. 기본값에는 텍스트가 마우스에 응답하도록하거나 키 바인딩을 지정하는 등 성가신 결과를 초래할 수있는 속성이 포함되어 있습니다. &lt;code&gt;yank-handled-properties&lt;/code&gt; 후에 적용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d9925e5d0a28171f82d357e771493164bc09d3e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum depth of nesting of parentheses and brackets when printed. Any list or vector at a depth exceeding this limit is abbreviated with an ellipsis. A value of &lt;code&gt;nil&lt;/code&gt; (which is the default) means no limit.</source>
          <target state="translated">이 변수의 값은 인쇄시 괄호와 대괄호의 최대 중첩 깊이입니다. 이 한계를 초과하는 깊이의 목록 또는 벡터는 생략 부호로 축약됩니다. &lt;code&gt;nil&lt;/code&gt; (기본값) 값은 제한이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="eb378354f5b1934a365311626daef8c8f15e3726" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum length to which the kill ring can grow, before elements are thrown away at the end. The default value for &lt;code&gt;kill-ring-max&lt;/code&gt; is 60.</source>
          <target state="translated">이 변수의 값은 요소가 끝에 버려지기 전에 킬 링이 커질 수있는 최대 길이입니다. &lt;code&gt;kill-ring-max&lt;/code&gt; 의 기본값 은 60입니다.</target>
        </trans-unit>
        <trans-unit id="d9a8a3bd5402f6a796285f30ee6bc93592d72acc" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum number of elements to print in any list, vector or bool-vector. If an object being printed has more than this many elements, it is abbreviated with an ellipsis.</source>
          <target state="translated">이 변수의 값은 목록, 벡터 또는 부울 벡터에서 인쇄 할 최대 요소 수입니다. 인쇄중인 개체에 이보다 많은 요소가 있으면 줄임표로 축약됩니다.</target>
        </trans-unit>
        <trans-unit id="7b37d57abfb4a2f074e6037b361dac854df3ffa8" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum size of &lt;code&gt;mark-ring&lt;/code&gt;. If more marks than this are pushed onto the &lt;code&gt;mark-ring&lt;/code&gt;, &lt;code&gt;push-mark&lt;/code&gt; discards an old mark when it adds a new one.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;mark-ring&lt;/code&gt; 의 최대 크기입니다 . 이보다 더 많은 마크가 푸시하는 경우 &lt;code&gt;mark-ring&lt;/code&gt; , &lt;code&gt;push-mark&lt;/code&gt; 폐기 오래된 마크가 새로운 하나를 추가 할 때.</target>
        </trans-unit>
        <trans-unit id="48773690fdc08336034aef99b22ec4fc2a9b5c64" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of pure storage allocated so far. Typically, in a dumped Emacs, this number is very close to the total amount of pure storage available&amp;mdash;if it were not, we would preallocate less.</source>
          <target state="translated">이 변수의 값은 지금까지 할당 된 순수 스토리지의 바이트 수입니다. 일반적으로 덤핑 된 Emacs에서이 숫자는 사용 가능한 순수 스토리지의 총량에 매우 가깝습니다. 그렇지 않은 경우 미리 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c86f658454ce161d8f58c6e376a24f5f8cf79cd" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of storage that must be allocated for Lisp objects after one garbage collection in order to trigger another garbage collection. You can use the result returned by &lt;code&gt;garbage-collect&lt;/code&gt; to get an information about size of the particular object type; space allocated to the contents of buffers does not count.</source>
          <target state="translated">이 변수의 값은 다른 가비지 수집을 트리거하기 위해 한 가비지 수집 후에 Lisp 개체에 할당되어야하는 저장소의 바이트 수입니다. &lt;code&gt;garbage-collect&lt;/code&gt; 에서 반환 된 결과를 사용 하여 특정 개체 유형의 크기에 대한 정보를 얻을 수 있습니다. 버퍼 내용에 할당 된 공간은 계산되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="150ad9877598c36bf3cee9f020560f46415fcc2e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of lines of continuity to retain when scrolling by full screens. For example, &lt;code&gt;scroll-up&lt;/code&gt; with an argument of &lt;code&gt;nil&lt;/code&gt; scrolls so that this many lines at the bottom of the window appear instead at the top. The default value is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 전체 화면으로 스크롤 할 때 유지할 연속성 행 수입니다. 예를 들어, &lt;code&gt;nil&lt;/code&gt; 인수를 사용하여 &lt;code&gt;scroll-up&lt;/code&gt; 하면 창 하단의이 많은 행이 대신 상단에 표시되도록 스크롤됩니다. 기본값은 &lt;code&gt;2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4d8917920114f6f4a89a92a84fe6cd7179f01520" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of newest versions to keep when a new numbered backup is made. The newly made backup is included in the count. The default value is 2.</source>
          <target state="translated">이 변수의 값은 새 번호가 매겨진 백업이 만들어 질 때 유지할 최신 버전의 수입니다. 새로 만든 백업이 카운트에 포함됩니다. 기본값은 2입니다.</target>
        </trans-unit>
        <trans-unit id="3fda003729cd66ceee7578e564a338758839795b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of oldest versions to keep when a new numbered backup is made. The default value is 2.</source>
          <target state="translated">이 변수의 값은 새 번호가 매겨진 백업이 만들어 질 때 유지할 가장 오래된 버전의 수입니다. 기본값은 2입니다.</target>
        </trans-unit>
        <trans-unit id="0178a3a721a41f19d88414a6b7b93fafcc92109e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of seconds of idle time that should cause auto-saving. Each time the user pauses for this long, Emacs does auto-saving for all buffers in which that is enabled. (If the current buffer is large, the specified timeout is multiplied by a factor that increases as the size increases; for a million-byte buffer, the factor is almost 4.)</source>
          <target state="translated">이 변수의 값은 자동 저장을 유발해야하는 유휴 시간 (초)입니다. 사용자가이 시간 동안 일시 중지 할 때마다 Emacs는 활성화 된 모든 버퍼에 대해 자동 저장을 수행합니다. (현재 버퍼가 크면 지정된 시간 제한에 크기가 증가함에 따라 증가하는 계수가 곱해집니다. 백만 바이트 버퍼의 경우 계수는 거의 4입니다.)</target>
        </trans-unit>
        <trans-unit id="fdf8e548c75801c18e4f5fe5fdd7423692172485" translate="yes" xml:space="preserve">
          <source>The value of this variable is the numerically least &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. It is negative. Typical values are -2**29 on 32-bit and -2**61 on 64-bit platforms.</source>
          <target state="translated">이 변수의 값은 Emacs Lisp가 처리 할 수있는 수치상 최소 &quot;작은&quot;정수입니다. 부정적입니다. 일반적인 값은 32 비트에서 -2 ** 29이고 64 비트 플랫폼에서 -2 ** 61입니다.</target>
        </trans-unit>
        <trans-unit id="b63628af4530d5ce2d1423179f1adbff69a076e4" translate="yes" xml:space="preserve">
          <source>The value of this variable is the raw prefix argument for the &lt;em&gt;next&lt;/em&gt; editing command. Commands such as &lt;code&gt;universal-argument&lt;/code&gt; that specify prefix arguments for the following command work by setting this variable.</source>
          <target state="translated">이 변수의 값은 &lt;em&gt;다음&lt;/em&gt; 편집 명령에 대한 원시 접두사 인수입니다 . 다음 명령에 대한 접두사 인수를 지정하는 &lt;code&gt;universal-argument&lt;/code&gt; 와 같은 명령은이 변수를 설정하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8bd5505e14516c641a0fb607026db3f9d627e426" translate="yes" xml:space="preserve">
          <source>The value of this variable is the standard display table, which is used when Emacs is displaying a buffer in a window with neither a window display table nor a buffer display table defined, or when Emacs is outputting text to the standard output or error streams. Although its default is typically &lt;code&gt;nil&lt;/code&gt;, in an interactive session if the terminal cannot display curved quotes, its default maps curved quotes to ASCII approximations. See &lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;Text Quoting Style&lt;/a&gt;.</source>
          <target state="translated">이 변수의 값은 표준 디스플레이 테이블로, Emacs가 창 디스플레이 테이블이나 버퍼 디스플레이 테이블이 정의되지 않은 창에 버퍼를 표시 할 때 또는 Emacs가 표준 출력 또는 오류 스트림에 텍스트를 출력 할 때 사용됩니다. 기본값은 일반적으로 &lt;code&gt;nil&lt;/code&gt; 이지만 터미널이 곡선 따옴표를 표시 할 수없는 대화 형 세션에서 기본값은 곡선 따옴표를 ASCII 근사값으로 매핑합니다. &lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;텍스트 인용 스타일을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59e3ab4b6c002115ffa6a12ef7488eb1000fce9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the version of Emacs being run. It is a string such as &lt;code&gt;&quot;26.1&quot;&lt;/code&gt;. A value with three numeric components, such as &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt;, indicates an unreleased test version. (Prior to Emacs 26.1, the string includes an extra final component with the integer that is now stored in &lt;code&gt;emacs-build-number&lt;/code&gt;; e.g., &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt;.)</source>
          <target state="translated">이 변수의 값은 실행중인 Emacs의 버전입니다. &lt;code&gt;&quot;26.1&quot;&lt;/code&gt; 과 같은 문자열 입니다. &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt; 과 같이 세 개의 숫자 구성 요소가있는 값 은 출시되지 않은 테스트 버전을 나타냅니다. (Emacs 26.1 이전에는 문자열에 이제 &lt;code&gt;emacs-build-number&lt;/code&gt; 에 저장된 정수 ( 예 : &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt; ) 와 함께 추가 최종 구성 요소가 포함됩니다 .)</target>
        </trans-unit>
        <trans-unit id="13d6c3bf692d7cebd430e9a540f492e27af06ad8" translate="yes" xml:space="preserve">
          <source>The value of this variable lists the ImageMagick image types which should never be rendered using ImageMagick, regardless of the value of &lt;code&gt;imagemagick-enabled-types&lt;/code&gt;. A value of &lt;code&gt;t&lt;/code&gt; disables ImageMagick entirely.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;imagemagick-enabled-types&lt;/code&gt; 의 값에 관계없이 ImageMagick을 사용하여 렌더링해서는 안되는 ImageMagick 이미지 유형을 나열합니다 . &lt;code&gt;t&lt;/code&gt; 값은 ImageMagick을 완전히 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="303b235b615311f7ea255c195980f3dd06aa14e0" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a function, which is called by &lt;code&gt;completing-read&lt;/code&gt; to actually do its work. It should accept the same arguments as &lt;code&gt;completing-read&lt;/code&gt;. This can be bound to a different function to completely override the normal behavior of &lt;code&gt;completing-read&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 실제로 작업을 수행하기 위해 &lt;code&gt;completing-read&lt;/code&gt; 로 호출되는 함수 여야합니다 . &lt;code&gt;completing-read&lt;/code&gt; 와 동일한 인수를 허용해야합니다 . 이는 complete &lt;code&gt;completing-read&lt;/code&gt; 의 정상적인 동작을 완전히 재정의하기 위해 다른 함수에 바인딩 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1226f2429f46bf033e925f781cf8b85d8cb67680" translate="yes" xml:space="preserve">
          <source>The value of this variable names an Emacs Lisp file where the autoload calls should go. The default value is</source>
          <target state="translated">이 변수의 값은 자동로드 호출이 이동해야하는 Emacs Lisp 파일의 이름을 지정합니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="40d83e7def34305b8fc50d910e7c289b690bac09" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a display action, which is treated with the highest priority by &lt;code&gt;display-buffer&lt;/code&gt;. The default value is an empty display action, i.e., &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt;.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;display-buffer&lt;/code&gt; 에 의해 가장 높은 우선 순위로 처리되는 표시 조치 여야합니다 . 기본값은 빈 표시 작업, 즉 &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="de683728d88c65383b1fb0a4d4c0e143b0d98fe0" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function (of no arguments) to be called whenever a character with close parenthesis syntax is inserted. The value of &lt;code&gt;blink-paren-function&lt;/code&gt; may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing is done.</source>
          <target state="translated">이 변수의 값은 닫는 괄호 구문이있는 문자가 삽입 될 때마다 호출되는 함수 (인수 없음) 여야합니다. &lt;code&gt;blink-paren-function&lt;/code&gt; 의 값은 &lt;code&gt;nil&lt;/code&gt; 일 수 있으며이 경우 아무 작업도 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b2dc1fa5f1a2fdb6c4c6717f7f894d9f186ffcae" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function of two arguments: a process and the list of windows displaying the process&amp;rsquo;s buffer. When the function is called, the process&amp;rsquo;s buffer is the current buffer. The function should return a cons cell &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; that describes the dimensions of the logical process window to be passed via a call to &lt;code&gt;set-process-window-size&lt;/code&gt;. The function can also return &lt;code&gt;nil&lt;/code&gt;, in which case Emacs will not call &lt;code&gt;set-process-window-size&lt;/code&gt; for this process.</source>
          <target state="translated">이 변수의 값은 두 개의 인수, 즉 프로세스와 프로세스의 버퍼를 표시하는 창 목록의 함수 여야합니다. 함수가 호출되면 프로세스의 버퍼가 현재 버퍼입니다. 이 함수는 &lt;code&gt;set-process-window-size&lt;/code&gt; 호출을 통해 전달되는 논리적 프로세스 창의 크기를 설명 하는 cons 셀 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; 을 반환해야 합니다 . 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환 할 수도 있습니다 .이 경우 Emacs는 이 프로세스에 대해 &lt;code&gt;set-process-window-size&lt;/code&gt; 를 호출하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="18ecc20cfb79cb28cfc3c0f86e79cb037503ab21" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function. When the user invokes a disabled command interactively, this function is called instead of the disabled command. It can use &lt;code&gt;this-command-keys&lt;/code&gt; to determine what the user typed to run the command, and thus find the command itself.</source>
          <target state="translated">이 변수의 값은 함수 여야합니다. 사용자가 비활성화 된 명령을 대화식으로 호출하면 비활성화 된 명령 대신이 함수가 호출됩니다. 이 &lt;code&gt;this-command-keys&lt;/code&gt; 를 사용하여 사용자가 명령을 실행하기 위해 입력 한 내용을 확인하고 명령 자체를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="440fd6f3fe4086cfcbed381053251b8ba6bd3e2e" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a string whose syntax is a Lisp comment.</source>
          <target state="translated">이 변수의 값은 구문이 Lisp 주석 인 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a518e7693499305932b085da27f9bb3f7b0a936b" translate="yes" xml:space="preserve">
          <source>The value of this variable should be either &lt;code&gt;nil&lt;/code&gt; or a fraction &lt;var&gt;f&lt;/var&gt; between 0 and 1. If it is a fraction, that specifies where on the screen to put point when scrolling down. More precisely, when a window scrolls down because point is above the window start, the new start position is chosen to put point &lt;var&gt;f&lt;/var&gt; part of the window height from the top. The larger &lt;var&gt;f&lt;/var&gt;, the more aggressive the scrolling.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;nil&lt;/code&gt; 또는 0과 1 사이 의 분수 &lt;var&gt;f&lt;/var&gt; 여야합니다 . 분수 인 경우 화면에서 아래로 스크롤 할 때 포인트를 놓을 위치를 지정합니다. 좀 더 정확하게 말하면, 포인트가 윈도우 시작 위에 있기 때문에 윈도우가 아래로 스크롤 될 때, 새로운 시작 위치가 선택되어 윈도우 높이의 포인트 &lt;var&gt;f&lt;/var&gt; 부분을 ​​위에서부터 놓습니다. &lt;var&gt;f&lt;/var&gt; 가 클수록 더 공격적으로 스크롤됩니다.</target>
        </trans-unit>
        <trans-unit id="da9ab538210ad97f321250c6838047d4466efc1a" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies a function to call to check whether a buffer needs reverting. The default value only handles buffers that are visiting files, by checking their modification time. Buffers that are not visiting files require a custom function of one optional argument &lt;var&gt;noconfirm&lt;/var&gt;. The function should return non-&lt;code&gt;nil&lt;/code&gt; if the buffer should be reverted. The buffer is current when this function is called.</source>
          <target state="translated">이 변수의 값은 버퍼를 되돌릴 필요가 있는지 확인하기 위해 호출 할 함수를 지정합니다. 기본값은 수정 시간을 확인하여 파일을 방문하는 버퍼 만 처리합니다. 파일을 방문하지 않는 버퍼에는 하나의 선택적 인수 &lt;var&gt;noconfirm&lt;/var&gt; 의 사용자 정의 함수가 필요합니다 . 버퍼를 되돌려 야하는 경우 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 해야합니다. 이 함수가 호출되면 버퍼가 현재 상태입니다.</target>
        </trans-unit>
        <trans-unit id="12dca8a93c0036a1980e2e69ff462cb1ac961e17" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies how often to do auto-saving, in terms of number of input events. Each time this many additional input events are read, Emacs does auto-saving for all buffers in which that is enabled. Setting this to zero disables autosaving based on the number of characters typed.</source>
          <target state="translated">이 변수의 값은 입력 이벤트 수와 관련하여 자동 저장을 수행하는 빈도를 지정합니다. 이 많은 추가 입력 이벤트를 읽을 때마다 Emacs는 활성화 된 모든 버퍼에 대해 자동 저장을 수행합니다. 이 값을 0으로 설정하면 입력 한 문자 수에 따라 자동 저장이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="2ee4257ee2662122b633a4b0cbe9a66ce225a38e" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the amount of consing before a garbage collection occurs, as a fraction of the current heap size. This criterion and &lt;code&gt;gc-cons-threshold&lt;/code&gt; apply in parallel, and garbage collection occurs only when both criteria are satisfied.</source>
          <target state="translated">이 변수의 값은 가비지 콜렉션이 발생하기 전에 현재 힙 크기의 일부로 소비량을 지정합니다. 이 기준과 &lt;code&gt;gc-cons-threshold&lt;/code&gt; 는 병렬로 적용되며 가비지 콜렉션은 두 기준이 모두 충족 될 때만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e15c226f38ff49c3333b1e006ff2cc624b6b04dc" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the current sort key for the Tabulated List buffer. If it is &lt;code&gt;nil&lt;/code&gt;, no sorting is done. Otherwise, it should have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;name&lt;/var&gt; is a string matching one of the column names in &lt;code&gt;tabulated-list-format&lt;/code&gt;, and &lt;var&gt;flip&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to invert the sort order.</source>
          <target state="translated">이 변수의 값은 테이블 목록 버퍼에 대한 현재 정렬 키를 지정합니다. 이 경우 &lt;code&gt;nil&lt;/code&gt; , 더 정렬이 수행되지 않습니다. 그렇지 않으면 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt; 형식이어야합니다 . 여기서 &lt;var&gt;name&lt;/var&gt; 은 &lt;code&gt;tabulated-list-format&lt;/code&gt; 의 열 이름 중 하나와 일치하는 문자열 이고, &lt;var&gt;flip&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 정렬 순서를 뒤집는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c4af1068f1e05dee5d6fefee8b641be1f2c78d71" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the function to use to insert the updated contents when reverting this buffer. The function receives two arguments: first the file name to use; second, &lt;code&gt;t&lt;/code&gt; if the user has asked to read the auto-save file.</source>
          <target state="translated">이 변수의 값은이 버퍼를 되돌릴 때 업데이트 된 내용을 삽입하는 데 사용할 함수를 지정합니다. 함수는 두 개의 인수를받습니다. 먼저 사용할 파일 이름; 둘째, 사용자가 자동 ​​저장 파일 읽기를 요청한 경우 &lt;code&gt;t&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7f7bfe65157559bbddd1955ea91ebf264d68077" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the maximum length for all history lists that don&amp;rsquo;t specify their own maximum lengths. If the value is &lt;code&gt;t&lt;/code&gt;, that means there is no maximum (don&amp;rsquo;t delete old elements). If a history list variable&amp;rsquo;s symbol has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;history-length&lt;/code&gt; property, it overrides this variable for that particular history list.</source>
          <target state="translated">이 변수의 값은 자체 최대 길이를 지정하지 않는 모든 내역 목록의 최대 길이를 지정합니다. 값이 &lt;code&gt;t&lt;/code&gt; 이면 최대 값이 없음을 의미합니다 (이전 요소를 삭제하지 마십시오). 히스토리 목록 변수의 심볼에 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;code&gt;history-length&lt;/code&gt; 속성이 있으면 해당 특정 히스토리 목록에 대해이 변수를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="57d3c0b7a901e93cfaa40fe9b9de672f0e622cf4" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is the current glyph table. It takes effect only on character terminals; on graphical displays, all glyphs are displayed literally. The glyph table should be a vector whose &lt;var&gt;g&lt;/var&gt;th element specifies how to display glyph code &lt;var&gt;g&lt;/var&gt;, where &lt;var&gt;g&lt;/var&gt; is the glyph code for a glyph whose face is unspecified. Each element should be one of the following:</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;nil&lt;/code&gt; 이 아니면 현재 글리프 테이블입니다. 문자 터미널에만 적용됩니다. 그래픽 디스플레이에서는 모든 글리프가 문자 그대로 표시됩니다. 글리프 테이블은 &lt;var&gt;g&lt;/var&gt; 번째 요소가 글리프 코드 &lt;var&gt;g&lt;/var&gt; 를 표시하는 방법을 지정하는 벡터 여야합니다. 여기서 &lt;var&gt;g&lt;/var&gt; 는 얼굴이 지정되지 않은 글리프의 글리프 코드입니다. 각 요소는 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ce482bcd0ec534adb705f36979bc396efd3afe84" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, should be a function. This function is called, with no arguments, after &lt;code&gt;write-region&lt;/code&gt; has completed.</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;nil&lt;/code&gt; 이 아니면 함수 여야합니다. 이 함수는 &lt;code&gt;write-region&lt;/code&gt; 이 완료된 후 인수없이 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="4bc5385973eb55e5a5f4212d89cd8023b5d45cc8" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;call-process&lt;/code&gt; (unless you told it not to wait) indicates the reason for process termination. A number gives the exit status of the subprocess; 0 means success, and any other value means failure. If the process terminated with a signal, &lt;code&gt;call-process&lt;/code&gt; returns a string describing the signal. If you told &lt;code&gt;call-process&lt;/code&gt; not to wait, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;call-process&lt;/code&gt; 에서 반환 된 값 (대기하지 말라고하지 않는 한)은 프로세스 종료 이유를 나타냅니다. 숫자는 하위 프로세스의 종료 상태를 제공합니다. 0은 성공을 의미하고 다른 값은 실패를 의미합니다. 프로세스가 신호로 종료되면 &lt;code&gt;call-process&lt;/code&gt; 는 신호를 설명하는 문자열을 반환합니다. &lt;code&gt;call-process&lt;/code&gt; 에 기다리지 말라고 말하면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f96085924dfd5d71ffa529190dd3a22501712287" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;garbage-collect&lt;/code&gt; describes the amount of memory used by Lisp data, broken down by data type. By contrast, the function &lt;code&gt;memory-limit&lt;/code&gt; provides information on the total amount of memory Emacs is currently using.</source>
          <target state="translated">&lt;code&gt;garbage-collect&lt;/code&gt; 에서 반환 된 값 은 Lisp 데이터가 사용하는 메모리 양을 데이터 유형별로 분류 하여 설명합니다. 대조적으로 &lt;code&gt;memory-limit&lt;/code&gt; 함수 는 Emacs가 현재 사용중인 총 메모리 양에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="31e7a32e779b109733b4aa450e495a30fb5d2ec6" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;parse-partial-sexp&lt;/code&gt; (a Lisp primitive for indentation and nesting computation) when it parses up to the beginning of this line.</source>
          <target state="translated">이 줄의 시작 부분까지 구문 분석 할 때 &lt;code&gt;parse-partial-sexp&lt;/code&gt; (들여 쓰기 및 중첩 계산을위한 Lisp 프리미티브)에 의해 반환되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="22d588379a0688ed195ba832770bfcb90fc7a1a1" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-excursion&lt;/code&gt; is the result of the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">&lt;code&gt;save-excursion&lt;/code&gt; 에 의해 반환 된 값 은 &lt;var&gt;body&lt;/var&gt; 의 마지막 형식의 결과 이거나 본문 형식이 제공되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e0452bed199b14aafda21c04a93f979b209faa96" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-restriction&lt;/code&gt; is that returned by the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">&lt;code&gt;save-restriction&lt;/code&gt; 에 의해 반환 된 값 은 &lt;var&gt;body&lt;/var&gt; 의 마지막 형식에서 반환 된 값 이거나 본문 형식이 제공되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c74d3864bf57e201710c0f494d7941abdf62bf83" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;window-state-get&lt;/code&gt; can be used in the same session to make a clone of a window in another window. It can be also written to disk and read back in another session. In either case, use the following function to restore the state of the window.</source>
          <target state="translated">&lt;code&gt;window-state-get&lt;/code&gt; 에서 반환 된 값 은 동일한 세션에서 다른 창에있는 창의 복제본을 만드는 데 사용할 수 있습니다. 디스크에 기록하고 다른 세션에서 다시 읽을 수도 있습니다. 두 경우 모두 다음 기능을 사용하여 창의 상태를 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="7596c5c7cfff59135fc00ba0034aff9d324568ff" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt;
&lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt;
&lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">함수가 반환하는 값은 &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; 형식의 벡터입니다 . 이 벡터의 각 구성 요소에 대한 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f1af6cd4e0db0a9010ab9bcf0a730b7bc413d9b" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;
&lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt;
&lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt;
&lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">함수가 반환하는 값은 &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; 입니다. 이 벡터의 각 구성 요소에 대한 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d45b07b4efd10701d924481455a5da20eaaa3618" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">반환 된 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d0a7f39be3f9da493d01e7c44973c0716de188f5" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;columns&lt;/var&gt;.</source>
          <target state="translated">반환 된 값은 &lt;var&gt;columns&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="975f3a289665270f4ba1e59734e35f87c9928129" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;marker&lt;/var&gt;.</source>
          <target state="translated">반환 된 값은 &lt;var&gt;marker&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="73a439c0a0e9878cfb0da4ec67a1717f7e4a93a8" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">반환 된 값은 &lt;var&gt;variable&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dec60e5c6fc38f40ce6cf94f56c02b10791c1e22" translate="yes" xml:space="preserve">
          <source>The value returned is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">반환되는 값은 항상 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="47d0638c890cedd458d1d1403d1e7e0313168cb6" translate="yes" xml:space="preserve">
          <source>The value returned is the screen line number point has moved to, relative to the top line of the window.</source>
          <target state="translated">반환 된 값은 창의 맨 윗줄을 기준으로 이동 한 화면 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="b2ccc57b2f309a480d2e7f6a52e01939c829850f" translate="yes" xml:space="preserve">
          <source>The value should be a cons cell of the form &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt;
. &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt;. Here &lt;var&gt;input-coding&lt;/var&gt; applies to input from the subprocess, and &lt;var&gt;output-coding&lt;/var&gt; applies to output to it.</source>
          <target state="translated">값은 &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt; . &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt; 형식의 cons 셀이어야합니다 . 여기서 &lt;var&gt;input-coding&lt;/var&gt; 은 하위 프로세스의 입력에 적용되고 &lt;var&gt;output-coding&lt;/var&gt; 은 출력에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="afa4a6e9d7cbd4770933f00e367e5337ede28bad" translate="yes" xml:space="preserve">
          <source>The value should be a function for &lt;em&gt;annotating&lt;/em&gt; completions. The function should take one argument, &lt;var&gt;string&lt;/var&gt;, which is a possible completion. It should return a string, which is displayed after the completion &lt;var&gt;string&lt;/var&gt; in the</source>
          <target state="translated">값은 완성 에 &lt;em&gt;주석&lt;/em&gt; 을 &lt;em&gt;달기&lt;/em&gt; 위한 함수 여야합니다 . 함수는 가능한 완료 인 하나의 인수 &lt;var&gt;string&lt;/var&gt; 을 가져야합니다 . 그것은 완료 후 표시되는 문자열, 반환해야 &lt;var&gt;string&lt;/var&gt; 의를</target>
        </trans-unit>
        <trans-unit id="c201901c0018b0c92d92e65e50c18f3c1c34c052" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions, when &lt;code&gt;completion-cycle-threshold&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the user is cycling through completion alternatives. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">이 값은 &lt;code&gt;completion-cycle-threshold&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니고 사용자가 완료 대안을 순환하는 경우 완료 정렬을위한 함수 여야합니다 . &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;완료 옵션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba777ba7c7fa48650a02e65762611a05ad3b440b" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions, when &lt;code&gt;completion-cycle-threshold&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the user is cycling through completion alternatives. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ba0d62cbcc1ae0208dc24b05830349e9976f9d" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions. The function should take one argument, a list of completion strings, and return a sorted list of completion strings. It is allowed to alter the input list destructively.</source>
          <target state="translated">값은 완료 정렬을위한 함수 여야합니다. 함수는 하나의 인수, 완성 문자열 목록을 취하고 정렬 된 완성 문자열 목록을 반환해야합니다. 입력 목록을 파괴적으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e101dd6c8e98ecc490ae874e5dcfb9d80b45d061" translate="yes" xml:space="preserve">
          <source>The value should be a function that takes no arguments and returns a frame, or &lt;code&gt;nil&lt;/code&gt; if no frame could be created. The default value is a function that creates a frame using the parameters specified by &lt;code&gt;pop-up-frame-alist&lt;/code&gt; (see below).</source>
          <target state="translated">값은 인수를 취하지 않고 프레임을 반환하는 함수이거나 프레임을 만들 수없는 경우 &lt;code&gt;nil&lt;/code&gt; 이어야합니다. 기본값은 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; 에서 지정한 매개 변수를 사용하여 프레임을 생성하는 함수입니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="b2200b61001be6b8b42c0f192f2e1441d6be0fba" translate="yes" xml:space="preserve">
          <source>The value should be a function to add annotations in the completions buffer. This function must accept one argument, a completion, and should either return &lt;code&gt;nil&lt;/code&gt; or a string to be displayed next to the completion.</source>
          <target state="translated">값은 완료 버퍼에 주석을 추가하는 함수 여야합니다. 이 함수는 하나의 인수 인 완성을 받아야하며 &lt;code&gt;nil&lt;/code&gt; 을 반환 하거나 완성 옆에 표시 할 문자열을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="faa61fa6487d98c4ad45fdb4f4dd02ad923d60a5" translate="yes" xml:space="preserve">
          <source>The value should be a function to run after performing completion. The function should accept two arguments, &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;status&lt;/var&gt;, where &lt;var&gt;string&lt;/var&gt; is the text to which the field was completed, and &lt;var&gt;status&lt;/var&gt; indicates what kind of operation happened: &lt;code&gt;finished&lt;/code&gt; if text is now complete, &lt;code&gt;sole&lt;/code&gt; if the text cannot be further completed but completion is not finished, or &lt;code&gt;exact&lt;/code&gt; if the text is a valid completion but may be further completed.</source>
          <target state="translated">값은 완료 후 실행할 함수 여야합니다. 이 함수는 두 개의 인수, 받아 들여야 &lt;var&gt;string&lt;/var&gt; 및 &lt;var&gt;status&lt;/var&gt; , &lt;var&gt;string&lt;/var&gt; 필드가 완료되는 텍스트입니다, 그리고 &lt;var&gt;status&lt;/var&gt; 어떤 작업 무슨 일이 있었는지 나타냅니다 &lt;code&gt;finished&lt;/code&gt; 텍스트가 이제 완료되었는지 &lt;code&gt;sole&lt;/code&gt; 텍스트를 추가 완료되었지만 완료가 할 수없는 경우 완료되지 않았거나 텍스트가 유효한 완성이지만 추가로 완료 될 수있는 경우 &lt;code&gt;exact&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9b7ebbfe345be5a867dbde46e6a2761a575df403" translate="yes" xml:space="preserve">
          <source>The value should be a list of completion styles (symbols).</source>
          <target state="translated">값은 완성 스타일 (기호) 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="925758dfea64d9dd86f0a3bf26a2bd82f0f1f147" translate="yes" xml:space="preserve">
          <source>The value should be a predicate that completion candidates need to satisfy.</source>
          <target state="translated">값은 완료 후보가 충족해야하는 술어 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5cb79d51602bd8eb1cf7a88ebf99635042f65726" translate="yes" xml:space="preserve">
          <source>The value should be a symbol describing what kind of text the completion function is trying to complete. If the symbol matches one of the keys in &lt;code&gt;completion-category-overrides&lt;/code&gt;, the usual completion behavior is overridden. See &lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;Completion Variables&lt;/a&gt;.</source>
          <target state="translated">값은 완성 기능이 완료하려는 텍스트의 종류를 설명하는 기호 여야합니다. 기호가 &lt;code&gt;completion-category-overrides&lt;/code&gt; 의 키 중 하나와 일치 하면 일반적인 완료 동작이 재정의됩니다. &lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;완료 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12bf4f6f2a54e741e94637b75c4db474bd81d15b" translate="yes" xml:space="preserve">
          <source>The value should be a value for &lt;code&gt;completion-cycle-threshold&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">이 값은 &lt;code&gt;completion-cycle-threshold&lt;/code&gt; 값의 값이어야합니다 ( 에서 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;완료 옵션&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="16018e79055192cfd191e04fc5a9f0d4323cab19" translate="yes" xml:space="preserve">
          <source>The value should be a value for &lt;code&gt;completion-cycle-threshold&lt;/code&gt; (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff26f2d74e7f80625e6dcbebeacb661b2c0a9f8" translate="yes" xml:space="preserve">
          <source>The value should be an alist of elements &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt;
. &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt;. Each alist element is handled in order. The inserted text is scanned for stretches of text having text properties &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;prop&lt;/var&gt;; for each such stretch, &lt;var&gt;fun&lt;/var&gt; is called with three arguments: the value of the property, and the start and end positions of the text.</source>
          <target state="translated">값은 요소 목록 &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt; . &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; 이어야합니다 . 각 alist 요소는 순서대로 처리됩니다. 삽입 된 텍스트는 &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;prop&lt;/var&gt; 에 텍스트 속성을 가진 텍스트를 스캔합니다 . 이러한 각 스트레치에 대해 &lt;var&gt;fun&lt;/var&gt; 은 속성의 값, 텍스트의 시작 및 끝 위치라는 세 가지 인수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0feffcbb3119f336531a6fd74cbbff440dba66ac" translate="yes" xml:space="preserve">
          <source>The value specifies a direction which, together with a &lt;code&gt;window&lt;/code&gt; entry, allows &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to determine the location of the window to display the buffer.</source>
          <target state="translated">값은 &lt;code&gt;window&lt;/code&gt; 항목 과 함께 &lt;code&gt;display-buffer-in-direction&lt;/code&gt; 이 버퍼를 표시 할 창의 위치를 ​​결정할 수 있도록 하는 방향을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="611611e171be434468ec675dea405dd5312d8f63" translate="yes" xml:space="preserve">
          <source>The value specifies a function for determining safe file-local values for the named variable. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">이 값은 명명 된 변수에 대한 안전한 파일 로컬 값을 결정하는 함수를 지정합니다. &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;파일 로컬 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea946c727c16f4c700d3a131807aa1fa7ac26e10" translate="yes" xml:space="preserve">
          <source>The value specifies a minimum height of the window used, in lines. If a window is not or cannot be made as high as specified by this entry, the window is not considered for use. The only client of this entry is presently &lt;code&gt;display-buffer-below-selected&lt;/code&gt;.</source>
          <target state="translated">이 값은 사용되는 창의 최소 높이를 줄 단위로 지정합니다. 창이이 항목에 지정된만큼 높지 않거나 만들 수없는 경우 해당 창은 사용으로 간주되지 않습니다. 이 항목의 유일한 클라이언트는 현재 &lt;code&gt;display-buffer-below-selected&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e878f22a9e22e5e6ae516631fd4b2f22c80a65af" translate="yes" xml:space="preserve">
          <source>The value specifies a window that is in some way related to the window chosen by &lt;code&gt;display-buffer&lt;/code&gt;. This entry is currently used by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; to indicate the window on whose side the new window shall be created. It is also used by &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to specify the reference window on whose side the resulting window shall appear.</source>
          <target state="translated">이 값은 &lt;code&gt;display-buffer&lt;/code&gt; 에서 선택한 창과 어떤 방식 으로든 관련된 창을 지정합니다 . 이 항목은 현재 &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; 에서 새 창이 생성 될 창 을 표시하는 데 사용됩니다 . 또한 &lt;code&gt;display-buffer-in-direction&lt;/code&gt; 에서 결과 창이 나타날 참조 창을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a230a1b00acb88265aaebae444183845a0a12075" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to give a new frame, if one is created. &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; is its one and only addressee.</source>
          <target state="translated">이 값은 새 프레임이 생성 된 경우 새 프레임을 제공 할 프레임 매개 변수 목록을 지정합니다. &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 은 유일한 주소입니다.</target>
        </trans-unit>
        <trans-unit id="712354d6ecb588545e689e9cf4e0f436a0db7e70" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to use when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">이 값은 버퍼가 자식 프레임에 표시 될 때 사용할 프레임 매개 변수 목록을 지정합니다. 이 항목은 &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; 에서만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc8a52f49cd1e2b71d0412b55ac293683a602f45" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of window parameters to give the chosen window. All action functions that choose a window should process this entry.</source>
          <target state="translated">이 값은 선택한 창에 제공 할 창 매개 변수 목록을 지정합니다. 창을 선택하는 모든 작업 기능은이 항목을 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="cebae73a089b0cf31db115ca79a05a8ad5a3d9f1" translate="yes" xml:space="preserve">
          <source>The value specifies options for a command.</source>
          <target state="translated">값은 명령에 대한 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="70a0d168bab1f71658353f8a2d881540c5b9b497" translate="yes" xml:space="preserve">
          <source>The value specifies the parent frame to be used when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">값은 버퍼가 하위 프레임에 표시 될 때 사용할 상위 프레임을 지정합니다. 이 항목은 &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; 에서만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0c548691ebd219b442c5f2af316d1d293d80adbd" translate="yes" xml:space="preserve">
          <source>The value specifies the set of frames to search for a window that can be reused because it already displays the buffer. It can be set as follows:</source>
          <target state="translated">값은 이미 버퍼를 표시하므로 재사용 할 수있는 창을 검색 할 프레임 세트를 지정합니다. 다음과 같이 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af34abd1ebb5fd7575ea1f5e82855c70ca1ac344" translate="yes" xml:space="preserve">
          <source>The value specifies whether and how to adjust the height of the chosen window and can be one of the following:</source>
          <target state="translated">이 값은 선택한 창의 높이를 조정할지 여부와 방법을 지정하며 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="505bb1f9ff0dba8805de9df77265d82a7c2cdafa" translate="yes" xml:space="preserve">
          <source>The value stores the documentation string of the named face. This is set automatically by &lt;code&gt;defface&lt;/code&gt;. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">값은 명명 된 얼굴의 문서 문자열을 저장합니다. 이것은 &lt;code&gt;defface&lt;/code&gt; 에 의해 자동으로 설정됩니다 . &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;면 정의를&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="a55d35705528885818f514326dd9b25fb751d4f9" translate="yes" xml:space="preserve">
          <source>The value string normally has text properties that correspond to the faces, keymaps, etc., that the mode line would have. Any character for which no &lt;code&gt;face&lt;/code&gt; property is specified by &lt;var&gt;format&lt;/var&gt; gets a default value determined by &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, that stands for either &lt;code&gt;mode-line&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is selected, otherwise &lt;code&gt;mode-line-inactive&lt;/code&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, that stands for the default face. If &lt;var&gt;face&lt;/var&gt; is an integer, the value returned by this function will have no text properties.</source>
          <target state="translated">값 문자열에는 일반적으로 모드 라인에있는 얼굴, 키맵 등에 해당하는 텍스트 속성이 있습니다. &lt;var&gt;format&lt;/var&gt; 의해 &lt;code&gt;face&lt;/code&gt; 속성이 지정 되지 않은 모든 문자는 얼굴에 의해 결정된 기본값을 가져 &lt;var&gt;face&lt;/var&gt; . 경우 &lt;var&gt;face&lt;/var&gt; 입니다 &lt;code&gt;t&lt;/code&gt; 는 , 그 중 하나가 의미 &lt;code&gt;mode-line&lt;/code&gt; 경우 &lt;var&gt;window&lt;/var&gt; 선택, 그렇지 않으면 &lt;code&gt;mode-line-inactive&lt;/code&gt; . 경우 &lt;var&gt;face&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 또는 생략, 그 기본 얼굴을 의미합니다. 경우 &lt;var&gt;face&lt;/var&gt; 의 정수이며,이 함수에 의해 반환되는 값은 텍스트 속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3591dd575c16a1fb94691cd3cca981235d32b6ff" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">값 &lt;var&gt;background&lt;/var&gt; 는 이미지 배경 색상을 지정하는 문자열이거나 기본 색상의 경우 &lt;code&gt;nil&lt;/code&gt; 이어야합니다 . 이 색상은 0 인 PBM의 각 픽셀에 사용됩니다. 기본값은 프레임의 배경색입니다.</target>
        </trans-unit>
        <trans-unit id="458f07b42dc208884ff2ff5ab13f9b69732605ef" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">값 &lt;var&gt;background&lt;/var&gt; 는 이미지 배경 색상을 지정하는 문자열이거나 기본 색상의 경우 &lt;code&gt;nil&lt;/code&gt; 이어야합니다 . 이 색상은 0 인 XBM의 각 픽셀에 사용됩니다. 기본값은 프레임의 배경색입니다.</target>
        </trans-unit>
        <trans-unit id="83fa724b0ab7a36133791af18f6967d44343acd2" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;data&lt;/var&gt;, specifies the contents of the image. There are three formats you can use for &lt;var&gt;data&lt;/var&gt;:</source>
          <target state="translated">값 &lt;var&gt;data&lt;/var&gt; 는 이미지의 내용을 지정합니다. &lt;var&gt;data&lt;/var&gt; 사용할 수있는 세 가지 형식이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b521a7e9b651d09dfd41d51b4e01b49ec76cdfe" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">값 &lt;var&gt;foreground&lt;/var&gt; 는 이미지 전경색을 지정하는 문자열이거나 기본 색상의 경우 &lt;code&gt;nil&lt;/code&gt; 이어야합니다 . 이 색상은 1 인 PBM의 각 픽셀에 사용됩니다. 기본값은 프레임의 전경색입니다.</target>
        </trans-unit>
        <trans-unit id="dc6e9bbff6399dd6222c56642a86367c8cc843d6" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">값 &lt;var&gt;foreground&lt;/var&gt; 는 이미지 전경색을 지정하는 문자열이거나 기본 색상의 경우 &lt;code&gt;nil&lt;/code&gt; 이어야합니다 . 이 색상은 1 인 XBM의 각 픽셀에 사용됩니다. 기본값은 프레임의 전경색입니다.</target>
        </trans-unit>
        <trans-unit id="eb345c174c35c0159b93a1f9149ad3d4e1130275" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;height&lt;/var&gt;, specifies the height of the image, in pixels.</source>
          <target state="translated">값 &lt;var&gt;height&lt;/var&gt; 는 이미지의 높이를 픽셀 단위로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b9ea6d3dec735a3a948c97af424b63f71478e6cb" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;symbols&lt;/var&gt;, should be an alist whose elements have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt;. In each element, &lt;var&gt;name&lt;/var&gt; is the name of a color as it appears in the image file, and &lt;var&gt;color&lt;/var&gt; specifies the actual color to use for displaying that name.</source>
          <target state="translated">값 &lt;var&gt;symbols&lt;/var&gt; 은 요소가 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt; 형식을 갖는 목록이어야합니다 . 각 요소에서 &lt;var&gt;name&lt;/var&gt; 은 이미지 파일에 표시되는 색상의 이름이고 &lt;var&gt;color&lt;/var&gt; 은 해당 이름을 표시하는 데 사용할 실제 색상을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dcde525351a6f12a8b348e73f3817e78fee629b1" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;type&lt;/var&gt;, should be a symbol specifying the type of the image data, as found in &lt;code&gt;image-format-suffixes&lt;/code&gt;. This is used when the image does not have an associated file name, to provide a hint to ImageMagick to help it detect the image type.</source>
          <target state="translated">값 &lt;var&gt;type&lt;/var&gt; 에서 발견되는 바와 같이, 화상 데이터의 타입을 지정하는 기호되어야 &lt;code&gt;image-format-suffixes&lt;/code&gt; . 이미지 유형을 감지하는 데 도움이되는 ImageMagick에 힌트를 제공하기 위해 이미지에 연관된 파일 이름이 없을 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="531d38e8be68abb161b4857aa037531d56c07b0d" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;weak&lt;/var&gt;, must be one of &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;key-or-value&lt;/code&gt;, &lt;code&gt;key-and-value&lt;/code&gt;, or &lt;code&gt;t&lt;/code&gt; which is an alias for &lt;code&gt;key-and-value&lt;/code&gt;. If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key&lt;/code&gt; then the hash table does not prevent its keys from being collected as garbage (if they are not referenced anywhere else); if a particular key does get collected, the corresponding association is removed from the hash table.</source>
          <target state="translated">값 &lt;var&gt;weak&lt;/var&gt; 중 하나 여야 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;key&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;key-or-value&lt;/code&gt; , &lt;code&gt;key-and-value&lt;/code&gt; , 또는 &lt;code&gt;t&lt;/code&gt; 의 별칭 &lt;code&gt;key-and-value&lt;/code&gt; . 경우 &lt;var&gt;weak&lt;/var&gt; 입니다 &lt;code&gt;key&lt;/code&gt; 다음 해시 테이블 (그들은 다른 곳에서 참조되지 않은 경우) 쓰레기로 수집되는 그 키를 방지하지 않습니다; 특정 키가 수집되면 해당 연관이 해시 테이블에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="fa76d4528e5ae6cb4684c0da77a8308d0cb82b94" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;width&lt;/var&gt;, specifies the width of the image, in pixels.</source>
          <target state="translated">&lt;var&gt;width&lt;/var&gt; 값 은 이미지의 너비를 픽셀 단위로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="be1644837474a9fe39ca523e6b28004356025b7a" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum minibuffer history length for the named history list variable. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">값이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 명명 된 내역 목록 변수에 대한 최대 미니 버퍼 내역 길이를 지정합니다. &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7dd81aa41d587c809be779d8678d7703a9d070c" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the number of extra slots in the named char-table type. See &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 값 은 명명 된 char-table 유형의 추가 슬롯 수를 지정합니다. &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d157992c080feaba61c3f9992a35160809e8293" translate="yes" xml:space="preserve">
          <source>The values in &lt;var&gt;delta&lt;/var&gt; can be negative to subtract values instead.</source>
          <target state="translated">&lt;var&gt;delta&lt;/var&gt; 의 값은 대신 값을 빼기 위해 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25bd5003a5bfd3ff9957bc21c007d9f2e961478c" translate="yes" xml:space="preserve">
          <source>The values must be known and written in advance.</source>
          <target state="translated">값을 미리 알고 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5da79067043a3cf400b4585327d4bc12a8d8220" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;modiff&lt;/code&gt; and &lt;code&gt;overlay_modiff&lt;/code&gt;, respectively, after the last complete redisplay. If their current values match &lt;code&gt;modiff&lt;/code&gt; or &lt;code&gt;overlay_modiff&lt;/code&gt;, that means &lt;code&gt;beg_unchanged&lt;/code&gt; and &lt;code&gt;end_unchanged&lt;/code&gt; contain no useful information.</source>
          <target state="translated">마지막으로 완전히 다시 표시 한 후 각각 &lt;code&gt;modiff&lt;/code&gt; 및 &lt;code&gt;overlay_modiff&lt;/code&gt; 의 값입니다 . 현재 값이 &lt;code&gt;modiff&lt;/code&gt; 또는 &lt;code&gt;overlay_modiff&lt;/code&gt; 와 일치 하면 &lt;code&gt;beg_unchanged&lt;/code&gt; 및 &lt;code&gt;end_unchanged&lt;/code&gt; 에 유용한 정보가 없음 을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="ed47fccd292efe605a4c56a267c480abd538960b" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted.</source>
          <target state="translated">여기에 지정된 값은 나중에 호출에 의해 오버라이드 (override) 할 수 있습니다 &lt;code&gt;set-window-buffer&lt;/code&gt; (참조 &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;버퍼와 윈도우&lt;/a&gt; 에서) &lt;var&gt;window&lt;/var&gt; 그와 &lt;var&gt;keep-margins&lt;/var&gt; 인수 &lt;code&gt;nil&lt;/code&gt; 또는 생략.</target>
        </trans-unit>
        <trans-unit id="ffdbbe9270c4e6a0880d799e803e12a916413aa7" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;.</source>
          <target state="translated">여기에 지정된 값은 나중에 호출에 의해 오버라이드 (override) 할 수 있습니다 &lt;code&gt;set-window-buffer&lt;/code&gt; (참조 &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;버퍼와 윈도우&lt;/a&gt; 에서) &lt;var&gt;window&lt;/var&gt; 그와 &lt;var&gt;keep-margins&lt;/var&gt; 인수 &lt;code&gt;nil&lt;/code&gt; 또는 생략. 그러나 선택적 다섯 번째 인수 &lt;var&gt;persistent&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니고 다른 인수가 성공적으로 처리 된 경우 여기에 지정된 값은 &lt;code&gt;set-window-buffer&lt;/code&gt; 후속 호출에서 무조건 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="9f20937a44fbec35b55cf8ad483755599c4f4983" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;. This can be used to permanently turn off fringes in the minibuffer window, consult the description of &lt;code&gt;set-window-scroll-bars&lt;/code&gt; for an example (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;).</source>
          <target state="translated">여기에 지정된 값은 나중에 호출에 의해 오버라이드 (override) 할 수 있습니다 &lt;code&gt;set-window-buffer&lt;/code&gt; (참조 &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;버퍼와 윈도우&lt;/a&gt; 에서) &lt;var&gt;window&lt;/var&gt; 그와 &lt;var&gt;keep-margins&lt;/var&gt; 인수 &lt;code&gt;nil&lt;/code&gt; 또는 생략. 그러나 선택적 다섯 번째 인수 &lt;var&gt;persistent&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니고 다른 인수가 성공적으로 처리 된 경우 여기에 지정된 값은 &lt;code&gt;set-window-buffer&lt;/code&gt; 후속 호출에서 무조건 유지됩니다 . 이것은 미니 버퍼 창에서 줄무늬를 영구적으로 끄는 데 사용할 수 있습니다 . 예제 는 &lt;code&gt;set-window-scroll-bars&lt;/code&gt; 설명을 참조하십시오 ( &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="9d0a64001addcf5c84bd11eeecbbe2a812972b09" translate="yes" xml:space="preserve">
          <source>The values you can use, to specify either of these pointer shapes, are defined in the file</source>
          <target state="translated">이러한 포인터 모양 중 하나를 지정하는 데 사용할 수있는 값은 파일에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="70c4d9624135a1d02ee3a53311a97032dd279c56" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; should contain an alist with alternative implementations of &lt;var&gt;command&lt;/var&gt;. Until this variable is set, &lt;code&gt;define-alternatives&lt;/code&gt; has no effect.</source>
          <target state="translated">The variable &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; should contain an alist with alternative implementations of &lt;var&gt;command&lt;/var&gt; . Until this variable is set, &lt;code&gt;define-alternatives&lt;/code&gt; has no effect.</target>
        </trans-unit>
        <trans-unit id="edfb1c8edeea6bfd958815e01d5a1cbf976013b7" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;backup-by-copying&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, says to use the second method, which is to copy the original file and overwrite it with the new buffer contents. The variable &lt;code&gt;file-precious-flag&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, also has this effect (as a sideline of its main significance). See &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;.</source>
          <target state="translated">The variable &lt;code&gt;backup-by-copying&lt;/code&gt; , if non- &lt;code&gt;nil&lt;/code&gt; , says to use the second method, which is to copy the original file and overwrite it with the new buffer contents. The variable &lt;code&gt;file-precious-flag&lt;/code&gt; , if non- &lt;code&gt;nil&lt;/code&gt; , also has this effect (as a sideline of its main significance). See &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="784cb7a1b10dca75362ea63cc44adc63b202f651" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;.</source>
          <target state="translated">The variable &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7252e1b84fd0839fae971325637e2c2419366d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;face-remapping-alist&lt;/code&gt; is used for buffer-local or global changes in the appearance of a face. For instance, it is used to implement the &lt;code&gt;text-scale-adjust&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Text Scale&lt;/a&gt; in</source>
          <target state="translated">The variable &lt;code&gt;face-remapping-alist&lt;/code&gt; is used for buffer-local or global changes in the appearance of a face. For instance, it is used to implement the &lt;code&gt;text-scale-adjust&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Text Scale&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="7f7cbc24b842583cc3a0c3a4431d846784257d17" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;face-remapping-alist&lt;/code&gt; is used for buffer-local or global changes in the appearance of a face. For instance, it is used to implement the &lt;code&gt;text-scale-adjust&lt;/code&gt; command (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Text Scale&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34c858c384be3019173ab7142614489d00972d3" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-coding-system&lt;/code&gt; specifies the coding system to use for encoding file names. Emacs encodes file names using that coding system for all file operations. If &lt;code&gt;file-name-coding-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs uses a default coding system determined by the selected language environment. In the default language environment, any non-</source>
          <target state="translated">The variable &lt;code&gt;file-name-coding-system&lt;/code&gt; specifies the coding system to use for encoding file names. Emacs encodes file names using that coding system for all file operations. If &lt;code&gt;file-name-coding-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; , Emacs uses a default coding system determined by the selected language environment. In the default language environment, any non-</target>
        </trans-unit>
        <trans-unit id="f0a2a7962865afd977c9962e346463309608747d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-handler-alist&lt;/code&gt; holds a list of handlers, together with regular expressions that determine when to apply each handler. Each element has this form:</source>
          <target state="translated">The variable &lt;code&gt;file-name-handler-alist&lt;/code&gt; holds a list of handlers, together with regular expressions that determine when to apply each handler. Each element has this form:</target>
        </trans-unit>
        <trans-unit id="31a91e3271c754112418809b5d918df00d438cdc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; by default inhibits running the &lt;code&gt;point-left&lt;/code&gt; and &lt;code&gt;point-entered&lt;/code&gt; hooks, see &lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;Inhibit point motion hooks&lt;/a&gt;.</source>
          <target state="translated">The variable &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; by default inhibits running the &lt;code&gt;point-left&lt;/code&gt; and &lt;code&gt;point-entered&lt;/code&gt; hooks, see &lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;Inhibit point motion hooks&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="80d2dd14eab302d61ea77d5bcf3d662baf312644" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;kill-ring&lt;/code&gt; holds the kill ring contents, in the form of a list of strings. The most recent kill is always at the front of the list.</source>
          <target state="translated">The variable &lt;code&gt;kill-ring&lt;/code&gt; holds the kill ring contents, in the form of a list of strings. The most recent kill is always at the front of the list.</target>
        </trans-unit>
        <trans-unit id="1af116daf2ff92fc810afa12d7b3276cfcb4e1cd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;max-mini-window-height&lt;/code&gt;, which specifies the maximum height for resizing minibuffer windows, also applies to the echo area (which is really a special use of the minibuffer window; see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;).</source>
          <target state="translated">The variable &lt;code&gt;max-mini-window-height&lt;/code&gt; , which specifies the maximum height for resizing minibuffer windows, also applies to the echo area (which is really a special use of the minibuffer window; see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="97a8e64d6a49b6e2b383ab7b9d91e1b975482616" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;overriding-local-map&lt;/code&gt; is normally ignored when determining the menu bar contents. That is, the menu bar is computed from the keymaps that would be active if &lt;code&gt;overriding-local-map&lt;/code&gt; were &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">The variable &lt;code&gt;overriding-local-map&lt;/code&gt; is normally ignored when determining the menu bar contents. That is, the menu bar is computed from the keymaps that would be active if &lt;code&gt;overriding-local-map&lt;/code&gt; were &lt;code&gt;nil&lt;/code&gt; . See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f7a4850b24d3c2ac6ae8142c3ffc8f37ad0d3a10" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;paragraph-separate&lt;/code&gt; controls how to distinguish paragraphs. See &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;.</source>
          <target state="translated">The variable &lt;code&gt;paragraph-separate&lt;/code&gt; controls how to distinguish paragraphs. See &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d4e5e030204bb60690092b5c001a6c2d2385a3dc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;selection-coding-system&lt;/code&gt; specifies how to encode selections for the window system. See &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;.</source>
          <target state="translated">The variable &lt;code&gt;selection-coding-system&lt;/code&gt; specifies how to encode selections for the window system. See &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="005a4747db2da8eb60b4c4d70cc7430741bf77b2" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;use-dialog-box&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Dialog Boxes&lt;/a&gt; in</source>
          <target state="translated">The variable &lt;code&gt;use-dialog-box&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; . See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Dialog Boxes&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="8ada775800afc13dc0d7c862a48e5be0c9489358" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;use-dialog-box&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Dialog Boxes&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d9e1a111c06c72dd5fe05bcdd79e7bb53745fd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;vc-mode&lt;/code&gt;, buffer-local in each buffer, records whether the buffer&amp;rsquo;s visited file is maintained with version control, and, if so, which kind. Its value is a string that appears in the mode line, or &lt;code&gt;nil&lt;/code&gt; for no version control.</source>
          <target state="translated">The variable &lt;code&gt;vc-mode&lt;/code&gt; , buffer-local in each buffer, records whether the buffer&amp;rsquo;s visited file is maintained with version control, and, if so, which kind. Its value is a string that appears in the mode line, or &lt;code&gt;nil&lt;/code&gt; for no version control.</target>
        </trans-unit>
        <trans-unit id="3f4edf43932306ed36279cea1dd13405c1358ef5" translate="yes" xml:space="preserve">
          <source>The variable in overall control of the mode line is &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">The variable in overall control of the mode line is &lt;code&gt;mode-line-format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="506280d27c3a453af25eaf83b2e22ba4756bde25" translate="yes" xml:space="preserve">
          <source>The variable is a normal hook (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;).</source>
          <target state="translated">The variable is a normal hook (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="bd9d0d131cd223849d83a9a897d9082204faab10" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">The variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="afffab14c74c322c6258e66827462e1a16d2b8ec" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal, and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">The variable is always local to the current terminal, and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b97401b6a596ccc158402fffb09944fd2fd36e2" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in C code. (Emacs code contributed before 2018 may follow other conventions, which are being phased out.)</source>
          <target state="translated">The variable is intended for internal use and is defined in C code. (Emacs code contributed before 2018 may follow other conventions, which are being phased out.)</target>
        </trans-unit>
        <trans-unit id="cb202781764a3574f77a5a340b243172f7492fda" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in the file</source>
          <target state="translated">The variable is intended for internal use and is defined in the file</target>
        </trans-unit>
        <trans-unit id="41f80727e5413f13677ccab0cafcbdb5331c71cc" translate="yes" xml:space="preserve">
          <source>The variable is needed because in some cases a function reads an event and then decides not to use it. Storing the event in this variable causes it to be processed normally, by the command loop or by the functions to read command input.</source>
          <target state="translated">The variable is needed because in some cases a function reads an event and then decides not to use it. Storing the event in this variable causes it to be processed normally, by the command loop or by the functions to read command input.</target>
        </trans-unit>
        <trans-unit id="3150be7b7ac09c6a1f548c75f40f74c6a1f6ef59" translate="yes" xml:space="preserve">
          <source>The variable which directly controls search-based fontification is &lt;code&gt;font-lock-keywords&lt;/code&gt;, which is typically specified via the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;.</source>
          <target state="translated">The variable which directly controls search-based fontification is &lt;code&gt;font-lock-keywords&lt;/code&gt; , which is typically specified via the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c5b07c9b1876282e7d1f551953a370749b40a01" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s normal value is &lt;code&gt;nil&lt;/code&gt;, which means to handle each warning separately.</source>
          <target state="translated">The variable&amp;rsquo;s normal value is &lt;code&gt;nil&lt;/code&gt; , which means to handle each warning separately.</target>
        </trans-unit>
        <trans-unit id="c95ce49750efde5fed6afd86875120cb2d79d29e" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s ordinary binding, which is not associated with any specific buffer, is called the &lt;em&gt;default binding&lt;/em&gt;. In most cases, this is the global binding.</source>
          <target state="translated">The variable&amp;rsquo;s ordinary binding, which is not associated with any specific buffer, is called the &lt;em&gt;default binding&lt;/em&gt;. In most cases, this is the global binding.</target>
        </trans-unit>
        <trans-unit id="0002578a86e49c7b26b7d6dae1705110ffa7f565" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;last-command&lt;/code&gt;, &lt;code&gt;this-command&lt;/code&gt;, &lt;code&gt;last-command-event&lt;/code&gt;, &lt;code&gt;last-input-event&lt;/code&gt;, &lt;code&gt;last-event-frame&lt;/code&gt;, &lt;code&gt;last-nonmenu-event&lt;/code&gt;, and &lt;code&gt;track-mouse&lt;/code&gt;. Commands in Edebug do not affect these variables outside of Edebug.</source>
          <target state="translated">The variables &lt;code&gt;last-command&lt;/code&gt; , &lt;code&gt;this-command&lt;/code&gt; , &lt;code&gt;last-command-event&lt;/code&gt; , &lt;code&gt;last-input-event&lt;/code&gt; , &lt;code&gt;last-event-frame&lt;/code&gt; , &lt;code&gt;last-nonmenu-event&lt;/code&gt; , and &lt;code&gt;track-mouse&lt;/code&gt; . Commands in Edebug do not affect these variables outside of Edebug.</target>
        </trans-unit>
        <trans-unit id="ec74bb4b14cd4ddba613a9beb2bc907924ad1fd7" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;overlay-arrow-position&lt;/code&gt; and &lt;code&gt;overlay-arrow-string&lt;/code&gt; are saved and restored, so you can safely invoke Edebug from the recursive edit elsewhere in the same buffer.</source>
          <target state="translated">The variables &lt;code&gt;overlay-arrow-position&lt;/code&gt; and &lt;code&gt;overlay-arrow-string&lt;/code&gt; are saved and restored, so you can safely invoke Edebug from the recursive edit elsewhere in the same buffer.</target>
        </trans-unit>
        <trans-unit id="12dd85f0af26cb40d63289524c75ea79f44a055c" translate="yes" xml:space="preserve">
          <source>The variables and subgroups of a group are stored in the &lt;code&gt;custom-group&lt;/code&gt; property of the group&amp;rsquo;s symbol. See &lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;Symbol Plists&lt;/a&gt;. The value of that property is a list of pairs whose &lt;code&gt;car&lt;/code&gt; is the variable or subgroup symbol and the &lt;code&gt;cdr&lt;/code&gt; is either &lt;code&gt;custom-variable&lt;/code&gt; or &lt;code&gt;custom-group&lt;/code&gt;.</source>
          <target state="translated">The variables and subgroups of a group are stored in the &lt;code&gt;custom-group&lt;/code&gt; property of the group&amp;rsquo;s symbol. See &lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;Symbol Plists&lt;/a&gt;. The value of that property is a list of pairs whose &lt;code&gt;car&lt;/code&gt; is the variable or subgroup symbol and the &lt;code&gt;cdr&lt;/code&gt; is either &lt;code&gt;custom-variable&lt;/code&gt; or &lt;code&gt;custom-group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ad60ac6e02db9591e6f7dda4a2e131b2f72ea7a" translate="yes" xml:space="preserve">
          <source>The variables whose names end in &amp;lsquo;</source>
          <target state="translated">The variables whose names end in &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="bab9f851db4965f0aa949afaf727a84dac3bbdef" translate="yes" xml:space="preserve">
          <source>The various forms in &lt;code&gt;rx&lt;/code&gt; regexps are described below. The shorthand &lt;var&gt;rx&lt;/var&gt; represents any &lt;code&gt;rx&lt;/code&gt; form, and &lt;var&gt;rx&lt;/var&gt;&amp;hellip; means zero or more &lt;code&gt;rx&lt;/code&gt; forms. Where the corresponding string regexp syntax is given, &lt;var&gt;A&lt;/var&gt;, &lt;var&gt;B&lt;/var&gt;, &amp;hellip; are string regexp subexpressions.</source>
          <target state="translated">The various forms in &lt;code&gt;rx&lt;/code&gt; regexps are described below. The shorthand &lt;var&gt;rx&lt;/var&gt; represents any &lt;code&gt;rx&lt;/code&gt; form, and &lt;var&gt;rx&lt;/var&gt; &amp;hellip; means zero or more &lt;code&gt;rx&lt;/code&gt; forms. Where the corresponding string regexp syntax is given, &lt;var&gt;A&lt;/var&gt; , &lt;var&gt;B&lt;/var&gt; , &amp;hellip; are string regexp subexpressions.</target>
        </trans-unit>
        <trans-unit id="3fb4271848a99a415f5fac5439780d5440f9b920" translate="yes" xml:space="preserve">
          <source>The vast majority of buffer changing primitives will call &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt; in balanced pairs, once for each change, where the arguments to these hooks exactly delimit the change being made. Yet, hook functions should not rely on this always being the case, because some complex primitives call &lt;code&gt;before-change-functions&lt;/code&gt; once before making changes, and then call &lt;code&gt;after-change-functions&lt;/code&gt; zero or more times, depending on how many individual changes the primitive is making. When that happens, the arguments to &lt;code&gt;before-change-functions&lt;/code&gt; will enclose a region in which the individual changes are made, but won&amp;rsquo;t necessarily be the minimal such region, and the arguments to each successive call of &lt;code&gt;after-change-functions&lt;/code&gt; will then delimit the part of text being changed exactly. In general, we advise using either the before- or the after-change hook, but not both.</source>
          <target state="translated">The vast majority of buffer changing primitives will call &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt; in balanced pairs, once for each change, where the arguments to these hooks exactly delimit the change being made. Yet, hook functions should not rely on this always being the case, because some complex primitives call &lt;code&gt;before-change-functions&lt;/code&gt; once before making changes, and then call &lt;code&gt;after-change-functions&lt;/code&gt; zero or more times, depending on how many individual changes the primitive is making. When that happens, the arguments to &lt;code&gt;before-change-functions&lt;/code&gt; will enclose a region in which the individual changes are made, but won&amp;rsquo;t necessarily be the minimal such region, and the arguments to each successive call of &lt;code&gt;after-change-functions&lt;/code&gt; will then delimit the part of text being changed exactly. In general, we advise using either the before- or the after-change hook, but not both.</target>
        </trans-unit>
        <trans-unit id="01527b8d037e3db74e702be995e76aba34c55c3a" translate="yes" xml:space="preserve">
          <source>The vector of Lisp objects referenced by the byte code. These include symbols used as function names and variable names.</source>
          <target state="translated">The vector of Lisp objects referenced by the byte code. These include symbols used as function names and variable names.</target>
        </trans-unit>
        <trans-unit id="c3778db41acf0d35db1dc61c9cf1b4b3b4f8a61d" translate="yes" xml:space="preserve">
          <source>The vendor name. For example, &amp;lsquo;</source>
          <target state="translated">The vendor name. For example, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="3336772c213085c20a832b2612cfbefdb3b13ec1" translate="yes" xml:space="preserve">
          <source>The version number comes from the &amp;lsquo;</source>
          <target state="translated">The version number comes from the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="81a17dbb44063c857219c81f3cd4198fa63eea70" translate="yes" xml:space="preserve">
          <source>The vertical scroll position is measured in units of the normal line height, which is the height of the default font. Thus, if the value is .5, that means the window contents will be scrolled up half the normal line height. If it is 3.3, that means the window contents are scrolled up somewhat over three times the normal line height.</source>
          <target state="translated">The vertical scroll position is measured in units of the normal line height, which is the height of the default font. Thus, if the value is .5, that means the window contents will be scrolled up half the normal line height. If it is 3.3, that means the window contents are scrolled up somewhat over three times the normal line height.</target>
        </trans-unit>
        <trans-unit id="bc4829014d1d53e420832706fbc8210addcc9ffd" translate="yes" xml:space="preserve">
          <source>The very first thing this function does is run the normal hook &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see below).</source>
          <target state="translated">The very first thing this function does is run the normal hook &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see below).</target>
        </trans-unit>
        <trans-unit id="2a386d0814fb0c47f95262bcd9a80770783517ae" translate="yes" xml:space="preserve">
          <source>The virtual memory size of the process, measured in kilobytes.</source>
          <target state="translated">The virtual memory size of the process, measured in kilobytes.</target>
        </trans-unit>
        <trans-unit id="d546af21745b05bf5bc7bae48a02537d10b7c151" translate="yes" xml:space="preserve">
          <source>The visibility status of a frame is also available as a frame parameter. You can read or change it as such. See &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;. The user can also iconify and deiconify frames with the window manager. This happens below the level at which Emacs can exert any control, but Emacs does provide events that you can use to keep track of such changes. See &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;.</source>
          <target state="translated">The visibility status of a frame is also available as a frame parameter. You can read or change it as such. See &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;. The user can also iconify and deiconify frames with the window manager. This happens below the level at which Emacs can exert any control, but Emacs does provide events that you can use to keep track of such changes. See &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="50e098ac168a10d2d4a1e79562ce0e334e8bd88a" translate="yes" xml:space="preserve">
          <source>The visited file name, obtained with the &lt;code&gt;buffer-file-name&lt;/code&gt; function. See &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;.</source>
          <target state="translated">The visited file name, obtained with the &lt;code&gt;buffer-file-name&lt;/code&gt; function. See &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5f85520dd16c49b22fafbad49ad07147a119591b" translate="yes" xml:space="preserve">
          <source>The visual effect of an overlay is the same as of the corresponding text property (see &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;). However, due to a different implementation, overlays generally don&amp;rsquo;t scale well (many operations take a time that is proportional to the number of overlays in the buffer). If you need to affect the visual appearance of many portions in the buffer, we recommend using text properties.</source>
          <target state="translated">The visual effect of an overlay is the same as of the corresponding text property (see &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;). However, due to a different implementation, overlays generally don&amp;rsquo;t scale well (many operations take a time that is proportional to the number of overlays in the buffer). If you need to affect the visual appearance of many portions in the buffer, we recommend using text properties.</target>
        </trans-unit>
        <trans-unit id="d5ca138eae9cfe76bef0e2c59914224c9bdc3031" translate="yes" xml:space="preserve">
          <source>The wait functions are designed to wait for a certain amount of time to pass or until there is input. For example, you may wish to pause in the middle of a computation to allow the user time to view the display. &lt;code&gt;sit-for&lt;/code&gt; pauses and updates the screen, and returns immediately if input comes in, while &lt;code&gt;sleep-for&lt;/code&gt; pauses without updating the screen.</source>
          <target state="translated">The wait functions are designed to wait for a certain amount of time to pass or until there is input. For example, you may wish to pause in the middle of a computation to allow the user time to view the display. &lt;code&gt;sit-for&lt;/code&gt; pauses and updates the screen, and returns immediately if input comes in, while &lt;code&gt;sleep-for&lt;/code&gt; pauses without updating the screen.</target>
        </trans-unit>
        <trans-unit id="192ef2dfd536e9e70dc893e0e89a1431107ac5ac" translate="yes" xml:space="preserve">
          <source>The way to correct this is to use an uninterned symbol instead of &lt;code&gt;max&lt;/code&gt; (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;). The uninterned symbol can be bound and referred to just like any other symbol, but since it is created by &lt;code&gt;for&lt;/code&gt;, we know that it cannot already appear in the user&amp;rsquo;s program. Since it is not interned, there is no way the user can put it into the program later. It will never appear anywhere except where put by &lt;code&gt;for&lt;/code&gt;. Here is a definition of &lt;code&gt;for&lt;/code&gt; that works this way:</source>
          <target state="translated">The way to correct this is to use an uninterned symbol instead of &lt;code&gt;max&lt;/code&gt; (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;). The uninterned symbol can be bound and referred to just like any other symbol, but since it is created by &lt;code&gt;for&lt;/code&gt; , we know that it cannot already appear in the user&amp;rsquo;s program. Since it is not interned, there is no way the user can put it into the program later. It will never appear anywhere except where put by &lt;code&gt;for&lt;/code&gt; . Here is a definition of &lt;code&gt;for&lt;/code&gt; that works this way:</target>
        </trans-unit>
        <trans-unit id="66b4cae96d1e2c0bcd9a52b36cee9d786ca97469" translate="yes" xml:space="preserve">
          <source>The way to declare new customization groups is with &lt;code&gt;defgroup&lt;/code&gt;.</source>
          <target state="translated">The way to declare new customization groups is with &lt;code&gt;defgroup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db0b6d7df13b1e2fdfc4c27e9f22fde31dbc569b" translate="yes" xml:space="preserve">
          <source>The way to display something in the margins is to specify it in a margin display specification in the &lt;code&gt;display&lt;/code&gt; property of some text. This is a replacing display specification, meaning that the text you put it on does not get displayed; the margin display appears, but that text does not.</source>
          <target state="translated">The way to display something in the margins is to specify it in a margin display specification in the &lt;code&gt;display&lt;/code&gt; property of some text. This is a replacing display specification, meaning that the text you put it on does not get displayed; the margin display appears, but that text does not.</target>
        </trans-unit>
        <trans-unit id="1737239af08f996045b6fcb09811eee72ac3f86e" translate="yes" xml:space="preserve">
          <source>The way to do this is to specify the faces in the text with the special text property &lt;code&gt;font-lock-face&lt;/code&gt; (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). When Font Lock mode is enabled, this property controls the display, just like the &lt;code&gt;face&lt;/code&gt; property. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect on the display.</source>
          <target state="translated">The way to do this is to specify the faces in the text with the special text property &lt;code&gt;font-lock-face&lt;/code&gt; (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). When Font Lock mode is enabled, this property controls the display, just like the &lt;code&gt;face&lt;/code&gt; property. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect on the display.</target>
        </trans-unit>
        <trans-unit id="129aacdb8825813ce33bdb7106847a380bb1f4e6" translate="yes" xml:space="preserve">
          <source>The way to rebind a key is to change its entry in a keymap. If you change a binding in the global keymap, the change is effective in all buffers (though it has no direct effect in buffers that shadow the global binding with a local one). If you change the current buffer&amp;rsquo;s local map, that usually affects all buffers using the same major mode. The &lt;code&gt;global-set-key&lt;/code&gt; and &lt;code&gt;local-set-key&lt;/code&gt; functions are convenient interfaces for these operations (see &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Key Binding Commands&lt;/a&gt;). You can also use &lt;code&gt;define-key&lt;/code&gt;, a more general function; then you must explicitly specify the map to change.</source>
          <target state="translated">The way to rebind a key is to change its entry in a keymap. If you change a binding in the global keymap, the change is effective in all buffers (though it has no direct effect in buffers that shadow the global binding with a local one). If you change the current buffer&amp;rsquo;s local map, that usually affects all buffers using the same major mode. The &lt;code&gt;global-set-key&lt;/code&gt; and &lt;code&gt;local-set-key&lt;/code&gt; functions are convenient interfaces for these operations (see &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Key Binding Commands&lt;/a&gt;). You can also use &lt;code&gt;define-key&lt;/code&gt; , a more general function; then you must explicitly specify the map to change.</target>
        </trans-unit>
        <trans-unit id="fe05ab0a232a34266b1e0d8cdfc6c737d45d841d" translate="yes" xml:space="preserve">
          <source>The way you control explicit selective display is by replacing a newline (control-j) with a carriage return (control-m). The text that was formerly a line following that newline is now hidden. Strictly speaking, it is temporarily no longer a line at all, since only newlines can separate lines; it is now part of the previous line.</source>
          <target state="translated">The way you control explicit selective display is by replacing a newline (control-j) with a carriage return (control-m). The text that was formerly a line following that newline is now hidden. Strictly speaking, it is temporarily no longer a line at all, since only newlines can separate lines; it is now part of the previous line.</target>
        </trans-unit>
        <trans-unit id="892bdef3fcc8380be601ff3b96fc9536e8469a69" translate="yes" xml:space="preserve">
          <source>The weakness of a hash table specifies whether the presence of a key or value in the hash table preserves it from garbage collection.</source>
          <target state="translated">The weakness of a hash table specifies whether the presence of a key or value in the hash table preserves it from garbage collection.</target>
        </trans-unit>
        <trans-unit id="d6cc12223fc5458a08353a47288b23382be4b087" translate="yes" xml:space="preserve">
          <source>The widgets can specify predicates to say whether an inline value matches the widget with the &lt;code&gt;:match-inline&lt;/code&gt; element.</source>
          <target state="translated">The widgets can specify predicates to say whether an inline value matches the widget with the &lt;code&gt;:match-inline&lt;/code&gt; element.</target>
        </trans-unit>
        <trans-unit id="ed69a293e691b205905c7d5e0a4347f1d87f0d5a" translate="yes" xml:space="preserve">
          <source>The width (in pixels) of lines drawn, and outlines around solid shapes.</source>
          <target state="translated">The width (in pixels) of lines drawn, and outlines around solid shapes.</target>
        </trans-unit>
        <trans-unit id="4a1892ba0d0e173378f79f3ed678b5d7efba8a0a" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the bottom divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw bottom dividers.</source>
          <target state="translated">The width (thickness) reserved for the bottom divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw bottom dividers.</target>
        </trans-unit>
        <trans-unit id="558fa961e0191929dec1ba6cbf01d57c94178289" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the right divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw right dividers.</source>
          <target state="translated">The width (thickness) reserved for the right divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw right dividers.</target>
        </trans-unit>
        <trans-unit id="90bb0e3cf3541f9772a18bad6f13e8fc7599b3c5" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s internal border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">The width in pixels of the frame&amp;rsquo;s internal border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c0695b58e941a86963af8bdaa7c318bb86722ff6" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s outer border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">The width in pixels of the frame&amp;rsquo;s outer border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="1ad9450ad829c4af084ca6d6f4dff95662763c56" translate="yes" xml:space="preserve">
          <source>The width of the internal border of &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">The width of the internal border of &lt;var&gt;frame&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ae93b55fd23229e2027f0ffca79696be32b880e1" translate="yes" xml:space="preserve">
          <source>The width of the outer border of &lt;var&gt;frame&lt;/var&gt;. The value is meaningful for non-GTK+ X builds only.</source>
          <target state="translated">The width of the outer border of &lt;var&gt;frame&lt;/var&gt; . The value is meaningful for non-GTK+ X builds only.</target>
        </trans-unit>
        <trans-unit id="007bb5c61439f12d2ef2a7267ef1975e048fd3b0" translate="yes" xml:space="preserve">
          <source>The width of this window&amp;rsquo;s vertical scroll bar and the height of this window&amp;rsquo;s horizontal scroll bar, in pixels.</source>
          <target state="translated">The width of this window&amp;rsquo;s vertical scroll bar and the height of this window&amp;rsquo;s horizontal scroll bar, in pixels.</target>
        </trans-unit>
        <trans-unit id="e829b9ac7b5a75b53a82013fdf3f85cf151e76f0" translate="yes" xml:space="preserve">
          <source>The width of vertical scroll bars, in pixels, or &lt;code&gt;nil&lt;/code&gt; meaning to use the default width.</source>
          <target state="translated">The width of vertical scroll bars, in pixels, or &lt;code&gt;nil&lt;/code&gt; meaning to use the default width.</target>
        </trans-unit>
        <trans-unit id="e03654807eef2aa62c363739ba25e938310fc1e8" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of the font&amp;rsquo;s space character.</source>
          <target state="translated">The width, in pixels, of the font&amp;rsquo;s space character.</target>
        </trans-unit>
        <trans-unit id="1dbdff9d4f8aba85601189bb83369c69cf6d80bf" translate="yes" xml:space="preserve">
          <source>The widths of the left and right margins in this window. A value of zero means no margin.</source>
          <target state="translated">The widths of the left and right margins in this window. A value of zero means no margin.</target>
        </trans-unit>
        <trans-unit id="667e71608920d91a6815b335a2f78b9d18827f03" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; is used for obtaining parameters such as the width, the horizontal scrolling, and the display table. But &lt;code&gt;vertical-motion&lt;/code&gt; always operates on the current buffer, even if &lt;var&gt;window&lt;/var&gt; currently displays some other buffer.</source>
          <target state="translated">The window &lt;var&gt;window&lt;/var&gt; is used for obtaining parameters such as the width, the horizontal scrolling, and the display table. But &lt;code&gt;vertical-motion&lt;/code&gt; always operates on the current buffer, even if &lt;var&gt;window&lt;/var&gt; currently displays some other buffer.</target>
        </trans-unit>
        <trans-unit id="d2decde8be6ffd87e4a5ac1b11957bbacc1f4066" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; serves only to specify which display table to use. &lt;code&gt;compute-motion&lt;/code&gt; always operates on the current buffer, regardless of what buffer is displayed in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">The window &lt;var&gt;window&lt;/var&gt; serves only to specify which display table to use. &lt;code&gt;compute-motion&lt;/code&gt; always operates on the current buffer, regardless of what buffer is displayed in &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4f4813f65c74fdebbc7e8be16faa5ab31e765ada" translate="yes" xml:space="preserve">
          <source>The window configuration is not restored on error or quit, but the outside selected window &lt;em&gt;is&lt;/em&gt; reselected even on error or quit in case a &lt;code&gt;save-excursion&lt;/code&gt; is active. If the value of &lt;code&gt;edebug-save-windows&lt;/code&gt; is a list, only the listed windows are saved and restored.</source>
          <target state="translated">The window configuration is not restored on error or quit, but the outside selected window &lt;em&gt;is&lt;/em&gt; reselected even on error or quit in case a &lt;code&gt;save-excursion&lt;/code&gt; is active. If the value of &lt;code&gt;edebug-save-windows&lt;/code&gt; is a list, only the listed windows are saved and restored.</target>
        </trans-unit>
        <trans-unit id="b5e36cb2e5250fc2fc73614846caeb741168fe8f" translate="yes" xml:space="preserve">
          <source>The window in which the click occurred.</source>
          <target state="translated">The window in which the click occurred.</target>
        </trans-unit>
        <trans-unit id="43ba63357161599c3c6d640f071701fc41817fb8" translate="yes" xml:space="preserve">
          <source>The window point is established when a window is first created; it is initialized from the buffer&amp;rsquo;s point, or from the window point of another window opened on the buffer if such a window exists.</source>
          <target state="translated">The window point is established when a window is first created; it is initialized from the buffer&amp;rsquo;s point, or from the window point of another window opened on the buffer if such a window exists.</target>
        </trans-unit>
        <trans-unit id="21cd1704c6bc80f89122014e2efafdcc999cb781" translate="yes" xml:space="preserve">
          <source>The window specified by any &lt;code&gt;previous-window&lt;/code&gt;&lt;var&gt;alist&lt;/var&gt; entry, provided it is not the selected window.</source>
          <target state="translated">The window specified by any &lt;code&gt;previous-window&lt;/code&gt; &lt;var&gt;alist&lt;/var&gt; entry, provided it is not the selected window.</target>
        </trans-unit>
        <trans-unit id="7c5d6bab6152c63ed0eedf9b7490dea6279bde8a" translate="yes" xml:space="preserve">
          <source>The window start and horizontal scrolling of the source code buffer are not restored, however, so that the display remains coherent within Edebug.</source>
          <target state="translated">The window start and horizontal scrolling of the source code buffer are not restored, however, so that the display remains coherent within Edebug.</target>
        </trans-unit>
        <trans-unit id="8a0992f4eeaaa8c898270f6ac1c10aae2c8bdf2d" translate="yes" xml:space="preserve">
          <source>The window whose scroll bar was clicked on.</source>
          <target state="translated">The window whose scroll bar was clicked on.</target>
        </trans-unit>
        <trans-unit id="176c003d1370db2fba484fc39d7e42b225a06af7" translate="yes" xml:space="preserve">
          <source>The window&amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if none is specified for it.</source>
          <target state="translated">The window&amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if none is specified for it.</target>
        </trans-unit>
        <trans-unit id="d89efc64e6b638f0411a533ab926dc8cf4b43c89" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line containing &lt;code&gt;window_end_pos&lt;/code&gt;.</source>
          <target state="translated">The window-relative vertical position of the line containing &lt;code&gt;window_end_pos&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddc0c25dcfde1cf013980df2ede9f5f487a12559" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line showing the cursor as of the last redisplay that finished.</source>
          <target state="translated">The window-relative vertical position of the line showing the cursor as of the last redisplay that finished.</target>
        </trans-unit>
        <trans-unit id="19d78d69ed62dbe0c081baecf64bf39c74beb8b5" translate="yes" xml:space="preserve">
          <source>The windows in each frame are organized into a &lt;em&gt;window tree&lt;/em&gt;. See &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;. The leaf nodes of each window tree are live windows&amp;mdash;the ones actually displaying buffers. The internal nodes of the window tree are &lt;em&gt;internal windows&lt;/em&gt;, which are not live.</source>
          <target state="translated">The windows in each frame are organized into a &lt;em&gt;window tree&lt;/em&gt;. See &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;. The leaf nodes of each window tree are live windows&amp;mdash;the ones actually displaying buffers. The internal nodes of the window tree are &lt;em&gt;internal windows&lt;/em&gt;, which are not live.</target>
        </trans-unit>
        <trans-unit id="7ba5625ecf4e266603282ffe15318affa3471aef" translate="yes" xml:space="preserve">
          <source>The word &lt;em&gt;process&lt;/em&gt; usually means a running program. Emacs itself runs in a process of this sort. However, in Emacs Lisp, a process is a Lisp object that designates a subprocess created by the Emacs process. Programs such as shells, GDB, ftp, and compilers, running in subprocesses of Emacs, extend the capabilities of Emacs. An Emacs subprocess takes textual input from Emacs and returns textual output to Emacs for further manipulation. Emacs can also send signals to the subprocess.</source>
          <target state="translated">The word &lt;em&gt;process&lt;/em&gt; usually means a running program. Emacs itself runs in a process of this sort. However, in Emacs Lisp, a process is a Lisp object that designates a subprocess created by the Emacs process. Programs such as shells, GDB, ftp, and compilers, running in subprocesses of Emacs, extend the capabilities of Emacs. An Emacs subprocess takes textual input from Emacs and returns textual output to Emacs for further manipulation. Emacs can also send signals to the subprocess.</target>
        </trans-unit>
        <trans-unit id="5e33feb1b485d5b35c342b63e6368aaa73a16a60" translate="yes" xml:space="preserve">
          <source>The year, an integer typically greater than 1900.</source>
          <target state="translated">The year, an integer typically greater than 1900.</target>
        </trans-unit>
        <trans-unit id="5d422c4871acb4daa515b96859ddb6313519114b" translate="yes" xml:space="preserve">
          <source>Then find the actual matching close parenthesis by typing</source>
          <target state="translated">Then find the actual matching close parenthesis by typing</target>
        </trans-unit>
        <trans-unit id="25258eb9508f9f8c3143dbf1060b1f5a03a4190b" translate="yes" xml:space="preserve">
          <source>Then this function returns a list of directories which contains first the directory in which &lt;var&gt;image&lt;/var&gt; was found, followed by the value of &lt;code&gt;load-path&lt;/code&gt;. If &lt;var&gt;path&lt;/var&gt; is given, it is used instead of &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">Then this function returns a list of directories which contains first the directory in which &lt;var&gt;image&lt;/var&gt; was found, followed by the value of &lt;code&gt;load-path&lt;/code&gt; . If &lt;var&gt;path&lt;/var&gt; is given, it is used instead of &lt;code&gt;load-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="894cb389eb05f2c7493a2ac1931a6e04315bf08c" translate="yes" xml:space="preserve">
          <source>Then, if &lt;var&gt;condition&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; when tested, the &lt;code&gt;cond&lt;/code&gt; form returns the value of &lt;var&gt;condition&lt;/var&gt;.</source>
          <target state="translated">Then, if &lt;var&gt;condition&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; when tested, the &lt;code&gt;cond&lt;/code&gt; form returns the value of &lt;var&gt;condition&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8caa84a6ee4a8ad260f9327c1877dc18fce75afb" translate="yes" xml:space="preserve">
          <source>Then, the font specifications for all but Chinese GB2312 characters have &amp;lsquo;</source>
          <target state="translated">Then, the font specifications for all but Chinese GB2312 characters have &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="17ee68a49f1c9ee78f81e68f9f744bfe141c4a21" translate="yes" xml:space="preserve">
          <source>Then, whenever &lt;code&gt;my-mode-map&lt;/code&gt; is active, if the user types</source>
          <target state="translated">Then, whenever &lt;code&gt;my-mode-map&lt;/code&gt; is active, if the user types</target>
        </trans-unit>
        <trans-unit id="5b544e6d0a81a1f1983dd0e6865daf009408806b" translate="yes" xml:space="preserve">
          <source>There are a couple of ways in which a variable could be modified (or at least appear to be modified) without triggering a watchpoint.</source>
          <target state="translated">There are a couple of ways in which a variable could be modified (or at least appear to be modified) without triggering a watchpoint.</target>
        </trans-unit>
        <trans-unit id="4810fd34e613503da7a7271cade94d5170cbacb6" translate="yes" xml:space="preserve">
          <source>There are a number of commands devoted to the editing and recall of previous commands. The commands &lt;code&gt;repeat-complex-command&lt;/code&gt;, and &lt;code&gt;list-command-history&lt;/code&gt; are described in the user manual (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt; in</source>
          <target state="translated">There are a number of commands devoted to the editing and recall of previous commands. The commands &lt;code&gt;repeat-complex-command&lt;/code&gt; , and &lt;code&gt;list-command-history&lt;/code&gt; are described in the user manual (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="fcd6f54c3b894dd3a35a446b23aba1e8bcac6bfe" translate="yes" xml:space="preserve">
          <source>There are a number of commands devoted to the editing and recall of previous commands. The commands &lt;code&gt;repeat-complex-command&lt;/code&gt;, and &lt;code&gt;list-command-history&lt;/code&gt; are described in the user manual (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b011f7007d94c5c72274e3c8d4d061190ed0bc1" translate="yes" xml:space="preserve">
          <source>There are also some bool-vector set operation functions, described below:</source>
          <target state="translated">There are also some bool-vector set operation functions, described below:</target>
        </trans-unit>
        <trans-unit id="8bd13201286cd465fcc15dcd843023e25d6a951c" translate="yes" xml:space="preserve">
          <source>There are conventions for writing minor modes just as there are for major modes (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;). These conventions are described below. The easiest way to follow them is to use the macro &lt;code&gt;define-minor-mode&lt;/code&gt;. See &lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;Defining Minor Modes&lt;/a&gt;.</source>
          <target state="translated">There are conventions for writing minor modes just as there are for major modes (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;). These conventions are described below. The easiest way to follow them is to use the macro &lt;code&gt;define-minor-mode&lt;/code&gt; . See &lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;Defining Minor Modes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6f5a57538b1c42c6bebc04336094d61e86ca1b21" translate="yes" xml:space="preserve">
          <source>There are currently three forms of Lisp timestamps, each of which represents a number of seconds:</source>
          <target state="translated">There are currently three forms of Lisp timestamps, each of which represents a number of seconds:</target>
        </trans-unit>
        <trans-unit id="56dfc4fc368a465162c56454477eaa5687676ab1" translate="yes" xml:space="preserve">
          <source>There are four functions to convert floating-point numbers to integers; they differ in how they round. All accept an argument &lt;var&gt;number&lt;/var&gt; and an optional argument &lt;var&gt;divisor&lt;/var&gt;. Both arguments may be integers or floating-point numbers. &lt;var&gt;divisor&lt;/var&gt; may also be &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;divisor&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, these functions convert &lt;var&gt;number&lt;/var&gt; to an integer, or return it unchanged if it already is an integer. If &lt;var&gt;divisor&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they divide &lt;var&gt;number&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt; and convert the result to an integer. If &lt;var&gt;divisor&lt;/var&gt; is zero (whether integer or floating point), Emacs signals an &lt;code&gt;arith-error&lt;/code&gt; error.</source>
          <target state="translated">There are four functions to convert floating-point numbers to integers; they differ in how they round. All accept an argument &lt;var&gt;number&lt;/var&gt; and an optional argument &lt;var&gt;divisor&lt;/var&gt; . Both arguments may be integers or floating-point numbers. &lt;var&gt;divisor&lt;/var&gt; may also be &lt;code&gt;nil&lt;/code&gt; . If &lt;var&gt;divisor&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, these functions convert &lt;var&gt;number&lt;/var&gt; to an integer, or return it unchanged if it already is an integer. If &lt;var&gt;divisor&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , they divide &lt;var&gt;number&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt; and convert the result to an integer. If &lt;var&gt;divisor&lt;/var&gt; is zero (whether integer or floating point), Emacs signals an &lt;code&gt;arith-error&lt;/code&gt; error.</target>
        </trans-unit>
        <trans-unit id="d5eb98c61d7180e170b72be2864914198310f83f" translate="yes" xml:space="preserve">
          <source>There are four ways to specify text properties for text in the mode line:</source>
          <target state="translated">There are four ways to specify text properties for text in the mode line:</target>
        </trans-unit>
        <trans-unit id="a9440ba34e5f80f815e1dc28e60b578e2e89b21b" translate="yes" xml:space="preserve">
          <source>There are many other, more specialized, maps than these; in particular those associated with major and minor modes. The minibuffer uses several keymaps (see &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;). For more details on keymaps, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;.</source>
          <target state="translated">There are many other, more specialized, maps than these; in particular those associated with major and minor modes. The minibuffer uses several keymaps (see &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;). For more details on keymaps, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="070b832c129cab1c873dac5bab08fc0bc798e588" translate="yes" xml:space="preserve">
          <source>There are many separate minibuffer history lists, used for different kinds of inputs. It&amp;rsquo;s the Lisp programmer&amp;rsquo;s job to specify the right history list for each use of the minibuffer.</source>
          <target state="translated">There are many separate minibuffer history lists, used for different kinds of inputs. It&amp;rsquo;s the Lisp programmer&amp;rsquo;s job to specify the right history list for each use of the minibuffer.</target>
        </trans-unit>
        <trans-unit id="c0f9785866adf2557a41519a5ff551bf39a1bb80" translate="yes" xml:space="preserve">
          <source>There are no</source>
          <target state="translated">There are no</target>
        </trans-unit>
        <trans-unit id="efbe79c18c70e6b3a0b9604c044c9cef2637dd78" translate="yes" xml:space="preserve">
          <source>There are other properties defined for the regions of text in a button, but these are not generally interesting for typical uses.</source>
          <target state="translated">There are other properties defined for the regions of text in a button, but these are not generally interesting for typical uses.</target>
        </trans-unit>
        <trans-unit id="65617bc57347ff83b82a4dafdbca7965d572ddf3" translate="yes" xml:space="preserve">
          <source>There are other special conventions for the text in documentation strings&amp;mdash;for instance, you can refer to functions, variables, and sections of this manual. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Documentation Tips&lt;/a&gt;, for details.</source>
          <target state="translated">There are other special conventions for the text in documentation strings&amp;mdash;for instance, you can refer to functions, variables, and sections of this manual. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Documentation Tips&lt;/a&gt;, for details.</target>
        </trans-unit>
        <trans-unit id="bc70e5c922e2e49cfaf793fd3312e885eaf9157f" translate="yes" xml:space="preserve">
          <source>There are several alternatives you can use for &lt;var&gt;link-data&lt;/var&gt;:</source>
          <target state="translated">There are several alternatives you can use for &lt;var&gt;link-data&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="347f46b30b75f43e3e329a51b4f9f141a980e45a" translate="yes" xml:space="preserve">
          <source>There are several functions that take an existing completion table and return a modified version. &lt;code&gt;completion-table-case-fold&lt;/code&gt; returns a case-insensitive table. &lt;code&gt;completion-table-in-turn&lt;/code&gt; and &lt;code&gt;completion-table-merge&lt;/code&gt; combine multiple input tables in different ways. &lt;code&gt;completion-table-subvert&lt;/code&gt; alters a table to use a different initial prefix. &lt;code&gt;completion-table-with-quoting&lt;/code&gt; returns a table suitable for operating on quoted text. &lt;code&gt;completion-table-with-predicate&lt;/code&gt; filters a table with a predicate function. &lt;code&gt;completion-table-with-terminator&lt;/code&gt; adds a terminating string.</source>
          <target state="translated">There are several functions that take an existing completion table and return a modified version. &lt;code&gt;completion-table-case-fold&lt;/code&gt; returns a case-insensitive table. &lt;code&gt;completion-table-in-turn&lt;/code&gt; and &lt;code&gt;completion-table-merge&lt;/code&gt; combine multiple input tables in different ways. &lt;code&gt;completion-table-subvert&lt;/code&gt; alters a table to use a different initial prefix. &lt;code&gt;completion-table-with-quoting&lt;/code&gt; returns a table suitable for operating on quoted text. &lt;code&gt;completion-table-with-predicate&lt;/code&gt; filters a table with a predicate function. &lt;code&gt;completion-table-with-terminator&lt;/code&gt; adds a terminating string.</target>
        </trans-unit>
        <trans-unit id="c3c283f44ca32e55d1aeaa6c8ba479ebaa377c9c" translate="yes" xml:space="preserve">
          <source>There are several other variable name conventions; here is a complete list:</source>
          <target state="translated">There are several other variable name conventions; here is a complete list:</target>
        </trans-unit>
        <trans-unit id="4bb1239b76f76c5a9f69f8e0a5f058db3c2c4c76" translate="yes" xml:space="preserve">
          <source>There are several variables that control how Font Lock mode highlights text. But major modes should not set any of these variables directly. Instead, they should set &lt;code&gt;font-lock-defaults&lt;/code&gt; as a buffer-local variable. The value assigned to this variable is used, if and when Font Lock mode is enabled, to set all the other variables.</source>
          <target state="translated">There are several variables that control how Font Lock mode highlights text. But major modes should not set any of these variables directly. Instead, they should set &lt;code&gt;font-lock-defaults&lt;/code&gt; as a buffer-local variable. The value assigned to this variable is used, if and when Font Lock mode is enabled, to set all the other variables.</target>
        </trans-unit>
        <trans-unit id="3520ae182a02058f69edf04f15fb6488c0fe5433" translate="yes" xml:space="preserve">
          <source>There are several ways to explicitly specify a larger line height, either by specifying an absolute height for the display line, or by specifying vertical space. However, no matter what you specify, the actual line height can never be less than the default.</source>
          <target state="translated">There are several ways to explicitly specify a larger line height, either by specifying an absolute height for the display line, or by specifying vertical space. However, no matter what you specify, the actual line height can never be less than the default.</target>
        </trans-unit>
        <trans-unit id="81af9e15a9ba4c2165debde033a9a2d4638a848d" translate="yes" xml:space="preserve">
          <source>There are several ways to find and investigate problems in an Emacs Lisp program.</source>
          <target state="translated">There are several ways to find and investigate problems in an Emacs Lisp program.</target>
        </trans-unit>
        <trans-unit id="d3bcae2f3fa55ef2219d610a3700030045063687" translate="yes" xml:space="preserve">
          <source>There are situations in Lisp where you need to refer to the symbol itself rather than the value of that symbol. One such case is when temporarily overriding the value of a variable, which in Lisp is done with &lt;code&gt;let&lt;/code&gt;. In C sources, this is done by defining a corresponding, constant symbol, and using &lt;code&gt;specbind&lt;/code&gt;. By convention, &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; corresponds to &lt;code&gt;Vmy_lisp_variable&lt;/code&gt;; to define it, use the &lt;code&gt;DEFSYM&lt;/code&gt; macro. i.e.</source>
          <target state="translated">There are situations in Lisp where you need to refer to the symbol itself rather than the value of that symbol. One such case is when temporarily overriding the value of a variable, which in Lisp is done with &lt;code&gt;let&lt;/code&gt; . In C sources, this is done by defining a corresponding, constant symbol, and using &lt;code&gt;specbind&lt;/code&gt; . By convention, &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; corresponds to &lt;code&gt;Vmy_lisp_variable&lt;/code&gt; ; to define it, use the &lt;code&gt;DEFSYM&lt;/code&gt; macro. i.e.</target>
        </trans-unit>
        <trans-unit id="e4e5b0d0a58dbcdc60ba12438edd47d4ac5481c8" translate="yes" xml:space="preserve">
          <source>There are some file types where it is not appropriate to scan the file contents for a mode specifier. For example, a tar archive may happen to contain, near the end of the file, a member file that has a local variables section specifying a mode for that particular file. This should not be applied to the containing tar file. Similarly, a tiff image file might just happen to contain a first line that seems to match the &amp;lsquo;</source>
          <target state="translated">There are some file types where it is not appropriate to scan the file contents for a mode specifier. For example, a tar archive may happen to contain, near the end of the file, a member file that has a local variables section specifying a mode for that particular file. This should not be applied to the containing tar file. Similarly, a tiff image file might just happen to contain a first line that seems to match the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6ef12d2e37d1f84f04c09af5a59fb08332be34fe" translate="yes" xml:space="preserve">
          <source>There are some function definitions that &amp;lsquo;</source>
          <target state="translated">There are some function definitions that &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b1fc61b0494cd0a88f92c4b058e0e7bfd5a21e24" translate="yes" xml:space="preserve">
          <source>There are special functions for producing a human-readable textual description of a character for the sake of messages. See &lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;Describing Characters&lt;/a&gt;.</source>
          <target state="translated">There are special functions for producing a human-readable textual description of a character for the sake of messages. See &lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;Describing Characters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1e43a50b1dd052eabdd8e042e065f2a2ed9e7998" translate="yes" xml:space="preserve">
          <source>There are three kinds of basic values:</source>
          <target state="translated">세 가지 종류의 기본 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0735adb37bfc41b867b231242a40734a3b00756" translate="yes" xml:space="preserve">
          <source>There are three possibilities for the argument &lt;var&gt;arg-descriptor&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;arg-descriptor&lt;/var&gt; 인수에는 세 가지 가능성이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4623fb4685bbf4280a4e141ad3eab869c9975673" translate="yes" xml:space="preserve">
          <source>There are three primitives that create a new subprocess in which to run a program. One of them, &lt;code&gt;make-process&lt;/code&gt;, creates an asynchronous process and returns a process object (see &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;). The other two, &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;call-process-region&lt;/code&gt;, create a synchronous process and do not return a process object (see &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;). There are various higher-level functions that make use of these primitives to run particular types of process.</source>
          <target state="translated">프로그램을 실행할 새 하위 프로세스를 만드는 세 가지 기본 요소가 있습니다. 그중 하나 인 &lt;code&gt;make-process&lt;/code&gt; 는 비동기 프로세스를 만들고 프로세스 객체를 반환합니다 ( &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;비동기 프로세스&lt;/a&gt; 참조 ). 나머지 두 개인 &lt;code&gt;call-process&lt;/code&gt; 및 &lt;code&gt;call-process-region&lt;/code&gt; 은 동기 프로세스를 생성하고 프로세스 객체를 반환하지 않습니다 ( &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;동기 프로세스&lt;/a&gt; 참조 ). 이러한 기본 요소를 사용하여 특정 유형의 프로세스를 실행하는 다양한 상위 수준 함수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6ce9698a02eeafb78037fc69ac4b447502a2398" translate="yes" xml:space="preserve">
          <source>There are three ways to do rehighlighting of multiline constructs:</source>
          <target state="translated">여러 줄 구성을 다시 강조 표시하는 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5ae132907f4eaeb3b141a67fe192bab8554dd75" translate="yes" xml:space="preserve">
          <source>There are three ways to ensure correct identification of multiline constructs:</source>
          <target state="translated">여러 줄 구성의 올바른 식별을 보장하는 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="02b99159f172f34b42581153a35c9d9f6509e368" translate="yes" xml:space="preserve">
          <source>There are two classes of terminals: &lt;em&gt;text terminals&lt;/em&gt; and &lt;em&gt;graphical terminals&lt;/em&gt;. Text terminals are non-graphics-capable displays, including &lt;code&gt;xterm&lt;/code&gt; and other terminal emulators. On a text terminal, each Emacs frame occupies the terminal&amp;rsquo;s entire screen; although you can create additional frames and switch between them, the terminal only shows one frame at a time. Graphical terminals, on the other hand, are managed by graphical display systems such as the X Window System, which allow Emacs to show multiple frames simultaneously on the same display.</source>
          <target state="translated">터미널에는 &lt;em&gt;텍스트 터미널&lt;/em&gt; 과 &lt;em&gt;그래픽 터미널&lt;/em&gt; 의 두 가지 클래스가 있습니다 . 텍스트 터미널은 &lt;code&gt;xterm&lt;/code&gt; 및 기타 터미널 에뮬레이터를 포함하여 그래픽을 지원하지 않는 디스플레이 입니다. 텍스트 터미널에서 각 Emacs 프레임은 터미널의 전체 화면을 차지합니다. 추가 프레임을 만들고 프레임간에 전환 할 수 있지만 터미널은 한 번에 한 프레임 만 표시합니다. 반면에 그래픽 터미널은 X Window System과 같은 그래픽 디스플레이 시스템에 의해 관리됩니다.이 시스템을 통해 Emacs는 동일한 디스플레이에 여러 프레임을 동시에 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d56673e36ac18f4a7201d660191225c3ed023071" translate="yes" xml:space="preserve">
          <source>There are two convenience functions for defining tool bar items, as follows.</source>
          <target state="translated">도구 모음 항목을 정의하는 데 다음과 같은 두 가지 편의 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6713d06d362550d2fbd6bf74a5f0fde6d2bcd0fb" translate="yes" xml:space="preserve">
          <source>There are two different methods for specifying directory local variables: by putting them in a special file, or by defining a &lt;em&gt;project class&lt;/em&gt; for that directory.</source>
          <target state="translated">디렉토리 로컬 변수를 지정하는 방법에는 두 가지가 있습니다. 특수 파일에 넣거나 해당 디렉토리에 대한 &lt;em&gt;프로젝트 클래스&lt;/em&gt; 를 정의하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="7518b8878262b7af1f08215d0d225f13a54d4a54" translate="yes" xml:space="preserve">
          <source>There are two general categories of types in Emacs Lisp: those having to do with Lisp programming, and those having to do with editing. The former exist in many Lisp implementations, in one form or another. The latter are unique to Emacs Lisp.</source>
          <target state="translated">Emacs Lisp에는 Lisp 프로그래밍과 관련된 유형과 편집과 관련된 유형의 두 가지 일반적인 범주가 있습니다. 전자는 여러 Lisp 구현에 어떤 형태로든 존재합니다. 후자는 Emacs Lisp에 고유합니다.</target>
        </trans-unit>
        <trans-unit id="7780ab4bb2fd4b095c1c281e2009b2a706663d9a" translate="yes" xml:space="preserve">
          <source>There are two kinds of input you can get from the keyboard: ordinary keys, and function keys. Ordinary keys correspond to (possibly modified) characters; the events they generate are represented in Lisp as characters. The event type of a &lt;em&gt;character event&lt;/em&gt; is the character itself (an integer), which might have some modifier bits set; see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;.</source>
          <target state="translated">키보드에서 얻을 수있는 입력에는 일반 키와 기능 키의 두 가지 종류가 있습니다. 일반 키는 문자 (수정 가능)에 해당합니다. 그들이 생성하는 이벤트는 Lisp에서 문자로 표시됩니다. &lt;em&gt;문자 이벤트&lt;/em&gt; 의 이벤트 유형은 문자 자체 (정수)이며 일부 수정 자 비트가 설정되어있을 수 있습니다. &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;이벤트 분류를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="39cd2bac89b7a8134e344d2a81de8082d54c9694" translate="yes" xml:space="preserve">
          <source>There are two representations of the prefix argument: &lt;em&gt;raw&lt;/em&gt; and &lt;em&gt;numeric&lt;/em&gt;. The editor command loop uses the raw representation internally, and so do the Lisp variables that store the information, but commands can request either representation.</source>
          <target state="translated">접두사 인수에는 &lt;em&gt;raw&lt;/em&gt; 및 &lt;em&gt;numeric&lt;/em&gt; 의 두 가지 표현이 있습니다 . 편집기 명령 루프는 내부적으로 원시 표현을 사용하고 정보를 저장하는 Lisp 변수도 사용하지만 명령은 두 표현 중 하나를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bb6034776c4d0f21194c1e0588414124c802332" translate="yes" xml:space="preserve">
          <source>There are two text representations for non-</source>
          <target state="translated">두 가지 텍스트 표현이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fae1a698eafa5dc42066049ce21dee7258f1165c" translate="yes" xml:space="preserve">
          <source>There are two ways that Emacs can make a backup file:</source>
          <target state="translated">Emacs가 백업 파일을 만드는 방법에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e05d7168854ad68f1c0b5577b7d65f713b450bc4" translate="yes" xml:space="preserve">
          <source>There are two ways to drag an entire child frame with the mouse: The &lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag a frame without minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;) via the mode line area of its bottommost window. The &lt;code&gt;drag-with-header-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag the frame via the header line area of its topmost window.</source>
          <target state="translated">마우스로 전체 자식 프레임을 드래그하는 방법에는 두 가지가 있습니다. &lt;code&gt;drag-with-mode-line&lt;/code&gt; 매개 변수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 가장 아래의 모드 라인 영역을 통해 &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;미니 버퍼&lt;/a&gt; 창 ( 미니 버퍼 창 참조)없이 프레임을 드래그 할 수 있습니다. 창문. &lt;code&gt;drag-with-header-line&lt;/code&gt; 파라미터가 아닌 경우 &lt;code&gt;nil&lt;/code&gt; , 해당 최상위의 윈도우의 헤더 광고 영역을 통해 상기 프레임을 드래그 할 수있다.</target>
        </trans-unit>
        <trans-unit id="febd79069dcce3d171b21ec2da044e27843c284f" translate="yes" xml:space="preserve">
          <source>There are two ways to get out of Emacs: you can kill the Emacs job, which exits permanently, or you can suspend it, which permits you to reenter the Emacs process later. (In a graphical environment, you can of course simply switch to another application without doing anything special to Emacs, then switch back to Emacs when you want.)</source>
          <target state="translated">Emacs에서 나가는 방법에는 두 가지가 있습니다. 영구적으로 종료되는 Emacs 작업을 종료하거나 나중에 Emacs 프로세스에 다시 들어갈 수 있도록 일시 중지 할 수 있습니다. (그래픽 환경에서는 물론 Emacs에 특별한 작업을하지 않고 다른 응용 프로그램으로 간단히 전환 한 다음 원할 때 Emacs로 다시 전환 할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="91babbeb975fdf773c24f538fb1cfc649a409b06" translate="yes" xml:space="preserve">
          <source>There are two ways to set up an autoloaded function: by calling &lt;code&gt;autoload&lt;/code&gt;, and by writing a &amp;ldquo;magic&amp;rdquo; comment in the source before the real definition. &lt;code&gt;autoload&lt;/code&gt; is the low-level primitive for autoloading; any Lisp program can call &lt;code&gt;autoload&lt;/code&gt; at any time. Magic comments are the most convenient way to make a function autoload, for packages installed along with Emacs. These comments do nothing on their own, but they serve as a guide for the command &lt;code&gt;update-file-autoloads&lt;/code&gt;, which constructs calls to &lt;code&gt;autoload&lt;/code&gt; and arranges to execute them when Emacs is built.</source>
          <target state="translated">호출하여 두 자동으로 적재 기능을 설정하는 방법이 있습니다 &lt;code&gt;autoload&lt;/code&gt; , 그리고 진짜 정의하기 전에 소스의 &quot;마법&quot;코멘트를 작성하여이. &lt;code&gt;autoload&lt;/code&gt; 는 자동로드를 위한 저수준 기본 요소입니다. 모든 Lisp 프로그램은 언제든지 &lt;code&gt;autoload&lt;/code&gt; 를 호출 할 수 있습니다 . 매직 주석은 Emacs와 함께 설치된 패키지에 대해 함수를 자동로드하는 가장 편리한 방법입니다. 이 의견은 스스로 아무것도하지,하지만 그들은 명령에 대한 가이드 역할을 &lt;code&gt;update-file-autoloads&lt;/code&gt; 호출 구축, &lt;code&gt;autoload&lt;/code&gt; 이맥스가 작성 될 때 그들을 실행하고 주선합니다.</target>
        </trans-unit>
        <trans-unit id="b5a24f5d6edcb58050debdd5416633f2a78ff230" translate="yes" xml:space="preserve">
          <source>There are various defaults for how to blink each type of cursor, if the type is not mentioned as an &lt;var&gt;on-state&lt;/var&gt; here. Changes in this variable do not take effect immediately, only when you specify the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">여기에서 유형이 &lt;var&gt;on-state&lt;/var&gt; 로 언급되지 않은 경우 각 유형의 커서를 깜박이는 방법에 대한 다양한 기본값이 있습니다. 이 변수의 변경 사항은 &lt;code&gt;cursor-type&lt;/code&gt; 프레임 매개 변수 를 지정하는 경우에만 즉시 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fa4758fd3e7817469e8d029cea8975d505254e6e" translate="yes" xml:space="preserve">
          <source>There are, however, a few exceptions: it is ok to use a limited set of expressions such as &lt;code&gt;(point)&lt;/code&gt;, &lt;code&gt;(mark)&lt;/code&gt;, &lt;code&gt;(region-beginning)&lt;/code&gt;, and &lt;code&gt;(region-end)&lt;/code&gt;, because Emacs recognizes them specially and puts the expression (rather than its value) into the command history. To see whether the expression you wrote is one of these exceptions, run the command, then examine &lt;code&gt;(car command-history)&lt;/code&gt;.</source>
          <target state="translated">그러나 몇 가지 예외가 있습니다. &lt;code&gt;(point)&lt;/code&gt; , &lt;code&gt;(mark)&lt;/code&gt; , &lt;code&gt;(region-beginning)&lt;/code&gt; 및 &lt;code&gt;(region-end)&lt;/code&gt; 와 같은 제한된 표현식 세트를 사용하는 것이 좋습니다 . 값이 아닌 표현식을 명령 기록에 추가합니다. 작성한 표현식이 이러한 예외 중 하나인지 확인하려면 명령을 실행 한 다음 &lt;code&gt;(car command-history)&lt;/code&gt; 를 검사하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e9c7cb18529ed6dcc3960b26faa66bf4ad86d08" translate="yes" xml:space="preserve">
          <source>There are, in general, many buffers in an Emacs session. At any time, one of them is designated the &lt;em&gt;current buffer&lt;/em&gt;&amp;mdash;the buffer in which most editing takes place. Most of the primitives for examining or changing text operate implicitly on the current buffer (see &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;).</source>
          <target state="translated">일반적으로 Emacs 세션에는 많은 버퍼가 있습니다. 언제든지 그중 하나가 &lt;em&gt;현재 버퍼 (&lt;/em&gt; 대부분의 편집이 수행되는 &lt;em&gt;버퍼&lt;/em&gt; )로 지정 됩니다. 텍스트를 검사하거나 변경하기위한 대부분의 기본 요소는 현재 버퍼에서 암시 적으로 작동합니다 ( &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ca315d80cf52d85dc191f8a4e11596e3728e557e" translate="yes" xml:space="preserve">
          <source>There can be at most one active notification at any given time. An active notification must be removed by calling &lt;code&gt;w32-notification-close&lt;/code&gt; before a new one can be shown.</source>
          <target state="translated">주어진 시간에 최대 하나의 활성 알림이있을 수 있습니다. 새 알림을 표시하려면 먼저 &lt;code&gt;w32-notification-close&lt;/code&gt; 를 호출하여 활성 알림을 제거해야합니다 .</target>
        </trans-unit>
        <trans-unit id="652594e6285d683eae8a6b2aac6731460c3a8258" translate="yes" xml:space="preserve">
          <source>There is a name parallel between GnuTLS MAC and digest algorithms but they are separate things internally and should not be mixed.</source>
          <target state="translated">GnuTLS MAC과 다이제스트 알고리즘 사이에는 이름이 비슷하지만 내부적으로는 별개이므로 혼합해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e2aa5cf61b46410aac7def0b532cc1292ff7a176" translate="yes" xml:space="preserve">
          <source>There is also a separate global mark ring, but that is used only in a few particular user-level commands, and is not relevant to Lisp programming. So we do not describe it here.</source>
          <target state="translated">별도의 전역 표시 링도 있지만 몇 가지 특정 사용자 수준 명령에서만 사용되며 Lisp 프로그래밍과 관련이 없습니다. 따라서 여기서는 설명하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a1a9835b2deb5ae2be8528a446fb5a8f8bfc3a8" translate="yes" xml:space="preserve">
          <source>There is an anomalous case where newly inserted text at &lt;var&gt;pos&lt;/var&gt; would not inherit the &lt;code&gt;field&lt;/code&gt; property from either side. This happens if the previous character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not rear-sticky, and the following character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not front-sticky. In this case, &lt;var&gt;pos&lt;/var&gt; belongs to neither the preceding field nor the following field; the field functions treat it as belonging to an empty field whose beginning and end are both at &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;pos&lt;/var&gt; 에 새로 삽입 된 텍스트 가 양쪽 에서 &lt;code&gt;field&lt;/code&gt; 속성을 상속하지 않는 비정상적인 경우가 있습니다. 이것은 이전 캐릭터의 &lt;code&gt;field&lt;/code&gt; 속성이 후면 고정이 아니고 다음 캐릭터의 &lt;code&gt;field&lt;/code&gt; 속성이 전면 고정이 아닌 경우에 발생합니다. 이 경우 &lt;var&gt;pos&lt;/var&gt; 는 이전 필드 나 다음 필드에 속하지 않습니다. 필드 함수는 시작과 끝이 모두 &lt;var&gt;pos&lt;/var&gt; 인 빈 필드에 속하는 것으로 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="99608075f31379d3731857fc93b7b4b2ed2139ed" translate="yes" xml:space="preserve">
          <source>There is another wrinkle: because floating-point arithmetic is not exact, it is often a bad idea to check for equality of floating-point values. Usually it is better to test for approximate equality. Here&amp;rsquo;s a function to do this:</source>
          <target state="translated">또 다른 주름이 있습니다. 부동 소수점 산술이 정확하지 않기 때문에 부동 소수점 값이 같은지 확인하는 것은 종종 나쁜 생각입니다. 일반적으로 대략적인 동등성을 테스트하는 것이 좋습니다. 이를 수행하는 함수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c243b81e8c9962816c02c71e3fa1f5cc7d86fbe" translate="yes" xml:space="preserve">
          <source>There is just one situation where you should specify a string for an &lt;var&gt;initial&lt;/var&gt; argument. This is when you specify a cons cell for the &lt;var&gt;history&lt;/var&gt; argument. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;initial&lt;/var&gt; 인수에 문자열을 지정해야하는 상황이 하나뿐입니다 . 이것은 &lt;var&gt;history&lt;/var&gt; 인수에 대해 cons 셀을 지정하는 경우 입니다. &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a125144ca4e988b17612eceb6ec0c03776798e3a" translate="yes" xml:space="preserve">
          <source>There is no argument to specify the length of the char-table, because all char-tables have room for any valid character code as an index.</source>
          <target state="translated">모든 char-table은 인덱스로 유효한 문자 코드를위한 공간을 가지고 있기 때문에 char-table의 길이를 지정하는 인수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="370afa4bae6026ef7ed6e7018648381f30f86233" translate="yes" xml:space="preserve">
          <source>There is no limit on the number of iterations that may occur. The loop will continue until either &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt; or until an error or &lt;code&gt;throw&lt;/code&gt; jumps out of it (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">발생할 수있는 반복 횟수에는 제한이 없습니다. 루프는 &lt;var&gt;condition&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 로 평가 될 때까지 또는 오류가 발생하거나 &lt;code&gt;throw&lt;/code&gt; 가 발생할 때까지 계속 됩니다 ( &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exit&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2001784aa80f2afa0294b2cfd6bb448a06d77ba1" translate="yes" xml:space="preserve">
          <source>There is no primitive for creating terminal objects. Emacs creates them as needed, such as when you call &lt;code&gt;make-frame-on-display&lt;/code&gt; (described below).</source>
          <target state="translated">터미널 개체를 만들기위한 기본 요소는 없습니다. Emacs는 &lt;code&gt;make-frame-on-display&lt;/code&gt; 를 호출 할 때와 같이 필요에 따라 생성합니다 (아래 설명).</target>
        </trans-unit>
        <trans-unit id="ea7a53ff8f70c9f430428c9728e618d3bde5ce69" translate="yes" xml:space="preserve">
          <source>There is no special function to access default values in a char-table. To do that, use &lt;code&gt;char-table-range&lt;/code&gt; (see below).</source>
          <target state="translated">문자 테이블의 기본값에 액세스하는 특별한 기능은 없습니다. 그렇게하려면 &lt;code&gt;char-table-range&lt;/code&gt; 를 사용 하십시오 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="a5fad7ed1e8c3ad9f09e3903d9b1c444ed47bb43" translate="yes" xml:space="preserve">
          <source>There is no way to have required arguments following optional ones&amp;mdash;it would not make sense. To see why this must be so, suppose that &lt;code&gt;c&lt;/code&gt; in the example were optional and &lt;code&gt;d&lt;/code&gt; were required. Suppose three actual arguments are given; which variable would the third argument be for? Would it be used for the &lt;var&gt;c&lt;/var&gt;, or for &lt;var&gt;d&lt;/var&gt;? One can argue for both possibilities. Similarly, it makes no sense to have any more arguments (either required or optional) after a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument.</source>
          <target state="translated">선택적 인수 다음에 필수 인수를 가질 수있는 방법은 없습니다. 말이되지 않습니다. 이것이 왜 그렇게되어야하는지 알아 보려면 예제에서 &lt;code&gt;c&lt;/code&gt; 가 선택 사항이고 &lt;code&gt;d&lt;/code&gt; 가 필수 라고 가정 합니다. 세 가지 실제 인수가 주어진다고 가정하십시오. 세 번째 인수는 어떤 변수에 해당합니까? 이것은 위해 사용되는 &lt;var&gt;c&lt;/var&gt; 에 대한, 또는 &lt;var&gt;d&lt;/var&gt; ? 두 가지 가능성을 모두 주장 할 수 있습니다. 마찬가지로 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 인수 뒤에 더 이상 인수 (필수 또는 선택)를 갖는 것은 의미가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="c3e4e82ed3441b855ea25aedc8368e992146a44d" translate="yes" xml:space="preserve">
          <source>There is no way to share structure between two hash tables, the way two alists can share a common tail.</source>
          <target state="translated">두 개의 alist가 공통 꼬리를 공유 할 수있는 방식과 같이 두 해시 테이블간에 구조를 공유 할 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="8e7bc00f4cbe042c39601255bf67d8ad682c7e42" translate="yes" xml:space="preserve">
          <source>There is no way to specify two different buttons with different actions.</source>
          <target state="translated">동작이 다른 두 개의 다른 버튼을 지정할 수있는 방법은 없습니다.</target>
        </trans-unit>
        <trans-unit id="61dd589ffa94add83c99de7478c67bd1bb20c561" translate="yes" xml:space="preserve">
          <source>There is one exception: if the value of &lt;var&gt;symbol&lt;/var&gt; is a string, it is displayed verbatim: the &lt;code&gt;%&lt;/code&gt;-constructs are not recognized.</source>
          <target state="translated">한 가지 예외가 있습니다. &lt;var&gt;symbol&lt;/var&gt; 의 값이 문자열이면 그대로 표시됩니다. &lt;code&gt;%&lt;/code&gt; -constructs는 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bc8d78c4efd733708bc3daa467d344b184d4f9d7" translate="yes" xml:space="preserve">
          <source>There should be no newlines in any of these strings.</source>
          <target state="translated">이러한 문자열에는 줄 바꿈이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="236a32def63c3e13f6b88accb492b3b35fcd5746" translate="yes" xml:space="preserve">
          <source>Therefore,</source>
          <target state="translated">Therefore,</target>
        </trans-unit>
        <trans-unit id="4a5ccb0d8538fcc42f2c57dd7658bc1aa97f78f2" translate="yes" xml:space="preserve">
          <source>Therefore, avoid binding a variable more than once in a single &lt;code&gt;let&lt;/code&gt; form.</source>
          <target state="translated">따라서 단일 &lt;code&gt;let&lt;/code&gt; 양식 에서 변수를 두 번 이상 바인딩하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="3f0c4931ff9ec7321b627fb38158d861e1342e80" translate="yes" xml:space="preserve">
          <source>Therefore, we recommend that your module functions check for nonlocal exit conditions and recover from them, using the functions described below.</source>
          <target state="translated">따라서 아래 설명 된 기능을 사용하여 모듈 함수가 비 로컬 종료 조건을 확인하고 복구하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="acdd2f9e8b919a1eaea822bd88c17593f336892c" translate="yes" xml:space="preserve">
          <source>Therefore, with an asynchronous subprocess, if at all possible, use a coding system which determines both the character code conversion and the end of line conversion&amp;mdash;that is, one like &lt;code&gt;latin-1-unix&lt;/code&gt;, rather than &lt;code&gt;undecided&lt;/code&gt; or &lt;code&gt;latin-1&lt;/code&gt;.</source>
          <target state="translated">따라서 비동기 하위 프로세스를 사용하는 경우 가능하면 문자 코드 변환과 줄 끝 변환을 모두 결정하는 코딩 시스템을 사용하십시오. 즉, &lt;code&gt;undecided&lt;/code&gt; 또는 &lt;code&gt;latin-1&lt;/code&gt; 이 아니라 &lt;code&gt;latin-1-unix&lt;/code&gt; 와 같은 것 입니다.</target>
        </trans-unit>
        <trans-unit id="75c7cc98cf6082a937f2f125bb7ef9641a0a7f04" translate="yes" xml:space="preserve">
          <source>Therefore, you must define an Edebug specification for each macro that Edebug will encounter, to explain the format of calls to that macro. To do this, add a &lt;code&gt;debug&lt;/code&gt; declaration to the macro definition. Here is a simple example that shows the specification for the &lt;code&gt;for&lt;/code&gt; example macro (see &lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;Argument Evaluation&lt;/a&gt;).</source>
          <target state="translated">따라서 해당 매크로에 대한 호출 형식을 설명하기 위해 Edebug가 접하게 될 각 매크로에 대해 Edebug 사양을 정의해야합니다. 이렇게하려면 매크로 정의에 &lt;code&gt;debug&lt;/code&gt; 선언을 추가합니다 . 다음은 예제 매크로에 &lt;code&gt;for&lt;/code&gt; 사양을 보여주는 간단한 예입니다 ( &lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;인수 평가&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="49ef1a726d3cde715758037bc20ad098d7916e7d" translate="yes" xml:space="preserve">
          <source>Therefore, you should avoid side effects in computation of the macro expansion, unless you really know what you are doing.</source>
          <target state="translated">따라서 실제로 수행중인 작업을 알지 못하는 경우 매크로 확장 계산시 부작용을 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="2acdaf6815658bc6863a95aee2b071c2d08ae394" translate="yes" xml:space="preserve">
          <source>These &lt;em&gt;adjustments&lt;/em&gt; of point that ended up in the middle of invisible text can be disabled by setting &lt;code&gt;disable-point-adjustment&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;.</source>
          <target state="translated">보이지 않는 텍스트 중간에있는 이러한 포인트 &lt;em&gt;조정&lt;/em&gt; 은 &lt;code&gt;disable-point-adjustment&lt;/code&gt; 를 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값 으로 설정하여 비활성화 할 수 있습니다 . &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;포인트 조정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8564c8c52bb26dff06c342dbcb38aa25ab8d1b9" translate="yes" xml:space="preserve">
          <source>These Edebug commands let you view aspects of the buffer and window status as they were before entry to Edebug. The outside window configuration is the collection of windows and contents that were in effect outside of Edebug.</source>
          <target state="translated">이러한 Edebug 명령을 사용하면 Edebug에 들어가기 전의 버퍼 및 창 상태를 볼 수 있습니다. 외부 창 구성은 Edebug 외부에 적용된 창 및 내용의 모음입니다.</target>
        </trans-unit>
        <trans-unit id="6453b0933bfa540398285ce050210e845ff2ceb3" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, adding it to &lt;var&gt;ewoc&lt;/var&gt; before or after &lt;var&gt;node&lt;/var&gt;, respectively.</source>
          <target state="translated">이것들은 &lt;var&gt;data&lt;/var&gt; 를 캡슐화하는 새로운 노드 를 추가하고 , 각각 &lt;var&gt;node&lt;/var&gt; 전후 에 &lt;var&gt;ewoc&lt;/var&gt; 에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="cceb809aac53f3844ad4768044a343487be9a561" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, putting it, respectively, at the beginning or end of &lt;var&gt;ewoc&lt;/var&gt;&amp;rsquo;s chain of nodes.</source>
          <target state="translated">이렇게하면 &lt;var&gt;data&lt;/var&gt; 캡슐화하는 새 노드가 추가되어 각각 &lt;var&gt;ewoc&lt;/var&gt; 노드 체인의 시작 또는 끝에 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="9ab0fb39b092432c876efaa650e2a9f9b04d1bbe" translate="yes" xml:space="preserve">
          <source>These additional functions are useful for creating and operating on network connections. Note that they are supported only on some systems.</source>
          <target state="translated">이러한 추가 기능은 네트워크 연결을 만들고 운영하는 데 유용합니다. 일부 시스템에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="2c532782eb32e3923cdfc2475afae8a2de94759f" translate="yes" xml:space="preserve">
          <source>These all match the empty string, but only in specific places.</source>
          <target state="translated">이들은 모두 빈 문자열과 일치하지만 특정 위치에서만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="f41713a72eb6ace454547fa2e43e197443fe335c" translate="yes" xml:space="preserve">
          <source>These are &lt;em&gt;non-greedy&lt;/em&gt; variants of the operators &amp;lsquo;</source>
          <target state="translated">이들은 &lt;em&gt;비 욕심&lt;/em&gt; '연산자의 변형</target>
        </trans-unit>
        <trans-unit id="05a64b60dec8513fc7fc45aa9b2b7f8fcbfea952" translate="yes" xml:space="preserve">
          <source>These are commands and functions for locating and operating on buttons in an Emacs buffer.</source>
          <target state="translated">Emacs 버퍼의 버튼을 찾고 조작하기위한 명령 및 기능입니다.</target>
        </trans-unit>
        <trans-unit id="a25be8cdc54fda5fa4fb98a074855d8423e41aea" translate="yes" xml:space="preserve">
          <source>These are functions for getting and setting properties of buttons. Often these are used by a button&amp;rsquo;s invocation function to determine what to do.</source>
          <target state="translated">버튼의 속성을 가져오고 설정하는 기능입니다. 종종 버튼의 호출 함수에서 수행 할 작업을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d1b514a069d836860d7af7a1feabca32dc715f0b" translate="yes" xml:space="preserve">
          <source>These are handled by &lt;code&gt;serial-process-configure&lt;/code&gt;, which is called by &lt;code&gt;make-serial-process&lt;/code&gt;.</source>
          <target state="translated">이것들은 &lt;code&gt;make-serial-process&lt;/code&gt; 에 의해 호출 되는 &lt;code&gt;serial-process-configure&lt;/code&gt; 에 의해 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="43e0a28142decb2dd4f625cb10b5b79d2323f33c" translate="yes" xml:space="preserve">
          <source>These are not all the keymaps you would see in actuality.</source>
          <target state="translated">이것은 실제로 볼 수있는 모든 키맵이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="bea269feb73538722101398f683861482dfa4553" translate="yes" xml:space="preserve">
          <source>These are the actual column and row coordinate numbers of the glyph under the &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; position. If &lt;var&gt;x&lt;/var&gt; lies beyond the last column of actual text on its line, &lt;var&gt;col&lt;/var&gt; is reported by adding fictional extra columns that have the default character width. Row 0 is taken to be the header line if the window has one, or Row 1 if the window also has the tab line, or the topmost row of the text area otherwise. Column 0 is taken to be the leftmost column of the text area for clicks on a window text area, or the leftmost mode line or header line column for clicks there. For clicks on fringes or vertical borders, these have no meaningful data. For clicks on margins, &lt;var&gt;col&lt;/var&gt; is measured from the left edge of the margin area and &lt;var&gt;row&lt;/var&gt; is measured from the top of the margin area.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; 위치 아래에있는 글리프의 실제 열 및 행 좌표 번호입니다 . 경우 &lt;var&gt;x&lt;/var&gt; 제품 라인에 실제 텍스트의 마지막 열 넘어 거짓말은, &lt;var&gt;col&lt;/var&gt; 기본 문자 폭이 소설 여분의 열을 추가로보고됩니다. 창에 하나가 있으면 행 0이 헤더 행이되고, 창에 탭 행이 있으면 행 1이, 그렇지 않으면 텍스트 영역의 맨 위 행이됩니다. 열 0은 창 텍스트 영역에 대한 클릭의 경우 텍스트 영역의 가장 왼쪽 열로, 여기에서 클릭하는 경우 가장 왼쪽 모드 행 또는 헤더 행 열이됩니다. 언저리 나 세로 테두리를 클릭하는 경우 의미있는 데이터가 없습니다. 여백 클릭 의 경우 여백 영역의 왼쪽 가장자리에서 &lt;var&gt;col&lt;/var&gt; 이 측정되고 &lt;var&gt;row&lt;/var&gt; 은 여백 영역의 상단에서 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="b6710b3c7596b8062fe07c6ef077774336111b3b" translate="yes" xml:space="preserve">
          <source>These are the basic trigonometric functions, with argument &lt;var&gt;arg&lt;/var&gt; measured in radians.</source>
          <target state="translated">이것은 라디안으로 측정 된 인수 &lt;var&gt;arg&lt;/var&gt; 와 함께 기본 삼각 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="3156ee651cfae432e445cac09c15634298d44340" translate="yes" xml:space="preserve">
          <source>These are the pixel coordinates of the click, relative to the top left corner of &lt;var&gt;object&lt;/var&gt;, which is &lt;code&gt;(0 . 0)&lt;/code&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, which stands for a buffer, the coordinates are relative to the top left corner of the character glyph clicked on.</source>
          <target state="translated">이는 &lt;var&gt;object&lt;/var&gt; 의 왼쪽 상단 모서리를 기준으로 한 클릭의 픽셀 좌표 이며 &lt;code&gt;(0 . 0)&lt;/code&gt; 입니다. 경우 &lt;var&gt;object&lt;/var&gt; 인 &lt;code&gt;nil&lt;/code&gt; 버퍼 약자, 좌표 가기 상대 문자 글리프의 코너 클릭 남아있다.</target>
        </trans-unit>
        <trans-unit id="44037f1bfc96fc4c3fcece5a2260c354838848ef" translate="yes" xml:space="preserve">
          <source>These are the pixel width and height of &lt;var&gt;object&lt;/var&gt; or, if this is &lt;code&gt;nil&lt;/code&gt;, those of the character glyph clicked on.</source>
          <target state="translated">이것은 &lt;var&gt;object&lt;/var&gt; 의 픽셀 너비와 높이 또는 이것이 &lt;code&gt;nil&lt;/code&gt; 인 경우 클릭 된 문자 글리프의 높이입니다 .</target>
        </trans-unit>
        <trans-unit id="aaa95e66e38549b3b4cfab7bd5de76818d93641c" translate="yes" xml:space="preserve">
          <source>These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</source>
          <target state="translated">버퍼의 텍스트를 검색하기위한 기본 함수입니다. 프로그램에서 사용하기위한 것이지만 대화식으로 호출 할 수 있습니다. 그렇게하면 검색 문자열을 입력하라는 메시지가 표시됩니다. 인수 &lt;var&gt;limit&lt;/var&gt; 및 &lt;var&gt;noerror&lt;/var&gt; 는 &lt;code&gt;nil&lt;/code&gt; 이고 &lt;var&gt;repeat&lt;/var&gt; 는 1입니다. 대화 형 검색에 대한 자세한 내용은의 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;검색 및 바꾸기&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="21e98ec803d85a1e3f1c4b28670195c47feec98b" translate="yes" xml:space="preserve">
          <source>These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f6ecbf809bb173225aa25ef24cd83076b55357" translate="yes" xml:space="preserve">
          <source>These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt;, and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="translated">이들은 &lt;code&gt;eval-expression&lt;/code&gt; 에서 사용되는 &lt;code&gt;print-level&lt;/code&gt; &lt;code&gt;print-length&lt;/code&gt; 및 인쇄 수준 값 이며, 따라서 많은 대화식 평가 명령에서 간접적으로 사용합니다 ( &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Emacs-Lisp 표현식 평가&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="94ec34944edb4cf1176cf7c8771ec808b5fe1d62" translate="yes" xml:space="preserve">
          <source>These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt;, and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16da5f24988d3dc8397faf47e6b65dae11be9561" translate="yes" xml:space="preserve">
          <source>These commands find the file that ought to contain a function&amp;rsquo;s definition using &lt;code&gt;locate-library&lt;/code&gt;; if that finds no file, they expand the definition file name relative to the directory of the file that contains the &lt;code&gt;declare-function&lt;/code&gt; call.</source>
          <target state="translated">이 명령은 &lt;code&gt;locate-library&lt;/code&gt; 사용하여 함수의 정의를 포함해야하는 파일을 찾습니다 . 파일을 찾지 못하면 &lt;code&gt;declare-function&lt;/code&gt; 호출 을 포함하는 파일의 디렉토리에 상대적인 정의 파일 이름을 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="9610813d55354bbe4e5030f270dfa5ba887ef1c1" translate="yes" xml:space="preserve">
          <source>These commands may fail to work as expected in case of nonlocal exit, as that can bypass the temporary breakpoint where you expected the program to stop.</source>
          <target state="translated">이러한 명령은 프로그램이 중지 될 것으로 예상했던 임시 중단 점을 우회 할 수 있으므로 로컬이 아닌 종료의 경우 예상대로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="652e15cb81b20860fa9afbd7456c6600d4924dc7" translate="yes" xml:space="preserve">
          <source>These commands, primarily for interactive use, act based on the indentation in the text.</source>
          <target state="translated">주로 대화 형 사용을위한 이러한 명령은 텍스트의 들여 쓰기를 기반으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9afc92acf428ab9dda92d38a5fa15921e29d7751" translate="yes" xml:space="preserve">
          <source>These constants are fundamentally different from the constants defined using the &lt;code&gt;defconst&lt;/code&gt; special form (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). A &lt;code&gt;defconst&lt;/code&gt; form serves to inform human readers that you do not intend to change the value of a variable, but Emacs does not raise an error if you actually change it.</source>
          <target state="translated">이러한 상수는 &lt;code&gt;defconst&lt;/code&gt; 특수 형식을 사용하여 정의 된 상수와 근본적으로 다릅니다 ( &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;변수 정의&lt;/a&gt; 참조 ). &lt;code&gt;defconst&lt;/code&gt; 의 형태는 변수의 값을 변경하려고하지 않는 것이 인간의 독자들에게 알려주는 역할을하지만, 실제로 그것을 변경하면 이맥스는 오류를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9e556f07147f8ec31bdf6d5c6a298d8b46cf7c9" translate="yes" xml:space="preserve">
          <source>These definitions also act as guides for programming tools. For example, the</source>
          <target state="translated">이러한 정의는 프로그래밍 도구의 가이드 역할도합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="8a8338c7500ec00a26cdd8a7454fff6a72f07f61" translate="yes" xml:space="preserve">
          <source>These escape sequences may also be used in strings. See &lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;Non-ASCII in Strings&lt;/a&gt;.</source>
          <target state="translated">이러한 이스케이프 시퀀스는 문자열에서도 사용할 수 있습니다. &lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;문자열의 비 ASCII를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1fe77a489c5367bea12d3ad180626352917c22f7" translate="yes" xml:space="preserve">
          <source>These events are generated when the Emacs process receives the signals &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt;. They contain no additional data because signals do not carry additional information. They can be useful for debugging (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;).</source>
          <target state="translated">이 이벤트는 Emacs 프로세스가 &lt;code&gt;SIGUSR1&lt;/code&gt; 및 &lt;code&gt;SIGUSR2&lt;/code&gt; 신호를 수신 할 때 생성됩니다 . 신호는 추가 정보를 전달하지 않기 때문에 추가 데이터를 포함하지 않습니다. 디버깅에 유용 할 수 있습니다 ( &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;오류 디버깅&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4ed1d20ada108250ff1fdf53243d88eb2ca0e4bb" translate="yes" xml:space="preserve">
          <source>These examples show typical uses of &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">다음 예는 &lt;code&gt;error&lt;/code&gt; 일반적인 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7371eee8b69413ed2418406d7a6e8607e5619fd4" translate="yes" xml:space="preserve">
          <source>These facilities provide information about which version of Emacs is in use.</source>
          <target state="translated">이러한 기능은 사용중인 Emacs 버전에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5307fb7809a0088f52c378521717d0b834ea65f4" translate="yes" xml:space="preserve">
          <source>These features permit you to write code to be evaluated during compilation of a program.</source>
          <target state="translated">이러한 기능을 사용하면 프로그램을 컴파일하는 동안 평가할 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64695ab218480c1570234a3c90fd0da8fa46b8eb" translate="yes" xml:space="preserve">
          <source>These fields are only used in an indirect buffer, or in a buffer that is the base of an indirect buffer. Each holds a marker that records &lt;code&gt;pt&lt;/code&gt;, &lt;code&gt;begv&lt;/code&gt;, and &lt;code&gt;zv&lt;/code&gt; respectively, for this buffer when the buffer is not current.</source>
          <target state="translated">이러한 필드는 간접 버퍼 또는 간접 버퍼의 기본 인 버퍼에서만 사용됩니다. 각각의 레코드가 마커를 보유 &lt;code&gt;pt&lt;/code&gt; , &lt;code&gt;begv&lt;/code&gt; 을 하고 &lt;code&gt;zv&lt;/code&gt; 버퍼가 현재 없을 때이 버퍼 각각.</target>
        </trans-unit>
        <trans-unit id="32273c814e3a6d721ce29c67960251f2a5c93194" translate="yes" xml:space="preserve">
          <source>These fields count the number of buffer-modification events performed in this buffer. &lt;code&gt;modiff&lt;/code&gt; is incremented after each buffer-modification event, and is never otherwise changed; &lt;code&gt;save_modiff&lt;/code&gt; contains the value of &lt;code&gt;modiff&lt;/code&gt; the last time the buffer was visited or saved; &lt;code&gt;chars_modiff&lt;/code&gt; counts only modifications to the characters in the buffer, ignoring all other kinds of changes (such as text properties); and &lt;code&gt;overlay_modiff&lt;/code&gt; counts only modifications to the buffer&amp;rsquo;s overlays.</source>
          <target state="translated">이 필드는이 버퍼에서 수행 된 버퍼 수정 이벤트의 수를 계산합니다. &lt;code&gt;modiff&lt;/code&gt; 는 각 버퍼 수정 이벤트 후에 증가하며 달리 변경되지 않습니다. &lt;code&gt;save_modiff&lt;/code&gt; 는 버퍼가 마지막으로 방문 또는 저장되었을 때 &lt;code&gt;modiff&lt;/code&gt; 의 값을 포함합니다 . &lt;code&gt;chars_modiff&lt;/code&gt; 는 버퍼의 문자에 대한 수정 만 계산하고 다른 모든 종류의 변경 (예 : 텍스트 속성)은 무시합니다. 및 &lt;code&gt;overlay_modiff&lt;/code&gt; 는 버퍼의 오버레이에 대한 수정 만 계산합니다.</target>
        </trans-unit>
        <trans-unit id="6844a9a43b79ccec05a390c8b25f33aea98210e1" translate="yes" xml:space="preserve">
          <source>These fields hold, respectively, a list of overlays that end at or before the current overlay center, and a list of overlays that end after the current overlay center. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;. &lt;code&gt;overlays_before&lt;/code&gt; is sorted in order of decreasing end position, and &lt;code&gt;overlays_after&lt;/code&gt; is sorted in order of increasing beginning position.</source>
          <target state="translated">이러한 필드에는 각각 현재 오버레이 중심 또는 그 이전에 끝나는 오버레이 목록과 현재 오버레이 중심 이후에 끝나는 오버레이 목록이 있습니다. &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;오버레이 관리를&lt;/a&gt; 참조하십시오 . &lt;code&gt;overlays_before&lt;/code&gt; 는 끝 위치가 내림차순으로 정렬되고, &lt;code&gt;overlays_after&lt;/code&gt; 는 시작 위치가 증가하는 순서로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="41d5d75a953e2e4c59e81e7694f747e4614197bb" translate="yes" xml:space="preserve">
          <source>These fields store the buffer&amp;rsquo;s local keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;), abbrev table (see &lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev Tables&lt;/a&gt;), syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;), category table (see &lt;a href=&quot;categories#Categories&quot;&gt;Categories&lt;/a&gt;), and display table (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">이러한 필드는 버퍼의 로컬 키맵 ( &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt; 참조 ), abbrev 테이블 ( &lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev 테이블&lt;/a&gt; 참조 ), 구문 테이블 ( &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt; 참조 ), 범주 테이블 ( &lt;a href=&quot;categories#Categories&quot;&gt;Categories&lt;/a&gt; 참조 ) 및 디스플레이 테이블 ( &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt; 참조 )을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="caefee5d23d6c6c86af8afeee33d761f23111f61" translate="yes" xml:space="preserve">
          <source>These fields store the conversion tables for converting text to lower case, upper case, and for canonicalizing text for case-fold search. See &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;.</source>
          <target state="translated">이러한 필드는 텍스트를 소문자, 대문자로 변환하고 대소 문자 구분 검색을 위해 텍스트를 표준화하기위한 변환 테이블을 저장합니다. &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;케이스 테이블을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7356bdab197c4b307f4273606b00e5f3504341eb" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have the additional prefix &lt;code&gt;buffer-&lt;/code&gt; and have underscores replaced with dashes. For instance, &lt;code&gt;undo_list&lt;/code&gt; stores the value of &lt;code&gt;buffer-undo-list&lt;/code&gt;.</source>
          <target state="translated">이러한 필드는 자동으로 버퍼 로컬 ( &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;버퍼 로컬 변수&lt;/a&gt; 참조) 인 Lisp 변수의 값을 저장하며 , 해당 변수 이름에는 추가 접두어 &lt;code&gt;buffer-&lt;/code&gt; 가 있고 밑줄이 대시로 대체됩니다. 예를 들어 &lt;code&gt;undo_list&lt;/code&gt; 는 &lt;code&gt;buffer-undo-list&lt;/code&gt; 값을 저장 합니다 .</target>
        </trans-unit>
        <trans-unit id="c066cf74888d99cf9151237fbea57958b8cb93e2" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have underscores replaced with dashes. For instance, &lt;code&gt;mode_line_format&lt;/code&gt; stores the value of &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">이러한 필드는 자동으로 버퍼 로컬 ( &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;버퍼 로컬 변수&lt;/a&gt; 참조) 인 Lisp 변수의 값을 저장하며 , 해당 변수 이름에는 대시로 대체 된 밑줄이 있습니다. 예를 들어 &lt;code&gt;mode_line_format&lt;/code&gt; 은 &lt;code&gt;mode-line-format&lt;/code&gt; 값을 저장 합니다 .</target>
        </trans-unit>
        <trans-unit id="fb8146d57fbe325b7f14b432b9d92bc60b3cfeea" translate="yes" xml:space="preserve">
          <source>These frame parameters control the use of fonts and colors.</source>
          <target state="translated">이러한 프레임 매개 변수는 글꼴 및 색상 사용을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="75cd82a0c0e58c25cdc9b6bacbe21efea6ec7f69" translate="yes" xml:space="preserve">
          <source>These frame parameters enable or disable various parts of the frame, or control their sizes.</source>
          <target state="translated">이러한 프레임 매개 변수는 프레임의 다양한 부분을 활성화 또는 비활성화하거나 크기를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="d255f11855dcf4a52f043d8501aaa97f70e52f62" translate="yes" xml:space="preserve">
          <source>These frame parameters give the most basic information about the frame. &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are meaningful on all terminals.</source>
          <target state="translated">이러한 프레임 매개 변수는 프레임에 대한 가장 기본적인 정보를 제공합니다. &lt;code&gt;title&lt;/code&gt; 과 &lt;code&gt;name&lt;/code&gt; 은 모든 터미널에서 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c680cf74be3c7198bef700334e34054ecd3a7e0" translate="yes" xml:space="preserve">
          <source>These frame parameters, meaningful on all kinds of terminals, deal with which buffers have been, or should, be displayed in the frame.</source>
          <target state="translated">모든 종류의 터미널에서 의미있는 이러한 프레임 매개 변수는 프레임에 표시되었거나 표시되어야하는 버퍼를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="6c15e83c2865f543ed1b272587e6e144469be662" translate="yes" xml:space="preserve">
          <source>These functions accept a display (either a frame or the name of a terminal) as an optional argument. We hope in the future to make Emacs support different colors on different text terminals; then this argument will specify which terminal to operate on (the default being the selected frame&amp;rsquo;s terminal; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). At present, though, the &lt;var&gt;frame&lt;/var&gt; argument has no effect.</source>
          <target state="translated">이러한 함수는 디스플레이 (프레임 또는 터미널 이름)를 선택적 인수로 허용합니다. 우리는 미래에 Emacs가 다른 텍스트 터미널에서 다른 색상을 지원하도록 만들기를 희망합니다. 그러면이 인수는 작동 할 터미널을 지정합니다 (기본값은 선택한 프레임의 터미널입니다. &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;입력 포커스&lt;/a&gt; 참조 ). 그러나 현재 &lt;var&gt;frame&lt;/var&gt; 인수는 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="91e12a819cc188763f60c0b340292fb53a08ac26" translate="yes" xml:space="preserve">
          <source>These functions access and select minibuffer windows, test whether they are active and control how they get resized.</source>
          <target state="translated">이 함수는 미니 버퍼 창에 액세스하여 선택하고, 활성 상태인지 테스트하고 크기 조정 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="121a5761d8b20b0742174be73c6b20355bf2397e" translate="yes" xml:space="preserve">
          <source>These functions access the minibuffer prompt and contents.</source>
          <target state="translated">이 함수는 미니 버퍼 프롬프트 및 내용에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="8471e7b0600804b60a50e9b8512731d75d72de26" translate="yes" xml:space="preserve">
          <source>These functions and variables deal with recursive minibuffers (see &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;):</source>
          <target state="translated">다음 함수와 변수는 재귀 미니 버퍼를 다룹니다 ( &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;재귀 편집&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0553c0ae5b9ff8a094605fff6f3203bf3cf7f9a6" translate="yes" xml:space="preserve">
          <source>These functions and variables give information about the total amount of memory allocation that Emacs has done, broken down by data type. Note the difference between these and the values returned by &lt;code&gt;garbage-collect&lt;/code&gt;; those count objects that currently exist, but these count the number or size of all allocations, including those for objects that have since been freed.</source>
          <target state="translated">이 함수와 변수는 Emacs가 수행 한 총 메모리 할당량에 대한 정보를 데이터 유형별로 분류하여 제공합니다. 이러한 값과 &lt;code&gt;garbage-collect&lt;/code&gt; 에서 반환 된 값의 차이에 유의하십시오 . 현재 존재하는 개체 수를 계산하지만 이후 해제 된 개체에 대한 할당을 포함하여 모든 할당의 수 또는 크기를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="6fc606e7b511561a87e15edff497fda623372a9b" translate="yes" xml:space="preserve">
          <source>These functions and variables provide access to the kill ring at a lower level, but are still convenient for use in Lisp programs, because they take care of interaction with window system selections (see &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;).</source>
          <target state="translated">이러한 함수와 변수는 더 낮은 수준에서 킬 링에 대한 액세스를 제공하지만 Windows 시스템 선택과의 상호 작용을 처리하기 때문에 Lisp 프로그램에서 사용하기에 여전히 편리합니다 ( &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;윈도우 시스템 선택&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="57edc7f3b602347790883112e32461c39a8b215d" translate="yes" xml:space="preserve">
          <source>These functions are called with no arguments. They can access the command-line argument under consideration through the variable &lt;code&gt;argi&lt;/code&gt;, which is bound temporarily at this point. The remaining arguments (not including the current one) are in the variable &lt;code&gt;command-line-args-left&lt;/code&gt;.</source>
          <target state="translated">이러한 함수는 인수없이 호출됩니다. 이 시점에서 임시로 바인딩 된 변수 &lt;code&gt;argi&lt;/code&gt; 를 통해 고려중인 명령 줄 인수에 액세스 할 수 있습니다 . 나머지 인수 (현재 인수 제외)는 변수 &lt;code&gt;command-line-args-left&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="97f83cee255103144d520b839f7f8062dbf43bf9" translate="yes" xml:space="preserve">
          <source>These functions are useful for decoding scroll bar events.</source>
          <target state="translated">이러한 함수는 스크롤 막대 이벤트를 디코딩하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c8f58ab0f0faf7770a13f5fb5b71914974523873" translate="yes" xml:space="preserve">
          <source>These functions compute a position list given particular buffer position or screen position. You can access the data in this position list with the functions described above.</source>
          <target state="translated">이 함수는 특정 버퍼 위치 또는 화면 위치가 지정된 위치 목록을 계산합니다. 위에서 설명한 기능을 사용하여이 위치 목록의 데이터에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22c7dfe3c796bddf45291a7df571d895a905f8ec" translate="yes" xml:space="preserve">
          <source>These functions convert events, key sequences, or characters to textual descriptions. These descriptions are useful for including arbitrary text characters or key sequences in messages, because they convert non-printing and whitespace characters to sequences of printing characters. The description of a non-whitespace printing character is the character itself.</source>
          <target state="translated">이러한 함수는 이벤트, 키 시퀀스 또는 문자를 텍스트 설명으로 변환합니다. 이러한 설명은 인쇄되지 않는 문자와 공백 문자를 일련의 인쇄 문자로 변환하기 때문에 메시지에 임의의 텍스트 문자 또는 키 시퀀스를 포함하는 데 유용합니다. 공백이 아닌 인쇄 문자에 대한 설명은 문자 자체입니다.</target>
        </trans-unit>
        <trans-unit id="32854e57fd4225961eb6f7a796377d636a1707d5" translate="yes" xml:space="preserve">
          <source>These functions convert the set string to multibyte if the buffer is multibyte, and they convert it to unibyte if the buffer is unibyte, as the search functions do (see &lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;Searching and Matching&lt;/a&gt;).</source>
          <target state="translated">이러한 함수는 버퍼가 멀티 바이트 인 경우 세트 문자열을 멀티 바이트로 변환하고 검색 함수가 수행하는 것처럼 버퍼가 유니 바이트 인 경우 유니 바이트로 변환합니다 ( &lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;검색 및 일치&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="bde16a6327954ca3dc2ee15e2e43d1b54fb616d9" translate="yes" xml:space="preserve">
          <source>These functions convert time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;) to Lisp timestamps, or into calendrical information and vice versa.</source>
          <target state="translated">이러한 함수는 시간 값 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt; 참조 )을 Lisp 타임 스탬프 로 변환 하거나 달력 정보로 또는 그 반대로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a82b07d93809f41e92feaab96902ece14f6ca96b" translate="yes" xml:space="preserve">
          <source>These functions convert time values to text in a string, and vice versa. Time values include &lt;code&gt;nil&lt;/code&gt;, numbers, and Lisp timestamps (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">이러한 함수는 시간 값을 문자열의 텍스트로 변환하거나 그 반대로 변환합니다. 시간 값에는 &lt;code&gt;nil&lt;/code&gt; , 숫자 및 Lisp 타임 스탬프가 포함됩니다 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="893a001c0a39bd95a9eed9a404de87e4453643d2" translate="yes" xml:space="preserve">
          <source>These functions copy text characters from strings and buffers along with their properties. The inserted characters have exactly the same properties as the characters they were copied from. By contrast, characters specified as separate arguments, not part of a string or buffer, inherit their text properties from the neighboring text.</source>
          <target state="translated">이러한 함수는 속성과 함께 문자열 및 버퍼에서 텍스트 문자를 복사합니다. 삽입 된 문자는 복사 된 문자와 정확히 동일한 속성을 갖습니다. 반대로 문자열이나 버퍼의 일부가 아닌 별도의 인수로 지정된 문자는 인접한 텍스트에서 텍스트 속성을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="12996c12645dffe62b5b718b306e09838a845251" translate="yes" xml:space="preserve">
          <source>These functions count each character according to the number of columns it occupies on the screen. This means control characters count as occupying 2 or 4 columns, depending upon the value of &lt;code&gt;ctl-arrow&lt;/code&gt;, and tabs count as occupying a number of columns that depends on the value of &lt;code&gt;tab-width&lt;/code&gt; and on the column where the tab begins. See &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;.</source>
          <target state="translated">이 함수는 화면에서 차지하는 열 수에 따라 각 문자를 계산합니다. 즉, 제어 문자는 &lt;code&gt;ctl-arrow&lt;/code&gt; 값에 따라 2 개 또는 4 개의 열 을 차지하는 것으로 간주되고 탭은 &lt;code&gt;tab-width&lt;/code&gt; 값과 탭이 시작되는 열에 따라 달라지는 열 수를 차지하는 것으로 간주 됩니다. &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;일반 디스플레이를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5587cca0f32b361e7619386323dd5952fc38156a" translate="yes" xml:space="preserve">
          <source>These functions do not modify the strings that are passed to them as arguments.</source>
          <target state="translated">이러한 함수는 인수로 전달되는 문자열을 수정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0db9562b1b3d1a26285c73f9d1f5a2bc76ccbea1" translate="yes" xml:space="preserve">
          <source>These functions do not move point; instead, they return a position (or &lt;code&gt;nil&lt;/code&gt;). Remember that a position is always between two characters; the position returned by these functions is between two characters with different properties.</source>
          <target state="translated">이러한 기능은 포인트를 이동하지 않습니다. 대신 위치 (또는 &lt;code&gt;nil&lt;/code&gt; ) 를 반환합니다 . 위치는 항상 두 문자 사이에 있음을 기억하십시오. 이 함수에서 반환되는 위치는 속성이 다른 두 문자 사이입니다.</target>
        </trans-unit>
        <trans-unit id="3480b687890db37e25d8679a8fb2aa1513692262" translate="yes" xml:space="preserve">
          <source>These functions handle both strings and buffers. Keep in mind that positions in a string start from 0, whereas positions in a buffer start from 1. Passing a buffer other than the current buffer may be slow.</source>
          <target state="translated">이 함수는 문자열과 버퍼를 모두 처리합니다. 문자열의 위치는 0부터 시작하는 반면 버퍼의 위치는 1부터 시작합니다. 현재 버퍼가 아닌 다른 버퍼를 전달하는 속도가 느릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bb3307e88dba10f0e4bca2c9c929691f427fc25" translate="yes" xml:space="preserve">
          <source>These functions let you read and change the parameter values of a frame.</source>
          <target state="translated">이 함수를 사용하면 프레임의 매개 변수 값을 읽고 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6d0e6907567470f2b32ecff3c3b392fd450cfb8" translate="yes" xml:space="preserve">
          <source>These functions move point based on a count of characters. &lt;code&gt;goto-char&lt;/code&gt; is the fundamental primitive; the other functions use that.</source>
          <target state="translated">이 함수는 문자 수에 따라 포인트를 이동합니다. &lt;code&gt;goto-char&lt;/code&gt; 는 기본 기본 요소입니다. 다른 기능은 그것을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ab2d1d99ce04f193040231a1c2648552979f7f3c" translate="yes" xml:space="preserve">
          <source>These functions must take care when using &lt;code&gt;window-end&lt;/code&gt; (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;); if you need an up-to-date value, you must use the &lt;var&gt;update&lt;/var&gt; argument to ensure you get it.</source>
          <target state="translated">이 함수는 &lt;code&gt;window-end&lt;/code&gt; 를 사용할 때주의해야합니다 ( &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start 및 End&lt;/a&gt; 참조 ). 최신 값이 필요한 경우 &lt;var&gt;update&lt;/var&gt; 인수를 사용하여 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="3599ddd0ccc7c1bb59af0d7739752be6bff46ebb" translate="yes" xml:space="preserve">
          <source>These functions obtain additional information about the window system in use where Emacs shows the specified &lt;var&gt;display&lt;/var&gt;. (Their names begin with &lt;code&gt;x-&lt;/code&gt; for historical reasons.)</source>
          <target state="translated">이 함수는 Emacs가 지정된 &lt;var&gt;display&lt;/var&gt; 하는 사용중인 윈도우 시스템에 대한 추가 정보를 얻습니다 . (그들의 이름 은 역사적 이유로 &lt;code&gt;x-&lt;/code&gt; 로 시작합니다 .)</target>
        </trans-unit>
        <trans-unit id="147b8d3bc6d563d67f966133e2f695c2f4abb602" translate="yes" xml:space="preserve">
          <source>These functions operate on regular expressions.</source>
          <target state="translated">이러한 함수는 정규식에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e69cc7c761fefbaaa6ca87ea52d54171150d39f1" translate="yes" xml:space="preserve">
          <source>These functions perform calendrical computations using time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;). As with any time value, a value of &lt;code&gt;nil&lt;/code&gt; for any of their time-value arguments stands for the current system time, and a single number stands for the number of seconds since the epoch.</source>
          <target state="translated">이러한 함수는 시간 값을 사용하여 달력 계산을 수행합니다 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt; 참조 ). 모든 시간 값과 마찬가지로 시간 값 인수에 대한 &lt;code&gt;nil&lt;/code&gt; 값은 현재 시스템 시간을 나타내고 단일 숫자는 에포크 이후의 초 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3faf858a56995dbf1b0c10b1e20365c9dbd2ca0e" translate="yes" xml:space="preserve">
          <source>These functions provide a way to determine which color names are valid, and what they look like. In some cases, the value depends on the &lt;em&gt;selected frame&lt;/em&gt;, as described below; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, for the meaning of the term &amp;ldquo;selected frame&amp;rdquo;.</source>
          <target state="translated">이 함수는 유효한 색상 이름과 모양을 판별하는 방법을 제공합니다. 경우에 따라 값은 아래에 설명 된대로 &lt;em&gt;선택한 프레임&lt;/em&gt; 에 따라 달라집니다 . &quot;선택된 프레임&quot;이라는 용어의 의미는 &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;입력 초점을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4a65d15c1a9ebd9e09a4df510c5e9378c690d84" translate="yes" xml:space="preserve">
          <source>These functions read and set the properties of an overlay:</source>
          <target state="translated">다음 함수는 오버레이의 속성을 읽고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="607cbb4ce5975ddb134e1cf42345aca20205753f" translate="yes" xml:space="preserve">
          <source>These functions return the default height and width of a character in &lt;var&gt;frame&lt;/var&gt;, measured in pixels. Together, these values establish the size of the default font on &lt;var&gt;frame&lt;/var&gt;. The values depend on the choice of font for &lt;var&gt;frame&lt;/var&gt;, see &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">이러한 함수 는 픽셀 단위로 측정 된 &lt;var&gt;frame&lt;/var&gt; 에있는 문자의 기본 높이와 너비를 반환합니다 . 이 값은 함께 &lt;var&gt;frame&lt;/var&gt; 의 기본 글꼴 크기를 설정합니다 . 값은 &lt;var&gt;frame&lt;/var&gt; 의 글꼴 선택에 따라 다릅니다 . &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;글꼴 및 색상 매개 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="09a64473d43e2d708e1c38b96ec8cf37fc09d875" translate="yes" xml:space="preserve">
          <source>These functions return the foreground color (or background color, respectively) of face &lt;var&gt;face&lt;/var&gt;, as a string. If the color is unspecified, they return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 face &lt;var&gt;face&lt;/var&gt; 의 전경색 (또는 배경색)을 문자열로 반환 합니다. 색상이 지정되지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b636fdb808fc2c3c957e28785d6a35d90f659dad" translate="yes" xml:space="preserve">
          <source>These functions return the height and width of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in units of the default font height and width of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). These functions are plain shorthands for writing &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; and &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt;.</source>
          <target state="translated">이 함수 는 기본 글꼴 높이 및 &lt;var&gt;frame&lt;/var&gt; 너비 단위로 측정 된 &lt;var&gt;frame&lt;/var&gt; 의 텍스트 영역의 높이와 너비를 반환합니다 ( &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;프레임 글꼴&lt;/a&gt; 참조 ). 이러한 함수는 &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; 및 &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt; frame'width) 쓰기에 대한 일반 속기입니다 .</target>
        </trans-unit>
        <trans-unit id="d115313b39c99bf9a73e868edab4210be5dfd0f0" translate="yes" xml:space="preserve">
          <source>These functions return the inner width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 내부 너비와 높이를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="65317fceab04a5393a4610411e7d919c58166f8a" translate="yes" xml:space="preserve">
          <source>These functions return the native width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 기본 너비와 높이를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e5df50bad22f793708058c5c3f72feb1556e5127" translate="yes" xml:space="preserve">
          <source>These functions return the outer width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 외부 너비와 높이를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d38fe85c22ca89727598b0326e70dba74667d37d" translate="yes" xml:space="preserve">
          <source>These functions return the width and height of the text area of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 텍스트 영역의 너비와 높이를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5a1289dbdd5c9e8a4981cd1858d16f383b2575b6" translate="yes" xml:space="preserve">
          <source>These functions scan text to determine where screen lines break, and thus take time proportional to the distance scanned.</source>
          <target state="translated">이 함수는 텍스트를 스캔하여 화면 줄이 끊어지는 위치를 확인하므로 스캔 한 거리에 비례하여 시간이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="32c7206d08128117007e8bcd42d2f606dcff371d" translate="yes" xml:space="preserve">
          <source>These functions take a mouse position list as argument, and return various parts of it:</source>
          <target state="translated">이 함수는 마우스 위치 목록을 인수로 사용하여 다양한 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e6a7353e1fe65b73c3cb43570c87e9dc028c7932" translate="yes" xml:space="preserve">
          <source>These functions test for permission to access a file for reading, writing, or execution. Unless explicitly stated otherwise, they follow symbolic links. See &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;Kinds of Files&lt;/a&gt;.</source>
          <target state="translated">이 함수는 읽기, 쓰기 또는 실행을 위해 파일에 액세스 할 수있는 권한을 테스트합니다. 별도로 명시하지 않는 한, 심볼릭 링크를 따릅니다. &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;파일 종류를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c38f568a6c8f77175070f3ca62775f408c9dfb6" translate="yes" xml:space="preserve">
          <source>These functions, and one macro, provide convenient ways to modify a list which is stored in a variable.</source>
          <target state="translated">이러한 함수와 하나의 매크로는 변수에 저장된 목록을 수정하는 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f3821e4594e2f12e52ea2fed5751cf5bb0734c0c" translate="yes" xml:space="preserve">
          <source>These have the attributes indicated by their names (e.g., &lt;code&gt;bold&lt;/code&gt; has a bold &lt;code&gt;:weight&lt;/code&gt; attribute), with all other attributes unspecified (and so given by &lt;code&gt;default&lt;/code&gt;).</source>
          <target state="translated">여기에는 이름으로 표시된 속성이 있습니다 (예 : &lt;code&gt;bold&lt;/code&gt; 에는 bold &lt;code&gt;:weight&lt;/code&gt; 속성이 있음), 다른 모든 속성은 지정되지 않고 &lt;code&gt;default&lt;/code&gt; 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e47e777be261258dca54be3fbba695fcf02c9d58" translate="yes" xml:space="preserve">
          <source>These have the same meanings as the face attributes of the same name. See &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;. &lt;code&gt;:family&lt;/code&gt; and &lt;code&gt;:foundry&lt;/code&gt; are strings, while the other three are symbols. As example values, &lt;code&gt;:slant&lt;/code&gt; may be &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt; may be &lt;code&gt;bold&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; may be &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">이들은 같은 이름의 얼굴 속성과 동일한 의미를 갖습니다. &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;면 속성을&lt;/a&gt; 참고하십시오 . &lt;code&gt;:family&lt;/code&gt; 및 &lt;code&gt;:foundry&lt;/code&gt; 는 문자열이고 나머지 세 개는 기호입니다. 예를 들어, &lt;code&gt;:slant&lt;/code&gt; 는 &lt;code&gt;italic&lt;/code&gt; , &lt;code&gt;:weight&lt;/code&gt; 는 &lt;code&gt;bold&lt;/code&gt; , &lt;code&gt;:width&lt;/code&gt; 는 &lt;code&gt;normal&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3fe0bcdf4e749c72aab0c293540927291ac1aa2d" translate="yes" xml:space="preserve">
          <source>These hook variables let you arrange to take notice of changes in buffers (or in a particular buffer, if you make them buffer-local). See also &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for how to detect changes to specific parts of the text.</source>
          <target state="translated">이러한 후크 변수를 사용하면 버퍼 (또는 버퍼 로컬로 만든 경우 특정 버퍼)의 변경 사항을 알 수 있습니다. 텍스트의 특정 부분에 대한 변경 사항을 감지하는 방법 은 &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;특수 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3722c7720a390976cdaddd26a76da19ca95a48a" translate="yes" xml:space="preserve">
          <source>These keymaps control various areas of the mode line. See &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;.</source>
          <target state="translated">이 키맵은 모드 라인의 다양한 영역을 제어합니다. &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;모드 라인 형식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6e2c6883adbcf22c3241682e727075a42dfe00e" translate="yes" xml:space="preserve">
          <source>These keymaps display the main, top-level menus in the menu bar. Some of them contain sub-menus. For example, the Edit menu contains &lt;code&gt;menu-bar-search-menu&lt;/code&gt;, etc. See &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;.</source>
          <target state="translated">이 키맵은 메뉴 표시 줄에 기본 최상위 메뉴를 표시합니다. 그들 중 일부는 하위 메뉴를 포함합니다. 예를 들어, 편집 메뉴에는 &lt;code&gt;menu-bar-search-menu&lt;/code&gt; 등이 포함 됩니다. &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;메뉴 모음을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1b24d17104d2a599a62ef2eba9d12e47d4c600d" translate="yes" xml:space="preserve">
          <source>These keys correspond to common</source>
          <target state="translated">이 키는 공통</target>
        </trans-unit>
        <trans-unit id="4c47cdbac4a7f662759169877670d03eab27b377" translate="yes" xml:space="preserve">
          <source>These kinds of event are generated by moving a mouse wheel. The &lt;var&gt;position&lt;/var&gt; element is a mouse position list (see &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;), specifying the position of the mouse cursor when the event occurred.</source>
          <target state="translated">이러한 이벤트는 마우스 휠을 움직여서 생성됩니다. &lt;var&gt;position&lt;/var&gt; 요소 (볼 마우스 위치의 목록입니다 &lt;a href=&quot;click-events#Click-Events&quot;&gt;이벤트를 클릭하면&lt;/a&gt; 이벤트가 발생했을 때 마우스 커서의 위치를 지정).</target>
        </trans-unit>
        <trans-unit id="327aa77a271ae0747539593d4f1f1061887141f4" translate="yes" xml:space="preserve">
          <source>These macros all expect three arguments:</source>
          <target state="translated">이러한 매크로는 모두 세 가지 인수를 예상합니다.</target>
        </trans-unit>
        <trans-unit id="661bb57259287c5d9e6a9cf26af06d46adf0c8f2" translate="yes" xml:space="preserve">
          <source>These mapping functions do not allow char-tables because a char-table is a sparse array whose nominal range of indices is very large. To map over a char-table in a way that deals properly with its sparse nature, use the function &lt;code&gt;map-char-table&lt;/code&gt; (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;).</source>
          <target state="translated">이러한 매핑 함수는 char-table이 인덱스의 명목 범위가 매우 큰 희소 배열이기 때문에 char-tables를 허용하지 않습니다. 희소 특성을 적절히 처리하는 방식으로 char-table을 매핑하려면 map &lt;code&gt;map-char-table&lt;/code&gt; 함수를 사용 하십시오 ( &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="889061821013abb0e636cc7d94dfee19f317076e" translate="yes" xml:space="preserve">
          <source>These mathematical functions allow integers as well as floating-point numbers as arguments.</source>
          <target state="translated">이러한 수학 함수는 정수와 부동 소수점 숫자를 인수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="0f431d7e8f6682cc5d52bc8367b56e6ab2917c79" translate="yes" xml:space="preserve">
          <source>These move point to the previous or next, respectively, &lt;var&gt;arg&lt;/var&gt;th node in &lt;var&gt;ewoc&lt;/var&gt;. &lt;code&gt;ewoc-goto-prev&lt;/code&gt; does not move if it is already at the first node or if &lt;var&gt;ewoc&lt;/var&gt; is empty, whereas &lt;code&gt;ewoc-goto-next&lt;/code&gt; moves past the last node, returning &lt;code&gt;nil&lt;/code&gt;. Excepting this special case, these functions return the node moved to.</source>
          <target state="translated">이러한 이동은 각각 &lt;var&gt;ewoc&lt;/var&gt; 의 이전 또는 다음 &lt;var&gt;arg&lt;/var&gt; th 노드를 가리 킵니다 . &lt;code&gt;ewoc-goto-prev&lt;/code&gt; 는 이미 첫 번째 노드에 있거나 &lt;var&gt;ewoc&lt;/var&gt; 가 비어 있으면 이동하지 않는 반면 &lt;code&gt;ewoc-goto-next&lt;/code&gt; 는 마지막 노드를지나 이동하여 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다. 이 특별한 경우를 제외하고 이러한 함수는 이동 한 노드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca83389bce48c8c68a57c8b12e41b5c8416c3707" translate="yes" xml:space="preserve">
          <source>These narrow classifications are grouped into a hierarchy of wider classes called &lt;em&gt;error conditions&lt;/em&gt;, identified by &lt;em&gt;condition names&lt;/em&gt;. The narrowest such classes belong to the error symbols themselves: each error symbol is also a condition name. There are also condition names for more extensive classes, up to the condition name &lt;code&gt;error&lt;/code&gt; which takes in all kinds of errors (but not &lt;code&gt;quit&lt;/code&gt;). Thus, each error has one or more condition names: &lt;code&gt;error&lt;/code&gt;, the error symbol if that is distinct from &lt;code&gt;error&lt;/code&gt;, and perhaps some intermediate classifications.</source>
          <target state="translated">이러한 좁은 분류는 &lt;em&gt;조건 이름으로&lt;/em&gt; 식별되는 &lt;em&gt;오류 조건&lt;/em&gt; 이라는 더 넓은 클래스의 계층 구조로 그룹화됩니다 . 가장 좁은 클래스는 오류 기호 자체에 속합니다. 각 오류 기호는 조건 이름이기도합니다. 또한 모든 종류의 오류 ( &lt;code&gt;quit&lt;/code&gt; 아님) 를받는 조건 이름 &lt;code&gt;error&lt;/code&gt; 까지 더 광범위한 클래스에 대한 조건 이름도 있습니다 . 따라서 각 오류에는 하나 이상의 조건 ​​이름이 있습니다. &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; 와 구별되는 경우 오류 기호 및 일부 중간 분류.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="014e4a097c82195bde9b7c25fe9dd9bf73df7a55" translate="yes" xml:space="preserve">
          <source>These normal hooks are run, respectively, when the mark becomes active and when it becomes inactive. The hook &lt;code&gt;activate-mark-hook&lt;/code&gt; is also run at the end of the command loop if the mark is active and it is possible that the region may have changed.</source>
          <target state="translated">이러한 일반 후크는 마크가 활성화되고 비활성화 될 때 각각 실행됩니다. 후크 &lt;code&gt;activate-mark-hook&lt;/code&gt; 은 마크가 활성화되어 있고 영역이 변경되었을 가능성이있는 경우 명령 루프의 끝에서도 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2e9f87ff7e3198e668f10966de785d119907aade" translate="yes" xml:space="preserve">
          <source>These options affect the behavior of Edebug:</source>
          <target state="translated">이러한 옵션은 Edebug의 동작에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="a4f845e8272f1ee4ffc16d323f1859daa1283172" translate="yes" xml:space="preserve">
          <source>These overrides are useful when you want to make some text unaffected by the reordering algorithm, and instead directly control the display order. But they can also be used for malicious purposes, known as &lt;em&gt;phishing&lt;/em&gt;. Specifically, a URL on a Web page or a link in an email message can be manipulated to make its visual appearance unrecognizable, or similar to some popular benign location, while the real location, interpreted by a browser in the logical order, is very different.</source>
          <target state="translated">이러한 재정의는 재정렬 알고리즘의 영향을받지 않는 일부 텍스트를 만들고 대신 표시 순서를 직접 제어하려는 경우에 유용합니다. 그러나 &lt;em&gt;피싱&lt;/em&gt; 이라고하는 악의적 인 목적으로도 사용될 수 있습니다 . 특히 웹 페이지의 URL이나 전자 메일 메시지의 링크를 조작하여 시각적 모양을 인식 할 수 없거나 일부 인기있는 정상 위치와 비슷하게 만들 수 있지만 브라우저에서 논리적 순서로 해석하는 실제 위치는 매우 다릅니다. .</target>
        </trans-unit>
        <trans-unit id="095c879a0e1c874617dc77661a08cd7ebf30f266" translate="yes" xml:space="preserve">
          <source>These parameters are mostly useful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) that come without window manager decorations. If necessary, they can be used for undecorated top-level frames as well.</source>
          <target state="translated">이러한 매개 변수는 창 관리자 장식없이 제공 되는 하위 프레임 ( &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;하위 프레임&lt;/a&gt; 참조)에 주로 유용합니다 . 필요한 경우 장식되지 않은 최상위 프레임에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="153ef778c6b97967d9f2ce43fda7f854e08c56ba" translate="yes" xml:space="preserve">
          <source>These parameters are used internally for implementing side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;).</source>
          <target state="translated">이러한 매개 변수는 사이드 윈도우를 구현하기 위해 내부적으로 사용됩니다 ( &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;사이드 윈도우&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7903a938448c17a3c92a1961733615528e815829" translate="yes" xml:space="preserve">
          <source>These parameters supply forms of interactions between different frames.</source>
          <target state="translated">이러한 매개 변수는 서로 다른 프레임 간의 상호 작용 형식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="604caa6b860829abeb4d2d5ad8b8d6949bef07a0" translate="yes" xml:space="preserve">
          <source>These problems will never happen in normal circumstances with installed Emacs files. But they are quite likely to happen with Lisp files that you are changing. The easiest way to prevent these problems is to reload the new compiled file immediately after each recompilation.</source>
          <target state="translated">이러한 문제는 설치된 Emacs 파일이있는 정상적인 상황에서는 절대 발생하지 않습니다. 그러나 변경하는 Lisp 파일에서 발생할 가능성이 높습니다. 이러한 문제를 방지하는 가장 쉬운 방법은 각 재 컴파일 후 즉시 새로 컴파일 된 파일을 다시로드하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="74497c2b387c074f0b80666e13f53d25f241ac27" translate="yes" xml:space="preserve">
          <source>These properties are obsolete; please use &lt;code&gt;cursor-sensor-functions&lt;/code&gt; instead.</source>
          <target state="translated">이러한 속성은 더 이상 사용되지 않습니다. 이용하시기 바랍니다 &lt;code&gt;cursor-sensor-functions&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="6cc7c4e05f99db3539d2f04a9d301a520f52d552" translate="yes" xml:space="preserve">
          <source>These properties are used to record a customizable variable&amp;rsquo;s standard value, saved value, customized-but-unsaved value, and themed values. Do not set them directly; they are managed by &lt;code&gt;defcustom&lt;/code&gt; and related functions. See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">이러한 속성은 사용자 지정 가능한 변수의 표준 값, 저장된 값, 사용자 지정되었지만 저장되지 않은 값 및 테마 값을 기록하는 데 사용됩니다. 직접 설정하지 마십시오. &lt;code&gt;defcustom&lt;/code&gt; 및 관련 기능에 의해 관리됩니다 . &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;변수 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68a5f034c7853205bde56ac0e877bed5c54aae41" translate="yes" xml:space="preserve">
          <source>These properties are used to record a face&amp;rsquo;s standard, saved, customized, and themed face specs. Do not set them directly; they are managed by &lt;code&gt;defface&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">이러한 속성은 얼굴의 표준, 저장, 사용자 지정 및 테마 얼굴 사양을 기록하는 데 사용됩니다. 직접 설정하지 마십시오. &lt;code&gt;defface&lt;/code&gt; 및 관련 기능에 의해 관리됩니다 . &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;면 정의를&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="1cf87969ab79defe053b28ccbfbf4fba573ae8e3" translate="yes" xml:space="preserve">
          <source>These render &lt;code&gt;cl-case&lt;/code&gt; unsuitable for strings or compound data structures (e.g., lists or vectors). (&lt;code&gt;cond&lt;/code&gt; doesn&amp;rsquo;t have these limitations, but it has others, see above.)</source>
          <target state="translated">이로 &lt;code&gt;cl-case&lt;/code&gt; 는 문자열 또는 복합 데이터 구조 (예 : 목록 또는 벡터)에 적합하지 않습니다. ( &lt;code&gt;cond&lt;/code&gt; 에는 이러한 제한이 없지만 다른 제한이 있습니다. 위를 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="317f88dc617e3083b4efda6c5e9c655c9f5b336a" translate="yes" xml:space="preserve">
          <source>These results make sense because the binary codes for control-_ and control-W are 11111 and 10111, respectively.</source>
          <target state="translated">이러한 결과는 control-_ 및 control-W의 이진 코드가 각각 11111 및 10111이기 때문에 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad489d015d653d05e2a1ccfa8abb77e06f2f8a64" translate="yes" xml:space="preserve">
          <source>These results make sense, because the binary code for &amp;lsquo;</source>
          <target state="translated">이 결과는 '</target>
        </trans-unit>
        <trans-unit id="a4c4dda550da1b321a6d80128f1268ee7812b202" translate="yes" xml:space="preserve">
          <source>These return, respectively, the previous node and the next node of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">이 복귀 각각 이전 노드의 다음 노드 &lt;var&gt;node&lt;/var&gt; 에서 &lt;var&gt;ewoc&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="739a145c115b98a28b37f057c49f7f8134102375" translate="yes" xml:space="preserve">
          <source>These search functions convert the regular expression to multibyte if the buffer is multibyte; they convert the regular expression to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">이러한 검색 함수는 버퍼가 멀티 바이트 인 경우 정규식을 멀티 바이트로 변환합니다. 버퍼가 유니 바이트 인 경우 정규식을 유니 바이트로 변환합니다. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;텍스트 표현을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="cad6f6a80c908d9567b01aa919faa1349448d0c5" translate="yes" xml:space="preserve">
          <source>These search functions convert the search string to multibyte if the buffer is multibyte; they convert the search string to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">이러한 검색 기능은 버퍼가 멀티 바이트 인 경우 검색 문자열을 멀티 바이트로 변환합니다. 버퍼가 유니 바이트이면 검색 문자열을 유니 바이트로 변환합니다. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;텍스트 표현을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd2b14d5ec156e1364acc616d89bab67278f031d" translate="yes" xml:space="preserve">
          <source>These sequences which start with backslash are also known as &lt;em&gt;escape sequences&lt;/em&gt;, because backslash plays the role of an escape character; this has nothing to do with the character</source>
          <target state="translated">백 슬래시로 시작하는 이러한 시퀀스는 &lt;em&gt;이스케이프 시퀀스&lt;/em&gt; 라고도합니다. 백 슬래시는 이스케이프 문자 역할을하기 때문입니다. 이것은 캐릭터와 관련이 없습니다</target>
        </trans-unit>
        <trans-unit id="456dfa373a289f0f0b4deebb6c8a4d3795bcf6cb" translate="yes" xml:space="preserve">
          <source>These set the &lt;code&gt;:foreground&lt;/code&gt; attribute (or &lt;code&gt;:background&lt;/code&gt; attribute, respectively) of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;color&lt;/var&gt;.</source>
          <target state="translated">이들은 &lt;var&gt;face&lt;/var&gt; 의 &lt;code&gt;:foreground&lt;/code&gt; 속성 (또는 &lt;code&gt;:background&lt;/code&gt; 속성) 을 &lt;var&gt;color&lt;/var&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="4361dc475638198651233d489b0c06358bc64f73" translate="yes" xml:space="preserve">
          <source>These specify the text to display before and after a button. Each can be:</source>
          <target state="translated">버튼 앞뒤에 표시 할 텍스트를 지정합니다. 각각은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aae1e62c125521a40620f94052f6c91a214adc3a" translate="yes" xml:space="preserve">
          <source>These text properties affect the behavior of the fill commands. They are used for representing formatted text. See &lt;a href=&quot;filling#Filling&quot;&gt;Filling&lt;/a&gt;, and &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">이러한 텍스트 속성은 채우기 명령의 동작에 영향을줍니다. 서식이 지정된 텍스트를 나타내는 데 사용됩니다. &lt;a href=&quot;filling#Filling&quot;&gt;채우기&lt;/a&gt; 및 &lt;a href=&quot;margins#Margins&quot;&gt;여백을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f87d3b575a3c7c8a91b4b2214f3ee45679d4e508" translate="yes" xml:space="preserve">
          <source>These types are the first-class citizens of an internal type system. Since the tag space is limited, all other types are the subtypes of &lt;code&gt;Lisp_Vectorlike&lt;/code&gt;. Vector subtypes are enumerated by &lt;code&gt;enum pvec_type&lt;/code&gt;, and nearly all complex objects like windows, buffers, frames, and processes fall into this category.</source>
          <target state="translated">이러한 유형은 내부 유형 시스템의 일류 시민입니다. 태그 공간이 제한되어 있기 때문에 다른 모든 유형은 &lt;code&gt;Lisp_Vectorlike&lt;/code&gt; 의 하위 유형입니다 . 벡터 하위 유형은 &lt;code&gt;enum pvec_type&lt;/code&gt; 에 의해 열거되며 창, 버퍼, 프레임 및 프로세스와 같은 거의 모든 복잡한 객체가이 범주에 속합니다.</target>
        </trans-unit>
        <trans-unit id="45b8c3a592e7f6abf7e293e1c03ad1586a17177b" translate="yes" xml:space="preserve">
          <source>These variables affect newly created frames. They do not normally affect existing frames; however, if you set the mouse color of a frame, that also installs the current value of those two variables. See &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">이러한 변수는 새로 생성 된 프레임에 영향을줍니다. 일반적으로 기존 프레임에는 영향을주지 않습니다. 그러나 프레임의 마우스 색상을 설정하면 두 변수의 현재 값도 함께 설치됩니다. &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;글꼴 및 색상 매개 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3bd982161583df9a64b8b6e96576aac88da7ce8" translate="yes" xml:space="preserve">
          <source>These variables are used by users to control what happens when a Lisp program reports a warning.</source>
          <target state="translated">이러한 변수는 사용자가 Lisp 프로그램이 경고를보고 할 때 발생하는 상황을 제어하는 ​​데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1db6b1b9fba288780dcd3afa212e5cf3e56eb6c2" translate="yes" xml:space="preserve">
          <source>These variables are used for detecting and reporting circular and shared structure:</source>
          <target state="translated">이러한 변수는 순환 및 공유 구조를 감지하고보고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="105e44643481b52f29feb563c36e254820e60447" translate="yes" xml:space="preserve">
          <source>These variables control details of how the echo area works.</source>
          <target state="translated">이러한 변수는 에코 영역의 작동 방식에 대한 세부 정보를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="8264858250c0b5c5b182cf58fd1f9b100b7739a2" translate="yes" xml:space="preserve">
          <source>They occupy one-fourth the space of a vector of the same elements.</source>
          <target state="translated">그것들은 동일한 요소로 구성된 벡터 공간의 1/4을 차지합니다.</target>
        </trans-unit>
        <trans-unit id="96fd86992c2d294dc7c966a9cc379303e0e5acd0" translate="yes" xml:space="preserve">
          <source>Things you should think about when you define a variable.</source>
          <target state="translated">변수를 정의 할 때 고려해야 할 사항.</target>
        </trans-unit>
        <trans-unit id="85f58635e7a6031c4a0dd6f3081e83750aac35d0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;cond&lt;/code&gt; expression returns &lt;code&gt;foo&lt;/code&gt; if the value of &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;hack&lt;/code&gt;, and returns the string &lt;code&gt;&quot;default&quot;&lt;/code&gt; otherwise.</source>
          <target state="translated">이 &lt;code&gt;cond&lt;/code&gt; 표현식 은 &lt;code&gt;a&lt;/code&gt; 값 이 &lt;code&gt;hack&lt;/code&gt; 이면 &lt;code&gt;foo&lt;/code&gt; 를 반환하고 그렇지 않으면 문자열 &lt;code&gt;&quot;default&quot;&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b703be92a7238d219e5c1003ffb23f6cb975b30b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns non-nil if there is a fake header at &lt;var&gt;pos&lt;/var&gt;. A fake header is used if &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; to put the column names at the beginning of the buffer. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to &lt;code&gt;point-min&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;pos&lt;/var&gt; 에 가짜 헤더가있는 &lt;code&gt;defsubst&lt;/code&gt; 는 nil 이 아닌 값을 반환합니다 . &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 인 경우 가짜 헤더가 사용 되어 버퍼의 시작 부분에 열 이름을 넣습니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 이면 &lt;var&gt;pos&lt;/var&gt; 기본값은 &lt;code&gt;point-min&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="48176d2024c8007a4ac5be85e04bd56a7171720e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the ID object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to point.</source>
          <target state="translated">이 &lt;code&gt;defsubst&lt;/code&gt; 는 &lt;code&gt;tabulated-list-entries&lt;/code&gt; ( 목록 인 경우) 또는 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 가 반환 한 목록 (함수 인 경우 ) 에서 ID 개체를 반환합니다 . 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 &lt;var&gt;pos&lt;/var&gt; 는 기본적으로 point로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="cb3d98858d13b8b6d93ec3bd144c3be22d5c1298" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the entry object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). This will be a vector for the ID at &lt;var&gt;pos&lt;/var&gt;. If there is no entry at &lt;var&gt;pos&lt;/var&gt;, then the function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;defsubst&lt;/code&gt; 는 &lt;code&gt;tabulated-list-entries&lt;/code&gt; ( 목록 인 경우) 또는 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 가 반환 한 목록 (함수 인 경우 ) 에서 항목 개체를 반환합니다 . 이것은 &lt;var&gt;pos&lt;/var&gt; 에있는 ID의 벡터가됩니다 . &lt;var&gt;pos&lt;/var&gt; 에 항목이 없으면 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1ec261da340db358d40d23007d994d2a60279eb6" translate="yes" xml:space="preserve">
          <source>This API has mandatory and optional parts.</source>
          <target state="translated">이 API에는 필수 및 선택적 부분이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7609c40d243bed2533715ddbd3d688727dca73c" translate="yes" xml:space="preserve">
          <source>This abnormal hook exists for the benefit of packages like</source>
          <target state="translated">이 비정상적인 후크는 다음과 같은 패키지의 이점을 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="58753480194a35a20eca9121e273f8370cbd4c6b" translate="yes" xml:space="preserve">
          <source>This abnormal hook is a list of functions to call when Emacs needs to display a tooltip. Each function is called with a single argument &lt;var&gt;event&lt;/var&gt; which is a copy of the last mouse movement event. If a function on this list actually displays the tooltip, it should return non-&lt;code&gt;nil&lt;/code&gt;, and then the rest of the functions will not be called. The default value of this variable is a single function &lt;code&gt;tooltip-help-tips&lt;/code&gt;.</source>
          <target state="translated">이 비정상적인 후크는 Emacs가 툴팁을 표시해야 할 때 호출 할 함수 목록입니다. 각 함수는 마지막 마우스 이동 이벤트의 복사 본인 단일 인수 &lt;var&gt;event&lt;/var&gt; 로 호출됩니다 . 이 목록의 함수가 실제로 도구 설명을 표시하는 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환해야 하며 나머지 함수는 호출되지 않습니다. 이 변수의 기본값은 단일 함수 &lt;code&gt;tooltip-help-tips&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="79fc999f2d6f734a8d2f583e4c9251e7567de0ff" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run after loading a file. Each function in the hook is called with a single argument, the absolute filename of the file that was just loaded.</source>
          <target state="translated">이 비정상적인 후크는 파일을로드 한 후에 실행됩니다. 후크의 각 함수는 방금로드 된 파일의 절대 파일 이름 인 단일 인수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9e18cb58ef8cb625a4bc43d899fbc09ba5220975" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run by the syntax parsing code prior to calling &lt;code&gt;syntax-propertize-function&lt;/code&gt;. Its role is to help locate safe starting and ending buffer positions for passing to &lt;code&gt;syntax-propertize-function&lt;/code&gt;. For example, a major mode can add a function to this hook to identify multi-line syntactic constructs, and ensure that the boundaries do not fall in the middle of one.</source>
          <target state="translated">이 비정상적인 후크는 &lt;code&gt;syntax-propertize-function&lt;/code&gt; 을 호출하기 전에 구문 분석 코드에 의해 실행됩니다 . 그 역할은 &lt;code&gt;syntax-propertize-function&lt;/code&gt; 에 전달하기위한 안전한 시작 및 종료 버퍼 위치를 찾는 데 도움을주는 것 입니다. 예를 들어, 주 모드는이 후크에 함수를 추가하여 여러 줄 구문 구조를 식별하고 경계가 하나의 중간에 포함되지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6f96d5f610333f2d917ab647cc390f66c9defed" translate="yes" xml:space="preserve">
          <source>This abnormal hook permits a derived mode to supply a password for the underlying command interpreter without prompting the user.</source>
          <target state="translated">이 비정상적인 후크는 파생 모드가 사용자에게 메시지를 표시하지 않고 기본 명령 인터프리터에 대한 암호를 제공하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6f123b63749113b196200986d7076efd408e9046" translate="yes" xml:space="preserve">
          <source>This acts like a call to &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; (see &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;); &lt;var&gt;signature&lt;/var&gt; specifies the correct argument list for calling the function or macro, and &lt;var&gt;when&lt;/var&gt; should be a string indicating when the old argument list was first made obsolete.</source>
          <target state="translated">이는 &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; 에 대한 호출처럼 작동합니다 ( &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt; 참조 ). &lt;var&gt;signature&lt;/var&gt; 함수 또는 매크로를 호출에 대한 올바른 인수 목록을 지정하고, &lt;var&gt;when&lt;/var&gt; 이전 인수 목록이 먼저 필요 없게되었을 때 나타내는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="3efa63614ced0a11b3c72a7ee627168a41a3f6a6" translate="yes" xml:space="preserve">
          <source>This adds &lt;code&gt;comint&lt;/code&gt; to the global &lt;code&gt;features&lt;/code&gt; list, so that &lt;code&gt;(require 'comint)&lt;/code&gt; will henceforth know that nothing needs to be done.</source>
          <target state="translated">이렇게 하면 전역 &lt;code&gt;features&lt;/code&gt; 목록에 &lt;code&gt;comint&lt;/code&gt; 가 추가 되므로 &lt;code&gt;(require 'comint)&lt;/code&gt; 는 앞으로 아무것도 수행 할 필요가 없음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43afc452dbf0605822321a1093e4e4cd228c755d" translate="yes" xml:space="preserve">
          <source>This adds a shadow rectangle around the image. The value, &lt;var&gt;relief&lt;/var&gt;, specifies the width of the shadow lines, in pixels. If &lt;var&gt;relief&lt;/var&gt; is negative, shadows are drawn so that the image appears as a pressed button; otherwise, it appears as an unpressed button.</source>
          <target state="translated">그러면 이미지 주위에 그림자 사각형이 추가됩니다. 값 &lt;var&gt;relief&lt;/var&gt; 는 그림자 선의 너비를 픽셀 단위로 지정합니다. 경우 &lt;var&gt;relief&lt;/var&gt; 부정 그림자는 이미지가 눌려진 버튼으로 표시되도록 당겨진다; 그렇지 않으면 누르지 않은 버튼으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="1a801bffd8f04ef31dc913229d1561a41fc7042e" translate="yes" xml:space="preserve">
          <source>This alist contains connection criteria and their assigned profile names. The function &lt;code&gt;connection-local-set-profiles&lt;/code&gt; updates this list.</source>
          <target state="translated">이 목록에는 연결 기준과 할당 된 프로필 이름이 포함됩니다. &lt;code&gt;connection-local-set-profiles&lt;/code&gt; 함수는 이 목록을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="4f4502b00e41d7ca380ee4cfc50445848b782901" translate="yes" xml:space="preserve">
          <source>This alist holds directory names, their assigned class names, and modification times of the associated directory local variables file (if there is one). The function &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; updates this list.</source>
          <target state="translated">이 목록에는 디렉토리 이름, 할당 된 클래스 이름 및 연관된 디렉토리 로컬 변수 파일 (있는 경우)의 수정 시간이 있습니다. &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; 함수는 이 목록을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="a8ab290d6f51f915395187d421755332681e880d" translate="yes" xml:space="preserve">
          <source>This alist holds the class symbols and the associated variable settings. It is updated by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">이 목록에는 클래스 기호 및 관련 변수 설정이 포함됩니다. &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; 에 의해 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc82ba461075944d297062d4c28cc81706a37309" translate="yes" xml:space="preserve">
          <source>This alist holds the connection profile symbols and the associated variable settings. It is updated by &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt;.</source>
          <target state="translated">이 목록에는 연결 프로필 기호 및 관련 변수 설정이 포함됩니다. &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt; 에 의해 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="8171e356e7dd4f8499ba5a1da391cc53d0f4bd00" translate="yes" xml:space="preserve">
          <source>This alist provides a mapping for the versions of Emacs that are associated with versions of a package listed in the &lt;code&gt;:package-version&lt;/code&gt; keyword. Its elements are:</source>
          <target state="translated">이 목록은 &lt;code&gt;:package-version&lt;/code&gt; 키워드에 나열된 패키지 버전과 관련된 Emacs 버전에 대한 매핑을 제공 합니다. 그 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="06592cb7cf21d4fcaa0dee8cb5604b4348587185" translate="yes" xml:space="preserve">
          <source>This allows you to add more methods, distinguished by &lt;var&gt;string&lt;/var&gt;, for the same specializers and qualifiers.</source>
          <target state="translated">이를 통해 동일한 전문화 및 한정자에 대해 &lt;var&gt;string&lt;/var&gt; 구분되는 더 많은 메서드를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c16f689854eb14d66c247d3bf3249725e2f016e1" translate="yes" xml:space="preserve">
          <source>This allows you to request an exact string match or search when calling a function that wants a regular expression.</source>
          <target state="translated">이를 통해 정규식을 원하는 함수를 호출 할 때 정확한 문자열 일치를 요청하거나 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47fb6ce0a178b4dc9378256a543571c1df9a44d5" translate="yes" xml:space="preserve">
          <source>This alternative can match any Lisp value, but if the user chooses this alternative, that selects the value &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 대안은 모든 Lisp 값과 일치 할 수 있지만 사용자가이 대안을 선택하면 값 &lt;var&gt;value&lt;/var&gt; 이 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="112333b5519a3aed32902f3bc5970788aac3b12d" translate="yes" xml:space="preserve">
          <source>This appears in the customization buffer as a checklist, so that each of &lt;var&gt;types&lt;/var&gt; may have either one corresponding element or none. It is not possible to specify two different elements that match the same one of &lt;var&gt;types&lt;/var&gt;. For example, &lt;code&gt;(set integer symbol)&lt;/code&gt; allows one integer and/or one symbol in the list; it does not allow multiple integers or multiple symbols. As a result, it is rare to use nonspecific types such as &lt;code&gt;integer&lt;/code&gt; in a &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">이것은 사용자 정의 버퍼에 체크리스트로 나타나므로 각 &lt;var&gt;types&lt;/var&gt; 에는 해당 요소가 하나도 있거나 전혀 없을 수 있습니다. &lt;var&gt;types&lt;/var&gt; 중 동일한 유형 과 일치하는 두 개의 다른 요소를 지정할 수 없습니다 . 예를 들어, &lt;code&gt;(set integer symbol)&lt;/code&gt; 은 목록에서 하나의 정수 및 / 또는 하나의 기호를 허용합니다. 다중 정수 또는 다중 기호를 허용하지 않습니다. 결과적으로 &lt;code&gt;set&lt;/code&gt; 에서 &lt;code&gt;integer&lt;/code&gt; 와 같은 비 특정 유형을 사용하는 경우는 거의 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b36ce3a8c3a8ed5189ac8face0c668655a5e5f4c" translate="yes" xml:space="preserve">
          <source>This associates an image map of &lt;em&gt;hot spots&lt;/em&gt; with this image.</source>
          <target state="translated">이렇게하면 &lt;em&gt;핫 스폿&lt;/em&gt; 의 이미지 맵 이이 이미지와 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="03693e568733886d4ead4bbfaae6a08b9fdd7df3" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run &lt;em&gt;instead&lt;/em&gt; of the primary method. The most specific of such methods will be run before any other method. Such methods normally use &lt;code&gt;cl-call-next-method&lt;/code&gt;, described below, to invoke the other auxiliary or primary methods.</source>
          <target state="translated">이 보조 방법은 기본 방법 &lt;em&gt;대신&lt;/em&gt; 실행 &lt;em&gt;됩니다&lt;/em&gt; . 이러한 방법 중 가장 구체적인 방법은 다른 방법보다 먼저 실행됩니다. 이러한 메서드는 일반적으로 아래에 설명 된 &lt;code&gt;cl-call-next-method&lt;/code&gt; 를 사용하여 다른 보조 또는 기본 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="db147a312f33833d2fd860cd24397cb31dbf000a" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run after the primary method. More accurately, all such methods will run after the primary, in the most-specific-last order.</source>
          <target state="translated">이 보조 방법은 기본 방법 이후에 실행됩니다. 보다 정확하게는 이러한 모든 메서드는 가장 구체적인 마지막 순서로 기본 이후에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="055c47046a5c43dada4f7a4d408ec55ea04beec6" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run before the primary method. More accurately, all the &lt;code&gt;:before&lt;/code&gt; methods will run before the primary, in the most-specific-first order.</source>
          <target state="translated">이 보조 방법은 기본 방법보다 먼저 실행됩니다. 보다 정확하게는 모든 &lt;code&gt;:before&lt;/code&gt; 메소드가 가장 구체적인 첫 번째 순서로 기본 전에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="bee7bb3a89efc2fe0ae6cd1401c2134693f080dd" translate="yes" xml:space="preserve">
          <source>This behaves correctly whether or not &lt;code&gt;foo-mode&lt;/code&gt; was already enabled, since the &lt;code&gt;foo-mode&lt;/code&gt; mode command unconditionally enables the minor mode when it is called from Lisp with no argument. Disabling a minor mode in a mode hook is a little uglier:</source>
          <target state="translated">&lt;code&gt;foo-mode&lt;/code&gt; 모드 명령이 인수없이 Lisp에서 호출 될 때 무조건 부 모드를 활성화하기 때문에 &lt;code&gt;foo-mode&lt;/code&gt; 가 이미 활성화 되었는지 여부에 관계없이 올바르게 작동합니다 . 모드 후크에서 부 모드를 비활성화하는 것은 조금 더 추합니다.</target>
        </trans-unit>
        <trans-unit id="39ca8e6d40bb48a402fdef66a4a6b1b4a21a323e" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-down&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the beginning of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">이것은 선택한 창을 더 이상 스크롤 할 수없고 &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; 변수의 값 이 &lt;code&gt;t&lt;/code&gt; 인 경우 대신에 버퍼의 시작 부분으로 이동하려고 시도 한다는 점을 제외하면 &lt;code&gt;scroll-down&lt;/code&gt; 과 유사 합니다. 포인트가 이미 있으면 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7f36ad1f78e72aecbe8b2c0b04e86ce649b99772" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-up&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the end of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">선택한 창을 더 이상 스크롤 할 수없고 &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; 변수의 값 이 &lt;code&gt;t&lt;/code&gt; 인 경우 대신에 버퍼의 끝으로 이동하려고 시도 한다는 점을 제외하면 &lt;code&gt;scroll-up&lt;/code&gt; 과 유사 합니다. 포인트가 이미 있으면 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1ac98d0eafcb4e384476c40a7a906cd36426c915" translate="yes" xml:space="preserve">
          <source>This behavior is system-dependent; e.g., punctuation and whitespace are never ignored on Cygwin, regardless of locale.</source>
          <target state="translated">이 동작은 시스템에 따라 다릅니다. 예를 들어 구두점과 공백은 로케일에 관계없이 Cygwin에서 절대 무시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="854a75c9a12be07e055ae41e6e28be84d26fe4fb" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the mode line information on process status in modes used for communicating with subprocesses. It is displayed immediately following the major mode name, with no intervening space. For example, its value in the</source>
          <target state="translated">이 버퍼 로컬 변수는 하위 프로세스와 통신하는 데 사용되는 모드의 프로세스 상태에 대한 모드 라인 정보를 포함합니다. 공백없이 주 모드 이름 바로 뒤에 표시됩니다. 예를 들어,</target>
        </trans-unit>
        <trans-unit id="26971293cec1b62350ce5f2ec93656e3fec17bfe" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the name of the file being visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if it is not visiting a file. It is a permanent local variable, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">이 버퍼 로컬 변수는 현재 버퍼에서 방문중인 파일의 이름을 포함하거나 파일을 방문 하지 않는 경우 &lt;code&gt;nil&lt;/code&gt; 을 포함 합니다. &lt;code&gt;kill-all-local-variables&lt;/code&gt; 의 영향을받지 않는 영구 지역 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="9b4f48a9402ce9021fdac6a00491950abfac8906" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how control characters are displayed. If it is non-&lt;code&gt;nil&lt;/code&gt;, they are displayed as a caret followed by the character: &amp;lsquo;</source>
          <target state="translated">이 버퍼 로컬 변수는 제어 문자가 표시되는 방식을 제어합니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 캐럿 뒤에 문자 ''로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b82206ceced11bfe56f1845c4f3c481cd88baf44" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the buffer boundaries and window scrolling are indicated in the window fringes.</source>
          <target state="translated">이 버퍼 로컬 변수는 버퍼 경계와 창 스크롤이 창 가장자리에 표시되는 방식을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="d47a47cdae3010d7867a8d17862f4b478496c7b9" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a selected window showing the buffer. If its value is &lt;code&gt;t&lt;/code&gt;, that means to use the cursor specified by the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter. Otherwise, the value should be one of the cursor types listed above, and it overrides the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">이 버퍼 로컬 변수는 버퍼를 표시하는 선택된 창에서 커서가 보이는 방식을 제어합니다. 값이 &lt;code&gt;t&lt;/code&gt; 이면 &lt;code&gt;cursor-type&lt;/code&gt; 프레임 매개 변수에 지정된 커서를 사용함을 의미합니다 . 그렇지 않으면 값은 위에 나열된 커서 유형 중 하나 여야하며 &lt;code&gt;cursor-type&lt;/code&gt; 프레임 매개 변수를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="d1ca4aa7c82d737697dd8d0d960d00652e403afa" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a window that is not selected. It supports the same values as the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter; also, &lt;code&gt;nil&lt;/code&gt; means don&amp;rsquo;t display a cursor in nonselected windows, and &lt;code&gt;t&lt;/code&gt; (the default) means use a standard modification of the usual cursor type (solid box becomes hollow box, and bar becomes a narrower bar).</source>
          <target state="translated">이 버퍼 로컬 변수는 선택되지 않은 창에서 커서가 보이는 방식을 제어합니다. &lt;code&gt;cursor-type&lt;/code&gt; 프레임 매개 변수 와 동일한 값을 지원합니다 . 또한 &lt;code&gt;nil&lt;/code&gt; 은 선택되지 않은 창에 커서를 표시하지 않음을 의미하고 &lt;code&gt;t&lt;/code&gt; (기본값)는 일반적인 커서 유형의 표준 수정을 사용함을 의미합니다 (단색 상자는 속이 빈 상자가되고 막대는 더 좁은 막대가 됨).</target>
        </trans-unit>
        <trans-unit id="0dd7b89ebde5a492e44d747fc9dd3f1d69d5200e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable determines whether searches should ignore case. If the variable is &lt;code&gt;nil&lt;/code&gt; they do not ignore case; otherwise (and by default) they do ignore case.</source>
          <target state="translated">이 버퍼 로컬 변수는 검색에서 대소 문자를 무시해야하는지 여부를 결정합니다. 변수가 &lt;code&gt;nil&lt;/code&gt; 이면 대소 문자를 무시하지 않습니다. 그렇지 않으면 (기본적으로) 대소 문자를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a8e930f5d382fe096fe2bc1869a2652b42c52937" translate="yes" xml:space="preserve">
          <source>This buffer-local variable enables selective display. This means that lines, or portions of lines, may be made hidden.</source>
          <target state="translated">이 버퍼 로컬 변수는 선택적 표시를 가능하게합니다. 이는 선 또는 선의 일부가 숨겨 질 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6ba2f1b5a0e175e95a9ac3488fc6f3ef00d32ac1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the &amp;ldquo;pretty&amp;rdquo; name of the current buffer&amp;rsquo;s major mode. Each major mode should set this variable so that the mode name will appear in the mode line. The value does not have to be a string, but can use any of the data types valid in a mode-line construct (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). To compute the string that will identify the mode name in the mode line, use &lt;code&gt;format-mode-line&lt;/code&gt; (see &lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;Emulating Mode Line&lt;/a&gt;).</source>
          <target state="translated">이 버퍼-로컬 변수는 현재 버퍼의 주 모드의 &quot;pretty&quot;이름을 보유합니다. 각 주요 모드는 모드 이름이 모드 행에 나타나도록이 변수를 설정해야합니다. 값은 문자열 일 필요는 없지만 모드 라인 구성에서 유효한 모든 데이터 유형을 사용할 수 있습니다 ( &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;모드 라인 데이터&lt;/a&gt; 참조 ). 모드 행에서 모드 이름을 식별 할 문자열을 계산하려면 &lt;code&gt;format-mode-line&lt;/code&gt; 을 사용 하십시오 ( &lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;Emulating Mode Line&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4e124125cb63da0d14822f14f50cd5c731f1bc04" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the abbreviated truename of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;. See &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;, and &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;.</source>
          <target state="translated">이 버퍼 로컬 변수는 현재 버퍼에서 방문한 파일의 축약 된 실제 이름을 보유하거나 방문한 파일이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 보유 합니다. &lt;code&gt;kill-all-local-variables&lt;/code&gt; 의 영향을받지 않는 영구 로컬 입니다. &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt; 및 &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b844703a84e21272992606a4863c03e4e7e789d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the alist of file-local variable settings. Each element of the alist is of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;var&lt;/var&gt; is a symbol of the local variable and &lt;var&gt;value&lt;/var&gt; is its value. When Emacs visits a file, it first collects all the file-local variables into this alist, and then the &lt;code&gt;hack-local-variables&lt;/code&gt; function applies them one by one.</source>
          <target state="translated">이 버퍼 로컬 변수는 파일 로컬 변수 설정 목록을 보유합니다. alist의 각 요소는 &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 이며, 여기서 &lt;var&gt;var&lt;/var&gt; 는 지역 변수의 기호이고 &lt;var&gt;value&lt;/var&gt; 는 해당 값입니다. Emacs가 파일을 방문하면 먼저 모든 파일-로컬 변수를이 목록에 수집 한 다음 &lt;code&gt;hack-local-variables&lt;/code&gt; 함수가이를 하나씩 적용합니다.</target>
        </trans-unit>
        <trans-unit id="5fc5aab80adcb832f12f4a45e3b6e909ebe80df5" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the file number and directory device number of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file or a nonexistent file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">이 버퍼 로컬 변수는 현재 버퍼에서 방문한 파일의 파일 번호와 디렉토리 장치 번호를 보유합니다 . 방문한 파일이 없거나 존재하지 않는 파일이 있으면 &lt;code&gt;nil&lt;/code&gt; 입니다. &lt;code&gt;kill-all-local-variables&lt;/code&gt; 의 영향을받지 않는 영구 로컬 입니다.</target>
        </trans-unit>
        <trans-unit id="a451d75ee2557e01f0400b09d2af9045e48761c6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is either &lt;code&gt;nil&lt;/code&gt; or a function for Font Lock mode to call to determine the region to scan and fontify.</source>
          <target state="translated">이 버퍼 로컬 변수는 &lt;code&gt;nil&lt;/code&gt; 또는 글꼴 잠금 모드가 스캔 및 글꼴화할 영역을 결정하기 위해 호출하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c4881b1a5764ec2cc333276f7885b261fa887500" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is the name of the file used for auto-saving the current buffer. It is &lt;code&gt;nil&lt;/code&gt; if the buffer should not be auto-saved.</source>
          <target state="translated">이 버퍼 로컬 변수는 현재 버퍼를 자동 저장하는 데 사용되는 파일의 이름입니다. 그것은이다 &lt;code&gt;nil&lt;/code&gt; 버퍼가 자동으로 저장하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="92e1c1c14e58f4755d743d128bbd4758cf2daf8e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the coding system used for saving the buffer and for writing part of the buffer with &lt;code&gt;write-region&lt;/code&gt;. If the text to be written cannot be safely encoded using the coding system specified by this variable, these operations select an alternative encoding by calling the function &lt;code&gt;select-safe-coding-system&lt;/code&gt; (see &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen Coding Systems&lt;/a&gt;). If selecting a different encoding requires to ask the user to specify a coding system, &lt;code&gt;buffer-file-coding-system&lt;/code&gt; is updated to the newly selected coding system.</source>
          <target state="translated">이 버퍼 로컬 변수는 버퍼를 저장하고 &lt;code&gt;write-region&lt;/code&gt; 을 사용하여 버퍼의 일부를 쓰는 데 사용되는 코딩 시스템을 기록합니다 . 텍스트가 안전하게 변수에 의해 지정된 부호화 방식을 사용하여 인코딩 될 수없는 기록 할 경우, 이러한 연산 함수가 호출 대체 인코딩을 선택 &lt;code&gt;select-safe-coding-system&lt;/code&gt; (참조 : &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;사용자가 선택한이 코딩 시스템&lt;/a&gt; ). 다른 인코딩을 선택하는 부호화 시스템을 지정하도록 요청하기 위해 필요한 경우 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 새롭게 선택된 코딩 방식으로 갱신된다.</target>
        </trans-unit>
        <trans-unit id="17efdfc6682eda1e0603a92ff93b7b0758219f13" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the number of times a buffer has been displayed in a window. It is incremented each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer.</source>
          <target state="translated">이 버퍼 로컬 변수는 버퍼가 창에 표시된 횟수를 기록합니다. &lt;code&gt;set-window-buffer&lt;/code&gt; 대해 set-window-buffer 가 호출 될 때마다 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="490c47d457b534b7dc5f22d93a13a9aa33bae8cf" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the time at which a buffer was last displayed in a window. The value is &lt;code&gt;nil&lt;/code&gt; if the buffer has never been displayed. It is updated each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer, with the value returned by &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">이 버퍼 로컬 변수는 버퍼가 창에 마지막으로 표시된 시간을 기록합니다. 버퍼가 표시되지 않은 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다. &lt;code&gt;set-window-buffer&lt;/code&gt; 대해 set-window-buffer 가 호출 &lt;code&gt;current-time&lt;/code&gt; 반환 한 값으로 업데이트됩니다 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a8f2327684accfcd211b2b72beee01fea76508f1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable says whether this buffer&amp;rsquo;s file has been backed up on account of this buffer. If it is non-&lt;code&gt;nil&lt;/code&gt;, the backup file has been written. Otherwise, the file should be backed up when it is next saved (if backups are enabled). This is a permanent local; &lt;code&gt;kill-all-local-variables&lt;/code&gt; does not alter it.</source>
          <target state="translated">이 버퍼 로컬 변수는이 버퍼로 인해이 버퍼의 파일이 백업되었는지 여부를 나타냅니다. &lt;code&gt;nil&lt;/code&gt; 이 아니면 백업 파일이 기록 된 것입니다. 그렇지 않으면 다음에 파일을 저장할 때 파일을 백업해야합니다 (백업이 활성화 된 경우). 이것은 영구적 인 로컬입니다. &lt;code&gt;kill-all-local-variables&lt;/code&gt; 는 그것을 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a6afe8a14ae8e8b156dda8ff2db27360c5718f45" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies a string to display in a buffer listing where the visited file name would go, for buffers that don&amp;rsquo;t have a visited file name. Dired buffers use this variable.</source>
          <target state="translated">이 buffer-local 변수는 방문한 파일 이름이없는 버퍼에 대해 방문한 파일 이름이가는 버퍼 목록에 표시 할 문자열을 지정합니다. Dired 버퍼는이 변수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="33f15a604b26fdc36df67e09f9ee034fbd85e8f8" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the entries displayed in the Tabulated List buffer. Its value should be either a list, or a function.</source>
          <target state="translated">이 버퍼 로컬 변수는 테이블 목록 버퍼에 표시되는 항목을 지정합니다. 값은 목록 또는 함수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="1f21c98e32a9f3b76b68fe2c0ec081e8dc6806ef" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the format of the Tabulated List data. Its value should be a vector. Each element of the vector represents a data column, and should be a list &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;
&lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt;, where</source>
          <target state="translated">이 버퍼 로컬 변수는 표로 된 목록 데이터의 형식을 지정합니다. 값은 벡터 여야합니다. 벡터의 각 요소는 데이터 열을 나타내며 목록 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt; 이어야합니다. 여기서</target>
        </trans-unit>
        <trans-unit id="7d93991750b7ab5c35f32d42a2ffeee9b4c05c0b" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the mapping from logical fringe indicators to the actual bitmaps displayed in the window fringes. The value is an alist of elements &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt;
. &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;indicator&lt;/var&gt; specifies a logical indicator type and &lt;var&gt;bitmaps&lt;/var&gt; specifies the fringe bitmaps to use for that indicator.</source>
          <target state="translated">이 버퍼 로컬 변수는 논리적 경계 표시기에서 창 경계에 표시되는 실제 비트 맵으로의 매핑을 지정합니다. 이 값은 소자의 alist이다 &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt; . &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt; , &lt;var&gt;indicator&lt;/var&gt; 를 지정하는 논리 지표 유형 및 &lt;var&gt;bitmaps&lt;/var&gt; 지정 프린지 비트 맵이 표시를 위해 사용한다.</target>
        </trans-unit>
        <trans-unit id="95f79b46eda8b35210d2e89e82a7e8d8ef12856c" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the maximum width of filled lines. Its value should be an integer, which is a number of columns. All the filling, justification, and centering commands are affected by this variable, including Auto Fill mode (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">이 버퍼 로컬 변수는 채워진 선의 최대 너비를 지정합니다. 값은 열 수인 정수 여야합니다. 모든 충전, 정당화하고, 중심 명령은 자동 채우기 모드 (참조를 포함하여,이 변수에 의해 영향을받는 &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;자동 충전을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8f2592db81aaca5fc86b5802b4f2f8b03f39872" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies whether the buffer is read-only. The buffer is read-only if this variable is non-&lt;code&gt;nil&lt;/code&gt;. However, characters that have the &lt;code&gt;inhibit-read-only&lt;/code&gt; text property can still be modified. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;inhibit-read-only&lt;/a&gt;.</source>
          <target state="translated">이 버퍼 로컬 변수는 버퍼가 읽기 전용인지 여부를 지정합니다. 이 변수가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 버퍼는 읽기 전용 입니다. 그러나 &lt;code&gt;inhibit-read-only&lt;/code&gt; 텍스트 속성 이 금지 된 문자 는 계속 수정할 수 있습니다. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;읽기 전용 금지를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba4e4c7bb2e6beb986d7edbdf9f9f73ca6bc6ef6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable&amp;rsquo;s value is the undo list of the current buffer. A value of &lt;code&gt;t&lt;/code&gt; disables the recording of undo information.</source>
          <target state="translated">이 버퍼 로컬 변수의 값은 현재 버퍼의 실행 취소 목록입니다. &lt;code&gt;t&lt;/code&gt; 값은 실행 취소 정보 기록을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0e00182350e8c8a67e59796df018436e5b1d317d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a string of text that appears at the beginning of normal text lines and should be disregarded when filling them. Any line that fails to start with the fill prefix is considered the start of a paragraph; so is any line that starts with the fill prefix followed by additional whitespace. Lines that start with the fill prefix but no additional whitespace are ordinary text lines that can be filled together. The resulting filled lines also start with the fill prefix.</source>
          <target state="translated">이 버퍼 로컬 변수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 일반 텍스트 줄의 시작 부분에 표시되는 텍스트 문자열을 지정하며 채울 때 무시해야합니다. 채우기 접두사로 시작하지 않는 모든 행은 단락의 시작으로 간주됩니다. 채우기 접두사로 시작하고 그 뒤에 추가 공백이 오는 모든 줄도 마찬가지입니다. 채우기 접두어로 시작하지만 추가 공백이없는 행은 함께 채울 수있는 일반 텍스트 행입니다. 결과로 채워진 선도 채우기 접두사로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="1f12b832fb97ab9906c39f3f82fb2c33f026453d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if set to a non-&lt;code&gt;nil&lt;/code&gt; value, makes &lt;code&gt;save-buffer&lt;/code&gt; behave as if the buffer were visiting its file literally, i.e., without conversions of any kind. The command &lt;code&gt;find-file-literally&lt;/code&gt; sets this variable&amp;rsquo;s local value, but other equivalent functions and commands can do that as well, e.g., to avoid automatic addition of a newline at the end of the file. This variable is permanent local, so it is unaffected by changes of major modes.</source>
          <target state="translated">비로 설정하면이 버퍼 로컬 변수는 &lt;code&gt;nil&lt;/code&gt; 이 가치있게 &lt;code&gt;save-buffer&lt;/code&gt; 버퍼가 어떤 종류의 변환없이, 즉, 말 그대로 파일을 방문했다 것처럼 작동합니다. &lt;code&gt;find-file-literally&lt;/code&gt; 명령 은이 변수의 로컬 값을 문자 그대로 설정하지만 다른 동등한 기능과 명령도이를 수행 할 수 있습니다. 예를 들어 파일 끝에 줄 바꿈이 자동으로 추가되는 것을 방지 할 수 있습니다. 이 변수는 영구적 인 로컬이므로 주요 모드 변경에 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf2cad6b6d3bf4768a93f4a38fbba84aa555a104" translate="yes" xml:space="preserve">
          <source>This built-in variable is the keymap used as the minibuffer local keymap in the function &lt;code&gt;read-no-blanks-input&lt;/code&gt;. By default, it makes the following bindings, in addition to those of &lt;code&gt;minibuffer-local-map&lt;/code&gt;:</source>
          <target state="translated">이 내장 변수는 &lt;code&gt;read-no-blanks-input&lt;/code&gt; 함수에서 미니 버퍼 로컬 키맵으로 사용되는 키맵입니다 . 기본적으로 &lt;code&gt;minibuffer-local-map&lt;/code&gt; 의 바인딩 외에도 다음과 같은 바인딩을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8723bd0b8c12c1c24f9d8e83b7ed5a4f8794b456" translate="yes" xml:space="preserve">
          <source>This call evaluates the body of the lambda expression with the variable &lt;code&gt;a&lt;/code&gt; bound to 1, &lt;code&gt;b&lt;/code&gt; bound to 2, and &lt;code&gt;c&lt;/code&gt; bound to 3. Evaluation of the body adds these three numbers, producing the result 6; therefore, this call to the function returns the value 6.</source>
          <target state="translated">이 호출은 변수 &lt;code&gt;a&lt;/code&gt; 가 1에 바인딩되고 &lt;code&gt;b&lt;/code&gt; 가 2에 바인딩 되고 &lt;code&gt;c&lt;/code&gt; 가 3에 바인딩 된 람다 식의 본문을 평가합니다. 본문을 평가하면 이 세 숫자가 더해져 결과 6이 생성됩니다. 따라서이 함수 호출은 값 6을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7df938cb4e7a1af5452ae3a2da0110e086da7423" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;map-function&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and updates those nodes for which &lt;var&gt;map-function&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;map-function&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;ewoc&lt;/var&gt; 의 각 데이터 요소에 대해 &lt;var&gt;map-function&lt;/var&gt; 을 호출 하고 &lt;var&gt;map-function&lt;/var&gt; 이 non - &lt;code&gt;nil&lt;/code&gt; 을 반환 하는 노드를 업데이트합니다 . 모든 &lt;var&gt;args&lt;/var&gt; 는 &lt;var&gt;map-function&lt;/var&gt; 에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff5d6fa36d5b7de2c29bc06421c8c4fedddf5293" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and deletes those nodes for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;ewoc&lt;/var&gt; 의 각 데이터 요소에 대한 &lt;var&gt;predicate&lt;/var&gt; 를 호출 하고 &lt;var&gt;predicate&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 을 리턴 하는 노드를 삭제 합니다 . 모든 &lt;var&gt;args&lt;/var&gt; 는 &lt;var&gt;predicate&lt;/var&gt; 에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa0b9b67826a22ee95d4084d49aa21ce9290fa0f" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and returns a list of those elements for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. The elements in the list are ordered as in the buffer. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;ewoc&lt;/var&gt; 의 각 데이터 요소에 대한 &lt;var&gt;predicate&lt;/var&gt; 를 호출 하고 &lt;var&gt;predicate&lt;/var&gt; 가 비 &lt;code&gt;nil&lt;/code&gt; 을 리턴 하는 요소의 목록을 리턴합니다 . 목록의 요소는 버퍼에서와 같이 정렬됩니다. 모든 &lt;var&gt;args&lt;/var&gt; 는 &lt;var&gt;predicate&lt;/var&gt; 에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6f9cae052c0af057cc1d5f011d50e57b115567c" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;get_environment&lt;/code&gt; function using the pointer provided in the &lt;code&gt;runtime&lt;/code&gt; structure to retrieve a pointer to the</source>
          <target state="translated">이는 &lt;code&gt;runtime&lt;/code&gt; 구조에 제공된 포인터를 사용하여 &lt;code&gt;get_environment&lt;/code&gt; 함수를 호출 하여</target>
        </trans-unit>
        <trans-unit id="d702da8b738c83c40c883dea2c26bc538f85c010" translate="yes" xml:space="preserve">
          <source>This can be counterintuitive, in particular if &lt;var&gt;W4&lt;/var&gt; were used for displaying a buffer only temporarily (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;), and you want to continue working with the initial layout.</source>
          <target state="translated">특히 &lt;var&gt;W4&lt;/var&gt; 가 일시적으로 만 버퍼를 표시하는 데 사용되었고 ( &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;임시 디스플레이&lt;/a&gt; 참조 ) 초기 레이아웃으로 작업을 계속하려는 경우 이는 직관적이지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a4f216c24b473c3700bc04233588051f1f3d763" translate="yes" xml:space="preserve">
          <source>This can be customized by changing the map &lt;code&gt;Helper-help-map&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;Helper-help-map&lt;/code&gt; 맵을 변경하여 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9fec3408eb874f74534306e5560ffc4364f881e" translate="yes" xml:space="preserve">
          <source>This can only be used for functions, and tells the compiler to use &lt;var&gt;expander&lt;/var&gt; as an optimization function. When encountering a call to the function, of the form &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, the macro expander will call &lt;var&gt;expander&lt;/var&gt; with that form as well as with &lt;var&gt;args&lt;/var&gt;&amp;hellip;, and &lt;var&gt;expander&lt;/var&gt; can either return a new expression to use instead of the function call, or it can return just the form unchanged, to indicate that the function call should be left alone. &lt;var&gt;expander&lt;/var&gt; can be a symbol, or it can be a form &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case &lt;var&gt;arg&lt;/var&gt; will hold the original function call expression, and the (unevaluated) arguments to the function can be accessed using the function&amp;rsquo;s formal arguments.</source>
          <target state="translated">이것은 함수에만 사용할 수 있으며 컴파일러가 &lt;var&gt;expander&lt;/var&gt; 를 최적화 함수로 사용하도록 지시합니다 . 형태의 함수를 호출, 발생하는 경우 &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; , 매크로 확장이 호출 &lt;var&gt;expander&lt;/var&gt; 하는 양식뿐만 아니라 함께 &lt;var&gt;args&lt;/var&gt; ... 및 &lt;var&gt;expander&lt;/var&gt; 두 함수 호출 대신에 사용할 수있는 새로운 표현을 반환 할 수 있습니다, 또는 함수 호출을 그대로 두어야 함을 나타 내기 위해 변경되지 않은 형식 만 반환 할 수 있습니다. &lt;var&gt;expander&lt;/var&gt; 는 심볼이거나 형식 &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; .이 경우 &lt;var&gt;arg&lt;/var&gt; 원래 함수 호출 표현식을 보유하고 함수의 (평가되지 않은) 인수는 함수의 형식 인수를 사용하여 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d76e4e8676364aca2a2925eb23ab9724d9ecdea6" translate="yes" xml:space="preserve">
          <source>This cancels the requested action for &lt;var&gt;timer&lt;/var&gt;, which should be a timer&amp;mdash;usually, one previously returned by &lt;code&gt;run-at-time&lt;/code&gt; or &lt;code&gt;run-with-idle-timer&lt;/code&gt;. This cancels the effect of that call to one of these functions; the arrival of the specified time will not cause anything special to happen.</source>
          <target state="translated">이렇게하면 &lt;var&gt;timer&lt;/var&gt; 에 대해 요청 된 작업이 취소됩니다.이 작업은 타이머 여야합니다. 일반적으로 이전에 &lt;code&gt;run-at-time&lt;/code&gt; 또는 &lt;code&gt;run-with-idle-timer&lt;/code&gt; 에 의해 반환 된 작업 입니다. 이렇게하면 이러한 함수 중 하나에 대한 호출의 효과가 취소됩니다. 지정된 시간의 도착으로 인해 특별한 일이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e94ed11b42bb2c5d6e6ccb611120710d2777672d" translate="yes" xml:space="preserve">
          <source>This chapter covers the special issues relating to characters and how they are stored in strings and buffers.</source>
          <target state="translated">이 장에서는 문자와 관련된 특수 문제와 문자열 및 버퍼에 저장되는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="5e6dc1c0b855c30b55cd1ad2a42304656c13efd2" translate="yes" xml:space="preserve">
          <source>This chapter describes a number of features related to the display that Emacs presents to the user.</source>
          <target state="translated">이 장에서는 Emacs가 사용자에게 제공하는 디스플레이와 관련된 여러 기능을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f9d44ec4230e8c98e3b0d70421a47d7d9f465cfe" translate="yes" xml:space="preserve">
          <source>This chapter describes how the runnable Emacs executable is dumped with the preloaded Lisp libraries in it, how storage is allocated, and some internal aspects of GNU Emacs that may be of interest to C programmers.</source>
          <target state="translated">이 장에서는 실행 가능한 Emacs 실행 파일이 사전로드 된 Lisp 라이브러리와 함께 덤프되는 방법, 저장소가 할당되는 방법 및 C 프로그래머가 관심을 가질 수있는 GNU Emacs의 내부 측면에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="624fde145402f8d6d3fe708e7379facc34f635dc" translate="yes" xml:space="preserve">
          <source>This chapter describes how to write both major and minor modes, how to indicate them in the mode line, and how they run hooks supplied by the user. For related topics such as keymaps and syntax tables, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;, and &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">이 장에서는 메이저 모드와 마이너 모드를 모두 작성하는 방법, 모드 행에 모드를 표시하는 방법, 사용자가 제공 한 후크를 실행하는 방법에 대해 설명합니다. 같은 키맵 및 구문 테이블과 같은 관련 항목을 참조 &lt;a href=&quot;keymaps#Keymaps&quot;&gt;키맵&lt;/a&gt; 및 &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;구문 테이블&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a73f07a25208a8d5d49ebc9c53e00d0e6c83fb7" translate="yes" xml:space="preserve">
          <source>This chapter describes the Emacs Lisp functions and variables to find, create, view, save, and otherwise work with files and directories. A few other file-related functions are described in &lt;a href=&quot;buffers#Buffers&quot;&gt;Buffers&lt;/a&gt;, and those related to backups and auto-saving are described in &lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;Backups and Auto-Saving&lt;/a&gt;.</source>
          <target state="translated">이 장에서는 파일과 디렉토리를 찾고, 만들고,보고, 저장하고, 작업하는 Emacs Lisp 함수와 변수를 설명합니다. 몇 가지 다른 파일 관련 기능은 &lt;a href=&quot;buffers#Buffers&quot;&gt;버퍼&lt;/a&gt; 에 설명되어 있으며 &lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;백업 및 자동 저장과&lt;/a&gt; 관련된 기능은 백업 및 자동 저장에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7545c843ef69f6c82fc1ea31eff1598a7ea2b3fe" translate="yes" xml:space="preserve">
          <source>This chapter describes the Lisp functions for reading and printing. It also describes &lt;em&gt;streams&lt;/em&gt;, which specify where to get the text (if reading) or where to put it (if printing).</source>
          <target state="translated">이 장에서는 읽기 및 인쇄를위한 Lisp 함수에 대해 설명합니다. 또한 텍스트를 가져올 위치 (읽는 경우) 또는 넣을 위치 (인쇄하는 경우)를 지정하는 &lt;em&gt;stream&lt;/em&gt; 을 설명 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="22f7ace6e4e685bb92ce56087226787d9be96ca9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions and variables related to Emacs windows. See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;, for how windows are assigned an area of screen available for Emacs to use. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for information on how text is displayed in windows.</source>
          <target state="translated">이 장에서는 Emacs 창과 관련된 기능과 변수를 설명합니다. Emacs에서 사용할 수있는 화면 영역을 창에 할당하는 방법 은 &lt;a href=&quot;frames#Frames&quot;&gt;프레임을&lt;/a&gt; 참조하십시오 . 참조 &lt;a href=&quot;display#Display&quot;&gt;디스플레이&lt;/a&gt; 텍스트 창에 표시되는 방법에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="d3459b2e5b0998d91d15863048a7a8c8ef91b8b9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions that deal with the text in a buffer. Most examine, insert, or delete text in the current buffer, often operating at point or on text adjacent to point. Many are interactive. All the functions that change the text provide for undoing the changes (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;).</source>
          <target state="translated">이 장에서는 버퍼의 텍스트를 처리하는 함수에 대해 설명합니다. 대부분의 경우 현재 버퍼에서 텍스트를 검사, 삽입 또는 삭제하며, 종종 지점 또는 지점에 인접한 텍스트에서 작동합니다. 많은 사람들이 상호 작용합니다. 텍스트를 변경하는 모든 기능은 변경 사항을 취소하는 기능을 제공합니다 ( &lt;a href=&quot;undo#Undo&quot;&gt;실행 취소&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0ce20f2b5347d828084fd6cba60b6ec5ee82ff2b" translate="yes" xml:space="preserve">
          <source>This chapter describes the purpose, printed representation, and read syntax of each of the standard types in GNU Emacs Lisp. Details on how to use these types can be found in later chapters.</source>
          <target state="translated">이 장에서는 GNU Emacs Lisp의 각 표준 유형의 목적, 인쇄 된 표현 및 읽기 구문을 설명합니다. 이러한 유형을 사용하는 방법에 대한 자세한 내용은 이후 장에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86f185ef4f486aa57761ecc92952412adc8958cf" translate="yes" xml:space="preserve">
          <source>This chapter is about starting and getting out of Emacs, access to values in the operating system environment, and terminal input, output.</source>
          <target state="translated">이 장은 Emacs 시작 및 종료, 운영 체제 환경의 값 액세스, 터미널 입력, 출력에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="00f4501f6e1912e4ba9feed5929100e344d32bfb" translate="yes" xml:space="preserve">
          <source>This class is used for backslash in TeX mode.</source>
          <target state="translated">이 클래스는 TeX 모드에서 백 슬래시에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="80d3a7c8c29e5451d6afbe84d9e7d4cd1c702c79" translate="yes" xml:space="preserve">
          <source>This code character is meaningful only at the beginning of the interactive string, and it does not look for a prompt or a newline. It is a single, isolated character.</source>
          <target state="translated">이 코드 문자는 대화식 문자열의 시작 부분에서만 의미가 있으며 프롬프트 나 개행을 찾지 않습니다. 그것은 하나의 고립 된 캐릭터입니다.</target>
        </trans-unit>
        <trans-unit id="65e11c6537eb3dae64d6ce18fb017a203438b2e0" translate="yes" xml:space="preserve">
          <source>This code letter computes an argument without reading any input. Therefore, it does not use a prompt string, and any prompt string you supply is ignored.</source>
          <target state="translated">이 코드 문자는 입력을 읽지 않고 인수를 계산합니다. 따라서 프롬프트 문자열을 사용하지 않으며 사용자가 제공 한 프롬프트 문자열은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="48852d1aa23644651ff3c065e69dbc3dadaaa7f7" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;suspends&lt;/em&gt; a frame. For GUI frames, it calls &lt;code&gt;iconify-frame&lt;/code&gt; (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;); for frames on text terminals, it calls either &lt;code&gt;suspend-emacs&lt;/code&gt; or &lt;code&gt;suspend-tty&lt;/code&gt;, depending on whether the frame is displayed on the controlling terminal device or not.</source>
          <target state="translated">이 명령 &lt;em&gt;은&lt;/em&gt; 프레임을 &lt;em&gt;일시 중단&lt;/em&gt; 합니다. GUI 프레임의 경우 &lt;code&gt;iconify-frame&lt;/code&gt; 을 호출합니다 ( 프레임 &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;가시성&lt;/a&gt; 참조 ). 텍스트 터미널 에있는 프레임의 경우 제어 터미널 장치에 프레임이 표시되는지 여부에 따라 &lt;code&gt;suspend-emacs&lt;/code&gt; 또는 &lt;code&gt;suspend-tty&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="cf23ed7494ffe60a0c253320c71f24adff27e634" translate="yes" xml:space="preserve">
          <source>This command activates input method &lt;var&gt;input-method&lt;/var&gt; for the current buffer. It also sets &lt;code&gt;default-input-method&lt;/code&gt; to &lt;var&gt;input-method&lt;/var&gt;. If &lt;var&gt;input-method&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this command deactivates any input method for the current buffer.</source>
          <target state="translated">이 명령 은 현재 버퍼에 대한 입력 방법 &lt;var&gt;input-method&lt;/var&gt; 을 활성화합니다 . 또한 &lt;code&gt;default-input-method&lt;/code&gt; 를 &lt;var&gt;input-method&lt;/var&gt; 로 설정 합니다. 경우 &lt;var&gt;input-method&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; ,이 명령은 현재 버퍼에 대한 입력 방법을 비활성화한다.</target>
        </trans-unit>
        <trans-unit id="59686f85758b5b8941bc715cb7ba63e9cd1610c4" translate="yes" xml:space="preserve">
          <source>This command adds a local rule to adjust the indentation of the current line.</source>
          <target state="translated">이 명령은 현재 줄의 들여 쓰기를 조정하는 로컬 규칙을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0a7e7476526cfeca449ad69638788acc4bdbbf40" translate="yes" xml:space="preserve">
          <source>This command adds to the numeric argument for the next command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; its value is negated to form the new prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">이 명령은 다음 명령의 숫자 인수에 추가됩니다. 인수 &lt;var&gt;arg&lt;/var&gt; 는이 명령 이전의 원시 접두사 인수입니다. 그 값은 부정되어 새로운 접두사 인수를 형성합니다. 수행중인 작업을 알지 못하는 경우이 명령을 직접 호출하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="74d9295bb5207f902c4cd8cbf762fbfceb95af5c" translate="yes" xml:space="preserve">
          <source>This command adds to the prefix argument for the following command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; it is used to compute the updated prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">이 명령은 다음 명령의 접두사 인수에 추가됩니다. 인수 &lt;var&gt;arg&lt;/var&gt; 는이 명령 이전의 원시 접두사 인수입니다. 업데이트 된 접두사 인수를 계산하는 데 사용됩니다. 수행중인 작업을 알지 못하는 경우이 명령을 직접 호출하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8459d4f1dc04b4b16629ae0b5ecd274964f50c86" translate="yes" xml:space="preserve">
          <source>This command adjusts the height or width of &lt;var&gt;window&lt;/var&gt; to fit the text in it. It returns non-&lt;code&gt;nil&lt;/code&gt; if it was able to resize &lt;var&gt;window&lt;/var&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">이 명령 은 텍스트에 맞게 &lt;var&gt;window&lt;/var&gt; 높이 또는 너비를 조정합니다 . &lt;var&gt;window&lt;/var&gt; 크기를 조정할 수 있으면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값. 그렇지 않으면 라이브 창이어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc6cbfe7ed2009b0dfc3f99d4b4705910652bf0b" translate="yes" xml:space="preserve">
          <source>This command adjusts the size of &lt;var&gt;frame&lt;/var&gt; to display the contents of its buffer exactly. &lt;var&gt;frame&lt;/var&gt; can be any live frame and defaults to the selected one. Fitting is done only if &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window is live. The arguments &lt;var&gt;max-height&lt;/var&gt;, &lt;var&gt;min-height&lt;/var&gt;, &lt;var&gt;max-width&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; specify bounds on the new total size of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window. &lt;var&gt;min-height&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; default to the values of &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; respectively.</source>
          <target state="translated">이 명령 은 버퍼의 내용을 정확히 표시하도록 &lt;var&gt;frame&lt;/var&gt; 크기를 조정합니다 . &lt;var&gt;frame&lt;/var&gt; 은 모든 라이브 프레임 이 될 수 있으며 기본값은 선택한 프레임입니다. &lt;var&gt;frame&lt;/var&gt; 의 루트 창이 라이브 인 경우에만 피팅이 수행됩니다 . &lt;var&gt;max-height&lt;/var&gt; , &lt;var&gt;min-height&lt;/var&gt; , &lt;var&gt;max-width&lt;/var&gt; 및 &lt;var&gt;min-width&lt;/var&gt; 인수 는 &lt;var&gt;frame&lt;/var&gt; 루트 창의 새로운 총 크기에 대한 경계를 지정합니다 . &lt;var&gt;min-height&lt;/var&gt; 및 &lt;var&gt;min-width&lt;/var&gt; 의 기본값은 각각 &lt;code&gt;window-min-height&lt;/code&gt; 및 &lt;code&gt;window-min-width&lt;/code&gt; 의 값 입니다.</target>
        </trans-unit>
        <trans-unit id="895e3a435b8ba1aa97bf7a257523d9f6c68329fe" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">이 명령은 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 영역에서 줄을 알파벳순으로 정렬합니다 . &lt;var&gt;reverse&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 정렬은 역순입니다.</target>
        </trans-unit>
        <trans-unit id="60f35140e02216a14272042d6f3929f833c1de8b" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts pages in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">이 명령은 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 영역에서 페이지를 알파벳순으로 정렬합니다 . &lt;var&gt;reverse&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 정렬은 역순입니다.</target>
        </trans-unit>
        <trans-unit id="9f89794b064275d0088c3098df7ee2268f906465" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts paragraphs in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">이 명령은 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 영역에서 단락을 알파벳순으로 정렬 합니다. &lt;var&gt;reverse&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 정렬은 역순입니다.</target>
        </trans-unit>
        <trans-unit id="79bfff435d9a71b3c4b3fcf53e51bf55b8df9cd1" translate="yes" xml:space="preserve">
          <source>This command attempts to display &lt;var&gt;buffer-or-name&lt;/var&gt; in the selected window and make it the current buffer. It is often used interactively (as the binding of</source>
          <target state="translated">이 명령 은 선택한 창에 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 표시 하고 현재 버퍼로 만듭니다. 종종 대화식으로 사용됩니다 (</target>
        </trans-unit>
        <trans-unit id="18c4dcc1fd6c826172f3688906808481d8c1f7dd" translate="yes" xml:space="preserve">
          <source>This command attempts to reduce &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height as much as possible while still showing its full buffer, but no less than &lt;code&gt;window-min-height&lt;/code&gt; lines. The return value is non-&lt;code&gt;nil&lt;/code&gt; if the window was resized, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">이 명령 은 전체 버퍼를 표시하면서 가능한 한 &lt;var&gt;window&lt;/var&gt; 높이 를 줄이려고 시도 하지만 &lt;code&gt;window-min-height&lt;/code&gt; 줄 보다 작지 않습니다 . 창 크기가 조정 된 경우 반환 값은 &lt;code&gt;nil&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 그렇지 않으면 nil 입니다. 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값. 그렇지 않으면 라이브 창이어야합니다.</target>
        </trans-unit>
        <trans-unit id="673eea01d7b257fd44b99b6857c537ccd6403f61" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;auto-fill-function&lt;/code&gt; whenever that is non-&lt;code&gt;nil&lt;/code&gt; and the character inserted is in the table &lt;code&gt;auto-fill-chars&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">이 명령은 그것이 &lt;code&gt;nil&lt;/code&gt; 이 아니고 삽입 된 문자가 테이블 &lt;code&gt;auto-fill-chars&lt;/code&gt; 에 있을 때마다 &lt;code&gt;auto-fill-function&lt;/code&gt; 을 호출합니다 ( &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;자동 채우기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5b985c1d8b84f28c1da6a78f8b2cc53f577963f3" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (see above) to do its work.</source>
          <target state="translated">이 명령은 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (위 참조)를 호출 하여 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="cc22573318be888f2063d86700554c0f9921604d" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;self-insert-command&lt;/code&gt; to insert newlines, which may subsequently break the preceding line by calling &lt;code&gt;auto-fill-function&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;). Typically what &lt;code&gt;auto-fill-function&lt;/code&gt; does is insert a newline; thus, the overall result in this case is to insert two newlines at different places: one at point, and another earlier in the line. &lt;code&gt;newline&lt;/code&gt; does not auto-fill if &lt;var&gt;number-of-newlines&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 &lt;code&gt;self-insert-command&lt;/code&gt; 를 호출 하여 개행 문자를 삽입합니다. 이는 이후에 &lt;code&gt;auto-fill-function&lt;/code&gt; 을 호출하여 이전 행을 끊을 수 있습니다 ( &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;자동 채우기&lt;/a&gt; 참조 ). 일반적으로 &lt;code&gt;auto-fill-function&lt;/code&gt; 이하는 일은 개행을 삽입하는 것입니다. 따라서이 경우 전체적인 결과는 서로 다른 위치에 두 개의 개행 문자를 삽입하는 것입니다. 하나는 포인트에, 다른 하나는 라인의 앞부분입니다. &lt;code&gt;newline&lt;/code&gt; &lt;var&gt;number-of-newlines&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 줄 바꿈 이 자동으로 채워지지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fc574e591e4e2eec7f3e45ad0bd6498afe6e7893" translate="yes" xml:space="preserve">
          <source>This command calls the function in &lt;code&gt;indent-line-function&lt;/code&gt; to indent the current line in a way appropriate for the current major mode.</source>
          <target state="translated">이 명령은 &lt;code&gt;indent-line-function&lt;/code&gt; function에서 함수를 호출 하여 현재 주 모드에 적합한 방식으로 현재 줄을 들여 씁니다.</target>
        </trans-unit>
        <trans-unit id="45a74130ea5b5379fa9ef34261d143fcb80a3127" translate="yes" xml:space="preserve">
          <source>This command calls the hook &lt;code&gt;kill-emacs-hook&lt;/code&gt;, then exits the Emacs process and kills it.</source>
          <target state="translated">이 명령은 후크 &lt;code&gt;kill-emacs-hook&lt;/code&gt; 을 호출 한 다음 Emacs 프로세스를 종료하고 종료합니다.</target>
        </trans-unit>
        <trans-unit id="8c6bb4abf55581a597f716344ee1d4b7e918ce59" translate="yes" xml:space="preserve">
          <source>This command closes the most recently opened (and not yet closed) block.</source>
          <target state="translated">이 명령은 가장 최근에 열린 (아직 닫히지 않은) 블록을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="756594fc50a4d9741af05602545285aac38ae0e4" translate="yes" xml:space="preserve">
          <source>This command considers a region of text as a single paragraph and fills it. If the region was made up of many paragraphs, the blank lines between paragraphs are removed. This function justifies as well as filling when &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 텍스트 영역을 단일 단락으로 간주하여 채 웁니다. 영역이 여러 단락으로 구성된 경우 단락 사이의 빈 줄이 제거됩니다. 이 함수 는 &lt;var&gt;justify&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 채우기뿐만 아니라 정당화 합니다.</target>
        </trans-unit>
        <trans-unit id="54f154b03560bc91944f1f7809150311fbbf935c" translate="yes" xml:space="preserve">
          <source>This command copies the directory named &lt;var&gt;dirname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. If &lt;var&gt;newname&lt;/var&gt; is a directory name, &lt;var&gt;dirname&lt;/var&gt; will be copied to a subdirectory there. See &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;.</source>
          <target state="translated">이 명령은 &lt;var&gt;dirname&lt;/var&gt; 이라는 디렉토리 를 &lt;var&gt;newname&lt;/var&gt; 에 복사합니다 . 경우 &lt;var&gt;newname&lt;/var&gt; 의이 디렉토리 이름이며, &lt;var&gt;dirname&lt;/var&gt; 이 하위 디렉토리에 복사됩니다. &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;디렉토리 이름을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b2aa6b0f84b36f024a16d1780fb3b2f8164a4d1" translate="yes" xml:space="preserve">
          <source>This command copies the file &lt;var&gt;oldname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. An error is signaled if &lt;var&gt;oldname&lt;/var&gt; is not a regular file. If &lt;var&gt;newname&lt;/var&gt; names a directory, it copies &lt;var&gt;oldname&lt;/var&gt; into that directory, preserving its final name component.</source>
          <target state="translated">이 명령은 &lt;var&gt;oldname&lt;/var&gt; 파일 을 &lt;var&gt;newname&lt;/var&gt; 에 복사합니다 . &lt;var&gt;oldname&lt;/var&gt; 이 일반 파일이 아닌 경우 오류가 표시 됩니다. 경우 &lt;var&gt;newname&lt;/var&gt; 의 이름 디렉토리, 그 사본은 &lt;var&gt;oldname&lt;/var&gt; 의 최종 이름 구성 요소를 유지, 그 디렉토리에.</target>
        </trans-unit>
        <trans-unit id="c8ad2b5b41ccfb8b2f38182e2df30fc1c4b30c1a" translate="yes" xml:space="preserve">
          <source>This command creates a directory named &lt;var&gt;dirname&lt;/var&gt;. If &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as is always the case in an interactive call, that means to create the parent directories first, if they don&amp;rsquo;t already exist. &lt;code&gt;mkdir&lt;/code&gt; is an alias for this.</source>
          <target state="translated">이 명령은 &lt;var&gt;dirname&lt;/var&gt; 이라는 디렉토리를 만듭니다 . 경우 &lt;var&gt;parents&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , 같은 이미 존재하지 않는 경우 수단, 먼저 부모 디렉토리를 만들 것을 항상 대화 형 전화의 경우입니다. &lt;code&gt;mkdir&lt;/code&gt; 은 이것에 대한 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="038aa561e9d82f4d260ddd912eb64042b635bf8c" translate="yes" xml:space="preserve">
          <source>This command creates an empty file named &lt;var&gt;filename&lt;/var&gt;. As &lt;code&gt;make-directory&lt;/code&gt;, this command creates parent directories if &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; already exists, this command signals an error.</source>
          <target state="translated">이 명령은 &lt;var&gt;filename&lt;/var&gt; 이라는 빈 파일을 만듭니다 . 으로 &lt;code&gt;make-directory&lt;/code&gt; 있는 경우,이 명령은 부모 디렉토리를 생성 &lt;var&gt;parents&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; . 경우 &lt;var&gt;filename&lt;/var&gt; 이미 존재,이 명령은 오류 신호를 보낸다.</target>
        </trans-unit>
        <trans-unit id="a1d4315801ce6d3f5b31ce1276e9ab8688821d79" translate="yes" xml:space="preserve">
          <source>This command decodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. To make explicit decoding useful, the text before decoding ought to be a sequence of byte values, but both multibyte and unibyte buffers are acceptable (in the multibyte case, the raw byte values should be represented as eight-bit characters). Normally, the decoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the decoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the decoded text as a multibyte string without inserting it.</source>
          <target state="translated">이 명령 은 코딩 시스템 &lt;var&gt;coding-system&lt;/var&gt; 에 따라 텍스트를 &lt;var&gt;start&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 디코딩합니다 . 명시 적 디코딩을 유용하게하려면 디코딩 전 텍스트가 일련의 바이트 값이어야하지만 멀티 바이트 및 유니 바이트 버퍼 모두 허용됩니다 (멀티 바이트의 경우 원시 바이트 값은 8 비트 문자로 표시되어야 함). 일반적으로 디코딩 된 텍스트는 버퍼의 원본 텍스트를 대체하지만 선택적 인수 &lt;var&gt;destination&lt;/var&gt; 이이를 변경할 수 있습니다. 경우 &lt;var&gt;destination&lt;/var&gt; 버퍼는, 상기 디코딩 된 텍스트는 (포인트가 이동하지 않는) 그 시점 이후 버퍼에 삽입되고; 이 경우 &lt;code&gt;t&lt;/code&gt; 는 , 명령을 삽입하지 않고 멀티 바이트 문자열로 디코딩 된 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="32f4777175150fdcbe2a1a23643a82fc5a4ba066" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters backward, changing tabs into spaces. When the next character to be deleted is a tab, it is first replaced with the proper number of spaces to preserve alignment and then one of those spaces is deleted instead of the tab. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the command saves the deleted characters in the kill ring.</source>
          <target state="translated">이 명령은 &lt;var&gt;count&lt;/var&gt; 문자를 뒤로 삭제 하여 탭을 공백으로 변경합니다. 삭제할 다음 문자가 탭인 경우 정렬을 유지하기 위해 먼저 적절한 수의 공백으로 대체 된 다음 해당 공백 중 하나가 탭 대신 삭제됩니다. &lt;var&gt;killp&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 명령은 삭제 된 문자를 킬 링에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="22ea8b0a20dedb9172859d6df974ea27ab76d8a9" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly after point, or before point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">이 명령 은 포인트 바로 뒤 또는 &lt;var&gt;count&lt;/var&gt; 가 음수 인 경우 포인트 앞의 &lt;var&gt;count&lt;/var&gt; 문자를 삭제 합니다. &lt;var&gt;killp&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 삭제 된 문자를 킬 링에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="1e29c9a0fbb23fca667005f572af80f1ee10ffe4" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly before point, or after point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">이 명령은 포인트 직전 또는 &lt;var&gt;count&lt;/var&gt; 가 음수 인 경우 포인트 뒤의 &lt;var&gt;count&lt;/var&gt; 문자를 삭제 합니다. &lt;var&gt;killp&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 삭제 된 문자를 킬 링에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ca7108ce8a70186ad1084ad0d0dc8c98134c3c53" translate="yes" xml:space="preserve">
          <source>This command deletes all frames on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s terminal, except &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; uses another frame&amp;rsquo;s minibuffer, that minibuffer frame is left untouched. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame and defaults to the selected frame. Internally, this command works by calling &lt;code&gt;delete-frame&lt;/code&gt; with &lt;var&gt;force&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; for all frames that shall be deleted.</source>
          <target state="translated">이 명령은 &lt;var&gt;frame&lt;/var&gt; 제외한 &lt;var&gt;frame&lt;/var&gt; 터미널의 모든 프레임을 삭제합니다 . &lt;var&gt;frame&lt;/var&gt; 이 다른 프레임의 미니 버퍼를 사용하는 경우 해당 미니 버퍼 프레임은 그대로 유지됩니다. 인수 &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임을 지정해야하며 기본값은 선택한 프레임입니다. 내부적으로이 명령은 &lt;code&gt;delete-frame&lt;/code&gt; 될 모든 프레임에 대해 &lt;var&gt;force&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 로 delete-frame 을 호출 하여 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a801baba837fbae2db848bbcdf043c44b92a62ee" translate="yes" xml:space="preserve">
          <source>This command deletes the directory named &lt;var&gt;dirname&lt;/var&gt;. The function &lt;code&gt;delete-file&lt;/code&gt; does not work for files that are directories; you must use &lt;code&gt;delete-directory&lt;/code&gt; for them. If &lt;var&gt;recursive&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and the directory contains any files, &lt;code&gt;delete-directory&lt;/code&gt; signals an error. If recursive is non-&lt;code&gt;nil&lt;/code&gt;, there is no error merely because the directory or its files are deleted by some other process before &lt;code&gt;delete-directory&lt;/code&gt; gets to them.</source>
          <target state="translated">이 명령은 &lt;var&gt;dirname&lt;/var&gt; 이라는 디렉토리를 삭제합니다 . &lt;code&gt;delete-file&lt;/code&gt; 함수 는 디렉토리 인 파일에 대해 작동하지 않습니다. 이를 위해 &lt;code&gt;delete-directory&lt;/code&gt; 를 사용해야 합니다. 경우 &lt;var&gt;recursive&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; 하고, 디렉토리는 모든 파일이 포함되어 &lt;code&gt;delete-directory&lt;/code&gt; 신호 오류. recursive가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;code&gt;delete-directory&lt;/code&gt; 가 도달 하기 전에 다른 프로세스에 의해 디렉토리 또는 파일이 삭제 되었기 때문에 오류가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b6a1626313c1e8a44d5e1bf542d0077364da6eff" translate="yes" xml:space="preserve">
          <source>This command deletes the file &lt;var&gt;filename&lt;/var&gt;. If the file has multiple names, it continues to exist under the other names. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, &lt;code&gt;delete-file&lt;/code&gt; deletes only the symbolic link and not its target.</source>
          <target state="translated">이 명령은 &lt;var&gt;filename&lt;/var&gt; 파일을 삭제합니다 . 파일에 여러 이름이있는 경우 다른 이름 아래에 계속 존재합니다. 경우 &lt;var&gt;filename&lt;/var&gt; 심볼릭 링크는, &lt;code&gt;delete-file&lt;/code&gt; 단지가 아닌 기호 링크의 대상을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="a94a016d509b74c3bce4b176ef112169da75d61e" translate="yes" xml:space="preserve">
          <source>This command deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns &lt;code&gt;nil&lt;/code&gt;. If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt;. Otherwise, point relocates with the surrounding text, as markers do.</source>
          <target state="translated">이 명령 은 현재 버퍼에서 &lt;var&gt;start&lt;/var&gt; 위치 와 &lt;var&gt;end&lt;/var&gt; 위치 사이의 텍스트를 삭제하고 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 포인트가 삭제 된 영역 내부에 있으면 그 이후의 값은 &lt;var&gt;start&lt;/var&gt; 입니다. 그렇지 않으면 마커가하는 것처럼 포인트가 주변 텍스트와 함께 재배치됩니다.</target>
        </trans-unit>
        <trans-unit id="cca5913b83b419877e4d8ab720ce6c7df7f9acdb" translate="yes" xml:space="preserve">
          <source>This command deletes whitespace characters after the last non-whitespace character in each line in the region.</source>
          <target state="translated">이 명령은 영역의 각 줄에서 공백이 아닌 마지막 문자 뒤의 공백 문자를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="dddaa17447520ba09b411289d6048689899f464d" translate="yes" xml:space="preserve">
          <source>This command displays a description of the contents of the current buffer&amp;rsquo;s case table.</source>
          <target state="translated">이 명령은 현재 버퍼의 케이스 테이블 내용에 대한 설명을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7c346a82a085542926f91f7935abc73545129526" translate="yes" xml:space="preserve">
          <source>This command displays a description of the current display table in a help buffer.</source>
          <target state="translated">이 명령은 도움말 버퍼의 현재 표시 테이블에 대한 설명을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="683746dd8591743f5682ffbbc29ba3b571485977" translate="yes" xml:space="preserve">
          <source>This command displays a list of characters in the character set &lt;var&gt;charset&lt;/var&gt;.</source>
          <target state="translated">이 명령은 문자 집합 &lt;var&gt;charset&lt;/var&gt; 의 문자 목록을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="3a0ecda5eade2dd5d8e8952f216dbbf48cc36d7a" translate="yes" xml:space="preserve">
          <source>This command displays a listing of all living processes. In addition, it finally deletes any process whose status was &amp;lsquo;</source>
          <target state="translated">이 명령은 모든 살아있는 프로세스의 목록을 표시합니다. 또한 상태가 '인 모든 프로세스를 최종적으로 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="8d52c25e9d936625f4ddc58e3711cc9e74f3a430" translate="yes" xml:space="preserve">
          <source>This command displays the contents of the syntax table of &lt;var&gt;buffer&lt;/var&gt; (by default, the current buffer) in a help buffer.</source>
          <target state="translated">이 명령 은 도움말 버퍼에있는 &lt;var&gt;buffer&lt;/var&gt; (기본적으로 현재 버퍼) 의 구문 테이블 내용을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="f078da243cd24929fce755d874cfbebed7ee19c0" translate="yes" xml:space="preserve">
          <source>This command displays the disassembled code for &lt;var&gt;object&lt;/var&gt;. In interactive use, or if &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the output goes in a buffer named</source>
          <target state="translated">이 명령은 &lt;var&gt;object&lt;/var&gt; 에 대한 분해 된 코드를 표시 합니다 . 대화식으로 사용하거나 &lt;var&gt;buffer-or-name&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이거나 생략 된 경우 출력은 다음과 같은 버퍼에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="2762876090466956700e42ae9e7b100c9424e047" translate="yes" xml:space="preserve">
          <source>This command displays the documentation of the current buffer&amp;rsquo;s major mode and minor modes. It uses the &lt;code&gt;documentation&lt;/code&gt; function to retrieve the documentation strings of the major and minor mode commands (see &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;).</source>
          <target state="translated">이 명령은 현재 버퍼의 주 모드 및 부 모드에 대한 문서를 표시합니다. &lt;code&gt;documentation&lt;/code&gt; 기능을 사용하여 주 및 부 모드 명령의 문서 문자열을 검색합니다 (문서 &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;액세스&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="906a9d0a67ebfe25157f280b4d00f819df007911" translate="yes" xml:space="preserve">
          <source>This command displays the frequency count data for each line of the current definition.</source>
          <target state="translated">이 명령은 현재 정의의 각 라인에 대한 주파수 카운트 데이터를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1e3b49c3a1c9795b93c5c5418a1c0d3eff8cf69e" translate="yes" xml:space="preserve">
          <source>This command displays the previous buffer in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; should be a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window). If the optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means that the buffer currently shown in &lt;var&gt;window&lt;/var&gt; is about to be buried or killed and consequently should not be switched to in future invocations of this command.</source>
          <target state="translated">이 명령은 &lt;var&gt;window&lt;/var&gt; 에 이전 버퍼를 표시 합니다. 인수 &lt;var&gt;window&lt;/var&gt; 은 라이브 창이거나 &lt;code&gt;nil&lt;/code&gt; (선택한 창을 의미) 이어야합니다 . 선택적 인수 &lt;var&gt;bury-or-kill&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 현재 &lt;var&gt;window&lt;/var&gt; 표시된 버퍼 가 묻히거나 죽을 것이므로이 명령의 향후 호출에서 전환되지 않아야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="16105a84850f7950a0920c4e78ab171286e4f734" translate="yes" xml:space="preserve">
          <source>This command displays the rules that are used to indent the current line.</source>
          <target state="translated">이 명령은 현재 줄을 들여 쓰는 데 사용되는 규칙을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="6b7280ebc9500d23d64f114ba464e9b849225f10" translate="yes" xml:space="preserve">
          <source>This command displays what is contained in register &lt;var&gt;reg&lt;/var&gt;.</source>
          <target state="translated">이 명령은 &lt;var&gt;reg&lt;/var&gt; 레지스터에 포함 된 내용을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="8dde6d022e9a211cc45bb6e82118d5f40d92a727" translate="yes" xml:space="preserve">
          <source>This command does not follow symbolic links. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, this command renames the symbolic link, not the file it points to. If &lt;var&gt;newname&lt;/var&gt; is a symbolic link, its directory entry is replaced, not the directory entry it points to.</source>
          <target state="translated">이 명령은 기호 링크를 따르지 않습니다. 경우 &lt;var&gt;filename&lt;/var&gt; 심볼릭 링크이며,이 명령은 기호 링크가 아니라 그것이 가리키는 파일의 이름을 변경합니다. 경우 &lt;var&gt;newname&lt;/var&gt; 의이 심볼릭 링크, 그 디렉토리 엔트리는 그것이 가리키는하지 디렉토리 항목을 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="8b72b7c4c4fbff1834710fd64352ed0aad18bb23" translate="yes" xml:space="preserve">
          <source>This command does not run the hook &lt;code&gt;post-self-insert-hook&lt;/code&gt; unless called interactively or &lt;var&gt;interactive&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 대화식으로 호출되거나 &lt;var&gt;interactive&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 후크 &lt;code&gt;post-self-insert-hook&lt;/code&gt; 후크를 실행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9ceb0e4da10375df635738b622ce9b4a706e8b83" translate="yes" xml:space="preserve">
          <source>This command does nothing if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; are the same directory entry, i.e., if they refer to the same parent directory and give the same name within that directory. Otherwise, if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; name the same file, this command does nothing on POSIX-conforming systems, and removes &lt;var&gt;filename&lt;/var&gt; on some non-POSIX systems.</source>
          <target state="translated">이 명령은 &lt;var&gt;filename&lt;/var&gt; 과 &lt;var&gt;newname&lt;/var&gt; 이 동일한 디렉토리 항목 인 경우, 즉 동일한 상위 디렉토리를 참조하고 해당 디렉토리 내에서 동일한 이름을 제공하는 경우 아무 작업도 수행하지 않습니다 . 그렇지 않으면 &lt;var&gt;filename&lt;/var&gt; 과 &lt;var&gt;newname&lt;/var&gt; 이름이 같은 파일이면이 명령은 POSIX 호환 시스템에서 아무 작업도 수행하지 않고 일부 비 POSIX 시스템에서 &lt;var&gt;filename&lt;/var&gt; 을 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="215a1477f2c72075a1ef839f3f35a9c187a95e3b" translate="yes" xml:space="preserve">
          <source>This command does nothing if the window is already too short to display all of its buffer, or if any of the buffer is scrolled off-screen, or if the window is the only live window in its frame.</source>
          <target state="translated">이 명령은 창이 이미 너무 짧아서 모든 버퍼를 표시 할 수 없거나 버퍼가 화면 밖으로 스크롤되거나 창이 프레임에서 유일한 라이브 창인 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="966b0ed68ad81002249062c92710838398fcfe4a" translate="yes" xml:space="preserve">
          <source>This command enables recording undo information for buffer &lt;var&gt;buffer-or-name&lt;/var&gt;, so that subsequent changes can be undone. If no argument is supplied, then the current buffer is used. This function does nothing if undo recording is already enabled in the buffer. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령을 사용하면 &lt;var&gt;buffer-or-name&lt;/var&gt; 버퍼에 대한 실행 취소 정보를 기록 할 수 있으므로 후속 변경을 취소 할 수 있습니다. 인수가 제공되지 않으면 현재 버퍼가 사용됩니다. 이 기능은 버퍼에서 이미 실행 취소 기록이 활성화 된 경우 아무 작업도 수행하지 않습니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5a82ddcac78077fdf6491a021c70da5be6b883bc" translate="yes" xml:space="preserve">
          <source>This command encodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. Normally, the encoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the encoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the encoded text as a unibyte string without inserting it.</source>
          <target state="translated">이 명령 은 코딩 시스템 &lt;var&gt;coding-system&lt;/var&gt; 에 따라 &lt;var&gt;start&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 텍스트를 인코딩합니다 . 일반적으로 인코딩 된 텍스트는 버퍼의 원본 텍스트를 대체하지만 선택적 인수 &lt;var&gt;destination&lt;/var&gt; 이이를 변경할 수 있습니다. 경우 &lt;var&gt;destination&lt;/var&gt; 버퍼는, 상기 인코딩 된 텍스트는 (포인트가 이동하지 않는) 그 시점 이후 버퍼에 삽입되고; 이 경우 &lt;code&gt;t&lt;/code&gt; 이 명령은 삽입하지 않고 unibyte 문자열로 인코딩 된 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ef5406097f423d50f3e4cf92882d1c513ab70d87" translate="yes" xml:space="preserve">
          <source>This command erases the editable contents of the minibuffer (that is, everything except the prompt), if a minibuffer is current. Otherwise, it erases the entire current buffer.</source>
          <target state="translated">이 명령은 미니 버퍼가 현재 인 경우 미니 버퍼의 편집 가능한 내용 (즉, 프롬프트를 제외한 모든 항목)을 지 웁니다. 그렇지 않으면 현재 버퍼 전체를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="6f45f70a9223f5d68b032e25b623e5f92da9b0d3" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer after inserting the last character typed on the keyboard (found in &lt;code&gt;last-command-event&lt;/code&gt;; see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;).</source>
          <target state="translated">이 명령은 키보드에 마지막으로 입력 한 문자를 삽입 한 후 활성 미니 버퍼를 종료합니다 ( &lt;code&gt;last-command-event&lt;/code&gt; 에서 찾을 수 있습니다 . &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="56bee02febe888f30922da274fbb0924fce22169" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer. It is normally bound to keys in minibuffer local keymaps.</source>
          <target state="translated">이 명령은 활성 미니 버퍼를 종료합니다. 일반적으로 미니 버퍼 로컬 키맵의 키에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="9960e68dba13beeea2d45213224bda3bc09c78cb" translate="yes" xml:space="preserve">
          <source>This command expands the abbrev before point, if any. If point does not follow an abbrev, this command does nothing. To do the expansion, it calls the function that is the value of the &lt;code&gt;abbrev-expand-function&lt;/code&gt; variable, with no arguments, and returns whatever that function does.</source>
          <target state="translated">이 명령은 포인트 앞의 약어를 확장합니다. 포인트가 약어 다음에 나오지 않으면이 명령은 아무 작업도 수행하지 않습니다. 확장을 수행하기 위해 인수없이 &lt;code&gt;abbrev-expand-function&lt;/code&gt; 변수 의 값인 함수를 호출하고 해당 함수가 수행하는 모든 것을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="78ee150b79a2f4408d7171f2996a0806c6f522bc" translate="yes" xml:space="preserve">
          <source>This command fills each of the paragraphs in the region from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. It justifies as well if &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 &lt;var&gt;start&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 영역의 각 단락을 채 웁니다 . &lt;var&gt;justify&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우에도 정당화됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b3e65ed2b1a543af31c994850fab42cc5f6ca5a" translate="yes" xml:space="preserve">
          <source>This command fills each paragraph in the region according to its individual fill prefix. Thus, if the lines of a paragraph were indented with spaces, the filled paragraph will remain indented in the same fashion.</source>
          <target state="translated">이 명령은 개별 채우기 접두사에 따라 영역의 각 단락을 채 웁니다. 따라서 단락의 줄이 공백으로 들여 쓰기 된 경우 채워진 단락은 동일한 방식으로 들여 쓰기 된 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0bec39ae3f928d4a3feaac0b7e8a0b32dca18131" translate="yes" xml:space="preserve">
          <source>This command fills the paragraph at or after point. If &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, each line is justified as well. It uses the ordinary paragraph motion commands to find paragraph boundaries. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="translated">이 명령은 포인트 또는 그 이후에 단락을 채 웁니다. &lt;var&gt;justify&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 각 행도 양쪽 정렬됩니다. 일반 단락 동작 명령을 사용하여 단락 경계를 찾습니다. 참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;단락을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="3b9692135a9f2f7dd48a2436e7db28ca2af85acb" translate="yes" xml:space="preserve">
          <source>This command fills the paragraph at or after point. If &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, each line is justified as well. It uses the ordinary paragraph motion commands to find paragraph boundaries. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acc7ffa982f60daf275e8c14e7552f325a34ebe" translate="yes" xml:space="preserve">
          <source>This command finds the file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. It also makes &lt;var&gt;format&lt;/var&gt; the default if the buffer is saved later.</source>
          <target state="translated">이 명령은 파일 &lt;var&gt;file&lt;/var&gt; 찾아서 형식 &lt;var&gt;format&lt;/var&gt; 에 따라 변환 합니다 . 또한 나중에 버퍼를 저장할 경우 &lt;var&gt;format&lt;/var&gt; 을 기본값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="496a4488eb4e6d86a049f91696897547b2057806" translate="yes" xml:space="preserve">
          <source>This command finds the precise file name for library &lt;var&gt;library&lt;/var&gt;. It searches for the library in the same way &lt;code&gt;load&lt;/code&gt; does, and the argument &lt;var&gt;nosuffix&lt;/var&gt; has the same meaning as in &lt;code&gt;load&lt;/code&gt;: don&amp;rsquo;t add suffixes &amp;lsquo;</source>
          <target state="translated">이 명령은 라이브러리 &lt;var&gt;library&lt;/var&gt; 의 정확한 파일 이름을 찾습니다 . &lt;code&gt;load&lt;/code&gt; 와 같은 방식으로 라이브러리를 검색 하며, 인수 &lt;var&gt;nosuffix&lt;/var&gt; 는 &lt;code&gt;load&lt;/code&gt; 에서와 동일한 의미를 갖습니다 : do n't add suffixes '</target>
        </trans-unit>
        <trans-unit id="7088c7eb415b5eeea76627a8dbd42f70950ab725" translate="yes" xml:space="preserve">
          <source>This command indents each nonblank line starting between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive). If &lt;var&gt;to-column&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;indent-region&lt;/code&gt; indents each nonblank line by calling the current mode&amp;rsquo;s indentation function, the value of &lt;code&gt;indent-line-function&lt;/code&gt;.</source>
          <target state="translated">이 명령은 &lt;var&gt;start&lt;/var&gt; (포함)과 &lt;var&gt;end&lt;/var&gt; (제외) 사이에서 시작하는 공백이 아닌 각 줄을 들여 씁니다 . 경우 &lt;var&gt;to-column&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;indent-region&lt;/code&gt; 만입 현재 모드의 압입 함수의 값을 호출하여 각각의 비어 있지 않은 라인 &lt;code&gt;indent-line-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a9dc457190e631972e795830f311f13a8cd116d" translate="yes" xml:space="preserve">
          <source>This command indents the current line like the previous nonblank line, by calling &lt;code&gt;indent-relative&lt;/code&gt; with &lt;code&gt;t&lt;/code&gt; as the &lt;var&gt;first-only&lt;/var&gt; argument. The return value is unpredictable.</source>
          <target state="translated">이 명령 은 &lt;code&gt;t&lt;/code&gt; 를 &lt;var&gt;first-only&lt;/var&gt; 인수 로 사용하여 &lt;code&gt;indent-relative&lt;/code&gt; 를 호출하여 이전의 공백이 아닌 줄처럼 현재 줄을 들여 씁니다 . 반환 값은 예측할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="990ea483ed9c77e9c4b7e9d0a04803fc31bdbeb3" translate="yes" xml:space="preserve">
          <source>This command indents to the left margin if that is not zero. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">이 명령은 0이 아닌 경우 왼쪽 여백으로 들여 씁니다. &lt;a href=&quot;margins#Margins&quot;&gt;여백을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b299a297e353537b61beb782c88c67e04c9405d5" translate="yes" xml:space="preserve">
          <source>This command inserts &lt;var&gt;count&lt;/var&gt; instances of &lt;var&gt;character&lt;/var&gt; into the current buffer before point. The argument &lt;var&gt;count&lt;/var&gt; must be an integer, and &lt;var&gt;character&lt;/var&gt; must be a character.</source>
          <target state="translated">이 명령 은 포인트 앞에 현재 버퍼 에 &lt;var&gt;character&lt;/var&gt; &lt;var&gt;count&lt;/var&gt; 인스턴스를 삽입 합니다. 인수 &lt;var&gt;count&lt;/var&gt; 는 정수 여야 하고 &lt;var&gt;character&lt;/var&gt; 는 문자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3c0b68d54ca5426fce25a0ace8e5b8bf44050795" translate="yes" xml:space="preserve">
          <source>This command inserts before point the text at the front of the kill ring. It sets the mark at the beginning of that text, using &lt;code&gt;push-mark&lt;/code&gt; (see &lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;), and puts point at the end.</source>
          <target state="translated">이 명령은 킬 링 앞의 텍스트를 포인트 앞에 삽입합니다. 그것은 사용하여 텍스트의 시작 부분에 마크를 설정 &lt;code&gt;push-mark&lt;/code&gt; (참조 &lt;a href=&quot;the-mark#The-Mark&quot;&gt;마크를&lt;/a&gt; ) 및 풋는 말에 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="00cb850812ecd2a392a86a27a8e2ac9630649afe" translate="yes" xml:space="preserve">
          <source>This command inserts contents of register &lt;var&gt;reg&lt;/var&gt; into the current buffer.</source>
          <target state="translated">이 명령은 레지스터 &lt;var&gt;reg&lt;/var&gt; 의 내용을 현재 버퍼에 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="b5823cba999dd07db3971854e8b20896e5e06742" translate="yes" xml:space="preserve">
          <source>This command inserts newlines into the current buffer before point. If &lt;var&gt;number-of-newlines&lt;/var&gt; is supplied, that many newline characters are inserted. In an interactive call, &lt;var&gt;number-of-newlines&lt;/var&gt; is the numeric prefix argument.</source>
          <target state="translated">이 명령은 포인트 앞에 현재 버퍼에 줄 바꿈을 삽입합니다. 경우 &lt;var&gt;number-of-newlines&lt;/var&gt; 공급, 많은 개행 문자가 삽입됩니다. 대화 형 호출에서 줄 &lt;var&gt;number-of-newlines&lt;/var&gt; 는 숫자 접두사 인수입니다.</target>
        </trans-unit>
        <trans-unit id="10d91e2db2ec210a0ecc91241ecef7992c6f3ac3" translate="yes" xml:space="preserve">
          <source>This command inserts spaces between the words of the current line so that the line ends exactly at &lt;code&gt;fill-column&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 줄이 정확히 &lt;code&gt;fill-column&lt;/code&gt; 에서 끝나도록 현재 줄의 단어 사이에 공백을 삽입합니다 . &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6b0cd33fa3471773723d5fc01a50786b892b7a90" translate="yes" xml:space="preserve">
          <source>This command inserts spaces or tabs before point, up to the next tab stop column defined by &lt;code&gt;tab-stop-list&lt;/code&gt;.</source>
          <target state="translated">이 명령은 &lt;code&gt;tab-stop-list&lt;/code&gt; 로 정의 된 다음 탭 중지 열까지 포인트 앞에 공백 또는 탭을 삽입 합니다 .</target>
        </trans-unit>
        <trans-unit id="135878bb1fa11119f45ff9a414a7db8bfe0c0784" translate="yes" xml:space="preserve">
          <source>This command inserts the character &lt;var&gt;char&lt;/var&gt; (the last character typed); it does so &lt;var&gt;count&lt;/var&gt; times, before point, and returns &lt;code&gt;nil&lt;/code&gt;. Most printing characters are bound to this command. In routine use, &lt;code&gt;self-insert-command&lt;/code&gt; is the most frequently called function in Emacs, but programs rarely use it except to install it on a keymap.</source>
          <target state="translated">이 명령은 문자 &lt;var&gt;char&lt;/var&gt; (입력 한 마지막 문자)를 삽입합니다 . 그렇게 않습니다 &lt;var&gt;count&lt;/var&gt; 시점 전에, 시간을, 그리고 반환 &lt;code&gt;nil&lt;/code&gt; 을 . 대부분의 인쇄 문자는이 명령에 바인딩됩니다. 일상적인 사용에서 &lt;code&gt;self-insert-command&lt;/code&gt; 는 Emacs에서 가장 자주 호출되는 함수이지만 프로그램은 키맵에 설치하는 것 외에는 거의 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9626d7b3e3b091a37ee5ebbf01c44cecd8ac2fd6" translate="yes" xml:space="preserve">
          <source>This command inserts the contents of file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are non-&lt;code&gt;nil&lt;/code&gt;, they specify which part of the file to read, as in &lt;code&gt;insert-file-contents&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;).</source>
          <target state="translated">이 명령은 파일 &lt;var&gt;file&lt;/var&gt; 의 내용을 삽입하여 형식 &lt;var&gt;format&lt;/var&gt; 에 따라 변환 합니다 . 경우 &lt;var&gt;beg&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , 그들과 같이 읽을 수있는 파일의 어느 부분을 지정 &lt;code&gt;insert-file-contents&lt;/code&gt; (참조 &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;파일에서 읽기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="da7021fdc034c60b00dcf1ab5f2bc90527eb6799" translate="yes" xml:space="preserve">
          <source>This command inserts the entire accessible contents of &lt;var&gt;from-buffer-or-name&lt;/var&gt; (which must exist) into the current buffer after point. It leaves the mark after the inserted text. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 &lt;var&gt;from-buffer-or-name&lt;/var&gt; (존재해야 함) 의 액세스 가능한 전체 내용을 포인트 이후 현재 버퍼에 삽입합니다. 삽입 된 텍스트 뒤에 마크를 남깁니다. 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="88e1677d378687ba4ac004484580576a9429d773" translate="yes" xml:space="preserve">
          <source>This command inserts whitespace at point, extending to the same column as the next &lt;em&gt;indent point&lt;/em&gt; of the previous nonblank line. An indent point is a non-whitespace character following whitespace. The next indent point is the first one at a column greater than the current column of point. For example, if point is underneath and to the left of the first non-blank character of a line of text, it moves to that column by inserting whitespace.</source>
          <target state="translated">이 명령은 공백이 아닌 이전 줄 의 다음 &lt;em&gt;들여 쓰기 지점&lt;/em&gt; 과 동일한 열로 확장하여 지점에 공백을 삽입합니다 . 들여 쓰기 지점은 공백 뒤에 오는 공백이 아닌 문자입니다. 다음 들여 쓰기 포인트는 포인트의 현재 컬럼보다 큰 컬럼에서 첫 번째 포인트입니다. 예를 들어, 포인트가 텍스트 행의 공백이 아닌 첫 번째 문자의 왼쪽 아래에있는 경우 공백을 삽입하여 해당 열로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9595ecd60bd448bf2daea0ea991b68b101ac3102" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-backward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace.</source>
          <target state="translated">이 명령은 동일 &lt;code&gt;word-search-backward&lt;/code&gt; , 시작 또는 종료하는 것을 제외하고 &lt;var&gt;string&lt;/var&gt; 하지 않는 한 필요, 단어 경계와 일치하지 &lt;var&gt;string&lt;/var&gt; 공백에서 시작 또는 끝.</target>
        </trans-unit>
        <trans-unit id="58d41366864bbff2a5b943d6b2e3fe42436c078a" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-forward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace. For instance, searching for &amp;lsquo;</source>
          <target state="translated">이 명령은 동일 &lt;code&gt;word-search-forward&lt;/code&gt; , 시작 또는 종료하는 것을 제외하고 &lt;var&gt;string&lt;/var&gt; 하지 않는 한 필요, 단어 경계와 일치하지 &lt;var&gt;string&lt;/var&gt; 공백에서 시작 또는 끝. 예를 들어 '</target>
        </trans-unit>
        <trans-unit id="ed953efc17ba150660976b3a7ae8e39f29a1f27a" translate="yes" xml:space="preserve">
          <source>This command is like &lt;code&gt;down-list&lt;/code&gt; but it also pays attention to nesting of tokens other than parentheses, such as &lt;code&gt;begin...end&lt;/code&gt;.</source>
          <target state="translated">이 명령은 &lt;code&gt;down-list&lt;/code&gt; 와 비슷 하지만 &lt;code&gt;begin...end&lt;/code&gt; 와 같은 괄호 이외의 토큰 중첩에도주의를 기울 입니다.</target>
        </trans-unit>
        <trans-unit id="90fafcf0ce43e375742f52a0d7669e6be587582c" translate="yes" xml:space="preserve">
          <source>This command loads the file &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;filename&lt;/var&gt; is a relative file name, then the current default directory is assumed. This command does not use &lt;code&gt;load-path&lt;/code&gt;, and does not append suffixes. However, it does look for compressed versions (if Auto Compression Mode is enabled). Use this command if you wish to specify precisely the file name to load.</source>
          <target state="translated">이 명령은 &lt;var&gt;filename&lt;/var&gt; 파일을로드합니다 . 경우 &lt;var&gt;filename&lt;/var&gt; 상대 파일 이름, 현재 기본 디렉토리는 가정한다. 이 명령은 &lt;code&gt;load-path&lt;/code&gt; 를 사용 하지 않으며 접미사를 추가하지 않습니다. 그러나 압축 된 버전을 찾습니다 (자동 압축 모드가 활성화 된 경우). 로드 할 파일 이름을 정확하게 지정하려면이 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f2935f28ba5712dfbbb71ecbcf2657b64610540c" translate="yes" xml:space="preserve">
          <source>This command loads the library named &lt;var&gt;library&lt;/var&gt;. It is equivalent to &lt;code&gt;load&lt;/code&gt;, except for the way it reads its argument interactively. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp Libraries&lt;/a&gt; in</source>
          <target state="translated">이 명령은 library라는 &lt;var&gt;library&lt;/var&gt; 로드합니다 . 그것은에 해당 &lt;code&gt;load&lt;/code&gt; 가 대화 형으로 인수를 읽는 방법을 제외하고. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp 라이브러리&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="160191d4bb44ed7e81142348d251f7dfc55427c1" translate="yes" xml:space="preserve">
          <source>This command loads the library named &lt;var&gt;library&lt;/var&gt;. It is equivalent to &lt;code&gt;load&lt;/code&gt;, except for the way it reads its argument interactively. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp Libraries&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef39c045e00a0f5acb130f922e0ab1680aa3f4f" translate="yes" xml:space="preserve">
          <source>This command makes &lt;var&gt;buffer-or-name&lt;/var&gt; appear in some window, without selecting the window or making the buffer current. The argument &lt;var&gt;buffer-or-name&lt;/var&gt; must be a buffer or the name of an existing buffer. The return value is the window chosen to display the buffer, or &lt;code&gt;nil&lt;/code&gt; if no suitable window was found.</source>
          <target state="translated">이 명령은 창을 선택하거나 버퍼를 현재 상태로 만들지 않고 일부 창에 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 표시합니다. &lt;var&gt;buffer-or-name&lt;/var&gt; 인수 는 버퍼 또는 기존 버퍼의 이름 이어야합니다. 반환 값은 버퍼를 표시하기 위해 선택한 창이거나 적절한 창이 없으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="230b6284a7b0d716c80f10b4addf825eacbaeb1a" translate="yes" xml:space="preserve">
          <source>This command makes a symbolic link to &lt;var&gt;target&lt;/var&gt;, named &lt;var&gt;linkname&lt;/var&gt;. This is like the shell command &amp;lsquo;</source>
          <target state="translated">이 명령은 &lt;var&gt;linkname&lt;/var&gt; 이라는 &lt;var&gt;target&lt;/var&gt; 대한 심볼릭 링크를 만듭니다 . 이것은 쉘 명령 '</target>
        </trans-unit>
        <trans-unit id="1289d6efb469369728dd95ac27321e796c44ac18" translate="yes" xml:space="preserve">
          <source>This command marks the buffer as modified, since it does not (as far as Emacs knows) match the contents of &lt;var&gt;filename&lt;/var&gt;, even if it matched the former visited file. It also renames the buffer to correspond to the new file name, unless the new name is already in use.</source>
          <target state="translated">이 명령 은 이전에 방문한 파일과 일치하더라도 &lt;var&gt;filename&lt;/var&gt; 의 내용과 일치하지 않기 때문에 (Emacs가 알고있는 한) 버퍼를 수정 된 것으로 표시 합니다. 또한 새 이름이 이미 사용중인 경우가 아니면 새 파일 이름에 해당하도록 버퍼 이름을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="3045463093bc030acf63701d5fa42bd3099cd946" translate="yes" xml:space="preserve">
          <source>This command marks the current buffer as unmodified, and not needing to be saved. If &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it marks the buffer as modified, so that it will be saved at the next suitable occasion. Interactively, &lt;var&gt;arg&lt;/var&gt; is the prefix argument.</source>
          <target state="translated">이 명령은 현재 버퍼를 수정되지 않은 것으로 표시하며 저장할 필요가 없습니다. 경우 &lt;var&gt;arg&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; , 그 변성 버퍼로 표시되므로는 다음 기회에 적합한 저장 될 것이다. 대화식으로 &lt;var&gt;arg&lt;/var&gt; 는 접두사 인수입니다.</target>
        </trans-unit>
        <trans-unit id="83dce7265fe49cc7961dc06b31c244e25c921259" translate="yes" xml:space="preserve">
          <source>This command marks the current location of point as the beginning of an abbrev. The next call to &lt;code&gt;expand-abbrev&lt;/code&gt; will use the text from here to point (where it is then) as the abbrev to expand, rather than using the previous word as usual.</source>
          <target state="translated">이 명령은 현재 지점 위치를 약어의 시작으로 표시합니다. &lt;code&gt;expand-abbrev&lt;/code&gt; 에 대한 다음 호출 은 평소와 같이 이전 단어를 사용하는 대신 여기에서 가리키는 텍스트를 확장 할 약어로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e6b4c7abace5f19e4e74417132ebc0b612ae42f7" translate="yes" xml:space="preserve">
          <source>This command moves point backward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">이 명령은 포인트를 뒤로 &lt;var&gt;arg&lt;/var&gt; 줄을 이동 한 다음 해당 줄의 공백이 아닌 첫 번째 문자로 이동합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 경우 &lt;var&gt;arg&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 1, 기본값.</target>
        </trans-unit>
        <trans-unit id="72f9b5cc81ad8b1d9723183c58f4b81888dd722f" translate="yes" xml:space="preserve">
          <source>This command moves point forward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">이 명령은 점 앞으로 &lt;var&gt;arg&lt;/var&gt; 줄을 이동 한 다음 해당 줄의 공백이 아닌 첫 번째 문자로 이동합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 경우 &lt;var&gt;arg&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 1, 기본값.</target>
        </trans-unit>
        <trans-unit id="54e975e6175492e7858c03b57a5e94deab998c6a" translate="yes" xml:space="preserve">
          <source>This command moves point to the first non-whitespace character in the current line (which is the line in which point is located). It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 현재 줄 (포인트가있는 줄)에서 공백이 아닌 첫 번째 문자로 포인트를 이동합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="16bea2b736885b9c1690ddce930c3c97f115aced" translate="yes" xml:space="preserve">
          <source>This command performs abbrev expansion if Abbrev mode is enabled and the inserted character does not have word-constituent syntax. (See &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt;, and &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;.) It is also responsible for calling &lt;code&gt;blink-paren-function&lt;/code&gt; when the inserted character has close parenthesis syntax (see &lt;a href=&quot;blinking#Blinking&quot;&gt;Blinking&lt;/a&gt;).</source>
          <target state="translated">이 명령은 Abbrev 모드가 사용 가능하고 삽입 된 문자에 단어 구성 구문이없는 경우 abbrev 확장을 수행합니다. ( &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt; 및 &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt; 참조 ) 삽입 된 문자에 닫는 괄호 구문이있을 때 &lt;code&gt;blink-paren-function&lt;/code&gt; 을 호출하는 역할도 합니다 ( &lt;a href=&quot;blinking#Blinking&quot;&gt;Blinking&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e69e1e968d5bd8894bf4aa234a5af4025b9c34ec" translate="yes" xml:space="preserve">
          <source>This command performs several complex steps to find a window to display in. These steps are described by means of &lt;em&gt;display actions&lt;/em&gt;, which have the form &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;functions&lt;/var&gt; is either a single function or a list of functions, referred to as &amp;ldquo;action functions&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;); and &lt;var&gt;alist&lt;/var&gt; is an association list, referred to as &amp;ldquo;action alist&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;). See &lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;The Zen of Buffer Display&lt;/a&gt;, for samples of display actions.</source>
          <target state="translated">이 명령에 표시하는 윈도우를 찾기 위해 여러 가지 복잡한 단계를 수행한다.이 단계를 통해 설명되어 &lt;em&gt;표시 동작&lt;/em&gt; 형태가, &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; . 여기서 &lt;var&gt;functions&lt;/var&gt; 는 단일 함수 또는 &quot;동작 함수&quot;라고하는 함수 목록입니다 ( &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;버퍼 표시 동작 함수&lt;/a&gt; 참조 ). 및 &lt;var&gt;alist&lt;/var&gt; 는 &quot;액션 alist&quot;이라 연관리스트이다 (참조 &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;버퍼 디스플레이 동작을 Alists&lt;/a&gt; ). 디스플레이 작업의 샘플은 &lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;The Zen of Buffer Display를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac874fec4a2255555483d76cfda857b73f19b6f5" translate="yes" xml:space="preserve">
          <source>This command pops up a window displaying a help buffer containing a listing of all of the key bindings from both the local and global keymaps. It works by calling &lt;code&gt;describe-bindings&lt;/code&gt;.</source>
          <target state="translated">이 명령은 로컬 및 글로벌 키맵의 모든 키 바인딩 목록을 포함하는 도움말 버퍼를 표시하는 창을 팝업합니다. &lt;code&gt;describe-bindings&lt;/code&gt; 를 호출하여 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="5723fae69ad70eaec1a0c94cc1880e06995dbf6e" translate="yes" xml:space="preserve">
          <source>This command provides help for the current mode. It prompts the user in the minibuffer with the message &amp;lsquo;</source>
          <target state="translated">이 명령은 현재 모드에 대한 도움말을 제공합니다. 미니 버퍼의 사용자에게 '</target>
        </trans-unit>
        <trans-unit id="3d5429dbf77aa466883c3c347ea5afc4d4ecb447" translate="yes" xml:space="preserve">
          <source>This command puts &lt;var&gt;buffer-or-name&lt;/var&gt; at the end of the buffer list, without changing the order of any of the other buffers on the list. This buffer therefore becomes the least desirable candidate for &lt;code&gt;other-buffer&lt;/code&gt; to return. The argument can be either a buffer itself or the name of one.</source>
          <target state="translated">이 명령은 목록에있는 다른 버퍼의 순서를 변경하지 않고 버퍼 목록 끝에 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 넣습니다 . 따라서이 버퍼는 &lt;code&gt;other-buffer&lt;/code&gt; 가 반환 하기에 가장 바람직하지 않은 후보가됩니다 . 인수는 버퍼 자체이거나 버퍼의 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc70666f0de62aefc6b885233548b561b4ad9a48" translate="yes" xml:space="preserve">
          <source>This command puts a &lt;code&gt;charset&lt;/code&gt; text property on the decoded text. The value of the property states the character set used to decode the original text.</source>
          <target state="translated">이 명령은 디코딩 된 텍스트에 &lt;code&gt;charset&lt;/code&gt; 텍스트 속성을 추가합니다. 속성 값은 원본 텍스트를 디코딩하는 데 사용되는 문자 집합을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6de88c91142fa60f7a754c756b7132dd95fde0b0" translate="yes" xml:space="preserve">
          <source>This command quits &lt;var&gt;window&lt;/var&gt; and buries its buffer. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. With prefix argument &lt;var&gt;kill&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;, it kills the buffer instead of burying it. It calls the function &lt;code&gt;quit-restore-window&lt;/code&gt; described next to deal with the window and its buffer.</source>
          <target state="translated">이 명령은 &lt;var&gt;window&lt;/var&gt; 종료 하고 버퍼를 묻습니다. 인수 &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창입니다. 접두사 인수 &lt;var&gt;kill&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; 을 사용하면 버퍼를 묻지 않고 버퍼를 죽입니다. 창과 버퍼를 처리하기 위해 다음에 설명 된 &lt;code&gt;quit-restore-window&lt;/code&gt; 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="7784be5e054a212086b929e5c18f79147958b099" translate="yes" xml:space="preserve">
          <source>This command reads input and specifies a prefix argument for the following command. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">이 명령은 입력을 읽고 다음 명령에 대한 접두사 인수를 지정합니다. 수행중인 작업을 알지 못하는 경우이 명령을 직접 호출하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="1591295b8cfc29c22db263b3bad15c3dee78fff3" translate="yes" xml:space="preserve">
          <source>This command reads the defun containing point, compiles it, and evaluates the result. If you use this on a defun that is actually a function definition, the effect is to install a compiled version of that function.</source>
          <target state="translated">이 명령은 defun 포함 지점을 읽고 컴파일하고 결과를 평가합니다. 실제로 함수 정의 인 defun에 이것을 사용하면 그 함수의 컴파일 된 버전을 설치하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccfd5aea208043148d6cc8208a6715303f29ede5" translate="yes" xml:space="preserve">
          <source>This command recompiles every &amp;lsquo;</source>
          <target state="translated">이 명령은 모든 '</target>
        </trans-unit>
        <trans-unit id="9751089f918672ad55bc34859638929401a63127" translate="yes" xml:space="preserve">
          <source>This command reindents the current line, inserts a newline at point, and then indents the new line (the one following the newline just inserted). It does indentation on both lines by calling &lt;code&gt;indent-according-to-mode&lt;/code&gt;.</source>
          <target state="translated">이 명령은 현재 줄을 다시 들여 쓰고 포인트에 줄 바꿈을 삽입 한 다음 새 줄 (방금 삽입 한 줄 바꿈 다음 줄)을 들여 씁니다. &lt;code&gt;indent-according-to-mode&lt;/code&gt; 를 호출하여 두 줄 모두 들여 쓰기를 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="674d87b8e0fd1f4a4a927563f934f31afe0923bb" translate="yes" xml:space="preserve">
          <source>This command renames the file &lt;var&gt;filename&lt;/var&gt; as &lt;var&gt;newname&lt;/var&gt;.</source>
          <target state="translated">이 명령은 파일 파일 &lt;var&gt;filename&lt;/var&gt; 을 &lt;var&gt;newname&lt;/var&gt; 으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="33cf144a77ee4443b03cc309d47171aef5c0b36b" translate="yes" xml:space="preserve">
          <source>This command replaces &lt;var&gt;buffer-or-name&lt;/var&gt; with some other buffer, in all windows displaying it. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of an existing buffer; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">이 명령은 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 표시하는 모든 창에서 다른 버퍼로 대체 합니다. &lt;var&gt;buffer-or-name&lt;/var&gt; 은 버퍼이거나 기존 버퍼의 이름 이어야합니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본값은 현재 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="f0d050a5b45aa2c2f46e017a12604b72c2821556" translate="yes" xml:space="preserve">
          <source>This command replaces any spaces and tabs around point with a single space, or &lt;var&gt;n&lt;/var&gt; spaces if &lt;var&gt;n&lt;/var&gt; is specified. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 명령은 포인트 주변의 모든 공백과 탭을 단일 공백으로 대체하거나 &lt;var&gt;n&lt;/var&gt; 이 지정된 경우 n &lt;var&gt;n&lt;/var&gt; 공백을 대체 합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e9518563dd9b2c45fb46443171d7c29cc191c74d" translate="yes" xml:space="preserve">
          <source>This command replaces the buffer text with the text of the visited file on disk. This action undoes all changes since the file was visited or saved.</source>
          <target state="translated">이 명령은 버퍼 텍스트를 디스크에서 방문한 파일의 텍스트로 바꿉니다. 이 작업은 파일을 방문하거나 저장 한 이후의 모든 변경 사항을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="22808ff36144900f2e5e944e00da7f623fd4b3a9" translate="yes" xml:space="preserve">
          <source>This command replaces the just-yanked entry from the kill ring with a different entry from the kill ring.</source>
          <target state="translated">이 명령은 킬 링에서 방금 잡아 당긴 항목을 킬 링과 다른 항목으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="07ac52ca608a413584040db481dee6b468476618" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th more recent history element. The position in the history can go beyond the current position and invoke &amp;ldquo;future history&amp;rdquo; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</source>
          <target state="translated">이 명령은 미니 버퍼 내용을 &lt;var&gt;n&lt;/var&gt; 번째 최근 내역 요소 의 값으로 바꿉니다 . 히스토리의 위치는 현재 위치를 넘어서 &quot;미래 히스토리&quot;를 호출 할 수 있습니다 ( &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;미니 버퍼의 텍스트&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="13cd76f72c08b167d7fb003a1c860df5865ff580" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">이 명령은 미니 버퍼 내용을 포인트 이전에 미니 버퍼의 현재 내용을 완료하는 &lt;var&gt;n&lt;/var&gt; 번째 다음 (최신) 히스토리 요소 의 값으로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="b3e0669734868d90d1fcc758500f408c04bc7dfd" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">이 명령은 미니 버퍼 내용을 &lt;var&gt;pattern&lt;/var&gt; (정규식) 과 일치 하는 &lt;var&gt;n&lt;/var&gt; 번째 다음 (최신) 히스토리 요소 의 값으로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="3b282fe8a23854b6e15eced034c6b71d3945b917" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">이 명령은 미니 버퍼 내용을 포인트 이전에 미니 버퍼의 현재 내용을 완료하는 &lt;var&gt;n&lt;/var&gt; 번째 이전 (이전) 히스토리 요소 의 값으로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="497734350baee3d7a9cc50f04dce49e9cd162e22" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">이 명령은 미니 버퍼 내용을 &lt;var&gt;pattern&lt;/var&gt; (정규식) 과 일치 하는 &lt;var&gt;n&lt;/var&gt; 번째 이전 (이전) 히스토리 요소 의 값으로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="9f32df32b75fee1a1b696fe1b671ad61199effd0" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element.</source>
          <target state="translated">이 명령은 미니 버퍼 내용을 &lt;var&gt;n&lt;/var&gt; 번째 이전 (이전) 히스토리 요소 의 값으로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="638e9bd64e02db086d2bae52aaade55f7482e7f0" translate="yes" xml:space="preserve">
          <source>This command returns &lt;code&gt;t&lt;/code&gt; if there were no errors and &lt;code&gt;nil&lt;/code&gt; otherwise. When called interactively, it prompts for the file name.</source>
          <target state="translated">이 명령은 오류가 없으면 &lt;code&gt;t&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 대화식으로 호출하면 파일 이름을 입력하라는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="10ca3b92e36af6ad1335e500f3c9780ba8e9a634" translate="yes" xml:space="preserve">
          <source>This command runs a garbage collection, and returns information on the amount of space in use. (Garbage collection can also occur spontaneously if you use more than &lt;code&gt;gc-cons-threshold&lt;/code&gt; bytes of Lisp data since the previous garbage collection.)</source>
          <target state="translated">이 명령은 가비지 수집을 실행하고 사용중인 공간에 대한 정보를 반환합니다. ( 이전 가비지 수집 이후에 Lisp 데이터의 &lt;code&gt;gc-cons-threshold&lt;/code&gt; 바이트 이상을 사용하는 경우 가비지 수집이 자발적으로 발생할 수도 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="287189d05b8e5e37d32c497a6b1eee7be4d183d7" translate="yes" xml:space="preserve">
          <source>This command saves some modified file-visiting buffers. Normally it asks the user about each buffer. But if &lt;var&gt;save-silently-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it saves all the file-visiting buffers without querying the user.</source>
          <target state="translated">이 명령은 일부 수정 된 파일 방문 버퍼를 저장합니다. 일반적으로 사용자에게 각 버퍼에 대해 묻습니다. 그러나 &lt;var&gt;save-silently-p&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 사용자에게 쿼리하지 않고 모든 파일 방문 버퍼를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a65db190be7f6c671adcc98a7f3f5116e59141fd" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, but does so in a window other than the selected window. It may use another existing window or split a window; see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;.</source>
          <target state="translated">이 명령은 &lt;var&gt;filename&lt;/var&gt; 파일을 방문하는 버퍼를 선택 하지만 선택한 창이 아닌 다른 창에서 선택합니다. 다른 기존 창을 사용하거나 창을 분할 할 수 있습니다. &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;버퍼 전환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="619c7615c5651d8ad33d34daff2f42c9a21daef4" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt;, but it marks the buffer as read-only. See &lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;Read Only Buffers&lt;/a&gt;, for related functions and variables.</source>
          <target state="translated">이 명령 은 &lt;code&gt;find-file&lt;/code&gt; 과 같이 &lt;var&gt;filename&lt;/var&gt; 파일을 방문하는 버퍼를 선택 하지만 버퍼를 읽기 전용으로 표시합니다. 관련 함수 및 변수는 &lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;읽기 전용 버퍼를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="37e929336c842c198502c93ddeffe557c6b40269" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, using an existing buffer if there is one, and otherwise creating a new buffer and reading the file into it. It also returns that buffer.</source>
          <target state="translated">이 명령은 &lt;var&gt;filename&lt;/var&gt; 파일을 방문하는 버퍼를 선택하고 , 기존 버퍼가있는 경우 기존 버퍼를 사용하고, 그렇지 않으면 새 버퍼를 생성하고 파일을 읽어옵니다. 또한 해당 버퍼를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="13ded09804e080074b521082674aed70b9290aa1" translate="yes" xml:space="preserve">
          <source>This command sets the value of the environment variable named &lt;var&gt;variable&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. &lt;var&gt;variable&lt;/var&gt; should be a string. Internally, Emacs Lisp can handle any string. However, normally &lt;var&gt;variable&lt;/var&gt; should be a valid shell identifier, that is, a sequence of letters, digits and underscores, starting with a letter or underscore. Otherwise, errors may occur if subprocesses of Emacs try to access the value of &lt;var&gt;variable&lt;/var&gt;. If &lt;var&gt;value&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; (or, interactively, with a prefix argument), &lt;code&gt;setenv&lt;/code&gt; removes &lt;var&gt;variable&lt;/var&gt; from the environment. Otherwise, &lt;var&gt;value&lt;/var&gt; should be a string.</source>
          <target state="translated">이 명령은 환경 변수라는 이름의 값으로 설정 &lt;var&gt;variable&lt;/var&gt; 에 &lt;var&gt;value&lt;/var&gt; . &lt;var&gt;variable&lt;/var&gt; 는 문자열이어야합니다. 내부적으로 Emacs Lisp는 모든 문자열을 처리 할 수 ​​있습니다. 그러나 일반적으로 &lt;var&gt;variable&lt;/var&gt; 는 유효한 쉘 식별자, 즉 문자 또는 밑줄로 시작하는 문자, 숫자 및 밑줄의 시퀀스 여야합니다. 그렇지 않으면 Emacs의 하위 프로세스가 &lt;var&gt;variable&lt;/var&gt; 값에 액세스하려고하면 오류가 발생할 수 있습니다 . 경우 &lt;var&gt;value&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; (접두사 인수 대화식 또는) &lt;code&gt;setenv&lt;/code&gt; 제거 &lt;var&gt;variable&lt;/var&gt; 환경에서. 그렇지 않으면 &lt;var&gt;value&lt;/var&gt; 은 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8fcaeef993ea25251e9368bd64870310e08df302" translate="yes" xml:space="preserve">
          <source>This command shows a list of &lt;em&gt;shadowed&lt;/em&gt; Emacs Lisp files. A shadowed file is one that will not normally be loaded, despite being in a directory on &lt;code&gt;load-path&lt;/code&gt;, due to the existence of another similarly-named file in a directory earlier on &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">이 명령은 &lt;em&gt;숨겨진&lt;/em&gt; Emacs Lisp 파일 목록을 보여줍니다 . 섀도우 파일은 이전에 &lt;code&gt;load-path&lt;/code&gt; 디렉토리에 비슷한 이름의 다른 파일이 있기 때문에 &lt;code&gt;load-path&lt;/code&gt; 의 디렉토리에 있음에도 불구하고 일반적으로로드되지 않는 파일입니다 .</target>
        </trans-unit>
        <trans-unit id="07f6c3981498b51aac23952451390d803e768897" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. If &lt;var&gt;field&lt;/var&gt; is negative, sorting is by the -&lt;var&gt;field&lt;/var&gt;th field from the end of the line. This command is useful for sorting tables.</source>
          <target state="translated">이 명령은 &lt;var&gt;start&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이의 영역에서 줄을 정렬 하여 각 줄 의 &lt;var&gt;field&lt;/var&gt; th 필드를 기준으로 알파벳순으로 비교합니다 . 필드는 공백으로 구분되고 1부터 시작하여 번호가 지정됩니다. &lt;var&gt;field&lt;/var&gt; 가 음수이면 행 끝에서 - &lt;var&gt;field&lt;/var&gt; 번째 필드를 기준으로 정렬 됩니다. 이 명령은 테이블 정렬에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3019d8e29e6476b8ff59ceed7b700968370b929b" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them numerically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. The specified field must contain a number in each line of the region. Numbers starting with 0 are treated as octal, and numbers starting with &amp;lsquo;</source>
          <target state="translated">이 명령은 &lt;var&gt;start&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이의 영역에서 줄을 정렬 하여 각 줄 의 &lt;var&gt;field&lt;/var&gt; th 필드를 기준으로 숫자를 비교합니다 . 필드는 공백으로 구분되며 1부터 번호가 매겨집니다. 지정된 필드는 영역의 각 줄에 숫자를 포함해야합니다. 0으로 시작하는 숫자는 8 진수로 처리되고 '로 시작하는 숫자는</target>
        </trans-unit>
        <trans-unit id="3f75fc7ca83d71510b5e60c2231077f6130bda3c" translate="yes" xml:space="preserve">
          <source>This command sorts the lines in the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by a certain range of columns. The column positions of &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; bound the range of columns to sort on.</source>
          <target state="translated">이 명령은 &lt;var&gt;beg&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이의 영역에있는 행을 정렬하여 특정 열 범위를 기준으로 알파벳순으로 비교합니다. &lt;var&gt;beg&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 의 열 위치는 정렬 할 열 범위를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="57757a00ef15c31f9fc056499bcdca26426aeaa5" translate="yes" xml:space="preserve">
          <source>This command sorts the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; alphabetically as specified by &lt;var&gt;record-regexp&lt;/var&gt; and &lt;var&gt;key-regexp&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is a negative integer, then sorting is in reverse order.</source>
          <target state="translated">이 명령 은 &lt;var&gt;record-regexp&lt;/var&gt; 및 &lt;var&gt;key-regexp&lt;/var&gt; 에 지정된대로 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 영역을 알파벳순으로 정렬합니다 . 경우 &lt;var&gt;reverse&lt;/var&gt; 음의 정수이며, 다음 정렬이 역순이다.</target>
        </trans-unit>
        <trans-unit id="ba41cb2c6960acb24c793517b69fd12158f503c0" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for decoding keyboard input from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to decode keyboard input. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">이 명령 은 코딩 시스템을 &lt;var&gt;terminal&lt;/var&gt; 에서 키보드 입력을 디코딩하는 데 사용할 코딩 &lt;var&gt;coding-system&lt;/var&gt; 으로 지정합니다 . 경우 &lt;var&gt;coding-system&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; 하지 디코드 키보드 입력을 의미한다. 경우 &lt;var&gt;terminal&lt;/var&gt; 프레임은, 그 프레임의 단말 수단; 그 경우 &lt;code&gt;nil&lt;/code&gt; , 현재 선택된 단말의 프레임을 의미한다. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;다중 터미널을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="0dc215892711b17131d8d46b78cbf66e212449eb" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for encoding terminal output from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to encode terminal output. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">이 명령은 terminal에서 출력되는 &lt;var&gt;terminal&lt;/var&gt; 출력을 인코딩하는 데 사용할 코딩 &lt;var&gt;coding-system&lt;/var&gt; 으로 coding-system 을 지정합니다 . 경우 &lt;var&gt;coding-system&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; 있다는 것을 의미하지 인코딩 출력 단자. 경우 &lt;var&gt;terminal&lt;/var&gt; 프레임은, 그 프레임의 단말 수단; 그 경우 &lt;code&gt;nil&lt;/code&gt; , 현재 선택된 단말의 프레임을 의미한다.</target>
        </trans-unit>
        <trans-unit id="31ef5d19b3155f5becd62fb28fc0818272b9cc71" translate="yes" xml:space="preserve">
          <source>This command swaps the states of the two live windows &lt;var&gt;window-1&lt;/var&gt; and &lt;var&gt;window-2&lt;/var&gt;. &lt;var&gt;window-1&lt;/var&gt; must specify a live window and defaults to the selected one. &lt;var&gt;window-2&lt;/var&gt; must specify a live window and defaults to the window following &lt;var&gt;window-1&lt;/var&gt; in the cyclic ordering of windows, excluding minibuffer windows and including live windows on all visible frames.</source>
          <target state="translated">이 명령은 두 개의 라이브 창 &lt;var&gt;window-1&lt;/var&gt; 및 &lt;var&gt;window-2&lt;/var&gt; 의 상태를 바꿉니다 . &lt;var&gt;window-1&lt;/var&gt; 은 라이브 창을 지정해야하며 기본값은 선택한 창으로 설정됩니다. &lt;var&gt;window-2&lt;/var&gt; 는 라이브 창을 지정해야하며 , 미니 버퍼 창을 제외하고 모든 보이는 프레임의 라이브 창을 포함하여 창의 순환 순서에서 &lt;var&gt;window-1&lt;/var&gt; 다음의 창을 기본값으로 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="38ad262b9ef6f144a88897489a62c92c0533d472" translate="yes" xml:space="preserve">
          <source>This command switches to the last buffer in the local buffer list of the selected frame. More precisely, it calls the function &lt;code&gt;switch-to-buffer&lt;/code&gt; (see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;), to display the buffer returned by &lt;code&gt;last-buffer&lt;/code&gt; (see above), in the selected window.</source>
          <target state="translated">이 명령은 선택한 프레임의 로컬 버퍼 목록에서 마지막 버퍼로 전환합니다. 보다 구체적으로, 그것은 호출 기능 &lt;code&gt;switch-to-buffer&lt;/code&gt; (참조 &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;버퍼 전환&lt;/a&gt; 에 의해 리턴 버퍼 표시하는) &lt;code&gt;last-buffer&lt;/code&gt; 선택된 창 (상기 참조).</target>
        </trans-unit>
        <trans-unit id="cfb86fe983df33f50f05c06e7ced705595b9ec16" translate="yes" xml:space="preserve">
          <source>This command switches to the next buffer in &lt;var&gt;window&lt;/var&gt;, thus undoing the effect of the last &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; command in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">이 명령에서 다음 버퍼로 전환 &lt;var&gt;window&lt;/var&gt; 따라서 최종 효과 취소, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 에서 명령 &lt;var&gt;window&lt;/var&gt; . 인수 &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="d9ffcd53e229520bbe0937ce47720e3e3f705fc8" translate="yes" xml:space="preserve">
          <source>This command toggles side windows on the specified &lt;var&gt;frame&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">이 명령은 지정된 &lt;var&gt;frame&lt;/var&gt; 측면 창을 토글합니다 . 선택적 인수 &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임 이어야하며 기본값은 선택한 프레임 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="bc39e2355c8315301a176946b4646d703991a6f2" translate="yes" xml:space="preserve">
          <source>This command tries to work out appropriate settings to produce your preferred style of indentation. Simply call the command while visiting a file that is indented with your style.</source>
          <target state="translated">이 명령은 선호하는 들여 쓰기 스타일을 생성하기 위해 적절한 설정을 시도합니다. 스타일로 들여 쓰기 된 파일을 방문하는 동안 명령을 호출하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="aec6ebd98eae587585dc1ea9fa515c8692ebbf2e" translate="yes" xml:space="preserve">
          <source>This command unloads the library that provided feature &lt;var&gt;feature&lt;/var&gt;. It undefines all functions, macros, and variables defined in that library with &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defalias&lt;/code&gt;, &lt;code&gt;defsubst&lt;/code&gt;, &lt;code&gt;defmacro&lt;/code&gt;, &lt;code&gt;defconst&lt;/code&gt;, &lt;code&gt;defvar&lt;/code&gt;, and &lt;code&gt;defcustom&lt;/code&gt;. It then restores any autoloads formerly associated with those symbols. (Loading saves these in the &lt;code&gt;autoload&lt;/code&gt; property of the symbol.)</source>
          <target state="translated">이 명령은 feature &lt;var&gt;feature&lt;/var&gt; 을 제공 한 라이브러리를 언로드합니다 . &lt;code&gt;defun&lt;/code&gt; , &lt;code&gt;defalias&lt;/code&gt; , &lt;code&gt;defsubst&lt;/code&gt; , &lt;code&gt;defmacro&lt;/code&gt; , &lt;code&gt;defconst&lt;/code&gt; , &lt;code&gt;defvar&lt;/code&gt; 및 &lt;code&gt;defcustom&lt;/code&gt; 을 사용 하여 해당 라이브러리에 정의 된 모든 함수, 매크로 및 변수를 정의 해제 합니다. 그런 다음 이전에 해당 기호와 연관된 자동로드를 복원합니다. (로드하면 심볼 의 &lt;code&gt;autoload&lt;/code&gt; 속성에 저장 됩니다.)</target>
        </trans-unit>
        <trans-unit id="356e5adce275e326509a202c8c9b173cedf5f1de" translate="yes" xml:space="preserve">
          <source>This command uses the functions &lt;code&gt;posn-window&lt;/code&gt; and &lt;code&gt;posn-point&lt;/code&gt; to determine where the click occurred, and &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; to determine which file to visit.</source>
          <target state="translated">이 명령은 &lt;code&gt;posn-window&lt;/code&gt; 및 &lt;code&gt;posn-point&lt;/code&gt; 함수를 사용하여 클릭이 발생한 위치를 확인하고 &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; 를 사용하여 방문 할 파일을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="70fe8bc0bd2afe94a6c2200d117768d0b7bd40a2" translate="yes" xml:space="preserve">
          <source>This command visits &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt; does, but it does not perform any format conversions (see &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;), character code conversions (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), or end-of-line conversions (see &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;End of line conversion&lt;/a&gt;). The buffer visiting the file is made unibyte, and its major mode is Fundamental mode, regardless of the file name. File local variable specifications in the file (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;) are ignored, and automatic decompression and adding a newline at the end of the file due to &lt;code&gt;require-final-newline&lt;/code&gt; (see &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;require-final-newline&lt;/a&gt;) are also disabled.</source>
          <target state="translated">이 명령 방문의 &lt;var&gt;filename&lt;/var&gt; 과 같은, &lt;code&gt;find-file&lt;/code&gt; 않지만 (참조 모든 형식 변환을 수행하지 않는 &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;포맷 변환을&lt;/a&gt; , 문자 코드 변환 (참조) &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;시스템을 코딩&lt;/a&gt; ), 또는 줄 끝 변환이 (참조 &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;라인 전환의 끝&lt;/a&gt; ). 파일을 방문하는 버퍼는 유니 바이트로 만들어지며 주요 모드는 파일 이름에 관계없이 Fundamental 모드입니다. 파일의 파일 로컬 변수 사양 ( &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;파일 로컬 변수&lt;/a&gt; 참조 )은 무시되고 &lt;code&gt;require-final-newline&lt;/code&gt; ( &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;require-final-newline&lt;/a&gt; 참조) 으로 인해 파일 끝에 자동 압축 해제 및 새 줄 추가 도 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="cc4dc7bbf64c1061c70eb1b72dd4950577a5fd5f" translate="yes" xml:space="preserve">
          <source>This command writes the current buffer contents into the file &lt;var&gt;file&lt;/var&gt; in a format based on &lt;var&gt;format&lt;/var&gt;, which is a list of format names. It constructs the actual format starting from &lt;var&gt;format&lt;/var&gt;, then appending any elements from the value of &lt;code&gt;buffer-file-format&lt;/code&gt; with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;preserve&lt;/var&gt; flag (see above), if they are not already present in &lt;var&gt;format&lt;/var&gt;. It then updates &lt;code&gt;buffer-file-format&lt;/code&gt; with this format, making it the default for future saves. Except for the &lt;var&gt;format&lt;/var&gt; argument, this command is similar to &lt;code&gt;write-file&lt;/code&gt;. In particular, &lt;var&gt;confirm&lt;/var&gt; has the same meaning and interactive treatment as the corresponding argument to &lt;code&gt;write-file&lt;/code&gt;. See &lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;Definition of write-file&lt;/a&gt;.</source>
          <target state="translated">이 명령은 파일에 현재의 버퍼 내용을 기록 &lt;var&gt;file&lt;/var&gt; 에 따라 형식 &lt;var&gt;format&lt;/var&gt; 형식 이름의 목록입니다. 그것은부터 실제 포맷을 구성 &lt;var&gt;format&lt;/var&gt; 다음의 값으로부터 임의의 추가 구성 요소, &lt;code&gt;buffer-file-format&lt;/code&gt; 비와 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;preserve&lt;/var&gt; 이미 존재하지 않는 경우 (상기 참조) 플래그를 &lt;var&gt;format&lt;/var&gt; . 그런 다음 &lt;code&gt;buffer-file-format&lt;/code&gt; 을이 형식 으로 업데이트 하여 향후 저장을위한 기본값으로 만듭니다. &lt;var&gt;format&lt;/var&gt; 인수를 제외 하고이 명령은 &lt;code&gt;write-file&lt;/code&gt; 과 유사 합니다 . 특히,에서 &lt;var&gt;confirm&lt;/var&gt; &lt;code&gt;write-file&lt;/code&gt; 에 대한 해당 인수와 동일한 의미와 대화식 처리를 갖습니다 . &lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;쓰기 파일 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="231ec5f5ccc3d6dde477ef14115ec1745ff1897f" translate="yes" xml:space="preserve">
          <source>This command, bound to</source>
          <target state="translated">이 명령은</target>
        </trans-unit>
        <trans-unit id="1c3338397e232f86b2750514859093fc8810288c" translate="yes" xml:space="preserve">
          <source>This command, which is the default binding for</source>
          <target state="translated">이 명령은 기본 바인딩입니다.</target>
        </trans-unit>
        <trans-unit id="b5a33db16e2d6add492eed0394d609b8c28b88b4" translate="yes" xml:space="preserve">
          <source>This completely replaces the old function with the new one. The old function can of course be recovered if you later call &lt;code&gt;remove-function&lt;/code&gt;.</source>
          <target state="translated">이것은 이전 기능을 새 기능으로 완전히 대체합니다. 물론 나중에 &lt;code&gt;remove-function&lt;/code&gt; 을 호출하면 이전 함수를 복구 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c78019f6748a3a6dfca00bef66b7291ea1529488" translate="yes" xml:space="preserve">
          <source>This constant is the name of the file where Emacs expects to find the directory-local variables. The name of the file is</source>
          <target state="translated">이 상수는 Emacs가 디렉토리 로컬 변수를 찾을 것으로 예상하는 파일의 이름입니다. 파일 이름은</target>
        </trans-unit>
        <trans-unit id="cb3b8895def2bfbb6c4dd8d0eb4984894e99c3df" translate="yes" xml:space="preserve">
          <source>This construct displays a message in the echo area temporarily, during the execution of &lt;var&gt;body&lt;/var&gt;. It displays &lt;var&gt;message&lt;/var&gt;, executes &lt;var&gt;body&lt;/var&gt;, then returns the value of the last body form while restoring the previous echo area contents.</source>
          <target state="translated">이 구문은 &lt;var&gt;body&lt;/var&gt; 실행 중에 일시적으로 에코 영역에 메시지를 표시합니다 . &lt;var&gt;message&lt;/var&gt; 를 표시 하고 &lt;var&gt;body&lt;/var&gt; 를 실행 한 다음 이전 echo 영역 내용을 복원하면서 마지막 body form의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="19e009e83502b67dc27aa2e568013fdd27a55bfb" translate="yes" xml:space="preserve">
          <source>This construct does not actually match an argument. The element following &lt;code&gt;:name&lt;/code&gt; should be a symbol; it is used as an additional name component for the definition. You can use this to add a unique, static component to the name of the definition. It may be used more than once.</source>
          <target state="translated">이 구조는 실제로 인수와 일치하지 않습니다. &lt;code&gt;:name&lt;/code&gt; 뒤에 오는 요소 는 기호 여야합니다. 정의에 대한 추가 이름 구성 요소로 사용됩니다. 이를 사용하여 정의 이름에 고유 한 정적 구성 요소를 추가 할 수 있습니다. 두 번 이상 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48f87892a7b85d73b302dd7a6522316e48ec0085" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each element of &lt;var&gt;list&lt;/var&gt;, binding the variable &lt;var&gt;var&lt;/var&gt; locally to hold the current element. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. For example, here is how you could use &lt;code&gt;dolist&lt;/code&gt; to define the &lt;code&gt;reverse&lt;/code&gt; function:</source>
          <target state="translated">이 구조 는 &lt;var&gt;list&lt;/var&gt; 의 각 요소에 대해 &lt;var&gt;body&lt;/var&gt; 를 한 번씩 실행 하여 현재 요소를 유지하기 위해 &lt;var&gt;var&lt;/var&gt; 변수를 로컬로 바인딩합니다 . 그런 다음 &lt;var&gt;result&lt;/var&gt; 평가 값을 반환 하거나 &lt;var&gt;result&lt;/var&gt; 가 생략 되면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 예를 들어, &lt;code&gt;dolist&lt;/code&gt; 를 사용하여 &lt;code&gt;reverse&lt;/code&gt; 함수 를 정의하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5edeb3c65e633a355ce3aad85a8fef27095ea9cb" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each integer from 0 (inclusive) to &lt;var&gt;count&lt;/var&gt; (exclusive), binding the variable &lt;var&gt;var&lt;/var&gt; to the integer for the current iteration. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. Use of &lt;var&gt;result&lt;/var&gt; is deprecated. Here is an example of using &lt;code&gt;dotimes&lt;/code&gt; to do something 100 times:</source>
          <target state="translated">이 구조 는 0 (포함)에서 &lt;var&gt;count&lt;/var&gt; (제외) 까지 각 정수에 대해 &lt;var&gt;body&lt;/var&gt; 를 한 번씩 실행 하여 변수 &lt;var&gt;var&lt;/var&gt; 를 현재 반복의 정수에 바인딩합니다 . 그런 다음 &lt;var&gt;result&lt;/var&gt; 평가 값을 반환 하거나 &lt;var&gt;result&lt;/var&gt; 가 생략 되면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . &lt;var&gt;result&lt;/var&gt; 사용 은 더 이상 사용되지 않습니다. 다음은 &lt;code&gt;dotimes&lt;/code&gt; 를 사용하여 100 번 수행 하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="729255fd2a9e62ab0803f3c02c4b17ced59d0e9e" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt;, ignoring any errors that occur during its execution. If the execution is without error, &lt;code&gt;ignore-errors&lt;/code&gt; returns the value of the last form in &lt;var&gt;body&lt;/var&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 구문은 실행 중에 발생하는 오류를 무시하고 &lt;var&gt;body&lt;/var&gt; 를 실행합니다. 실행에 오류가 없으면 &lt;code&gt;ignore-errors&lt;/code&gt; 는 &lt;var&gt;body&lt;/var&gt; 의 마지막 양식 값을 반환합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe97e88530edbe7ffd947ec1877e85b28490bc0" translate="yes" xml:space="preserve">
          <source>This construct runs the &lt;var&gt;body&lt;/var&gt; forms and returns the value of the last one&amp;mdash;but only if no input arrives. If any input arrives during the execution of the &lt;var&gt;body&lt;/var&gt; forms, it aborts them (working much like a quit). The &lt;code&gt;while-no-input&lt;/code&gt; form returns &lt;code&gt;nil&lt;/code&gt; if aborted by a real quit, and returns &lt;code&gt;t&lt;/code&gt; if aborted by arrival of other input.</source>
          <target state="translated">이 구조는 &lt;var&gt;body&lt;/var&gt; 양식을 실행하고 마지막 항목의 값을 반환하지만 입력이 도착하지 않는 경우에만 해당됩니다. &lt;var&gt;body&lt;/var&gt; 양식을 실행하는 동안 입력이 도착하면 이를 중단합니다 (종료와 매우 유사하게 작동). &lt;code&gt;while-no-input&lt;/code&gt; 폼 반환 &lt;code&gt;nil&lt;/code&gt; 진짜 종료에 의해 중단, 반환의 경우 &lt;code&gt;t&lt;/code&gt; 다른 입력의 도착에 의해 중단합니다.</target>
        </trans-unit>
        <trans-unit id="5db1b36ddb8cefe12158ea887c23f8581f528854" translate="yes" xml:space="preserve">
          <source>This constructs and returns a new ewoc, with no nodes (and thus no data elements). &lt;var&gt;pretty-printer&lt;/var&gt; should be a function that takes one argument, a data element of the sort you plan to use in this ewoc, and inserts its textual description at point using &lt;code&gt;insert&lt;/code&gt; (and never &lt;code&gt;insert-before-markers&lt;/code&gt;, because that would interfere with the Ewoc package&amp;rsquo;s internal mechanisms).</source>
          <target state="translated">이것은 노드가없는 (따라서 데이터 요소가없는) 새 ewoc을 구성하고 리턴합니다. &lt;var&gt;pretty-printer&lt;/var&gt; 하나 개의 인수,이 ewoc에 사용하려는 종류의 데이터 요소를 가져 와서 사용하여 지점에서의 텍스트 설명을 삽입하는 기능이 있어야한다 &lt;code&gt;insert&lt;/code&gt; (결코 &lt;code&gt;insert-before-markers&lt;/code&gt; , 즉 방해하기 때문에 Ewoc 패키지의 내부 메커니즘).</target>
        </trans-unit>
        <trans-unit id="441d920027c6093e76edc8e411782a53d6bb5e30" translate="yes" xml:space="preserve">
          <source>This controls the way Edebug treats macro arguments with no explicit Edebug specification. If it is &lt;code&gt;nil&lt;/code&gt; (the default), none of the arguments is instrumented for evaluation. Otherwise, all arguments are instrumented.</source>
          <target state="translated">이것은 Edebug가 명시적인 Edebug 사양없이 매크로 인수를 처리하는 방식을 제어합니다. 이 경우 &lt;code&gt;nil&lt;/code&gt; (기본값), 인수의 아무도는 평가를 위해 계측되지 않습니다. 그렇지 않으면 모든 인수가 계측됩니다.</target>
        </trans-unit>
        <trans-unit id="1a02ef040a510f44b26c35aeb75b50ba1b7bdde8" translate="yes" xml:space="preserve">
          <source>This convenience macro marks the function &lt;var&gt;obsolete-name&lt;/var&gt; obsolete and also defines it as an alias for the function &lt;var&gt;current-name&lt;/var&gt;. It is equivalent to the following:</source>
          <target state="translated">이 편리한 매크로는 &lt;var&gt;obsolete-name&lt;/var&gt; 함수를 구식으로 표시 하고 함수 &lt;var&gt;current-name&lt;/var&gt; 의 별칭으로도 정의합니다 . 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="58832b1d25d27190f05819990c90bc4cfbcc3a90" translate="yes" xml:space="preserve">
          <source>This conversion applies only to characters, not to function keys or other input events; thus,</source>
          <target state="translated">이 변환은 기능 키 또는 기타 입력 이벤트가 아닌 문자에만 적용됩니다. 그러므로,</target>
        </trans-unit>
        <trans-unit id="79546043fcba05c53c168bdc77fbb653585fc00b" translate="yes" xml:space="preserve">
          <source>This convert the unibyte character &lt;var&gt;char&lt;/var&gt; to a multibyte character, assuming &lt;var&gt;char&lt;/var&gt; is either</source>
          <target state="translated">이것은 &lt;var&gt;char&lt;/var&gt; 가 다음 중 하나 라고 가정 하고 유니 바이트 문자 &lt;var&gt;char&lt;/var&gt; 을 멀티 바이트 문자 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="cac58ff91ecd012d9aad90d0f0a1004caffe50f4" translate="yes" xml:space="preserve">
          <source>This converts the multibyte character &lt;var&gt;char&lt;/var&gt; to a unibyte character, and returns that character. If &lt;var&gt;char&lt;/var&gt; is neither</source>
          <target state="translated">이것은 멀티 바이트 문자 &lt;var&gt;char&lt;/var&gt; 을 유니 바이트 문자로 변환하고 해당 문자를 리턴합니다. &lt;var&gt;char&lt;/var&gt; 가 둘 다 아닌 경우</target>
        </trans-unit>
        <trans-unit id="6cd8dd35aa5e580db302a8a9ecc6bc6acb3d465f" translate="yes" xml:space="preserve">
          <source>This corresponds to &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; attribute of GCC, which prevents the function from being considered for inlining. This might be needed, e.g., to countermand effects of link-time optimizations on stack-based variables.</source>
          <target state="translated">이는 GCC의 &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; 속성에 해당하며 , 함수가 인라인으로 간주되지 않도록합니다. 이는 예를 들어 스택 기반 변수에 대한 링크 시간 최적화의 효과를 상쇄하기 위해 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65593ddaa7a83e6841f2adf0699dc9186e0f9090" translate="yes" xml:space="preserve">
          <source>This could be buffer-local to do something special for specific files. If you change it, you may need to change &lt;code&gt;backup-file-name-p&lt;/code&gt; and &lt;code&gt;file-name-sans-versions&lt;/code&gt; too.</source>
          <target state="translated">특정 파일에 대해 특별한 작업을 수행하기 위해 버퍼 로컬 일 수 있습니다. 변경하는 경우 &lt;code&gt;backup-file-name-p&lt;/code&gt; 및 &lt;code&gt;file-name-sans-versions&lt;/code&gt; 도 변경해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a566ed5cac8786dd67797d3a0d120ea76183719e" translate="yes" xml:space="preserve">
          <source>This could be implemented with multiple buffers (kept in sync when the user edits the text), or with narrowing (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;). But these alternatives might sometimes become tedious or prohibitively expensive, especially if each type of text requires expensive buffer-global operations in order to provide correct display and editing commands.</source>
          <target state="translated">이는 여러 버퍼 (사용자가 텍스트를 편집 할 때 동기화 유지) 또는 축소 ( &lt;a href=&quot;narrowing#Narrowing&quot;&gt;축소&lt;/a&gt; 참조)로 구현 될 수 있습니다 . 그러나 이러한 대안은 때때로 지루하거나 엄청나게 많은 비용이들 수 있습니다. 특히 올바른 표시 및 편집 명령을 제공하기 위해 각 텍스트 유형에 값 비싼 버퍼 전역 작업이 필요한 경우에는 더욱 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="f394b60e38b5599682704674137ba41a07c7b541" translate="yes" xml:space="preserve">
          <source>This creates an uninterned symbol named &lt;code&gt;max&lt;/code&gt; and puts it in the expansion instead of the usual interned symbol &lt;code&gt;max&lt;/code&gt; that appears in expressions ordinarily.</source>
          <target state="translated">이렇게하면 &lt;code&gt;max&lt;/code&gt; 라는 비 인터 기호가 만들어지고 일반적으로 표현식에 나타나는 일반적인 인턴 기호 &lt;code&gt;max&lt;/code&gt; 대신 확장에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="7aeb8bdf71d865646040e73e725aecf3fd6800e0" translate="yes" xml:space="preserve">
          <source>This creates and returns a display table. The table initially has &lt;code&gt;nil&lt;/code&gt; in all elements.</source>
          <target state="translated">이것은 디스플레이 테이블을 생성하고 반환합니다. 테이블은 처음 에 모든 요소에 &lt;code&gt;nil&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="776e4b68583132ebfa42a8a0e9f9b4feb850568e" translate="yes" xml:space="preserve">
          <source>This creates and returns an empty category table. In an empty category table, no categories have been allocated, and no characters belong to any categories.</source>
          <target state="translated">이렇게하면 빈 범주 테이블이 만들어지고 반환됩니다. 빈 카테고리 테이블에는 카테고리가 할당되지 않았으며 카테고리에 속하는 문자도 없습니다.</target>
        </trans-unit>
        <trans-unit id="e1c8b5645bc9119e30c1142a0bf9ab49e40da845" translate="yes" xml:space="preserve">
          <source>This creates and returns an indirect buffer named &lt;var&gt;name&lt;/var&gt; whose base buffer is &lt;var&gt;base-buffer&lt;/var&gt;. The argument &lt;var&gt;base-buffer&lt;/var&gt; may be a live buffer or the name (a string) of an existing buffer. If &lt;var&gt;name&lt;/var&gt; is the name of an existing buffer, an error is signaled.</source>
          <target state="translated">이것은 기본 버퍼가 &lt;var&gt;base-buffer&lt;/var&gt; 인 &lt;var&gt;name&lt;/var&gt; 이라는 간접 버퍼를 만들고 반환합니다 . 인수 &lt;var&gt;base-buffer&lt;/var&gt; 는 라이브 버퍼 또는 기존 버퍼의 이름 (문자열) 일 수 있습니다. &lt;var&gt;name&lt;/var&gt; 이 기존 버퍼의 이름 이면 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="15b1ed7c7974555a78f9a8cdd2241db7107cd225" translate="yes" xml:space="preserve">
          <source>This creates and returns an xwidget object. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If &lt;var&gt;buffer&lt;/var&gt; names a buffer that doesn&amp;rsquo;t exist, it will be created. The &lt;var&gt;type&lt;/var&gt; identifies the type of the xwidget component, it can be one of the following:</source>
          <target state="translated">이것은 xwidget 객체를 생성하고 반환합니다. 경우 &lt;var&gt;buffer&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 현재 버퍼가 기본값. 경우 &lt;var&gt;buffer&lt;/var&gt; 이름이 존재하지 않는 버퍼가 작성됩니다. 유형은 xwidget 구성 요소 의 &lt;var&gt;type&lt;/var&gt; 식별하며 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96eaebac0f2f915eb1298d8f003d34d0fc4b82d3" translate="yes" xml:space="preserve">
          <source>This customizable option holds the default frame parameters used for displaying tooltips. Any font and color parameters are ignored, and the corresponding attributes of the &lt;code&gt;tooltip&lt;/code&gt; face are used instead. If &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; parameters are included, they are used as absolute frame-relative coordinates where the tooltip should be shown. (Mouse-relative position of the tooltip can be customized using the variables described in &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">이 사용자 정의 가능한 옵션은 툴팁을 표시하는 데 사용되는 기본 프레임 매개 변수를 보유합니다. 모든 글꼴 및 색상 매개 변수는 무시되고 &lt;code&gt;tooltip&lt;/code&gt; 면 의 해당 속성이 대신 사용됩니다. 경우 &lt;code&gt;left&lt;/code&gt; 또는 &lt;code&gt;top&lt;/code&gt; 파라미터가 포함되며, 이들은 툴팁 도시한다 절대 프레임 기준 좌표로서 사용한다. (도구 설명의 마우스 기준 위치는의 도구 설명에 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;설명&lt;/a&gt; 된 변수를 사용하여 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f806534e554e77f4da2d1f4af553822b3f73595" translate="yes" xml:space="preserve">
          <source>This customizable option holds the default frame parameters used for displaying tooltips. Any font and color parameters are ignored, and the corresponding attributes of the &lt;code&gt;tooltip&lt;/code&gt; face are used instead. If &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; parameters are included, they are used as absolute frame-relative coordinates where the tooltip should be shown. (Mouse-relative position of the tooltip can be customized using the variables described in &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32676621b26be88214ba41100c3be58060e2082" translate="yes" xml:space="preserve">
          <source>This customization type is similar to &lt;code&gt;alist&lt;/code&gt; (see above), except that (i) the information is stored as a property list, (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), and (ii) &lt;var&gt;key-type&lt;/var&gt;, if omitted, defaults to &lt;code&gt;symbol&lt;/code&gt; rather than &lt;code&gt;sexp&lt;/code&gt;.</source>
          <target state="translated">이 사용자 지정 형과 유사한 &lt;code&gt;alist&lt;/code&gt; 이 (I) 정보 (참조, 프로퍼티리스트로서 저장되는 것을 제외하고 (상기 참조) &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;속성리스트&lt;/a&gt; ), 및 (ii) &lt;var&gt;key-type&lt;/var&gt; 에 기본값을 경우 생략 &lt;code&gt;symbol&lt;/code&gt; 보다는 &lt;code&gt;sexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61ef043faf532a08fb5accd37a8605a58e78e8e0" translate="yes" xml:space="preserve">
          <source>This defines a global toggle named &lt;var&gt;global-mode&lt;/var&gt; whose meaning is to enable or disable the buffer-local minor mode &lt;var&gt;mode&lt;/var&gt; in all buffers. It also executes the &lt;var&gt;body&lt;/var&gt; forms. To turn on the minor mode in a buffer, it uses the function &lt;var&gt;turn-on&lt;/var&gt;; to turn off the minor mode, it calls &lt;var&gt;mode&lt;/var&gt; with -1 as argument.</source>
          <target state="translated">이는 모든 버퍼에서 버퍼-로컬 부 모드 &lt;var&gt;mode&lt;/var&gt; 를 활성화하거나 비활성화하는 것을 의미하는 &lt;var&gt;global-mode&lt;/var&gt; 라는 전역 토글을 정의합니다 . 또한 &lt;var&gt;body&lt;/var&gt; 형태를 실행합니다 . 버퍼에서 부 모드를 켜려면 turn &lt;var&gt;turn-on&lt;/var&gt; 함수 를 사용합니다 . 부 모드를 끄려면 인수로 -1을 사용하여 &lt;var&gt;mode&lt;/var&gt; 를 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="f8af97490ad006efd7dedc92ffa9b688078ca86f" translate="yes" xml:space="preserve">
          <source>This defines a minor mode named &amp;ldquo;Hungry mode&amp;rdquo;, a command named &lt;code&gt;hungry-mode&lt;/code&gt; to toggle it, a variable named &lt;code&gt;hungry-mode&lt;/code&gt; which indicates whether the mode is enabled, and a variable named &lt;code&gt;hungry-mode-map&lt;/code&gt; which holds the keymap that is active when the mode is enabled. It initializes the keymap with a key binding for</source>
          <target state="translated">이것은 &quot;배고픈 모드&quot;라는 이름의 작은 모드, 명령 이름이 정의 &lt;code&gt;hungry-mode&lt;/code&gt; 를 전환 할 수 있습니다,라는 변수 &lt;code&gt;hungry-mode&lt;/code&gt; 모드 사용 여부를 표시하고라는 변수 &lt;code&gt;hungry-mode-map&lt;/code&gt; 인 키맵을 보유하고 모드가 활성화되면 활성화됩니다. 키 바인딩을 사용하여 키맵을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="25b921cab86c0a9d48be338a53d51fa2582ea497" translate="yes" xml:space="preserve">
          <source>This defines a single Lisp form which is evaluated after the mode hooks have run. It should not be quoted.</source>
          <target state="translated">이것은 모드 후크가 실행 된 후 평가되는 단일 Lisp 양식을 정의합니다. 인용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a9ccae35dc95201daddf035a3127e41baa5ade46" translate="yes" xml:space="preserve">
          <source>This defines four comment-delimiting sequences:</source>
          <target state="translated">이것은 네 개의 주석 구분 시퀀스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="61c8f0ccafaa8d4d7b6ac3320bcf8e246b6593b9" translate="yes" xml:space="preserve">
          <source>This defines the customization option &lt;var&gt;global-mode&lt;/var&gt; (see &lt;a href=&quot;customization#Customization&quot;&gt;Customization&lt;/a&gt;), which can be toggled in the Customize interface to turn the minor mode on and off. As with &lt;code&gt;define-minor-mode&lt;/code&gt;, you should ensure that the &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; form is evaluated each time Emacs starts, for example by providing a &lt;code&gt;:require&lt;/code&gt; keyword.</source>
          <target state="translated">이것은 사용자 정의 옵션 &lt;var&gt;global-mode&lt;/var&gt; ( &lt;a href=&quot;customization#Customization&quot;&gt;사용자 정의&lt;/a&gt; 참조)를 정의 하며 사용자 정의 인터페이스에서 토글하여 부 모드를 켜고 끌 수 있습니다. &lt;code&gt;define-minor-mode&lt;/code&gt; 와 마찬가지로 , Emacs가 시작될 때마다 &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; 형식이 평가 되는지 확인 &lt;code&gt;:require&lt;/code&gt; 합니다. 예를 들어 : require 키워드를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="0654c2fe1757cc99313b9ee8d9bde98f4406d6ec" translate="yes" xml:space="preserve">
          <source>This deletes each node in &lt;var&gt;nodes&lt;/var&gt; from &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">이는 각 노드 삭제 &lt;var&gt;nodes&lt;/var&gt; 에서 &lt;var&gt;ewoc&lt;/var&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="42d97322be035858edbad1a9d48f7b8d2178c424" translate="yes" xml:space="preserve">
          <source>This deletes the file named &lt;var&gt;filename&lt;/var&gt;, catching any error and returning &lt;code&gt;nil&lt;/code&gt; if an error occurs. (You can use the macro &lt;code&gt;ignore-errors&lt;/code&gt; for a simple case like this; see below.)</source>
          <target state="translated">그러면 &lt;var&gt;filename&lt;/var&gt; 이라는 파일 이 삭제되고 오류가 발생하면 오류가 발생하면 &lt;code&gt;nil&lt;/code&gt; 이 반환 됩니다. ( 이와 같은 간단한 경우 매크로 &lt;code&gt;ignore-errors&lt;/code&gt; 를 사용할 수 있습니다 . 아래를 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="40c2d1f86da44e947b5c2bd5c7621c71f7d4692c" translate="yes" xml:space="preserve">
          <source>This determines the node in &lt;var&gt;ewoc&lt;/var&gt; which contains point (or &lt;var&gt;pos&lt;/var&gt; if specified), and returns that node. If &lt;var&gt;ewoc&lt;/var&gt; has no nodes, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;pos&lt;/var&gt; is before the first node, it returns the first node; if &lt;var&gt;pos&lt;/var&gt; is after the last node, it returns the last node. The optional third arg &lt;var&gt;guess&lt;/var&gt; should be a node that is likely to be near &lt;var&gt;pos&lt;/var&gt;; this doesn&amp;rsquo;t alter the result, but makes the function run faster.</source>
          <target state="translated">이것은 포인트 (또는 지정된 경우 &lt;var&gt;pos&lt;/var&gt; ) 를 포함하는 &lt;var&gt;ewoc&lt;/var&gt; 의 노드를 결정하고 해당 노드를 반환합니다. 경우 &lt;var&gt;ewoc&lt;/var&gt; 가 어떤 노드가 없습니다, 그것은 반환 &lt;code&gt;nil&lt;/code&gt; . &lt;var&gt;pos&lt;/var&gt; 가 첫 번째 노드 앞에 있으면 첫 번째 노드를 반환합니다. &lt;var&gt;pos&lt;/var&gt; 가 마지막 노드 뒤에 있으면 마지막 노드를 반환합니다. 선택적인 세 번째 인수 &lt;var&gt;guess&lt;/var&gt; 은 &lt;var&gt;pos&lt;/var&gt; 에 가까운 노드 여야합니다 . 이것은 결과를 변경하지 않지만 함수가 더 빠르게 실행되도록합니다.</target>
        </trans-unit>
        <trans-unit id="19360270f62f12bc6a373a7cb78889f2c4a7b650" translate="yes" xml:space="preserve">
          <source>This differs from ordinary syntax such as this</source>
          <target state="translated">이것은 다음과 같은 일반적인 구문과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7269a995a026e6157e1f1ebb99d0283d69ea4f8f" translate="yes" xml:space="preserve">
          <source>This display action specifies the fallback behavior for &lt;code&gt;display-buffer&lt;/code&gt; if no other display actions are given.</source>
          <target state="translated">이 표시 조치 는 다른 표시 조치가 제공되지 않은 경우 &lt;code&gt;display-buffer&lt;/code&gt; 대한 대체 동작을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="b8689d2faeec8c24b11323876ebe042c75f4be39" translate="yes" xml:space="preserve">
          <source>This display specification affects all the space characters within the text that has the specification. It displays all of these spaces &lt;var&gt;factor&lt;/var&gt; times as wide as normal. The element &lt;var&gt;factor&lt;/var&gt; should be an integer or float. Characters other than spaces are not affected at all; in particular, this has no effect on tab characters.</source>
          <target state="translated">이 표시 사양은 사양이있는 텍스트 내의 모든 공백 문자에 영향을줍니다. 이 모든 공간이 평소와 같이 폭 &lt;var&gt;factor&lt;/var&gt; 시간을 표시합니다 . 요소 &lt;var&gt;factor&lt;/var&gt; 는 정수 또는 부동 소수점이어야합니다. 공백 이외의 문자는 전혀 영향을받지 않습니다. 특히 탭 문자에는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="592cefd94a03b4739baef199b154e396c1ef073d" translate="yes" xml:space="preserve">
          <source>This display specification makes the text taller or shorter. Here are the possibilities for &lt;var&gt;height&lt;/var&gt;:</source>
          <target state="translated">이 표시 사양은 텍스트를 더 길게 또는 더 짧게 만듭니다. &lt;var&gt;height&lt;/var&gt; 대한 가능성은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="36a3ea4223936b8a16479fbc53763ae4b8a71d99" translate="yes" xml:space="preserve">
          <source>This display specification on any character of a line of text causes the specified &lt;var&gt;bitmap&lt;/var&gt; be displayed in the left or right fringes for that line, instead of the characters that have the display specification. The optional &lt;var&gt;face&lt;/var&gt; specifies the face whose colors are to be used for the bitmap display. See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;, for the details.</source>
          <target state="translated">This display specification on any character of a line of text causes the specified &lt;var&gt;bitmap&lt;/var&gt; be displayed in the left or right fringes for that line, instead of the characters that have the display specification. The optional &lt;var&gt;face&lt;/var&gt; specifies the face whose colors are to be used for the bitmap display. See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;, for the details.</target>
        </trans-unit>
        <trans-unit id="93cf65c9a0445a80ca8a8165521ce7ee2fd04b18" translate="yes" xml:space="preserve">
          <source>This does for the size parameters &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; what the &lt;code&gt;user-position&lt;/code&gt; parameter (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;user-position&lt;/a&gt;) does for the position parameters &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">This does for the size parameters &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; what the &lt;code&gt;user-position&lt;/code&gt; parameter (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;user-position&lt;/a&gt;) does for the position parameters &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38712cb66f1b52401b8eeac29a5ad9b91c46b923" translate="yes" xml:space="preserve">
          <source>This does not depend on one of the libraries linked to Emacs.</source>
          <target state="translated">This does not depend on one of the libraries linked to Emacs.</target>
        </trans-unit>
        <trans-unit id="13166b5b8bd0e09ebf367e7317f249e78ab03831" translate="yes" xml:space="preserve">
          <source>This either tries to split the window at the bottom of the frame or the frame&amp;rsquo;s root window, or to reuse an existing window at the bottom of the selected frame.</source>
          <target state="translated">This either tries to split the window at the bottom of the frame or the frame&amp;rsquo;s root window, or to reuse an existing window at the bottom of the selected frame.</target>
        </trans-unit>
        <trans-unit id="6508c390fad6127b900c1ed90f5801b40662d322" translate="yes" xml:space="preserve">
          <source>This element is a boundary. The elements between two boundaries are called a &lt;em&gt;change group&lt;/em&gt;; normally, each change group corresponds to one keyboard command, and undo commands normally undo an entire group as a unit.</source>
          <target state="translated">This element is a boundary. The elements between two boundaries are called a &lt;em&gt;change group&lt;/em&gt;; normally, each change group corresponds to one keyboard command, and undo commands normally undo an entire group as a unit.</target>
        </trans-unit>
        <trans-unit id="e54b773d4f02d66db9663356d9f794f2138e5279" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; doesn&amp;rsquo;t match any terminal; instead, it specifies defaults that apply to all terminals. This element, if used, must be the first element of &lt;var&gt;spec&lt;/var&gt;. Each of the following elements can override any or all of these defaults.</source>
          <target state="translated">This element of &lt;var&gt;spec&lt;/var&gt; doesn&amp;rsquo;t match any terminal; instead, it specifies defaults that apply to all terminals. This element, if used, must be the first element of &lt;var&gt;spec&lt;/var&gt; . Each of the following elements can override any or all of these defaults.</target>
        </trans-unit>
        <trans-unit id="307e77b079ef7349c14d6f5197aa13acf3da80fc" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; matches all terminals. Therefore, any subsequent elements of &lt;var&gt;spec&lt;/var&gt; are never used. Normally &lt;code&gt;t&lt;/code&gt; is used in the last (or only) element of &lt;var&gt;spec&lt;/var&gt;.</source>
          <target state="translated">This element of &lt;var&gt;spec&lt;/var&gt; matches all terminals. Therefore, any subsequent elements of &lt;var&gt;spec&lt;/var&gt; are never used. Normally &lt;code&gt;t&lt;/code&gt; is used in the last (or only) element of &lt;var&gt;spec&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f44b269dc35504667b8fd5dfc82cea359e827180" translate="yes" xml:space="preserve">
          <source>This entry is similar to the &lt;code&gt;window-height&lt;/code&gt; entry described before, but used to adjust the chosen window&amp;rsquo;s width instead. The value can be one of the following:</source>
          <target state="translated">This entry is similar to the &lt;code&gt;window-height&lt;/code&gt; entry described before, but used to adjust the chosen window&amp;rsquo;s width instead. The value can be one of the following:</target>
        </trans-unit>
        <trans-unit id="44b7f094fb9e2b284f706f57d35c08d71bf8c5c3" translate="yes" xml:space="preserve">
          <source>This error can be handled through any of its condition names. This example handles &lt;code&gt;new-error&lt;/code&gt; and any other errors in the class &lt;code&gt;my-own-errors&lt;/code&gt;:</source>
          <target state="translated">This error can be handled through any of its condition names. This example handles &lt;code&gt;new-error&lt;/code&gt; and any other errors in the class &lt;code&gt;my-own-errors&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="720b7aaa94a82d01c4794fe20d63e61b139885dd" translate="yes" xml:space="preserve">
          <source>This error has several condition names: &lt;code&gt;new-error&lt;/code&gt;, the narrowest classification; &lt;code&gt;my-own-errors&lt;/code&gt;, which we imagine is a wider classification; and all the conditions of &lt;code&gt;my-own-errors&lt;/code&gt; which should include &lt;code&gt;error&lt;/code&gt;, which is the widest of all.</source>
          <target state="translated">This error has several condition names: &lt;code&gt;new-error&lt;/code&gt; , the narrowest classification; &lt;code&gt;my-own-errors&lt;/code&gt; , which we imagine is a wider classification; and all the conditions of &lt;code&gt;my-own-errors&lt;/code&gt; which should include &lt;code&gt;error&lt;/code&gt; , which is the widest of all.</target>
        </trans-unit>
        <trans-unit id="46f76051817e74eb67edb4d63ff61ecd701e1276" translate="yes" xml:space="preserve">
          <source>This evaluates the arguments &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;(* 2 3)&lt;/code&gt;, and &lt;code&gt;(- 5
4)&lt;/code&gt; from left to right. Then it applies the lambda expression to the argument values 1, 6 and 1 to produce the value 8.</source>
          <target state="translated">This evaluates the arguments &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;(* 2 3)&lt;/code&gt; , and &lt;code&gt;(- 5 4)&lt;/code&gt; from left to right. Then it applies the lambda expression to the argument values 1, 6 and 1 to produce the value 8.</target>
        </trans-unit>
        <trans-unit id="69c1c748bf3cd5a287abc63381636360fa27e7db" translate="yes" xml:space="preserve">
          <source>This example affects only C mode proper. To add the same patterns to C mode &lt;em&gt;and&lt;/em&gt; all modes derived from it, do this instead:</source>
          <target state="translated">This example affects only C mode proper. To add the same patterns to C mode &lt;em&gt;and&lt;/em&gt; all modes derived from it, do this instead:</target>
        </trans-unit>
        <trans-unit id="5384ed028486d0b91b0394b48e1cb533ea34ce58" translate="yes" xml:space="preserve">
          <source>This example can be extended to be a color selection widget (in other words, the &amp;ldquo;controller&amp;rdquo; part of the &amp;ldquo;model&amp;ndash;view&amp;ndash;controller&amp;rdquo; design paradigm) by defining commands to modify &lt;code&gt;colorcomp-data&lt;/code&gt; and to finish the selection process, and a keymap to tie it all together conveniently.</source>
          <target state="translated">This example can be extended to be a color selection widget (in other words, the &amp;ldquo;controller&amp;rdquo; part of the &amp;ldquo;model&amp;ndash;view&amp;ndash;controller&amp;rdquo; design paradigm) by defining commands to modify &lt;code&gt;colorcomp-data&lt;/code&gt; and to finish the selection process, and a keymap to tie it all together conveniently.</target>
        </trans-unit>
        <trans-unit id="df08f64e57d04de8aaa9e8c787229bb4af344be9" translate="yes" xml:space="preserve">
          <source>This example creates a hash table whose keys are strings that are compared case-insensitively.</source>
          <target state="translated">This example creates a hash table whose keys are strings that are compared case-insensitively.</target>
        </trans-unit>
        <trans-unit id="f1a5216565ce67155ee836de4737ae2e0b658c35" translate="yes" xml:space="preserve">
          <source>This example creates a sparse keymap and makes a number of bindings in it:</source>
          <target state="translated">This example creates a sparse keymap and makes a number of bindings in it:</target>
        </trans-unit>
        <trans-unit id="c10cacdf2de04ef95f61acc180ccc22f0b05e92b" translate="yes" xml:space="preserve">
          <source>This example has a small bug: if the user types</source>
          <target state="translated">This example has a small bug: if the user types</target>
        </trans-unit>
        <trans-unit id="cbee9460ee0719dec38b54326085d108517447be" translate="yes" xml:space="preserve">
          <source>This example initializes the value of &lt;code&gt;bar&lt;/code&gt; to &lt;code&gt;23&lt;/code&gt;, and gives it a documentation string:</source>
          <target state="translated">This example initializes the value of &lt;code&gt;bar&lt;/code&gt; to &lt;code&gt;23&lt;/code&gt; , and gives it a documentation string:</target>
        </trans-unit>
        <trans-unit id="67e8773626193e784e2ea64066293bd3b65f7fb7" translate="yes" xml:space="preserve">
          <source>This example shows how &lt;code&gt;copy-alist&lt;/code&gt; makes it possible to change the associations of one copy without affecting the other:</source>
          <target state="translated">This example shows how &lt;code&gt;copy-alist&lt;/code&gt; makes it possible to change the associations of one copy without affecting the other:</target>
        </trans-unit>
        <trans-unit id="960576953dddb4f1d23f0b9aa313e71228f26d76" translate="yes" xml:space="preserve">
          <source>This example shows how to convert the window-relative coordinates in the text area of a window into frame-relative coordinates:</source>
          <target state="translated">This example shows how to convert the window-relative coordinates in the text area of a window into frame-relative coordinates:</target>
        </trans-unit>
        <trans-unit id="0bed23725454106589c0f1789605a60658a8b116" translate="yes" xml:space="preserve">
          <source>This executes &lt;var&gt;body&lt;/var&gt; normally, except any buffer changes it makes do not trigger the calls to &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt;. Instead there is a single call of each of these hooks for the region enclosed by &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, the parameters supplied to &lt;code&gt;after-change-functions&lt;/code&gt; reflecting the changes made to the size of the region by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">This executes &lt;var&gt;body&lt;/var&gt; normally, except any buffer changes it makes do not trigger the calls to &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt; . Instead there is a single call of each of these hooks for the region enclosed by &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; , the parameters supplied to &lt;code&gt;after-change-functions&lt;/code&gt; reflecting the changes made to the size of the region by &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="97a99daef0e09aadad6a1edb95c2efaf5e43925d" translate="yes" xml:space="preserve">
          <source>This exists as a separate function so that you can redefine it to customize the naming convention for auto-save files. Be sure to change &lt;code&gt;auto-save-file-name-p&lt;/code&gt; in a corresponding way.</source>
          <target state="translated">This exists as a separate function so that you can redefine it to customize the naming convention for auto-save files. Be sure to change &lt;code&gt;auto-save-file-name-p&lt;/code&gt; in a corresponding way.</target>
        </trans-unit>
        <trans-unit id="83ac2665fcb7f52cf7b79acb847f017da9c9ded9" translate="yes" xml:space="preserve">
          <source>This extracts the data encapsulated by &lt;var&gt;node&lt;/var&gt; and returns it.</source>
          <target state="translated">This extracts the data encapsulated by &lt;var&gt;node&lt;/var&gt; and returns it.</target>
        </trans-unit>
        <trans-unit id="30d143d6a1708406abec26b984fa5693fbea22dd" translate="yes" xml:space="preserve">
          <source>This feature has a drawback: if you delete, move, or alter the compiled file (such as by compiling a new version), Emacs may no longer be able to access the documentation string of previously-loaded functions or variables. Such a problem normally only occurs if you build Emacs yourself, and happen to edit and/or recompile the Lisp source files. To solve it, just reload each file after recompilation.</source>
          <target state="translated">This feature has a drawback: if you delete, move, or alter the compiled file (such as by compiling a new version), Emacs may no longer be able to access the documentation string of previously-loaded functions or variables. Such a problem normally only occurs if you build Emacs yourself, and happen to edit and/or recompile the Lisp source files. To solve it, just reload each file after recompilation.</target>
        </trans-unit>
        <trans-unit id="b1b235c150a1d977f48eb3bd46de4ada97a7551a" translate="yes" xml:space="preserve">
          <source>This feature is particularly useful for macro definitions, since the arguments written in a macro definition often do not correspond to the way users think of the parts of the macro call.</source>
          <target state="translated">This feature is particularly useful for macro definitions, since the arguments written in a macro definition often do not correspond to the way users think of the parts of the macro call.</target>
        </trans-unit>
        <trans-unit id="05244ec22d7bb68a0e405d823ab136f1bab8c8f8" translate="yes" xml:space="preserve">
          <source>This feature is typically used to give word syntax to characters which normally have symbol syntax, and thus to simplify &lt;code&gt;imenu-generic-expression&lt;/code&gt; and speed up matching. For example, Fortran mode uses it this way:</source>
          <target state="translated">This feature is typically used to give word syntax to characters which normally have symbol syntax, and thus to simplify &lt;code&gt;imenu-generic-expression&lt;/code&gt; and speed up matching. For example, Fortran mode uses it this way:</target>
        </trans-unit>
        <trans-unit id="1c756af06b78daa5071e0e816f76e8d18db82de0" translate="yes" xml:space="preserve">
          <source>This feature is used in the mode line and for other active text.</source>
          <target state="translated">This feature is used in the mode line and for other active text.</target>
        </trans-unit>
        <trans-unit id="d0cc127f9ed89a0052cb078c44752f47ce7ae748" translate="yes" xml:space="preserve">
          <source>This field contains flags indicating that certain variables are local in this buffer. Such variables are declared in the C code using &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt;, and their buffer-local bindings are stored in fields in the buffer structure itself. (Some of these fields are described in this table.)</source>
          <target state="translated">This field contains flags indicating that certain variables are local in this buffer. Such variables are declared in the C code using &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt; , and their buffer-local bindings are stored in fields in the buffer structure itself. (Some of these fields are described in this table.)</target>
        </trans-unit>
        <trans-unit id="fdaffa88c0149b338fbb30614684d73e20ce7a4d" translate="yes" xml:space="preserve">
          <source>This field contains the value of &lt;code&gt;cursor_off_p&lt;/code&gt; as of the time of the last redisplay.</source>
          <target state="translated">This field contains the value of &lt;code&gt;cursor_off_p&lt;/code&gt; as of the time of the last redisplay.</target>
        </trans-unit>
        <trans-unit id="25df1e8281ce04573d0c7a47654f62f6ead766ae" translate="yes" xml:space="preserve">
          <source>This field holds the current overlay center position. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;.</source>
          <target state="translated">This field holds the current overlay center position. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="53fae5326fb6152954c070db1d8b82e97b1478f7" translate="yes" xml:space="preserve">
          <source>This field is non-zero if the cursor is physically on.</source>
          <target state="translated">This field is non-zero if the cursor is physically on.</target>
        </trans-unit>
        <trans-unit id="1d317714cd86b2e5c16957c75986c0b66b779bc1" translate="yes" xml:space="preserve">
          <source>This field is set to a non-zero value if &lt;code&gt;window_end_pos&lt;/code&gt; and &lt;code&gt;window_end_vpos&lt;/code&gt; are truly valid. This is zero if nontrivial redisplay is pre-empted, since in that case the display that &lt;code&gt;window_end_pos&lt;/code&gt; was computed for did not get onto the screen.</source>
          <target state="translated">This field is set to a non-zero value if &lt;code&gt;window_end_pos&lt;/code&gt; and &lt;code&gt;window_end_vpos&lt;/code&gt; are truly valid. This is zero if nontrivial redisplay is pre-empted, since in that case the display that &lt;code&gt;window_end_pos&lt;/code&gt; was computed for did not get onto the screen.</target>
        </trans-unit>
        <trans-unit id="6b26cb64b7c663711e8795ccea986462e9c7367e" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to be inserted on the right rather than the left.</source>
          <target state="translated">This flag causes any padding specified by the width to be inserted on the right rather than the left.</target>
        </trans-unit>
        <trans-unit id="5278a8a106127e8fc495b187df39a6337cc62e1b" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to consist of &amp;lsquo;</source>
          <target state="translated">This flag causes any padding specified by the width to consist of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5dd359a766179c85de84888aadbae58262df5709" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the left to the given width, if specified.</source>
          <target state="translated">This flag causes the substitution to be truncated on the left to the given width, if specified.</target>
        </trans-unit>
        <trans-unit id="4e61e85dae038fb0c3a44fdb662be1a054d209df" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the right to the given width, if specified.</source>
          <target state="translated">This flag causes the substitution to be truncated on the right to the given width, if specified.</target>
        </trans-unit>
        <trans-unit id="802456f2a422be0cbf38e1946b06bb9ed99ba1c4" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to lower case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">This flag converts the substituted text to lower case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c3743c5c43d5db77d585873a04220c975872ceeb" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to upper case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">This flag converts the substituted text to upper case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="def6909cec139f656b6eb03bda4bd9fcdf92962d" translate="yes" xml:space="preserve">
          <source>This flag indicates that narrowing has changed in the buffer. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">This flag indicates that narrowing has changed in the buffer. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ea1149fc15f86d73e215992b24665aef4bf65888" translate="yes" xml:space="preserve">
          <source>This flag indicates that redisplay optimizations should not be used to display this buffer.</source>
          <target state="translated">This flag indicates that redisplay optimizations should not be used to display this buffer.</target>
        </trans-unit>
        <trans-unit id="3e34e60de1451f315119342439e2c2ea69a78715" translate="yes" xml:space="preserve">
          <source>This flag is &lt;code&gt;t&lt;/code&gt; while loading all of the basic functions for building Emacs initially (allowing those functions to be shareable and non-collectible). Dumping Emacs as an executable always writes &lt;code&gt;nil&lt;/code&gt; in this variable, regardless of the value it actually has before and after dumping.</source>
          <target state="translated">This flag is &lt;code&gt;t&lt;/code&gt; while loading all of the basic functions for building Emacs initially (allowing those functions to be shareable and non-collectible). Dumping Emacs as an executable always writes &lt;code&gt;nil&lt;/code&gt; in this variable, regardless of the value it actually has before and after dumping.</target>
        </trans-unit>
        <trans-unit id="ba39cdb2bb11024ced7b8ee0a40f5f800d6c1008" translate="yes" xml:space="preserve">
          <source>This form affects the sorting order for combining applicable methods. Normally, when two methods are compared during combination, method arguments are examined left to right, and the first method whose argument specializer is more specific will come before the other one. The order defined by this form overrides that, and the arguments are examined according to their order in this form, and not left to right.</source>
          <target state="translated">This form affects the sorting order for combining applicable methods. Normally, when two methods are compared during combination, method arguments are examined left to right, and the first method whose argument specializer is more specific will come before the other one. The order defined by this form overrides that, and the arguments are examined according to their order in this form, and not left to right.</target>
        </trans-unit>
        <trans-unit id="e4fb70066384e0cceb907663b752d4b769967338" translate="yes" xml:space="preserve">
          <source>This form defines a method like &lt;code&gt;cl-defmethod&lt;/code&gt; does.</source>
          <target state="translated">This form defines a method like &lt;code&gt;cl-defmethod&lt;/code&gt; does.</target>
        </trans-unit>
        <trans-unit id="dc35ed413d87b4336d4e89f97b486782c7451f45" translate="yes" xml:space="preserve">
          <source>This form is rarely used and is now deprecated. Instead, you should write it as:</source>
          <target state="translated">This form is rarely used and is now deprecated. Instead, you should write it as:</target>
        </trans-unit>
        <trans-unit id="3cc0709efb5d18fcc8207dee6c21b0fb2f81ad06" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated at compile time but not when the compiled program is loaded. The result of evaluation by the compiler becomes a constant which appears in the compiled program. If you load the source file, rather than compiling it, &lt;var&gt;body&lt;/var&gt; is evaluated normally.</source>
          <target state="translated">This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated at compile time but not when the compiled program is loaded. The result of evaluation by the compiler becomes a constant which appears in the compiled program. If you load the source file, rather than compiling it, &lt;var&gt;body&lt;/var&gt; is evaluated normally.</target>
        </trans-unit>
        <trans-unit id="5f5b9f825f6d02cc105c9167357458e31c828971" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated both when you compile the containing code and when you run it (whether compiled or not).</source>
          <target state="translated">This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated both when you compile the containing code and when you run it (whether compiled or not).</target>
        </trans-unit>
        <trans-unit id="4ef27658ff0fd12e7246ce32efccf1049fa02588" translate="yes" xml:space="preserve">
          <source>This frame parameter controls the way the cursor looks.</source>
          <target state="translated">This frame parameter controls the way the cursor looks.</target>
        </trans-unit>
        <trans-unit id="8a2c5f40810a1a8231285c1733ba11c594e6dc71" translate="yes" xml:space="preserve">
          <source>This function (un-)marks the height of window &lt;var&gt;window&lt;/var&gt; as preserved for future resize operations. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it (un-)marks the width of &lt;var&gt;window&lt;/var&gt; as preserved.</source>
          <target state="translated">This function (un-)marks the height of window &lt;var&gt;window&lt;/var&gt; as preserved for future resize operations. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it (un-)marks the width of &lt;var&gt;window&lt;/var&gt; as preserved.</target>
        </trans-unit>
        <trans-unit id="bcece730ecf0a8d569339f3baf4dfd3ec0f72dff" translate="yes" xml:space="preserve">
          <source>This function &lt;em&gt;warps the mouse&lt;/em&gt; to position &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; in frame &lt;var&gt;frame&lt;/var&gt;. The arguments &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are integers, giving the position in multiples of the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">This function &lt;em&gt;warps the mouse&lt;/em&gt; to position &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; in frame &lt;var&gt;frame&lt;/var&gt; . The arguments &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are integers, giving the position in multiples of the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="40f8f13963b860d49b39d37d44a140b524c4b400" translate="yes" xml:space="preserve">
          <source>This function aborts the command that requested the innermost recursive edit (including minibuffer input), by signaling &lt;code&gt;quit&lt;/code&gt; after exiting the recursive edit. Its definition is effectively &lt;code&gt;(throw 'exit t)&lt;/code&gt;. See &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;.</source>
          <target state="translated">This function aborts the command that requested the innermost recursive edit (including minibuffer input), by signaling &lt;code&gt;quit&lt;/code&gt; after exiting the recursive edit. Its definition is effectively &lt;code&gt;(throw 'exit t)&lt;/code&gt; . See &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c9ea6f9e8e69fd1bab46baef53c35082a8cfc602" translate="yes" xml:space="preserve">
          <source>This function accepts all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;, making them final.</source>
          <target state="translated">This function accepts all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt; , making them final.</target>
        </trans-unit>
        <trans-unit id="4bf8acf7f09114f2eeb6b01cc81a40eb393fbc16" translate="yes" xml:space="preserve">
          <source>This function accesses selections set up by Emacs or by other programs. It takes two optional arguments, &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;data-type&lt;/var&gt;. The default for &lt;var&gt;type&lt;/var&gt;, the selection type, is &lt;code&gt;PRIMARY&lt;/code&gt;.</source>
          <target state="translated">This function accesses selections set up by Emacs or by other programs. It takes two optional arguments, &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;data-type&lt;/var&gt; . The default for &lt;var&gt;type&lt;/var&gt; , the selection type, is &lt;code&gt;PRIMARY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ed9d525857b861dc6984133623fd7ce8241ee1a" translate="yes" xml:space="preserve">
          <source>This function activates the change group that &lt;var&gt;handle&lt;/var&gt; designates.</source>
          <target state="translated">This function activates the change group that &lt;var&gt;handle&lt;/var&gt; designates.</target>
        </trans-unit>
        <trans-unit id="07db88ac865436a1611a4b9e83f3964d1e4e650b" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;eq&lt;/code&gt; except when both arguments are numbers. It compares numbers by type and numeric value, so that &lt;code&gt;(eql 1.0 1)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, but &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; and &lt;code&gt;(eql 1 1)&lt;/code&gt; both return &lt;code&gt;t&lt;/code&gt;. This can be used to compare large integers as well as small ones.</source>
          <target state="translated">This function acts like &lt;code&gt;eq&lt;/code&gt; except when both arguments are numbers. It compares numbers by type and numeric value, so that &lt;code&gt;(eql 1.0 1)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; , but &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; and &lt;code&gt;(eql 1 1)&lt;/code&gt; both return &lt;code&gt;t&lt;/code&gt; . This can be used to compare large integers as well as small ones.</target>
        </trans-unit>
        <trans-unit id="a9b2e93490bd346a5c929fa510651bda9b3be379" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;format&lt;/code&gt;, except it also converts any grave accents (</source>
          <target state="translated">This function acts like &lt;code&gt;format&lt;/code&gt; , except it also converts any grave accents (</target>
        </trans-unit>
        <trans-unit id="46299dd4ffb3a1d1b9978c5603d1f8a982a7b271" translate="yes" xml:space="preserve">
          <source>This function acts on the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, adding the face &lt;var&gt;face&lt;/var&gt; to the &lt;code&gt;face&lt;/code&gt; text property. &lt;var&gt;face&lt;/var&gt; should be a valid value for the &lt;code&gt;face&lt;/code&gt; property (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;), such as a face name or an anonymous face (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;).</source>
          <target state="translated">This function acts on the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; , adding the face &lt;var&gt;face&lt;/var&gt; to the &lt;code&gt;face&lt;/code&gt; text property. &lt;var&gt;face&lt;/var&gt; should be a valid value for the &lt;code&gt;face&lt;/code&gt; property (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;), such as a face name or an anonymous face (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="9add35bd8e77d7a770af37272de3cbd3c5d5a302" translate="yes" xml:space="preserve">
          <source>This function actually uses the minibuffer, but does not allow editing of the answer. The cursor moves to the minibuffer while the question is being asked.</source>
          <target state="translated">This function actually uses the minibuffer, but does not allow editing of the answer. The cursor moves to the minibuffer while the question is being asked.</target>
        </trans-unit>
        <trans-unit id="3b7bb87451820fffacb0fab9bbfdf96cf4401834" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;keymap&lt;/var&gt; as a &lt;em&gt;transient&lt;/em&gt; keymap, which takes precedence over other keymaps for one (or more) subsequent keys.</source>
          <target state="translated">This function adds &lt;var&gt;keymap&lt;/var&gt; as a &lt;em&gt;transient&lt;/em&gt; keymap, which takes precedence over other keymaps for one (or more) subsequent keys.</target>
        </trans-unit>
        <trans-unit id="4b526c5936ea25c138e70ca51a6efbc8affbb24b" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;rules&lt;/var&gt; as indentation rules for the current buffer. These add to any mode-specific rules defined by the &lt;code&gt;smie-config&lt;/code&gt; option. To specify custom indentation rules for a specific file, add an entry to the file&amp;rsquo;s local variables of the form: &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">This function adds &lt;var&gt;rules&lt;/var&gt; as indentation rules for the current buffer. These add to any mode-specific rules defined by the &lt;code&gt;smie-config&lt;/code&gt; option. To specify custom indentation rules for a specific file, add an entry to the file&amp;rsquo;s local variables of the form: &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97647ddbf1d6ec9209e109ed55b3f010c55f6dde" translate="yes" xml:space="preserve">
          <source>This function adds a new element &lt;var&gt;newelt&lt;/var&gt;, if it isn&amp;rsquo;t the empty string, to the history list stored in the variable &lt;var&gt;history-var&lt;/var&gt;, and returns the updated history list. It limits the list length to the value of &lt;var&gt;maxelt&lt;/var&gt; (if non-&lt;code&gt;nil&lt;/code&gt;) or &lt;code&gt;history-length&lt;/code&gt; (described below). The possible values of &lt;var&gt;maxelt&lt;/var&gt; have the same meaning as the values of &lt;code&gt;history-length&lt;/code&gt;. &lt;var&gt;history-var&lt;/var&gt; cannot refer to a lexical variable.</source>
          <target state="translated">This function adds a new element &lt;var&gt;newelt&lt;/var&gt; , if it isn&amp;rsquo;t the empty string, to the history list stored in the variable &lt;var&gt;history-var&lt;/var&gt; , and returns the updated history list. It limits the list length to the value of &lt;var&gt;maxelt&lt;/var&gt; (if non- &lt;code&gt;nil&lt;/code&gt; ) or &lt;code&gt;history-length&lt;/code&gt; (described below). The possible values of &lt;var&gt;maxelt&lt;/var&gt; have the same meaning as the values of &lt;code&gt;history-length&lt;/code&gt; . &lt;var&gt;history-var&lt;/var&gt; cannot refer to a lexical variable.</target>
        </trans-unit>
        <trans-unit id="deb9f2a42b842ac50764e6f1bfd937d8064b5f72" translate="yes" xml:space="preserve">
          <source>This function adds an item to the tool bar by modifying &lt;code&gt;tool-bar-map&lt;/code&gt;. The image to use is defined by &lt;var&gt;icon&lt;/var&gt;, which is the base name of an XPM, XBM or PBM image file to be located by &lt;code&gt;find-image&lt;/code&gt;. Given a value &amp;lsquo;</source>
          <target state="translated">This function adds an item to the tool bar by modifying &lt;code&gt;tool-bar-map&lt;/code&gt; . The image to use is defined by &lt;var&gt;icon&lt;/var&gt; , which is the base name of an XPM, XBM or PBM image file to be located by &lt;code&gt;find-image&lt;/code&gt; . Given a value &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="0ebca6721ed3fa98cfa9e5c46f15c3141bffd15b" translate="yes" xml:space="preserve">
          <source>This function adds highlighting &lt;var&gt;keywords&lt;/var&gt;, for the current buffer or for major mode &lt;var&gt;mode&lt;/var&gt;. The argument &lt;var&gt;keywords&lt;/var&gt; should be a list with the same format as the variable &lt;code&gt;font-lock-keywords&lt;/code&gt;.</source>
          <target state="translated">This function adds highlighting &lt;var&gt;keywords&lt;/var&gt; , for the current buffer or for major mode &lt;var&gt;mode&lt;/var&gt; . The argument &lt;var&gt;keywords&lt;/var&gt; should be a list with the same format as the variable &lt;code&gt;font-lock-keywords&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b70adf191cfc5d67153bf0fd00ff553ea1352179" translate="yes" xml:space="preserve">
          <source>This function adds its arguments together. When given no arguments, &lt;code&gt;+&lt;/code&gt; returns 0.</source>
          <target state="translated">This function adds its arguments together. When given no arguments, &lt;code&gt;+&lt;/code&gt; returns 0.</target>
        </trans-unit>
        <trans-unit id="803c0bc4e0ed515905b77def70944666207e64b0" translate="yes" xml:space="preserve">
          <source>This function adds or overrides text properties for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">This function adds or overrides text properties for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt; . If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it defaults to the current buffer.</target>
        </trans-unit>
        <trans-unit id="9989271b225e7f750e77b8c7c89508a4a1e0be74" translate="yes" xml:space="preserve">
          <source>This function adds the element &lt;var&gt;element&lt;/var&gt; to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;. If &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; was &lt;code&gt;t&lt;/code&gt;, it changes to a list, &lt;code&gt;(t)&lt;/code&gt;, so that text whose &lt;code&gt;invisible&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt; remains invisible.</source>
          <target state="translated">This function adds the element &lt;var&gt;element&lt;/var&gt; to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; . If &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; was &lt;code&gt;t&lt;/code&gt; , it changes to a list, &lt;code&gt;(t)&lt;/code&gt; , so that text whose &lt;code&gt;invisible&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt; remains invisible.</target>
        </trans-unit>
        <trans-unit id="c07b8ebb5627985d894e21ffca92d00b07480866" translate="yes" xml:space="preserve">
          <source>This function adds the face spec in &lt;var&gt;specs&lt;/var&gt; as relative remappings for face &lt;var&gt;face&lt;/var&gt; in the current buffer. The remaining arguments, &lt;var&gt;specs&lt;/var&gt;, should form either a list of face names, or a property list of attribute/value pairs.</source>
          <target state="translated">This function adds the face spec in &lt;var&gt;specs&lt;/var&gt; as relative remappings for face &lt;var&gt;face&lt;/var&gt; in the current buffer. The remaining arguments, &lt;var&gt;specs&lt;/var&gt; , should form either a list of face names, or a property list of attribute/value pairs.</target>
        </trans-unit>
        <trans-unit id="d04052051735ae3e0e977a90a4d965a6d964ef68" translate="yes" xml:space="preserve">
          <source>This function adjusts the current buffer&amp;rsquo;s auto-save file name if the visited file name has changed. It also renames an existing auto-save file, if it was made in the current Emacs session. If the visited file name has not changed, this function does nothing.</source>
          <target state="translated">This function adjusts the current buffer&amp;rsquo;s auto-save file name if the visited file name has changed. It also renames an existing auto-save file, if it was made in the current Emacs session. If the visited file name has not changed, this function does nothing.</target>
        </trans-unit>
        <trans-unit id="5f57687a61ee8dd8b6bb5dd575ae468a268a7e81" translate="yes" xml:space="preserve">
          <source>This function adjusts the indentation at the beginning of the current line to the value specified by the variable &lt;code&gt;left-margin&lt;/code&gt;. (That may involve either inserting or deleting whitespace.) This function is value of &lt;code&gt;indent-line-function&lt;/code&gt; in Paragraph-Indent Text mode.</source>
          <target state="translated">This function adjusts the indentation at the beginning of the current line to the value specified by the variable &lt;code&gt;left-margin&lt;/code&gt; . (That may involve either inserting or deleting whitespace.) This function is value of &lt;code&gt;indent-line-function&lt;/code&gt; in Paragraph-Indent Text mode.</target>
        </trans-unit>
        <trans-unit id="283b3120d2b1e5ecb8dfd7ac5ef6f6a005aee91f" translate="yes" xml:space="preserve">
          <source>This function allows Emacs to read pending output from processes. The output is given to their filter functions. If &lt;var&gt;process&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function does not return until some output has been received from &lt;var&gt;process&lt;/var&gt; or &lt;var&gt;process&lt;/var&gt; has closed the connection.</source>
          <target state="translated">This function allows Emacs to read pending output from processes. The output is given to their filter functions. If &lt;var&gt;process&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; then this function does not return until some output has been received from &lt;var&gt;process&lt;/var&gt; or &lt;var&gt;process&lt;/var&gt; has closed the connection.</target>
        </trans-unit>
        <trans-unit id="cf26ba184068b28fd0896ca94a81e5de77617765" translate="yes" xml:space="preserve">
          <source>This function allows you to arrange that Emacs will ask the user for confirmation before exiting or before killing a buffer that has &lt;var&gt;xwidget&lt;/var&gt; associated with it. If &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will query the user, otherwise it will not.</source>
          <target state="translated">This function allows you to arrange that Emacs will ask the user for confirmation before exiting or before killing a buffer that has &lt;var&gt;xwidget&lt;/var&gt; associated with it. If &lt;var&gt;flag&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , Emacs will query the user, otherwise it will not.</target>
        </trans-unit>
        <trans-unit id="bf335bd121a8eca0c5f6759fc3858e78f1f657e4" translate="yes" xml:space="preserve">
          <source>This function also defines &lt;var&gt;face&lt;/var&gt; as a valid face name if it is not already one, and (re)calculates its attributes on existing frames.</source>
          <target state="translated">This function also defines &lt;var&gt;face&lt;/var&gt; as a valid face name if it is not already one, and (re)calculates its attributes on existing frames.</target>
        </trans-unit>
        <trans-unit id="37609ce54a5ff7f294bf84ea4de78cdf2ae18a2b" translate="yes" xml:space="preserve">
          <source>This function also forces an update of the menu bar and frame title.</source>
          <target state="translated">This function also forces an update of the menu bar and frame title.</target>
        </trans-unit>
        <trans-unit id="45bab2ec30f25c2982006b7a098ab0411cb5a640" translate="yes" xml:space="preserve">
          <source>This function also resets certain other information pertaining to the buffer: it sets the local keymap to &lt;code&gt;nil&lt;/code&gt;, the syntax table to the value of &lt;code&gt;(standard-syntax-table)&lt;/code&gt;, the case table to &lt;code&gt;(standard-case-table)&lt;/code&gt;, and the abbrev table to the value of &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt;.</source>
          <target state="translated">This function also resets certain other information pertaining to the buffer: it sets the local keymap to &lt;code&gt;nil&lt;/code&gt; , the syntax table to the value of &lt;code&gt;(standard-syntax-table)&lt;/code&gt; , the case table to &lt;code&gt;(standard-case-table)&lt;/code&gt; , and the abbrev table to the value of &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f470a37c4713be355f21bcf33f0e9306fad6c932" translate="yes" xml:space="preserve">
          <source>This function also sets &lt;var&gt;symbol&lt;/var&gt; as a variable, with the keymap as its value. But if &lt;var&gt;mapvar&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it sets &lt;var&gt;mapvar&lt;/var&gt; as a variable instead.</source>
          <target state="translated">This function also sets &lt;var&gt;symbol&lt;/var&gt; as a variable, with the keymap as its value. But if &lt;var&gt;mapvar&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it sets &lt;var&gt;mapvar&lt;/var&gt; as a variable instead.</target>
        </trans-unit>
        <trans-unit id="2f67f09d25df27f6839ecb450a57eb93e2f6d8ae" translate="yes" xml:space="preserve">
          <source>This function also signals an error if the buffer is an indirect buffer. An indirect buffer always inherits the representation of its base buffer.</source>
          <target state="translated">This function also signals an error if the buffer is an indirect buffer. An indirect buffer always inherits the representation of its base buffer.</target>
        </trans-unit>
        <trans-unit id="bfa25a7a5563eb87e60e338899232ea47f96f2b2" translate="yes" xml:space="preserve">
          <source>This function alters part of the contents of the string &lt;var&gt;string&lt;/var&gt;, by storing &lt;var&gt;obj&lt;/var&gt; starting at index &lt;var&gt;idx&lt;/var&gt;. The argument &lt;var&gt;obj&lt;/var&gt; may be either a character or a (smaller) string.</source>
          <target state="translated">This function alters part of the contents of the string &lt;var&gt;string&lt;/var&gt; , by storing &lt;var&gt;obj&lt;/var&gt; starting at index &lt;var&gt;idx&lt;/var&gt; . The argument &lt;var&gt;obj&lt;/var&gt; may be either a character or a (smaller) string.</target>
        </trans-unit>
        <trans-unit id="5f3b9f6d880286305d2f483406ba368f2e1181c2" translate="yes" xml:space="preserve">
          <source>This function alters the frame &lt;var&gt;frame&lt;/var&gt; based on the elements of &lt;var&gt;alist&lt;/var&gt;. Each element of &lt;var&gt;alist&lt;/var&gt; has the form &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;parm&lt;/var&gt; is a symbol naming a parameter. If you don&amp;rsquo;t mention a parameter in &lt;var&gt;alist&lt;/var&gt;, its value doesn&amp;rsquo;t change. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">This function alters the frame &lt;var&gt;frame&lt;/var&gt; based on the elements of &lt;var&gt;alist&lt;/var&gt; . Each element of &lt;var&gt;alist&lt;/var&gt; has the form &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;parm&lt;/var&gt; is a symbol naming a parameter. If you don&amp;rsquo;t mention a parameter in &lt;var&gt;alist&lt;/var&gt; , its value doesn&amp;rsquo;t change. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected frame.</target>
        </trans-unit>
        <trans-unit id="f1a3eb59953468bf3d67cbe0c4bab0730f9d16e5" translate="yes" xml:space="preserve">
          <source>This function alters the frame parameters of all existing frames according to &lt;var&gt;alist&lt;/var&gt;, then modifies &lt;code&gt;default-frame-alist&lt;/code&gt; (and, if necessary, &lt;code&gt;initial-frame-alist&lt;/code&gt;) to apply the same parameter values to frames that will be created henceforth.</source>
          <target state="translated">This function alters the frame parameters of all existing frames according to &lt;var&gt;alist&lt;/var&gt; , then modifies &lt;code&gt;default-frame-alist&lt;/code&gt; (and, if necessary, &lt;code&gt;initial-frame-alist&lt;/code&gt; ) to apply the same parameter values to frames that will be created henceforth.</target>
        </trans-unit>
        <trans-unit id="55474dce8bede7fa41aaf8f090d61568d07cd19b" translate="yes" xml:space="preserve">
          <source>This function always returns &lt;code&gt;nil&lt;/code&gt;. The old syntax information in the table for this character is discarded.</source>
          <target state="translated">This function always returns &lt;code&gt;nil&lt;/code&gt; . The old syntax information in the table for this character is discarded.</target>
        </trans-unit>
        <trans-unit id="826a68e61e26d3dc2018817360ef52a0d95760b2" translate="yes" xml:space="preserve">
          <source>This function animates &lt;var&gt;image&lt;/var&gt;. The optional integer &lt;var&gt;index&lt;/var&gt; specifies the frame from which to start (default 0). The optional argument &lt;var&gt;limit&lt;/var&gt; controls the length of the animation. If omitted or &lt;code&gt;nil&lt;/code&gt;, the image animates once only; if &lt;code&gt;t&lt;/code&gt; it loops forever; if a number animation stops after that many seconds.</source>
          <target state="translated">This function animates &lt;var&gt;image&lt;/var&gt; . The optional integer &lt;var&gt;index&lt;/var&gt; specifies the frame from which to start (default 0). The optional argument &lt;var&gt;limit&lt;/var&gt; controls the length of the animation. If omitted or &lt;code&gt;nil&lt;/code&gt; , the image animates once only; if &lt;code&gt;t&lt;/code&gt; it loops forever; if a number animation stops after that many seconds.</target>
        </trans-unit>
        <trans-unit id="0967994b7dbfe229674d04294e461f7c265e6b60" translate="yes" xml:space="preserve">
          <source>This function announces that &lt;var&gt;feature&lt;/var&gt; is now loaded, or being loaded, into the current Emacs session. This means that the facilities associated with &lt;var&gt;feature&lt;/var&gt; are or will be available for other Lisp programs.</source>
          <target state="translated">This function announces that &lt;var&gt;feature&lt;/var&gt; is now loaded, or being loaded, into the current Emacs session. This means that the facilities associated with &lt;var&gt;feature&lt;/var&gt; are or will be available for other Lisp programs.</target>
        </trans-unit>
        <trans-unit id="72f5b49aa6d8edb55e7989428323cef4e38a7981" translate="yes" xml:space="preserve">
          <source>This function appends the contents of the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer to the end of file &lt;var&gt;filename&lt;/var&gt;. If that file does not exist, it is created. This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function appends the contents of the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer to the end of file &lt;var&gt;filename&lt;/var&gt; . If that file does not exist, it is created. This function returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b4b6643bdc4c569692300a096eaa54226cc5318" translate="yes" xml:space="preserve">
          <source>This function appends the text &lt;var&gt;string&lt;/var&gt; to the first entry in the kill ring and makes the yanking pointer point to the combined entry. Normally &lt;var&gt;string&lt;/var&gt; goes at the end of the entry, but if &lt;var&gt;before-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it goes at the beginning. This function calls &lt;code&gt;kill-new&lt;/code&gt; as a subroutine, thus causing the values of &lt;code&gt;interprogram-cut-function&lt;/code&gt; and possibly &lt;code&gt;interprogram-paste-function&lt;/code&gt; (see below) to be invoked by extension.</source>
          <target state="translated">This function appends the text &lt;var&gt;string&lt;/var&gt; to the first entry in the kill ring and makes the yanking pointer point to the combined entry. Normally &lt;var&gt;string&lt;/var&gt; goes at the end of the entry, but if &lt;var&gt;before-p&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it goes at the beginning. This function calls &lt;code&gt;kill-new&lt;/code&gt; as a subroutine, thus causing the values of &lt;code&gt;interprogram-cut-function&lt;/code&gt; and possibly &lt;code&gt;interprogram-paste-function&lt;/code&gt; (see below) to be invoked by extension.</target>
        </trans-unit>
        <trans-unit id="4239bc8a7e12e62696801af1e048981138c6cec6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; in turn (presumably for side effects), and returns &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; in turn (presumably for side effects), and returns &lt;var&gt;sequence&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2d35ac6e9b6fd226737cb9705d3c9df454deb9e6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;, like &lt;code&gt;mapcar&lt;/code&gt;, but instead of collecting the results into a list, it returns a single list with all the elements of the results (which must be lists), by altering the results (using &lt;code&gt;nconc&lt;/code&gt;; see &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;). Like with &lt;code&gt;mapcar&lt;/code&gt;, &lt;var&gt;sequence&lt;/var&gt; can be of any type except a char-table.</source>
          <target state="translated">This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; , like &lt;code&gt;mapcar&lt;/code&gt; , but instead of collecting the results into a list, it returns a single list with all the elements of the results (which must be lists), by altering the results (using &lt;code&gt;nconc&lt;/code&gt; ; see &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;). Like with &lt;code&gt;mapcar&lt;/code&gt; , &lt;var&gt;sequence&lt;/var&gt; can be of any type except a char-table.</target>
        </trans-unit>
        <trans-unit id="b1c3772768e1cb0f5aa3ea648b08795849720d0c" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;spec&lt;/var&gt; as a face spec for &lt;code&gt;face&lt;/code&gt;. &lt;var&gt;spec&lt;/var&gt; should be a face spec, as described in the above documentation for &lt;code&gt;defface&lt;/code&gt;.</source>
          <target state="translated">This function applies &lt;var&gt;spec&lt;/var&gt; as a face spec for &lt;code&gt;face&lt;/code&gt; . &lt;var&gt;spec&lt;/var&gt; should be a face spec, as described in the above documentation for &lt;code&gt;defface&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eb67707006b5a85fc68b00651580e8633b2915b" translate="yes" xml:space="preserve">
          <source>This function applies a translation table to the characters in the buffer between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">This function applies a translation table to the characters in the buffer between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="de65326c220ae4ef4349c37201370510fd36aea5" translate="yes" xml:space="preserve">
          <source>This function arranges for &lt;var&gt;watch-function&lt;/var&gt; to be called whenever &lt;var&gt;symbol&lt;/var&gt; is modified. Modifications through aliases (see &lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;Variable Aliases&lt;/a&gt;) will have the same effect.</source>
          <target state="translated">This function arranges for &lt;var&gt;watch-function&lt;/var&gt; to be called whenever &lt;var&gt;symbol&lt;/var&gt; is modified. Modifications through aliases (see &lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;Variable Aliases&lt;/a&gt;) will have the same effect.</target>
        </trans-unit>
        <trans-unit id="8e72ff71cadb59169a335198abe5d69882854f36" translate="yes" xml:space="preserve">
          <source>This function arranges for the debugger to be called whenever &lt;var&gt;variable&lt;/var&gt; is modified.</source>
          <target state="translated">This function arranges for the debugger to be called whenever &lt;var&gt;variable&lt;/var&gt; is modified.</target>
        </trans-unit>
        <trans-unit id="acd470cf7d8172fe867cc56b5d3d629b62b83db0" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user enters &amp;lsquo;</source>
          <target state="translated">This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user enters &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c511618a8bcd18a156a4ebdec967bc65d5a89422" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user types</source>
          <target state="translated">This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user types</target>
        </trans-unit>
        <trans-unit id="a6a45e25fa7cc4f87747729f9c53ffa39831209f" translate="yes" xml:space="preserve">
          <source>This function asks the user a series of questions, reading a single-character answer in the echo area for each one.</source>
          <target state="translated">This function asks the user a series of questions, reading a single-character answer in the echo area for each one.</target>
        </trans-unit>
        <trans-unit id="1386738f8749573a53305a8dcc03715d2bc078f5" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;class&lt;/var&gt; to all the files in &lt;code&gt;directory&lt;/code&gt; and its subdirectories. Thereafter, all the variable settings specified for &lt;var&gt;class&lt;/var&gt; will be applied to any visited file in &lt;var&gt;directory&lt;/var&gt; and its children. &lt;var&gt;class&lt;/var&gt; must have been already defined by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">This function assigns &lt;var&gt;class&lt;/var&gt; to all the files in &lt;code&gt;directory&lt;/code&gt; and its subdirectories. Thereafter, all the variable settings specified for &lt;var&gt;class&lt;/var&gt; will be applied to any visited file in &lt;var&gt;directory&lt;/var&gt; and its children. &lt;var&gt;class&lt;/var&gt; must have been already defined by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ded3336ee747552b9df4826ac4a5d24623ad4e04" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;profiles&lt;/var&gt;, which are symbols, to all remote connections identified by &lt;var&gt;criteria&lt;/var&gt;. &lt;var&gt;criteria&lt;/var&gt; is a plist identifying a connection and the application using this connection. Property names might be &lt;code&gt;:application&lt;/code&gt;, &lt;code&gt;:protocol&lt;/code&gt;, &lt;code&gt;:user&lt;/code&gt; and &lt;code&gt;:machine&lt;/code&gt;. The property value of &lt;code&gt;:application&lt;/code&gt; is a symbol, all other property values are strings. All properties are optional; if &lt;var&gt;criteria&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it always applies. Example:</source>
          <target state="translated">This function assigns &lt;var&gt;profiles&lt;/var&gt; , which are symbols, to all remote connections identified by &lt;var&gt;criteria&lt;/var&gt; . &lt;var&gt;criteria&lt;/var&gt; is a plist identifying a connection and the application using this connection. Property names might be &lt;code&gt;:application&lt;/code&gt; , &lt;code&gt;:protocol&lt;/code&gt; , &lt;code&gt;:user&lt;/code&gt; and &lt;code&gt;:machine&lt;/code&gt; . The property value of &lt;code&gt;:application&lt;/code&gt; is a symbol, all other property values are strings. All properties are optional; if &lt;var&gt;criteria&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it always applies. Example:</target>
        </trans-unit>
        <trans-unit id="439a567966bbada3620c5a871bbdbef0d06493b7" translate="yes" xml:space="preserve">
          <source>This function associates &lt;var&gt;sentinel&lt;/var&gt; with &lt;var&gt;process&lt;/var&gt;. If &lt;var&gt;sentinel&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the process will have the default sentinel, which inserts a message in the process&amp;rsquo;s buffer when the process status changes.</source>
          <target state="translated">This function associates &lt;var&gt;sentinel&lt;/var&gt; with &lt;var&gt;process&lt;/var&gt; . If &lt;var&gt;sentinel&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , then the process will have the default sentinel, which inserts a message in the process&amp;rsquo;s buffer when the process status changes.</target>
        </trans-unit>
        <trans-unit id="1096a583f698faa4eb718e093160984efaf64843" translate="yes" xml:space="preserve">
          <source>This function associates the color name &lt;var&gt;name&lt;/var&gt; with color number &lt;var&gt;number&lt;/var&gt; on the terminal.</source>
          <target state="translated">This function associates the color name &lt;var&gt;name&lt;/var&gt; with color number &lt;var&gt;number&lt;/var&gt; on the terminal.</target>
        </trans-unit>
        <trans-unit id="e3ae78a1f68bdfe0e4cbf3cc1cf7cc2b156acde5" translate="yes" xml:space="preserve">
          <source>This function attempts to give all windows on the selected frame approximately the same share of the screen area. Full-width or full-height windows are not given more space than other windows.</source>
          <target state="translated">This function attempts to give all windows on the selected frame approximately the same share of the screen area. Full-width or full-height windows are not given more space than other windows.</target>
        </trans-unit>
        <trans-unit id="f3bcc3ee850866c0fffcaf099cde8903944e0c4c" translate="yes" xml:space="preserve">
          <source>This function attempts to keep point, markers, text properties, and overlays in the current buffer intact. One potential case where this behavior is useful is external code formatting programs: they typically write the reformatted text into a temporary buffer or file, and using &lt;code&gt;delete-region&lt;/code&gt; and &lt;code&gt;insert-buffer-substring&lt;/code&gt; would destroy these properties. However, the latter combination is typically faster (See &lt;a href=&quot;deletion#Deletion&quot;&gt;Deletion&lt;/a&gt;, and &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;).</source>
          <target state="translated">This function attempts to keep point, markers, text properties, and overlays in the current buffer intact. One potential case where this behavior is useful is external code formatting programs: they typically write the reformatted text into a temporary buffer or file, and using &lt;code&gt;delete-region&lt;/code&gt; and &lt;code&gt;insert-buffer-substring&lt;/code&gt; would destroy these properties. However, the latter combination is typically faster (See &lt;a href=&quot;deletion#Deletion&quot;&gt;Deletion&lt;/a&gt;, and &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="1911e07f9047017317f10d8f050384cab29aaa1f" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as large as possible, in both dimensions, without resizing its frame or deleting other windows. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">This function attempts to make &lt;var&gt;window&lt;/var&gt; as large as possible, in both dimensions, without resizing its frame or deleting other windows. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window.</target>
        </trans-unit>
        <trans-unit id="35f2b233f1d585e694aa5dfcd78a197e11d4d89a" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as small as possible, in both dimensions, without deleting it or resizing its frame. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">This function attempts to make &lt;var&gt;window&lt;/var&gt; as small as possible, in both dimensions, without deleting it or resizing its frame. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window.</target>
        </trans-unit>
        <trans-unit id="b23abdf7c6f489bc23826919a92070345aea0a72" translate="yes" xml:space="preserve">
          <source>This function auto-saves all buffers that need to be auto-saved. It saves all buffers for which auto-saving is enabled and that have been changed since the previous auto-save.</source>
          <target state="translated">This function auto-saves all buffers that need to be auto-saved. It saves all buffers for which auto-saving is enabled and that have been changed since the previous auto-save.</target>
        </trans-unit>
        <trans-unit id="fc85e4a1c9b182563a3f4a35ba0acde86dc4c46a" translate="yes" xml:space="preserve">
          <source>This function balances windows in a way that gives more space to full-width and/or full-height windows. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a frame, it balances all windows on that frame. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a window, it balances only that window and its siblings (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;).</source>
          <target state="translated">이 기능은 전체 너비 및 / 또는 전체 높이 창에 더 많은 공간을 제공하는 방식으로 창 균형을 조정합니다. 경우 &lt;var&gt;window-or-frame&lt;/var&gt; 지정하는 프레임은, 그 프레임에 모든 창 사이의 균형을 맞추 었습니다. 경우 &lt;var&gt;window-or-frame&lt;/var&gt; 지정 창, 그것은 해당 윈도우와 그 형제 자매의 균형을합니다 ( &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows 및 프레임을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d8d3ca16001bd519fbd308317ed1a8be178f437" translate="yes" xml:space="preserve">
          <source>This function beeps, or flashes the screen (see &lt;code&gt;visible-bell&lt;/code&gt; below). It also terminates any keyboard macro currently executing unless &lt;var&gt;do-not-terminate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 신호음을 울리거나 화면을 깜박입니다 (아래 &lt;code&gt;visible-bell&lt;/code&gt; 참조). 또한 &lt;var&gt;do-not-terminate&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 현재 실행중인 모든 키보드 매크로를 종료합니다 .</target>
        </trans-unit>
        <trans-unit id="3ff292221ef899ef612111410550ec5e84c130c7" translate="yes" xml:space="preserve">
          <source>This function behaves exactly like &lt;code&gt;error&lt;/code&gt;, except that it uses the error symbol &lt;code&gt;user-error&lt;/code&gt; rather than &lt;code&gt;error&lt;/code&gt;. As the name suggests, this is intended to report errors on the part of the user, rather than errors in the code itself. For example, if you try to use the command &lt;code&gt;Info-history-back&lt;/code&gt; (</source>
          <target state="translated">이 기능은 정확히처럼 동작 &lt;code&gt;error&lt;/code&gt; 는 오류 심볼 사용하는 것을 제외하고, &lt;code&gt;user-error&lt;/code&gt; 가 아닌 &lt;code&gt;error&lt;/code&gt; . 이름에서 알 수 있듯이 이는 코드 자체의 오류가 아닌 사용자 측의 오류를보고하기위한 것입니다. 예를 들어, &lt;code&gt;Info-history-back&lt;/code&gt; (</target>
        </trans-unit>
        <trans-unit id="0a3a5682f2af5897ff191aa1d0e3be9bede33499" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;custom-initialize-set&lt;/code&gt;, but it delays the actual initialization to the next Emacs start. This should be used in files that are preloaded (or for autoloaded variables), so that the initialization is done in the run-time context rather than the build-time context. This also has the side-effect that the (delayed) initialization is performed with the &lt;code&gt;:set&lt;/code&gt; function. See &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;custom-initialize-set&lt;/code&gt; 처럼 동작 하지만 실제 초기화를 다음 Emacs 시작으로 지연시킵니다. 이는 미리로드 된 파일 (또는 자동로드 된 변수에 대해)에서 사용해야하므로 초기화가 빌드 타임 컨텍스트가 아닌 런타임 컨텍스트에서 수행됩니다. 이것은 또한 (지연된) 초기화가 &lt;code&gt;:set&lt;/code&gt; 함수로 수행된다는 부작용이 있습니다 . &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Emacs 빌드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="af96d322e164b004457b48bee402bcd096416332" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;equal&lt;/code&gt; in all cases but also requires that for two strings to be equal, they have the same text properties.</source>
          <target state="translated">이 함수 는 모든 경우에 &lt;code&gt;equal&lt;/code&gt; 작동 하지만 두 문자열이 동일하려면 동일한 텍스트 속성을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="ca3b72e7b43c7fc58841701418556d75f3cb6fc2" translate="yes" xml:space="preserve">
          <source>This function browses the specified &lt;var&gt;uri&lt;/var&gt; in the given &lt;var&gt;xwidget&lt;/var&gt;. The &lt;var&gt;uri&lt;/var&gt; is a string that specifies the name of a file or a URL.</source>
          <target state="translated">이 함수 는 주어진 &lt;var&gt;xwidget&lt;/var&gt; 에서 지정된 &lt;var&gt;uri&lt;/var&gt; 를 찾습니다 . &lt;var&gt;uri&lt;/var&gt; 문자열입니다 지정하는 파일이나 URL의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6565fe8d7642fc3de8b3c4b49600210dcbad04ac" translate="yes" xml:space="preserve">
          <source>This function builds a &lt;em&gt;prec2&lt;/em&gt; table from a table of precedences &lt;var&gt;precs&lt;/var&gt;. &lt;var&gt;precs&lt;/var&gt; should be a list, sorted by precedence (for example &lt;code&gt;&quot;+&quot;&lt;/code&gt; will come before &lt;code&gt;&quot;*&quot;&lt;/code&gt;), of elements of the form &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt;, where each &lt;var&gt;op&lt;/var&gt; is a token that acts as an operator; &lt;var&gt;assoc&lt;/var&gt; is their associativity, which can be either &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;assoc&lt;/code&gt;, or &lt;code&gt;nonassoc&lt;/code&gt;. All operators in a given element share the same precedence level and associativity.</source>
          <target state="translated">이 기능은 빌드 &lt;em&gt;prec2의&lt;/em&gt; 우선 순위를 가지고 있기 용의 테이블에서 테이블을 &lt;var&gt;precs&lt;/var&gt; . &lt;var&gt;precs&lt;/var&gt; 는 &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt; &lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...) 형식의 요소의 우선 순위에 따라 정렬 된 목록이어야합니다 (예 : &lt;code&gt;&quot;+&quot;&lt;/code&gt; 는 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 앞에 옴 ) . 여기서 각 &lt;var&gt;op&lt;/var&gt; 는 연산자 역할을하는 토큰입니다. &lt;var&gt;assoc&lt;/var&gt; 는 연관성이며 &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;assoc&lt;/code&gt; 또는 &lt;code&gt;nonassoc&lt;/code&gt; 일 수 있습니다. 주어진 요소의 모든 연산자는 동일한 우선 순위 수준과 연관성을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="1b51bc6e106b8e23530ca082a5db223c3af4e0c4" translate="yes" xml:space="preserve">
          <source>This function byte-compiles the function definition of &lt;var&gt;symbol&lt;/var&gt;, replacing the previous definition with the compiled one. The function definition of &lt;var&gt;symbol&lt;/var&gt; must be the actual code for the function; &lt;code&gt;byte-compile&lt;/code&gt; does not handle function indirection. The return value is the byte-code function object which is the compiled definition of &lt;var&gt;symbol&lt;/var&gt; (see &lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;Byte-Code Objects&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 의 함수 정의를 바이트 컴파일 하여 이전 정의를 컴파일 된 정의로 대체합니다. &lt;var&gt;symbol&lt;/var&gt; 의 함수 정의는 함수 의 실제 코드 여야합니다. &lt;code&gt;byte-compile&lt;/code&gt; 은 함수 간접을 처리하지 않습니다. 반환 값은 &lt;var&gt;symbol&lt;/var&gt; 의 컴파일 된 정의 인 바이트 코드 함수 객체입니다 ( &lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;바이트 코드 객체&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="58dbbedddc985589878e0d2af7300367367b6f41" translate="yes" xml:space="preserve">
          <source>This function calculates the dimensions of the largest empty rectangle that can be inscribed in the specified &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;window&lt;/var&gt; 텍스트 영역에 새길 수있는 가장 큰 빈 사각형의 크기를 계산합니다 . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ba72cf6062793468aad230446fa4d17bf997509b" translate="yes" xml:space="preserve">
          <source>This function calculates the pixel dimensions of each line displayed in the specified &lt;var&gt;window&lt;/var&gt;. It does so by walking &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s current glyph matrix&amp;mdash;a matrix storing the glyph (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;) of each buffer character currently displayed in &lt;var&gt;window&lt;/var&gt;. If successful, it returns a list of cons pairs representing the x- and y-coordinates of the lower right corner of the last character of each line. Coordinates are measured in pixels from an origin (0, 0) at the top-left corner of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;window&lt;/var&gt; 표시된 각 라인의 픽셀 치수를 계산합니다 . 워킹 &lt;var&gt;window&lt;/var&gt; 의 현재 글리프 매트릭스, 즉 현재 &lt;var&gt;window&lt;/var&gt; 에 표시된 각 버퍼 문자 의 글리프 ( &lt;a href=&quot;glyphs#Glyphs&quot;&gt;글리프&lt;/a&gt; 참조 )를 저장하는 매트릭스를 사용합니다 . 성공하면 각 줄의 마지막 문자 오른쪽 아래 모서리의 x 및 y 좌표를 나타내는 cons 쌍 목록을 반환합니다. 좌표는 &lt;var&gt;window&lt;/var&gt; 의 왼쪽 상단 모서리에있는 원점 (0, 0)에서 픽셀 단위로 측정됩니다 . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0e51c66274036d618c90f8effd48d6a002399b1b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;describe-bindings&lt;/code&gt; to display a list of all the subcommands of the prefix key of the most recent key sequence. The prefix described consists of all but the last event of that key sequence. (The last event is, presumably, the help character.)</source>
          <target state="translated">이 함수는 &lt;code&gt;describe-bindings&lt;/code&gt; 를 호출 하여 가장 최근 키 시퀀스의 접두사 키의 모든 하위 명령 목록을 표시합니다. 설명 된 접두사는 해당 키 시퀀스의 마지막 이벤트를 제외한 모든 이벤트로 구성됩니다. (마지막 이벤트는 아마도 도움말 캐릭터입니다.)</target>
        </trans-unit>
        <trans-unit id="0c7434b528b427b395f4fd38e52b1e8a896cfd89" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;progress-reporter-update&lt;/code&gt;, so the first message is printed immediately.</source>
          <target state="translated">이 함수는 &lt;code&gt;progress-reporter-update&lt;/code&gt; 를 호출 하므로 첫 번째 메시지가 즉시 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="38848b0928341ad6ede5fe0568bd029f5b30515e" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; for cleaning up all windows currently displaying the buffer to be killed.</source>
          <target state="translated">이 함수는 현재 죽일 버퍼를 표시하는 모든 창을 정리하기 위해 &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="11724efe2ff0c491736a280c8b24b31aae6f66b1" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once for each of the associations in &lt;var&gt;table&lt;/var&gt;. The function &lt;var&gt;function&lt;/var&gt; should accept two arguments&amp;mdash;a &lt;var&gt;key&lt;/var&gt; listed in &lt;var&gt;table&lt;/var&gt;, and its associated &lt;var&gt;value&lt;/var&gt;. &lt;code&gt;maphash&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 통화 &lt;var&gt;function&lt;/var&gt; 에서 협회의 각 번 &lt;var&gt;table&lt;/var&gt; . 함수 &lt;var&gt;function&lt;/var&gt; 는 두 개의 인수, 즉 &lt;var&gt;table&lt;/var&gt; 에 나열된 &lt;var&gt;key&lt;/var&gt; 와 관련 &lt;var&gt;value&lt;/var&gt; 받아야 합니다 . &lt;code&gt;maphash&lt;/code&gt; 는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="333c365e2bcb3639c7a57e0c3d10f9d9eeb9ba2b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once with each symbol in the obarray &lt;var&gt;obarray&lt;/var&gt;. Then it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;obarray&lt;/var&gt; is omitted, it defaults to the value of &lt;code&gt;obarray&lt;/code&gt;, the standard obarray for ordinary symbols.</source>
          <target state="translated">이 함수 는 obarray &lt;var&gt;obarray&lt;/var&gt; 의 각 기호로 &lt;var&gt;function&lt;/var&gt; 한 번 호출 합니다 . 그런 다음 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 경우 &lt;var&gt;obarray&lt;/var&gt; 는 값으로, 기본값을 생략 &lt;code&gt;obarray&lt;/code&gt; , 일반 기호에 대한 표준 obarray.</target>
        </trans-unit>
        <trans-unit id="a9fa740195e686e04b2f695015c29cc303bed6f3" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;program&lt;/var&gt; and waits for it to finish.</source>
          <target state="translated">이 함수는 &lt;var&gt;program&lt;/var&gt; 호출 하고 완료 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="9f7663bce42615c5a1363320cf1b6553cdaa46f2" translate="yes" xml:space="preserve">
          <source>This function calls its argument &lt;var&gt;function&lt;/var&gt; for each element of &lt;var&gt;char-table&lt;/var&gt; that has a non-&lt;code&gt;nil&lt;/code&gt; value. The call to &lt;var&gt;function&lt;/var&gt; is with two arguments, a key and a value. The key is a possible &lt;var&gt;range&lt;/var&gt; argument for &lt;code&gt;char-table-range&lt;/code&gt;&amp;mdash;either a valid character or a cons cell &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;, specifying a range of characters that share the same value. The value is what &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; returns.</source>
          <target state="translated">이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값 을 가진 &lt;var&gt;char-table&lt;/var&gt; 의 각 요소에 대한 인수 &lt;var&gt;function&lt;/var&gt; 를 호출 합니다. &lt;var&gt;function&lt;/var&gt; 호출 에는 두 개의 인수, 키와 값이 있습니다. 키는 동일한 값을 공유하는 문자 범위를 지정하는 유효한 문자 또는 단점 셀 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt; ) 중 하나 인 &lt;code&gt;char-table-range&lt;/code&gt; 의 가능한 &lt;var&gt;range&lt;/var&gt; 인수입니다 . 값은 &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt; )가 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e2d39d4245ea953b6c03bb7a74be65f2111faf98" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;fun&lt;/var&gt; once for each live window, with the window as the argument.</source>
          <target state="translated">이 함수 는 창을 인수로 사용하여 각 라이브 창에 대해 &lt;var&gt;fun&lt;/var&gt; 함수를 한 번씩 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="d9657b6203a8f764b5c56ebbfc825cb844478422" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;predicate&lt;/var&gt; for each of the windows in the cyclic order of windows in turn, passing it the window as an argument. If the predicate returns non-&lt;code&gt;nil&lt;/code&gt; for any window, this function stops and returns that window. If no such window is found, the return value is &lt;var&gt;default&lt;/var&gt; (which defaults to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">이 함수 는 창의 순환 순서로 각 창에 대한 함수 &lt;var&gt;predicate&lt;/var&gt; 를 차례로 호출하여 창을 인수로 전달합니다. 조건자가 임의의 창에 대해 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 하면이 함수는 중지하고 해당 창을 반환합니다. 그러한 창이 없으면 반환 값은 &lt;var&gt;default&lt;/var&gt; (기본값은 &lt;code&gt;nil&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="708c1309721b1c0f149f7d2312324af9348cb6d9" translate="yes" xml:space="preserve">
          <source>This function calls the interactively callable function &lt;var&gt;command&lt;/var&gt;, providing arguments according to its interactive calling specifications. It returns whatever &lt;var&gt;command&lt;/var&gt; returns.</source>
          <target state="translated">이 함수는 대화 형 호출 기능 &lt;var&gt;command&lt;/var&gt; 호출하여 대화 형 호출 사양에 따라 인수를 제공합니다. 어떤 &lt;var&gt;command&lt;/var&gt; 이 반환 되든 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6026201df119b1eaf16d1f1c6ef16e3d7bf43084" translate="yes" xml:space="preserve">
          <source>This function calls the specified &lt;var&gt;func&lt;/var&gt; passing it &lt;var&gt;nargs&lt;/var&gt; arguments from the array pointed to by &lt;var&gt;args&lt;/var&gt;. The argument &lt;var&gt;func&lt;/var&gt; can be a function symbol (e.g., returned by &lt;code&gt;intern&lt;/code&gt; described above), a module function returned by &lt;code&gt;make_function&lt;/code&gt; (see &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt;), a subroutine written in C, etc. If &lt;var&gt;nargs&lt;/var&gt; is zero, &lt;var&gt;args&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;func&lt;/var&gt; 를 호출하여 &lt;var&gt;args&lt;/var&gt; 가 가리키는 배열에서 &lt;var&gt;nargs&lt;/var&gt; 인수를 전달합니다 . &lt;var&gt;func&lt;/var&gt; 인수 는 함수 기호 (예 : 위에서 설명한 &lt;code&gt;intern&lt;/code&gt; 의해 반환 됨 ), &lt;code&gt;make_function&lt;/code&gt; ( &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;모듈 함수&lt;/a&gt; 참조)에 의해 반환 된 모듈 함수 , C로 작성된 서브 루틴 등이 될 수 있습니다 . &lt;var&gt;nargs&lt;/var&gt; 가 0이면 &lt;var&gt;args&lt;/var&gt; 는 &lt;code&gt;NULL&lt;/code&gt; 포인터 가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c049f14e0b6666963e4ec8ce86792a24885b4cb6" translate="yes" xml:space="preserve">
          <source>This function can also be called interactively. In that case, it prints a message reporting the number of lines, words, and characters in the buffer, or in the region if the region is active.</source>
          <target state="translated">이 함수는 대화식으로 호출 할 수도 있습니다. 이 경우 버퍼 또는 영역이 활성화 된 경우 영역의 줄, 단어 및 문자 수를보고하는 메시지를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="51c54bee55f87d0a2be16a8a5a2c9be8f612bfee" translate="yes" xml:space="preserve">
          <source>This function can be called before an amalgamating command. It removes the previous &lt;code&gt;undo-boundary&lt;/code&gt; if a series of such calls have been made.</source>
          <target state="translated">이 함수는 통합 명령 전에 호출 할 수 있습니다. 일련의 이러한 호출이 수행 된 경우 이전 &lt;code&gt;undo-boundary&lt;/code&gt; 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="df4f49d21440d1153bf1036a702981a94f5196e8" translate="yes" xml:space="preserve">
          <source>This function can be used to initialize the local keymap of a major mode for which insertion of text is not desirable. But usually such a mode should be derived from &lt;code&gt;special-mode&lt;/code&gt; (see &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;); then its keymap will automatically inherit from &lt;code&gt;special-mode-map&lt;/code&gt;, which is already suppressed. Here is how &lt;code&gt;special-mode-map&lt;/code&gt; is defined:</source>
          <target state="translated">이 함수는 텍스트 삽입이 바람직하지 않은 주요 모드의 로컬 키맵을 초기화하는 데 사용할 수 있습니다. 그러나 일반적으로 이러한 모드는 &lt;code&gt;special-mode&lt;/code&gt; 에서 파생되어야 합니다 ( &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;기본 주요 모드&lt;/a&gt; 참조 ). 그러면 해당 키맵 은 이미 억제 된 &lt;code&gt;special-mode-map&lt;/code&gt; 에서 자동으로 상속됩니다 . &lt;code&gt;special-mode-map&lt;/code&gt; 이 정의되는 방법은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="be74eec3452d11d0176e37ed21b512bdf1eb22c2" translate="yes" xml:space="preserve">
          <source>This function can be used to transpose stretches of text:</source>
          <target state="translated">이 함수를 사용하여 텍스트를 조옮김 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="197f6679cb3ca88b1a4655c88c49b28d088d5627" translate="yes" xml:space="preserve">
          <source>This function can be useful as an output stream when debugging. It writes &lt;var&gt;character&lt;/var&gt; to the standard error stream.</source>
          <target state="translated">이 함수는 디버깅 할 때 출력 스트림으로 유용 할 수 있습니다. 표준 오류 스트림에 &lt;var&gt;character&lt;/var&gt; 를 씁니다 .</target>
        </trans-unit>
        <trans-unit id="c86ffcbcc5f0b36e1cefc4186607fc1c394c0fe9" translate="yes" xml:space="preserve">
          <source>This function can indicate there are no more sort records by leaving point at the end of the buffer.</source>
          <target state="translated">이 함수는 버퍼 끝에 포인트를 두어 더 이상 정렬 레코드가 없음을 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d16e2d06844ba5f689f62688e4c3ba9cf1b79431" translate="yes" xml:space="preserve">
          <source>This function cancels and undoes all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;handle&lt;/var&gt; 에서 지정한 변경 그룹의 모든 변경 사항을 취소하고 실행 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="85e6d5637ca515e9970407cc96b9ed5acbc70b91" translate="yes" xml:space="preserve">
          <source>This function cancels any narrowing in the current buffer, so that the entire contents are accessible. This is called &lt;em&gt;widening&lt;/em&gt;. It is equivalent to the following expression:</source>
          <target state="translated">이 함수는 전체 내용에 액세스 할 수 있도록 현재 버퍼의 축소를 취소합니다. 이를 &lt;em&gt;확대&lt;/em&gt; 라고 합니다. 다음 표현식과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="aca02809e6ca5d0f5704c010f281a569f37b9d26" translate="yes" xml:space="preserve">
          <source>This function cannot be used in an Emacs that was already dumped. This function is deprecated, and by default Emacs is built without &lt;code&gt;unexec&lt;/code&gt; support so this function is not available.</source>
          <target state="translated">이 기능은 이미 덤프 된 Emacs에서는 사용할 수 없습니다. 이 함수는 더 이상 사용되지 않으며 기본적으로 Emacs는 &lt;code&gt;unexec&lt;/code&gt; 지원 없이 빌드 되므로이 함수를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d6862d9f011c28238585e423fb0003d9a3c85d4a" translate="yes" xml:space="preserve">
          <source>This function cannot tell whether the comments it traverses are embedded within a string. If they look like comments, it treats them as comments.</source>
          <target state="translated">이 함수는 순회하는 주석이 문자열에 포함되어 있는지 여부를 알 수 없습니다. 댓글처럼 보이면 댓글로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="bc06d29126920d369fe3dd2dbf2dd7f17e1b48fe" translate="yes" xml:space="preserve">
          <source>This function capitalizes &lt;var&gt;count&lt;/var&gt; words after point, moving point over as it does. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. If &lt;var&gt;count&lt;/var&gt; is negative, the function capitalizes the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 포인트 후 &lt;var&gt;count&lt;/var&gt; 단어를 대문자로 표시하고 포인트를 이동합니다. 대문자 화는 각 단어의 첫 문자를 대문자로 변환하고 나머지 각 단어를 소문자로 변환하는 것을 의미합니다. 경우 &lt;var&gt;count&lt;/var&gt; - 음,이 함수는이 대문자로 &lt;var&gt;count&lt;/var&gt; 이전 단어 만 포인트를 이동하지 않습니다. 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d4a014eb3c50b3c0c03861600f49c23114f2af5" translate="yes" xml:space="preserve">
          <source>This function capitalizes all words in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 로 정의 된 영역의 모든 단어를 대문자로 표시합니다 . 대문자 화는 각 단어의 첫 문자를 대문자로 변환하고 나머지 각 단어를 소문자로 변환하는 것을 의미합니다. 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1c0ebaf53d2d45563bdffeb5dd181592b579c85a" translate="yes" xml:space="preserve">
          <source>This function capitalizes strings or characters. If &lt;var&gt;string-or-char&lt;/var&gt; is a string, the function returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt; in which each word has been capitalized. This means that the first character of each word is converted to upper case, and the rest are converted to lower case.</source>
          <target state="translated">이 함수는 문자열 또는 문자를 대문자로 표시합니다. &lt;var&gt;string-or-char&lt;/var&gt; 가 문자열이면 함수는 각 단어가 대문자 로 된 &lt;var&gt;string-or-char&lt;/var&gt; 의 복사 본인 내용을 가진 새 문자열을 반환합니다 . 즉, 각 단어의 첫 문자는 대문자로 변환되고 나머지는 소문자로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="f44d2a9276aece55b507fe01ce5beb8c630be2ed" translate="yes" xml:space="preserve">
          <source>This function causes the browser widget specified by &lt;var&gt;xwidget&lt;/var&gt; to execute the specified JavaScript &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;xwidget&lt;/var&gt; 에 의해 지정된 브라우저 위젯 이 지정된 JavaScript &lt;code&gt;script&lt;/code&gt; 를 실행하도록합니다 .</target>
        </trans-unit>
        <trans-unit id="8bad284717417a9939835167bd83a93fb9ec2309" translate="yes" xml:space="preserve">
          <source>This function changes the contents of the full keymap &lt;var&gt;keymap&lt;/var&gt; by remapping &lt;code&gt;self-insert-command&lt;/code&gt; to the command &lt;code&gt;undefined&lt;/code&gt; (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). This has the effect of undefining all printing characters, thus making ordinary insertion of text impossible. &lt;code&gt;suppress-keymap&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;self-insert-command&lt;/code&gt; 를 &lt;code&gt;undefined&lt;/code&gt; 명령 으로 다시 매핑 하여 전체 키맵 &lt;var&gt;keymap&lt;/var&gt; 의 내용을 변경합니다 ( &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt; 참조 ). 이것은 모든 인쇄 문자를 정의 해제하는 효과가 있으므로 일반적인 텍스트 삽입이 불가능합니다. &lt;code&gt;suppress-keymap&lt;/code&gt; 은 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="36f2fbb5685a5ae009ff2b89267c15f544b6a5af" translate="yes" xml:space="preserve">
          <source>This function changes the finalizer of the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;val&lt;/var&gt; to be &lt;var&gt;fin&lt;/var&gt;. If &lt;var&gt;fin&lt;/var&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, the &lt;code&gt;user-ptr&lt;/code&gt; object will have no finalizer.</source>
          <target state="translated">이 함수 는 &lt;var&gt;val&lt;/var&gt; 로 표현되는 &lt;code&gt;user-ptr&lt;/code&gt; 객체의 종료 자를 &lt;var&gt;fin&lt;/var&gt; 으로 변경 합니다. 경우 &lt;var&gt;fin&lt;/var&gt; A는 &lt;code&gt;NULL&lt;/code&gt; 포인터는 &lt;code&gt;user-ptr&lt;/code&gt; 객체는 더 파이널이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3823849d7c5498e0245942dc16f153ec79790970" translate="yes" xml:space="preserve">
          <source>This function changes the tabulated list entry at point, setting &lt;var&gt;col&lt;/var&gt; to &lt;var&gt;desc&lt;/var&gt;. &lt;var&gt;col&lt;/var&gt; is the column number to change, or the name of the column to change. &lt;var&gt;desc&lt;/var&gt; is the new column descriptor, which is inserted via &lt;code&gt;tabulated-list-print-col&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;col&lt;/var&gt; 을 &lt;var&gt;desc&lt;/var&gt; 로 설정하여 지점에서 표로 된 목록 항목을 변경합니다 . &lt;var&gt;col&lt;/var&gt; 은 변경할 열 번호 또는 변경할 열의 이름입니다. &lt;var&gt;desc&lt;/var&gt; 는 &lt;code&gt;tabulated-list-print-col&lt;/code&gt; 을 통해 삽입되는 새로운 열 설명자 입니다.</target>
        </trans-unit>
        <trans-unit id="e3d0a9295df703f0dbef307fa6311054894421f6" translate="yes" xml:space="preserve">
          <source>This function checks the file contents against the defined file formats, and converts the file contents if appropriate and also calls the functions in the list &lt;code&gt;after-insert-file-functions&lt;/code&gt;. See &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;. Normally, one of the functions in the &lt;code&gt;after-insert-file-functions&lt;/code&gt; list determines the coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;) used for decoding the file&amp;rsquo;s contents, including end-of-line conversion. However, if the file contains null bytes, it is by default visited without any code conversions. See &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;inhibit-nul-byte-detection&lt;/a&gt;.</source>
          <target state="translated">이 함수는 정의 된 파일 형식에 대해 파일 내용을 확인하고 적절한 경우 파일 내용을 변환하고 &lt;code&gt;after-insert-file-functions&lt;/code&gt; 목록의 함수를 호출합니다 . &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;형식 변환을&lt;/a&gt; 참조하십시오 . 일반적으로 기능 한 &lt;code&gt;after-insert-file-functions&lt;/code&gt; 목록은 코딩 시스템 (참조 판정 &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;코딩 시스템&lt;/a&gt; 끝 (end-of-line) 변환을 포함하여, 파일의 내용을 디코딩하는데 사용되는 참조). 그러나 파일에 널 바이트가 포함 된 경우 기본적으로 코드 변환없이 방문됩니다. &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;inhibit-nul-byte-detection을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88a96aa2697363d8add3552b2953ddbfffec23cb" translate="yes" xml:space="preserve">
          <source>This function checks the validity of &lt;var&gt;coding-system&lt;/var&gt;. If that is valid, it returns &lt;var&gt;coding-system&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the function return &lt;code&gt;nil&lt;/code&gt;. For any other values, it signals an error whose &lt;code&gt;error-symbol&lt;/code&gt; is &lt;code&gt;coding-system-error&lt;/code&gt; (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;signal&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;coding-system&lt;/var&gt; 의 유효성을 확인합니다 . 이것이 유효하면 &lt;var&gt;coding-system&lt;/var&gt; 을 반환 합니다 . 경우 &lt;var&gt;coding-system&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , 함수 반환 &lt;code&gt;nil&lt;/code&gt; . 다른 값의 경우 오류 &lt;code&gt;error-symbol&lt;/code&gt; 가 &lt;code&gt;coding-system-error&lt;/code&gt; 오류 인 오류를 신호합니다 ( &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;signal&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ff9f73184b14d3789b4d1e6f4b8bbd07f7c61143" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;feature&lt;/var&gt; is present in the current Emacs session (using &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt;; see below). The argument &lt;var&gt;feature&lt;/var&gt; must be a symbol.</source>
          <target state="translated">이 기능을하는지 여부를 검사 &lt;var&gt;feature&lt;/var&gt; 현재 이멕스 세션에 존재하는 (사용 &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; , 아래 참조). 인수 &lt;var&gt;feature&lt;/var&gt; 은 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="4be69b13bdf8b6481ccb7195ec5a30f577c71667" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;sequence1&lt;/var&gt; and &lt;var&gt;sequence2&lt;/var&gt; contain the same elements, regardless of the order. If the optional argument &lt;var&gt;testfn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence1&lt;/var&gt; 에 관계없이 sequence1 과 &lt;var&gt;sequence2&lt;/var&gt; 가 동일한 요소를 포함 하는지 확인합니다 . 선택적 인수 &lt;var&gt;testfn&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 기본 &lt;code&gt;equal&lt;/code&gt; 대신 사용할 두 인수의 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="4b5e3ee47fca60568dceedb79a0f4165f46dfa07" translate="yes" xml:space="preserve">
          <source>This function checks whether a window &lt;var&gt;window&lt;/var&gt; occupies the frame relative coordinates &lt;var&gt;coordinates&lt;/var&gt;, and if so, which part of the window that is. &lt;var&gt;window&lt;/var&gt; should be a live window.</source>
          <target state="translated">이 함수는 윈도우 &lt;var&gt;window&lt;/var&gt; 가 프레임 상대 좌표 &lt;var&gt;coordinates&lt;/var&gt; 차지 하는지 여부를 확인 하고, 그렇다면 윈도우의 어느 부분 인지 확인합니다 . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0093114ce08d1c87de3c8bea211bd8e8e8bafd88" translate="yes" xml:space="preserve">
          <source>This function checks whether coding systems in the list &lt;code&gt;coding-system-list&lt;/code&gt; can encode all the characters in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If all of the coding systems in the list can encode the specified text, the function returns &lt;code&gt;nil&lt;/code&gt;. If some coding systems cannot encode some of the characters, the value is an alist, each element of which has the form &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt;, meaning that &lt;var&gt;coding-system1&lt;/var&gt; cannot encode characters at buffer positions &lt;var&gt;pos1&lt;/var&gt;, &lt;var&gt;pos2&lt;/var&gt;, &lt;small&gt;...&lt;/small&gt;.</source>
          <target state="translated">이 함수는 목록 &lt;code&gt;coding-system-list&lt;/code&gt; 의 코딩 시스템 이 &lt;var&gt;start&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이의 영역에있는 모든 문자를 인코딩 할 수 있는지 여부를 확인합니다 . 목록의 모든 코딩 시스템이 지정된 텍스트를 인코딩 할 수있는 경우 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 일부 코딩 시스템에서 일부 문자를 인코딩 할 수없는 경우 값은 alist이며 각 요소의 형식은 &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt; 이며 이는 &lt;var&gt;coding-system1&lt;/var&gt; 이 버퍼 위치 &lt;var&gt;pos1&lt;/var&gt; , &lt;var&gt;pos2&lt;/var&gt; , &lt;small&gt;.. .&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="48bbd385883b860f0fe733726275084cca5e4045" translate="yes" xml:space="preserve">
          <source>This function chooses a plausible coding system for decoding the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. This text should be a byte sequence, i.e., unibyte text or multibyte text with only</source>
          <target state="translated">이 기능은 텍스트를 &lt;var&gt;start&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 디코딩하기위한 그럴듯한 코딩 시스템을 선택합니다 . 이 텍스트는 바이트 시퀀스 여야합니다. 즉, 유니 바이트 텍스트 또는</target>
        </trans-unit>
        <trans-unit id="e92dd05af078b7c6619479f99c6915105c13d04f" translate="yes" xml:space="preserve">
          <source>This function clears all tags from the padding area in the current buffer.</source>
          <target state="translated">이 함수는 현재 버퍼의 패딩 영역에서 모든 태그를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="e08d77ace26a1da1b72f8e270ea9c88fc75a7c86" translate="yes" xml:space="preserve">
          <source>This function clears an image cache, removing all the images stored in it. If &lt;var&gt;filter&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it clears the cache for the selected frame. If &lt;var&gt;filter&lt;/var&gt; is a frame, it clears the cache for that frame. If &lt;var&gt;filter&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, all image caches are cleared. Otherwise, &lt;var&gt;filter&lt;/var&gt; is taken to be a file name, and all images associated with that file name are removed from all image caches.</source>
          <target state="translated">이 기능은 이미지 캐시를 지우고 저장된 모든 이미지를 제거합니다. 경우 &lt;var&gt;filter&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임에 대해 캐시를 클리어한다. 경우 &lt;var&gt;filter&lt;/var&gt; 프레임은, 그 프레임의 캐시를 지 웁니다. 경우 &lt;var&gt;filter&lt;/var&gt; 입니다 &lt;code&gt;t&lt;/code&gt; , 모든 이미지 캐시가 삭제됩니다. 그렇지 않으면 &lt;var&gt;filter&lt;/var&gt; 가 파일 이름으로 간주되고 해당 파일 이름과 관련된 모든 이미지가 모든 이미지 캐시에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="0bb1988a1dba8506377b988fafd01a77998e3685" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays all visible frames.</source>
          <target state="translated">이 기능은 보이는 모든 프레임을 지우고 다시 표시합니다.</target>
        </trans-unit>
        <trans-unit id="00c956077128ca0993717eb23d4d9f5416719f6b" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it redraws the selected frame.</source>
          <target state="translated">이 기능은 프레임 &lt;var&gt;frame&lt;/var&gt; 지우고 다시 표시 합니다 . 경우 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임을 다시 그려.</target>
        </trans-unit>
        <trans-unit id="bee3cb583a7c59bb273547bda2f8cbc5a79c8229" translate="yes" xml:space="preserve">
          <source>This function clears out the record of the last modification time of the file being visited by the current buffer. As a result, the next attempt to save this buffer will not complain of a discrepancy in file modification times.</source>
          <target state="translated">이 함수는 현재 버퍼가 방문한 파일의 마지막 수정 시간 기록을 지 웁니다. 결과적으로이 버퍼를 저장하려는 다음 시도는 파일 수정 시간의 불일치에 대해 불평하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3060a69479b02be0e975b9582949ab1ac97d85c1" translate="yes" xml:space="preserve">
          <source>This function clears the pending nonlocal exit conditions and data from &lt;var&gt;env&lt;/var&gt;. After calling it, the module</source>
          <target state="translated">이 함수는 대기중인 비 로컬 종료 조건과 &lt;var&gt;env&lt;/var&gt; 데이터를 지 웁니다 . 호출 후 모듈</target>
        </trans-unit>
        <trans-unit id="8f7e5427bf38884b44e2e51ab2819c587f2b4009" translate="yes" xml:space="preserve">
          <source>This function clears the table of defined colors for a text terminal.</source>
          <target state="translated">이 기능은 텍스트 터미널에 대해 정의 된 색상 테이블을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="5c32281f9d21be19333ed3ff71d217ace70d4a19" translate="yes" xml:space="preserve">
          <source>This function closes a notification with identifier &lt;var&gt;id&lt;/var&gt;. &lt;var&gt;bus&lt;/var&gt; can be a string denoting a D-Bus connection, the default is &lt;code&gt;:session&lt;/code&gt;.</source>
          <target state="translated">이 함수는 식별자 &lt;var&gt;id&lt;/var&gt; 로 알림을 닫습니다 . &lt;var&gt;bus&lt;/var&gt; 는 D-Bus 연결을 나타내는 문자열 일 수 있으며 기본값은 &lt;code&gt;:session&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9a745e063d28aa86713ef30ab5d0016b27d3e4da" translate="yes" xml:space="preserve">
          <source>This function closes the connection to display &lt;var&gt;display&lt;/var&gt;. Before you can do this, you must first delete all the frames that were open on that display (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;).</source>
          <target state="translated">이 기능은 디스플레이 &lt;var&gt;display&lt;/var&gt; 대한 연결을 닫습니다 . 이렇게하려면 먼저 해당 디스플레이에서 열려 있던 모든 프레임을 삭제해야합니다 ( &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;프레임 삭제&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3e0b6d0d98bf0d18b76cb8c96931febc86eb0283" translate="yes" xml:space="preserve">
          <source>This function collects applicable connection-local variables associated with &lt;var&gt;criteria&lt;/var&gt; in &lt;code&gt;connection-local-variables-alist&lt;/code&gt;, without applying them. Example:</source>
          <target state="translated">이 기능과 관련된 적용 가능한 연결 로컬 변수 수집 &lt;var&gt;criteria&lt;/var&gt; 에 &lt;code&gt;connection-local-variables-alist&lt;/code&gt; 을 적용하지 않고,. 예:</target>
        </trans-unit>
        <trans-unit id="a5f2cbb8b2da3d3c58cb447a71d60b0917ba7a4b" translate="yes" xml:space="preserve">
          <source>This function compares a specified part of &lt;var&gt;string1&lt;/var&gt; with a specified part of &lt;var&gt;string2&lt;/var&gt;. The specified part of &lt;var&gt;string1&lt;/var&gt; runs from index &lt;var&gt;start1&lt;/var&gt; (inclusive) up to index &lt;var&gt;end1&lt;/var&gt; (exclusive); &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;start1&lt;/var&gt; means the start of the string, while &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;end1&lt;/var&gt; means the length of the string. Likewise, the specified part of &lt;var&gt;string2&lt;/var&gt; runs from index &lt;var&gt;start2&lt;/var&gt; up to index &lt;var&gt;end2&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;string1&lt;/var&gt; 의 지정된 부분을 &lt;var&gt;string2&lt;/var&gt; 의 지정된 부분과 비교합니다 . &lt;var&gt;string1&lt;/var&gt; 의 지정된 부분은 인덱스 &lt;var&gt;start1&lt;/var&gt; (포함)에서 인덱스 &lt;var&gt;end1&lt;/var&gt; (제외) 까지 실행됩니다 . &lt;code&gt;nil&lt;/code&gt; 에 대한 &lt;var&gt;start1&lt;/var&gt; 수단 문자열의 시작, 잠시 &lt;code&gt;nil&lt;/code&gt; 에 대한 &lt;var&gt;end1&lt;/var&gt; 수단 문자열의 길이. 마찬가지로, 지정된 부분 &lt;var&gt;string2&lt;/var&gt; 인덱스에서 실행이 &lt;var&gt;start2&lt;/var&gt; 인덱스까지 &lt;var&gt;end2&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a9aef49fc24cfd15fd641dc26e422b78872aaf3e" translate="yes" xml:space="preserve">
          <source>This function compares strings lexicographically, except it treats sequences of numerical characters as if they comprised a base-ten number, and then compares the numbers. So &amp;lsquo;</source>
          <target state="translated">이 함수는 문자열을 사전 식으로 비교합니다. 단, 숫자 문자 시퀀스를 10 진수로 구성된 것처럼 처리 한 다음 숫자를 비교합니다. 그래서 '</target>
        </trans-unit>
        <trans-unit id="9034e147ae2fe7be500b89dffbb10f53c4559803" translate="yes" xml:space="preserve">
          <source>This function compares two strings a character at a time. It scans both the strings at the same time to find the first pair of corresponding characters that do not match. If the lesser character of these two is the character from &lt;var&gt;string1&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is less, and this function returns &lt;code&gt;t&lt;/code&gt;. If the lesser character is the one from &lt;var&gt;string2&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is greater, and this function returns &lt;code&gt;nil&lt;/code&gt;. If the two strings match entirely, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 한 번에 한 문자 씩 두 문자열을 비교합니다. 두 문자열을 동시에 스캔하여 일치하지 않는 첫 번째 해당 문자 쌍을 찾습니다. 이 두 문자 중 더 작은 문자가 &lt;var&gt;string1&lt;/var&gt; 의 문자 이면 &lt;var&gt;string1&lt;/var&gt; 은 더 적고이 함수는 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 . 작은 문자가 &lt;var&gt;string2&lt;/var&gt; 의 문자 이면 &lt;var&gt;string1&lt;/var&gt; 이 더 크고이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 두 문자열이 완전히 일치하면 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8c2f9fdbef44b9334df7df941797433fe0a9f929" translate="yes" xml:space="preserve">
          <source>This function compares two window configurations as regards the structure of windows, but ignores the values of point and the saved scrolling positions&amp;mdash;it can return &lt;code&gt;t&lt;/code&gt; even if those aspects differ.</source>
          <target state="translated">이 함수는 창의 구조와 관련하여 두 개의 창 구성을 비교하지만 포인트 값과 저장된 스크롤 위치를 무시합니다 . 이러한 측면이 다르더라도 &lt;code&gt;t&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ec97384413e26b14db3042cb150998e759231c6" translate="yes" xml:space="preserve">
          <source>This function compares what &lt;var&gt;buffer&lt;/var&gt; (by default, the current-buffer) has recorded for the modification time of its visited file against the actual modification time of the file as recorded by the operating system. The two should be the same unless some other process has written the file since Emacs visited or saved it.</source>
          <target state="translated">이 함수는 방문한 파일의 수정 시간에 대해 기록 된 &lt;var&gt;buffer&lt;/var&gt; (기본적으로 현재 버퍼)를 운영 체제에서 기록한 파일의 실제 수정 시간과 비교합니다. Emacs가 파일을 방문하거나 저장 한 이후 다른 프로세스가 파일을 작성하지 않는 한 두 파일은 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="c83d94c6b4aed094cff30137ca18eeb913c13ac9" translate="yes" xml:space="preserve">
          <source>This function compiles a file of Lisp code named &lt;var&gt;filename&lt;/var&gt; into a file of byte-code. The output file&amp;rsquo;s name is made by changing the &amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 이라는 Lisp 코드 파일을 바이트 코드 파일로 컴파일합니다 . 출력 파일의 이름은 '</target>
        </trans-unit>
        <trans-unit id="9ff26f5c877255414616a98408a7c2311408a1aa" translate="yes" xml:space="preserve">
          <source>This function completely replaces the text property list for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">이 함수 는 문자열 또는 버퍼 &lt;var&gt;object&lt;/var&gt; 에서 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 텍스트에 대한 텍스트 속성 목록을 완전히 대체 합니다 . 경우 &lt;var&gt;object&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 그것은 현재의 버퍼 기본값.</target>
        </trans-unit>
        <trans-unit id="96e5dd8c088a37e664134a9b6d1058179d2a41ee" translate="yes" xml:space="preserve">
          <source>This function completes the file name &lt;var&gt;filename&lt;/var&gt; in directory &lt;var&gt;directory&lt;/var&gt;. It returns the longest prefix common to all file names in directory &lt;var&gt;directory&lt;/var&gt; that start with &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then it ignores possible completions that don&amp;rsquo;t satisfy &lt;var&gt;predicate&lt;/var&gt;, after calling that function with one argument, the expanded absolute file name.</source>
          <target state="translated">이 함수 는 directory &lt;var&gt;directory&lt;/var&gt; 에서 &lt;var&gt;filename&lt;/var&gt; 파일 이름을 완성합니다 . &lt;var&gt;filename&lt;/var&gt; 으로 시작하는 디렉토리 &lt;var&gt;directory&lt;/var&gt; 모든 파일 이름에 공통되는 가장 긴 접두사를 반환합니다 . 경우에 &lt;var&gt;predicate&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 그것은 만족하지 않는 달성 가능한 무시 &lt;var&gt;predicate&lt;/var&gt; 한 인수 확장 절대 파일명과 해당 함수를 호출 한 후,.</target>
        </trans-unit>
        <trans-unit id="89697381d81d2b533d98ac549ea2fac24cad4a9b" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents as far as possible.</source>
          <target state="translated">이 기능은 가능한 한 미니 버퍼 내용을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="f65e2c60aa526439854986136550b909686ed2ea" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents by at most a single word. Even if the minibuffer contents have only one completion, &lt;code&gt;minibuffer-complete-word&lt;/code&gt; does not add any characters beyond the first character that is not a word constituent. See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">이 함수는 최대 한 단어로 미니 버퍼 내용을 완성합니다. 미니 버퍼 내용에 하나의 완성 만 있어도 &lt;code&gt;minibuffer-complete-word&lt;/code&gt; 는 단어 구성 요소가 아닌 첫 번째 문자 이후에 어떤 문자도 추가하지 않습니다. &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;구문 테이블을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e5f99a4ea128fe021c030d5d486d31c0bc6723d4" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents, and exits if confirmation is not required, i.e., if &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. If confirmation &lt;em&gt;is&lt;/em&gt; required, it is given by repeating this command immediately&amp;mdash;the command is programmed to work without confirmation when run twice in succession.</source>
          <target state="translated">이 함수는 미니 버퍼 내용을 완료하고 확인이 필요하지 않은 경우, 즉 &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 인 경우 종료 됩니다. 확인 &lt;em&gt;이&lt;/em&gt; 필요한 경우이 명령을 즉시 반복하여 제공됩니다. 명령은 연속으로 두 번 실행될 때 확인없이 작동하도록 프로그래밍되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2a58d63f1c49b5bc24866684235f7841db04eba" translate="yes" xml:space="preserve">
          <source>This function completes the text in the current buffer between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, using &lt;var&gt;collection&lt;/var&gt;. The argument &lt;var&gt;collection&lt;/var&gt; has the same meaning as in &lt;code&gt;try-completion&lt;/code&gt; (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;collection&lt;/var&gt; 을 사용하여 &lt;var&gt;start&lt;/var&gt; 위치 와 &lt;var&gt;end&lt;/var&gt; 위치 사이의 현재 버퍼에있는 텍스트를 완성합니다 . 인수 &lt;var&gt;collection&lt;/var&gt; 은 &lt;code&gt;try-completion&lt;/code&gt; 에서와 동일한 의미를 갖습니다 ( &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0d1a5a3778131495c3c5ca116a07f78182f8f709" translate="yes" xml:space="preserve">
          <source>This function computes and sets &lt;code&gt;header-line-format&lt;/code&gt; for the Tabulated List buffer (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;), and assigns a keymap to the header line to allow sorting entries by clicking on column headers.</source>
          <target state="translated">이 함수 는 표로 된 목록 버퍼에 대한 &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;헤더 행 &lt;/a&gt; &lt;code&gt;header-line-format&lt;/code&gt; 을 계산하고 설정하고 ( 헤더 행 참조 ), 열 헤더를 클릭하여 항목을 정렬 할 수 있도록 헤더 행에 키맵을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="78c2d01ec980279b7b58d31009ca74eb586b1822" translate="yes" xml:space="preserve">
          <source>This function computes the file name for a new backup file for &lt;var&gt;filename&lt;/var&gt;. It may also propose certain existing backup files for deletion. &lt;code&gt;find-backup-file-name&lt;/code&gt; returns a list whose &lt;small&gt;CAR&lt;/small&gt; is the name for the new backup file and whose &lt;small&gt;CDR&lt;/small&gt; is a list of backup files whose deletion is proposed. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means not to make a backup.</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 에 대한 새 백업 파일의 파일 이름을 계산합니다 . 또한 삭제를 위해 기존의 특정 백업 파일을 제안 할 수도 있습니다. &lt;code&gt;find-backup-file-name&lt;/code&gt; 은 &lt;small&gt;CAR&lt;/small&gt; 이 새 백업 파일의 이름이고 &lt;small&gt;CDR&lt;/small&gt; 이 삭제가 제안 된 백업 파일 목록 인 목록을 반환합니다 . 값은 &lt;code&gt;nil&lt;/code&gt; 일 수도 있습니다 . 이는 백업하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="15cfed84063ac5b06746e9180517a26ec66a11a3" translate="yes" xml:space="preserve">
          <source>This function concatenates &lt;var&gt;list-of-strings&lt;/var&gt; into a single string, quoting each string as necessary. It also sticks the &lt;var&gt;separator&lt;/var&gt; string between each pair of strings; if &lt;var&gt;separator&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;&quot; &quot;&lt;/code&gt;. The return value is the resulting string.</source>
          <target state="translated">이 함수는 문자열 &lt;var&gt;list-of-strings&lt;/var&gt; 단일 문자열로 연결 하여 필요에 따라 각 문자열을 인용합니다. 또한 각 문자열 쌍 사이에 &lt;var&gt;separator&lt;/var&gt; 문자열을 붙 입니다. 만약 &lt;var&gt;separator&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 디폴트로 &lt;code&gt;&quot; &quot;&lt;/code&gt; . 반환 값은 결과 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9fd9b3f2732fc488731684e8b7a04dcea87dd0c7" translate="yes" xml:space="preserve">
          <source>This function concatenates all its argument &lt;var&gt;bytes&lt;/var&gt; and makes the result a unibyte string.</source>
          <target state="translated">이 함수는 모든 인수 &lt;var&gt;bytes&lt;/var&gt; 연결 하고 결과를 유니 바이트 문자열로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0f609cc62af27e58ae79537191c5454848740175" translate="yes" xml:space="preserve">
          <source>This function configures a serial port connection. Arguments are specified as keyword/argument pairs. Attributes that are not given are re-initialized from the process&amp;rsquo;s current configuration (available via the function &lt;code&gt;process-contact&lt;/code&gt;), or set to reasonable default values. The following arguments are defined:</source>
          <target state="translated">이 기능은 직렬 포트 연결을 구성합니다. 인수는 키워드 / 인수 쌍으로 지정됩니다. 지정되지 않은 속성은 프로세스의 현재 구성 ( &lt;code&gt;process-contact&lt;/code&gt; 함수를 통해 사용 가능)에서 다시 초기화 되거나 적절한 기본값으로 설정됩니다. 다음 인수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ae1aa50ca602dad0456661afa9b0b54a5f48f045" translate="yes" xml:space="preserve">
          <source>This function considers only vertical scrolling. If &lt;var&gt;position&lt;/var&gt; is out of view only because &lt;var&gt;window&lt;/var&gt; has been scrolled horizontally, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt; anyway. See &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Horizontal Scrolling&lt;/a&gt;.</source>
          <target state="translated">이 기능은 수직 스크롤 만 고려합니다. 경우 &lt;var&gt;position&lt;/var&gt; 때문에 만보기를 벗어 &lt;var&gt;window&lt;/var&gt; 수평으로 스크롤되어, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 수익률 비 &lt;code&gt;nil&lt;/code&gt; 어쨌든. &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;수평 스크롤을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cde355012f0c4eafa46f2543db211450f70a05d3" translate="yes" xml:space="preserve">
          <source>This function constrains &lt;var&gt;new-pos&lt;/var&gt; to the field that &lt;var&gt;old-pos&lt;/var&gt; belongs to&amp;mdash;in other words, it returns the position closest to &lt;var&gt;new-pos&lt;/var&gt; that is in the same field as &lt;var&gt;old-pos&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;new-pos&lt;/var&gt; 를 &lt;var&gt;old-pos&lt;/var&gt; 가 속한 필드로 제한합니다. 즉, &lt;var&gt;old-pos&lt;/var&gt; 와 동일한 필드에있는 &lt;var&gt;new-pos&lt;/var&gt; 에 가장 가까운 위치를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c035e2921cfe0f74be7de8b7fe58236fd3e77fcf" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is not supplied (or is &lt;code&gt;nil&lt;/code&gt;), it returns a copy of the standard category table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a category table.</source>
          <target state="translated">이 함수는 &lt;var&gt;table&lt;/var&gt; 의 복사본을 생성 하고 반환합니다. &lt;var&gt;table&lt;/var&gt; 이 제공되지 않은 경우 (또는 &lt;code&gt;nil&lt;/code&gt; ) 표준 범주 테이블의 복사본을 반환합니다. 그렇지 않으면 &lt;var&gt;table&lt;/var&gt; 이 범주 테이블이 아닌 경우 오류가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f85e738f572dd42f45a76a6fb1310f9fd67cd0e" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it returns a copy of the standard syntax table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a syntax table.</source>
          <target state="translated">이 함수는 &lt;var&gt;table&lt;/var&gt; 의 복사본을 생성 하고 반환합니다. 경우 &lt;var&gt;table&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 그것은 표준 구문 테이블의 복사본을 반환합니다. 그렇지 않으면 &lt;var&gt;table&lt;/var&gt; 이 구문 테이블이 아닌 경우 오류가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="b4c244f7aa08244e0deec64e00a96009dfa82c42" translate="yes" xml:space="preserve">
          <source>This function constructs and returns a byte-code function object with &lt;var&gt;elements&lt;/var&gt; as its elements.</source>
          <target state="translated">이 함수 는 요소 를 &lt;var&gt;elements&lt;/var&gt; 로 사용 하여 바이트 코드 함수 객체를 생성하고 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="874c9d04892ed512e0cb9599abc452937e886429" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;filename&lt;/var&gt; to an absolute file name. If &lt;var&gt;directory&lt;/var&gt; is supplied, it is the default directory to start with if &lt;var&gt;filename&lt;/var&gt; is relative and does not start with &amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 을 절대 파일 이름으로 변환 합니다. 경우 &lt;var&gt;directory&lt;/var&gt; 공급되고,이 경우 시작하는 기본 디렉토리 &lt;var&gt;filename&lt;/var&gt; '상대적이며이와 함께 시작되지 않습니다</target>
        </trans-unit>
        <trans-unit id="c6f04cb2dcd8552a3a5f7e94e0e1f5fad1b2ccf9" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to lower case.</source>
          <target state="translated">이 함수는 문자 또는 문자열이어야하는 &lt;var&gt;string-or-char&lt;/var&gt; 를 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="0f989624fd0c758de426f10a05d50246e948f9a2" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to upper case.</source>
          <target state="translated">이 함수는 문자 또는 문자열이어야하는 &lt;var&gt;string-or-char&lt;/var&gt; 를 대문자 로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="08deea44cd6426f83ec6d17a664425ce999fa824" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; (or the current time, if &lt;var&gt;time&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;) to a string according to &lt;var&gt;format-string&lt;/var&gt;. The conversion uses the time zone rule &lt;var&gt;zone&lt;/var&gt;, which defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;format-string&lt;/var&gt; 에 따라 &lt;var&gt;time&lt;/var&gt; (또는 &lt;var&gt;time&lt;/var&gt; 이 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 현재 시간 )을 문자열 로 변환합니다 . 변환은 현재 시간대 규칙을 기본으로하는 시간대 규칙 &lt;var&gt;zone&lt;/var&gt; 을 사용합니다 . &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;시간대 규칙을&lt;/a&gt; 참조하십시오 . 인수 &lt;var&gt;format-string&lt;/var&gt; 에는 '</target>
        </trans-unit>
        <trans-unit id="af54ecd47221b1061345a45468c6a95ba1e4a90a" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; to a Lisp timestamp. It can act as the inverse of &lt;code&gt;decode-time&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;time&lt;/var&gt; 을 Lisp 타임 스탬프 로 변환 합니다 . &lt;code&gt;decode-time&lt;/code&gt; 의 역으로 ​​작동 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9556989e13e1c87dd87a2475ba3e7fcedc6ef511" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;window&lt;/var&gt; into an atomic window. The specified &lt;var&gt;window&lt;/var&gt; must be an internal window. All this function does is to set the &lt;code&gt;window-atom&lt;/code&gt; parameter of each descendant of &lt;var&gt;window&lt;/var&gt; to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 을 원자 창으로 변환 합니다. 지정된 &lt;var&gt;window&lt;/var&gt; 은 내부 창 이어야합니다. 이 함수가하는 일은 &lt;code&gt;window-atom&lt;/code&gt; 의 각 자손의 &lt;var&gt;window&lt;/var&gt; -atom 매개 변수 를 &lt;code&gt;t&lt;/code&gt; 로 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4394d3a4e8f2f4b04cb0e1e7a5b3b08994faeb8e" translate="yes" xml:space="preserve">
          <source>This function converts a byte of character data into a unibyte string. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="translated">이 함수는 문자 데이터의 바이트를 유니 바이트 문자열로 변환합니다. &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;표현 변환을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="e992f1f964d96bc49a9789e01d65667cbdb109b6" translate="yes" xml:space="preserve">
          <source>This function converts a list of modifier names and a basic event type to an event type which specifies all of them. The basic event type must be the last element of the list. For example,</source>
          <target state="translated">이 함수는 수정 자 이름 목록과 기본 이벤트 유형을 모두 지정하는 이벤트 유형으로 변환합니다. 기본 이벤트 유형은 목록의 마지막 요소 여야합니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="fa293dfea4e94d45e0f4b45c62d0d21f401f60f1" translate="yes" xml:space="preserve">
          <source>This function converts a string into a list. See &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;.</source>
          <target state="translated">이 함수는 문자열을 목록으로 변환합니다. &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;건물 목록을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba7cf90ea9020c057e351af979b4627a28943977" translate="yes" xml:space="preserve">
          <source>This function converts a string into a vector. See &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;.</source>
          <target state="translated">이 함수는 문자열을 벡터로 변환합니다. &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;벡터 함수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de39ac156148bc00d8eba5104462a121e553a0c8" translate="yes" xml:space="preserve">
          <source>This function converts a symbolic file mode specification in &lt;var&gt;modes&lt;/var&gt; into the equivalent integer. If the symbolic specification is based on an existing file, that file&amp;rsquo;s mode bits are taken from the optional argument &lt;var&gt;base-modes&lt;/var&gt;; if that argument is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 0, i.e., no access rights at all.</source>
          <target state="translated">이 기능의 상징적 인 파일 모드 사양 변환 &lt;var&gt;modes&lt;/var&gt; 에 해당하는 정수로합니다. 기호 사양이 기존 파일을 기반으로하는 경우 해당 파일의 모드 비트는 선택적 인수 &lt;var&gt;base-modes&lt;/var&gt; 에서 가져옵니다 . 해당 인수가 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본값은 0입니다. 즉, 액세스 권한이 전혀 없습니다.</target>
        </trans-unit>
        <trans-unit id="d030cf650429694dcbd23523e917ca3d9b38b644" translate="yes" xml:space="preserve">
          <source>This function converts a time value into a Lisp timestamp.</source>
          <target state="translated">이 함수는 시간 값을 Lisp 타임 스탬프로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b42ea5d4ccf2ef27bcafdca8857b96e0ec80b9ba" translate="yes" xml:space="preserve">
          <source>This function converts a time value into calendrical information. If you don&amp;rsquo;t specify &lt;var&gt;time&lt;/var&gt;, it decodes the current time, and similarly &lt;var&gt;zone&lt;/var&gt; defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The operating system limits the range of time and zone values.</source>
          <target state="translated">이 함수는 시간 값을 달력 정보로 변환합니다. &lt;var&gt;time&lt;/var&gt; 을 지정하지 않으면 현재 시간을 디코딩하고 마찬가지로 &lt;var&gt;zone&lt;/var&gt; 은 현재 시간대 규칙을 기본값으로 사용합니다. &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;시간대 규칙을&lt;/a&gt; 참조하십시오 . 운영 체제는 시간 및 구역 값의 범위를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="2f969c70e3311439ebe20fadc0eaec66bb09a12b" translate="yes" xml:space="preserve">
          <source>This function converts a vector or a list into a string. See &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;.</source>
          <target state="translated">이 함수는 벡터 또는 목록을 문자열로 변환합니다. &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;문자열 만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e6336c33752f31d6b7b5c1c515a347a8aa0a924" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 으로 정의 된 영역의 모든 문자 를 소문자 로 변환합니다 . 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a9a4398a0eb5df16a14bbdabef0a9c25aa4c8dca" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to upper case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 으로 정의 된 영역의 모든 문자를 대문자로 변환합니다 . 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e8e8fdf0444ef662f70cfc701373fe0e12fe9b20" translate="yes" xml:space="preserve">
          <source>This function converts its argument &lt;var&gt;seconds&lt;/var&gt; into a string of years, days, hours, etc., according to &lt;var&gt;format-string&lt;/var&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;format-string&lt;/var&gt; 에 따라 인수 &lt;var&gt;seconds&lt;/var&gt; 를 연도, 일, 시간 등의 문자열로 변환 합니다 . 인수 &lt;var&gt;format-string&lt;/var&gt; 에는 '</target>
        </trans-unit>
        <trans-unit id="86a9053d2989039c47d4dcf75a4f96fffa040ae3" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all lower case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 포인트 뒤 의 &lt;var&gt;count&lt;/var&gt; 단어를 모두 소문자 로 변환하여 포인트를 이동합니다. 경우 &lt;var&gt;count&lt;/var&gt; - 음, 그것은이 변환 &lt;var&gt;count&lt;/var&gt; 이전 단어 만 포인트를 이동하지 않습니다. 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cac8af14fb95a5540d55eb853b73fc1a4069ee83" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all upper case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 포인트 뒤 의 &lt;var&gt;count&lt;/var&gt; 단어를 모두 대문자 로 변환하여 포인트를 이동합니다. 경우 &lt;var&gt;count&lt;/var&gt; - 음, 그것은이 변환 &lt;var&gt;count&lt;/var&gt; 이전 단어 만 포인트를 이동하지 않습니다. 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="062f3332d58edfbeada8443df59348c0b2e03c21" translate="yes" xml:space="preserve">
          <source>This function converts the Lisp representation of a network address to a string.</source>
          <target state="translated">이 함수는 네트워크 주소의 Lisp 표현을 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="359414babccfce31742287145cb81207c3f0a60a" translate="yes" xml:space="preserve">
          <source>This function converts the category set &lt;var&gt;category-set&lt;/var&gt; into a string containing the characters that designate the categories that are members of the set.</source>
          <target state="translated">이 함수는 범주 집합 &lt;var&gt;category-set&lt;/var&gt; 을 집합의 구성원 인 범주를 지정하는 문자를 포함하는 문자열로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="222c0635402e22f63d2e19252b80a4006a515fdf" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns the length of the decoded text.</source>
          <target state="translated">이 함수는 기본 64 코드 에서 &lt;var&gt;beg&lt;/var&gt; 에서 &lt;var&gt;end&lt;/var&gt; 영역을 해당 디코딩 된 텍스트로 변환합니다. 디코딩 된 텍스트의 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c5d4159748c6f5ed11333f8afa2f8e02a7c10cee" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; into base 64 code. It returns the length of the encoded text. An error is signaled if a character in the region is multibyte, i.e., in a multibyte buffer the region must contain only characters from the charsets &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;eight-bit-control&lt;/code&gt; and &lt;code&gt;eight-bit-graphic&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;beg&lt;/var&gt; 에서 &lt;var&gt;end&lt;/var&gt; 까지 영역 을 base 64 코드로 변환합니다 . 인코딩 된 텍스트의 길이를 반환합니다. 영역의 문자가 멀티 바이트이면 오류가 발생합니다. 즉, 멀티 바이트 버퍼에서 영역은 문자 집합 &lt;code&gt;ascii&lt;/code&gt; , &lt;code&gt;eight-bit-control&lt;/code&gt; 및 &lt;code&gt;eight-bit-graphic&lt;/code&gt; 문자 만 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="27da589d75e12703d9b8345613fc7d8ec3e352e7" translate="yes" xml:space="preserve">
          <source>This function converts the sequence &lt;var&gt;sequence&lt;/var&gt; into a sequence of type &lt;var&gt;type&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; can be one of the following symbols: &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">이 함수는 시퀀스 &lt;var&gt;sequence&lt;/var&gt; 를 type &lt;var&gt;type&lt;/var&gt; 의 시퀀스 로 변환합니다 . &lt;var&gt;type&lt;/var&gt; 은 &lt;code&gt;vector&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; 또는 &lt;code&gt;list&lt;/code&gt; 기호 중 하나 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a450d2efa54e77616fbd5d26e99b08469e6ca74d" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns a unibyte string containing the decoded text.</source>
          <target state="translated">이 함수는 기본 64 코드 의 문자열 &lt;var&gt;string&lt;/var&gt; 을 해당 디코딩 된 텍스트로 변환합니다 . 디코딩 된 텍스트를 포함하는 유니 바이트 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02598df53b09eaff6e4270202cb83707188dc533" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; into base 64 code. It returns a string containing the encoded text. As for &lt;code&gt;base64-encode-region&lt;/code&gt;, an error is signaled if a character in the string is multibyte.</source>
          <target state="translated">이 함수는 문자열 &lt;var&gt;string&lt;/var&gt; 을 Base 64 코드로 변환합니다 . 인코딩 된 텍스트가 포함 된 문자열을 반환합니다. 에 관해서는 &lt;code&gt;base64-encode-region&lt;/code&gt; 문자열에서 문자가 멀티 바이트 인 경우, 오류가 신호됩니다.</target>
        </trans-unit>
        <trans-unit id="9b37cca380a96ff521cab51131ab757cfa6eae3e" translate="yes" xml:space="preserve">
          <source>This function converts the string or vector &lt;var&gt;key&lt;/var&gt; to a list of individual events, which you can put in &lt;code&gt;unread-command-events&lt;/code&gt;.</source>
          <target state="translated">이 함수는 문자열 또는 벡터 &lt;var&gt;key&lt;/var&gt; 를 &lt;code&gt;unread-command-events&lt;/code&gt; 에 넣을 수있는 개별 이벤트 목록으로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f001050e70298d6ec962a0626dbda0a35b830508" translate="yes" xml:space="preserve">
          <source>This function converts the text &lt;var&gt;keyseq-text&lt;/var&gt; (a string constant) into a key sequence (a string or vector constant). The contents of &lt;var&gt;keyseq-text&lt;/var&gt; should use the same syntax as in the buffer invoked by the</source>
          <target state="translated">이 함수는 텍스트 &lt;var&gt;keyseq-text&lt;/var&gt; (문자열 상수)를 키 시퀀스 (문자열 또는 벡터 상수)로 변환합니다. &lt;var&gt;keyseq-text&lt;/var&gt; 의 내용은 에서 호출 한 버퍼와 동일한 구문을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe2af2ee8e43bb67213200069f07caef5315b672" translate="yes" xml:space="preserve">
          <source>This function copies &lt;var&gt;string&lt;/var&gt; and searches it for matches for &lt;var&gt;regexp&lt;/var&gt;, and replaces them with &lt;var&gt;rep&lt;/var&gt;. It returns the modified copy. If &lt;var&gt;start&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search for matches starts at that index in &lt;var&gt;string&lt;/var&gt;, and the returned value does not include the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt;. To get the whole transformed string, concatenate the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; with the return value.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 복사 하고 &lt;var&gt;regexp&lt;/var&gt; 와 일치하는 항목을 검색 한 다음 &lt;var&gt;rep&lt;/var&gt; 으로 바꿉니다 . 수정 된 사본을 반환합니다. &lt;var&gt;start&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 일치 검색이 &lt;var&gt;string&lt;/var&gt; 의 해당 인덱스에서 시작되고 반환 된 값에는 &lt;var&gt;string&lt;/var&gt; 의 첫 &lt;var&gt;start&lt;/var&gt; 문자가 포함되지 않습니다 . 전체 변형 된 문자열을 얻으려면, 먼저 연결하여 &lt;var&gt;start&lt;/var&gt; 의 문자 &lt;var&gt;string&lt;/var&gt; 반환 값으로.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
