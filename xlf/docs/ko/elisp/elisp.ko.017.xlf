<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="51e5f325841e460853d8b05b54f5976696115725" translate="yes" xml:space="preserve">
          <source>This function copies file &lt;var&gt;filename&lt;/var&gt; to an ordinary non-magic file on the local machine, if it isn&amp;rsquo;t on the local machine already. Magic file names should handle the &lt;code&gt;file-local-copy&lt;/code&gt; operation if they refer to files on other machines. A magic file name that is used for other purposes than remote file access should not handle &lt;code&gt;file-local-copy&lt;/code&gt;; then this function will treat the file as local.</source>
          <target state="translated">이 함수는 파일 &lt;var&gt;filename&lt;/var&gt; 을 로컬 컴퓨터에 아직없는 경우 로컬 컴퓨터의 일반 비 마법 파일로 복사합니다 . 매직 파일 이름은 다른 시스템의 파일을 참조하는 경우 &lt;code&gt;file-local-copy&lt;/code&gt; 작업을 처리해야 합니다. 원격 파일 액세스 이외의 목적으로 사용되는 매직 파일 이름은 &lt;code&gt;file-local-copy&lt;/code&gt; 를 처리하지 않아야합니다 . 이 함수는 파일을 로컬로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="4d71eef7c1798851e7a2d2a53cf748479d7454c9" translate="yes" xml:space="preserve">
          <source>This function copies the sign of &lt;var&gt;x2&lt;/var&gt; to the value of &lt;var&gt;x1&lt;/var&gt;, and returns the result. &lt;var&gt;x1&lt;/var&gt; and &lt;var&gt;x2&lt;/var&gt; must be floating point.</source>
          <target state="translated">이 함수는 &lt;var&gt;x2&lt;/var&gt; 의 부호 를 &lt;var&gt;x1&lt;/var&gt; 의 값으로 복사 하고 결과를 반환합니다. &lt;var&gt;x1&lt;/var&gt; 및 &lt;var&gt;x2&lt;/var&gt; 는 부동 소수점이어야합니다.</target>
        </trans-unit>
        <trans-unit id="cdcd7718f4e0db41253c7648be016dfbe77d1427" translate="yes" xml:space="preserve">
          <source>This function creates a</source>
          <target state="translated">이 기능은</target>
        </trans-unit>
        <trans-unit id="37af52e12ffb883947a0241d5e5fc903cdf887df" translate="yes" xml:space="preserve">
          <source>This function creates a bidirectional pipe which can be attached to a child process. This is useful with the &lt;code&gt;:stderr&lt;/code&gt; keyword of &lt;code&gt;make-process&lt;/code&gt;. The function returns a process object.</source>
          <target state="translated">이 함수는 자식 프로세스에 연결할 수있는 양방향 파이프를 만듭니다. 이것은 &lt;code&gt;make-process&lt;/code&gt; 의 &lt;code&gt;:stderr&lt;/code&gt; 키워드 와 함께 유용 합니다 . 이 함수는 프로세스 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cc3af8ffb20d8eaafcaa12e0ec7566fc8b04eb7" translate="yes" xml:space="preserve">
          <source>This function creates a buffer-local binding in the current buffer for &lt;var&gt;variable&lt;/var&gt; (a symbol). Other buffers are not affected. The value returned is &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;variable&lt;/var&gt; (기호) 에 대한 현재 버퍼에 버퍼 로컬 바인딩을 생성합니다 . 다른 버퍼는 영향을받지 않습니다. 반환 된 값은 &lt;var&gt;variable&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7404d032182753fbb61946df90b9ddbd5442f67" translate="yes" xml:space="preserve">
          <source>This function creates a list of &lt;var&gt;length&lt;/var&gt; elements, in which each element is &lt;var&gt;object&lt;/var&gt;. Compare &lt;code&gt;make-list&lt;/code&gt; with &lt;code&gt;make-string&lt;/code&gt; (see &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;).</source>
          <target state="translated">이 함수 는 각 요소가 &lt;var&gt;object&lt;/var&gt; 인 &lt;var&gt;length&lt;/var&gt; 요소 목록을 만듭니다 . &lt;code&gt;make-list&lt;/code&gt; 를 &lt;code&gt;make-string&lt;/code&gt; 과 비교 합니다 ( 문자열 &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;만들기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="cadb41c353181fcd60943def05424f6e383348e1" translate="yes" xml:space="preserve">
          <source>This function creates a list of the possible completions of the current minibuffer contents. It works by calling &lt;code&gt;all-completions&lt;/code&gt; using the value of the variable &lt;code&gt;minibuffer-completion-table&lt;/code&gt; as the &lt;var&gt;collection&lt;/var&gt; argument, and the value of &lt;code&gt;minibuffer-completion-predicate&lt;/code&gt; as the &lt;var&gt;predicate&lt;/var&gt; argument. The list of completions is displayed as text in a buffer named</source>
          <target state="translated">이 함수는 현재 미니 버퍼 내용의 가능한 완성 목록을 생성합니다. 그것은 호출하여 작동 &lt;code&gt;all-completions&lt;/code&gt; 변수의 값을 사용하여 &lt;code&gt;minibuffer-completion-table&lt;/code&gt; 은 AS &lt;var&gt;collection&lt;/var&gt; 인수를, 그리고 가치 &lt;code&gt;minibuffer-completion-predicate&lt;/code&gt; 는 AS &lt;var&gt;predicate&lt;/var&gt; 인수를. 완성 목록은 다음 이름의 버퍼에 텍스트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="65f946d0e00117b79a9e660edc9fec28d1d3ab61" translate="yes" xml:space="preserve">
          <source>This function creates a list with &lt;var&gt;objects&lt;/var&gt; as its elements. The resulting list is always &lt;code&gt;nil&lt;/code&gt;-terminated. If no &lt;var&gt;objects&lt;/var&gt; are given, the empty list is returned.</source>
          <target state="translated">이 함수는 &lt;var&gt;objects&lt;/var&gt; 를 요소로 포함 하는 목록을 만듭니다 . 결과 목록은 항상 &lt;code&gt;nil&lt;/code&gt; 로 종료됩니다. &lt;var&gt;objects&lt;/var&gt; 가 제공 되지 않으면 빈 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="416ae54fad353d6bf85c7f9a263a40780f8df4f6" translate="yes" xml:space="preserve">
          <source>This function creates a listing of all current key bindings, and displays it in a buffer named</source>
          <target state="translated">이 함수는 모든 현재 키 바인딩 목록을 생성하고 이름이 지정된 버퍼에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="2409b78bcbd59a3bc4cf9535cfe30274683154ed" translate="yes" xml:space="preserve">
          <source>This function creates a network connection or server and returns the process object that represents it. The arguments &lt;var&gt;args&lt;/var&gt; are a list of keyword/argument pairs. Omitting a keyword is always equivalent to specifying it with value &lt;code&gt;nil&lt;/code&gt;, except for &lt;code&gt;:coding&lt;/code&gt;, &lt;code&gt;:filter-multibyte&lt;/code&gt;, and &lt;code&gt;:reuseaddr&lt;/code&gt;. Here are the meaningful keywords (those corresponding to network options are listed in the following section):</source>
          <target state="translated">이 함수는 네트워크 연결 또는 서버를 만들고이를 나타내는 프로세스 개체를 반환합니다. 인수 &lt;var&gt;args&lt;/var&gt; 는 키워드 / 인수 쌍의 목록입니다. 키워드를 생략하는 것은 &lt;code&gt;:coding&lt;/code&gt; , &lt;code&gt;:filter-multibyte&lt;/code&gt; 및 &lt;code&gt;:reuseaddr&lt;/code&gt; 을 제외하고 항상 &lt;code&gt;nil&lt;/code&gt; 값으로 지정하는 것과 동일합니다 . 다음은 의미있는 키워드입니다 (네트워크 옵션에 해당하는 키워드는 다음 섹션에 나열 됨).</target>
        </trans-unit>
        <trans-unit id="482fbe7c2279d7b9dc41fe6cc6f0cd063ffbfb94" translate="yes" xml:space="preserve">
          <source>This function creates a new frame, and displays the buffer in that frame&amp;rsquo;s window. It actually performs the frame creation by calling the function specified in &lt;code&gt;pop-up-frame-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;). If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; entry, the associated value is added to the newly created frame&amp;rsquo;s parameters.</source>
          <target state="translated">이 함수는 새 프레임을 만들고 해당 프레임의 창에 버퍼를 표시합니다. 실제로 &lt;code&gt;pop-up-frame-function&lt;/code&gt; 함수에 지정된 함수를 호출하여 프레임 생성을 수행합니다 ( &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;창 옵션 선택&lt;/a&gt; 참조 ). 경우 &lt;var&gt;alist&lt;/var&gt; 는 포함 &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; 항목을 관련 값은 새로 생성 된 프레임의 매개 변수에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b52e15e1556c244566f6db3e6c32a0879f170e5c" translate="yes" xml:space="preserve">
          <source>This function creates a new hash table according to the specified arguments. The arguments should consist of alternating keywords (particular symbols recognized specially) and values corresponding to them.</source>
          <target state="translated">이 함수는 지정된 인수에 따라 새 해시 테이블을 만듭니다. 인수는 교대 키워드 (특별히 인식되는 특정 기호)와 이에 상응하는 값으로 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c80202af3d2806e8c78c020b4842a0574f1e38f4" translate="yes" xml:space="preserve">
          <source>This function creates a new live window next to the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. That window is split, and reduced in size. The space is taken up by the new window, which is returned.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 옆에 새 라이브 창을 만듭니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값. 그 창은 분할되고 크기가 줄어 듭니다. 공간은 반환되는 새 창에서 차지합니다.</target>
        </trans-unit>
        <trans-unit id="4d43f3e4ac040f6f2c7182f8c98940643d51ec8f" translate="yes" xml:space="preserve">
          <source>This function creates a new sequence whose elements are the elements of &lt;var&gt;sequence&lt;/var&gt;, but in reverse order. The original argument &lt;var&gt;sequence&lt;/var&gt; is &lt;em&gt;not&lt;/em&gt; altered. Note that char-tables cannot be reversed.</source>
          <target state="translated">이 함수는 해당 요소의 요소 새로운 시퀀스 작성 &lt;var&gt;sequence&lt;/var&gt; 이지만 역순이다. 원래 인수 &lt;var&gt;sequence&lt;/var&gt; 는 변경 &lt;em&gt;되지&lt;/em&gt; 않습니다. char-tables는 되돌릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a99a5d28a1e9a727cd5fb40c95efa766b1b2aa25" translate="yes" xml:space="preserve">
          <source>This function creates a new syntax table. If &lt;var&gt;table&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the parent of the new syntax table is &lt;var&gt;table&lt;/var&gt;; otherwise, the parent is the standard syntax table.</source>
          <target state="translated">이 함수는 새 구문 테이블을 생성합니다. &lt;var&gt;table&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 새 구문 테이블의 부모는 &lt;var&gt;table&lt;/var&gt; 입니다 . 그렇지 않으면 부모는 표준 구문 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="4b98eeba141c882ae23d506b9f00793c85f94936" translate="yes" xml:space="preserve">
          <source>This function creates a process and a buffer. Arguments are specified as keyword/argument pairs. Here&amp;rsquo;s the list of the meaningful keywords, with the first two (&lt;var&gt;port&lt;/var&gt; and &lt;var&gt;speed&lt;/var&gt;) being mandatory:</source>
          <target state="translated">이 함수는 프로세스와 버퍼를 생성합니다. 인수는 키워드 / 인수 쌍으로 지정됩니다. 다음은 의미있는 키워드 목록이며 처음 두 개 ( &lt;var&gt;port&lt;/var&gt; 및 &lt;var&gt;speed&lt;/var&gt; )는 필수입니다.</target>
        </trans-unit>
        <trans-unit id="b994a272bc988cf1ef9636454ae9c2120b871697" translate="yes" xml:space="preserve">
          <source>This function creates a suitably named buffer for visiting &lt;var&gt;filename&lt;/var&gt;, and returns it. It uses &lt;var&gt;filename&lt;/var&gt; (sans directory) as the name if that name is free; otherwise, it appends a string such as &amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 방문을 위해 적절하게 이름이 지정된 버퍼를 만들고 이를 반환합니다. 그것은 사용하는 &lt;var&gt;filename&lt;/var&gt; 그 이름에 여유 공간이 있는지 이름으로 (산세 디렉토리); 그렇지 않으면 '와 같은 문자열을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="db055f24aacbb1ec4d973336ec030eeac91b694e" translate="yes" xml:space="preserve">
          <source>This function creates a temporary file and returns its name. Emacs creates the temporary file&amp;rsquo;s name by adding to &lt;var&gt;prefix&lt;/var&gt; some random characters that are different in each Emacs job. The result is guaranteed to be a newly created file, containing &lt;var&gt;text&lt;/var&gt; if that&amp;rsquo;s given as a string and empty otherwise. On MS-DOS, this function can truncate &lt;var&gt;prefix&lt;/var&gt; to fit into the 8+3 file-name limits. If &lt;var&gt;prefix&lt;/var&gt; is a relative file name, it is expanded against &lt;code&gt;temporary-file-directory&lt;/code&gt;.</source>
          <target state="translated">이 함수는 임시 파일을 만들고 그 이름을 반환합니다. Emacs 는 각 Emacs 작업에서 다른 임의의 문자 를 &lt;var&gt;prefix&lt;/var&gt; 에 추가하여 임시 파일의 이름을 만듭니다 . 결과는 문자열로 주어지면 &lt;var&gt;text&lt;/var&gt; 포함 하고 그렇지 않으면 비어 있는 새로 생성 된 파일이 됩니다. MS-DOS에서이 함수는 8 + 3 파일 이름 제한에 맞게 &lt;var&gt;prefix&lt;/var&gt; 를 자를 수 있습니다 . 경우 &lt;var&gt;prefix&lt;/var&gt; 상대 파일 이름입니다, 그것은에 대해 확장 된 &lt;code&gt;temporary-file-directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e9bdcc97c643032a97159919aa9b762f29eeebc" translate="yes" xml:space="preserve">
          <source>This function creates an Emacs string from C text string pointed by &lt;var&gt;str&lt;/var&gt; whose length in bytes, not including the terminating null byte, is &lt;var&gt;strlen&lt;/var&gt;. The original string in &lt;var&gt;str&lt;/var&gt; can be either an</source>
          <target state="translated">이 함수 는 종료 널 바이트를 포함하지 않는 바이트 길이가 &lt;var&gt;strlen&lt;/var&gt; 인 &lt;var&gt;str&lt;/var&gt; 이 가리키는 C 텍스트 문자열에서 Emacs 문자열을 생성합니다 . &lt;var&gt;str&lt;/var&gt; 의 원래 문자열 은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5959cc4559bb22d8ee089c861eb242b28919d891" translate="yes" xml:space="preserve">
          <source>This function creates and returns a &lt;code&gt;user-ptr&lt;/code&gt; object which wraps the C pointer &lt;var&gt;ptr&lt;/var&gt;. The finalizer function &lt;var&gt;fin&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer (meaning no finalizer), or it can be a function of the following signature:</source>
          <target state="translated">이 함수 는 C 포인터 &lt;var&gt;ptr&lt;/var&gt; 을 감싸는 &lt;code&gt;user-ptr&lt;/code&gt; 객체를 생성하고 반환합니다 . 종료 자 함수 &lt;var&gt;fin&lt;/var&gt; 은 &lt;code&gt;NULL&lt;/code&gt; 포인터 (종료 자 없음을 의미)이거나 다음 시그니처의 함수일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59745ad21a235e214aeb13cca0a7040c616077db" translate="yes" xml:space="preserve">
          <source>This function creates and returns a bool-vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">이 함수는 요소가 인수 인 부울 벡터를 생성하고 반환 &lt;var&gt;objects&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="449e9da9c82272e6b197c43a797ea855c453021b" translate="yes" xml:space="preserve">
          <source>This function creates and returns a copy of &lt;var&gt;table&lt;/var&gt;. Only the table itself is copied&amp;mdash;the keys and values are shared.</source>
          <target state="translated">이 함수는 &lt;var&gt;table&lt;/var&gt; 의 복사본을 만들고 반환 합니다 . 테이블 자체 만 복사되며 키와 값이 공유됩니다.</target>
        </trans-unit>
        <trans-unit id="1bb5f1c75cc6d716b9fc08892c8dea9f3bd4da73" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame on &lt;var&gt;display&lt;/var&gt;, taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt;. &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</source>
          <target state="translated">이 함수 는 alist &lt;var&gt;parameters&lt;/var&gt; 변수에서 다른 프레임 매개 변수를 가져 와서 &lt;var&gt;display&lt;/var&gt; 새 프레임을 만들고 반환합니다 . &lt;var&gt;display&lt;/var&gt; 는 X 디스플레이 (문자열)의 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6b68440be7129d7734a8df8e6d73959684ac61ee" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame on &lt;var&gt;monitor&lt;/var&gt; located on &lt;var&gt;display&lt;/var&gt;, taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt;. &lt;var&gt;monitor&lt;/var&gt; should be the name of the physical monitor, the same string as returned by the function &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; in the attribute &lt;code&gt;name&lt;/code&gt;. &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</source>
          <target state="translated">이 함수 는 alist &lt;var&gt;parameters&lt;/var&gt; 변수에서 다른 프레임 매개 변수를 가져 와서 &lt;var&gt;display&lt;/var&gt; 에있는 &lt;var&gt;monitor&lt;/var&gt; 에 새 프레임을 만들고 반환합니다 . &lt;var&gt;monitor&lt;/var&gt; 는 속성 &lt;code&gt;name&lt;/code&gt; &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; 함수에 의해 반환 된 것과 동일한 문자열 인 물리적 모니터의 이름이어야합니다 . &lt;var&gt;display&lt;/var&gt; 는 X 디스플레이 (문자열)의 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="bd23f063ac47b8196895f6fdefc217f968295d6f" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame, displaying the current buffer.</source>
          <target state="translated">이 함수는 현재 버퍼를 표시하는 새 프레임을 만들고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b8dd074487e687f8b06ba9d87275959b741345c5" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new full keymap. That keymap contains a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) with slots for all characters without modifiers. The new keymap initially binds all these characters to &lt;code&gt;nil&lt;/code&gt;, and does not bind any other kind of event. The argument &lt;var&gt;prompt&lt;/var&gt; specifies a prompt string, as in &lt;code&gt;make-sparse-keymap&lt;/code&gt;.</source>
          <target state="translated">이 함수는 새로운 전체 키맵을 생성하고 반환합니다. 해당 키맵에는 수정자가없는 모든 문자에 대한 슬롯 이있는 문자 테이블 ( &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt; 참조)이 포함되어 있습니다 . 새 키맵은 처음에 이러한 모든 문자를 &lt;code&gt;nil&lt;/code&gt; 에 바인딩하고 다른 종류의 이벤트를 바인딩하지 않습니다. 인수 &lt;var&gt;prompt&lt;/var&gt; 는 &lt;code&gt;make-sparse-keymap&lt;/code&gt; 에서와 같이 프롬프트 문자열을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="72f732f4400aef025baab876624e05b34a1eb403" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new indirect buffer that shares the current buffer&amp;rsquo;s base buffer and copies the rest of the current buffer&amp;rsquo;s attributes. (If the current buffer is not indirect, it is used as the base buffer.)</source>
          <target state="translated">이 함수는 현재 버퍼의 기본 버퍼를 공유하고 현재 버퍼의 나머지 속성을 복사하는 새 간접 버퍼를 만들고 반환합니다. (현재 버퍼가 간접이 아닌 경우 기본 버퍼로 사용됩니다.)</target>
        </trans-unit>
        <trans-unit id="42708ab7c96a05d7b6b218bfbbde837d2da2f7ff" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new sparse keymap with no entries. (A sparse keymap is the kind of keymap you usually want.) The new keymap does not contain a char-table, unlike &lt;code&gt;make-keymap&lt;/code&gt;, and does not bind any events.</source>
          <target state="translated">이 함수는 항목이없는 새 희소 키맵을 만들고 반환합니다. (희소 키맵은 일반적으로 원하는 유형의 키맵입니다.) 새 키맵은 &lt;code&gt;make-keymap&lt;/code&gt; 과 달리 char-table을 포함 하지 않으며 이벤트를 바인딩하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f0076ff846cc3a7e8e51b7b27c0b9c24a7c3563" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new, empty abbrev table&amp;mdash;an obarray containing no symbols. It is a vector filled with zeros. &lt;var&gt;props&lt;/var&gt; is a property list that is applied to the new table (see &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;).</source>
          <target state="translated">이 함수는 기호가없는 오바 레이 인 비어있는 새 약어 테이블을 만들고 반환합니다. 0으로 채워진 벡터입니다. &lt;var&gt;props&lt;/var&gt; 는 새 테이블에 적용되는 속성 목록입니다 ( &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1df5c7389edfe93dda9f7dacb55305b12c2e78d3" translate="yes" xml:space="preserve">
          <source>This function creates and returns a progress reporter object, which you will use as an argument for the other functions listed below. The idea is to precompute as much data as possible to make progress reporting very fast.</source>
          <target state="translated">이 함수는 아래 나열된 다른 함수에 대한 인수로 사용할 진행률보고 개체를 만들고 반환합니다. 아이디어는 진행률보고를 매우 빠르게 만들기 위해 가능한 한 많은 데이터를 미리 계산하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="44bde2354361088b7baee014dbddde380ffdace6" translate="yes" xml:space="preserve">
          <source>This function creates and returns a record whose type is &lt;var&gt;type&lt;/var&gt; and remaining slots are the rest of the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">이 함수는 유형이 &lt;var&gt;type&lt;/var&gt; 이고 나머지 슬롯이 나머지 인수 인 &lt;var&gt;objects&lt;/var&gt; 인 레코드를 생성하고 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c164be87f7b86348c909c873c4b54a87a9c318d9" translate="yes" xml:space="preserve">
          <source>This function creates and returns a transaction queue communicating with &lt;var&gt;process&lt;/var&gt;. The argument &lt;var&gt;process&lt;/var&gt; should be a subprocess capable of sending and receiving streams of bytes. It may be a child process, or it may be a TCP connection to a server, possibly on another machine.</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 와 통신하는 트랜잭션 대기열을 만들고 반환합니다 . 인수 &lt;var&gt;process&lt;/var&gt; 는 바이트 스트림을 보내고받을 수있는 하위 프로세스 여야합니다. 하위 프로세스 일 수도 있고 다른 시스템의 서버에 대한 TCP 연결 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f39207dde0842d8665011cceaacad52846dee27" translate="yes" xml:space="preserve">
          <source>This function creates and returns a vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">이 함수는 요소가 인수 인 벡터를 생성하고 반환 &lt;var&gt;objects&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="dd712963faf3dbecad84651e45747d02a561e877" translate="yes" xml:space="preserve">
          <source>This function creates and returns an image descriptor which uses the data in &lt;var&gt;file-or-data&lt;/var&gt;. &lt;var&gt;file-or-data&lt;/var&gt; can be a file name or a string containing the image data; &lt;var&gt;data-p&lt;/var&gt; should be &lt;code&gt;nil&lt;/code&gt; for the former case, non-&lt;code&gt;nil&lt;/code&gt; for the latter case.</source>
          <target state="translated">이 함수는 &lt;var&gt;file-or-data&lt;/var&gt; 의 데이터를 사용하는 이미지 설명자를 생성하고 반환합니다 . &lt;var&gt;file-or-data&lt;/var&gt; 는 파일 이름 또는 이미지 데이터를 포함하는 문자열 일 수 있습니다. &lt;var&gt;data-p&lt;/var&gt; 는 전자의 경우 &lt;code&gt;nil&lt;/code&gt; , 후자의 경우 nil 이 &lt;code&gt;nil&lt;/code&gt; 어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9858d9377c82e05742bfd43c4f8df0f4077feca7" translate="yes" xml:space="preserve">
          <source>This function creates and returns an overlay that belongs to &lt;var&gt;buffer&lt;/var&gt; and ranges from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. Both &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; must specify buffer positions; they may be integers or markers. If &lt;var&gt;buffer&lt;/var&gt; is omitted, the overlay is created in the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer&lt;/var&gt; 속하는 오버레이를 생성하고 반환하며 &lt;var&gt;start&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 범위입니다 . &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 모두 버퍼 위치를 지정해야합니다. 정수 또는 마커 일 수 있습니다. 경우 &lt;var&gt;buffer&lt;/var&gt; 생략 오버레이가 현재 버퍼에 생성된다.</target>
        </trans-unit>
        <trans-unit id="8d40bb5f729f0ec136ded556de86c46dff5946e2" translate="yes" xml:space="preserve">
          <source>This function decodes a character that is assigned a &lt;var&gt;code-point&lt;/var&gt; in &lt;var&gt;charset&lt;/var&gt;, to the corresponding Emacs character, and returns it. If &lt;var&gt;charset&lt;/var&gt; doesn&amp;rsquo;t contain a character of that code point, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수 는 &lt;var&gt;charset&lt;/var&gt; 의 &lt;var&gt;code-point&lt;/var&gt; 가 할당 된 문자를 해당 Emacs 문자로 디코딩 하고 반환합니다. 경우 &lt;var&gt;charset&lt;/var&gt; 그 코드 포인트의 문자를 포함하지 않는 값은 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="538821c2ec3b053d4531ee8be389062c0ba1c1ad" translate="yes" xml:space="preserve">
          <source>This function decodes the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; as if it were being read from file &lt;var&gt;filename&lt;/var&gt; using &lt;code&gt;insert-file-contents&lt;/code&gt; using the rest of the arguments provided.</source>
          <target state="translated">이 함수 는 제공된 나머지 인수를 사용 하여 &lt;code&gt;insert-file-contents&lt;/code&gt; 를 사용 하여 파일 &lt;var&gt;filename&lt;/var&gt; 에서 읽는 것처럼 텍스트를 from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="22e6d9e456b19a94f642cdfd34b0dd0f4faeda6c" translate="yes" xml:space="preserve">
          <source>This function decodes the text in &lt;var&gt;string&lt;/var&gt; according to &lt;var&gt;coding-system&lt;/var&gt;. It returns a new string containing the decoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the decoding operation is trivial. To make explicit decoding useful, the contents of &lt;var&gt;string&lt;/var&gt; ought to be a unibyte string with a sequence of byte values, but a multibyte string is also acceptable (assuming it contains 8-bit bytes in their multibyte form).</source>
          <target state="translated">이 함수 는 &lt;var&gt;coding-system&lt;/var&gt; 에 따라 &lt;var&gt;string&lt;/var&gt; 의 텍스트를 디코딩합니다 . &lt;var&gt;nocopy&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우를 제외하고 디코딩 된 텍스트를 포함하는 새 문자열을 반환 &lt;var&gt;string&lt;/var&gt; .이 경우 디코딩 작업이 사소한 경우 함수가 문자열 자체를 반환 할 수 있습니다 . 명시 적 디코딩을 유용하게 사용하려면 &lt;var&gt;string&lt;/var&gt; 의 내용이 일련의 바이트 값이있는 유니 바이트 문자열이어야하지만 멀티 바이트 문자열도 허용됩니다 (멀티 바이트 형식에 8 비트 바이트가 포함되어 있다고 가정).</target>
        </trans-unit>
        <trans-unit id="5e83fee11d671bf11c3a87c1c0178b36066c1cdd" translate="yes" xml:space="preserve">
          <source>This function decompresses the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, using built-in zlib decompression. The region should contain data that were compressed with gzip or zlib. On success, the function replaces the contents of the region with the decompressed data. If &lt;var&gt;allow-partial&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, then on failure, the function leaves the region unchanged and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns the number of bytes that were not decompressed and replaces the region text by whatever data was successfully decompressed. This function can be called only in unibyte buffers.</source>
          <target state="translated">이 함수는 기본 제공 zlib 압축 해제를 사용하여 &lt;var&gt;start&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이의 영역을 압축 해제합니다. 영역에는 gzip 또는 zlib로 압축 된 데이터가 포함되어야합니다. 성공하면 함수는 영역의 내용을 압축 해제 된 데이터로 바꿉니다. 경우 &lt;var&gt;allow-partial&lt;/var&gt; 것이다 &lt;code&gt;nil&lt;/code&gt; 후, 실패 생략 기능 영역 변경되지 되돌 &lt;code&gt;nil&lt;/code&gt; 을 . 그렇지 않으면 압축 해제되지 않은 바이트 수를 반환하고 성공적으로 압축 해제 된 데이터로 영역 텍스트를 바꿉니다. 이 함수는 유니 바이트 버퍼에서만 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="682d948e60a50841dfdf077715c174577e9b77df" translate="yes" xml:space="preserve">
          <source>This function defines &lt;var&gt;tabname&lt;/var&gt; (a symbol) as an abbrev table name, i.e., as a variable whose value is an abbrev table. It defines abbrevs in the table according to &lt;var&gt;definitions&lt;/var&gt;, a list of elements of the form &lt;code&gt;(&lt;var&gt;abbrevname&lt;/var&gt; &lt;var&gt;expansion&lt;/var&gt;
[&lt;var&gt;hook&lt;/var&gt;] [&lt;var&gt;props&lt;/var&gt;...])&lt;/code&gt;. These elements are passed as arguments to &lt;code&gt;define-abbrev&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;tabname&lt;/var&gt; (기호)을 약어 테이블 이름, 즉 값이 약어 테이블 인 변수로 정의합니다. 그것은에 따른 테이블 abbrevs 정의 &lt;var&gt;definitions&lt;/var&gt; 되는 형태의 요소의 목록 &lt;code&gt;(&lt;var&gt;abbrevname&lt;/var&gt; &lt;var&gt;expansion&lt;/var&gt; [&lt;var&gt;hook&lt;/var&gt;] [&lt;var&gt;props&lt;/var&gt;...])&lt;/code&gt; . 이러한 요소는 &lt;code&gt;define-abbrev&lt;/code&gt; 의 인수로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8be0eaa29365b707bb70a17a0d18f0da96be246" translate="yes" xml:space="preserve">
          <source>This function defines a local menu bar item named &lt;var&gt;name&lt;/var&gt; to run Imenu.</source>
          <target state="translated">이 함수는 Imenu를 실행할 &lt;var&gt;name&lt;/var&gt; 이라는 로컬 메뉴 모음 항목을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="8da443b3ec364a54e2db62282432b68dbf49350e" translate="yes" xml:space="preserve">
          <source>This function defines a new category, with name &lt;var&gt;char&lt;/var&gt; and documentation &lt;var&gt;docstring&lt;/var&gt;, for the category table &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이 함수는 범주 테이블 &lt;var&gt;table&lt;/var&gt; 에 대해 이름이 &lt;var&gt;char&lt;/var&gt; 및 문서 &lt;var&gt;docstring&lt;/var&gt; 인 새 범주를 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="7ff5c0ef6eb02f7bce89525055ee8dd5aa03ef07" translate="yes" xml:space="preserve">
          <source>This function defines a new fontset according to the specification string &lt;var&gt;fontset-spec&lt;/var&gt;. The string should have this format:</source>
          <target state="translated">이 함수는 사양 문자열 &lt;var&gt;fontset-spec&lt;/var&gt; 에 따라 새 글꼴 세트를 정의합니다 . 문자열은 다음 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9c1e9a6ef9bd8c074dbe00860a2a41554c575090" translate="yes" xml:space="preserve">
          <source>This function defines a new hash table test, named &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;name&lt;/var&gt; 이라는 새 해시 테이블 테스트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="39212533675a840db9d62668367e2fda931a1093" translate="yes" xml:space="preserve">
          <source>This function defines a package. &lt;var&gt;name&lt;/var&gt; is the package name, a string. &lt;var&gt;version&lt;/var&gt; is the version, as a string of a form that can be understood by the function &lt;code&gt;version-to-list&lt;/code&gt;. &lt;var&gt;docstring&lt;/var&gt; is the brief description.</source>
          <target state="translated">이 함수는 패키지를 정의합니다. &lt;var&gt;name&lt;/var&gt; 은 패키지 이름, 문자열입니다. &lt;var&gt;version&lt;/var&gt; 은 &lt;code&gt;version-to-list&lt;/code&gt; 함수에서 이해할 수있는 형식의 문자열 인 버전 입니다. &lt;var&gt;docstring&lt;/var&gt; 은 간단한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="06963c9c5d701c102ec9b7953ff482621977e302" translate="yes" xml:space="preserve">
          <source>This function defines a set of variable settings for the connection &lt;var&gt;profile&lt;/var&gt;, which is a symbol. You can later assign the connection profile to one or more remote connections, and Emacs will apply those variable settings to all process buffers for those connections. The list in &lt;var&gt;variables&lt;/var&gt; is an alist of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;. Example:</source>
          <target state="translated">이 함수는 기호 인 연결 &lt;var&gt;profile&lt;/var&gt; 대한 변수 설정 집합을 정의합니다 . 나중에 연결 프로필을 하나 이상의 원격 연결에 할당 할 수 있으며 Emacs는 해당 연결에 대한 모든 프로세스 버퍼에 해당 변수 설정을 적용합니다. &lt;var&gt;variables&lt;/var&gt; 목록은 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 형식 의 목록입니다 . 예:</target>
        </trans-unit>
        <trans-unit id="9cf7c1c189dc1e1eeefde0ce2bbaea1a5f64ea87" translate="yes" xml:space="preserve">
          <source>This function defines a set of variable settings for the named &lt;var&gt;class&lt;/var&gt;, which is a symbol. You can later assign the class to one or more directories, and Emacs will apply those variable settings to all files in those directories. The list in &lt;var&gt;variables&lt;/var&gt; can be of one of the two forms: &lt;code&gt;(&lt;var&gt;major-mode&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;directory&lt;/var&gt; . &lt;var&gt;list&lt;/var&gt;)&lt;/code&gt;. With the first form, if the file&amp;rsquo;s buffer turns on a mode that is derived from &lt;var&gt;major-mode&lt;/var&gt;, then all the variables in the associated &lt;var&gt;alist&lt;/var&gt; are applied; &lt;var&gt;alist&lt;/var&gt; should be of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;. A special value &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;major-mode&lt;/var&gt; means the settings are applicable to any mode. In &lt;var&gt;alist&lt;/var&gt;, you can use a special &lt;var&gt;name&lt;/var&gt;: &lt;code&gt;subdirs&lt;/code&gt;. If the associated value is &lt;code&gt;nil&lt;/code&gt;, the alist is only applied to files in the relevant directory, not to those in any subdirectories.</source>
          <target state="translated">이 함수는 심볼 인 명명 된 &lt;var&gt;class&lt;/var&gt; 에 대한 변수 설정 집합을 정의합니다 . 나중에 클래스를 하나 이상의 디렉토리에 할당 할 수 있으며 Emacs는 해당 디렉토리의 모든 파일에 해당 변수 설정을 적용합니다. &lt;var&gt;variables&lt;/var&gt; 의 목록은 &lt;code&gt;(&lt;var&gt;major-mode&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; 또는 &lt;code&gt;(&lt;var&gt;directory&lt;/var&gt; . &lt;var&gt;list&lt;/var&gt;)&lt;/code&gt; 의 두 가지 형식 중 하나 일 수 있습니다 . 첫 번째 형식에서 파일의 버퍼가 &lt;var&gt;major-mode&lt;/var&gt; 에서 파생 된 모드를 켜면 연관된 &lt;var&gt;alist&lt;/var&gt; 의 모든 변수 가 적용됩니다. &lt;var&gt;alist&lt;/var&gt; 은 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; . &lt;var&gt;major-mode&lt;/var&gt; 대한특수 값 &lt;code&gt;nil&lt;/code&gt; 은 설정이 모든 모드에 적용 가능함을 의미합니다. 에서 &lt;var&gt;alist&lt;/var&gt; , 당신은 특별한 사용할 수 있습니다 &lt;var&gt;name&lt;/var&gt; : &lt;code&gt;subdirs&lt;/code&gt; . 연관된 값이 &lt;code&gt;nil&lt;/code&gt; 이면 alist는 하위 디렉토리의 파일이 아닌 관련 디렉토리의 파일에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="faec04c194731266469903b852c6341ea36345c6" translate="yes" xml:space="preserve">
          <source>This function defines an abbrev named &lt;var&gt;name&lt;/var&gt;, in &lt;var&gt;abbrev-table&lt;/var&gt;, to expand to &lt;var&gt;expansion&lt;/var&gt; and call &lt;var&gt;hook&lt;/var&gt;, with properties &lt;var&gt;props&lt;/var&gt; (see &lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt;). The return value is &lt;var&gt;name&lt;/var&gt;. The &lt;code&gt;:system&lt;/code&gt; property in &lt;var&gt;props&lt;/var&gt; is treated specially here: if it has the value &lt;code&gt;force&lt;/code&gt;, then it will overwrite an existing definition even for a non-system abbrev of the same name.</source>
          <target state="translated">이 함수는 속성 &lt;var&gt;props&lt;/var&gt; 를 사용하여 &lt;var&gt;expansion&lt;/var&gt; 및 호출 &lt;var&gt;hook&lt;/var&gt; 으로 확장하기 위해 &lt;var&gt;abbrev-table&lt;/var&gt; 에서 &lt;var&gt;name&lt;/var&gt; 이라는 약어를 정의합니다 ( &lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt; 참조 ). 반환 값은 &lt;var&gt;name&lt;/var&gt; 입니다. &lt;var&gt;props&lt;/var&gt; 의 &lt;code&gt;:system&lt;/code&gt; 속성은 여기에서 특별히 처리됩니다. &lt;code&gt;force&lt;/code&gt; 값 이 있으면 동일한 이름의 시스템 약어가 아닌 경우에도 기존 정의를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="b64ce113e54cf1ca7b1a7a040f03e44f54061eee" translate="yes" xml:space="preserve">
          <source>This function defines the function (or macro) named &lt;var&gt;function&lt;/var&gt; so as to load automatically from &lt;var&gt;filename&lt;/var&gt;. The string &lt;var&gt;filename&lt;/var&gt; specifies the file to load to get the real definition of &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">이 함수라는 함수 (또는 매크로) 정의 &lt;var&gt;function&lt;/var&gt; 로부터 자동으로로드하도록 &lt;var&gt;filename&lt;/var&gt; . 문자열 &lt;var&gt;filename&lt;/var&gt; 은 &lt;var&gt;function&lt;/var&gt; 의 실제 정의를 가져 오기 위해로드 할 파일을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="d7839509e681231a82355725be2c1f90eb16c520" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;bitmap&lt;/var&gt; as a new fringe bitmap, or replaces an existing bitmap with that name.</source>
          <target state="translated">이 함수는 심볼 &lt;var&gt;bitmap&lt;/var&gt; 을 새 프린지 비트 맵 으로 정의 하거나 기존 비트 맵을 해당 이름으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="ba650ae4421a05ceff8ae8ab0d4e26a17faf9f78" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;name&lt;/var&gt; as a function, with definition &lt;var&gt;definition&lt;/var&gt; (which can be any valid Lisp function). Its return value is &lt;em&gt;undefined&lt;/em&gt;.</source>
          <target state="translated">이 함수는 정의 &lt;var&gt;definition&lt;/var&gt; (유효한 Lisp 함수일 수 있음) 와 함께 기호 &lt;var&gt;name&lt;/var&gt; 을 함수로 정의 합니다 . 반환 값은 &lt;em&gt;정의되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="241af73e43bbbcc9ae37914bf9768b12235dbcde" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;new-alias&lt;/var&gt; as a variable alias for symbol &lt;var&gt;base-variable&lt;/var&gt;. This means that retrieving the value of &lt;var&gt;new-alias&lt;/var&gt; returns the value of &lt;var&gt;base-variable&lt;/var&gt;, and changing the value of &lt;var&gt;new-alias&lt;/var&gt; changes the value of &lt;var&gt;base-variable&lt;/var&gt;. The two aliased variable names always share the same value and the same bindings.</source>
          <target state="translated">이 함수는 심볼 &lt;var&gt;new-alias&lt;/var&gt; alias를 심볼 &lt;var&gt;base-variable&lt;/var&gt; 에 대한 변수 별칭으로 정의합니다 . 값이 있는지 검색 수단 &lt;var&gt;new-alias&lt;/var&gt; 의 반환 값 &lt;var&gt;base-variable&lt;/var&gt; , 그리고 값 변경 &lt;var&gt;new-alias&lt;/var&gt; 값 변화 &lt;var&gt;base-variable&lt;/var&gt; . 별칭이 지정된 두 변수 이름은 항상 동일한 값과 동일한 바인딩을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="867f06138cc23b947830a31d334a9f8a4863a2cc" translate="yes" xml:space="preserve">
          <source>This function delays the initialization of &lt;var&gt;symbol&lt;/var&gt; to the next Emacs start. You normally use this function by specifying it as the &lt;code&gt;:initialize&lt;/code&gt; property of a customizable variable. (The argument &lt;var&gt;value&lt;/var&gt; is unused, and is provided only for compatibility with the form Custom expects.)</source>
          <target state="translated">이 함수 는 다음 Emacs 시작 으로 &lt;var&gt;symbol&lt;/var&gt; 의 초기화를 지연시킵니다 . 일반적으로이 함수를 사용자 정의 가능한 변수 의 &lt;code&gt;:initialize&lt;/code&gt; 속성 으로 지정하여 사용 합니다. (인수 &lt;var&gt;value&lt;/var&gt; 은 사용되지 않으며 Custom이 기대하는 형식과의 호환성을 위해서만 제공됩니다.)</target>
        </trans-unit>
        <trans-unit id="b7c68a096f47a2935f90baf033e208a99aee57df" translate="yes" xml:space="preserve">
          <source>This function deletes &lt;var&gt;overlay&lt;/var&gt;. The overlay continues to exist as a Lisp object, and its property list is unchanged, but it ceases to be attached to the buffer it belonged to, and ceases to have any effect on display.</source>
          <target state="translated">이 기능은 &lt;var&gt;overlay&lt;/var&gt; 삭제 합니다. 오버레이는 Lisp 객체로 계속 존재하며 해당 속성 목록은 변경되지 않지만 속한 버퍼에 더 이상 연결되지 않고 디스플레이에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4aa48bc253fff0c2b56e64bed71cf2fb2c06cde1" translate="yes" xml:space="preserve">
          <source>This function deletes &lt;var&gt;symbol&lt;/var&gt; from the obarray &lt;var&gt;obarray&lt;/var&gt;. If &lt;code&gt;symbol&lt;/code&gt; is not actually in the obarray, &lt;code&gt;unintern&lt;/code&gt; does nothing. If &lt;var&gt;obarray&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the current obarray is used.</source>
          <target state="translated">이 함수 는 obarray &lt;var&gt;obarray&lt;/var&gt; 에서 &lt;var&gt;symbol&lt;/var&gt; 을 삭제 합니다. 경우 &lt;code&gt;symbol&lt;/code&gt; obarray 실제로 아니라, &lt;code&gt;unintern&lt;/code&gt; 는 아무것도하지 않습니다. 경우 &lt;var&gt;obarray&lt;/var&gt; 가 있다 &lt;code&gt;nil&lt;/code&gt; , 현재 obarray가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3a986330f1b1a59991f2bfe835ef34608c545971" translate="yes" xml:space="preserve">
          <source>This function deletes a process, killing it with a &lt;code&gt;SIGKILL&lt;/code&gt; signal if the process was running a program. The argument may be a process, the name of a process, a buffer, or the name of a buffer. (A buffer or buffer-name stands for the process that &lt;code&gt;get-buffer-process&lt;/code&gt; returns.) Calling &lt;code&gt;delete-process&lt;/code&gt; on a running process terminates it, updates the process status, and runs the sentinel immediately. If the process has already terminated, calling &lt;code&gt;delete-process&lt;/code&gt; has no effect on its status, or on the running of its sentinel (which will happen sooner or later).</source>
          <target state="translated">이 함수는 프로세스를 삭제하고 프로세스 가 프로그램을 실행 중이면 &lt;code&gt;SIGKILL&lt;/code&gt; 신호 로 종료 합니다. 인수는 프로세스, 프로세스 이름, 버퍼 또는 버퍼 이름 일 수 있습니다. (buffer 또는 buffer-name은 &lt;code&gt;get-buffer-process&lt;/code&gt; 가 반환 하는 프로세스를 나타냅니다 .) 실행중인 프로세스에서 &lt;code&gt;delete-process&lt;/code&gt; 를 호출 하면 프로세스가 종료되고 프로세스 상태가 업데이트되고 센티넬이 즉시 실행됩니다. 프로세스가 이미 종료 된 경우 &lt;code&gt;delete-process&lt;/code&gt; 를 호출해도 상태 나 센티널 실행 (조만간 발생)에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2eded1311b490a6b75dac56d658cb61752456359" translate="yes" xml:space="preserve">
          <source>This function deletes all frames on &lt;var&gt;terminal&lt;/var&gt; and frees the resources used by it. It runs the abnormal hook &lt;code&gt;delete-terminal-functions&lt;/code&gt;, passing &lt;var&gt;terminal&lt;/var&gt; as the argument to each function.</source>
          <target state="translated">이 기능은 &lt;var&gt;terminal&lt;/var&gt; 모든 프레임을 삭제하고 사용 된 리소스를 해제합니다. 비정상적인 후크 &lt;code&gt;delete-terminal-functions&lt;/code&gt; 를 실행하여 &lt;var&gt;terminal&lt;/var&gt; 을 각 함수의 인수로 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="a25141ce20c1fc18086d2295f1fe79e74e5b6ba5" translate="yes" xml:space="preserve">
          <source>This function deletes all spaces and tabs around point. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 포인트 주변의 모든 공백과 탭을 삭제합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b22952b5cd905759352be377eb159eda8b9cd4d8" translate="yes" xml:space="preserve">
          <source>This function deletes all windows showing &lt;var&gt;buffer-or-name&lt;/var&gt;, by calling &lt;code&gt;delete-window&lt;/code&gt; on those windows. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of a buffer; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If there are no windows showing the specified buffer, this function does nothing. If the specified buffer is a minibuffer, an error is signaled.</source>
          <target state="translated">이 함수 는 해당 창에서 &lt;code&gt;delete-window&lt;/code&gt; 를 호출하여 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 표시하는 모든 창을 삭제합니다 . &lt;var&gt;buffer-or-name&lt;/var&gt; 은 버퍼 또는 버퍼의 이름 이어야합니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본값은 현재 버퍼입니다. 지정된 버퍼를 보여주는 창이 없으면이 함수는 아무 작업도 수행하지 않습니다. 지정된 버퍼가 미니 버퍼이면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c773fe6b85da4b8a00ead383daa3374cbaa03c2c" translate="yes" xml:space="preserve">
          <source>This function deletes blank lines surrounding point. If point is on a blank line with one or more blank lines before or after it, then all but one of them are deleted. If point is on an isolated blank line, then it is deleted. If point is on a nonblank line, the command deletes all blank lines immediately following it.</source>
          <target state="translated">이 기능은 포인트 주변의 빈 줄을 삭제합니다. 포인트가 앞뒤에 하나 이상의 빈 줄이있는 빈 줄에 있으면 그중 하나를 제외하고 모두 삭제됩니다. 점이 분리 된 빈 줄에 있으면 삭제됩니다. 포인트가 공백이 아닌 줄에있는 경우 명령은 바로 뒤의 모든 빈 줄을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="0c6de7e4c574d8678210e2591d235f5186a413b0" translate="yes" xml:space="preserve">
          <source>This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;key&lt;/var&gt;, much as if you used &lt;code&gt;delq&lt;/code&gt; to delete each such element one by one. It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;. For correct results, use the return value of &lt;code&gt;assq-delete-all&lt;/code&gt; rather than looking at the saved value of &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">에서이 기능을 삭제 &lt;var&gt;alist&lt;/var&gt; 는 모두 그 요소 &lt;small&gt;CAR는&lt;/small&gt; 이다 &lt;code&gt;eq&lt;/code&gt; 에 &lt;var&gt;key&lt;/var&gt; 당신이 사용하는 많은 것처럼, &lt;code&gt;delq&lt;/code&gt; 을 하나 이러한 각 요소를 삭제합니다. 그것은 단축 alist를 반환하고, 자주의 원래리스트 구조 변경 &lt;var&gt;alist&lt;/var&gt; 를 . 올바른 결과를 얻으려면 &lt;var&gt;alist&lt;/var&gt; 의 저장된 값을 보는 대신 &lt;code&gt;assq-delete-all&lt;/code&gt; 반환 값을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6a1f28ce3b286fe40eade16534850cf2cf7af7a" translate="yes" xml:space="preserve">
          <source>This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CDR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt;. It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;. &lt;code&gt;rassq-delete-all&lt;/code&gt; is like &lt;code&gt;assq-delete-all&lt;/code&gt; except that it compares the &lt;small&gt;CDR&lt;/small&gt; of each &lt;var&gt;alist&lt;/var&gt; association instead of the &lt;small&gt;CAR&lt;/small&gt;.</source>
          <target state="translated">이 함수로부터 삭제 &lt;var&gt;alist&lt;/var&gt; 인 모든 요소 &lt;small&gt;CDR이&lt;/small&gt; 있다 &lt;code&gt;eq&lt;/code&gt; 에 &lt;var&gt;value&lt;/var&gt; . 그것은 단축 alist를 반환하고, 자주의 원래리스트 구조 변경 &lt;var&gt;alist&lt;/var&gt; 를 . &lt;code&gt;rassq-delete-all&lt;/code&gt; 은 &lt;small&gt;CAR&lt;/small&gt; 대신 각 &lt;var&gt;alist&lt;/var&gt; 연관 의 &lt;small&gt;CDR&lt;/small&gt; 을 비교한다는 점을 제외하면 &lt;code&gt;assq-delete-all&lt;/code&gt; 과 같습니다 .&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e44dae3ab7df97403d687733d2cb6d3d1b389c5c" translate="yes" xml:space="preserve">
          <source>This function deletes specified text properties from the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">이 함수 는 문자열 또는 버퍼 &lt;var&gt;object&lt;/var&gt; 의 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이에있는 텍스트에서 지정된 텍스트 속성을 삭제합니다 . 경우 &lt;var&gt;object&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 그것은 현재의 버퍼 기본값.</target>
        </trans-unit>
        <trans-unit id="ebc7f2fa4888b95603a55882f0d1923392a23c68" translate="yes" xml:space="preserve">
          <source>This function deletes the buffer-local binding (if any) for &lt;var&gt;variable&lt;/var&gt; (a symbol) in the current buffer. As a result, the default binding of &lt;var&gt;variable&lt;/var&gt; becomes visible in this buffer. This typically results in a change in the value of &lt;var&gt;variable&lt;/var&gt;, since the default value is usually different from the buffer-local value just eliminated.</source>
          <target state="translated">이 함수 는 현재 버퍼의 &lt;var&gt;variable&lt;/var&gt; (기호)에 대한 버퍼 로컬 바인딩 (있는 경우)을 삭제합니다 . 결과적으로 &lt;var&gt;variable&lt;/var&gt; 의 기본 바인딩 이이 버퍼에 표시됩니다. 기본값은 일반적으로 방금 제거한 버퍼 로컬 값과 다르기 때문에 일반적으로 &lt;var&gt;variable&lt;/var&gt; 값이 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="65e05e2e60149a6f5270fd4956d1873e4211cc50" translate="yes" xml:space="preserve">
          <source>This function deletes the current buffer&amp;rsquo;s auto-save file if &lt;code&gt;delete-auto-save-files&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. It is called every time a buffer is saved.</source>
          <target state="translated">이 함수는 &lt;code&gt;delete-auto-save-files&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 현재 버퍼의 자동 저장 파일을 삭제 합니다. 버퍼가 저장 될 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0cbd0b5a1d6b380094c3b28d4488f8f67e955d2a" translate="yes" xml:space="preserve">
          <source>This function deletes the entire text of the current buffer (&lt;em&gt;not&lt;/em&gt; just the accessible portion), leaving it empty. If the buffer is read-only, it signals a &lt;code&gt;buffer-read-only&lt;/code&gt; error; if some of the text in it is read-only, it signals a &lt;code&gt;text-read-only&lt;/code&gt; error. Otherwise, it deletes the text without asking for any confirmation. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 현재 버퍼의 전체 텍스트 ( 액세스 가능한 부분 &lt;em&gt;뿐만&lt;/em&gt; 아니라)를 삭제하여 비워 둡니다. 버퍼가 읽기 전용이면 &lt;code&gt;buffer-read-only&lt;/code&gt; 오류를 나타 냅니다 . 일부 텍스트가 읽기 전용이면 &lt;code&gt;text-read-only&lt;/code&gt; 오류를 나타냅니다. 그렇지 않으면 확인을 요청하지 않고 텍스트를 삭제합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e81a8ff03ef50332d3121648c49bd9e21de8cf7" translate="yes" xml:space="preserve">
          <source>This function deletes the entry at point.</source>
          <target state="translated">이 함수는 지점에서 항목을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="ec9a54be0d0e87a03f1a074dbb499071099163c7" translate="yes" xml:space="preserve">
          <source>This function deletes the frame &lt;var&gt;frame&lt;/var&gt;. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame (see below) and defaults to the selected frame.</source>
          <target state="translated">이 기능은 프레임 &lt;var&gt;frame&lt;/var&gt; 삭제합니다 . 인수 &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임 (아래 참조)을 지정해야하며 기본값은 선택한 프레임입니다.</target>
        </trans-unit>
        <trans-unit id="98a5914369bed1abd5b9ed6cfac8426cbfd99dcc" translate="yes" xml:space="preserve">
          <source>This function deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns a string containing the text just deleted.</source>
          <target state="translated">이 함수 는 현재 버퍼에서 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 위치 사이의 텍스트를 삭제하고 방금 삭제 한 텍스트를 포함하는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="39e960078b366831bc92f73e84820f9fb8103b09" translate="yes" xml:space="preserve">
          <source>This function deletes the text of the field specified by &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;pos&lt;/var&gt; 로 지정된 필드의 텍스트를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="665c8fde5fba88ca75178c1492080f5a7f76f637" translate="yes" xml:space="preserve">
          <source>This function describes the category specifications in the current category table. It inserts the descriptions in a buffer, and then displays that buffer. If &lt;var&gt;buffer-or-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it describes the category table of that buffer instead.</source>
          <target state="translated">이 함수는 현재 범주 테이블의 범주 사양을 설명합니다. 설명을 버퍼에 삽입 한 다음 해당 버퍼를 표시합니다. 경우 &lt;var&gt;buffer-or-name&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; , 그 대신에 버퍼의 카테고리 테이블을 설명한다.</target>
        </trans-unit>
        <trans-unit id="67c3cd512cd46b7af48452e079681adccc41c42b" translate="yes" xml:space="preserve">
          <source>This function destroys the fringe bitmap identified by &lt;var&gt;bitmap&lt;/var&gt;. If &lt;var&gt;bitmap&lt;/var&gt; identifies a standard fringe bitmap, it actually restores the standard definition of that bitmap, instead of eliminating it entirely.</source>
          <target state="translated">이 기능에 의해 확인 된 프린지 비트 맵 파괴 &lt;var&gt;bitmap&lt;/var&gt; . &lt;var&gt;bitmap&lt;/var&gt; 이 표준 프린지 비트 맵을 식별 하면 비트 맵 을 완전히 제거하는 대신 실제로 해당 비트 맵의 ​​표준 정의를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="f56fa1db79f32a161d110ca6c081fe480399104b" translate="yes" xml:space="preserve">
          <source>This function destructively removes all &lt;code&gt;equal&lt;/code&gt; duplicates from &lt;var&gt;list&lt;/var&gt;, stores the result in &lt;var&gt;list&lt;/var&gt; and returns it. Of several &lt;code&gt;equal&lt;/code&gt; occurrences of an element in &lt;var&gt;list&lt;/var&gt;, &lt;code&gt;delete-dups&lt;/code&gt; keeps the first one.</source>
          <target state="translated">이 함수 는 &lt;var&gt;list&lt;/var&gt; 에서 모든 &lt;code&gt;equal&lt;/code&gt; 중복을 파괴적으로 제거 하고 결과를 &lt;var&gt;list&lt;/var&gt; 에 저장 하고 반환합니다. &lt;var&gt;list&lt;/var&gt; 의 요소가 여러 번 &lt;code&gt;equal&lt;/code&gt; 발생 하면 &lt;code&gt;delete-dups&lt;/code&gt; 가 첫 번째 요소를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="406e9fff52bcecf7604ddb22d61cc6cb033ff7ed" translate="yes" xml:space="preserve">
          <source>This function destructively removes all elements &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt; from &lt;var&gt;list&lt;/var&gt;, and returns the resulting list. The letter &amp;lsquo;</source>
          <target state="translated">이 함수 는 &lt;var&gt;list&lt;/var&gt; 에서 &lt;var&gt;object&lt;/var&gt; 에 대한 모든 요소 &lt;code&gt;eq&lt;/code&gt; 를 파괴적으로 제거 하고 결과 목록을 반환합니다. 그 편지 '</target>
        </trans-unit>
        <trans-unit id="c9013590bfc668217366c5b1ef88adbd49027ea9" translate="yes" xml:space="preserve">
          <source>This function determines the responsible VC backend of the given &lt;var&gt;file&lt;/var&gt;. For example, if</source>
          <target state="translated">이 함수는 주어진 &lt;var&gt;file&lt;/var&gt; 의 책임있는 VC 백엔드를 결정 합니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="c1d5e60ae074c5c44688b8c62392a85d416e09a4" translate="yes" xml:space="preserve">
          <source>This function determines whether any command input is currently available to be read. It returns immediately, with value &lt;code&gt;t&lt;/code&gt; if there is available input, &lt;code&gt;nil&lt;/code&gt; otherwise. On rare occasions it may return &lt;code&gt;t&lt;/code&gt; when no input is available.</source>
          <target state="translated">이 함수는 현재 읽을 수있는 명령 입력이 있는지 여부를 결정합니다. 사용 가능한 입력이 있으면 값 &lt;code&gt;t&lt;/code&gt; 를 사용 하여 즉시 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 드물게 입력이 없을 때 &lt;code&gt;t&lt;/code&gt; 를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c1599c3b0d99eeae3cc3db565bcb11a8c1beab1" translate="yes" xml:space="preserve">
          <source>This function determines whether the text in the current buffer directly following point matches the regular expression &lt;var&gt;regexp&lt;/var&gt;. &amp;ldquo;Directly following&amp;rdquo; means precisely that: the search is &amp;ldquo;anchored&amp;rdquo; and it can succeed only starting with the first character following point. The result is &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 함수는 point 바로 다음에 오는 현재 버퍼의 텍스트가 정규식 &lt;var&gt;regexp&lt;/var&gt; 와 일치하는지 여부를 결정합니다 . &quot;직접 따라 가기&quot;는 정확히 다음을 의미합니다. 검색이 &quot;고정&quot;되어 있으며 지점을 따르는 첫 번째 문자로만 성공할 수 있습니다. 그럴 경우 결과는 &lt;code&gt;t&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="de88f55cf8a58f44acce372c90bff63c4365aa54" translate="yes" xml:space="preserve">
          <source>This function disables the Custom theme named &lt;var&gt;theme&lt;/var&gt;. The theme remains loaded, so that a subsequent call to &lt;code&gt;enable-theme&lt;/code&gt; will re-enable it.</source>
          <target state="translated">이 기능은라는 이름의 사용자 정의 테마 비활성화 &lt;var&gt;theme&lt;/var&gt; . 테마는로드 된 상태로 유지되므로 &lt;code&gt;enable-theme&lt;/code&gt; 에 대한 후속 호출 이 다시 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="aea34f686d675cce544698bbb38560ec6c6c78ff" translate="yes" xml:space="preserve">
          <source>This function discards text properties, regardless of the value of &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; 값에 관계없이 텍스트 속성을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="691cab3ec10c362d521d557c4b4e94fe09bc5916" translate="yes" xml:space="preserve">
          <source>This function discards the contents of the terminal input buffer and cancels any keyboard macro that might be in the process of definition. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 터미널 입력 버퍼의 내용을 버리고 정의 과정에있을 수있는 모든 키보드 매크로를 취소합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="07b2c8a19a13e83c6fda40ebea0c658d73ee59f8" translate="yes" xml:space="preserve">
          <source>This function discards the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt;, and disables further recording of undo information. As a result, it is no longer possible to undo either previous changes or any subsequent changes. If the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt; is already disabled, this function has no effect.</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer-or-name&lt;/var&gt; 의 실행 취소 목록을 버리고 실행 취소 정보의 추가 기록을 비활성화합니다. 결과적으로 이전 변경 사항이나 후속 변경 사항을 더 이상 실행 취소 할 수 없습니다. &lt;var&gt;buffer-or-name&lt;/var&gt; 의 실행 취소 목록 이 이미 비활성화 된 경우이 기능은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="07ffa70365a85a8ae67acf4c96ab6dde2d5f0414" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;buffer&lt;/var&gt; in a side window of the selected frame. It returns the window used for displaying &lt;var&gt;buffer&lt;/var&gt;, &lt;code&gt;nil&lt;/code&gt; if no such window can be found or created.</source>
          <target state="translated">이 기능 은 선택한 프레임의 사이드 윈도우에 &lt;var&gt;buffer&lt;/var&gt; 를 표시합니다 . 그것은 표시하는 데 사용되는 윈도우 반환 &lt;var&gt;buffer&lt;/var&gt; , &lt;code&gt;nil&lt;/code&gt; 그런 윈도우가 발견되거나 생성 될 수 있는지를.</target>
        </trans-unit>
        <trans-unit id="5a772aa6b8557b1f80bbdf908ae27071d6f43d3b" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;completions&lt;/var&gt; to the stream in &lt;code&gt;standard-output&lt;/code&gt;, usually a buffer. (See &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;, for more information about streams.) The argument &lt;var&gt;completions&lt;/var&gt; is normally a list of completions just returned by &lt;code&gt;all-completions&lt;/code&gt;, but it does not have to be. Each element may be a symbol or a string, either of which is simply printed. It can also be a list of two strings, which is printed as if the strings were concatenated. The first of the two strings is the actual completion, the second string serves as annotation.</source>
          <target state="translated">이 함수는 &lt;code&gt;standard-output&lt;/code&gt; (일반적으로 버퍼) 의 스트림에 대한 &lt;var&gt;completions&lt;/var&gt; 를 표시합니다 . ( 스트림에 대한 자세한 내용은 &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read 및 Print를&lt;/a&gt; 참조하십시오 .) 인수 &lt;var&gt;completions&lt;/var&gt; 는 일반적으로 &lt;code&gt;all-completions&lt;/code&gt; 에 의해 반환 된 완료 목록 이지만 반드시 그럴 필요는 없습니다. 각 요소는 기호 또는 문자열 일 수 있으며 둘 중 하나만 인쇄됩니다. 문자열이 연결된 것처럼 인쇄되는 두 문자열의 목록 일 수도 있습니다. 두 문자열 중 첫 번째 문자열은 실제 완성이고 두 번째 문자열은 주석 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="11450a09c728eadb159e2447a6c4fda0feeec2eb" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;string&lt;/var&gt; temporarily at the end of the minibuffer text, for a few seconds, or until the next input event arrives, whichever comes first. The variable &lt;code&gt;minibuffer-message-timeout&lt;/code&gt; specifies the number of seconds to wait in the absence of input. It defaults to 2. If &lt;var&gt;args&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the actual message is obtained by passing &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;args&lt;/var&gt; through &lt;code&gt;format-message&lt;/code&gt;. See &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;.</source>
          <target state="translated">이 함수는 몇 초 동안 또는 다음 입력 이벤트가 도착할 때까지 (둘 중 먼저 오는 쪽) 미니 버퍼 텍스트 끝에 일시적으로 &lt;var&gt;string&lt;/var&gt; 표시 합니다 . &lt;code&gt;minibuffer-message-timeout&lt;/code&gt; 변수 는 입력이 없을 때 대기 할 시간 (초)을 지정합니다. 기본값은 2입니다. &lt;var&gt;args&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;string&lt;/var&gt; 과 &lt;var&gt;args&lt;/var&gt; 를 &lt;code&gt;format-message&lt;/code&gt; 를 통해 전달하여 실제 메시지를 얻습니다 . &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;문자열 서식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc762f98379dbaa6209ec962aa4c0277567eb184" translate="yes" xml:space="preserve">
          <source>This function displays a description of the display table &lt;var&gt;display-table&lt;/var&gt; in a help buffer.</source>
          <target state="translated">이 기능 은 도움말 버퍼에 표시 테이블 &lt;var&gt;display-table&lt;/var&gt; 테이블의 설명을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="a33c330efcbd0f5ca0a1d003af781424d22dd17d" translate="yes" xml:space="preserve">
          <source>This function displays a message in the echo area. &lt;var&gt;format-string&lt;/var&gt; is a format string, and &lt;var&gt;arguments&lt;/var&gt; are the objects for its format specifications, like in the &lt;code&gt;format-message&lt;/code&gt; function (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;). The resulting formatted string is displayed in the echo area; if it contains &lt;code&gt;face&lt;/code&gt; text properties, it is displayed with the specified faces (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;). The string is also added to the</source>
          <target state="translated">이 기능은 에코 영역에 메시지를 표시합니다. &lt;var&gt;format-string&lt;/var&gt; 은 형식 문자열이고 &lt;var&gt;arguments&lt;/var&gt; 는 &lt;code&gt;format-message&lt;/code&gt; 함수 에서와 같이 형식 사양에 대한 객체입니다 ( &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt; 참조 ). 결과 형식화 된 문자열이 에코 영역에 표시됩니다. 포함 된 경우, &lt;code&gt;face&lt;/code&gt; 텍스트 속성을, 그 지정된면 (참조로 표시되는 &lt;a href=&quot;faces#Faces&quot;&gt;얼굴을&lt;/a&gt; ). 문자열은 또한</target>
        </trans-unit>
        <trans-unit id="6b5a575622ec61ff75b5256bbb4c2f74edbbc7f9" translate="yes" xml:space="preserve">
          <source>This function displays a message like &lt;code&gt;message&lt;/code&gt;, but may display it in a dialog box instead of the echo area. If this function is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to display the message. Otherwise, it uses the echo area. (This is the same criterion that &lt;code&gt;y-or-n-p&lt;/code&gt; uses to make a similar decision; see &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;.)</source>
          <target state="translated">이 함수는 message와 같은 &lt;code&gt;message&lt;/code&gt; 를 표시하지만 에코 영역 대신 대화 상자에 표시 할 수 있습니다. 마우스를 사용하여 호출 된 명령에서이 함수가 호출되면 (보다 정확하게는 &lt;code&gt;last-nonmenu-event&lt;/code&gt; ( &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt; 참조 )가 &lt;code&gt;nil&lt;/code&gt; 또는 목록 인 경우) 대화 상자 또는 팝업 메뉴를 사용하여 표시합니다. 메시지. 그렇지 않으면 에코 영역을 사용합니다. (이것은 &lt;code&gt;y-or-n-p&lt;/code&gt; 가 유사한 결정을 내리는 데 사용 하는 것과 동일한 기준입니다 . &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;예 또는 아니요 쿼리를&lt;/a&gt; 참조하세요 .)</target>
        </trans-unit>
        <trans-unit id="5c931333ca4f51446cc07248ea32a3c663c7ef7c" translate="yes" xml:space="preserve">
          <source>This function displays a message like &lt;code&gt;message&lt;/code&gt;, but uses a dialog box (or a pop-up menu) whenever that is possible. If it is impossible to use a dialog box or pop-up menu, because the terminal does not support them, then &lt;code&gt;message-box&lt;/code&gt; uses the echo area, like &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">이 함수는 message와 같은 &lt;code&gt;message&lt;/code&gt; 표시 하지만 가능할 때마다 대화 상자 (또는 팝업 메뉴)를 사용합니다. 터미널이 지원하지 않아 대화 상자 나 팝업 메뉴를 사용할 수없는 경우 &lt;code&gt;message-box&lt;/code&gt; 는 &lt;code&gt;message&lt;/code&gt; 와 같은 echo 영역을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="47e1a294354a03c6ac03f0b5805c17606f8fb2e9" translate="yes" xml:space="preserve">
          <source>This function displays a pop-up dialog box and returns an indication of what selection the user makes. The argument &lt;var&gt;contents&lt;/var&gt; specifies the alternatives to offer; it has this format:</source>
          <target state="translated">이 함수는 팝업 대화 상자를 표시하고 사용자가 선택한 항목을 표시합니다. 인수 &lt;var&gt;contents&lt;/var&gt; 은 제공 할 대안을 지정합니다. 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd031b81f6a39bd76d9562d33ff43b232c1fff02" translate="yes" xml:space="preserve">
          <source>This function displays a pop-up menu and returns an indication of what selection the user makes.</source>
          <target state="translated">이 함수는 팝업 메뉴를 표시하고 사용자가 선택한 항목을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="edb4f050366b00dbaab26bb985b84d86d52c62a8" translate="yes" xml:space="preserve">
          <source>This function displays an MS-Windows tray notification as specified by &lt;var&gt;params&lt;/var&gt;. MS-Windows tray notifications are displayed in a balloon from an icon in the notification area of the taskbar.</source>
          <target state="translated">이 함수는 &lt;var&gt;params&lt;/var&gt; 로 지정된 MS-Windows 트레이 알림을 표시합니다 . MS-Windows 트레이 알림은 작업 표시 줄의 알림 영역에있는 아이콘에서 풍선으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f6430d39bef5c137459f23c3bef79e96ac9e579a" translate="yes" xml:space="preserve">
          <source>This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in a new frame. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</source>
          <target state="translated">이 함수는 새 프레임에서 &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 지정된 버퍼를 표시합니다 . 내부적으로 &lt;code&gt;pop-to-buffer&lt;/code&gt; 기능을 사용합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="1a5d1db9eb92ae20a9d5a6708abaf5f6264b1827" translate="yes" xml:space="preserve">
          <source>This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in some window other than the selected window. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</source>
          <target state="translated">이 함수는 선택한 창 이외의 일부 창에서 &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 지정된 버퍼를 표시합니다 . 내부적으로 &lt;code&gt;pop-to-buffer&lt;/code&gt; 기능을 사용합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="0c1df81bfd14534ee9db8acc6be778b68275428c" translate="yes" xml:space="preserve">
          <source>This function displays the message &lt;var&gt;message&lt;/var&gt;, which may be either a string or a buffer. If it is shorter than the maximum height of the echo area, as defined by &lt;code&gt;max-mini-window-height&lt;/code&gt;, it is displayed in the echo area, using &lt;code&gt;message&lt;/code&gt;. Otherwise, &lt;code&gt;display-buffer&lt;/code&gt; is used to show it in a pop-up buffer.</source>
          <target state="translated">이 함수는 메시지 &lt;var&gt;message&lt;/var&gt; 를 표시 하며 문자열 또는 버퍼 일 수 있습니다. &lt;code&gt;max-mini-window-height&lt;/code&gt; 에 정의 된 에코 영역의 최대 높이보다 짧으면 &lt;code&gt;message&lt;/code&gt; 를 사용하여 에코 영역에 표시됩니다 . 그렇지 않으면 &lt;code&gt;display-buffer&lt;/code&gt; 를 사용하여 팝업 버퍼에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="ff36aece885413f411780f8d5fb5966616c7fe43" translate="yes" xml:space="preserve">
          <source>This function displays warning or advisory messages in various peculiar cases, unless the optional argument &lt;var&gt;nowarn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. For example, if it needs to create a buffer, and there is no file named &lt;var&gt;filename&lt;/var&gt;, it displays the message &amp;lsquo;</source>
          <target state="translated">This function displays warning or advisory messages in various peculiar cases, unless the optional argument &lt;var&gt;nowarn&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; . For example, if it needs to create a buffer, and there is no file named &lt;var&gt;filename&lt;/var&gt; , it displays the message &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="698bf35dab732d0a22abe1ca39f2769b26a9617c" translate="yes" xml:space="preserve">
          <source>This function does not always allocate a new string. Callers are advised not rely on the result being a new string nor on it being &lt;code&gt;eq&lt;/code&gt; to an existing string.</source>
          <target state="translated">This function does not always allocate a new string. Callers are advised not rely on the result being a new string nor on it being &lt;code&gt;eq&lt;/code&gt; to an existing string.</target>
        </trans-unit>
        <trans-unit id="74b2cb7015961f5df871ed278347a83d92987bbb" translate="yes" xml:space="preserve">
          <source>This function does not bind &lt;code&gt;undo-in-progress&lt;/code&gt;.</source>
          <target state="translated">This function does not bind &lt;code&gt;undo-in-progress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc36816e826444570c444dbabb85c0fb4d5e663d" translate="yes" xml:space="preserve">
          <source>This function does not compute the hash directly from the internal representation of &lt;var&gt;object&lt;/var&gt;&amp;rsquo;s text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Instead, it encodes the text using a coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), and computes the hash from that encoded text. If &lt;var&gt;object&lt;/var&gt; is a buffer, the coding system used is the one which would be chosen by default for writing the text into a file. If &lt;var&gt;object&lt;/var&gt; is a string, the user&amp;rsquo;s preferred coding system is used (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;Recognize Coding&lt;/a&gt; in</source>
          <target state="translated">This function does not compute the hash directly from the internal representation of &lt;var&gt;object&lt;/var&gt; &amp;rsquo;s text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Instead, it encodes the text using a coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), and computes the hash from that encoded text. If &lt;var&gt;object&lt;/var&gt; is a buffer, the coding system used is the one which would be chosen by default for writing the text into a file. If &lt;var&gt;object&lt;/var&gt; is a string, the user&amp;rsquo;s preferred coding system is used (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;Recognize Coding&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="31c9a6a8b23d62029a81cc2ec626faefc7799816" translate="yes" xml:space="preserve">
          <source>This function does not compute the hash directly from the internal representation of &lt;var&gt;object&lt;/var&gt;&amp;rsquo;s text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Instead, it encodes the text using a coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), and computes the hash from that encoded text. If &lt;var&gt;object&lt;/var&gt; is a buffer, the coding system used is the one which would be chosen by default for writing the text into a file. If &lt;var&gt;object&lt;/var&gt; is a string, the user&amp;rsquo;s preferred coding system is used (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;Recognize Coding&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9b7828342a57919a718cace81dfd3faa4f5c11" translate="yes" xml:space="preserve">
          <source>This function does not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="translated">This function does not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e489c43f6386b63034a5480b7fcd68835882f265" translate="yes" xml:space="preserve">
          <source>This function does not delete any of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;). If &lt;var&gt;frame&lt;/var&gt; is a child frame, it deletes &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s siblings only.</source>
          <target state="translated">This function does not delete any of &lt;var&gt;frame&lt;/var&gt; &amp;rsquo;s child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;). If &lt;var&gt;frame&lt;/var&gt; is a child frame, it deletes &lt;var&gt;frame&lt;/var&gt; &amp;rsquo;s siblings only.</target>
        </trans-unit>
        <trans-unit id="2777b714f040609dc0c2323e82f37a4dd64dd46c" translate="yes" xml:space="preserve">
          <source>This function does not display the buffer in any window, so the user cannot necessarily see the buffer. But Lisp programs will now operate on it.</source>
          <target state="translated">This function does not display the buffer in any window, so the user cannot necessarily see the buffer. But Lisp programs will now operate on it.</target>
        </trans-unit>
        <trans-unit id="122bef82eeec1101e5c58958caafc9ca13f4a090" translate="yes" xml:space="preserve">
          <source>This function does not do a redisplay immediately; Emacs does that as it waits for input, or when the function &lt;code&gt;redisplay&lt;/code&gt; is called.</source>
          <target state="translated">This function does not do a redisplay immediately; Emacs does that as it waits for input, or when the function &lt;code&gt;redisplay&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="0019543845c75e764794fc65b8e8ed110bc2a16f" translate="yes" xml:space="preserve">
          <source>This function does not expand environment variables. Only &lt;code&gt;substitute-in-file-name&lt;/code&gt; does that. See &lt;a href=&quot;file-name-expansion#Definition-of-substitute_002din_002dfile_002dname&quot;&gt;Definition of substitute-in-file-name&lt;/a&gt;.</source>
          <target state="translated">This function does not expand environment variables. Only &lt;code&gt;substitute-in-file-name&lt;/code&gt; does that. See &lt;a href=&quot;file-name-expansion#Definition-of-substitute_002din_002dfile_002dname&quot;&gt;Definition of substitute-in-file-name&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7f807e27bf2d141816a3e1413a9ea7f32af703aa" translate="yes" xml:space="preserve">
          <source>This function does not follow symbolic links.</source>
          <target state="translated">This function does not follow symbolic links.</target>
        </trans-unit>
        <trans-unit id="9b080dea42c33ee8f7092da141061fd032eaa75d" translate="yes" xml:space="preserve">
          <source>This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7727a951cc8ae3ca2bd1aee843c49be7e3a2315" translate="yes" xml:space="preserve">
          <source>This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, either bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;, or use the &lt;code&gt;forward-line&lt;/code&gt; function instead. For instance, &lt;code&gt;(forward-line 0)&lt;/code&gt; does the same thing as &lt;code&gt;(beginning-of-line)&lt;/code&gt;, except that it ignores field boundaries.</source>
          <target state="translated">This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, either bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; , or use the &lt;code&gt;forward-line&lt;/code&gt; function instead. For instance, &lt;code&gt;(forward-line 0)&lt;/code&gt; does the same thing as &lt;code&gt;(beginning-of-line)&lt;/code&gt; , except that it ignores field boundaries.</target>
        </trans-unit>
        <trans-unit id="8a376ab76b4268d72435943b41d27e0b10156847" translate="yes" xml:space="preserve">
          <source>This function does not move point, but it does update the match data. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;. If you need to test for a match without modifying the match data, use &lt;code&gt;looking-at-p&lt;/code&gt;, described below.</source>
          <target state="translated">This function does not move point, but it does update the match data. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;. If you need to test for a match without modifying the match data, use &lt;code&gt;looking-at-p&lt;/code&gt; , described below.</target>
        </trans-unit>
        <trans-unit id="492e68f73768afc8c23b0ad306165934009086b0" translate="yes" xml:space="preserve">
          <source>This function does not return a window whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;). If the nearest window&amp;rsquo;s &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt;, this function tries to find another window in the indicated direction whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is &lt;code&gt;nil&lt;/code&gt;. If the optional argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, a window may be returned even if its &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function does not return a window whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is non- &lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;). If the nearest window&amp;rsquo;s &lt;code&gt;no-other-window&lt;/code&gt; parameter is non- &lt;code&gt;nil&lt;/code&gt; , this function tries to find another window in the indicated direction whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is &lt;code&gt;nil&lt;/code&gt; . If the optional argument &lt;var&gt;ignore&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , a window may be returned even if its &lt;code&gt;no-other-window&lt;/code&gt; parameter is non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14b153f585d42cbd613426c81cb7afb6ac6fc9f7" translate="yes" xml:space="preserve">
          <source>This function does not select a window that has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;no-other-window&lt;/code&gt; window parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;), provided that &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function does not select a window that has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;no-other-window&lt;/code&gt; window parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;), provided that &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16ab22a6ff098e30bc2ba92a546ad39298b42d22" translate="yes" xml:space="preserve">
          <source>This function does not try to invoke file name handlers for &lt;var&gt;program&lt;/var&gt; or for the rest of &lt;var&gt;args&lt;/var&gt;. For that reason, if &lt;var&gt;program&lt;/var&gt; or any of &lt;var&gt;args&lt;/var&gt; use the remote-file syntax (see &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;), they must be converted either to file names relative to &lt;code&gt;default-directory&lt;/code&gt;, or to names that identify the files locally on the remote host, by running them through &lt;code&gt;file-local-name&lt;/code&gt;.</source>
          <target state="translated">This function does not try to invoke file name handlers for &lt;var&gt;program&lt;/var&gt; or for the rest of &lt;var&gt;args&lt;/var&gt; . For that reason, if &lt;var&gt;program&lt;/var&gt; or any of &lt;var&gt;args&lt;/var&gt; use the remote-file syntax (see &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;), they must be converted either to file names relative to &lt;code&gt;default-directory&lt;/code&gt; , or to names that identify the files locally on the remote host, by running them through &lt;code&gt;file-local-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccb0c85871c767b3bbf133b5888bcb9fc7116fe6" translate="yes" xml:space="preserve">
          <source>This function does not work for dotted lists. Trying to copy a circular list may cause an infinite loop.</source>
          <target state="translated">This function does not work for dotted lists. Trying to copy a circular list may cause an infinite loop.</target>
        </trans-unit>
        <trans-unit id="5de19385bbfee97ee2b8a413b9ec9199004e5a9d" translate="yes" xml:space="preserve">
          <source>This function does the main work of reporting progress of your operation. It displays the message of &lt;var&gt;reporter&lt;/var&gt;, followed by progress percentage determined by &lt;var&gt;value&lt;/var&gt;. If percentage is zero, or close enough according to the &lt;var&gt;min-change&lt;/var&gt; and &lt;var&gt;min-time&lt;/var&gt; arguments, then it is omitted from the output.</source>
          <target state="translated">This function does the main work of reporting progress of your operation. It displays the message of &lt;var&gt;reporter&lt;/var&gt; , followed by progress percentage determined by &lt;var&gt;value&lt;/var&gt; . If percentage is zero, or close enough according to the &lt;var&gt;min-change&lt;/var&gt; and &lt;var&gt;min-time&lt;/var&gt; arguments, then it is omitted from the output.</target>
        </trans-unit>
        <trans-unit id="95ac8c545353bf4f7c39dd8911b32f26aeff643c" translate="yes" xml:space="preserve">
          <source>This function dumps the current state of Emacs into a dump file &lt;var&gt;to-file&lt;/var&gt;, using the &lt;code&gt;pdump&lt;/code&gt; method. Normally, the dump file is called</source>
          <target state="translated">This function dumps the current state of Emacs into a dump file &lt;var&gt;to-file&lt;/var&gt; , using the &lt;code&gt;pdump&lt;/code&gt; method. Normally, the dump file is called</target>
        </trans-unit>
        <trans-unit id="7d810f9f7459e1475a856c2b26c05e40ac1f7f72" translate="yes" xml:space="preserve">
          <source>This function dumps the current state of Emacs into an executable file &lt;var&gt;to-file&lt;/var&gt;, using the &lt;code&gt;unexec&lt;/code&gt; method. It takes symbols from &lt;var&gt;from-file&lt;/var&gt; (this is normally the executable file</source>
          <target state="translated">This function dumps the current state of Emacs into an executable file &lt;var&gt;to-file&lt;/var&gt; , using the &lt;code&gt;unexec&lt;/code&gt; method. It takes symbols from &lt;var&gt;from-file&lt;/var&gt; (this is normally the executable file</target>
        </trans-unit>
        <trans-unit id="69098c698a4fecf4761cc6c48ba667da003dec45" translate="yes" xml:space="preserve">
          <source>This function eliminates all the buffer-local variable bindings of the current buffer except for variables marked as permanent and local hook functions that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;permanent-local-hook&lt;/code&gt; property (see &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;). As a result, the buffer will see the default values of most variables.</source>
          <target state="translated">This function eliminates all the buffer-local variable bindings of the current buffer except for variables marked as permanent and local hook functions that have a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;permanent-local-hook&lt;/code&gt; property (see &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;). As a result, the buffer will see the default values of most variables.</target>
        </trans-unit>
        <trans-unit id="9d1ea641996f33c976c8f457eb763e024f6b703b" translate="yes" xml:space="preserve">
          <source>This function empties out the table of events for &lt;code&gt;this-command-keys&lt;/code&gt; to return. Unless &lt;var&gt;keep-record&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it also empties the records that the function &lt;code&gt;recent-keys&lt;/code&gt; (see &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;) will subsequently return. This is useful after reading a password, to prevent the password from echoing inadvertently as part of the next command in certain cases.</source>
          <target state="translated">This function empties out the table of events for &lt;code&gt;this-command-keys&lt;/code&gt; to return. Unless &lt;var&gt;keep-record&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it also empties the records that the function &lt;code&gt;recent-keys&lt;/code&gt; (see &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;) will subsequently return. This is useful after reading a password, to prevent the password from echoing inadvertently as part of the next command in certain cases.</target>
        </trans-unit>
        <trans-unit id="89a04adf828d457bc23c46e14c9e1e98f1ac0633" translate="yes" xml:space="preserve">
          <source>This function empties out the value cell of &lt;var&gt;symbol&lt;/var&gt;, making the variable void. It returns &lt;var&gt;symbol&lt;/var&gt;.</source>
          <target state="translated">This function empties out the value cell of &lt;var&gt;symbol&lt;/var&gt; , making the variable void. It returns &lt;var&gt;symbol&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="edce160802ec529bb459f552aa6bb57e8021a9f4" translate="yes" xml:space="preserve">
          <source>This function enables the Custom theme named &lt;var&gt;theme&lt;/var&gt;. It signals an error if no such theme has been loaded.</source>
          <target state="translated">This function enables the Custom theme named &lt;var&gt;theme&lt;/var&gt; . It signals an error if no such theme has been loaded.</target>
        </trans-unit>
        <trans-unit id="2d91d6174e887c3ecc6dc6d7120673f8299f190e" translate="yes" xml:space="preserve">
          <source>This function encodes the text in &lt;var&gt;string&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. It returns a new string containing the encoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the encoding operation is trivial. The result of encoding is a unibyte string.</source>
          <target state="translated">This function encodes the text in &lt;var&gt;string&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt; . It returns a new string containing the encoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the encoding operation is trivial. The result of encoding is a unibyte string.</target>
        </trans-unit>
        <trans-unit id="a5935028ad6787f8c34a7f7c11d0dd8a9da3360b" translate="yes" xml:space="preserve">
          <source>This function enters an association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;table&lt;/var&gt;, with value &lt;var&gt;value&lt;/var&gt;. If &lt;var&gt;key&lt;/var&gt; already has an association in &lt;var&gt;table&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt; replaces the old associated value.</source>
          <target state="translated">This function enters an association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;table&lt;/var&gt; , with value &lt;var&gt;value&lt;/var&gt; . If &lt;var&gt;key&lt;/var&gt; already has an association in &lt;var&gt;table&lt;/var&gt; , &lt;var&gt;value&lt;/var&gt; replaces the old associated value.</target>
        </trans-unit>
        <trans-unit id="0c85aa44f391c1dcfc863bf0ced2e910ac9f3056" translate="yes" xml:space="preserve">
          <source>This function enters the debugger. It switches buffers to a buffer named</source>
          <target state="translated">This function enters the debugger. It switches buffers to a buffer named</target>
        </trans-unit>
        <trans-unit id="6ef4d3d71f55ff550219a7386a661d019026f07a" translate="yes" xml:space="preserve">
          <source>This function establishes the proper major mode and buffer-local variable bindings for the current buffer. It calls &lt;code&gt;set-auto-mode&lt;/code&gt; (see below). As of Emacs 26.1, it no longer runs &lt;code&gt;hack-local-variables&lt;/code&gt;, this now being done in &lt;code&gt;run-mode-hooks&lt;/code&gt; at the initialization of major modes (see &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;).</source>
          <target state="translated">This function establishes the proper major mode and buffer-local variable bindings for the current buffer. It calls &lt;code&gt;set-auto-mode&lt;/code&gt; (see below). As of Emacs 26.1, it no longer runs &lt;code&gt;hack-local-variables&lt;/code&gt; , this now being done in &lt;code&gt;run-mode-hooks&lt;/code&gt; at the initialization of major modes (see &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6bd2f57fb22f17edf842ae4c294afe5ead7208e4" translate="yes" xml:space="preserve">
          <source>This function evaluates the forms in the current buffer in the region defined by the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. It reads forms from the region and calls &lt;code&gt;eval&lt;/code&gt; on them until the end of the region is reached, or until an error is signaled and not handled.</source>
          <target state="translated">This function evaluates the forms in the current buffer in the region defined by the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; . It reads forms from the region and calls &lt;code&gt;eval&lt;/code&gt; on them until the end of the region is reached, or until an error is signaled and not handled.</target>
        </trans-unit>
        <trans-unit id="499319ea5101c7a9547f738fe64007844a28c37c" translate="yes" xml:space="preserve">
          <source>This function exchanges two nonoverlapping portions of the buffer (if they overlap, the function signals an error). Arguments &lt;var&gt;start1&lt;/var&gt; and &lt;var&gt;end1&lt;/var&gt; specify the bounds of one portion and arguments &lt;var&gt;start2&lt;/var&gt; and &lt;var&gt;end2&lt;/var&gt; specify the bounds of the other portion.</source>
          <target state="translated">This function exchanges two nonoverlapping portions of the buffer (if they overlap, the function signals an error). Arguments &lt;var&gt;start1&lt;/var&gt; and &lt;var&gt;end1&lt;/var&gt; specify the bounds of one portion and arguments &lt;var&gt;start2&lt;/var&gt; and &lt;var&gt;end2&lt;/var&gt; specify the bounds of the other portion.</target>
        </trans-unit>
        <trans-unit id="2253d8c65af3867f826adf966d829eb7201fa13b" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;command&lt;/var&gt; (a string) as a shell command, then returns the command&amp;rsquo;s output as a string.</source>
          <target state="translated">This function executes &lt;var&gt;command&lt;/var&gt; (a string) as a shell command, then returns the command&amp;rsquo;s output as a string.</target>
        </trans-unit>
        <trans-unit id="2c74139eb2be1f749bdd6863f6cfdaed6857d52b" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;command&lt;/var&gt;. The argument &lt;var&gt;command&lt;/var&gt; must satisfy the &lt;code&gt;commandp&lt;/code&gt; predicate; i.e., it must be an interactively callable function or a keyboard macro.</source>
          <target state="translated">This function executes &lt;var&gt;command&lt;/var&gt; . The argument &lt;var&gt;command&lt;/var&gt; must satisfy the &lt;code&gt;commandp&lt;/code&gt; predicate; i.e., it must be an interactively callable function or a keyboard macro.</target>
        </trans-unit>
        <trans-unit id="c6a5607e8b9c48006dbd500a0f2bc228a7e15102" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;kbdmacro&lt;/var&gt; as a sequence of events. If &lt;var&gt;kbdmacro&lt;/var&gt; is a string or vector, then the events in it are executed exactly as if they had been input by the user. The sequence is &lt;em&gt;not&lt;/em&gt; expected to be a single key sequence; normally a keyboard macro definition consists of several key sequences concatenated.</source>
          <target state="translated">This function executes &lt;var&gt;kbdmacro&lt;/var&gt; as a sequence of events. If &lt;var&gt;kbdmacro&lt;/var&gt; is a string or vector, then the events in it are executed exactly as if they had been input by the user. The sequence is &lt;em&gt;not&lt;/em&gt; expected to be a single key sequence; normally a keyboard macro definition consists of several key sequences concatenated.</target>
        </trans-unit>
        <trans-unit id="4b9cf3df1b0b0c02a5c5b5532b8272bf71f1ed02" translate="yes" xml:space="preserve">
          <source>This function executes the forms in &lt;var&gt;body&lt;/var&gt; while arranging to insert any output they print into the buffer named &lt;var&gt;buffer-name&lt;/var&gt;, which is first created if necessary, and put into Help mode. (See the similar form &lt;code&gt;with-temp-buffer-window&lt;/code&gt; below.) Finally, the buffer is displayed in some window, but that window is not selected.</source>
          <target state="translated">This function executes the forms in &lt;var&gt;body&lt;/var&gt; while arranging to insert any output they print into the buffer named &lt;var&gt;buffer-name&lt;/var&gt; , which is first created if necessary, and put into Help mode. (See the similar form &lt;code&gt;with-temp-buffer-window&lt;/code&gt; below.) Finally, the buffer is displayed in some window, but that window is not selected.</target>
        </trans-unit>
        <trans-unit id="5de49d1feea5d11b0ce037aef855f644fc8985ef" translate="yes" xml:space="preserve">
          <source>This function executes the shell command &lt;var&gt;command&lt;/var&gt; synchronously. The other arguments are handled as in &lt;code&gt;call-process&lt;/code&gt;. An old calling convention allowed passing any number of additional arguments after &lt;var&gt;display&lt;/var&gt;, which were concatenated to &lt;var&gt;command&lt;/var&gt;; this is still supported, but strongly discouraged.</source>
          <target state="translated">This function executes the shell command &lt;var&gt;command&lt;/var&gt; synchronously. The other arguments are handled as in &lt;code&gt;call-process&lt;/code&gt; . An old calling convention allowed passing any number of additional arguments after &lt;var&gt;display&lt;/var&gt; , which were concatenated to &lt;var&gt;command&lt;/var&gt; ; this is still supported, but strongly discouraged.</target>
        </trans-unit>
        <trans-unit id="7d9057dde9954ce5139e85128af04ceb303e19e8" translate="yes" xml:space="preserve">
          <source>This function executes the specified &lt;var&gt;script&lt;/var&gt; like &lt;code&gt;xwidget-webkit-execute-script&lt;/code&gt; does, but it also returns the script&amp;rsquo;s return value as a string. If &lt;var&gt;script&lt;/var&gt; doesn&amp;rsquo;t return a value, this function returns &lt;var&gt;default&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;default&lt;/var&gt; was omitted.</source>
          <target state="translated">This function executes the specified &lt;var&gt;script&lt;/var&gt; like &lt;code&gt;xwidget-webkit-execute-script&lt;/code&gt; does, but it also returns the script&amp;rsquo;s return value as a string. If &lt;var&gt;script&lt;/var&gt; doesn&amp;rsquo;t return a value, this function returns &lt;var&gt;default&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;default&lt;/var&gt; was omitted.</target>
        </trans-unit>
        <trans-unit id="8cedc57eb19cd8cc2be16e35ee1659c138276da2" translate="yes" xml:space="preserve">
          <source>This function exists so that you can customize it if you wish to change the naming convention for auto-save files. If you redefine it, be sure to redefine the function &lt;code&gt;make-auto-save-file-name&lt;/code&gt; correspondingly.</source>
          <target state="translated">This function exists so that you can customize it if you wish to change the naming convention for auto-save files. If you redefine it, be sure to redefine the function &lt;code&gt;make-auto-save-file-name&lt;/code&gt; correspondingly.</target>
        </trans-unit>
        <trans-unit id="086828fcf4dd1d64a395f8cfff35eac9baf8cfab" translate="yes" xml:space="preserve">
          <source>This function exits all recursive editing levels; it does not return a value, as it jumps completely out of any computation directly back to the main command loop.</source>
          <target state="translated">This function exits all recursive editing levels; it does not return a value, as it jumps completely out of any computation directly back to the main command loop.</target>
        </trans-unit>
        <trans-unit id="c5e5981403de33f9a1ca1e32a693b15dbfea2a07" translate="yes" xml:space="preserve">
          <source>This function exits from the innermost recursive edit (including minibuffer input). Its definition is effectively &lt;code&gt;(throw 'exit
nil)&lt;/code&gt;.</source>
          <target state="translated">This function exits from the innermost recursive edit (including minibuffer input). Its definition is effectively &lt;code&gt;(throw 'exit nil)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0df6a37125b5552a1078859f2c3ab0b7dad4463f" translate="yes" xml:space="preserve">
          <source>This function expands &lt;var&gt;form&lt;/var&gt;, if it is a macro call. If the result is another macro call, it is expanded in turn, until something which is not a macro call results. That is the value returned by &lt;code&gt;macroexpand&lt;/code&gt;. If &lt;var&gt;form&lt;/var&gt; is not a macro call to begin with, it is returned as given.</source>
          <target state="translated">This function expands &lt;var&gt;form&lt;/var&gt; , if it is a macro call. If the result is another macro call, it is expanded in turn, until something which is not a macro call results. That is the value returned by &lt;code&gt;macroexpand&lt;/code&gt; . If &lt;var&gt;form&lt;/var&gt; is not a macro call to begin with, it is returned as given.</target>
        </trans-unit>
        <trans-unit id="114164f026d451f6dc1ae99c37b0882a8b219a03" translate="yes" xml:space="preserve">
          <source>This function expands macros like &lt;code&gt;macroexpand&lt;/code&gt;, but it only performs one step of the expansion: if the result is another macro call, &lt;code&gt;macroexpand-1&lt;/code&gt; will not expand it.</source>
          <target state="translated">This function expands macros like &lt;code&gt;macroexpand&lt;/code&gt; , but it only performs one step of the expansion: if the result is another macro call, &lt;code&gt;macroexpand-1&lt;/code&gt; will not expand it.</target>
        </trans-unit>
        <trans-unit id="39fe461b5ad946860ee413db52f2bfb13157fd6b" translate="yes" xml:space="preserve">
          <source>This function expands the wildcard pattern &lt;var&gt;pattern&lt;/var&gt;, returning a list of file names that match it.</source>
          <target state="translated">This function expands the wildcard pattern &lt;var&gt;pattern&lt;/var&gt; , returning a list of file names that match it.</target>
        </trans-unit>
        <trans-unit id="81ea65ff4066c4409ff9b916da60dde173fa31ca" translate="yes" xml:space="preserve">
          <source>This function extracts the C pointer from the Lisp object represented by &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">This function extracts the C pointer from the Lisp object represented by &lt;var&gt;val&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="62068d23c0479a1a36320a1f177cb6e84fed41e8" translate="yes" xml:space="preserve">
          <source>This function extracts, from parser state &lt;var&gt;state&lt;/var&gt;, the last position scanned in the parse which was at top level in grammatical structure. &amp;ldquo;At top level&amp;rdquo; means outside of any parentheses, comments, or strings.</source>
          <target state="translated">This function extracts, from parser state &lt;var&gt;state&lt;/var&gt; , the last position scanned in the parse which was at top level in grammatical structure. &amp;ldquo;At top level&amp;rdquo; means outside of any parentheses, comments, or strings.</target>
        </trans-unit>
        <trans-unit id="0d34081a34c436f00654b5b9fc2068bfacba9525" translate="yes" xml:space="preserve">
          <source>This function fails if no window can be split. More often than not, this happens because no window is large enough to allow splitting. Setting &lt;code&gt;split-height-threshold&lt;/code&gt; or &lt;code&gt;split-width-threshold&lt;/code&gt; to lower values may help in this regard. Splitting also fails when the selected frame has an &lt;code&gt;unsplittable&lt;/code&gt; frame parameter; see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;.</source>
          <target state="translated">This function fails if no window can be split. More often than not, this happens because no window is large enough to allow splitting. Setting &lt;code&gt;split-height-threshold&lt;/code&gt; or &lt;code&gt;split-width-threshold&lt;/code&gt; to lower values may help in this regard. Splitting also fails when the selected frame has an &lt;code&gt;unsplittable&lt;/code&gt; frame parameter; see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e78e63ce27bec2577b6d7533f94e5df3a8b46212" translate="yes" xml:space="preserve">
          <source>This function fills the array &lt;var&gt;array&lt;/var&gt; with &lt;var&gt;object&lt;/var&gt;, so that each element of &lt;var&gt;array&lt;/var&gt; is &lt;var&gt;object&lt;/var&gt;. It returns &lt;var&gt;array&lt;/var&gt;.</source>
          <target state="translated">This function fills the array &lt;var&gt;array&lt;/var&gt; with &lt;var&gt;object&lt;/var&gt; , so that each element of &lt;var&gt;array&lt;/var&gt; is &lt;var&gt;object&lt;/var&gt; . It returns &lt;var&gt;array&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8d0809461e25d24f9dc5f2e4e767fdfaa72c6a03" translate="yes" xml:space="preserve">
          <source>This function filters the buffer text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; using a function specified by the variable &lt;code&gt;filter-buffer-substring-function&lt;/code&gt;, and returns the result.</source>
          <target state="translated">This function filters the buffer text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; using a function specified by the variable &lt;code&gt;filter-buffer-substring-function&lt;/code&gt; , and returns the result.</target>
        </trans-unit>
        <trans-unit id="b1ce3659d48c5ee30fd0aae4621d63011d6dfa00" translate="yes" xml:space="preserve">
          <source>This function finds all meaningful symbols whose names contain a match for the apropos pattern &lt;var&gt;pattern&lt;/var&gt;. An apropos pattern is either a word to match, a space-separated list of words of which at least two must match, or a regular expression (if any special regular expression characters occur). A symbol is meaningful if it has a definition as a function, variable, or face, or has properties.</source>
          <target state="translated">This function finds all meaningful symbols whose names contain a match for the apropos pattern &lt;var&gt;pattern&lt;/var&gt; . An apropos pattern is either a word to match, a space-separated list of words of which at least two must match, or a regular expression (if any special regular expression characters occur). A symbol is meaningful if it has a definition as a function, variable, or face, or has properties.</target>
        </trans-unit>
        <trans-unit id="06f18ec830cc427a92c47e15b09e62f2ae1e7f77" translate="yes" xml:space="preserve">
          <source>This function finds and opens a file of Lisp code, evaluates all the forms in it, and closes the file.</source>
          <target state="translated">This function finds and opens a file of Lisp code, evaluates all the forms in it, and closes the file.</target>
        </trans-unit>
        <trans-unit id="52ab5d514f36c6011f89f3cb0b3e4ac1a06d82da" translate="yes" xml:space="preserve">
          <source>This function finds the closest color to &lt;var&gt;color&lt;/var&gt; among the known colors supported for &lt;var&gt;display&lt;/var&gt; and returns its index (an integer). If the name &lt;var&gt;color&lt;/var&gt; is not defined, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function finds the closest color to &lt;var&gt;color&lt;/var&gt; among the known colors supported for &lt;var&gt;display&lt;/var&gt; and returns its index (an integer). If the name &lt;var&gt;color&lt;/var&gt; is not defined, the value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aefec23f42782f8de304c8a670e123447b49f532" translate="yes" xml:space="preserve">
          <source>This function finds the closest color, among the known colors supported for &lt;var&gt;display&lt;/var&gt;, to that described by the rgb value &lt;var&gt;rgb&lt;/var&gt; (a list of color values). The return value is an element of &lt;code&gt;tty-color-alist&lt;/code&gt;.</source>
          <target state="translated">This function finds the closest color, among the known colors supported for &lt;var&gt;display&lt;/var&gt; , to that described by the rgb value &lt;var&gt;rgb&lt;/var&gt; (a list of color values). The return value is an element of &lt;code&gt;tty-color-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="126e67dcc3a58836f3fb3818f0434d423a4d5d28" translate="yes" xml:space="preserve">
          <source>This function first tries to reuse a window in the specified direction that already shows &lt;var&gt;buffer&lt;/var&gt;. If no such window exists, it tries to split the reference window in order to produce a new window in the specified direction. If this fails as well, it will try to display &lt;var&gt;buffer&lt;/var&gt; in an existing window in the specified direction. In either case, the window chosen will appear on the side of the reference window specified by the &lt;code&gt;direction&lt;/code&gt; entry, sharing at least one edge with the reference window.</source>
          <target state="translated">This function first tries to reuse a window in the specified direction that already shows &lt;var&gt;buffer&lt;/var&gt; . If no such window exists, it tries to split the reference window in order to produce a new window in the specified direction. If this fails as well, it will try to display &lt;var&gt;buffer&lt;/var&gt; in an existing window in the specified direction. In either case, the window chosen will appear on the side of the reference window specified by the &lt;code&gt;direction&lt;/code&gt; entry, sharing at least one edge with the reference window.</target>
        </trans-unit>
        <trans-unit id="2ec14a666c7c2161444c9a00ac8eb855d19a536d" translate="yes" xml:space="preserve">
          <source>This function flushes the cache used by &lt;code&gt;syntax-ppss&lt;/code&gt;, starting at position &lt;var&gt;beg&lt;/var&gt;. The remaining arguments, &lt;var&gt;ignored-args&lt;/var&gt;, are ignored; this function accepts them so that it can be directly used on hooks such as &lt;code&gt;before-change-functions&lt;/code&gt; (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;).</source>
          <target state="translated">This function flushes the cache used by &lt;code&gt;syntax-ppss&lt;/code&gt; , starting at position &lt;var&gt;beg&lt;/var&gt; . The remaining arguments, &lt;var&gt;ignored-args&lt;/var&gt; , are ignored; this function accepts them so that it can be directly used on hooks such as &lt;code&gt;before-change-functions&lt;/code&gt; (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="145dfafb7285ee17c96d79d8d5f412547326b463" translate="yes" xml:space="preserve">
          <source>This function follows symbolic links, except that it does not follow a dangling symbolic link to create &lt;var&gt;newname&lt;/var&gt;.</source>
          <target state="translated">This function follows symbolic links, except that it does not follow a dangling symbolic link to create &lt;var&gt;newname&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2b733a0daf20e408d3ae9ecdf12b55c259daf58e" translate="yes" xml:space="preserve">
          <source>This function follows symbolic links, starting with &lt;var&gt;filename&lt;/var&gt;, until it finds a file name which is not the name of a symbolic link. Then it returns that file name. This function does &lt;em&gt;not&lt;/em&gt; follow symbolic links at the level of parent directories.</source>
          <target state="translated">This function follows symbolic links, starting with &lt;var&gt;filename&lt;/var&gt; , until it finds a file name which is not the name of a symbolic link. Then it returns that file name. This function does &lt;em&gt;not&lt;/em&gt; follow symbolic links at the level of parent directories.</target>
        </trans-unit>
        <trans-unit id="d521bd6d7312bc2960128c940ad2462dfd8657b8" translate="yes" xml:space="preserve">
          <source>This function forces Emacs to update the current buffer&amp;rsquo;s mode line and header line, based on the latest values of all relevant variables, during its next redisplay cycle. If the optional argument &lt;var&gt;all&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it forces an update for all mode lines and header lines.</source>
          <target state="translated">This function forces Emacs to update the current buffer&amp;rsquo;s mode line and header line, based on the latest values of all relevant variables, during its next redisplay cycle. If the optional argument &lt;var&gt;all&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it forces an update for all mode lines and header lines.</target>
        </trans-unit>
        <trans-unit id="627dde0e52cce75b7b6423bad4a7f073cc5543a2" translate="yes" xml:space="preserve">
          <source>This function forces some or all windows to be updated the next time Emacs does a redisplay. If &lt;var&gt;object&lt;/var&gt; is a window, that window is to be updated. If &lt;var&gt;object&lt;/var&gt; is a buffer or buffer name, all windows displaying that buffer are to be updated. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), all windows are to be updated.</source>
          <target state="translated">This function forces some or all windows to be updated the next time Emacs does a redisplay. If &lt;var&gt;object&lt;/var&gt; is a window, that window is to be updated. If &lt;var&gt;object&lt;/var&gt; is a buffer or buffer name, all windows displaying that buffer are to be updated. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), all windows are to be updated.</target>
        </trans-unit>
        <trans-unit id="631c6a562e73565da1b4ba925ab1116a5e4ded8f" translate="yes" xml:space="preserve">
          <source>This function formats a line of text according to &lt;var&gt;format&lt;/var&gt; as if it were generating the mode line for &lt;var&gt;window&lt;/var&gt;, but it also returns the text as a string. The argument &lt;var&gt;window&lt;/var&gt; defaults to the selected window. If &lt;var&gt;buffer&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all the information used is taken from &lt;var&gt;buffer&lt;/var&gt;; by default, it comes from &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">This function formats a line of text according to &lt;var&gt;format&lt;/var&gt; as if it were generating the mode line for &lt;var&gt;window&lt;/var&gt; , but it also returns the text as a string. The argument &lt;var&gt;window&lt;/var&gt; defaults to the selected window. If &lt;var&gt;buffer&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , all the information used is taken from &lt;var&gt;buffer&lt;/var&gt; ; by default, it comes from &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s buffer.</target>
        </trans-unit>
        <trans-unit id="5c1d26a06eb0118065695dc1608bb7e53d58f4ce" translate="yes" xml:space="preserve">
          <source>This function frees the &lt;var&gt;global_value&lt;/var&gt; previously created by &lt;code&gt;make_global_ref&lt;/code&gt;. The &lt;var&gt;global_value&lt;/var&gt; is no longer valid after the call. Your module code should pair each call to &lt;code&gt;make_global_ref&lt;/code&gt; with the corresponding &lt;code&gt;free_global_ref&lt;/code&gt;.</source>
          <target state="translated">This function frees the &lt;var&gt;global_value&lt;/var&gt; previously created by &lt;code&gt;make_global_ref&lt;/code&gt; . The &lt;var&gt;global_value&lt;/var&gt; is no longer valid after the call. Your module code should pair each call to &lt;code&gt;make_global_ref&lt;/code&gt; with the corresponding &lt;code&gt;free_global_ref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9967ab1aff10124dd6d3f15f37e5280e738e2e1e" translate="yes" xml:space="preserve">
          <source>This function generalizes &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) and &lt;code&gt;nth&lt;/code&gt; (see &lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;Definition of nth&lt;/a&gt;).</source>
          <target state="translated">This function generalizes &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) and &lt;code&gt;nth&lt;/code&gt; (see &lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;Definition of nth&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="bdb6bfb9e7c01026a181275c02e683d0137bf5c4" translate="yes" xml:space="preserve">
          <source>This function generates a string that might be a unique file name. The name starts with &lt;var&gt;base-name&lt;/var&gt;, and has several random characters appended to it, which are different in each Emacs job. It is like &lt;code&gt;make-temp-file&lt;/code&gt; except that (i) it just constructs a name and does not create a file, (ii) &lt;var&gt;base-name&lt;/var&gt; should be an absolute file name that is not magic, and (iii) if the returned file name is magic, it might name an existing file. See &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;.</source>
          <target state="translated">This function generates a string that might be a unique file name. The name starts with &lt;var&gt;base-name&lt;/var&gt; , and has several random characters appended to it, which are different in each Emacs job. It is like &lt;code&gt;make-temp-file&lt;/code&gt; except that (i) it just constructs a name and does not create a file, (ii) &lt;var&gt;base-name&lt;/var&gt; should be an absolute file name that is not magic, and (iii) if the returned file name is magic, it might name an existing file. See &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="10a4ca00e488bfcfae566973ba99df04a0432866" translate="yes" xml:space="preserve">
          <source>This function gives &lt;var&gt;frame&lt;/var&gt; the focus of the X server without necessarily raising it. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; means use the selected frame. Under X, the optional argument &lt;var&gt;noactivate&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to avoid making &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window-system window the &amp;ldquo;active&amp;rdquo; window which should insist a bit more on avoiding to raise &lt;var&gt;frame&lt;/var&gt; above other frames.</source>
          <target state="translated">This function gives &lt;var&gt;frame&lt;/var&gt; the focus of the X server without necessarily raising it. &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; means use the selected frame. Under X, the optional argument &lt;var&gt;noactivate&lt;/var&gt; , if non- &lt;code&gt;nil&lt;/code&gt; , means to avoid making &lt;var&gt;frame&lt;/var&gt; &amp;rsquo;s window-system window the &amp;ldquo;active&amp;rdquo; window which should insist a bit more on avoiding to raise &lt;var&gt;frame&lt;/var&gt; above other frames.</target>
        </trans-unit>
        <trans-unit id="d83546e6b886b63d4101c6a9727565c860c7d5df" translate="yes" xml:space="preserve">
          <source>This function gives &lt;var&gt;process&lt;/var&gt; the filter function &lt;var&gt;filter&lt;/var&gt;. If &lt;var&gt;filter&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it gives the process the default filter, which inserts the process output into the process buffer.</source>
          <target state="translated">This function gives &lt;var&gt;process&lt;/var&gt; the filter function &lt;var&gt;filter&lt;/var&gt; . If &lt;var&gt;filter&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it gives the process the default filter, which inserts the process output into the process buffer.</target>
        </trans-unit>
        <trans-unit id="4d10715e82bf9d4065c1184eb382f32735a25298" translate="yes" xml:space="preserve">
          <source>This function gives each of the first ten characters in the buffer a &lt;code&gt;display&lt;/code&gt; property which is a string &lt;code&gt;&quot;A&quot;&lt;/code&gt;, but they don&amp;rsquo;t all get the same string object. The first two characters get the same string object, so they are replaced with one &amp;lsquo;</source>
          <target state="translated">This function gives each of the first ten characters in the buffer a &lt;code&gt;display&lt;/code&gt; property which is a string &lt;code&gt;&quot;A&quot;&lt;/code&gt; , but they don&amp;rsquo;t all get the same string object. The first two characters get the same string object, so they are replaced with one &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c29ab035af64bec706f9a7de02fb7370526d711b" translate="yes" xml:space="preserve">
          <source>This function gives the file named &lt;var&gt;oldname&lt;/var&gt; the additional name &lt;var&gt;newname&lt;/var&gt;. This means that &lt;var&gt;newname&lt;/var&gt; becomes a new hard link to &lt;var&gt;oldname&lt;/var&gt;.</source>
          <target state="translated">This function gives the file named &lt;var&gt;oldname&lt;/var&gt; the additional name &lt;var&gt;newname&lt;/var&gt; . This means that &lt;var&gt;newname&lt;/var&gt; becomes a new hard link to &lt;var&gt;oldname&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="08f1c4225edbb83f8b2d8a141bbd8b0f58d2314a" translate="yes" xml:space="preserve">
          <source>This function handles &lt;var&gt;window&lt;/var&gt; and its buffer after quitting. The optional argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The function&amp;rsquo;s behavior is determined by the four elements of the list specified by &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s &lt;code&gt;quit-restore&lt;/code&gt; parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;).</source>
          <target state="translated">This function handles &lt;var&gt;window&lt;/var&gt; and its buffer after quitting. The optional argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The function&amp;rsquo;s behavior is determined by the four elements of the list specified by &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s &lt;code&gt;quit-restore&lt;/code&gt; parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d2151a9232fdf21ae1c1873f59be26bf18ee384d" translate="yes" xml:space="preserve">
          <source>This function handles a switch-frame event, which Emacs generates for itself upon focus notification or under various other circumstances involving an input event arriving at a different frame from the last event. Do not invoke this function yourself.</source>
          <target state="translated">This function handles a switch-frame event, which Emacs generates for itself upon focus notification or under various other circumstances involving an input event arriving at a different frame from the last event. Do not invoke this function yourself.</target>
        </trans-unit>
        <trans-unit id="68bda77014790d5c08c7e44081766ff53580d935" translate="yes" xml:space="preserve">
          <source>This function handles focus-in events from window systems and terminals that support explicit focus notifications. It updates the per-frame focus flags that &lt;code&gt;frame-focus-state&lt;/code&gt; queries and calls &lt;code&gt;after-focus-change-function&lt;/code&gt;. In addition, it generates a &lt;code&gt;switch-frame&lt;/code&gt; event in order to switch the Emacs notion of the selected frame to the frame most recently focused in some terminal. It&amp;rsquo;s important to note that this switching of the Emacs selected frame to the most recently focused frame does not mean that other frames do not continue to have the focus in their respective terminals. Do not invoke this function yourself: instead, attach logic to &lt;code&gt;after-focus-change-function&lt;/code&gt;.</source>
          <target state="translated">This function handles focus-in events from window systems and terminals that support explicit focus notifications. It updates the per-frame focus flags that &lt;code&gt;frame-focus-state&lt;/code&gt; queries and calls &lt;code&gt;after-focus-change-function&lt;/code&gt; . In addition, it generates a &lt;code&gt;switch-frame&lt;/code&gt; event in order to switch the Emacs notion of the selected frame to the frame most recently focused in some terminal. It&amp;rsquo;s important to note that this switching of the Emacs selected frame to the most recently focused frame does not mean that other frames do not continue to have the focus in their respective terminals. Do not invoke this function yourself: instead, attach logic to &lt;code&gt;after-focus-change-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d882d4018b2219a2d03648adeb8ed02390f2742" translate="yes" xml:space="preserve">
          <source>This function has a side effect: it adds a buffer-local entry to &lt;code&gt;before-change-functions&lt;/code&gt; (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;) for &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; (see below). This entry keeps the cache consistent as the buffer is modified. However, the cache might not be updated if &lt;code&gt;syntax-ppss&lt;/code&gt; is called while &lt;code&gt;before-change-functions&lt;/code&gt; is temporarily let-bound, or if the buffer is modified without running the hook, such as when using &lt;code&gt;inhibit-modification-hooks&lt;/code&gt;. In those cases, it is necessary to call &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; explicitly.</source>
          <target state="translated">This function has a side effect: it adds a buffer-local entry to &lt;code&gt;before-change-functions&lt;/code&gt; (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;) for &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; (see below). This entry keeps the cache consistent as the buffer is modified. However, the cache might not be updated if &lt;code&gt;syntax-ppss&lt;/code&gt; is called while &lt;code&gt;before-change-functions&lt;/code&gt; is temporarily let-bound, or if the buffer is modified without running the hook, such as when using &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; . In those cases, it is necessary to call &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; explicitly.</target>
        </trans-unit>
        <trans-unit id="e0824cfd1439ba10d6d88aef3812eb45de815dfa" translate="yes" xml:space="preserve">
          <source>This function has no effect on text terminal frames.</source>
          <target state="translated">This function has no effect on text terminal frames.</target>
        </trans-unit>
        <trans-unit id="8978ba472d552e252a780efbc46da901cab70ba5" translate="yes" xml:space="preserve">
          <source>This function iconifies frame &lt;var&gt;frame&lt;/var&gt;. If you omit &lt;var&gt;frame&lt;/var&gt;, it iconifies the selected frame. This usually makes all child frames of &lt;var&gt;frame&lt;/var&gt; (and their descendants) invisible (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</source>
          <target state="translated">This function iconifies frame &lt;var&gt;frame&lt;/var&gt; . If you omit &lt;var&gt;frame&lt;/var&gt; , it iconifies the selected frame. This usually makes all child frames of &lt;var&gt;frame&lt;/var&gt; (and their descendants) invisible (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="819084b34d6a057fb40328da89e4b33628ad0574" translate="yes" xml:space="preserve">
          <source>This function ignores any &lt;var&gt;arguments&lt;/var&gt; and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function ignores any &lt;var&gt;arguments&lt;/var&gt; and returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b526cac4e06399e3f12085e626ad1b398f107b5f" translate="yes" xml:space="preserve">
          <source>This function ignores case when comparing characters if &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. It always ignores text properties.</source>
          <target state="translated">This function ignores case when comparing characters if &lt;code&gt;case-fold-search&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; . It always ignores text properties.</target>
        </trans-unit>
        <trans-unit id="3ff1e70c4605f3fdd4577da745b091c1b7ed1b59" translate="yes" xml:space="preserve">
          <source>This function implements the heart of Adaptive Fill mode; it chooses a fill prefix based on the text between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;, typically the start and end of a paragraph. It does this by looking at the first two lines of the paragraph, based on the variables described below.</source>
          <target state="translated">This function implements the heart of Adaptive Fill mode; it chooses a fill prefix based on the text between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; , typically the start and end of a paragraph. It does this by looking at the first two lines of the paragraph, based on the variables described below.</target>
        </trans-unit>
        <trans-unit id="56104aa49bec3784f8629173be5e71912c5ba94d" translate="yes" xml:space="preserve">
          <source>This function implements the shift-selection behavior of point-motion commands. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;Shift Selection&lt;/a&gt; in</source>
          <target state="translated">This function implements the shift-selection behavior of point-motion commands. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;Shift Selection&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="1f8328d7c07c5071cd64b7f75d2177e0d719a28e" translate="yes" xml:space="preserve">
          <source>This function implements the shift-selection behavior of point-motion commands. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;Shift Selection&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7888fb2a45f81d5b0d9a7609a6679bc2016b1b9d" translate="yes" xml:space="preserve">
          <source>This function indents all lines starting between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive) sideways by &lt;var&gt;count&lt;/var&gt; columns. This preserves the shape of the affected region, moving it as a rigid unit.</source>
          <target state="translated">This function indents all lines starting between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive) sideways by &lt;var&gt;count&lt;/var&gt; columns. This preserves the shape of the affected region, moving it as a rigid unit.</target>
        </trans-unit>
        <trans-unit id="7e8ab43b3aa351ccfdad28bf018028ca424156fb" translate="yes" xml:space="preserve">
          <source>This function indents from point with tabs and spaces until &lt;var&gt;column&lt;/var&gt; is reached. If &lt;var&gt;minimum&lt;/var&gt; is specified and non-&lt;code&gt;nil&lt;/code&gt;, then at least that many spaces are inserted even if this requires going beyond &lt;var&gt;column&lt;/var&gt;. Otherwise the function does nothing if point is already beyond &lt;var&gt;column&lt;/var&gt;. The value is the column at which the inserted indentation ends.</source>
          <target state="translated">This function indents from point with tabs and spaces until &lt;var&gt;column&lt;/var&gt; is reached. If &lt;var&gt;minimum&lt;/var&gt; is specified and non- &lt;code&gt;nil&lt;/code&gt; , then at least that many spaces are inserted even if this requires going beyond &lt;var&gt;column&lt;/var&gt; . Otherwise the function does nothing if point is already beyond &lt;var&gt;column&lt;/var&gt; . The value is the column at which the inserted indentation ends.</target>
        </trans-unit>
        <trans-unit id="6e5af5a47567020e880c204104c9e136106a4f97" translate="yes" xml:space="preserve">
          <source>This function initializes Emacs&amp;rsquo; internal record of which packages are installed, and then calls &lt;code&gt;package-activate-all&lt;/code&gt;.</source>
          <target state="translated">This function initializes Emacs&amp;rsquo; internal record of which packages are installed, and then calls &lt;code&gt;package-activate-all&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cad7eeaac99e5f48c9120bc2c6873ca39e3419e" translate="yes" xml:space="preserve">
          <source>This function inserts (in the current buffer) a directory listing for directory &lt;var&gt;file&lt;/var&gt;, formatted with &lt;code&gt;ls&lt;/code&gt; according to &lt;var&gt;switches&lt;/var&gt;. It leaves point after the inserted text. &lt;var&gt;switches&lt;/var&gt; may be a string of options, or a list of strings representing individual options.</source>
          <target state="translated">This function inserts (in the current buffer) a directory listing for directory &lt;var&gt;file&lt;/var&gt; , formatted with &lt;code&gt;ls&lt;/code&gt; according to &lt;var&gt;switches&lt;/var&gt; . It leaves point after the inserted text. &lt;var&gt;switches&lt;/var&gt; may be a string of options, or a list of strings representing individual options.</target>
        </trans-unit>
        <trans-unit id="cf67375be4193f2e648d51a925b81574880812a8" translate="yes" xml:space="preserve">
          <source>This function inserts &lt;var&gt;image&lt;/var&gt; in the current buffer at point, like &lt;code&gt;insert-image&lt;/code&gt;, but splits the image into &lt;var&gt;rows&lt;/var&gt;x&lt;var&gt;cols&lt;/var&gt; equally sized slices.</source>
          <target state="translated">This function inserts &lt;var&gt;image&lt;/var&gt; in the current buffer at point, like &lt;code&gt;insert-image&lt;/code&gt; , but splits the image into &lt;var&gt;rows&lt;/var&gt; x &lt;var&gt;cols&lt;/var&gt; equally sized slices.</target>
        </trans-unit>
        <trans-unit id="3f12e33fc829eabc610e4aae6ef8381c6855eb8e" translate="yes" xml:space="preserve">
          <source>This function inserts &lt;var&gt;image&lt;/var&gt; in the current buffer at point. The value &lt;var&gt;image&lt;/var&gt; should be an image descriptor; it could be a value returned by &lt;code&gt;create-image&lt;/code&gt;, or the value of a symbol defined with &lt;code&gt;defimage&lt;/code&gt;. The argument &lt;var&gt;string&lt;/var&gt; specifies the text to put in the buffer to hold the image. If it is omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;insert-image&lt;/code&gt; uses &lt;code&gt;&quot; &quot;&lt;/code&gt; by default.</source>
          <target state="translated">This function inserts &lt;var&gt;image&lt;/var&gt; in the current buffer at point. The value &lt;var&gt;image&lt;/var&gt; should be an image descriptor; it could be a value returned by &lt;code&gt;create-image&lt;/code&gt; , or the value of a symbol defined with &lt;code&gt;defimage&lt;/code&gt; . The argument &lt;var&gt;string&lt;/var&gt; specifies the text to put in the buffer to hold the image. If it is omitted or &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;insert-image&lt;/code&gt; uses &lt;code&gt;&quot; &quot;&lt;/code&gt; by default.</target>
        </trans-unit>
        <trans-unit id="f37597d9ce47cd322fce96c165e2e910704afcc6" translate="yes" xml:space="preserve">
          <source>This function inserts a newline, then indents the new line (the one following the newline just inserted) according to the major mode. It does indentation by calling &lt;code&gt;indent-according-to-mode&lt;/code&gt;.</source>
          <target state="translated">This function inserts a newline, then indents the new line (the one following the newline just inserted) according to the major mode. It does indentation by calling &lt;code&gt;indent-according-to-mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec603de6186549ffda747dc5bc0a68a8a0ec2ecf" translate="yes" xml:space="preserve">
          <source>This function inserts a portion of buffer &lt;var&gt;from-buffer-or-name&lt;/var&gt; into the current buffer before point. The text inserted is the region between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive). (These arguments default to the beginning and end of the accessible portion of that buffer.) This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function inserts a portion of buffer &lt;var&gt;from-buffer-or-name&lt;/var&gt; into the current buffer before point. The text inserted is the region between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive). (These arguments default to the beginning and end of the accessible portion of that buffer.) This function returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f8569bfa77023e495fbcc0b00de1466ebe0c796" translate="yes" xml:space="preserve">
          <source>This function inserts before point a description of the abbrev table named &lt;var&gt;name&lt;/var&gt;. The argument &lt;var&gt;name&lt;/var&gt; is a symbol whose value is an abbrev table.</source>
          <target state="translated">This function inserts before point a description of the abbrev table named &lt;var&gt;name&lt;/var&gt; . The argument &lt;var&gt;name&lt;/var&gt; is a symbol whose value is an abbrev table.</target>
        </trans-unit>
        <trans-unit id="9eee79c4dc87a1776541c414270042d0fecc2cd7" translate="yes" xml:space="preserve">
          <source>This function inserts text in the trace buffer. It computes the text with &lt;code&gt;(apply 'format &lt;var&gt;format-string&lt;/var&gt; &lt;var&gt;format-args&lt;/var&gt;)&lt;/code&gt;. It also appends a newline to separate entries.</source>
          <target state="translated">This function inserts text in the trace buffer. It computes the text with &lt;code&gt;(apply 'format &lt;var&gt;format-string&lt;/var&gt; &lt;var&gt;format-args&lt;/var&gt;)&lt;/code&gt; . It also appends a newline to separate entries.</target>
        </trans-unit>
        <trans-unit id="67d5561e47f40500a3bf932aad227a47e1c5d051" translate="yes" xml:space="preserve">
          <source>This function inserts the JSON representation of &lt;var&gt;object&lt;/var&gt; into the current buffer before point. The argument &lt;var&gt;args&lt;/var&gt; are interpreted as in &lt;code&gt;json-parse-string&lt;/code&gt;.</source>
          <target state="translated">This function inserts the JSON representation of &lt;var&gt;object&lt;/var&gt; into the current buffer before point. The argument &lt;var&gt;args&lt;/var&gt; are interpreted as in &lt;code&gt;json-parse-string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="063fd075d9fb14b62f88b1f037469a50fdd5bd44" translate="yes" xml:space="preserve">
          <source>This function inserts the abbrev expansion of &lt;code&gt;abbrev&lt;/code&gt;, replacing the text between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. If &lt;code&gt;start&lt;/code&gt; is omitted, it defaults to point. &lt;code&gt;name&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be the name by which this abbrev was found (a string); it is used to figure out whether to adjust the capitalization of the expansion. The function returns &lt;code&gt;abbrev&lt;/code&gt; if the abbrev was successfully inserted, otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function inserts the abbrev expansion of &lt;code&gt;abbrev&lt;/code&gt; , replacing the text between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; . If &lt;code&gt;start&lt;/code&gt; is omitted, it defaults to point. &lt;code&gt;name&lt;/code&gt; , if non- &lt;code&gt;nil&lt;/code&gt; , should be the name by which this abbrev was found (a string); it is used to figure out whether to adjust the capitalization of the expansion. The function returns &lt;code&gt;abbrev&lt;/code&gt; if the abbrev was successfully inserted, otherwise it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0d7c9b6bc1e9c789fb65d491e4b15e8e20a1e13" translate="yes" xml:space="preserve">
          <source>This function inserts the completion text directly into the current buffer. Unlike &lt;code&gt;completing-read&lt;/code&gt; (see &lt;a href=&quot;minibuffer-completion#Minibuffer-Completion&quot;&gt;Minibuffer Completion&lt;/a&gt;), it does not activate the minibuffer.</source>
          <target state="translated">This function inserts the completion text directly into the current buffer. Unlike &lt;code&gt;completing-read&lt;/code&gt; (see &lt;a href=&quot;minibuffer-completion#Minibuffer-Completion&quot;&gt;Minibuffer Completion&lt;/a&gt;), it does not activate the minibuffer.</target>
        </trans-unit>
        <trans-unit id="cbd029046f4f5e891a3e6551188d94e92adba88a" translate="yes" xml:space="preserve">
          <source>This function inserts the contents of file &lt;var&gt;filename&lt;/var&gt; into the current buffer after point. It returns a list of the absolute file name and the length of the data inserted. An error is signaled if &lt;var&gt;filename&lt;/var&gt; is not the name of a file that can be read.</source>
          <target state="translated">This function inserts the contents of file &lt;var&gt;filename&lt;/var&gt; into the current buffer after point. It returns a list of the absolute file name and the length of the data inserted. An error is signaled if &lt;var&gt;filename&lt;/var&gt; is not the name of a file that can be read.</target>
        </trans-unit>
        <trans-unit id="584aa879d48490b94795a860827124ea70cee88c" translate="yes" xml:space="preserve">
          <source>This function inserts the strings and/or characters &lt;var&gt;args&lt;/var&gt; into the current buffer, at point, moving point forward. An error is signaled unless all &lt;var&gt;args&lt;/var&gt; are either strings or characters. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function inserts the strings and/or characters &lt;var&gt;args&lt;/var&gt; into the current buffer, at point, moving point forward. An error is signaled unless all &lt;var&gt;args&lt;/var&gt; are either strings or characters. The value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b7522c0a5c898aa80cefe50930dd3f14828acc8" translate="yes" xml:space="preserve">
          <source>This function inserts the strings and/or characters &lt;var&gt;args&lt;/var&gt; into the current buffer, at point, moving point forward. In other words, it inserts the text before point. An error is signaled unless all &lt;var&gt;args&lt;/var&gt; are either strings or characters. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function inserts the strings and/or characters &lt;var&gt;args&lt;/var&gt; into the current buffer, at point, moving point forward. In other words, it inserts the text before point. An error is signaled unless all &lt;var&gt;args&lt;/var&gt; are either strings or characters. The value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="708bdcea7a657a76dfc1148194cc343f856fc464" translate="yes" xml:space="preserve">
          <source>This function installs the &lt;code&gt;window-side&lt;/code&gt; and &lt;code&gt;window-slot&lt;/code&gt; parameters (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;) and makes them persistent. It does not install any other window parameters unless they have been explicitly provided via a &lt;code&gt;window-parameters&lt;/code&gt; entry in &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">This function installs the &lt;code&gt;window-side&lt;/code&gt; and &lt;code&gt;window-slot&lt;/code&gt; parameters (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;) and makes them persistent. It does not install any other window parameters unless they have been explicitly provided via a &lt;code&gt;window-parameters&lt;/code&gt; entry in &lt;var&gt;alist&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6fee14f1a8caebbb465e4a29bb4cf774a5187f13" translate="yes" xml:space="preserve">
          <source>This function installs the face customizations specified by &lt;var&gt;args&lt;/var&gt;. Each argument in &lt;var&gt;args&lt;/var&gt; should have the form</source>
          <target state="translated">This function installs the face customizations specified by &lt;var&gt;args&lt;/var&gt; . Each argument in &lt;var&gt;args&lt;/var&gt; should have the form</target>
        </trans-unit>
        <trans-unit id="0679cb2cb6aee8e88eb2f30f3eaf18d8a3811ee7" translate="yes" xml:space="preserve">
          <source>This function installs the variable customizations specified by &lt;var&gt;args&lt;/var&gt;. Each argument in &lt;var&gt;args&lt;/var&gt; should have the form</source>
          <target state="translated">This function installs the variable customizations specified by &lt;var&gt;args&lt;/var&gt; . Each argument in &lt;var&gt;args&lt;/var&gt; should have the form</target>
        </trans-unit>
        <trans-unit id="7a26fbb204d7cd49853908cf19053d3989b57233" translate="yes" xml:space="preserve">
          <source>This function interrupts the process &lt;var&gt;process&lt;/var&gt; by sending the signal &lt;code&gt;SIGINT&lt;/code&gt;. Outside of Emacs, typing the interrupt character (normally</source>
          <target state="translated">This function interrupts the process &lt;var&gt;process&lt;/var&gt; by sending the signal &lt;code&gt;SIGINT&lt;/code&gt; . Outside of Emacs, typing the interrupt character (normally</target>
        </trans-unit>
        <trans-unit id="26d7c0d36ec035a3fbfa067bd7a4360e7a8f4a04" translate="yes" xml:space="preserve">
          <source>This function invokes the editor command loop. It is called automatically by the initialization of Emacs, to let the user begin editing. When called from a Lisp program, it enters a recursive editing level.</source>
          <target state="translated">This function invokes the editor command loop. It is called automatically by the initialization of Emacs, to let the user begin editing. When called from a Lisp program, it enters a recursive editing level.</target>
        </trans-unit>
        <trans-unit id="7a5b2cbc925055c1cee0a2d751830da90f69f157" translate="yes" xml:space="preserve">
          <source>This function is a command because it is sometimes useful to kill one buffer-local variable interactively, just as it is useful to create buffer-local variables interactively.</source>
          <target state="translated">This function is a command because it is sometimes useful to kill one buffer-local variable interactively, just as it is useful to create buffer-local variables interactively.</target>
        </trans-unit>
        <trans-unit id="4345e07ad24698651ab8bd29361bfa9c40014137" translate="yes" xml:space="preserve">
          <source>This function is a convenience for defining tool bar items which are consistent with existing menu bar bindings. The binding of &lt;var&gt;command&lt;/var&gt; is looked up in the menu bar in &lt;var&gt;map&lt;/var&gt; (default &lt;code&gt;global-map&lt;/code&gt;) and modified to add an image specification for &lt;var&gt;icon&lt;/var&gt;, which is found in the same way as by &lt;code&gt;tool-bar-add-item&lt;/code&gt;. The resulting binding is then placed in &lt;code&gt;tool-bar-map&lt;/code&gt;, so use this function only for global tool bar items.</source>
          <target state="translated">This function is a convenience for defining tool bar items which are consistent with existing menu bar bindings. The binding of &lt;var&gt;command&lt;/var&gt; is looked up in the menu bar in &lt;var&gt;map&lt;/var&gt; (default &lt;code&gt;global-map&lt;/code&gt; ) and modified to add an image specification for &lt;var&gt;icon&lt;/var&gt; , which is found in the same way as by &lt;code&gt;tool-bar-add-item&lt;/code&gt; . The resulting binding is then placed in &lt;code&gt;tool-bar-map&lt;/code&gt; , so use this function only for global tool bar items.</target>
        </trans-unit>
        <trans-unit id="8bdeebd0cf82435f8595bcd49e691535c6ceda3d" translate="yes" xml:space="preserve">
          <source>This function is a convenient way to write a function that can act as a programmed completion function. The argument &lt;var&gt;function&lt;/var&gt; should be a function that takes one argument, a string, and returns a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) containing all the possible completions. The table returned by &lt;var&gt;function&lt;/var&gt; can also include elements that don&amp;rsquo;t match the string argument; they are automatically filtered out by &lt;code&gt;completion-table-dynamic&lt;/code&gt;. In particular, &lt;var&gt;function&lt;/var&gt; can ignore its argument and return a full list of all possible completions. You can think of &lt;code&gt;completion-table-dynamic&lt;/code&gt; as a transducer between &lt;var&gt;function&lt;/var&gt; and the interface for programmed completion functions.</source>
          <target state="translated">This function is a convenient way to write a function that can act as a programmed completion function. The argument &lt;var&gt;function&lt;/var&gt; should be a function that takes one argument, a string, and returns a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) containing all the possible completions. The table returned by &lt;var&gt;function&lt;/var&gt; can also include elements that don&amp;rsquo;t match the string argument; they are automatically filtered out by &lt;code&gt;completion-table-dynamic&lt;/code&gt; . In particular, &lt;var&gt;function&lt;/var&gt; can ignore its argument and return a full list of all possible completions. You can think of &lt;code&gt;completion-table-dynamic&lt;/code&gt; as a transducer between &lt;var&gt;function&lt;/var&gt; and the interface for programmed completion functions.</target>
        </trans-unit>
        <trans-unit id="f9e62fe26778ab8b324dae02dc669b5c03131d7a" translate="yes" xml:space="preserve">
          <source>This function is a higher-level wrapper around &lt;code&gt;make-process&lt;/code&gt;, exposing an interface that is similar to &lt;code&gt;call-process&lt;/code&gt;. It creates a new asynchronous subprocess and starts the specified &lt;var&gt;program&lt;/var&gt; running in it. It returns a process object that stands for the new subprocess in Lisp. The argument &lt;var&gt;name&lt;/var&gt; specifies the name for the process object; as with &lt;code&gt;make-process&lt;/code&gt;, it is modified if necessary to make it unique. The buffer &lt;var&gt;buffer-or-name&lt;/var&gt; is the buffer to associate with the process.</source>
          <target state="translated">This function is a higher-level wrapper around &lt;code&gt;make-process&lt;/code&gt; , exposing an interface that is similar to &lt;code&gt;call-process&lt;/code&gt; . It creates a new asynchronous subprocess and starts the specified &lt;var&gt;program&lt;/var&gt; running in it. It returns a process object that stands for the new subprocess in Lisp. The argument &lt;var&gt;name&lt;/var&gt; specifies the name for the process object; as with &lt;code&gt;make-process&lt;/code&gt; , it is modified if necessary to make it unique. The buffer &lt;var&gt;buffer-or-name&lt;/var&gt; is the buffer to associate with the process.</target>
        </trans-unit>
        <trans-unit id="87c24a259810f2a9c8967b6cbea8c3e38cbb138a" translate="yes" xml:space="preserve">
          <source>This function is a no-op except while Emacs is being built and dumped; it is usually called only in preloaded Lisp files.</source>
          <target state="translated">이 함수는 Emacs가 빌드되고 덤프되는 동안을 제외하고는 작동하지 않습니다. 일반적으로 미리로드 된 Lisp 파일에서만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3e98ac602e0883707f8e68b832a2d0011951bace" translate="yes" xml:space="preserve">
          <source>This function is a subroutine used by the &lt;code&gt;where-is&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;Help&lt;/a&gt; in</source>
          <target state="translated">이 기능에 의해 사용되는 서브 루틴 인 &lt;code&gt;where-is&lt;/code&gt; 명령 (참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;도움말&lt;/a&gt; 하여</target>
        </trans-unit>
        <trans-unit id="5f39c21e6ad61bd844cc5921f4ec3acbfbd45a53" translate="yes" xml:space="preserve">
          <source>This function is a subroutine used by the &lt;code&gt;where-is&lt;/code&gt; command (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;Help&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4915cab70ef66c95e1415061b6b1cde17e6672" translate="yes" xml:space="preserve">
          <source>This function is an alternative interface to playing a sound &lt;var&gt;file&lt;/var&gt; specifying an optional &lt;var&gt;volume&lt;/var&gt; and &lt;var&gt;device&lt;/var&gt;.</source>
          <target state="translated">이 기능은 옵션 &lt;var&gt;volume&lt;/var&gt; 및 &lt;var&gt;device&lt;/var&gt; 지정하는 사운드 &lt;var&gt;file&lt;/var&gt; 재생에 대한 대체 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="3ac23d83b963497cbe059c96fa42554054e29b9e" translate="yes" xml:space="preserve">
          <source>This function is an extension of the variable &lt;code&gt;exec-path&lt;/code&gt;. If &lt;code&gt;default-directory&lt;/code&gt; indicates a remote directory, this function returns a list of directories used for searching programs on the respective remote host. In case of a local &lt;code&gt;default-directory&lt;/code&gt;, the function returns just the value of the variable &lt;code&gt;exec-path&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;exec-path&lt;/code&gt; 변수의 확장입니다 . 경우 &lt;code&gt;default-directory&lt;/code&gt; 원격 디렉토리를 나타내고,이 함수는 각각의 원격 호스트에 프로그램을 검색에 사용되는 디렉토리의 목록을 반환합니다. 로컬 &lt;code&gt;default-directory&lt;/code&gt; 의 경우 함수는 &lt;code&gt;exec-path&lt;/code&gt; 변수의 값만 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c93d9db02b7cec3c928a415058246d9a2a5a2c55" translate="yes" xml:space="preserve">
          <source>This function is an extension point that code can use to receive a notification that focus has changed.</source>
          <target state="translated">이 함수는 코드가 포커스가 변경되었다는 알림을 수신하는 데 사용할 수있는 확장 점입니다.</target>
        </trans-unit>
        <trans-unit id="48d3516572eafc91dad7ddf1b2e60cc93e8f6a84" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;code&gt;re-search-forward&lt;/code&gt;, but they are not simple mirror images. &lt;code&gt;re-search-forward&lt;/code&gt; finds the match whose beginning is as close as possible to the starting point. If &lt;code&gt;re-search-backward&lt;/code&gt; were a perfect mirror image, it would find the match whose end is as close as possible. However, in fact it finds the match whose beginning is as close as possible (and yet ends before the starting point). The reason for this is that matching a regular expression at a given spot always works from beginning to end, and starts at a specified beginning position.</source>
          <target state="translated">이 기능은 &lt;code&gt;re-search-forward&lt;/code&gt; 와 유사 하지만 단순한 미러 이미지가 아닙니다. &lt;code&gt;re-search-forward&lt;/code&gt; 는 시작이 가능한 한 시작 지점에 가까운 일치 항목을 찾습니다. 경우 &lt;code&gt;re-search-backward&lt;/code&gt; 완벽한 거울 이미지했다, 누구의 끝 최대한 가까이있는 이상형을 찾을 것입니다. 그러나 실제로 시작이 가능한 한 가깝지만 시작 지점 이전에 끝나는 경기를 찾습니다. 그 이유는 지정된 지점에서 정규식을 일치시키는 것은 항상 처음부터 끝까지 작동하고 지정된 시작 위치에서 시작하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="983af4e8b196fdba72e0b5f1bf38de58a8ac5987" translate="yes" xml:space="preserve">
          <source>This function is called automatically by Emacs on the proper occasions. It exists so you can customize Emacs by redefining it. See the file</source>
          <target state="translated">이 함수는 적절한 경우 Emacs에 의해 자동으로 호출됩니다. Emacs를 재정 의하여 사용자 정의 할 수 있도록 존재합니다. 파일보기</target>
        </trans-unit>
        <trans-unit id="61bf93bcf6d1ce9aefe35e00d28b7c2e4c80c961" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;code&gt;minibuffer-completion-help&lt;/code&gt;. A common way to use it is together with &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;, like this:</source>
          <target state="translated">이 함수는 &lt;code&gt;minibuffer-completion-help&lt;/code&gt; 에 의해 호출됩니다 . 이를 사용하는 일반적인 방법은 다음과 같이 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 와 함께 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="09da3f2f6d0b651257183f94622f06ece28669b5" translate="yes" xml:space="preserve">
          <source>This function is called in &lt;code&gt;set-visited-file-name&lt;/code&gt; and other exceptional places where the usual test to avoid overwriting a changed file should not be done.</source>
          <target state="translated">이 함수는 &lt;code&gt;set-visited-file-name&lt;/code&gt; 및 변경된 파일 덮어 쓰기를 방지하기위한 일반적인 테스트를 수행하지 않아야하는 기타 예외적 인 장소에서 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="15a48bae8d64858380ffbddfcd132b36ac09fb80" translate="yes" xml:space="preserve">
          <source>This function is called when the user tries to modify &lt;var&gt;file&lt;/var&gt;, but it is locked by another user named &lt;var&gt;other-user&lt;/var&gt;. The default definition of this function asks the user to say what to do. The value this function returns determines what Emacs does next:</source>
          <target state="translated">이 함수는 사용자가 &lt;var&gt;file&lt;/var&gt; 을 수정하려고 하지만 &lt;var&gt;other-user&lt;/var&gt; 라는 다른 사용자가 잠근 경우 호출됩니다 . 이 기능의 기본 정의는 사용자에게 무엇을해야할지 묻습니다. 이 함수가 반환하는 값은 Emacs가 다음에 수행하는 작업을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bdb911abe39762c0b99df025cddc76387f46369c" translate="yes" xml:space="preserve">
          <source>This function is called with no arguments when Emacs notices that the set of focused frames may have changed. Code wanting to do something when frame focus changes should use &lt;code&gt;add-function&lt;/code&gt; to add a function to this one, and in this added function, re-scan the set of focused frames, calling &lt;code&gt;frame-focus-state&lt;/code&gt; to retrieve the last known focus state of each frame. Focus events are delivered asynchronously, and frame input focus according to an external system may not correspond to the notion of the Emacs selected frame. Multiple frames may appear to have input focus simultaneously due to focus event delivery differences, the presence of multiple Emacs terminals, and other factors, and code should be robust in the face of this situation.</source>
          <target state="translated">이 함수는 Emacs가 포커스가있는 프레임 세트가 변경되었을 수 있음을 감지 할 때 인수없이 호출됩니다. 프레임 포커스가 변경 될 때 작업을 수행하려는 코드는 &lt;code&gt;add-function&lt;/code&gt; 을 사용 하여이 함수에 함수 를 추가 해야 하며,이 추가 된 함수에서 포커스 된 프레임 집합을 다시 스캔하고 &lt;code&gt;frame-focus-state&lt;/code&gt; 를 호출 하여 마지막으로 알려진 포커스 상태를 검색해야합니다. 각 프레임의. 포커스 이벤트는 비동기 적으로 전달되며, 외부 시스템에 따른 프레임 입력 포커스는 Emacs가 선택한 프레임의 개념과 일치하지 않을 수 있습니다. 포커스 이벤트 전달 차이, 여러 Emacs 터미널의 존재 및 기타 요인으로 인해 여러 프레임에 동시에 입력 포커스가있는 것처럼 보일 수 있으며 코드는 이러한 상황에서 견고해야합니다.</target>
        </trans-unit>
        <trans-unit id="737b7ae12587ba7e2fa4ccdc45475c486e28fb0c" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;equal&lt;/code&gt; for comparing two strings (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;). In particular, the text properties of the two strings are ignored; use &lt;code&gt;equal-including-properties&lt;/code&gt; if you need to distinguish between strings that differ only in their text properties. However, unlike &lt;code&gt;equal&lt;/code&gt;, if either argument is not a string or symbol, &lt;code&gt;string=&lt;/code&gt; signals an error.</source>
          <target state="translated">이 함수는 두 문자열을 비교 하는 것과 동일합니다 ( &lt;code&gt;equal&lt;/code&gt; &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;조건 자&lt;/a&gt; 참조 ). 특히 두 문자열의 텍스트 속성은 무시됩니다. 텍스트 속성 만 다른 문자열을 구분해야하는 경우 &lt;code&gt;equal-including-properties&lt;/code&gt; 사용 합니다. 그러나 &lt;code&gt;equal&lt;/code&gt; 과 달리 인수가 문자열이나 기호가 아니면 &lt;code&gt;string=&lt;/code&gt; 은 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a77082b43454e1e2434525d9704fbe3a90c4cedf" translate="yes" xml:space="preserve">
          <source>This function is equivalent to using &lt;code&gt;define-key&lt;/code&gt; as follows:</source>
          <target state="translated">이 함수는 다음과 같이 &lt;code&gt;define-key&lt;/code&gt; 를 사용 하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e590ccd83bae1970e4701aab5c890c196f3ddcc8" translate="yes" xml:space="preserve">
          <source>This function is handy for scaling a position on a scroll bar into a buffer position. Here&amp;rsquo;s how to do that:</source>
          <target state="translated">이 기능은 스크롤 막대의 위치를 ​​버퍼 위치로 조정하는 데 편리합니다. 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="657a6abd663dca4ef403963daecef549bd387469" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;code&gt;get&lt;/code&gt;, except that if &lt;var&gt;symbol&lt;/var&gt; is the name of a function alias, it looks in the property list of the symbol naming the actual function. See &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;. If the optional argument &lt;var&gt;autoload&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;symbol&lt;/var&gt; is auto-loaded, this function will try to autoload it, since autoloading might set &lt;var&gt;property&lt;/var&gt; of &lt;var&gt;symbol&lt;/var&gt;. If &lt;var&gt;autoload&lt;/var&gt; is the symbol &lt;code&gt;macro&lt;/code&gt;, only try autoloading if &lt;var&gt;symbol&lt;/var&gt; is an auto-loaded macro.</source>
          <target state="translated">이 기능은 동일 &lt;code&gt;get&lt;/code&gt; 경우를 제외, &lt;var&gt;symbol&lt;/var&gt; 함수 별칭의 이름, 그것은 실제 기능을 명명 심볼의 속성 목록에서 찾습니다. &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;함수 정의를&lt;/a&gt; 참조하십시오 . 선택적 인수의 경우 &lt;var&gt;autoload&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , 그리고 &lt;var&gt;symbol&lt;/var&gt; 자동으로로드이며,이 기능은 자동 로딩 힘 세트 있기 때문에, 그것을 자동로드하려고합니다 &lt;var&gt;property&lt;/var&gt; 의 &lt;var&gt;symbol&lt;/var&gt; . 경우 &lt;var&gt;autoload&lt;/var&gt; 심볼 인 &lt;code&gt;macro&lt;/code&gt; , 경우에만 자동 로딩하려고 &lt;var&gt;symbol&lt;/var&gt; 자동으로로드 매크로입니다.</target>
        </trans-unit>
        <trans-unit id="a2aa27f157cba38d2ec53a7e95ea580563efe609" translate="yes" xml:space="preserve">
          <source>This function is intended to produce output that is readable by people, not by &lt;code&gt;read&lt;/code&gt;, so it doesn&amp;rsquo;t insert quoting characters and doesn&amp;rsquo;t put double-quotes around the contents of strings. It does not add any spacing between calls.</source>
          <target state="translated">이 함수는 &lt;code&gt;read&lt;/code&gt; 가 아닌 사람이 읽을 수있는 출력을 생성하기위한 것이므로 인용 문자를 삽입하지 않고 문자열 내용 주위에 큰 따옴표를 넣지 않습니다. 통화 사이에 공백을 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2eeb60cd2a0b9cec91c89ea8445e1cb0a1c8fadd" translate="yes" xml:space="preserve">
          <source>This function is just like &lt;code&gt;forward-word&lt;/code&gt;, except that it moves backward until encountering the front of a word, rather than forward.</source>
          <target state="translated">이 함수는 &lt;code&gt;forward-word&lt;/code&gt; 가 아니라 단어 의 앞부분을 만날 때까지 뒤로 이동한다는 점을 제외하면 forward-word 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="bb8eac161240e9108cffc575f87b3bbf5e4bae81" translate="yes" xml:space="preserve">
          <source>This function is just like &lt;code&gt;up-list&lt;/code&gt;, but with a negated argument.</source>
          <target state="translated">이 함수는 &lt;code&gt;up-list&lt;/code&gt; 와 비슷하지만 인수가 부정됩니다.</target>
        </trans-unit>
        <trans-unit id="eb054ed6d148bb70a97fe1b6541c60b3b215d2dc" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;assoc&lt;/code&gt; in that it returns the first association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;, but it makes the comparison using &lt;code&gt;eq&lt;/code&gt;. &lt;code&gt;assq&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CAR&lt;/small&gt;&lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;key&lt;/var&gt;. This function is used more often than &lt;code&gt;assoc&lt;/code&gt;, since &lt;code&gt;eq&lt;/code&gt; is faster than &lt;code&gt;equal&lt;/code&gt; and most alists use symbols as keys. See &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;alist&lt;/var&gt; 의 &lt;var&gt;key&lt;/var&gt; 에 대한 첫 번째 연결을 반환한다는 점에서 &lt;code&gt;assoc&lt;/code&gt; 과 비슷 하지만 &lt;code&gt;eq&lt;/code&gt; 를 사용하여 비교 합니다. &lt;code&gt;assq&lt;/code&gt; 는 &lt;var&gt;alist&lt;/var&gt; 의 연결에 &lt;small&gt;CAR &lt;/small&gt; &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;key&lt;/var&gt; 가 없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 이 기능은보다 더 자주 사용된다 &lt;code&gt;assoc&lt;/code&gt; 때문에, &lt;code&gt;eq&lt;/code&gt; 더 빠른 것보다 &lt;code&gt;equal&lt;/code&gt; 대부분의 alists 키와 같은 기호를 사용. &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;동등 술어를&lt;/a&gt; 참조하십시오 .&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4ea60e1ae863b782f88f8842efe2b9ff019a158a" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;assq-delete-all&lt;/code&gt; except that it accepts an optional argument &lt;var&gt;test&lt;/var&gt;, a predicate function to compare the keys in &lt;var&gt;alist&lt;/var&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;test&lt;/var&gt; defaults to &lt;code&gt;equal&lt;/code&gt;. As &lt;code&gt;assq-delete-all&lt;/code&gt;, this function often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;alist&lt;/var&gt; 의 키를 비교하는 조건 자 함수 인 선택적 인수 &lt;var&gt;test&lt;/var&gt; 를 허용한다는 점을 제외하면 &lt;code&gt;assq-delete-all&lt;/code&gt; 과 같습니다 . 생략되거나 &lt;code&gt;nil&lt;/code&gt; 이면 &lt;var&gt;test&lt;/var&gt; 기본값은 &lt;code&gt;equal&lt;/code&gt; 합니다. 으로 &lt;code&gt;assq-delete-all&lt;/code&gt; ,이 기능은 종종 원래의리스트 구조 변경 &lt;var&gt;alist&lt;/var&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="febc844768d8b56a11a67d4fbd5f4494b585a06f" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;backward-word&lt;/code&gt;, but it is not affected by &lt;code&gt;find-word-boundary-function-table&lt;/code&gt;. Like with &lt;code&gt;forward-word-strictly&lt;/code&gt;, use this function instead of &lt;code&gt;backward-word&lt;/code&gt; when movement by words should only consider syntax tables.</source>
          <target state="translated">이 함수는 &lt;code&gt;backward-word&lt;/code&gt; 와 비슷하지만 &lt;code&gt;find-word-boundary-function-table&lt;/code&gt; 의 영향을받지 않습니다 . &lt;code&gt;forward-word-strictly&lt;/code&gt; 와 마찬가지로 단어 별 이동이 구문 테이블 만 고려해야 할 때 &lt;code&gt;backward-word&lt;/code&gt; 대신이 함수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="f418ebc79920995b5a0d39eacf1b187360245075" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;base64-encode-region&lt;/code&gt;, but it implements the URL variant of base 64 encoding, per RFC 4648, and it doesn&amp;rsquo;t insert newline characters into the encoded text, so the output is just one long line.</source>
          <target state="translated">이 함수는 &lt;code&gt;base64-encode-region&lt;/code&gt; 과 비슷하지만 RFC 4648에 따라 base 64 인코딩의 URL 변형을 구현하고 인코딩 된 텍스트에 줄 바꿈 문자를 삽입하지 않으므로 출력은 한 줄에 불과합니다.</target>
        </trans-unit>
        <trans-unit id="b407ac2ec7181f27e6621e4d22f6c15e6c2fe661" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;call-process-shell-command&lt;/code&gt;, but uses &lt;code&gt;process-file&lt;/code&gt; internally. Depending on &lt;code&gt;default-directory&lt;/code&gt;, &lt;var&gt;command&lt;/var&gt; can be executed also on remote hosts. An old calling convention allowed passing any number of additional arguments after &lt;var&gt;display&lt;/var&gt;, which were concatenated to &lt;var&gt;command&lt;/var&gt;; this is still supported, but strongly discouraged.</source>
          <target state="translated">이 함수는 &lt;code&gt;call-process-shell-command&lt;/code&gt; 와 비슷하지만 &lt;code&gt;process-file&lt;/code&gt; 내부적으로 사용 합니다 . 에 따라 &lt;code&gt;default-directory&lt;/code&gt; , &lt;var&gt;command&lt;/var&gt; 원격 호스트에도 실행할 수 있습니다. 오래된 호출 규칙은 &lt;var&gt;display&lt;/var&gt; 후 &lt;var&gt;command&lt;/var&gt; 에 연결된 임의의 수의 추가 인수를 전달할 수 있습니다 . 이것은 여전히 ​​지원되지만 강력히 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="51cd4bba67018cad3c23d379da369c133b85d190" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;detect-coding-region&lt;/code&gt; except that it operates on the contents of &lt;var&gt;string&lt;/var&gt; instead of bytes in the buffer.</source>
          <target state="translated">이 함수는 버퍼의 바이트 대신 &lt;var&gt;string&lt;/var&gt; 의 내용에 대해 작동한다는 점을 제외하면 &lt;code&gt;detect-coding-region&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d5b0e272ddd3b5001497d1a89df8e32a9c9a93cb" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;forward-word&lt;/code&gt;, but it is not affected by &lt;code&gt;find-word-boundary-function-table&lt;/code&gt;. Lisp programs that should not change behavior when word movement is modified by modes which set that table, such as &lt;code&gt;subword-mode&lt;/code&gt;, should use this function instead of &lt;code&gt;forward-word&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;forward-word&lt;/code&gt; 와 비슷하지만 &lt;code&gt;find-word-boundary-function-table&lt;/code&gt; 의 영향을받지 않습니다 . &lt;code&gt;subword-mode&lt;/code&gt; 와 같이 해당 테이블을 설정하는 모드에 의해 단어 이동이 수정 될 때 동작을 변경하지 않아야하는 Lisp 프로그램 은 &lt;code&gt;forward-word&lt;/code&gt; 대신이 함수를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cfd9715724c00ce9bd1ded7a0b453bca9f33c860" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;get-char-property&lt;/code&gt;, except that it pays attention to properties&amp;rsquo; stickiness and overlays&amp;rsquo; advancement settings instead of the property of the character at (i.e., right after) &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;get-char-property&lt;/code&gt; 와 비슷 하지만 &lt;var&gt;position&lt;/var&gt; (즉, 바로 뒤)에있는 캐릭터의 속성 대신 속성의 끈적임과 오버레이의 진행 설정에주의를 기울 입니다.</target>
        </trans-unit>
        <trans-unit id="d67eca1ffd7744c6b6801232ca5ecf2d06b8d1e3" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;get-lru-window&lt;/code&gt;, but it returns the most recently used window instead. The meaning of the arguments is the same as described for &lt;code&gt;get-lru-window&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;get-lru-window&lt;/code&gt; 와 비슷하지만 대신 가장 최근에 사용한 창을 반환합니다. 인수의 의미는 &lt;code&gt;get-lru-window&lt;/code&gt; 에 대해 설명한 것과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7254e34733fc78f9926111144e20c1e144369f10" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;get-text-property&lt;/code&gt;, except that it checks overlays first and then text properties. See &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;.</source>
          <target state="translated">이 함수는 오버레이를 먼저 확인한 다음 텍스트 속성을 확인한다는 점을 제외하면 &lt;code&gt;get-text-property&lt;/code&gt; 와 같습니다 . &lt;a href=&quot;overlays#Overlays&quot;&gt;오버레이를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="83a863c5b063e5a26cec6d446f3052e10dbf9e03" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;match-beginning&lt;/code&gt; except that it returns the position of the end of the match, rather than the position of the beginning.</source>
          <target state="translated">이 함수는 &lt;code&gt;match-beginning&lt;/code&gt; 위치가 아니라 일치 종료 위치를 반환한다는 점을 제외하면 일치 시작 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b34f44fc938bc5e0dc1330ee376936ccb9058155" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;match-string&lt;/code&gt; except that the result has no text properties.</source>
          <target state="translated">이 함수는 결과에 텍스트 속성이 없다는 점을 제외하면 &lt;code&gt;match-string&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="42846bd880abf78a2f797515e5eb79b77e6c4bbf" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;member&lt;/code&gt;, except that &lt;var&gt;object&lt;/var&gt; should be a string and that it ignores differences in letter-case and text representation: upper-case and lower-case letters are treated as equal, and unibyte strings are converted to multibyte prior to comparison.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 문자열이어야하고 문자 대소 문자와 텍스트 표현의 차이를 무시한다는 점을 제외하면 &lt;code&gt;member&lt;/code&gt; 와 같습니다. 대문자와 소문자는 동일하게 처리되고 유니 바이트 문자열은 비교 전에 멀티 바이트로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="b32d33e48e8a1368ceb962a56b432672edc2ec39" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;mouse-position&lt;/code&gt; except that it returns coordinates in units of pixels rather than units of characters.</source>
          <target state="translated">이 함수는 문자 단위가 아닌 픽셀 단위로 좌표를 반환한다는 점을 제외하면 &lt;code&gt;mouse-position&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="380028fe703d237083b028a5d4b3e48345cb7881" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;move-to-window-line&lt;/code&gt;, except that when the selected window is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;move-to-window-group-line&lt;/code&gt; will move to a position with respect to the entire group, not just the single window. This condition holds when the buffer local variable &lt;code&gt;move-to-window-group-line-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;move-to-window-group-line&lt;/code&gt; calls the function with the argument &lt;var&gt;count&lt;/var&gt;, then returns its result.</source>
          <target state="translated">이 함수처럼 &lt;code&gt;move-to-window-line&lt;/code&gt; 선택된 윈도우는 윈도우의 기의 부분 인 경우 (참조 것을 제외하고는, &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;윈도우 그룹&lt;/a&gt; ), &lt;code&gt;move-to-window-group-line&lt;/code&gt; 받는 대하여 위치로 이동합니다 단일 창뿐만 아니라 전체 그룹입니다. 이 조건은 버퍼 로컬 변수 &lt;code&gt;move-to-window-group-line-function&lt;/code&gt; 이 함수 로 설정 될 때 유지됩니다. 이 경우 &lt;code&gt;move-to-window-group-line&lt;/code&gt; 은 &lt;var&gt;count&lt;/var&gt; 인수를 사용하여 함수를 호출 한 다음 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f292a4643ee179431fe06f46973315aba67bf8e3" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;pos-visible-in-window-p&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; tests the visibility of &lt;var&gt;pos&lt;/var&gt; in the entire group, not just in the single &lt;var&gt;window&lt;/var&gt;. This condition holds when the buffer local variable &lt;code&gt;pos-visible-in-window-group-p-function&lt;/code&gt; is set to a function. In this case &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; calls the function with the three arguments &lt;var&gt;position&lt;/var&gt;, &lt;var&gt;window&lt;/var&gt;, and &lt;var&gt;partially&lt;/var&gt;, then returns its result. The arguments &lt;var&gt;position&lt;/var&gt; and &lt;var&gt;partially&lt;/var&gt; have the same meaning as in &lt;code&gt;pos-visible-in-window-p&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 와 비슷하지만 &lt;var&gt;window&lt;/var&gt; 가 창 그룹의 일부일 때 ( &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt; 참조 ) &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; 는 &lt;var&gt;pos&lt;/var&gt; 의 가시성을 테스트합니다 . 단일 &lt;var&gt;window&lt;/var&gt; 아니라 전체 그룹 . 이 조건은 버퍼 로컬 변수 &lt;code&gt;pos-visible-in-window-group-p-function&lt;/code&gt; 이 함수 로 설정 될 때 유지됩니다. 이 경우 &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; 는 세 개의 인수 &lt;var&gt;position&lt;/var&gt; , &lt;var&gt;window&lt;/var&gt; 및 &lt;var&gt;partially&lt;/var&gt; 하여 함수를 호출 한 다음 그 결과를 반환합니다. 인수 &lt;var&gt;position&lt;/var&gt; 및 &lt;var&gt;partially&lt;/var&gt; &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 에서 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="423f27721b5ae02a5d90bff9e04c645421a6a62b" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;read-char&lt;/code&gt;, except that if the first character read is an octal digit (0&amp;ndash;7), it reads any number of octal digits (but stopping if a non-octal digit is found), and returns the character represented by that numeric character code. If the character that terminates the sequence of octal digits is</source>
          <target state="translated">이 함수는 &lt;code&gt;read-char&lt;/code&gt; 와 비슷합니다 . 단, 읽은 첫 번째 문자가 8 진수 (0&amp;ndash;7)이면 8 진수를 얼마든지 읽고 (그러나 8 진수가 아닌 숫자가 발견되면 중지됨) 표시된 문자를 반환합니다. 그 숫자 문자 코드로. 8 진수 시퀀스를 종료하는 문자가</target>
        </trans-unit>
        <trans-unit id="c924d6c6cbfc2ec082eff3cf16212f06c552c316" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;read-file-name&lt;/code&gt; but allows only directory names as completion alternatives.</source>
          <target state="translated">이 함수는 &lt;code&gt;read-file-name&lt;/code&gt; 과 유사 하지만 완성 대안으로 디렉토리 이름 만 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6607d19de1d8ab44a34d32383eed51a4b79a51d3" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;recenter&lt;/code&gt;, except that when the selected window is part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;recenter-window-group&lt;/code&gt; scrolls the entire group. This condition holds when the buffer local variable &lt;code&gt;recenter-window-group-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;recenter-window-group&lt;/code&gt; calls the function with the argument &lt;var&gt;count&lt;/var&gt;, then returns its result. The argument &lt;var&gt;count&lt;/var&gt; has the same meaning as in &lt;code&gt;recenter&lt;/code&gt;, but with respect to the entire window group.</source>
          <target state="translated">이 함수는 &lt;code&gt;recenter&lt;/code&gt; 와 비슷 하지만 선택한 창이 창 그룹의 일부일 때 ( &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt; 참조 ) &lt;code&gt;recenter-window-group&lt;/code&gt; 이 전체 그룹을 스크롤 한다는 점을 제외하고 는 같습니다 . 이 조건은 버퍼 로컬 변수 &lt;code&gt;recenter-window-group-function&lt;/code&gt; 이 함수 로 설정 될 때 유지됩니다. 이 경우 &lt;code&gt;recenter-window-group&lt;/code&gt; 은 &lt;var&gt;count&lt;/var&gt; 인수를 사용하여 함수를 호출 한 다음 그 결과를 반환합니다. 인수 &lt;var&gt;count&lt;/var&gt; 는 &lt;code&gt;recenter&lt;/code&gt; 와 동일한 의미를 갖지만 전체 창 그룹과 관련됩니다.</target>
        </trans-unit>
        <trans-unit id="44cd62b853205e55dbce43933dc4356ca992f4b6" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;set-window-start&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;set-window-group-start&lt;/code&gt; sets the start position of the entire group. This condition holds when the buffer local variable &lt;code&gt;set-window-group-start-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;set-window-group-start&lt;/code&gt; calls the function with the three arguments &lt;var&gt;window&lt;/var&gt;, &lt;var&gt;position&lt;/var&gt;, and &lt;var&gt;noforce&lt;/var&gt;, then returns its result. The arguments &lt;var&gt;position&lt;/var&gt; and &lt;var&gt;noforce&lt;/var&gt; in this function have the same meaning as in &lt;code&gt;set-window-start&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 가 창 그룹의 일부일 때 ( &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt; 참조 ) &lt;code&gt;set-window-group-start&lt;/code&gt; 가 전체 그룹의 시작 위치를 설정 한다는 점을 제외하면 &lt;code&gt;set-window-start&lt;/code&gt; 와 같습니다 . 이 조건은 버퍼 로컬 변수 &lt;code&gt;set-window-group-start-function&lt;/code&gt; 이 함수 로 설정 될 때 유지됩니다. 이 경우 &lt;code&gt;set-window-group-start&lt;/code&gt; 는 세 개의 인수 &lt;var&gt;window&lt;/var&gt; , &lt;var&gt;position&lt;/var&gt; 및 &lt;var&gt;noforce&lt;/var&gt; 를 사용 하여 함수를 호출 한 다음 결과를 반환합니다. 이 함수의 인수 &lt;var&gt;position&lt;/var&gt; 및 &lt;var&gt;noforce&lt;/var&gt; 는 &lt;code&gt;set-window-start&lt;/code&gt; 에서와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="b5465b6b852758d9e6ca920114899a7d2d298e51" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;setq-default&lt;/code&gt;, except that &lt;var&gt;symbol&lt;/var&gt; is an ordinary evaluated argument.</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 이 일반 평가 인수라는 점을 제외하면 &lt;code&gt;setq-default&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="afb5d392f40e935a703019b10560894ac9a5348c" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;start-process-shell-command&lt;/code&gt;, but uses &lt;code&gt;start-file-process&lt;/code&gt; internally. Because of this, &lt;var&gt;command&lt;/var&gt; can also be executed on remote hosts, depending on &lt;code&gt;default-directory&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;start-process-shell-command&lt;/code&gt; 와 비슷하지만 내부적으로 &lt;code&gt;start-file-process&lt;/code&gt; 를 사용합니다 . 이 때문에 &lt;code&gt;default-directory&lt;/code&gt; 에 따라 원격 호스트에서도 &lt;var&gt;command&lt;/var&gt; 을 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61d85e7f110eeb6fb821d8770f83e826220cf336" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;start-process&lt;/code&gt;, except that it uses a shell to execute the specified &lt;var&gt;command&lt;/var&gt;. The argument &lt;var&gt;command&lt;/var&gt; is a shell command string. The variable &lt;code&gt;shell-file-name&lt;/code&gt; specifies which shell to use.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;command&lt;/var&gt; 을 실행하기 위해 쉘을 사용한다는 점을 제외하면 &lt;code&gt;start-process&lt;/code&gt; 와 같습니다 . 인수 &lt;var&gt;command&lt;/var&gt; 은 쉘 명령 문자열입니다. &lt;code&gt;shell-file-name&lt;/code&gt; 변수 는 사용할 쉘을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a309cc52d1d3ed0a53185cb807573667a666b5e6" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;window-end&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;window-group-end&lt;/code&gt; returns the end position of the entire group. This condition holds when the buffer local variable &lt;code&gt;window-group-end-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;window-group-end&lt;/code&gt; calls the function with the two arguments &lt;var&gt;window&lt;/var&gt; and &lt;var&gt;update&lt;/var&gt;, then returns its result. The argument &lt;var&gt;update&lt;/var&gt; has the same meaning as in &lt;code&gt;window-end&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 가 창 그룹의 일부일 때 ( &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt; 참조 ) &lt;code&gt;window-group-end&lt;/code&gt; 가 전체 그룹의 끝 위치를 반환 한다는 점을 제외하면 &lt;code&gt;window-end&lt;/code&gt; 와 같습니다 . 이 조건은 버퍼 로컬 변수 &lt;code&gt;window-group-end-function&lt;/code&gt; 이 함수 로 설정 될 때 유지됩니다. 이 경우 &lt;code&gt;window-group-end&lt;/code&gt; 는 두 개의 인수 &lt;var&gt;window&lt;/var&gt; 및 &lt;var&gt;update&lt;/var&gt; 를 사용 하여 함수를 호출 한 다음 그 결과를 반환합니다. 인수 &lt;var&gt;update&lt;/var&gt; 는 &lt;code&gt;window-end&lt;/code&gt; 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="2722e598d95ea8f8914c4f9997629363c2d0f1cd" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;window-start&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;window-group-start&lt;/code&gt; returns the start position of the entire group. This condition holds when the buffer local variable &lt;code&gt;window-group-start-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;window-group-start&lt;/code&gt; calls the function with the single argument &lt;var&gt;window&lt;/var&gt;, then returns its result.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 가 창 그룹의 일부일 때 ( &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt; 참조 ) &lt;code&gt;window-group-start&lt;/code&gt; 가 전체 그룹의 시작 위치를 반환 한다는 점을 제외하면 &lt;code&gt;window-start&lt;/code&gt; 와 같습니다 . 이 조건은 버퍼 로컬 변수 &lt;code&gt;window-group-start-function&lt;/code&gt; 이 함수 로 설정 될 때 유지됩니다. 이 경우 &lt;code&gt;window-group-start&lt;/code&gt; 는 단일 인수 &lt;var&gt;window&lt;/var&gt; 를 사용하여 함수를 호출 한 다음 그 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f124246f81644e7e0334bb1a2e407f297dfd0e8e" translate="yes" xml:space="preserve">
          <source>This function is meaningless on operating systems where multiple names for one file are not allowed. Some systems implement multiple names by copying the file instead.</source>
          <target state="translated">이 기능은 하나의 파일에 여러 이름이 허용되지 않는 운영 체제에서는 의미가 없습니다. 일부 시스템은 대신 파일을 복사하여 여러 이름을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="17d4e37d01326a32f6c6a0fffbe6947dcdf2b1d4" translate="yes" xml:space="preserve">
          <source>This function is modelled after &lt;code&gt;search-forward&lt;/code&gt; and friends in that it moves point, but it returns a structure that describes the match instead of returning it in &lt;code&gt;match-beginning&lt;/code&gt; and friends.</source>
          <target state="translated">이 함수는 포인트를 이동한다는 점에서 &lt;code&gt;search-forward&lt;/code&gt; 과 친구를 모델로 하였지만, 매치 &lt;code&gt;match-beginning&lt;/code&gt; 과 친구 에서 매치 를 반환하는 대신 매치를 설명하는 구조를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="33c8e895f6340e37d35e4f180a08341797cafe5f" translate="yes" xml:space="preserve">
          <source>This function is not analogous to the C operator &lt;code&gt;++&lt;/code&gt;&amp;mdash;it does not increment a variable. It just computes a sum. Thus, if we continue,</source>
          <target state="translated">이 함수는 C 연산자 &lt;code&gt;++&lt;/code&gt; 와 유사 하지 않으며 변수를 증가시키지 않습니다. 단지 합계를 계산합니다. 따라서 계속하면</target>
        </trans-unit>
        <trans-unit id="25d79ed81d463a98d69a8e6098821c6475a2a263" translate="yes" xml:space="preserve">
          <source>This function is not available on systems that don&amp;rsquo;t support symbolic links.</source>
          <target state="translated">이 기능은 심볼릭 링크를 지원하지 않는 시스템에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d34b72dc83629e1f214bd593c386394e8b0d1958" translate="yes" xml:space="preserve">
          <source>This function is not meaningful on text terminals.</source>
          <target state="translated">이 기능은 텍스트 터미널에서는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="60e5d4050a886d9b2b2af737388d8b7d3d7aad42" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;assq&lt;/code&gt;. It finds the first association &lt;code&gt;(&lt;var&gt;key&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; by comparing &lt;var&gt;key&lt;/var&gt; with &lt;var&gt;alist&lt;/var&gt; elements, and, if found, returns the &lt;var&gt;value&lt;/var&gt; of that association. If no association is found, the function returns &lt;var&gt;default&lt;/var&gt;. Comparison of &lt;var&gt;key&lt;/var&gt; against &lt;var&gt;alist&lt;/var&gt; elements uses the function specified by &lt;var&gt;testfn&lt;/var&gt;, defaulting to &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;assq&lt;/code&gt; 와 유사합니다 . 그것은 제 연관 발견 &lt;code&gt;(&lt;var&gt;key&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 과 비교하여 &lt;var&gt;key&lt;/var&gt; 와 &lt;var&gt;alist&lt;/var&gt; 의 요소, 그리고 발견되면, 반환 &lt;var&gt;value&lt;/var&gt; 이 연관한다. 연관이 없으면 함수는 &lt;var&gt;default&lt;/var&gt; 를 반환합니다 . &lt;var&gt;alist&lt;/var&gt; 요소 에 대한 &lt;var&gt;key&lt;/var&gt; 비교는 &lt;var&gt;testfn&lt;/var&gt; 에 지정된 함수를 사용하며 기본값은 &lt;code&gt;eq&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cbcb2c40531f5fcd149c03c41ebb6ebf617b03ed" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;make-temp-file&lt;/code&gt;, but it creates a temporary file as close as possible to &lt;code&gt;default-directory&lt;/code&gt;. If &lt;var&gt;prefix&lt;/var&gt; is a relative file name, and &lt;code&gt;default-directory&lt;/code&gt; is a remote file name or located on a mounted file systems, the temporary file is created in the directory returned by the function &lt;code&gt;temporary-file-directory&lt;/code&gt;. Otherwise, the function &lt;code&gt;make-temp-file&lt;/code&gt; is used. &lt;var&gt;prefix&lt;/var&gt;, &lt;var&gt;dir-flag&lt;/var&gt; and &lt;var&gt;suffix&lt;/var&gt; have the same meaning as in &lt;code&gt;make-temp-file&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;make-temp-file&lt;/code&gt; 과 유사 하지만 가능한 한 &lt;code&gt;default-directory&lt;/code&gt; 에 가까운 임시 파일을 생성합니다 . 경우 &lt;var&gt;prefix&lt;/var&gt; 상대 파일 이름이며, &lt;code&gt;default-directory&lt;/code&gt; 원격 파일 이름 또는 마운트 된 파일 시스템에있는 임시 파일은 함수에 의해 반환 된 디렉토리에 생성된다 &lt;code&gt;temporary-file-directory&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;make-temp-file&lt;/code&gt; 함수 가 사용됩니다. &lt;var&gt;prefix&lt;/var&gt; , &lt;var&gt;dir-flag&lt;/var&gt; 및 &lt;var&gt;suffix&lt;/var&gt; 는 &lt;code&gt;make-temp-file&lt;/code&gt; 과 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="e2100bef9b9dc3e518ec1d066f636f9510aea5d1" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;make-translation-table&lt;/code&gt; but returns a complex translation table rather than a simple one-to-one mapping. Each element of &lt;var&gt;alist&lt;/var&gt; is of the form &lt;code&gt;(&lt;var&gt;from&lt;/var&gt;
. &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; are either characters or vectors specifying a sequence of characters. If &lt;var&gt;from&lt;/var&gt; is a character, that character is translated to &lt;var&gt;to&lt;/var&gt; (i.e., to a character or a character sequence). If &lt;var&gt;from&lt;/var&gt; is a vector of characters, that sequence is translated to &lt;var&gt;to&lt;/var&gt;. The returned table has a translation table for reverse mapping in the first extra slot, and the maximum length of all the &lt;var&gt;from&lt;/var&gt; character sequences in the second extra slot.</source>
          <target state="translated">이 함수는 &lt;code&gt;make-translation-table&lt;/code&gt; 과 유사 하지만 단순한 일대일 매핑이 아닌 복잡한 변환 테이블을 반환합니다. 각 요소 &lt;var&gt;alist&lt;/var&gt; 는 형태이다 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; , 여기서 &lt;var&gt;from&lt;/var&gt; 그리고 &lt;var&gt;to&lt;/var&gt; 어느 문자 또는 벡터가 문자의 순서를 지정한다. 경우 &lt;var&gt;from&lt;/var&gt; 문자이며, 그 문자가 변환됩니다 &lt;var&gt;to&lt;/var&gt; (문자 또는 문자 시퀀스, 즉). 만약 &lt;var&gt;from&lt;/var&gt; 시퀀스로 변환되는 문자의 벡터입니다 &lt;var&gt;to&lt;/var&gt; . 반환 된 테이블에는 첫 번째 추가 슬롯의 역 매핑에 대한 변환 테이블과 두 번째 추가 슬롯에있는 모든 &lt;var&gt;from&lt;/var&gt; 문자 시퀀스 의 최대 길이가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2043e560d5613ff4133144d3c5343d01f48e1e44" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;position-bytes&lt;/code&gt;, but instead of byte position in the current buffer it returns the offset from the beginning of the current buffer&amp;rsquo;s file of the byte that corresponds to the given character &lt;var&gt;position&lt;/var&gt; in the buffer. The conversion requires to know how the text is encoded in the buffer&amp;rsquo;s file; this is what the &lt;var&gt;coding-system&lt;/var&gt; argument is for, defaulting to the value of &lt;code&gt;buffer-file-coding-system&lt;/code&gt;. The optional argument &lt;var&gt;quality&lt;/var&gt; specifies how accurate the result should be; it should be one of the following:</source>
          <target state="translated">이 함수는 &lt;code&gt;position-bytes&lt;/code&gt; 와 유사 하지만 현재 버퍼의 바이트 위치 대신 버퍼의 지정된 문자 &lt;var&gt;position&lt;/var&gt; 에 해당하는 바이트의 현재 버퍼 파일 시작 부분에서 오프셋을 반환합니다 . 변환하려면 버퍼의 파일에서 텍스트가 인코딩되는 방법을 알아야합니다. 이것이 &lt;var&gt;coding-system&lt;/var&gt; 인수의 목적이며, 기본값은 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 값입니다 . 선택적 인수 &lt;var&gt;quality&lt;/var&gt; 는 결과가 얼마나 정확해야하는지 지정합니다. 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3c45bf377dca5fd77d58569b261191101541e772" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;progress-reporter-update&lt;/code&gt; except that it prints a message in the echo area unconditionally.</source>
          <target state="translated">이 함수는 무조건 에코 영역에 메시지를 인쇄한다는 점을 제외하면 &lt;code&gt;progress-reporter-update&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="1947e078c24a60f411a662e1b2f4049123877b42" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;seq-sort&lt;/code&gt;, but the elements of &lt;var&gt;sequence&lt;/var&gt; are transformed by applying &lt;var&gt;function&lt;/var&gt; on them before being sorted. &lt;var&gt;function&lt;/var&gt; is a function of one argument.</source>
          <target state="translated">이 함수는 &lt;code&gt;seq-sort&lt;/code&gt; 와 비슷 하지만 정렬 되기 전에 &lt;var&gt;sequence&lt;/var&gt; 의 요소에 &lt;var&gt;function&lt;/var&gt; 를 적용하여 변형됩니다 . &lt;var&gt;function&lt;/var&gt; 는 한 인수의 함수입니다.</target>
        </trans-unit>
        <trans-unit id="03e2e31797b4ea6201bbb47256a6440f3d6a511a" translate="yes" xml:space="preserve">
          <source>This function is the basic low-level primitive for starting asynchronous subprocesses. It returns a process object representing the subprocess. Compared to the more high-level &lt;code&gt;start-process&lt;/code&gt;, described below, it takes keyword arguments, is more flexible, and allows to specify process filters and sentinels in a single call.</source>
          <target state="translated">이 함수는 비동기 하위 프로세스를 시작하기위한 기본 저수준 기본 요소입니다. 하위 프로세스를 나타내는 프로세스 개체를 반환합니다. 아래에 설명 된 보다 높은 수준의 &lt;code&gt;start-process&lt;/code&gt; 에 비해 키워드 인수를 사용하고 더 유연하며 단일 호출로 프로세스 필터 및 센티넬을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0202a5b181ff280f0a1e376052278754fd262dcb" translate="yes" xml:space="preserve">
          <source>This function is the cleanest way to examine all the bindings in a keymap.</source>
          <target state="translated">이 함수는 키맵의 모든 바인딩을 검사하는 가장 깨끗한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a1040f637ee62ebc5ce9594e038f541e724aaca5" translate="yes" xml:space="preserve">
          <source>This function is the composition of &lt;code&gt;file-name-sans-extension&lt;/code&gt; and &lt;code&gt;file-name-nondirectory&lt;/code&gt;. For example,</source>
          <target state="translated">이 함수는 &lt;code&gt;file-name-sans-extension&lt;/code&gt; 및 &lt;code&gt;file-name-nondirectory&lt;/code&gt; 의 구성 입니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="071bf4abb89ece2d10bf2979329e40da70f717a0" translate="yes" xml:space="preserve">
          <source>This function is the default value of &lt;code&gt;blink-paren-function&lt;/code&gt;. It assumes that point follows a character with close parenthesis syntax and applies the appropriate effect momentarily to the matching opening character. If that character is not already on the screen, it displays the character&amp;rsquo;s context in the echo area. To avoid long delays, this function does not search farther than &lt;code&gt;blink-matching-paren-distance&lt;/code&gt; characters.</source>
          <target state="translated">이 함수는 &lt;code&gt;blink-paren-function&lt;/code&gt; 의 기본값 입니다. 포인트가 닫는 괄호 구문이있는 문자 다음에 오는 것으로 가정하고 일치하는 여는 문자에 순간적으로 적절한 효과를 적용합니다. 해당 캐릭터가 아직 화면에 없으면 에코 영역에 캐릭터의 컨텍스트를 표시합니다. 긴 지연을 피하기 위해이 기능은 &lt;code&gt;blink-matching-paren-distance&lt;/code&gt; 문자 보다 더 멀리 검색하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="75c66f982292a50169390f725152f5312e50a787" translate="yes" xml:space="preserve">
          <source>This function is the delayed counterpart to &lt;code&gt;display-warning&lt;/code&gt; (see &lt;a href=&quot;warning-basics#Warning-Basics&quot;&gt;Warning Basics&lt;/a&gt;), and it is called with the same arguments. The warning message is queued into &lt;code&gt;delayed-warnings-list&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;display-warning&lt;/code&gt; ( &lt;a href=&quot;warning-basics#Warning-Basics&quot;&gt;경고 기본 사항&lt;/a&gt; 참조 )에 대한 지연된 대응 이며 동일한 인수로 호출됩니다. 경고 메시지는 &lt;code&gt;delayed-warnings-list&lt;/code&gt; 대기열에 추가 됩니다.</target>
        </trans-unit>
        <trans-unit id="18eac0da716b827eb9dde1b5aabe0d80f59c9554" translate="yes" xml:space="preserve">
          <source>This function is the general text-sorting routine that subdivides a buffer into records and then sorts them. Most of the commands in this section use this function.</source>
          <target state="translated">이 함수는 버퍼를 레코드로 세분화 한 다음 정렬하는 일반적인 텍스트 정렬 루틴입니다. 이 섹션에있는 대부분의 명령은이 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fa0f6a51f4811ae1090deef7223f1714375fa109" translate="yes" xml:space="preserve">
          <source>This function is the guts of &lt;code&gt;query-replace&lt;/code&gt; and related commands. It searches for occurrences of &lt;var&gt;from-string&lt;/var&gt; in the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; and replaces some or all of them. If &lt;var&gt;start&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), point is used instead, and the end of the buffer&amp;rsquo;s accessible portion is used for &lt;var&gt;end&lt;/var&gt;. (If the optional argument &lt;var&gt;backward&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search starts at &lt;var&gt;end&lt;/var&gt; and goes backward.)</source>
          <target state="translated">이 기능은 &lt;code&gt;query-replace&lt;/code&gt; 및 관련 명령 의 핵심입니다 . &lt;var&gt;start&lt;/var&gt; 위치 와 &lt;var&gt;end&lt;/var&gt; 위치 사이의 텍스트에서 시작 &lt;var&gt;from-string&lt;/var&gt; 발생을 검색 하고 일부 또는 전체를 바꿉니다. 경우 &lt;var&gt;start&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; (또는 생략) 지점 대신 사용되며, 상기 버퍼의 액세스 부분의 단부에 사용되는 &lt;var&gt;end&lt;/var&gt; . (선택적 인수 &lt;var&gt;backward&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 검색은 &lt;var&gt;end&lt;/var&gt; 에서 시작하여 뒤로 이동합니다.)</target>
        </trans-unit>
        <trans-unit id="583e7379927ed3126d80429cf3d9f23f997c4de7" translate="yes" xml:space="preserve">
          <source>This function is the guts of all the file-visiting functions. It returns a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;. You may make the buffer current or display it in a window if you wish, but this function does not do so.</source>
          <target state="translated">이 기능은 모든 파일 방문 기능의 핵심입니다. &lt;var&gt;filename&lt;/var&gt; 파일을 방문하는 버퍼를 반환합니다 . 버퍼를 현재로 만들거나 원하는 경우 창에 표시 할 수 있지만이 기능은 그렇게하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e943eae916a56fc004b81c59c5354d07f9bec1c" translate="yes" xml:space="preserve">
          <source>This function is the handy way to add function &lt;var&gt;function&lt;/var&gt; to hook variable &lt;var&gt;hook&lt;/var&gt;. You can use it for abnormal hooks as well as for normal hooks. &lt;var&gt;function&lt;/var&gt; can be any Lisp function that can accept the proper number of arguments for &lt;var&gt;hook&lt;/var&gt;. For example,</source>
          <target state="translated">이 함수는 hook 변수 &lt;var&gt;hook&lt;/var&gt; 에 함수 &lt;var&gt;function&lt;/var&gt; 를 추가하는 편리한 방법 입니다. 비정상적인 후크뿐만 아니라 일반 후크에도 사용할 수 있습니다. &lt;var&gt;function&lt;/var&gt; 은 &lt;var&gt;hook&lt;/var&gt; 에 대해 적절한 수의 인수를받을 수있는 Lisp 함수일 수 있습니다 . 예를 들면</target>
        </trans-unit>
        <trans-unit id="eaf8f506e507be6d21f071afe7673979c28d9ec0" translate="yes" xml:space="preserve">
          <source>This function is the most basic function for building new list structure. It creates a new cons cell, making &lt;var&gt;object1&lt;/var&gt; the &lt;small&gt;CAR&lt;/small&gt;, and &lt;var&gt;object2&lt;/var&gt; the &lt;small&gt;CDR&lt;/small&gt;. It then returns the new cons cell. The arguments &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; may be any Lisp objects, but most often &lt;var&gt;object2&lt;/var&gt; is a list.</source>
          <target state="translated">이 기능은 새로운 목록 구조를 구축하기위한 가장 기본적인 기능입니다. 새로운 cons 셀을 생성하여 &lt;var&gt;object1&lt;/var&gt; 을 &lt;small&gt;CAR&lt;/small&gt; , &lt;var&gt;object2&lt;/var&gt; 를 &lt;small&gt;CDR로&lt;/small&gt; 만듭니다. 그런 다음 새 단점 셀을 반환합니다. 인수 &lt;var&gt;object1&lt;/var&gt; 및 &lt;var&gt;object2&lt;/var&gt; 는 Lisp 개체 일 수 있지만 대부분 &lt;var&gt;object2&lt;/var&gt; 는 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0385f7e2ce1a926badee5da80eecc4ceba32ebb8" translate="yes" xml:space="preserve">
          <source>This function is the most general way to get input from the minibuffer. By default, it accepts arbitrary text and returns it as a string; however, if &lt;var&gt;read&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it uses &lt;code&gt;read&lt;/code&gt; to convert the text into a Lisp object (see &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;).</source>
          <target state="translated">이 함수는 미니 버퍼에서 입력을받는 가장 일반적인 방법입니다. 기본적으로 임의의 텍스트를 받아들이고 문자열로 반환합니다. 그러나 &lt;var&gt;read&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , 그것은 사용 &lt;code&gt;read&lt;/code&gt; 리스프 객체 (참조로 텍스트를 변환 &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;입력 기능&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e6ccf48321746b97b668fbc56aa7b9822ea8fba" translate="yes" xml:space="preserve">
          <source>This function is the non-destructive counterpart of &lt;code&gt;delete&lt;/code&gt;. It returns a copy of &lt;code&gt;sequence&lt;/code&gt;, a list, vector, or string, with elements &lt;code&gt;equal&lt;/code&gt; to &lt;code&gt;object&lt;/code&gt; removed. For example:</source>
          <target state="translated">이 함수는 &lt;code&gt;delete&lt;/code&gt; 의 비파괴 기능입니다 . 이 사본 반환 &lt;code&gt;sequence&lt;/code&gt; 요소와,리스트, 벡터 또는 문자열을 &lt;code&gt;equal&lt;/code&gt; 하는 &lt;code&gt;object&lt;/code&gt; 제거. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="515c4b8685ba3c619ac1e8f1e2890460d439f01c" translate="yes" xml:space="preserve">
          <source>This function is the opposite of &lt;code&gt;listp&lt;/code&gt;: it returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is not a list. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 반대입니다 &lt;code&gt;listp&lt;/code&gt; : 그것은 반환 &lt;code&gt;t&lt;/code&gt; 을 경우 &lt;var&gt;object&lt;/var&gt; 목록이 아니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7750905676c7b8df730501b2e7a52515c954e625" translate="yes" xml:space="preserve">
          <source>This function is the same as &lt;code&gt;libxml-parse-html-region&lt;/code&gt;, except that it parses the text as XML rather than HTML (so it is stricter about syntax).</source>
          <target state="translated">이 함수는 HTML이 아닌 XML로 텍스트를 구문 분석한다는 점을 제외하면 &lt;code&gt;libxml-parse-html-region&lt;/code&gt; 과 동일합니다 (따라서 구문이 더 엄격함).</target>
        </trans-unit>
        <trans-unit id="988a8ce536cec6d1bd5e78eeec163bf89ccb0e37" translate="yes" xml:space="preserve">
          <source>This function is unlike the other insertion functions in that it relocates markers initially pointing at the insertion point, to point after the inserted text. If an overlay begins at the insertion point, the inserted text falls outside the overlay; if a nonempty overlay ends at the insertion point, the inserted text falls inside that overlay.</source>
          <target state="translated">이 함수는 처음에 삽입 지점을 가리키는 마커를 삽입 된 텍스트 뒤를 가리 키도록 재배치한다는 점에서 다른 삽입 함수와 다릅니다. 오버레이가 삽입 지점에서 시작되면 삽입 된 텍스트가 오버레이 외부에 있습니다. 비어 있지 않은 오버레이가 삽입 지점에서 끝나는 경우 삽입 된 텍스트는 해당 오버레이에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="be04074c7a9d83fbea02fdbb6469d86a4f96e0bd" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;code&gt;find-file-noselect&lt;/code&gt;. It uses &lt;code&gt;generate-new-buffer&lt;/code&gt; (see &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;code&gt;find-file-noselect&lt;/code&gt; 에서 사용됩니다 . 그것은 사용 &lt;code&gt;generate-new-buffer&lt;/code&gt; (참조 &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;버퍼 만들기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="833ac6c197eb42f56f0da4e28bc7732d9f9c4ff4" translate="yes" xml:space="preserve">
          <source>This function is used for making non-global tool bar items. Use it like &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt; except that &lt;var&gt;in-map&lt;/var&gt; specifies the local map to make the definition in. The argument &lt;var&gt;from-map&lt;/var&gt; is like the &lt;var&gt;map&lt;/var&gt; argument of &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt;.</source>
          <target state="translated">이 기능은 비전 역 도구 모음 항목을 만드는 데 사용됩니다. &lt;var&gt;in-map&lt;/var&gt; 이 정의를 만들 로컬 맵을 지정 한다는 점을 제외하면 &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt; 와 같이 사용하십시오 . &lt;var&gt;from-map&lt;/var&gt; &lt;var&gt;map&lt;/var&gt; 인수는 &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt; 의 맵 인수 와 같습니다. 메뉴 .</target>
        </trans-unit>
        <trans-unit id="054ac6c3f16a80157852f2247bb4afc23f6c0175" translate="yes" xml:space="preserve">
          <source>This function is used mainly for operating on keyboard macros, but it can also be used as a rough inverse for &lt;code&gt;key-description&lt;/code&gt;. You call it with a string containing key descriptions, separated by spaces; it returns a string or vector containing the corresponding events. (This may or may not be a single valid key sequence, depending on what events you use; see &lt;a href=&quot;key-sequences#Key-Sequences&quot;&gt;Key Sequences&lt;/a&gt;.) If &lt;var&gt;need-vector&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the return value is always a vector.</source>
          <target state="translated">이 함수는 주로 키보드 매크로에서 작동하는 데 사용되지만 &lt;code&gt;key-description&lt;/code&gt; 대한 대략적인 역으로도 사용할 수 있습니다 . 공백으로 구분 된 키 설명을 포함하는 문자열로 호출합니다. 해당 이벤트를 포함하는 문자열 또는 벡터를 반환합니다. (사용하는 이벤트에 따라 유효한 단일 키 시퀀스 일 수도 있고 아닐 수도 있습니다. &lt;a href=&quot;key-sequences#Key-Sequences&quot;&gt;키 시퀀스&lt;/a&gt; 참조 ) &lt;var&gt;need-vector&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 반환 값은 항상 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="0f47a9840881e51b0ddab6debab8a2b86b4ca1a5" translate="yes" xml:space="preserve">
          <source>This function is used only by the debugger.</source>
          <target state="translated">이 함수는 디버거에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bea487a88364aa3c8c96921d442179387ed5e92a" translate="yes" xml:space="preserve">
          <source>This function is used to ask a user how to proceed after an attempt to modify a buffer visiting file &lt;var&gt;filename&lt;/var&gt; when the file is newer than the buffer text. Emacs detects this because the modification time of the file on disk is newer than the last save-time and its contents have changed. This means some other program has probably altered the file.</source>
          <target state="translated">이 함수는 파일이 버퍼 텍스트보다 최신 &lt;var&gt;filename&lt;/var&gt; 때 버퍼 방문 파일 파일명 을 수정하려고 시도한 후 사용자에게 진행 방법을 묻는 데 사용됩니다 . Emacs는 디스크에있는 파일의 수정 시간이 마지막 저장 시간보다 최신이고 내용이 변경 되었기 때문에이를 감지합니다. 이것은 다른 프로그램이 아마도 파일을 변경했음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cedffea6fb1e82cb915a884797656ab6fb360424" translate="yes" xml:space="preserve">
          <source>This function is used to open a &lt;em&gt;termscript file&lt;/em&gt; that will record all the characters sent by Emacs to the terminal. It returns &lt;code&gt;nil&lt;/code&gt;. Termscript files are useful for investigating problems where Emacs garbles the screen, problems that are due to incorrect Termcap entries or to undesirable settings of terminal options more often than to actual Emacs bugs. Once you are certain which characters were actually output, you can determine reliably whether they correspond to the Termcap specifications in use.</source>
          <target state="translated">이 기능은 Emacs가 터미널로 보낸 모든 문자를 기록 하는 &lt;em&gt;termscript 파일&lt;/em&gt; 을 여는 데 사용됩니다 . &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . Termscript 파일은 Emacs가 화면을 깨뜨리는 문제, 잘못된 Termcap 항목으로 인한 문제 또는 실제 Emacs 버그보다 더 자주 터미널 옵션의 바람직하지 않은 설정으로 인한 문제를 조사하는 데 유용합니다. 어떤 문자가 실제로 출력되었는지 확인한 후에는 사용중인 Termcap 사양에 해당하는지 여부를 안정적으로 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="292fc363baa4a4c79b7cfa85647cf63b30afbd38" translate="yes" xml:space="preserve">
          <source>This function is used to perform hostname lookups on &lt;var&gt;name&lt;/var&gt;, which is expected to be an ASCII-only string, otherwise an error is signaled. Call &lt;code&gt;puny-encode-domain&lt;/code&gt; on &lt;var&gt;name&lt;/var&gt; first if you wish to lookup internationalized hostnames.</source>
          <target state="translated">이 함수는 ASCII 전용 문자열이 될 것으로 예상되는 &lt;var&gt;name&lt;/var&gt; 에서 호스트 이름 조회를 수행하는 데 사용됩니다 . 그렇지 않으면 오류가 발생합니다. 국제화 된 호스트 이름을 조회하려면 먼저 &lt;var&gt;name&lt;/var&gt; 에 대해 &lt;code&gt;puny-encode-domain&lt;/code&gt; 을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ba63deac739c39c5b402b4def5eb47fbf60033d" translate="yes" xml:space="preserve">
          <source>This function is used when building Emacs, just before the runnable Emacs is dumped. It finds the positions of the documentation strings stored in the file &lt;var&gt;filename&lt;/var&gt;, and records those positions into memory in the function definitions and variable property lists. See &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">이 함수는 실행 가능한 Emacs가 덤프되기 직전에 Emacs를 빌드 할 때 사용됩니다. &lt;var&gt;filename&lt;/var&gt; 파일에 저장된 문서 문자열의 위치를 ​​찾고 함수 정의 및 변수 속성 목록의 메모리에 해당 위치를 기록합니다. &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Emacs 빌드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e66b38753b731aa48f4d0b918fa41fbb75b9836" translate="yes" xml:space="preserve">
          <source>This function is useful if the buffer was not read from the file normally, or if the file itself has been changed for some known benign reason.</source>
          <target state="translated">이 함수는 버퍼가 파일에서 정상적으로 읽히지 않았거나 알려진 좋은 이유로 파일 자체가 변경된 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fa2794d68b09153fad1d26623fa90ac615093833" translate="yes" xml:space="preserve">
          <source>This function itself does not make the new frame the selected frame. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;. The previously selected frame remains selected. On graphical terminals, however, the windowing system may select the new frame for its own reasons.</source>
          <target state="translated">이 기능 자체는 새 프레임을 선택한 프레임으로 만들지 않습니다. &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;입력 초점을&lt;/a&gt; 참조하십시오 . 이전에 선택한 프레임은 선택된 상태로 유지됩니다. 그러나 그래픽 터미널에서는 윈도우 시스템이 자체적 인 이유로 새 프레임을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b8ddd1552584c2eb2c6dad6102d8735314e807" translate="yes" xml:space="preserve">
          <source>This function joins the line point is on to the previous line, deleting any whitespace at the join and in some cases replacing it with one space. If &lt;var&gt;join-following-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;delete-indentation&lt;/code&gt; joins this line to the following line instead. Otherwise, if &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are non-&lt;code&gt;nil&lt;/code&gt;, this function joins all lines in the region they define.</source>
          <target state="translated">이 함수는 이전 줄에있는 선 점을 결합하여 결합에서 공백을 삭제하고 경우에 따라 하나의 공백으로 대체합니다. 경우 &lt;var&gt;join-following-p&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;delete-indentation&lt;/code&gt; 대신에 다음과 같은 라인이 줄을 섭니다. 그렇지 않고 &lt;var&gt;beg&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 이 함수는 정의 된 영역의 모든 행을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="225d5196925af5c0cd1a2d0925e9e365c61d151b" translate="yes" xml:space="preserve">
          <source>This function kills the buffer &lt;var&gt;buffer-or-name&lt;/var&gt;, freeing all its memory for other uses or to be returned to the operating system. If &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, it kills the current buffer.</source>
          <target state="translated">이 함수는 버퍼 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 종료 하여 다른 용도로 사용하거나 운영 체제에 반환 할 모든 메모리를 해제합니다. 경우 &lt;var&gt;buffer-or-name&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; 또는 생략, 현재의 버퍼를 죽인다.</target>
        </trans-unit>
        <trans-unit id="3fa88896e5e801bab628f8b066b0b6aca2a2eff0" translate="yes" xml:space="preserve">
          <source>This function kills the process &lt;var&gt;process&lt;/var&gt; by sending the signal &lt;code&gt;SIGKILL&lt;/code&gt;. This signal kills the subprocess immediately, and cannot be handled by the subprocess.</source>
          <target state="translated">이 함수는 &lt;code&gt;SIGKILL&lt;/code&gt; 신호를 보내 프로세스 &lt;var&gt;process&lt;/var&gt; 를 종료 합니다. 이 신호는 하위 프로세스를 즉시 종료하며 하위 프로세스에서 처리 할 수 ​​없습니다.</target>
        </trans-unit>
        <trans-unit id="e4fc7373deee855c021e696f3cc1620363733bb3" translate="yes" xml:space="preserve">
          <source>This function kills the stretch of text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;; but if the optional argument &lt;var&gt;region&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it ignores &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, and kills the text in the current region instead. The text is deleted but saved in the kill ring, along with its text properties. The value is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 텍스트 스트레치를 없앱니다 . 그러나 선택적 인수 &lt;var&gt;region&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 를 무시 하고 대신 현재 영역의 텍스트를 종료 합니다. 텍스트는 삭제되지만 텍스트 속성과 함께 킬 링에 저장됩니다. 값은 항상 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6156a82790a09a2218e54f22a9360039b5077632" translate="yes" xml:space="preserve">
          <source>This function leaves the buffer contents unchanged when viewed as a sequence of bytes. As a consequence, it can change the contents viewed as characters; for instance, a sequence of three bytes which is treated as one character in multibyte representation will count as three characters in unibyte representation. Eight-bit characters representing raw bytes are an exception. They are represented by one byte in a unibyte buffer, but when the buffer is set to multibyte, they are converted to two-byte sequences, and vice versa.</source>
          <target state="translated">이 함수는 바이트 시퀀스로 볼 때 버퍼 내용을 변경하지 않습니다. 결과적으로 문자로 보는 내용을 변경할 수 있습니다. 예를 들어, 멀티 바이트 표현에서 하나의 문자로 취급되는 3 바이트 시퀀스는 유니 바이트 표현에서 3 자로 계산됩니다. 원시 바이트를 나타내는 8 비트 문자는 예외입니다. 유니 바이트 버퍼에서 1 바이트로 표시되지만 버퍼가 멀티 바이트로 설정되면 2 바이트 시퀀스로 변환되고 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="575c6110fe6258bff18e22e2087576bbda03768d" translate="yes" xml:space="preserve">
          <source>This function lets you compare portions of the text in a buffer, without copying them into strings first.</source>
          <target state="translated">이 함수를 사용하면 버퍼에있는 텍스트의 일부를 문자열로 먼저 복사하지 않고도 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9be00bfd4c17b376996c83668ee2d69d02b4c12" translate="yes" xml:space="preserve">
          <source>This function lets you compare two substrings of the same buffer or two different buffers. The first three arguments specify one substring, giving a buffer (or a buffer name) and two positions within the buffer. The last three arguments specify the other substring in the same way. You can use &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;buffer1&lt;/var&gt;, &lt;var&gt;buffer2&lt;/var&gt;, or both to stand for the current buffer.</source>
          <target state="translated">이 함수를 사용하면 동일한 버퍼 또는 두 개의 서로 다른 버퍼의 두 하위 문자열을 비교할 수 있습니다. 처음 세 개의 인수는 하나의 하위 문자열을 지정하여 버퍼 (또는 버퍼 이름)와 버퍼 내의 두 위치를 제공합니다. 마지막 세 개의 인수는 같은 방식으로 다른 하위 문자열을 지정합니다. &lt;var&gt;buffer1&lt;/var&gt; , &lt;var&gt;buffer2&lt;/var&gt; 또는 둘 다에 대해 &lt;code&gt;nil&lt;/code&gt; 을 사용 하여 현재 버퍼 를 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7cc2f71b5ee48535b41c427de6c79709eaae272" translate="yes" xml:space="preserve">
          <source>This function lets you cycle conveniently through all the frames on a specific terminal from an arbitrary starting point. It returns the frame following &lt;var&gt;frame&lt;/var&gt;, in the list of all live frames, on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s terminal. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame and defaults to the selected frame. It never returns a frame whose &lt;code&gt;no-other-frame&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능을 사용하면 임의의 시작 지점에서 특정 터미널의 모든 프레임을 편리하게 순환 할 수 있습니다. &lt;var&gt;frame&lt;/var&gt; 터미널 의 모든 라이브 프레임 목록에서 프레임 다음 &lt;var&gt;frame&lt;/var&gt; 반환합니다 . 인수 &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임을 지정해야하며 기본값은 선택한 프레임입니다. 프레임이 &lt;code&gt;no-other-frame&lt;/code&gt; 매개 변수 ( &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;프레임 상호 작용 매개 변수&lt;/a&gt; 참조 )가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 프레임은 반환 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5dda756950cf97b5b76fe1b6b607179ef599a454" translate="yes" xml:space="preserve">
          <source>This function lets you specify the grammar using a BNF notation. It accepts a &lt;var&gt;bnf&lt;/var&gt; description of the grammar along with a set of conflict resolution rules &lt;var&gt;resolvers&lt;/var&gt;, and returns a &lt;em&gt;prec2&lt;/em&gt; table.</source>
          <target state="translated">이 함수를 사용하면 BNF 표기법을 사용하여 문법을 지정할 수 있습니다. 충돌 해결 규칙 &lt;var&gt;resolvers&lt;/var&gt; 집합과 함께 문법에 대한 &lt;var&gt;bnf&lt;/var&gt; 설명을 받아들이고 &lt;em&gt;prec2&lt;/em&gt; 테이블을 반환 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc14d70677b18cb72a2ef78db08f50252fda302e" translate="yes" xml:space="preserve">
          <source>This function lets you take the &lt;small&gt;CAR&lt;/small&gt; of a cons cell while avoiding errors for other data types. It returns the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;object&lt;/var&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. This is in contrast to &lt;code&gt;car&lt;/code&gt;, which signals an error if &lt;var&gt;object&lt;/var&gt; is not a list.</source>
          <target state="translated">이 함수를 사용하면 다른 데이터 유형에 대한 오류를 피하면서 단점 셀 의 &lt;small&gt;CAR&lt;/small&gt; 을 가져올 수 있습니다. 그것은 반환 &lt;small&gt;CAR&lt;/small&gt; 의 &lt;var&gt;object&lt;/var&gt; 경우 &lt;var&gt;object&lt;/var&gt; 하는 단점 세포 인 &lt;code&gt;nil&lt;/code&gt; 그렇지. 이는 &lt;var&gt;object&lt;/var&gt; 가 목록이 아닌 경우 오류를 나타내는 &lt;code&gt;car&lt;/code&gt; 와 대조적 입니다.</target>
        </trans-unit>
        <trans-unit id="22061ec14a542fe8324af72aa640f7a4e7a2e2bb" translate="yes" xml:space="preserve">
          <source>This function lets you take the &lt;small&gt;CDR&lt;/small&gt; of a cons cell while avoiding errors for other data types. It returns the &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;object&lt;/var&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. This is in contrast to &lt;code&gt;cdr&lt;/code&gt;, which signals an error if &lt;var&gt;object&lt;/var&gt; is not a list.</source>
          <target state="translated">이 함수를 사용하면 다른 데이터 유형에 대한 오류를 피하면서 단점 셀 의 &lt;small&gt;CDR&lt;/small&gt; 을 가져올 수 있습니다. 그것은 반환 &lt;small&gt;CDR&lt;/small&gt; 의 &lt;var&gt;object&lt;/var&gt; 경우 &lt;var&gt;object&lt;/var&gt; 하는 단점 세포 인 &lt;code&gt;nil&lt;/code&gt; 그렇지. 이는 &lt;var&gt;object&lt;/var&gt; 가 목록이 아닌 경우 오류를 나타내는 &lt;code&gt;cdr&lt;/code&gt; 과 는 대조적 입니다.</target>
        </trans-unit>
        <trans-unit id="f38ab8a2219073c8cf33791f6480210dcc827e6e" translate="yes" xml:space="preserve">
          <source>This function loads the Custom theme named &lt;var&gt;theme&lt;/var&gt; from its source file, looking for the source file in the directories specified by the variable &lt;code&gt;custom-theme-load-path&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Custom-Themes.html#Custom-Themes&quot;&gt;Custom Themes&lt;/a&gt; in</source>
          <target state="translated">이 기능은로드 사용자 정의 테마라는 &lt;var&gt;theme&lt;/var&gt; 변수에 의해 지정된 디렉토리에서 소스 파일을 찾고 소스 파일에서, &lt;code&gt;custom-theme-load-path&lt;/code&gt; . 참고 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Custom-Themes.html#Custom-Themes&quot;&gt;사용자 지정 테마&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="ed0cb17a74d6ad1d1367c6fd472b261e4b24d269" translate="yes" xml:space="preserve">
          <source>This function loads the Custom theme named &lt;var&gt;theme&lt;/var&gt; from its source file, looking for the source file in the directories specified by the variable &lt;code&gt;custom-theme-load-path&lt;/code&gt;. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Custom-Themes.html#Custom-Themes&quot;&gt;Custom Themes&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cf4a114b62213579c08756e0af599bc20cf6bc" translate="yes" xml:space="preserve">
          <source>This function locks the file &lt;var&gt;filename&lt;/var&gt;, if the current buffer is modified. The argument &lt;var&gt;filename&lt;/var&gt; defaults to the current buffer&amp;rsquo;s visited file. Nothing is done if the current buffer is not visiting a file, or is not modified, or if the option &lt;code&gt;create-lockfiles&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수 는 현재 버퍼가 수정 된 경우 &lt;var&gt;filename&lt;/var&gt; 파일을 잠급니다 . 인수 &lt;var&gt;filename&lt;/var&gt; 은 기본적으로 현재 버퍼의 방문 파일입니다. 현재 버퍼가 파일을 방문하지 않거나 수정되지 않은 경우 또는 &lt;code&gt;create-lockfiles&lt;/code&gt; 옵션 이 &lt;code&gt;nil&lt;/code&gt; 인 경우 아무 작업도 수행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="06675599cb04d6c7015811dbc48d59051402a126" translate="yes" xml:space="preserve">
          <source>This function looks at the text of the specified &lt;var&gt;object&lt;/var&gt; between positions &lt;var&gt;from&lt;/var&gt; (inclusive) and &lt;var&gt;to&lt;/var&gt; (exclusive), and returns the first position where it finds a strong left-to-right character whose directional properties were forced to display the character as right-to-left, or for a strong right-to-left character that was forced to display as left-to-right. If it finds no such characters in the specified region of text, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;from&lt;/var&gt; (포함)과 &lt;var&gt;to&lt;/var&gt; (배타적) 위치 사이에 지정된 &lt;var&gt;object&lt;/var&gt; 의 텍스트를보고 , 방향 속성이 문자를 오른쪽으로 표시하도록 강제 된 강한 왼쪽에서 오른쪽 문자를 찾은 첫 번째 위치를 반환합니다. 왼쪽에서 오른쪽으로 표시해야하는 강력한 오른쪽에서 왼쪽 문자의 경우. 지정된 텍스트 영역에서 그러한 문자를 찾지 못하면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f1609cb3d5a67938fa9a7d9db3fcc26cf173b73d" translate="yes" xml:space="preserve">
          <source>This function looks for connection-local variables according to &lt;var&gt;criteria&lt;/var&gt;, and immediately applies them in the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;criteria&lt;/var&gt; 에 따라 연결 로컬 변수를 찾고 즉시 현재 버퍼에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="14ecbe3abbb11fd5dde5fe0313d29a1c511f409e" translate="yes" xml:space="preserve">
          <source>This function looks for directory-local variables, and immediately applies them in the current buffer. It is intended to be called in the mode commands for non-file buffers, such as Dired buffers, to let them obey directory-local variable settings. For non-file buffers, Emacs looks for directory-local variables in &lt;code&gt;default-directory&lt;/code&gt; and its parent directories.</source>
          <target state="translated">이 함수는 디렉토리 로컬 변수를 찾고 즉시 현재 버퍼에 적용합니다. Dired 버퍼와 같은 파일이 아닌 버퍼에 대한 모드 명령에서 호출되어 디렉토리 로컬 변수 설정을 준수 할 수 있습니다. 파일이 아닌 버퍼의 경우 Emacs는 &lt;code&gt;default-directory&lt;/code&gt; 와 부모 디렉토리 에서 디렉토리 로컬 변수를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="bc295c3e87fb4f6223ab3ee1000e87fd0df5bf54" translate="yes" xml:space="preserve">
          <source>This function looks up &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;table&lt;/var&gt;, and returns its associated &lt;var&gt;value&lt;/var&gt;&amp;mdash;or &lt;var&gt;default&lt;/var&gt;, if &lt;var&gt;key&lt;/var&gt; has no association in &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이 기능은 조회 &lt;var&gt;key&lt;/var&gt; 의 &lt;var&gt;table&lt;/var&gt; , 그리고 관련 반환 &lt;var&gt;value&lt;/var&gt; - 또는 &lt;var&gt;default&lt;/var&gt; 경우, &lt;var&gt;key&lt;/var&gt; 에있는 아무 관련이없는 &lt;var&gt;table&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6b0df4e12632df0b9254c90a2fdf8ef2747b37e6" translate="yes" xml:space="preserve">
          <source>This function lowers frame &lt;var&gt;frame&lt;/var&gt; (default, the selected frame) below all other frames belonging to the same or a higher z-group as &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), this lowers &lt;var&gt;frame&lt;/var&gt; below all other child frames of its parent.</source>
          <target state="translated">이 기능 저하 프레임 &lt;var&gt;frame&lt;/var&gt; 과 동일한 또는 더 높은 Z 그룹에 속하는 다른 모든 프레임들 아래의 (디폴트 선택된 프레임) &lt;var&gt;frame&lt;/var&gt; . 경우 &lt;var&gt;frame&lt;/var&gt; 자식 프레임이다 ( &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;아이 프레임&lt;/a&gt; 이 저하 된) &lt;var&gt;frame&lt;/var&gt; 부모의 다른 모든 자식 프레임 아래에 있습니다.</target>
        </trans-unit>
        <trans-unit id="22c9c4d9843cab17121e93cd53f85654891fe35e" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;buffer-or-name&lt;/var&gt; the current buffer and displays it in some window, preferably not the window currently selected. It then selects the displaying window. If that window is on a different graphical frame, that frame is given input focus if possible (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">이 함수는 현재 버퍼를 버퍼링 &lt;var&gt;buffer-or-name&lt;/var&gt; 하고 현재 선택된 창이 아닌 일부 창에 표시합니다. 그런 다음 표시 창을 선택합니다. 그 윈도우가 다른 그래픽 프레임 인 경우가 가능 (표시되면, 그 프레임은 입력 포커스를 부여 &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;입력 포커스&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ac93b5b66daebaabc63ce1380141b6d9fdf9a1d0" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;buffer-or-name&lt;/var&gt; the current buffer. &lt;var&gt;buffer-or-name&lt;/var&gt; must be an existing buffer or the name of an existing buffer. The return value is the buffer made current.</source>
          <target state="translated">이 함수는 현재 버퍼를 &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 만듭니다 . &lt;var&gt;buffer-or-name&lt;/var&gt; 은 기존 버퍼 또는 기존 버퍼의 이름 이어야합니다. 반환 값은 현재 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="456a66d4107c57a2793734c988a5d73a71ea301a" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;char&lt;/var&gt; case-invariant, with syntax &lt;var&gt;syntax&lt;/var&gt;.</source>
          <target state="translated">이 함수는 구문 &lt;var&gt;syntax&lt;/var&gt; 하여 &lt;var&gt;char&lt;/var&gt; 대소 문자를 불변으로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c516e66ce171f307db7e705b27bc1ee892d22ea5" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;charsets&lt;/var&gt; the highest priority character sets.</source>
          <target state="translated">이 기능을 사용하게 &lt;var&gt;charsets&lt;/var&gt; 우선 순위가 가장 높은 문자 집합을.</target>
        </trans-unit>
        <trans-unit id="fd3cafe261afc6e8d95d65d7dc78f6d1b7afbfd2" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;keymap&lt;/var&gt; the new current global keymap. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;keymap&lt;/var&gt; 을 새로운 현재 전역 키맵으로 만듭니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4af3a9ff2a228675f7e08968d977f09f12510231" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;keymap&lt;/var&gt; the new local keymap of the current buffer. If &lt;var&gt;keymap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the buffer has no local keymap. &lt;code&gt;use-local-map&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. Most major mode commands use this function.</source>
          <target state="translated">이 함수는 &lt;var&gt;keymap&lt;/var&gt; 현재 버퍼의 새로운 로컬 키맵으로 만듭니다 . 경우 &lt;var&gt;keymap&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , 그 버퍼는 로컬 키 맵이 없다. &lt;code&gt;use-local-map&lt;/code&gt; 은 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 대부분의 주요 모드 명령은이 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8c1749d870609b3bade7ea42bd0ade793f0398ce" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;process&lt;/var&gt; see an end-of-file in its input. The</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 가 입력에서 파일 끝을 보게합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="fe76ba944050611126615fe655ef8dcab5345002" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s function cell void, so that a subsequent attempt to access this cell will cause a &lt;code&gt;void-function&lt;/code&gt; error. It returns &lt;var&gt;symbol&lt;/var&gt;. (See also &lt;code&gt;makunbound&lt;/code&gt;, in &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Void Variables&lt;/a&gt;.)</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 의 함수 셀을 무효화하므로 이후에이 셀에 액세스하려고하면 &lt;code&gt;void-function&lt;/code&gt; 오류가 발생합니다. &lt;var&gt;symbol&lt;/var&gt; 을 반환합니다 . (참조 &lt;code&gt;makunbound&lt;/code&gt; 에, &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;무효 변수&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="5ba515bcb4e93cb65ecc2fe1455cb72712846809" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;table&lt;/var&gt; the category table for the current buffer. It returns &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;table&lt;/var&gt; 현재 버퍼의 범주 테이블로 만듭니다 . &lt;var&gt;table&lt;/var&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="792b793e94877cf109e9a97bb12ea73d0948ebc1" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;table&lt;/var&gt; the standard case table, so that it will be used in any buffers created subsequently.</source>
          <target state="translated">이 함수는 &lt;var&gt;table&lt;/var&gt; 을 표준 케이스 테이블로 만들어 이후에 생성되는 모든 버퍼에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e6e348f53e5361b5b69bf91912469bd5ba7fc19e" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;table&lt;/var&gt; the syntax table for the current buffer. It returns &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;table&lt;/var&gt; 현재 버퍼의 구문 테이블로 만듭니다 . &lt;var&gt;table&lt;/var&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="db1db24e1ee0045d2799754695c2b72861c76ea8" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; display &lt;var&gt;buffer-or-name&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; should be a live window; if &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of an existing buffer. This function does not change which window is selected, nor does it directly change which buffer is current (see &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;). Its return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 디스플레이를 &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 만듭니다. &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야합니다. 만약 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값. &lt;var&gt;buffer-or-name&lt;/var&gt; 은 버퍼이거나 기존 버퍼의 이름 이어야합니다. 이 기능은 선택된 창을 변경하지 않으며 현재 버퍼를 직접 변경하지도 않습니다 ( &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;현재 버퍼&lt;/a&gt; 참조 ). 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="30bfeed6726fd625b9c4a0855f6ccb6a2f2effeb" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; fill its frame, deleting other windows as necessary. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. An error is signaled if &lt;var&gt;window&lt;/var&gt; is a side window (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;). If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), this function tries to make the root of that atomic window fill its frame. The return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 &lt;var&gt;window&lt;/var&gt; 프레임을 채우고 필요에 따라 다른 창을 삭제합니다. 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값. 경우 오류가 신호됩니다 &lt;var&gt;window&lt;/var&gt; 사이드 창 (참조입니다 &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;사이드 윈도우&lt;/a&gt; ). 경우 &lt;var&gt;window&lt;/var&gt; 원자 윈도우의 일부이다 ( &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;원자 Windows가&lt;/a&gt; 이 기능은 그 원자 윈도우의 루트가 프레임을 채울 시도). 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c3f76a86b820e42a1010cd793d05e7b466b125cb" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; the selected window and the window selected within its frame (see &lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;Basic Windows&lt;/a&gt;), and selects that frame. It also makes &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) current and sets that buffer&amp;rsquo;s value of &lt;code&gt;point&lt;/code&gt; to the value of &lt;code&gt;window-point&lt;/code&gt; (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;) in &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window. The return value is &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 을 선택한 창과 프레임 내에서 선택한 창으로 만들고 ( &lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;기본 창&lt;/a&gt; 참조 ) 해당 프레임을 선택합니다. 또한하게 &lt;var&gt;window&lt;/var&gt; 의 버퍼 (참조 &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;버퍼와 윈도우&lt;/a&gt; 의 버퍼의 값 있음) 현재와 세트 &lt;code&gt;point&lt;/code&gt; 의 값으로 &lt;code&gt;window-point&lt;/code&gt; (참조 &lt;a href=&quot;window-point#Window-Point&quot;&gt;창 포인트&lt;/a&gt; 에서) &lt;var&gt;window&lt;/var&gt; . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야합니다. 반환 값은 &lt;var&gt;window&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a47086199a69064a8c75969e5a791c1e45214bee" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; the window selected within the frame &lt;var&gt;frame&lt;/var&gt;. &lt;var&gt;frame&lt;/var&gt; should be a live frame; if &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame. &lt;var&gt;window&lt;/var&gt; should be a live window; if &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 기능은 &lt;var&gt;window&lt;/var&gt; 프레임 &lt;var&gt;frame&lt;/var&gt; 내에서 선택된 창으로 만듭니다 . &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임 이어야합니다. 만약 &lt;code&gt;nil&lt;/code&gt; 선택한 프레임, 기본값. &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야합니다. 만약 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값.</target>
        </trans-unit>
        <trans-unit id="a223ffcc323beffacdf72bc735717e1df45d8252" translate="yes" xml:space="preserve">
          <source>This function makes a backup of the file visited by the current buffer, if appropriate. It is called by &lt;code&gt;save-buffer&lt;/code&gt; before saving the buffer the first time.</source>
          <target state="translated">이 기능은 적절한 경우 현재 버퍼가 방문한 파일을 백업합니다. 처음 &lt;code&gt;save-buffer&lt;/code&gt; 를 저장하기 전에 save-buffer에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="b4f7bbdf78902e155a5390b958d1755baebc606f" translate="yes" xml:space="preserve">
          <source>This function makes a copy in pure storage of &lt;var&gt;object&lt;/var&gt;, and returns it. It copies a string by simply making a new string with the same characters, but without text properties, in pure storage. It recursively copies the contents of vectors and cons cells. It does not make copies of other objects such as symbols, but just returns them unchanged. It signals an error if asked to copy markers.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 의 순수 저장소에 복사본을 만들고 반환합니다. 순수한 저장소에 텍스트 속성이없는 동일한 문자로 새 문자열을 만들어 문자열을 복사합니다. 벡터 및 단점 셀의 내용을 재귀 적으로 복사합니다. 심볼과 같은 다른 개체의 복사본을 만들지 않고 변경되지 않은 상태로 반환합니다. 마커 복사를 요청하면 오류 신호를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="392b5db678a717806b2bda451acc8d14d898a182" translate="yes" xml:space="preserve">
          <source>This function makes characters &lt;var&gt;l&lt;/var&gt; and &lt;var&gt;r&lt;/var&gt; a matching pair of case-invariant delimiters.</source>
          <target state="translated">이 함수는 문자 &lt;var&gt;l&lt;/var&gt; 및 &lt;var&gt;r&lt;/var&gt; 을 대소 문자 고정 구분 기호의 일치하는 쌍으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e01f8ed37723ffb7de1e6308a28e177cf72720b9" translate="yes" xml:space="preserve">
          <source>This function makes frame &lt;var&gt;frame&lt;/var&gt; invisible. If you omit &lt;var&gt;frame&lt;/var&gt;, it makes the selected frame invisible. Usually, this makes all child frames of &lt;var&gt;frame&lt;/var&gt; (and their descendants) invisible too (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</source>
          <target state="translated">이 기능은 프레임 &lt;var&gt;frame&lt;/var&gt; 보이지 않게합니다. &lt;var&gt;frame&lt;/var&gt; 을 생략 하면 선택한 프레임이 보이지 않게됩니다. 일반적으로 이렇게하면 프레임의 모든 하위 &lt;var&gt;frame&lt;/var&gt; (및 &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;하위 프레임&lt;/a&gt; ) 도 표시되지 않습니다 ( 하위 프레임 참조 ).</target>
        </trans-unit>
        <trans-unit id="d25400023cf05cc2f1b602d761f0a29748856373" translate="yes" xml:space="preserve">
          <source>This function makes frame &lt;var&gt;frame&lt;/var&gt; visible. If you omit &lt;var&gt;frame&lt;/var&gt;, it makes the selected frame visible. This does not raise the frame, but you can do that with &lt;code&gt;raise-frame&lt;/code&gt; if you wish (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;).</source>
          <target state="translated">이 기능은 프레임 &lt;var&gt;frame&lt;/var&gt; 표시합니다. &lt;var&gt;frame&lt;/var&gt; 을 생략 하면 선택한 프레임이 표시됩니다. 이것은 프레임을 올리지 않지만, 원한다면 &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;올리기 &lt;/a&gt; &lt;code&gt;raise-frame&lt;/code&gt; 할 수 있습니다 ( 올리기 및 내리기 참조 ).</target>
        </trans-unit>
        <trans-unit id="e2a8f08df0204bf6e068fa5cd46b15356db49ed8" translate="yes" xml:space="preserve">
          <source>This function makes the byte compiler warn that the variable &lt;var&gt;obsolete-name&lt;/var&gt; is obsolete. If &lt;var&gt;current-name&lt;/var&gt; is a symbol, it is the variable&amp;rsquo;s new name; then the warning message says to use &lt;var&gt;current-name&lt;/var&gt; instead of &lt;var&gt;obsolete-name&lt;/var&gt;. If &lt;var&gt;current-name&lt;/var&gt; is a string, this is the message and there is no replacement variable. &lt;var&gt;when&lt;/var&gt; should be a string indicating when the variable was first made obsolete (usually a version number string).</source>
          <target state="translated">이 함수는 바이트 컴파일러가 변수 &lt;var&gt;obsolete-name&lt;/var&gt; 이 더 이상 사용되지 않는다고 경고하도록합니다 . 경우 &lt;var&gt;current-name&lt;/var&gt; 상징, 그것은 변수의 새로운 이름입니다; 그런 다음 경고 메시지는 &lt;var&gt;obsolete-name&lt;/var&gt; 대신 &lt;var&gt;current-name&lt;/var&gt; 을 사용하라는 메시지를 표시합니다 . 경우 &lt;var&gt;current-name&lt;/var&gt; 문자열이며,이 메시지이며, 대체 변수가 없습니다. &lt;var&gt;when&lt;/var&gt; 은 변수가 처음 폐기 된시기를 나타내는 문자열이어야합니다 (일반적으로 버전 번호 문자열).</target>
        </trans-unit>
        <trans-unit id="2c3fa9b6be0128ab7df1bae9c4b587998fd22b62" translate="yes" xml:space="preserve">
          <source>This function makes the packages available to the current session. The user option &lt;code&gt;package-load-list&lt;/code&gt; specifies which packages to make available; by default, all installed packages are made available. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Package-Installation.html#Package-Installation&quot;&gt;Package Installation&lt;/a&gt; in</source>
          <target state="translated">이 기능은 현재 세션에서 패키지를 사용할 수 있도록합니다. 사용자 옵션 &lt;code&gt;package-load-list&lt;/code&gt; 는 사용할 수있는 패키지를 지정합니다. 기본적으로 설치된 모든 패키지를 사용할 수 있습니다. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Package-Installation.html#Package-Installation&quot;&gt;패키지 설치&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee5ee7f621292616dbb567d9b6817f5443b740de" translate="yes" xml:space="preserve">
          <source>This function makes the packages available to the current session. The user option &lt;code&gt;package-load-list&lt;/code&gt; specifies which packages to make available; by default, all installed packages are made available. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Package-Installation.html#Package-Installation&quot;&gt;Package Installation&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e880c77358b7e1933de105e331a350fe94e7be5" translate="yes" xml:space="preserve">
          <source>This function marks &lt;var&gt;obsolete-name&lt;/var&gt; as obsolete. &lt;var&gt;obsolete-name&lt;/var&gt; should be a symbol naming a function or macro, or an alias for a function or macro.</source>
          <target state="translated">이 함수는 &lt;var&gt;obsolete-name&lt;/var&gt; 을 구식으로 표시합니다 . &lt;var&gt;obsolete-name&lt;/var&gt; 은 함수 나 매크로의 이름을 지정하는 기호이거나 함수 나 매크로의 별칭이어야합니다.</target>
        </trans-unit>
        <trans-unit id="56c276bb4301973cb3f66f9fe498c7c1f6f42623" translate="yes" xml:space="preserve">
          <source>This function marks &lt;var&gt;variable&lt;/var&gt; (a symbol) automatically buffer-local, so that any subsequent attempt to set it will make it local to the current buffer at the time. Unlike &lt;code&gt;make-local-variable&lt;/code&gt;, with which it is often confused, this cannot be undone, and affects the behavior of the variable in all buffers.</source>
          <target state="translated">이 함수는 &lt;var&gt;variable&lt;/var&gt; (심볼)를 자동으로 버퍼 로컬로 표시하므로 이후에 변수 를 설정하려고하면 해당 시간에 현재 버퍼에 로컬이됩니다. 종종 혼동되는 &lt;code&gt;make-local-variable&lt;/code&gt; 과 달리이 작업은 취소 할 수 없으며 모든 버퍼에서 변수의 동작에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="31ca95061d1c363390eed538ba5c903610a19bbe" translate="yes" xml:space="preserve">
          <source>This function marks &lt;var&gt;window&lt;/var&gt; as dedicated to its buffer if &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and non-dedicated otherwise.</source>
          <target state="translated">이 함수는 &lt;var&gt;flag&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 전용 이 아닌 &lt;var&gt;window&lt;/var&gt; 을 버퍼 전용으로 표시 하고 그렇지 않으면 전용이 아닌 것으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="54abb8146717319fb9ce85a7c1a9e4b14f8253d1" translate="yes" xml:space="preserve">
          <source>This function marks the current buffer as auto-saved. The buffer will not be auto-saved again until the buffer text is changed again. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 현재 버퍼를 자동 저장된 것으로 표시합니다. 버퍼 텍스트가 다시 변경 될 때까지 버퍼는 다시 자동 저장되지 않습니다. 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="56f1f70a243bce78428c7d9f0ec9a3c1683c4780" translate="yes" xml:space="preserve">
          <source>This function marks the current buffer as modified if &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, or as unmodified if the flag is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;flag&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 수정 된 것으로 현재 버퍼를 표시 하고 플래그가 &lt;code&gt;nil&lt;/code&gt; 인 경우 수정되지 않은 것으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="0542163c98a55c5297538d9961d9b38a525ad5c5" translate="yes" xml:space="preserve">
          <source>This function may be called in arbitrary contexts, including from inside &lt;code&gt;read-event&lt;/code&gt;, so take the same care as you might when writing a process filter.</source>
          <target state="translated">이 함수는 &lt;code&gt;read-event&lt;/code&gt; 내부를 포함하여 임의의 컨텍스트에서 호출 될 수 있으므로 프로세스 필터를 작성할 때와 동일한주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="dc9fc08d70ec17fa9428fb57cc61401eaed67092" translate="yes" xml:space="preserve">
          <source>This function may instead signal a &lt;code&gt;file-locked&lt;/code&gt; error, in which case the change that the user was about to make does not take place.</source>
          <target state="translated">이 함수는 대신 &lt;code&gt;file-locked&lt;/code&gt; 오류를 나타낼 수 있으며 ,이 경우 사용자가 변경하려고하는 변경 사항이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cbb2fd444d462a95e469f97c1ef2803cb3e9d6ed" translate="yes" xml:space="preserve">
          <source>This function modifies &lt;code&gt;keyboard-translate-table&lt;/code&gt; to translate character code &lt;var&gt;from&lt;/var&gt; into character code &lt;var&gt;to&lt;/var&gt;. It creates the keyboard translate table if necessary.</source>
          <target state="translated">이 기능은 수정의 &lt;code&gt;keyboard-translate-table&lt;/code&gt; 문자 코드를 변환 할 수 &lt;var&gt;from&lt;/var&gt; 문자 코드에 &lt;var&gt;to&lt;/var&gt; . 필요한 경우 키보드 번역 테이블을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3f65398368a39c59b0ee145d6563e34fd1dc738a" translate="yes" xml:space="preserve">
          <source>This function modifies the category set of &lt;var&gt;char&lt;/var&gt; in category table &lt;var&gt;table&lt;/var&gt; (which defaults to the current buffer&amp;rsquo;s category table). &lt;var&gt;char&lt;/var&gt; can be a character, or a cons cell of the form &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt;; in the latter case, the function modifies the category sets of all characters in the range between &lt;var&gt;min&lt;/var&gt; and &lt;var&gt;max&lt;/var&gt;, inclusive.</source>
          <target state="translated">이 함수는 범주 테이블 &lt;var&gt;table&lt;/var&gt; (기본값은 현재 버퍼의 범주 테이블) 에서 &lt;var&gt;char&lt;/var&gt; 의 범주 집합을 수정합니다 . &lt;var&gt;char&lt;/var&gt; 는 문자 또는 &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt; ) 형식의 cons 셀일 수 있습니다 . 후자의 경우이 함수는 &lt;var&gt;min&lt;/var&gt; 과 &lt;var&gt;max&lt;/var&gt; 사이의 범위에있는 모든 문자의 범주 집합을 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="185290f0f79c7c281cb93e1dfa7b2b579d3958f1" translate="yes" xml:space="preserve">
          <source>This function modifies the existing fontset &lt;var&gt;name&lt;/var&gt; to use the font matching with &lt;var&gt;font-spec&lt;/var&gt; for the specified &lt;var&gt;character&lt;/var&gt;.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;character&lt;/var&gt; 대해 &lt;var&gt;font-spec&lt;/var&gt; 과 일치하는 글꼴을 사용 하도록 기존 글꼴 집합 &lt;var&gt;name&lt;/var&gt; 을 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="81241728bbbc53a4cf1073b98dbd8ef76607a530" translate="yes" xml:space="preserve">
          <source>This function momentarily displays &lt;var&gt;string&lt;/var&gt; in the current buffer at &lt;var&gt;position&lt;/var&gt;. It has no effect on the undo list or on the buffer&amp;rsquo;s modification status.</source>
          <target state="translated">이 함수 는 현재 버퍼의 &lt;var&gt;position&lt;/var&gt; 에있는 &lt;var&gt;string&lt;/var&gt; 을 일시적으로 표시 합니다 . 실행 취소 목록이나 버퍼의 수정 상태에는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dba78ab6ba542b9c635a74c736b8cf9f6745fb25" translate="yes" xml:space="preserve">
          <source>This function moves &lt;var&gt;marker&lt;/var&gt; to &lt;var&gt;position&lt;/var&gt; in &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;buffer&lt;/var&gt; is not provided, it defaults to the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;marker&lt;/var&gt; 를 &lt;var&gt;buffer&lt;/var&gt; 의 &lt;var&gt;position&lt;/var&gt; 로 이동 합니다 . 경우 &lt;var&gt;buffer&lt;/var&gt; 현재 버퍼가 기본값을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="62f440d0f6fc3f93cc512fa17613acb65e479c47" translate="yes" xml:space="preserve">
          <source>This function moves &lt;var&gt;overlay&lt;/var&gt; to &lt;var&gt;buffer&lt;/var&gt;, and places its bounds at &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. Both arguments &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; must specify buffer positions; they may be integers or markers.</source>
          <target state="translated">이 함수는 &lt;var&gt;overlay&lt;/var&gt; 를 &lt;var&gt;buffer&lt;/var&gt; 이동 하고 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 경계를 배치합니다 . &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 인수는 모두 버퍼 위치를 지정해야합니다. 정수 또는 마커 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0786429af3a6a95dd29a42832df5bde93bff87ef" translate="yes" xml:space="preserve">
          <source>This function moves &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s bottom edge by &lt;var&gt;delta&lt;/var&gt; lines. If optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it instead moves the right edge by &lt;var&gt;delta&lt;/var&gt; columns. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 기능은 &lt;var&gt;delta&lt;/var&gt; 라인 으로 &lt;var&gt;window&lt;/var&gt; 하단 가장자리를 이동 합니다. 선택적 인수 &lt;var&gt;horizontal&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 대신 &lt;var&gt;delta&lt;/var&gt; 열 만큼 오른쪽 가장자리를 이동합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값.</target>
        </trans-unit>
        <trans-unit id="f2ed42b4e2cd42ffdb61502b806dd8a21b6bd179" translate="yes" xml:space="preserve">
          <source>This function moves back to the &lt;var&gt;arg&lt;/var&gt;th beginning of a defun. If &lt;var&gt;arg&lt;/var&gt; is negative, this actually moves forward, but it still moves to the beginning of a defun, not to the end of one. &lt;var&gt;arg&lt;/var&gt; defaults to 1.</source>
          <target state="translated">이 함수는 defun 의 &lt;var&gt;arg&lt;/var&gt; th 시작 으로 돌아갑니다 . 경우 &lt;var&gt;arg&lt;/var&gt; 부정적이며,이없는 하나의 끝에, 실제로 전진하지만, defun는의 시작이 여전히 이동합니다. &lt;var&gt;arg&lt;/var&gt; 의 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="f564b01b13b1cfb06b48d4ba51db86a70fd36b43" translate="yes" xml:space="preserve">
          <source>This function moves backward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced expressions.</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; (기본값 1) 균형 표현식에서 뒤로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="a92bf76d4cdd92afe7de0f5b0defb90dd440e5e6" translate="yes" xml:space="preserve">
          <source>This function moves backward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced groups of parentheses. (Other syntactic entities such as words or paired string quotes are ignored.)</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; (기본값 1) 균형 잡힌 괄호 그룹에서 뒤로 이동합니다 . (단어 또는 쌍을 이룬 문자열 따옴표와 같은 기타 구문 엔티티는 무시됩니다.)</target>
        </trans-unit>
        <trans-unit id="2ef8928ce6154d2d8032728fde31d63921fd9167" translate="yes" xml:space="preserve">
          <source>This function moves forward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced expressions. Balanced expressions include both those delimited by parentheses and other kinds, such as words and string constants. See &lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;Parsing Expressions&lt;/a&gt;. For example,</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; (기본값 1) 균형 표현식에서 앞으로 이동합니다 . 균형 잡힌 식에는 괄호로 구분 된 식과 단어 및 문자열 상수와 같은 다른 종류가 모두 포함됩니다. &lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;식 구문 분석을&lt;/a&gt; 참조하십시오 . 예를 들면</target>
        </trans-unit>
        <trans-unit id="8c49a0d0469def5619471c08af7c8e944723c220" translate="yes" xml:space="preserve">
          <source>This function moves forward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced groups of parentheses. (Other syntactic entities such as words or paired string quotes are ignored.)</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; (기본값 1) 균형 잡힌 괄호 그룹에서 앞으로 이동합니다 . (단어 또는 쌍을 이룬 문자열 따옴표와 같은 기타 구문 엔티티는 무시됩니다.)</target>
        </trans-unit>
        <trans-unit id="c7afe1a0092e1128e81fb307a7c69db4aaa74981" translate="yes" xml:space="preserve">
          <source>This function moves forward into &lt;var&gt;arg&lt;/var&gt; (default 1) levels of parentheses. A negative argument means move backward but still go deeper in parentheses (-&lt;var&gt;arg&lt;/var&gt; levels).</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; (기본값 1) 수준의 괄호 로 앞으로 이동합니다 . 음수 인수는 뒤로 이동하지만 괄호 안에 더 깊이 들어가는 것을 의미합니다 ( &lt;var&gt;arg&lt;/var&gt; 수준).</target>
        </trans-unit>
        <trans-unit id="64a532780501e8d0b75b251c2da8a4d7d5b86b55" translate="yes" xml:space="preserve">
          <source>This function moves forward out of &lt;var&gt;arg&lt;/var&gt; (default 1) levels of parentheses. A negative argument means move backward but still to a less deep spot. If &lt;var&gt;escape-strings&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (as it is interactively), move out of enclosing strings as well. If &lt;var&gt;no-syntax-crossing&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (as it is interactively), prefer to break out of any enclosing string instead of moving to the start of a list broken across multiple strings. On error, location of point is unspecified.</source>
          <target state="translated">이 함수는 괄호 의 &lt;var&gt;arg&lt;/var&gt; (기본값 1) 수준에서 앞으로 이동합니다 . 부정적인 주장은 뒤로 이동하지만 여전히 덜 깊은 지점으로 이동하는 것을 의미합니다. &lt;var&gt;escape-strings&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 (대화식으로), 둘러싸는 문자열에서도 이동하십시오. 경우 &lt;var&gt;no-syntax-crossing&lt;/var&gt; 비없는 &lt;code&gt;nil&lt;/code&gt; (가 대화 형처럼) 대신 여러 문자열을 통해 깨진 목록의 시작 부분으로 이동 둘러싸는 문자열의 탈옥하는 것을 선호합니다. 오류시 점의 위치가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b2bfa57be5d9dc4422269573eda69a85d36c8943" translate="yes" xml:space="preserve">
          <source>This function moves forward to the &lt;var&gt;arg&lt;/var&gt;th end of a defun. If &lt;var&gt;arg&lt;/var&gt; is negative, this actually moves backward, but it still moves to the end of a defun, not to the beginning of one. &lt;var&gt;arg&lt;/var&gt; defaults to 1.</source>
          <target state="translated">이 함수는 defun 의 &lt;var&gt;arg&lt;/var&gt; 번째 끝으로 이동합니다 . 경우 &lt;var&gt;arg&lt;/var&gt; 부정적이며, 이것은 실제로 뒤로 이동하지만,하지의 처음 부분에 defun는 말에 여전히 이동. &lt;var&gt;arg&lt;/var&gt; 의 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="1b0d7ac832339c9ac44670c3bd075a94a90f8501" translate="yes" xml:space="preserve">
          <source>This function moves point &lt;var&gt;count&lt;/var&gt; characters forward, towards the end of the buffer (or backward, towards the beginning of the buffer, if &lt;var&gt;count&lt;/var&gt; is negative). If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the default is 1.</source>
          <target state="translated">이 함수는 포인트 &lt;var&gt;count&lt;/var&gt; 문자를 버퍼의 끝으로 앞쪽으로 (또는 &lt;var&gt;count&lt;/var&gt; 가 음수 이면 버퍼의 시작쪽으로 뒤로) 이동합니다 . 경우 &lt;var&gt;count&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="a3d8ceb42f18987be169049b443605cc560e26ed" translate="yes" xml:space="preserve">
          <source>This function moves point backward across characters whose syntax classes are mentioned in &lt;var&gt;syntaxes&lt;/var&gt;. It stops when it encounters the beginning of the buffer, or position &lt;var&gt;limit&lt;/var&gt; (if specified), or a character it is not supposed to skip.</source>
          <target state="translated">이 기능은 이동 그 구문 클래스로 언급되고있는 문자에 걸쳐 후방으로 가리 &lt;var&gt;syntaxes&lt;/var&gt; . 버퍼의 시작, 위치 &lt;var&gt;limit&lt;/var&gt; (지정된 경우) 또는 건너 뛸 수없는 문자를 만나면 중지됩니다 .</target>
        </trans-unit>
        <trans-unit id="163e53641a97982181e95a72128ebc7c18edc3ab" translate="yes" xml:space="preserve">
          <source>This function moves point backward over any number of characters with expression prefix syntax. This includes both characters in the expression prefix syntax class, and characters with the &amp;lsquo;</source>
          <target state="translated">이 함수는 표현식 접두사 구문을 사용하여 임의의 수의 문자 위로 포인트를 뒤로 이동합니다. 여기에는 식 접두사 구문 클래스의 문자와 '</target>
        </trans-unit>
        <trans-unit id="c9b63f87fa1abaf9e9315fdea1bb29418b48f652" translate="yes" xml:space="preserve">
          <source>This function moves point backward, skipping characters that match &lt;var&gt;character-set&lt;/var&gt;, until &lt;var&gt;limit&lt;/var&gt;. It is just like &lt;code&gt;skip-chars-forward&lt;/code&gt; except for the direction of motion.</source>
          <target state="translated">이 함수는 &lt;var&gt;limit&lt;/var&gt; 까지 &lt;var&gt;character-set&lt;/var&gt; 일치하는 문자를 건너 뛰고 포인트를 뒤로 이동합니다 . 움직임의 방향을 제외하고는 &lt;code&gt;skip-chars-forward&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b39451fc7669ed3d4fa66ea2b4d602953955e0a4" translate="yes" xml:space="preserve">
          <source>This function moves point forward &lt;var&gt;count&lt;/var&gt; lines, to the beginning of the line following that. If &lt;var&gt;count&lt;/var&gt; is negative, it moves point -&lt;var&gt;count&lt;/var&gt; lines backward, to the beginning of a line preceding that. If &lt;var&gt;count&lt;/var&gt; is zero, it moves point to the beginning of the current line. If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means 1.</source>
          <target state="translated">이 기능은 포인트 앞으로 &lt;var&gt;count&lt;/var&gt; 라인을 그 다음 라인의 시작 부분으로 이동 합니다. 경우 &lt;var&gt;count&lt;/var&gt; - 마이너스이고, 그 이동 지점 &lt;var&gt;count&lt;/var&gt; 그 이전 라인의 시작까지 역방향 라인. 경우 &lt;var&gt;count&lt;/var&gt; 제로, 현재 라인의 시작 부분에 포인트를 이동합니다. 경우 &lt;var&gt;count&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; 것을 의미 하나.</target>
        </trans-unit>
        <trans-unit id="04dbae29704dce2212f32814a38bfd618273b4bd" translate="yes" xml:space="preserve">
          <source>This function moves point forward &lt;var&gt;count&lt;/var&gt; words (or backward if &lt;var&gt;count&lt;/var&gt; is negative). If &lt;var&gt;count&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1. In an interactive call, &lt;var&gt;count&lt;/var&gt; is specified by the numeric prefix argument.</source>
          <target state="translated">이 함수는 포인트 앞으로 &lt;var&gt;count&lt;/var&gt; 단어를 이동합니다 (또는 &lt;var&gt;count&lt;/var&gt; 가 음수 이면 뒤로 ). 경우 &lt;var&gt;count&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 대화 형 호출에서 1로, 기본값, &lt;var&gt;count&lt;/var&gt; 숫자 접두사 인수에 의해 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="52be5629b9edfd673d22bdfc5e8f09c8256435d8" translate="yes" xml:space="preserve">
          <source>This function moves point forward across &lt;var&gt;count&lt;/var&gt; complete comments (that is, including the starting delimiter and the terminating delimiter if any), plus any whitespace encountered on the way. It moves backward if &lt;var&gt;count&lt;/var&gt; is negative. If it encounters anything other than a comment or whitespace, it stops, leaving point at the place where it stopped. This includes (for instance) finding the end of a comment when moving forward and expecting the beginning of one. The function also stops immediately after moving over the specified number of complete comments. If &lt;var&gt;count&lt;/var&gt; comments are found as expected, with nothing except whitespace between them, it returns &lt;code&gt;t&lt;/code&gt;; otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;count&lt;/var&gt; 완료 주석 (즉, 시작 구분 기호 및 종료 구분 기호가있는 경우 포함)과 도중에 발견 된 공백을 통해 포인트를 앞으로 이동합니다 . &lt;var&gt;count&lt;/var&gt; 가 음수 이면 뒤로 이동합니다 . 주석이나 공백 이외의 것이 있으면 중지하고 중지 된 위치에 포인트를 남깁니다. 여기에는 (예를 들어) 앞으로 나아가고 하나의 시작을 예상 할 때 주석의 끝을 찾는 것이 포함됩니다. 이 기능은 지정된 수의 완전한 주석 위로 이동 한 후 즉시 중지됩니다. 경우 &lt;var&gt;count&lt;/var&gt; 의견이 그들 사이의 공백을 제외하고 아무것도, 예상대로 발견, 그것은 반환 &lt;code&gt;t&lt;/code&gt; 을 ; 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2c5243160818f8727f05e101816d67307afdb6ef" translate="yes" xml:space="preserve">
          <source>This function moves point forward across characters having syntax classes mentioned in &lt;var&gt;syntaxes&lt;/var&gt; (a string of syntax class characters). It stops when it encounters the end of the buffer, or position &lt;var&gt;limit&lt;/var&gt; (if specified), or a character it is not supposed to skip.</source>
          <target state="translated">이 함수는 구문에 언급 된 &lt;var&gt;syntaxes&lt;/var&gt; 클래스 (구문 클래스 문자의 문자열)가있는 문자간에 포인트를 앞으로 이동합니다 . 버퍼의 끝, 위치 &lt;var&gt;limit&lt;/var&gt; (지정된 경우) 또는 건너 뛸 수없는 문자를 만나면 중지됩니다 .</target>
        </trans-unit>
        <trans-unit id="64ad6571345e45c38a762203c41be03b3686a1af" translate="yes" xml:space="preserve">
          <source>This function moves point in the current buffer forward, skipping over a given set of characters. It examines the character following point, then advances point if the character matches &lt;var&gt;character-set&lt;/var&gt;. This continues until it reaches a character that does not match. The function returns the number of characters moved over.</source>
          <target state="translated">이 함수는 현재 버퍼의 포인트를 앞으로 이동하여 주어진 문자 집합을 건너 뜁니다. 포인트를 따르는 문자를 검사 한 다음 문자가 &lt;var&gt;character-set&lt;/var&gt; 일치하면 포인트를 전진합니다 . 이것은 일치하지 않는 문자에 도달 할 때까지 계속됩니다. 이 함수는 이동 한 문자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c86aaae5f6dc7ef7e2b93a19eb1cbecaef0780e0" translate="yes" xml:space="preserve">
          <source>This function moves point of the currently selected window to the buffer position that appears immediately to the right or to the left of point on the screen. If &lt;var&gt;direction&lt;/var&gt; is positive, point will move one screen position to the right, otherwise it will move one screen position to the left. Note that, depending on the surrounding bidirectional context, this could potentially move point many buffer positions away. If invoked at the end of a screen line, the function moves point to the rightmost or leftmost screen position of the next or previous screen line, as appropriate for the value of &lt;var&gt;direction&lt;/var&gt;.</source>
          <target state="translated">이 기능은 현재 선택된 창의 지점을 화면의 지점 바로 오른쪽 또는 왼쪽에 나타나는 버퍼 위치로 이동합니다. 경우 &lt;var&gt;direction&lt;/var&gt; 긍정적 가리킨 그렇지 않으면 왼쪽으로 한 화면 위치를 이동, 한 화면 오른쪽으로 위치를 이동합니다. 주변 양방향 컨텍스트에 따라 잠재적으로 많은 버퍼 위치를 이동할 수 있습니다. 화면 줄의 끝에서 호출되면 함수는 &lt;var&gt;direction&lt;/var&gt; 값에 따라 다음 또는 이전 화면 줄의 맨 오른쪽 또는 맨 왼쪽 화면 위치로 포인트를 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="06ba4502fc10cfb4fefa5d8c6c3309a107facddb" translate="yes" xml:space="preserve">
          <source>This function moves point to &lt;var&gt;column&lt;/var&gt; in the current line. The calculation of &lt;var&gt;column&lt;/var&gt; takes into account the widths of the displayed representations of the characters between the start of the line and point.</source>
          <target state="translated">이 함수는 현재 행에서 포인트를 &lt;var&gt;column&lt;/var&gt; 으로 이동합니다 . &lt;var&gt;column&lt;/var&gt; 계산은 줄의 시작과 점 사이에 표시된 문자 표현의 너비를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="eaf1c3bf9b9cc2b4fe15ad721f578a47271914e0" translate="yes" xml:space="preserve">
          <source>This function moves point to the beginning of the buffer (or the limits of the accessible portion, when narrowing is in effect), setting the mark at the previous position (except in Transient Mark mode, if the mark is already active, it does not set the mark.)</source>
          <target state="translated">이 기능은 포인트를 버퍼의 시작 부분 (또는 축소 효과가있는 경우 액세스 가능한 부분의 한계)으로 이동하여 이전 위치에 마크를 설정합니다 (과도 마크 모드 제외, 마크가 이미 활성화 된 경우에는 마크를 설정하십시오.)</target>
        </trans-unit>
        <trans-unit id="87cadd55969715d0d0389d2020990aaf5d2566b8" translate="yes" xml:space="preserve">
          <source>This function moves point to the beginning of the current line. With an argument &lt;var&gt;count&lt;/var&gt; not &lt;code&gt;nil&lt;/code&gt; or 1, it moves forward &lt;var&gt;count&lt;/var&gt;-1 lines and then to the beginning of the line.</source>
          <target state="translated">이 함수는 현재 줄의 시작 부분으로 포인트를 이동합니다. 인수 &lt;var&gt;count&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 또는 1이 아닌 경우 &lt;var&gt;count&lt;/var&gt; -1 줄 앞으로 이동 한 다음 줄의 시작 부분으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="f146b9836385a0735cc1a5c28193196956f8ce8b" translate="yes" xml:space="preserve">
          <source>This function moves point to the end of the buffer (or the limits of the accessible portion, when narrowing is in effect), setting the mark at the previous position (except in Transient Mark mode when the mark is already active). If &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it puts point &lt;var&gt;n&lt;/var&gt; tenths of the way from the end of the accessible portion of the buffer.</source>
          <target state="translated">이 기능은 포인트를 버퍼의 끝 (또는 축소 효과가있는 경우 액세스 가능한 부분의 한계)으로 이동하여 마크를 이전 위치로 설정합니다 (마크가 이미 활성화 된 경우 Transient Mark 모드 제외). 경우 &lt;var&gt;n&lt;/var&gt; 이 비이다 &lt;code&gt;nil&lt;/code&gt; , 그것은 포인트 둔다 &lt;var&gt;n&lt;/var&gt; 버퍼의 접근 부의 단부로부터 방해 1/10.</target>
        </trans-unit>
        <trans-unit id="9554ff61c8a1847b0f6089790b6f72afa91646e6" translate="yes" xml:space="preserve">
          <source>This function moves point to the end of the current line. With an argument &lt;var&gt;count&lt;/var&gt; not &lt;code&gt;nil&lt;/code&gt; or 1, it moves forward &lt;var&gt;count&lt;/var&gt;-1 lines and then to the end of the line.</source>
          <target state="translated">이 함수는 포인트를 현재 줄의 끝으로 이동합니다. 인수 &lt;var&gt;count&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 또는 1이 아닌 경우 &lt;var&gt;count&lt;/var&gt; -1 줄 앞으로 이동 한 다음 줄 끝으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="215e58278e9f463d10d11f99468326d8ad878b42" translate="yes" xml:space="preserve">
          <source>This function moves point to the left margin of the current line. The column moved to is determined by calling the function &lt;code&gt;current-left-margin&lt;/code&gt;. If the argument &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;move-to-left-margin&lt;/code&gt; moves forward &lt;var&gt;n&lt;/var&gt;-1 lines first.</source>
          <target state="translated">이 함수는 포인트를 현재 라인의 왼쪽 여백으로 이동합니다. 이동 된 열은 &lt;code&gt;current-left-margin&lt;/code&gt; 함수를 호출하여 결정됩니다 . 인수 경우 &lt;var&gt;n&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;move-to-left-margin&lt;/code&gt; 전진 &lt;var&gt;n&lt;/var&gt; -1 첫번째 라인.</target>
        </trans-unit>
        <trans-unit id="e047d5adde5bed5d461527f13195ac9adcfff9dc" translate="yes" xml:space="preserve">
          <source>This function moves point to the start of the screen line &lt;var&gt;count&lt;/var&gt; screen lines down from the screen line containing point. If &lt;var&gt;count&lt;/var&gt; is negative, it moves up instead.</source>
          <target state="translated">이 기능은 포인트를 포함하는 스크린 라인에서 스크린 라인 &lt;var&gt;count&lt;/var&gt; 스크린 라인 의 시작 부분으로 포인트를 이동 합니다. 경우 &lt;var&gt;count&lt;/var&gt; 부의 경우, 대신 위로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="4d72e2b2b29da9a9913b34bbcc80485e582563ba" translate="yes" xml:space="preserve">
          <source>This function moves point with respect to the text currently displayed in the selected window. It moves point to the beginning of the screen line &lt;var&gt;count&lt;/var&gt; screen lines from the top of the window; zero means the topmost line. If &lt;var&gt;count&lt;/var&gt; is negative, that specifies a position -&lt;var&gt;count&lt;/var&gt; lines from the bottom (or the last line of the buffer, if the buffer ends above the specified screen position); thus, &lt;var&gt;count&lt;/var&gt; of -1 specifies the last fully visible screen line of the window.</source>
          <target state="translated">이 기능은 현재 선택된 창에 표시된 텍스트를 기준으로 포인트를 이동합니다. 창 상단에서 화면 줄 &lt;var&gt;count&lt;/var&gt; 화면 줄 의 시작 지점으로 이동합니다 . 0은 최상위 라인을 의미합니다. 경우에 &lt;var&gt;count&lt;/var&gt; 네거티브, 즉 지정하는 위치 인 - &lt;var&gt;count&lt;/var&gt; 라인 아래에서 (또는 버퍼의 마지막 행, 만약 지정된 화면 위치에 상기 버퍼 단부); 따라서 &lt;var&gt;count&lt;/var&gt; -1은 창의 마지막 완전히 보이는 화면 줄을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="00500b9e1bf839d4c8d033e6bcb66a3a49e5236f" translate="yes" xml:space="preserve">
          <source>This function moves the mouse cursor to the position (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;). The coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are interpreted in pixels relative to a position (0, 0) of the selected frame&amp;rsquo;s display.</source>
          <target state="translated">이 함수는 마우스 커서를 위치 ( &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; )로 이동합니다. 좌표 &lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 는 선택한 프레임 표시의 위치 (0, 0)를 기준으로 픽셀 단위로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="461f7ca5809112ee00ed61e3e96d0dccfa66beaf" translate="yes" xml:space="preserve">
          <source>This function multiplies (in effect) &lt;var&gt;ratio&lt;/var&gt; by &lt;var&gt;total&lt;/var&gt;, rounding the result to an integer. The argument &lt;var&gt;ratio&lt;/var&gt; is not a number, but rather a pair &lt;code&gt;(&lt;var&gt;num&lt;/var&gt; . &lt;var&gt;denom&lt;/var&gt;)&lt;/code&gt;&amp;mdash;typically a value returned by &lt;code&gt;scroll-bar-event-ratio&lt;/code&gt;.</source>
          <target state="translated">이 함수는 (실제로) &lt;var&gt;ratio&lt;/var&gt; 에 &lt;var&gt;total&lt;/var&gt; 을 곱하여 결과를 정수로 반올림합니다. 인수 &lt;var&gt;ratio&lt;/var&gt; 은 숫자가 아니라 쌍 &lt;code&gt;(&lt;var&gt;num&lt;/var&gt; . &lt;var&gt;denom&lt;/var&gt;)&lt;/code&gt; &amp;mdash; 일반적으로 &lt;code&gt;scroll-bar-event-ratio&lt;/code&gt; 에 의해 반환되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="a06826909c8a40a97043561addbda420a33a6d2f" translate="yes" xml:space="preserve">
          <source>This function multiplies its arguments together, and returns the product. When given no arguments, &lt;code&gt;*&lt;/code&gt; returns 1.</source>
          <target state="translated">이 함수는 인수를 함께 곱하고 제품을 반환합니다. 인수가 주어지지 않으면 &lt;code&gt;*&lt;/code&gt; 는 1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="866d465270dd4ee2e24fd18d48bce084cb9bc29d" translate="yes" xml:space="preserve">
          <source>This function obeys the usual rules that determine when a window may be split (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;). It first tries to split by placing the new window below, subject to the restriction imposed by &lt;code&gt;split-height-threshold&lt;/code&gt; (see below), in addition to any other restrictions. If that fails, it tries to split by placing the new window to the right, subject to &lt;code&gt;split-width-threshold&lt;/code&gt; (see below). If that also fails, and the window is the only window on its frame, this function again tries to split and place the new window below, disregarding &lt;code&gt;split-height-threshold&lt;/code&gt;. If this fails as well, this function gives up and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 창을 분할 할 수있는시기를 결정하는 일반적인 규칙을 &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;따릅니다&lt;/a&gt; (창 분할 참조 ). 먼저 &lt;code&gt;split-height-threshold&lt;/code&gt; (아래 참조) 에 의해 부과 된 제한에 따라 아래에 새 창을 배치하고 다른 제한 사항에 추가하여 분할을 시도합니다 . 실패 할 경우 &lt;code&gt;split-width-threshold&lt;/code&gt; 따라 새 창을 오른쪽에 배치하여 분할을 시도합니다 (아래 참조). 이것도 실패하고 창이 프레임의 유일한 창인 경우이 함수는 &lt;code&gt;split-height-threshold&lt;/code&gt; 를 무시하고 다시 새 창을 분할하여 아래에 배치하려고합니다 . 이것이 실패하면이 함수는 포기하고 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="95912866e6978ee6644e0c47718ebc735e3024a0" translate="yes" xml:space="preserve">
          <source>This function opens a &lt;em&gt;dribble file&lt;/em&gt; named &lt;var&gt;filename&lt;/var&gt;. When a dribble file is open, each input event from the keyboard or mouse (but not those from keyboard macros) is written in that file. A non-character event is expressed using its printed representation surrounded by &amp;lsquo;</source>
          <target state="translated">이 함수 는 &lt;var&gt;filename&lt;/var&gt; 이라는 &lt;em&gt;드리블 파일을&lt;/em&gt; 엽니 다 . 드리블 파일이 열리면 키보드 또는 마우스의 각 입력 이벤트 (키보드 매크로의 입력 이벤트 제외)가 해당 파일에 기록됩니다. 문자가 아닌 이벤트는 '</target>
        </trans-unit>
        <trans-unit id="a94f5a48d081181ff685a71571f2170bd6960afd" translate="yes" xml:space="preserve">
          <source>This function opens a TCP connection, with optional encryption, and returns a process object that represents the connection.</source>
          <target state="translated">이 함수는 선택적 암호화를 사용하여 TCP 연결을 열고 연결을 나타내는 프로세스 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="67e4456d9dd93d44e94f084321e874159e98a6dd" translate="yes" xml:space="preserve">
          <source>This function opens a connection to the X display &lt;var&gt;display&lt;/var&gt;, without creating a frame on that display. Normally, Emacs Lisp programs need not call this function, as &lt;code&gt;make-frame-on-display&lt;/code&gt; calls it automatically. The only reason for calling it is to check whether communication can be established with a given X display.</source>
          <target state="translated">이 기능은 해당 디스플레이에 프레임을 생성하지 않고 X 디스플레이 &lt;var&gt;display&lt;/var&gt; 대한 연결을 엽니 다 . 일반적으로 Emacs Lisp 프로그램은 &lt;code&gt;make-frame-on-display&lt;/code&gt; 가 자동으로 호출하기 때문에이 함수를 호출 할 필요가 없습니다 . 호출하는 유일한 이유는 주어진 X 디스플레이로 통신을 설정할 수 있는지 확인하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d0a6d36aaa461b09f46b5593dfaae5205de77626" translate="yes" xml:space="preserve">
          <source>This function operates on each frame&amp;rsquo;s &lt;code&gt;buffer-list&lt;/code&gt; parameter as well as the fundamental buffer list; therefore, the buffer that you bury will come last in the value of &lt;code&gt;(buffer-list &lt;var&gt;frame&lt;/var&gt;)&lt;/code&gt; and in the value of &lt;code&gt;(buffer-list)&lt;/code&gt;. In addition, it also puts the buffer at the end of the list of buffers of the selected window (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;) provided it is shown in that window.</source>
          <target state="translated">이 기능은 각 프레임의 &lt;code&gt;buffer-list&lt;/code&gt; 매개 변수와 기본 버퍼 목록 에 대해 작동 합니다. 따라서 묻은 &lt;code&gt;(buffer-list &lt;var&gt;frame&lt;/var&gt;)&lt;/code&gt; 는 (buffer-list frame ) 값과 &lt;code&gt;(buffer-list)&lt;/code&gt; 값에서 마지막에 올 것입니다 . 또한 해당 창에 표시된 경우 선택한 창의 버퍼 목록 끝에 버퍼를 배치합니다 ( &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="fc862d1b7ad75559941ff7df35f60387a25142e6" translate="yes" xml:space="preserve">
          <source>This function outputs &lt;var&gt;character&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;. It returns &lt;var&gt;character&lt;/var&gt;.</source>
          <target state="translated">이 함수 는 &lt;var&gt;stream&lt;/var&gt; &lt;var&gt;character&lt;/var&gt; 를 출력 합니다 . &lt;var&gt;character&lt;/var&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="5401ec32447d9de2e885ed772d62e0b62eeec921" translate="yes" xml:space="preserve">
          <source>This function outputs &lt;var&gt;object&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;, just like &lt;code&gt;prin1&lt;/code&gt;, but does it in a prettier way. That is, it&amp;rsquo;ll indent and fill the object to make it more readable for humans.</source>
          <target state="translated">이 함수 는 &lt;code&gt;prin1&lt;/code&gt; 과 같이 &lt;var&gt;object&lt;/var&gt; 를 &lt;var&gt;stream&lt;/var&gt; 에 출력 하지만 더 예쁘게 수행합니다. 즉, 사람이 더 읽기 쉽게 개체를 들여 쓰고 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="23ad01f44ed000694d0fd8cdef665e1b9035e40c" translate="yes" xml:space="preserve">
          <source>This function outputs a newline to &lt;var&gt;stream&lt;/var&gt;. The name stands for &amp;ldquo;terminate print&amp;rdquo;. If &lt;var&gt;ensure&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; no newline is printed if &lt;var&gt;stream&lt;/var&gt; is already at the beginning of a line. Note in this case &lt;var&gt;stream&lt;/var&gt; can not be a function and an error is signaled if it is. This function returns &lt;code&gt;t&lt;/code&gt; if a newline is printed.</source>
          <target state="translated">이 함수는 개행을 &lt;var&gt;stream&lt;/var&gt; 에 출력 합니다 . 이름은 &quot;인쇄 종료&quot;를 의미합니다. 경우 &lt;var&gt;ensure&lt;/var&gt; 아닌 것입니다 &lt;code&gt;nil&lt;/code&gt; 경우에는 개행 문자가 인쇄되지 않습니다 &lt;var&gt;stream&lt;/var&gt; 라인의 시작 부분에 이미 있습니다. 이 경우 &lt;var&gt;stream&lt;/var&gt; 은 함수가 될 수 없으며 오류가있는 경우 신호를 보냅니다. 이 함수는 개행이 인쇄되면 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9680d7bba137e28e05760a4f089d90b748b420bf" translate="yes" xml:space="preserve">
          <source>This function outputs the printed representation of &lt;var&gt;object&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;. It does not print newlines to separate output as &lt;code&gt;print&lt;/code&gt; does, but it does use quoting characters just like &lt;code&gt;print&lt;/code&gt;. It returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 의 인쇄 된 표현 을 &lt;var&gt;stream&lt;/var&gt; 에 출력합니다 . 그것은 별도의 출력에 줄 바꿈 인쇄되지 않습니다 &lt;code&gt;print&lt;/code&gt; 않지만처럼 인용 문자를 사용하지 &lt;code&gt;print&lt;/code&gt; . &lt;var&gt;object&lt;/var&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2a133f4e438ec04cdcc90756ac22740960751fa3" translate="yes" xml:space="preserve">
          <source>This function outputs the printed representation of &lt;var&gt;object&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;. It returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 의 인쇄 된 표현 을 &lt;var&gt;stream&lt;/var&gt; 에 출력합니다 . &lt;var&gt;object&lt;/var&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="10d9cddbc9e1a16e0dceee452079e5076d9b9b3a" translate="yes" xml:space="preserve">
          <source>This function parses a sexp in the current buffer starting at &lt;var&gt;start&lt;/var&gt;, not scanning past &lt;var&gt;limit&lt;/var&gt;. It stops at position &lt;var&gt;limit&lt;/var&gt; or when certain criteria described below are met, and sets point to the location where parsing stops. It returns a parser state describing the status of the parse at the point where it stops.</source>
          <target state="translated">이 기능은 시작 현재 버퍼에 sexp를 분석 &lt;var&gt;start&lt;/var&gt; 지난 스캔하지, &lt;var&gt;limit&lt;/var&gt; . 위치 &lt;var&gt;limit&lt;/var&gt; 또는 아래 설명 된 특정 기준이 충족 될 때 중지되고 파싱이 중지되는 위치를 지정합니다. 중지 된 지점에서 구문 분석 상태를 설명하는 구문 분석기 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5cb8e49f6a961a8c232f5ceb0451195a255216e5" translate="yes" xml:space="preserve">
          <source>This function parses the JSON value in &lt;var&gt;string&lt;/var&gt;, which must be a Lisp string. If &lt;var&gt;string&lt;/var&gt; doesn&amp;rsquo;t contain a valid JSON object, this function signals the &lt;code&gt;json-parse-error&lt;/code&gt; error.</source>
          <target state="translated">이 함수는 Lisp 문자열이어야하는 &lt;var&gt;string&lt;/var&gt; 의 JSON 값을 구문 분석 합니다. 경우 &lt;var&gt;string&lt;/var&gt; 유효한 JSON 객체를 포함하지 않고,이 기능 신호 &lt;code&gt;json-parse-error&lt;/code&gt; 오류.</target>
        </trans-unit>
        <trans-unit id="00ec09c2bbba882317cb73118cba10bef50fe149" translate="yes" xml:space="preserve">
          <source>This function parses the command line that Emacs was called with, processes it, and (amongst other things) loads the user&amp;rsquo;s init file and displays the startup messages.</source>
          <target state="translated">이 함수는 Emacs가 호출 된 명령 줄을 구문 분석하고, 처리하며, 무엇보다도 사용자의 init 파일을로드하고 시작 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="02e1e5057597d44b03081ebf14a8004091b75b43" translate="yes" xml:space="preserve">
          <source>This function parses the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as HTML, and returns a list representing the HTML &lt;em&gt;parse tree&lt;/em&gt;. It attempts to handle real-world HTML by robustly coping with syntax mistakes.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 텍스트를 HTML로 &lt;em&gt;구문 분석&lt;/em&gt; 하고 HTML &lt;em&gt;구문 분석 트리를&lt;/em&gt; 나타내는 목록을 반환합니다 . 구문 오류에 강력하게 대처하여 실제 HTML을 처리하려고합니다.</target>
        </trans-unit>
        <trans-unit id="0cfa728d1e7f009715d9406da1b0b48e24606d4d" translate="yes" xml:space="preserve">
          <source>This function parses the time-string &lt;var&gt;string&lt;/var&gt; and returns the corresponding Lisp timestamp. The argument &lt;var&gt;string&lt;/var&gt; should represent a date-time, and should be in one of the forms recognized by &lt;code&gt;parse-time-string&lt;/code&gt; (see below). This function assumes Universal Time if &lt;var&gt;string&lt;/var&gt; lacks explicit time zone information. The operating system limits the range of time and zone values.</source>
          <target state="translated">이 함수는 시간 문자열 &lt;var&gt;string&lt;/var&gt; 구문 분석하고 해당 Lisp 타임 스탬프를 반환합니다. 인수 &lt;var&gt;string&lt;/var&gt; 은 날짜-시간을 나타내야하며 &lt;code&gt;parse-time-string&lt;/code&gt; 인식하는 형식 중 하나 여야 합니다 (아래 참조). 이 함수는 &lt;var&gt;string&lt;/var&gt; 에 명시적인 시간대 정보가없는 경우 세계시를 가정 합니다. 운영 체제는 시간 및 구역 값의 범위를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="dd324d4892a8cdbe2ecbe6d5524beb7db5ce3e0b" translate="yes" xml:space="preserve">
          <source>This function parses the time-string &lt;var&gt;string&lt;/var&gt; into a list of the following form:</source>
          <target state="translated">이 함수는 시간 문자열 &lt;var&gt;string&lt;/var&gt; 을 다음 형식의 목록으로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="1f6d8bfba4ef1e2ec105269540222adb4ca31ee2" translate="yes" xml:space="preserve">
          <source>This function parses, and binds or evaluates as appropriate, any local variables specified by the contents of the current buffer. The variable &lt;code&gt;enable-local-variables&lt;/code&gt; has its effect here. However, this function does not look for the &amp;lsquo;</source>
          <target state="translated">이 함수는 현재 버퍼의 내용으로 지정된 모든 지역 변수를 구문 분석하고 바인드하거나 적절하게 평가합니다. 변수 &lt;code&gt;enable-local-variables&lt;/code&gt; 현재의 효과를 갖는다. 그러나이 함수는 '</target>
        </trans-unit>
        <trans-unit id="84d6da43a7bd68f3b9a90c2d98ec6b495b2c093f" translate="yes" xml:space="preserve">
          <source>This function performs a replacement operation on a buffer or string.</source>
          <target state="translated">이 함수는 버퍼 또는 문자열에서 대체 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1cd9ca554a31b04b3eb83e98866dd814566a9273" translate="yes" xml:space="preserve">
          <source>This function performs redisplay (provided there is no pending input from the user), then waits &lt;var&gt;seconds&lt;/var&gt; seconds, or until input is available. The usual purpose of &lt;code&gt;sit-for&lt;/code&gt; is to give the user time to read text that you display. The value is &lt;code&gt;t&lt;/code&gt; if &lt;code&gt;sit-for&lt;/code&gt; waited the full time with no input arriving (see &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Event Input Misc&lt;/a&gt;). Otherwise, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 다시 표시 (사용자의 보류중인 입력이없는 경우)를 수행 한 다음 &lt;var&gt;seconds&lt;/var&gt; 초 동안 또는 입력을 사용할 수있을 때까지 기다립니다 . &lt;code&gt;sit-for&lt;/code&gt; 의 일반적인 목적은 사용자가 표시하는 텍스트를 읽을 시간을 제공하는 것입니다. 값은 &lt;code&gt;t&lt;/code&gt; 경우 &lt;code&gt;sit-for&lt;/code&gt; (참조 도착없이 입력이 전체 시간을 기다렸다 &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;이벤트 입력 기타를&lt;/a&gt; ). 그렇지 않으면 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="62366abec0e3811678ce3bc441b63d7e1ffc60c9" translate="yes" xml:space="preserve">
          <source>This function performs the loading specified by &lt;var&gt;autoload&lt;/var&gt;, which should be an autoload object. The optional argument &lt;var&gt;name&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be a symbol whose function value is &lt;var&gt;autoload&lt;/var&gt;; in that case, the return value of this function is the symbol&amp;rsquo;s new function value. If the value of the optional argument &lt;var&gt;macro-only&lt;/var&gt; is &lt;code&gt;macro&lt;/code&gt;, this function avoids loading a function, only a macro.</source>
          <target state="translated">이 기능에 의해 지정된 적재 행하는 &lt;var&gt;autoload&lt;/var&gt; 자동로드 객체이어야한다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 선택적 인수 &lt;var&gt;name&lt;/var&gt; 은 함수 값이 &lt;var&gt;autoload&lt;/var&gt; 인 기호 여야합니다 . 이 경우이 함수의 반환 값은 심볼의 새 함수 값입니다. 선택적 인수 &lt;var&gt;macro-only&lt;/var&gt; 의 값 이 &lt;code&gt;macro&lt;/code&gt; 인 경우이 함수는 함수로드를 방지하고 매크로 만로드합니다.</target>
        </trans-unit>
        <trans-unit id="c43d63fe7d0798766de84aff032ec767af39c561" translate="yes" xml:space="preserve">
          <source>This function places a boundary element in the undo list. The undo command stops at such a boundary, and successive undo commands undo to earlier and earlier boundaries. This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 실행 취소 목록에 경계 요소를 배치합니다. 실행 취소 명령은 이러한 경계에서 중지되고 연속 실행 취소 명령은 이전 및 이전 경계로 실행 취소됩니다. 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="95fbb6ea33088107e8e6fe9acc0c4143e090a8b7" translate="yes" xml:space="preserve">
          <source>This function plays a specified sound. The argument, &lt;var&gt;sound&lt;/var&gt;, has the form &lt;code&gt;(sound &lt;var&gt;properties&lt;/var&gt;...)&lt;/code&gt;, where the &lt;var&gt;properties&lt;/var&gt; consist of alternating keywords (particular symbols recognized specially) and values corresponding to them.</source>
          <target state="translated">이 기능은 지정된 사운드를 재생합니다. 인수, &lt;var&gt;sound&lt;/var&gt; , 형태 갖는다 &lt;code&gt;(sound &lt;var&gt;properties&lt;/var&gt;...)&lt;/code&gt; 1, &lt;var&gt;properties&lt;/var&gt; 그들에 대응하는 교류 키워드 (특히 특수 문자 인식) 및 값을 구성한다.</target>
        </trans-unit>
        <trans-unit id="719c7a9e8fa38fd95292d9bf8e47ad1d5d097f61" translate="yes" xml:space="preserve">
          <source>This function pops off the top element of &lt;code&gt;mark-ring&lt;/code&gt; and makes that mark become the buffer&amp;rsquo;s actual mark. This does not move point in the buffer, and it does nothing if &lt;code&gt;mark-ring&lt;/code&gt; is empty. It deactivates the mark.</source>
          <target state="translated">이 기능은 &lt;code&gt;mark-ring&lt;/code&gt; 의 상단 요소를 튀어 나와 해당 마크가 버퍼의 실제 마크가되도록합니다. 이것은 버퍼의 포인트를 이동하지 않으며 &lt;code&gt;mark-ring&lt;/code&gt; 이 비어 있으면 아무 작업도 수행하지 않습니다 . 마크를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e1279c4027241bb081cb01116d7116880ca493a4" translate="yes" xml:space="preserve">
          <source>This function populates the current buffer with entries. It should be called by the listing command. It erases the buffer, sorts the entries specified by &lt;code&gt;tabulated-list-entries&lt;/code&gt; according to &lt;code&gt;tabulated-list-sort-key&lt;/code&gt;, then calls the function specified by &lt;code&gt;tabulated-list-printer&lt;/code&gt; to insert each entry.</source>
          <target state="translated">이 함수는 현재 버퍼를 항목으로 채 웁니다. 목록 명령으로 호출해야합니다. 버퍼를 지우고 &lt;code&gt;tabulated-list-sort-key&lt;/code&gt; 에 따라 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 에 지정된 항목 을 정렬 한 다음 &lt;code&gt;tabulated-list-printer&lt;/code&gt; 에 지정된 함수를 호출하여 각 항목을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="594cfb3a6cf7f18187c5d2c875a38a8f9857651b" translate="yes" xml:space="preserve">
          <source>This function positions point in &lt;var&gt;window&lt;/var&gt; at position &lt;var&gt;position&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer. It returns &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">이 기능의 위치에 가리 &lt;var&gt;window&lt;/var&gt; 위치에서 &lt;var&gt;position&lt;/var&gt; 에서 &lt;var&gt;window&lt;/var&gt; 의 버퍼. &lt;var&gt;position&lt;/var&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4a60743241d301f6a13e8bdb01b22535313af1bf" translate="yes" xml:space="preserve">
          <source>This function prepares &lt;var&gt;symbol&lt;/var&gt; for use as a prefix key&amp;rsquo;s binding: it creates a sparse keymap and stores it as &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s function definition. Subsequently binding a key sequence to &lt;var&gt;symbol&lt;/var&gt; will make that key sequence into a prefix key. The return value is &lt;code&gt;symbol&lt;/code&gt;.</source>
          <target state="translated">이 함수 는 접두사 키의 바인딩으로 사용할 &lt;var&gt;symbol&lt;/var&gt; 을 준비 합니다. 스파 스 키맵을 만들고 &lt;var&gt;symbol&lt;/var&gt; 의 함수 정의 로 저장합니다 . 이후에 키 시퀀스를 &lt;var&gt;symbol&lt;/var&gt; 바인딩하면 해당 키 시퀀스가 ​​접두사 키가됩니다. 반환 값은 &lt;code&gt;symbol&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bfc00d0aedfe9d2ce34bd11f8e9cee9ae5588e34" translate="yes" xml:space="preserve">
          <source>This function prints a trace of Lisp function calls currently active. The trace is identical to the one that &lt;code&gt;debug&lt;/code&gt; would show in the</source>
          <target state="translated">이 함수는 현재 활성화 된 Lisp 함수 호출의 추적을 인쇄합니다. 추적은 &lt;code&gt;debug&lt;/code&gt; 에서 표시 되는 추적과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="cb28ff49d2e7b3aba0ea56594adc0932299a2408" translate="yes" xml:space="preserve">
          <source>This function processes files synchronously in a separate process. It is similar to &lt;code&gt;call-process&lt;/code&gt;, but may invoke a file name handler based on the value of the variable &lt;code&gt;default-directory&lt;/code&gt;, which specifies the current working directory of the subprocess.</source>
          <target state="translated">이 함수는 별도의 프로세스에서 파일을 동 기적으로 처리합니다. &lt;code&gt;call-process&lt;/code&gt; 와 유사 하지만 하위 프로세스의 현재 작업 디렉토리를 지정하는 변수 &lt;code&gt;default-directory&lt;/code&gt; 의 값에 따라 파일 이름 핸들러를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfa3fe2b8482b2b55df9895099e429b31d0eb76a" translate="yes" xml:space="preserve">
          <source>This function processes pending input events. It returns &lt;code&gt;emacs_process_input_quit&lt;/code&gt; if the user wants to quit or an error occurred while processing signals. In that case, we recommend that your module function aborts any on-going processing and returns as soon as possible. If the module code may continue running, &lt;code&gt;process_input&lt;/code&gt; returns &lt;code&gt;emacs_process_input_continue&lt;/code&gt;. The return value is &lt;code&gt;emacs_process_input_continue&lt;/code&gt; if and only if there is no pending nonlocal exit in &lt;code&gt;env&lt;/code&gt;. If the module continues after calling &lt;code&gt;process_input&lt;/code&gt;, global state such as variable values and buffer content may have been modified in arbitrary ways.</source>
          <target state="translated">이 함수는 보류중인 입력 이벤트를 처리합니다. 사용자가 종료를 원하거나 신호 처리 중 오류가 발생하면 &lt;code&gt;emacs_process_input_quit&lt;/code&gt; 를 반환합니다 . 이 경우 모듈 함수가 진행중인 모든 처리를 중단하고 가능한 한 빨리 반환하는 것이 좋습니다. 모듈 코드가 계속 실행될 수 있으면 &lt;code&gt;process_input&lt;/code&gt; 은 &lt;code&gt;emacs_process_input_continue&lt;/code&gt; 를 반환합니다 . 반환 값은 &lt;code&gt;env&lt;/code&gt; 에 보류중인 비 로컬 종료가없는 경우에만 &lt;code&gt;emacs_process_input_continue&lt;/code&gt; 입니다. &lt;code&gt;process_input&lt;/code&gt; 을 호출 한 후 모듈이 계속되면 변수 값 및 버퍼 내용과 같은 전역 상태가 임의의 방식으로 수정되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d616ffa32a4fb948d12ad95721952cbbd7b0578f" translate="yes" xml:space="preserve">
          <source>This function prompts the user with text in &lt;var&gt;question&lt;/var&gt;, which should end in the &amp;lsquo;</source>
          <target state="translated">이 함수는 사용자에게 &lt;var&gt;question&lt;/var&gt; 텍스트를 표시 하며 '</target>
        </trans-unit>
        <trans-unit id="127ce04cbf1088a475ef67f56a52f16e918bba16" translate="yes" xml:space="preserve">
          <source>This function provides a convenient way to find an image satisfying one of a list of image specifications &lt;var&gt;specs&lt;/var&gt;.</source>
          <target state="translated">이 기능은 이미지 사양 &lt;var&gt;specs&lt;/var&gt; 목록 중 하나를 만족하는 이미지를 찾는 편리한 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5b8b2aed4dbdea9ef3577f34e399131e2a99bd7a" translate="yes" xml:space="preserve">
          <source>This function provides an easy way to make a private coding system that maps each byte to a specific character. You can specify the returned table and the reverse translation table using the properties &lt;code&gt;:decode-translation-table&lt;/code&gt; and &lt;code&gt;:encode-translation-table&lt;/code&gt; respectively in the &lt;var&gt;props&lt;/var&gt; argument to &lt;code&gt;define-coding-system&lt;/code&gt;.</source>
          <target state="translated">이 함수는 각 바이트를 특정 문자로 매핑하는 개인 코딩 시스템을 만드는 쉬운 방법을 제공합니다. &lt;code&gt;define-coding-system&lt;/code&gt; 에 대한 &lt;var&gt;props&lt;/var&gt; 인수 에서 각각 &lt;code&gt;:decode-translation-table&lt;/code&gt; 및 &lt;code&gt;:encode-translation-table&lt;/code&gt; 속성을 사용하여 반환 된 테이블과 역변환 테이블을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a84dfb0cbd5d4086dfea617d423a2920f8b1b98f" translate="yes" xml:space="preserve">
          <source>This function provides information about the argument list of the specified &lt;var&gt;function&lt;/var&gt;. The returned value is a cons cell of the form &lt;code&gt;(&lt;var&gt;min&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;max&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;min&lt;/var&gt; is the minimum number of arguments, and &lt;var&gt;max&lt;/var&gt; is either the maximum number of arguments, or the symbol &lt;code&gt;many&lt;/code&gt; for functions with &lt;code&gt;&amp;amp;rest&lt;/code&gt; arguments, or the symbol &lt;code&gt;unevalled&lt;/code&gt; if &lt;var&gt;function&lt;/var&gt; is a special form.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;function&lt;/var&gt; 의 인수 목록에 대한 정보를 제공 합니다 . 반환 된 값은 &lt;code&gt;(&lt;var&gt;min&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;max&lt;/var&gt;)&lt;/code&gt; 형식의 cons 셀입니다 .&amp;nbsp; 여기서 &lt;var&gt;min&lt;/var&gt; 은 최소 인수 수이고 &lt;var&gt;max&lt;/var&gt; 는 최대 인수 수이거나 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 인수가있는 함수에 대한 기호 &lt;code&gt;many&lt;/code&gt; 거나 다음 경우 &lt;code&gt;unevalled&lt;/code&gt; 되지 않은 기호입니다. &lt;var&gt;function&lt;/var&gt; 은 특별한 형태입니다.</target>
        </trans-unit>
        <trans-unit id="e2a0bb9d4605d9598d4bbbe0cb5ba0df2512176e" translate="yes" xml:space="preserve">
          <source>This function pushes the text &lt;var&gt;string&lt;/var&gt; onto the kill ring and makes the yanking pointer point to it. It discards the oldest entry if appropriate. It also invokes the values of &lt;code&gt;interprogram-paste-function&lt;/code&gt; (subject to the user option &lt;code&gt;save-interprogram-paste-before-kill&lt;/code&gt;) and &lt;code&gt;interprogram-cut-function&lt;/code&gt; (see below).</source>
          <target state="translated">이 함수는 텍스트 &lt;var&gt;string&lt;/var&gt; 을 킬 링으로 밀고 홱 잡아 당기는 포인터가 그것을 가리 키도록합니다. 적절한 경우 가장 오래된 항목을 버립니다. 또한 &lt;code&gt;interprogram-paste-function&lt;/code&gt; (사용자 옵션 &lt;code&gt;save-interprogram-paste-before-kill&lt;/code&gt; 에 따라 다름 ) 및 &lt;code&gt;interprogram-cut-function&lt;/code&gt; (아래 참조) 의 값을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="e7a7abe4c600e801cf3b01e879a2e73c8b898dec" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;coding-systems&lt;/var&gt; at the beginning of the priority list for coding systems, thus making their priority higher than all the rest.</source>
          <target state="translated">이 기능은 &lt;var&gt;coding-systems&lt;/var&gt; 의 우선 순위 목록의 시작 부분에 코딩 시스템을 배치하여 나머지 모든 것보다 우선 순위를 높입니다.</target>
        </trans-unit>
        <trans-unit id="beca1601c3b51917a2ee6a3205606bb6e50881a5" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;tag&lt;/var&gt; in the padding area of the current line. The padding area can be empty space at the beginning of the line, the width of which is governed by &lt;code&gt;tabulated-list-padding&lt;/code&gt;. &lt;var&gt;tag&lt;/var&gt; should be a string, with a length less than or equal to &lt;code&gt;tabulated-list-padding&lt;/code&gt;. If &lt;var&gt;advance&lt;/var&gt; is non-nil, this function advances point by one line.</source>
          <target state="translated">이 함수 는 현재 줄의 패딩 영역 에 &lt;var&gt;tag&lt;/var&gt; 를 넣 습니다. 패딩 영역은 줄의 시작 부분에 빈 공간이 될 수 있으며, 그 너비는 &lt;code&gt;tabulated-list-padding&lt;/code&gt; 에 의해 제어됩니다 . &lt;var&gt;tag&lt;/var&gt; 는 &lt;code&gt;tabulated-list-padding&lt;/code&gt; 보다 작거나 같은 길이의 문자열이어야합니다 . &lt;var&gt;advance&lt;/var&gt; 가 nil이 아니면 이 함수는 한 줄씩 전진합니다.</target>
        </trans-unit>
        <trans-unit id="d7597c84b90ebf7a32086778288b320d4d6ba96f" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;value&lt;/var&gt; in the value cell of &lt;var&gt;symbol&lt;/var&gt;. Since it is a function rather than a special form, the expression written for &lt;var&gt;symbol&lt;/var&gt; is evaluated to obtain the symbol to set. The return value is &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수 는 &lt;var&gt;symbol&lt;/var&gt; 의 값 셀 에 &lt;var&gt;value&lt;/var&gt; 을 넣습니다 . 특수한 형태가 아닌 함수이기 때문에 &lt;var&gt;symbol&lt;/var&gt; 로 작성된 표현식을 평가하여 설정할 심볼을 얻습니다. 반환 값은 &lt;var&gt;value&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af5d818474d9b290e41a3e89d80e2224a3d0ec93" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;value&lt;/var&gt; onto &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list under the property name &lt;var&gt;property&lt;/var&gt;, replacing any previous property value. The &lt;code&gt;put&lt;/code&gt; function returns &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 기능은 풋의 &lt;var&gt;value&lt;/var&gt; 위에 &lt;var&gt;symbol&lt;/var&gt; 속성 이름 아래의 속성 목록 &lt;var&gt;property&lt;/var&gt; 이전의 속성 값을 대체합니다. &lt;code&gt;put&lt;/code&gt; 함수가 반환 된 &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8ca9a37056f89d719e454da2055dcc998625782d" translate="yes" xml:space="preserve">
          <source>This function puts a &lt;code&gt;charset&lt;/code&gt; text property on the decoded text. The value of the property states the character set used to decode the original text:</source>
          <target state="translated">이 함수 는 디코딩 된 텍스트에 &lt;code&gt;charset&lt;/code&gt; 텍스트 속성을 추가합니다. 속성 값은 원본 텍스트를 디코딩하는 데 사용되는 문자 집합을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d3c0b178061d3147f5a42110c13e20dbf4f35263" translate="yes" xml:space="preserve">
          <source>This function puts element of the minibuffer history in the minibuffer. The argument &lt;var&gt;nabs&lt;/var&gt; specifies the absolute history position in descending order, where 0 means the current element and a positive number &lt;var&gt;n&lt;/var&gt; means the &lt;var&gt;n&lt;/var&gt;th previous element. NABS being a negative number -&lt;var&gt;n&lt;/var&gt; means the &lt;var&gt;n&lt;/var&gt;th entry of &amp;ldquo;future history.&amp;rdquo;</source>
          <target state="translated">이 함수는 미니 버퍼 히스토리의 요소를 미니 버퍼에 넣습니다. 인수 &lt;var&gt;nabs&lt;/var&gt; 는 절대 히스토리 위치를 내림차순으로 지정합니다. 여기서 0은 현재 요소를 의미하고 양수 &lt;var&gt;n&lt;/var&gt; 은 &lt;var&gt;n&lt;/var&gt; 번째 이전 요소를 의미합니다 . NABS는 음의 번호 인 - &lt;var&gt;n&lt;/var&gt; 수단 &lt;var&gt;n&lt;/var&gt; 의 번째 항목 &quot;미래의 역사를.&quot;</target>
        </trans-unit>
        <trans-unit id="867079fc2b10bd75aa27cae46c8c8e0bc3982368" translate="yes" xml:space="preserve">
          <source>This function puts image &lt;var&gt;image&lt;/var&gt; in front of &lt;var&gt;pos&lt;/var&gt; in the current buffer. The argument &lt;var&gt;pos&lt;/var&gt; should be an integer or a marker. It specifies the buffer position where the image should appear. The argument &lt;var&gt;string&lt;/var&gt; specifies the text that should hold the image as an alternative to the default.</source>
          <target state="translated">이 함수 는 현재 버퍼 의 &lt;var&gt;pos&lt;/var&gt; 앞에 이미지 &lt;var&gt;image&lt;/var&gt; 를 넣습니다 . &lt;var&gt;pos&lt;/var&gt; 인수 는 정수 또는 마커 여야합니다. 이미지가 표시되어야하는 버퍼 위치를 지정합니다. 인수 &lt;var&gt;string&lt;/var&gt; 은 기본값 대신 이미지를 보유해야하는 텍스트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ad95740b88052ea2176c78c83440d8eb4b6f2f55" translate="yes" xml:space="preserve">
          <source>This function puts the window state &lt;var&gt;state&lt;/var&gt; into &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;state&lt;/var&gt; should be the state of a window returned by an earlier invocation of &lt;code&gt;window-state-get&lt;/code&gt;, see above. The optional argument &lt;var&gt;window&lt;/var&gt; can be either a live window or an internal window (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). If &lt;var&gt;window&lt;/var&gt; is not a live window, it is replaced by a new live window created on the same frame before putting &lt;var&gt;state&lt;/var&gt; into it. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it puts the window state into a new window.</source>
          <target state="translated">이 함수는 창 상태 &lt;var&gt;state&lt;/var&gt; 를 &lt;var&gt;window&lt;/var&gt; 에 넣습니다 . 인수 &lt;var&gt;state&lt;/var&gt; 는 이전 &lt;code&gt;window-state-get&lt;/code&gt; 호출에 의해 반환 된 창의 상태 여야합니다 ( 위 참조). 선택적 인수 &lt;var&gt;window&lt;/var&gt; 은 라이브 창 또는 내부 창일 수 있습니다 (창 &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;및 프레임&lt;/a&gt; 참조 ). &lt;var&gt;window&lt;/var&gt; 라이브 창이 아닌 경우 &lt;var&gt;state&lt;/var&gt; 를 입력 하기 전에 동일한 프레임에 생성 된 새 라이브 창으로 대체됩니다 . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 그것은 새 창으로 창 상태를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="4e352b3d817666797ea87a97b670cae9c9f6e754" translate="yes" xml:space="preserve">
          <source>This function raises frame &lt;var&gt;frame&lt;/var&gt; (default, the selected frame) above all other frames belonging to the same or a lower z-group as &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is invisible or iconified, this makes it visible. If &lt;var&gt;frame&lt;/var&gt; is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), this raises &lt;var&gt;frame&lt;/var&gt; above all other child frames of its parent.</source>
          <target state="translated">이 함수는 프레임 상승 &lt;var&gt;frame&lt;/var&gt; 은 동일하거나 같은 저급 Z 그룹에 속하는 모든 다른 프레임 위 (디폴트 선택된 프레임) &lt;var&gt;frame&lt;/var&gt; . 경우 &lt;var&gt;frame&lt;/var&gt; 보이지 않는 또는 아이콘 화하고,이를 통해 볼 수 있습니다. 경우 &lt;var&gt;frame&lt;/var&gt; 아이 프레임 (참조 인 &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;아이 프레임&lt;/a&gt; )이 제기 &lt;var&gt;frame&lt;/var&gt; 부모의 다른 모든 아이 프레임 위.</target>
        </trans-unit>
        <trans-unit id="5840e146bf5e31edd45500c0a92926d0ceff7616" translate="yes" xml:space="preserve">
          <source>This function re-evaluates the standard value of &lt;var&gt;symbol&lt;/var&gt;, which should be a user option declared via &lt;code&gt;defcustom&lt;/code&gt;. If the variable was customized, this function re-evaluates the saved value instead. Then it sets the user option to that value (using the option&amp;rsquo;s &lt;code&gt;:set&lt;/code&gt; property if that is defined).</source>
          <target state="translated">이 함수 는 &lt;code&gt;defcustom&lt;/code&gt; 을 통해 선언 된 사용자 옵션이어야하는 &lt;var&gt;symbol&lt;/var&gt; 의 표준 값 을 재평가 합니다. 변수가 사용자 정의 된 경우이 함수는 대신 저장된 값을 다시 평가합니다. 그런 다음 사용자 옵션을 해당 값으로 &lt;code&gt;:set&lt;/code&gt; 합니다 (정의 된 경우 옵션의 : set 속성 사용).</target>
        </trans-unit>
        <trans-unit id="e1c7b961df4b0d9bdcf4cce4625908947c0ce3c8" translate="yes" xml:space="preserve">
          <source>This function reads a Lisp expression in the minibuffer, evaluates it, then returns the result. The difference between this command and &lt;code&gt;eval-minibuffer&lt;/code&gt; is that here the initial &lt;var&gt;form&lt;/var&gt; is not optional and it is treated as a Lisp object to be converted to printed representation rather than as a string of text. It is printed with &lt;code&gt;prin1&lt;/code&gt;, so if it is a string, double-quote characters (&amp;lsquo;</source>
          <target state="translated">이 함수는 미니 버퍼에서 Lisp 표현식을 읽고 평가 한 다음 결과를 반환합니다. 이 명령과 &lt;code&gt;eval-minibuffer&lt;/code&gt; 의 차이점은 여기서 초기 &lt;var&gt;form&lt;/var&gt; 은 선택 사항이 아니며 텍스트 문자열이 아닌 인쇄 된 표현으로 변환되는 Lisp 개체로 처리된다는 것입니다. &lt;code&gt;prin1&lt;/code&gt; 로 인쇄 되므로 문자열 인 경우 큰 따옴표 문자 ( '</target>
        </trans-unit>
        <trans-unit id="8375dc7cd2356a6c3ec455735b02e4b682c8fdbf" translate="yes" xml:space="preserve">
          <source>This function reads a Lisp expression using the minibuffer, evaluates it, then returns the result. The arguments &lt;var&gt;prompt&lt;/var&gt; and &lt;var&gt;initial&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;.</source>
          <target state="translated">이 함수는 미니 버퍼를 사용하여 Lisp 표현식을 읽고 평가 한 다음 결과를 반환합니다. 인수 &lt;var&gt;prompt&lt;/var&gt; 및 &lt;var&gt;initial&lt;/var&gt; 은 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 에서와 같이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="23521e70faa1247f5f38b89824014939968d5e75" translate="yes" xml:space="preserve">
          <source>This function reads a Lisp object using the minibuffer, and returns it without evaluating it. The arguments &lt;var&gt;prompt&lt;/var&gt; and &lt;var&gt;initial&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;.</source>
          <target state="translated">이 함수는 미니 버퍼를 사용하여 Lisp 객체를 읽고 평가하지 않고 반환합니다. 인수 &lt;var&gt;prompt&lt;/var&gt; 및 &lt;var&gt;initial&lt;/var&gt; 은 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 에서와 같이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ee04099a241b0306b16d4e3f000471e695d47776" translate="yes" xml:space="preserve">
          <source>This function reads a coding system using the minibuffer, prompting with string &lt;var&gt;prompt&lt;/var&gt;, and returns the coding system name as a symbol. If the user enters null input, &lt;var&gt;default&lt;/var&gt; specifies which coding system to return. It should be a symbol or a string.</source>
          <target state="translated">이 함수는 미니 버퍼를 사용하여 코딩 시스템을 읽고 &lt;var&gt;prompt&lt;/var&gt; 문자열 프롬프트 로 표시하고 코딩 시스템 이름을 기호로 반환합니다. 사용자가 null 입력을 입력하면 &lt;var&gt;default&lt;/var&gt; 은 반환 할 코딩 시스템을 지정합니다. 기호 또는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="993c875f2167adda7fed84609e27f4c1c22ef9a1" translate="yes" xml:space="preserve">
          <source>This function reads a coding system using the minibuffer, prompting with string &lt;var&gt;prompt&lt;/var&gt;, and returns the coding system name as a symbol. If the user tries to enter null input, it asks the user to try again. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;.</source>
          <target state="translated">이 함수는 미니 버퍼를 사용하여 코딩 시스템을 읽고 &lt;var&gt;prompt&lt;/var&gt; 문자열 프롬프트 로 표시하고 코딩 시스템 이름을 기호로 반환합니다. 사용자가 null 입력을 시도하면 다시 시도하도록 요청합니다. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;코딩 시스템을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="4df2f8f457e47b2bc979935fe769a1495fe3b14f" translate="yes" xml:space="preserve">
          <source>This function reads a command name from the minibuffer using &lt;code&gt;completing-read&lt;/code&gt; (see &lt;a href=&quot;completion#Completion&quot;&gt;Completion&lt;/a&gt;). Then it uses &lt;code&gt;command-execute&lt;/code&gt; to call the specified command. Whatever that command returns becomes the value of &lt;code&gt;execute-extended-command&lt;/code&gt;.</source>
          <target state="translated">이 함수 는 &lt;a href=&quot;completion#Completion&quot;&gt;completed &lt;/a&gt; &lt;code&gt;completing-read&lt;/code&gt; 사용하여 미니 버퍼에서 명령 이름을 읽습니다 ( Completion 참조 ). 그런 다음 &lt;code&gt;command-execute&lt;/code&gt; 를 사용 하여 지정된 명령을 호출합니다. 그 명령이 반환하는 것은 무엇이든 &lt;code&gt;execute-extended-command&lt;/code&gt; 의 값이됩니다 .</target>
        </trans-unit>
        <trans-unit id="69766455794bcfa316579ef75b6abb4ca09416c4" translate="yes" xml:space="preserve">
          <source>This function reads a file name, prompting with &lt;var&gt;prompt&lt;/var&gt; and providing completion.</source>
          <target state="translated">이 함수는 파일 이름을 읽고 &lt;var&gt;prompt&lt;/var&gt; 를 표시하고 완료를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="705404c327d9312dfe4df41ce5b458ebf28c40a8" translate="yes" xml:space="preserve">
          <source>This function reads a key sequence and returns it as a string or vector. It keeps reading events until it has accumulated a complete key sequence; that is, enough to specify a non-prefix command using the currently active keymaps. (Remember that a key sequence that starts with a mouse event is read using the keymaps of the buffer in the window that the mouse was in, not the current buffer.)</source>
          <target state="translated">이 함수는 키 시퀀스를 읽고 문자열 또는 벡터로 반환합니다. 완전한 키 시퀀스가 ​​누적 될 때까지 이벤트를 계속 읽습니다. 즉, 현재 활성 키맵을 사용하여 접두사가 아닌 명령을 지정하기에 충분합니다. (마우스 이벤트로 시작하는 키 시퀀스는 현재 버퍼가 아니라 마우스가있는 창에있는 버퍼의 키맵을 사용하여 읽습니다.)</target>
        </trans-unit>
        <trans-unit id="410a5702681d05065cf777f4af00e1c27ffa2cb4" translate="yes" xml:space="preserve">
          <source>This function reads a password, prompting with &lt;var&gt;prompt&lt;/var&gt;. It does not echo the password as the user types it; instead, it echoes &amp;lsquo;</source>
          <target state="translated">이 함수는 암호를 읽어 프롬프트를 표시 &lt;var&gt;prompt&lt;/var&gt; . 사용자가 입력 할 때 암호를 에코하지 않습니다. 대신 '</target>
        </trans-unit>
        <trans-unit id="90ae472dc75aaea402bb04f3805e42a724b71f5e" translate="yes" xml:space="preserve">
          <source>This function reads a regular expression as a string from the minibuffer and returns it. If the minibuffer prompt string &lt;var&gt;prompt&lt;/var&gt; does not end in &amp;lsquo;</source>
          <target state="translated">이 함수는 미니 버퍼에서 정규식을 문자열로 읽고 반환합니다. 미니 버퍼 프롬프트 문자열 &lt;var&gt;prompt&lt;/var&gt; 가 '로 끝나지 않는 경우</target>
        </trans-unit>
        <trans-unit id="030acae5e3582745bfb15b94fd78e7002df493c0" translate="yes" xml:space="preserve">
          <source>This function reads a set of file mode bits from the minibuffer. The first optional argument &lt;var&gt;prompt&lt;/var&gt; specifies a non-default prompt. Second second optional argument &lt;var&gt;base-file&lt;/var&gt; is the name of a file on whose permissions to base the mode bits that this function returns, if what the user types specifies mode bits relative to permissions of an existing file.</source>
          <target state="translated">이 함수는 미니 버퍼에서 파일 모드 비트 세트를 읽습니다. 첫 번째 선택적 인수 &lt;var&gt;prompt&lt;/var&gt; 는 기본이 아닌 프롬프트를 지정합니다. 두 번째 두 번째 선택적 인수 &lt;var&gt;base-file&lt;/var&gt; 은 사용자 유형이 기존 파일의 권한에 상대적인 모드 비트를 지정하는 경우이 함수가 반환하는 모드 비트의 기반 권한이있는 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6d079e32c4c085ef24041ba62eefad89c38584d0" translate="yes" xml:space="preserve">
          <source>This function reads a shell command from the minibuffer, prompting with &lt;var&gt;prompt&lt;/var&gt; and providing intelligent completion. It completes the first word of the command using candidates that are appropriate for command names, and the rest of the command words as file names.</source>
          <target state="translated">이 함수는 미니 버퍼에서 쉘 명령을 읽고 &lt;var&gt;prompt&lt;/var&gt; 를 표시하고 지능적인 완료를 제공 합니다 . 명령 이름에 적합한 후보를 사용하여 명령의 첫 단어를 완성하고 나머지 명령 단어를 파일 이름으로 완성합니다.</target>
        </trans-unit>
        <trans-unit id="6b33c0e7398c5a841945f947dc390e12f8204368" translate="yes" xml:space="preserve">
          <source>This function reads a single key. It is intermediate between &lt;code&gt;read-key-sequence&lt;/code&gt; and &lt;code&gt;read-event&lt;/code&gt;. Unlike the former, it reads a single key, not a key sequence. Unlike the latter, it does not return a raw event, but decodes and translates the user input according to &lt;code&gt;input-decode-map&lt;/code&gt;, &lt;code&gt;local-function-key-map&lt;/code&gt;, and &lt;code&gt;key-translation-map&lt;/code&gt; (see &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;).</source>
          <target state="translated">이 함수는 단일 키를 읽습니다. &lt;code&gt;read-key-sequence&lt;/code&gt; 와 &lt;code&gt;read-event&lt;/code&gt; 사이의 중간 입니다. 전자와 달리 키 시퀀스가 ​​아닌 단일 키를 읽습니다. 후자와 달리 원시 이벤트를 반환하지 않지만 &lt;code&gt;input-decode-map&lt;/code&gt; , &lt;code&gt;local-function-key-map&lt;/code&gt; 및 &lt;code&gt;key-translation-map&lt;/code&gt; 에 따라 사용자 입력을 디코딩하고 변환합니다 ( &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;번역 키맵&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a3a8b19fdeda3b920cd241c1705dd1ad6315c139" translate="yes" xml:space="preserve">
          <source>This function reads a string from the minibuffer and returns it. The arguments &lt;var&gt;prompt&lt;/var&gt;, &lt;var&gt;initial&lt;/var&gt;, &lt;var&gt;history&lt;/var&gt; and &lt;var&gt;inherit-input-method&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;. The keymap used is &lt;code&gt;minibuffer-local-map&lt;/code&gt;.</source>
          <target state="translated">이 함수는 미니 버퍼에서 문자열을 읽고 반환합니다. 인수 &lt;var&gt;prompt&lt;/var&gt; , &lt;var&gt;initial&lt;/var&gt; , &lt;var&gt;history&lt;/var&gt; 및 &lt;var&gt;inherit-input-method&lt;/var&gt; 는 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 에서와 같이 사용됩니다 . 사용 된 키맵은 &lt;code&gt;minibuffer-local-map&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8c8223306c9781441f5040422128473ce90779ac" translate="yes" xml:space="preserve">
          <source>This function reads a string from the minibuffer, but does not allow whitespace characters as part of the input: instead, those characters terminate the input. The arguments &lt;var&gt;prompt&lt;/var&gt;, &lt;var&gt;initial&lt;/var&gt;, and &lt;var&gt;inherit-input-method&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;.</source>
          <target state="translated">이 함수는 미니 버퍼에서 문자열을 읽지 만 입력의 일부로 공백 문자를 허용하지 않습니다. 대신 해당 문자가 입력을 종료합니다. 인수 &lt;var&gt;prompt&lt;/var&gt; , &lt;var&gt;initial&lt;/var&gt; , &lt;var&gt;inherit-input-method&lt;/var&gt; 는 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 에서처럼 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3910b53909e9f65fa172c8d200634e30135434c1" translate="yes" xml:space="preserve">
          <source>This function reads a string in the minibuffer, assisting the user by providing completion. It activates the minibuffer with prompt &lt;var&gt;prompt&lt;/var&gt;, which must be a string.</source>
          <target state="translated">이 함수는 미니 버퍼의 문자열을 읽어 사용자에게 완성을 제공합니다. 그것은 문자열이어야하는 prompt &lt;var&gt;prompt&lt;/var&gt; 로 미니 버퍼를 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="37360039215b2dc59076c3d11efdca0772ca7c0a" translate="yes" xml:space="preserve">
          <source>This function reads a string that is a color specification, either the color&amp;rsquo;s name or an RGB hex value such as &lt;code&gt;#RRRGGGBBB&lt;/code&gt;. It prompts with &lt;var&gt;prompt&lt;/var&gt; (default: &lt;code&gt;&quot;Color (name or #RGB triplet):&quot;&lt;/code&gt;) and provides completion for color names, but not for hex RGB values. In addition to names of standard colors, completion candidates include the foreground and background colors at point.</source>
          <target state="translated">이 함수는 색상의 이름 또는 &lt;code&gt;#RRRGGGBBB&lt;/code&gt; 와 같은 RGB 16 진수 값인 색상 사양 인 문자열을 읽습니다 . &lt;var&gt;prompt&lt;/var&gt; (기본값 : &lt;code&gt;&quot;Color (name or #RGB triplet):&quot;&lt;/code&gt; )와 함께 프롬프트를 표시하고 16 진수 RGB 값이 아닌 색상 이름에 대한 완성을 제공합니다. 표준 색상의 이름 외에도 완성 후보에는 시점의 전경색과 배경색이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d9db9ec9513be122bbdfb05b58b1abfc4f461a86" translate="yes" xml:space="preserve">
          <source>This function reads abbrev definitions from a file named &lt;var&gt;filename&lt;/var&gt;, previously written with &lt;code&gt;write-abbrev-file&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the file specified in &lt;code&gt;abbrev-file-name&lt;/code&gt; is used.</source>
          <target state="translated">이 함수 는 이전에 &lt;code&gt;write-abbrev-file&lt;/code&gt; 로 작성된 &lt;var&gt;filename&lt;/var&gt; 이라는 파일 에서 abbrev 정의를 읽습니다 . 경우 &lt;var&gt;filename&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 지정된 파일 &lt;code&gt;abbrev-file-name&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="99d0b020f9b68903158c83af0d1d3d42a52bc279" translate="yes" xml:space="preserve">
          <source>This function reads an input method name with the minibuffer, prompting with &lt;var&gt;prompt&lt;/var&gt;. If &lt;var&gt;default&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that is returned by default, if the user enters empty input. However, if &lt;var&gt;inhibit-null&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, empty input signals an error.</source>
          <target state="translated">이 함수는 minibuffer로 입력 방법 이름을 읽고 prompt를 &lt;var&gt;prompt&lt;/var&gt; . 경우 &lt;var&gt;default&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; 사용자가 빈 입력을 입력하면, 기본적으로 반환됩니다. 그러나 &lt;var&gt;inhibit-null&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 빈 입력은 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c2d01aca49c9816eeea821c866a25e532ae55513" translate="yes" xml:space="preserve">
          <source>This function reads and returns a character input event. If the user generates an event which is not a character (i.e., a mouse click or function key event), &lt;code&gt;read-char&lt;/code&gt; signals an error. The arguments work as in &lt;code&gt;read-event&lt;/code&gt;.</source>
          <target state="translated">이 함수는 문자 입력 이벤트를 읽고 반환합니다. 사용자가 문자가 아닌 이벤트 (예 : 마우스 클릭 또는 기능 키 이벤트)를 생성하는 경우 &lt;code&gt;read-char&lt;/code&gt; 는 오류 신호를 보냅니다. 인수는 &lt;code&gt;read-event&lt;/code&gt; 에서처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="1a42ed12fda5f42a9b2a7257eda25e697227ab4f" translate="yes" xml:space="preserve">
          <source>This function reads and returns a character input event. If the user generates an event which is not a character event, &lt;code&gt;read-char-exclusive&lt;/code&gt; ignores it and reads another event, until it gets a character. The arguments work as in &lt;code&gt;read-event&lt;/code&gt;. The returned value may include modifier bits, as with &lt;code&gt;read-char&lt;/code&gt;.</source>
          <target state="translated">이 함수는 문자 입력 이벤트를 읽고 반환합니다. 사용자가 문자 이벤트가 아닌 이벤트를 생성하면 &lt;code&gt;read-char-exclusive&lt;/code&gt; 는 문자를 얻을 때까지이를 무시하고 다른 이벤트를 읽습니다. 인수는 &lt;code&gt;read-event&lt;/code&gt; 에서처럼 작동 합니다. 반환 된 값은 &lt;code&gt;read-char&lt;/code&gt; 과 같이 수정 자 비트를 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a73ab9c90b192a880dd6987698ce2dad370f1a26" translate="yes" xml:space="preserve">
          <source>This function reads and returns a register name, prompting with &lt;var&gt;prompt&lt;/var&gt; and possibly showing a preview of the existing registers and their contents. The preview is shown in a temporary window, after the delay specified by the user option &lt;code&gt;register-preview-delay&lt;/code&gt;, if its value and &lt;code&gt;register-alist&lt;/code&gt; are both non-&lt;code&gt;nil&lt;/code&gt;. The preview is also shown if the user requests help (e.g., by typing the help character). We recommend that all interactive commands which read register names use this function.</source>
          <target state="translated">이 함수는 레지스터 이름을 읽고 반환하며 &lt;var&gt;prompt&lt;/var&gt; 를 표시하고 기존 레지스터 및 해당 내용의 미리보기를 표시 할 수 있습니다. 해당 값과 &lt;code&gt;register-alist&lt;/code&gt; 가 모두 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 사용자 옵션 &lt;code&gt;register-preview-delay&lt;/code&gt; 에 지정된 지연 후 미리보기가 임시 창에 표시됩니다 . 사용자가 도움말을 요청하는 경우에도 미리보기가 표시됩니다 (예 : 도움말 문자 입력). 레지스터 이름을 읽는 모든 대화 형 명령은이 기능을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f7a512400790bfa09e3030b8a3c55d0b5a43ebca" translate="yes" xml:space="preserve">
          <source>This function reads and returns the next event of command input, waiting if necessary until an event is available.</source>
          <target state="translated">이 함수는 명령 입력의 다음 이벤트를 읽고 반환하며 필요한 경우 이벤트를 사용할 수있을 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="d04438056dbd8754b4b2b92d8c14b09754aa413b" translate="yes" xml:space="preserve">
          <source>This function reads one textual Lisp expression from &lt;var&gt;stream&lt;/var&gt;, returning it as a Lisp object. This is the basic Lisp input function.</source>
          <target state="translated">이 함수는 &lt;var&gt;stream&lt;/var&gt; 에서 하나의 텍스트 Lisp 표현식을 읽고 Lisp 객체로 반환합니다. 이것은 기본적인 Lisp 입력 기능입니다.</target>
        </trans-unit>
        <trans-unit id="63f4ae4c60a67b13935d576918376440012ec46e" translate="yes" xml:space="preserve">
          <source>This function reads the &lt;code&gt;.dir-locals.el&lt;/code&gt; file and stores the directory-local variables in &lt;code&gt;file-local-variables-alist&lt;/code&gt; that is local to the buffer visiting any file in the directory, without applying them. It also stores the directory-local settings in &lt;code&gt;dir-locals-class-alist&lt;/code&gt;, where it defines a special class for the directory in which</source>
          <target state="translated">이 함수는 &lt;code&gt;.dir-locals.el&lt;/code&gt; 파일을 읽고 적용하지 않고 디렉토리의 모든 파일을 방문하는 버퍼에 &lt;code&gt;file-local-variables-alist&lt;/code&gt; 에 디렉토리 로컬 변수를 저장 합니다. 또한 &lt;code&gt;dir-locals-class-alist&lt;/code&gt; 에 디렉토리 로컬 설정을 저장합니다 . 여기서 디렉토리에 대한 특수 클래스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c85fcc29acf59eed48da49945e963aebc852daa5" translate="yes" xml:space="preserve">
          <source>This function reads the first textual Lisp expression from the text in &lt;var&gt;string&lt;/var&gt;. It returns a cons cell whose &lt;small&gt;CAR&lt;/small&gt; is that expression, and whose &lt;small&gt;CDR&lt;/small&gt; is an integer giving the position of the next remaining character in the string (i.e., the first one not read).</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 의 텍스트에서 첫 번째 텍스트 Lisp 표현식을 읽습니다 . &lt;small&gt;CAR&lt;/small&gt; 이 해당 표현식이고 &lt;small&gt;CDR&lt;/small&gt; 이 문자열의 다음 남은 문자 (즉, 읽지 않은 첫 번째 문자)의 위치를 ​​제공하는 정수인 cons 셀을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2a5ebd0e573c8fac9572408552fa51293a9ef935" translate="yes" xml:space="preserve">
          <source>This function reads the name of a buffer and returns it as a string. It prompts with &lt;var&gt;prompt&lt;/var&gt;. The argument &lt;var&gt;default&lt;/var&gt; is the default name to use, the value to return if the user exits with an empty minibuffer. If non-&lt;code&gt;nil&lt;/code&gt;, it should be a string, a list of strings, or a buffer. If it is a list, the default value is the first element of this list. It is mentioned in the prompt, but is not inserted in the minibuffer as initial input.</source>
          <target state="translated">이 함수는 버퍼의 이름을 읽고 문자열로 반환합니다. 프롬프트가 표시 &lt;var&gt;prompt&lt;/var&gt; . 인수 &lt;var&gt;default&lt;/var&gt; 는 사용할 기본 이름이며 사용자가 빈 미니 버퍼로 종료하는 경우 반환 할 값입니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 문자열, 문자열 목록 또는 버퍼 여야합니다. 목록 인 경우 기본값은이 목록의 첫 번째 요소입니다. 프롬프트에 언급되어 있지만 초기 입력으로 미니 버퍼에 삽입되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60fcca64cdbd934cf243c3a7fa48f5cdd8c24374" translate="yes" xml:space="preserve">
          <source>This function reads the name of a command and returns it as a Lisp symbol. The argument &lt;var&gt;prompt&lt;/var&gt; is used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;. Recall that a command is anything for which &lt;code&gt;commandp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;, and a command name is a symbol for which &lt;code&gt;commandp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;.</source>
          <target state="translated">이 함수는 명령의 이름을 읽고 Lisp 기호로 반환합니다. 인수 &lt;var&gt;prompt&lt;/var&gt; 는 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 에서와 같이 사용됩니다 . 명령은 &lt;code&gt;commandp&lt;/code&gt; 가 &lt;code&gt;t&lt;/code&gt; 를 반환 하는 모든 항목 이고 명령 이름은 &lt;code&gt;commandp&lt;/code&gt; 가 &lt;code&gt;t&lt;/code&gt; 를 반환 하는 기호임을 상기하십시오 . &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;대화 형 통화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fab9b78ff71c7712ada5520bcc76eba6089780cf" translate="yes" xml:space="preserve">
          <source>This function reads the name of a customizable variable and returns it as a symbol. Its arguments have the same form as those of &lt;code&gt;read-command&lt;/code&gt;. It behaves just like &lt;code&gt;read-command&lt;/code&gt;, except that it uses the predicate &lt;code&gt;custom-variable-p&lt;/code&gt; instead of &lt;code&gt;commandp&lt;/code&gt;.</source>
          <target state="translated">이 함수는 사용자 정의 가능한 변수의 이름을 읽고 기호로 반환합니다. 인수의 형식은 &lt;code&gt;read-command&lt;/code&gt; 의 형식과 같습니다 . 그것은 단지처럼 동작 &lt;code&gt;read-command&lt;/code&gt; 이 술어를 사용하는 것을 제외하고, &lt;code&gt;custom-variable-p&lt;/code&gt; 대신 &lt;code&gt;commandp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89fa2b038d5a5d1adaf4f6fc09cd90c88af60277" translate="yes" xml:space="preserve">
          <source>This function reads the next JSON value from the current buffer, starting at point. It moves point to the position immediately after the value if contains a valid JSON object; otherwise it signals the &lt;code&gt;json-parse-error&lt;/code&gt; error and doesn&amp;rsquo;t move point. The arguments &lt;var&gt;args&lt;/var&gt; are interpreted as in &lt;code&gt;json-parse-string&lt;/code&gt;.</source>
          <target state="translated">이 함수는 포인트에서 시작하여 현재 버퍼에서 다음 JSON 값을 읽습니다. 유효한 JSON 객체가 포함 된 경우 값 바로 뒤의 위치로 포인트를 이동합니다. 그렇지 않으면 &lt;code&gt;json-parse-error&lt;/code&gt; 오류를 알리고 지점을 이동하지 않습니다. 인수 &lt;var&gt;args&lt;/var&gt; 는 &lt;code&gt;json-parse-string&lt;/code&gt; 에서와 같이 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="02b53ea7fa7a263a44454107e239954579f5a14b" translate="yes" xml:space="preserve">
          <source>This function recenters the overlays of the current buffer around position &lt;var&gt;pos&lt;/var&gt;. That makes overlay lookup faster for positions near &lt;var&gt;pos&lt;/var&gt;, but slower for positions far away from &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;pos&lt;/var&gt; 위치 주변의 현재 버퍼 오버레이를 최근에 배치 합니다. 그 차종은 가까운 위치에 대한 빠른 조회 오버레이 &lt;var&gt;pos&lt;/var&gt; 멀리에서 위치에 대한 느리지 만 &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d52455a588f773b4c2676c22e1d56331ef4f2f13" translate="yes" xml:space="preserve">
          <source>This function redirects focus from &lt;var&gt;frame&lt;/var&gt; to &lt;var&gt;focus-frame&lt;/var&gt;. This means that &lt;var&gt;focus-frame&lt;/var&gt; will receive subsequent keystrokes and events intended for &lt;var&gt;frame&lt;/var&gt;. After such an event, the value of &lt;code&gt;last-event-frame&lt;/code&gt; will be &lt;var&gt;focus-frame&lt;/var&gt;. Also, switch-frame events specifying &lt;var&gt;frame&lt;/var&gt; will instead select &lt;var&gt;focus-frame&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 에서 &lt;var&gt;focus-frame&lt;/var&gt; 프레임 으로 포커스를 리디렉션 합니다. 것을이 수단 &lt;var&gt;focus-frame&lt;/var&gt; 다음 키 입력과 이벤트를받을를위한 &lt;var&gt;frame&lt;/var&gt; . 이러한 이벤트 이후의 값이 &lt;code&gt;last-event-frame&lt;/code&gt; 것이다 &lt;var&gt;focus-frame&lt;/var&gt; . 또한, 지정 스위치 프레임 이벤트 &lt;var&gt;frame&lt;/var&gt; 대신 선택하게됩니다 &lt;var&gt;focus-frame&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7b6298ffab83d5b48140f28bb45c9ab80db50a0a" translate="yes" xml:space="preserve">
          <source>This function regenerates the text of &lt;var&gt;ewoc&lt;/var&gt;. It works by deleting the text between the header and the footer, i.e., all the data elements&amp;rsquo; representations, and then calling the pretty-printer function for each node, one by one, in order.</source>
          <target state="translated">이 함수는 &lt;var&gt;ewoc&lt;/var&gt; 의 텍스트를 다시 생성합니다 . 머리글과 바닥 글 사이의 텍스트, 즉 모든 데이터 요소의 표현을 삭제 한 다음 각 노드에 대한 pretty-printer 함수를 순서대로 호출하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="cfd6bf077c5b2a9d99474c60643eb2aebd9ba984" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;function&lt;/var&gt; from the hook variable &lt;var&gt;hook&lt;/var&gt;. It compares &lt;var&gt;function&lt;/var&gt; with elements of &lt;var&gt;hook&lt;/var&gt; using &lt;code&gt;equal&lt;/code&gt;, so it works for both symbols and lambda expressions.</source>
          <target state="translated">이 함수는 후크 변수 &lt;var&gt;hook&lt;/var&gt; 에서 함수를 제거 &lt;var&gt;function&lt;/var&gt; . &lt;code&gt;equal&lt;/code&gt; 을 사용하여 &lt;var&gt;function&lt;/var&gt; 와 &lt;var&gt;hook&lt;/var&gt; 요소를 비교 하므로 기호와 람다 식 모두에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="dbf7ef881c8930f8b915aa3f0b4fb8eb27f99aaf" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;keywords&lt;/var&gt; from &lt;code&gt;font-lock-keywords&lt;/code&gt; for the current buffer or for major mode &lt;var&gt;mode&lt;/var&gt;. As in &lt;code&gt;font-lock-add-keywords&lt;/code&gt;, &lt;var&gt;mode&lt;/var&gt; should be a major mode command name or &lt;code&gt;nil&lt;/code&gt;. All the caveats and requirements for &lt;code&gt;font-lock-add-keywords&lt;/code&gt; apply here too. The argument &lt;var&gt;keywords&lt;/var&gt; must exactly match the one used by the corresponding &lt;code&gt;font-lock-add-keywords&lt;/code&gt;.</source>
          <target state="translated">이 함수는 현재 버퍼 또는 주 모드 &lt;var&gt;mode&lt;/var&gt; 대한 &lt;code&gt;font-lock-keywords&lt;/code&gt; &lt;var&gt;keywords&lt;/var&gt; 에서 키워드 를 제거 합니다 . 마찬가지로 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; , &lt;var&gt;mode&lt;/var&gt; 주요 모드 명령 이름이나해야 &lt;code&gt;nil&lt;/code&gt; . &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 에 대한 모든주의 사항 및 요구 사항이 여기에도 적용됩니다. 인수 &lt;var&gt;keywords&lt;/var&gt; 는 해당 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 에서 사용하는 키워드 와 정확히 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1680ca69b1362c52b00e0a6ba8ae9504f28465bc" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;watch-function&lt;/var&gt; from &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s list of watchers.</source>
          <target state="translated">이 기능은 &lt;var&gt;symbol&lt;/var&gt; 의 감시자 목록 에서 &lt;var&gt;watch-function&lt;/var&gt; 기능을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="4f5c022434cbe6bb085a65d4232d959f2f5ce07c" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;window&lt;/var&gt; from display and returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 함수는 디스플레이에서 &lt;var&gt;window&lt;/var&gt; 을 제거 하고 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값.</target>
        </trans-unit>
        <trans-unit id="b5b4c854904b0794e2c3165050e7f66ad1f31c86" translate="yes" xml:space="preserve">
          <source>This function removes a relative remapping previously added by &lt;code&gt;face-remap-add-relative&lt;/code&gt;. &lt;var&gt;cookie&lt;/var&gt; should be the Lisp object returned by &lt;code&gt;face-remap-add-relative&lt;/code&gt; when the remapping was added.</source>
          <target state="translated">이 함수는 이전에 &lt;code&gt;face-remap-add-relative&lt;/code&gt; 에 의해 추가 된 상대적 재 매핑을 제거합니다 . &lt;var&gt;cookie&lt;/var&gt; 는 리 맵핑이 추가되었을 때 &lt;code&gt;face-remap-add-relative&lt;/code&gt; 가 반환 한 Lisp 객체 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="7d34fc68ac207e292821980126e258f35bb0f378" translate="yes" xml:space="preserve">
          <source>This function removes all elements &lt;code&gt;equal&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt; from &lt;var&gt;sequence&lt;/var&gt;, and returns the resulting sequence.</source>
          <target state="translated">이 기능은 모든 요소가 제거 &lt;code&gt;equal&lt;/code&gt; 로 &lt;var&gt;object&lt;/var&gt; 로부터 &lt;var&gt;sequence&lt;/var&gt; , 생성 된 시퀀스를 반환한다.</target>
        </trans-unit>
        <trans-unit id="f39c79e2cee21bc915f66c37a7cb928f7d6c598c" translate="yes" xml:space="preserve">
          <source>This function removes all the associations from hash table &lt;var&gt;table&lt;/var&gt;, so that it becomes empty. This is also called &lt;em&gt;clearing&lt;/em&gt; the hash table.</source>
          <target state="translated">이 함수는 해시 테이블 &lt;var&gt;table&lt;/var&gt; 에서 모든 연관을 제거하여 비어있게됩니다. 이를 해시 테이블 &lt;em&gt;지우기&lt;/em&gt; 라고도 합니다.</target>
        </trans-unit>
        <trans-unit id="e5a98c2b9ec6bf50de6f4da4a9421d858f8c3b7d" translate="yes" xml:space="preserve">
          <source>This function removes all the overlays between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; whose property &lt;var&gt;name&lt;/var&gt; has the value &lt;var&gt;value&lt;/var&gt;. It can move the endpoints of the overlays in the region, or split them.</source>
          <target state="translated">이 함수는 속성 &lt;var&gt;name&lt;/var&gt; 에 value &lt;var&gt;value&lt;/var&gt; 이있는 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 모든 오버레이를 제거합니다 . 영역에서 오버레이의 끝점을 이동하거나 분할 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2faeec5ec6b17779c14905afd408f74830700eb9" translate="yes" xml:space="preserve">
          <source>This function removes images in &lt;var&gt;buffer&lt;/var&gt; between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, images are removed from the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 위치 와 &lt;var&gt;end&lt;/var&gt; 위치 사이의 &lt;var&gt;buffer&lt;/var&gt; 이미지를 제거합니다 . 경우 &lt;var&gt;buffer&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 이미지는 현재 버퍼로부터 제거된다.</target>
        </trans-unit>
        <trans-unit id="4ace46a5550a9703d4343ba58be19228a5f05655" translate="yes" xml:space="preserve">
          <source>This function removes left margin indentation from the text between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;. The amount of indentation to delete is determined by calling &lt;code&gt;current-left-margin&lt;/code&gt;. In no case does this function delete non-whitespace. If &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; are omitted, they default to the whole buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;from&lt;/var&gt; 과 &lt;var&gt;to&lt;/var&gt; 사이의 텍스트에서 왼쪽 여백 들여 쓰기를 제거합니다 . 삭제할 들여 쓰기 양은 &lt;code&gt;current-left-margin&lt;/code&gt; 을 호출하여 결정됩니다 . 어떤 경우에도이 함수는 공백이 아닌 것을 삭제하지 않습니다. 경우 &lt;var&gt;from&lt;/var&gt; 와은 &lt;var&gt;to&lt;/var&gt; 생략, 그들은 전체 버퍼에 기본.</target>
        </trans-unit>
        <trans-unit id="22b947e5afed6153af15f49300fe368023b8b4a4" translate="yes" xml:space="preserve">
          <source>This function removes the association for &lt;var&gt;key&lt;/var&gt; from &lt;var&gt;table&lt;/var&gt;, if there is one. If &lt;var&gt;key&lt;/var&gt; has no association, &lt;code&gt;remhash&lt;/code&gt; does nothing.</source>
          <target state="translated">이 함수 협회 제거 &lt;var&gt;key&lt;/var&gt; 에서 &lt;var&gt;table&lt;/var&gt; 가있는 경우. 경우 &lt;var&gt;key&lt;/var&gt; 는 연관이없는, &lt;code&gt;remhash&lt;/code&gt; 는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a5669699584ec96c68a79c3afd525b0a4fc86a6" translate="yes" xml:space="preserve">
          <source>This function removes the binding of &lt;var&gt;key&lt;/var&gt; from the current global map.</source>
          <target state="translated">이 함수는 현재 글로벌 맵에서 &lt;var&gt;key&lt;/var&gt; 바인딩을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="746b11d07210c75af518564d1a19d4b7bb7e4c1c" translate="yes" xml:space="preserve">
          <source>This function removes the binding of &lt;var&gt;key&lt;/var&gt; from the current local map.</source>
          <target state="translated">이 함수는 현재 로컬 맵에서 &lt;var&gt;key&lt;/var&gt; 바인딩을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="1d56d85933f37f1fca8e5d70f7fd5b286af17ca2" translate="yes" xml:space="preserve">
          <source>This function removes the image with specification &lt;var&gt;spec&lt;/var&gt; from the image cache of frame &lt;var&gt;frame&lt;/var&gt;. Image specifications are compared using &lt;code&gt;equal&lt;/code&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the image is flushed on all existing frames.</source>
          <target state="translated">이 함수는 프레임 &lt;var&gt;frame&lt;/var&gt; 의 이미지 캐시에서 사양 &lt;var&gt;spec&lt;/var&gt; 의 이미지를 제거합니다 . 이미지 사양은 &lt;code&gt;equal&lt;/code&gt; . 경우 &lt;var&gt;frame&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 선택된 프레임, 기본값. 경우 &lt;var&gt;frame&lt;/var&gt; 입니다 &lt;code&gt;t&lt;/code&gt; 을 , 이미지는 기존의 모든 프레임에 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="431a3695282aff7b977ac8d39fe6b4a14dd00302" translate="yes" xml:space="preserve">
          <source>This function removes the tray notification given by its unique &lt;var&gt;id&lt;/var&gt;.</source>
          <target state="translated">이 함수는 고유 &lt;var&gt;id&lt;/var&gt; 제공하는 트레이 알림을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="7954522cd89bcccd3d75db48760fef5ee1a32dd6" translate="yes" xml:space="preserve">
          <source>This function renames the current buffer to &lt;var&gt;newname&lt;/var&gt;. An error is signaled if &lt;var&gt;newname&lt;/var&gt; is not a string.</source>
          <target state="translated">이 함수는 현재 버퍼의 이름을 &lt;var&gt;newname&lt;/var&gt; 으로 바꿉니다 . &lt;var&gt;newname&lt;/var&gt; 이 문자열이 아닌 경우 오류가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="f3b16604c972bba6a42f983e33cad9e266ca9e2b" translate="yes" xml:space="preserve">
          <source>This function renders the parsed HTML in &lt;var&gt;dom&lt;/var&gt; into the current buffer. The argument &lt;var&gt;dom&lt;/var&gt; should be a list as generated by &lt;code&gt;libxml-parse-html-region&lt;/code&gt;. This function is, e.g., used by &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/eww/index.html#Top&quot;&gt;EWW&lt;/a&gt; in</source>
          <target state="translated">이 함수는 &lt;var&gt;dom&lt;/var&gt; 의 구문 분석 된 HTML을 현재 버퍼로 렌더링합니다 . 인수 &lt;var&gt;dom&lt;/var&gt; 은 &lt;code&gt;libxml-parse-html-region&lt;/code&gt; 에 의해 생성 된 목록이어야합니다 . 이 기능은 예를 들어 &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/eww/index.html#Top&quot;&gt;EWW&lt;/a&gt; 가</target>
        </trans-unit>
        <trans-unit id="693b9f310a6bbf2b9c6eeb41bdb789e358cedd1d" translate="yes" xml:space="preserve">
          <source>This function reopens the terminal device, re-initializes it, and redraws it with that terminal&amp;rsquo;s selected frame. It then runs the hook &lt;code&gt;resume-tty-functions&lt;/code&gt;, passing the terminal object as an argument to each function.</source>
          <target state="translated">이 기능은 터미널 장치를 다시 열고 다시 초기화 한 다음 해당 터미널의 선택한 프레임으로 다시 그립니다. 그런 다음 후크 &lt;code&gt;resume-tty-functions&lt;/code&gt; 를 실행하여 터미널 객체를 각 함수에 대한 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="d8757c8dbce8fa01ba9bf0fe29bfe6e73923905d" translate="yes" xml:space="preserve">
          <source>This function replaces &lt;var&gt;olddef&lt;/var&gt; with &lt;var&gt;newdef&lt;/var&gt; for any keys in &lt;var&gt;keymap&lt;/var&gt; that were bound to &lt;var&gt;olddef&lt;/var&gt;. In other words, &lt;var&gt;olddef&lt;/var&gt; is replaced with &lt;var&gt;newdef&lt;/var&gt; wherever it appears. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능을 대체는 &lt;var&gt;olddef&lt;/var&gt; 와 &lt;var&gt;newdef&lt;/var&gt; 의 모든 키에 대한 &lt;var&gt;keymap&lt;/var&gt; 에 바인딩 된 &lt;var&gt;olddef&lt;/var&gt; . 즉, &lt;var&gt;olddef&lt;/var&gt; 로 대체 &lt;var&gt;newdef&lt;/var&gt; 이 나타나는 곳. 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8fdd552a5b02f66fbca39c64f7e08294ba542692" translate="yes" xml:space="preserve">
          <source>This function replaces all occurrences of the character &lt;var&gt;old-char&lt;/var&gt; with the character &lt;var&gt;new-char&lt;/var&gt; in the region of the current buffer defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 로 정의 된 현재 버퍼 영역에서 &lt;var&gt;old-char&lt;/var&gt; 문자의 모든 발생을 &lt;var&gt;new-char&lt;/var&gt; 문자로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="6c50a3e212a9ce200305f0d1fe0982d8e66b4bbc" translate="yes" xml:space="preserve">
          <source>This function replaces all or part of the text matched by the last search. It works by means of the match data.</source>
          <target state="translated">이 기능은 마지막 검색과 일치하는 텍스트의 전체 또는 일부를 바꿉니다. 일치 데이터를 통해 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e8175df12fee2400ea7cbe9d0eddde6e9a5b6d90" translate="yes" xml:space="preserve">
          <source>This function replaces all the horizontal whitespace surrounding point with either one space or no space, according to the context. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 문맥에 따라 모든 수평 공백 주변 지점을 하나의 공백 또는 공백없이 대체합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="62150ee966ba1478ce433c3225e1494610830bc1" translate="yes" xml:space="preserve">
          <source>This function replaces environment variable references in &lt;var&gt;filename&lt;/var&gt; with the environment variable values. Following standard Unix shell syntax, &amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 의 환경 변수 참조를 환경 변수 값으로 바꿉니다 . 표준 Unix 쉘 구문에 따라 '</target>
        </trans-unit>
        <trans-unit id="a437f0a9fdadd124cd26c155f1b561e821a9bce4" translate="yes" xml:space="preserve">
          <source>This function replaces the accessible portion of the current buffer with the accessible portion of the buffer &lt;var&gt;source&lt;/var&gt;. &lt;var&gt;source&lt;/var&gt; may either be a buffer object or the name of a buffer. When &lt;code&gt;replace-buffer-contents&lt;/code&gt; succeeds, the text of the accessible portion of the current buffer will be equal to the text of the accessible portion of the &lt;var&gt;source&lt;/var&gt; buffer.</source>
          <target state="translated">이 함수는 현재 버퍼의 액세스 가능한 부분을 버퍼 &lt;var&gt;source&lt;/var&gt; 의 액세스 가능한 부분으로 대체합니다 . &lt;var&gt;source&lt;/var&gt; 는 버퍼 객체이거나 버퍼의 이름 일 수 있습니다. 경우 &lt;code&gt;replace-buffer-contents&lt;/code&gt; 성공 현재 버퍼의 액세스 부분의 텍스트가 액세스의 부분의 내용과 동일 할 것이다 &lt;var&gt;source&lt;/var&gt; 버퍼.</target>
        </trans-unit>
        <trans-unit id="779566d70cfe04467f75194f846d3acf5ec066c8" translate="yes" xml:space="preserve">
          <source>This function replaces the property list of &lt;var&gt;xwidget&lt;/var&gt; with a new property list given by &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;xwidget&lt;/var&gt; 의 속성 목록을 &lt;var&gt;plist&lt;/var&gt; 가 제공하는 새 속성 목록으로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="d5338d8d0cae2418e75d77c7909c1e572b27cddd" translate="yes" xml:space="preserve">
          <source>This function replaces the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; using the given &lt;var&gt;replace-fn&lt;/var&gt;. The function &lt;var&gt;replace-fn&lt;/var&gt; is run in the current buffer narrowed to the specified region and it should return either a string or a buffer replacing the region.</source>
          <target state="translated">이 함수는 주어진 &lt;var&gt;replace-fn&lt;/var&gt; 을 사용하여 &lt;var&gt;beg&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이의 영역을 대체합니다 . &lt;var&gt;replace-fn&lt;/var&gt; 함수 는 지정된 영역으로 좁혀진 현재 버퍼에서 실행되며 해당 영역을 대체하는 문자열 또는 버퍼를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c386d8bbac22382afc8e75e16f6af6496a6d621" translate="yes" xml:space="preserve">
          <source>This function reports a warning using the value of &lt;code&gt;(format-message
&lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; as the message in the</source>
          <target state="translated">이 함수는 &lt;code&gt;(format-message &lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; 값을 메시지로 사용하여 경고를보고 합니다.</target>
        </trans-unit>
        <trans-unit id="3bdc6d456a207a09dc07584bc51e494ebcd8d335" translate="yes" xml:space="preserve">
          <source>This function reports a warning using the value of &lt;code&gt;(format-message
&lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; as the message, &lt;code&gt;(emacs)&lt;/code&gt; as the type, and &lt;code&gt;:warning&lt;/code&gt; as the severity level. It exists for compatibility only; we recommend not using it, because you should specify a specific warning type.</source>
          <target state="translated">이 함수는 &lt;code&gt;(format-message &lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; 값을 메시지로, &lt;code&gt;(emacs)&lt;/code&gt; 를 유형으로, &lt;code&gt;:warning&lt;/code&gt; 을 심각도 수준으로 사용하여 경고 를보고합니다. 호환성을 위해서만 존재합니다. 특정 경고 유형을 지정해야하므로 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="69d39e6c5888fd66a8fabdb58e75d9f4d5751943" translate="yes" xml:space="preserve">
          <source>This function reports a warning, using &lt;var&gt;message&lt;/var&gt; as the message and &lt;var&gt;type&lt;/var&gt; as the warning type. &lt;var&gt;level&lt;/var&gt; should be the severity level, with &lt;code&gt;:warning&lt;/code&gt; being the default.</source>
          <target state="translated">이 함수 는 메시지 를 &lt;var&gt;message&lt;/var&gt; 로 사용 하고 &lt;var&gt;type&lt;/var&gt; 을 경고 유형으로 사용하여 경고를보고합니다. &lt;var&gt;level&lt;/var&gt; 은 심각도 수준 이어야하며 기본값 은 &lt;code&gt;:warning&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2ed768e66d856254b338771fb3b98214f4776f9" translate="yes" xml:space="preserve">
          <source>This function reports the current insertion type of &lt;var&gt;marker&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;marker&lt;/var&gt; 의 현재 삽입 유형을보고합니다 .</target>
        </trans-unit>
        <trans-unit id="ff2a592890e135a26dfc7c9b3e4450af065ae093" translate="yes" xml:space="preserve">
          <source>This function reports the scroll bar type for window &lt;var&gt;window&lt;/var&gt;. The value is a cons cell &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; .
&lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt;. Unlike &lt;code&gt;window-scroll-bars&lt;/code&gt;, this reports the scroll bar type actually used, once frame defaults and &lt;code&gt;scroll-bar-mode&lt;/code&gt; are taken into account.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 스크롤 막대 유형을보고합니다 . 값은 단점 셀 &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; . &lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt; 입니다. &lt;code&gt;window-scroll-bars&lt;/code&gt; 와 달리 이것은 프레임 기본값과 &lt;code&gt;scroll-bar-mode&lt;/code&gt; 가 고려 되면 실제로 사용 된 스크롤바 유형을보고 합니다.</target>
        </trans-unit>
        <trans-unit id="feee688ecde52724cc270c5a5fa818e35828c83f" translate="yes" xml:space="preserve">
          <source>This function reports the scroll bar types for frame &lt;var&gt;frame&lt;/var&gt;. The value is a cons cell &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; .
&lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;vertical-type&lt;/var&gt; is either &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; (which means no vertical scroll bar.) &lt;var&gt;horizontal-type&lt;/var&gt; is either &lt;code&gt;bottom&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; (which means no horizontal scroll bar).</source>
          <target state="translated">이 함수는 프레임 &lt;var&gt;frame&lt;/var&gt; 대한 스크롤 막대 유형을보고합니다 . 값은 cons 셀 &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; . &lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt; . 여기서 &lt;var&gt;vertical-type&lt;/var&gt; 은 &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; (수직 스크롤 막대가 없음을 의미 함)입니다. &lt;var&gt;horizontal-type&lt;/var&gt; 은 &lt;code&gt;bottom&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; (가로 스크롤 바).</target>
        </trans-unit>
        <trans-unit id="72d44d791ece7005dabf3862f3f3ebd1fb388f10" translate="yes" xml:space="preserve">
          <source>This function reports whether a color name is meaningful. It returns &lt;code&gt;t&lt;/code&gt; if so; otherwise, &lt;code&gt;nil&lt;/code&gt;. The argument &lt;var&gt;frame&lt;/var&gt; says which frame&amp;rsquo;s display to ask about; if &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the selected frame is used.</source>
          <target state="translated">이 함수는 색상 이름이 의미가 있는지 여부를보고합니다. 그렇다면 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다. 인수 &lt;var&gt;frame&lt;/var&gt; 은 어떤 프레임의 디스플레이에 대해 물어볼 것인지를 알려줍니다. 만약 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임이 사용된다.</target>
        </trans-unit>
        <trans-unit id="27d404483cd911abc158c15cc8b1b52957f97e88" translate="yes" xml:space="preserve">
          <source>This function requests &lt;var&gt;function-name&lt;/var&gt; to invoke the debugger each time it is called.</source>
          <target state="translated">이 함수 는 호출 될 때마다 디버거를 호출 하도록 &lt;var&gt;function-name&lt;/var&gt; 을 요청 합니다 .</target>
        </trans-unit>
        <trans-unit id="5ed7bd62ca1a1338056458ede4338e01d53dc799" translate="yes" xml:space="preserve">
          <source>This function resembles &lt;code&gt;insert-buffer-substring&lt;/code&gt;, except that it processes the text according to &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt;. (It does not handle the &lt;code&gt;yank-handler&lt;/code&gt; property, which does not normally occur in buffer text anyway.)</source>
          <target state="translated">이 함수는 &lt;code&gt;yank-handled-properties&lt;/code&gt; 및 &lt;code&gt;yank-excluded-properties&lt;/code&gt; 에 따라 텍스트를 처리한다는 점을 제외하면 &lt;code&gt;insert-buffer-substring&lt;/code&gt; 과 유사 합니다 . ( 어쨌든 버퍼 텍스트에서 일반적으로 발생하지 않는 &lt;code&gt;yank-handler&lt;/code&gt; 속성을 처리 하지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="c341abcb38b0764660281b2ce9ce3450df1c6f41" translate="yes" xml:space="preserve">
          <source>This function resizes &lt;var&gt;window&lt;/var&gt; by &lt;var&gt;delta&lt;/var&gt; increments. If &lt;var&gt;horizontal&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it changes the height by &lt;var&gt;delta&lt;/var&gt; lines; otherwise, it changes the width by &lt;var&gt;delta&lt;/var&gt; columns. A positive &lt;var&gt;delta&lt;/var&gt; means to enlarge the window, and a negative &lt;var&gt;delta&lt;/var&gt; means to shrink it.</source>
          <target state="translated">이 함수 는 &lt;var&gt;delta&lt;/var&gt; 증분으로 &lt;var&gt;window&lt;/var&gt; 크기를 조정 합니다. 경우 &lt;var&gt;horizontal&lt;/var&gt; 인 &lt;code&gt;nil&lt;/code&gt; , 그것으로 높이 변화 &lt;var&gt;delta&lt;/var&gt; 라인; 그렇지 않으면 &lt;var&gt;delta&lt;/var&gt; 열에 의해 너비가 변경됩니다 . 양수 &lt;var&gt;delta&lt;/var&gt; 는 창을 확대하는 것을 의미 하고 음수 &lt;var&gt;delta&lt;/var&gt; 는 창 을 축소하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4859c426d6d82c4e50f29f8c85ef005878cf45c1" translate="yes" xml:space="preserve">
          <source>This function resizes the specified &lt;var&gt;xwidget&lt;/var&gt; to the size &lt;var&gt;width&lt;/var&gt;x&lt;var&gt;height&lt;/var&gt; pixels.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;xwidget&lt;/var&gt; 의 크기를 &lt;var&gt;width&lt;/var&gt; x &lt;var&gt;height&lt;/var&gt; 픽셀 크기로 조정합니다 .</target>
        </trans-unit>
        <trans-unit id="ec7eb3d9404fd838076e94969df882d8127cb5bb" translate="yes" xml:space="preserve">
          <source>This function resizes the text area of &lt;var&gt;frame&lt;/var&gt; to a height of &lt;var&gt;height&lt;/var&gt; lines. The sizes of existing windows in &lt;var&gt;frame&lt;/var&gt; are altered proportionally to fit.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 텍스트 영역 을 &lt;var&gt;height&lt;/var&gt; 선 높이로 조정 합니다. &lt;var&gt;frame&lt;/var&gt; 에있는 기존 창의 크기는 크기에 맞게 비례 적으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="95c31d580e34882fead34a53db81fce107bff516" translate="yes" xml:space="preserve">
          <source>This function respects &lt;var&gt;min-change&lt;/var&gt; and &lt;var&gt;min-time&lt;/var&gt; as passed to &lt;code&gt;make-progress-reporter&lt;/code&gt; and so does not output new messages on every invocation. It is thus very fast and normally you should not try to reduce the number of calls to it: resulting overhead will most likely negate your effort.</source>
          <target state="translated">이 함수 는 &lt;code&gt;make-progress-reporter&lt;/code&gt; 에 전달 된 &lt;var&gt;min-change&lt;/var&gt; 및 &lt;var&gt;min-time&lt;/var&gt; 을 존중 하므로 모든 호출에서 새 메시지를 출력하지 않습니다. 따라서 매우 빠르며 일반적으로 호출 수를 줄이려고하면 안됩니다. 결과 오버 헤드는 대부분의 노력을 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="a855d4fe3f68cf1c266c16182242d3ddceb684cc" translate="yes" xml:space="preserve">
          <source>This function restacks &lt;var&gt;frame1&lt;/var&gt; below &lt;var&gt;frame2&lt;/var&gt;. This implies that if both frames are visible and their display areas overlap, &lt;var&gt;frame2&lt;/var&gt; will (partially) obscure &lt;var&gt;frame1&lt;/var&gt;. If the optional third argument &lt;var&gt;above&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function restacks &lt;var&gt;frame1&lt;/var&gt; above &lt;var&gt;frame2&lt;/var&gt;. This means that if both frames are visible and their display areas overlap, &lt;var&gt;frame1&lt;/var&gt; will (partially) obscure &lt;var&gt;frame2&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame1&lt;/var&gt; 아래에 &lt;var&gt;frame2&lt;/var&gt; 합니다. 이는 두 프레임이 모두 표시되고 해당 표시 영역이 겹치면 &lt;var&gt;frame2&lt;/var&gt; 가 (부분적으로) &lt;var&gt;frame1&lt;/var&gt; 을 가리는 것을 의미 합니다. &lt;var&gt;above&lt;/var&gt; 의 선택적 세 번째 인수 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우이 함수는 &lt;var&gt;frame1&lt;/var&gt; 을 frame2 위에 &lt;var&gt;frame2&lt;/var&gt; 합니다. 즉, 두 프레임이 모두 표시되고 해당 표시 영역이 겹치면 &lt;var&gt;frame1&lt;/var&gt; 이 (부분적으로) &lt;var&gt;frame2&lt;/var&gt; 를가립니다 .</target>
        </trans-unit>
        <trans-unit id="88c33262490db74ade8d75dc96c9a902bb1f407d" translate="yes" xml:space="preserve">
          <source>This function restores the configuration of windows and buffers as specified by &lt;var&gt;configuration&lt;/var&gt;, for the frame that &lt;var&gt;configuration&lt;/var&gt; was created for, regardless of whether that frame is selected or not. The argument &lt;var&gt;configuration&lt;/var&gt; must be a value that was previously returned by &lt;code&gt;current-window-configuration&lt;/code&gt; for that frame.</source>
          <target state="translated">지정된대로이 함수는 윈도우와 버퍼의 구성을 복원 &lt;var&gt;configuration&lt;/var&gt; 하는 프레임에 대해, &lt;var&gt;configuration&lt;/var&gt; 에 관계없이 프레임 선택 여부에 대해 생성 하였다. 인수 &lt;var&gt;configuration&lt;/var&gt; 은 해당 프레임의 &lt;code&gt;current-window-configuration&lt;/code&gt; 에서 이전에 반환 한 값이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7d94485d22c6c9da77798de4f8b04ce04292fabf" translate="yes" xml:space="preserve">
          <source>This function restores the major mode recorded by &lt;code&gt;major-mode-suspend&lt;/code&gt;. If no major mode was recorded, this function calls &lt;code&gt;normal-mode&lt;/code&gt; (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;normal-mode&lt;/a&gt;), but tries to force it not to choose any modes in &lt;var&gt;avoided-modes&lt;/var&gt;, if that argument is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 &lt;code&gt;major-mode-suspend&lt;/code&gt; 에 의해 기록 된 주요 모드를 복원합니다 . 더 중요한 모드가 기록되지 않은 경우,이 함수를 호출 &lt;code&gt;normal-mode&lt;/code&gt; (참조 &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;정상 모드&lt;/a&gt; ), 그러나 어떤 모드를 선택하지 않는 강제로 시도 &lt;var&gt;avoided-modes&lt;/var&gt; 그 인수가 아닌 경우, &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5157ca4fc71fe8d46e84c5feb81524fd20b9f11c" translate="yes" xml:space="preserve">
          <source>This function restores the state of frames described in &lt;var&gt;configuration&lt;/var&gt;. However, this function does not restore deleted frames.</source>
          <target state="translated">이 기능은 &lt;var&gt;configuration&lt;/var&gt; 설명 된 프레임의 상태를 복원합니다 . 그러나이 기능은 삭제 된 프레임을 복원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e7ce71a9865a4ebd8153c8e3e5d9e1f8705b5e2b" translate="yes" xml:space="preserve">
          <source>This function resumes execution of the process &lt;var&gt;process&lt;/var&gt;. If it is a real subprocess running a program, it sends the signal &lt;code&gt;SIGCONT&lt;/code&gt; to that subprocess; this presumes that &lt;var&gt;process&lt;/var&gt; was stopped previously. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, this function resumes handling of the incoming data from the connection. For serial connections, data that arrived during the time the process was stopped might be lost.</source>
          <target state="translated">이 기능은 프로세스 &lt;var&gt;process&lt;/var&gt; 실행을 재개 합니다 . 프로그램을 실행하는 실제 하위 프로세스 인 경우 해당 하위 프로세스에 &lt;code&gt;SIGCONT&lt;/code&gt; 신호를 보냅니다 . 이것은 &lt;var&gt;process&lt;/var&gt; 가 이전에 중지 되었다고 가정합니다 . 경우 &lt;var&gt;process&lt;/var&gt; 네트워크, 직렬 또는 파이프 연결을 나타내며,이 함수는 연결로부터 수신되는 데이터의 처리 재개. 직렬 연결의 경우 프로세스가 중지 된 동안 도착한 데이터가 손실 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9aa92e45214989b0e1206208ed425833d84e88e" translate="yes" xml:space="preserve">
          <source>This function resumes the previously suspended terminal device &lt;var&gt;tty&lt;/var&gt;; where &lt;var&gt;tty&lt;/var&gt; has the same possible values as it does for &lt;code&gt;suspend-tty&lt;/code&gt;.</source>
          <target state="translated">이 기능은 이전에 일시 중단 된 터미널 장치 &lt;var&gt;tty&lt;/var&gt; 를 다시 시작합니다 . 여기서 &lt;var&gt;tty&lt;/var&gt; 는 &lt;code&gt;suspend-tty&lt;/code&gt; 와 동일한 가능한 값 을가 집니다.</target>
        </trans-unit>
        <trans-unit id="ba739975e1d6335204af863c553777aa8be9d348" translate="yes" xml:space="preserve">
          <source>This function retrieves the last known focus state of &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 마지막으로 알려진 초점 상태를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="ca17f7b26776043ce0c14cb3763c3179808ed7eb" translate="yes" xml:space="preserve">
          <source>This function return a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;theme&lt;/var&gt; (a symbol) is the name of a Custom theme (i.e., a Custom theme which has been loaded into Emacs, whether or not the theme is enabled). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;theme&lt;/var&gt; (심볼)가 사용자 지정 테마 (예 : 테마가 활성화되었는지 여부에 관계없이 Emacs에로드 된 사용자 지정 테마)의 이름 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c409c0bb3de3d3546c83df166d066b8af7a70fd8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;(point-max)&lt;/code&gt; if &lt;var&gt;flag&lt;/var&gt; is greater than 0, &lt;code&gt;(point-min)&lt;/code&gt; otherwise. The argument &lt;var&gt;flag&lt;/var&gt; must be a number.</source>
          <target state="translated">이 함수의 복귀 &lt;code&gt;(point-max)&lt;/code&gt; 경우 &lt;var&gt;flag&lt;/var&gt; 0보다 크고 &lt;code&gt;(point-min)&lt;/code&gt; 그렇지. 인수 &lt;var&gt;flag&lt;/var&gt; 는 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="9cebed10f044e604d94803a3cd15475e8672e179" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; for extensionless file names such as</source>
          <target state="translated">이 함수는 다음 과 같은 확장명이없는 파일 이름에 대해 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="40bba1e24fc40636492c49f264cceea9a4f3441a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; has no parent frame.</source>
          <target state="translated">이 기능 반환 &lt;code&gt;nil&lt;/code&gt; 을 하면 &lt;var&gt;frame&lt;/var&gt; 부모 프레임이 없습니다.</target>
        </trans-unit>
        <trans-unit id="99ff149ecdf8af19c2303c209c6d76399c3aa4fc" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if the current glyph matrix of &lt;var&gt;window&lt;/var&gt; is not up-to-date which usually happens when Emacs is busy, for example, when processing a command. The value should be retrievable though when this function is run from an idle timer with a delay of zero seconds.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 현재 글리프 매트릭스가 최신 이 아닌 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 예를 들어 명령을 처리 할 때 일반적으로 Emacs가 사용 중일 때 발생합니다. 이 함수가 0 초 지연으로 유휴 타이머에서 실행되는 경우 값을 검색 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1809dcdc0fb3a304b3f2e03dc1900347c59bc009" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; is not locked. It returns &lt;code&gt;t&lt;/code&gt; if it is locked by this Emacs process, and it returns the name of the user who has locked it if it is locked by some other job.</source>
          <target state="translated">파일 &lt;var&gt;filename&lt;/var&gt; 이 잠겨 있지 않으면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 그것은 반환 &lt;code&gt;t&lt;/code&gt; 을 이이 이맥스 프로세스에 의해 잠겨있는 경우, 그리고 그것이 다른 작업에 의해 잠겨있는 경우를 잠근 사용자의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="665ca15a961e565a3a250c639458fa0f6bb31cb3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if the final symbol is unbound. It signals a &lt;code&gt;cyclic-function-indirection&lt;/code&gt; error if there is a loop in the chain of symbols.</source>
          <target state="translated">이 함수는 최종 기호가 바인딩 해제 된 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 심볼 체인에 루프가있는 경우 &lt;code&gt;cyclic-function-indirection&lt;/code&gt; 오류를 알립니다 .</target>
        </trans-unit>
        <trans-unit id="b28488841deac0b54e900fc3daf659b42fe221a0" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on decryption error, and signals a Lisp error if the &lt;var&gt;cipher&lt;/var&gt; or &lt;var&gt;key&lt;/var&gt;, &lt;var&gt;iv&lt;/var&gt;, or &lt;var&gt;input&lt;/var&gt; are invalid, or if &lt;var&gt;aead_auth&lt;/var&gt; was specified with an AEAD cipher and was invalid.</source>
          <target state="translated">이 함수는 암호 해독 오류시 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 &lt;var&gt;cipher&lt;/var&gt; 또는 &lt;var&gt;key&lt;/var&gt; , &lt;var&gt;iv&lt;/var&gt; 또는 &lt;var&gt;input&lt;/var&gt; 이 유효하지 않거나 &lt;var&gt;aead_auth&lt;/var&gt; 가 AEAD 암호로 지정되어 유효하지 않은 경우 Lisp 오류를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="47d3cdb39726f9d6aa6f298cbd007b34e3e3e64c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on error, and signals a Lisp error if the &lt;var&gt;cipher&lt;/var&gt; or &lt;var&gt;key&lt;/var&gt;, &lt;var&gt;iv&lt;/var&gt;, or &lt;var&gt;input&lt;/var&gt; are invalid, or if &lt;var&gt;aead_auth&lt;/var&gt; was specified with an AEAD cipher and was invalid.</source>
          <target state="translated">이 함수는 오류시 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 &lt;var&gt;cipher&lt;/var&gt; 또는 &lt;var&gt;key&lt;/var&gt; , &lt;var&gt;iv&lt;/var&gt; 또는 &lt;var&gt;input&lt;/var&gt; 이 유효하지 않거나 &lt;var&gt;aead_auth&lt;/var&gt; 가 AEAD 암호로 지정되어 유효하지 않은 경우 Lisp 오류를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="fa44cde7dbe67e52f23c7bfe35c5f9ff3b7ac2ef" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on error, and signals a Lisp error if the &lt;var&gt;digest-method&lt;/var&gt; or &lt;var&gt;input&lt;/var&gt; are invalid. On success, it returns a list of a binary string (the output) and the IV used.</source>
          <target state="translated">이 함수는 오류시 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 &lt;var&gt;digest-method&lt;/var&gt; 또는 &lt;var&gt;input&lt;/var&gt; 이 유효하지 않은 경우 Lisp 오류를 보냅니다 . 성공하면 이진 문자열 (출력) 및 사용 된 IV 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="15316ea51ac471ed29fd8105ac3beaa247bf0fd6" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on error, and signals a Lisp error if the &lt;var&gt;hash-method&lt;/var&gt; or &lt;var&gt;key&lt;/var&gt; or &lt;var&gt;input&lt;/var&gt; are invalid.</source>
          <target state="translated">이 함수는 오류시 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 &lt;var&gt;hash-method&lt;/var&gt; 이나 &lt;var&gt;key&lt;/var&gt; 또는 &lt;var&gt;input&lt;/var&gt; 이 유효하지 않은 경우 Lisp 오류를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="b433b14d3253551b57b997a36613ee3f67318729" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; can display images. Windowed displays ought in principle to handle images, but some systems lack the support for that. On a display that does not support images, Emacs cannot display a tool bar.</source>
          <target state="translated">이 함수는 디스플레이가 이미지를 &lt;var&gt;display&lt;/var&gt; 할 수있는 경우 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 . 창 디스플레이는 원칙적으로 이미지를 처리해야하지만 일부 시스템은이를 지원하지 않습니다. 이미지를 지원하지 않는 디스플레이에서 Emacs는 도구 모음을 표시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5cd66cc830f711f5a995d2149fd2e73cdbbfd0a4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; has a mouse available, &lt;code&gt;nil&lt;/code&gt; if not.</source>
          <target state="translated">이 함수는 &lt;var&gt;display&lt;/var&gt; 에 마우스를 사용할 수 있으면 &lt;code&gt;t&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="822ab8d4f35dce4f1223b4496bf42e74f81133a7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; is a graphic display capable of displaying several frames and several different fonts at once. This is true for displays that use a window system such as X, and false for text terminals.</source>
          <target state="translated">&lt;var&gt;display&lt;/var&gt; 가 여러 프레임과 여러 다른 글꼴을 한 번에 표시 할 수있는 그래픽 디스플레이 인 경우이 함수는 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 . 이는 X와 같은 윈도우 시스템을 사용하는 디스플레이의 경우 true이고 텍스트 터미널의 경우 false입니다.</target>
        </trans-unit>
        <trans-unit id="28280fad6acf0278727007912a8cbc900939ccad" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; supports selections. Windowed displays normally support selections, but they may also be supported in some other cases.</source>
          <target state="translated">이 기능 반환 &lt;code&gt;t&lt;/code&gt; 경우 &lt;var&gt;display&lt;/var&gt; 지원 선택. 창 디스플레이는 일반적으로 선택을 지원하지만 다른 경우에도 지원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2633435fb5f7354b4ed830c6bf290f880ba8a09" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;feature&lt;/var&gt; has been provided in the current Emacs session (i.e., if &lt;var&gt;feature&lt;/var&gt; is a member of &lt;code&gt;features&lt;/code&gt;.) If &lt;var&gt;subfeature&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the function returns &lt;code&gt;t&lt;/code&gt; only if that subfeature is provided as well (i.e., if &lt;var&gt;subfeature&lt;/var&gt; is a member of the &lt;code&gt;subfeature&lt;/code&gt; property of the &lt;var&gt;feature&lt;/var&gt; symbol.)</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;feature&lt;/var&gt; has been provided in the current Emacs session (i.e., if &lt;var&gt;feature&lt;/var&gt; is a member of &lt;code&gt;features&lt;/code&gt; .) If &lt;var&gt;subfeature&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then the function returns &lt;code&gt;t&lt;/code&gt; only if that subfeature is provided as well (i.e., if &lt;var&gt;subfeature&lt;/var&gt; is a member of the &lt;code&gt;subfeature&lt;/code&gt; property of the &lt;var&gt;feature&lt;/var&gt; symbol.)</target>
        </trans-unit>
        <trans-unit id="bc816ac21773058c432b88c2ae5469cf69da0a4c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;file&lt;/var&gt; is a file in directory &lt;var&gt;dir&lt;/var&gt;, or in a subdirectory of &lt;var&gt;dir&lt;/var&gt;. It also returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;file&lt;/var&gt; and &lt;var&gt;dir&lt;/var&gt; are the same directory. It compares the truenames of the two directories. If &lt;var&gt;dir&lt;/var&gt; does not name an existing directory, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;file&lt;/var&gt; is a file in directory &lt;var&gt;dir&lt;/var&gt; , or in a subdirectory of &lt;var&gt;dir&lt;/var&gt; . It also returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;file&lt;/var&gt; and &lt;var&gt;dir&lt;/var&gt; are the same directory. It compares the truenames of the two directories. If &lt;var&gt;dir&lt;/var&gt; does not name an existing directory, the return value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72e57620a685d2366b4734862d5355458bada47b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; is the name of an existing directory. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not name a directory, or if there is trouble determining whether it is a directory. This function follows symbolic links.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; is the name of an existing directory. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not name a directory, or if there is trouble determining whether it is a directory. This function follows symbolic links.</target>
        </trans-unit>
        <trans-unit id="c503b2d8cbbe11212b8a5ffd4e8cd51af0cce6cb" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are the same object, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are the same object, and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="29dd84ebbc4a3a0a8b148bbc59a6ca1b882e0b46" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; have equal components, and &lt;code&gt;nil&lt;/code&gt; otherwise. Whereas &lt;code&gt;eq&lt;/code&gt; tests if its arguments are the same object, &lt;code&gt;equal&lt;/code&gt; looks inside nonidentical arguments to see if their elements or contents are the same. So, if two objects are &lt;code&gt;eq&lt;/code&gt;, they are &lt;code&gt;equal&lt;/code&gt;, but the converse is not always true.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; have equal components, and &lt;code&gt;nil&lt;/code&gt; otherwise. Whereas &lt;code&gt;eq&lt;/code&gt; tests if its arguments are the same object, &lt;code&gt;equal&lt;/code&gt; looks inside nonidentical arguments to see if their elements or contents are the same. So, if two objects are &lt;code&gt;eq&lt;/code&gt; , they are &lt;code&gt;equal&lt;/code&gt; , but the converse is not always true.</target>
        </trans-unit>
        <trans-unit id="cc5e847e839a679f3d4f90fe19d37cd62365f410" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and returns &lt;code&gt;nil&lt;/code&gt; otherwise. This function is identical to &lt;code&gt;not&lt;/code&gt;, but as a matter of clarity we use &lt;code&gt;null&lt;/code&gt; when &lt;var&gt;object&lt;/var&gt; is considered a list and &lt;code&gt;not&lt;/code&gt; when it is considered a truth value (see &lt;code&gt;not&lt;/code&gt; in &lt;a href=&quot;combining-conditions#Combining-Conditions&quot;&gt;Combining Conditions&lt;/a&gt;).</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , and returns &lt;code&gt;nil&lt;/code&gt; otherwise. This function is identical to &lt;code&gt;not&lt;/code&gt; , but as a matter of clarity we use &lt;code&gt;null&lt;/code&gt; when &lt;var&gt;object&lt;/var&gt; is considered a list and &lt;code&gt;not&lt;/code&gt; when it is considered a truth value (see &lt;code&gt;not&lt;/code&gt; in &lt;a href=&quot;combining-conditions#Combining-Conditions&quot;&gt;Combining Conditions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="7ec8fbb989a0b856bbfa2d2be7387a3514db1600" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a buffer, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a buffer, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="73aa02dbc99c3f8528c963a84377fea719406153" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a built-in function (i.e., a Lisp primitive).</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a built-in function (i.e., a Lisp primitive).</target>
        </trans-unit>
        <trans-unit id="ce560a7f284af2f35d915582cac38e823a4875d8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a byte-code function. For example:</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a byte-code function. For example:</target>
        </trans-unit>
        <trans-unit id="f6069daae8e79c8e066f120dcc78ce6688f87bd3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a category table, otherwise &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a category table, otherwise &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0902644a963263e4aec9ef617529296ec950d18b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a char-table, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a char-table, and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="89b49f06a8258e4bd56f292d69c25e07a719c1a8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a coding system name or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a coding system name or &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b77ff3e8b71dd2d4ac85d9663726c9b0542a6c6b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a command. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a command. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dcd385a104e86c5d28546df66160e31a0acee33" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell or &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell or &lt;code&gt;nil&lt;/code&gt; . Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13b1c130f7fd87af4d081b2256887577505c3bce" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;code&gt;nil&lt;/code&gt; is not a cons cell, although it &lt;em&gt;is&lt;/em&gt; a list.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;code&gt;nil&lt;/code&gt; is not a cons cell, although it &lt;em&gt;is&lt;/em&gt; a list.</target>
        </trans-unit>
        <trans-unit id="1a995a4ea9db50a1cbd8b793611270a9128f2c97" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a keymap, &lt;code&gt;nil&lt;/code&gt; otherwise. More precisely, this function tests for a list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;keymap&lt;/code&gt;, or for a symbol whose function definition satisfies &lt;code&gt;keymapp&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a keymap, &lt;code&gt;nil&lt;/code&gt; otherwise. More precisely, this function tests for a list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;keymap&lt;/code&gt; , or for a symbol whose function definition satisfies &lt;code&gt;keymapp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cda0ec46e06f888a16ef2eae4b98ae0088ffaa7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a list, vector, string, bool-vector, or char-table, &lt;code&gt;nil&lt;/code&gt; otherwise. See also &lt;code&gt;seqp&lt;/code&gt; below.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a list, vector, string, bool-vector, or char-table, &lt;code&gt;nil&lt;/code&gt; otherwise. See also &lt;code&gt;seqp&lt;/code&gt; below.</target>
        </trans-unit>
        <trans-unit id="7fcf7a43584626518b8efbc89e93d30cfd18cd99" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live buffer (a buffer which has not been killed), &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live buffer (a buffer which has not been killed), &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="c586f84ce4101a1518884f4dfb049741c2e68242" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window and &lt;code&gt;nil&lt;/code&gt; otherwise. A live window is one that displays a buffer.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window and &lt;code&gt;nil&lt;/code&gt; otherwise. A live window is one that displays a buffer.</target>
        </trans-unit>
        <trans-unit id="0b74fc844af30bdeddc6086687d1f628a17d57c3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window, or an internal window in a window tree. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;, including for the case where &lt;var&gt;object&lt;/var&gt; is a deleted window.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window, or an internal window in a window tree. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; , including for the case where &lt;var&gt;object&lt;/var&gt; is a deleted window.</target>
        </trans-unit>
        <trans-unit id="cb0cd755cacf6ff2253132374368a65d93ce5468" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a marker, &lt;code&gt;nil&lt;/code&gt; otherwise. Note that integers are not markers, even though many functions will accept either a marker or an integer.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a marker, &lt;code&gt;nil&lt;/code&gt; otherwise. Note that integers are not markers, even though many functions will accept either a marker or an integer.</target>
        </trans-unit>
        <trans-unit id="b787ca7a6a56aa17047588a4876d85936bec4b90" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a number (either integer or floating point) or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a number (either integer or floating point) or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="401038d4fbe39e5d508d5e9b70176d02095f14a6" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a record.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a record.</target>
        </trans-unit>
        <trans-unit id="bc73152b0a09dd2998266c0b97f76970ca2be6d7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or &lt;code&gt;nil&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or &lt;code&gt;nil&lt;/code&gt; . It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="15583d836b088142dd4ebd834c2247ca0f00f730" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or a character (i.e., an integer), &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or a character (i.e., an integer), &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="a77ef16f1143f1a2c3264e3a7ce26c2b88a40a76" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="2f16d760d2d5da8521651cc14f644c4d674ca31a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a symbol, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a symbol, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="431e8cb5738bfdb7266698c8a2100233aac2f515" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a syntax table.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a syntax table.</target>
        </trans-unit>
        <trans-unit id="ac478bd021abd38a2144115bd7ecffd98beca50c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a vector.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a vector.</target>
        </trans-unit>
        <trans-unit id="f04f5608148adca5abddf24ef835551483a9cbfc" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window (whether or not it displays a buffer). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window (whether or not it displays a buffer). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="779dadf34d56f0b9496d5022c4752a217e50c030" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window configuration.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window configuration.</target>
        </trans-unit>
        <trans-unit id="081b43809571303e5a5a468747c81910fa880284" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an array (i.e., a vector, a string, a bool-vector or a char-table).</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an array (i.e., a vector, a string, a bool-vector or a char-table).</target>
        </trans-unit>
        <trans-unit id="f06d729c4b82d89e2a7da72710e5679352be3eac" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an atom, &lt;code&gt;nil&lt;/code&gt; otherwise. All objects except cons cells are atoms. The symbol &lt;code&gt;nil&lt;/code&gt; is an atom and is also a list; it is the only Lisp object that is both.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an atom, &lt;code&gt;nil&lt;/code&gt; otherwise. All objects except cons cells are atoms. The symbol &lt;code&gt;nil&lt;/code&gt; is an atom and is also a list; it is the only Lisp object that is both.</target>
        </trans-unit>
        <trans-unit id="fbddbb6fa8d78e5b0dbef7c6d334f97a6866850b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an integer or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an integer or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="843156dc17aa12dfb5a0991519fb705e2fedb9e3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an overlay.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an overlay.</target>
        </trans-unit>
        <trans-unit id="f43df371eae5a37235fdc8bbb22ac677d4422c2e" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an xwidget, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an xwidget, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="3fe954f1114594787b8e2892b1f70a2009100db3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is any kind of function, i.e., can be passed to &lt;code&gt;funcall&lt;/code&gt;. Note that &lt;code&gt;functionp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; for symbols that are function names, and returns &lt;code&gt;nil&lt;/code&gt; for special forms.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is any kind of function, i.e., can be passed to &lt;code&gt;funcall&lt;/code&gt; . Note that &lt;code&gt;functionp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; for symbols that are function names, and returns &lt;code&gt;nil&lt;/code&gt; for special forms.</target>
        </trans-unit>
        <trans-unit id="a351f2eae58b34dbdbc1d2642122b8b33e47432f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents a condition variable, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents a condition variable, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="3650be4954852e424baa89c9669cf67757afc803" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs mutex, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs mutex, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="7d922c4ccea5062a63df782c842da942108f7090" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs process object, &lt;code&gt;nil&lt;/code&gt; otherwise. The process object can represent a subprocess running a program or a connection of any supported type.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs process object, &lt;code&gt;nil&lt;/code&gt; otherwise. The process object can represent a subprocess running a program or a connection of any supported type.</target>
        </trans-unit>
        <trans-unit id="a1e898020ed668a1abe81070f31ba88b6328125d" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs thread, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs thread, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="2c60da72f0432402711b491b3a764b7642f7652b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;regexp&lt;/var&gt; matches the text immediately before point (i.e., ending at point), and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;regexp&lt;/var&gt; matches the text immediately before point (i.e., ending at point), and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="c792d563c4f703ec7a1a10ae6a9b66b58096da21" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; are equal with respect to collation rules. A collation rule is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt;, but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; are equal with respect to collation rules. A collation rule is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; , but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</target>
        </trans-unit>
        <trans-unit id="5b78f961be3e67c5c75d4f12e817a868b62dec1b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; is less than &lt;var&gt;string2&lt;/var&gt; in collation order. A collation order is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt;, but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; is less than &lt;var&gt;string2&lt;/var&gt; in collation order. A collation order is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; , but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</target>
        </trans-unit>
        <trans-unit id="e21d4ed2921c9ca316a7724ef85fa046c618fde1" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; (a symbol) is not void, and &lt;code&gt;nil&lt;/code&gt; if it is void.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; (a symbol) is not void, and &lt;code&gt;nil&lt;/code&gt; if it is void.</target>
        </trans-unit>
        <trans-unit id="c60e02c922de1bd2c0fec4e03eda4a90e930f190" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is a minibuffer window. &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is a minibuffer window. &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</target>
        </trans-unit>
        <trans-unit id="99baaf08579fe8fc9fe2d66fd22893f30ad8c1b5" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is located at &lt;var&gt;side&lt;/var&gt; of its containing frame. The argument &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. The argument &lt;var&gt;side&lt;/var&gt; can be any of the symbols &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt;. The default value &lt;code&gt;nil&lt;/code&gt; is handled like &lt;code&gt;bottom&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is located at &lt;var&gt;side&lt;/var&gt; of its containing frame. The argument &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. The argument &lt;var&gt;side&lt;/var&gt; can be any of the symbols &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt; . The default value &lt;code&gt;nil&lt;/code&gt; is handled like &lt;code&gt;bottom&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c454ea6d2845a7642da3c0db67514ee9ab561bf" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;year&lt;/var&gt; is a leap year.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;year&lt;/var&gt; is a leap year.</target>
        </trans-unit>
        <trans-unit id="fc2bb29a2f4052f45ebcf3c83edf63b0ace38fd7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if Emacs ought to be able to display &lt;var&gt;char&lt;/var&gt;. More precisely, if the selected frame&amp;rsquo;s fontset has a font to display the character set that &lt;var&gt;char&lt;/var&gt; belongs to.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if Emacs ought to be able to display &lt;var&gt;char&lt;/var&gt; . More precisely, if the selected frame&amp;rsquo;s fontset has a font to display the character set that &lt;var&gt;char&lt;/var&gt; belongs to.</target>
        </trans-unit>
        <trans-unit id="fdc1db49a41cde009745324dc550207dbee92549" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if Transient Mark mode is enabled, the mark is active, and there is a valid region in the buffer. This function is intended to be used by commands that operate on the region, instead of on text near point, when the mark is active.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if Transient Mark mode is enabled, the mark is active, and there is a valid region in the buffer. This function is intended to be used by commands that operate on the region, instead of on text near point, when the mark is active.</target>
        </trans-unit>
        <trans-unit id="11e9e78e21b8ea6901428d9178f177ccd68c450f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; appears to exist. This does not mean you can necessarily read the file, only that you can probably find out its attributes. (On GNU and other POSIX-like systems, this is true if the file exists and you have execute permission on the containing directories, regardless of the permissions of the file itself.)</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; appears to exist. This does not mean you can necessarily read the file, only that you can probably find out its attributes. (On GNU and other POSIX-like systems, this is true if the file exists and you have execute permission on the containing directories, regardless of the permissions of the file itself.)</target>
        </trans-unit>
        <trans-unit id="bcab7730a2179501aed1e97c646ca6633d84c1c1" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can execute it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise. On GNU and other POSIX-like systems, if the file is a directory, execute permission means you can check the existence and attributes of files inside the directory, and open those files if their modes permit.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can execute it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise. On GNU and other POSIX-like systems, if the file is a directory, execute permission means you can check the existence and attributes of files inside the directory, and open those files if their modes permit.</target>
        </trans-unit>
        <trans-unit id="25f1188491843dd0c76898edf6fd5944f73f64b8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can read it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can read it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="e32702f4cdd64bb421481499ee15548a5826078c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if deleting the file &lt;var&gt;filename&lt;/var&gt; and then creating it anew would keep the file&amp;rsquo;s owner unchanged. It also returns &lt;code&gt;t&lt;/code&gt; for nonexistent files.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if deleting the file &lt;var&gt;filename&lt;/var&gt; and then creating it anew would keep the file&amp;rsquo;s owner unchanged. It also returns &lt;code&gt;t&lt;/code&gt; for nonexistent files.</target>
        </trans-unit>
        <trans-unit id="f63c0053d20fb2b4e88e41c1b47a7ff502b3415a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if file &lt;var&gt;filename&lt;/var&gt; is an absolute file name, &lt;code&gt;nil&lt;/code&gt; otherwise. A file name is considered to be absolute if its first component is &amp;lsquo;</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if file &lt;var&gt;filename&lt;/var&gt; is an absolute file name, &lt;code&gt;nil&lt;/code&gt; otherwise. A file name is considered to be absolute if its first component is &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1d23fb6011b52c6cf48afb4339afb397f6f43cd4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if image &lt;var&gt;spec&lt;/var&gt; has a mask bitmap. &lt;var&gt;frame&lt;/var&gt; is the frame on which the image will be displayed. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted means to use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if image &lt;var&gt;spec&lt;/var&gt; has a mask bitmap. &lt;var&gt;frame&lt;/var&gt; is the frame on which the image will be displayed. &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; or omitted means to use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c06074c891fff3054db50692cab0f6a1e3cde8bc" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if it actually killed the buffer. It returns &lt;code&gt;nil&lt;/code&gt; if the user refuses to confirm or if &lt;var&gt;buffer-or-name&lt;/var&gt; was already dead.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if it actually killed the buffer. It returns &lt;code&gt;nil&lt;/code&gt; if the user refuses to confirm or if &lt;var&gt;buffer-or-name&lt;/var&gt; was already dead.</target>
        </trans-unit>
        <trans-unit id="0cde105cf135c2a32f2e4109cb7fada52bdc9cf4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if its argument is a &lt;code&gt;user-ptr&lt;/code&gt; object.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if its argument is a &lt;code&gt;user-ptr&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="15e648bf23255ae6046ad734474fb9914e182230" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of a line. See &lt;a href=&quot;text-lines#Text-Lines&quot;&gt;Text Lines&lt;/a&gt;. The beginning of the buffer (or of its accessible portion) always counts as the beginning of a line.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of a line. See &lt;a href=&quot;text-lines#Text-Lines&quot;&gt;Text Lines&lt;/a&gt;. The beginning of the buffer (or of its accessible portion) always counts as the beginning of a line.</target>
        </trans-unit>
        <trans-unit id="5b3aa23024e03f6812a287fd25c9dabcd2d1bc0a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of the buffer. If narrowing is in effect, this means the beginning of the accessible portion of the text. See also &lt;code&gt;point-min&lt;/code&gt; in &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of the buffer. If narrowing is in effect, this means the beginning of the accessible portion of the text. See also &lt;code&gt;point-min&lt;/code&gt; in &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b6faeb80842f9c937a6b67220abb7913cf443fd4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of a line. The end of the buffer (or of its accessible portion) is always considered the end of a line.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of a line. The end of the buffer (or of its accessible portion) is always considered the end of a line.</target>
        </trans-unit>
        <trans-unit id="7d64fbc72ff09a83e94695c91d1fc779274eab32" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of the buffer. If narrowing is in effect, this means the end of accessible portion of the text. See also &lt;code&gt;point-max&lt;/code&gt; in See &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of the buffer. If narrowing is in effect, this means the end of accessible portion of the text. See also &lt;code&gt;point-max&lt;/code&gt; in See &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="12583b13ba52c65dc576014c70865ec1977fe794" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if popup menus are supported on &lt;var&gt;display&lt;/var&gt;, &lt;code&gt;nil&lt;/code&gt; if not. Support for popup menus requires that the mouse be available, since the menu is popped up by clicking the mouse on some portion of the Emacs display.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if popup menus are supported on &lt;var&gt;display&lt;/var&gt; , &lt;code&gt;nil&lt;/code&gt; if not. Support for popup menus requires that the mouse be available, since the menu is popped up by clicking the mouse on some portion of the Emacs display.</target>
        </trans-unit>
        <trans-unit id="3c45676237a70c9373298e1a10b3ba0f2a8be008" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the arguments represent the same character, &lt;code&gt;nil&lt;/code&gt; otherwise. This function ignores differences in case if &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the arguments represent the same character, &lt;code&gt;nil&lt;/code&gt; otherwise. This function ignores differences in case if &lt;code&gt;case-fold-search&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3d4bd28ebc0370c18d8cb25a3c37311ec49f27e" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the buffer &lt;var&gt;buffer&lt;/var&gt; has been modified since it was last read in from a file or saved, or &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;buffer&lt;/var&gt; is not supplied, the current buffer is tested.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the buffer &lt;var&gt;buffer&lt;/var&gt; has been modified since it was last read in from a file or saved, or &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;buffer&lt;/var&gt; is not supplied, the current buffer is tested.</target>
        </trans-unit>
        <trans-unit id="74d9707e21509533443a272de40defda55ee674f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the characters of the two strings match exactly. Symbols are also allowed as arguments, in which case the symbol names are used. Case is always significant, regardless of &lt;code&gt;case-fold-search&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the characters of the two strings match exactly. Symbols are also allowed as arguments, in which case the symbol names are used. Case is always significant, regardless of &lt;code&gt;case-fold-search&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f1ee55be1fdb351c75f12ad6287f27d6ac9f409" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the current buffer has been auto-saved since the last time it was read in or saved.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the current buffer has been auto-saved since the last time it was read in or saved.</target>
        </trans-unit>
        <trans-unit id="c4545c3355cd22f95c272a21f47b27c6a1ec4790" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename1&lt;/var&gt; is newer than file &lt;var&gt;filename2&lt;/var&gt;. If &lt;var&gt;filename1&lt;/var&gt; does not exist, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename1&lt;/var&gt; does exist, but &lt;var&gt;filename2&lt;/var&gt; does not, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename1&lt;/var&gt; is newer than file &lt;var&gt;filename2&lt;/var&gt; . If &lt;var&gt;filename1&lt;/var&gt; does not exist, it returns &lt;code&gt;nil&lt;/code&gt; . If &lt;var&gt;filename1&lt;/var&gt; does exist, but &lt;var&gt;filename2&lt;/var&gt; does not, it returns &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a207a78ef7c0687705477b67a8a7015f82b3e6f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; can be written or created by you, and &lt;code&gt;nil&lt;/code&gt; otherwise. A file is writable if the file exists and you can write it. It is creatable if it does not exist, but its parent directory does exist and you can write in that directory.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; can be written or created by you, and &lt;code&gt;nil&lt;/code&gt; otherwise. A file is writable if the file exists and you can write it. It is creatable if it does not exist, but its parent directory does exist and you can write in that directory.</target>
        </trans-unit>
        <trans-unit id="8d1b88fbe2915d03fc30f3b1f01a8a5097a44bf2" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; exists and is a regular file (not a directory, named pipe, terminal, or other I/O device). It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not exist or is not a regular file, or if there is trouble determining whether it is a regular file. This function follows symbolic links.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; exists and is a regular file (not a directory, named pipe, terminal, or other I/O device). It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not exist or is not a regular file, or if there is trouble determining whether it is a regular file. This function follows symbolic links.</target>
        </trans-unit>
        <trans-unit id="712e788674a648fb78b0241c5b698f061ea4687e" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the files &lt;var&gt;file1&lt;/var&gt; and &lt;var&gt;file2&lt;/var&gt; name the same file. This is similar to comparing their truenames, except that remote file names are also handled in an appropriate manner. If &lt;var&gt;file1&lt;/var&gt; or &lt;var&gt;file2&lt;/var&gt; does not exist, the return value is unspecified.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the files &lt;var&gt;file1&lt;/var&gt; and &lt;var&gt;file2&lt;/var&gt; name the same file. This is similar to comparing their truenames, except that remote file names are also handled in an appropriate manner. If &lt;var&gt;file1&lt;/var&gt; or &lt;var&gt;file2&lt;/var&gt; does not exist, the return value is unspecified.</target>
        </trans-unit>
        <trans-unit id="71e95d3faec286a4aec6799a53c5a044b733f0fa" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the screen can display shades of gray. (All color displays can do this.)</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the screen can display shades of gray. (All color displays can do this.)</target>
        </trans-unit>
        <trans-unit id="01c6aa3bb89086725475a995fdac99da4c048043" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the screen is a color screen. It used to be called &lt;code&gt;x-display-color-p&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the screen is a color screen. It used to be called &lt;code&gt;x-display-color-p&lt;/code&gt; , and that name is still supported as an alias.</target>
        </trans-unit>
        <trans-unit id="a658ecdd2a7da22021a035ac7c7ec8f6d5212d55" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the selected window is the only live window, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the selected window is the only live window, and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="e6976e0d8b9034067d4569c6576de640b8f71941" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the symbol has an object in its function cell, &lt;code&gt;nil&lt;/code&gt; otherwise. It does not check that the object is a legitimate function.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the symbol has an object in its function cell, &lt;code&gt;nil&lt;/code&gt; otherwise. It does not check that the object is a legitimate function.</target>
        </trans-unit>
        <trans-unit id="6ff47bbc552a2354c103f82af312645fc92f19e9" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if you have permission to open existing files in the directory whose name as a file is &lt;var&gt;dirname&lt;/var&gt;; otherwise (e.g., if there is no such directory), it returns &lt;code&gt;nil&lt;/code&gt;. The value of &lt;var&gt;dirname&lt;/var&gt; may be either a directory name (such as</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if you have permission to open existing files in the directory whose name as a file is &lt;var&gt;dirname&lt;/var&gt; ; otherwise (e.g., if there is no such directory), it returns &lt;code&gt;nil&lt;/code&gt; . The value of &lt;var&gt;dirname&lt;/var&gt; may be either a directory name (such as</target>
        </trans-unit>
        <trans-unit id="64b8b57d01ee2bb3733b81b9844e5d61e9ee8820" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; when the calling function was called using &lt;code&gt;call-interactively&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; when the calling function was called using &lt;code&gt;call-interactively&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57cd5bee4d4dda7796b1d48647a6ab4a185a6364" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the Lisp objects represented by &lt;var&gt;val1&lt;/var&gt; and &lt;var&gt;val2&lt;/var&gt; are identical, &lt;code&gt;false&lt;/code&gt; otherwise. This is the same as the Lisp function &lt;code&gt;eq&lt;/code&gt; (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;), but avoids the need to intern the objects represented by the arguments.</source>
          <target state="translated">This function returns &lt;code&gt;true&lt;/code&gt; if the Lisp objects represented by &lt;var&gt;val1&lt;/var&gt; and &lt;var&gt;val2&lt;/var&gt; are identical, &lt;code&gt;false&lt;/code&gt; otherwise. This is the same as the Lisp function &lt;code&gt;eq&lt;/code&gt; (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;), but avoids the need to intern the objects represented by the arguments.</target>
        </trans-unit>
        <trans-unit id="762e475f3a128f1fe74e97d90424eb119aa13c40" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the user wants to quit. In that case, we recommend that your module function aborts any on-going processing and returns as soon as possible. In most cases, use &lt;code&gt;process_input&lt;/code&gt; instead.</source>
          <target state="translated">This function returns &lt;code&gt;true&lt;/code&gt; if the user wants to quit. In that case, we recommend that your module function aborts any on-going processing and returns as soon as possible. In most cases, use &lt;code&gt;process_input&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="cc6f7fb13b4ba82ebc28a77c8933242881aeadae" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;argument&lt;/var&gt; and has no side effects.</source>
          <target state="translated">This function returns &lt;var&gt;argument&lt;/var&gt; and has no side effects.</target>
        </trans-unit>
        <trans-unit id="99c9d85041a2440b484a8c63fe44caa574d84781" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;base-variable&lt;/var&gt;.</source>
          <target state="translated">This function returns &lt;var&gt;base-variable&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2237577b51368bd5ad978ca0df9800b0c989e318" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;buffer&lt;/var&gt;&amp;rsquo;s character-change modification-count. Changes to text properties leave this counter unchanged; however, each time text is inserted or removed from the buffer, the counter is reset to the value that would be returned by &lt;code&gt;buffer-modified-tick&lt;/code&gt;. By comparing the values returned by two &lt;code&gt;buffer-chars-modified-tick&lt;/code&gt; calls, you can tell whether a character change occurred in that buffer in between the calls. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</source>
          <target state="translated">This function returns &lt;var&gt;buffer&lt;/var&gt; &amp;rsquo;s character-change modification-count. Changes to text properties leave this counter unchanged; however, each time text is inserted or removed from the buffer, the counter is reset to the value that would be returned by &lt;code&gt;buffer-modified-tick&lt;/code&gt; . By comparing the values returned by two &lt;code&gt;buffer-chars-modified-tick&lt;/code&gt; calls, you can tell whether a character change occurred in that buffer in between the calls. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</target>
        </trans-unit>
        <trans-unit id="75378fc9cd0d8e018f3fe9abab8bf9ac22ea2e51" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;buffer&lt;/var&gt;&amp;rsquo;s modification-count. This is a counter that increments every time the buffer is modified. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</source>
          <target state="translated">This function returns &lt;var&gt;buffer&lt;/var&gt; &amp;rsquo;s modification-count. This is a counter that increments every time the buffer is modified. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</target>
        </trans-unit>
        <trans-unit id="98a2cc8513983ff886a63cee32466d4e22820dab" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">This function returns &lt;var&gt;data&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ca31e866ad6325924c745fa1e1668467d2f168d3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;delta&lt;/var&gt; if the size of &lt;var&gt;window&lt;/var&gt; can be changed vertically by &lt;var&gt;delta&lt;/var&gt; lines. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it instead returns &lt;var&gt;delta&lt;/var&gt; if &lt;var&gt;window&lt;/var&gt; can be resized horizontally by &lt;var&gt;delta&lt;/var&gt; columns. It does not actually change the window size.</source>
          <target state="translated">This function returns &lt;var&gt;delta&lt;/var&gt; if the size of &lt;var&gt;window&lt;/var&gt; can be changed vertically by &lt;var&gt;delta&lt;/var&gt; lines. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it instead returns &lt;var&gt;delta&lt;/var&gt; if &lt;var&gt;window&lt;/var&gt; can be resized horizontally by &lt;var&gt;delta&lt;/var&gt; columns. It does not actually change the window size.</target>
        </trans-unit>
        <trans-unit id="c80c7cb0aead050d36995ca603ec0cb7d4930671" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;filename&lt;/var&gt; minus its extension, if any. The version/backup part, if present, is only removed if the file has an extension. For example,</source>
          <target state="translated">This function returns &lt;var&gt;filename&lt;/var&gt; minus its extension, if any. The version/backup part, if present, is only removed if the file has an extension. For example,</target>
        </trans-unit>
        <trans-unit id="74b20fcbe72c73a481ac3619ea66bc8762e036a9" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;filename&lt;/var&gt; with any file version numbers, backup version numbers, or trailing tildes discarded.</source>
          <target state="translated">This function returns &lt;var&gt;filename&lt;/var&gt; with any file version numbers, backup version numbers, or trailing tildes discarded.</target>
        </trans-unit>
        <trans-unit id="119cb3248ce758f332f9f99319f0bab6a767c39a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;filename&lt;/var&gt;&amp;rsquo;s final extension, if any, after applying &lt;code&gt;file-name-sans-versions&lt;/code&gt; to remove any version/backup part. The extension, in a file name, is the part that follows the last &amp;lsquo;</source>
          <target state="translated">This function returns &lt;var&gt;filename&lt;/var&gt; &amp;rsquo;s final extension, if any, after applying &lt;code&gt;file-name-sans-versions&lt;/code&gt; to remove any version/backup part. The extension, in a file name, is the part that follows the last &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="550e3f909a903b8c7b1bf86f20b28a60976a00f9" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;frame&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; has been deleted.</source>
          <target state="translated">This function returns &lt;var&gt;frame&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; has been deleted.</target>
        </trans-unit>
        <trans-unit id="741d4855dfbe25fcfd0f79e5303cc6f6a97bd05c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;number-or-marker&lt;/var&gt; minus 1.</source>
          <target state="translated">This function returns &lt;var&gt;number-or-marker&lt;/var&gt; minus 1.</target>
        </trans-unit>
        <trans-unit id="ea652122a239d4955c6f57210504ade0dcac80f4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;number-or-marker&lt;/var&gt; plus 1. For example,</source>
          <target state="translated">This function returns &lt;var&gt;number-or-marker&lt;/var&gt; plus 1. For example,</target>
        </trans-unit>
        <trans-unit id="d13cffe36a180c9be2d83357832b9b2f67b2cb55" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s default value. This is the value that is seen in buffers and frames that do not have their own values for this variable. If &lt;var&gt;symbol&lt;/var&gt; is not buffer-local, this is equivalent to &lt;code&gt;symbol-value&lt;/code&gt; (see &lt;a href=&quot;accessing-variables#Accessing-Variables&quot;&gt;Accessing Variables&lt;/a&gt;).</source>
          <target state="translated">This function returns &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s default value. This is the value that is seen in buffers and frames that do not have their own values for this variable. If &lt;var&gt;symbol&lt;/var&gt; is not buffer-local, this is equivalent to &lt;code&gt;symbol-value&lt;/code&gt; (see &lt;a href=&quot;accessing-variables#Accessing-Variables&quot;&gt;Accessing Variables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="69df0a715ad1efc826d30e24515c02c685c000d1" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if there is none. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">This function returns &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if there is none. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</target>
        </trans-unit>
        <trans-unit id="959021d141cb503d8fd0190dde181298324421c3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s value for &lt;var&gt;parameter&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window. If &lt;var&gt;window&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s value for &lt;var&gt;parameter&lt;/var&gt; . The default for &lt;var&gt;window&lt;/var&gt; is the selected window. If &lt;var&gt;window&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt; , this function returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="736469f13c5e8aa3db112442ae872e3e19668a60" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;x&lt;/var&gt; raised to power &lt;var&gt;y&lt;/var&gt;. If both arguments are integers and &lt;var&gt;y&lt;/var&gt; is nonnegative, the result is an integer; in this case, overflow signals an error, so watch out. If &lt;var&gt;x&lt;/var&gt; is a finite negative number and &lt;var&gt;y&lt;/var&gt; is a finite non-integer, &lt;code&gt;expt&lt;/code&gt; returns a NaN.</source>
          <target state="translated">This function returns &lt;var&gt;x&lt;/var&gt; raised to power &lt;var&gt;y&lt;/var&gt; . If both arguments are integers and &lt;var&gt;y&lt;/var&gt; is nonnegative, the result is an integer; in this case, overflow signals an error, so watch out. If &lt;var&gt;x&lt;/var&gt; is a finite negative number and &lt;var&gt;y&lt;/var&gt; is a finite non-integer, &lt;code&gt;expt&lt;/code&gt; returns a NaN.</target>
        </trans-unit>
        <trans-unit id="af6fa282c5ba633d5f8047ef4b86d3477e0f01c8" translate="yes" xml:space="preserve">
          <source>This function returns a &amp;ldquo;flattened&amp;rdquo; copy of &lt;var&gt;tree&lt;/var&gt;, that is, a list containing all the non-&lt;code&gt;nil&lt;/code&gt; terminal nodes, or leaves, of the tree of cons cells rooted at &lt;var&gt;tree&lt;/var&gt;. Leaves in the returned list are in the same order as in &lt;var&gt;tree&lt;/var&gt;.</source>
          <target state="translated">This function returns a &amp;ldquo;flattened&amp;rdquo; copy of &lt;var&gt;tree&lt;/var&gt; , that is, a list containing all the non- &lt;code&gt;nil&lt;/code&gt; terminal nodes, or leaves, of the tree of cons cells rooted at &lt;var&gt;tree&lt;/var&gt; . Leaves in the returned list are in the same order as in &lt;var&gt;tree&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b135cad344b381010a82bf119fc9ffa80e15ed72" translate="yes" xml:space="preserve">
          <source>This function returns a buffer named &lt;var&gt;buffer-or-name&lt;/var&gt;. The buffer returned does not become the current buffer&amp;mdash;this function does not change which buffer is current.</source>
          <target state="translated">This function returns a buffer named &lt;var&gt;buffer-or-name&lt;/var&gt; . The buffer returned does not become the current buffer&amp;mdash;this function does not change which buffer is current.</target>
        </trans-unit>
        <trans-unit id="431b2a16b1fb1ce25728058391eb8bb801eb198a" translate="yes" xml:space="preserve">
          <source>This function returns a byte array packed according to &lt;var&gt;spec&lt;/var&gt; from the data in the alist &lt;var&gt;struct&lt;/var&gt;. It normally creates and fills a new byte array starting at the beginning. However, if &lt;var&gt;bindat-raw&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a pre-allocated unibyte string or vector to pack into. If &lt;var&gt;bindat-idx&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the starting offset for packing into &lt;code&gt;bindat-raw&lt;/code&gt;.</source>
          <target state="translated">This function returns a byte array packed according to &lt;var&gt;spec&lt;/var&gt; from the data in the alist &lt;var&gt;struct&lt;/var&gt; . It normally creates and fills a new byte array starting at the beginning. However, if &lt;var&gt;bindat-raw&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it specifies a pre-allocated unibyte string or vector to pack into. If &lt;var&gt;bindat-idx&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it specifies the starting offset for packing into &lt;code&gt;bindat-raw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58b4506fef4cff7a16e2f3e039b83098aa6623d2" translate="yes" xml:space="preserve">
          <source>This function returns a category name (a character) which is not currently defined in &lt;var&gt;table&lt;/var&gt;. If all possible categories are in use in &lt;var&gt;table&lt;/var&gt;, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns a category name (a character) which is not currently defined in &lt;var&gt;table&lt;/var&gt; . If all possible categories are in use in &lt;var&gt;table&lt;/var&gt; , it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e4dfe8681cd637bc5c711d18de3404bf0ddd5ba" translate="yes" xml:space="preserve">
          <source>This function returns a coding system which is like &lt;var&gt;coding-system&lt;/var&gt; except for its eol conversion, which is specified by &lt;code&gt;eol-type&lt;/code&gt;. &lt;var&gt;eol-type&lt;/var&gt; should be &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;dos&lt;/code&gt;, &lt;code&gt;mac&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt;. If it is &lt;code&gt;nil&lt;/code&gt;, the returned coding system determines the end-of-line conversion from the data.</source>
          <target state="translated">This function returns a coding system which is like &lt;var&gt;coding-system&lt;/var&gt; except for its eol conversion, which is specified by &lt;code&gt;eol-type&lt;/code&gt; . &lt;var&gt;eol-type&lt;/var&gt; should be &lt;code&gt;unix&lt;/code&gt; , &lt;code&gt;dos&lt;/code&gt; , &lt;code&gt;mac&lt;/code&gt; , or &lt;code&gt;nil&lt;/code&gt; . If it is &lt;code&gt;nil&lt;/code&gt; , the returned coding system determines the end-of-line conversion from the data.</target>
        </trans-unit>
        <trans-unit id="d573dd395702655f02e68bda06d9e0752cf44060" translate="yes" xml:space="preserve">
          <source>This function returns a coding system which uses the end-of-line conversion of &lt;var&gt;eol-coding&lt;/var&gt;, and the text conversion of &lt;var&gt;text-coding&lt;/var&gt;. If &lt;var&gt;text-coding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it returns &lt;code&gt;undecided&lt;/code&gt;, or one of its variants according to &lt;var&gt;eol-coding&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;eol-coding&lt;/var&gt; 의 줄 끝 변환과 &lt;var&gt;text-coding&lt;/var&gt; 의 텍스트 변환 을 사용하는 코딩 시스템을 반환합니다 . 경우 &lt;var&gt;text-coding&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , 그것은 반환 &lt;code&gt;undecided&lt;/code&gt; , 또는에 따라 그 변종 중 하나 &lt;var&gt;eol-coding&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="bcfe4de043ce6f1d186d53048811952d3006b8f6" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell (&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;) of the coordinates of the mouse cursor position in pixels, relative to a position (0, 0) of the selected frame&amp;rsquo;s display.</source>
          <target state="translated">이 함수는 선택한 프레임 디스플레이의 위치 (0, 0)를 기준으로 마우스 커서 위치 좌표의 반대 셀 ( &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt; )을 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2aa732f27f3acd1750c1f65bb88cb4bae3b0eabf" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell &lt;code&gt;(&lt;var&gt;col&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&amp;nbsp;&lt;var&gt;row&lt;/var&gt;)&lt;/code&gt;, containing the estimated column and row corresponding to buffer position described by &lt;var&gt;position&lt;/var&gt;. The return value is given in units of the frame&amp;rsquo;s default character width and default line height (including spacing), as computed from the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; values corresponding to &lt;var&gt;position&lt;/var&gt;. (So, if the actual characters have non-default sizes, the actual row and column may differ from these computed values.)</source>
          <target state="translated">이 함수는 반대 셀 반환 &lt;code&gt;(&lt;var&gt;col&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&amp;nbsp;&lt;var&gt;row&lt;/var&gt;)&lt;/code&gt; 에 의해 기술 된 버퍼 위치에 대응하는 예상 열과 행을 포함하는 &lt;var&gt;position&lt;/var&gt; . 반환 값은 &lt;var&gt;position&lt;/var&gt; 에 해당하는 &lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 값 에서 계산 된 프레임의 기본 문자 너비 및 기본 줄 높이 (간격 포함) 단위로 제공됩니다 . (따라서 실제 문자의 크기가 기본값이 아닌 경우 실제 행과 열은 이러한 계산 된 값과 다를 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="11b8f13ac2d9f1405c4d6120e705843077c8687e" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell &lt;code&gt;(&lt;var&gt;decode&lt;/var&gt; . &lt;var&gt;encode&lt;/var&gt;)&lt;/code&gt;, describing the coding systems in use for decoding output from, and encoding input to, &lt;var&gt;process&lt;/var&gt; (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 에서 출력을 디코딩하고 프로세스에 입력을 인코딩하는 데 사용되는 코딩 시스템을 설명 하는 cons 셀 &lt;code&gt;(&lt;var&gt;decode&lt;/var&gt; . &lt;var&gt;encode&lt;/var&gt;)&lt;/code&gt; 반환합니다 ( &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;코딩 시스템&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4f89f67ab404758aff0602adfe80b04225382557" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell &lt;code&gt;(&lt;var&gt;s&lt;/var&gt; . &lt;var&gt;e&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;s&lt;/var&gt; and &lt;var&gt;e&lt;/var&gt; are respectively the significand and exponent of the floating-point number &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">이 함수는 cons 셀 &lt;code&gt;(&lt;var&gt;s&lt;/var&gt; . &lt;var&gt;e&lt;/var&gt;)&lt;/code&gt; 반환합니다 . 여기서 &lt;var&gt;s&lt;/var&gt; 및 &lt;var&gt;e&lt;/var&gt; 는 각각 부동 소수점 숫자 &lt;var&gt;x&lt;/var&gt; 의 유효 및 지수입니다 .</target>
        </trans-unit>
        <trans-unit id="79d5a813e21b18a2854f110bb5aecb371fe0f951" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;abbrev-table&lt;/var&gt;&amp;mdash;a new abbrev table containing the same abbrev definitions. It does &lt;em&gt;not&lt;/em&gt; copy any property lists; only the names, values, and functions.</source>
          <target state="translated">이 함수는 동일한 abbrev 정의를 포함하는 새로운 abbrev 테이블 인 &lt;var&gt;abbrev-table&lt;/var&gt; 의 복사본을 반환합니다 . 속성 목록은 복사 하지 &lt;em&gt;않습니다&lt;/em&gt; . 이름, 값 및 기능 만.</target>
        </trans-unit>
        <trans-unit id="5fec4285fa060dfefcd6fb7e0b5ccfdc231f49cd" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;keymap&lt;/var&gt;. This is almost never needed. If you want a keymap that&amp;rsquo;s like another yet with a few changes, you should use map inheritance rather than copying. I.e., something like:</source>
          <target state="translated">이 함수는 &lt;var&gt;keymap&lt;/var&gt; 의 복사본을 반환합니다 . 이것은 거의 필요하지 않습니다. 다른 것과 비슷하지만 몇 가지 변경 사항이있는 키맵을 원한다면 복사보다는 맵 상속을 사용해야합니다. 즉, 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="16f65ca1330e50cfcf84ed5032fb2ff78a4866d7" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;list&lt;/var&gt;, with all elements removed which are &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt;. The letter &amp;lsquo;</source>
          <target state="translated">이 기능의 복사본을 반환 &lt;var&gt;list&lt;/var&gt; 입니다 제거 모든 요소와, &lt;code&gt;eq&lt;/code&gt; 에 &lt;var&gt;object&lt;/var&gt; . 그 편지 '</target>
        </trans-unit>
        <trans-unit id="8db68d319bed54d08cb770b979cf5f5e7281c74c" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;overlay&lt;/var&gt;. The copy has the same endpoints and properties as &lt;var&gt;overlay&lt;/var&gt;. However, the marker insertion type for the start of the overlay and for the end of the overlay are set to their default values (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;overlay&lt;/var&gt; 사본을 반환합니다 . 사본에는 &lt;var&gt;overlay&lt;/var&gt; 와 동일한 끝점 및 속성이 있습니다 . 그러나 오버레이 시작과 오버레이 끝에 대한 &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;마커 삽입 유형&lt;/a&gt; 은 기본값으로 설정됩니다 ( 마커 삽입 유형 참조 ).</target>
        </trans-unit>
        <trans-unit id="1236e898e148224098bb84bde5b8af2189364ae2" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;seqr&lt;/var&gt;, which should be either a sequence or a record. The copy is the same type of object as the original, and it has the same elements in the same order. However, if &lt;var&gt;seqr&lt;/var&gt; is empty, like a string or a vector of zero length, the value returned by this function might not be a copy, but an empty object of the same type and identical to &lt;var&gt;seqr&lt;/var&gt;.</source>
          <target state="translated">이 함수는 시퀀스 또는 레코드 여야하는 &lt;var&gt;seqr&lt;/var&gt; 의 복사본을 반환합니다 . 사본은 원본과 동일한 유형의 객체이며 동일한 순서로 동일한 요소가 있습니다. 그러나 문자열이나 길이가 0 인 벡터처럼 &lt;var&gt;seqr&lt;/var&gt; 이 비어있는 경우이 함수에서 반환하는 값은 복사본이 아니라 &lt;var&gt;seqr&lt;/var&gt; 과 동일한 유형의 빈 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2136d5ce06c25f4f15c70492397af72367f6a56e" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;sequence&lt;/var&gt; that is sorted according to &lt;var&gt;function&lt;/var&gt;, a function of two arguments that returns non-&lt;code&gt;nil&lt;/code&gt; if the first argument should sort before the second.</source>
          <target state="translated">이 함수는 첫 번째 인수가 두 번째 인수보다 먼저 정렬되어야하는 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 두 인수를 반환하는 함수 인 &lt;var&gt;function&lt;/var&gt; 에 따라 정렬 된 &lt;var&gt;sequence&lt;/var&gt; 의 복사본 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a4a114e8397d0238ddb6836c366c6acc8a4595f9" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;string&lt;/var&gt; with the text properties &lt;var&gt;properties&lt;/var&gt; added. These properties apply to all the characters in the string that is returned. Here is an example that constructs a string with a &lt;code&gt;face&lt;/code&gt; property and a &lt;code&gt;mouse-face&lt;/code&gt; property:</source>
          <target state="translated">이 함수는 텍스트 속성 &lt;var&gt;properties&lt;/var&gt; 추가 된 &lt;var&gt;string&lt;/var&gt; 의 복사본을 반환합니다 . 이러한 속성은 반환되는 문자열의 모든 문자에 적용됩니다. 다음은 &lt;code&gt;face&lt;/code&gt; 속성과 &lt;code&gt;mouse-face&lt;/code&gt; 속성이 있는 문자열을 생성하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="7ccb64ba9a1addad7fa6c2f5b9da8617726cb9ce" translate="yes" xml:space="preserve">
          <source>This function returns a copy of the tree &lt;var&gt;tree&lt;/var&gt;. If &lt;var&gt;tree&lt;/var&gt; is a cons cell, this makes a new cons cell with the same &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt;, then recursively copies the &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt; in the same way.</source>
          <target state="translated">이 함수는 트리 &lt;var&gt;tree&lt;/var&gt; 의 복사본을 반환합니다 . 경우 &lt;var&gt;tree&lt;/var&gt; 단점 세포가이 같은으로 새 단점 세포하게 &lt;small&gt;CAR&lt;/small&gt; 과 &lt;small&gt;CDR&lt;/small&gt; , 다음 재귀 적으로 복사 &lt;small&gt;CAR&lt;/small&gt; 과 &lt;small&gt;CDR&lt;/small&gt; 같은 방법으로합니다.</target>
        </trans-unit>
        <trans-unit id="0e2eaa312782de2b637dd4127d25549cd80078a3" translate="yes" xml:space="preserve">
          <source>This function returns a description of the position of the mouse. The value looks like &lt;code&gt;(&lt;var&gt;frame&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are integers giving the (possibly rounded) position in multiples of the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">이 함수는 마우스 위치에 대한 설명을 반환합니다. 같은 값의 모습 &lt;code&gt;(&lt;var&gt;frame&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; , &lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 는 기본 문자 크기의 배수에 (아마도 둥근) 위치를 제공하는 정수 &lt;var&gt;frame&lt;/var&gt; (참조 &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;프레임 폰트&lt;/a&gt; 의 원래 위치에 대해) &lt;var&gt;frame&lt;/var&gt; (참조 &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;프레임 기하학&lt;/a&gt; ) .</target>
        </trans-unit>
        <trans-unit id="acabdfd3d6ffd701c6ff36862a3b8cbb0928e77f" translate="yes" xml:space="preserve">
          <source>This function returns a file name based on &lt;var&gt;filename&lt;/var&gt;, which fits the conventions of the current operating system.</source>
          <target state="translated">이 함수는 현재 운영 체제의 규칙에 맞는 &lt;var&gt;filename&lt;/var&gt; 을 기반으로 파일 이름을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a1d9182ce690da3397a57ba7f07d11938c638347" translate="yes" xml:space="preserve">
          <source>This function returns a font entity that best matches the font spec &lt;var&gt;font-spec&lt;/var&gt; on frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">이 함수는 frame &lt;var&gt;frame&lt;/var&gt; 의 글꼴 사양 &lt;var&gt;font-spec&lt;/var&gt; 과 가장 일치하는 글꼴 엔티티를 반환합니다 . 경우 &lt;var&gt;frame&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 선택된 프레임, 기본값.</target>
        </trans-unit>
        <trans-unit id="2c04a76233944f70946356e358b76a4b4d174bb5" translate="yes" xml:space="preserve">
          <source>This function returns a frame configuration list that describes the current arrangement of frames and their contents.</source>
          <target state="translated">이 함수는 프레임의 현재 배열과 그 내용을 설명하는 프레임 구성 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="62d769ddeda0a7939575082389b2f6e82b28283f" translate="yes" xml:space="preserve">
          <source>This function returns a global reference for &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;value&lt;/var&gt; 에 대한 전역 참조를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c8f369df9e22940959012d0f4ecdee834f067ef9" translate="yes" xml:space="preserve">
          <source>This function returns a glyph code representing char &lt;var&gt;char&lt;/var&gt; with face &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the glyph uses the default face; in that case, the glyph code is an integer. If &lt;var&gt;face&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the glyph code is not necessarily an integer object.</source>
          <target state="translated">이 함수는 face &lt;var&gt;face&lt;/var&gt; 와 함께 char &lt;var&gt;char&lt;/var&gt; 을 나타내는 글리프 코드를 반환합니다 . 경우 &lt;var&gt;face&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 글리프 기본면을 사용한다; 이 경우 글리프 코드는 정수입니다. 경우 &lt;var&gt;face&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; , 글리프 코드는 반드시 정수 개체가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d7c495e02da214321ea81b78a2fec12682331a6b" translate="yes" xml:space="preserve">
          <source>This function returns a hash code for Lisp object &lt;var&gt;obj&lt;/var&gt; suitable for &lt;code&gt;eql&lt;/code&gt; comparison. I.e. it reflects identity of &lt;var&gt;obj&lt;/var&gt; except for the case where the object is a bignum or a float number, in which case a hash code is generated for the value.</source>
          <target state="translated">이 함수는 &lt;code&gt;eql&lt;/code&gt; 비교에 적합한 Lisp 객체 &lt;var&gt;obj&lt;/var&gt; 에 대한 해시 코드를 반환합니다 . 즉 , 객체가 bignum 또는 float 숫자 인 경우를 제외하고 &lt;var&gt;obj&lt;/var&gt; 의 ID를 반영 합니다.이 경우 값에 대한 해시 코드가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3d24740cd5689f4c054ec43578b250dbe709fad8" translate="yes" xml:space="preserve">
          <source>This function returns a hash code for Lisp object &lt;var&gt;obj&lt;/var&gt;. Its result reflects identity of &lt;var&gt;obj&lt;/var&gt;, but not its contents.</source>
          <target state="translated">이 함수는 Lisp 객체 &lt;var&gt;obj&lt;/var&gt; 에 대한 해시 코드를 반환합니다 . 그 결과는 &lt;var&gt;obj&lt;/var&gt; 의 ID를 반영 하지만 그 내용 은 반영 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cdd05760d2c87e131e93d430b35cb1c6c10af1a2" translate="yes" xml:space="preserve">
          <source>This function returns a hash code for Lisp object &lt;var&gt;obj&lt;/var&gt;. This is an integer that reflects the contents of &lt;var&gt;obj&lt;/var&gt; and the other Lisp objects it points to.</source>
          <target state="translated">이 함수는 Lisp 객체 &lt;var&gt;obj&lt;/var&gt; 에 대한 해시 코드를 반환합니다 . 이것은 &lt;var&gt;obj&lt;/var&gt; 의 내용 과 그것이 가리키는 다른 Lisp 객체 를 반영하는 정수입니다 .</target>
        </trans-unit>
        <trans-unit id="a8322864db7f300fb277f17348bca59226ef581c" translate="yes" xml:space="preserve">
          <source>This function returns a hash for &lt;var&gt;object&lt;/var&gt;. The argument &lt;var&gt;algorithm&lt;/var&gt; is a symbol stating which hash to compute: one of &lt;code&gt;md5&lt;/code&gt;, &lt;code&gt;sha1&lt;/code&gt;, &lt;code&gt;sha224&lt;/code&gt;, &lt;code&gt;sha256&lt;/code&gt;, &lt;code&gt;sha384&lt;/code&gt; or &lt;code&gt;sha512&lt;/code&gt;. The argument &lt;var&gt;object&lt;/var&gt; should be a buffer or a string.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 에 대한 해시를 반환 합니다 . 인수 &lt;var&gt;algorithm&lt;/var&gt; 은 &lt;code&gt;md5&lt;/code&gt; , &lt;code&gt;sha1&lt;/code&gt; , &lt;code&gt;sha224&lt;/code&gt; , &lt;code&gt;sha256&lt;/code&gt; , &lt;code&gt;sha384&lt;/code&gt; 또는 &lt;code&gt;sha512&lt;/code&gt; 중 하나를 계산할 해시를 나타내는 기호 입니다. 인수 &lt;var&gt;object&lt;/var&gt; 는 버퍼 또는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="4e03eb9914aba51eff1477435df97a59c7ae86cc" translate="yes" xml:space="preserve">
          <source>This function returns a list containing all the elements of &lt;var&gt;lists&lt;/var&gt;. Unlike &lt;code&gt;append&lt;/code&gt; (see &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;), the &lt;var&gt;lists&lt;/var&gt; are &lt;em&gt;not&lt;/em&gt; copied. Instead, the last &lt;small&gt;CDR&lt;/small&gt; of each of the &lt;var&gt;lists&lt;/var&gt; is changed to refer to the following list. The last of the &lt;var&gt;lists&lt;/var&gt; is not altered. For example:</source>
          <target state="translated">이 함수는 목록의 모든 요소를 ​​포함하는 목록을 반환 &lt;var&gt;lists&lt;/var&gt; . 달리 &lt;code&gt;append&lt;/code&gt; (참조 &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;건물의리스트&lt;/a&gt; )에 &lt;var&gt;lists&lt;/var&gt; 되어 &lt;em&gt;있지&lt;/em&gt; 복사됩니다. 대신 각 &lt;var&gt;lists&lt;/var&gt; 의 마지막 &lt;small&gt;CDR&lt;/small&gt; 이 다음 목록을 참조하도록 변경됩니다. 마지막 &lt;var&gt;lists&lt;/var&gt; 은 변경되지 않습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="afbc4ae5a38b74d5d9dd7883986fea9c7bb0466a" translate="yes" xml:space="preserve">
          <source>This function returns a list containing all the elements of &lt;var&gt;sequences&lt;/var&gt;. The &lt;var&gt;sequences&lt;/var&gt; may be lists, vectors, bool-vectors, or strings, but the last one should usually be a list. All arguments except the last one are copied, so none of the arguments is altered. (See &lt;code&gt;nconc&lt;/code&gt; in &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;, for a way to join lists with no copying.)</source>
          <target state="translated">이 함수는 &lt;var&gt;sequences&lt;/var&gt; 모든 요소를 ​​포함하는 목록을 반환합니다 . &lt;var&gt;sequences&lt;/var&gt; 목록, 벡터, 부울 - 벡터, 또는 문자열이 될 수 있지만, 마지막 하나는 일반적으로 목록이어야합니다. 마지막 인수를 제외한 모든 인수가 복사되므로 인수가 변경되지 않습니다. ( 복사하지 않고 목록을 결합하는 방법 은 재 &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;배열의 &lt;/a&gt; &lt;code&gt;nconc&lt;/code&gt; 를 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="3cf6790b28a05431e10f6dceba078d01c9ba5e7a" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the available fonts for family &lt;var&gt;family&lt;/var&gt; on &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;family&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, this list applies to all families, and therefore, it contains all available fonts. Otherwise, &lt;var&gt;family&lt;/var&gt; must be a string; it may contain the wildcards &amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 에서 패밀리 &lt;var&gt;family&lt;/var&gt; 에 사용할 수있는 글꼴을 설명하는 목록을 반환합니다 . 경우 &lt;var&gt;family&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; ,이 목록은 모든 가정에 적용, 따라서, 모든 사용 가능한 글꼴이 포함되어 있습니다. 그렇지 않으면 &lt;var&gt;family&lt;/var&gt; 는 문자열이어야합니다. 와일드 카드 '</target>
        </trans-unit>
        <trans-unit id="8cc994fa4d73d7c9e1995b198a995f89347617c2" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the buffer-local variables in buffer &lt;var&gt;buffer&lt;/var&gt;. (If &lt;var&gt;buffer&lt;/var&gt; is omitted, the current buffer is used.) Normally, each list element has the form &lt;code&gt;(&lt;var&gt;sym&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;sym&lt;/var&gt; is a buffer-local variable (a symbol) and &lt;var&gt;val&lt;/var&gt; is its buffer-local value. But when a variable&amp;rsquo;s buffer-local binding in &lt;var&gt;buffer&lt;/var&gt; is void, its list element is just &lt;var&gt;sym&lt;/var&gt;.</source>
          <target state="translated">이 함수는 buffer &lt;var&gt;buffer&lt;/var&gt; 에 있는 버퍼 로컬 변수를 설명하는 목록을 반환합니다 . ( &lt;var&gt;buffer&lt;/var&gt; 가 생략되면 현재 버퍼가 사용됩니다.) 일반적으로 각 목록 요소의 형식은 &lt;code&gt;(&lt;var&gt;sym&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&lt;/code&gt; 이며, 여기서 &lt;var&gt;sym&lt;/var&gt; 은 버퍼 로컬 변수 (기호)이고 &lt;var&gt;val&lt;/var&gt; 은 버퍼 로컬 값입니다. 변수의 로컬 버퍼에 결합하지만 &lt;var&gt;buffer&lt;/var&gt; 빈 경우, 그리스트 엘리먼트는이다 &lt;var&gt;sym&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="24a9a148db001aaafe212b30a9d514cd19776d38" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the network interfaces of the machine you are using. The value is an alist whose elements have the form &lt;code&gt;(&lt;var&gt;ifname&lt;/var&gt; . &lt;var&gt;address&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;ifname&lt;/var&gt; is a string naming the interface, &lt;var&gt;address&lt;/var&gt; has the same form as the &lt;var&gt;local-address&lt;/var&gt; and &lt;var&gt;remote-address&lt;/var&gt; arguments to &lt;code&gt;make-network-process&lt;/code&gt;, i.e. a vector of integers. By default both IPv4 and IPv6 addresses are returned if possible.</source>
          <target state="translated">이 함수는 사용중인 컴퓨터의 네트워크 인터페이스를 설명하는 목록을 반환합니다. 값은 해당 요소 형태가 alist이다 &lt;code&gt;(&lt;var&gt;ifname&lt;/var&gt; . &lt;var&gt;address&lt;/var&gt;)&lt;/code&gt; . &lt;var&gt;ifname&lt;/var&gt; 은 인터페이스 이름을 지정하는 문자열이고 &lt;var&gt;address&lt;/var&gt; 는 &lt;code&gt;make-network-process&lt;/code&gt; 에 대한 &lt;var&gt;local-address&lt;/var&gt; 및 &lt;var&gt;remote-address&lt;/var&gt; 인수 와 동일한 형식 , 즉 정수 벡터입니다. 기본적으로 가능한 경우 IPv4 및 IPv6 주소가 모두 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c06c0e87ef5b06869cd4a872d11786fb839b4703" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the time zone that the user is in.</source>
          <target state="translated">이 함수는 사용자가 속한 시간대를 설명하는 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="630c1e9c314ce9bd36f4c188b13d66b105960a3b" translate="yes" xml:space="preserve">
          <source>This function returns a list of Emacs&amp;rsquo; frames, in Z (stacking) order (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;). The optional argument &lt;var&gt;display&lt;/var&gt; specifies which display to poll. &lt;var&gt;display&lt;/var&gt; should be either a frame or a display name (a string). If omitted or &lt;code&gt;nil&lt;/code&gt;, that stands for the selected frame&amp;rsquo;s display. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; contains no Emacs frame.</source>
          <target state="translated">이 함수는 Z (스택) 순서로 Emacs의 프레임 목록을 반환합니다 ( &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;올리기 및 내리기&lt;/a&gt; 참조 ). 선택적 인수 &lt;var&gt;display&lt;/var&gt; 는 폴링 할 디스플레이를 지정합니다. &lt;var&gt;display&lt;/var&gt; 는 프레임 또는 표시 이름 (문자열)이어야합니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 이면 선택한 프레임의 디스플레이를 나타냅니다. 그것은 반환 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;display&lt;/var&gt; 더 이맥스 프레임을 포함하지 않는다.</target>
        </trans-unit>
        <trans-unit id="ca86bb995c1deb052a7fbed9abe397bf4cb994a1" translate="yes" xml:space="preserve">
          <source>This function returns a list of all coding system names (symbols). If &lt;var&gt;base-only&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the value includes only the base coding systems. Otherwise, it includes alias and variant coding systems as well.</source>
          <target state="translated">이 함수는 모든 코딩 시스템 이름 (기호)의 목록을 반환합니다. 경우 &lt;var&gt;base-only&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 값은 코딩 시스템 만 기재를 포함한다. 그렇지 않으면 별칭 및 변형 코딩 시스템도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9b0125aa1df44fda3f998e993eee542695077da1" translate="yes" xml:space="preserve">
          <source>This function returns a list of all defined character sets ordered by their priority. If &lt;var&gt;highestp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function returns a single character set of the highest priority.</source>
          <target state="translated">이 함수는 우선 순위에 따라 정의 된 모든 문자 집합 목록을 반환합니다. &lt;var&gt;highestp&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 함수는 우선 순위가 가장 높은 단일 문자 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="88cc206b0a29deb278210f375731ebc8e5c9988c" translate="yes" xml:space="preserve">
          <source>This function returns a list of all defined face names.</source>
          <target state="translated">이 함수는 정의 된 모든 얼굴 이름 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4de1ab26e600c1ca58f0e0c3ed09d91cec3633e0" translate="yes" xml:space="preserve">
          <source>This function returns a list of all font entities that match the font spec &lt;var&gt;font-spec&lt;/var&gt;.</source>
          <target state="translated">이 함수는 글꼴 사양 &lt;var&gt;font-spec&lt;/var&gt; 과 일치하는 모든 글꼴 엔티티 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e0f0152b3a5177c95554b7ed2e66fdefbe7eeaa8" translate="yes" xml:space="preserve">
          <source>This function returns a list of all live terminal objects.</source>
          <target state="translated">이 함수는 모든 라이브 터미널 개체의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0369cf6182f12c7ebac338898236658f1ba7e6ab" translate="yes" xml:space="preserve">
          <source>This function returns a list of all possible completions for a file whose name starts with &lt;var&gt;partial-filename&lt;/var&gt; in directory &lt;var&gt;directory&lt;/var&gt;. The order of the completions is the order of the files in the directory, which is unpredictable and conveys no useful information.</source>
          <target state="translated">이 함수는 directory &lt;var&gt;directory&lt;/var&gt; 에서 이름이 &lt;var&gt;partial-filename&lt;/var&gt; 으로 시작하는 파일에 대해 가능한 모든 완성 목록을 반환합니다 . 완료 순서는 디렉토리에있는 파일의 순서이며 예측할 수 없으며 유용한 정보를 전달하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d696eac3b43a861793747d708c6dcea0872fd7c" translate="yes" xml:space="preserve">
          <source>This function returns a list of all possible completions of &lt;var&gt;string&lt;/var&gt;. The arguments to this function are the same as those of &lt;code&gt;try-completion&lt;/code&gt;, and it uses &lt;code&gt;completion-regexp-list&lt;/code&gt; in the same way that &lt;code&gt;try-completion&lt;/code&gt; does.</source>
          <target state="translated">이 함수는 가능한 모든 &lt;var&gt;string&lt;/var&gt; 완성 목록을 반환 합니다 . 이 함수의 인수의 것과 동일 &lt;code&gt;try-completion&lt;/code&gt; , 그리고 그것을 사용 &lt;code&gt;completion-regexp-list&lt;/code&gt; 하는 것과 같은 방법으로 &lt;code&gt;try-completion&lt;/code&gt; 한다.</target>
        </trans-unit>
        <trans-unit id="5fd50079232de7411ee1fd1b779080e909c53931" translate="yes" xml:space="preserve">
          <source>This function returns a list of all processes that have not been deleted.</source>
          <target state="translated">이 함수는 삭제되지 않은 모든 프로세스의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="760de8dfd1abaeaa02e56b2704131eb1657391e6" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the active minor mode bindings of &lt;var&gt;key&lt;/var&gt;. More precisely, it returns an alist of pairs &lt;code&gt;(&lt;var&gt;modename&lt;/var&gt; . &lt;var&gt;binding&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;modename&lt;/var&gt; is the variable that enables the minor mode, and &lt;var&gt;binding&lt;/var&gt; is &lt;var&gt;key&lt;/var&gt;&amp;rsquo;s binding in that mode. If &lt;var&gt;key&lt;/var&gt; has no minor-mode bindings, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;key&lt;/var&gt; 의 모든 활성 부 모드 바인딩 목록을 반환합니다 . 보다 정확하게는 쌍 목록 &lt;code&gt;(&lt;var&gt;modename&lt;/var&gt; . &lt;var&gt;binding&lt;/var&gt;)&lt;/code&gt; 반환합니다 . 여기서 &lt;var&gt;modename&lt;/var&gt; 은 부 모드를 활성화하는 변수이고 &lt;var&gt;binding&lt;/var&gt; 은 해당 모드에서 &lt;var&gt;key&lt;/var&gt; 의 바인딩입니다. &lt;var&gt;key&lt;/var&gt; 에 부 모드 바인딩이없는 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a547e641fade29c0b87d9b137ef3da07ea3cb053" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the elements in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;predicate&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 을 리턴 하는 &lt;var&gt;sequence&lt;/var&gt; 모든 요소의 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="473283dc5fabc579395201b3babbebc295a7f7c6" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the elements in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;predicate&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 것을 반환 하는 &lt;var&gt;sequence&lt;/var&gt; 모든 요소의 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3af13423952bfb1d311657a64fec7e34264564cd" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the keymaps that can be reached (via zero or more prefix keys) from &lt;var&gt;keymap&lt;/var&gt;. The value is an association list with elements of the form &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; .
&lt;var&gt;map&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;key&lt;/var&gt; is a prefix key whose definition in &lt;var&gt;keymap&lt;/var&gt; is &lt;var&gt;map&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;keymap&lt;/var&gt; 에서 (0 개 이상의 접두사 키를 통해) 도달 할 수있는 모든 키맵 목록을 반환합니다 . 값은 형태의 요소와 연관 목록 &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; . &lt;var&gt;map&lt;/var&gt;)&lt;/code&gt; , &lt;var&gt;key&lt;/var&gt; 정의 프리픽스 키인 &lt;var&gt;keymap&lt;/var&gt; 이다 &lt;var&gt;map&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="63834de6be60bd3de2b1a831b013172a3bfb0c06" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the live frames, i.e., those that have not been deleted. It is analogous to &lt;code&gt;buffer-list&lt;/code&gt; for buffers, and includes frames on all terminals. The list that you get is newly created, so modifying the list doesn&amp;rsquo;t have any effect on the internals of Emacs.</source>
          <target state="translated">이 함수는 모든 라이브 프레임, 즉 삭제되지 않은 프레임의 목록을 반환합니다. &lt;code&gt;buffer-list&lt;/code&gt; 대한 버퍼 목록 과 유사하며 모든 터미널에 프레임을 포함합니다. 얻은 목록은 새로 생성되므로 목록을 수정해도 Emacs 내부에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3efa5848b55816391d35c91d2dfc6e1629de7643" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the overlays that cover the character at position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If &lt;var&gt;sorted&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the list is in decreasing order of priority, otherwise it is in no particular order. An overlay contains position &lt;var&gt;pos&lt;/var&gt; if it begins at or before &lt;var&gt;pos&lt;/var&gt;, and ends after &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">이 함수는 현재 버퍼의 &lt;var&gt;pos&lt;/var&gt; 위치 에있는 문자를 덮는 모든 오버레이 목록을 반환합니다 . &lt;var&gt;sorted&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 목록은 내림차순으로 나열되고 그렇지 않으면 특정 순서가 아닙니다. 오버레이는 &lt;var&gt;pos&lt;/var&gt; 에서 또는 그 이전에 시작하고 &lt;var&gt;pos&lt;/var&gt; 이후에 끝나는 &lt;var&gt;pos&lt;/var&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="aed882bbc7be80ab2804fa6e6095513a90ec0bce" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the processes running on the system. Each process is identified by its</source>
          <target state="translated">이 함수는 시스템에서 실행중인 모든 프로세스의 목록을 반환합니다. 각 프로세스는</target>
        </trans-unit>
        <trans-unit id="c53073c10a213f780b73f815cc10793bc2df4a6f" translate="yes" xml:space="preserve">
          <source>This function returns a list of all windows currently displaying &lt;var&gt;buffer-or-name&lt;/var&gt;. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer or the name of an existing buffer. If omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If the currently selected window displays &lt;var&gt;buffer-or-name&lt;/var&gt;, it will be the first in the list returned by this function.</source>
          <target state="translated">이 함수는 현재 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 표시하는 모든 창의 목록을 반환합니다 . &lt;var&gt;buffer-or-name&lt;/var&gt; 은 버퍼 또는 기존 버퍼의 이름 이어야합니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본값은 현재 버퍼입니다. 현재 선택된 창에 &lt;var&gt;buffer-or-name&lt;/var&gt; 이 표시 되면이 함수가 반환하는 목록의 첫 번째 창이됩니다 .</target>
        </trans-unit>
        <trans-unit id="a06e17e476fdd17af55fa34264de9f3ae07fbf75" translate="yes" xml:space="preserve">
          <source>This function returns a list of attributes of file &lt;var&gt;filename&lt;/var&gt;. If the specified file does not exist, it returns &lt;code&gt;nil&lt;/code&gt;. This function does not follow symbolic links. The optional parameter &lt;var&gt;id-format&lt;/var&gt; specifies the preferred format of attributes</source>
          <target state="translated">이 함수는 파일 &lt;var&gt;filename&lt;/var&gt; 의 속성 목록을 반환합니다 . 지정된 파일이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 이 함수는 심볼릭 링크를 따르지 않습니다. 선택적 매개 변수 &lt;var&gt;id-format&lt;/var&gt; 은 선호하는 속성 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b8952006a9bc191a86d4bf2a6ad70324bd29cc5e" translate="yes" xml:space="preserve">
          <source>This function returns a list of available font family names. The optional argument &lt;var&gt;frame&lt;/var&gt; specifies the frame on which the text is to be displayed; if it is &lt;code&gt;nil&lt;/code&gt;, the selected frame is used.</source>
          <target state="translated">이 함수는 사용 가능한 글꼴 패밀리 이름 목록을 반환합니다. 선택적 인수 &lt;var&gt;frame&lt;/var&gt; 은 텍스트가 표시 될 프레임을 지정합니다. 이 경우 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임이 사용된다.</target>
        </trans-unit>
        <trans-unit id="6edea58fce1d45816446b89df404df8f7d5f82c7" translate="yes" xml:space="preserve">
          <source>This function returns a list of available font names that match &lt;var&gt;name&lt;/var&gt;. &lt;var&gt;name&lt;/var&gt; should be a string containing a font name in either the Fontconfig, GTK+, or XLFD format (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">이 함수는 &lt;var&gt;name&lt;/var&gt; 과 일치하는 사용 가능한 글꼴 이름 목록을 반환합니다 . &lt;var&gt;name&lt;/var&gt; 는 fontconfig, GTK + 또는 XLFD 형식 중 하나로 폰트 이름을 포함하는 문자열한다 (참조 : &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;폰트&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="a8118bf0a5cb642c49da6e7aa121572b589282a8" translate="yes" xml:space="preserve">
          <source>This function returns a list of available font names that match &lt;var&gt;name&lt;/var&gt;. &lt;var&gt;name&lt;/var&gt; should be a string containing a font name in either the Fontconfig, GTK+, or XLFD format (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcc4831f469a1dd78e39987fd417b6b5b3176da" translate="yes" xml:space="preserve">
          <source>This function returns a list of character sets of highest priority that contain characters in &lt;var&gt;string&lt;/var&gt;. It is just like &lt;code&gt;find-charset-region&lt;/code&gt;, except that it applies to the contents of &lt;var&gt;string&lt;/var&gt; instead of part of the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 의 문자를 포함하는 가장 높은 우선 순위의 문자 세트 목록을 리턴 합니다 . 현재 버퍼의 일부가 아닌 &lt;var&gt;string&lt;/var&gt; 의 내용에 적용된다는 점을 제외하면 &lt;code&gt;find-charset-region&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7e997f5be8b38fa46a4872b388ccb293832a3379" translate="yes" xml:space="preserve">
          <source>This function returns a list of coding systems that could be used to encode a text between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;. All coding systems in the list can safely encode any multibyte characters in that portion of the text.</source>
          <target state="translated">이 함수는 &lt;var&gt;from&lt;/var&gt; 과 &lt;var&gt;to&lt;/var&gt; 사이의 텍스트를 인코딩하는 데 사용할 수있는 코딩 시스템 목록을 반환합니다 . 목록의 모든 코딩 시스템은 텍스트의 해당 부분에있는 모든 멀티 바이트 문자를 안전하게 인코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41493c31ddf9ac8e54046377b91fde4a1f178539" translate="yes" xml:space="preserve">
          <source>This function returns a list of coding systems that could be used to encode all the character sets in the list &lt;var&gt;charsets&lt;/var&gt;.</source>
          <target state="translated">이 기능은 목록에있는 모든 문자 집합 인코딩하는 데 사용 될 수있는 코딩 시스템의 목록 반환 &lt;var&gt;charsets&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f18e82b5721b132d33458f5e1541487c536145cb" translate="yes" xml:space="preserve">
          <source>This function returns a list of coding systems that could be used to encode the text of &lt;var&gt;string&lt;/var&gt;. All coding systems in the list can safely encode any multibyte characters in &lt;var&gt;string&lt;/var&gt;. If the text contains no multibyte characters, this returns the list &lt;code&gt;(undecided)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 텍스트를 인코딩하는 데 사용할 수있는 코딩 시스템 목록을 반환 합니다 . 목록의 모든 코딩 시스템은 &lt;var&gt;string&lt;/var&gt; 모든 멀티 바이트 문자를 안전하게 인코딩 할 수 있습니다 . 텍스트에 멀티 바이트 문자가 포함되어 있지 않으면 목록 &lt;code&gt;(undecided)&lt;/code&gt; 이 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="36348d3cad2e148f0c9a5670384fae97c6fa39df" translate="yes" xml:space="preserve">
          <source>This function returns a list of face attributes corresponding to &lt;var&gt;font&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; specifies the frame on which the font is to be displayed. If it is &lt;code&gt;nil&lt;/code&gt;, the selected frame is used. The return value has the form</source>
          <target state="translated">이 함수는 &lt;var&gt;font&lt;/var&gt; 에 해당하는 얼굴 속성 목록을 반환합니다 . 선택적 인수 &lt;var&gt;frame&lt;/var&gt; 은 글꼴이 표시 될 프레임을 지정합니다. 이 경우 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임이 사용된다. 반환 값은 다음과 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="fdd9e166a1ff217046ec8c70d4deeb49deabcbeb" translate="yes" xml:space="preserve">
          <source>This function returns a list of image file extensions supported by the current ImageMagick installation. Each list element is a symbol representing an internal ImageMagick name for an image type, such as &lt;code&gt;BMP&lt;/code&gt; for</source>
          <target state="translated">이 함수는 현재 ImageMagick 설치에서 지원하는 이미지 파일 확장자 목록을 반환합니다. 각리스트 요소는 다음과 같은 화상 타입 내부 ImageMagick이 이름을 나타내는 기호이며, &lt;code&gt;BMP&lt;/code&gt; 위한</target>
        </trans-unit>
        <trans-unit id="f9093d2205e945bbba5039073fc9c07e2ecf5974" translate="yes" xml:space="preserve">
          <source>This function returns a list of just the currently visible frames. See &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;. Frames on text terminals always count as visible, even though only the selected one is actually displayed.</source>
          <target state="translated">이 함수는 현재 보이는 프레임 목록 만 반환합니다. &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;프레임 가시성을&lt;/a&gt; 참고하십시오 . 텍스트 터미널의 프레임은 선택한 프레임 만 실제로 표시 되더라도 항상 보이는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="d5b80c7c5f101ada6638a0d665cc882c1a0b436f" translate="yes" xml:space="preserve">
          <source>This function returns a list of live windows belonging to the frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">이 함수는 프레임 &lt;var&gt;frame&lt;/var&gt; 속하는 라이브 창 목록을 반환합니다 . 경우 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택된 프레임에, 디폴트.</target>
        </trans-unit>
        <trans-unit id="1938a8fcbe3c65b89da731a2f03feb4a7f21f7a8" translate="yes" xml:space="preserve">
          <source>This function returns a list of numbers starting with &lt;var&gt;from&lt;/var&gt; and incrementing by &lt;var&gt;separation&lt;/var&gt;, and ending at or just before &lt;var&gt;to&lt;/var&gt;. &lt;var&gt;separation&lt;/var&gt; can be positive or negative and defaults to 1. If &lt;var&gt;to&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or numerically equal to &lt;var&gt;from&lt;/var&gt;, the value is the one-element list &lt;code&gt;(&lt;var&gt;from&lt;/var&gt;)&lt;/code&gt;. If &lt;var&gt;to&lt;/var&gt; is less than &lt;var&gt;from&lt;/var&gt; with a positive &lt;var&gt;separation&lt;/var&gt;, or greater than &lt;var&gt;from&lt;/var&gt; with a negative &lt;var&gt;separation&lt;/var&gt;, the value is &lt;code&gt;nil&lt;/code&gt; because those arguments specify an empty sequence.</source>
          <target state="translated">이 기능은 번호 목록으로 시작 반환 &lt;var&gt;from&lt;/var&gt; 에 의해 증가 &lt;var&gt;separation&lt;/var&gt; 하고, 직전에 종료 나 &lt;var&gt;to&lt;/var&gt; . &lt;var&gt;separation&lt;/var&gt; 는 양수 또는 음수 일 수 있으며 기본값은 1입니다. &lt;var&gt;to&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이거나 &lt;var&gt;from&lt;/var&gt; 과 같은 경우 값은 단일 요소 목록 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt;)&lt;/code&gt; 입니다. 경우 &lt;var&gt;to&lt;/var&gt; 이하이다 &lt;var&gt;from&lt;/var&gt; 포지티브 &lt;var&gt;separation&lt;/var&gt; 보다 이상 &lt;var&gt;from&lt;/var&gt; 음극 용으로 &lt;var&gt;separation&lt;/var&gt; 값은 &lt;code&gt;nil&lt;/code&gt; 이들 인자 빈 순서를 지정하기 때문이다.</target>
        </trans-unit>
        <trans-unit id="bc5d51607c700b6affff9c390b12068fba99ac09" translate="yes" xml:space="preserve">
          <source>This function returns a list of physical monitor attributes on &lt;var&gt;display&lt;/var&gt;, which can be a display name (a string), a terminal, or a frame; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame&amp;rsquo;s display. Each element of the list is an association list, representing the attributes of a physical monitor. The first element corresponds to the primary monitor. The attribute keys and values are:</source>
          <target state="translated">이 함수는 &lt;var&gt;display&lt;/var&gt; 의 물리적 모니터 속성 목록을 반환 하며, 디스플레이 이름 (문자열), 터미널 또는 프레임 일 수 있습니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 이면 선택된 프레임의 디스플레이로 기본 설정됩니다. 목록의 각 요소는 물리적 모니터의 속성을 나타내는 연관 목록입니다. 첫 번째 요소는 기본 모니터에 해당합니다. 속성 키 및 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3a7550b023c3b1e2b177488b5ee5ce7719b216dc" translate="yes" xml:space="preserve">
          <source>This function returns a list of pixel coordinates for the edges of &lt;var&gt;window&lt;/var&gt;. Calling &lt;code&gt;(window-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window nil nil t)&lt;/code&gt;, see above.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 가장자리에 대한 픽셀 좌표 목록을 반환합니다 . 호출 &lt;code&gt;(window-pixel-edges window)&lt;/code&gt; 호출하는 것과 &lt;code&gt;(window-edges window nil nil t)&lt;/code&gt; , 상기 참조.</target>
        </trans-unit>
        <trans-unit id="c5bcccf7653f94949fa6807bc985cf02abf6129b" translate="yes" xml:space="preserve">
          <source>This function returns a list of positions (markers or integers) that record all the information on the text that the last search matched. Element zero is the position of the beginning of the match for the whole expression; element one is the position of the end of the match for the expression. The next two elements are the positions of the beginning and end of the match for the first subexpression, and so on. In general, element number 2&lt;var&gt;n&lt;/var&gt; corresponds to &lt;code&gt;(match-beginning &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;; and element number 2&lt;var&gt;n&lt;/var&gt; + 1 corresponds to &lt;code&gt;(match-end &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 마지막 검색과 일치하는 텍스트의 모든 정보를 기록하는 위치 목록 (마커 또는 정수)을 반환합니다. 요소 0은 전체 표현식에 대한 일치 시작 위치입니다. 요소 1은 표현식에 대한 일치의 끝 위치입니다. 다음 두 요소는 첫 번째 하위 표현식에 대한 일치의 시작과 끝 위치입니다. 일반적으로 요소 번호 2 &lt;var&gt;n&lt;/var&gt; 은 &lt;code&gt;(match-beginning &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; . 요소 번호 2 &lt;var&gt;n&lt;/var&gt; + 1은 &lt;code&gt;(match-end &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3803200f67823d1a70ea66bab0671b3a8d8d90db" translate="yes" xml:space="preserve">
          <source>This function returns a list of strings, listing the names of user groups on the system. If Emacs cannot retrieve this information, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 시스템에있는 사용자 그룹의 이름을 나열하는 문자열 목록을 반환합니다. Emacs가이 정보를 검색 할 수없는 경우 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="92c16407e725cc5bd035a092a9a97f67b5733f25" translate="yes" xml:space="preserve">
          <source>This function returns a list of strings, listing the user names on the system. If Emacs cannot retrieve this information, the return value is a list containing just the value of &lt;code&gt;user-real-login-name&lt;/code&gt;.</source>
          <target state="translated">이 함수는 시스템의 사용자 이름을 나열하는 문자열 목록을 반환합니다. Emacs가이 정보를 검색 할 수없는 경우 반환 값은 &lt;code&gt;user-real-login-name&lt;/code&gt; 값만 포함하는 목록 입니다.</target>
        </trans-unit>
        <trans-unit id="fa01384083cfead8d0e3b438cbc0777b5c0a5e9d" translate="yes" xml:space="preserve">
          <source>This function returns a list of symbols representing algorithms that &lt;code&gt;secure-hash&lt;/code&gt; can use.</source>
          <target state="translated">이 함수는 &lt;code&gt;secure-hash&lt;/code&gt; 가 사용할 수있는 알고리즘을 나타내는 기호 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2f7dd91779875f40b3feac634b571ca77b06878a" translate="yes" xml:space="preserve">
          <source>This function returns a list of the character sets of highest priority that contain characters in the current buffer between positions &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;beg&lt;/var&gt; 위치 와 &lt;var&gt;end&lt;/var&gt; 위치 사이의 현재 버퍼에있는 문자를 포함하는 가장 높은 우선 순위의 문자 집합 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="03b14a3736bc35bf0f4f1cf004cb5e99993a3392" translate="yes" xml:space="preserve">
          <source>This function returns a list of the color names that are defined and supported on frame &lt;var&gt;frame&lt;/var&gt; (default, the selected frame). If &lt;var&gt;frame&lt;/var&gt; does not support colors, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 프레임 &lt;var&gt;frame&lt;/var&gt; (기본값, 선택한 프레임) 에서 정의되고 지원되는 색상 이름 목록을 반환합니다 . &lt;var&gt;frame&lt;/var&gt; 이 색상을 지원하지 않는 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="73053d724485d4cd4d7ced517b99b9650a137f7e" translate="yes" xml:space="preserve">
          <source>This function returns a list of the edge coordinates of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 가장자리 좌표 목록을 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값.</target>
        </trans-unit>
        <trans-unit id="036441f56e3ae4e4e6a273858277656a4160fb5d" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements of &lt;var&gt;sequence&lt;/var&gt; grouped into sub-sequences of length &lt;var&gt;n&lt;/var&gt;. The last sequence may contain less elements than &lt;var&gt;n&lt;/var&gt;. &lt;var&gt;n&lt;/var&gt; must be an integer. If &lt;var&gt;n&lt;/var&gt; is a negative integer or 0, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 길이가 &lt;var&gt;n&lt;/var&gt; 인 하위 &lt;var&gt;sequence&lt;/var&gt; 그룹화 된 시퀀스 요소 목록을 반환합니다 . 마지막 시퀀스에는 &lt;var&gt;n&lt;/var&gt; 보다 적은 요소가 포함될 수 있습니다 . &lt;var&gt;n&lt;/var&gt; 은 정수 여야합니다. 경우 &lt;var&gt;n&lt;/var&gt; 은 음의 정수 또는 0이며, 반환 값은 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71db04e5a4a339a8b304d08a6e5c6569fec46111" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements of &lt;var&gt;sequence&lt;/var&gt; with duplicates removed. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 함수는 중복이 제거 된 &lt;var&gt;sequence&lt;/var&gt; 요소 목록을 반환합니다 . 선택적 인수 &lt;var&gt;function&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 기본 &lt;code&gt;equal&lt;/code&gt; 대신 사용할 두 인수의 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="c72622f68088dba6e15392561f13d4c5c59c7f6a" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements that appear both in &lt;var&gt;sequence1&lt;/var&gt; and &lt;var&gt;sequence2&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use to compare elements instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence1&lt;/var&gt; 및 &lt;var&gt;sequence2&lt;/var&gt; 모두에 나타나는 요소 목록을 반환합니다 . 선택적 인수 &lt;var&gt;function&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 기본 &lt;code&gt;equal&lt;/code&gt; 대신 요소를 비교하는 데 사용할 두 인수의 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="8fe92292902960b9b8dae8671d4e09ff19728159" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements that appear in &lt;var&gt;sequence1&lt;/var&gt; but not in &lt;var&gt;sequence2&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use to compare elements instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 기능에 표시되는 요소의 목록 반환 &lt;var&gt;sequence1&lt;/var&gt; 이 아닌에 &lt;var&gt;sequence2&lt;/var&gt; . 선택적 인수 &lt;var&gt;function&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 기본 &lt;code&gt;equal&lt;/code&gt; 대신 요소를 비교하는 데 사용할 두 인수의 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="c733852fa3cacdcd5b25cd1832f0a97aa3247144" translate="yes" xml:space="preserve">
          <source>This function returns a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;
&lt;var&gt;columns&lt;/var&gt; &lt;var&gt;vertical-type&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;lines&lt;/var&gt;
&lt;var&gt;horizontal-type&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 형식의 목록을 반환합니다 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;columns&lt;/var&gt; &lt;var&gt;vertical-type&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;lines&lt;/var&gt; &lt;var&gt;horizontal-type&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52a3d08db3001d6f819079329e1c41d59bd2dbd0" translate="yes" xml:space="preserve">
          <source>This function returns a list of the keymaps of currently enabled minor modes.</source>
          <target state="translated">이 함수는 현재 활성화 된 부 모드의 키맵 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="141584219ad787c6c05c779f17d4a14aaac6cc00" translate="yes" xml:space="preserve">
          <source>This function returns a list of the modifiers that &lt;var&gt;event&lt;/var&gt; has. The modifiers are symbols; they include &lt;code&gt;shift&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;meta&lt;/code&gt;, &lt;code&gt;alt&lt;/code&gt;, &lt;code&gt;hyper&lt;/code&gt; and &lt;code&gt;super&lt;/code&gt;. In addition, the modifiers list of a mouse event symbol always contains one of &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;drag&lt;/code&gt;, and &lt;code&gt;down&lt;/code&gt;. For double or triple events, it also contains &lt;code&gt;double&lt;/code&gt; or &lt;code&gt;triple&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;event&lt;/var&gt; 에 포함 된 수정 자 목록을 반환합니다 . 수정자는 기호입니다. 여기에는 &lt;code&gt;shift&lt;/code&gt; , &lt;code&gt;control&lt;/code&gt; , &lt;code&gt;meta&lt;/code&gt; , &lt;code&gt;alt&lt;/code&gt; , &lt;code&gt;hyper&lt;/code&gt; 및 &lt;code&gt;super&lt;/code&gt; 가 포함 됩니다. 또한 마우스 이벤트 심볼의 수정 자 목록에는 항상 &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;drag&lt;/code&gt; 및 &lt;code&gt;down&lt;/code&gt; 중 하나가 포함 됩니다 . 이중 또는 삼중 이벤트의 경우, 그것은 또한 포함 &lt;code&gt;double&lt;/code&gt; 또는 &lt;code&gt;triple&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="477497a412a81cb5638327ef01966bb3f7877761" translate="yes" xml:space="preserve">
          <source>This function returns a list of the names of the files in the directory &lt;var&gt;directory&lt;/var&gt;. By default, the list is in alphabetical order.</source>
          <target state="translated">이 함수는 디렉토리 &lt;var&gt;directory&lt;/var&gt; 에있는 파일 이름 목록을 반환합니다 . 기본적으로 목록은 알파벳순입니다.</target>
        </trans-unit>
        <trans-unit id="300947bce763181aa97455c52764d6aad5cfc8fc" translate="yes" xml:space="preserve">
          <source>This function returns a list of the overlays that overlap the region &lt;var&gt;beg&lt;/var&gt; through &lt;var&gt;end&lt;/var&gt;. An overlay overlaps with a region if it contains one or more characters in the region; empty overlays (see &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;empty overlay&lt;/a&gt;) overlap if they are at &lt;var&gt;beg&lt;/var&gt;, strictly between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, or at &lt;var&gt;end&lt;/var&gt; when &lt;var&gt;end&lt;/var&gt; denotes the position at the end of the buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;beg&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 까지 겹치는 오버레이 목록을 반환합니다 . 오버레이는 영역에 하나 이상의 문자가 포함 된 경우 영역과 겹칩니다. 빈 오버레이 (참조 &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;빈 오버레이&lt;/a&gt; 가에있는 경우 중첩)을 &lt;var&gt;beg&lt;/var&gt; 엄격 사이, &lt;var&gt;beg&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 또는시 &lt;var&gt;end&lt;/var&gt; 때 &lt;var&gt;end&lt;/var&gt; 상기 버퍼의 끝 위치를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="79f4b464ac316f96de06744f0fec30389792a0c2" translate="yes" xml:space="preserve">
          <source>This function returns a list of xwidget objects associated with the &lt;var&gt;buffer&lt;/var&gt;, which can be specified as a buffer object or a name of an existing buffer, a string. The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;buffer&lt;/var&gt; contains no xwidgets.</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer&lt;/var&gt; 와 관련된 xwidget 객체 목록을 반환하며 , buffer 객체 또는 기존 버퍼의 이름 인 문자열로 지정할 수 있습니다. 값은 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;buffer&lt;/var&gt; 에는 xwidgets을 포함하지 않는다.</target>
        </trans-unit>
        <trans-unit id="b882a96ace8721d892e55d65f71ca2a7cd815933" translate="yes" xml:space="preserve">
          <source>This function returns a list representing the window tree for frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">이 함수는 프레임 &lt;var&gt;frame&lt;/var&gt; 의 창 트리를 나타내는 목록을 반환합니다 . 경우 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택된 프레임에, 디폴트.</target>
        </trans-unit>
        <trans-unit id="e228febd51574a0495297443f31b5a6d3b5f274a" translate="yes" xml:space="preserve">
          <source>This function returns a list specifying the previous contents of &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;window&lt;/var&gt; should be a live window and defaults to the selected one.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 이전 내용을 지정하는 목록을 반환합니다 . 선택적 인수 &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="f5b6a4b5fc6eee459fda6cd7d73e30a3cf406b3d" translate="yes" xml:space="preserve">
          <source>This function returns a list that indicates which X displays Emacs has a connection to. The elements of the list are strings, and each one is a display name.</source>
          <target state="translated">이 함수는 Emacs가 연결되어있는 X 디스플레이를 나타내는 목록을 반환합니다. 목록의 요소는 문자열이며 각 요소는 표시 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c9f2cef3df64843fc120fa8a891c09707d183853" translate="yes" xml:space="preserve">
          <source>This function returns a live window which is heuristically the least recently used. The optional argument &lt;var&gt;all-frames&lt;/var&gt; has the same meaning as in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">이 함수는 경험적으로 가장 최근에 사용 된 라이브 창을 반환합니다. 선택적 인수 &lt;var&gt;all-frames&lt;/var&gt; 는 &lt;code&gt;next-window&lt;/code&gt; 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="80477f39c8b3aa9d70e3f53fbffc728722e96ae9" translate="yes" xml:space="preserve">
          <source>This function returns a live window, the one following &lt;var&gt;window&lt;/var&gt; in the cyclic ordering of windows. &lt;var&gt;window&lt;/var&gt; should be a live window; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 주기적 순서에서 다음 윈도우 인 라이브 윈도우를 반환합니다 . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야합니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본값은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="bf995a5af8ef36daf8da535c306242fa54592f6b" translate="yes" xml:space="preserve">
          <source>This function returns a live window, the one preceding &lt;var&gt;window&lt;/var&gt; in the cyclic ordering of windows. The other arguments are handled like in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 주기적 순서에서 앞의 윈도우 인 라이브 윈도우를 반환합니다 . 다른 인수는 &lt;code&gt;next-window&lt;/code&gt; 처럼 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="adfdf60a06994086cbf1c5942d8c071b8c9f2057" translate="yes" xml:space="preserve">
          <source>This function returns a multibyte string containing the same sequence of characters as &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;string&lt;/var&gt; is a multibyte string, it is returned unchanged. The function assumes that &lt;var&gt;string&lt;/var&gt; includes only</source>
          <target state="translated">이 함수는 string과 동일한 문자 시퀀스를 포함하는 멀티 바이트 문자열을 반환 &lt;var&gt;string&lt;/var&gt; . 경우 &lt;var&gt;string&lt;/var&gt; 멀티 바이트 문자열, 그것은 변화가 반환됩니다. 이 함수는 것으로 가정 &lt;var&gt;string&lt;/var&gt; 만 포함</target>
        </trans-unit>
        <trans-unit id="e5dd0de5b87150243ab57a0bdbb8062526303bc6" translate="yes" xml:space="preserve">
          <source>This function returns a name that would be unique for a new buffer&amp;mdash;but does not create the buffer. It starts with &lt;var&gt;starting-name&lt;/var&gt;, and produces a name not currently in use for any buffer by appending a number inside of &amp;lsquo;</source>
          <target state="translated">이 함수는 새 버퍼에 대해 고유 한 이름을 반환하지만 버퍼를 생성하지는 않습니다. &lt;var&gt;starting-name&lt;/var&gt; 으로 시작 하고 '안에 숫자를 추가하여 현재 버퍼에 사용되지 않는 이름을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="af559cbd3f6c0576d1ed1e5f59f11385960f1bc6" translate="yes" xml:space="preserve">
          <source>This function returns a new Lisp string which contains the JSON representation of &lt;var&gt;object&lt;/var&gt;. The argument &lt;var&gt;args&lt;/var&gt; is a list of keyword/argument pairs. The following keywords are accepted:</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 의 JSON 표현을 포함하는 새로운 Lisp 문자열을 반환 합니다 . 인수 &lt;var&gt;args&lt;/var&gt; 키워드 / 인수 쌍의 목록입니다. 다음 키워드가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="9ff7c4309c671cd50bba1ea42220fbe9b2ca37c4" translate="yes" xml:space="preserve">
          <source>This function returns a new category set&amp;mdash;a bool-vector&amp;mdash;whose initial contents are the categories listed in the string &lt;var&gt;categories&lt;/var&gt;. The elements of &lt;var&gt;categories&lt;/var&gt; should be category names; the new category set has &lt;code&gt;t&lt;/code&gt; for each of those categories, and &lt;code&gt;nil&lt;/code&gt; for all other categories.</source>
          <target state="translated">이 함수는 초기 내용이 문자열 &lt;var&gt;categories&lt;/var&gt; 에 나열된 범주 인 새 범주 집합 (부울 벡터)을 반환합니다 . &lt;var&gt;categories&lt;/var&gt; 의 요소는 카테고리 이름이어야합니다. 새 범주 집합에는 각 범주에 대해 &lt;code&gt;t&lt;/code&gt; 가 있고 다른 모든 범주에 대해서는 &lt;code&gt;nil&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1485c88a189d9ecd530666315c29a212080417d0" translate="yes" xml:space="preserve">
          <source>This function returns a new function which, when called, will call &lt;var&gt;func&lt;/var&gt; with the list of arguments composed from &lt;var&gt;args&lt;/var&gt; and additional arguments specified at the time of the call. If &lt;var&gt;func&lt;/var&gt; accepts &lt;var&gt;n&lt;/var&gt; arguments, then a call to &lt;code&gt;apply-partially&lt;/code&gt; with &lt;code&gt;&lt;var&gt;m&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; arguments will produce a new function of &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;m&lt;/var&gt;&lt;/code&gt; arguments.</source>
          <target state="translated">이 함수는 호출시 &lt;var&gt;args&lt;/var&gt; 와 추가 인수 로 구성된 인수 목록으로 &lt;var&gt;func&lt;/var&gt; 를 호출하는 새 함수를 반환합니다 . 경우 &lt;var&gt;func&lt;/var&gt; 받아 &lt;var&gt;n&lt;/var&gt; 하는 다음 호출 인수를 &lt;code&gt;apply-partially&lt;/code&gt; 으로 &lt;code&gt;&lt;var&gt;m&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; &amp;nbsp;&amp;lt;&amp;nbsp; &lt;var&gt;n&lt;/var&gt; 인자의 새로운 기능을 생성 할 것이다 &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;m&lt;/var&gt;&lt;/code&gt; &amp;nbsp;-&amp;nbsp; &lt;var&gt;m&lt;/var&gt; 의 인자.</target>
        </trans-unit>
        <trans-unit id="7f808efa3c54759a66e253192a78cfd5f89aa9df" translate="yes" xml:space="preserve">
          <source>This function returns a new keymap composed of the existing keymap(s) &lt;var&gt;maps&lt;/var&gt;, and optionally inheriting from a parent keymap &lt;var&gt;parent&lt;/var&gt;. &lt;var&gt;maps&lt;/var&gt; can be a single keymap or a list of more than one. When looking up a key in the resulting new map, Emacs searches in each of the &lt;var&gt;maps&lt;/var&gt; in turn, and then in &lt;var&gt;parent&lt;/var&gt;, stopping at the first match. A &lt;code&gt;nil&lt;/code&gt; binding in any one of &lt;var&gt;maps&lt;/var&gt; overrides any binding in &lt;var&gt;parent&lt;/var&gt;, but it does not override any non-&lt;code&gt;nil&lt;/code&gt; binding in any other of the &lt;var&gt;maps&lt;/var&gt;.</source>
          <target state="translated">이 기능은 기존의 키맵 (들)로 구성된 새로운 키맵 반환 &lt;var&gt;maps&lt;/var&gt; 하고, 선택적으로 부모 키 맵에서 상속 &lt;var&gt;parent&lt;/var&gt; . &lt;var&gt;maps&lt;/var&gt; 은 단일 키맵이거나 둘 이상의 목록 일 수 있습니다. 결과 새 맵에서 키를 찾을 때 Emacs는 각 &lt;var&gt;maps&lt;/var&gt; 에서 차례로 검색 한 다음 &lt;var&gt;parent&lt;/var&gt; 에서 첫 번째 일치에서 중지합니다. &lt;code&gt;nil&lt;/code&gt; 중 어느 하나에 결합 &lt;var&gt;maps&lt;/var&gt; 어떤 구속력 우선 &lt;var&gt;parent&lt;/var&gt; ,하지만 어떤 비 대체하지 않습니다 &lt;code&gt;nil&lt;/code&gt; 의 다른 바인딩 &lt;var&gt;maps&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="e8c941f46c8ad29a0c8a47adafab07b9b6e616cc" translate="yes" xml:space="preserve">
          <source>This function returns a new marker that points to the beginning of the accessible portion of the buffer. This will be the beginning of the buffer unless narrowing is in effect. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">이 함수는 버퍼의 액세스 가능한 부분의 시작을 가리키는 새 마커를 반환합니다. 축소가 적용되지 않는 한 이것은 버퍼의 시작이됩니다. &lt;a href=&quot;narrowing#Narrowing&quot;&gt;축소를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e8b6f33ce6a689de2100d395c76bee3c3fa6651" translate="yes" xml:space="preserve">
          <source>This function returns a new marker that points to the end of the accessible portion of the buffer. This will be the end of the buffer unless narrowing is in effect. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">이 함수는 버퍼의 액세스 가능한 부분의 끝을 가리키는 새 마커를 반환합니다. 축소가 적용되지 않는 한 이것은 버퍼의 끝입니다. &lt;a href=&quot;narrowing#Narrowing&quot;&gt;축소를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e1a3d0a34a7d3b9f63933d81bda922b5a132650" translate="yes" xml:space="preserve">
          <source>This function returns a new marker that points to the present position of point in the current buffer. See &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;. For an example, see &lt;code&gt;copy-marker&lt;/code&gt;, below.</source>
          <target state="translated">이 함수는 현재 버퍼에서 포인트의 현재 위치를 가리키는 새 마커를 반환합니다. &lt;a href=&quot;point#Point&quot;&gt;Point를&lt;/a&gt; 참조하십시오 . 예를 보려면 아래의 &lt;code&gt;copy-marker&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f79dda4fe9c17e733e5eb8431319647b80858aa6" translate="yes" xml:space="preserve">
          <source>This function returns a new object representing &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s current window configuration. The default for &lt;var&gt;frame&lt;/var&gt; is the selected frame. The variable &lt;code&gt;window-persistent-parameters&lt;/code&gt; specifies which window parameters (if any) are saved by this function. See &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 현재 창 구성을 나타내는 새 객체를 반환 합니다. &lt;var&gt;frame&lt;/var&gt; 의 기본값 은 선택한 프레임입니다. 가변 &lt;code&gt;window-persistent-parameters&lt;/code&gt; 윈도우 파라미터는 (만약 있다면)이 기능에 의해 저장된 지정. &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;창 매개 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f58d9fba73f3b413ad4fad2d8fe8c111580eb01" translate="yes" xml:space="preserve">
          <source>This function returns a new record with type &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;length&lt;/var&gt; more slots, each initialized to &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">이 함수는 유형 &lt;var&gt;type&lt;/var&gt; 과 &lt;var&gt;length&lt;/var&gt; 더 많은 슬롯을 가진 새 레코드를 반환하며 각각은 &lt;var&gt;object&lt;/var&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="c04892a7be7db7f15103d07272ae3bb016196f28" translate="yes" xml:space="preserve">
          <source>This function returns a new string containing one character, &lt;var&gt;character&lt;/var&gt;. This function is semi-obsolete because the function &lt;code&gt;string&lt;/code&gt; is more general. See &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;.</source>
          <target state="translated">이 함수는 한 문자 인 &lt;var&gt;character&lt;/var&gt; 를 포함하는 새 문자열을 반환합니다 . 이 함수는 함수 &lt;code&gt;string&lt;/code&gt; 이 더 일반적 이기 때문에 일부 사용되지 않습니다 . &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;문자열 만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8b1995111b6862337f09aedaac2f7f0bb6142f6" translate="yes" xml:space="preserve">
          <source>This function returns a new string which consists of those characters from &lt;var&gt;string&lt;/var&gt; in the range from (and including) the character at the index &lt;var&gt;start&lt;/var&gt; up to (but excluding) the character at the index &lt;var&gt;end&lt;/var&gt;. The first character is at index zero. With one argument, this function just copies &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">이 함수는 인덱스 &lt;var&gt;start&lt;/var&gt; 의 문자에서 인덱스 &lt;var&gt;end&lt;/var&gt; 의 문자까지 (그러나 제외) 범위의 &lt;var&gt;string&lt;/var&gt; 에서 해당 문자로 구성된 새 문자열을 반환합니다 . 첫 번째 문자는 인덱스 0에 있습니다. 하나의 인수로이 함수는 &lt;var&gt;string&lt;/var&gt; 을 복사 합니다 .</target>
        </trans-unit>
        <trans-unit id="6690a429f01a60dd34108769d390d7b2160aa887" translate="yes" xml:space="preserve">
          <source>This function returns a new vector consisting of &lt;var&gt;length&lt;/var&gt; elements, each initialized to &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">이 함수는 각각 &lt;var&gt;object&lt;/var&gt; 로 초기화 된 &lt;var&gt;length&lt;/var&gt; 요소 로 구성된 새 벡터를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e837af72d27c36255507ab3f76e911a063b2fe63" translate="yes" xml:space="preserve">
          <source>This function returns a new vector containing all the elements of &lt;var&gt;sequences&lt;/var&gt;. The arguments &lt;var&gt;sequences&lt;/var&gt; may be proper lists, vectors, strings or bool-vectors. If no &lt;var&gt;sequences&lt;/var&gt; are given, the empty vector is returned.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequences&lt;/var&gt; 모든 요소를 ​​포함하는 새 벡터를 반환합니다 . 인수 &lt;var&gt;sequences&lt;/var&gt; 는 적절한 목록, 벡터, 문자열 또는 부울 벡터 일 수 있습니다. &lt;var&gt;sequences&lt;/var&gt; 가 제공 되지 않으면 빈 벡터가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1280d0dad8dedaef4a1bc18449ec69dd17d40ea5" translate="yes" xml:space="preserve">
          <source>This function returns a newly created marker that does not point anywhere.</source>
          <target state="translated">이 함수는 아무데도 가리 키지 않는 새로 생성 된 마커를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e64784d577591f9bcf6d76e9478f8714941750f0" translate="yes" xml:space="preserve">
          <source>This function returns a newly created, empty buffer, but does not make it current. The name of the buffer is generated by passing &lt;var&gt;name&lt;/var&gt; to the function &lt;code&gt;generate-new-buffer-name&lt;/code&gt; (see &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;Buffer Names&lt;/a&gt;). Thus, if there is no buffer named &lt;var&gt;name&lt;/var&gt;, then that is the name of the new buffer; if that name is in use, a suffix of the form &amp;lsquo;</source>
          <target state="translated">이 함수는 새로 생성 된 빈 버퍼를 반환하지만 현재 버퍼로 만들지는 않습니다. 버퍼의 이름은 &lt;code&gt;generate-new-buffer-name&lt;/code&gt; 함수에 &lt;var&gt;name&lt;/var&gt; 을 전달하여 생성됩니다 ( &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;버퍼 이름&lt;/a&gt; 참조 ). 따라서 &lt;var&gt;name&lt;/var&gt; 이라는 버퍼가 없으면 새 버퍼의 이름입니다. 해당 이름이 사용중인 경우 '</target>
        </trans-unit>
        <trans-unit id="3f536fa772b7ad902da2f6162c35cdab77dea648" translate="yes" xml:space="preserve">
          <source>This function returns a newly-allocated, uninterned symbol whose name is &lt;var&gt;name&lt;/var&gt; (which must be a string). Its value and function definition are void, and its property list is &lt;code&gt;nil&lt;/code&gt;. In the example below, the value of &lt;code&gt;sym&lt;/code&gt; is not &lt;code&gt;eq&lt;/code&gt; to &lt;code&gt;foo&lt;/code&gt; because it is a distinct uninterned symbol whose name is also &amp;lsquo;</source>
          <target state="translated">이 함수는 이름이 &lt;var&gt;name&lt;/var&gt; (문자열이어야 함) 인 새로 할당 된 비 인터 기호를 반환합니다 . 값과 함수 정의는 무효이고 속성 목록은 &lt;code&gt;nil&lt;/code&gt; 입니다. 아래의 예에서, 값 &lt;code&gt;sym&lt;/code&gt; 아니다 &lt;code&gt;eq&lt;/code&gt; 에 &lt;code&gt;foo&lt;/code&gt; 에 그 이름이 별개 uninterned 심볼이기도하므로 '</target>
        </trans-unit>
        <trans-unit id="32f44e9cc63cb48b9eb39be5d4046025b547e176" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;filename&lt;/var&gt; is a possible name for a backup file. It just checks the name, not whether a file with the name &lt;var&gt;filename&lt;/var&gt; exists.</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 이 백업 파일의 가능한 이름 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다. 이름이 &lt;var&gt;filename&lt;/var&gt; 인 파일 이 있는지 여부가 아닌 이름 만 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="4ff1c46d6bb734b7388adee86c259455ed72038f" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;filename&lt;/var&gt; is a string that could be the name of an auto-save file. It assumes the usual naming convention for auto-save files: a name that begins and ends with hash marks (&amp;lsquo;</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 이 자동 저장 파일의 이름이 될 수있는 문자열 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다. 자동 저장 파일에 대한 일반적인 명명 규칙을 가정합니다 : 해시 표시 ( '</target>
        </trans-unit>
        <trans-unit id="ae58f4be7ddaefc5b75b1f759ccee8efc24264f0" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a named face: a Lisp symbol or string which serves as a face name. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 명명 된 얼굴 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . Lisp 기호 또는 얼굴 이름 역할을하는 문자열입니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d4123054fe06f368fce96acc40e109e29c65d252" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is an abbrev table.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 abbrev 테이블 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f882a4ced1b43cd6d03f93026ab380883f47da18" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if and only if &lt;var&gt;window&lt;/var&gt; is part of a vertical combination. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected one.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 수직 조합의 일부인 경우에만 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택된 하나, 기본값.</target>
        </trans-unit>
        <trans-unit id="e398a5c714939d364280e7b1c8c30c9b899feddb" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the &lt;code&gt;:slant&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;italic&lt;/code&gt; or &lt;code&gt;oblique&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 함수는, 비 - 반환 &lt;code&gt;nil&lt;/code&gt; 경우 생성 값을 &lt;code&gt;:slant&lt;/code&gt; 의 속성 &lt;var&gt;face&lt;/var&gt; 이다 &lt;code&gt;italic&lt;/code&gt; 또는 &lt;code&gt;oblique&lt;/code&gt; 및 &lt;code&gt;nil&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="7f84700f5a0b63dd9d5d285aba89f5de4707a3b1" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the &lt;code&gt;:weight&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; is bolder than normal (i.e., one of &lt;code&gt;semi-bold&lt;/code&gt;, &lt;code&gt;bold&lt;/code&gt;, &lt;code&gt;extra-bold&lt;/code&gt;, or &lt;code&gt;ultra-bold&lt;/code&gt;). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;face&lt;/var&gt; 의 &lt;code&gt;:weight&lt;/code&gt; 속성 이 보통보다 굵은 경우 (즉, &lt;code&gt;semi-bold&lt;/code&gt; , &lt;code&gt;bold&lt;/code&gt; , &lt;code&gt;extra-bold&lt;/code&gt; 또는 &lt;code&gt;ultra-bold&lt;/code&gt; 중 하나) &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="78769ad86da07df201ca306f3755aed7ec97e6c4" translate="yes" xml:space="preserve">
          <source>This function returns a nondeleted process associated with the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;. If there are several processes associated with it, this function chooses one (currently, the one most recently created, but don&amp;rsquo;t count on that). Deletion of a process (see &lt;code&gt;delete-process&lt;/code&gt;) makes it ineligible for this function to return.</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 지정된 버퍼와 관련된 삭제되지 않은 프로세스를 반환합니다 . 연관된 프로세스가 여러 개있는 경우이 함수는 하나를 선택합니다 (현재는 가장 최근에 생성되었지만 그에 의존하지 않음). 프로세스를 삭제하면 ( &lt;code&gt;delete-process&lt;/code&gt; 참조 )이 함수를 반환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="674ae0573e7ac049b711fa0a6f8b253c3d3ba8f5" translate="yes" xml:space="preserve">
          <source>This function returns a notification id, an integer, which can be used to manipulate the notification item with &lt;code&gt;notifications-close-notification&lt;/code&gt; or the &lt;code&gt;:replaces-id&lt;/code&gt; argument of another &lt;code&gt;notifications-notify&lt;/code&gt; call. For example:</source>
          <target state="translated">이 함수는 &lt;code&gt;notifications-close-notification&lt;/code&gt; 또는 다른 &lt;code&gt;notifications-notify&lt;/code&gt; 호출 의 &lt;code&gt;:replaces-id&lt;/code&gt; 인수로 알림 항목을 조작하는 데 사용할 수있는 알림 ID, 정수를 리턴합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1380e0e5d886fdb04e35cb1e0a017e4c9a548740" translate="yes" xml:space="preserve">
          <source>This function returns a position list for position &lt;var&gt;pos&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;pos&lt;/var&gt; defaults to point in &lt;var&gt;window&lt;/var&gt;; &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 위치 &lt;var&gt;pos&lt;/var&gt; 에 대한 위치 목록을 반환합니다 . &lt;var&gt;pos&lt;/var&gt; 는 기본적으로 &lt;var&gt;window&lt;/var&gt; 을 가리 킵니다 . &lt;var&gt;window&lt;/var&gt; 기본값은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="3c56570281b7c2efbcfcb2aeb7ac74d4c7f717cb" translate="yes" xml:space="preserve">
          <source>This function returns a pseudo-random integer. Repeated calls return a series of pseudo-random integers.</source>
          <target state="translated">이 함수는 의사 난수 정수를 반환합니다. 반복 호출은 일련의 의사 난수 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="759fc0706bb9eac67a116766d74096d40847a37f" translate="yes" xml:space="preserve">
          <source>This function returns a regular expression matching a character in the list of characters &lt;var&gt;chars&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;chars&lt;/var&gt; 문자 목록의 문자와 일치하는 정규 표현식을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9b9f51013607f0a85d2e22cd22814dd75586068a" translate="yes" xml:space="preserve">
          <source>This function returns a regular expression whose only exact match is &lt;var&gt;string&lt;/var&gt;. Using this regular expression in &lt;code&gt;looking-at&lt;/code&gt; will succeed only if the next characters in the buffer are &lt;var&gt;string&lt;/var&gt;; using it in a search function will succeed if the text being searched contains &lt;var&gt;string&lt;/var&gt;. See &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;.</source>
          <target state="translated">이 함수는 정확히 일치하는 항목이 &lt;var&gt;string&lt;/var&gt; 인 정규식을 반환 합니다 . 이 정규 표현식을 사용하여 &lt;code&gt;looking-at&lt;/code&gt; 버퍼에서 다음 문자가있는 경우에만 성공 &lt;var&gt;string&lt;/var&gt; ; 검색되는 텍스트에 &lt;var&gt;string&lt;/var&gt; 이 포함되어 있으면 검색 기능에서 사용하면 성공 합니다 . &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp 검색을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a46f4ba295c5e4ef0a168fe080fb496124ffc86a" translate="yes" xml:space="preserve">
          <source>This function returns a sequence of type &lt;var&gt;type&lt;/var&gt; made of the concatenation of &lt;var&gt;sequences&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; may be: &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">이 기능은 타입의 순서를 반환 &lt;var&gt;type&lt;/var&gt; 의 연결로 만들어진 &lt;var&gt;sequences&lt;/var&gt; . &lt;var&gt;type&lt;/var&gt; 은 &lt;code&gt;vector&lt;/code&gt; , &lt;code&gt;list&lt;/code&gt; 또는 &lt;code&gt;string&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="970f44cbfc9e0f5ee7e45da156231bdf87e76a13" translate="yes" xml:space="preserve">
          <source>This function returns a string consisting of the characters in the arguments passed to it (along with their text properties, if any). The arguments may be strings, lists of numbers, or vectors of numbers; they are not themselves changed. If &lt;code&gt;concat&lt;/code&gt; receives no arguments, it returns an empty string.</source>
          <target state="translated">이 함수는 전달 된 인수의 문자로 구성된 문자열을 반환합니다 (있는 경우 해당 텍스트 속성과 함께). 인수는 문자열, 숫자 목록 또는 숫자 벡터 일 수 있습니다. 그들 자신은 변하지 않습니다. 경우 &lt;code&gt;concat&lt;/code&gt; 인수를 수신하지, 그것은 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0184c0f2b962177205aec154fa9def622045be1c" translate="yes" xml:space="preserve">
          <source>This function returns a string consisting of the printed base-ten representation of &lt;var&gt;number&lt;/var&gt;. The returned value starts with a minus sign if the argument is negative.</source>
          <target state="translated">이 함수는 &lt;var&gt;number&lt;/var&gt; 의 인쇄 된 10 진수 표현으로 구성된 문자열을 반환합니다 . 인수가 음수이면 반환 된 값은 빼기 기호로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="6ae4b511449470b38bd88321d62c6c83e451c5cc" translate="yes" xml:space="preserve">
          <source>This function returns a string containing a copy of the text of the region defined by positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer. If the arguments are not positions in the accessible portion of the buffer, &lt;code&gt;buffer-substring&lt;/code&gt; signals an &lt;code&gt;args-out-of-range&lt;/code&gt; error.</source>
          <target state="translated">이 함수는 현재 버퍼에서 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 위치로 정의 된 영역의 텍스트 복사본을 포함하는 문자열을 반환합니다 . 인수가 버퍼의 액세스 가능한 부분의 위치가 아닌 경우 &lt;code&gt;buffer-substring&lt;/code&gt; 은 &lt;code&gt;args-out-of-range&lt;/code&gt; 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="96b61e3373be79ab74f238c1d86def0c3013feba" translate="yes" xml:space="preserve">
          <source>This function returns a string containing the Emacs standard notation for the input events in &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;prefix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a sequence of input events leading up to &lt;var&gt;sequence&lt;/var&gt; and is included in the return value. Both arguments may be strings, vectors or lists. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;, for more information about valid events.</source>
          <target state="translated">이 함수는 입력 이벤트에 대한 Emacs 표준 표기법이 포함 된 문자열을 &lt;var&gt;sequence&lt;/var&gt; 반환합니다 . 경우 &lt;var&gt;prefix&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; , 그것은 이어지는 입력 이벤트의 서열이다 &lt;var&gt;sequence&lt;/var&gt; 반환 값에 포함된다. 두 인수는 모두 문자열, 벡터 또는 목록 일 수 있습니다. 유효한 이벤트에 대한 자세한 내용은 &lt;a href=&quot;input-events#Input-Events&quot;&gt;입력 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64ae28a2441e036baf8d39bf44b681e539af4f85" translate="yes" xml:space="preserve">
          <source>This function returns a string containing the text that &lt;code&gt;prin1&lt;/code&gt; would have printed for the same argument.</source>
          <target state="translated">이 함수는 &lt;code&gt;prin1&lt;/code&gt; 이 동일한 인수에 대해 인쇄했을 텍스트가 포함 된 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="df7ea262425f6df1405c4cb3b9b8831733d7eb7d" translate="yes" xml:space="preserve">
          <source>This function returns a string describing &lt;var&gt;character&lt;/var&gt; in the standard Emacs notation for characters that can appear in text&amp;mdash;similar to &lt;code&gt;single-key-description&lt;/code&gt;, except that the argument must be a valid character code that passes a &lt;code&gt;characterp&lt;/code&gt; test (see &lt;a href=&quot;character-codes#Character-Codes&quot;&gt;Character Codes&lt;/a&gt;). The function produces descriptions of control characters with a leading caret (which is how Emacs usually displays control characters in buffers). Characters with modifier bits will cause this function to signal an error (</source>
          <target state="translated">이 함수는 텍스트에 나타날 수있는 &lt;var&gt;character&lt;/var&gt; 에 대한 표준 Emacs 표기법의 문자 를 설명하는 문자열을 반환 합니다. 인수가 &lt;code&gt;characterp&lt;/code&gt; 테스트 를 통과하는 유효한 문자 코드 여야한다는 점을 제외하고는 &lt;code&gt;single-key-description&lt;/code&gt; 과 유사 합니다 ( &lt;a href=&quot;character-codes#Character-Codes&quot;&gt;문자 코드&lt;/a&gt; 참조 ). 이 함수는 선행 캐럿 (Emacs가 일반적으로 버퍼에 제어 문자를 표시하는 방식)으로 제어 문자에 대한 설명을 생성합니다. 수정 자 비트가있는 문자로 인해이 함수가 오류 신호를 보냅니다 (</target>
        </trans-unit>
        <trans-unit id="925de6aa4ae2691a3389dcff76193993b3b4d6ea" translate="yes" xml:space="preserve">
          <source>This function returns a string describing &lt;var&gt;event&lt;/var&gt; in the standard Emacs notation for keyboard input. A normal printing character appears as itself, but a control character turns into a string starting with &amp;lsquo;</source>
          <target state="translated">이 함수는 키보드 입력에 대한 표준 Emacs 표기법으로 &lt;var&gt;event&lt;/var&gt; 를 설명하는 문자열을 반환합니다 . 일반 인쇄 문자는 그 자체로 나타나지만 제어 문자는 '로 시작하는 문자열로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="e1ae822258c47dccc33385218ca9c90ad60f9fd3" translate="yes" xml:space="preserve">
          <source>This function returns a string describing the version of Emacs that is running. It is useful to include this string in bug reports.</source>
          <target state="translated">이 함수는 실행중인 Emacs의 버전을 설명하는 문자열을 반환합니다. 이 문자열을 버그 보고서에 포함하는 것이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d6a58c23f794afd166d91f838cdae85043eb7528" translate="yes" xml:space="preserve">
          <source>This function returns a string equal to &lt;var&gt;string&lt;/var&gt;, replacing any format specifications with encodings of the corresponding &lt;var&gt;objects&lt;/var&gt;. The arguments &lt;var&gt;objects&lt;/var&gt; are the computed values to be formatted.</source>
          <target state="translated">이 함수가 리턴하는 문자열과 동일한 &lt;var&gt;string&lt;/var&gt; 대응의 어떤 인코딩 포맷 사양을 대체 &lt;var&gt;objects&lt;/var&gt; . 인수 &lt;var&gt;objects&lt;/var&gt; 는 형식을 지정할 계산 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="2ac349769bab94e1576989333edf179c0599d72c" translate="yes" xml:space="preserve">
          <source>This function returns a string made up of &lt;var&gt;count&lt;/var&gt; repetitions of &lt;var&gt;character&lt;/var&gt;. If &lt;var&gt;count&lt;/var&gt; is negative, an error is signaled.</source>
          <target state="translated">이 함수는 &lt;var&gt;character&lt;/var&gt; 반복 &lt;var&gt;count&lt;/var&gt; 로 구성된 문자열을 반환합니다 . 경우 &lt;var&gt;count&lt;/var&gt; 부의 경우, 오류가 신호됩니다.</target>
        </trans-unit>
        <trans-unit id="08200ebc3bb0117a3be3ae9d9661fb425f7b4747" translate="yes" xml:space="preserve">
          <source>This function returns a string or vector containing the key sequence that invoked the present command, plus any previous commands that generated the prefix argument for this command. Any events read by the command using &lt;code&gt;read-event&lt;/code&gt; without a timeout get tacked on to the end.</source>
          <target state="translated">이 함수는 현재 명령을 호출 한 키 시퀀스와이 명령의 접두사 인수를 생성 한 이전 명령을 포함하는 문자열 또는 벡터를 반환합니다. 시간 초과없이 &lt;code&gt;read-event&lt;/code&gt; 를 사용하여 명령에서 읽은 모든 이벤트 는 끝까지 고정됩니다.</target>
        </trans-unit>
        <trans-unit id="cddb518d200c0940a82717c64820894041ae40bf" translate="yes" xml:space="preserve">
          <source>This function returns a string produced from the format string &lt;var&gt;template&lt;/var&gt; according to conversions specified in &lt;var&gt;spec-alist&lt;/var&gt;, which is an alist (see &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;) of the form &lt;code&gt;(&lt;var&gt;letter&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;replacement&lt;/var&gt;)&lt;/code&gt;. Each specification &lt;code&gt;%&lt;var&gt;letter&lt;/var&gt;&lt;/code&gt; in &lt;var&gt;template&lt;/var&gt; will be replaced by &lt;var&gt;replacement&lt;/var&gt; when formatting the resulting string.</source>
          <target state="translated">이 함수는 &lt;var&gt;spec-alist&lt;/var&gt; 에 지정된 변환에 따라 형식 문자열 &lt;var&gt;template&lt;/var&gt; 에서 생성 된 문자열을 반환합니다 . 이는 &lt;code&gt;(&lt;var&gt;letter&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;replacement&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;letter&lt;/var&gt; &amp;nbsp;.&amp;nbsp; &lt;var&gt;replacement&lt;/var&gt; ) 형식의 &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;목록&lt;/a&gt; ( 연결 목록 참조 ) 입니다. 각 사양 &lt;code&gt;%&lt;var&gt;letter&lt;/var&gt;&lt;/code&gt; &lt;var&gt;letter&lt;/var&gt; 에서 &lt;var&gt;template&lt;/var&gt; 으로 대체됩니다 &lt;var&gt;replacement&lt;/var&gt; 결과 문자열을 포맷 할 때.</target>
        </trans-unit>
        <trans-unit id="c4dd16068046b47fe84705f033cd106e0577ecd8" translate="yes" xml:space="preserve">
          <source>This function returns a string representing &lt;var&gt;dirname&lt;/var&gt; in a form that the operating system will interpret as the name of a file (a directory file name). On most systems, this means removing the final directory separators from the string, unless the string consists entirely of directory separators.</source>
          <target state="translated">이 함수는 운영 체제가 파일 이름 (디렉토리 파일 이름)으로 해석하는 형식으로 &lt;var&gt;dirname&lt;/var&gt; 을 나타내는 문자열을 반환합니다 . 대부분의 시스템에서 이것은 문자열이 디렉토리 구분자로만 구성되지 않는 한 문자열에서 최종 디렉토리 구분자를 제거하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ac6d324ce6571f8907ce83b4c6a1840a0b47d08d" translate="yes" xml:space="preserve">
          <source>This function returns a string representing &lt;var&gt;filename&lt;/var&gt; in a form that the operating system will interpret as the name of a directory (a directory name). On most systems, this means appending a slash to the string (if it does not already end in one).</source>
          <target state="translated">이 함수는 운영 체제가 디렉토리 이름 (디렉토리 이름)으로 해석하는 형식으로 &lt;var&gt;filename&lt;/var&gt; 을 나타내는 문자열을 반환합니다 . 대부분의 시스템에서 이것은 문자열에 슬래시를 추가하는 것을 의미합니다 (아직 하나로 끝나지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="a240ea8860f8a04dc69164c9d79ed71721341812" translate="yes" xml:space="preserve">
          <source>This function returns a string representing the Emacs &lt;em&gt;uptime&lt;/em&gt;&amp;mdash;the elapsed wall-clock time this instance of Emacs is running. The string is formatted by &lt;code&gt;format-seconds&lt;/code&gt; according to the optional argument &lt;var&gt;format&lt;/var&gt;. For the available format descriptors, see &lt;a href=&quot;time-parsing#Time-Parsing&quot;&gt;format-seconds&lt;/a&gt;. If &lt;var&gt;format&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, it defaults to &lt;code&gt;&quot;%Y, %D, %H, %M,
%z%S&quot;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 Emacs &lt;em&gt;가동&lt;/em&gt; 시간 (이 Emacs 인스턴스가 실행되고있는 벽시계 경과 &lt;em&gt;시간)을&lt;/em&gt; 나타내는 문자열을 반환합니다 . 문자열은 선택적 인수 &lt;var&gt;format&lt;/var&gt; 에 따라 &lt;code&gt;format-seconds&lt;/code&gt; 형식으로 지정됩니다 . 사용 가능한 형식 설명자는 &lt;a href=&quot;time-parsing#Time-Parsing&quot;&gt;format-seconds를&lt;/a&gt; 참조하십시오 . 경우 &lt;var&gt;format&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; 로 기본값, 또는 생략 &lt;code&gt;&quot;%Y, %D, %H, %M, %z%S&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42f6fca8593a74ad52159eb1b774648dac497e41" translate="yes" xml:space="preserve">
          <source>This function returns a string that is the name to use for a non-numbered backup file for file &lt;var&gt;filename&lt;/var&gt;. On Unix, this is just &lt;var&gt;filename&lt;/var&gt; with a tilde appended.</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 파일에 대해 번호가 지정되지 않은 백업 파일에 사용할 이름 인 문자열을 반환합니다 . Unix에서는 물결표가 추가 된 &lt;var&gt;filename&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2770872a5d2cbcf9576cf51c3306ec38fa18549e" translate="yes" xml:space="preserve">
          <source>This function returns a string that represents, in shell syntax, an argument whose actual contents are &lt;var&gt;argument&lt;/var&gt;. It should work reliably to concatenate the return value into a shell command and then pass it to a shell for execution.</source>
          <target state="translated">이 함수는 실제 내용이 &lt;var&gt;argument&lt;/var&gt; 인 인수를 쉘 구문에서 나타내는 문자열을 리턴합니다 . 반환 값을 셸 명령에 연결 한 다음 실행을 위해 셸에 전달하는 것이 안정적으로 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="273c6a3f1c307aba5dfedc3db7ed1d4776cb9a03" translate="yes" xml:space="preserve">
          <source>This function returns a subset of &lt;var&gt;sequence&lt;/var&gt; from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;, both integers (&lt;var&gt;end&lt;/var&gt; defaults to the last element). If &lt;var&gt;start&lt;/var&gt; or &lt;var&gt;end&lt;/var&gt; is negative, it counts from the end of &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">이 기능의 일부를 반환 &lt;var&gt;sequence&lt;/var&gt; 에서 &lt;var&gt;start&lt;/var&gt; 에 &lt;var&gt;end&lt;/var&gt; , 모두 정수 ( &lt;var&gt;end&lt;/var&gt; 마지막 요소에 기본값). 경우 &lt;var&gt;start&lt;/var&gt; 또는 &lt;var&gt;end&lt;/var&gt; 음, 그것의 끝에서 계산 &lt;var&gt;sequence&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="44368fa6e52e45720ab82e1c9ad5ad70b5c2ec8c" translate="yes" xml:space="preserve">
          <source>This function returns a suitable coding system for file &lt;var&gt;filename&lt;/var&gt;. It uses &lt;code&gt;find-auto-coding&lt;/code&gt; to find the coding system. If no coding system could be determined, the function returns &lt;code&gt;nil&lt;/code&gt;. The meaning of the argument &lt;var&gt;size&lt;/var&gt; is like in &lt;code&gt;find-auto-coding&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 파일에 적합한 코딩 시스템을 반환합니다 . 그것은 사용 &lt;code&gt;find-auto-coding&lt;/code&gt; 코딩 시스템을 찾을 수 있습니다. 코딩 시스템을 결정할 수없는 경우 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 인수의 의미 &lt;var&gt;size&lt;/var&gt; 에서처럼 &lt;code&gt;find-auto-coding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d29bef58b86d34d1bd163f30c47e824b9af9634" translate="yes" xml:space="preserve">
          <source>This function returns a suitable search path for images used by the Lisp package &lt;var&gt;library&lt;/var&gt;.</source>
          <target state="translated">이 함수는 Lisp 패키지 &lt;var&gt;library&lt;/var&gt; 에서 사용하는 이미지에 대한 적절한 검색 경로를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7063bb301499aa8bfa63acd381392672a7260935" translate="yes" xml:space="preserve">
          <source>This function returns a symbol naming the primitive type of &lt;var&gt;object&lt;/var&gt;. The value is one of the symbols &lt;code&gt;bool-vector&lt;/code&gt;, &lt;code&gt;buffer&lt;/code&gt;, &lt;code&gt;char-table&lt;/code&gt;, &lt;code&gt;compiled-function&lt;/code&gt;, &lt;code&gt;condition-variable&lt;/code&gt;, &lt;code&gt;cons&lt;/code&gt;, &lt;code&gt;finalizer&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;font-entity&lt;/code&gt;, &lt;code&gt;font-object&lt;/code&gt;, &lt;code&gt;font-spec&lt;/code&gt;, &lt;code&gt;frame&lt;/code&gt;, &lt;code&gt;hash-table&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;marker&lt;/code&gt;, &lt;code&gt;mutex&lt;/code&gt;, &lt;code&gt;overlay&lt;/code&gt;, &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;subr&lt;/code&gt;, &lt;code&gt;symbol&lt;/code&gt;, &lt;code&gt;thread&lt;/code&gt;, &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;window&lt;/code&gt;, or &lt;code&gt;window-configuration&lt;/code&gt;. However, if &lt;var&gt;object&lt;/var&gt; is a record, the type specified by its first slot is returned; &lt;a href=&quot;records#Records&quot;&gt;Records&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 의 기본 유형을 명명하는 기호를 반환 합니다 . 값은 &lt;code&gt;bool-vector&lt;/code&gt; , &lt;code&gt;buffer&lt;/code&gt; , &lt;code&gt;char-table&lt;/code&gt; , &lt;code&gt;compiled-function&lt;/code&gt; , &lt;code&gt;condition-variable&lt;/code&gt; , &lt;code&gt;cons&lt;/code&gt; , &lt;code&gt;finalizer&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;font-entity&lt;/code&gt; , &lt;code&gt;font-object&lt;/code&gt; , &lt;code&gt;font-spec&lt;/code&gt; , &lt;code&gt;frame&lt;/code&gt; , &lt;code&gt;hash-table&lt;/code&gt; , &lt;code&gt;integer&lt;/code&gt; 기호 중 하나입니다. , &lt;code&gt;marker&lt;/code&gt; , &lt;code&gt;mutex&lt;/code&gt; , &lt;code&gt;overlay&lt;/code&gt; , &lt;code&gt;process&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; , &lt;code&gt;subr&lt;/code&gt; , &lt;code&gt;symbol&lt;/code&gt; , &lt;code&gt;thread&lt;/code&gt; , &lt;code&gt;vector&lt;/code&gt; , &lt;code&gt;window&lt;/code&gt; 또는 &lt;code&gt;window-configuration&lt;/code&gt; . 그러나 &lt;var&gt;object&lt;/var&gt; 가 레코드이면 첫 번째 슬롯에 지정된 유형이 반환됩니다. &lt;a href=&quot;records#Records&quot;&gt;기록&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94becbae5ab04354e82f37b34cff5e832a237fc9" translate="yes" xml:space="preserve">
          <source>This function returns a symbol using &lt;code&gt;make-symbol&lt;/code&gt;, whose name is made by appending &lt;code&gt;gensym-counter&lt;/code&gt; to &lt;var&gt;prefix&lt;/var&gt;. The prefix defaults to &lt;code&gt;&quot;g&quot;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;gensym-counter&lt;/code&gt; 를 &lt;var&gt;prefix&lt;/var&gt; 에 추가하여 이름을 만든 &lt;code&gt;make-symbol&lt;/code&gt; symbol을 사용하여 기호를 반환 합니다 . 접두사는 기본적으로 &lt;code&gt;&quot;g&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d12671d99ca723ab7b84be0c58aaa976a89a9d9" translate="yes" xml:space="preserve">
          <source>This function returns a symbol whose name tells what window system is used for displaying &lt;var&gt;frame&lt;/var&gt; (which defaults to the currently selected frame). The list of possible symbols it returns is the same one documented for the variable &lt;code&gt;window-system&lt;/code&gt; above.</source>
          <target state="translated">이 함수는 이름이 &lt;var&gt;frame&lt;/var&gt; 을 표시하는 데 사용되는 윈도우 시스템 (기본값은 현재 선택된 프레임)을 나타내는 심볼을 반환합니다 . 반환 할 수있는 기호 목록은 위 의 변수 &lt;code&gt;window-system&lt;/code&gt; 대해 문서화 된 것과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="c5715c93d9a70b4dd0aa0624f375f2dff96d825f" translate="yes" xml:space="preserve">
          <source>This function returns a terminal whose device name is given by &lt;var&gt;device&lt;/var&gt;. If &lt;var&gt;device&lt;/var&gt; is a string, it can be either the file name of a terminal device, or the name of an X display of the form &amp;lsquo;</source>
          <target state="translated">이 기능은 그 장치 이름 주어진다 단말기 반환 &lt;var&gt;device&lt;/var&gt; . 경우 &lt;var&gt;device&lt;/var&gt; 문자열이고, 그 단말 장치의 파일 이름, 또는 형태 '의 X 표시의 이름이 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="47062b73691a0d576711088c72d57db267ec8e48" translate="yes" xml:space="preserve">
          <source>This function returns a translation table based on the argument &lt;var&gt;translations&lt;/var&gt;. Each element of &lt;var&gt;translations&lt;/var&gt; should be a list of elements of the form &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;; this says to translate the character &lt;var&gt;from&lt;/var&gt; into &lt;var&gt;to&lt;/var&gt;.</source>
          <target state="translated">이 함수는 인수를 기반으로 변환 표를 반환 &lt;var&gt;translations&lt;/var&gt; . &lt;var&gt;translations&lt;/var&gt; 각 요소는 형식의 요소 목록이어야합니다 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; . 이 문자를 번역 말했다 &lt;var&gt;from&lt;/var&gt; 에 &lt;var&gt;to&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="e5f190a9d85b3cebe443f112ea70c521f9e0dae2" translate="yes" xml:space="preserve">
          <source>This function returns a translation table made from &lt;var&gt;vec&lt;/var&gt; that is an array of 256 elements to map bytes (values 0 through #xFF) to characters. Elements may be &lt;code&gt;nil&lt;/code&gt; for untranslated bytes. The returned table has a translation table for reverse mapping in the first extra slot, and the value &lt;code&gt;1&lt;/code&gt; in the second extra slot.</source>
          <target state="translated">이 함수는 256 개 요소의 배열 인 &lt;var&gt;vec&lt;/var&gt; 에서 만든 변환 테이블을 반환하여 바이트 (값 0 ~ #xFF)를 문자에 매핑합니다. 번역되지 않은 바이트의 경우 요소가 &lt;code&gt;nil&lt;/code&gt; 일 수 있습니다 . 반환 된 테이블에는 첫 번째 추가 슬롯에 역 매핑을위한 변환 테이블 이 있고 두 번째 추가 슬롯에 값 &lt;code&gt;1&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac8aec7b8332a3a20008ac9db71aa699eb44ebb4" translate="yes" xml:space="preserve">
          <source>This function returns a two-level deep copy of &lt;var&gt;alist&lt;/var&gt;: it creates a new copy of each association, so that you can alter the associations of the new alist without changing the old one.</source>
          <target state="translated">이 함수는 &lt;var&gt;alist&lt;/var&gt; 의 2 단계 깊은 복사본을 반환합니다 . 각 연결의 새 복사본을 생성하므로 이전 목록을 변경하지 않고 새 목록의 연결을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70a4b137c0022a55425921ca1dbd9e2ae73f218d" translate="yes" xml:space="preserve">
          <source>This function returns a unibyte string containing a single byte of character data, &lt;var&gt;byte&lt;/var&gt;. It signals an error if &lt;var&gt;byte&lt;/var&gt; is not an integer between 0 and 255.</source>
          <target state="translated">이 기능은 문자 데이터의 단일 바이트 포함하는 unibyte 문자열 반환 &lt;var&gt;byte&lt;/var&gt; . &lt;var&gt;byte&lt;/var&gt; 가 0에서 255 사이의 정수가 아닌 경우 오류 신호를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="a91a028df0d1ad9f5bce49c97ff788649196255b" translate="yes" xml:space="preserve">
          <source>This function returns a unibyte string containing the same sequence of characters as &lt;var&gt;string&lt;/var&gt;. It signals an error if &lt;var&gt;string&lt;/var&gt; contains a non-</source>
          <target state="translated">이 함수는 string과 동일한 문자 시퀀스를 포함하는 유니 바이트 문자열을 반환 &lt;var&gt;string&lt;/var&gt; . 경우에 오류 신호를 &lt;var&gt;string&lt;/var&gt; 비 포함</target>
        </trans-unit>
        <trans-unit id="3c5c34e41e05a3af93f6773c80990795f106b330" translate="yes" xml:space="preserve">
          <source>This function returns a value that describes what &lt;var&gt;color&lt;/var&gt; should ideally look like on &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;color&lt;/var&gt; is defined, the value is a list of three integers, which give the amount of red, the amount of green, and the amount of blue. Each integer ranges in principle from 0 to 65535, but some displays may not use the full range. This three-element list is called the &lt;em&gt;rgb values&lt;/em&gt; of the color.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 에서 이상적으로 보이는 &lt;var&gt;color&lt;/var&gt; 을 설명하는 값을 반환합니다 . &lt;var&gt;color&lt;/var&gt; 이 정의 된 경우 값은 빨간색의 양, 녹색의 양, 파란색의 양을 나타내는 세 개의 정수 목록입니다. 각 정수의 범위는 원칙적으로 0 ~ 65535이지만 일부 디스플레이는 전체 범위를 사용하지 않을 수 있습니다. 이 3 개 요소 목록을 색상 의 &lt;em&gt;rgb 값&lt;/em&gt; 이라고합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6ddca92148068bf6e13c214d59e7f3770b42f94" translate="yes" xml:space="preserve">
          <source>This function returns a vector containing the last 300 input events from the keyboard or mouse. All input events are included, whether or not they were used as parts of key sequences. Thus, you always get the last 300 input events, not counting events generated by keyboard macros. (These are excluded because they are less interesting for debugging; it should be enough to see the events that invoked the macros.)</source>
          <target state="translated">이 함수는 키보드 또는 마우스의 마지막 300 개의 입력 이벤트를 포함하는 벡터를 반환합니다. 키 시퀀스의 일부로 사용되었는지 여부에 관계없이 모든 입력 이벤트가 포함됩니다. 따라서 키보드 매크로에 의해 생성 된 이벤트를 계산하지 않고 항상 마지막 300 개의 입력 이벤트를 가져옵니다. (디버깅에 덜 흥미 롭기 때문에 제외됩니다. 매크로를 호출 한 이벤트를보기에 충분해야합니다.)</target>
        </trans-unit>
        <trans-unit id="baaced068460db6364994bcbf6203ae76b23f796" translate="yes" xml:space="preserve">
          <source>This function returns all but the first &lt;var&gt;n&lt;/var&gt; (an integer) elements of &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;n&lt;/var&gt; is negative or zero, the result is &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence&lt;/var&gt; 의 처음 &lt;var&gt;n&lt;/var&gt; (정수) 요소를 제외한 모든 요소를 반환합니다 . 경우 &lt;var&gt;n&lt;/var&gt; 은 마이너스 또는 제로의 결과는 &lt;var&gt;sequence&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="bf2c05eb97070f160135ec9e2b3f0c89b07433ee" translate="yes" xml:space="preserve">
          <source>This function returns all parameters of &lt;var&gt;window&lt;/var&gt; and their values. The default for &lt;var&gt;window&lt;/var&gt; is the selected window. The return value is either &lt;code&gt;nil&lt;/code&gt;, or an association list whose elements have the form &lt;code&gt;(&lt;var&gt;parameter&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 모든 매개 변수 와 그 값을 반환 합니다. &lt;var&gt;window&lt;/var&gt; 기본값 은 선택한 창입니다. 반환 값은 &lt;code&gt;nil&lt;/code&gt; 이거나 요소가 &lt;code&gt;(&lt;var&gt;parameter&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 형식을 갖는 연관 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="b6f25a4088d641311424e0b833052aed20b43bf2" translate="yes" xml:space="preserve">
          <source>This function returns an &lt;em&gt;SVG object&lt;/em&gt;, a Lisp data structure that specifies an SVG image, and all the following functions work on that structure. The argument &lt;var&gt;svg&lt;/var&gt; in the following functions specifies such an SVG object.</source>
          <target state="translated">이 함수는 &lt;em&gt;SVG 객체&lt;/em&gt; , SVG 이미지를 지정하는 Lisp 데이터 구조를 반환하며 다음 모든 함수는 해당 구조에서 작동합니다. 다음 함수에서 &lt;var&gt;svg&lt;/var&gt; 인수 는 이러한 SVG 객체를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c2f7e15f8dc6d8ad842fd7a24cf6e39e51bec4b1" translate="yes" xml:space="preserve">
          <source>This function returns an MD5 hash. It is semi-obsolete, since for most purposes it is equivalent to calling &lt;code&gt;secure-hash&lt;/code&gt; with &lt;code&gt;md5&lt;/code&gt; as the &lt;var&gt;algorithm&lt;/var&gt; argument. The &lt;var&gt;object&lt;/var&gt;, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; arguments have the same meanings as in &lt;code&gt;secure-hash&lt;/code&gt;.</source>
          <target state="translated">이 함수는 MD5 해시를 반환합니다. 대부분의 경우 &lt;var&gt;algorithm&lt;/var&gt; 인수 로 &lt;code&gt;md5&lt;/code&gt; 를 사용하여 &lt;code&gt;secure-hash&lt;/code&gt; 를 호출하는 것과 동일하므로 반 구식 입니다. &lt;var&gt;object&lt;/var&gt; , &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 인수와 같은 의미를 가진다 &lt;code&gt;secure-hash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b62560d4c1d2a703179e8ff3d14bb5d35bb2637d" translate="yes" xml:space="preserve">
          <source>This function returns an abbreviated form of &lt;var&gt;filename&lt;/var&gt;. It applies the abbreviations specified in &lt;code&gt;directory-abbrev-alist&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Aliases.html#File-Aliases&quot;&gt;File Aliases&lt;/a&gt; in</source>
          <target state="translated">이 함수는 축약 된 형식의 &lt;var&gt;filename&lt;/var&gt; 을 반환합니다 . &lt;code&gt;directory-abbrev-alist&lt;/code&gt; 에 지정된 약어를 ​​적용합니다 ( &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Aliases.html#File-Aliases&quot;&gt;파일 별칭&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="362286e36f79e8d7165389e891566d4fc1b235b6" translate="yes" xml:space="preserve">
          <source>This function returns an abbreviated form of &lt;var&gt;filename&lt;/var&gt;. It applies the abbreviations specified in &lt;code&gt;directory-abbrev-alist&lt;/code&gt; (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/File-Aliases.html#File-Aliases&quot;&gt;File Aliases&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0881c663ee0b7b059964b6e1a563481c8a4100db" translate="yes" xml:space="preserve">
          <source>This function returns an absolute file name for an Emacs-specific configuration or data file. The argument</source>
          <target state="translated">이 함수는 Emacs 특정 구성 또는 데이터 파일에 대한 절대 파일 이름을 반환합니다. 논쟁 거리</target>
        </trans-unit>
        <trans-unit id="3fe408025df2b203941f939fbb71a9d593cb6940" translate="yes" xml:space="preserve">
          <source>This function returns an alist listing all the parameters of &lt;var&gt;terminal&lt;/var&gt; and their values.</source>
          <target state="translated">이 함수는 &lt;var&gt;terminal&lt;/var&gt; 모든 매개 변수 와 해당 값을 나열하는 목록을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1e12959799cfad19f10471e4762b1634fd72e77c" translate="yes" xml:space="preserve">
          <source>This function returns an alist of attributes for the process specified by its process ID &lt;var&gt;pid&lt;/var&gt;. Each association in the alist is of the form &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;key&lt;/var&gt; designates the attribute and &lt;var&gt;value&lt;/var&gt; is the value of that attribute. The various attribute &lt;var&gt;key&lt;/var&gt;s that this function can return are listed below. Not all platforms support all of these attributes; if an attribute is not supported, its association will not appear in the returned alist.</source>
          <target state="translated">이 함수는 프로세스 ID &lt;var&gt;pid&lt;/var&gt; 로 지정된 프로세스에 대한 속성 목록을 반환합니다 . alist의 각 연관은 &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 이며, 여기서 &lt;var&gt;key&lt;/var&gt; 는 속성을 지정하고 &lt;var&gt;value&lt;/var&gt; 는 해당 속성의 값입니다. 이 함수가 반환 할 수 있는 다양한 속성 &lt;var&gt;key&lt;/var&gt; 는 다음과 같습니다. 모든 플랫폼이 이러한 속성을 모두 지원하는 것은 아닙니다. 속성이 지원되지 않는 경우 해당 연관은 반환 된 목록에 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="296078e45cee4f262e0246e6e34ca035a358f16f" translate="yes" xml:space="preserve">
          <source>This function returns an alist of attributes of &lt;var&gt;face&lt;/var&gt;. The elements of the result are name-value pairs of the form &lt;code&gt;(&lt;var&gt;attr-name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;attr-value&lt;/var&gt;)&lt;/code&gt;. Optional argument &lt;var&gt;frame&lt;/var&gt; specifies the frame whose definition of &lt;var&gt;face&lt;/var&gt; to return; if omitted or &lt;code&gt;nil&lt;/code&gt;, the returned value describes the default attributes of &lt;var&gt;face&lt;/var&gt; for newly created frames.</source>
          <target state="translated">이 함수는 &lt;var&gt;face&lt;/var&gt; 속성 목록을 반환합니다 . 결과의 요소는 &lt;code&gt;(&lt;var&gt;attr-name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;attr-value&lt;/var&gt;)&lt;/code&gt; 형식의 이름-값 쌍입니다 . 선택적인 인수 &lt;var&gt;frame&lt;/var&gt; 은 반환 할 &lt;var&gt;face&lt;/var&gt; 의 정의가있는 프레임을 지정합니다 . 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 반환 된 값은 새로 생성 된 프레임에 대한 &lt;var&gt;face&lt;/var&gt; 의 기본 속성을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="5d65d05478cd30ffe0b39b4dda7003dd3f37991a" translate="yes" xml:space="preserve">
          <source>This function returns an alist of the Emacs-recognized extended attributes of file &lt;var&gt;filename&lt;/var&gt;. Currently, it serves as a convenient way to retrieve both the ACL and SELinux context; you can then call the function &lt;code&gt;set-file-extended-attributes&lt;/code&gt;, with the returned alist as its second argument, to apply the same file access attributes to another file (see &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 파일의 Emacs 인식 확장 속성 목록을 반환합니다 . 현재는 ACL과 SELinux 컨텍스트를 모두 검색하는 편리한 방법으로 사용됩니다. 그런 다음 반환 된 alist를 두 번째 인수로 사용하여 &lt;code&gt;set-file-extended-attributes&lt;/code&gt; 함수를 호출하여 동일한 파일 액세스 속성을 다른 파일에 적용 할 수 있습니다 ( &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;파일 변경&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="145011402d96a3120894f8e5abe9aee28ab1acb4" translate="yes" xml:space="preserve">
          <source>This function returns an alist recording the known colors supported by a text terminal.</source>
          <target state="translated">이 함수는 텍스트 터미널에서 지원하는 알려진 색상을 기록한 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1cdc699f67b9a7451c27e7964427e22b16e4e51f" translate="yes" xml:space="preserve">
          <source>This function returns an efficient regular expression that will match any of the strings in the list &lt;var&gt;strings&lt;/var&gt;. This is useful when you need to make matching or searching as fast as possible&amp;mdash;for example, for Font Lock mode&lt;a href=&quot;#FOOT20&quot; name=&quot;DOCF20&quot;&gt;&lt;sup&gt;20&lt;/sup&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 목록 &lt;var&gt;strings&lt;/var&gt; 의 문자열과 일치하는 효율적인 정규식을 반환합니다 . 이는 가능한 한 빨리 일치 시키거나 검색해야 할 때 유용합니다 (예 : 글꼴 잠금 모드 &lt;a href=&quot;#FOOT20&quot; name=&quot;DOCF20&quot;&gt;&lt;sup&gt;20)&lt;/sup&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="341e53c8233df1976607629ff9276e436bd7caa2" translate="yes" xml:space="preserve">
          <source>This function returns an element of &lt;var&gt;sequence&lt;/var&gt; taken at random.</source>
          <target state="translated">이 함수는 무작위로 가져온 &lt;var&gt;sequence&lt;/var&gt; 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f6b03cb7837e092d624067308c8ebc0efa948eb1" translate="yes" xml:space="preserve">
          <source>This function returns an estimate of the total amount of bytes of virtual memory that Emacs is currently using, divided by 1024. You can use this to get a general idea of how your actions affect the memory usage.</source>
          <target state="translated">이 함수는 Emacs가 현재 사용하고있는 가상 메모리의 총 바이트 양을 1024로 나눈 추정치를 반환합니다.이를 사용하여 작업이 메모리 사용에 어떻게 영향을 미치는지에 대한 일반적인 아이디어를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abb2d0b1e9e7dcc71fb654b20b5c81d59fac7a57" translate="yes" xml:space="preserve">
          <source>This function returns an interned Emacs symbol whose name is &lt;var&gt;name&lt;/var&gt;, which should be an</source>
          <target state="translated">이 함수는 이름이 &lt;var&gt;name&lt;/var&gt; 인 내부 Emacs 심볼을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="de062cb2cab858e994bee9b7b2e76e5e8bd8bd1d" translate="yes" xml:space="preserve">
          <source>This function returns either the total height in lines or the total width in columns of the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;horizontal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, this is equivalent to calling &lt;code&gt;window-total-height&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;; otherwise it is equivalent to calling &lt;code&gt;window-total-width&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;round&lt;/var&gt; behaves as it does for &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 총 높이 (줄) 또는 총 너비 (열)를 반환합니다 . 경우에 &lt;var&gt;horizontal&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; ,이 호출하는 것과 &lt;code&gt;window-total-height&lt;/code&gt; 에 대한 &lt;var&gt;window&lt;/var&gt; ; 그렇지 않으면 호출하는 것과 같습니다 &lt;code&gt;window-total-width&lt;/code&gt; 위한 &lt;var&gt;window&lt;/var&gt; . 선택적인 인자 &lt;var&gt;round&lt;/var&gt; 는 &lt;code&gt;window-total-height&lt;/code&gt; 와 같이 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="29e92bca8e4680c820b4d93070c113914610d7b8" translate="yes" xml:space="preserve">
          <source>This function returns face of glyph code &lt;var&gt;glyph&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;glyph&lt;/var&gt; uses the default face.</source>
          <target state="translated">이 함수가 반환 문자 모양 코드의 얼굴 &lt;var&gt;glyph&lt;/var&gt; , 또는 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;glyph&lt;/var&gt; 기본 얼굴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7b3f6a3ad1f01b0d2dac246891c2fabb32283012" translate="yes" xml:space="preserve">
          <source>This function returns geometric attributes of &lt;var&gt;frame&lt;/var&gt;. The return value is an association list of the attributes listed below. All coordinate, height and width values are integers counting pixels. Note that if &lt;var&gt;frame&lt;/var&gt; has not been mapped yet, (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;) some of the return values may only represent approximations of the actual values&amp;mdash;those that can be seen after the frame has been mapped.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 기하학적 속성을 반환합니다 . 반환 값은 아래 나열된 속성의 연결 목록입니다. 모든 좌표, 높이 및 너비 값은 픽셀을 세는 정수입니다. 만약 그 상태 &lt;var&gt;frame&lt;/var&gt; 아직 맵핑되지 않은 (참조 &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;프레임들의 가시성&lt;/a&gt; 반환 값의 일부는 실제 값-그 프레임이 맵핑 한 후 알 수있는 그것의 근사를 나타낼 수있다).</target>
        </trans-unit>
        <trans-unit id="5bcb0fba81f7b05c5aeb65d9e6a9c63608028c9f" translate="yes" xml:space="preserve">
          <source>This function returns information about a &lt;var&gt;font-object&lt;/var&gt;. (This is in contrast to &lt;code&gt;font-info&lt;/code&gt;, which takes the font name, a string, as its argument.)</source>
          <target state="translated">이 함수는 &lt;var&gt;font-object&lt;/var&gt; 에 대한 정보를 반환 합니다 . (이것은 글꼴 이름, 문자열을 인수로 사용하는 &lt;code&gt;font-info&lt;/code&gt; 와 대조적 입니다.)</target>
        </trans-unit>
        <trans-unit id="b13cade0e78f04b5d6c6198d45903b357690d2ef" translate="yes" xml:space="preserve">
          <source>This function returns information about a font specified by its &lt;var&gt;name&lt;/var&gt;, a string, as it is used on &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 에서 사용되는 &lt;var&gt;name&lt;/var&gt; 인 문자열로 지정된 글꼴에 대한 정보를 반환합니다 . 경우 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택된 프레임에, 디폴트.</target>
        </trans-unit>
        <trans-unit id="f9b544c453bf7b02465dd90ef65c8257ee58a583" translate="yes" xml:space="preserve">
          <source>This function returns information about how a network, a serial, or a pipe connection was set up. When &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it returns &lt;code&gt;(&lt;var&gt;hostname&lt;/var&gt; &lt;var&gt;service&lt;/var&gt;)&lt;/code&gt; for a network connection, &lt;code&gt;(&lt;var&gt;port&lt;/var&gt; &lt;var&gt;speed&lt;/var&gt;)&lt;/code&gt; for a serial connection, and &lt;code&gt;t&lt;/code&gt; for a pipe connection. For an ordinary child process, this function always returns &lt;code&gt;t&lt;/code&gt; when called with a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;key&lt;/var&gt;.</source>
          <target state="translated">이 함수는 네트워크, 직렬 또는 파이프 연결이 어떻게 설정되었는지에 대한 정보를 반환합니다. 경우 &lt;var&gt;key&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , 그것을 반환 &lt;code&gt;(&lt;var&gt;hostname&lt;/var&gt; &lt;var&gt;service&lt;/var&gt;)&lt;/code&gt; 네트워크 연결을위한 &lt;code&gt;(&lt;var&gt;port&lt;/var&gt; &lt;var&gt;speed&lt;/var&gt;)&lt;/code&gt; 의 직렬 접속을위한, 그리고 &lt;code&gt;t&lt;/code&gt; 파이프 연결 용. 일반적인 자식 프로세스의 경우이 함수 는 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;key&lt;/var&gt; 호출 될 때 항상 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cc935eaf0c9cc4c9aaf4a2959614741a13abbee5" translate="yes" xml:space="preserve">
          <source>This function returns information about the fringes of a window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the selected window is used. The value has the form &lt;code&gt;(&lt;var&gt;left-width&lt;/var&gt;
&lt;var&gt;right-width&lt;/var&gt; &lt;var&gt;outside-margins&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 윈도우 &lt;var&gt;window&lt;/var&gt; 가장자리에 대한 정보를 반환합니다 . 경우에 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우를 사용한다. 값의 형식은 &lt;code&gt;(&lt;var&gt;left-width&lt;/var&gt; &lt;var&gt;right-width&lt;/var&gt; &lt;var&gt;outside-margins&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d6ea75372864248289f171e5524eaf5b6bec548a" translate="yes" xml:space="preserve">
          <source>This function returns information about the network interface named &lt;var&gt;ifname&lt;/var&gt;. The value is a list of the form &lt;code&gt;(&lt;var&gt;addr&lt;/var&gt; &lt;var&gt;bcast&lt;/var&gt; &lt;var&gt;netmask&lt;/var&gt; &lt;var&gt;hwaddr&lt;/var&gt; &lt;var&gt;flags&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;ifname&lt;/var&gt; 이라는 네트워크 인터페이스에 대한 정보를 반환합니다 . 값은 형식의 목록입니다 &lt;code&gt;(&lt;var&gt;addr&lt;/var&gt; &lt;var&gt;bcast&lt;/var&gt; &lt;var&gt;netmask&lt;/var&gt; &lt;var&gt;hwaddr&lt;/var&gt; &lt;var&gt;flags&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3708f7e00a84362d02ba7f121820b363d0d447f2" translate="yes" xml:space="preserve">
          <source>This function returns its argument &lt;var&gt;string&lt;/var&gt;, possibly modified, such that the result can be safely concatenated with another string, or juxtaposed with another string in a buffer, without disrupting the relative layout of this string and the next one on display. If the string returned by this function is displayed as part of a left-to-right paragraph, it will always appear on display to the left of the text that follows it. The function works by examining the characters of its argument, and if any of those characters could cause reordering on display, the function appends the</source>
          <target state="translated">이 함수는 결과를 다른 문자열과 안전하게 연결하거나 버퍼의 다른 문자열과 병치 할 수 있도록 수정 된 인수 &lt;var&gt;string&lt;/var&gt; 을 반환합니다. 이 문자열과 표시되는 다음 문자열의 상대적 레이아웃을 방해하지 않습니다. 이 함수에서 반환 된 문자열이 왼쪽에서 오른쪽 단락의 일부로 표시되면 항상 그 뒤에 오는 텍스트의 왼쪽에 표시됩니다. 이 함수는 인수의 문자를 검사하여 작동하며, 이러한 문자 중 하나라도 디스플레이에서 재정렬을 유발할 수있는 경우 함수는</target>
        </trans-unit>
        <trans-unit id="ef426a141f067516eb92a5c474f4003d16855673" translate="yes" xml:space="preserve">
          <source>This function returns locale data &lt;var&gt;item&lt;/var&gt; for the current POSIX locale, if available. &lt;var&gt;item&lt;/var&gt; should be one of these symbols:</source>
          <target state="translated">이 함수는 사용 가능한 경우 현재 POSIX 로케일에 대한 로케일 데이터 &lt;var&gt;item&lt;/var&gt; 을 리턴 합니다. &lt;var&gt;item&lt;/var&gt; 은 다음 기호 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b9e695add21fe33c602a70360f0dd065dc090326" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;arg&lt;/var&gt; is a customizable variable. A customizable variable is either a variable that has a &lt;code&gt;standard-value&lt;/code&gt; or &lt;code&gt;custom-autoload&lt;/code&gt; property (usually meaning it was declared with &lt;code&gt;defcustom&lt;/code&gt;), or an alias for another customizable variable.</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; 가 사용자 정의 가능한 변수 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다. 사용자 정의 가능한 변수는 &lt;code&gt;standard-value&lt;/code&gt; 또는 &lt;code&gt;custom-autoload&lt;/code&gt; 속성 (일반적으로 &lt;code&gt;defcustom&lt;/code&gt; 으로 선언됨을 의미 함 )이있는 변수이거나 다른 사용자 정의 가능한 변수의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="8aa11d8bf8f849245fe98293c0262974f32ed90b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;buffer-or-name&lt;/var&gt; is a minibuffer. If &lt;var&gt;buffer-or-name&lt;/var&gt; is omitted, it tests the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer-or-name&lt;/var&gt; 이 미니 버퍼 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 경우 &lt;var&gt;buffer-or-name&lt;/var&gt; 생략되어, 현재의 버퍼를 테스트한다.</target>
        </trans-unit>
        <trans-unit id="5f6520bbf2dcd8d060aa6060b125aa17eddae5bc" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; ends with a directory separator character. This is the forward slash &amp;lsquo;</source>
          <target state="translated">이 함수는, 비 - 반환 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;filename&lt;/var&gt; 디렉토리 구분자 끝. 이것은 슬래시입니다.</target>
        </trans-unit>
        <trans-unit id="7a396752bc9a14412da5056d40e8f468fe238b81" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; is currently being rendered with double buffering. &lt;var&gt;frame&lt;/var&gt; defaults to the selected frame.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; 이 현재 이중 버퍼링으로 렌더링되고있는 경우이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . &lt;var&gt;frame&lt;/var&gt; 기본값은 선택한 프레임입니다.</target>
        </trans-unit>
        <trans-unit id="53bcb36636dd486626e6f74640f70bcae634d8d3" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; supports image scaling and rotation. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted means to use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). The returned list includes symbols that indicate which image transform operations are supported:</source>
          <target state="translated">이 함수는, 비 - 반환 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;frame&lt;/var&gt; 지지체 이미지 스케일링 및 회전. &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 또는 생략은 선택한 프레임을 사용함을 의미합니다 ( &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;입력 포커스&lt;/a&gt; 참조 ). 반환 된 목록에는 지원되는 이미지 변환 작업을 나타내는 기호가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="41632af4cec9a752ca5c9f75a38b0d9e3996a2a0" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;image&lt;/var&gt; contains more than one frame. The actual return value is a cons &lt;code&gt;(&lt;var&gt;nimages&lt;/var&gt;
. &lt;var&gt;delay&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;nimages&lt;/var&gt; is the number of frames and &lt;var&gt;delay&lt;/var&gt; is the delay in seconds between them, or &lt;code&gt;nil&lt;/code&gt; if the image does not specify a delay. Images that are intended to be animated usually specify a frame delay, whereas ones that are intended to be treated as multiple pages do not.</source>
          <target state="translated">이 함수는, 비 - 반환 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;image&lt;/var&gt; 하나 개 이상의 프레임을 포함한다. 실제 반환 값은 cons &lt;code&gt;(&lt;var&gt;nimages&lt;/var&gt; . &lt;var&gt;delay&lt;/var&gt;)&lt;/code&gt; . 여기서 &lt;var&gt;nimages&lt;/var&gt; 는 프레임 수이고 &lt;var&gt;delay&lt;/var&gt; 는 프레임 사이의 지연 시간 (초) 또는 이미지가 지연을 지정하지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다. 애니메이션 용 이미지는 일반적으로 프레임 지연을 지정하지만 여러 페이지로 처리 할 이미지는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="efb66229a469c693f7501b2b843d1ac041b31d50" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a mouse movement event. See &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;Motion Events&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 마우스 이동 이벤트 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;모션 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7b381ffeef1b7d4f8e80e1931e332a1b9a366af" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a mouse position list, in the format documented in &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;); and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events에&lt;/a&gt; 문서화 된 형식으로 마우스 위치 목록 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 그리고 &lt;code&gt;nil&lt;/code&gt; 을 달리.</target>
        </trans-unit>
        <trans-unit id="3648ce14c6229b89b8efe55b38dc73cd803b6a74" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a sequence (a list or array), or any additional type of sequence defined via</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 시퀀스 (목록 또는 배열)이거나 다음을 통해 정의 된 추가 시퀀스 유형 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 것을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1d4d1f6002bafb8afdf2e8609b373eb3bd2bf5ca" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an autoload object. For example, to check if &lt;code&gt;run-prolog&lt;/code&gt; is defined as an autoloaded function, evaluate</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 자동로드 객체 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다. 예를 들어 &lt;code&gt;run-prolog&lt;/code&gt; 가 자동로드 된 함수로 정의되어 있는지 확인하려면</target>
        </trans-unit>
        <trans-unit id="c327cfad723c60d1fb2168da1393ce231b524a32" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an input event or event type.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; 가 입력 이벤트 또는 이벤트 유형 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="c83357872fa47b1fc98a554938a9c86cfdfa3bcc" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is within the range of text currently visible on the screen in &lt;var&gt;window&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is scrolled vertically out of view. Locations that are partially obscured are not considered visible unless &lt;var&gt;partially&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. The argument &lt;var&gt;position&lt;/var&gt; defaults to the current position of point in &lt;var&gt;window&lt;/var&gt;; &lt;var&gt;window&lt;/var&gt; defaults to the selected window. If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, that means to check either the first visible position of the last screen line in &lt;var&gt;window&lt;/var&gt;, or the end-of-buffer position, whichever comes first.</source>
          <target state="translated">&lt;var&gt;position&lt;/var&gt; 가 &lt;var&gt;window&lt;/var&gt; 의 화면에 현재 보이는 텍스트 범위 내에 있으면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . &lt;var&gt;position&lt;/var&gt; 가보기에서 수직으로 스크롤 되면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 하지 않는 부분적으로 가려진 위치는 볼 간주되지 않습니다 &lt;var&gt;partially&lt;/var&gt; 비입니다 &lt;code&gt;nil&lt;/code&gt; . 인수 &lt;var&gt;position&lt;/var&gt; 기본적으로 &lt;var&gt;window&lt;/var&gt; 현재 지점 위치입니다 . &lt;var&gt;window&lt;/var&gt; 기본값은 선택한 창입니다. 경우 &lt;var&gt;position&lt;/var&gt; 인 &lt;code&gt;t&lt;/code&gt; , 그 수단은 화면의 마지막 줄의 처음 위치 표시하거나 확인 &lt;var&gt;window&lt;/var&gt; 또는 버퍼 끝 위치 중 먼저 오는 위치.</target>
        </trans-unit>
        <trans-unit id="7714e51a61f825905b9eaf03b84521fbbfc31858" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;process&lt;/var&gt; is alive. A process is considered alive if its status is &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;listen&lt;/code&gt;, &lt;code&gt;connect&lt;/code&gt; or &lt;code&gt;stop&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;process&lt;/var&gt; 가 살아 있으면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 프로세스는 상태가 &lt;code&gt;run&lt;/code&gt; , &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;listen&lt;/code&gt; , &lt;code&gt;connect&lt;/code&gt; 또는 &lt;code&gt;stop&lt;/code&gt; 이면 활성 상태로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="207dadb6618b6b4e3ffe9faf590cfeb68c10efd2" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;sequence&lt;/var&gt; is empty.</source>
          <target state="translated">&lt;var&gt;sequence&lt;/var&gt; 가 비어 있으면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2e1789b173f534cdc1aa310751ef9b721f0c9e26" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; is a prefix of &lt;var&gt;string2&lt;/var&gt;; i.e., if &lt;var&gt;string2&lt;/var&gt; starts with &lt;var&gt;string1&lt;/var&gt;. If the optional argument &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the comparison ignores case differences.</source>
          <target state="translated">이 함수는 &lt;var&gt;string1&lt;/var&gt; 이 &lt;var&gt;string2&lt;/var&gt; 의 접두사 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값 을 반환합니다 . 즉, &lt;var&gt;string2&lt;/var&gt; 가 &lt;var&gt;string1&lt;/var&gt; 로 시작하는 경우 . 선택적 인수 &lt;var&gt;ignore-case&lt;/var&gt; 가 non- &lt;code&gt;nil&lt;/code&gt; 이면 비교에서 대소 문자 차이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="f43b22825b402f86178ee9dfa01b45416aabab3b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; is a valid completion alternative specified by &lt;var&gt;collection&lt;/var&gt; and &lt;var&gt;predicate&lt;/var&gt;. The arguments are the same as in &lt;code&gt;try-completion&lt;/code&gt;. For instance, if &lt;var&gt;collection&lt;/var&gt; is a list of strings, this is true if &lt;var&gt;string&lt;/var&gt; appears in the list and &lt;var&gt;predicate&lt;/var&gt; is satisfied.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 이 &lt;var&gt;collection&lt;/var&gt; 및 &lt;var&gt;predicate&lt;/var&gt; 에 지정된 유효한 완성 대안 인 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 인수는 &lt;code&gt;try-completion&lt;/code&gt; 과 동일 합니다. 예를 들어 &lt;var&gt;collection&lt;/var&gt; 이 문자열 목록 인 경우 &lt;var&gt;string&lt;/var&gt; 이 목록에 표시되고 &lt;var&gt;predicate&lt;/var&gt; 충족 되면 참 입니다.</target>
        </trans-unit>
        <trans-unit id="134afd8803c0d88362d452150766ae923b0d0010" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;suffix&lt;/var&gt; is a suffix of &lt;var&gt;string&lt;/var&gt;; i.e., if &lt;var&gt;string&lt;/var&gt; ends with &lt;var&gt;suffix&lt;/var&gt;. If the optional argument &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the comparison ignores case differences.</source>
          <target state="translated">이 기능은 비 반환 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;suffix&lt;/var&gt; 의 접미사 &lt;var&gt;string&lt;/var&gt; ; 즉, &lt;var&gt;string&lt;/var&gt; 이 &lt;var&gt;suffix&lt;/var&gt; . 선택적 인수 &lt;var&gt;ignore-case&lt;/var&gt; 가 non- &lt;code&gt;nil&lt;/code&gt; 이면 비교에서 대소 문자 차이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="f60b87a3ec6d1516dc262a65ae48310685efed51" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;sym&lt;/var&gt; is a risky variable, based on the above criteria.</source>
          <target state="translated">위의 기준에 따라 &lt;var&gt;sym&lt;/var&gt; 이 위험한 변수 이면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="24d285146bf207a6aba2acfa476e2a46a64df642" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;symbol&lt;/var&gt; is a special variable (i.e., it has a &lt;code&gt;defvar&lt;/code&gt;, &lt;code&gt;defcustom&lt;/code&gt;, or &lt;code&gt;defconst&lt;/code&gt; variable definition). Otherwise, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 이 특수 변수 (즉, &lt;code&gt;defvar&lt;/code&gt; , &lt;code&gt;defcustom&lt;/code&gt; 또는 &lt;code&gt;defconst&lt;/code&gt; 변수 정의가 있음) 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 그렇지 않으면 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0ea1c6700a4ae8c16c7c9cc6f2cef5712acdc60d" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;tty&lt;/var&gt; is the controlling terminal of the Emacs session; &lt;var&gt;tty&lt;/var&gt; can be a terminal object, a frame (meaning the terminal for that frame), or &lt;code&gt;nil&lt;/code&gt; (meaning the terminal for the selected frame).</source>
          <target state="translated">이 함수는 &lt;var&gt;tty&lt;/var&gt; 가 Emacs 세션의 제어 터미널 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . &lt;var&gt;tty&lt;/var&gt; 는 터미널 객체, 프레임 (해당 프레임의 터미널을 의미) 또는 &lt;code&gt;nil&lt;/code&gt; (선택된 프레임의 터미널을 의미) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0abb7d884b4edb5765e8dd74d93937f3f692fb31" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;value&lt;/var&gt;, when used as the value of the face attribute &lt;var&gt;attribute&lt;/var&gt;, is relative. This means it would modify, rather than completely override, any value that comes from a subsequent face in the face list or that is inherited from another face.</source>
          <target state="translated">이 함수는 face 속성 &lt;var&gt;attribute&lt;/var&gt; 의 값으로 사용될 때 value 가 상대적 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;var&gt;value&lt;/var&gt; 반환합니다 . 즉, 얼굴 목록의 후속 얼굴에서 가져 오거나 다른 얼굴에서 상속 된 모든 값을 완전히 재정의하는 것이 아니라 수정합니다.</target>
        </trans-unit>
        <trans-unit id="f927c9da31282b3cb4f4502a9f8e7158c19dd73e" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; has no other window above or below it in its frame. More precisely, this means that the total height of &lt;var&gt;window&lt;/var&gt; equals the total height of the root window on that frame. The minibuffer window does not count in this regard. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 함수는, 비 - 반환 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;window&lt;/var&gt; 위 또는 아래 프레임 다른 윈도우가 없다. 보다 정확하게는 이것은 &lt;var&gt;window&lt;/var&gt; 총 높이가 해당 프레임에있는 루트 창의 총 높이와 같다는 것을 의미합니다 . 미니 버퍼 창은 이와 관련하여 계산되지 않습니다. 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값.</target>
        </trans-unit>
        <trans-unit id="742a04bbb438eb6b72cbd7304bd59e997eebb475" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; has no other window to the left or right in its frame, i.e., its total width equals that of the root window on that frame. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 함수가 반환 비 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;window&lt;/var&gt; 왼쪽 또는 오른쪽으로, 즉 그 프레임에 다른 윈도우가 없다가, 총 폭은 그 프레임의 루트 창의 같습니다. 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값.</target>
        </trans-unit>
        <trans-unit id="8811c3d948b109027d3335fb7ffe65ec9e88dc46" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is dedicated to its buffer and &lt;code&gt;nil&lt;/code&gt; otherwise. More precisely, the return value is the value assigned by the last call of &lt;code&gt;set-window-dedicated-p&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if that function was never called with &lt;var&gt;window&lt;/var&gt; as its argument. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 가 버퍼 전용 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 더 정확하게는, 반환 값의 마지막 호출에 의해 할당 된 값입니다 &lt;code&gt;set-window-dedicated-p&lt;/code&gt; 에 대한 &lt;var&gt;window&lt;/var&gt; , 또는 &lt;code&gt;nil&lt;/code&gt; 그 함수를 호출하지 않은 경우 &lt;var&gt;window&lt;/var&gt; 의 인수로는. &lt;var&gt;window&lt;/var&gt; 기본값 은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="201a541be5713d4ec74eacd0b87c88f38da2e53c" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; shows the currently active minibuffer.</source>
          <target state="translated">&lt;var&gt;window&lt;/var&gt; 에 현재 활성화 된 미니 버퍼가 표시 되면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="91b0834e10f16952e8601e3bb8466611f65470c4" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if all the face attributes in &lt;var&gt;attributes&lt;/var&gt; are supported (see &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;).</source>
          <target state="translated">이 함수는 속성의 모든 얼굴 &lt;var&gt;attributes&lt;/var&gt; 이 지원되는 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 ( &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face 속성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d644b00ee9b421231ffa39cf38cbf5eb65cf136e" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if applying &lt;var&gt;predicate&lt;/var&gt; to every element of &lt;var&gt;sequence&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는, 비 - 반환 &lt;code&gt;nil&lt;/code&gt; 적용하는 경우에 &lt;var&gt;predicate&lt;/var&gt; 의 모든 요소에 &lt;var&gt;sequence&lt;/var&gt; 복귀 비 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c11797b8f8bd201af4c5bc47afcdd3220dae049b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if at least one character between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; does not have a property &lt;var&gt;prop&lt;/var&gt; with value &lt;var&gt;value&lt;/var&gt;. More precisely, it returns the position of the first such character. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능은 비 반환 &lt;code&gt;nil&lt;/code&gt; 사이에 적어도 하나 개의 문자 경우 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 속성이없는 &lt;var&gt;prop&lt;/var&gt; 값으로 &lt;var&gt;value&lt;/var&gt; . 보다 정확하게는 첫 번째 문자의 위치를 ​​반환합니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cd99d27293506cb495b0dcd3c07993a8f5bfe380" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if at least one character between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; has a property &lt;var&gt;prop&lt;/var&gt; whose value is &lt;var&gt;value&lt;/var&gt;. More precisely, it returns the position of the first such character. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이에 적어도 하나의 문자에 값이 &lt;var&gt;value&lt;/var&gt; 인 속성 &lt;var&gt;prop&lt;/var&gt; 이있는 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다 . 보다 정확하게는 첫 번째 문자의 위치를 ​​반환합니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3a1578deeecfb551dbfe2963aa4b0d7d3fab8f9b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if at least one element in &lt;var&gt;sequence&lt;/var&gt; is equal to &lt;var&gt;elt&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence&lt;/var&gt; 요소 중 하나 이상 이 &lt;var&gt;elt&lt;/var&gt; 와 같으면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 선택적 인수 &lt;var&gt;function&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 기본 &lt;code&gt;equal&lt;/code&gt; 대신 사용할 두 인수의 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="949e2e86800f9139a5e4fafe8d227f37b26e2970" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if built-in libxml2 support is available in this Emacs session.</source>
          <target state="translated">내장 된 libxml2 지원이이 Emacs 세션에서 사용 가능하면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 것을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="41fa028d4b8aaa45c937e4f54f4269bac4555b0d" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if built-in zlib decompression is available.</source>
          <target state="translated">이 함수는 내장 된 zlib 압축 해제를 사용할 수있는 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4772f02c0a061ae8252bcab8e7e829b87216b346" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if face &lt;var&gt;face&lt;/var&gt; specifies a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;:extend&lt;/code&gt; attribute.</source>
          <target state="translated">face &lt;var&gt;face&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;code&gt;:extend&lt;/code&gt; 속성을 지정 하면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 것을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="61e1460248286bb3587b4828d9a3494a82700d0f" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if face &lt;var&gt;face&lt;/var&gt; specifies a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;:inverse-video&lt;/code&gt; attribute.</source>
          <target state="translated">얼굴 &lt;var&gt;face&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;code&gt;:inverse-video&lt;/code&gt; 속성을 지정 하면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 것을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2bbbf970f2a6400166a34f460085b0c5a1c4f448" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if face &lt;var&gt;face&lt;/var&gt; specifies a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;:underline&lt;/code&gt; attribute.</source>
          <target state="translated">face &lt;var&gt;face&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 &lt;code&gt;:underline&lt;/code&gt; 속성을 지정 하면 이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 것을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="505ff3b34fbb5fbfe1a0f89b5a32c90486dd3b8f" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if images of type &lt;var&gt;type&lt;/var&gt; can be loaded and displayed. &lt;var&gt;type&lt;/var&gt; must be an image type symbol.</source>
          <target state="translated">이 함수는 유형 &lt;var&gt;type&lt;/var&gt; 이미지를 로드하고 표시 할 수있는 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . &lt;var&gt;type&lt;/var&gt; 은 이미지 유형 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e039ec57f83cafc3ae072799916400a653bc6972" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if it is safe to give &lt;var&gt;sym&lt;/var&gt; the value &lt;var&gt;val&lt;/var&gt;, based on the above criteria.</source>
          <target state="translated">이 함수는 위의 기준에 따라 &lt;var&gt;sym&lt;/var&gt; 에 &lt;var&gt;val&lt;/var&gt; 값 을 제공하는 것이 안전한 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2a210d47fcd343f867f35bfc64aad0e3ea5a9250" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if position &lt;var&gt;pos&lt;/var&gt; in the current buffer is on a link. &lt;var&gt;pos&lt;/var&gt; can also be a mouse event location, as returned by &lt;code&gt;event-start&lt;/code&gt; (see &lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;Accessing Mouse&lt;/a&gt;).</source>
          <target state="translated">이 함수는 현재 버퍼의 &lt;var&gt;pos&lt;/var&gt; 위치 가 링크에 있으면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . &lt;var&gt;pos&lt;/var&gt; 는 &lt;code&gt;event-start&lt;/code&gt; 에 의해 반환되는 마우스 이벤트 위치 일 수도 있습니다 ( &lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;마우스 액세스&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="044563235cbd13eed13a71622896c21cdadea2fe" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the buffer is narrowed, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 함수는 버퍼가 좁아지면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7af26370e73bed62d430b34daa7970b03cf0593" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the current major mode is derived from any of the major modes given by the symbols &lt;var&gt;modes&lt;/var&gt;.</source>
          <target state="translated">이 함수는 현재 주 모드가 기호 &lt;var&gt;modes&lt;/var&gt; 제공하는 주 모드에서 파생 된 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="d44ce9236c497cc909b7c557bc46e8799d3ebebd" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the display supports the SaveUnder feature. That feature is used by pop-up windows to save the pixels they obscure, so that they can pop down quickly.</source>
          <target state="translated">디스플레이가 SaveUnder 기능을 지원하는 경우이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다. 이 기능은 팝업 창에서 가려진 픽셀을 저장하여 빠르게 팝업 할 수 있도록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3748a1f34eadba5e6a3069e99c71b519a9132585" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the frame &lt;var&gt;frame&lt;/var&gt; has not been deleted. The possible non-&lt;code&gt;nil&lt;/code&gt; return values are like those of &lt;code&gt;framep&lt;/code&gt;. See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;.</source>
          <target state="translated">이 함수는 프레임 &lt;var&gt;frame&lt;/var&gt; 이 삭제되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . 가능한 &lt;code&gt;nil&lt;/code&gt; 이 아닌 반환 값은 &lt;code&gt;framep&lt;/code&gt; 의 값과 같습니다 . &lt;a href=&quot;frames#Frames&quot;&gt;프레임을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0accbb86a11d41a315f2b8c5d8c383fa97bc6c20" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; when the inner width or height of &lt;var&gt;frame&lt;/var&gt; has changed since &lt;code&gt;window-size-change-functions&lt;/code&gt; was run the last time for &lt;var&gt;frame&lt;/var&gt;. It always returns &lt;code&gt;nil&lt;/code&gt; immediately after running &lt;code&gt;window-size-change-functions&lt;/code&gt; for &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;window-size-change-functions&lt;/code&gt; 가 &lt;var&gt;frame&lt;/var&gt; 에 대해 마지막으로 실행 된 이후 &lt;var&gt;frame&lt;/var&gt; 의 내부 너비 또는 높이 가 변경된 경우 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 . &lt;var&gt;frame&lt;/var&gt; 에 대한 &lt;code&gt;window-size-change-functions&lt;/code&gt; 를 실행 한 직후에는 항상 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="93eb4720acdb03950d04cf999b78e20aae3ffcc1" translate="yes" xml:space="preserve">
          <source>This function returns position information corresponding to pixel coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; in a specified frame or window, &lt;var&gt;frame-or-window&lt;/var&gt;, which defaults to the selected window. The coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are relative to the frame or window used. If &lt;var&gt;whole&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the coordinates are relative to the window text area, otherwise they are relative to the entire window area including scroll bars, margins and fringes.</source>
          <target state="translated">이 함수는 지정된 프레임 또는 창, &lt;var&gt;frame-or-window&lt;/var&gt; 에서 픽셀 좌표 &lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 에 해당하는 위치 정보를 반환 하며 , 기본값은 선택한 창입니다. 좌표 &lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 는 사용 된 프레임 또는 창에 상대적입니다. 경우 &lt;var&gt;whole&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 좌표 그렇지 않으면 스크롤 막대, 마진과 변두리를 포함한 전체 창 영역을 기준으로합니다 창 텍스트 영역을 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="5d4042eb03bec9be5bf905046879eb4692c13cf5" translate="yes" xml:space="preserve">
          <source>This function returns the</source>
          <target state="translated">이 함수는</target>
        </trans-unit>
        <trans-unit id="296f5c4779549b6e12459370e83a41b2056e248b" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;code&gt;interactive&lt;/code&gt; form of &lt;var&gt;function&lt;/var&gt;. If &lt;var&gt;function&lt;/var&gt; is an interactively callable function (see &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;), the value is the command&amp;rsquo;s &lt;code&gt;interactive&lt;/code&gt; form &lt;code&gt;(interactive &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, which specifies how to compute its arguments. Otherwise, the value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;function&lt;/var&gt; is a symbol, its function definition is used.</source>
          <target state="translated">이 기능은 반환 &lt;code&gt;interactive&lt;/code&gt; 의 형태로 &lt;var&gt;function&lt;/var&gt; . 경우 &lt;var&gt;function&lt;/var&gt; 대화 형으로 호출 기능이다 ( &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;대화 형 전화는&lt;/a&gt; , 값이 명령의입니다) &lt;code&gt;interactive&lt;/code&gt; 양식 &lt;code&gt;(interactive &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; 지정 방법의 인수를 계산하기. 그렇지 않으면 값은 &lt;code&gt;nil&lt;/code&gt; 입니다. 경우 &lt;var&gt;function&lt;/var&gt; 상징, 그 함수 정의가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28b864b673c99e88fce00ac9881c72d8487c2106" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;Hamming weight&lt;/em&gt; of &lt;var&gt;integer&lt;/var&gt;: the number of ones in the binary representation of &lt;var&gt;integer&lt;/var&gt;. If &lt;var&gt;integer&lt;/var&gt; is negative, it returns the number of zero bits in its two&amp;rsquo;s complement binary representation. The result is always nonnegative.</source>
          <target state="translated">이 기능은 반환 &lt;em&gt;해밍 무게&lt;/em&gt; 의 &lt;var&gt;integer&lt;/var&gt; 의 이진 표현에서 사람의 수 : &lt;var&gt;integer&lt;/var&gt; . 경우 &lt;var&gt;integer&lt;/var&gt; 부정적이고, 그것의 2의 보수 바이너리 표현 제로 비트의 수를 반환합니다. 결과는 항상 음수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d8c2b2a40491e50e2e12ebe40b8b153f19327364" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;Levenshtein distance&lt;/em&gt; between the source string &lt;var&gt;string1&lt;/var&gt; and the target string &lt;var&gt;string2&lt;/var&gt;. The Levenshtein distance is the number of single-character changes&amp;mdash;deletions, insertions, or replacements&amp;mdash;required to transform the source string into the target string; it is one possible definition of the &lt;em&gt;edit distance&lt;/em&gt; between strings.</source>
          <target state="translated">이 함수는 소스 문자열 &lt;var&gt;string1&lt;/var&gt; 과 대상 문자열 &lt;var&gt;string2&lt;/var&gt; 사이 의 &lt;em&gt;Levenshtein 거리를&lt;/em&gt; 반환합니다 . Levenshtein 거리는 소스 문자열을 대상 문자열로 변환하는 데 필요한 단일 문자 변경 (삭제, 삽입 또는 교체)의 수입니다. 문자열 사이 의 &lt;em&gt;편집 거리를&lt;/em&gt; 정의 할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3dbab1951ed56db1a647cf9e57bcef93892f79c" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;face number&lt;/em&gt; of face &lt;var&gt;face&lt;/var&gt;. This is a number that uniquely identifies a face at low levels within Emacs. It is seldom necessary to refer to a face by its face number. However, functions that manipulate glyphs, such as &lt;code&gt;make-glyph-code&lt;/code&gt; and &lt;code&gt;glyph-face&lt;/code&gt; (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;) access the face numbers internally. Note that the face number is stored as the value of the &lt;code&gt;face&lt;/code&gt; property of the face symbol, so we recommend not to set that property of a face to any value of your own.</source>
          <target state="translated">이 기능은 반환 &lt;em&gt;얼굴 번호&lt;/em&gt; 얼굴의 &lt;var&gt;face&lt;/var&gt; . 이것은 Emacs 내에서 낮은 수준의 얼굴을 고유하게 식별하는 숫자입니다. 얼굴 번호로 얼굴을 참조 할 필요는 거의 없습니다. 그러나 &lt;code&gt;make-glyph-code&lt;/code&gt; 및 &lt;code&gt;glyph-face&lt;/code&gt; ( &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt; 참조 ) 와 같이 글리프를 조작하는 함수는 내부적으로 얼굴 번호에 액세스합니다. 얼굴 번호는 얼굴 심볼 의 &lt;code&gt;face&lt;/code&gt; 속성 값으로 저장되므로 얼굴 속성을 자신의 값으로 설정하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b0af74a01ed57ed1e03e0f60a0c6af6a83c1e8b7" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;local part&lt;/em&gt; of &lt;var&gt;filename&lt;/var&gt;. This is the part of the file&amp;rsquo;s name that identifies it on the remote host, and is typically obtained by removing from the remote file name the parts that specify the remote host and the method of accessing it. For example:</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 의 &lt;em&gt;로컬 부분&lt;/em&gt; 을 반환합니다 . 이것은 원격 호스트에서 파일을 식별하는 파일 이름의 일부이며 일반적으로 원격 호스트를 지정하는 부분과 이에 액세스하는 방법을 원격 파일 이름에서 제거하여 얻습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="786c5c68c44d83e542c7f9f14def9741b1c4f895" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;mode bits&lt;/em&gt; of &lt;var&gt;filename&lt;/var&gt;&amp;mdash;an integer summarizing its read, write, and execution permissions. This function follows symbolic links. If the file does not exist, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 읽기, 쓰기 및 실행 권한을 요약하는 정수인 &lt;var&gt;filename&lt;/var&gt; 의 &lt;em&gt;모드 비트&lt;/em&gt; 를 반환합니다 . 이 함수는 심볼릭 링크를 따릅니다. 파일이 없으면 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9ab8471c6de48dd5c13977975e515e2a5f8fbc13" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;top-level&lt;/em&gt; default value of &lt;var&gt;symbol&lt;/var&gt;, which is its value outside of any let-binding.</source>
          <target state="translated">이 함수는 let-binding 외부의 값인 &lt;var&gt;symbol&lt;/var&gt; 의&lt;em&gt;최상위&lt;/em&gt; 기본값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a98a7d5ddea298048e009510c48ac89bf40b6502" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;index&lt;/var&gt;th element of the array or record &lt;var&gt;arr&lt;/var&gt;. The first element is at index zero.</source>
          <target state="translated">이 함수는 배열 또는 레코드 &lt;var&gt;arr&lt;/var&gt; 의 &lt;var&gt;index&lt;/var&gt; 번째 요소를 반환합니다 . 첫 번째 요소는 인덱스 0에 있습니다.</target>
        </trans-unit>
        <trans-unit id="0683caf5383e9397bcd419a4b90f73dcef523dc8" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;n&lt;/var&gt;th &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt;. In other words, it skips past the first &lt;var&gt;n&lt;/var&gt; links of &lt;var&gt;list&lt;/var&gt; and returns what follows.</source>
          <target state="translated">이 함수는 &lt;var&gt;list&lt;/var&gt; 의 &lt;var&gt;n&lt;/var&gt; 번째 &lt;small&gt;CDR&lt;/small&gt; 을 반환합니다 . 즉, &lt;var&gt;list&lt;/var&gt; 의 처음 &lt;var&gt;n&lt;/var&gt; 개 링크를 건너 뛰고 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="630c3d871ee290cdb7883b95786334b814e3a064" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;n&lt;/var&gt;th element of &lt;var&gt;list&lt;/var&gt;. Elements are numbered starting with zero, so the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is element number zero. If the length of &lt;var&gt;list&lt;/var&gt; is &lt;var&gt;n&lt;/var&gt; or less, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;list&lt;/var&gt; 의 &lt;var&gt;n&lt;/var&gt; 번째 요소를 반환합니다 . 이렇게 요소는 제로로 시작되는 번호 &lt;small&gt;CAR&lt;/small&gt; 의 &lt;var&gt;list&lt;/var&gt; 요소 번호 제로이다. &lt;var&gt;list&lt;/var&gt; 의 길이 가 &lt;var&gt;n&lt;/var&gt; 이하인 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7f0c3439ae6658bbd2d139e3ee0f0fce0b9250f7" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;weak&lt;/var&gt; value that was specified for hash table &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이 함수는 해시 테이블 &lt;var&gt;table&lt;/var&gt; 에 지정된 &lt;var&gt;weak&lt;/var&gt; 값을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="9c9ebef52ec13dc5c6b401ead5a033531d39039b" translate="yes" xml:space="preserve">
          <source>This function returns the ACL for the file &lt;var&gt;filename&lt;/var&gt;. The exact Lisp representation of the ACL is unspecified (and may change in future Emacs versions), but it is the same as what &lt;code&gt;set-file-acl&lt;/code&gt; takes for its &lt;var&gt;acl&lt;/var&gt; argument (see &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 파일에 대한 ACL을 반환합니다 . ACL의 정확한 Lisp 표현은 지정되지 않았지만 (향후 Emacs 버전에서 변경 될 수 있음), &lt;code&gt;set-file-acl&lt;/code&gt; 이 &lt;var&gt;acl&lt;/var&gt; 인수에 대해 취하는 것과 동일 합니다 ( &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;파일 변경&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e99663c6851e6cfe8bf1cb28e37e02cee4dadc48" translate="yes" xml:space="preserve">
          <source>This function returns the SELinux context of the file &lt;var&gt;filename&lt;/var&gt;, as a list of the form &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt;
&lt;var&gt;range&lt;/var&gt;)&lt;/code&gt;. The list elements are the context&amp;rsquo;s user, role, type, and range respectively, as Lisp strings; see the SELinux documentation for details about what these actually mean. The return value has the same form as what &lt;code&gt;set-file-selinux-context&lt;/code&gt; takes for its &lt;var&gt;context&lt;/var&gt; argument (see &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;).</source>
          <target state="translated">이 함수는 형식 &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt; ) 의 목록으로 &lt;var&gt;filename&lt;/var&gt; 파일의 SELinux 컨텍스트를 반환합니다 . 목록 요소는 Lisp 문자열로서 컨텍스트의 사용자, 역할, 유형 및 범위입니다. 이것이 실제로 의미하는 바에 대한 자세한 내용은 SELinux 문서를 참조하십시오. 반환 값은 &lt;var&gt;context&lt;/var&gt; 인수에 대해 &lt;code&gt;set-file-selinux-context&lt;/code&gt; 가 취하는 것과 동일한 형식을 갖습니다 ( &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;파일 변경&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1553c175ef8ca142001d515107b419980a267691" translate="yes" xml:space="preserve">
          <source>This function returns the XLFD (X Logical Font Descriptor), a string, matching &lt;var&gt;font&lt;/var&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">이 함수는 &lt;var&gt;font&lt;/var&gt; 와 일치하는 문자열 인 XLFD (X Logical Font Descriptor)를 반환합니다 . 참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;글꼴&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="a0f5f2befc314af472c40c2042a1d67c37b74cab" translate="yes" xml:space="preserve">
          <source>This function returns the XLFD (X Logical Font Descriptor), a string, matching &lt;var&gt;font&lt;/var&gt;. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cad79530600aaa4faf096708f908612e7048b6" translate="yes" xml:space="preserve">
          <source>This function returns the absolute edges of the outer, native or inner frame of &lt;var&gt;frame&lt;/var&gt;. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one. The returned list has the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;&lt;var&gt;top&lt;/var&gt;&amp;nbsp;&lt;var&gt;right&lt;/var&gt;&amp;nbsp;&lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; where all values are in pixels relative to the origin of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. For terminal frames the values returned for &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;top&lt;/var&gt; are always zero.</source>
          <target state="translated">이 함수의, 외측 또는 내측 프레임 고유의 절대 가장자리 리턴 &lt;var&gt;frame&lt;/var&gt; . &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임 이어야하며 기본값은 선택한 프레임 이어야합니다. 반환 된 목록은 모든 값이 &lt;var&gt;frame&lt;/var&gt; 표시 의 원점을 기준으로 픽셀 단위 인 형식 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;&lt;var&gt;top&lt;/var&gt;&amp;nbsp;&lt;var&gt;right&lt;/var&gt;&amp;nbsp;&lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; 입니다. 터미널 프레임의 경우 &lt;var&gt;left&lt;/var&gt; 및 &lt;var&gt;top&lt;/var&gt; 에 대해 반환되는 값 은 항상 0입니다.</target>
        </trans-unit>
        <trans-unit id="d1ea3fdbee40a9e5c65ea5416a8ee0d9486c4d25" translate="yes" xml:space="preserve">
          <source>This function returns the absolute file name of the file that &lt;var&gt;buffer&lt;/var&gt; is visiting. If &lt;var&gt;buffer&lt;/var&gt; is not visiting any file, &lt;code&gt;buffer-file-name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;buffer&lt;/var&gt; is not supplied, it defaults to the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer&lt;/var&gt; 가 방문 하는 파일의 절대 파일 이름을 반환합니다 . 경우 &lt;var&gt;buffer&lt;/var&gt; 모든 파일을 방문하지 않고, &lt;code&gt;buffer-file-name&lt;/code&gt; 을 반환 &lt;code&gt;nil&lt;/code&gt; . 경우 &lt;var&gt;buffer&lt;/var&gt; 현재 버퍼가 기본값을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="548cc12e40024b5d5a688a33cf095664c3a5d52b" translate="yes" xml:space="preserve">
          <source>This function returns the absolute value of &lt;var&gt;number&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;number&lt;/var&gt; 의 절대 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="31a7ef7be3e0f025df2b310e4e557e05d1d410cf" translate="yes" xml:space="preserve">
          <source>This function returns the actual number of entries in &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;table&lt;/var&gt; 의 실제 항목 수를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="820d512616e53d2ae86c8c0d9d41ceba3072aabf" translate="yes" xml:space="preserve">
          <source>This function returns the alist of the GnuTLS MAC algorithms.</source>
          <target state="translated">이 함수는 GnuTLS MAC 알고리즘의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f36c8a0de9ef61b84d941bfe76ad4793b8e2357" translate="yes" xml:space="preserve">
          <source>This function returns the alist of the GnuTLS ciphers.</source>
          <target state="translated">이 함수는 GnuTLS 암호 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f17ba4c5a952b7eceecb4595e8e88924f1b61f1" translate="yes" xml:space="preserve">
          <source>This function returns the alist of the GnuTLS digest algorithms.</source>
          <target state="translated">이 함수는 GnuTLS 다이제스트 알고리즘의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="166076fb7e002186f4de4692e514bf3c2cd0be81" translate="yes" xml:space="preserve">
          <source>This function returns the associated buffer of the specified &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;process&lt;/var&gt; 의 관련 버퍼를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="281901165d168f3d17298bcd396dbf366c885458" translate="yes" xml:space="preserve">
          <source>This function returns the attributes of &lt;var&gt;xwidget&lt;/var&gt; as a vector of the form &lt;code&gt;[&lt;var&gt;type&lt;/var&gt; &lt;var&gt;title&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;]&lt;/code&gt;. The attributes are usually determined by &lt;code&gt;make-xwidget&lt;/code&gt; when the xwidget is created.</source>
          <target state="translated">이 함수는 &lt;var&gt;xwidget&lt;/var&gt; 의 속성을 &lt;code&gt;[&lt;var&gt;type&lt;/var&gt; &lt;var&gt;title&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;]&lt;/code&gt; 의 벡터로 반환합니다 . 속성은 일반적으로 xwidget이 작성 될 때 &lt;code&gt;make-xwidget&lt;/code&gt; 에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d7501805b4f6fd00b7d65b4978b1514511d49499" translate="yes" xml:space="preserve">
          <source>This function returns the attributes of the physical monitor dominating (see above) &lt;var&gt;frame&lt;/var&gt;, which defaults to the selected frame.</source>
          <target state="translated">이 함수는 선택된 프레임을 기본값으로하는 &lt;var&gt;frame&lt;/var&gt; 지배하는 물리적 모니터 (위 참조)의 속성을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d7735993f75241e9e95c63b265ce318a0bf65b57" translate="yes" xml:space="preserve">
          <source>This function returns the average width in pixels for the font used by &lt;var&gt;face&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. The specified &lt;var&gt;window&lt;/var&gt; must be a live window. If &lt;code&gt;nil&lt;/code&gt; or omitted, &lt;var&gt;window&lt;/var&gt; defaults to the selected window, and &lt;var&gt;face&lt;/var&gt; defaults to the default face in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; in &lt;var&gt;face&lt;/var&gt; 에 사용되는 글꼴의 평균 너비를 픽셀 단위로 반환합니다 . 지정된 &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야합니다. 만약 &lt;code&gt;nil&lt;/code&gt; 또는 생략, &lt;var&gt;window&lt;/var&gt; 선택 창에 기본값 및 &lt;var&gt;face&lt;/var&gt; 의 기본면 기본값 &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9e131f61dcaadaffd100d139064ba0c5fd540931" translate="yes" xml:space="preserve">
          <source>This function returns the average width in pixels of the font used by the current buffer&amp;rsquo;s default face, as that face is defined for the selected frame.</source>
          <target state="translated">이 함수는 선택한 프레임에 대해 정의 된면이 현재 버퍼의 기본면에서 사용되는 글꼴의 평균 너비 (픽셀)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d8972ac4ce1a7c836527e69b2e97a31850082ff6" translate="yes" xml:space="preserve">
          <source>This function returns the backing store capability of the display. Backing store means recording the pixels of windows (and parts of windows) that are not exposed, so that when exposed they can be displayed very quickly.</source>
          <target state="translated">이 함수는 디스플레이의 백업 저장 기능을 반환합니다. 백업 저장소는 노출되지 않은 창 (및 창 일부)의 픽셀을 기록하여 노출 될 때 매우 빠르게 표시 될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="dc34cf061f26557671c9fe10db07aeb20654bafc" translate="yes" xml:space="preserve">
          <source>This function returns the base buffer of &lt;var&gt;buffer&lt;/var&gt;, which defaults to the current buffer. If &lt;var&gt;buffer&lt;/var&gt; is not indirect, the value is &lt;code&gt;nil&lt;/code&gt;. Otherwise, the value is another buffer, which is never an indirect buffer.</source>
          <target state="translated">이 기능의 기본 버퍼 반환 &lt;var&gt;buffer&lt;/var&gt; , 현재 버퍼에 기본값을. &lt;var&gt;buffer&lt;/var&gt; 가 간접적이지 않은 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다. 그렇지 않으면 값은 간접 버퍼가 아닌 다른 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="7ecbc72942fdd729626afb1317794a58462ec438" translate="yes" xml:space="preserve">
          <source>This function returns the beginning of the field specified by &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;pos&lt;/var&gt; 로 지정된 필드의 시작을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7f8b395877082b26e6f1f0e32deb37d158e46aa9" translate="yes" xml:space="preserve">
          <source>This function returns the binary exponent of &lt;var&gt;x&lt;/var&gt;. More precisely, if &lt;var&gt;x&lt;/var&gt; is finite and nonzero, the value is the logarithm base 2 of &lt;em&gt;|x|&lt;/em&gt;, rounded down to an integer. If &lt;var&gt;x&lt;/var&gt; is zero or infinite, the value is infinity; if &lt;var&gt;x&lt;/var&gt; is a NaN, the value is a NaN.</source>
          <target state="translated">이 함수는 &lt;var&gt;x&lt;/var&gt; 의 이진 지수를 반환합니다 . 보다 정확하게 는 &lt;var&gt;x&lt;/var&gt; 가 유한하고 0이 아닌 경우 값은 &lt;em&gt;| x |&lt;/em&gt; 의 로그 밑수 2입니다. , 정수로 내림됩니다. 경우 &lt;var&gt;x&lt;/var&gt; 제로 또는 무한대 값은 무한대이고; 만약 &lt;var&gt;x&lt;/var&gt; 가 NaN의이 값은 NaN이된다.</target>
        </trans-unit>
        <trans-unit id="6dcc26f70d974d52f14218ae0dc79f88d04489a0" translate="yes" xml:space="preserve">
          <source>This function returns the binding for &lt;var&gt;key&lt;/var&gt; according to the current active keymaps. The result is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;key&lt;/var&gt; is undefined in the keymaps.</source>
          <target state="translated">이 함수는 현재 활성 키맵에 따라 &lt;var&gt;key&lt;/var&gt; 바인딩을 반환합니다 . &lt;var&gt;key&lt;/var&gt; 가 키맵에 정의되지 않은 경우 결과는 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2af0225aa63791cdd4b386d9d8b7b28effbc41e4" translate="yes" xml:space="preserve">
          <source>This function returns the binding for &lt;var&gt;key&lt;/var&gt; in the current local keymap, or &lt;code&gt;nil&lt;/code&gt; if it is undefined there.</source>
          <target state="translated">이 함수는 현재 로컬 키맵의 &lt;var&gt;key&lt;/var&gt; 에 대한 바인딩을 반환 하거나 정의되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9d7aa3c0f5b2918b9ca5e15d9299eb1dd8bacc8" translate="yes" xml:space="preserve">
          <source>This function returns the binding for command &lt;var&gt;key&lt;/var&gt; in the current global keymap, or &lt;code&gt;nil&lt;/code&gt; if it is undefined there.</source>
          <target state="translated">이 함수는 현재 전역 키맵의 명령 &lt;var&gt;key&lt;/var&gt; 에 대한 바인딩을 반환 하거나 정의되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fdb82f5afd008c1436403f21c57fbc7fbe2c773a" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise AND of the arguments: the &lt;var&gt;n&lt;/var&gt;th bit is 1 in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is 1 in all the arguments.</source>
          <target state="translated">이 함수는 인수의 비트 AND를 반환합니다. 모든 인수에서 &lt;var&gt;n&lt;/var&gt; 번째 비트가 1 인 경우에만 &lt;var&gt;n&lt;/var&gt; 번째 비트는 결과에서 1입니다.</target>
        </trans-unit>
        <trans-unit id="b941b8d327e01d011862f0b94e37f863841bf42c" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise complement of its argument: the &lt;var&gt;n&lt;/var&gt;th bit is one in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is zero in &lt;var&gt;integer&lt;/var&gt;, and vice-versa. The result equals -1 - &lt;var&gt;integer&lt;/var&gt;.</source>
          <target state="translated">이 함수는 인수의 비트 보수를 반환합니다. &lt;var&gt;n&lt;/var&gt; 번째 비트는 &lt;var&gt;integer&lt;/var&gt; 에서 &lt;var&gt;n&lt;/var&gt; 번째 비트가 0 인 경우에만 결과에서 1 이고 그 반대의 경우도 마찬가지입니다. 결과는 -1 &lt;var&gt;integer&lt;/var&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6c9312fc26aa0ee40755f7b85566a46eb21c7690" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise exclusive OR of its arguments: the &lt;var&gt;n&lt;/var&gt;th bit is 1 in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is 1 in an odd number of the arguments. If there are no arguments, the result is 0, which is an identity element for this operation. If &lt;code&gt;logxor&lt;/code&gt; is passed just one argument, it returns that argument.</source>
          <target state="translated">이 함수는 인수의 비트 별 배타적 OR을 반환합니다. &lt;var&gt;n&lt;/var&gt; 번째 비트는 홀수의 인수에서 &lt;var&gt;n&lt;/var&gt; 번째 비트가 1 인 경우에만 결과 에서 1입니다. 인수가없는 경우 결과는이 작업의 식별 요소 인 0입니다. &lt;code&gt;logxor&lt;/code&gt; 에 하나의 인수 만 전달 되면 해당 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b1cd887dd90ecc455b6c4a77e07d5e0d4c4423ac" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise inclusive OR of its arguments: the &lt;var&gt;n&lt;/var&gt;th bit is 1 in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is 1 in at least one of the arguments. If there are no arguments, the result is 0, which is an identity element for this operation. If &lt;code&gt;logior&lt;/code&gt; is passed just one argument, it returns that argument.</source>
          <target state="translated">이 함수는 인수의 비트 포함 OR을 반환합니다. &lt;var&gt;n&lt;/var&gt; 번째 비트는 인수 중 하나 이상에서 &lt;var&gt;n&lt;/var&gt; 번째 비트가 1 인 경우에만 결과 에서 1입니다. 인수가없는 경우 결과는이 작업의 식별 요소 인 0입니다. &lt;code&gt;logior&lt;/code&gt; 에 하나의 인수 만 전달 되면 해당 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="55cce47c98b3cd72fa3886debba72b1076dd7815" translate="yes" xml:space="preserve">
          <source>This function returns the body height or body width of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;horizontal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it is equivalent to calling &lt;code&gt;window-body-height&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;; otherwise it is equivalent to calling &lt;code&gt;window-body-width&lt;/code&gt;. In either case, the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is passed to the function called.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 본문 높이 또는 본문 너비를 반환합니다 . 경우에 &lt;var&gt;horizontal&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 그것은 호출하는 것과 &lt;code&gt;window-body-height&lt;/code&gt; 에 대한 &lt;var&gt;window&lt;/var&gt; ; 그렇지 않으면 &lt;code&gt;window-body-width&lt;/code&gt; 를 호출하는 것과 같습니다 . 두 경우 모두 선택적 인수가 &lt;var&gt;pixelwise&lt;/var&gt; 로 호출 된 함수에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3bf3cfabffc5775c39cd6285cc6a534c0b73e657" translate="yes" xml:space="preserve">
          <source>This function returns the boolean exclusive-or of &lt;var&gt;condition1&lt;/var&gt; and &lt;var&gt;condition2&lt;/var&gt;. That is, &lt;code&gt;xor&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if either both arguments are &lt;code&gt;nil&lt;/code&gt;, or both are non-&lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns the value of that argument which is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 부울 배타적 또는 &lt;var&gt;condition1&lt;/var&gt; 및 &lt;var&gt;condition2&lt;/var&gt; 를 반환합니다 . 즉, &lt;code&gt;xor&lt;/code&gt; 는 두 인수가 모두 &lt;code&gt;nil&lt;/code&gt; 이거나 둘 다 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 인수의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cc93eaaff15e70ffdd038a065b2ad2025262192b" translate="yes" xml:space="preserve">
          <source>This function returns the boundaries of the field on which &lt;var&gt;collection&lt;/var&gt; will operate, assuming that &lt;var&gt;string&lt;/var&gt; holds the text before point and &lt;var&gt;suffix&lt;/var&gt; holds the text after point.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 포인트 앞의 텍스트를 보유 하고 &lt;var&gt;suffix&lt;/var&gt; 가 포인트 뒤의 텍스트를 보유 한다고 가정하여 &lt;var&gt;collection&lt;/var&gt; 이 작동 할 필드의 경계를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9276b51d17375688f40c1938021b291a49b856be" translate="yes" xml:space="preserve">
          <source>This function returns the buffer list, including all buffers, even those whose names begin with a space. The elements are actual buffers, not their names.</source>
          <target state="translated">이 함수는 이름이 공백으로 시작하는 버퍼를 포함하여 모든 버퍼를 포함한 버퍼 목록을 반환합니다. 요소는 이름이 아니라 실제 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="73b50a6c6dc68030647e6e9fe391fc17ed30a312" translate="yes" xml:space="preserve">
          <source>This function returns the buffer of &lt;var&gt;xwidget&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;xwidget&lt;/var&gt; 의 버퍼를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d8bb1890ea69eace59cf39e43f3f88ac65e90ee9" translate="yes" xml:space="preserve">
          <source>This function returns the buffer over which &lt;var&gt;event&lt;/var&gt; occurred. Call it with the argument of the function from &lt;code&gt;tooltip-functions&lt;/code&gt; to obtain the buffer whose text triggered the tooltip. Note that the event might occur not over a buffer (e.g., over the tool bar), in which case this function will return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;event&lt;/var&gt; 가 발생한 버퍼를 반환합니다 . &lt;code&gt;tooltip-functions&lt;/code&gt; 트리거 한 텍스트의 버퍼를 가져 오려면 tooltip-functions 의 함수 인수와 함께 호출합니다 . 이벤트가 버퍼를 통해 (예 : 도구 모음을 통해) 발생하지 않을 수 있으며,이 경우이 함수는 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="228abb5e5198bff7eb07cbce60eed757affb43c9" translate="yes" xml:space="preserve">
          <source>This function returns the buffer position corresponding to a file position specified by &lt;var&gt;byte&lt;/var&gt;, a zero-base byte offset from the file&amp;rsquo;s beginning. The function performs the conversion opposite to what &lt;code&gt;bufferpos-to-filepos&lt;/code&gt; does. Optional arguments &lt;var&gt;quality&lt;/var&gt; and &lt;var&gt;coding-system&lt;/var&gt; have the same meaning and values as for &lt;code&gt;bufferpos-to-filepos&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;byte&lt;/var&gt; 로 지정된 파일 위치에 해당하는 버퍼 위치를 반환합니다.이 위치 는 파일 시작 부분에서 0부터 기본 바이트 오프셋입니다. 이 함수는 &lt;code&gt;bufferpos-to-filepos&lt;/code&gt; 가 수행하는 것과 반대되는 변환을 수행합니다 . 선택적 인수 &lt;var&gt;quality&lt;/var&gt; 및 &lt;var&gt;coding-system&lt;/var&gt; 은 &lt;code&gt;bufferpos-to-filepos&lt;/code&gt; 와 동일한 의미와 값을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="0da0d41b3aefdf17b77bf28030d5ccbbd8f036db" translate="yes" xml:space="preserve">
          <source>This function returns the buffer position of the next beginning or end of an overlay, after &lt;var&gt;pos&lt;/var&gt;. If there is none, it returns &lt;code&gt;(point-max)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;pos&lt;/var&gt; 다음에 오버레이의 다음 시작 또는 끝의 버퍼 위치를 반환합니다 . 아무것도 없으면 &lt;code&gt;(point-max)&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="505e1a822d8ab772a3c43b32c684e926ffb915b4" translate="yes" xml:space="preserve">
          <source>This function returns the buffer position of the previous beginning or end of an overlay, before &lt;var&gt;pos&lt;/var&gt;. If there is none, it returns &lt;code&gt;(point-min)&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;pos&lt;/var&gt; 이전에 오버레이의 이전 시작 또는 끝의 버퍼 위치를 반환합니다 . 아무것도 없으면 &lt;code&gt;(point-min)&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c35b8eada813f5d4d5cf883e978d0fced417163a" translate="yes" xml:space="preserve">
          <source>This function returns the buffer shown in &lt;var&gt;window&lt;/var&gt; at the last time window change functions were run for &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. If it returns &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; has been created after that. If it returns &lt;code&gt;t&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; was not shown at that time but has been restored from a previously saved window configuration afterwards. Otherwise, the return value is the buffer shown by &lt;code&gt;window&lt;/code&gt; at that time.</source>
          <target state="translated">이 기능에 표시된 버퍼 반환 &lt;var&gt;window&lt;/var&gt; 에 대해 실행 된 마지막 창 변경 기능에서을 &lt;var&gt;window&lt;/var&gt; 의 프레임. 이 반환하는 경우 &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;window&lt;/var&gt; 그 이후에 작성되었습니다. 이 반환하는 경우 &lt;code&gt;t&lt;/code&gt; 을 , &lt;var&gt;window&lt;/var&gt; 그 시간에 표시되지 그러나 이후 이전에 저장 한 창 구성에서 복원되었습니다. 그렇지 않으면 반환 값은 해당 시간 에 &lt;code&gt;window&lt;/code&gt; 에 표시되는 버퍼 입니다.</target>
        </trans-unit>
        <trans-unit id="f207ea234927993bddc13a73eabd00b28319c83c" translate="yes" xml:space="preserve">
          <source>This function returns the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;. If &lt;var&gt;buffer-or-name&lt;/var&gt; is a string and there is no buffer with that name, the value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;buffer-or-name&lt;/var&gt; is a buffer, it is returned as given; that is not very useful, so the argument is usually a name. For example:</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 지정된 버퍼를 반환합니다 . 경우 &lt;var&gt;buffer-or-name&lt;/var&gt; 문자열은 해당 이름을 가진 버퍼가없는, 값은 &lt;code&gt;nil&lt;/code&gt; . 경우 &lt;var&gt;buffer-or-name&lt;/var&gt; 버퍼는 주어진이를 리턴; 그다지 유용하지 않으므로 인수는 일반적으로 이름입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="2edb4d729a1125ca4f5005a2a392f11b3c2f31b3" translate="yes" xml:space="preserve">
          <source>This function returns the buffer that &lt;var&gt;marker&lt;/var&gt; points into, or &lt;code&gt;nil&lt;/code&gt; if it points nowhere.</source>
          <target state="translated">이 함수는 &lt;var&gt;marker&lt;/var&gt; 가리키는 버퍼를 반환 하거나 아무데도 가리 &lt;code&gt;nil&lt;/code&gt; 않으면 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="794e1543e565851d5c11ce9c314a07e50d29d023" translate="yes" xml:space="preserve">
          <source>This function returns the buffer that &lt;var&gt;overlay&lt;/var&gt; belongs to. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;overlay&lt;/var&gt; has been deleted.</source>
          <target state="translated">이 함수는 &lt;var&gt;overlay&lt;/var&gt; 속한 버퍼를 반환합니다 . &lt;var&gt;overlay&lt;/var&gt; 가 삭제 된 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d01d92ea20a798dce7eda439fbf2a67a502741fc" translate="yes" xml:space="preserve">
          <source>This function returns the buffer that &lt;var&gt;window&lt;/var&gt; is displaying. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; it defaults to the selected window. If &lt;var&gt;window&lt;/var&gt; is an internal window, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 표시하는 버퍼를 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 또는 생략 &lt;code&gt;nil&lt;/code&gt; 선택된 윈도우에 기본값을. 경우 &lt;var&gt;window&lt;/var&gt; 내부 창이며,이 함수가 반환는 &lt;code&gt;nil&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="23a8a3cd9e8c76ead8f9733817e8cb2ca14490d3" translate="yes" xml:space="preserve">
          <source>This function returns the buffer visiting file &lt;var&gt;filename&lt;/var&gt;. If there is no such buffer, it returns &lt;code&gt;nil&lt;/code&gt;. The argument &lt;var&gt;filename&lt;/var&gt;, which must be a string, is expanded (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;), then compared against the visited file names of all live buffers. Note that the buffer&amp;rsquo;s &lt;code&gt;buffer-file-name&lt;/code&gt; must match the expansion of &lt;var&gt;filename&lt;/var&gt; exactly. This function will not recognize other names for the same file.</source>
          <target state="translated">이 함수는 파일 &lt;var&gt;filename&lt;/var&gt; 을 방문하는 버퍼를 반환합니다 . 그러한 버퍼가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 문자열이어야하는 &lt;var&gt;filename&lt;/var&gt; 인수 가 확장 된 다음 ( &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;파일 이름 확장&lt;/a&gt; 참조 ) 모든 라이브 버퍼의 방문 파일 이름과 비교됩니다. 버퍼의 것을 참고 &lt;code&gt;buffer-file-name&lt;/code&gt; 의 확장과 일치해야합니다 &lt;var&gt;filename&lt;/var&gt; 정확하게. 이 기능은 동일한 파일의 다른 이름을 인식하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="393334152133cc9793ac8f3f912ef22bc203bfd3" translate="yes" xml:space="preserve">
          <source>This function returns the buffer-local binding of &lt;var&gt;variable&lt;/var&gt; (a symbol) in buffer &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;variable&lt;/var&gt; does not have a buffer-local binding in buffer &lt;var&gt;buffer&lt;/var&gt;, it returns the default value (see &lt;a href=&quot;default-value#Default-Value&quot;&gt;Default Value&lt;/a&gt;) of &lt;var&gt;variable&lt;/var&gt; instead.</source>
          <target state="translated">이 함수는 리턴 버퍼 로컬 결합 &lt;var&gt;variable&lt;/var&gt; 버퍼의 (심벌) &lt;var&gt;buffer&lt;/var&gt; . 경우 &lt;var&gt;variable&lt;/var&gt; 버퍼 로컬 버퍼 구속력이없는 &lt;var&gt;buffer&lt;/var&gt; , 그것은 디폴트 값 (참조 반환 &lt;a href=&quot;default-value#Default-Value&quot;&gt;기본 값&lt;/a&gt; 의) &lt;var&gt;variable&lt;/var&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="c054a71b573ee03e371d843f5a44a431bde61b1f" translate="yes" xml:space="preserve">
          <source>This function returns the byte at character position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If the current buffer is unibyte, this is literally the byte at that position. If the buffer is multibyte, byte values of</source>
          <target state="translated">이 함수는 현재 버퍼의 &lt;var&gt;pos&lt;/var&gt; 문자 위치에있는 바이트를 반환합니다 . 현재 버퍼가 유니 바이트이면 말 그대로 해당 위치의 바이트입니다. 버퍼가 멀티 바이트 인 경우 바이트 값</target>
        </trans-unit>
        <trans-unit id="54832f061265be6d011cde62a49f7e79503845eb" translate="yes" xml:space="preserve">
          <source>This function returns the category set for character &lt;var&gt;char&lt;/var&gt; in the current buffer&amp;rsquo;s category table. This is the bool-vector which records which categories the character &lt;var&gt;char&lt;/var&gt; belongs to. The function &lt;code&gt;char-category-set&lt;/code&gt; does not allocate storage, because it returns the same bool-vector that exists in the category table.</source>
          <target state="translated">이 함수는 현재 버퍼의 범주 테이블에서 문자 &lt;var&gt;char&lt;/var&gt; 에 대한 범주 집합을 반환 합니다. 이것은 문자 &lt;var&gt;char&lt;/var&gt; 이 속한 카테고리를 기록하는 bool-vector입니다 . &lt;code&gt;char-category-set&lt;/code&gt; 함수 는 범주 테이블에 존재하는 동일한 bool-vector를 반환하기 때문에 스토리지를 할당하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0e464309ce1a0fa942568411b2096100447696e9" translate="yes" xml:space="preserve">
          <source>This function returns the character following point in the current buffer. This is similar to &lt;code&gt;(char-after (point))&lt;/code&gt;. However, if point is at the end of the buffer, then &lt;code&gt;following-char&lt;/code&gt; returns 0.</source>
          <target state="translated">이 함수는 현재 버퍼의 지점을 따르는 문자를 반환합니다. 이것은 &lt;code&gt;(char-after (point))&lt;/code&gt; 와 유사합니다 . 그러나 point가 버퍼의 끝에 있으면 &lt;code&gt;following-char&lt;/code&gt; 는 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="860131af9bef67556be9087b7e73990200e62428" translate="yes" xml:space="preserve">
          <source>This function returns the character in the current buffer at (i.e., immediately after) position &lt;var&gt;position&lt;/var&gt;. If &lt;var&gt;position&lt;/var&gt; is out of range for this purpose, either before the beginning of the buffer, or at or beyond the end, then the value is &lt;code&gt;nil&lt;/code&gt;. The default for &lt;var&gt;position&lt;/var&gt; is point.</source>
          <target state="translated">이 함수는 position &lt;var&gt;position&lt;/var&gt; (즉, 바로 뒤)에있는 현재 버퍼의 문자를 반환합니다 . 경우 &lt;var&gt;position&lt;/var&gt; 버퍼의 시작 전이나 또는 그 이상의 단 하나, 이러한 목적의 범위를 벗어나, 그 값은 &lt;code&gt;nil&lt;/code&gt; . &lt;var&gt;position&lt;/var&gt; 의 기본값 은 포인트입니다.</target>
        </trans-unit>
        <trans-unit id="9942a3ece43bdc3f774637acc3730cf2d36e9ca6" translate="yes" xml:space="preserve">
          <source>This function returns the character in the current buffer immediately before position &lt;var&gt;position&lt;/var&gt;. If &lt;var&gt;position&lt;/var&gt; is out of range for this purpose, either at or before the beginning of the buffer, or beyond the end, then the value is &lt;code&gt;nil&lt;/code&gt;. The default for &lt;var&gt;position&lt;/var&gt; is point.</source>
          <target state="translated">이 함수는 위치 &lt;var&gt;position&lt;/var&gt; 바로 전에 현재 버퍼의 문자를 반환합니다 . 경우 &lt;var&gt;position&lt;/var&gt; 또는 상기 버퍼의 시작 전에 또는 최종 초과하거나, 이러한 목적의 범위를 벗어나, 그 값은 &lt;code&gt;nil&lt;/code&gt; . &lt;var&gt;position&lt;/var&gt; 의 기본값 은 포인트입니다.</target>
        </trans-unit>
        <trans-unit id="0b5bc7aca0c68f650574584abd803fa26b5bbbb7" translate="yes" xml:space="preserve">
          <source>This function returns the character of glyph code &lt;var&gt;glyph&lt;/var&gt;.</source>
          <target state="translated">이 함수는 glyph 코드 &lt;var&gt;glyph&lt;/var&gt; 의 문자를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="af70b2b22e7f479746848c63ad72de7b50b912ba" translate="yes" xml:space="preserve">
          <source>This function returns the character preceding point in the current buffer. See above, under &lt;code&gt;following-char&lt;/code&gt;, for an example. If point is at the beginning of the buffer, &lt;code&gt;preceding-char&lt;/code&gt; returns 0.</source>
          <target state="translated">이 함수는 현재 버퍼에서 문자 선행 지점을 반환합니다. 예를 보려면 위의 &lt;code&gt;following-char&lt;/code&gt; 아래를 참조하십시오 . point가 버퍼의 시작 부분에 있으면 &lt;code&gt;preceding-char&lt;/code&gt; 는 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dcf5ddba9780ca9498f530d93503bd9e4349bafd" translate="yes" xml:space="preserve">
          <source>This function returns the character whose Unicode name is &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, case is ignored in &lt;var&gt;string&lt;/var&gt;. This function returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; does not name a character.</source>
          <target state="translated">이 함수는 유니 코드 이름이 &lt;var&gt;string&lt;/var&gt; 인 문자를 반환 합니다 . &lt;var&gt;ignore-case&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;string&lt;/var&gt; 에서 case가 무시됩니다 . 이 기능 반환 &lt;code&gt;nil&lt;/code&gt; 을 경우 &lt;var&gt;string&lt;/var&gt; 문자의 이름을하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b53ba3447cb8ecbd614b1acfd769d74cbaf71a95" translate="yes" xml:space="preserve">
          <source>This function returns the charset of highest priority containing the character at position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If &lt;var&gt;pos&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current value of point. If &lt;var&gt;pos&lt;/var&gt; is out of range, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 현재 버퍼의 &lt;var&gt;pos&lt;/var&gt; 위치 에있는 문자를 포함하는 가장 높은 우선 순위의 문자 집합을 반환합니다 . 경우 &lt;var&gt;pos&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 지점의 현재 값, 기본값. 경우 &lt;var&gt;pos&lt;/var&gt; 가 범위를 벗어난 값은 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ec1b95ff12149b402c74247411bcfcbb9961db4" translate="yes" xml:space="preserve">
          <source>This function returns the code point assigned to the character &lt;var&gt;char&lt;/var&gt; in &lt;var&gt;charset&lt;/var&gt;. If &lt;var&gt;charset&lt;/var&gt; doesn&amp;rsquo;t have a codepoint for &lt;var&gt;char&lt;/var&gt;, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;charset&lt;/var&gt; 의 문자 &lt;var&gt;char&lt;/var&gt; 에 할당 된 코드 포인트를 반환합니다 . 경우 &lt;var&gt;charset&lt;/var&gt; 의 코드 포인트가없는 &lt;var&gt;char&lt;/var&gt; , 값은 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e55ed7826316699571a3522f67e0858a505a880" translate="yes" xml:space="preserve">
          <source>This function returns the coding system that is in use for encoding terminal output from &lt;var&gt;terminal&lt;/var&gt;. A value of &lt;code&gt;no-conversion&lt;/code&gt; means no encoding is done. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">이 함수는 터미널에서 출력 된 &lt;var&gt;terminal&lt;/var&gt; 을 인코딩하는 데 사용중인 코딩 시스템을 반환합니다 . &lt;code&gt;no-conversion&lt;/code&gt; 값은 인코딩이 수행되지 않음을 의미합니다. 경우 &lt;var&gt;terminal&lt;/var&gt; 프레임은, 그 프레임의 단말 수단; 그 경우 &lt;code&gt;nil&lt;/code&gt; , 현재 선택된 단말의 프레임을 의미한다.</target>
        </trans-unit>
        <trans-unit id="c1ce001a7ab985d6d17830d9dbd5cc9820d77fa9" translate="yes" xml:space="preserve">
          <source>This function returns the coding system to use (by default) for performing &lt;var&gt;operation&lt;/var&gt; with &lt;var&gt;arguments&lt;/var&gt;. The value has this form:</source>
          <target state="translated">이 기능을 수행하는 (기본적으로) 사용에 대한 코딩 시스템 반환 &lt;var&gt;operation&lt;/var&gt; 함께 &lt;var&gt;arguments&lt;/var&gt; . 값의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0743ffd0ec3f7f3285592123749c8c1f6e9bcc21" translate="yes" xml:space="preserve">
          <source>This function returns the coding system used for decoding keyboard input from &lt;var&gt;terminal&lt;/var&gt;. A value of &lt;code&gt;no-conversion&lt;/code&gt; means no decoding is done. If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it means the selected frame&amp;rsquo;s terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;terminal&lt;/var&gt; 에서 키보드 입력을 디코딩하는 데 사용되는 코딩 시스템을 반환합니다 . &lt;code&gt;no-conversion&lt;/code&gt; 값은 디코딩이 수행되지 않음을 의미합니다. 경우 &lt;var&gt;terminal&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임의 단말기를 의미한다. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;다중 터미널을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="325677e13672640bb0f70ae0e30b6be69bd6142b" translate="yes" xml:space="preserve">
          <source>This function returns the combination limit for &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 조합 제한을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a43200aba68114ea5997111d4c9ebcf19e2c45cc" translate="yes" xml:space="preserve">
          <source>This function returns the command that was executed to start &lt;var&gt;process&lt;/var&gt;. This is a list of strings, the first string being the program executed and the rest of the strings being the arguments that were given to the program. For a network, serial, or pipe connection, this is either &lt;code&gt;nil&lt;/code&gt;, which means the process is running or &lt;code&gt;t&lt;/code&gt; (process is stopped).</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 를 시작하기 위해 실행 된 명령을 반환합니다 . 이것은 문자열 목록입니다. 첫 번째 문자열은 실행 된 프로그램이고 나머지 문자열은 프로그램에 제공된 인수입니다. 네트워크, 직렬 또는 파이프 연결의 경우 이는 프로세스가 실행 중임을 의미하는 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;t&lt;/code&gt; (프로세스가 중지됨)입니다.</target>
        </trans-unit>
        <trans-unit id="e361e6786be2f1382c44b532a802b6d0460743b0" translate="yes" xml:space="preserve">
          <source>This function returns the contents of extra slot &lt;var&gt;n&lt;/var&gt; (zero based) of &lt;var&gt;char-table&lt;/var&gt;. The number of extra slots in a char-table is determined by its subtype.</source>
          <target state="translated">이 함수는 &lt;var&gt;char-table&lt;/var&gt; 의 추가 슬롯 &lt;var&gt;n&lt;/var&gt; (0 기반)의 내용을 반환 합니다 . 문자 테이블의 추가 슬롯 수는 하위 유형에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="51b4cd04217b6ceb23d0c15fa9c08934e9444d53" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the entire accessible portion of the current buffer, as a string.</source>
          <target state="translated">이 함수는 현재 버퍼에서 액세스 가능한 전체 부분의 내용을 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a7ca20c47ee46a9be56691ccb80bd8d9bcfac932" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the field specified by &lt;var&gt;pos&lt;/var&gt;, as a string, discarding text properties.</source>
          <target state="translated">이 함수는 텍스트 속성을 무시 하고 &lt;var&gt;pos&lt;/var&gt; 로 지정된 필드의 내용을 문자열로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="08d1f22afa5d4658cd97fa3595d61e62cc5d2a19" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the field specified by &lt;var&gt;pos&lt;/var&gt;, as a string.</source>
          <target state="translated">이 함수는 &lt;var&gt;pos&lt;/var&gt; 로 지정된 필드의 내용을 문자열로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4d190583371f14a9a5b5b27ed2fcb3f925699b5b" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the register &lt;var&gt;reg&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if it has no contents.</source>
          <target state="translated">이 기능은 레지스터의 내용을 반환 &lt;var&gt;reg&lt;/var&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 가에 내용이없는 경우.</target>
        </trans-unit>
        <trans-unit id="036016283bc9e72b9d0ebf9a817f1f314e1fa778" translate="yes" xml:space="preserve">
          <source>This function returns the current 1-minute, 5-minute, and 15-minute system load averages, in a list. The load average indicates the number of processes trying to run on the system.</source>
          <target state="translated">이 함수는 현재 1 분, 5 분 및 15 분 시스템로드 평균을 목록으로 반환합니다. 로드 평균은 시스템에서 실행하려는 프로세스 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e13cc27f66cc2eae68142d6cf32117780e8cee96" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s case table.</source>
          <target state="translated">이 함수는 현재 버퍼의 케이스 테이블을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5dbd62bb295b31420250d992087a051f16a66d2d" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s category table.</source>
          <target state="translated">이 함수는 현재 버퍼의 범주 테이블을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3daf85c5d4467c6b3e4dec9953cfc5cc9e809ed4" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s local keymap, or &lt;code&gt;nil&lt;/code&gt; if it has none. In the following example, the keymap for the</source>
          <target state="translated">이 함수는 현재 버퍼의 로컬 키맵을 반환하거나, 없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 다음 예에서</target>
        </trans-unit>
        <trans-unit id="e152d463b3ee5bcd346e8191450c99e2326e6317" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s mark position as an integer, or &lt;code&gt;nil&lt;/code&gt; if no mark has ever been set in this buffer.</source>
          <target state="translated">이 함수는 현재 버퍼의 마크 위치를 정수로 반환 &lt;code&gt;nil&lt;/code&gt; 버퍼에 마크가 설정되지 않은 경우 nil을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="071b5c745e1b4cbebd18da0d5cc071bdb2d3d763" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s recorded last file modification time, as a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">이 함수는 Lisp 타임 스탬프로 현재 버퍼의 기록 된 마지막 파일 수정 시간을 반환합니다 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="34fa25aa31f0c7a8c65b92b947c1fd977d054d5e" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer.</source>
          <target state="translated">이 함수는 현재 버퍼를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6de0c8fe70e6dcce9175a638e7a9de3df3739a69" translate="yes" xml:space="preserve">
          <source>This function returns the current depth of activations of the minibuffer, a nonnegative integer. If no minibuffers are active, it returns zero.</source>
          <target state="translated">이 함수는 음이 아닌 정수인 미니 버퍼의 현재 활성화 깊이를 반환합니다. 활성화 된 미니 버퍼가 없으면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7370f39d58467bf8cdff8f4d2ab4f4001955c955" translate="yes" xml:space="preserve">
          <source>This function returns the current depth of recursive edits. When no recursive edit is active, it returns 0.</source>
          <target state="translated">이 함수는 재귀 편집의 현재 깊이를 반환합니다. 재귀 편집이 활성화되지 않은 경우 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a334674a89fb41b9fcd6b53a64d5ad922baccc89" translate="yes" xml:space="preserve">
          <source>This function returns the current display-width of the minibuffer prompt, if a minibuffer is current. Otherwise, it returns zero.</source>
          <target state="translated">이 함수는 미니 버퍼가 현재 인 경우 미니 버퍼 프롬프트의 현재 디스플레이 너비를 반환합니다. 그렇지 않으면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="209b485644b04066203a24ff4577cfb5245a869b" translate="yes" xml:space="preserve">
          <source>This function returns the current gap position in the current buffer.</source>
          <target state="translated">이 함수는 현재 버퍼의 현재 간격 위치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ff30ac7c69083cf1d2964b3d394667666d3c4cc" translate="yes" xml:space="preserve">
          <source>This function returns the current gap size of the current buffer.</source>
          <target state="translated">이 함수는 현재 버퍼의 현재 간격 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="833c2fcc632bff2bad7660b9f568c4ff6a32100e" translate="yes" xml:space="preserve">
          <source>This function returns the current global keymap. This is the same as the value of &lt;code&gt;global-map&lt;/code&gt; unless you change one or the other. The return value is a reference, not a copy; if you use &lt;code&gt;define-key&lt;/code&gt; or other functions on it you will alter global bindings.</source>
          <target state="translated">이 함수는 현재 전역 키맵을 반환합니다. 둘 중 하나를 변경하지 않는 한 &lt;code&gt;global-map&lt;/code&gt; 의 값과 동일 합니다. 반환 값은 복사본이 아니라 참조입니다. 당신이 사용하는 경우 &lt;code&gt;define-key&lt;/code&gt; 거기에 다른 기능을 사용하면 글로벌 바인딩을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="26c70a70ba76e43557db185bd2ad9d5818d3cc64" translate="yes" xml:space="preserve">
          <source>This function returns the current mode for reading keyboard input. It returns a list, corresponding to the arguments of &lt;code&gt;set-input-mode&lt;/code&gt;, of the form &lt;code&gt;(&lt;var&gt;interrupt&lt;/var&gt; &lt;var&gt;flow&lt;/var&gt; &lt;var&gt;meta&lt;/var&gt; &lt;var&gt;quit&lt;/var&gt;)&lt;/code&gt; in which:</source>
          <target state="translated">이 함수는 키보드 입력을 읽기위한 현재 모드를 반환합니다. &lt;code&gt;set-input-mode&lt;/code&gt; 의 인수에 해당하는 목록을 다음 과 같은 형식 &lt;code&gt;(&lt;var&gt;interrupt&lt;/var&gt; &lt;var&gt;flow&lt;/var&gt; &lt;var&gt;meta&lt;/var&gt; &lt;var&gt;quit&lt;/var&gt;)&lt;/code&gt; 으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e1344ac7bde80ba58c001475e91eab9d2db82002" translate="yes" xml:space="preserve">
          <source>This function returns the current position of point in &lt;var&gt;window&lt;/var&gt;. For a nonselected window, this is the value point would have (in that window&amp;rsquo;s buffer) if that window were selected. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 에서 포인트의 현재 위치를 반환합니다 . 선택되지 않은 윈도우의 경우, 해당 윈도우가 선택되었을 때 (해당 윈도우의 버퍼에있는) 값 포인트입니다. &lt;var&gt;window&lt;/var&gt; 기본값 은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="751f513a99f55339dad26fb989328ccf79258934" translate="yes" xml:space="preserve">
          <source>This function returns the current position of the end of the minibuffer prompt, if a minibuffer is current. Otherwise, it returns the minimum valid buffer position.</source>
          <target state="translated">이 함수는 미니 버퍼가 현재 인 경우 미니 버퍼 프롬프트 끝의 현재 위치를 반환합니다. 그렇지 않으면 최소 유효 버퍼 위치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="992ba8735ecc11b86b373afefd4569d02d036e4f" translate="yes" xml:space="preserve">
          <source>This function returns the current setting of &lt;var&gt;xwidget&lt;/var&gt;s query-on-exit flag, either &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;xwidget&lt;/var&gt; s query-on-exit 플래그 의 현재 설정 ( &lt;code&gt;t&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; )을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1605343bd112024f01e36fdd2b7a0f35af5c105a" translate="yes" xml:space="preserve">
          <source>This function returns the current syntax table, which is the table for the current buffer.</source>
          <target state="translated">이 함수는 현재 버퍼에 대한 테이블 인 현재 구문 테이블을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e842e0bd67d2217ef8c641978cbb8a3025a7d741" translate="yes" xml:space="preserve">
          <source>This function returns the current time and date as a human-readable string. The format does not vary for the initial part of the string, which contains the day of week, month, day of month, and time of day in that order: the number of characters used for these fields is always the same, although (unless you require English weekday or month abbreviations regardless of locale) it is typically more convenient to use &lt;code&gt;format-time-string&lt;/code&gt; than to extract fields from the output of &lt;code&gt;current-time-string&lt;/code&gt;, as the year might not have exactly four digits, and additional information may some day be added at the end.</source>
          <target state="translated">이 함수는 현재 시간과 날짜를 사람이 읽을 수있는 문자열로 반환합니다. 형식은 요일, 월, 일 및 시간을 순서대로 포함하는 문자열의 초기 부분에 대해 다르지 않습니다. 이러한 필드에 사용되는 문자 수는 항상 동일합니다. 로케일에 관계없이 영어 주중 또는 월 약어가 필요합니다) 연도에는 정확히 4 자리 숫자와 추가 정보가 없을 수 있으므로 일반적으로 &lt;code&gt;current-time-string&lt;/code&gt; 의 출력에서 ​​필드를 추출하는 것보다 &lt;code&gt;format-time-string&lt;/code&gt; 을 사용하는 것이 더 편리 합니다. 언젠가는 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11d21eb47763f40dc08c6ce5486695add274fc05" translate="yes" xml:space="preserve">
          <source>This function returns the current time as a Lisp timestamp. Although the timestamp takes the form &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt;
&lt;var&gt;micro&lt;/var&gt; &lt;var&gt;pico&lt;/var&gt;)&lt;/code&gt; in the current Emacs release, this is planned to change in a future Emacs version. You can use the &lt;code&gt;time-convert&lt;/code&gt; function to convert a timestamp to some other form. See &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;.</source>
          <target state="translated">이 함수는 현재 시간을 Lisp 타임 스탬프로 반환합니다. 타임 스탬프는 현재 Emacs 릴리스에서 &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt; &lt;var&gt;pico&lt;/var&gt;)&lt;/code&gt; 형식을 취하지 만 향후 Emacs 버전에서 변경 될 예정입니다. &lt;code&gt;time-convert&lt;/code&gt; 함수를 사용하여 타임 스탬프를 다른 형식으로 변환 할 수 있습니다 . &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;시간 변환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ca5ec02b954d66722e99a53f808d75186728b45" translate="yes" xml:space="preserve">
          <source>This function returns the current time as a floating-point number of seconds since the epoch. The optional argument &lt;var&gt;time&lt;/var&gt;, if given, specifies a time to convert instead of the current time.</source>
          <target state="translated">이 함수는 에포크 이후 현재 시간을 부동 소수점 초 수로 반환합니다. 선택적 인수 인 &lt;var&gt;time&lt;/var&gt; 이 주어지면 현재 시간 대신 변환 할 시간을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3cdfbc19f8cf7af647e35d7ae671e98f2d3cf48a" translate="yes" xml:space="preserve">
          <source>This function returns the current vertical scroll position of &lt;var&gt;window&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window. If &lt;var&gt;pixels-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the return value is measured in pixels, rather than in units of the normal line height.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 현재 세로 스크롤 위치를 반환합니다 . &lt;var&gt;window&lt;/var&gt; 기본값 은 선택한 창입니다. &lt;var&gt;pixels-p&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 반환 값은 일반 선 높이 단위가 아니라 픽셀 단위로 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="be5e68c64217e84f1b2c0c7fe28c08bca9ac2808" translate="yes" xml:space="preserve">
          <source>This function returns the default file permissions, as an integer.</source>
          <target state="translated">이 함수는 기본 파일 권한을 정수로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="97e11024b259a242d14c35f6dd960baf950af365" translate="yes" xml:space="preserve">
          <source>This function returns the definition of &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;. All the other functions described in this chapter that look up keys use &lt;code&gt;lookup-key&lt;/code&gt;. Here are examples:</source>
          <target state="translated">이 기능의 정의를 반환 &lt;var&gt;key&lt;/var&gt; 에 &lt;var&gt;keymap&lt;/var&gt; . 키를 &lt;code&gt;lookup-key&lt;/code&gt; 하는이 장에서 설명하는 다른 모든 기능은 lookup-key를 사용 합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f739cdbbd570ba0edc9915bf8af43d87ca4fa1a" translate="yes" xml:space="preserve">
          <source>This function returns the description string of property &lt;var&gt;prop&lt;/var&gt;&amp;rsquo;s &lt;var&gt;value&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;value&lt;/var&gt; has no description.</source>
          <target state="translated">이 기능은 속성의 설명 문자열 반환 &lt;var&gt;prop&lt;/var&gt; 의 &lt;var&gt;value&lt;/var&gt; , 또는 &lt;code&gt;nil&lt;/code&gt; 경우 &lt;var&gt;value&lt;/var&gt; 설명이있다.</target>
        </trans-unit>
        <trans-unit id="4ee0b0fd37c8632a51aeb77ca02b41916b83393c" translate="yes" xml:space="preserve">
          <source>This function returns the desired size of &lt;var&gt;xwidget&lt;/var&gt; as a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;)&lt;/code&gt;. The dimensions are in pixels.</source>
          <target state="translated">이 함수는 원하는 크기의 &lt;var&gt;xwidget&lt;/var&gt; 을 형식 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; 목록으로 반환합니다 . 치수는 픽셀 단위입니다.</target>
        </trans-unit>
        <trans-unit id="ec709832d7f29efd2a39da7d7b7850b9b4e4ba43" translate="yes" xml:space="preserve">
          <source>This function returns the directory part of &lt;var&gt;filename&lt;/var&gt;, as a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not include a directory part.</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 의 디렉토리 부분을 디렉터리 이름 ( &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt; 참조 )으로 반환 하거나 &lt;var&gt;filename&lt;/var&gt; 에 디렉터리 부분이 포함되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="59860987f598c545f8b9bcfff6b6cb72ee9cf742" translate="yes" xml:space="preserve">
          <source>This function returns the display-start position of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">이 함수는 window &lt;var&gt;window&lt;/var&gt; 의 표시 시작 위치를 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ab178d94e8f4fb5e6083c60bc48ddb8e3dd39f3f" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of &lt;var&gt;face&lt;/var&gt; as a face.</source>
          <target state="translated">이 함수는 &lt;var&gt;face&lt;/var&gt; 의 문서 문자열을 얼굴 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2c9338686cd667d4140b47ca28366cb415af65d5" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of &lt;var&gt;function&lt;/var&gt;. It handles macros, named keyboard macros, and special forms, as well as ordinary functions.</source>
          <target state="translated">이 기능의 문서 문자열을 반환하는 &lt;var&gt;function&lt;/var&gt; . 매크로, 명명 된 키보드 매크로, 특수 형식 및 일반 기능을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="9a5d7c2e9adbaf842be004af9fde2fca9aab1694" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of category &lt;var&gt;category&lt;/var&gt; in category table &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이 기능은 카테고리의 문서 문자열 반환 &lt;var&gt;category&lt;/var&gt; 카테고리 테이블에 &lt;var&gt;table&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="327a3b4e00f0bceaa751aba50d642a7d9761e4fb" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of face &lt;var&gt;face&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if none was specified for it.</source>
          <target state="translated">이 함수는 face &lt;var&gt;face&lt;/var&gt; 의 문서화 문자열을 반환 하거나 , 아무것도 지정되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44ca6c7c32b626eecea9eac10588223d2fbbdf0e" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string recorded in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list under property &lt;var&gt;property&lt;/var&gt;. It is most often used to look up the documentation strings of variables, for which &lt;var&gt;property&lt;/var&gt; is &lt;code&gt;variable-documentation&lt;/code&gt;. However, it can also be used to look up other kinds of documentation, such as for customization groups (but for function documentation, use the &lt;code&gt;documentation&lt;/code&gt; function, below).</source>
          <target state="translated">이 함수는 property &lt;var&gt;property&lt;/var&gt; 아래의 &lt;var&gt;symbol&lt;/var&gt; 속성 목록에 기록 된 문서 문자열을 반환합니다 . &lt;var&gt;property&lt;/var&gt; 이 &lt;code&gt;variable-documentation&lt;/code&gt; 인 변수의 문서 문자열을 찾는 데 가장 자주 사용됩니다 . 그러나 사용자 정의 그룹과 같은 다른 종류의 문서를 조회하는데도 사용할 수 있습니다 (하지만 기능 문서의 경우 아래 &lt;code&gt;documentation&lt;/code&gt; 기능 사용 ).</target>
        </trans-unit>
        <trans-unit id="e0df81ba5e6bc53780f0fe1d51243f759d4b6f88" translate="yes" xml:space="preserve">
          <source>This function returns the duration of the Emacs initialization (see &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;Startup Summary&lt;/a&gt;) in seconds, as a string. When called interactively, it prints the duration in the echo area.</source>
          <target state="translated">이 함수는 Emacs 초기화 기간 ( &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;시작 요약&lt;/a&gt; 참조 )을 초 단위로 문자열로 반환 합니다. 대화식으로 호출되면 에코 영역에 지속 시간을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="38b3cddbbabb464b6eb77ec3e81f45128adbfa99" translate="yes" xml:space="preserve">
          <source>This function returns the edges of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;). Calling &lt;code&gt;(window-body-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t)&lt;/code&gt;, see above.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 몸체 의 가장자리를 반환합니다 ( &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;창 크기&lt;/a&gt; 참조 ). 호출 &lt;code&gt;(window-body-edges window)&lt;/code&gt; 호출하는 것과 &lt;code&gt;(window-edges window t)&lt;/code&gt; 상기 참조.</target>
        </trans-unit>
        <trans-unit id="58070afd7694244fe81996f6471589588178736e" translate="yes" xml:space="preserve">
          <source>This function returns the editable contents of the minibuffer (that is, everything except the prompt) as a string, if a minibuffer is current. Otherwise, it returns the entire contents of the current buffer.</source>
          <target state="translated">이 함수는 미니 버퍼가 현재 인 경우 미니 버퍼의 편집 가능한 내용 (즉, 프롬프트를 제외한 모든 항목)을 문자열로 반환합니다. 그렇지 않으면 현재 버퍼의 전체 내용을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e638fe6a028a6bff342276840c7e3ff3d05bf0c0" translate="yes" xml:space="preserve">
          <source>This function returns the effective</source>
          <target state="translated">이 함수는 효과적인</target>
        </trans-unit>
        <trans-unit id="cd81ea108b713689f09872a877b08ad9b1d0ac6b" translate="yes" xml:space="preserve">
          <source>This function returns the element of &lt;var&gt;sequence&lt;/var&gt; at the specified &lt;var&gt;index&lt;/var&gt;, which is an integer whose valid value range is zero to one less than the length of &lt;var&gt;sequence&lt;/var&gt;. For out-of-range values on built-in sequence types, &lt;code&gt;seq-elt&lt;/code&gt; behaves like &lt;code&gt;elt&lt;/code&gt;. For the details, see &lt;a href=&quot;#Definition-of-elt&quot;&gt;Definition of elt&lt;/a&gt;.</source>
          <target state="translated">이 함수는 유효한 값 범위가 &lt;var&gt;sequence&lt;/var&gt; 길이보다 0에서 1까지 작은 정수인 지정된 &lt;var&gt;index&lt;/var&gt; 에있는 &lt;var&gt;sequence&lt;/var&gt; 의 요소를 반환합니다 . 에 범위를 벗어난 값에 대한 기본 시퀀스의 종류 &lt;code&gt;seq-elt&lt;/code&gt; 처럼 행동한다 &lt;code&gt;elt&lt;/code&gt; . 자세한 내용 &lt;a href=&quot;#Definition-of-elt&quot;&gt;은 elt 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fac05d0665f3e7289256897ffadb2e8c525f3b6" translate="yes" xml:space="preserve">
          <source>This function returns the element of &lt;var&gt;sequence&lt;/var&gt; indexed by &lt;var&gt;index&lt;/var&gt;. Legitimate values of &lt;var&gt;index&lt;/var&gt; are integers ranging from 0 up to one less than the length of &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;sequence&lt;/var&gt; is a list, out-of-range values behave as for &lt;code&gt;nth&lt;/code&gt;. See &lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;Definition of nth&lt;/a&gt;. Otherwise, out-of-range values trigger an &lt;code&gt;args-out-of-range&lt;/code&gt; error.</source>
          <target state="translated">이 함수는 &lt;var&gt;index&lt;/var&gt; 로 인덱싱 된 &lt;var&gt;sequence&lt;/var&gt; 의 요소를 반환합니다 . &lt;var&gt;index&lt;/var&gt; 의 합법적 인 값은 0에서 &lt;var&gt;sequence&lt;/var&gt; 길이보다 1까지 적은 정수 입니다. 경우 &lt;var&gt;sequence&lt;/var&gt; 목록이며, 범위를 벗어난 값은 같이 동작 &lt;code&gt;nth&lt;/code&gt; . &lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;nth의 정의를&lt;/a&gt; 참조하십시오 . 그렇지 않으면 범위를 벗어난 값은 &lt;code&gt;args-out-of-range&lt;/code&gt; 오류를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="28ce8efdc853d4287db41074739ff8355b51257a" translate="yes" xml:space="preserve">
          <source>This function returns the element of &lt;var&gt;vector&lt;/var&gt; at &lt;var&gt;index&lt;/var&gt;. The &lt;var&gt;index&lt;/var&gt; of the first vector element is zero. The function raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition if the value of &lt;var&gt;index&lt;/var&gt; is invalid. To extract C data from the value the function returns, use the other extraction functions described here, as appropriate for the Lisp data type stored in that element of the vector.</source>
          <target state="translated">이 기능의 요소를 반환 &lt;var&gt;vector&lt;/var&gt; 에서 &lt;var&gt;index&lt;/var&gt; . 첫 번째 벡터 요소 의 &lt;var&gt;index&lt;/var&gt; 는 0입니다. 함수 는 &lt;var&gt;index&lt;/var&gt; 값 이 유효하지 않은 경우 &lt;code&gt;args-out-of-range&lt;/code&gt; 오류 조건을 발생시킵니다 . 함수가 반환하는 값에서 C 데이터를 추출하려면 벡터의 해당 요소에 저장된 Lisp 데이터 유형에 따라 여기에 설명 된 다른 추출 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6022d2828c80147f6e11b916ee6104d854bd2464" translate="yes" xml:space="preserve">
          <source>This function returns the end of the field specified by &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;pos&lt;/var&gt; 로 지정된 필드의 끝을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7659b2084cd98566701b3862fef309771ca48c1a" translate="yes" xml:space="preserve">
          <source>This function returns the entire property list of the character at &lt;var&gt;position&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">이 함수는 문자열 또는 버퍼 &lt;var&gt;object&lt;/var&gt; &lt;var&gt;position&lt;/var&gt; 에있는 문자의 전체 속성 목록을 반환 합니다 . 경우 &lt;var&gt;object&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 그것은 현재의 버퍼 기본값.</target>
        </trans-unit>
        <trans-unit id="61e315374159d80512d1d1fa8018d6cb504dc1f0" translate="yes" xml:space="preserve">
          <source>This function returns the error message string for a given error descriptor. It is useful if you want to handle an error by printing the usual error message for that error. See &lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;Definition of signal&lt;/a&gt;.</source>
          <target state="translated">이 함수는 주어진 오류 설명자에 대한 오류 메시지 문자열을 반환합니다. 해당 오류에 대한 일반적인 오류 메시지를 인쇄하여 오류를 처리하려는 경우 유용합니다. &lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;신호 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c2c91976a5994aa96bd2490bd1a12e016e17d5d" translate="yes" xml:space="preserve">
          <source>This function returns the exit status of &lt;var&gt;process&lt;/var&gt; or the signal number that killed it. (Use the result of &lt;code&gt;process-status&lt;/code&gt; to determine which of those it is.) If &lt;var&gt;process&lt;/var&gt; has not yet terminated, the value is 0. For network, serial, and pipe connections that are already closed, the value is either 0 or 256, depending on whether the connection was closed normally or abnormally.</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 의 종료 상태 또는 프로세스를 종료 한 신호 번호를 반환합니다 . ( &lt;code&gt;process-status&lt;/code&gt; 의 결과를 사용하여 어떤 것인지 확인하십시오.) &lt;var&gt;process&lt;/var&gt; 가 아직 종료되지 않은 경우 값은 0입니다. 이미 닫힌 네트워크, 직렬 및 파이프 연결의 경우 값은 0 또는 256입니다. 연결이 정상적으로 종료되었는지 비정상적으로 종료되었는지에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7a2e5cf18e7b6e92bd1e9a29600a7899256e05e0" translate="yes" xml:space="preserve">
          <source>This function returns the file name of the device used by &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame&amp;rsquo;s terminal. &lt;var&gt;terminal&lt;/var&gt; can also be a frame, meaning that frame&amp;rsquo;s terminal.</source>
          <target state="translated">이 함수는 &lt;var&gt;terminal&lt;/var&gt; 사용하는 장치의 파일 이름을 반환합니다 . 경우 &lt;var&gt;terminal&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임의 단말에 디폴트. &lt;var&gt;terminal&lt;/var&gt; 은 프레임 일 수도 있습니다. 즉, 해당 프레임의 터미널을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ce753c3d111c8762d1ec95c52fd5c78e276e4613" translate="yes" xml:space="preserve">
          <source>This function returns the file name to use for auto-saving the current buffer. This is just the file name with hash marks (&amp;lsquo;</source>
          <target state="translated">이 함수는 현재 버퍼를 자동 저장하는 데 사용할 파일 이름을 반환합니다. 이것은 해시 표시 ( '</target>
        </trans-unit>
        <trans-unit id="92a57e3434293cf77f0c329bfa05076d69a74772" translate="yes" xml:space="preserve">
          <source>This function returns the filter function of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 의 필터 함수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="304b5206fd666ead7f032e6ac3d96504496e950b" translate="yes" xml:space="preserve">
          <source>This function returns the finalizer of the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;val&lt;/var&gt;, or &lt;code&gt;NULL&lt;/code&gt; if it doesn&amp;rsquo;t have a finalizer.</source>
          <target state="translated">이 함수는 &lt;var&gt;val&lt;/var&gt; 로 표시되는 &lt;code&gt;user-ptr&lt;/code&gt; 객체의 종료 자를 반환 하거나 종료 자가없는 경우 &lt;code&gt;NULL&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1b9f75e6bcd14cc29ffe2ff084be5d52b71ada59" translate="yes" xml:space="preserve">
          <source>This function returns the first &lt;var&gt;n&lt;/var&gt; (an integer) elements of &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;n&lt;/var&gt; is negative or zero, the result is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence&lt;/var&gt; 의 처음 &lt;var&gt;n&lt;/var&gt; (정수) 요소를 반환합니다 . 경우 &lt;var&gt;n&lt;/var&gt; 은 음수거나 제로이고, 결과는 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95622997e2b0f3b75d62c3dca83e2bc97f957b78" translate="yes" xml:space="preserve">
          <source>This function returns the first association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;, comparing &lt;var&gt;key&lt;/var&gt; against the alist elements using &lt;var&gt;testfn&lt;/var&gt; if it is non-&lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt; otherwise (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;). It returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CAR&lt;/small&gt; equal to &lt;var&gt;key&lt;/var&gt;. For example:</source>
          <target state="translated">이 기능을위한 제 연관 리턴 &lt;var&gt;key&lt;/var&gt; 에 &lt;var&gt;alist&lt;/var&gt; 를 비교하여, &lt;var&gt;key&lt;/var&gt; 사용 alist 소자 대를 &lt;var&gt;testfn&lt;/var&gt; 를 가 아닌 경우, &lt;code&gt;nil&lt;/code&gt; 와 &lt;code&gt;equal&lt;/code&gt; (참조 달리 &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;평등 술어&lt;/a&gt; ). 그것은 반환 &lt;code&gt;nil&lt;/code&gt; 에는 연결하면 &lt;var&gt;alist&lt;/var&gt; 는 이 없습니다 &lt;small&gt;CAR를&lt;/small&gt; 동일 &lt;var&gt;key&lt;/var&gt; . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="a59d32287b03585a74766375fd8a5ff0d403725f" translate="yes" xml:space="preserve">
          <source>This function returns the first association with value &lt;var&gt;value&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CDR&lt;/small&gt;&lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;alist&lt;/var&gt; 에서 값 &lt;var&gt;value&lt;/var&gt; 과의 첫 번째 연결을 반환합니다 . 그것은 반환 &lt;code&gt;nil&lt;/code&gt; 에는 연결하면 &lt;var&gt;alist&lt;/var&gt; 는 이 없습니다 &lt;small&gt;CDR의 &lt;/small&gt; &lt;code&gt;eq&lt;/code&gt; 에 &lt;var&gt;value&lt;/var&gt; .&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dfded93f515ac53b4d2da06b96ed2c8afb045470" translate="yes" xml:space="preserve">
          <source>This function returns the first association with value &lt;var&gt;value&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CDR&lt;/small&gt;&lt;code&gt;equal&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;alist&lt;/var&gt; 에서 값 &lt;var&gt;value&lt;/var&gt; 과의 첫 번째 연결을 반환합니다 . 그것은 반환 &lt;code&gt;nil&lt;/code&gt; 에는 연결하면 &lt;var&gt;alist&lt;/var&gt; 는 이 없습니다 &lt;small&gt;CDR은 &lt;/small&gt; &lt;code&gt;equal&lt;/code&gt; 에 &lt;var&gt;value&lt;/var&gt; .&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f8a4a19cfbcbd3ccf25a4968ef106de94c924b21" translate="yes" xml:space="preserve">
          <source>This function returns the first buffer in the buffer list other than &lt;var&gt;buffer&lt;/var&gt;. Usually, this is the buffer appearing in the most recently selected window (in frame &lt;var&gt;frame&lt;/var&gt; or else the selected frame, see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;), aside from &lt;var&gt;buffer&lt;/var&gt;. Buffers whose names start with a space are not considered at all.</source>
          <target state="translated">이 기능은 이외의 버퍼 목록의 첫 번째 버퍼 반환 &lt;var&gt;buffer&lt;/var&gt; . 일반적으로,이 버퍼는 가장 최근에 선택된 윈도우에 표시이다 (프레임의 &lt;var&gt;frame&lt;/var&gt; 또는 다른 선택된 프레임이 참조 &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;초점 입력&lt;/a&gt; 옆에서) &lt;var&gt;buffer&lt;/var&gt; . 이름이 공백으로 시작하는 버퍼는 전혀 고려되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6437afb7eb6fe5caad1bf29e3b3333d83166b00" translate="yes" xml:space="preserve">
          <source>This function returns the first character in &lt;var&gt;string&lt;/var&gt;. This mostly identical to &lt;code&gt;(aref string 0)&lt;/code&gt;, except that it returns 0 if the string is empty. (The value is also 0 when the first character of &lt;var&gt;string&lt;/var&gt; is the null character,</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 의 첫 번째 문자를 반환 합니다 . 이것은 문자열이 비어 있으면 0을 반환한다는 점을 제외하면 &lt;code&gt;(aref string 0)&lt;/code&gt; 과 거의 동일합니다 . ( &lt;var&gt;string&lt;/var&gt; 의 첫 번째 문자 가 널 문자 인 경우 값도 0입니다 .</target>
        </trans-unit>
        <trans-unit id="18eface75d6bdfc7def1421e1d4b2ed4de262259" translate="yes" xml:space="preserve">
          <source>This function returns the first child window of the internal window &lt;var&gt;window&lt;/var&gt;&amp;mdash;the topmost child window for a vertical combination, or the leftmost child window for a horizontal combination. If &lt;var&gt;window&lt;/var&gt; is a live window, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 내부 창 &lt;var&gt;window&lt;/var&gt; 첫 번째 자식 창 ( 세로 조합의 경우 맨 위 자식 창, 가로 조합의 경우 맨 왼쪽 자식 창)을 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 라이브 윈도우 인 경우, 반환 값은 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="026b4b1c05e3ea2e46392918a30c7f64e3c91618" translate="yes" xml:space="preserve">
          <source>This function returns the first element in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. If no element matches &lt;var&gt;predicate&lt;/var&gt;, the function returns &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;predicate&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 것을 리턴 하는 &lt;var&gt;sequence&lt;/var&gt; 첫 번째 요소를 리턴합니다 . &lt;var&gt;predicate&lt;/var&gt; 와 일치하는 요소가 없으면 함수는 &lt;var&gt;default&lt;/var&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="77752b29ea768cd78c230e1126f196d832964603" translate="yes" xml:space="preserve">
          <source>This function returns the first non-&lt;code&gt;nil&lt;/code&gt; value returned by applying &lt;var&gt;predicate&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; in turn.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence&lt;/var&gt; 각 요소에 차례로 &lt;var&gt;predicate&lt;/var&gt; 를 적용하여 반환 된 &lt;code&gt;nil&lt;/code&gt; 이 아닌 첫 번째 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ef766fd7b693c5f7eb0886924ccfa1095c4c58c5" translate="yes" xml:space="preserve">
          <source>This function returns the first window displaying &lt;var&gt;buffer-or-name&lt;/var&gt; in the cyclic ordering of windows, starting from the selected window (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;). If no such window exists, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 선택한 창부터 시작하여 창의 주기적 순서로 &lt;var&gt;buffer-or-name&lt;/var&gt; 을 표시하는 첫 번째 창을 반환합니다 ( &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;순환 창 순서&lt;/a&gt; 참조 ). 그러한 창이 없으면 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9822d9013b85df04770d47068cad1835aa1b7c55" translate="yes" xml:space="preserve">
          <source>This function returns the fractional vertical position of a scroll bar event within the scroll bar. The value is a cons cell &lt;code&gt;(&lt;var&gt;portion&lt;/var&gt; . &lt;var&gt;whole&lt;/var&gt;)&lt;/code&gt; containing two integers whose ratio is the fractional position.</source>
          <target state="translated">이 함수는 스크롤 막대 내에서 스크롤 막대 이벤트의 부분 수직 위치를 반환합니다. 값은 비율이 소수 위치 인 두 개의 정수를 포함 하는 cons 셀 &lt;code&gt;(&lt;var&gt;portion&lt;/var&gt; . &lt;var&gt;whole&lt;/var&gt;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9b6774e07e613daf7ae531da6c39e0dd19c54972" translate="yes" xml:space="preserve">
          <source>This function returns the frame for which the window configuration &lt;var&gt;config&lt;/var&gt; was made.</source>
          <target state="translated">이 함수는 창 구성 &lt;var&gt;config&lt;/var&gt; 이 만들어진 프레임을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4aa9bf6cd5060b888738dc1590782a333214f9e1" translate="yes" xml:space="preserve">
          <source>This function returns the frame that the window &lt;var&gt;window&lt;/var&gt; belongs to. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 속한 프레임을 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값.</target>
        </trans-unit>
        <trans-unit id="502db217f16504924a36df22e5236ee8d77a9630" translate="yes" xml:space="preserve">
          <source>This function returns the fringe bitmaps of the display line containing position &lt;var&gt;pos&lt;/var&gt; in window &lt;var&gt;window&lt;/var&gt;. The return value has the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;ov&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;left&lt;/var&gt; is the symbol for the fringe bitmap in the left fringe (or &lt;code&gt;nil&lt;/code&gt; if no bitmap), &lt;var&gt;right&lt;/var&gt; is similar for the right fringe, and &lt;var&gt;ov&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; if there is an overlay arrow in the left fringe.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 에서 위치 &lt;var&gt;pos&lt;/var&gt; 를 포함하는 디스플레이 라인의 프린지 비트 맵을 반환합니다 . 반환 값은 형태 갖는다 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;ov&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;ov&lt;/var&gt; ) , &lt;var&gt;left&lt;/var&gt; 프린지 왼쪽 프린지 비트 맵 (또는 상징이다 &lt;code&gt;nil&lt;/code&gt; 없는 맵 경우), &lt;var&gt;right&lt;/var&gt; 오른쪽 프린지 비슷하고, &lt;var&gt;ov&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 이 있으면 왼쪽 가장자리의 오버레이 화살표.</target>
        </trans-unit>
        <trans-unit id="dee697b8e3f2bffab7d0042854c1e83fa502cb04" translate="yes" xml:space="preserve">
          <source>This function returns the full name of the logged-in user&amp;mdash;or the value of the environment variable &lt;code&gt;NAME&lt;/code&gt;, if that is set.</source>
          <target state="translated">이 함수는 로그인 한 사용자의 전체 이름 또는 환경 변수 &lt;code&gt;NAME&lt;/code&gt; 값 ( 설정된 경우)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bbb0e9577d85da84f269e2be661732223051c86d" translate="yes" xml:space="preserve">
          <source>This function returns the group name that corresponds to the numeric group ID &lt;var&gt;gid&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if there is no such group.</source>
          <target state="translated">이 기능은 그룹의 숫자로 된 그룹 ID에 해당하는 그 이름 반환 &lt;var&gt;gid&lt;/var&gt; 가 , 또는 &lt;code&gt;nil&lt;/code&gt; 그런 그룹이없는 경우.</target>
        </trans-unit>
        <trans-unit id="326bb1244028405a702b38cacee3e8a0e4f08e13" translate="yes" xml:space="preserve">
          <source>This function returns the handler function for file name &lt;var&gt;file&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if there is none. The argument &lt;var&gt;operation&lt;/var&gt; should be the operation to be performed on the file&amp;mdash;the value you will pass to the handler as its first argument when you call it. If &lt;var&gt;operation&lt;/var&gt; equals &lt;code&gt;inhibit-file-name-operation&lt;/code&gt;, or if it is not found in the &lt;code&gt;operations&lt;/code&gt; property of the handler, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 파일 이름 &lt;var&gt;file&lt;/var&gt; 에 대한 핸들러 함수를 반환 하거나 &lt;code&gt;nil&lt;/code&gt; 경우 nil 을 반환합니다 . 인수 &lt;var&gt;operation&lt;/var&gt; 은 파일에서 수행 할 작업 이어야합니다.이 값은 호출 할 때 처리기에 첫 번째 인수로 전달할 값입니다. 경우 &lt;var&gt;operation&lt;/var&gt; 동일 &lt;code&gt;inhibit-file-name-operation&lt;/code&gt; 하거나이 발견되지 않는 경우 &lt;code&gt;operations&lt;/code&gt; 핸들러의 특성이 함수가 반환는 &lt;code&gt;nil&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="c56c12bd3fe351b13525a506fb841a6a700d453f" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels for the font used by &lt;var&gt;face&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. The specified &lt;var&gt;window&lt;/var&gt; must be a live window. If &lt;code&gt;nil&lt;/code&gt; or omitted, &lt;var&gt;window&lt;/var&gt; defaults to the selected window, and &lt;var&gt;face&lt;/var&gt; defaults to the default face in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 &lt;var&gt;face&lt;/var&gt; 에 사용되는 글꼴의 높이를 픽셀 단위로 반환합니다 . 지정된 &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야합니다. 만약 &lt;code&gt;nil&lt;/code&gt; 또는 생략, &lt;var&gt;window&lt;/var&gt; 선택 창에 기본값 및 &lt;var&gt;face&lt;/var&gt; 의 기본면 기본값 &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="fc6b0c073501c98c6d5fe4ec2eeeeaf665997b2a" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s header line. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If &lt;var&gt;window&lt;/var&gt; has no header line, the return value is zero.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 헤더 행 의 높이를 픽셀 단위로 반환합니다 . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창 이어야합니다. 경우 &lt;var&gt;window&lt;/var&gt; 에는 헤더 행이 없습니다, 반환 값은 0이다.</target>
        </trans-unit>
        <trans-unit id="32c6abad6c57ebf8a592999bf4da82c667899a5d" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s header line. &lt;var&gt;window&lt;/var&gt; must be a live window, and defaults to the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 헤더 행 의 높이를 픽셀 단위로 반환합니다 . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="55eee8aaef261e44bcd69b3c2be028f0a5db0df9" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s horizontal scrollbar.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 가로 스크롤 막대 의 높이를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="de02b931fd8dffba626e0585372fc684bbe14f35" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s mode line. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If &lt;var&gt;window&lt;/var&gt; has no mode line, the return value is zero.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 모드 라인 의 높이를 픽셀 단위로 반환합니다 . &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창 이어야합니다. 경우 &lt;var&gt;window&lt;/var&gt; 어떤 모드 라인이없는, 반환 값은 0이다.</target>
        </trans-unit>
        <trans-unit id="339ed686daf816790f46d33732087adc7f55947a" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of the font used by the current buffer&amp;rsquo;s default face, as that face is defined for the selected frame.</source>
          <target state="translated">이 함수는 선택한 프레임에 대해 정의 된면이 현재 버퍼의 기본면이 사용하는 글꼴의 높이를 픽셀 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03427944aa9b71914e2df5189a7f44a902a134c0" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of the line at point in the selected window. The value includes the line spacing of the line (see &lt;a href=&quot;line-height#Line-Height&quot;&gt;Line Height&lt;/a&gt;).</source>
          <target state="translated">이 함수는 선택한 창의 지점에있는 선의 높이를 픽셀 단위로 반환합니다. 값에는 줄의 줄 간격이 포함됩니다 ( &lt;a href=&quot;line-height#Line-Height&quot;&gt;줄 높이&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="6d49702c8ef25f8a400263ce586fa885913e23bf" translate="yes" xml:space="preserve">
          <source>This function returns the height of horizontal scroll bars of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 가로 스크롤 막대 높이를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9167175929772c06cd868b2a8d4249ed8aaba5dd" translate="yes" xml:space="preserve">
          <source>This function returns the height of text line &lt;var&gt;line&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;line&lt;/var&gt; is one of &lt;code&gt;header-line&lt;/code&gt; or &lt;code&gt;mode-line&lt;/code&gt;, &lt;code&gt;window-line-height&lt;/code&gt; returns information about the corresponding line of the window. Otherwise, &lt;var&gt;line&lt;/var&gt; is a text line number starting from 0. A negative number counts from the end of the window. The default for &lt;var&gt;line&lt;/var&gt; is the current line in &lt;var&gt;window&lt;/var&gt;; the default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">이 기능은 텍스트 줄의 높이를 반환 &lt;var&gt;line&lt;/var&gt; 에 &lt;var&gt;window&lt;/var&gt; . 경우 &lt;var&gt;line&lt;/var&gt; 중 하나입니다 &lt;code&gt;header-line&lt;/code&gt; 또는 &lt;code&gt;mode-line&lt;/code&gt; , &lt;code&gt;window-line-height&lt;/code&gt; 윈도우의 해당 라인에 대한 정보를 반환합니다. 그렇지 않으면 &lt;var&gt;line&lt;/var&gt; 은 0부터 시작하는 텍스트 줄 번호입니다. 음수는 창 끝부터 계산됩니다. &lt;var&gt;line&lt;/var&gt; 의 기본값 은 &lt;var&gt;window&lt;/var&gt; 의 현재 행입니다 . &lt;var&gt;window&lt;/var&gt; 기본값 은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="95736f0dd6861f5f94594f18264f9d474b32f390" translate="yes" xml:space="preserve">
          <source>This function returns the height of the screen in millimeters, or &lt;code&gt;nil&lt;/code&gt; if Emacs cannot get that information.</source>
          <target state="translated">이 함수는 화면의 높이를 밀리미터 단위로 반환하거나 Emacs가 해당 정보를 얻을 수없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5bc17e79ffebc6df38232913e67b5fb308232838" translate="yes" xml:space="preserve">
          <source>This function returns the height of the screen in pixels. On a character terminal, it gives the height in characters.</source>
          <target state="translated">이 함수는 화면의 높이를 픽셀 단위로 반환합니다. 문자 터미널에서는 문자의 높이를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8b01fe4411be27c8ee04c75e8f36adfb2d8c1ce1" translate="yes" xml:space="preserve">
          <source>This function returns the height, in lines, of the body of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window; otherwise it must be a live window.</source>
          <target state="translated">이 함수는 window &lt;var&gt;window&lt;/var&gt; 본문의 높이를 줄 단위로 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우에 기본값; 그렇지 않으면 라이브 창이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c0fdabc673b001e0ffe40f09b4f753131473d5a2" translate="yes" xml:space="preserve">
          <source>This function returns the horizontal position of point, measured in columns, counting from 0 at the left margin. The column position is the sum of the widths of all the displayed representations of the characters between the start of the current line and point.</source>
          <target state="translated">이 함수는 왼쪽 여백에서 0부터 계산하여 열로 측정 된 포인트의 수평 위치를 반환합니다. 열 위치는 현재 줄의 시작과 점 사이에 표시된 모든 문자 표현의 너비의 합계입니다.</target>
        </trans-unit>
        <trans-unit id="ddd09683add37bc0a58038706ea329cbf19c826f" translate="yes" xml:space="preserve">
          <source>This function returns the indentation of the current line, which is the horizontal position of the first nonblank character. If the contents are entirely blank, then this is the horizontal position of the end of the line.</source>
          <target state="translated">이 함수는 공백이 아닌 첫 번째 문자의 가로 위치 인 현재 줄의 들여 쓰기를 반환합니다. 내용이 완전히 비어있는 경우 행 끝의 가로 위치입니다.</target>
        </trans-unit>
        <trans-unit id="7c9e8be9871eeb3679f6615e1159adaa3964085e" translate="yes" xml:space="preserve">
          <source>This function returns the index of the current frame number for &lt;var&gt;image&lt;/var&gt;, counting from 0.</source>
          <target state="translated">이 함수는 0부터 계산 하는 &lt;var&gt;image&lt;/var&gt; 에 대한 현재 프레임 번호의 인덱스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="24c9cb536797c225265fe8e7b77701a81cbfae35" translate="yes" xml:space="preserve">
          <source>This function returns the index of the first element in &lt;var&gt;sequence&lt;/var&gt; that is equal to &lt;var&gt;elt&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;elt&lt;/var&gt; 와 동일한 &lt;var&gt;sequence&lt;/var&gt; 첫 번째 요소의 인덱스를 반환합니다 . 선택적 인수 &lt;var&gt;function&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 기본 &lt;code&gt;equal&lt;/code&gt; 대신 사용할 두 인수의 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="16cdb635ec08784b86fadf602f1c0d13f48dcac1" translate="yes" xml:space="preserve">
          <source>This function returns the index of the start of the first match for the regular expression &lt;var&gt;regexp&lt;/var&gt; in &lt;var&gt;string&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if there is no match. If &lt;var&gt;start&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search starts at that index in &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 의 정규 표현식 &lt;var&gt;regexp&lt;/var&gt; 에 대한 첫 번째 일치의 시작 인덱스를 반환 하거나 일치하는 항목이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. &lt;var&gt;start&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 검색은 &lt;var&gt;string&lt;/var&gt; 의 해당 인덱스에서 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="53eab24d9949fd5bf80394cd2958ec6e3552346a" translate="yes" xml:space="preserve">
          <source>This function returns the integer remainder after division of &lt;var&gt;dividend&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt;. The arguments must be integers or markers.</source>
          <target state="translated">이 기능의 분할 후 정수 나머지를 반환 &lt;var&gt;dividend&lt;/var&gt; 으로 &lt;var&gt;divisor&lt;/var&gt; . 인수는 정수 또는 마커 여야합니다.</target>
        </trans-unit>
        <trans-unit id="29df095e6de6b309aaa5141810a662c319e5da86" translate="yes" xml:space="preserve">
          <source>This function returns the interned symbol whose name is &lt;var&gt;name&lt;/var&gt;. If there is no such symbol in the obarray &lt;var&gt;obarray&lt;/var&gt;, &lt;code&gt;intern&lt;/code&gt; creates a new one, adds it to the obarray, and returns it. If &lt;var&gt;obarray&lt;/var&gt; is omitted, the value of the global variable &lt;code&gt;obarray&lt;/code&gt; is used.</source>
          <target state="translated">이 함수는 이름이 &lt;var&gt;name&lt;/var&gt; 인 내부 기호를 반환합니다 . obarray에서 이러한 기호가없는 경우 &lt;var&gt;obarray&lt;/var&gt; , &lt;code&gt;intern&lt;/code&gt; , 새로 생성 obarray에 추가, 반환 그것. 경우 &lt;var&gt;obarray&lt;/var&gt; 은 생략 전역 변수 값 &lt;code&gt;obarray&lt;/code&gt; 가 사용된다.</target>
        </trans-unit>
        <trans-unit id="b96d41ed6f226d1fdc45fc8aa4b0b0caedfb5bb6" translate="yes" xml:space="preserve">
          <source>This function returns the key or mouse button that &lt;var&gt;event&lt;/var&gt; describes, with all modifiers removed. The &lt;var&gt;event&lt;/var&gt; argument is as in &lt;code&gt;event-modifiers&lt;/code&gt;. For example:</source>
          <target state="translated">이 함수는 모든 수정자가 제거 된 상태에서 &lt;var&gt;event&lt;/var&gt; 설명 하는 키 또는 마우스 버튼을 반환합니다 . &lt;var&gt;event&lt;/var&gt; 인수에서 같다 &lt;code&gt;event-modifiers&lt;/code&gt; . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="f354fc92e2fc92ce807f30ead963bd80312cefb0" translate="yes" xml:space="preserve">
          <source>This function returns the kind of nonlocal exit condition stored in &lt;var&gt;env&lt;/var&gt;, like &lt;code&gt;non_local_exit_check&lt;/code&gt; does, but it also returns the full information about the nonlocal exit, if any. If the return value is &lt;code&gt;emacs_funcall_exit_signal&lt;/code&gt;, the function stores the error symbol in &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; and the error data in &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Signaling Errors&lt;/a&gt;). If the return value is &lt;code&gt;emacs_funcall_exit_throw&lt;/code&gt;, the function stores the &lt;code&gt;catch&lt;/code&gt; tag symbol in &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; and the &lt;code&gt;throw&lt;/code&gt; value in &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt;. The function doesn&amp;rsquo;t store anything in memory pointed by these arguments when the return value is &lt;code&gt;emacs_funcall_exit_return&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;non_local_exit_check&lt;/code&gt; 처럼 &lt;var&gt;env&lt;/var&gt; 에 저장된 비 로컬 종료 조건의 종류를 반환 하지만 비 로컬 종료에 대한 전체 정보도 반환합니다. 반환 값이 &lt;code&gt;emacs_funcall_exit_signal&lt;/code&gt; 이면이 함수는 오류 기호를 &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; &lt;var&gt;symbol&lt;/var&gt; 에 저장 하고 오류 데이터를 &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; &lt;var&gt;data&lt;/var&gt; ( &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;신호 오류&lt;/a&gt; 참조 ). 반환 값이 &lt;code&gt;emacs_funcall_exit_throw&lt;/code&gt; 이면 함수는 &lt;code&gt;catch&lt;/code&gt; 태그 기호를 &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; &lt;var&gt;symbol&lt;/var&gt; 에 저장 하고 &lt;code&gt;throw&lt;/code&gt; 값을 &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; &lt;var&gt;data&lt;/var&gt; . 이 함수는 반환 값이 &lt;code&gt;emacs_funcall_exit_return&lt;/code&gt; 일 때 이러한 인수가 가리키는 메모리에 아무것도 저장하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2d2ef0931bfbe0faec9e62cf5339757c113e7c0a" translate="yes" xml:space="preserve">
          <source>This function returns the kind of nonlocal exit condition stored in &lt;var&gt;env&lt;/var&gt;. The possible values are:</source>
          <target state="translated">이 함수는 &lt;var&gt;env&lt;/var&gt; 에 저장된 비 로컬 종료 조건의 종류를 반환합니다 . 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c4f28b8b78b2c082c7111505d1dbaaf13770739c" translate="yes" xml:space="preserve">
          <source>This function returns the largest element of &lt;var&gt;sequence&lt;/var&gt;. The elements of &lt;var&gt;sequence&lt;/var&gt; must be numbers or markers.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence&lt;/var&gt; 의 가장 큰 요소를 반환합니다 . &lt;var&gt;sequence&lt;/var&gt; 의 요소는 숫자 또는 마커 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7f1bff2e216d1ca04e804bd9f274100b576f6127" translate="yes" xml:space="preserve">
          <source>This function returns the largest of its arguments.</source>
          <target state="translated">이 함수는 가장 큰 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a0fd46f7a5c9bb5ef6f64b9d466e0ca1c255d826" translate="yes" xml:space="preserve">
          <source>This function returns the largest value that a valid character codepoint can have.</source>
          <target state="translated">이 함수는 유효한 문자 코드 포인트가 가질 수있는 가장 큰 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2051039c170c9dd6ac1f7fb9c9a4998c1a44302f" translate="yes" xml:space="preserve">
          <source>This function returns the last buffer in &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s buffer list other than &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it uses the selected frame&amp;rsquo;s buffer list.</source>
          <target state="translated">이 기능은 마지막 버퍼 반환 &lt;var&gt;frame&lt;/var&gt; 이외의 버퍼 목록 &lt;var&gt;buffer&lt;/var&gt; . 경우 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임 버퍼의리스트를 이용한다.</target>
        </trans-unit>
        <trans-unit id="f3c3271546237f25ce407fb825fb50332d5140a1" translate="yes" xml:space="preserve">
          <source>This function returns the last error form recorded when a thread exited due to an error. Each thread that exits abnormally overwrites the form stored by the previous thread&amp;rsquo;s error with a new value, so only the last one can be accessed. If &lt;var&gt;cleanup&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the stored form is reset to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 오류로 인해 스레드가 종료되었을 때 기록 된 마지막 오류 양식을 반환합니다. 비정상적으로 종료 된 각 스레드는 이전 스레드의 오류로 저장된 양식을 새 값으로 덮어 쓰므로 마지막 스레드 만 액세스 할 수 있습니다. &lt;var&gt;cleanup&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 저장된 양식이 &lt;code&gt;nil&lt;/code&gt; 로 재설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c313191f690c973401e1342832f2166eb3026e32" translate="yes" xml:space="preserve">
          <source>This function returns the last link of &lt;var&gt;list&lt;/var&gt;. The &lt;code&gt;car&lt;/code&gt; of this link is the list&amp;rsquo;s last element. If &lt;var&gt;list&lt;/var&gt; is null, &lt;code&gt;nil&lt;/code&gt; is returned. If &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the &lt;var&gt;n&lt;/var&gt;th-to-last link is returned instead, or the whole of &lt;var&gt;list&lt;/var&gt; if &lt;var&gt;n&lt;/var&gt; is bigger than &lt;var&gt;list&lt;/var&gt;&amp;rsquo;s length.</source>
          <target state="translated">이 함수는 &lt;var&gt;list&lt;/var&gt; 의 마지막 링크를 반환합니다 . 이 링크 의 &lt;code&gt;car&lt;/code&gt; 는 목록의 마지막 요소입니다. 경우 &lt;var&gt;list&lt;/var&gt; null의 경우, &lt;code&gt;nil&lt;/code&gt; 반환됩니다. 경우 &lt;var&gt;n&lt;/var&gt; 은 비입니다 &lt;code&gt;nil&lt;/code&gt; 의 &lt;var&gt;n&lt;/var&gt; 번째 - 투 - 마지막 링크 대신 반환 또는 전체한다 &lt;var&gt;list&lt;/var&gt; 경우 &lt;var&gt;n&lt;/var&gt; 보다 큰 &lt;var&gt;list&lt;/var&gt; 의 길이.</target>
        </trans-unit>
        <trans-unit id="3d29a23e1fe65988f6e8c700fffc5a44d0ae4bca" translate="yes" xml:space="preserve">
          <source>This function returns the leftmost child window of &lt;var&gt;window&lt;/var&gt;, if &lt;var&gt;window&lt;/var&gt; is an internal window whose children form a horizontal combination. For any other type of window, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능의 가장 왼쪽 자식 창 반환 &lt;var&gt;window&lt;/var&gt; 경우, &lt;var&gt;window&lt;/var&gt; 그 아이들 수평 결합을 형성하는 내부 창입니다. 다른 유형의 창의 경우 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0aae028d81d7a71d19660b26659597899d209c61" translate="yes" xml:space="preserve">
          <source>This function returns the length of &lt;var&gt;list&lt;/var&gt;, with no risk of either an error or an infinite loop. It generally returns the number of distinct cons cells in the list. However, for circular lists, the value is just an upper bound; it is often too large.</source>
          <target state="translated">이 함수는 오류나 무한 루프의 위험없이 &lt;var&gt;list&lt;/var&gt; 의 길이를 반환합니다 . 일반적으로 목록에서 구별되는 단점 셀의 수를 반환합니다. 그러나 순환 목록의 경우 값은 상한 일뿐입니다. 너무 큽니다.</target>
        </trans-unit>
        <trans-unit id="9406a44c2223ad65f1f6471cc53b6d92bbcf7cce" translate="yes" xml:space="preserve">
          <source>This function returns the length of &lt;var&gt;object&lt;/var&gt; if it is a proper list, &lt;code&gt;nil&lt;/code&gt; otherwise (see &lt;a href=&quot;cons-cells#Cons-Cells&quot;&gt;Cons Cells&lt;/a&gt;). In addition to satisfying &lt;code&gt;listp&lt;/code&gt;, a proper list is neither circular nor dotted.</source>
          <target state="translated">이 함수는 적절한 목록이면 &lt;var&gt;object&lt;/var&gt; 의 길이를 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 ( &lt;a href=&quot;cons-cells#Cons-Cells&quot;&gt;Cons Cells&lt;/a&gt; 참조 ). &lt;code&gt;listp&lt;/code&gt; 를 만족시키는 것 외에도 적절한 목록은 원형도 점선도 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d08ca64d6aec90cd61606d58cce1dc4b0625edf6" translate="yes" xml:space="preserve">
          <source>This function returns the line number in the current buffer corresponding to the buffer position &lt;var&gt;pos&lt;/var&gt;. If &lt;var&gt;pos&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the current buffer position is used. If &lt;var&gt;absolute&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the default, counting starts at &lt;code&gt;(point-min)&lt;/code&gt;, so the value refers to the contents of the accessible portion of the (potentially narrowed) buffer. If &lt;var&gt;absolute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, ignore any narrowing and return the absolute line number.</source>
          <target state="translated">이 함수는 버퍼 위치 &lt;var&gt;pos&lt;/var&gt; 에 해당하는 현재 버퍼의 줄 번호를 반환합니다 . 경우 &lt;var&gt;pos&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; 생략되거나 현재의 버퍼의 위치가 사용된다. 경우 &lt;var&gt;absolute&lt;/var&gt; 인 &lt;code&gt;nil&lt;/code&gt; 에서, 기본, 카운트 시작 &lt;code&gt;(point-min)&lt;/code&gt; 의 값은 액세스의 부분의 내용을 의미하므로, (잠재적으로 축소) 버퍼. &lt;var&gt;absolute&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 축소를 무시하고 절대 줄 번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="13f62917e8c8eb02a7da395a0990aedb5bbef438" translate="yes" xml:space="preserve">
          <source>This function returns the list &lt;var&gt;x&lt;/var&gt; with the last element, or the last &lt;var&gt;n&lt;/var&gt; elements, removed. If &lt;var&gt;n&lt;/var&gt; is greater than zero it makes a copy of the list so as not to damage the original list. In general, &lt;code&gt;(append (butlast &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;)
(last &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;))&lt;/code&gt; will return a list equal to &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">이 함수는 마지막 요소 또는 마지막 &lt;var&gt;n&lt;/var&gt; 요소가 제거 된 목록 &lt;var&gt;x&lt;/var&gt; 를 반환합니다 . 경우 &lt;var&gt;n&lt;/var&gt; 이 0보다 큰 경우는 목록의 복사본 않도록 원래 목록이 손상되지 않도록한다. 일반적으로 &lt;code&gt;(append (butlast &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;) (last &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;))&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt; ) (last &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt; )) 은 &lt;var&gt;x&lt;/var&gt; 와 동일한 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="af0018598c14fad2b63dda5f19faf525e81ff14e" translate="yes" xml:space="preserve">
          <source>This function returns the list of &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s active watcher functions.</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 의 활성 감시자 함수 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6cee24be3483cc3eafa433ed92a38616bfe6e6f7" translate="yes" xml:space="preserve">
          <source>This function returns the list of aliases of &lt;var&gt;coding-system&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;coding-system&lt;/var&gt; 의 별칭 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="df4090dfe4f1c818f010283bcbc20fda765f366b" translate="yes" xml:space="preserve">
          <source>This function returns the list of all suffixes that &lt;code&gt;load&lt;/code&gt; should try, in order, when its &lt;var&gt;must-suffix&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;. This takes both &lt;code&gt;load-suffixes&lt;/code&gt; and &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; into account. If &lt;code&gt;load-suffixes&lt;/code&gt;, &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; and &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; all have their standard values, this function returns &lt;code&gt;(&quot;.elc&quot; &quot;.elc.gz&quot; &quot;.el&quot; &quot;.el.gz&quot;)&lt;/code&gt; if Auto Compression mode is enabled and &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; if Auto Compression mode is disabled.</source>
          <target state="translated">이 함수는 &lt;var&gt;must-suffix&lt;/var&gt; 인수가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 &lt;code&gt;load&lt;/code&gt; 가 시도해야하는 모든 접미사 목록을 순서대로 반환합니다 . 이것은 &lt;code&gt;load-suffixes&lt;/code&gt; 와 &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; 를 모두 고려합니다. 경우 &lt;code&gt;load-suffixes&lt;/code&gt; , &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; 및 &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; 모두가 자신의 표준 값이,이 함수가 반환 &lt;code&gt;(&quot;.elc&quot; &quot;.elc.gz&quot; &quot;.el&quot; &quot;.el.gz&quot;)&lt;/code&gt; 자동 압축 모드가 활성화 된 경우 &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; 자동 압축 모드가 비활성화 된 경우.</target>
        </trans-unit>
        <trans-unit id="44326ad30a7adbd37456929ba88f1201430622ce" translate="yes" xml:space="preserve">
          <source>This function returns the list of buffers recently re-shown in &lt;var&gt;window&lt;/var&gt; via &lt;code&gt;switch-to-prev-buffer&lt;/code&gt;. The &lt;var&gt;window&lt;/var&gt; argument must denote a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window).</source>
          <target state="translated">이 함수는 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 를 통해 최근에 &lt;var&gt;window&lt;/var&gt; 에 다시 표시된 버퍼 목록을 반환합니다 . &lt;var&gt;window&lt;/var&gt; 인수는 라이브 창 또는 나타내야 &lt;code&gt;nil&lt;/code&gt; (선택된 창을 의미를).</target>
        </trans-unit>
        <trans-unit id="2a21fe5cd19bf9e53ed4daabcb4838fff92e3f5b" translate="yes" xml:space="preserve">
          <source>This function returns the list of character sets (see &lt;a href=&quot;character-sets#Character-Sets&quot;&gt;Character Sets&lt;/a&gt;) supported by &lt;var&gt;coding-system&lt;/var&gt;. Some coding systems that support too many character sets to list them all yield special values:</source>
          <target state="translated">이 기능은 문자 세트 (참조 목록을 반환 &lt;a href=&quot;character-sets#Character-Sets&quot;&gt;문자 집합을&lt;/a&gt; 지원) &lt;var&gt;coding-system&lt;/var&gt; . 너무 많은 문자 집합을 지원하여 모두 나열 할 수없는 일부 코딩 시스템은 특수 값을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="37dd4ff1692204e3f79082aaf3bbabe42fa76ac7" translate="yes" xml:space="preserve">
          <source>This function returns the list of coding systems in the order of their current priorities. Optional argument &lt;var&gt;highestp&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means return only the highest priority coding system.</source>
          <target state="translated">이 함수는 현재 우선 순위에 따라 코딩 시스템 목록을 반환합니다. &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 선택적인 인수 인 &lt;var&gt;highestp&lt;/var&gt; 는 우선 순위가 가장 높은 코딩 시스템 만 반환 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="bf56d5f88acde477a3ed0f6c4aea03229872354f" translate="yes" xml:space="preserve">
          <source>This function returns the list of version numbers of the GUI window system running on &lt;var&gt;display&lt;/var&gt;, such as the X server on GNU and Unix systems. The value is a list of three integers: the major and minor version numbers of the protocol, and the distributor-specific release number of the window system software itself. On GNU and Unix systems, these are normally the version of the X protocol and the distributor-specific release number of the X server software. On MS-Windows, this is the version of the Windows OS.</source>
          <target state="translated">이 함수는 GNU 및 Unix 시스템의 X 서버와 같이 &lt;var&gt;display&lt;/var&gt; 에서 실행중인 GUI 창 시스템의 버전 ​​번호 목록을 반환합니다 . 이 값은 프로토콜의 주 버전 및 부 버전 번호와 윈도우 시스템 소프트웨어 자체의 배포자 별 릴리스 번호의 세 가지 정수 목록입니다. GNU 및 Unix 시스템에서 이들은 일반적으로 X 프로토콜의 버전과 X 서버 소프트웨어의 배포자 별 릴리스 번호입니다. MS-Windows에서 이것은 Windows OS의 버전입니다.</target>
        </trans-unit>
        <trans-unit id="15699bf64df81887b22d128720062fd68e85ab4b" translate="yes" xml:space="preserve">
          <source>This function returns the live window at the coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; given in default character sizes (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">이 기능은 좌표에 라이브 창을 반환 &lt;var&gt;x&lt;/var&gt; 와 &lt;var&gt;y&lt;/var&gt; 기본 문자 크기 (참조에 주어진 &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;프레임 글꼴&lt;/a&gt; 의 기본 위치를 기준으로) &lt;var&gt;frame&lt;/var&gt; (참조 &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;프레임 지오메트리&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="901750ea5caee5a8476f00a3c7ff173a36efe01b" translate="yes" xml:space="preserve">
          <source>This function returns the live window at the upper left corner of the frame specified by &lt;var&gt;frame-or-window&lt;/var&gt;. The argument &lt;var&gt;frame-or-window&lt;/var&gt; must denote a window or a live frame and defaults to the selected frame. If &lt;var&gt;frame-or-window&lt;/var&gt; specifies a window, this function returns the first window on that window&amp;rsquo;s frame. Under the assumption that the frame from our canonical example is selected &lt;code&gt;(frame-first-window)&lt;/code&gt; returns &lt;var&gt;W2&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame-or-window&lt;/var&gt; 로 지정된 프레임의 왼쪽 상단 모서리에있는 라이브 창을 반환합니다 . &lt;var&gt;frame-or-window&lt;/var&gt; 인수 는 창 또는 라이브 프레임을 나타내야하며 기본값은 선택한 프레임입니다. 경우 &lt;var&gt;frame-or-window&lt;/var&gt; 를 지정 창,이 기능은 윈도우의 프레임의 첫 번째 창을 반환합니다. 표준 예제의 프레임이 선택되었다고 가정하면 &lt;code&gt;(frame-first-window)&lt;/code&gt; &lt;var&gt;W2&lt;/var&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="00a139c21bcec1a178aaabe0cfbae8f64c6fa426" translate="yes" xml:space="preserve">
          <source>This function returns the logarithm of &lt;var&gt;arg&lt;/var&gt;, with base &lt;var&gt;base&lt;/var&gt;. If you don&amp;rsquo;t specify &lt;var&gt;base&lt;/var&gt;, the natural base &lt;em&gt;e&lt;/em&gt; is used. If &lt;var&gt;arg&lt;/var&gt; or &lt;var&gt;base&lt;/var&gt; is negative, &lt;code&gt;log&lt;/code&gt; returns a NaN.</source>
          <target state="translated">이 함수는 base &lt;var&gt;base&lt;/var&gt; 를 사용 하여 &lt;var&gt;arg&lt;/var&gt; 의 로그를 반환합니다 . &lt;var&gt;base&lt;/var&gt; 를 지정하지 않으면 자연 기수 &lt;em&gt;e&lt;/em&gt; 가 사용됩니다. 경우 &lt;var&gt;arg&lt;/var&gt; 또는 &lt;var&gt;base&lt;/var&gt; 음, &lt;code&gt;log&lt;/code&gt; 반환 NaN의를.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ee52791fb8d5e342eec621a33cfe866557b9f25" translate="yes" xml:space="preserve">
          <source>This function returns the longest common substring of all possible completions of &lt;var&gt;string&lt;/var&gt; in &lt;var&gt;collection&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;collection&lt;/var&gt; 에서 가능한 모든 &lt;var&gt;string&lt;/var&gt; 완성의 가장 긴 공통 부분 문자열을 반환합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
