<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="ff7ac408bccf3c9523565386b2c80d69f90b0dc8" translate="yes" xml:space="preserve">
          <source>This function returns the main window of the specified &lt;var&gt;frame&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">이 함수는 지정된 &lt;var&gt;frame&lt;/var&gt; 의 기본 창을 반환합니다 . 선택적 인수 &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임 이어야하며 기본값은 선택한 프레임 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="5dc13155742d23b39b256979ae26269fba93452e" translate="yes" xml:space="preserve">
          <source>This function returns the marker that represents the current buffer&amp;rsquo;s mark. It is not a copy, it is the marker used internally. Therefore, changing this marker&amp;rsquo;s position will directly affect the buffer&amp;rsquo;s mark. Don&amp;rsquo;t do that unless that is the effect you want.</source>
          <target state="translated">이 함수는 현재 버퍼의 표시를 나타내는 마커를 반환합니다. 사본이 아니라 내부적으로 사용되는 마커입니다. 따라서이 마커의 위치를 ​​변경하면 버퍼의 표시에 직접적인 영향을줍니다. 그것이 당신이 원하는 효과가 아니라면 그렇게하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c098c11a9198d8b2836d678b21655370dd2c9a75" translate="yes" xml:space="preserve">
          <source>This function returns the maximum accessible value of point in the current buffer. This is &lt;code&gt;(1+ (buffer-size))&lt;/code&gt;, unless narrowing is in effect, in which case it is the position of the end of the region that you narrowed to. (See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.)</source>
          <target state="translated">This function returns the maximum accessible value of point in the current buffer. This is &lt;code&gt;(1+ (buffer-size))&lt;/code&gt; , unless narrowing is in effect, in which case it is the position of the end of the region that you narrowed to. (See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.)</target>
        </trans-unit>
        <trans-unit id="ec646246d230eb29d5d313c97bd5bb2282f00541" translate="yes" xml:space="preserve">
          <source>This function returns the meaning of &lt;var&gt;function&lt;/var&gt; as a function. If &lt;var&gt;function&lt;/var&gt; is a symbol, then it finds &lt;var&gt;function&lt;/var&gt;&amp;rsquo;s function definition and starts over with that value. If &lt;var&gt;function&lt;/var&gt; is not a symbol, then it returns &lt;var&gt;function&lt;/var&gt; itself.</source>
          <target state="translated">This function returns the meaning of &lt;var&gt;function&lt;/var&gt; as a function. If &lt;var&gt;function&lt;/var&gt; is a symbol, then it finds &lt;var&gt;function&lt;/var&gt; &amp;rsquo;s function definition and starts over with that value. If &lt;var&gt;function&lt;/var&gt; is not a symbol, then it returns &lt;var&gt;function&lt;/var&gt; itself.</target>
        </trans-unit>
        <trans-unit id="990ed4b503400e3940213854993c83d2b194ebe2" translate="yes" xml:space="preserve">
          <source>This function returns the members of &lt;var&gt;sequence&lt;/var&gt; in order, starting from the first one for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns the members of &lt;var&gt;sequence&lt;/var&gt; in order, starting from the first one for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86ab66dbf45de5a99e9a127c3c454d33e819318e" translate="yes" xml:space="preserve">
          <source>This function returns the members of &lt;var&gt;sequence&lt;/var&gt; in order, stopping before the first one for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns the members of &lt;var&gt;sequence&lt;/var&gt; in order, stopping before the first one for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5903da60de78e7a5e951047eb85f66f64b03f52d" translate="yes" xml:space="preserve">
          <source>This function returns the message currently being displayed in the echo area, or &lt;code&gt;nil&lt;/code&gt; if there is none.</source>
          <target state="translated">This function returns the message currently being displayed in the echo area, or &lt;code&gt;nil&lt;/code&gt; if there is none.</target>
        </trans-unit>
        <trans-unit id="266852b93431d4512e6bfa5f86cb83ac2552fbcc" translate="yes" xml:space="preserve">
          <source>This function returns the minibuffer window used for frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that stands for the selected frame.</source>
          <target state="translated">This function returns the minibuffer window used for frame &lt;var&gt;frame&lt;/var&gt; . If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , that stands for the selected frame.</target>
        </trans-unit>
        <trans-unit id="95a9b661416922947dff28360854048cc167dc85" translate="yes" xml:space="preserve">
          <source>This function returns the minimum accessible value of point in the current buffer. This is normally 1, but if narrowing is in effect, it is the position of the start of the region that you narrowed to. (See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.)</source>
          <target state="translated">This function returns the minimum accessible value of point in the current buffer. This is normally 1, but if narrowing is in effect, it is the position of the start of the region that you narrowed to. (See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.)</target>
        </trans-unit>
        <trans-unit id="453c1b74ef5a2b8c5ed1960337fa41c897d4489c" translate="yes" xml:space="preserve">
          <source>This function returns the minimum size of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. The optional argument &lt;var&gt;horizontal&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the minimum number of columns of &lt;var&gt;window&lt;/var&gt;; otherwise return the minimum number of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s lines.</source>
          <target state="translated">This function returns the minimum size of &lt;var&gt;window&lt;/var&gt; . &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. The optional argument &lt;var&gt;horizontal&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; means to return the minimum number of columns of &lt;var&gt;window&lt;/var&gt; ; otherwise return the minimum number of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s lines.</target>
        </trans-unit>
        <trans-unit id="ebf95d7c5e0652e18f768d0334ba9c04826738d5" translate="yes" xml:space="preserve">
          <source>This function returns the name actually given to the buffer.</source>
          <target state="translated">This function returns the name actually given to the buffer.</target>
        </trans-unit>
        <trans-unit id="73c6035e0412716612bf69f09a686d7b9bde74eb" translate="yes" xml:space="preserve">
          <source>This function returns the name of &lt;var&gt;buffer&lt;/var&gt; as a string. &lt;var&gt;buffer&lt;/var&gt; defaults to the current buffer.</source>
          <target state="translated">This function returns the name of &lt;var&gt;buffer&lt;/var&gt; as a string. &lt;var&gt;buffer&lt;/var&gt; defaults to the current buffer.</target>
        </trans-unit>
        <trans-unit id="b7bdc2d9689c3160f7302d4055d3cca825911403" translate="yes" xml:space="preserve">
          <source>This function returns the name of &lt;var&gt;process&lt;/var&gt;, as a string.</source>
          <target state="translated">This function returns the name of &lt;var&gt;process&lt;/var&gt; , as a string.</target>
        </trans-unit>
        <trans-unit id="170fb9088f98270170bc0f2b83d28bcd532013d5" translate="yes" xml:space="preserve">
          <source>This function returns the name of a directory that is not magic. For a non-magic &lt;var&gt;filename&lt;/var&gt; it returns the corresponding directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;). For a magic &lt;var&gt;filename&lt;/var&gt;, it invokes the file name handler, which therefore decides what value to return. If &lt;var&gt;filename&lt;/var&gt; is not accessible from a local process, then the file name handler should indicate that by returning &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns the name of a directory that is not magic. For a non-magic &lt;var&gt;filename&lt;/var&gt; it returns the corresponding directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;). For a magic &lt;var&gt;filename&lt;/var&gt; , it invokes the file name handler, which therefore decides what value to return. If &lt;var&gt;filename&lt;/var&gt; is not accessible from a local process, then the file name handler should indicate that by returning &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="036d252339ea542a7b3ce264b9f393cb5623dcaf" translate="yes" xml:space="preserve">
          <source>This function returns the name of the background stipple pattern of face &lt;var&gt;face&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if it doesn&amp;rsquo;t have one.</source>
          <target state="translated">This function returns the name of the background stipple pattern of face &lt;var&gt;face&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if it doesn&amp;rsquo;t have one.</target>
        </trans-unit>
        <trans-unit id="7e80be27fcde9dee29a88a4d194f64ed6cf7c79f" translate="yes" xml:space="preserve">
          <source>This function returns the name of the character set of highest priority that &lt;var&gt;character&lt;/var&gt; belongs to.</source>
          <target state="translated">This function returns the name of the character set of highest priority that &lt;var&gt;character&lt;/var&gt; belongs to.</target>
        </trans-unit>
        <trans-unit id="2c5c272804ab9655c5ec2e693ab7e7e29eb64d9c" translate="yes" xml:space="preserve">
          <source>This function returns the name of the file that defined &lt;var&gt;symbol&lt;/var&gt;. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then any kind of definition is acceptable. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defvar&lt;/code&gt;, or &lt;code&gt;defface&lt;/code&gt;, that specifies function definition, variable definition, or face definition only.</source>
          <target state="translated">This function returns the name of the file that defined &lt;var&gt;symbol&lt;/var&gt; . If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , then any kind of definition is acceptable. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;defun&lt;/code&gt; , &lt;code&gt;defvar&lt;/code&gt; , or &lt;code&gt;defface&lt;/code&gt; , that specifies function definition, variable definition, or face definition only.</target>
        </trans-unit>
        <trans-unit id="d6ec87829b7a58b7aa332292995089c905c25784" translate="yes" xml:space="preserve">
          <source>This function returns the name of the font of face &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">This function returns the name of the font of face &lt;var&gt;face&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="addb5aca678adc9af3eb5d36ba52496072c21940" translate="yes" xml:space="preserve">
          <source>This function returns the name of the help buffer, which is normally</source>
          <target state="translated">This function returns the name of the help buffer, which is normally</target>
        </trans-unit>
        <trans-unit id="279371835c559b6fc39409ecd249fe69483ba588" translate="yes" xml:space="preserve">
          <source>This function returns the name of the machine you are running on, as a string.</source>
          <target state="translated">This function returns the name of the machine you are running on, as a string.</target>
        </trans-unit>
        <trans-unit id="6356910e3e660841c51a0088b81e7e3b8b346bd3" translate="yes" xml:space="preserve">
          <source>This function returns the name of the most recent backup file for &lt;var&gt;filename&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if that file has no backup files.</source>
          <target state="translated">This function returns the name of the most recent backup file for &lt;var&gt;filename&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if that file has no backup files.</target>
        </trans-unit>
        <trans-unit id="c4a1f76dabd823067e65cd8cb32ab6c812713b0d" translate="yes" xml:space="preserve">
          <source>This function returns the name under which the user is logged in. It uses the environment variables &lt;code&gt;LOGNAME&lt;/code&gt; or &lt;code&gt;USER&lt;/code&gt; if either is set. Otherwise, the value is based on the effective</source>
          <target state="translated">This function returns the name under which the user is logged in. It uses the environment variables &lt;code&gt;LOGNAME&lt;/code&gt; or &lt;code&gt;USER&lt;/code&gt; if either is set. Otherwise, the value is based on the effective</target>
        </trans-unit>
        <trans-unit id="8b57982f8788121b53e5892d0e520ea92135b335" translate="yes" xml:space="preserve">
          <source>This function returns the nearest live window in direction &lt;var&gt;direction&lt;/var&gt; as seen from the position of &lt;code&gt;window-point&lt;/code&gt; in window &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;direction&lt;/var&gt; must be one of &lt;code&gt;above&lt;/code&gt;, &lt;code&gt;below&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;. The optional argument &lt;var&gt;window&lt;/var&gt; must denote a live window and defaults to the selected one.</source>
          <target state="translated">This function returns the nearest live window in direction &lt;var&gt;direction&lt;/var&gt; as seen from the position of &lt;code&gt;window-point&lt;/code&gt; in window &lt;var&gt;window&lt;/var&gt; . The argument &lt;var&gt;direction&lt;/var&gt; must be one of &lt;code&gt;above&lt;/code&gt; , &lt;code&gt;below&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; . The optional argument &lt;var&gt;window&lt;/var&gt; must denote a live window and defaults to the selected one.</target>
        </trans-unit>
        <trans-unit id="98deb37745bd8546f58f4d0d6c023e78720d45c6" translate="yes" xml:space="preserve">
          <source>This function returns the new thread.</source>
          <target state="translated">This function returns the new thread.</target>
        </trans-unit>
        <trans-unit id="716ad90df83de887d105d55e5c353a50f3174b0c" translate="yes" xml:space="preserve">
          <source>This function returns the next sibling of the window &lt;var&gt;window&lt;/var&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is the last child of its parent.</source>
          <target state="translated">This function returns the next sibling of the window &lt;var&gt;window&lt;/var&gt; . If omitted or &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;window&lt;/var&gt; defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is the last child of its parent.</target>
        </trans-unit>
        <trans-unit id="d1595c8fec4fb6c38a6105dfeefd1e831fc3efb1" translate="yes" xml:space="preserve">
          <source>This function returns the nondirectory part of &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">This function returns the nondirectory part of &lt;var&gt;filename&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2a78773a04f6f78d4c10bd894975e829f23c5ba9" translate="yes" xml:space="preserve">
          <source>This function returns the number of bytes in &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;string&lt;/var&gt; is a multibyte string, this can be greater than &lt;code&gt;(length &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">This function returns the number of bytes in &lt;var&gt;string&lt;/var&gt; . If &lt;var&gt;string&lt;/var&gt; is a multibyte string, this can be greater than &lt;code&gt;(length &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4660cbae0445da22c42d71db3d30011007f691c4" translate="yes" xml:space="preserve">
          <source>This function returns the number of characters displayed in the specified face &lt;var&gt;face&lt;/var&gt; in the specified window &lt;var&gt;window&lt;/var&gt; (which must be a live window). If &lt;var&gt;face&lt;/var&gt; was remapped (see &lt;a href=&quot;face-remapping#Face-Remapping&quot;&gt;Face Remapping&lt;/a&gt;), the information is returned for the remapped face. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt; defaults to the default face, and &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</source>
          <target state="translated">This function returns the number of characters displayed in the specified face &lt;var&gt;face&lt;/var&gt; in the specified window &lt;var&gt;window&lt;/var&gt; (which must be a live window). If &lt;var&gt;face&lt;/var&gt; was remapped (see &lt;a href=&quot;face-remapping#Face-Remapping&quot;&gt;Face Remapping&lt;/a&gt;), the information is returned for the remapped face. If omitted or &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;face&lt;/var&gt; defaults to the default face, and &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</target>
        </trans-unit>
        <trans-unit id="7f37ecdfc730c73f255375bbcb28fc1ea92d9647" translate="yes" xml:space="preserve">
          <source>This function returns the number of color cells the screen supports.</source>
          <target state="translated">This function returns the number of color cells the screen supports.</target>
        </trans-unit>
        <trans-unit id="f990105602087f085d0fb1216a4fb8b604bad0c8" translate="yes" xml:space="preserve">
          <source>This function returns the number of consecutive button presses that led up to &lt;var&gt;event&lt;/var&gt;. If &lt;var&gt;event&lt;/var&gt; is a double-down, double-click or double-drag event, the value is 2. If &lt;var&gt;event&lt;/var&gt; is a triple event, the value is 3 or greater. If &lt;var&gt;event&lt;/var&gt; is an ordinary mouse event (not a repeat event), the value is 1.</source>
          <target state="translated">This function returns the number of consecutive button presses that led up to &lt;var&gt;event&lt;/var&gt; . If &lt;var&gt;event&lt;/var&gt; is a double-down, double-click or double-drag event, the value is 2. If &lt;var&gt;event&lt;/var&gt; is a triple event, the value is 3 or greater. If &lt;var&gt;event&lt;/var&gt; is an ordinary mouse event (not a repeat event), the value is 1.</target>
        </trans-unit>
        <trans-unit id="54ac70f0d285ac923e6e4821df500b4b06b4a1f5" translate="yes" xml:space="preserve">
          <source>This function returns the number of days between the beginning of year 1 and &lt;var&gt;time-value&lt;/var&gt;, assuming the default time zone. The operating system limits the range of time and zone values.</source>
          <target state="translated">This function returns the number of days between the beginning of year 1 and &lt;var&gt;time-value&lt;/var&gt; , assuming the default time zone. The operating system limits the range of time and zone values.</target>
        </trans-unit>
        <trans-unit id="7a8290e2f182f826a8f8d77ae52b4857a23d6dcb" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd53ba1f2b422051879e56a877351b43104063dd" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt;. For built-in sequence types, &lt;code&gt;seq-length&lt;/code&gt; behaves like &lt;code&gt;length&lt;/code&gt;. See &lt;a href=&quot;#Definition-of-length&quot;&gt;Definition of length&lt;/a&gt;.</source>
          <target state="translated">This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt; . For built-in sequence types, &lt;code&gt;seq-length&lt;/code&gt; behaves like &lt;code&gt;length&lt;/code&gt; . See &lt;a href=&quot;#Definition-of-length&quot;&gt;Definition of length&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bc012f3599a6d90b5500fd9b10e1e0d93cace6d0" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt;. The function signals the &lt;code&gt;wrong-type-argument&lt;/code&gt; error if the argument is not a sequence or is a dotted list; it signals the &lt;code&gt;circular-list&lt;/code&gt; error if the argument is a circular list. For a char-table, the value returned is always one more than the maximum Emacs character code.</source>
          <target state="translated">This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt; . The function signals the &lt;code&gt;wrong-type-argument&lt;/code&gt; error if the argument is not a sequence or is a dotted list; it signals the &lt;code&gt;circular-list&lt;/code&gt; error if the argument is a circular list. For a char-table, the value returned is always one more than the maximum Emacs character code.</target>
        </trans-unit>
        <trans-unit id="47bf3b5a7435d654d99637c96c758c06790e2980" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;vector&lt;/var&gt;.</source>
          <target state="translated">This function returns the number of elements in &lt;var&gt;vector&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8f871c89b50cce344d5191d8f586c00c5b111314" translate="yes" xml:space="preserve">
          <source>This function returns the number of lines between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer. If &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are equal, then it returns 0. Otherwise it returns at least 1, even if &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are on the same line. This is because the text between them, considered in isolation, must contain at least one line unless it is empty.</source>
          <target state="translated">This function returns the number of lines between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer. If &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are equal, then it returns 0. Otherwise it returns at least 1, even if &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are on the same line. This is because the text between them, considered in isolation, must contain at least one line unless it is empty.</target>
        </trans-unit>
        <trans-unit id="dfaef65842c0971b65897d9dded4f0559cd49f93" translate="yes" xml:space="preserve">
          <source>This function returns the number of names (i.e., hard links) that file &lt;var&gt;filename&lt;/var&gt; has. If the file does not exist, this function returns &lt;code&gt;nil&lt;/code&gt;. Note that symbolic links have no effect on this function, because they are not considered to be names of the files they link to. This function does not follow symbolic links.</source>
          <target state="translated">This function returns the number of names (i.e., hard links) that file &lt;var&gt;filename&lt;/var&gt; has. If the file does not exist, this function returns &lt;code&gt;nil&lt;/code&gt; . Note that symbolic links have no effect on this function, because they are not considered to be names of the files they link to. This function does not follow symbolic links.</target>
        </trans-unit>
        <trans-unit id="385af56e8b326c5a9263a2ead611c148213ac073" translate="yes" xml:space="preserve">
          <source>This function returns the number of planes the display supports. This is typically the number of bits per pixel. For a tty display, it is log to base two of the number of colors supported.</source>
          <target state="translated">This function returns the number of planes the display supports. This is typically the number of bits per pixel. For a tty display, it is log to base two of the number of colors supported.</target>
        </trans-unit>
        <trans-unit id="3614910cf242e1d73bedbc95d891db25fb9b713b" translate="yes" xml:space="preserve">
          <source>This function returns the number of screen lines in the text from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. The number of screen lines may be different from the number of actual lines, due to line continuation, the display table, etc. If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; or omitted, they default to the beginning and end of the accessible portion of the buffer.</source>
          <target state="translated">This function returns the number of screen lines in the text from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; . The number of screen lines may be different from the number of actual lines, due to line continuation, the display table, etc. If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; or omitted, they default to the beginning and end of the accessible portion of the buffer.</target>
        </trans-unit>
        <trans-unit id="cdeb69a34ab9270e0cb46af9184c445f31f8fccf" translate="yes" xml:space="preserve">
          <source>This function returns the number of screens associated with the display.</source>
          <target state="translated">This function returns the number of screens associated with the display.</target>
        </trans-unit>
        <trans-unit id="cd78e4ab553abd4fa1c6862cfd0e83dacabc0e2e" translate="yes" xml:space="preserve">
          <source>This function returns the number of words between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer.</source>
          <target state="translated">This function returns the number of words between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer.</target>
        </trans-unit>
        <trans-unit id="c9b36243c6e743dccf4b2162f3f37703e74e1cff" translate="yes" xml:space="preserve">
          <source>This function returns the numeric meaning of a valid raw prefix argument value, &lt;var&gt;arg&lt;/var&gt;. The argument may be a symbol, a number, or a list. If it is &lt;code&gt;nil&lt;/code&gt;, the value 1 is returned; if it is &lt;code&gt;-&lt;/code&gt;, the value -1 is returned; if it is a number, that number is returned; if it is a list, the &lt;small&gt;CAR&lt;/small&gt; of that list (which should be a number) is returned.</source>
          <target state="translated">This function returns the numeric meaning of a valid raw prefix argument value, &lt;var&gt;arg&lt;/var&gt; . The argument may be a symbol, a number, or a list. If it is &lt;code&gt;nil&lt;/code&gt; , the value 1 is returned; if it is &lt;code&gt;-&lt;/code&gt; , the value -1 is returned; if it is a number, that number is returned; if it is a list, the &lt;small&gt;CAR&lt;/small&gt; of that list (which should be a number) is returned.</target>
        </trans-unit>
        <trans-unit id="eb161c7c5eda89aed21a66a6dd259a62c51776ac" translate="yes" xml:space="preserve">
          <source>This function returns the numeric value of the characters in &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;base&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be an integer between 2 and 16 (inclusive), and integers are converted in that base. If &lt;var&gt;base&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then base ten is used. Floating-point conversion only works in base ten; we have not implemented other radices for floating-point numbers, because that would be much more work and does not seem useful. If &lt;var&gt;string&lt;/var&gt; looks like an integer but its value is too large to fit into a Lisp integer, &lt;code&gt;string-to-number&lt;/code&gt; returns a floating-point result.</source>
          <target state="translated">This function returns the numeric value of the characters in &lt;var&gt;string&lt;/var&gt; . If &lt;var&gt;base&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it must be an integer between 2 and 16 (inclusive), and integers are converted in that base. If &lt;var&gt;base&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , then base ten is used. Floating-point conversion only works in base ten; we have not implemented other radices for floating-point numbers, because that would be much more work and does not seem useful. If &lt;var&gt;string&lt;/var&gt; looks like an integer but its value is too large to fit into a Lisp integer, &lt;code&gt;string-to-number&lt;/code&gt; returns a floating-point result.</target>
        </trans-unit>
        <trans-unit id="1fe377088e8549d322d6b392a688ebc3423cc12c" translate="yes" xml:space="preserve">
          <source>This function returns the overall prompt string of &lt;var&gt;keymap&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if it has none.</source>
          <target state="translated">This function returns the overall prompt string of &lt;var&gt;keymap&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if it has none.</target>
        </trans-unit>
        <trans-unit id="6fdc1c3bd6ce721a323557de4ce54d23cdd18b08" translate="yes" xml:space="preserve">
          <source>This function returns the paragraph direction at point in the named &lt;var&gt;buffer&lt;/var&gt;. The returned value is a symbol, either &lt;code&gt;left-to-right&lt;/code&gt; or &lt;code&gt;right-to-left&lt;/code&gt;. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If the buffer-local value of the variable &lt;code&gt;bidi-paragraph-direction&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the returned value will be identical to that value; otherwise, the returned value reflects the paragraph direction determined dynamically by Emacs. For buffers whose value of &lt;code&gt;bidi-display-reordering&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; as well as unibyte buffers, this function always returns &lt;code&gt;left-to-right&lt;/code&gt;.</source>
          <target state="translated">This function returns the paragraph direction at point in the named &lt;var&gt;buffer&lt;/var&gt; . The returned value is a symbol, either &lt;code&gt;left-to-right&lt;/code&gt; or &lt;code&gt;right-to-left&lt;/code&gt; . If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the current buffer. If the buffer-local value of the variable &lt;code&gt;bidi-paragraph-direction&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the returned value will be identical to that value; otherwise, the returned value reflects the paragraph direction determined dynamically by Emacs. For buffers whose value of &lt;code&gt;bidi-display-reordering&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; as well as unibyte buffers, this function always returns &lt;code&gt;left-to-right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fef18e9878ae220b5fbd7c5bf52713eaf6401bfa" translate="yes" xml:space="preserve">
          <source>This function returns the parent frame of &lt;var&gt;frame&lt;/var&gt;. The parent frame of &lt;var&gt;frame&lt;/var&gt; is the Emacs frame whose window-system window is the parent window of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window-system window. If such a frame exists, &lt;var&gt;frame&lt;/var&gt; is considered a child frame of that frame.</source>
          <target state="translated">This function returns the parent frame of &lt;var&gt;frame&lt;/var&gt; . The parent frame of &lt;var&gt;frame&lt;/var&gt; is the Emacs frame whose window-system window is the parent window of &lt;var&gt;frame&lt;/var&gt; &amp;rsquo;s window-system window. If such a frame exists, &lt;var&gt;frame&lt;/var&gt; is considered a child frame of that frame.</target>
        </trans-unit>
        <trans-unit id="e771c30548d0d4b69691eae5f6bdbe7fdd18a2f7" translate="yes" xml:space="preserve">
          <source>This function returns the parent of &lt;var&gt;char-table&lt;/var&gt;. The parent is always either &lt;code&gt;nil&lt;/code&gt; or another char-table.</source>
          <target state="translated">This function returns the parent of &lt;var&gt;char-table&lt;/var&gt; . The parent is always either &lt;code&gt;nil&lt;/code&gt; or another char-table.</target>
        </trans-unit>
        <trans-unit id="ef7a9b25b7b7c74c3f0b831628afd0d41a8750af" translate="yes" xml:space="preserve">
          <source>This function returns the parent window of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; has no parent (i.e., it is a minibuffer window or the root window of its frame).</source>
          <target state="translated">This function returns the parent window of &lt;var&gt;window&lt;/var&gt; . If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; has no parent (i.e., it is a minibuffer window or the root window of its frame).</target>
        </trans-unit>
        <trans-unit id="100c3e30d293535d9b43d4f0f75ae657207f276e" translate="yes" xml:space="preserve">
          <source>This function returns the parser state that the parser would reach at position &lt;var&gt;pos&lt;/var&gt; starting from the beginning of the visible portion of the buffer. See &lt;a href=&quot;parser-state#Parser-State&quot;&gt;Parser State&lt;/a&gt;, for a description of the parser state.</source>
          <target state="translated">This function returns the parser state that the parser would reach at position &lt;var&gt;pos&lt;/var&gt; starting from the beginning of the visible portion of the buffer. See &lt;a href=&quot;parser-state#Parser-State&quot;&gt;Parser State&lt;/a&gt;, for a description of the parser state.</target>
        </trans-unit>
        <trans-unit id="0d685977aabaad11c5aaf8445538b42897e6e0f0" translate="yes" xml:space="preserve">
          <source>This function returns the part of &lt;var&gt;string&lt;/var&gt; that fits within &lt;var&gt;width&lt;/var&gt; columns, as a new string.</source>
          <target state="translated">This function returns the part of &lt;var&gt;string&lt;/var&gt; that fits within &lt;var&gt;width&lt;/var&gt; columns, as a new string.</target>
        </trans-unit>
        <trans-unit id="2cbbadef6c02a4ca97653f94298446ff12323139" translate="yes" xml:space="preserve">
          <source>This function returns the pixel coordinates of &lt;var&gt;window&lt;/var&gt; relative to an origin at (0, 0) of the display of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. Calling &lt;code&gt;(window-absolute-pixel-edges)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window nil t t)&lt;/code&gt;, see above.</source>
          <target state="translated">This function returns the pixel coordinates of &lt;var&gt;window&lt;/var&gt; relative to an origin at (0, 0) of the display of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s frame. Calling &lt;code&gt;(window-absolute-pixel-edges)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window nil t t)&lt;/code&gt; , see above.</target>
        </trans-unit>
        <trans-unit id="22e4121d03b1669541ddcbf1ba4d35d0a4b908e0" translate="yes" xml:space="preserve">
          <source>This function returns the pixel coordinates of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body relative to an origin at (0, 0) of the display of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. Calling &lt;code&gt;(window-absolute-body-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t t t)&lt;/code&gt;, see above.</source>
          <target state="translated">This function returns the pixel coordinates of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s body relative to an origin at (0, 0) of the display of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s frame. Calling &lt;code&gt;(window-absolute-body-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t t t)&lt;/code&gt; , see above.</target>
        </trans-unit>
        <trans-unit id="b460de913df0ebff88befa48d1c6842dbaa3a8c6" translate="yes" xml:space="preserve">
          <source>This function returns the pixel edges of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body. Calling &lt;code&gt;(window-body-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t nil t)&lt;/code&gt;, see above.</source>
          <target state="translated">This function returns the pixel edges of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s body. Calling &lt;code&gt;(window-body-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t nil t)&lt;/code&gt; , see above.</target>
        </trans-unit>
        <trans-unit id="a6c12eb3f77cf3a9325000c0c58c13f9c5b1256b" translate="yes" xml:space="preserve">
          <source>This function returns the pixel height of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">This function returns the pixel height of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s text area the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</target>
        </trans-unit>
        <trans-unit id="11e13972916d944847268dec125ea07ed6376e59" translate="yes" xml:space="preserve">
          <source>This function returns the pixel width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">This function returns the pixel width of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s text area the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</target>
        </trans-unit>
        <trans-unit id="20f9fb61dcd5e0745a216d4c4dc4e50d54e7c66c" translate="yes" xml:space="preserve">
          <source>This function returns the position at which &lt;var&gt;overlay&lt;/var&gt; ends, as an integer.</source>
          <target state="translated">This function returns the position at which &lt;var&gt;overlay&lt;/var&gt; ends, as an integer.</target>
        </trans-unit>
        <trans-unit id="1ab452397e74ffb205ca9503a761e134f874e0f2" translate="yes" xml:space="preserve">
          <source>This function returns the position at which &lt;var&gt;overlay&lt;/var&gt; starts, as an integer.</source>
          <target state="translated">This function returns the position at which &lt;var&gt;overlay&lt;/var&gt; starts, as an integer.</target>
        </trans-unit>
        <trans-unit id="b9dd0ef72770c4be928e278d390ba083f20ddb13" translate="yes" xml:space="preserve">
          <source>This function returns the position of the beginning of the region (as an integer). This is the position of either point or the mark, whichever is smaller.</source>
          <target state="translated">This function returns the position of the beginning of the region (as an integer). This is the position of either point or the mark, whichever is smaller.</target>
        </trans-unit>
        <trans-unit id="dff40079cde5e10f90ec1185d975a2585ed98899" translate="yes" xml:space="preserve">
          <source>This function returns the position of the end of the region (as an integer). This is the position of either point or the mark, whichever is larger.</source>
          <target state="translated">This function returns the position of the end of the region (as an integer). This is the position of either point or the mark, whichever is larger.</target>
        </trans-unit>
        <trans-unit id="4ad806a07e3170fecc83462696fd0aaefe7065b6" translate="yes" xml:space="preserve">
          <source>This function returns the position that &lt;var&gt;marker&lt;/var&gt; points to, or &lt;code&gt;nil&lt;/code&gt; if it points nowhere.</source>
          <target state="translated">This function returns the position that &lt;var&gt;marker&lt;/var&gt; points to, or &lt;code&gt;nil&lt;/code&gt; if it points nowhere.</target>
        </trans-unit>
        <trans-unit id="c81e5fa0ff2db59e794974e86cc520b3a5a6b267" translate="yes" xml:space="preserve">
          <source>This function returns the position where display of its buffer ends in &lt;var&gt;window&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">This function returns the position where display of its buffer ends in &lt;var&gt;window&lt;/var&gt; . The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</target>
        </trans-unit>
        <trans-unit id="785521c3c1ac8a80364594b065052ca7abe1d123" translate="yes" xml:space="preserve">
          <source>This function returns the preserved height of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it returns the preserved width of &lt;var&gt;window&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if the size of &lt;var&gt;window&lt;/var&gt; is not preserved.</source>
          <target state="translated">This function returns the preserved height of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it returns the preserved width of &lt;var&gt;window&lt;/var&gt; . It returns &lt;code&gt;nil&lt;/code&gt; if the size of &lt;var&gt;window&lt;/var&gt; is not preserved.</target>
        </trans-unit>
        <trans-unit id="ba0eeb63242b01ba3179bbc92bc8134b1d1eb1bc" translate="yes" xml:space="preserve">
          <source>This function returns the previous sibling of the window &lt;var&gt;window&lt;/var&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is the first child of its parent.</source>
          <target state="translated">This function returns the previous sibling of the window &lt;var&gt;window&lt;/var&gt; . If omitted or &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;window&lt;/var&gt; defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is the first child of its parent.</target>
        </trans-unit>
        <trans-unit id="2831733098dad6cdef83d31afc2d16134a9eea45" translate="yes" xml:space="preserve">
          <source>This function returns the process</source>
          <target state="translated">This function returns the process</target>
        </trans-unit>
        <trans-unit id="3e57e45468963541bc524e131cd617f1685d66a9" translate="yes" xml:space="preserve">
          <source>This function returns the process marker for &lt;var&gt;process&lt;/var&gt;, which is the marker that says where to insert output from the process.</source>
          <target state="translated">This function returns the process marker for &lt;var&gt;process&lt;/var&gt; , which is the marker that says where to insert output from the process.</target>
        </trans-unit>
        <trans-unit id="7be289a6263416b52205420812ffa4cee9fcdd48" translate="yes" xml:space="preserve">
          <source>This function returns the process named &lt;var&gt;name&lt;/var&gt; (a string), or &lt;code&gt;nil&lt;/code&gt; if there is none. The argument &lt;var&gt;name&lt;/var&gt; can also be a process object, in which case it is returned.</source>
          <target state="translated">This function returns the process named &lt;var&gt;name&lt;/var&gt; (a string), or &lt;code&gt;nil&lt;/code&gt; if there is none. The argument &lt;var&gt;name&lt;/var&gt; can also be a process object, in which case it is returned.</target>
        </trans-unit>
        <trans-unit id="059c991523aee6c3af6956d21974f0498038d40a" translate="yes" xml:space="preserve">
          <source>This function returns the process plist of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">This function returns the process plist of &lt;var&gt;process&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9d0d3a60b478058dce41357b62db6bc5547e4864" translate="yes" xml:space="preserve">
          <source>This function returns the processor run time used by Emacs, as a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">This function returns the processor run time used by Emacs, as a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="da2baa8ba79c6d543b1823016cb688e043dda114" translate="yes" xml:space="preserve">
          <source>This function returns the prompt string of the currently active minibuffer. If no minibuffer is active, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns the prompt string of the currently active minibuffer. If no minibuffer is active, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69a8e582795e42f1fa7f44028dabb3fdf853c49b" translate="yes" xml:space="preserve">
          <source>This function returns the proper fill column value to use for filling the text around point. The value is the value of the &lt;code&gt;fill-column&lt;/code&gt; variable, minus the value of the &lt;code&gt;right-margin&lt;/code&gt; property of the character after point.</source>
          <target state="translated">This function returns the proper fill column value to use for filling the text around point. The value is the value of the &lt;code&gt;fill-column&lt;/code&gt; variable, minus the value of the &lt;code&gt;right-margin&lt;/code&gt; property of the character after point.</target>
        </trans-unit>
        <trans-unit id="9ce47b7e3485d22dc5b1a3d17f78ae8961c1cd7a" translate="yes" xml:space="preserve">
          <source>This function returns the proper justification style to use for filling the text around point.</source>
          <target state="translated">This function returns the proper justification style to use for filling the text around point.</target>
        </trans-unit>
        <trans-unit id="53b9323d118a4efc2b8a7035d87bb9021c9aeb3d" translate="yes" xml:space="preserve">
          <source>This function returns the proper left margin value to use for filling the text around point. The value is the sum of the &lt;code&gt;left-margin&lt;/code&gt; property of the character at the start of the current line (or zero if none), and the value of the variable &lt;code&gt;left-margin&lt;/code&gt;.</source>
          <target state="translated">This function returns the proper left margin value to use for filling the text around point. The value is the sum of the &lt;code&gt;left-margin&lt;/code&gt; property of the character at the start of the current line (or zero if none), and the value of the variable &lt;code&gt;left-margin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3aa2e5da082464ba8e84491c810e691665fe7cf4" translate="yes" xml:space="preserve">
          <source>This function returns the property list of &lt;var&gt;symbol&lt;/var&gt;.</source>
          <target state="translated">This function returns the property list of &lt;var&gt;symbol&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="561fa84f394620a8c6a818070914900ceadda51c" translate="yes" xml:space="preserve">
          <source>This function returns the property list of &lt;var&gt;xwidget&lt;/var&gt;.</source>
          <target state="translated">This function returns the property list of &lt;var&gt;xwidget&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b99817a1615171d0733d556f7ffb87e59308eeb5" translate="yes" xml:space="preserve">
          <source>This function returns the property list of the character set &lt;var&gt;charset&lt;/var&gt;. Although &lt;var&gt;charset&lt;/var&gt; is a symbol, this is not the same as the property list of that symbol. Charset properties include important information about the charset, such as its documentation string, short name, etc.</source>
          <target state="translated">This function returns the property list of the character set &lt;var&gt;charset&lt;/var&gt; . Although &lt;var&gt;charset&lt;/var&gt; is a symbol, this is not the same as the property list of that symbol. Charset properties include important information about the charset, such as its documentation string, short name, etc.</target>
        </trans-unit>
        <trans-unit id="2bd183c2aa69ddc14378e3202c4ac160cd6d23a6" translate="yes" xml:space="preserve">
          <source>This function returns the raw syntax descriptor for the character in the buffer after position &lt;var&gt;pos&lt;/var&gt;, taking account of syntax properties as well as the syntax table. If &lt;var&gt;pos&lt;/var&gt; is outside the buffer&amp;rsquo;s accessible portion (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;accessible portion&lt;/a&gt;), the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns the raw syntax descriptor for the character in the buffer after position &lt;var&gt;pos&lt;/var&gt; , taking account of syntax properties as well as the syntax table. If &lt;var&gt;pos&lt;/var&gt; is outside the buffer&amp;rsquo;s accessible portion (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;accessible portion&lt;/a&gt;), the return value is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74a34822626e03a55fd755b10f41d34f53eb5500" translate="yes" xml:space="preserve">
          <source>This function returns the real</source>
          <target state="translated">This function returns the real</target>
        </trans-unit>
        <trans-unit id="67fd76c8c142c992772cdd9f22086eb3ccdd2852" translate="yes" xml:space="preserve">
          <source>This function returns the remapping for &lt;var&gt;command&lt;/var&gt; (a symbol), given the current active keymaps. If &lt;var&gt;command&lt;/var&gt; is not remapped (which is the usual situation), or not a symbol, the function returns &lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;position&lt;/code&gt; can optionally specify a buffer position or an event position to determine the keymaps to use, as in &lt;code&gt;key-binding&lt;/code&gt;.</source>
          <target state="translated">This function returns the remapping for &lt;var&gt;command&lt;/var&gt; (a symbol), given the current active keymaps. If &lt;var&gt;command&lt;/var&gt; is not remapped (which is the usual situation), or not a symbol, the function returns &lt;code&gt;nil&lt;/code&gt; . &lt;code&gt;position&lt;/code&gt; can optionally specify a buffer position or an event position to determine the keymaps to use, as in &lt;code&gt;key-binding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eb065db8c71520c23781e14db5a3e0a581fa8b4" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;code&gt;seq-concatenate&lt;/code&gt; to the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;. The result is a sequence of type &lt;var&gt;type&lt;/var&gt;, or a list if &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns the result of applying &lt;code&gt;seq-concatenate&lt;/code&gt; to the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; . The result is a sequence of type &lt;var&gt;type&lt;/var&gt; , or a list if &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6984800682edff78636a583d856b592eca82d67e" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; and its index within &lt;var&gt;seq&lt;/var&gt;. The returned value is a list.</source>
          <target state="translated">This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; and its index within &lt;var&gt;seq&lt;/var&gt; . The returned value is a list.</target>
        </trans-unit>
        <trans-unit id="b40304cf5270aa93d7ef32d0504aae2376273ffa" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;. The returned value is a list.</source>
          <target state="translated">This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; . The returned value is a list.</target>
        </trans-unit>
        <trans-unit id="4d0b3002813202ca8c6717a05bc6e5b78dbd449d" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequences&lt;/var&gt;. The arity (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;subr-arity&lt;/a&gt;) of &lt;var&gt;function&lt;/var&gt; must match the number of sequences. Mapping stops at the end of the shortest sequence, and the returned value is a list.</source>
          <target state="translated">This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequences&lt;/var&gt; . The arity (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;subr-arity&lt;/a&gt;) of &lt;var&gt;function&lt;/var&gt; must match the number of sequences. Mapping stops at the end of the shortest sequence, and the returned value is a list.</target>
        </trans-unit>
        <trans-unit id="cb6e9c0e6cf8f1a4dd8133b084e6124a944d236d" translate="yes" xml:space="preserve">
          <source>This function returns the result of calling &lt;var&gt;function&lt;/var&gt; with &lt;var&gt;initial-value&lt;/var&gt; and the first element of &lt;var&gt;sequence&lt;/var&gt;, then calling &lt;var&gt;function&lt;/var&gt; with that result and the second element of &lt;var&gt;sequence&lt;/var&gt;, then with that result and the third element of &lt;var&gt;sequence&lt;/var&gt;, etc. &lt;var&gt;function&lt;/var&gt; should be a function of two arguments. If &lt;var&gt;sequence&lt;/var&gt; is empty, this returns &lt;var&gt;initial-value&lt;/var&gt; without calling &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">This function returns the result of calling &lt;var&gt;function&lt;/var&gt; with &lt;var&gt;initial-value&lt;/var&gt; and the first element of &lt;var&gt;sequence&lt;/var&gt; , then calling &lt;var&gt;function&lt;/var&gt; with that result and the second element of &lt;var&gt;sequence&lt;/var&gt; , then with that result and the third element of &lt;var&gt;sequence&lt;/var&gt; , etc. &lt;var&gt;function&lt;/var&gt; should be a function of two arguments. If &lt;var&gt;sequence&lt;/var&gt; is empty, this returns &lt;var&gt;initial-value&lt;/var&gt; without calling &lt;var&gt;function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="48a768eb8d2e6505989308b6e5979448243e83e5" translate="yes" xml:space="preserve">
          <source>This function returns the result of comparing &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; in the opposite order, i.e., it is equivalent to calling &lt;code&gt;(string-lessp &lt;var&gt;string2&lt;/var&gt; &lt;var&gt;string1&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">This function returns the result of comparing &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; in the opposite order, i.e., it is equivalent to calling &lt;code&gt;(string-lessp &lt;var&gt;string2&lt;/var&gt; &lt;var&gt;string1&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="141716c6cb4d38a552c3663bc6506ddaad7f5406" translate="yes" xml:space="preserve">
          <source>This function returns the root window for &lt;var&gt;frame-or-window&lt;/var&gt;. The argument &lt;var&gt;frame-or-window&lt;/var&gt; should be either a window or a frame; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame. If &lt;var&gt;frame-or-window&lt;/var&gt; is a window, the return value is the root window of that window&amp;rsquo;s frame.</source>
          <target state="translated">This function returns the root window for &lt;var&gt;frame-or-window&lt;/var&gt; . The argument &lt;var&gt;frame-or-window&lt;/var&gt; should be either a window or a frame; if omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected frame. If &lt;var&gt;frame-or-window&lt;/var&gt; is a window, the return value is the root window of that window&amp;rsquo;s frame.</target>
        </trans-unit>
        <trans-unit id="0ed76f0c99a1e2324ca577f7b559fe060d2311a3" translate="yes" xml:space="preserve">
          <source>This function returns the selected frame at the last time window change functions were run.</source>
          <target state="translated">This function returns the selected frame at the last time window change functions were run.</target>
        </trans-unit>
        <trans-unit id="2e3343871729ff83c83f6caf038d96ab623bf473" translate="yes" xml:space="preserve">
          <source>This function returns the selected frame.</source>
          <target state="translated">This function returns the selected frame.</target>
        </trans-unit>
        <trans-unit id="a78fa205d7c57d2e8e999dbb4c9a8e97b1c83073" translate="yes" xml:space="preserve">
          <source>This function returns the selected window (which is always a live window).</source>
          <target state="translated">This function returns the selected window (which is always a live window).</target>
        </trans-unit>
        <trans-unit id="488e85bb1ba9abfaee8bdbe7fa72b0b2188a3f80" translate="yes" xml:space="preserve">
          <source>This function returns the selected window at the last time window change functions were run.</source>
          <target state="translated">This function returns the selected window at the last time window change functions were run.</target>
        </trans-unit>
        <trans-unit id="bf11dab22c23c9cefe5c54760ace13d0e14dae6c" translate="yes" xml:space="preserve">
          <source>This function returns the selected window of &lt;var&gt;frame&lt;/var&gt; at the last time window change functions were run. If omitted or &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;frame&lt;/var&gt; defaults to the selected frame.</source>
          <target state="translated">This function returns the selected window of &lt;var&gt;frame&lt;/var&gt; at the last time window change functions were run. If omitted or &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;frame&lt;/var&gt; defaults to the selected frame.</target>
        </trans-unit>
        <trans-unit id="aa29a17048358f44e3e209a4be405cea5db98def" translate="yes" xml:space="preserve">
          <source>This function returns the sentinel of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">This function returns the sentinel of &lt;var&gt;process&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="575b6af8bf428b8470217b32bc5bcffce732e09a" translate="yes" xml:space="preserve">
          <source>This function returns the size of an image as a pair &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;spec&lt;/var&gt; is an image specification. &lt;var&gt;pixels&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means return sizes measured in pixels, otherwise return sizes measured in the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). &lt;var&gt;frame&lt;/var&gt; is the frame on which the image will be displayed. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted means use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">This function returns the size of an image as a pair &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; . &lt;var&gt;spec&lt;/var&gt; is an image specification. &lt;var&gt;pixels&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; means return sizes measured in pixels, otherwise return sizes measured in the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). &lt;var&gt;frame&lt;/var&gt; is the frame on which the image will be displayed. &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; or omitted means use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="7bf9fca9c59fce128003763f5b6825de8d5b9773" translate="yes" xml:space="preserve">
          <source>This function returns the size of the text of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer in pixels. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The return value is a cons of the maximum pixel-width of any text line and the maximum pixel-height of all text lines. This function exists to allow Lisp programs to adjust the dimensions of &lt;var&gt;window&lt;/var&gt; to the buffer text it needs to display.</source>
          <target state="translated">This function returns the size of the text of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s buffer in pixels. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The return value is a cons of the maximum pixel-width of any text line and the maximum pixel-height of all text lines. This function exists to allow Lisp programs to adjust the dimensions of &lt;var&gt;window&lt;/var&gt; to the buffer text it needs to display.</target>
        </trans-unit>
        <trans-unit id="baba65332b639509864f04464608307119b9c9bd" translate="yes" xml:space="preserve">
          <source>This function returns the smallest element of &lt;var&gt;sequence&lt;/var&gt;. The elements of &lt;var&gt;sequence&lt;/var&gt; must be numbers or markers (see &lt;a href=&quot;markers#Markers&quot;&gt;Markers&lt;/a&gt;).</source>
          <target state="translated">This function returns the smallest element of &lt;var&gt;sequence&lt;/var&gt; . The elements of &lt;var&gt;sequence&lt;/var&gt; must be numbers or markers (see &lt;a href=&quot;markers#Markers&quot;&gt;Markers&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="e455a3ba3ddec8e39ba478b6a7bc8c2ef5eca654" translate="yes" xml:space="preserve">
          <source>This function returns the smallest of its arguments.</source>
          <target state="translated">This function returns the smallest of its arguments.</target>
        </trans-unit>
        <trans-unit id="c5270baa12bca1c58f69d00b66388e6890124044" translate="yes" xml:space="preserve">
          <source>This function returns the specified property of the coding system &lt;var&gt;coding-system&lt;/var&gt;. Most coding system properties exist for internal purposes, but one that you might find useful is &lt;code&gt;:mime-charset&lt;/code&gt;. That property&amp;rsquo;s value is the name used in MIME for the character coding which this coding system can read and write. Examples:</source>
          <target state="translated">This function returns the specified property of the coding system &lt;var&gt;coding-system&lt;/var&gt; . Most coding system properties exist for internal purposes, but one that you might find useful is &lt;code&gt;:mime-charset&lt;/code&gt; . That property&amp;rsquo;s value is the name used in MIME for the character coding which this coding system can read and write. Examples:</target>
        </trans-unit>
        <trans-unit id="bf8f556fbe00a131391be8e655f6b8e0f8d91c7d" translate="yes" xml:space="preserve">
          <source>This function returns the standard category table.</source>
          <target state="translated">This function returns the standard category table.</target>
        </trans-unit>
        <trans-unit id="3fff60491da7734fd5f4efa8f77cabd606b6822f" translate="yes" xml:space="preserve">
          <source>This function returns the standard syntax table, which is the syntax table used in Fundamental mode.</source>
          <target state="translated">This function returns the standard syntax table, which is the syntax table used in Fundamental mode.</target>
        </trans-unit>
        <trans-unit id="bd0685a92700e4ab6399754fb24286c85b300602" translate="yes" xml:space="preserve">
          <source>This function returns the state of &lt;var&gt;window&lt;/var&gt; as a Lisp object. The argument &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the root window of the selected frame.</source>
          <target state="translated">This function returns the state of &lt;var&gt;window&lt;/var&gt; as a Lisp object. The argument &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the root window of the selected frame.</target>
        </trans-unit>
        <trans-unit id="fde87618b1d109e8f8df00cd96d34800bc9cf165" translate="yes" xml:space="preserve">
          <source>This function returns the status of &lt;var&gt;process-name&lt;/var&gt; as a symbol. The argument &lt;var&gt;process-name&lt;/var&gt; must be a process, a buffer, or a process name (a string).</source>
          <target state="translated">This function returns the status of &lt;var&gt;process-name&lt;/var&gt; as a symbol. The argument &lt;var&gt;process-name&lt;/var&gt; must be a process, a buffer, or a process name (a string).</target>
        </trans-unit>
        <trans-unit id="8eb668897379aa1f57b2357f159b017dc88bc2d2" translate="yes" xml:space="preserve">
          <source>This function returns the string that &lt;var&gt;abbrev&lt;/var&gt; would expand into (as defined by the abbrev tables used for the current buffer). It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;abbrev&lt;/var&gt; is not a valid abbrev. The optional argument &lt;var&gt;table&lt;/var&gt; specifies the abbrev table to use, as in &lt;code&gt;abbrev-symbol&lt;/code&gt;.</source>
          <target state="translated">This function returns the string that &lt;var&gt;abbrev&lt;/var&gt; would expand into (as defined by the abbrev tables used for the current buffer). It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;abbrev&lt;/var&gt; is not a valid abbrev. The optional argument &lt;var&gt;table&lt;/var&gt; specifies the abbrev table to use, as in &lt;code&gt;abbrev-symbol&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fee82bbc64693f6d45b44124c4434328f9b7114" translate="yes" xml:space="preserve">
          <source>This function returns the string that is &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s name. For example:</source>
          <target state="translated">This function returns the string that is &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s name. For example:</target>
        </trans-unit>
        <trans-unit id="e374fdab3c64fc23444fe9f43726b87a1b7149ea" translate="yes" xml:space="preserve">
          <source>This function returns the subtype symbol of &lt;var&gt;char-table&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;char-table&lt;/var&gt; 의 하위 유형 기호를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="014a1e87b9b71d8e4c15f523944e5655e0260a25" translate="yes" xml:space="preserve">
          <source>This function returns the symbol (or word) at or near point, as a string. The return value includes no text properties.</source>
          <target state="translated">이 함수는 기호 (또는 단어)를 문자열로 반환합니다. 반환 값에는 텍스트 속성이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="01afb565b2c3314e46b9c173761bd6837dfe1a60" translate="yes" xml:space="preserve">
          <source>This function returns the symbol &lt;code&gt;network&lt;/code&gt; for a network connection or server, &lt;code&gt;serial&lt;/code&gt; for a serial port connection, &lt;code&gt;pipe&lt;/code&gt; for a pipe connection, or &lt;code&gt;real&lt;/code&gt; for a subprocess created for running a program.</source>
          <target state="translated">이 함수는 심볼 리턴 &lt;code&gt;network&lt;/code&gt; 네트워크 연결 또는 서버에 대한 &lt;code&gt;serial&lt;/code&gt; 직렬 포트 연결 용 &lt;code&gt;pipe&lt;/code&gt; 또는 파이프 연결을위한 &lt;code&gt;real&lt;/code&gt; 프로그램을 실행하기 위해 생성 된 서브 프로세스를.</target>
        </trans-unit>
        <trans-unit id="2e80a18fe11eca475dded9bf270fa71d5ebbc7e5" translate="yes" xml:space="preserve">
          <source>This function returns the symbol in &lt;var&gt;obarray&lt;/var&gt; whose name is &lt;var&gt;name&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;obarray&lt;/var&gt; has no symbol with that name. Therefore, you can use &lt;code&gt;intern-soft&lt;/code&gt; to test whether a symbol with a given name is already interned. If &lt;var&gt;obarray&lt;/var&gt; is omitted, the value of the global variable &lt;code&gt;obarray&lt;/code&gt; is used.</source>
          <target state="translated">이 함수는 이름이 &lt;var&gt;name&lt;/var&gt; 인 &lt;var&gt;obarray&lt;/var&gt; 의 기호를 반환 하거나 &lt;var&gt;obarray&lt;/var&gt; 에 해당 이름의 기호가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다. 따라서 &lt;code&gt;intern-soft&lt;/code&gt; 를 사용 하여 주어진 이름을 가진 심볼이 이미 인턴되었는지 테스트 할 수 있습니다 . 경우 &lt;var&gt;obarray&lt;/var&gt; 은 생략 전역 변수 값 &lt;code&gt;obarray&lt;/code&gt; 가 사용된다.</target>
        </trans-unit>
        <trans-unit id="79b7857cdc527649313d7cfd9af9ee5c137d4cfb" translate="yes" xml:space="preserve">
          <source>This function returns the symbol representing the abbrev named &lt;var&gt;abbrev&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if that abbrev is not defined. The optional second argument &lt;var&gt;table&lt;/var&gt; is the abbrev table in which to look it up. If &lt;var&gt;table&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function tries first the current buffer&amp;rsquo;s local abbrev table, and second the global abbrev table.</source>
          <target state="translated">이 함수는 abbrev라는 &lt;var&gt;abbrev&lt;/var&gt; 나타내는 기호를 반환합니다 . 약어가 정의되어 있지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 선택적인 두 번째 인수 &lt;var&gt;table&lt;/var&gt; 은 조회 할 약어 테이블입니다. 경우 &lt;var&gt;table&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; ,이 함수는 먼저 현재의 버퍼의 로컬 약칭 테이블 및 제 글로벌 약칭 테이블을 시도한다.</target>
        </trans-unit>
        <trans-unit id="506f11ebcfb0610719eb5dbc25984d8632145ffe" translate="yes" xml:space="preserve">
          <source>This function returns the syntax class of &lt;var&gt;character&lt;/var&gt;, represented by its designator character (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;). This returns &lt;em&gt;only&lt;/em&gt; the class, not its matching character or syntax flags.</source>
          <target state="translated">이 함수는 지정자 문자로 표시되는 &lt;var&gt;character&lt;/var&gt; 의 구문 클래스를 반환합니다 ( &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;구문 클래스 테이블&lt;/a&gt; 참조 ). 일치하는 문자 또는 구문 플래그가 아닌 클래스 &lt;em&gt;만&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d5ed778893daaa0f27537ba9f0db1388c2eb6b5e" translate="yes" xml:space="preserve">
          <source>This function returns the syntax code for the raw syntax descriptor &lt;var&gt;syntax&lt;/var&gt;. More precisely, it takes the raw syntax descriptor&amp;rsquo;s &lt;var&gt;syntax-code&lt;/var&gt; component, masks off the high 16 bits which record the syntax flags, and returns the resulting integer.</source>
          <target state="translated">이 함수는 원시 구문 설명자 &lt;var&gt;syntax&lt;/var&gt; 대한 구문 코드를 반환 합니다 . 보다 정확하게는 원시 구문 설명 자의 &lt;var&gt;syntax-code&lt;/var&gt; 구성 요소를 가져와 구문 플래그를 기록하는 상위 16 비트를 마스크하고 결과 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a733feeb562aa00bfc558bc6f43c759ef9b2d4e9" translate="yes" xml:space="preserve">
          <source>This function returns the terminal name that &lt;var&gt;process&lt;/var&gt; is using for its communication with Emacs&amp;mdash;or &lt;code&gt;nil&lt;/code&gt; if it is using pipes instead of a pty (see &lt;code&gt;process-connection-type&lt;/code&gt; in &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;). If &lt;var&gt;process&lt;/var&gt; represents a program running on a remote host, the terminal name used by that program on the remote host is provided as process property &lt;code&gt;remote-tty&lt;/code&gt;. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 해당 단말 이름을 반환 &lt;var&gt;process&lt;/var&gt; 이맥스 또는과의 통신에 사용되는 &lt;code&gt;nil&lt;/code&gt; 그것을 대신 PTY의 파이프를 사용하는 경우 (참조 &lt;code&gt;process-connection-type&lt;/code&gt; 의 &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;비동기 프로세스&lt;/a&gt; ). &lt;var&gt;process&lt;/var&gt; 가 원격 호스트에서 실행중인 프로그램을 나타내는 경우 원격 호스트에서 해당 프로그램이 사용하는 터미널 이름이 프로세스 속성 &lt;code&gt;remote-tty&lt;/code&gt; 로 제공됩니다 . &lt;var&gt;process&lt;/var&gt; 가 네트워크, 직렬 또는 파이프 연결을 나타내는 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="68c99cec9f11f0295ef8ad2a7e673421afd90709" translate="yes" xml:space="preserve">
          <source>This function returns the terminal object that displays &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or unspecified, it defaults to the selected frame.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 을 표시하는 터미널 객체를 반환합니다 . 경우 &lt;var&gt;frame&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 선택한 프레임 또는 지정, 기본값.</target>
        </trans-unit>
        <trans-unit id="ee06a386876a13ad3484f4b0231197457d3f6fe5" translate="yes" xml:space="preserve">
          <source>This function returns the text that would be inserted into the buffer by &lt;code&gt;replace-match&lt;/code&gt;, but without modifying the buffer. It is useful if you want to present the user with actual replacement result, with constructs like &amp;lsquo;</source>
          <target state="translated">이 함수는 버퍼 를 수정하지 않고 &lt;code&gt;replace-match&lt;/code&gt; 에 의해 버퍼에 삽입 될 텍스트를 반환합니다 . 사용자에게 '와 같은 구조로 실제 대체 결과를 제공하려는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1d13304ad3475dee6f7218c1f54ba4ed578e98cb" translate="yes" xml:space="preserve">
          <source>This function returns the timer responsible for animating &lt;var&gt;image&lt;/var&gt;, if there is one.</source>
          <target state="translated">이 함수는 &lt;var&gt;image&lt;/var&gt; 애니메이션을 담당하는 타이머를 반환합니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="9ec50794f2299715bd1f75399d93dbb2b8dca64c" translate="yes" xml:space="preserve">
          <source>This function returns the title of &lt;var&gt;xwidget&lt;/var&gt; as a string.</source>
          <target state="translated">이 함수는 &lt;var&gt;xwidget&lt;/var&gt; 의 제목을 문자열로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e72994ba77b0027fc348ea26230fed89690ab736" translate="yes" xml:space="preserve">
          <source>This function returns the top frame on &lt;var&gt;terminal&lt;/var&gt;. &lt;var&gt;terminal&lt;/var&gt; should be a terminal object, a frame (meaning that frame&amp;rsquo;s terminal), or &lt;code&gt;nil&lt;/code&gt; (meaning the selected frame&amp;rsquo;s terminal). If it does not refer to a text terminal, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;terminal&lt;/var&gt; 의 상단 프레임을 반환합니다 . &lt;var&gt;terminal&lt;/var&gt; 은 터미널 객체, 프레임 (프레임의 터미널을 의미) 또는 &lt;code&gt;nil&lt;/code&gt; (선택한 프레임의 터미널을 의미 )이어야합니다 . 텍스트 터미널을 참조하지 않는 경우 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dc7d99e1aaf6e340edc4acf0f84df738d01806b2" translate="yes" xml:space="preserve">
          <source>This function returns the topmost child window of &lt;var&gt;window&lt;/var&gt;, if &lt;var&gt;window&lt;/var&gt; is an internal window whose children form a vertical combination. For any other type of window, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능의 최상위 자식 창 반환 &lt;var&gt;window&lt;/var&gt; 경우, &lt;var&gt;window&lt;/var&gt; 그 아이들 수직 결합을 형성하는 내부 창입니다. 다른 유형의 창의 경우 반환 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="991cf23576f8717f6b1a4093ff26f0470bfba220" translate="yes" xml:space="preserve">
          <source>This function returns the total height of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 총 높이를 픽셀 단위로 반환합니다 . &lt;var&gt;window&lt;/var&gt; 은 유효한 창 이어야하며 기본값은 선택한 창 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9837cff5654abc3142fc72784e1e1533e7924252" translate="yes" xml:space="preserve">
          <source>This function returns the total height, in lines, of the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If &lt;var&gt;window&lt;/var&gt; is an internal window, the return value is the total height occupied by its descendant windows.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 총 높이를 줄 단위로 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값. 경우 &lt;var&gt;window&lt;/var&gt; 내부 창이며, 반환 값은 하위 창에 의해 점유 총 높이입니다.</target>
        </trans-unit>
        <trans-unit id="af92f09f61a2a2ace37586e796e1f6b02c507f74" translate="yes" xml:space="preserve">
          <source>This function returns the total leftward horizontal scrolling of &lt;var&gt;window&lt;/var&gt;&amp;mdash;the number of columns by which the text in &lt;var&gt;window&lt;/var&gt; is scrolled left past the left margin. (In right-to-left paragraphs, the value is the total amount of the rightward scrolling instead.) The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 전체 왼쪽 가로 스크롤링, 즉 &lt;var&gt;window&lt;/var&gt; 텍스트 가 왼쪽 여백을지나 왼쪽으로 스크롤 되는 열 수를 반환합니다 . (오른쪽에서 왼쪽으로 쓰는 단락에서 값은 대신 오른쪽으로 스크롤하는 총량입니다.) &lt;var&gt;window&lt;/var&gt; 기본값 은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="da7cc35c84dcdc428c0ed81fef065ca43c08c5f7" translate="yes" xml:space="preserve">
          <source>This function returns the total length of the data in &lt;var&gt;struct&lt;/var&gt;, according to &lt;var&gt;spec&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;spec&lt;/var&gt; 에 따라 &lt;var&gt;struct&lt;/var&gt; 에있는 데이터의 전체 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="610ddc84e1cb4acd497dc79b8ae0443b8749e4ad" translate="yes" xml:space="preserve">
          <source>This function returns the total number of characters in the current buffer. In the absence of any narrowing (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;), &lt;code&gt;point-max&lt;/code&gt; returns a value one larger than this.</source>
          <target state="translated">이 함수는 현재 버퍼의 총 문자 수를 반환합니다. 임의 축소가없는 (참조 &lt;a href=&quot;narrowing#Narrowing&quot;&gt;좁히는&lt;/a&gt; ) &lt;code&gt;point-max&lt;/code&gt; 이것보다 큰 값을 돌려 준다.</target>
        </trans-unit>
        <trans-unit id="643cc59b84332b1e90e5c2b90143c3338c106772" translate="yes" xml:space="preserve">
          <source>This function returns the total number of grouping constructs (parenthesized expressions) in &lt;var&gt;regexp&lt;/var&gt;. This does not include shy groups (see &lt;a href=&quot;regexp-backslash#Regexp-Backslash&quot;&gt;Regexp Backslash&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;regexp&lt;/var&gt; 에서 그룹화 구성 (괄호로 묶인 표현식)의 총 수를 반환합니다 . 여기에는 부끄러운 그룹이 포함되지 않습니다 ( &lt;a href=&quot;regexp-backslash#Regexp-Backslash&quot;&gt;Regexp Backslash&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="67809a457e33587d2bc01ae113e994ac21b78e0a" translate="yes" xml:space="preserve">
          <source>This function returns the total pixel height of &lt;var&gt;window&lt;/var&gt; the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">이 기능은 전체 픽셀 높이 반환 &lt;var&gt;window&lt;/var&gt; 마지막으로 윈도우 변경 기능을 찾을 &lt;code&gt;window&lt;/code&gt; 의 프레임에서 방송합니다. 그 후에 &lt;code&gt;window&lt;/code&gt; 가 생성 되면 0 입니다.</target>
        </trans-unit>
        <trans-unit id="f933eb75b51c0ad7453181aec99bb9cbfff44aeb" translate="yes" xml:space="preserve">
          <source>This function returns the total pixel width of &lt;var&gt;window&lt;/var&gt; the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">이 기능은 전체 픽셀 폭을 반환 &lt;var&gt;window&lt;/var&gt; 마지막으로 윈도우 변경 기능을 찾을 &lt;code&gt;window&lt;/code&gt; 의 프레임에서 방송합니다. 그 후에 &lt;code&gt;window&lt;/code&gt; 가 생성 되면 0 입니다.</target>
        </trans-unit>
        <trans-unit id="084335eb1488040817c8eb73464d18b12ef6ae10" translate="yes" xml:space="preserve">
          <source>This function returns the total width, in columns, of the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If &lt;var&gt;window&lt;/var&gt; is internal, the return value is the total width occupied by its descendant windows.</source>
          <target state="translated">이 함수는 window &lt;var&gt;window&lt;/var&gt; 의 총 너비를 열로 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; 선택한 창, 기본값. 경우 &lt;var&gt;window&lt;/var&gt; 내부에, 반환 값은 하위 창에 의해 점유 폭의 총입니다.</target>
        </trans-unit>
        <trans-unit id="54ecdfbf1fb14070f7777d6b1818988ee5ced393" translate="yes" xml:space="preserve">
          <source>This function returns the truename of the file &lt;var&gt;filename&lt;/var&gt;. If the argument is not an absolute file name, this function first expands it against &lt;code&gt;default-directory&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 파일의 실제 이름을 반환합니다 . 인수가 절대 파일 이름이 아닌 경우이 함수는 먼저 &lt;code&gt;default-directory&lt;/code&gt; 에 대해 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="a6bf7fa2464282b8298f1b9eadc205e5e94ec2dd" translate="yes" xml:space="preserve">
          <source>This function returns the type of &lt;var&gt;object&lt;/var&gt; as a value that represents a symbol: &lt;code&gt;string&lt;/code&gt; for a string, &lt;code&gt;integer&lt;/code&gt; for an integer, &lt;code&gt;process&lt;/code&gt; for a process, etc. See &lt;a href=&quot;type-predicates#Type-Predicates&quot;&gt;Type Predicates&lt;/a&gt;. You can use &lt;code&gt;intern&lt;/code&gt; and &lt;code&gt;eq&lt;/code&gt; to compare against known type symbols, if your code needs to depend on the object type.</source>
          <target state="translated">이 함수는 기호를 나타내는 값 으로 &lt;var&gt;object&lt;/var&gt; 유형을 반환합니다 . &lt;code&gt;string&lt;/code&gt; 은 문자열, &lt;code&gt;integer&lt;/code&gt; 는 정수, &lt;code&gt;process&lt;/code&gt; 는 프로세스 등 입니다. &lt;a href=&quot;type-predicates#Type-Predicates&quot;&gt;유형 술어를&lt;/a&gt; 참조하십시오 . 코드가 객체 유형에 종속되어야하는 경우 &lt;code&gt;intern&lt;/code&gt; 및 &lt;code&gt;eq&lt;/code&gt; 를 사용하여 알려진 유형 기호와 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="174747fb732ef9b986796acd27c88b38073e9c92" translate="yes" xml:space="preserve">
          <source>This function returns the type of end-of-line (a.k.a. &lt;em&gt;eol&lt;/em&gt;) conversion used by &lt;var&gt;coding-system&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; specifies a certain eol conversion, the return value is an integer 0, 1, or 2, standing for &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;dos&lt;/code&gt;, and &lt;code&gt;mac&lt;/code&gt;, respectively. If &lt;var&gt;coding-system&lt;/var&gt; doesn&amp;rsquo;t specify eol conversion explicitly, the return value is a vector of coding systems, each one with one of the possible eol conversion types, like this:</source>
          <target state="translated">이 함수는 &lt;var&gt;coding-system&lt;/var&gt; 에서 사용하는 줄 끝 (일명 &lt;em&gt;eol&lt;/em&gt; ) 변환 유형을 반환합니다 . 경우 &lt;var&gt;coding-system&lt;/var&gt; 소정 EOL 변환을 지정하고, 반환 값은 방치, 정수 0, 1 또는 2이고, &lt;code&gt;unix&lt;/code&gt; , &lt;code&gt;dos&lt;/code&gt; 및 &lt;code&gt;mac&lt;/code&gt; 각각. 경우 &lt;var&gt;coding-system&lt;/var&gt; 명시 적으로 EOL 변환을 지정하지 않고, 반환 값은 코딩 시스템의 벡터,이 같은 가능한 EOL 변환 유형 중 하나를, 각각 하나입니다 :</target>
        </trans-unit>
        <trans-unit id="6655f72c07a3ad936fbd8bd0c56b9522cb3b8676" translate="yes" xml:space="preserve">
          <source>This function returns the user name corresponding to Emacs&amp;rsquo;s real</source>
          <target state="translated">이 함수는 Emacs의 실제에 해당하는 사용자 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7f01c6c1964b79c7038722d01418593d6408aa0b" translate="yes" xml:space="preserve">
          <source>This function returns the value of &lt;var&gt;char&lt;/var&gt;&amp;rsquo;s &lt;var&gt;propname&lt;/var&gt; property.</source>
          <target state="translated">이 함수는 &lt;var&gt;char&lt;/var&gt; 의 &lt;var&gt;propname&lt;/var&gt; 속성 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bf32bd49d3e76cc464a0af6c15f38aec2532aa7f" translate="yes" xml:space="preserve">
          <source>This function returns the value of &lt;var&gt;charset&lt;/var&gt;s property &lt;var&gt;propname&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;charset&lt;/var&gt; 속성 &lt;var&gt;propname&lt;/var&gt; 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="48cd25029c7ea632ff3fff5d0e38df43e0f11c6d" translate="yes" xml:space="preserve">
          <source>This function returns the value of &lt;var&gt;dividend&lt;/var&gt; modulo &lt;var&gt;divisor&lt;/var&gt;; in other words, the remainder after division of &lt;var&gt;dividend&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt;, but with the same sign as &lt;var&gt;divisor&lt;/var&gt;. The arguments must be numbers or markers.</source>
          <target state="translated">이 함수는 &lt;var&gt;dividend&lt;/var&gt; 모듈로 &lt;var&gt;divisor&lt;/var&gt; 값을 반환합니다 . 즉,의 분할 후 나머지 &lt;var&gt;dividend&lt;/var&gt; 에 의한 &lt;var&gt;divisor&lt;/var&gt; 하지만, 같은 기호 &lt;var&gt;divisor&lt;/var&gt; . 인수는 숫자 또는 마커 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f9eb75c6871801ebdb3b775ac8d0a3c0f0c00965" translate="yes" xml:space="preserve">
          <source>This function returns the value of a Lisp float specified by &lt;var&gt;arg&lt;/var&gt;, as a C &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; 로 지정된 Lisp float 값을 C &lt;code&gt;double&lt;/code&gt; 값 으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3b91128c96423ffbb64c7cb9aeb4a46dc5ce8482" translate="yes" xml:space="preserve">
          <source>This function returns the value of a Lisp integer specified by &lt;var&gt;arg&lt;/var&gt;. The C data type of the return value, &lt;code&gt;intmax_t&lt;/code&gt;, is the widest integer data type supported by the C compiler, typically &lt;code&gt;long&amp;nbsp;long&lt;/code&gt;. If the value of &lt;var&gt;arg&lt;/var&gt; doesn&amp;rsquo;t fit into an &lt;code&gt;intmax_t&lt;/code&gt;, the function signals an error using the error symbol &lt;code&gt;overflow-error&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; 로 지정된 Lisp 정수 값을 반환합니다 . 반환 값 &lt;code&gt;intmax_t&lt;/code&gt; 의 C 데이터 유형은 C 컴파일러에서 지원하는 가장 넓은 정수 데이터 유형이며 일반적으로 &lt;code&gt;long&amp;nbsp;long&lt;/code&gt; 입니다. &lt;var&gt;arg&lt;/var&gt; 값이 &lt;code&gt;intmax_t&lt;/code&gt; 에 맞지 않으면 함수는 &lt;code&gt;overflow-error&lt;/code&gt; 오류 기호를 사용하여 오류를 알립니다 .</target>
        </trans-unit>
        <trans-unit id="04a1c9675f6aff58e9694676fce55c5779624c02" translate="yes" xml:space="preserve">
          <source>This function returns the value of point in the current buffer, as an integer.</source>
          <target state="translated">이 함수는 현재 버퍼의 포인트 값을 정수로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4503518694cd70c179b89667db5fbfa45a4ca6ee" translate="yes" xml:space="preserve">
          <source>This function returns the value of property &lt;var&gt;prop&lt;/var&gt; recorded in &lt;var&gt;overlay&lt;/var&gt;, if any. If &lt;var&gt;overlay&lt;/var&gt; does not record any value for that property, but it does have a &lt;code&gt;category&lt;/code&gt; property which is a symbol, that symbol&amp;rsquo;s &lt;var&gt;prop&lt;/var&gt; property is used. Otherwise, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;overlay&lt;/var&gt; 에 기록 된 속성 &lt;var&gt;prop&lt;/var&gt; 값을 반환합니다 . 경우 &lt;var&gt;overlay&lt;/var&gt; 해당 속성에 대한 값을 기록하지 않지만, 그것이 가지고 &lt;code&gt;category&lt;/code&gt; 상징하는 속성을, 심볼의 &lt;var&gt;prop&lt;/var&gt; 속성이 사용됩니다. 그렇지 않으면 값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9105c62b4a1d926ff38d1299ab93e35a2919fbef" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;attribute&lt;/var&gt; attribute for &lt;var&gt;face&lt;/var&gt; on &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">이 함수의 리턴 값 &lt;var&gt;attribute&lt;/var&gt; 에 대한 속성 &lt;var&gt;face&lt;/var&gt; 에서 &lt;var&gt;frame&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6f176e389d315b7a50953798859f34149626cfa9" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;prop&lt;/var&gt; property of the character after position &lt;var&gt;pos&lt;/var&gt; in &lt;var&gt;object&lt;/var&gt; (a buffer or string). The argument &lt;var&gt;object&lt;/var&gt; is optional and defaults to the current buffer.</source>
          <target state="translated">이 함수는 &lt;var&gt;object&lt;/var&gt; (버퍼 또는 문자열) 에서 &lt;var&gt;pos&lt;/var&gt; 위치 뒤에있는 문자 의 &lt;var&gt;prop&lt;/var&gt; 속성 값을 반환합니다 . 인수 &lt;var&gt;object&lt;/var&gt; 는 선택 사항이며 기본값은 현재 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="075b90eab5894af9f4f9e464071663474ab35f5e" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 의 &lt;var&gt;propname&lt;/var&gt; 속성 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="efe0c4a40bdb5d84b5dbe72cf3d0a28c7f0953c3" translate="yes" xml:space="preserve">
          <source>This function returns the value of the environment variable &lt;var&gt;var&lt;/var&gt;, as a string. &lt;var&gt;var&lt;/var&gt; should be a string. If &lt;var&gt;var&lt;/var&gt; is undefined in the environment, &lt;code&gt;getenv&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. It returns &amp;lsquo;</source>
          <target state="translated">이 함수는 환경 변수 &lt;var&gt;var&lt;/var&gt; 의 값을 문자열로 반환 합니다. &lt;var&gt;var&lt;/var&gt; 는 문자열이어야합니다. 환경에서 &lt;var&gt;var&lt;/var&gt; 가 정의되지 않은 경우 &lt;code&gt;getenv&lt;/code&gt; 는 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . '</target>
        </trans-unit>
        <trans-unit id="39c748e2e7e72fdd72180e9a6638188ec110add9" translate="yes" xml:space="preserve">
          <source>This function returns the value of the extra slot &lt;var&gt;slot&lt;/var&gt; of &lt;var&gt;display-table&lt;/var&gt;. The argument &lt;var&gt;slot&lt;/var&gt; may be a number from 0 to 5 inclusive, or a slot name (symbol). Valid symbols are &lt;code&gt;truncation&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;selective-display&lt;/code&gt;, and &lt;code&gt;vertical-border&lt;/code&gt;.</source>
          <target state="translated">이 기능은 여분의 슬롯의 값 반환 &lt;var&gt;slot&lt;/var&gt; 의 &lt;var&gt;display-table&lt;/var&gt; . &lt;var&gt;slot&lt;/var&gt; 인수 는 0에서 5까지의 숫자이거나 슬롯 이름 (기호) 일 수 있습니다. 유효한 기호는 &lt;code&gt;truncation&lt;/code&gt; , &lt;code&gt;wrap&lt;/code&gt; , &lt;code&gt;escape&lt;/code&gt; , &lt;code&gt;control&lt;/code&gt; , &lt;code&gt;selective-display&lt;/code&gt; , &lt;code&gt;vertical-border&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8f18f61450a43d462a561ffc70c6e978f59599cd" translate="yes" xml:space="preserve">
          <source>This function returns the value of the font property &lt;var&gt;property&lt;/var&gt; for &lt;var&gt;font&lt;/var&gt;.</source>
          <target state="translated">이 기능은 폰트 속성의 값을 반환 &lt;var&gt;property&lt;/var&gt; 에 대한 &lt;var&gt;font&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="807f10a670239e77b2b4ba9807ad2d2cce606160" translate="yes" xml:space="preserve">
          <source>This function returns the value of the parameter &lt;var&gt;parameter&lt;/var&gt; (a symbol) of &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it returns the selected frame&amp;rsquo;s parameter. If &lt;var&gt;frame&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 매개 &lt;var&gt;parameter&lt;/var&gt; 매개 변수 (기호) 값을 반환합니다 . 경우 &lt;var&gt;frame&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 선택된 프레임의 매개 변수를 반환합니다. 경우 &lt;var&gt;frame&lt;/var&gt; 에 대한 설정이없는 &lt;var&gt;parameter&lt;/var&gt; 이 함수가 반환는 &lt;code&gt;nil&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b26c2939bb42dd35ee0dd656bb0ea4d91ecf670d" translate="yes" xml:space="preserve">
          <source>This function returns the value of the parameter &lt;var&gt;parameter&lt;/var&gt; (a symbol) of &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;terminal&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;terminal&lt;/var&gt; 의 매개 &lt;var&gt;parameter&lt;/var&gt; 매개 변수 (기호) 값을 반환합니다 . 경우 &lt;var&gt;terminal&lt;/var&gt; 에 대한 설정이없는 &lt;var&gt;parameter&lt;/var&gt; 이 함수가 반환는 &lt;code&gt;nil&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="187556a30a5cf4c0aa76a9f53b09b09697b19161" translate="yes" xml:space="preserve">
          <source>This function returns the value of the property named &lt;var&gt;property&lt;/var&gt; in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list. If there is no such property, it returns &lt;code&gt;nil&lt;/code&gt;. Thus, there is no distinction between a value of &lt;code&gt;nil&lt;/code&gt; and the absence of the property.</source>
          <target state="translated">이 기능은 속성 이름의 값 반환 &lt;var&gt;property&lt;/var&gt; 의 &lt;var&gt;symbol&lt;/var&gt; 의 속성 목록입니다. 그러한 속성이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 따라서 &lt;code&gt;nil&lt;/code&gt; 의 값 과 속성의 부재 사이에 차이가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="259529c91d319fcd710ed729be8071776d0524ef" translate="yes" xml:space="preserve">
          <source>This function returns the value of the variable &lt;code&gt;sentence-end&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;. Otherwise it returns a default value based on the values of the variables &lt;code&gt;sentence-end-double-space&lt;/code&gt; (see &lt;a href=&quot;filling#Definition-of-sentence_002dend_002ddouble_002dspace&quot;&gt;Definition of sentence-end-double-space&lt;/a&gt;), &lt;code&gt;sentence-end-without-period&lt;/code&gt;, and &lt;code&gt;sentence-end-without-space&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 변수 &lt;code&gt;sentence-end&lt;/code&gt; 의 값을 반환합니다 . 그렇지 않은 경우에는 변수 &lt;code&gt;sentence-end-double-space&lt;/code&gt; ( 문장-끝-이중-공간 &lt;a href=&quot;filling#Definition-of-sentence_002dend_002ddouble_002dspace&quot;&gt;정의&lt;/a&gt; 참조 ), &lt;code&gt;sentence-end-without-period&lt;/code&gt; 및 &lt;code&gt;sentence-end-without-space&lt;/code&gt; 공백 의 값을 기반으로 기본값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="945d25c8c6599043456fe57ba30b826d73620568" translate="yes" xml:space="preserve">
          <source>This function returns the value referred to by the first slot of the cons cell &lt;var&gt;cons-cell&lt;/var&gt;. In other words, it returns the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;cons-cell&lt;/var&gt;.</source>
          <target state="translated">이 함수는 cons 셀 &lt;var&gt;cons-cell&lt;/var&gt; 의 첫 번째 슬롯이 참조하는 값을 반환합니다 . 즉, &lt;var&gt;cons-cell&lt;/var&gt; 의 &lt;small&gt;CAR&lt;/small&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bdd9e3e659fc1a94f6e09bba836ad3d694cfda8a" translate="yes" xml:space="preserve">
          <source>This function returns the value referred to by the second slot of the cons cell &lt;var&gt;cons-cell&lt;/var&gt;. In other words, it returns the &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;cons-cell&lt;/var&gt;.</source>
          <target state="translated">이 함수는 cons 셀 &lt;var&gt;cons-cell&lt;/var&gt; 의 두 번째 슬롯이 참조하는 값을 반환합니다 . 즉, &lt;var&gt;cons-cell&lt;/var&gt; 의 &lt;small&gt;CDR&lt;/small&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4df1821298fd235648893b93d47d1974f41e5d9a" translate="yes" xml:space="preserve">
          <source>This function returns the value stored in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value cell. This is where the variable&amp;rsquo;s current (dynamic) value is stored. If the variable has no local binding, this is simply its global value. If the variable is void, a &lt;code&gt;void-variable&lt;/code&gt; error is signaled.</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 의 값 셀에 저장된 값을 반환합니다 . 여기에는 변수의 현재 (동적) 값이 저장됩니다. 변수에 로컬 바인딩이없는 경우 이는 단순히 전역 값입니다. 변수가 void이면 &lt;code&gt;void-variable&lt;/code&gt; 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5e997d0377f2d644978d79629dc832ca0eb37117" translate="yes" xml:space="preserve">
          <source>This function returns the variable at the end of the chain of aliases of &lt;var&gt;variable&lt;/var&gt;. If &lt;var&gt;variable&lt;/var&gt; is not a symbol, or if &lt;var&gt;variable&lt;/var&gt; is not defined as an alias, the function returns &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">이 기능의 별명 체인의 끝에 변수를 반환 &lt;var&gt;variable&lt;/var&gt; . 경우 &lt;var&gt;variable&lt;/var&gt; 기호 아닌 경우, 또는 &lt;var&gt;variable&lt;/var&gt; 별명으로 정의되지 않은 함수는 반환 &lt;var&gt;variable&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="064749a45c343bd22332467a38b5ef53e503fd35" translate="yes" xml:space="preserve">
          <source>This function returns the vendor that provided the window system software (as a string). On GNU and Unix systems this really means whoever distributes the X server. On MS-Windows this is the vendor ID string of the Windows OS (Microsoft).</source>
          <target state="translated">이 함수는 윈도우 시스템 소프트웨어를 제공 한 공급 업체를 문자열로 반환합니다. GNU 및 Unix 시스템에서 이것은 실제로 X 서버를 배포하는 사람을 의미합니다. MS-Windows에서 이것은 Windows OS (Microsoft)의 공급 업체 ID 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e075bebc78123dcd82e85e5a87586b5aa637a1e8" translate="yes" xml:space="preserve">
          <source>This function returns the visibility status of frame &lt;var&gt;frame&lt;/var&gt;. The value is &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; is visible, &lt;code&gt;nil&lt;/code&gt; if it is invisible, and &lt;code&gt;icon&lt;/code&gt; if it is iconified.</source>
          <target state="translated">이 함수는 프레임 &lt;var&gt;frame&lt;/var&gt; 의 가시성 상태를 반환합니다 . 값은 &lt;code&gt;t&lt;/code&gt; 경우, &lt;var&gt;frame&lt;/var&gt; , 표시 &lt;code&gt;nil&lt;/code&gt; 가 보이지 않는 경우와 &lt;code&gt;icon&lt;/code&gt; 이 아이콘 화되어있는 경우.</target>
        </trans-unit>
        <trans-unit id="2129c2bfd0bfc38492f31aab67eef0fa79465208" translate="yes" xml:space="preserve">
          <source>This function returns the visual class for the screen. The value is one of the symbols &lt;code&gt;static-gray&lt;/code&gt; (a limited, unchangeable number of grays), &lt;code&gt;gray-scale&lt;/code&gt; (a full range of grays), &lt;code&gt;static-color&lt;/code&gt; (a limited, unchangeable number of colors), &lt;code&gt;pseudo-color&lt;/code&gt; (a limited number of colors), &lt;code&gt;true-color&lt;/code&gt; (a full range of colors), and &lt;code&gt;direct-color&lt;/code&gt; (a full range of colors).</source>
          <target state="translated">이 함수는 화면의 시각적 클래스를 반환합니다. 값은 &lt;code&gt;static-gray&lt;/code&gt; (제한되고 변경할 수없는 회색 수), &lt;code&gt;gray-scale&lt;/code&gt; (전체 회색 범위), &lt;code&gt;static-color&lt;/code&gt; (제한되고 변경할 수없는 색상 수), &lt;code&gt;pseudo-color&lt;/code&gt; (제한된 색상 수), &lt;code&gt;true-color&lt;/code&gt; (전체 색상 범위) 및 &lt;code&gt;direct-color&lt;/code&gt; (전체 색상 범위).</target>
        </trans-unit>
        <trans-unit id="7bf8fcbc9cc0d7cbbe960444ab1ba60cf298f72e" translate="yes" xml:space="preserve">
          <source>This function returns the width in columns of the character &lt;var&gt;char&lt;/var&gt;, if it were displayed in the current buffer (i.e., taking into account the buffer&amp;rsquo;s display table, if any; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;). The width of a tab character is usually &lt;code&gt;tab-width&lt;/code&gt; (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;).</source>
          <target state="translated">이 기능은 문자의 열 폭을 반환 &lt;var&gt;char&lt;/var&gt; (; 참조 즉, 계정에 버퍼의 디스플레이 테이블을 가지고있는 경우가 현재 버퍼에 표시 한 경우, &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;디스플레이 테이블&lt;/a&gt; ). 탭 문자의 너비는 일반적으로 &lt;code&gt;tab-width&lt;/code&gt; ( &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;일반 표시&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b179e9f08e5080729738b01a0f996158e17cd03e" translate="yes" xml:space="preserve">
          <source>This function returns the width in columns of the string &lt;var&gt;string&lt;/var&gt;, if it were displayed in the current buffer and the selected window.</source>
          <target state="translated">이 함수는 현재 버퍼와 선택한 창에 표시된 경우 string &lt;var&gt;string&lt;/var&gt; 의 열로 너비를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1142d5ef359853a5707ca8cc82ffea17a21a4f67" translate="yes" xml:space="preserve">
          <source>This function returns the width in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s vertical scrollbar.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 세로 스크롤 막대 의 너비를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2013a42f7bb928380dac0141954c409c7fa0072b" translate="yes" xml:space="preserve">
          <source>This function returns the width of the left and right margins of &lt;var&gt;window&lt;/var&gt; as a cons cell of the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;right&lt;/var&gt;)&lt;/code&gt;. If one of the two marginal areas does not exist, its width is returned as &lt;code&gt;nil&lt;/code&gt;; if neither of the two margins exist, the function returns &lt;code&gt;(nil)&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 왼쪽 및 오른쪽 여백 너비를 형식 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;right&lt;/var&gt;)&lt;/code&gt; 의 단점 셀로 반환합니다 . 두 주변 영역 중 하나가 존재하지 않으면 너비가 &lt;code&gt;nil&lt;/code&gt; 로 반환됩니다 . 두 여백이 모두 존재하지 않으면 함수는 &lt;code&gt;(nil)&lt;/code&gt; 을 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d0907d637cfb28a01d5841278d9e6427c7acc3ea" translate="yes" xml:space="preserve">
          <source>This function returns the width of the screen in millimeters, or &lt;code&gt;nil&lt;/code&gt; if Emacs cannot get that information.</source>
          <target state="translated">이 함수는 화면의 너비를 밀리미터 단위로 반환하거나 Emacs가 해당 정보를 얻을 수없는 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3306e398def2a60c093691413e06937f50a33f5f" translate="yes" xml:space="preserve">
          <source>This function returns the width of the screen in pixels. On a character terminal, it gives the width in characters.</source>
          <target state="translated">이 함수는 화면의 너비를 픽셀 단위로 반환합니다. 문자 터미널에서는 문자 너비를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0dd338d49309a6c82003ef50ca101781abcd92b8" translate="yes" xml:space="preserve">
          <source>This function returns the width of vertical scroll bars of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 의 세로 스크롤 막대 너비를 픽셀 단위로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2a84448916a239459fa1a5f8802453916c5c7328" translate="yes" xml:space="preserve">
          <source>This function returns the width of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 너비를 픽셀 단위로 반환합니다 . &lt;var&gt;window&lt;/var&gt; 은 유효한 창 이어야하며 기본값은 선택한 창 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9de541ee6587ff17236cfe047c744b909aab7a17" translate="yes" xml:space="preserve">
          <source>This function returns the width used for displaying the line numbers in the selected window. If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is the symbol &lt;code&gt;columns&lt;/code&gt;, the return value is a float number of the frame&amp;rsquo;s canonical columns; if &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or any other non-&lt;code&gt;nil&lt;/code&gt; value, the value is an integer and is measured in pixels. If &lt;var&gt;pixelwise&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the value is the integer number of columns of the font defined for the &lt;code&gt;line-number&lt;/code&gt; face, and doesn&amp;rsquo;t include the 2 columns used to pad the numbers on display. If line numbers are not displayed in the selected window, the value is zero regardless of the value of &lt;var&gt;pixelwise&lt;/var&gt;. Use &lt;code&gt;with-selected-window&lt;/code&gt; (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;) if you need this information about another window.</source>
          <target state="translated">이 함수는 선택한 창에 줄 번호를 표시하는 데 사용되는 너비를 반환합니다. 선택적 인수가 &lt;var&gt;pixelwise&lt;/var&gt; 기호 &lt;code&gt;columns&lt;/code&gt; 경우 반환 값은 프레임 표준 열의 부동 숫자입니다. 만약 &lt;var&gt;pixelwise&lt;/var&gt; 가 있다 &lt;code&gt;t&lt;/code&gt; 또는 다른 비 &lt;code&gt;nil&lt;/code&gt; 값이, 값이 정수 화소 단위로 측정된다. 경우 &lt;var&gt;pixelwise&lt;/var&gt; 가 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 값은 정의 된 폰트 열 정수이다 &lt;code&gt;line-number&lt;/code&gt; 얼굴 및 숫자 패드 표시에 사용되는 2 열을 포함하지 않는다. 선택한 창에 줄 번호가 표시되지 않으면 &lt;var&gt;pixelwise&lt;/var&gt; 값에 관계없이 값은 0입니다.. 사용 &lt;code&gt;with-selected-window&lt;/code&gt; (참조 &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;윈도우를 선택&lt;/a&gt; 하면 다른 창에 대한 정보를 필요로하는 경우).</target>
        </trans-unit>
        <trans-unit id="8b1470ff1170f7e314656753917758e7d8a18fb2" translate="yes" xml:space="preserve">
          <source>This function returns the width, in columns, of the body of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window; otherwise it must be a live window.</source>
          <target state="translated">이 함수는 window &lt;var&gt;window&lt;/var&gt; 본문의 너비를 열로 반환합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우에 기본값; 그렇지 않으면 라이브 창이어야합니다.</target>
        </trans-unit>
        <trans-unit id="21f66e4bfbae323395e78a8b0cf8256aab5cb5d0" translate="yes" xml:space="preserve">
          <source>This function returns the window of the currently active minibuffer, or &lt;code&gt;nil&lt;/code&gt; if there is no active minibuffer.</source>
          <target state="translated">이 함수는 현재 활성화 된 미니 버퍼의 창을 반환하거나 활성화 된 미니 버퍼가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a60231c1877eb302888f245f7b22383ebfcec0e9" translate="yes" xml:space="preserve">
          <source>This function returns the window on &lt;var&gt;frame&lt;/var&gt; that is selected within that frame. &lt;var&gt;frame&lt;/var&gt; should be a live frame; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">이 함수는 해당 프레임 내에서 선택된 &lt;var&gt;frame&lt;/var&gt; 의 창을 반환합니다 . &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임 이어야합니다. 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본값은 선택한 프레임입니다.</target>
        </trans-unit>
        <trans-unit id="6a661210e2a61073e2823333889f5484457f844a" translate="yes" xml:space="preserve">
          <source>This function returns the window that was selected just before the minibuffer window was selected. If the selected window is not a minibuffer window, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 미니 버퍼 창이 선택되기 직전에 선택된 창을 반환합니다. 선택한 창이 미니 버퍼 창이 아닌 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="94d12ad6c5c22c00edb73203d48adbcaadd7b708" translate="yes" xml:space="preserve">
          <source>This function returns the window with the largest area (height times width). The optional argument &lt;var&gt;all-frames&lt;/var&gt; specifies the windows to search, and has the same meaning as in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">이 함수는 가장 큰 영역 (높이 x 너비)을 가진 창을 반환합니다. 선택적 인수 &lt;var&gt;all-frames&lt;/var&gt; 는 검색 할 창을 지정하며 &lt;code&gt;next-window&lt;/code&gt; 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="9fbd3d7f0c06908cdb8522c47e7975e8ca260464" translate="yes" xml:space="preserve">
          <source>This function returns, as a string, the text matched in the last search or match operation. It returns the entire text if &lt;var&gt;count&lt;/var&gt; is zero, or just the portion corresponding to the &lt;var&gt;count&lt;/var&gt;th parenthetical subexpression, if &lt;var&gt;count&lt;/var&gt; is positive.</source>
          <target state="translated">이 함수는 마지막 검색 또는 일치 작업에서 일치 된 텍스트를 문자열로 반환합니다. 경우 전체 텍스트를 반환 &lt;var&gt;count&lt;/var&gt; 0이거나 단지 부분에 대응하는 &lt;var&gt;count&lt;/var&gt; 번째 괄호 표현식, 만약 &lt;var&gt;count&lt;/var&gt; 긍정적이다.</target>
        </trans-unit>
        <trans-unit id="7fd6d52adddbbd5d91f3887b835c21c14b2ea3d6" translate="yes" xml:space="preserve">
          <source>This function reverses the order of the elements of &lt;var&gt;sequence&lt;/var&gt;. Unlike &lt;code&gt;reverse&lt;/code&gt; the original &lt;var&gt;sequence&lt;/var&gt; may be modified.</source>
          <target state="translated">이 함수는 &lt;var&gt;sequence&lt;/var&gt; 요소의 순서를 반대로합니다 . 달리 &lt;code&gt;reverse&lt;/code&gt; 원래 &lt;var&gt;sequence&lt;/var&gt; 변경 될 수있다.</target>
        </trans-unit>
        <trans-unit id="98315ee8a1b9e67ab0ab383791e14c62d8854661" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the nearest integral value, and returns that value as a floating-point number. Rounding a value equidistant between two integers returns the even integer.</source>
          <target state="translated">이 함수는 &lt;var&gt;float&lt;/var&gt; 를 가장 가까운 정수 값으로 반올림하고 해당 값을 부동 소수점 숫자로 반환합니다. 두 정수 사이의 등거리에있는 값을 반올림하면 짝수 정수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="13aa397acbbaec84fbe490588b8ff633ff7ba12d" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the next higher integral value, and returns that value as a floating-point number.</source>
          <target state="translated">이 함수는 &lt;var&gt;float&lt;/var&gt; 를 다음 높은 정수 값으로 반올림 하고 해당 값을 부동 소수점 숫자로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="429cf327bccffa5e35a7f4a691e24f83baaa5ff4" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the next lower integral value, and returns that value as a floating-point number.</source>
          <target state="translated">이 함수는 &lt;var&gt;float&lt;/var&gt; 를 다음으로 낮은 정수 값으로 반올림 하고 해당 값을 부동 소수점 숫자로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f8d16e0c592b9fbe5194a5feb17be76e41734d46" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; towards zero to an integral value, and returns that value as a floating-point number.</source>
          <target state="translated">이 함수는 &lt;var&gt;float&lt;/var&gt; 을 0을 향해 정수 값으로 반올림 하고 해당 값을 부동 소수점 숫자로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da140e5ea89fd629df1abd5959a8a330768dbfd8" translate="yes" xml:space="preserve">
          <source>This function runs &lt;code&gt;byte-compile-file&lt;/code&gt; on files specified on the command line. This function must be used only in a batch execution of Emacs, as it kills Emacs on completion. An error in one file does not prevent processing of subsequent files, but no output file will be generated for it, and the Emacs process will terminate with a nonzero status code.</source>
          <target state="translated">이 함수는 명령 줄에 지정된 &lt;code&gt;byte-compile-file&lt;/code&gt; 에서 바이트 컴파일 파일 을 실행합니다. 이 함수는 완료시 Emacs를 죽이기 때문에 Emacs의 일괄 실행에서만 사용해야합니다. 한 파일의 오류가 후속 파일의 처리를 방해하지는 않지만 이에 대한 출력 파일은 생성되지 않으며 Emacs 프로세스는 0이 아닌 상태 코드로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="a317f0d5d49216f9538a8bf8585f2c937b1a000d" translate="yes" xml:space="preserve">
          <source>This function runs &lt;var&gt;program&lt;/var&gt;, waits for it to finish, and returns its output as a list of strings. Each string in the list holds a single line of text output by the program; the end-of-line characters are stripped from each line. The arguments beyond &lt;var&gt;program&lt;/var&gt;, &lt;var&gt;args&lt;/var&gt;, are strings that specify command-line arguments with which to run the program.</source>
          <target state="translated">이 함수는 &lt;var&gt;program&lt;/var&gt; 을 실행 하고 완료 될 때까지 기다린 다음 출력을 문자열 목록으로 반환합니다. 목록의 각 문자열에는 프로그램이 출력 한 한 줄의 텍스트가 있습니다. 줄 끝 문자는 각 줄에서 제거됩니다. &lt;var&gt;program&lt;/var&gt; , &lt;var&gt;args&lt;/var&gt; 이외의 인수는 프로그램 을 실행할 명령 줄 인수를 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9611efc90955cf251c81a500281c038ed1b75f2c" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling all the hook functions in &lt;var&gt;hook&lt;/var&gt;, passing each one the arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">이 기능은 모든 후크 함수를 호출하여 비정상적인 훅을 실행 &lt;var&gt;hook&lt;/var&gt; 각각에게 인수 전달 &lt;var&gt;args&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="27586fd3faafbdf5c8bd48003a9e03e2e8021db8" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling each hook function in turn, stopping if one of them fails by returning &lt;code&gt;nil&lt;/code&gt;. Each hook function is passed the arguments &lt;var&gt;args&lt;/var&gt;. If this function stops because one of the hook functions fails, it returns &lt;code&gt;nil&lt;/code&gt;; otherwise it returns a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">이 함수는 각 후크 함수를 차례로 호출하여 비정상적인 후크를 실행하고 그중 하나가 실패하면 &lt;code&gt;nil&lt;/code&gt; 을 반환하여 중지합니다 . 각 후크 함수에는 &lt;var&gt;args&lt;/var&gt; 인수가 전달 됩니다. 후크 함수 중 하나가 실패하여이 함수가 중지되면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5bfd164e131ce3c2cc13bf5d4f69f3f2445a2766" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling each hook function, stopping if one of them succeeds by returning a non-&lt;code&gt;nil&lt;/code&gt; value. Each hook function is passed the arguments &lt;var&gt;args&lt;/var&gt;. If this function stops because one of the hook functions returns a non-&lt;code&gt;nil&lt;/code&gt; value, it returns that value; otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 각 후크 함수를 호출하여 비정상 후크를 실행하고, 둘 중 하나가 성공하면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값 을 반환하여 중지 합니다. 각 후크 함수에는 &lt;var&gt;args&lt;/var&gt; 인수가 전달 됩니다. 후크 함수 중 하나가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환하여이 함수가 중지되면 해당 값을 반환합니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6a41f556a3282d76137da7e42fb03282f0f616df" translate="yes" xml:space="preserve">
          <source>This function runs the hook &lt;code&gt;suspend-tty-functions&lt;/code&gt;, passing the terminal object as an argument to each function.</source>
          <target state="translated">이 함수는 후크 &lt;code&gt;suspend-tty-functions&lt;/code&gt; functions를 실행하여 터미널 객체를 각 함수의 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="e5e49602f0470609a81e7e9d4740ac18eee575a2" translate="yes" xml:space="preserve">
          <source>This function saves the contents of the current buffer in its visited file if the buffer has been modified since it was last visited or saved. Otherwise it does nothing.</source>
          <target state="translated">이 함수는 버퍼가 마지막 방문 또는 저장 이후 수정 된 경우 현재 버퍼의 내용을 방문 파일에 저장합니다. 그렇지 않으면 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="598b8df0e195913316dc0f2166e5c95848549cf0" translate="yes" xml:space="preserve">
          <source>This function saves the stretch of text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; on the kill ring (including text properties), but does not delete the text from the buffer. However, if the optional argument &lt;var&gt;region&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function ignores &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, and saves the current region instead. It always returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 킬 링 (텍스트 속성 포함)에서 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 텍스트 스트레치를 저장 하지만 버퍼에서 텍스트를 삭제하지는 않습니다. 그러나 선택적 인수 &lt;var&gt;region&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 함수는 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 를 무시 하고 대신 현재 영역을 저장합니다. 항상 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dcb854934d8368b0f9aa4e5fca3fe7ff45373e43" translate="yes" xml:space="preserve">
          <source>This function scans &lt;var&gt;string&lt;/var&gt; for the above special sequences and replaces them by what they stand for, returning the result as a string. This permits display of documentation that refers accurately to the user&amp;rsquo;s own customized key bindings.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 에서 위의 특수 시퀀스를 검색 하고 해당 시퀀스를 나타내는 것으로 대체하여 결과를 문자열로 반환합니다. 이를 통해 사용자 고유의 사용자 정의 키 바인딩을 정확하게 참조하는 문서를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d4207d36c030f700c82c397cf0bf32d1c7fae49" translate="yes" xml:space="preserve">
          <source>This function scans forward &lt;var&gt;count&lt;/var&gt; balanced parenthetical groupings from position &lt;var&gt;from&lt;/var&gt;. It returns the position where the scan stops. If &lt;var&gt;count&lt;/var&gt; is negative, the scan moves backwards.</source>
          <target state="translated">이 함수 는의 위치 &lt;var&gt;from&lt;/var&gt; 순방향 &lt;var&gt;count&lt;/var&gt; 균형 괄호 그룹을 스캔합니다 . 스캔이 중지 된 위치를 반환합니다. 경우 &lt;var&gt;count&lt;/var&gt; 부의 경우, 스캔 이동의 뒤로.</target>
        </trans-unit>
        <trans-unit id="a103b6e868b4eb82f7508c6562eaf551c0deb87c" translate="yes" xml:space="preserve">
          <source>This function scans forward &lt;var&gt;count&lt;/var&gt; sexps from position &lt;var&gt;from&lt;/var&gt;. It returns the position where the scan stops. If &lt;var&gt;count&lt;/var&gt; is negative, the scan moves backwards.</source>
          <target state="translated">이 기능은 전방 스캔 &lt;var&gt;count&lt;/var&gt; 위치로부터 sexps을 &lt;var&gt;from&lt;/var&gt; . 스캔이 중지 된 위치를 반환합니다. 경우 &lt;var&gt;count&lt;/var&gt; 부의 경우, 스캔 이동의 뒤로.</target>
        </trans-unit>
        <trans-unit id="279b055442c1cfbc5a74b09dba8744fa449ee180" translate="yes" xml:space="preserve">
          <source>This function scans the current buffer, calculating screen positions. It scans the buffer forward from position &lt;var&gt;from&lt;/var&gt;, assuming that is at screen coordinates &lt;var&gt;frompos&lt;/var&gt;, to position &lt;var&gt;to&lt;/var&gt; or coordinates &lt;var&gt;topos&lt;/var&gt;, whichever comes first. It returns the ending buffer position and screen coordinates.</source>
          <target state="translated">이 기능은 현재 버퍼를 스캔하여 화면 위치를 계산합니다. 화면 좌표 &lt;var&gt;frompos&lt;/var&gt; , &lt;var&gt;topos&lt;/var&gt; 또는 좌표 topos 중 먼저 오는 위치 &lt;var&gt;to&lt;/var&gt; 있다고 가정하여 from 위치 &lt;var&gt;from&lt;/var&gt; 앞으로 버퍼를 스캔합니다 . 종료 버퍼 위치와 화면 좌표를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="10e3f9c3ca85e09b27b3959dcfd170bd9e5560f7" translate="yes" xml:space="preserve">
          <source>This function scrolls backward by &lt;var&gt;count&lt;/var&gt; lines in the selected window.</source>
          <target state="translated">이 기능 은 선택한 창에서 &lt;var&gt;count&lt;/var&gt; 라인을 기준으로 뒤로 스크롤합니다 .</target>
        </trans-unit>
        <trans-unit id="6c3b4bf99587dfc832aefc4fc3af668df6edbf52" translate="yes" xml:space="preserve">
          <source>This function scrolls forward by &lt;var&gt;count&lt;/var&gt; lines in the selected window.</source>
          <target state="translated">이 기능 은 선택한 창에서 &lt;var&gt;count&lt;/var&gt; 라인 만큼 앞으로 스크롤합니다 .</target>
        </trans-unit>
        <trans-unit id="cf8ed50ed32aa4b9aa839f68e03bfd91d6a12fe8" translate="yes" xml:space="preserve">
          <source>This function scrolls the selected window &lt;var&gt;count&lt;/var&gt; columns to the left (or to the right if &lt;var&gt;count&lt;/var&gt; is negative). The default for &lt;var&gt;count&lt;/var&gt; is the window width, minus 2.</source>
          <target state="translated">이 함수는 선택한 창 &lt;var&gt;count&lt;/var&gt; 열을 왼쪽 (또는 &lt;var&gt;count&lt;/var&gt; 가 음수 인 경우 오른쪽)으로 스크롤합니다 . &lt;var&gt;count&lt;/var&gt; 의 기본값 은 창 너비에서 2를 뺀 값입니다.</target>
        </trans-unit>
        <trans-unit id="2158ced399977ac9880ac70d13283ef7fddc60a9" translate="yes" xml:space="preserve">
          <source>This function scrolls the selected window &lt;var&gt;count&lt;/var&gt; columns to the right (or to the left if &lt;var&gt;count&lt;/var&gt; is negative). The default for &lt;var&gt;count&lt;/var&gt; is the window width, minus 2. Aside from the direction of scrolling, this works just like &lt;code&gt;scroll-left&lt;/code&gt;.</source>
          <target state="translated">이 함수는 선택한 창 &lt;var&gt;count&lt;/var&gt; 열을 오른쪽 (또는 &lt;var&gt;count&lt;/var&gt; 가 음수 인 경우 왼쪽)으로 스크롤합니다 . &lt;var&gt;count&lt;/var&gt; 의 기본값 은 창 너비에서 2를 뺀 값입니다. 스크롤 방향을 제외하면 &lt;code&gt;scroll-left&lt;/code&gt; 처럼 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="dc7d85440a05ce45ae2c4cb19651e110bda5d0f9" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in another window downward &lt;var&gt;count&lt;/var&gt; lines. Negative values of &lt;var&gt;count&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt;, are handled as in &lt;code&gt;scroll-down&lt;/code&gt;. In other respects, it behaves the same way as &lt;code&gt;scroll-other-window&lt;/code&gt; does.</source>
          <target state="translated">이 기능은 다른 창의 텍스트를 아래로 &lt;var&gt;count&lt;/var&gt; 라인 으로 스크롤합니다 . &lt;var&gt;count&lt;/var&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 의 음수 값은 &lt;code&gt;scroll-down&lt;/code&gt; 에서와 같이 처리됩니다 . 다른 측면에서는 &lt;code&gt;scroll-other-window&lt;/code&gt; 와 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="67e6b35f1c11b8ecd41d9f3faa3d46c904856584" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in another window upward &lt;var&gt;count&lt;/var&gt; lines. Negative values of &lt;var&gt;count&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt;, are handled as in &lt;code&gt;scroll-up&lt;/code&gt;.</source>
          <target state="translated">이 기능은 다른 창 위쪽에있는 텍스트 스크롤 &lt;var&gt;count&lt;/var&gt; 라인. &lt;var&gt;count&lt;/var&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 의 음수 값은 &lt;code&gt;scroll-up&lt;/code&gt; 에서와 같이 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd207780f03f7286b628f2fbe94da4d778ded320" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in the selected window so that point is displayed at a specified vertical position within the window. It does not move point with respect to the text.</source>
          <target state="translated">이 기능은 선택한 창의 텍스트를 스크롤하여 창 내에서 지정된 수직 위치에 포인트가 표시되도록합니다. 텍스트를 기준으로 포인트를 이동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d80045b64d9461a2fe9b2780d43c9db12ed1f48" translate="yes" xml:space="preserve">
          <source>This function searches &lt;var&gt;alist&lt;/var&gt; for a match for &lt;var&gt;key&lt;/var&gt;. For each element of &lt;var&gt;alist&lt;/var&gt;, it compares the element (if it is an atom) or the element&amp;rsquo;s &lt;small&gt;CAR&lt;/small&gt; (if it is a cons) against &lt;var&gt;key&lt;/var&gt;, by calling &lt;var&gt;test&lt;/var&gt; with two arguments: the element or its &lt;small&gt;CAR&lt;/small&gt;, and &lt;var&gt;key&lt;/var&gt;. The arguments are passed in that order so that you can get useful results using &lt;code&gt;string-match&lt;/code&gt; with an alist that contains regular expressions (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;). If &lt;var&gt;test&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;equal&lt;/code&gt; is used for comparison.</source>
          <target state="translated">이 기능은 검색 &lt;var&gt;alist&lt;/var&gt; 에 대한 일치하는 &lt;var&gt;key&lt;/var&gt; . 의 각 요소 &lt;var&gt;alist&lt;/var&gt; 또는 요소의 (가 원자 인 경우), 상기 원소를 비교 &lt;small&gt;차&lt;/small&gt; 에 대해 (그것이 단점 인 경우) &lt;var&gt;key&lt;/var&gt; 호출하여, &lt;var&gt;test&lt;/var&gt; 두 인자를 : 요소 또는 &lt;small&gt;CAR&lt;/small&gt; 및 &lt;var&gt;key&lt;/var&gt; . 인수는 순서대로 전달되므로 정규 표현식이 포함 된 목록과 &lt;code&gt;string-match&lt;/code&gt; 를 사용하여 유용한 결과를 얻을 수 있습니다 ( &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp 검색&lt;/a&gt; 참조 ). 경우 &lt;var&gt;test&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;equal&lt;/code&gt; 비교를 위해 사용된다.</target>
        </trans-unit>
        <trans-unit id="86ef95c55274561c315ba8350ecf1307039e6865" translate="yes" xml:space="preserve">
          <source>This function searches backward from point for &lt;var&gt;string&lt;/var&gt;. It is like &lt;code&gt;search-forward&lt;/code&gt;, except that it searches backwards rather than forwards. Backward searches leave point at the beginning of the match.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 대해 지점에서 뒤로 검색 합니다 . &lt;code&gt;search-forward&lt;/code&gt; 아니라 뒤로 검색한다는 점을 제외하면 앞으로 검색 과 유사 합니다. 역방향 검색은 경기 시작 지점에서 출발합니다.</target>
        </trans-unit>
        <trans-unit id="2589ceacba5232bdcc8be99c7f33893e15161b15" translate="yes" xml:space="preserve">
          <source>This function searches backward from point for a word match to &lt;var&gt;string&lt;/var&gt;. This function is just like &lt;code&gt;word-search-forward&lt;/code&gt; except that it searches backward and normally leaves point at the beginning of the match.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 과 일치하는 단어를 지점에서 뒤로 검색 합니다 . 이 함수는 뒤로 검색하고 일반적으로 일치 시작 부분에 지점을 남긴다는 점을 제외하면 &lt;code&gt;word-search-forward&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="15a62f00e0ffa8cad8901aa2d8bd87f075935f4a" translate="yes" xml:space="preserve">
          <source>This function searches backward in the current buffer for a string of text that is matched by the regular expression &lt;var&gt;regexp&lt;/var&gt;, leaving point at the beginning of the first text found.</source>
          <target state="translated">이 함수는 정규식 &lt;var&gt;regexp&lt;/var&gt; 와 일치하는 텍스트 문자열을 현재 버퍼에서 역방향으로 검색 하여 찾은 첫 번째 텍스트의 시작 부분에 point를 둡니다.</target>
        </trans-unit>
        <trans-unit id="fe406801dc8596f717b941d13936a5095afdff96" translate="yes" xml:space="preserve">
          <source>This function searches for a file whose name is &lt;var&gt;filename&lt;/var&gt; in a list of directories given by &lt;var&gt;path&lt;/var&gt;, trying the suffixes in &lt;var&gt;suffixes&lt;/var&gt;. If it finds such a file, it returns the file&amp;rsquo;s absolute file name (see &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Relative File Names&lt;/a&gt;); otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이름 인 파일이 기능은 검색 &lt;var&gt;filename&lt;/var&gt; 에 의해 주어진 디렉토리 목록에서 &lt;var&gt;path&lt;/var&gt; 에 접미사를 시도, &lt;var&gt;suffixes&lt;/var&gt; . 그러한 파일을 찾으면 파일의 절대 파일 이름을 반환합니다 ( &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;상대 파일 이름&lt;/a&gt; 참조 ). 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4c0baa20ddc38b60f9dcb504c4990926f07c67d9" translate="yes" xml:space="preserve">
          <source>This function searches for the executable file of the named &lt;var&gt;program&lt;/var&gt; and returns the absolute file name of the executable, including its file-name extensions, if any. It returns &lt;code&gt;nil&lt;/code&gt; if the file is not found. The function searches in all the directories in &lt;code&gt;exec-path&lt;/code&gt;, and tries all the file-name extensions in &lt;code&gt;exec-suffixes&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;).</source>
          <target state="translated">이 함수는 명명 된 &lt;var&gt;program&lt;/var&gt; 의 실행 파일을 검색 하고 파일 이름 확장명 (있는 경우)을 포함하여 실행 파일의 절대 파일 이름을 반환합니다. 파일을 찾을 수 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 이 함수는 &lt;code&gt;exec-path&lt;/code&gt; 의 모든 디렉토리를 검색하고 &lt;code&gt;exec-suffixes&lt;/code&gt; 의 모든 파일 이름 확장자를 시도합니다 ( &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;하위 프로세스 생성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="21e3a40a381cff1497414ae83056601f63bbb85c" translate="yes" xml:space="preserve">
          <source>This function searches forward from point for a word match for &lt;var&gt;string&lt;/var&gt;. If it finds a match, it sets point to the end of the match found, and returns the new value of point.</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 과 일치하는 단어를 지점에서 앞으로 검색 합니다 . 일치하는 항목을 찾으면 찾은 일치 항목의 끝으로 포인트를 설정하고 포인트의 새 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="86ff0ead1b6cedd956de2d5159fdc8de7f5802b1" translate="yes" xml:space="preserve">
          <source>This function searches forward from point for an exact match for &lt;var&gt;string&lt;/var&gt;. If successful, it sets point to the end of the occurrence found, and returns the new value of point. If no match is found, the value and side effects depend on &lt;var&gt;noerror&lt;/var&gt; (see below).</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 과 정확히 일치하는 지점에서 앞으로 검색 합니다 . 성공하면 발견 된 발생의 끝으로 포인트를 설정하고 포인트의 새 값을 리턴합니다. 일치하는 항목이 없으면 값과 부작용은 &lt;var&gt;noerror&lt;/var&gt; 에 따라 달라집니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="0f5ff776ab59c65f2d5955b64ad2456860e06c46" translate="yes" xml:space="preserve">
          <source>This function searches forward in the current buffer for a string of text that is matched by the regular expression &lt;var&gt;regexp&lt;/var&gt;. The function skips over any amount of text that is not matched by &lt;var&gt;regexp&lt;/var&gt;, and leaves point at the end of the first match found. It returns the new value of point.</source>
          <target state="translated">이 함수는 정규식 &lt;var&gt;regexp&lt;/var&gt; 와 일치하는 텍스트 문자열을 현재 버퍼에서 앞으로 검색합니다 . 이 함수는 &lt;var&gt;regexp&lt;/var&gt; 와 일치하지 않는 모든 양의 텍스트를 건너 뛰고 발견 된 첫 번째 일치의 끝 지점을 남깁니다. 포인트의 새로운 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d9bf99d5cdf805630c56fd316b30678b5c2c7e3" translate="yes" xml:space="preserve">
          <source>This function selects &lt;var&gt;frame&lt;/var&gt;, raises it (should it happen to be obscured by other frames) and tries to give it the window system&amp;rsquo;s focus. On a text terminal, the next redisplay displays the new frame on the entire terminal screen. The optional argument &lt;var&gt;norecord&lt;/var&gt; has the same meaning as for &lt;code&gt;select-frame&lt;/code&gt; (see below). The return value of this function is not significant.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 을 선택 하고 올리며 (다른 프레임에 의해 가려진 경우) 윈도우 시스템의 포커스를 제공하려고합니다. 텍스트 터미널에서 다음에 다시 표시하면 전체 터미널 화면에 새 프레임이 표시됩니다. 선택적 인수 &lt;var&gt;norecord&lt;/var&gt; 는 &lt;code&gt;select-frame&lt;/code&gt; 과 동일한 의미를 갖습니다 (아래 참조). 이 함수의 반환 값은 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b93cf30745c70d3b36cb3b5a0f92d3c8e43861a" translate="yes" xml:space="preserve">
          <source>This function selects a coding system for encoding specified text, asking the user to choose if necessary. Normally the specified text is the text in the current buffer between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;. If &lt;var&gt;from&lt;/var&gt; is a string, the string specifies the text to encode, and &lt;var&gt;to&lt;/var&gt; is ignored.</source>
          <target state="translated">이 기능은 지정된 텍스트를 인코딩하기위한 코딩 시스템을 선택하고 필요한 경우 사용자에게 선택하도록 요청합니다. 일반적으로 지정된 텍스트는 &lt;var&gt;from&lt;/var&gt; 과 &lt;var&gt;to&lt;/var&gt; 사이의 현재 버퍼에있는 텍스트입니다 . 경우 &lt;var&gt;from&lt;/var&gt; 문자열은, 문자열 인코딩에 텍스트를 지정하고, &lt;var&gt;to&lt;/var&gt; 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2ba4a9b3162c044926007835d1d4beeb3a4aa5dd" translate="yes" xml:space="preserve">
          <source>This function selects a field&amp;rsquo;s data from the nested alist &lt;var&gt;struct&lt;/var&gt;. Usually &lt;var&gt;struct&lt;/var&gt; was returned by &lt;code&gt;bindat-unpack&lt;/code&gt;. If &lt;var&gt;name&lt;/var&gt; corresponds to just one argument, that means to extract a top-level field value. Multiple &lt;var&gt;name&lt;/var&gt; arguments specify repeated lookup of sub-structures. An integer name acts as an array index.</source>
          <target state="translated">이 함수는 중첩 된 alist &lt;var&gt;struct&lt;/var&gt; 에서 필드의 데이터를 선택합니다 . 일반적으로 &lt;var&gt;struct&lt;/var&gt; 는 &lt;code&gt;bindat-unpack&lt;/code&gt; 에 의해 반환되었습니다 . &lt;var&gt;name&lt;/var&gt; 이 하나의 인수에 해당하는 경우 이는 최상위 필드 값을 추출하는 것을 의미합니다. 여러 &lt;var&gt;name&lt;/var&gt; 인수는 하위 구조의 반복 조회를 지정합니다. 정수 이름은 배열 인덱스 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="854faeed04dfb1786422e9a9d79df43884a5a6fc" translate="yes" xml:space="preserve">
          <source>This function selects a live window, one &lt;var&gt;count&lt;/var&gt; places from the selected window in the cyclic ordering of windows. If &lt;var&gt;count&lt;/var&gt; is a positive number, it skips &lt;var&gt;count&lt;/var&gt; windows forwards; if &lt;var&gt;count&lt;/var&gt; is negative, it skips -&lt;var&gt;count&lt;/var&gt; windows backwards; if &lt;var&gt;count&lt;/var&gt; is zero, that simply re-selects the selected window. When called interactively, &lt;var&gt;count&lt;/var&gt; is the numeric prefix argument.</source>
          <target state="translated">이 기능은 라이브 윈도우를 선택하고, 윈도우의 주기적 순서에서 선택된 윈도우에서 한 &lt;var&gt;count&lt;/var&gt; 위치합니다. 경우 &lt;var&gt;count&lt;/var&gt; 양수, 그것은 생략 &lt;var&gt;count&lt;/var&gt; 앞으로 창을; 경우 &lt;var&gt;count&lt;/var&gt; 부의 경우, 그것은 생략 - &lt;var&gt;count&lt;/var&gt; 뒤쪽 창문; 만약 &lt;var&gt;count&lt;/var&gt; 영이라고 단순히 재 선택하는 선택 창. 대화식으로 호출 할 때 &lt;var&gt;count&lt;/var&gt; 는 숫자 접두사 인수입니다.</target>
        </trans-unit>
        <trans-unit id="d87e4356db00e03d8be4110fd77b6382a7fb5f7b" translate="yes" xml:space="preserve">
          <source>This function selects and sets the major mode that is appropriate for the current buffer. It bases its decision (in order of precedence) on the &amp;lsquo;</source>
          <target state="translated">이 기능은 현재 버퍼에 적합한 주요 모드를 선택하고 설정합니다. (우선 순위에 따라) '</target>
        </trans-unit>
        <trans-unit id="ca8b6c7abd38e5ed34ff834123c348a7d34d20f0" translate="yes" xml:space="preserve">
          <source>This function selects frame &lt;var&gt;frame&lt;/var&gt;, temporarily disregarding the focus of the X server if any. The selection of &lt;var&gt;frame&lt;/var&gt; lasts until the next time the user does something to select a different frame, or until the next time this function is called. (If you are using a window system, the previously selected frame may be restored as the selected frame after return to the command loop, because it still may have the window system&amp;rsquo;s input focus.)</source>
          <target state="translated">이 기능은 프레임 &lt;var&gt;frame&lt;/var&gt; 선택 하고 X 서버의 초점이있는 경우 일시적으로 무시합니다. &lt;var&gt;frame&lt;/var&gt; 선택은 다음에 사용자가 다른 프레임을 선택하기 위해 무언가를 할 때까지 또는 다음에이 함수가 호출 될 때까지 지속됩니다. (윈도우 시스템을 사용하는 경우, 이전에 선택한 프레임은 여전히 ​​윈도우 시스템의 입력 포커스가있을 수 있으므로 명령 루프로 돌아간 후 선택한 프레임으로 복원 될 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="e7051d9388a8372a7ca13c2c2aecd882b2584b86" translate="yes" xml:space="preserve">
          <source>This function sends &lt;var&gt;process&lt;/var&gt; the contents of &lt;var&gt;string&lt;/var&gt; as standard input. It returns &lt;code&gt;nil&lt;/code&gt;. For example, to make a Shell buffer list files:</source>
          <target state="translated">이 함수는 &lt;var&gt;string&lt;/var&gt; 의 내용을 표준 입력으로 &lt;var&gt;process&lt;/var&gt; 합니다 . &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 예를 들어, 쉘 버퍼 목록 파일을 만들려면 :</target>
        </trans-unit>
        <trans-unit id="729e89000884992a96c8546849feddc47a86dd78" translate="yes" xml:space="preserve">
          <source>This function sends &lt;var&gt;string&lt;/var&gt; to &lt;var&gt;terminal&lt;/var&gt; without alteration. Control characters in &lt;var&gt;string&lt;/var&gt; have terminal-dependent effects. (If you need to display non-ASCII text on the terminal, encode it using one of the functions described in &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;.) This function operates only on text terminals. &lt;var&gt;terminal&lt;/var&gt; may be a terminal object, a frame, or &lt;code&gt;nil&lt;/code&gt; for the selected frame&amp;rsquo;s terminal. In batch mode, &lt;var&gt;string&lt;/var&gt; is sent to &lt;code&gt;stdout&lt;/code&gt; when &lt;var&gt;terminal&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 함수는 변경없이 &lt;var&gt;string&lt;/var&gt; 을 &lt;var&gt;terminal&lt;/var&gt; 보냅니다 . &lt;var&gt;string&lt;/var&gt; 제어 문자 는 터미널 종속적 인 효과를 갖습니다. (단말기에 비 ASCII 텍스트를 표시해야하는 경우 &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;명시 적 인코딩에&lt;/a&gt; 설명 된 기능 중 하나를 사용하여 인코딩하십시오 .)이 기능은 텍스트 단말기에서만 작동합니다. &lt;var&gt;terminal&lt;/var&gt; 은 터미널 객체, 프레임 또는 선택된 프레임의 터미널에 대한 &lt;code&gt;nil&lt;/code&gt; 일 수 있습니다 . 배치 모드에서 &lt;var&gt;terminal&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 일 때 &lt;var&gt;string&lt;/var&gt; 이 &lt;code&gt;stdout&lt;/code&gt; 으로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="931b025fd308ae043ad515b68ea59de28c73eb02" translate="yes" xml:space="preserve">
          <source>This function sends a notification to the desktop via D-Bus, consisting of the parameters specified by the &lt;var&gt;params&lt;/var&gt; arguments. These arguments should consist of alternating keyword and value pairs. The supported keywords and values are as follows:</source>
          <target state="translated">이 함수는 &lt;var&gt;params&lt;/var&gt; 인수로 지정된 매개 변수로 구성된 D-Bus를 통해 데스크탑에 알림을 보냅니다 . 이러한 인수는 대체 키워드 및 값 쌍으로 구성되어야합니다. 지원되는 키워드 및 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3e7bc510b1d9657207dfba79f655692f0913950a" translate="yes" xml:space="preserve">
          <source>This function sends a signal to process &lt;var&gt;process&lt;/var&gt;. The argument &lt;var&gt;signal&lt;/var&gt; specifies which signal to send; it should be an integer, or a symbol whose name is a signal.</source>
          <target state="translated">이 함수는 프로세스 &lt;var&gt;process&lt;/var&gt; 신호를 보냅니다 . 인자 &lt;var&gt;signal&lt;/var&gt; 는 보낼 신호를 지정합니다. 정수 또는 이름이 신호 인 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="61f1dd6544deb530ab113d36a1201d765d7c9621" translate="yes" xml:space="preserve">
          <source>This function sends a transaction to queue &lt;var&gt;queue&lt;/var&gt;. Specifying the queue has the effect of specifying the subprocess to talk to.</source>
          <target state="translated">이 함수는 대기열 &lt;var&gt;queue&lt;/var&gt; 트랜잭션을 보냅니다 . 큐를 지정하면 대화 할 하위 프로세스를 지정하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9bfc477f6919c4dd54ed20f09c99e1bd4714c75" translate="yes" xml:space="preserve">
          <source>This function sends the signal &lt;code&gt;SIGQUIT&lt;/code&gt; to the process &lt;var&gt;process&lt;/var&gt;. This signal is the one sent by the quit character (usually</source>
          <target state="translated">이 함수는 &lt;code&gt;SIGQUIT&lt;/code&gt; 신호 를 프로세스 &lt;var&gt;process&lt;/var&gt; 로 보냅니다 . 이 신호는 종료 문자 (일반적으로</target>
        </trans-unit>
        <trans-unit id="57abe80a4e9637c06fa334bde358806a416d5f6e" translate="yes" xml:space="preserve">
          <source>This function sends the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; as standard input to a process running &lt;var&gt;program&lt;/var&gt;. It deletes the text sent if &lt;var&gt;delete&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; this is useful when &lt;var&gt;destination&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, to insert the output in the current buffer in place of the input.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 텍스트를 &lt;var&gt;program&lt;/var&gt; 실행하는 프로세스에 표준 입력으로 보냅니다 . &lt;var&gt;delete&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 보낸 텍스트를 삭제합니다 . 이것은 &lt;var&gt;destination&lt;/var&gt; 이 &lt;code&gt;t&lt;/code&gt; 일 때 유용 하며, 입력 대신 현재 버퍼에 출력을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="ba8174a686bdaa317578e096c8a85e26305df50e" translate="yes" xml:space="preserve">
          <source>This function sends the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; as standard input to an inferior shell running &lt;var&gt;command&lt;/var&gt;. This function is similar than &lt;code&gt;call-process-region&lt;/code&gt;, with process being a shell. The arguments &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt; and the return value are like in &lt;code&gt;call-process-region&lt;/code&gt;. Note that this function doesn&amp;rsquo;t accept additional arguments.</source>
          <target state="translated">이 함수는 열등한 셸 실행 &lt;var&gt;command&lt;/var&gt; 에 대한 표준 입력으로 &lt;var&gt;start&lt;/var&gt; 부터 &lt;var&gt;end&lt;/var&gt; 텍스트를 보냅니다 . 이 함수는 &lt;code&gt;call-process-region&lt;/code&gt; 과 유사 하며 프로세스가 셸입니다. 인수 &lt;code&gt;delete&lt;/code&gt; , &lt;code&gt;destination&lt;/code&gt; 및 반환 값은 &lt;code&gt;call-process-region&lt;/code&gt; 과 같습니다 . 이 함수는 추가 인수를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6d631043267da531eafcdf87917aa51984043a7" translate="yes" xml:space="preserve">
          <source>This function sends the text in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as standard input to &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;start&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 으로 정의 된 영역의 텍스트 를 &lt;var&gt;process&lt;/var&gt; 할 표준 입력으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="c3ff652c9cefcc4cda0cdcd9ca276ae180e78c0b" translate="yes" xml:space="preserve">
          <source>This function separates the elements of &lt;var&gt;sequence&lt;/var&gt; into an alist whose keys are the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;. Keys are compared using &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 기능의 소자 분리 &lt;var&gt;sequence&lt;/var&gt; 가진 키인가의 결과로 alist &lt;var&gt;function&lt;/var&gt; 의 각 요소를 &lt;var&gt;sequence&lt;/var&gt; . 키는 &lt;code&gt;equal&lt;/code&gt; 을 사용하여 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="198c107c1316ee16214b3b5bf1ad21a0282680bb" translate="yes" xml:space="preserve">
          <source>This function sets &lt;code&gt;enable-multibyte-characters&lt;/code&gt; to record which representation is in use. It also adjusts various data in the buffer (including overlays, text properties and markers) so that they cover the same text as they did before.</source>
          <target state="translated">이 함수는 &lt;code&gt;enable-multibyte-characters&lt;/code&gt; 중인 표현을 기록하기 위해 멀티 바이트 문자 활성화를 설정 합니다. 또한 버퍼의 다양한 데이터 (오버레이, 텍스트 속성 및 마커 포함)를 조정하여 이전과 동일한 텍스트를 포함하도록합니다.</target>
        </trans-unit>
        <trans-unit id="38db8d5d0b14e5fcf34e7ad6d7eed9ccaf560ff5" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window state change flag if &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and resets it otherwise. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">이 함수는 &lt;var&gt;arg&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;frame&lt;/var&gt; 의 창 상태 변경 플래그를 설정하고 그렇지 않으면 재설정합니다. &lt;var&gt;frame&lt;/var&gt; 은 라이브 프레임 이어야하며 기본값은 선택한 프레임 이어야합니다.</target>
        </trans-unit>
        <trans-unit id="185316fe3bdf798d473ccd31e762ce5375b8c920" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;property&lt;/var&gt; of &lt;var&gt;function&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; should be a symbol. This function is preferred to calling &lt;code&gt;put&lt;/code&gt; for setting properties of a function, because it will allow us some day to implement remapping of old properties to new ones.</source>
          <target state="translated">이 함수는 설정 &lt;var&gt;property&lt;/var&gt; 의 &lt;var&gt;function&lt;/var&gt; 에 &lt;var&gt;value&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt; 는 기호 여야합니다. 이 함수는 함수의 속성을 설정하기 위해 &lt;code&gt;put&lt;/code&gt; 을 호출하는 것 보다 선호됩니다. 언젠가는 이전 속성을 새 속성으로 다시 매핑 할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ae2697c8f107bbd3d1e782f909d8f40d74488d80" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list to &lt;var&gt;plist&lt;/var&gt;. Normally, &lt;var&gt;plist&lt;/var&gt; should be a well-formed property list, but this is not enforced. The return value is &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 의 속성 목록을 &lt;var&gt;plist&lt;/var&gt; 로 설정 합니다. 일반적으로 &lt;var&gt;plist&lt;/var&gt; 는 올바른 형식의 속성 목록이어야하지만 적용되지 않습니다. 반환 값은 &lt;var&gt;plist&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04c98837dcbee57bf0edcdd44b78b672d2aea93c" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s previous buffers to the value of &lt;var&gt;prev-buffers&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The argument &lt;var&gt;prev-buffers&lt;/var&gt; should be a list of the same form as that returned by &lt;code&gt;window-prev-buffers&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 이전 버퍼를 &lt;var&gt;prev-buffers&lt;/var&gt; 값으로 설정합니다 . 인수 &lt;var&gt;window&lt;/var&gt; 은 라이브 창 이어야하며 기본값은 선택한 창입니다. &lt;var&gt;prev-buffers&lt;/var&gt; 인수 는 &lt;code&gt;window-prev-buffers&lt;/code&gt; 가 반환 한 것과 동일한 형식의 목록이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="96dc71440be002ad9dfdbcc602de3ea5e6a10b8b" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s value of &lt;var&gt;parameter&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt; and returns &lt;var&gt;value&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 &lt;var&gt;parameter&lt;/var&gt; 값을 값으로 설정 하고 &lt;var&gt;value&lt;/var&gt; 을 반환 &lt;var&gt;value&lt;/var&gt; . &lt;var&gt;window&lt;/var&gt; 기본값 은 선택한 창입니다.</target>
        </trans-unit>
        <trans-unit id="95364a7df69f3c257f53ef31901ba13af2d26bbb" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s vertical scroll position to &lt;var&gt;lines&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used. The argument &lt;var&gt;lines&lt;/var&gt; should be zero or positive; if not, it is taken as zero.</source>
          <target state="translated">이 기능은 &lt;var&gt;window&lt;/var&gt; 수직 스크롤 위치를 &lt;var&gt;lines&lt;/var&gt; 합니다. 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우가 사용됩니다. 인수 &lt;var&gt;lines&lt;/var&gt; 은 0 또는 양수 여야합니다. 그렇지 않은 경우 0으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7b4a0fad7bd34a59f597431d205b7d12e946aa28" translate="yes" xml:space="preserve">
          <source>This function sets a window-system selection. It takes two arguments: a selection type &lt;var&gt;type&lt;/var&gt;, and the value to assign to it, &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">이 기능은 윈도우 시스템 선택을 설정합니다. 선택 유형 &lt;var&gt;type&lt;/var&gt; 과 할당 할 값인 &lt;var&gt;data&lt;/var&gt; 의 두 가지 인수가 필요 합니다 .</target>
        </trans-unit>
        <trans-unit id="a455f3607009635f3fcfc2b2aeb99bb7f4951fad" translate="yes" xml:space="preserve">
          <source>This function sets horizontal scrolling of &lt;var&gt;window&lt;/var&gt;. The value of &lt;var&gt;columns&lt;/var&gt; specifies the amount of scrolling, in terms of columns from the left margin (right margin in right-to-left paragraphs). The argument &lt;var&gt;columns&lt;/var&gt; should be zero or positive; if not, it is taken as zero. Fractional values of &lt;var&gt;columns&lt;/var&gt; are not supported at present.</source>
          <target state="translated">이 기능은 &lt;var&gt;window&lt;/var&gt; 가로 스크롤을 설정합니다 . &lt;var&gt;columns&lt;/var&gt; 값은 왼쪽 여백 (오른쪽에서 왼쪽 단락에서 오른쪽 여백)의 열을 기준으로 스크롤 양을 지정합니다. 인수 &lt;var&gt;columns&lt;/var&gt; 은 0 또는 양수 여야합니다. 그렇지 않은 경우 0으로 간주됩니다. 현재 &lt;var&gt;columns&lt;/var&gt; 분수 값은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2691fc741caac070bb7961b94fe98d08a049a90a" translate="yes" xml:space="preserve">
          <source>This function sets one or more attributes of &lt;var&gt;face&lt;/var&gt; for &lt;var&gt;frame&lt;/var&gt;. The attributes specifies in this way override the face spec(s) belonging to &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;frame&lt;/var&gt; 대한 하나 이상의 &lt;var&gt;face&lt;/var&gt; 속성을 설정합니다 . 이런 식으로 지정가 속하는 얼굴 사양 (들)을 무시 속성 &lt;var&gt;face&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6d032676039653f52fabf726805867a29f18005e" translate="yes" xml:space="preserve">
          <source>This function sets or modifies a network option for network process &lt;var&gt;process&lt;/var&gt;. The accepted options and values are as for &lt;code&gt;make-network-process&lt;/code&gt;. If &lt;var&gt;no-error&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt; instead of signaling an error if &lt;var&gt;option&lt;/var&gt; is not a supported option. If the function successfully completes, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">이 기능은 네트워크 프로세스 &lt;var&gt;process&lt;/var&gt; 대한 네트워크 옵션을 설정하거나 수정합니다 . 허용되는 옵션과 값은 &lt;code&gt;make-network-process&lt;/code&gt; 와 같습니다 . &lt;var&gt;no-error&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 이 함수는 &lt;var&gt;option&lt;/var&gt; 이 지원되는 옵션이 아닌 경우 오류를 알리는 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 함수가 성공적으로 완료되면 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a09056770339ed6e3896bc0f8270829f5aed9093" translate="yes" xml:space="preserve">
          <source>This function sets point in the current buffer to the value &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">이 함수는 현재 버퍼의 포인트를 값 &lt;var&gt;position&lt;/var&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="24569c05a9e6a190b75a9b1cf25e78030e614d61" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;em&gt;combination limit&lt;/em&gt; of the window &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;limit&lt;/var&gt;. This value can be retrieved via the function &lt;code&gt;window-combination-limit&lt;/code&gt;. See below for its effects; note that it is only meaningful for internal windows. The &lt;code&gt;split-window&lt;/code&gt; function automatically calls this function, passing it &lt;code&gt;t&lt;/code&gt; as &lt;var&gt;limit&lt;/var&gt;, provided the value of the variable &lt;code&gt;window-combination-limit&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt; when it is called.</source>
          <target state="translated">이 기능은 설정 &lt;em&gt;조합 제한&lt;/em&gt; 윈도우의 &lt;var&gt;window&lt;/var&gt; 에 &lt;var&gt;limit&lt;/var&gt; . 이 값은 &lt;code&gt;window-combination-limit&lt;/code&gt; 함수를 통해 검색 할 수 있습니다 . 그 효과는 아래를 참조하십시오. 내부 창에만 의미가 있습니다. &lt;code&gt;split-window&lt;/code&gt; 함수를 자동 전달이 함수를 호출 &lt;code&gt;t&lt;/code&gt; 를 로 &lt;var&gt;limit&lt;/var&gt; 변수 값 제공된 &lt;code&gt;window-combination-limit&lt;/code&gt; 이고 &lt;code&gt;t&lt;/code&gt; 가 호출 될 때.</target>
        </trans-unit>
        <trans-unit id="9ad1968d81a7be405ee4e8faa839e8d7781a073e" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;em&gt;file mode&lt;/em&gt; (or &lt;em&gt;permissions&lt;/em&gt;) of &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;mode&lt;/var&gt;. This function follows symbolic links.</source>
          <target state="translated">이 함수는 &lt;em&gt;파일 &lt;/em&gt; &lt;var&gt;filename&lt;/var&gt; 의 &lt;em&gt;파일 모드&lt;/em&gt; (또는 &lt;em&gt;권한&lt;/em&gt; ) 를 &lt;var&gt;mode&lt;/var&gt; 로 설정합니다 . 이 함수는 심볼릭 링크를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="894edf2814268e95297fea0090f5c3ee1a19e55b" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;index&lt;/var&gt;th element of &lt;var&gt;array&lt;/var&gt; to be &lt;var&gt;object&lt;/var&gt;. It returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;array&lt;/var&gt; 의 &lt;var&gt;index&lt;/var&gt; 번째 요소를 &lt;var&gt;object&lt;/var&gt; 로 설정 합니다 . &lt;var&gt;object&lt;/var&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="3db3cbcd3a9c0df821c1baa1d992a14e6ae7e4ef" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;prop&lt;/var&gt; property to &lt;var&gt;value&lt;/var&gt; for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">이 함수는 문자열 또는 버퍼 &lt;var&gt;object&lt;/var&gt; 에서 &lt;var&gt;start&lt;/var&gt; 과 &lt;var&gt;end&lt;/var&gt; 사이의 텍스트 &lt;var&gt;value&lt;/var&gt; &lt;var&gt;prop&lt;/var&gt; 속성을 설정 합니다 . 경우 &lt;var&gt;object&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 그것은 현재의 버퍼 기본값.</target>
        </trans-unit>
        <trans-unit id="e8747da81d65b47ec8dc236636dc6894a2448ef8" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;charset&lt;/var&gt; to the given &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;charset&lt;/var&gt; 의 &lt;var&gt;propname&lt;/var&gt; 속성을 주어진 &lt;var&gt;value&lt;/var&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2dc9dbdede25628c36f5c5ffaba6b04adc24fa1c" translate="yes" xml:space="preserve">
          <source>This function sets the Access Control List for &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;acl&lt;/var&gt;. The &lt;var&gt;acl&lt;/var&gt; argument should have the same form returned by the function &lt;code&gt;file-acl&lt;/code&gt;. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 에 대한 액세스 제어 목록 을 &lt;var&gt;acl&lt;/var&gt; 로 설정 합니다. &lt;var&gt;acl&lt;/var&gt; 인수는 함수에 의해 반환 된 같은 형태가 있어야 &lt;code&gt;file-acl&lt;/code&gt; . &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;확장 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6dc2bb322377c867ec980ee6ae90e41feb0b758" translate="yes" xml:space="preserve">
          <source>This function sets the C pointer embedded in the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;value&lt;/var&gt; to &lt;var&gt;ptr&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;value&lt;/var&gt; 로 표현되는 &lt;code&gt;user-ptr&lt;/code&gt; 객체에 포함 된 C 포인터 를 &lt;var&gt;ptr&lt;/var&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c60c34f44a7a27ac4e9c2daa42a523e271c4415c" translate="yes" xml:space="preserve">
          <source>This function sets the Emacs-recognized extended file attributes for &lt;code&gt;filename&lt;/code&gt;. The second argument &lt;var&gt;attribute-alist&lt;/var&gt; should be an alist of the same form returned by &lt;code&gt;file-extended-attributes&lt;/code&gt;. The return value is &lt;code&gt;t&lt;/code&gt; if the attributes are successfully set, otherwise it is &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;filename&lt;/code&gt; 에 대한 Emacs 인식 확장 파일 속성을 설정합니다 . 두 번째 인수 &lt;var&gt;attribute-alist&lt;/var&gt; 는 &lt;code&gt;file-extended-attributes&lt;/code&gt; 가 반환 한 동일한 형식의 목록이어야 합니다 . 속성이 성공적으로 설정되면 반환 값은 &lt;code&gt;t&lt;/code&gt; 이고, 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다. &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;확장 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="76f5b2231c3bd0857bda4500395ec579d7002ebf" translate="yes" xml:space="preserve">
          <source>This function sets the SELinux security context for &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;context&lt;/var&gt;. The &lt;var&gt;context&lt;/var&gt; argument should be a list &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt;, where each element is a string. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">이 기능에 대한 SELinux 보안 컨텍스트 설정 &lt;var&gt;filename&lt;/var&gt; 에 대한 &lt;var&gt;context&lt;/var&gt; . &lt;var&gt;context&lt;/var&gt; 인수 목록되어야한다 &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt; 의 각 요소는 문자열이다. &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;확장 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa3771987747d26afa321f6b694b7946c3677e4e" translate="yes" xml:space="preserve">
          <source>This function sets the access and modification times of &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;time&lt;/var&gt;. The return value is &lt;code&gt;t&lt;/code&gt; if the times are successfully set, otherwise it is &lt;code&gt;nil&lt;/code&gt;. &lt;var&gt;time&lt;/var&gt; defaults to the current time and must be a time value (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">이 함수는 &lt;var&gt;filename&lt;/var&gt; 의 액세스 및 수정 시간 을 &lt;var&gt;time&lt;/var&gt; 으로 설정 합니다. 시간이 성공적으로 설정되면 반환 값은 &lt;code&gt;t&lt;/code&gt; 이고, 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다. &lt;var&gt;time&lt;/var&gt; 기본값은 현재 시간이며 시간 값이어야합니다 ( &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;시간&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="47f2d6313d96f9b0745cdb73f6a8c3da02eb9ed3" translate="yes" xml:space="preserve">
          <source>This function sets the accessible portion of the current buffer to include just the current page. An optional first argument &lt;var&gt;move-count&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to move forward or backward by &lt;var&gt;move-count&lt;/var&gt; pages and then narrow to one page. The variable &lt;code&gt;page-delimiter&lt;/code&gt; specifies where pages start and end (see &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;).</source>
          <target state="translated">이 함수는 현재 페이지 만 포함하도록 현재 버퍼의 액세스 가능한 부분을 설정합니다. 선택적 첫 번째 인수 &lt;var&gt;move-count&lt;/var&gt; non - &lt;code&gt;nil&lt;/code&gt; 은 &lt;var&gt;move-count&lt;/var&gt; 페이지 별로 앞뒤로 이동 한 다음 한 페이지로 좁히는 것을 의미합니다. &lt;code&gt;page-delimiter&lt;/code&gt; 변수 는 페이지가 시작되고 끝나는 위치를 지정합니다 ( &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;표준 정규식&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2e612ca403bca38f0c1bdcfd957110e240fb5565" translate="yes" xml:space="preserve">
          <source>This function sets the accessible portion of the current buffer to start at &lt;var&gt;start&lt;/var&gt; and end at &lt;var&gt;end&lt;/var&gt;. Both arguments should be character positions.</source>
          <target state="translated">이 함수는 현재 버퍼의 액세스 가능한 부분을 시작에서 &lt;var&gt;start&lt;/var&gt; 하고 끝에서 &lt;var&gt;end&lt;/var&gt; 합니다. 두 인수는 모두 문자 위치 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a380ca37b7eadc09d46bf7eca0da28b0c371828e" translate="yes" xml:space="preserve">
          <source>This function sets the base remapping of &lt;var&gt;face&lt;/var&gt; in the current buffer to &lt;var&gt;specs&lt;/var&gt;. If &lt;var&gt;specs&lt;/var&gt; is empty, the default base remapping is restored, similar to calling &lt;code&gt;face-remap-reset-base&lt;/code&gt; (see below); note that this is different from &lt;var&gt;specs&lt;/var&gt; containing a single value &lt;code&gt;nil&lt;/code&gt;, which has the opposite result (the global definition of &lt;var&gt;face&lt;/var&gt; is ignored).</source>
          <target state="translated">이 함수는 현재 버퍼에있는 &lt;var&gt;face&lt;/var&gt; 의 기본 다시 매핑 을 &lt;var&gt;specs&lt;/var&gt; 로 설정 합니다. &lt;var&gt;specs&lt;/var&gt; 가 비어 있으면 &lt;code&gt;face-remap-reset-base&lt;/code&gt; 를 호출하는 것과 유사하게 기본 기본 재 매핑이 복원 됩니다 (아래 참조). 이는 반대 결과를 갖는 단일 값 &lt;code&gt;nil&lt;/code&gt; 을 포함하는 &lt;var&gt;specs&lt;/var&gt; 과 다릅니다 ( &lt;var&gt;face&lt;/var&gt; 의 글로벌 정의 는 무시 됨).</target>
        </trans-unit>
        <trans-unit id="77e8b31efcdb8939a7766a5264d619fc95c0e96e" translate="yes" xml:space="preserve">
          <source>This function sets the base remapping of &lt;var&gt;face&lt;/var&gt; to its default value, which inherits from &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s global definition.</source>
          <target state="translated">이 함수의 맵핑 기본 설정 &lt;var&gt;face&lt;/var&gt; 디폴트 값으로부터 상속에 &lt;var&gt;face&lt;/var&gt; 의 글로벌 정의.</target>
        </trans-unit>
        <trans-unit id="ebb95607e6b50257ccae939ab2c8aa2da4f1c1b5" translate="yes" xml:space="preserve">
          <source>This function sets the binding for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;. (If &lt;var&gt;key&lt;/var&gt; is more than one event long, the change is actually made in another keymap reached from &lt;var&gt;keymap&lt;/var&gt;.) The argument &lt;var&gt;binding&lt;/var&gt; can be any Lisp object, but only certain types are meaningful. (For a list of meaningful types, see &lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Key Lookup&lt;/a&gt;.) The value returned by &lt;code&gt;define-key&lt;/code&gt; is &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;keymap&lt;/var&gt; 의 &lt;var&gt;key&lt;/var&gt; 에 대한 바인딩을 설정합니다 . (경우 &lt;var&gt;key&lt;/var&gt; 하나 개 이상의 이벤트 길이의 변화는 사실에서 도달 다른 키 맵에서 이루어집니다 &lt;var&gt;keymap&lt;/var&gt; 인수.) &lt;var&gt;binding&lt;/var&gt; 어떤 리스프의 객체가 될 수 있지만 특정 유형의 의미가있다. (의미있는 유형 목록은 &lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Key Lookup을&lt;/a&gt; 참조하십시오 .) &lt;code&gt;define-key&lt;/code&gt; 에서 반환 된 값 은 &lt;var&gt;binding&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c5972870ac008dc5ea5e72291038289594f93470" translate="yes" xml:space="preserve">
          <source>This function sets the binding of &lt;var&gt;key&lt;/var&gt; in the current global map to &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">이 기능 세트는 바인딩 &lt;var&gt;key&lt;/var&gt; 에 현재 글로벌 맵에 &lt;var&gt;binding&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a6fac0dc347c58ef12731886abbe64fc8c1af622" translate="yes" xml:space="preserve">
          <source>This function sets the binding of &lt;var&gt;key&lt;/var&gt; in the current local keymap to &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">이 기능 세트의 바인딩 &lt;var&gt;key&lt;/var&gt; 에 현재의 로컬 키 맵에 &lt;var&gt;binding&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="47a09db14b556c9c785678dc6d2f2942700a3fef" translate="yes" xml:space="preserve">
          <source>This function sets the buffer associated with &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the process becomes associated with no buffer.</source>
          <target state="translated">이 기능과 연관된 버퍼 설정 &lt;var&gt;process&lt;/var&gt; 하는 &lt;var&gt;buffer&lt;/var&gt; . 경우 &lt;var&gt;buffer&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , 프로세스는 더 버퍼와 연관된다.</target>
        </trans-unit>
        <trans-unit id="3d10326c95927a931f13440e7844bb6ed76c546a" translate="yes" xml:space="preserve">
          <source>This function sets the buffer major mode, and parses local variables (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;). It is called by &lt;code&gt;find-file-noselect&lt;/code&gt; and by the default revert function (see &lt;a href=&quot;reverting#Reverting&quot;&gt;Reverting&lt;/a&gt;).</source>
          <target state="translated">이 함수는 버퍼 주 모드를 설정하고 지역 변수를 구문 분석합니다 ( &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;자동 주 모드&lt;/a&gt; 참조 ). &lt;code&gt;find-file-noselect&lt;/code&gt; 및 기본 되돌리기 기능에 의해 호출됩니다 ( &lt;a href=&quot;reverting#Reverting&quot;&gt;되돌리기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b24eecc002950857672fd643cb572d1fec097a1e" translate="yes" xml:space="preserve">
          <source>This function sets the contents of register &lt;var&gt;reg&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. A register can be set to any value, but the other register functions expect only certain data types. The return value is &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수는 레지스터 &lt;var&gt;reg&lt;/var&gt; 의 내용 을 &lt;var&gt;value&lt;/var&gt; 로 설정 합니다 . 레지스터는 임의의 값으로 설정할 수 있지만 다른 레지스터 함수는 특정 데이터 유형 만 예상합니다. 반환 값은 &lt;var&gt;value&lt;/var&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7d1db1c8636056dc9c8dcf7fd6b28bf2e658f3d9" translate="yes" xml:space="preserve">
          <source>This function sets the current buffer&amp;rsquo;s mark to &lt;var&gt;position&lt;/var&gt;, and pushes a copy of the previous mark onto &lt;code&gt;mark-ring&lt;/code&gt;. If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the value of point is used.</source>
          <target state="translated">이 함수는 현재 버퍼의 마크를 &lt;var&gt;position&lt;/var&gt; 로 설정하고 이전 마크의 사본을 &lt;code&gt;mark-ring&lt;/code&gt; 푸시합니다 . 경우 &lt;var&gt;position&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , 다음 시점의 값이 사용된다.</target>
        </trans-unit>
        <trans-unit id="c9188f08d4d0de2dc3d968c34756665ced1f3af4" translate="yes" xml:space="preserve">
          <source>This function sets the debug-on-exit flag of the stack frame &lt;var&gt;level&lt;/var&gt; levels down the stack, giving it the value &lt;var&gt;flag&lt;/var&gt;. If &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this will cause the debugger to be entered when that frame later exits. Even a nonlocal exit through that frame will enter the debugger.</source>
          <target state="translated">이 함수는 스택 프레임 &lt;var&gt;level&lt;/var&gt; 의 종료시 디버그 플래그를 스택 아래로 설정하여 값 &lt;var&gt;flag&lt;/var&gt; 제공합니다 . &lt;var&gt;flag&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 나중에 해당 프레임이 종료 될 때 디버거가 입력되도록합니다. 해당 프레임을 통한 로컬이 아닌 출구도 디버거에 들어갑니다.</target>
        </trans-unit>
        <trans-unit id="308e7294f331e155466bb85e91f2747e3d32e79a" translate="yes" xml:space="preserve">
          <source>This function sets the default permissions for new files created by Emacs and its subprocesses. Every file created with Emacs initially has these permissions, or a subset of them (&lt;code&gt;write-region&lt;/code&gt; will not grant execute permissions even if the default file permissions allow execution). On GNU and other POSIX-like systems, the default permissions are given by the bitwise complement of the &amp;lsquo;</source>
          <target state="translated">이 함수는 Emacs와 그 하위 프로세스에 의해 생성 된 새 파일에 대한 기본 권한을 설정합니다. Emacs로 생성 된 모든 파일은 초기에 이러한 권한 또는 일부 권한을 갖습니다 ( 기본 파일 권한이 실행을 허용하더라도 &lt;code&gt;write-region&lt;/code&gt; 은 실행 권한을 부여하지 않습니다). GNU 및 기타 POSIX 유사 시스템에서 기본 권한은 '</target>
        </trans-unit>
        <trans-unit id="3b83873a5445a410d77405199b5187de63fcc6c7" translate="yes" xml:space="preserve">
          <source>This function sets the display table of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;table&lt;/var&gt;. The argument &lt;var&gt;table&lt;/var&gt; should be either a display table or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능의 표시 테이블 설정 &lt;var&gt;window&lt;/var&gt; 에 &lt;var&gt;table&lt;/var&gt; . 인수 &lt;var&gt;table&lt;/var&gt; 은 표시 테이블 또는 &lt;code&gt;nil&lt;/code&gt; 중 하나 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="4a7a7f2249d7d6cd2355d17a2251e2fb4f1f7098" translate="yes" xml:space="preserve">
          <source>This function sets the display-start position of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;position&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer. It returns &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">이 기능의 디스플레이 시작 위치 설정 &lt;var&gt;window&lt;/var&gt; 에 &lt;var&gt;position&lt;/var&gt; 에서 &lt;var&gt;window&lt;/var&gt; 버퍼의. &lt;var&gt;position&lt;/var&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="97ae9459f8d5e9fb33d39a21b359887306326b23" translate="yes" xml:space="preserve">
          <source>This function sets the frame parameter &lt;var&gt;parm&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">이 함수는 프레임 매개 변수 &lt;var&gt;parm&lt;/var&gt; 을 지정된 &lt;var&gt;value&lt;/var&gt; 합니다. 경우 &lt;var&gt;frame&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 선택된 프레임, 기본값.</target>
        </trans-unit>
        <trans-unit id="c97ef40bf03d8f1aea1070300ccec8136c47b4db" translate="yes" xml:space="preserve">
          <source>This function sets the fringe widths of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">이 함수는 윈도우의 프린지 폭을 설정하는 &lt;var&gt;window&lt;/var&gt; . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="83ecc4a6cd4aa994edd5a6447e7a78b8e6ff227f" translate="yes" xml:space="preserve">
          <source>This function sets the insertion type of marker &lt;var&gt;marker&lt;/var&gt; to &lt;var&gt;type&lt;/var&gt;. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, &lt;var&gt;marker&lt;/var&gt; will advance when text is inserted at its position. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;marker&lt;/var&gt; does not advance when text is inserted there.</source>
          <target state="translated">이 함수는 마커의 삽입형 설정 &lt;var&gt;marker&lt;/var&gt; 에 &lt;var&gt;type&lt;/var&gt; . 경우 &lt;var&gt;type&lt;/var&gt; 입니다 &lt;code&gt;t&lt;/code&gt; 는 , &lt;var&gt;marker&lt;/var&gt; 텍스트 위치에 삽입 될 때 진출하게됩니다. 경우 &lt;var&gt;type&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;marker&lt;/var&gt; 텍스트가 삽입 될 때 진행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a6f47655132ae6e464a121fb49b79ed0583df94" translate="yes" xml:space="preserve">
          <source>This function sets the major mode of &lt;var&gt;buffer&lt;/var&gt; to the default value of &lt;code&gt;major-mode&lt;/code&gt;; if that is &lt;code&gt;nil&lt;/code&gt;, it uses the current buffer&amp;rsquo;s major mode (if that is suitable). As an exception, if &lt;var&gt;buffer&lt;/var&gt;&amp;rsquo;s name is</source>
          <target state="translated">이 함수는 &lt;var&gt;buffer&lt;/var&gt; 의 주 모드를 기본 모드의 기본값으로 설정 &lt;code&gt;major-mode&lt;/code&gt; . 이 경우, &lt;code&gt;nil&lt;/code&gt; (즉 적합한 경우), 현재의 버퍼의 주요 모드를 사용한다. 예외적으로 &lt;var&gt;buffer&lt;/var&gt; 의 이름이</target>
        </trans-unit>
        <trans-unit id="e71767525b2252ad6e9d8e738b9dc78da825e49e" translate="yes" xml:space="preserve">
          <source>This function sets the mark to &lt;var&gt;position&lt;/var&gt;, and activates the mark. The old value of the mark is &lt;em&gt;not&lt;/em&gt; pushed onto the mark ring.</source>
          <target state="translated">이 기능은 마크를 &lt;var&gt;position&lt;/var&gt; 설정하고 마크를 활성화합니다. 마크의 이전 값은 마크 링에 밀리지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="589fb91eb0f177f688c981a6a3fbede785b0fea5" translate="yes" xml:space="preserve">
          <source>This function sets the match data from the elements of &lt;var&gt;match-list&lt;/var&gt;, which should be a list that was the value of a previous call to &lt;code&gt;match-data&lt;/code&gt;. (More precisely, anything that has the same format will work.)</source>
          <target state="translated">이 함수는 &lt;var&gt;match-list&lt;/var&gt; 의 요소에서 일치 데이터를 설정하며 , 이는 &lt;code&gt;match-data&lt;/code&gt; 에 대한 이전 호출의 값이었던 목록이어야합니다 . (더 정확하게는 동일한 형식을 가진 모든 것이 작동합니다.)</target>
        </trans-unit>
        <trans-unit id="97eaf47c7114898820304792ea697d536d3b0560" translate="yes" xml:space="preserve">
          <source>This function sets the mode for reading keyboard input. If &lt;var&gt;interrupt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs uses input interrupts. If it is &lt;code&gt;nil&lt;/code&gt;, then it uses &lt;small&gt;CBREAK&lt;/small&gt; mode. The default setting is system-dependent. Some systems always use &lt;small&gt;CBREAK&lt;/small&gt; mode regardless of what is specified.</source>
          <target state="translated">이 기능은 키보드 입력을 읽기위한 모드를 설정합니다. 경우 &lt;var&gt;interrupt&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; 다음 이맥스 입력 인터럽트를 사용한다. 이 경우 &lt;code&gt;nil&lt;/code&gt; , 그것은 사용 &lt;small&gt;CBREAK의&lt;/small&gt; 모드. 기본 설정은 시스템에 따라 다릅니다. 일부 시스템 은 지정된 내용에 관계없이 항상 &lt;small&gt;CBREAK&lt;/small&gt; 모드를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="71d84482e16ce0fca0f8b33b252a44e942e9320d" translate="yes" xml:space="preserve">
          <source>This function sets the next buffer list of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;next-buffers&lt;/var&gt;. The &lt;var&gt;window&lt;/var&gt; argument should be a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window). The argument &lt;var&gt;next-buffers&lt;/var&gt; should be a list of buffers.</source>
          <target state="translated">이 함수는 &lt;var&gt;window&lt;/var&gt; 의 다음 버퍼 목록 을 &lt;var&gt;next-buffers&lt;/var&gt; 로 설정 합니다. &lt;var&gt;window&lt;/var&gt; 인수는 라이브 창이나해야 &lt;code&gt;nil&lt;/code&gt; (선택된 창을 의미). &lt;var&gt;next-buffers&lt;/var&gt; 인수 는 버퍼 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="1e59169e890a9ecd1a2a2f870ffce961d6f3f694" translate="yes" xml:space="preserve">
          <source>This function sets the outer frame position of &lt;var&gt;frame&lt;/var&gt; to (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;). The latter arguments specify pixels and normally count from the origin at the position (0, 0) of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. For child frames, they count from the native position of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s parent frame.</source>
          <target state="translated">이 함수의 외곽 위치 설정 &lt;var&gt;frame&lt;/var&gt; (에 &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; ). 후자의 인수는 픽셀을 지정하며 일반적으로 &lt;var&gt;frame&lt;/var&gt; 표시 위치 (0, 0)의 원점에서 계산 합니다. 하위 프레임의 경우 &lt;var&gt;frame&lt;/var&gt; 상위 프레임 의 기본 위치에서 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="b853c72596a6f7e79f4e7715b920798e076661d4" translate="yes" xml:space="preserve">
          <source>This function sets the parameter &lt;var&gt;parameter&lt;/var&gt; of &lt;var&gt;terminal&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;, and returns the previous value of that parameter.</source>
          <target state="translated">이 함수는 &lt;var&gt;terminal&lt;/var&gt; 의 매개 &lt;var&gt;parameter&lt;/var&gt; 매개 변수 를 지정된 &lt;var&gt;value&lt;/var&gt; 설정하고 해당 매개 변수 의 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9bc74143c0437eaedf4fc4df9dc051546f90821a" translate="yes" xml:space="preserve">
          <source>This function sets the parent of &lt;var&gt;char-table&lt;/var&gt; to &lt;var&gt;new-parent&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;char-table&lt;/var&gt; 의 부모 를 &lt;var&gt;new-parent&lt;/var&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="2e167469cf19c5707d1af22ed0b80a70f576bbfa" translate="yes" xml:space="preserve">
          <source>This function sets the process plist of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">이 기능의 프로세스 PLIST 설정 &lt;var&gt;process&lt;/var&gt; 에 &lt;var&gt;plist&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="0d543e1a094238616d2188e17ad03134a1ee4411" translate="yes" xml:space="preserve">
          <source>This function sets the query flag of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;flag&lt;/var&gt;. It returns &lt;var&gt;flag&lt;/var&gt;.</source>
          <target state="translated">이 기능의 쿼리 플래그 설정 &lt;var&gt;process&lt;/var&gt; 에 &lt;var&gt;flag&lt;/var&gt; . &lt;var&gt;flag&lt;/var&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="916bd48de6eb7abd4ec728e71d1b6170590bf5d7" translate="yes" xml:space="preserve">
          <source>This function sets the size of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in terms of the canonical height and width of a character on &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;).</source>
          <target state="translated">이 기능의 텍스트 영역의 크기를 설정하는 &lt;var&gt;frame&lt;/var&gt; 에 문자의 표준 높이와 폭의 관점에서 측정 &lt;var&gt;frame&lt;/var&gt; (참조 &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;프레임 폰트&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8094fee061f71bdabaf198f0b56d7fc77e912d2" translate="yes" xml:space="preserve">
          <source>This function sets the syntax entry for &lt;var&gt;char&lt;/var&gt; according to &lt;var&gt;syntax-descriptor&lt;/var&gt;. &lt;var&gt;char&lt;/var&gt; must be a character, or a cons cell of the form &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt;; in the latter case, the function sets the syntax entries for all characters in the range between &lt;var&gt;min&lt;/var&gt; and &lt;var&gt;max&lt;/var&gt;, inclusive.</source>
          <target state="translated">이 함수는 &lt;var&gt;syntax-descriptor&lt;/var&gt; 에 따라 &lt;var&gt;char&lt;/var&gt; 에 대한 구문 항목을 설정합니다 . &lt;var&gt;char&lt;/var&gt; 는 문자 또는 &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt; ) 형식의 단점 셀이어야합니다 . 후자의 경우이 함수는 &lt;var&gt;min&lt;/var&gt; 과 &lt;var&gt;max&lt;/var&gt; 사이의 범위에있는 모든 문자에 대한 구문 항목을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="15cacc785cffbd6ba5dd6a505175b1909a53195b" translate="yes" xml:space="preserve">
          <source>This function sets the top-level default value of &lt;var&gt;symbol&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;. This comes in handy when you want to set the global value of &lt;var&gt;symbol&lt;/var&gt; regardless of whether your code runs in the context of &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s let-binding.</source>
          <target state="translated">이 함수는 &lt;var&gt;symbol&lt;/var&gt; 의 최상위 기본값 을 지정된 &lt;var&gt;value&lt;/var&gt; 합니다. 이는 코드가 &lt;var&gt;symbol&lt;/var&gt; 의 let-binding 컨텍스트에서 실행되는지 여부에 관계없이 &lt;var&gt;symbol&lt;/var&gt; 의 전역 값을 설정하려는 경우 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="2ca1f232e220a0f426853c4e8ca3f00deec1c67d" translate="yes" xml:space="preserve">
          <source>This function sets the value in &lt;var&gt;char-table&lt;/var&gt; for a range of characters &lt;var&gt;range&lt;/var&gt;. Here are the possibilities for &lt;var&gt;range&lt;/var&gt;:</source>
          <target state="translated">이 함수는 문자 &lt;var&gt;range&lt;/var&gt; 범위에 대해 &lt;var&gt;char-table&lt;/var&gt; 의 값을 설정합니다 . &lt;var&gt;range&lt;/var&gt; 대한 가능성은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="40312ec11bf1a1affa5e36677924516dec94a851" translate="yes" xml:space="preserve">
          <source>This function sets the value of property &lt;var&gt;prop&lt;/var&gt; recorded in &lt;var&gt;overlay&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. It returns &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수는 속성의 값을 설정하는 &lt;var&gt;prop&lt;/var&gt; 에 기록 &lt;var&gt;overlay&lt;/var&gt; 에 &lt;var&gt;value&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="63a2e42444159d8b3af48388e6700473f7f5af7f" translate="yes" xml:space="preserve">
          <source>This function sets the value of the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">이 함수의 값으로 설정 &lt;var&gt;propname&lt;/var&gt; 재산 &lt;var&gt;process&lt;/var&gt; 에 &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b80e7d0b563deda386317e1e61de5bf86afc19e2" translate="yes" xml:space="preserve">
          <source>This function sets the variable &lt;var&gt;symbol&lt;/var&gt; by consing &lt;var&gt;element&lt;/var&gt; onto the old value, if &lt;var&gt;element&lt;/var&gt; is not already a member of that value. It returns the resulting list, whether updated or not. The value of &lt;var&gt;symbol&lt;/var&gt; had better be a list already before the call. &lt;code&gt;add-to-list&lt;/code&gt; uses &lt;var&gt;compare-fn&lt;/var&gt; to compare &lt;var&gt;element&lt;/var&gt; against existing list members; if &lt;var&gt;compare-fn&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it uses &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">이 함수는 변수 설정 &lt;var&gt;symbol&lt;/var&gt; consing 의해 &lt;var&gt;element&lt;/var&gt; 경우, 이전에 값을 &lt;var&gt;element&lt;/var&gt; 이미 그 값의 일원이 아니다. 업데이트 여부에 관계없이 결과 목록을 반환합니다. &lt;var&gt;symbol&lt;/var&gt; 의 가치 는 호출 전에 이미 목록이 더 낫습니다. &lt;code&gt;add-to-list&lt;/code&gt; 는 &lt;var&gt;compare-fn&lt;/var&gt; 을 사용하여 &lt;var&gt;element&lt;/var&gt; 를 기존 목록 멤버와 비교 합니다. 경우 &lt;var&gt;compare-fn&lt;/var&gt; 있다 &lt;code&gt;nil&lt;/code&gt; , 그것은 사용 &lt;code&gt;equal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4111ab980658cbdea5847db8ee945f965ead81a7" translate="yes" xml:space="preserve">
          <source>This function sets the variable &lt;var&gt;symbol&lt;/var&gt; by inserting &lt;var&gt;element&lt;/var&gt; into the old value, which must be a list, at the position specified by &lt;var&gt;order&lt;/var&gt;. If &lt;var&gt;element&lt;/var&gt; is already a member of the list, its position in the list is adjusted according to &lt;var&gt;order&lt;/var&gt;. Membership is tested using &lt;code&gt;eq&lt;/code&gt;. This function returns the resulting list, whether updated or not.</source>
          <target state="translated">이 함수는 &lt;var&gt;order&lt;/var&gt; 에서 지정한 위치에 목록이어야하는 이전 값에 &lt;var&gt;element&lt;/var&gt; 를 삽입 하여 변수 &lt;var&gt;symbol&lt;/var&gt; 를 설정합니다 . 경우 &lt;var&gt;element&lt;/var&gt; 이미리스트의 멤버 목록에서의 위치에 따라 조정되는 &lt;var&gt;order&lt;/var&gt; . 멤버십은 &lt;code&gt;eq&lt;/code&gt; 를 사용하여 테스트됩니다 . 이 함수는 업데이트 여부에 관계없이 결과 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a53708dabb9acb24f509efb0eba613cef1c0a47" translate="yes" xml:space="preserve">
          <source>This function sets the width and/or height and the types of scroll bars for window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">이 함수는 창 &lt;var&gt;window&lt;/var&gt; 너비 및 / 또는 높이 및 스크롤 막대 유형을 설정합니다 . 경우 &lt;var&gt;window&lt;/var&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 선택된 윈도우가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="92962232edaa7371b2896baae28c32d4053ade9c" translate="yes" xml:space="preserve">
          <source>This function sets the width of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in characters. The argument &lt;var&gt;pretend&lt;/var&gt; has the same meaning as in &lt;code&gt;set-frame-height&lt;/code&gt;.</source>
          <target state="translated">이 함수는 문자 단위로 측정되는 &lt;var&gt;frame&lt;/var&gt; 의 텍스트 영역 너비를 설정합니다 . &lt;var&gt;pretend&lt;/var&gt; 인수 는 &lt;code&gt;set-frame-height&lt;/code&gt; 에서와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="71924053f128c77b1c4f334e88dd7a53ba22b670" translate="yes" xml:space="preserve">
          <source>This function sets up a change group for buffer &lt;var&gt;buffer&lt;/var&gt;, which defaults to the current buffer. It returns a handle that represents the change group. You must use this handle to activate the change group and subsequently to finish it.</source>
          <target state="translated">이 함수는 buffer &lt;var&gt;buffer&lt;/var&gt; 에 대한 변경 그룹을 설정 하며 기본값은 현재 버퍼입니다. 변경 그룹을 나타내는 핸들을 반환합니다. 이 핸들을 사용하여 변경 그룹을 활성화 한 후 완료해야합니다.</target>
        </trans-unit>
        <trans-unit id="ec7709fbb0a1662486c5ae1309111b94eabfa9e8" translate="yes" xml:space="preserve">
          <source>This function should be called when the operation is finished. It prints the message of &lt;var&gt;reporter&lt;/var&gt; followed by word &amp;lsquo;</source>
          <target state="translated">이 함수는 작업이 완료되면 호출되어야합니다. &lt;var&gt;reporter&lt;/var&gt; 의 메시지 뒤에 '</target>
        </trans-unit>
        <trans-unit id="d53aa3744aa3f3c1b0f811b35d5fccb6542fef70" translate="yes" xml:space="preserve">
          <source>This function should fontify the current buffer&amp;rsquo;s accessible portion, by calling the function specified by &lt;code&gt;font-lock-fontify-buffer-function&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;font-lock-fontify-buffer-function&lt;/code&gt; 에 지정된 함수를 호출하여 현재 버퍼의 액세스 가능한 부분을 글꼴로 지정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="13a46cffeee7400374d4e2293fe5e808000e973c" translate="yes" xml:space="preserve">
          <source>This function should make sure the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; has been fontified. The optional arguments &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; default to the beginning and the end of the buffer&amp;rsquo;s accessible portion. Calls the function specified by &lt;code&gt;font-lock-ensure-function&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;beg&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이의 영역 이 폰트 화 되었는지 확인해야합니다 . 선택적 인수 &lt;var&gt;beg&lt;/var&gt; 및 &lt;var&gt;end&lt;/var&gt; 는 기본적으로 버퍼의 액세스 가능한 부분의 시작 과 끝 으로 설정됩니다. &lt;code&gt;font-lock-ensure-function&lt;/code&gt; 으로 지정된 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="71fa298bb06145061fe858cb2b0e31275d92bd6d" translate="yes" xml:space="preserve">
          <source>This function should mark the fontification of the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as outdated. If not specified or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; default to the beginning and end of the buffer&amp;rsquo;s accessible portion. Calls the function specified by &lt;code&gt;font-lock-flush-function&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;var&gt;beg&lt;/var&gt; 와 &lt;var&gt;end&lt;/var&gt; 사이 영역의 글꼴을 구식으로 표시해야합니다 . 지정하지 않거나 &lt;code&gt;nil&lt;/code&gt; 이면, &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; 는 기본적으로 버퍼의 액세스 가능한 부분의 시작과 끝으로 설정됩니다. &lt;code&gt;font-lock-flush-function&lt;/code&gt; 에 지정된 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="f237d11806f7f9c5598c61dcaea0921f6c3f435e" translate="yes" xml:space="preserve">
          <source>This function signals a &lt;code&gt;buffer-read-only&lt;/code&gt; error if the current buffer is read-only. If the text at &lt;var&gt;position&lt;/var&gt; (which defaults to point) has the &lt;code&gt;inhibit-read-only&lt;/code&gt; text property set, the error will not be raised.</source>
          <target state="translated">이 함수 는 현재 버퍼가 읽기 전용 인 경우 &lt;code&gt;buffer-read-only&lt;/code&gt; 오류를 나타냅니다. &lt;var&gt;position&lt;/var&gt; 의 텍스트 (기본값은 point)에 &lt;code&gt;inhibit-read-only&lt;/code&gt; 텍스트 속성이 설정되어 있으면 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e3a37433a9d0257f28b8924b7f8996c03854d3a7" translate="yes" xml:space="preserve">
          <source>This function signals a &lt;code&gt;cyclic-variable-indirection&lt;/code&gt; error if there is a loop in the chain of symbols.</source>
          <target state="translated">이 함수 는 심볼 체인에 루프가있는 경우 &lt;code&gt;cyclic-variable-indirection&lt;/code&gt; 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad9ce45bdf623ffc5bdaf6d3320de31dd03d0be0" translate="yes" xml:space="preserve">
          <source>This function signals an error if the buffer is narrowed, since the narrowing might have occurred in the middle of multibyte character sequences.</source>
          <target state="translated">이 함수는 멀티 바이트 문자 시퀀스 중간에서 축소가 발생했을 수 있으므로 버퍼가 좁아지면 오류 신호를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d657ed0fa038e4144b320e056dad2ce3b259dc83" translate="yes" xml:space="preserve">
          <source>This function signals an error named by &lt;var&gt;error-symbol&lt;/var&gt;. The argument &lt;var&gt;data&lt;/var&gt; is a list of additional Lisp objects relevant to the circumstances of the error.</source>
          <target state="translated">이 함수는 &lt;var&gt;error-symbol&lt;/var&gt; 이라는 오류를 나타 냅니다. 인수 &lt;var&gt;data&lt;/var&gt; 는 오류 상황과 관련된 추가 Lisp 개체 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e0c30c758c92166bfc85d9d039660b87a5e6c2a2" translate="yes" xml:space="preserve">
          <source>This function signals an error with an error message constructed by applying &lt;code&gt;format-message&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;) to &lt;var&gt;format-string&lt;/var&gt; and &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;format-message&lt;/code&gt; ( &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt; 참조 )를 &lt;var&gt;format-string&lt;/var&gt; 및 &lt;var&gt;args&lt;/var&gt; 에 적용하여 구성된 오류 메시지로 오류를 알립니다 .</target>
        </trans-unit>
        <trans-unit id="6899cd0dfcf69c4a2bf69551795704ea8a5ba97d" translate="yes" xml:space="preserve">
          <source>This function signals the &lt;code&gt;quit&lt;/code&gt; condition with &lt;code&gt;(signal 'quit
nil)&lt;/code&gt;. This is the same thing that quitting does. (See &lt;code&gt;signal&lt;/code&gt; in &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;.)</source>
          <target state="translated">이 함수 는 &lt;code&gt;(signal 'quit nil)&lt;/code&gt; &lt;code&gt;quit&lt;/code&gt; 조건을 알립니다 . 이것은 그만두는 것과 같은 일입니다. ( &lt;a href=&quot;errors#Errors&quot;&gt;오류의 &lt;/a&gt; &lt;code&gt;signal&lt;/code&gt; 를 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="0d36d627261dd4e408ddcaa87aa02fc3c3b72b06" translate="yes" xml:space="preserve">
          <source>This function signals the error represented by &lt;var&gt;error&lt;/var&gt; with the specified error data &lt;var&gt;data&lt;/var&gt;. The module function should return soon after calling this function. This function could be useful, e.g., for signaling errors from module functions to Emacs.</source>
          <target state="translated">이 기능 신호는 에러로 표시 &lt;var&gt;error&lt;/var&gt; 지정된 오류 데이터와 &lt;var&gt;data&lt;/var&gt; . 모듈 함수는이 함수를 호출 한 후 곧 반환됩니다. 이 함수는 예를 들어 모듈 함수에서 Emacs로 오류를 알리는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90c974b13e8dc22f833e6a73ea6c119a044ea13e" translate="yes" xml:space="preserve">
          <source>This function simply evaluates the result of a call to &lt;code&gt;read-minibuffer&lt;/code&gt;:</source>
          <target state="translated">이 함수는 &lt;code&gt;read-minibuffer&lt;/code&gt; 호출의 결과를 간단히 평가합니다 .</target>
        </trans-unit>
        <trans-unit id="410a97766eec8dfabbf86b07735dfd8852ca2d63" translate="yes" xml:space="preserve">
          <source>This function simply pauses for &lt;var&gt;seconds&lt;/var&gt; seconds without updating the display. It pays no attention to available input. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 기능 은 디스플레이를 업데이트하지 않고 &lt;var&gt;seconds&lt;/var&gt; 초 동안 잠시 멈 춥니 다 . 사용 가능한 입력에주의를 기울이지 않습니다. &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="21d35e9fb086ce275086e8a2c555187abe136eb7" translate="yes" xml:space="preserve">
          <source>This function sorts &lt;var&gt;sequence&lt;/var&gt; stably. Note that this function doesn&amp;rsquo;t work for all sequences; it may be used only for lists and vectors. If &lt;var&gt;sequence&lt;/var&gt; is a list, it is modified destructively. This functions returns the sorted &lt;var&gt;sequence&lt;/var&gt; and compares elements using &lt;var&gt;predicate&lt;/var&gt;. A stable sort is one in which elements with equal sort keys maintain their relative order before and after the sort. Stability is important when successive sorts are used to order elements according to different criteria.</source>
          <target state="translated">이 기능은 &lt;var&gt;sequence&lt;/var&gt; 안정적으로 정렬 합니다 . 이 함수는 모든 시퀀스에서 작동하지 않습니다. 목록과 벡터에만 사용할 수 있습니다. 경우 &lt;var&gt;sequence&lt;/var&gt; 목록입니다, 그것은 파괴적으로 수정됩니다. 이 함수는 정렬 된 &lt;var&gt;sequence&lt;/var&gt; 반환하고 &lt;var&gt;predicate&lt;/var&gt; 를 사용하여 요소를 비교합니다 . 안정적인 정렬은 정렬 키가 동일한 요소가 정렬 전후의 상대적 순서를 유지하는 정렬입니다. 다른 기준에 따라 요소를 정렬하기 위해 연속 정렬을 사용할 때 안정성이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="44856e67f52758758839924c38ca6145b82b817d" translate="yes" xml:space="preserve">
          <source>This function specifies &lt;var&gt;window&lt;/var&gt; as the minibuffer window to use. This affects where the minibuffer is displayed if you put text in it without invoking the usual minibuffer commands. It has no effect on the usual minibuffer input functions because they all start by choosing the minibuffer window according to the selected frame.</source>
          <target state="translated">이 기능을 지정 &lt;var&gt;window&lt;/var&gt; 미니 버퍼의 창으로 사용합니다. 이것은 일반적인 미니 버퍼 명령을 호출하지 않고 텍스트를 넣으면 미니 버퍼가 표시되는 위치에 영향을줍니다. 선택한 프레임에 따라 미니 버퍼 창을 선택하여 시작하기 때문에 일반적인 미니 버퍼 입력 기능에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e31c36fa02ac3fd5c62b796e8278fc255cccbc6" translate="yes" xml:space="preserve">
          <source>This function specifies a pair of corresponding letters, one upper case and one lower case.</source>
          <target state="translated">이 함수는 한 쌍의 해당 문자, 하나의 대문자와 하나의 소문자를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="73628c0bed95c08645238d207277e9e5e467efeb" translate="yes" xml:space="preserve">
          <source>This function specifies the Custom theme &lt;var&gt;theme&lt;/var&gt;&amp;rsquo;s face settings. &lt;var&gt;theme&lt;/var&gt; should be a symbol. Each argument in &lt;var&gt;args&lt;/var&gt; should be a list of the form</source>
          <target state="translated">이 기능은 사용자 정의 테마 &lt;var&gt;theme&lt;/var&gt; 의 얼굴 설정을 지정합니다 . &lt;var&gt;theme&lt;/var&gt; 는 상징이어야합니다. &lt;var&gt;args&lt;/var&gt; 의 각 인수 는 다음 형식의 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9a0e030950f28c84f095f999ed67addf53b49aab" translate="yes" xml:space="preserve">
          <source>This function specifies the Custom theme &lt;var&gt;theme&lt;/var&gt;&amp;rsquo;s variable settings. &lt;var&gt;theme&lt;/var&gt; should be a symbol. Each argument in &lt;var&gt;args&lt;/var&gt; should be a list of the form</source>
          <target state="translated">이 기능은 사용자 정의 테마 &lt;var&gt;theme&lt;/var&gt; 의 변수 설정을 지정합니다 . &lt;var&gt;theme&lt;/var&gt; 는 상징이어야합니다. &lt;var&gt;args&lt;/var&gt; 의 각 인수 는 다음 형식의 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="99a9605590004bfb9983548f07f076c53b0abbde" translate="yes" xml:space="preserve">
          <source>This function specifies the argument list &lt;var&gt;signature&lt;/var&gt; as the correct way to call &lt;var&gt;function&lt;/var&gt;. This causes the Emacs byte compiler to issue a warning whenever it comes across an Emacs Lisp program that calls &lt;var&gt;function&lt;/var&gt; any other way (however, it will still allow the code to be byte compiled). &lt;var&gt;when&lt;/var&gt; should be a string indicating when the variable was first made obsolete (usually a version number string).</source>
          <target state="translated">이 함수는 인수 목록 지정 &lt;var&gt;signature&lt;/var&gt; 통화에 대한 올바른 방법으로 &lt;var&gt;function&lt;/var&gt; . 이로 인해 Emacs 바이트 컴파일러는 다른 방식으로 &lt;var&gt;function&lt;/var&gt; 를 호출하는 Emacs Lisp 프로그램을 발견 할 때마다 경고를 발행합니다 (하지만 코드가 바이트 컴파일되도록 허용합니다). &lt;var&gt;when&lt;/var&gt; 은 변수가 처음 폐기 된시기를 나타내는 문자열이어야합니다 (일반적으로 버전 번호 문자열).</target>
        </trans-unit>
        <trans-unit id="93cd0705cac9e3a4d568885d91fc33383cc0b676" translate="yes" xml:space="preserve">
          <source>This function specifies the coding systems to use for subsequent output from and input to &lt;var&gt;process&lt;/var&gt;. It will use &lt;var&gt;decoding-system&lt;/var&gt; to decode subprocess output, and &lt;var&gt;encoding-system&lt;/var&gt; to encode subprocess input.</source>
          <target state="translated">이 함수는 &lt;var&gt;process&lt;/var&gt; 할 후속 출력 및 입력에 사용할 코딩 시스템을 지정합니다 . &lt;var&gt;decoding-system&lt;/var&gt; 을 사용 하여 하위 프로세스 출력을 디코딩하고 &lt;var&gt;encoding-system&lt;/var&gt; 을 사용하여 하위 프로세스 입력을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="b7456411126ca29b870a96d1157b0c99cc3c87aa" translate="yes" xml:space="preserve">
          <source>This function specifies the margin widths for window &lt;var&gt;window&lt;/var&gt;, in character cell units. The argument &lt;var&gt;left&lt;/var&gt; controls the left margin, and &lt;var&gt;right&lt;/var&gt; controls the right margin (default &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">이 함수는 window &lt;var&gt;window&lt;/var&gt; 의 여백 너비를 문자 셀 단위로 지정합니다. 인수는 &lt;var&gt;left&lt;/var&gt; 컨트롤을 왼쪽 여백을하고 &lt;var&gt;right&lt;/var&gt; 컨트롤을 오른쪽 여백 (기본값 &lt;code&gt;0&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cfd357ba5847ff197c38f2834ab0b28ca79194cf" translate="yes" xml:space="preserve">
          <source>This function splits &lt;var&gt;string&lt;/var&gt; into substrings at matches for the regular expression &lt;var&gt;separators&lt;/var&gt;, like &lt;code&gt;split-string&lt;/code&gt; does (see &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;); in addition, it removes quoting from the substrings. It then makes a list of the substrings and returns it.</source>
          <target state="translated">이 함수 는 &lt;code&gt;split-string&lt;/code&gt; 이하 는 것처럼 정규식 &lt;var&gt;separators&lt;/var&gt; 대한 일치에서 &lt;var&gt;string&lt;/var&gt; 을 하위 문자열 로 분할 합니다 ( 문자열 &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;만들기&lt;/a&gt; 참조 ). 또한 하위 문자열에서 인용 부호를 제거합니다. 그런 다음 하위 문자열 목록을 만들고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca61723920bf62189efd5901f4cb0a7d58235aef" translate="yes" xml:space="preserve">
          <source>This function splits &lt;var&gt;string&lt;/var&gt; into substrings based on the regular expression &lt;var&gt;separators&lt;/var&gt; (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;). Each match for &lt;var&gt;separators&lt;/var&gt; defines a splitting point; the substrings between splitting points are made into a list, which is returned.</source>
          <target state="translated">이 함수 는 정규식 &lt;var&gt;separators&lt;/var&gt; 에 따라 &lt;var&gt;string&lt;/var&gt; 을 하위 문자열 로 분할 합니다 ( &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;정규식&lt;/a&gt; 참조 ). &lt;var&gt;separators&lt;/var&gt; 대한 각 일치 는 분할 지점을 정의합니다. 분할 지점 사이의 부분 문자열이 목록으로 만들어지고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="16184ac30d366ba7e0e7cd7b5d2786b3f8a7ee30" translate="yes" xml:space="preserve">
          <source>This function splits the selected window into two side-by-side windows, putting the selected window on the left. If &lt;var&gt;size&lt;/var&gt; is positive, the left window gets &lt;var&gt;size&lt;/var&gt; columns; if &lt;var&gt;size&lt;/var&gt; is negative, the right window gets -&lt;var&gt;size&lt;/var&gt; columns.</source>
          <target state="translated">이 기능은 선택한 창을 두 개의 나란한 창으로 분할하여 선택한 창을 왼쪽에 배치합니다. 경우 &lt;var&gt;size&lt;/var&gt; 양수, 왼쪽 창 가져 &lt;var&gt;size&lt;/var&gt; 열을; 경우 &lt;var&gt;size&lt;/var&gt; 음수 오른쪽 창 가져 - &lt;var&gt;size&lt;/var&gt; 열입니다.</target>
        </trans-unit>
        <trans-unit id="7f2f9d7a92cae81e5bf4e5ebb0339954e97c6f8a" translate="yes" xml:space="preserve">
          <source>This function splits the selected window into two windows, one above the other, leaving the upper window selected. If &lt;var&gt;size&lt;/var&gt; is positive, the upper window gets &lt;var&gt;size&lt;/var&gt; lines; if &lt;var&gt;size&lt;/var&gt; is negative, the lower window gets -&lt;var&gt;size&lt;/var&gt; lines.</source>
          <target state="translated">This function splits the selected window into two windows, one above the other, leaving the upper window selected. If &lt;var&gt;size&lt;/var&gt; is positive, the upper window gets &lt;var&gt;size&lt;/var&gt; lines; if &lt;var&gt;size&lt;/var&gt; is negative, the lower window gets - &lt;var&gt;size&lt;/var&gt; lines.</target>
        </trans-unit>
        <trans-unit id="70f860aae420608432f16a68f9507c030a6f2bf0" translate="yes" xml:space="preserve">
          <source>This function stops Emacs and returns control to the superior process. If and when the superior process resumes Emacs, &lt;code&gt;suspend-emacs&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; to its caller in Lisp.</source>
          <target state="translated">This function stops Emacs and returns control to the superior process. If and when the superior process resumes Emacs, &lt;code&gt;suspend-emacs&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; to its caller in Lisp.</target>
        </trans-unit>
        <trans-unit id="96dc57f0fe40c0037be35a60b8c3f97b80944403" translate="yes" xml:space="preserve">
          <source>This function stops the specified &lt;var&gt;process&lt;/var&gt;. If it is a real subprocess running a program, it sends the signal &lt;code&gt;SIGTSTP&lt;/code&gt; to that subprocess. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, this function inhibits handling of the incoming data from the connection; for a network server, this means not accepting new connections. Use &lt;code&gt;continue-process&lt;/code&gt; to resume normal execution.</source>
          <target state="translated">This function stops the specified &lt;var&gt;process&lt;/var&gt; . If it is a real subprocess running a program, it sends the signal &lt;code&gt;SIGTSTP&lt;/code&gt; to that subprocess. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, this function inhibits handling of the incoming data from the connection; for a network server, this means not accepting new connections. Use &lt;code&gt;continue-process&lt;/code&gt; to resume normal execution.</target>
        </trans-unit>
        <trans-unit id="07f23b4a366f8c9c6b95d3ec402619dcc44bddd7" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;definition&lt;/var&gt; in the function cell of &lt;var&gt;symbol&lt;/var&gt;. The result is &lt;var&gt;definition&lt;/var&gt;. Normally &lt;var&gt;definition&lt;/var&gt; should be a function or the name of a function, but this is not checked. The argument &lt;var&gt;symbol&lt;/var&gt; is an ordinary evaluated argument.</source>
          <target state="translated">This function stores &lt;var&gt;definition&lt;/var&gt; in the function cell of &lt;var&gt;symbol&lt;/var&gt; . The result is &lt;var&gt;definition&lt;/var&gt; . Normally &lt;var&gt;definition&lt;/var&gt; should be a function or the name of a function, but this is not checked. The argument &lt;var&gt;symbol&lt;/var&gt; is an ordinary evaluated argument.</target>
        </trans-unit>
        <trans-unit id="bb7d1a47d2c4ec64baeb5315985767cadddc7ca6" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt;, replacing its previous &lt;small&gt;CAR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CAR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt;. It returns the value &lt;var&gt;object&lt;/var&gt;. For example:</source>
          <target state="translated">This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt; , replacing its previous &lt;small&gt;CAR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CAR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt; . It returns the value &lt;var&gt;object&lt;/var&gt; . For example:</target>
        </trans-unit>
        <trans-unit id="c08fe7f266038cf14b62dbf539646605eef52c5e" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt;, replacing its previous &lt;small&gt;CDR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CDR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt;. It returns the value &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt; , replacing its previous &lt;small&gt;CDR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CDR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt; . It returns the value &lt;var&gt;object&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3c261fa1fc4ae1def15df2f4a8286e2151bb80ee" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; as the value of the property &lt;var&gt;propname&lt;/var&gt; for the character &lt;var&gt;char&lt;/var&gt;.</source>
          <target state="translated">This function stores &lt;var&gt;value&lt;/var&gt; as the value of the property &lt;var&gt;propname&lt;/var&gt; for the character &lt;var&gt;char&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="971d2ea15f0da38a819fc0d1aee361e1166f61c0" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in extra slot &lt;var&gt;n&lt;/var&gt; (zero based) of &lt;var&gt;char-table&lt;/var&gt;.</source>
          <target state="translated">This function stores &lt;var&gt;value&lt;/var&gt; in extra slot &lt;var&gt;n&lt;/var&gt; (zero based) of &lt;var&gt;char-table&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a7541c462692c6515985e2f1d73946bc08fee15b" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in the element of &lt;var&gt;vector&lt;/var&gt; whose index is &lt;var&gt;index&lt;/var&gt;. It raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition if the value of &lt;var&gt;index&lt;/var&gt; is invalid.</source>
          <target state="translated">This function stores &lt;var&gt;value&lt;/var&gt; in the element of &lt;var&gt;vector&lt;/var&gt; whose index is &lt;var&gt;index&lt;/var&gt; . It raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition if the value of &lt;var&gt;index&lt;/var&gt; is invalid.</target>
        </trans-unit>
        <trans-unit id="16c7659273a0207936277e69b6b955556bcae2c0" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in the extra slot &lt;var&gt;slot&lt;/var&gt; of &lt;var&gt;display-table&lt;/var&gt;. The argument &lt;var&gt;slot&lt;/var&gt; may be a number from 0 to 5 inclusive, or a slot name (symbol). Valid symbols are &lt;code&gt;truncation&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;selective-display&lt;/code&gt;, and &lt;code&gt;vertical-border&lt;/code&gt;.</source>
          <target state="translated">This function stores &lt;var&gt;value&lt;/var&gt; in the extra slot &lt;var&gt;slot&lt;/var&gt; of &lt;var&gt;display-table&lt;/var&gt; . The argument &lt;var&gt;slot&lt;/var&gt; may be a number from 0 to 5 inclusive, or a slot name (symbol). Valid symbols are &lt;code&gt;truncation&lt;/code&gt; , &lt;code&gt;wrap&lt;/code&gt; , &lt;code&gt;escape&lt;/code&gt; , &lt;code&gt;control&lt;/code&gt; , &lt;code&gt;selective-display&lt;/code&gt; , and &lt;code&gt;vertical-border&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5ed2f65a8b3cf694f27819b254331806e1a5012" translate="yes" xml:space="preserve">
          <source>This function stores the UTF-8 encoded text of a Lisp string specified by &lt;var&gt;arg&lt;/var&gt; in the array of &lt;code&gt;char&lt;/code&gt; pointed by &lt;var&gt;buf&lt;/var&gt;, which should have enough space to hold at least &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; bytes, including the terminating null byte. The argument &lt;var&gt;len&lt;/var&gt; must not be a &lt;code&gt;NULL&lt;/code&gt; pointer, and, when the function is called, it should point to a value that specifies the size of &lt;var&gt;buf&lt;/var&gt; in bytes.</source>
          <target state="translated">This function stores the UTF-8 encoded text of a Lisp string specified by &lt;var&gt;arg&lt;/var&gt; in the array of &lt;code&gt;char&lt;/code&gt; pointed by &lt;var&gt;buf&lt;/var&gt; , which should have enough space to hold at least &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; bytes, including the terminating null byte. The argument &lt;var&gt;len&lt;/var&gt; must not be a &lt;code&gt;NULL&lt;/code&gt; pointer, and, when the function is called, it should point to a value that specifies the size of &lt;var&gt;buf&lt;/var&gt; in bytes.</target>
        </trans-unit>
        <trans-unit id="630b27c76886d6fcb8ae10ea151ea4d623a738b0" translate="yes" xml:space="preserve">
          <source>This function supports two types of quoting: enclosing a whole string in double quotes &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt;, and quoting individual characters with a backslash escape &amp;lsquo;</source>
          <target state="translated">This function supports two types of quoting: enclosing a whole string in double quotes &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt; , and quoting individual characters with a backslash escape &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="bd247bf82030471e5dd6bd55c689c446343681ad" translate="yes" xml:space="preserve">
          <source>This function swaps the text of the current buffer and that of its argument &lt;var&gt;buffer&lt;/var&gt;. It signals an error if one of the two buffers is an indirect buffer (see &lt;a href=&quot;indirect-buffers#Indirect-Buffers&quot;&gt;Indirect Buffers&lt;/a&gt;) or is a base buffer of an indirect buffer.</source>
          <target state="translated">This function swaps the text of the current buffer and that of its argument &lt;var&gt;buffer&lt;/var&gt; . It signals an error if one of the two buffers is an indirect buffer (see &lt;a href=&quot;indirect-buffers#Indirect-Buffers&quot;&gt;Indirect Buffers&lt;/a&gt;) or is a base buffer of an indirect buffer.</target>
        </trans-unit>
        <trans-unit id="d0028e395451e0dca1cade0c01ef32a22585e56c" translate="yes" xml:space="preserve">
          <source>This function switches &lt;var&gt;image&lt;/var&gt; to frame number &lt;var&gt;n&lt;/var&gt;. It replaces a frame number outside the valid range with that of the end of the range, unless &lt;var&gt;nocheck&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;image&lt;/var&gt; does not contain a frame with the specified number, the image displays as a hollow box.</source>
          <target state="translated">This function switches &lt;var&gt;image&lt;/var&gt; to frame number &lt;var&gt;n&lt;/var&gt; . It replaces a frame number outside the valid range with that of the end of the range, unless &lt;var&gt;nocheck&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; . If &lt;var&gt;image&lt;/var&gt; does not contain a frame with the specified number, the image displays as a hollow box.</target>
        </trans-unit>
        <trans-unit id="d0c47be812e5da02bba74b2039d70c752c2a32d3" translate="yes" xml:space="preserve">
          <source>This function takes a &lt;code&gt;double&lt;/code&gt; argument &lt;var&gt;d&lt;/var&gt; and returns the corresponding Emacs floating-point value.</source>
          <target state="translated">This function takes a &lt;code&gt;double&lt;/code&gt; argument &lt;var&gt;d&lt;/var&gt; and returns the corresponding Emacs floating-point value.</target>
        </trans-unit>
        <trans-unit id="cb7728f69cd5d214a8e62342e5ef40ef4c5f52c8" translate="yes" xml:space="preserve">
          <source>This function takes a &lt;em&gt;prec2&lt;/em&gt; grammar &lt;var&gt;table&lt;/var&gt; and returns an alist suitable for use in &lt;code&gt;smie-setup&lt;/code&gt;. The &lt;em&gt;prec2&lt;/em&gt;&lt;var&gt;table&lt;/var&gt; is itself meant to be built by one of the functions below.</source>
          <target state="translated">This function takes a &lt;em&gt;prec2&lt;/em&gt; grammar &lt;var&gt;table&lt;/var&gt; and returns an alist suitable for use in &lt;code&gt;smie-setup&lt;/code&gt; . The &lt;em&gt;prec2&lt;/em&gt; &lt;var&gt;table&lt;/var&gt; is itself meant to be built by one of the functions below.</target>
        </trans-unit>
        <trans-unit id="3ed16a739f28a4a598a044df30c6d9befd0525bf" translate="yes" xml:space="preserve">
          <source>This function takes a decoded time structure and adds &lt;var&gt;delta&lt;/var&gt; (also a decoded time structure) to it. Elements in &lt;var&gt;delta&lt;/var&gt; that are &lt;code&gt;nil&lt;/code&gt; are ignored.</source>
          <target state="translated">This function takes a decoded time structure and adds &lt;var&gt;delta&lt;/var&gt; (also a decoded time structure) to it. Elements in &lt;var&gt;delta&lt;/var&gt; that are &lt;code&gt;nil&lt;/code&gt; are ignored.</target>
        </trans-unit>
        <trans-unit id="83fe18443f123612b9dd2e6fae4f154156871d89" translate="yes" xml:space="preserve">
          <source>This function takes a search path string such as the value of the &lt;code&gt;PATH&lt;/code&gt; environment variable, and splits it at the separators, returning a list of directories. &lt;code&gt;nil&lt;/code&gt; in this list means the current directory. Although the function&amp;rsquo;s name says &amp;ldquo;colon&amp;rdquo;, it actually uses the value of &lt;code&gt;path-separator&lt;/code&gt;.</source>
          <target state="translated">This function takes a search path string such as the value of the &lt;code&gt;PATH&lt;/code&gt; environment variable, and splits it at the separators, returning a list of directories. &lt;code&gt;nil&lt;/code&gt; in this list means the current directory. Although the function&amp;rsquo;s name says &amp;ldquo;colon&amp;rdquo;, it actually uses the value of &lt;code&gt;path-separator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a874cce8e01bf2953b84c13ece649958fb7e4913" translate="yes" xml:space="preserve">
          <source>This function takes an integer argument &lt;var&gt;n&lt;/var&gt; and returns the corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. It returns either a fixnum or a bignum depending on whether the value of &lt;var&gt;n&lt;/var&gt; is inside the limits set by &lt;code&gt;most-negative-fixnum&lt;/code&gt; and &lt;code&gt;most-positive-fixnum&lt;/code&gt; (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;).</source>
          <target state="translated">This function takes an integer argument &lt;var&gt;n&lt;/var&gt; and returns the corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. It returns either a fixnum or a bignum depending on whether the value of &lt;var&gt;n&lt;/var&gt; is inside the limits set by &lt;code&gt;most-negative-fixnum&lt;/code&gt; and &lt;code&gt;most-positive-fixnum&lt;/code&gt; (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a1f78b7b4226332d4d5703ed01188a6ffb4fa704" translate="yes" xml:space="preserve">
          <source>This function takes one or more normal hook variable names as arguments, and runs each hook in turn. Each argument should be a symbol that is a normal hook variable. These arguments are processed in the order specified.</source>
          <target state="translated">This function takes one or more normal hook variable names as arguments, and runs each hook in turn. Each argument should be a symbol that is a normal hook variable. These arguments are processed in the order specified.</target>
        </trans-unit>
        <trans-unit id="a7828711d6b475a4d56a3d656ef4a42d86a01a05" translate="yes" xml:space="preserve">
          <source>This function takes several &lt;em&gt;prec2&lt;/em&gt;&lt;var&gt;tables&lt;/var&gt; and merges them into a new &lt;em&gt;prec2&lt;/em&gt; table.</source>
          <target state="translated">This function takes several &lt;em&gt;prec2&lt;/em&gt; &lt;var&gt;tables&lt;/var&gt; and merges them into a new &lt;em&gt;prec2&lt;/em&gt; table.</target>
        </trans-unit>
        <trans-unit id="e6cbefd59af326e24706f814510f12ae067848a4" translate="yes" xml:space="preserve">
          <source>This function tells Font Lock mode to run the Lisp function &lt;var&gt;function&lt;/var&gt; any time it has to fontify or refontify part of the current buffer. It calls &lt;var&gt;function&lt;/var&gt; before calling the default fontification functions, and gives it two arguments, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the region to be fontified or refontified.</source>
          <target state="translated">This function tells Font Lock mode to run the Lisp function &lt;var&gt;function&lt;/var&gt; any time it has to fontify or refontify part of the current buffer. It calls &lt;var&gt;function&lt;/var&gt; before calling the default fontification functions, and gives it two arguments, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; , which specify the region to be fontified or refontified.</target>
        </trans-unit>
        <trans-unit id="7c5a38df2971586fea43db654867a497e98cde6d" translate="yes" xml:space="preserve">
          <source>This function tests for the falsehood of &lt;var&gt;condition&lt;/var&gt;. It returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;condition&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. The function &lt;code&gt;not&lt;/code&gt; is identical to &lt;code&gt;null&lt;/code&gt;, and we recommend using the name &lt;code&gt;null&lt;/code&gt; if you are testing for an empty list.</source>
          <target state="translated">This function tests for the falsehood of &lt;var&gt;condition&lt;/var&gt; . It returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;condition&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , and &lt;code&gt;nil&lt;/code&gt; otherwise. The function &lt;code&gt;not&lt;/code&gt; is identical to &lt;code&gt;null&lt;/code&gt; , and we recommend using the name &lt;code&gt;null&lt;/code&gt; if you are testing for an empty list.</target>
        </trans-unit>
        <trans-unit id="9c0364e332c4d07d41dde3f53bb505600cde2ea1" translate="yes" xml:space="preserve">
          <source>This function tests to see whether &lt;var&gt;object&lt;/var&gt; is a member of &lt;var&gt;list&lt;/var&gt;. If it is, &lt;code&gt;memq&lt;/code&gt; returns a list starting with the first occurrence of &lt;var&gt;object&lt;/var&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;. The letter &amp;lsquo;</source>
          <target state="translated">This function tests to see whether &lt;var&gt;object&lt;/var&gt; is a member of &lt;var&gt;list&lt;/var&gt; . If it is, &lt;code&gt;memq&lt;/code&gt; returns a list starting with the first occurrence of &lt;var&gt;object&lt;/var&gt; . Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; . The letter &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b8f214400d5e4bd3fdd1e4b5595459f1e893fbef" translate="yes" xml:space="preserve">
          <source>This function tests whether &lt;var&gt;filename&lt;/var&gt; is a remote file. If &lt;var&gt;filename&lt;/var&gt; is local (not remote), the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is indeed remote, the return value is a string that identifies the remote system.</source>
          <target state="translated">This function tests whether &lt;var&gt;filename&lt;/var&gt; is a remote file. If &lt;var&gt;filename&lt;/var&gt; is local (not remote), the return value is &lt;code&gt;nil&lt;/code&gt; . If &lt;var&gt;filename&lt;/var&gt; is indeed remote, the return value is a string that identifies the remote system.</target>
        </trans-unit>
        <trans-unit id="166b6295a4af8c329ff135a323923c73a4a9005a" translate="yes" xml:space="preserve">
          <source>This function tests whether all its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function tests whether all its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="7ff8a88a68c6fbf38aec8250607ce1d92a938174" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is greater than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function tests whether each argument is greater than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="53d4414676443d823cea925b110cc4855e1f8b40" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is less than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function tests whether each argument is less than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="4b4bac363f682ea3eddf0da72721e4fe61accbdf" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is strictly greater than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function tests whether each argument is strictly greater than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="a6a062da58806d2a8fa5bb609fc972c58f9946f7" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is strictly less than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function tests whether each argument is strictly less than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="02adba9730538e774beb1a3df0c8231325254531" translate="yes" xml:space="preserve">
          <source>This function tests whether its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if they are not, and &lt;code&gt;nil&lt;/code&gt; if they are.</source>
          <target state="translated">This function tests whether its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if they are not, and &lt;code&gt;nil&lt;/code&gt; if they are.</target>
        </trans-unit>
        <trans-unit id="b7cf4e5aa539a1ff43fac64027ef87896c817d69" translate="yes" xml:space="preserve">
          <source>This function tests whether the Lisp object represented by &lt;var&gt;val&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; it returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; accordingly.</source>
          <target state="translated">This function tests whether the Lisp object represented by &lt;var&gt;val&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; ; it returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; accordingly.</target>
        </trans-unit>
        <trans-unit id="3af851ea00a187c2d1d3760c74c4773a109204df" translate="yes" xml:space="preserve">
          <source>This function throws to the Lisp &lt;code&gt;catch&lt;/code&gt; symbol represented by &lt;var&gt;tag&lt;/var&gt;, passing it &lt;var&gt;value&lt;/var&gt; as the value to return. Your module function should in general return soon after calling this function. One use of this function is when you want to re-throw a non-local exit from one of the called</source>
          <target state="translated">This function throws to the Lisp &lt;code&gt;catch&lt;/code&gt; symbol represented by &lt;var&gt;tag&lt;/var&gt; , passing it &lt;var&gt;value&lt;/var&gt; as the value to return. Your module function should in general return soon after calling this function. One use of this function is when you want to re-throw a non-local exit from one of the called</target>
        </trans-unit>
        <trans-unit id="8521a4059027fdbc02f10dd9a2630501e9dfc2a0" translate="yes" xml:space="preserve">
          <source>This function tries immediately to redisplay. The optional argument &lt;var&gt;force&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, forces the redisplay to be performed, instead of being preempted if input is pending.</source>
          <target state="translated">This function tries immediately to redisplay. The optional argument &lt;var&gt;force&lt;/var&gt; , if non- &lt;code&gt;nil&lt;/code&gt; , forces the redisplay to be performed, instead of being preempted if input is pending.</target>
        </trans-unit>
        <trans-unit id="94eb72ee58d11703e96707e483ace3e221567d45" translate="yes" xml:space="preserve">
          <source>This function tries to determine a suitable coding system for &lt;var&gt;filename&lt;/var&gt;. It examines the buffer visiting the named file, using the variables documented above in sequence, until it finds a match for one of the rules specified by these variables. It then returns a cons cell of the form &lt;code&gt;(&lt;var&gt;coding&lt;/var&gt; . &lt;var&gt;source&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;coding&lt;/var&gt; is the coding system to use and &lt;var&gt;source&lt;/var&gt; is a symbol, one of &lt;code&gt;auto-coding-alist&lt;/code&gt;, &lt;code&gt;auto-coding-regexp-alist&lt;/code&gt;, &lt;code&gt;:coding&lt;/code&gt;, or &lt;code&gt;auto-coding-functions&lt;/code&gt;, indicating which one supplied the matching rule. The value &lt;code&gt;:coding&lt;/code&gt; means the coding system was specified by the &lt;code&gt;coding:&lt;/code&gt; tag in the file (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Specify-Coding.html#Specify-Coding&quot;&gt;coding tag&lt;/a&gt; in</source>
          <target state="translated">This function tries to determine a suitable coding system for &lt;var&gt;filename&lt;/var&gt; . It examines the buffer visiting the named file, using the variables documented above in sequence, until it finds a match for one of the rules specified by these variables. It then returns a cons cell of the form &lt;code&gt;(&lt;var&gt;coding&lt;/var&gt; . &lt;var&gt;source&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;coding&lt;/var&gt; is the coding system to use and &lt;var&gt;source&lt;/var&gt; is a symbol, one of &lt;code&gt;auto-coding-alist&lt;/code&gt; , &lt;code&gt;auto-coding-regexp-alist&lt;/code&gt; , &lt;code&gt;:coding&lt;/code&gt; , or &lt;code&gt;auto-coding-functions&lt;/code&gt; , indicating which one supplied the matching rule. The value &lt;code&gt;:coding&lt;/code&gt; means the coding system was specified by the &lt;code&gt;coding:&lt;/code&gt; tag in the file (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Specify-Coding.html#Specify-Coding&quot;&gt;coding tag&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="c5c8e5bedd539699e9ac1d3f886ee5ccc002cd20" translate="yes" xml:space="preserve">
          <source>This function tries to determine a suitable coding system for &lt;var&gt;filename&lt;/var&gt;. It examines the buffer visiting the named file, using the variables documented above in sequence, until it finds a match for one of the rules specified by these variables. It then returns a cons cell of the form &lt;code&gt;(&lt;var&gt;coding&lt;/var&gt; . &lt;var&gt;source&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;coding&lt;/var&gt; is the coding system to use and &lt;var&gt;source&lt;/var&gt; is a symbol, one of &lt;code&gt;auto-coding-alist&lt;/code&gt;, &lt;code&gt;auto-coding-regexp-alist&lt;/code&gt;, &lt;code&gt;:coding&lt;/code&gt;, or &lt;code&gt;auto-coding-functions&lt;/code&gt;, indicating which one supplied the matching rule. The value &lt;code&gt;:coding&lt;/code&gt; means the coding system was specified by the &lt;code&gt;coding:&lt;/code&gt; tag in the file (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Specify-Coding.html#Specify-Coding&quot;&gt;coding tag&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d3c21b956e5305b485992993d4fa8cb2c00b94" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; at a location specified by &lt;var&gt;alist&lt;/var&gt;. For this purpose, &lt;var&gt;alist&lt;/var&gt; should contain a &lt;code&gt;direction&lt;/code&gt; entry whose value is one of &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;above&lt;/code&gt; (or &lt;code&gt;up&lt;/code&gt;), &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;below&lt;/code&gt; (or &lt;code&gt;down&lt;/code&gt;). Other values are usually interpreted as &lt;code&gt;below&lt;/code&gt;.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; at a location specified by &lt;var&gt;alist&lt;/var&gt; . For this purpose, &lt;var&gt;alist&lt;/var&gt; should contain a &lt;code&gt;direction&lt;/code&gt; entry whose value is one of &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;above&lt;/code&gt; (or &lt;code&gt;up&lt;/code&gt; ), &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;below&lt;/code&gt; (or &lt;code&gt;down&lt;/code&gt; ). Other values are usually interpreted as &lt;code&gt;below&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16359c1241f769d5786f7e49ca6abe50fb64a7c7" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by choosing an existing window and displaying the buffer in that window. It can fail if all windows are dedicated to other buffers (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;).</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; by choosing an existing window and displaying the buffer in that window. It can fail if all windows are dedicated to other buffers (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a1f5805eb9f122fd8d225a2f9de528405b30b983" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a frame that meets a predicate (by default any frame other than the selected frame).</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a frame that meets a predicate (by default any frame other than the selected frame).</target>
        </trans-unit>
        <trans-unit id="8412a8065d8a055dfcb7ac837ea6d70076c1c538" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is already displaying it. Windows on the selected frame are preferred to windows on other frames.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is already displaying it. Windows on the selected frame are preferred to windows on other frames.</target>
        </trans-unit>
        <trans-unit id="2cc04374af94b0104430ba547edb5a026d1dfe8e" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is displaying a buffer in a given mode.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is displaying a buffer in a given mode.</target>
        </trans-unit>
        <trans-unit id="3bc0e8fac57bf562dfac0c627b407c346c91a217" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by splitting the largest or least recently-used window (usually located on the selected frame). It actually performs the split by calling the function specified by &lt;code&gt;split-window-preferred-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;).</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; by splitting the largest or least recently-used window (usually located on the selected frame). It actually performs the split by calling the function specified by &lt;code&gt;split-window-preferred-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="db7c34f74cd84db5056e9e631f376a6e75f0bf4a" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) of the selected frame, either reusing an existing child frame or by making a new one. If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;child-frame-parameters&lt;/code&gt; entry, the corresponding value is an alist of frame parameters to give the new frame. A &lt;code&gt;parent-frame&lt;/code&gt; parameter specifying the selected frame is provided by default. If the child frame should become the child of another frame, a corresponding entry must be added to &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) of the selected frame, either reusing an existing child frame or by making a new one. If &lt;var&gt;alist&lt;/var&gt; has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;child-frame-parameters&lt;/code&gt; entry, the corresponding value is an alist of frame parameters to give the new frame. A &lt;code&gt;parent-frame&lt;/code&gt; parameter specifying the selected frame is provided by default. If the child frame should become the child of another frame, a corresponding entry must be added to &lt;var&gt;alist&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="84b96441c8471492f51d49bb83e0ea12b7216510" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a new window that will be combined with an existing window to form an atomic window. If the existing window is already part of an atomic window, it adds the new window to that atomic window.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a new window that will be combined with an existing window to form an atomic window. If the existing window is already part of an atomic window, it adds the new window to that atomic window.</target>
        </trans-unit>
        <trans-unit id="8196c0e752557162a072276196961441d0edc105" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window at the bottom of the selected frame.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window at the bottom of the selected frame.</target>
        </trans-unit>
        <trans-unit id="6795d9ec8a53a35004568d02a0345bac27f98b4d" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window below the selected window. If there is a window below the selected one and that window already displays &lt;var&gt;buffer&lt;/var&gt;, it reuses that window.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window below the selected window. If there is a window below the selected one and that window already displays &lt;var&gt;buffer&lt;/var&gt; , it reuses that window.</target>
        </trans-unit>
        <trans-unit id="2fc7cb5b157ca8e5fd7dd2f9a6bcf6651eab8e05" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window where it was displayed previously.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window where it was displayed previously.</target>
        </trans-unit>
        <trans-unit id="5a33527f3aebc46eaa9ca4905455ba32bccc9caa" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in the selected window. It fails if the selected window is a minibuffer window or is dedicated to another buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). It also fails if &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry.</source>
          <target state="translated">This function tries to display &lt;var&gt;buffer&lt;/var&gt; in the selected window. It fails if the selected window is a minibuffer window or is dedicated to another buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). It also fails if &lt;var&gt;alist&lt;/var&gt; has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; entry.</target>
        </trans-unit>
        <trans-unit id="0957da040de107e2b1b6c3ef5e08567a77ad9c26" translate="yes" xml:space="preserve">
          <source>This function tries to resize windows adjacent to the edge that is moved. If this is not possible for some reason (e.g., if that adjacent window is fixed-size), it may resize other windows.</source>
          <target state="translated">This function tries to resize windows adjacent to the edge that is moved. If this is not possible for some reason (e.g., if that adjacent window is fixed-size), it may resize other windows.</target>
        </trans-unit>
        <trans-unit id="a77658bc899a49ec26ec09bf59f8efb85c20c633" translate="yes" xml:space="preserve">
          <source>This function tries to return a relative name that is equivalent to &lt;var&gt;filename&lt;/var&gt;, assuming the result will be interpreted relative to &lt;var&gt;directory&lt;/var&gt; (an absolute directory name or directory file name). If &lt;var&gt;directory&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer&amp;rsquo;s default directory.</source>
          <target state="translated">This function tries to return a relative name that is equivalent to &lt;var&gt;filename&lt;/var&gt; , assuming the result will be interpreted relative to &lt;var&gt;directory&lt;/var&gt; (an absolute directory name or directory file name). If &lt;var&gt;directory&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the current buffer&amp;rsquo;s default directory.</target>
        </trans-unit>
        <trans-unit id="f958e66d372ec015745e5022dd2f4c7f0dd09230" translate="yes" xml:space="preserve">
          <source>This function tries to split &lt;var&gt;window&lt;/var&gt; and return the newly created window. If &lt;var&gt;window&lt;/var&gt; cannot be split, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">This function tries to split &lt;var&gt;window&lt;/var&gt; and return the newly created window. If &lt;var&gt;window&lt;/var&gt; cannot be split, it returns &lt;code&gt;nil&lt;/code&gt; . If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to the selected window.</target>
        </trans-unit>
        <trans-unit id="62277f2e85da796456a779d7b57a9626e62eade0" translate="yes" xml:space="preserve">
          <source>This function undefines all the abbrevs in &lt;var&gt;abbrev-table&lt;/var&gt;, leaving it empty.</source>
          <target state="translated">This function undefines all the abbrevs in &lt;var&gt;abbrev-table&lt;/var&gt; , leaving it empty.</target>
        </trans-unit>
        <trans-unit id="ba452830bd8d706054923bd3e8875be107b08977" translate="yes" xml:space="preserve">
          <source>This function undoes the effect of &lt;code&gt;debug-on-entry&lt;/code&gt; on &lt;var&gt;function-name&lt;/var&gt;. When called interactively, it prompts for &lt;var&gt;function-name&lt;/var&gt; in the minibuffer. If &lt;var&gt;function-name&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it cancels break-on-entry for all functions. Calling &lt;code&gt;cancel-debug-on-entry&lt;/code&gt; does nothing to a function which is not currently set up to break on entry.</source>
          <target state="translated">This function undoes the effect of &lt;code&gt;debug-on-entry&lt;/code&gt; on &lt;var&gt;function-name&lt;/var&gt; . When called interactively, it prompts for &lt;var&gt;function-name&lt;/var&gt; in the minibuffer. If &lt;var&gt;function-name&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it cancels break-on-entry for all functions. Calling &lt;code&gt;cancel-debug-on-entry&lt;/code&gt; does nothing to a function which is not currently set up to break on entry.</target>
        </trans-unit>
        <trans-unit id="d15af1eab01cc544378c9d97e1a49ce36285a8f6" translate="yes" xml:space="preserve">
          <source>This function undoes the effect of &lt;code&gt;debug-on-variable-change&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt;. When called interactively, it prompts for &lt;var&gt;variable&lt;/var&gt; in the minibuffer. If &lt;var&gt;variable&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it cancels break-on-change for all variables. Calling &lt;code&gt;cancel-debug-on-variable-change&lt;/code&gt; does nothing to a variable which is not currently set up to break on change.</source>
          <target state="translated">This function undoes the effect of &lt;code&gt;debug-on-variable-change&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt; . When called interactively, it prompts for &lt;var&gt;variable&lt;/var&gt; in the minibuffer. If &lt;var&gt;variable&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , it cancels break-on-change for all variables. Calling &lt;code&gt;cancel-debug-on-variable-change&lt;/code&gt; does nothing to a variable which is not currently set up to break on change.</target>
        </trans-unit>
        <trans-unit id="b9b040e232da8637c2a97347f045caa8ed4ce96d" translate="yes" xml:space="preserve">
          <source>This function unlocks the file being visited in the current buffer, if the buffer is modified. If the buffer is not modified, then the file should not be locked, so this function does nothing. It also does nothing if the current buffer is not visiting a file, or is not locked.</source>
          <target state="translated">This function unlocks the file being visited in the current buffer, if the buffer is modified. If the buffer is not modified, then the file should not be locked, so this function does nothing. It also does nothing if the current buffer is not visiting a file, or is not locked.</target>
        </trans-unit>
        <trans-unit id="9cf5017363459e788210546e832bb7be24c1e148" translate="yes" xml:space="preserve">
          <source>This function unpacks data from the unibyte string or byte array &lt;code&gt;bindat-raw&lt;/code&gt; according to &lt;var&gt;spec&lt;/var&gt;. Normally, this starts unpacking at the beginning of the byte array, but if &lt;var&gt;bindat-idx&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a zero-based starting position to use instead.</source>
          <target state="translated">This function unpacks data from the unibyte string or byte array &lt;code&gt;bindat-raw&lt;/code&gt; according to &lt;var&gt;spec&lt;/var&gt; . Normally, this starts unpacking at the beginning of the byte array, but if &lt;var&gt;bindat-idx&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it specifies a zero-based starting position to use instead.</target>
        </trans-unit>
        <trans-unit id="db0871a0f9eae053d05fefe7a89eb225cb481f26" translate="yes" xml:space="preserve">
          <source>This function updates the buffer&amp;rsquo;s record of the last modification time of the visited file, to the value specified by &lt;var&gt;time&lt;/var&gt; if &lt;var&gt;time&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;, and otherwise to the last modification time of the visited file.</source>
          <target state="translated">This function updates the buffer&amp;rsquo;s record of the last modification time of the visited file, to the value specified by &lt;var&gt;time&lt;/var&gt; if &lt;var&gt;time&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt; , and otherwise to the last modification time of the visited file.</target>
        </trans-unit>
        <trans-unit id="b496643d69b6fb9f8d5a4ffc179c7accc7082abd" translate="yes" xml:space="preserve">
          <source>This function updates the cross reference data in the</source>
          <target state="translated">This function updates the cross reference data in the</target>
        </trans-unit>
        <trans-unit id="83252f52748782b59d699b18a2ad0d2736e606ce" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-color-defined-p&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">This function used to be called &lt;code&gt;x-color-defined-p&lt;/code&gt; , and that name is still supported as an alias.</target>
        </trans-unit>
        <trans-unit id="c674e23234b420eea66e8cb46b0db0cfc9cda0ad" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-color-values&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">This function used to be called &lt;code&gt;x-color-values&lt;/code&gt; , and that name is still supported as an alias.</target>
        </trans-unit>
        <trans-unit id="4f1164bde1bddbc301accaa26b8d796fa8f9f49f" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-defined-colors&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">This function used to be called &lt;code&gt;x-defined-colors&lt;/code&gt; , and that name is still supported as an alias.</target>
        </trans-unit>
        <trans-unit id="357b8baff8633266c25e29586c524324d26327a3" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;completion-regexp-list&lt;/code&gt; in the same way that &lt;code&gt;try-completion&lt;/code&gt; does.</source>
          <target state="translated">This function uses &lt;code&gt;completion-regexp-list&lt;/code&gt; in the same way that &lt;code&gt;try-completion&lt;/code&gt; does.</target>
        </trans-unit>
        <trans-unit id="2bc19944ff338237a3addd5825fd961ef80a9925" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;minibuffer-local-shell-command-map&lt;/code&gt; as the keymap for minibuffer input. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list to use; if is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;shell-command-history&lt;/code&gt; (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;shell-command-history&lt;/a&gt;). The optional argument &lt;var&gt;initial&lt;/var&gt; specifies the initial content of the minibuffer (see &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;). The rest of &lt;var&gt;args&lt;/var&gt;, if present, are used as the &lt;var&gt;default&lt;/var&gt; and &lt;var&gt;inherit-input-method&lt;/var&gt; arguments in &lt;code&gt;read-from-minibuffer&lt;/code&gt; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</source>
          <target state="translated">This function uses &lt;code&gt;minibuffer-local-shell-command-map&lt;/code&gt; as the keymap for minibuffer input. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list to use; if is omitted or &lt;code&gt;nil&lt;/code&gt; , it defaults to &lt;code&gt;shell-command-history&lt;/code&gt; (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;shell-command-history&lt;/a&gt;). The optional argument &lt;var&gt;initial&lt;/var&gt; specifies the initial content of the minibuffer (see &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;). The rest of &lt;var&gt;args&lt;/var&gt; , if present, are used as the &lt;var&gt;default&lt;/var&gt; and &lt;var&gt;inherit-input-method&lt;/var&gt; arguments in &lt;code&gt;read-from-minibuffer&lt;/code&gt; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="b5a6b376f87beee7f24ad9d483479685f39a4d98" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;read-key&lt;/code&gt; to read and return a single character. It ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt;, a list of accepted characters. Optionally, it will also ignore keyboard-quit events while it is waiting for valid input. If you bind &lt;code&gt;help-form&lt;/code&gt; (see &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;) to a non-&lt;code&gt;nil&lt;/code&gt; value while calling &lt;code&gt;read-char-choice&lt;/code&gt;, then pressing &lt;code&gt;help-char&lt;/code&gt; causes it to evaluate &lt;code&gt;help-form&lt;/code&gt; and display the result. It then continues to wait for a valid input character, or keyboard-quit.</source>
          <target state="translated">This function uses &lt;code&gt;read-key&lt;/code&gt; to read and return a single character. It ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt; , a list of accepted characters. Optionally, it will also ignore keyboard-quit events while it is waiting for valid input. If you bind &lt;code&gt;help-form&lt;/code&gt; (see &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;) to a non- &lt;code&gt;nil&lt;/code&gt; value while calling &lt;code&gt;read-char-choice&lt;/code&gt; , then pressing &lt;code&gt;help-char&lt;/code&gt; causes it to evaluate &lt;code&gt;help-form&lt;/code&gt; and display the result. It then continues to wait for a valid input character, or keyboard-quit.</target>
        </trans-unit>
        <trans-unit id="b1749d72cf03b7c1f511808903fa3ab3b06ad267" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;replace-match&lt;/code&gt; to do the replacement, and it passes the optional arguments &lt;var&gt;fixedcase&lt;/var&gt;, &lt;var&gt;literal&lt;/var&gt; and &lt;var&gt;subexp&lt;/var&gt; along to &lt;code&gt;replace-match&lt;/code&gt;.</source>
          <target state="translated">This function uses &lt;code&gt;replace-match&lt;/code&gt; to do the replacement, and it passes the optional arguments &lt;var&gt;fixedcase&lt;/var&gt; , &lt;var&gt;literal&lt;/var&gt; and &lt;var&gt;subexp&lt;/var&gt; along to &lt;code&gt;replace-match&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa17e8da855b187a35c221791374fd3be2279ca6" translate="yes" xml:space="preserve">
          <source>This function uses one of two functions to search for the next occurrence of &lt;var&gt;from-string&lt;/var&gt;. These functions are specified by the values of two variables: &lt;code&gt;replace-re-search-function&lt;/code&gt; and &lt;code&gt;replace-search-function&lt;/code&gt;. The former is called when the argument &lt;var&gt;regexp-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the latter when it is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function uses one of two functions to search for the next occurrence of &lt;var&gt;from-string&lt;/var&gt; . These functions are specified by the values of two variables: &lt;code&gt;replace-re-search-function&lt;/code&gt; and &lt;code&gt;replace-search-function&lt;/code&gt; . The former is called when the argument &lt;var&gt;regexp-flag&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the latter when it is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32fb46b1bff0b78843f14be0f794e31cefa0dec3" translate="yes" xml:space="preserve">
          <source>This function uses the C library function &lt;code&gt;strftime&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Formatting-Calendar-Time.html#Formatting-Calendar-Time&quot;&gt;Formatting Calendar Time&lt;/a&gt; in</source>
          <target state="translated">This function uses the C library function &lt;code&gt;strftime&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Formatting-Calendar-Time.html#Formatting-Calendar-Time&quot;&gt;Formatting Calendar Time&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="e0b927872089c90489b0e5d3db0e4c6477ab817e" translate="yes" xml:space="preserve">
          <source>This function uses the C library function &lt;code&gt;strftime&lt;/code&gt; (see &lt;a href=&quot;https://www.gnu.org/software/libc/manual/html_node/Formatting-Calendar-Time.html#Formatting-Calendar-Time&quot;&gt;Formatting Calendar Time&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d8d6409993365bd35302a047f685e5bb577b8b" translate="yes" xml:space="preserve">
          <source>This function uses the minibuffer to read and return a single character. Optionally, it ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt;, a list of accepted characters. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list symbol to use; if it is omitted or &lt;code&gt;nil&lt;/code&gt;, this function doesn&amp;rsquo;t use the history.</source>
          <target state="translated">This function uses the minibuffer to read and return a single character. Optionally, it ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt; , a list of accepted characters. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list symbol to use; if it is omitted or &lt;code&gt;nil&lt;/code&gt; , this function doesn&amp;rsquo;t use the history.</target>
        </trans-unit>
        <trans-unit id="412674ef9e8f74b9c857d3838d7d370dc1e1e19c" translate="yes" xml:space="preserve">
          <source>This function warps the mouse like &lt;code&gt;set-mouse-position&lt;/code&gt; except that &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are in units of pixels rather than units of characters.</source>
          <target state="translated">This function warps the mouse like &lt;code&gt;set-mouse-position&lt;/code&gt; except that &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are in units of pixels rather than units of characters.</target>
        </trans-unit>
        <trans-unit id="c8ee4b71d2d67c57c6a2540c373498cb26883da4" translate="yes" xml:space="preserve">
          <source>This function will normally skip directories, so if you want it to find directories, make sure the &lt;var&gt;predicate&lt;/var&gt; function returns &lt;code&gt;dir-ok&lt;/code&gt; for them. For example:</source>
          <target state="translated">This function will normally skip directories, so if you want it to find directories, make sure the &lt;var&gt;predicate&lt;/var&gt; function returns &lt;code&gt;dir-ok&lt;/code&gt; for them. For example:</target>
        </trans-unit>
        <trans-unit id="59714ca8611c4a6a7e76698da9144596c934dfbf" translate="yes" xml:space="preserve">
          <source>This function will tell you whether a &lt;var&gt;process&lt;/var&gt;, which must not be a connection but a real subprocess, has given control of its terminal to a child process of its own. If this is true, the function returns the numeric ID of the foreground process group of &lt;var&gt;process&lt;/var&gt;; it returns &lt;code&gt;nil&lt;/code&gt; if Emacs can be certain that this is not so. The value is &lt;code&gt;t&lt;/code&gt; if Emacs cannot tell whether this is true. This function signals an error if &lt;var&gt;process&lt;/var&gt; is a network, serial, or pipe connection, or is the subprocess is not active.</source>
          <target state="translated">This function will tell you whether a &lt;var&gt;process&lt;/var&gt; , which must not be a connection but a real subprocess, has given control of its terminal to a child process of its own. If this is true, the function returns the numeric ID of the foreground process group of &lt;var&gt;process&lt;/var&gt; ; it returns &lt;code&gt;nil&lt;/code&gt; if Emacs can be certain that this is not so. The value is &lt;code&gt;t&lt;/code&gt; if Emacs cannot tell whether this is true. This function signals an error if &lt;var&gt;process&lt;/var&gt; is a network, serial, or pipe connection, or is the subprocess is not active.</target>
        </trans-unit>
        <trans-unit id="927d5cb8c138b67a9e94c33cd010d79946a06b7a" translate="yes" xml:space="preserve">
          <source>This function will try to delete &lt;var&gt;window&lt;/var&gt; if and only if (1) the first element of its &lt;code&gt;quit-restore&lt;/code&gt; parameter is either &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;frame&lt;/code&gt;, (2) the window has no history of previously-displayed buffers and (3) the fourth element of the &lt;code&gt;quit-restore&lt;/code&gt; parameter specifies the buffer currently displayed in &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), it will try to delete the root of that atomic window instead. In either case, it tries to avoid signaling an error when &lt;var&gt;window&lt;/var&gt; cannot be deleted.</source>
          <target state="translated">This function will try to delete &lt;var&gt;window&lt;/var&gt; if and only if (1) the first element of its &lt;code&gt;quit-restore&lt;/code&gt; parameter is either &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;frame&lt;/code&gt; , (2) the window has no history of previously-displayed buffers and (3) the fourth element of the &lt;code&gt;quit-restore&lt;/code&gt; parameter specifies the buffer currently displayed in &lt;var&gt;window&lt;/var&gt; . If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), it will try to delete the root of that atomic window instead. In either case, it tries to avoid signaling an error when &lt;var&gt;window&lt;/var&gt; cannot be deleted.</target>
        </trans-unit>
        <trans-unit id="377e25bd4af565486ae27cd15a6ba6040034c3e2" translate="yes" xml:space="preserve">
          <source>This function works by adding and removing &lt;var&gt;keymap&lt;/var&gt; from the variable &lt;code&gt;overriding-terminal-local-map&lt;/code&gt;, which takes precedence over all other active keymaps (see &lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;Searching Keymaps&lt;/a&gt;).</source>
          <target state="translated">This function works by adding and removing &lt;var&gt;keymap&lt;/var&gt; from the variable &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; , which takes precedence over all other active keymaps (see &lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;Searching Keymaps&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="046c68f4f8923b49584148b0455a8183b768181f" translate="yes" xml:space="preserve">
          <source>This function works by calling &lt;code&gt;call-process&lt;/code&gt;, so program output is decoded in the same way as for &lt;code&gt;call-process&lt;/code&gt;.</source>
          <target state="translated">This function works by calling &lt;code&gt;call-process&lt;/code&gt; , so program output is decoded in the same way as for &lt;code&gt;call-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11a9c6584081a09b4de9292967ee0b9074a875cd" translate="yes" xml:space="preserve">
          <source>This function works by calling the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function:</source>
          <target state="translated">This function works by calling the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function:</target>
        </trans-unit>
        <trans-unit id="e144c825c6f2bacdf9f3d3d89e1cb3a4413ae936" translate="yes" xml:space="preserve">
          <source>This function works by walking the alist stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt; and applying each local variable in turn. It calls &lt;code&gt;before-hack-local-variables-hook&lt;/code&gt; and &lt;code&gt;hack-local-variables-hook&lt;/code&gt; before and after applying the variables, respectively. It only calls the before-hook if the alist is non-&lt;code&gt;nil&lt;/code&gt;; it always calls the other hook. This function ignores a &amp;lsquo;</source>
          <target state="translated">This function works by walking the alist stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt; and applying each local variable in turn. It calls &lt;code&gt;before-hack-local-variables-hook&lt;/code&gt; and &lt;code&gt;hack-local-variables-hook&lt;/code&gt; before and after applying the variables, respectively. It only calls the before-hook if the alist is non- &lt;code&gt;nil&lt;/code&gt; ; it always calls the other hook. This function ignores a &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="97e8d180f6870c8d1176eae52e480e7c456dcf24" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;assoc&lt;/code&gt;, except that &lt;var&gt;key&lt;/var&gt; must be a string or symbol, and comparison is done using &lt;code&gt;compare-strings&lt;/code&gt;. Symbols are converted to strings before testing. If &lt;var&gt;case-fold&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;key&lt;/var&gt; and the elements of &lt;var&gt;alist&lt;/var&gt; are converted to upper-case before comparison. Unlike &lt;code&gt;assoc&lt;/code&gt;, this function can also match elements of the alist that are strings or symbols rather than conses. In particular, &lt;var&gt;alist&lt;/var&gt; can be a list of strings or symbols rather than an actual alist. See &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;.</source>
          <target state="translated">This function works like &lt;code&gt;assoc&lt;/code&gt; , except that &lt;var&gt;key&lt;/var&gt; must be a string or symbol, and comparison is done using &lt;code&gt;compare-strings&lt;/code&gt; . Symbols are converted to strings before testing. If &lt;var&gt;case-fold&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;key&lt;/var&gt; and the elements of &lt;var&gt;alist&lt;/var&gt; are converted to upper-case before comparison. Unlike &lt;code&gt;assoc&lt;/code&gt; , this function can also match elements of the alist that are strings or symbols rather than conses. In particular, &lt;var&gt;alist&lt;/var&gt; can be a list of strings or symbols rather than an actual alist. See &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c22c44c427f12fb995b62050100fa642c6dcfc58" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;funcall&lt;/code&gt; (see &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;), but it makes the call look like an interactive invocation: a call to &lt;code&gt;called-interactively-p&lt;/code&gt; inside &lt;var&gt;function&lt;/var&gt; will return &lt;code&gt;t&lt;/code&gt;. If &lt;var&gt;function&lt;/var&gt; is not a command, it is called without signaling an error.</source>
          <target state="translated">This function works like &lt;code&gt;funcall&lt;/code&gt; (see &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;), but it makes the call look like an interactive invocation: a call to &lt;code&gt;called-interactively-p&lt;/code&gt; inside &lt;var&gt;function&lt;/var&gt; will return &lt;code&gt;t&lt;/code&gt; . If &lt;var&gt;function&lt;/var&gt; is not a command, it is called without signaling an error.</target>
        </trans-unit>
        <trans-unit id="a92da63b837fc6e3dfb0506021d5ce7e67e43f9a" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;fundamental-mode&lt;/code&gt;, in that it kills all buffer-local variables, but it also records the major mode in effect, so that it could subsequently be restored. This function and &lt;code&gt;major-mode-restore&lt;/code&gt; (described next) are useful when you need to put a buffer under some specialized mode other than the one Emacs chooses for it automatically (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;), but would also like to be able to switch back to the original mode later.</source>
          <target state="translated">This function works like &lt;code&gt;fundamental-mode&lt;/code&gt; , in that it kills all buffer-local variables, but it also records the major mode in effect, so that it could subsequently be restored. This function and &lt;code&gt;major-mode-restore&lt;/code&gt; (described next) are useful when you need to put a buffer under some specialized mode other than the one Emacs chooses for it automatically (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;), but would also like to be able to switch back to the original mode later.</target>
        </trans-unit>
        <trans-unit id="9eaa9113d08e85a0341a522e2bd0ccc24f28f836" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;insert-file-contents&lt;/code&gt; except that it does not run &lt;code&gt;after-insert-file-functions&lt;/code&gt;, and does not do format decoding, character code conversion, automatic uncompression, and so on.</source>
          <target state="translated">This function works like &lt;code&gt;insert-file-contents&lt;/code&gt; except that it does not run &lt;code&gt;after-insert-file-functions&lt;/code&gt; , and does not do format decoding, character code conversion, automatic uncompression, and so on.</target>
        </trans-unit>
        <trans-unit id="a5fc3058747e77452887cefce371bd81bf71ed72" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;insert&lt;/code&gt;, except that it processes the text in &lt;var&gt;string&lt;/var&gt; according to the &lt;code&gt;yank-handler&lt;/code&gt; text property, as well as the variables &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt; (see below), before inserting the result into the current buffer.</source>
          <target state="translated">This function works like &lt;code&gt;insert&lt;/code&gt; , except that it processes the text in &lt;var&gt;string&lt;/var&gt; according to the &lt;code&gt;yank-handler&lt;/code&gt; text property, as well as the variables &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt; (see below), before inserting the result into the current buffer.</target>
        </trans-unit>
        <trans-unit id="0e98782712e5b5698ffe9fe3d962c1e8beaf60be" translate="yes" xml:space="preserve">
          <source>This function works only on the controlling terminal of the Emacs session; to relinquish control of other tty devices, use &lt;code&gt;suspend-tty&lt;/code&gt; (see below). If the Emacs session uses more than one terminal, you must delete the frames on all the other terminals before suspending Emacs, or this function signals an error. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">This function works only on the controlling terminal of the Emacs session; to relinquish control of other tty devices, use &lt;code&gt;suspend-tty&lt;/code&gt; (see below). If the Emacs session uses more than one terminal, you must delete the frames on all the other terminals before suspending Emacs, or this function signals an error. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5ff8ecf56302291134dca6ec8b90433cdb8868d3" translate="yes" xml:space="preserve">
          <source>This function works similar to &lt;code&gt;buffer-substring&lt;/code&gt; (see &lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;), but it prepends and appends to the copied text bidi directional control characters necessary to preserve the visual appearance of the text when it is inserted at another place. Optional argument &lt;var&gt;no-properties&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means remove the text properties from the copy of the text.</source>
          <target state="translated">This function works similar to &lt;code&gt;buffer-substring&lt;/code&gt; (see &lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;), but it prepends and appends to the copied text bidi directional control characters necessary to preserve the visual appearance of the text when it is inserted at another place. Optional argument &lt;var&gt;no-properties&lt;/var&gt; , if non- &lt;code&gt;nil&lt;/code&gt; , means remove the text properties from the copy of the text.</target>
        </trans-unit>
        <trans-unit id="b0834d836bf1dbadd83e82e2e3aac9edcaaaacb7" translate="yes" xml:space="preserve">
          <source>This function writes the current buffer into file &lt;var&gt;filename&lt;/var&gt;, makes the buffer visit that file, and marks it not modified. Then it renames the buffer based on &lt;var&gt;filename&lt;/var&gt;, appending a string like &amp;lsquo;</source>
          <target state="translated">This function writes the current buffer into file &lt;var&gt;filename&lt;/var&gt; , makes the buffer visit that file, and marks it not modified. Then it renames the buffer based on &lt;var&gt;filename&lt;/var&gt; , appending a string like &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="67140601dd6e6976d3cc21284b7dc5ba62488ce6" translate="yes" xml:space="preserve">
          <source>This function writes the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer into the file specified by &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">This function writes the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer into the file specified by &lt;var&gt;filename&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5eec5a148847215f6daa983cdd6dbbad37e0abe1" translate="yes" xml:space="preserve">
          <source>This function, when called from within the lexical body of a primary or an &lt;code&gt;:around&lt;/code&gt; auxiliary method, returns non-&lt;code&gt;nil&lt;/code&gt; if there is a next method to call.</source>
          <target state="translated">This function, when called from within the lexical body of a primary or an &lt;code&gt;:around&lt;/code&gt; auxiliary method, returns non- &lt;code&gt;nil&lt;/code&gt; if there is a next method to call.</target>
        </trans-unit>
        <trans-unit id="ecaddbd52cc2f447f7f4d8fd2be4f6a3445c4a60" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, extracts the integer value of &lt;var&gt;arg&lt;/var&gt;. The value of &lt;var&gt;arg&lt;/var&gt; must be an integer (fixnum or bignum). If &lt;var&gt;sign&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt;, it stores the sign of &lt;var&gt;arg&lt;/var&gt; (-1, 0, or +1) into &lt;code&gt;*sign&lt;/code&gt;. The magnitude is stored into &lt;var&gt;magnitude&lt;/var&gt; as follows. If &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;magnitude&lt;/var&gt; are both non-&lt;code&gt;NULL&lt;/code&gt;, then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;code&gt;*count&lt;/code&gt;&lt;code&gt;unsigned long&lt;/code&gt; elements. If &lt;var&gt;magnitude&lt;/var&gt; is large enough to hold the magnitude of &lt;var&gt;arg&lt;/var&gt;, then this function writes the magnitude into the &lt;var&gt;magnitude&lt;/var&gt; array in little-endian form, stores the number of array elements written into &lt;code&gt;*count&lt;/code&gt;, and returns &lt;code&gt;true&lt;/code&gt;. If &lt;var&gt;magnitude&lt;/var&gt; is not large enough, it stores the required array size into &lt;code&gt;*count&lt;/code&gt;, signals an error, and returns &lt;code&gt;false&lt;/code&gt;. If &lt;var&gt;count&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt; and &lt;var&gt;magnitude&lt;/var&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the function stores the required array size into &lt;code&gt;*count&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">This function, which is available since Emacs 27, extracts the integer value of &lt;var&gt;arg&lt;/var&gt; . The value of &lt;var&gt;arg&lt;/var&gt; must be an integer (fixnum or bignum). If &lt;var&gt;sign&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt; , it stores the sign of &lt;var&gt;arg&lt;/var&gt; (-1, 0, or +1) into &lt;code&gt;*sign&lt;/code&gt; . The magnitude is stored into &lt;var&gt;magnitude&lt;/var&gt; as follows. If &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;magnitude&lt;/var&gt; are both non- &lt;code&gt;NULL&lt;/code&gt; , then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;code&gt;*count&lt;/code&gt; &lt;code&gt;unsigned long&lt;/code&gt; elements. If &lt;var&gt;magnitude&lt;/var&gt; is large enough to hold the magnitude of &lt;var&gt;arg&lt;/var&gt; , then this function writes the magnitude into the &lt;var&gt;magnitude&lt;/var&gt; array in little-endian form, stores the number of array elements written into &lt;code&gt;*count&lt;/code&gt; , and returns &lt;code&gt;true&lt;/code&gt; . If &lt;var&gt;magnitude&lt;/var&gt; is not large enough, it stores the required array size into &lt;code&gt;*count&lt;/code&gt; , signals an error, and returns &lt;code&gt;false&lt;/code&gt; . If &lt;var&gt;count&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt; and &lt;var&gt;magnitude&lt;/var&gt; is &lt;code&gt;NULL&lt;/code&gt; , then the function stores the required array size into &lt;code&gt;*count&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6faac83d6eccae013ba28dbc157a4bf098657401" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, interprets &lt;var&gt;time&lt;/var&gt; as an Emacs Lisp time value and returns the corresponding &lt;code&gt;struct timespec&lt;/code&gt;. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. &lt;code&gt;struct timespec&lt;/code&gt; represents a timestamp with nanosecond precision. It has the following members:</source>
          <target state="translated">This function, which is available since Emacs 27, interprets &lt;var&gt;time&lt;/var&gt; as an Emacs Lisp time value and returns the corresponding &lt;code&gt;struct timespec&lt;/code&gt; . See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. &lt;code&gt;struct timespec&lt;/code&gt; represents a timestamp with nanosecond precision. It has the following members:</target>
        </trans-unit>
        <trans-unit id="d7a9ff9916af1c294cd4d519bbb6c454f3ed88da" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, takes a &lt;code&gt;struct
timespec&lt;/code&gt; argument &lt;var&gt;time&lt;/var&gt; and returns the corresponding Emacs timestamp as a pair &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt; . &lt;var&gt;hz&lt;/var&gt;)&lt;/code&gt;. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. The return value represents exactly the same timestamp as &lt;var&gt;time&lt;/var&gt;: all input values are representable, and there is never a loss of precision. &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_sec&lt;/code&gt; and &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be arbitrary values. In particular, there&amp;rsquo;s no requirement that &lt;var&gt;time&lt;/var&gt; be normalized. This means that &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be negative or larger than 999,999,999.</source>
          <target state="translated">This function, which is available since Emacs 27, takes a &lt;code&gt;struct timespec&lt;/code&gt; argument &lt;var&gt;time&lt;/var&gt; and returns the corresponding Emacs timestamp as a pair &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt; . &lt;var&gt;hz&lt;/var&gt;)&lt;/code&gt; . See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. The return value represents exactly the same timestamp as &lt;var&gt;time&lt;/var&gt; : all input values are representable, and there is never a loss of precision. &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_sec&lt;/code&gt; and &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be arbitrary values. In particular, there&amp;rsquo;s no requirement that &lt;var&gt;time&lt;/var&gt; be normalized. This means that &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be negative or larger than 999,999,999.</target>
        </trans-unit>
        <trans-unit id="1847b4c01dca1eeacaab5140ef27e18f81cc6670" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, takes an arbitrary-sized integer argument and returns a corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. The &lt;var&gt;sign&lt;/var&gt; argument gives the sign of the return value. If &lt;var&gt;sign&lt;/var&gt; is nonzero, then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;var&gt;count&lt;/var&gt; elements specifying the little-endian magnitude of the return value.</source>
          <target state="translated">This function, which is available since Emacs 27, takes an arbitrary-sized integer argument and returns a corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. The &lt;var&gt;sign&lt;/var&gt; argument gives the sign of the return value. If &lt;var&gt;sign&lt;/var&gt; is nonzero, then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;var&gt;count&lt;/var&gt; elements specifying the little-endian magnitude of the return value.</target>
        </trans-unit>
        <trans-unit id="a833cfd74bbb04febdde953baf2bd3532c6d904c" translate="yes" xml:space="preserve">
          <source>This functions returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window state change flag is set and &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">This functions returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; &amp;rsquo;s window state change flag is set and &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</target>
        </trans-unit>
        <trans-unit id="f3c7971b829a0cecba2092251d8f11a20e415670" translate="yes" xml:space="preserve">
          <source>This functions returns an amount of total system memory and how much of it is free. On an unsupported system, the value may be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This functions returns an amount of total system memory and how much of it is free. On an unsupported system, the value may be &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e42c67d4013b9ebcfd49ca97c2b842edf44a260" translate="yes" xml:space="preserve">
          <source>This functions returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt;. &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt; when it is either &lt;var&gt;descendant&lt;/var&gt;&amp;rsquo;s parent frame or it is an ancestor of &lt;var&gt;descendant&lt;/var&gt;&amp;rsquo;s parent frame. Both, &lt;var&gt;ancestor&lt;/var&gt; and &lt;var&gt;descendant&lt;/var&gt; must specify live frames.</source>
          <target state="translated">This functions returns non- &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt; . &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt; when it is either &lt;var&gt;descendant&lt;/var&gt; &amp;rsquo;s parent frame or it is an ancestor of &lt;var&gt;descendant&lt;/var&gt; &amp;rsquo;s parent frame. Both, &lt;var&gt;ancestor&lt;/var&gt; and &lt;var&gt;descendant&lt;/var&gt; must specify live frames.</target>
        </trans-unit>
        <trans-unit id="be38eb1c4dd9326eba12e874ba843b68c6f73850" translate="yes" xml:space="preserve">
          <source>This functions returns the root of the atomic window &lt;var&gt;window&lt;/var&gt; is a part of. The specified &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is not part of an atomic window.</source>
          <target state="translated">This functions returns the root of the atomic window &lt;var&gt;window&lt;/var&gt; is a part of. The specified &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is not part of an atomic window.</target>
        </trans-unit>
        <trans-unit id="9c94511ce5c269e923a9cf9867c9eb2d7be8025b" translate="yes" xml:space="preserve">
          <source>This functions returns the use time of window &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">This functions returns the use time of window &lt;var&gt;window&lt;/var&gt; . &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</target>
        </trans-unit>
        <trans-unit id="5e6e6d42bab460c31f6699b137ee982c58e94b4e" translate="yes" xml:space="preserve">
          <source>This gives a name to the advice, which &lt;code&gt;remove-function&lt;/code&gt; can use to identify which function to remove. Typically used when &lt;var&gt;function&lt;/var&gt; is an anonymous function.</source>
          <target state="translated">This gives a name to the advice, which &lt;code&gt;remove-function&lt;/code&gt; can use to identify which function to remove. Typically used when &lt;var&gt;function&lt;/var&gt; is an anonymous function.</target>
        </trans-unit>
        <trans-unit id="6eb3e727d20600ecf15f9bddabc9c7d3826bb7ed" translate="yes" xml:space="preserve">
          <source>This gives the module functions names so that Lisp code could call it by that name. We describe how to do this in &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt; below.</source>
          <target state="translated">This gives the module functions names so that Lisp code could call it by that name. We describe how to do this in &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt; below.</target>
        </trans-unit>
        <trans-unit id="362f5cec2c326a4848177c9c221e4f5d7042a16e" translate="yes" xml:space="preserve">
          <source>This has a locale-specific meaning. In the default locale (named &amp;lsquo;</source>
          <target state="translated">This has a locale-specific meaning. In the default locale (named &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="92b35c7b2fffe5bacfb3bd63a586a08286df761c" translate="yes" xml:space="preserve">
          <source>This has all the same advantages as putting the initialization inside the &lt;code&gt;defvar&lt;/code&gt;, except that you must type</source>
          <target state="translated">This has all the same advantages as putting the initialization inside the &lt;code&gt;defvar&lt;/code&gt; , except that you must type</target>
        </trans-unit>
        <trans-unit id="67f1db2792730aa31bf14981bf4c385fe7e347f1" translate="yes" xml:space="preserve">
          <source>This has the same value as &lt;code&gt;this-command&lt;/code&gt; except when command remapping occurs (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). In that case, &lt;code&gt;this-command&lt;/code&gt; gives the command actually run (the result of remapping), and &lt;code&gt;this-original-command&lt;/code&gt; gives the command that was specified to run but remapped into another command.</source>
          <target state="translated">This has the same value as &lt;code&gt;this-command&lt;/code&gt; except when command remapping occurs (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). In that case, &lt;code&gt;this-command&lt;/code&gt; gives the command actually run (the result of remapping), and &lt;code&gt;this-original-command&lt;/code&gt; gives the command that was specified to run but remapped into another command.</target>
        </trans-unit>
        <trans-unit id="40c881199f24c02215c7d793a78040dbbb53e0c7" translate="yes" xml:space="preserve">
          <source>This history list is actually a special case of minibuffer history (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), with one special twist: the elements are expressions rather than strings.</source>
          <target state="translated">This history list is actually a special case of minibuffer history (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), with one special twist: the elements are expressions rather than strings.</target>
        </trans-unit>
        <trans-unit id="8bcca11757ad5593baa86f3970bcb3a6003e7840" translate="yes" xml:space="preserve">
          <source>This holds the email address of the user who is using Emacs.</source>
          <target state="translated">이것은 Emacs를 사용하는 사용자의 이메일 주소를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="1d8bba7a7ee6a7b33a5138a9859c48441b52fdd9" translate="yes" xml:space="preserve">
          <source>This hook is also run when Emacs first enters the command loop (at which point &lt;code&gt;this-command&lt;/code&gt; and &lt;code&gt;last-command&lt;/code&gt; are both &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">이 후크는 Emacs가 처음 명령 루프에 들어갈 때도 실행됩니다 (이 시점에서 &lt;code&gt;this-command&lt;/code&gt; 와 &lt;code&gt;last-command&lt;/code&gt; 가 모두 &lt;code&gt;nil&lt;/code&gt; 입니다 ).</target>
        </trans-unit>
        <trans-unit id="abff04f1fc8b5a5670bcf5df4395d261f51d8643" translate="yes" xml:space="preserve">
          <source>This hook is run just before redisplay. It is called once in each window that is about to be redisplayed, with &lt;code&gt;current-buffer&lt;/code&gt; set to the buffer displayed in that window.</source>
          <target state="translated">이 후크는 다시 표시하기 직전에 실행됩니다. 다시 표시 될 각 창에서 한 번 호출되며 &lt;code&gt;current-buffer&lt;/code&gt; 버퍼는 해당 창에 표시된 버퍼로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c8d427de10ebc1d86ecdf97026f2ffdc370659b5" translate="yes" xml:space="preserve">
          <source>This hook is used for automatically assigning faces to text in the buffer. It is part of the implementation of Jit-Lock mode, used by Font-Lock.</source>
          <target state="translated">이 후크는 버퍼의 텍스트에 얼굴을 자동으로 할당하는 데 사용됩니다. Font-Lock에서 사용하는 Jit-Lock 모드 구현의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="0df53fd7768ddf8d6cf8226757bb41e09d4e965e" translate="yes" xml:space="preserve">
          <source>This hook specifies the functions that are run when an Emacs frame is moved (assigned a new position) by the window-system or window manager. The functions are run with one argument, the frame that moved. For a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), the functions are run only when the position of the frame changes in relation to that of its parent frame.</source>
          <target state="translated">이 후크는 창 시스템 또는 창 관리자에 의해 Emacs 프레임이 이동 (새 위치 지정) 될 때 실행되는 기능을 지정합니다. 함수는 하나의 인수, 즉 이동 한 프레임으로 실행됩니다. 아이 프레임 (참조 &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;아이 프레임을&lt;/a&gt; 프레임의 위치가 상위 프레임의 관련 변경하는 경우에만 기능이 실행됩니다).</target>
        </trans-unit>
        <trans-unit id="bca2ecc6b29b81e4da85f93160adc2cd1266f9f4" translate="yes" xml:space="preserve">
          <source>This identifier string can include a host name and a user name, as well as characters designating the method used to access the remote system. For example, the remote identifier string for the filename &lt;code&gt;/sudo::/some/file&lt;/code&gt; is &lt;code&gt;/sudo:root@localhost:&lt;/code&gt;.</source>
          <target state="translated">이 식별자 문자열에는 원격 시스템에 액세스하는 데 사용되는 방법을 지정하는 문자뿐만 아니라 호스트 이름과 사용자 이름이 포함될 수 있습니다. 예를 들어, 파일 이름 &lt;code&gt;/sudo::/some/file&lt;/code&gt; 의 원격 식별자 문자열 은 &lt;code&gt;/sudo:root@localhost:&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5f3704ace63c19c6746f28269631768748065f91" translate="yes" xml:space="preserve">
          <source>This imaginary special form implements a loop that executes the &lt;var&gt;body&lt;/var&gt; forms and then increments the variable &lt;var&gt;var&lt;/var&gt; on each iteration. On the first iteration, the variable has the value &lt;var&gt;from&lt;/var&gt;; on subsequent iterations, it is incremented by one (or by &lt;var&gt;inc&lt;/var&gt; if that is given). The loop exits before executing &lt;var&gt;body&lt;/var&gt; if &lt;var&gt;var&lt;/var&gt; equals &lt;var&gt;to&lt;/var&gt;. Here is an example:</source>
          <target state="translated">이 가상의 특수 양식은 &lt;var&gt;body&lt;/var&gt; 양식 을 실행 한 다음 각 반복 에서 변수 &lt;var&gt;var&lt;/var&gt; 를 증가 시키는 루프를 구현합니다 . 첫 번째 반복에서 변수의 값 &lt;var&gt;from&lt;/var&gt; ; 후속 반복에서는 1 씩 증가합니다 (또는 제공된 경우 &lt;var&gt;inc&lt;/var&gt; ). 루프 종료 실행하기 전에 &lt;var&gt;body&lt;/var&gt; 경우 &lt;var&gt;var&lt;/var&gt; 동일 &lt;var&gt;to&lt;/var&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2030f1153563e9a57018bf6725c74d3f6a5c6eba" translate="yes" xml:space="preserve">
          <source>This insert a button with the label &lt;var&gt;label&lt;/var&gt; at point, and returns it.</source>
          <target state="translated">레이블 &lt;var&gt;label&lt;/var&gt; 이있는 단추 를 지점에 삽입 하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="516ffb9f41d576630207d825fa1678bf965f0da0" translate="yes" xml:space="preserve">
          <source>This inserts &lt;var&gt;object&lt;/var&gt; into &lt;var&gt;ring&lt;/var&gt;, making it the newest element, and returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">이렇게하면 &lt;var&gt;object&lt;/var&gt; 가 &lt;var&gt;ring&lt;/var&gt; 에 삽입 되어 최신 요소가되고 &lt;var&gt;object&lt;/var&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e206d808989125d625a9c34521abd5c21cd7b7b5" translate="yes" xml:space="preserve">
          <source>This inserts &lt;var&gt;object&lt;/var&gt; into &lt;var&gt;ring&lt;/var&gt;, treating it as the oldest element. The return value is not significant.</source>
          <target state="translated">이렇게하면 &lt;var&gt;object&lt;/var&gt; 가 &lt;var&gt;ring&lt;/var&gt; 에 삽입 되어 가장 오래된 요소로 취급됩니다. 반환 값은 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81e970d901aca4a8592ed45c5fbed74f40774f4d" translate="yes" xml:space="preserve">
          <source>This inserts a button with the label &lt;var&gt;label&lt;/var&gt; at point, using text properties.</source>
          <target state="translated">그러면 텍스트 속성을 사용하여 레이블 &lt;var&gt;label&lt;/var&gt; 이있는 버튼이 포인트에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="956036dde35997f66fc9a54defc9c1de32e7d2c5" translate="yes" xml:space="preserve">
          <source>This is a &lt;em&gt;mouse position list&lt;/em&gt; specifying where the mouse click occurred; see below for details.</source>
          <target state="translated">이것은 마우스 클릭이 발생한 &lt;em&gt;위치를&lt;/em&gt; 지정 하는 &lt;em&gt;마우스 위치 목록입니다&lt;/em&gt; . 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d582e5067abdfe817383421e2918b0b7eb2ff332" translate="yes" xml:space="preserve">
          <source>This is a C variable name to use for a structure that holds the data for the subr object that represents the function in Lisp. This structure conveys the Lisp symbol name to the initialization routine that will create the symbol and store the subr object as its definition. By convention, this name is always &lt;var&gt;fname&lt;/var&gt; with &amp;lsquo;</source>
          <target state="translated">Lisp에서 함수를 나타내는 subr 객체에 대한 데이터를 보유하는 구조에 사용할 C 변수 이름입니다. 이 구조는 Lisp 기호 이름을 기호를 만들고 subr 개체를 정의로 저장하는 초기화 루틴에 전달합니다. 관례 &lt;var&gt;fname&lt;/var&gt; 이름은 항상 '</target>
        </trans-unit>
        <trans-unit id="81c4de4d1166a983cacedc98d34cede6ff7b0201" translate="yes" xml:space="preserve">
          <source>This is a comment-end sequence for &amp;ldquo;a&amp;rdquo; style, because the newline character does not have the &amp;lsquo;</source>
          <target state="translated">줄 바꿈 문자에 '가 없기 때문에 &quot;a&quot;스타일에 대한 주석 끝 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="7dcf689ef6eb6551f81813bfd663406e5ae5909d" translate="yes" xml:space="preserve">
          <source>This is a comment-end sequence for &amp;ldquo;b&amp;rdquo; style because the first character, &amp;lsquo;</source>
          <target state="translated">첫 번째 문자 인 '</target>
        </trans-unit>
        <trans-unit id="7ae79e218d6d77ea7782e63e93ac66c7a88be45f" translate="yes" xml:space="preserve">
          <source>This is a comment-start sequence for &amp;ldquo;a&amp;rdquo; style because the second character, &amp;lsquo;</source>
          <target state="translated">이것은 &quot;a&quot;스타일에 대한 주석 시작 시퀀스입니다. 두 번째 문자 '</target>
        </trans-unit>
        <trans-unit id="753d131ec0adef108b74b35fb4d5fc6c9faccf10" translate="yes" xml:space="preserve">
          <source>This is a comment-start sequence for &amp;ldquo;b&amp;rdquo; style because the second character, &amp;lsquo;</source>
          <target state="translated">이것은 &quot;b&quot;스타일에 대한 주석 시작 시퀀스입니다. 두 번째 문자 '</target>
        </trans-unit>
        <trans-unit id="59b9e7b3df7ee25f1623cf93ef398d724a34b0b3" translate="yes" xml:space="preserve">
          <source>This is a convenience command meant to be used when developing font locking for a mode, and should not be called from Lisp code. It recomputes all the relevant variables and then calls &lt;code&gt;font-lock-fontify-region&lt;/code&gt; on the entire buffer.</source>
          <target state="translated">모드에 대한 글꼴 잠금을 개발할 때 사용되는 편리한 명령이며 Lisp 코드에서 호출하면 안됩니다. 모든 관련 변수를 다시 계산 한 다음 전체 버퍼에서 &lt;code&gt;font-lock-fontify-region&lt;/code&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="052d58146383e43862a05d4d9186d400bf0eff60" translate="yes" xml:space="preserve">
          <source>This is a convenience macro that works the same way as &lt;code&gt;dotimes&lt;/code&gt; does, but also reports loop progress using the functions described above. It allows you to save some typing. The argument &lt;var&gt;reporter-or-message&lt;/var&gt; can be either a string or a progress reporter object.</source>
          <target state="translated">이것은 &lt;code&gt;dotimes&lt;/code&gt; 와 동일한 방식으로 작동 하지만 위에서 설명한 함수를 사용하여 루프 진행률을보고 하는 편리한 매크로입니다 . 일부 타이핑을 저장할 수 있습니다. &lt;var&gt;reporter-or-message&lt;/var&gt; 인수 는 문자열 또는 진행보고자 개체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c0af3a6130d49db496a7a6745b82e5740854f18" translate="yes" xml:space="preserve">
          <source>This is a generalized variable (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;) that can be used to change a value with &lt;code&gt;setf&lt;/code&gt;. When using it to set a value, optional argument &lt;var&gt;remove&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to remove &lt;var&gt;key&lt;/var&gt;&amp;rsquo;s association from &lt;var&gt;alist&lt;/var&gt; if the new value is &lt;code&gt;eql&lt;/code&gt; to &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">이것은 일반화 된 변수 (참조 인 &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;일반화 변수&lt;/a&gt; 로 값을 변경하는데 사용될 수있다) &lt;code&gt;setf&lt;/code&gt; 의이 . 값을 설정하는 데 사용할 때 선택적 인수 &lt;var&gt;remove&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; 은 새 값이 &lt;code&gt;eql&lt;/code&gt; to &lt;var&gt;default&lt;/var&gt; 인 경우 &lt;var&gt;alist&lt;/var&gt; 에서 &lt;var&gt;key&lt;/var&gt; 연결 을 제거하는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="2b4191a6a518b773a7296edbd7c57a26cfe0fbad" translate="yes" xml:space="preserve">
          <source>This is a list of regular expressions. If a file has a name matching an element of this list, then it is not scanned for any form of file-local variable. For examples of why you might want to use this, see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;.</source>
          <target state="translated">정규식 목록입니다. 파일에이 목록의 요소와 일치하는 이름이있는 경우 파일 로컬 변수 형식에 대해 스캔되지 않습니다. 이것을 사용하려는 이유에 대한 예는 &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;자동 주요 모드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12b4398140878f6bd68245bb21c80f306e3982a4" translate="yes" xml:space="preserve">
          <source>This is a list of regular expressions. The completion functions only consider a completion acceptable if it matches all regular expressions in this list, with &lt;code&gt;case-fold-search&lt;/code&gt; (see &lt;a href=&quot;searching-and-case#Searching-and-Case&quot;&gt;Searching and Case&lt;/a&gt;) bound to the value of &lt;code&gt;completion-ignore-case&lt;/code&gt;.</source>
          <target state="translated">정규식 목록입니다. 완료 함수는이 목록의 모든 정규 표현식과 일치하는 경우에만 완료를 허용하는 것으로 간주하며 &lt;code&gt;case-fold-search&lt;/code&gt; ( &lt;a href=&quot;searching-and-case#Searching-and-Case&quot;&gt;Searching 및 Case&lt;/a&gt; 참조 )는 &lt;code&gt;completion-ignore-case&lt;/code&gt; 값에 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="52283f1e1d151bc990dba736688a582b7e3b30da" translate="yes" xml:space="preserve">
          <source>This is a list of suffixes indicating (compiled or source) Emacs Lisp files. It should not include the empty string. &lt;code&gt;load&lt;/code&gt; uses these suffixes in order when it appends Lisp suffixes to the specified file name. The standard value is &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; which produces the behavior described in the previous section.</source>
          <target state="translated">이것은 Emacs Lisp 파일 (컴파일 또는 소스)을 나타내는 접미사 목록입니다. 빈 문자열을 포함해서는 안됩니다. &lt;code&gt;load&lt;/code&gt; 는 지정된 파일 이름에 Lisp 접미사를 추가 할 때 이러한 접미사를 순서대로 사용합니다. 표준 값은 이전 섹션에서 설명한 동작을 생성하는 &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="10f331544ab235b9d5c7159edf27649dd51a4f4b" translate="yes" xml:space="preserve">
          <source>This is a list of suffixes that indicate representations of the same file. This list should normally start with the empty string. When &lt;code&gt;load&lt;/code&gt; searches for a file it appends the suffixes in this list, in order, to the file name, before searching for another file.</source>
          <target state="translated">이것은 동일한 파일의 표현을 나타내는 접미사 목록입니다. 이 목록은 일반적으로 빈 문자열로 시작해야합니다. &lt;code&gt;load&lt;/code&gt; 가 파일을 검색 할 때 다른 파일을 검색하기 전에 파일 이름에 순서대로이 목록의 접미사를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3352c91ea05e211996fe137d8629ef46a503b4a7" translate="yes" xml:space="preserve">
          <source>This is a list of symbols whose values are abbrev tables. &lt;code&gt;define-abbrev-table&lt;/code&gt; adds the new abbrev table name to this list.</source>
          <target state="translated">값이 축약 테이블 인 기호 목록입니다. &lt;code&gt;define-abbrev-table&lt;/code&gt; 은이 목록에 새 약어 테이블 이름을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="baeb56bbdacec64127820fef3bed4ca6d82941bf" translate="yes" xml:space="preserve">
          <source>This is a no-brainer for people working with multiple frames&amp;mdash;the frame showing the buffer will automatically raise and get focus unless an &lt;code&gt;inhibit-switch-frame&lt;/code&gt; entry forbids it. For single frame users this task can be considerably more difficult. In particular, &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; and &lt;code&gt;display-buffer-use-some-window&lt;/code&gt; can become obtrusive in this regard. They split or use a seemingly arbitrary (often the largest or least recently used) window, distracting the user&amp;rsquo;s attention.</source>
          <target state="translated">이는 여러 프레임으로 작업하는 사람들에게는 당연한 일입니다. 버퍼를 표시하는 &lt;code&gt;inhibit-switch-frame&lt;/code&gt; 은 금지 스위치 프레임 항목이 금지 하지 않는 한 자동으로 올라가고 초점을 맞 춥니 다. 단일 프레임 사용자의 경우이 작업이 훨씬 더 어려울 수 있습니다. 특히 &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; 및 &lt;code&gt;display-buffer-use-some-window&lt;/code&gt; 는 이와 관련하여 눈에 거슬리게 될 수 있습니다. 그들은 임의적으로 보이는 (종종 가장 크거나 가장 최근에 사용한) 창을 분할하거나 사용하여 사용자의주의를 산만하게합니다.</target>
        </trans-unit>
        <trans-unit id="38d85830663d07546ecb90e9b63ef75a9c042a1d" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;kill-buffer&lt;/code&gt; after asking all the questions it is going to ask, just before actually killing the buffer. The buffer to be killed is current when the hook functions run. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;. This variable is a permanent local, so its local binding is not cleared by changing major modes.</source>
          <target state="translated">이것은 실제로 버퍼를 죽이기 직전에 물어볼 모든 질문을 한 후 &lt;code&gt;kill-buffer&lt;/code&gt; 에 의해 실행되는 정상적인 후크 입니다. 종료 할 버퍼는 후크 함수가 실행될 때 최신 상태입니다. &lt;a href=&quot;hooks#Hooks&quot;&gt;후크를&lt;/a&gt; 참조하십시오 . 이 변수는 영구 로컬이므로 주요 모드를 변경해도 로컬 바인딩이 지워지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="805e61efe27710ed07f0182d61d7410acee4e80d" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;run-mode-hooks&lt;/code&gt;. It is run at the very end of every properly-written major mode command.</source>
          <target state="translated">이것은 &lt;code&gt;run-mode-hooks&lt;/code&gt; 에 의해 실행 되는 정상적인 후크 입니다. 올바르게 작성된 모든 주 모드 명령의 맨 끝에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="07bbaab22f46b3b504640becfed9adca0563313c" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;run-mode-hooks&lt;/code&gt;. It is run before the mode hooks.</source>
          <target state="translated">이것은 &lt;code&gt;run-mode-hooks&lt;/code&gt; 에 의해 실행 되는 정상적인 후크 입니다. 모드 후크 전에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6b2354afd15e7976df677686fe20cb5d7be48399" translate="yes" xml:space="preserve">
          <source>This is a normal hook run whenever the buffer list changes. Functions (implicitly) running this hook are &lt;code&gt;get-buffer-create&lt;/code&gt; (see &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;), &lt;code&gt;rename-buffer&lt;/code&gt; (see &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;Buffer Names&lt;/a&gt;), &lt;code&gt;kill-buffer&lt;/code&gt; (see &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;), &lt;code&gt;bury-buffer&lt;/code&gt; (see above) and &lt;code&gt;select-window&lt;/code&gt; (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;).</source>
          <target state="translated">이것은 버퍼 목록이 변경 될 때마다 실행되는 정상적인 후크입니다. 이 후크를 실행 기능 (암시 적)이다 &lt;code&gt;get-buffer-create&lt;/code&gt; (참조 &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;버퍼 만들기&lt;/a&gt; ), &lt;code&gt;rename-buffer&lt;/code&gt; (참조 &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;버퍼 이름&lt;/a&gt; ) &lt;code&gt;kill-buffer&lt;/code&gt; (참조 &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;버퍼를 죽이는&lt;/a&gt; ) &lt;code&gt;bury-buffer&lt;/code&gt; (위 참조) &lt;code&gt;select-window&lt;/code&gt; (참조 &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Windows 선택&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d638ccc079fda6d21d216451af722b5fc46a550" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run at the end of garbage collection. Garbage collection is inhibited while the hook functions run, so be careful writing them.</source>
          <target state="translated">이것은 가비지 콜렉션이 끝날 때 실행되는 정상적인 후크입니다. 후크 함수가 실행되는 동안 가비지 수집이 금지되므로 신중하게 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="a07c03922c741fbfe3e2813b9c6045e88aa95ee3" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run whenever the minibuffer is entered. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">이것은 미니 버퍼가 들어갈 때마다 실행되는 정상적인 후크입니다. &lt;a href=&quot;hooks#Hooks&quot;&gt;후크를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c3cc4019228e95b32d148b948e444f0763f87c1" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run whenever the minibuffer is exited. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">이것은 미니 버퍼가 종료 될 때마다 실행되는 정상적인 후크입니다. &lt;a href=&quot;hooks#Hooks&quot;&gt;후크를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86360e71edc42f07ab6de3f34505df6c33bb2b99" translate="yes" xml:space="preserve">
          <source>This is a normal hook which is run by the Emacs command loop, after &lt;code&gt;post-command-hook&lt;/code&gt;, in order to process and display delayed warnings.</source>
          <target state="translated">이것은 지연된 경고를 처리하고 표시하기 위해 &lt;code&gt;post-command-hook&lt;/code&gt; 이후 Emacs 명령 루프에 의해 실행되는 정상적인 후크입니다 .</target>
        </trans-unit>
        <trans-unit id="1950abbae5cc55f415241b94ad808d5c9cc564d2" translate="yes" xml:space="preserve">
          <source>This is a permanent local, so that changing the major mode does not lose its value. Major modes should not set this variable&amp;mdash;they should set &lt;code&gt;make-backup-files&lt;/code&gt; instead.</source>
          <target state="translated">이것은 영구적 인 로컬이므로 주 모드를 변경해도 값이 손실되지 않습니다. 주요 모드는이 변수를 설정해서는 안됩니다 . 대신에 &lt;code&gt;make-backup-files&lt;/code&gt; 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1d07872408457fb9d736d9fcefd8f6157086ae55" translate="yes" xml:space="preserve">
          <source>This is a raw data image format that describes the width, height, rowstride, whether there is an alpha channel, bits per sample, channels and image data, respectively.</source>
          <target state="translated">이것은 각각 알파 채널, 샘플 당 비트, 채널 및 이미지 데이터가 있는지 여부를 나타내는 너비, 높이, 행 스트라이드를 설명하는 원시 데이터 이미지 형식입니다.</target>
        </trans-unit>
        <trans-unit id="cec88e6c8ce0a5823382d342b71b9f3690ed5e70" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;function&lt;/code&gt;, see &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;function&lt;/code&gt; 대한 바로 가기입니다 . &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;익명 함수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c6e177bfc518fea9ec21fce671ef3a5268eab29" translate="yes" xml:space="preserve">
          <source>This is a simple menu item with help string &lt;var&gt;help-string&lt;/var&gt;.</source>
          <target state="translated">도움말 문자열 &lt;var&gt;help-string&lt;/var&gt; 이있는 간단한 메뉴 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="539993eac73cc0e0326d0ae7545c5c54b5ee6d9c" translate="yes" xml:space="preserve">
          <source>This is a simplified interface to the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function, and passes the value of the &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; keymap as the &lt;var&gt;keymap&lt;/var&gt; argument for that function. Since the keymap &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; does not rebind</source>
          <target state="translated">이것은 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 함수에 대한 단순화 된 인터페이스 이며 &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; 키맵 의 값 을 해당 함수 의 &lt;var&gt;keymap&lt;/var&gt; 인수로 전달합니다. keymap &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; 이 리 바인드되지 않기 때문에</target>
        </trans-unit>
        <trans-unit id="c1acce88ca7be96b6566b025ae7b3ea29fbe6b0b" translate="yes" xml:space="preserve">
          <source>This is a simplified interface to the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function:</source>
          <target state="translated">이것은 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 기능에 대한 단순화 된 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="af3f54f6a3480a921837c109f5e17463a352bc58" translate="yes" xml:space="preserve">
          <source>This is a sparse keymap that simply unbinds</source>
          <target state="translated">이것은 단순히 바인딩을 해제하는 희소 키맵입니다.</target>
        </trans-unit>
        <trans-unit id="5f72af18d4c43a811889768a82ca4a11d87bac2b" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;, which results from problems handling a compressed file. See &lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;How Programs Do Loading&lt;/a&gt;.</source>
          <target state="translated">이것은 압축 파일 처리 문제로 인해 발생하는 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . &lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;프로그램로드 방법을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9c215e0297777da007fdfe8487cbc205cb69db4" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;, which results from problems in accessing a remote file using ftp. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;Remote Files&lt;/a&gt; in</source>
          <target state="translated">이는 ftp를 사용하여 원격 파일에 액세스 할 때 발생하는 문제로 인해 발생하는 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . 참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;원격 파일&lt;/a&gt; 에서를</target>
        </trans-unit>
        <trans-unit id="a89f6cab466c7f64c1ebceaad7503361c4aa3210" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;, which results from problems in accessing a remote file using ftp. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;Remote Files&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d95a5005896f0fd6da23d493759199537edf7ff" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It happens, when a file could not be watched for changes. See &lt;a href=&quot;file-notifications#File-Notifications&quot;&gt;File Notifications&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . 파일의 변경 사항을 볼 수 없을 때 발생합니다. &lt;a href=&quot;file-notifications#File-Notifications&quot;&gt;파일 알림을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5c1feb94f04dd72015ac7e9f4bacc06c354aa43" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It occurs when &lt;code&gt;copy-file&lt;/code&gt; tries and fails to set the last-modification time of the output file. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . &lt;code&gt;copy-file&lt;/code&gt; 이 출력 파일의 마지막 수정 시간을 설정하려고 시도했지만 실패 할 때 발생 합니다. &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;파일 변경을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="39c246be12e23ec2c493d51bd423c192eded0867" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It occurs when an operation attempts to act on a file that is missing. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . 누락 된 파일에 대해 작업을 시도 할 때 발생합니다. &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;파일 변경을&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="a84e7250547b416754bf38c85e032217e9a75452" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . &lt;a href=&quot;file-locks#File-Locks&quot;&gt;파일 잠금을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26cf074c2ccf51b91710093c90c3f7bf290979d3" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;Modification Time&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;수정 시간을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb45b797ef4ee3e1d99242c5fc795eca8c133b81" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;file-error&lt;/code&gt; 의 하위 범주입니다 . &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;파일에 쓰기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9812da0e30c44ae24bdbfe2f7b2ecf6d2d527668" translate="yes" xml:space="preserve">
          <source>This is a symbol that indicates which mouse button was used. It is one of the symbols &lt;code&gt;mouse-1&lt;/code&gt;, &lt;code&gt;mouse-2&lt;/code&gt;, &amp;hellip;, where the buttons are numbered left to right.</source>
          <target state="translated">사용 된 마우스 버튼을 나타내는 기호입니다. 이 기호는 &lt;code&gt;mouse-1&lt;/code&gt; , &lt;code&gt;mouse-2&lt;/code&gt; ,&amp;hellip; 기호 중 하나이며 버튼은 왼쪽에서 오른쪽으로 번호가 매겨집니다.</target>
        </trans-unit>
        <trans-unit id="e07aa19d85daa49cb21be82f3483df4602aa009f" translate="yes" xml:space="preserve">
          <source>This is a synonym for &amp;lsquo;</source>
          <target state="translated">이것은 '의 동의어입니다.</target>
        </trans-unit>
        <trans-unit id="620906d35586347b4b396e9e011be9137f149b96" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;ding&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;ding&lt;/code&gt; 의 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="1199748624f884b6275d3b54f37b4f95836abf62" translate="yes" xml:space="preserve">
          <source>This is a variant of &lt;code&gt;if&lt;/code&gt; where there are no &lt;var&gt;else-forms&lt;/var&gt;, and possibly several &lt;var&gt;then-forms&lt;/var&gt;. In particular,</source>
          <target state="translated">이것은 &lt;var&gt;else-forms&lt;/var&gt; 가없는 &lt;code&gt;if&lt;/code&gt; 의 변형 이며 아마도 여러 &lt;var&gt;then-forms&lt;/var&gt; 입니다. 특히,</target>
        </trans-unit>
        <trans-unit id="3f02e69a78cba25101767a7e65d19970ee30a8c8" translate="yes" xml:space="preserve">
          <source>This is a variant of &lt;code&gt;if&lt;/code&gt; where there is no &lt;var&gt;then-form&lt;/var&gt;:</source>
          <target state="translated">이것은 &lt;var&gt;then-form&lt;/var&gt; 이없는 &lt;code&gt;if&lt;/code&gt; 의 변형입니다 .</target>
        </trans-unit>
        <trans-unit id="4145fac0510f8eb9ca2938306fb5319e1b852696" translate="yes" xml:space="preserve">
          <source>This is a version of &lt;code&gt;butlast&lt;/code&gt; that works by destructively modifying the &lt;code&gt;cdr&lt;/code&gt; of the appropriate element, rather than making a copy of the list.</source>
          <target state="translated">이것은 목록의 복사본을 만드는 대신 적절한 요소 의 &lt;code&gt;cdr&lt;/code&gt; 을 파괴적으로 수정하여 작동하는 &lt;code&gt;butlast&lt;/code&gt; 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="403a7d1032c2d6f47e966bab0c435f14226e15c0" translate="yes" xml:space="preserve">
          <source>This is a wrapper for &lt;code&gt;completion-table-dynamic&lt;/code&gt; that saves the last argument-result pair. This means that multiple lookups with the same argument only need to call &lt;var&gt;function&lt;/var&gt; once. This can be useful when a slow operation is involved, such as calling an external process.</source>
          <target state="translated">이것은 마지막 인수-결과 쌍을 저장하는 &lt;code&gt;completion-table-dynamic&lt;/code&gt; 래퍼입니다 . 즉, 동일한 인수를 사용하는 여러 조회는 &lt;var&gt;function&lt;/var&gt; 한 번만 호출 하면됩니다. 이는 외부 프로세스 호출과 같이 느린 작업이 관련 될 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ad9a8e226625c52c4ba5fceef61539d6720d143" translate="yes" xml:space="preserve">
          <source>This is allowed only immediately after a &lt;code&gt;yank&lt;/code&gt; or another &lt;code&gt;yank-pop&lt;/code&gt;. At such a time, the region contains text that was just inserted by yanking. &lt;code&gt;yank-pop&lt;/code&gt; deletes that text and inserts in its place a different piece of killed text. It does not add the deleted text to the kill ring, since it is already in the kill ring somewhere. It does however rotate the kill ring to place the newly yanked string at the front.</source>
          <target state="translated">이것은 &lt;code&gt;yank&lt;/code&gt; 또는 다른 &lt;code&gt;yank-pop&lt;/code&gt; 직후에만 허용됩니다 . 이때 영역에는 잡아 당겨서 방금 삽입 한 텍스트가 포함됩니다. &lt;code&gt;yank-pop&lt;/code&gt; 은 해당 텍스트를 삭제하고 그 자리에 다른 텍스트를 삽입합니다. 이미 킬 링 어딘가에 있기 때문에 삭제 된 텍스트를 킬 링에 추가하지 않습니다. 그러나 킬 링을 회전시켜 새로 잡아 당긴 줄을 앞쪽에 놓습니다.</target>
        </trans-unit>
        <trans-unit id="5891b52707f6e897eea5d5c669d27102b1004a4f" translate="yes" xml:space="preserve">
          <source>This is an Emacs face controlling how buttons of this type are displayed; by default this is the &lt;code&gt;button&lt;/code&gt; face.</source>
          <target state="translated">이 유형의 버튼이 표시되는 방식을 제어하는 ​​Emacs 얼굴입니다. 기본적으로 이것은 &lt;code&gt;button&lt;/code&gt; 페이스입니다.</target>
        </trans-unit>
        <trans-unit id="32b7ac28c78c48c0c1ceb24509c21a78cbe55429" translate="yes" xml:space="preserve">
          <source>This is an additional face which controls appearance during mouse-overs (merged with the usual button face); by default this is the usual Emacs &lt;code&gt;highlight&lt;/code&gt; face.</source>
          <target state="translated">이것은 마우스를 오버하는 동안 모양을 제어하는 ​​추가면입니다 (일반적인 단추면과 병합 됨). 기본적으로 이것은 일반적인 Emacs &lt;code&gt;highlight&lt;/code&gt; 페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5afa9b586ea9ca5fc144fe6d39eae28d297b8df8" translate="yes" xml:space="preserve">
          <source>This is an alist of dynamic libraries and external library files implementing them.</source>
          <target state="translated">이것은 동적 라이브러리 및이를 구현하는 외부 라이브러리 파일의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3eff5816e0cdb3e6f0a4663c990d1b91e8101b13" translate="yes" xml:space="preserve">
          <source>This is an alist specifying default values of frame parameters for all Emacs frames&amp;mdash;the first frame, and subsequent frames. When using the X Window System, you can get the same results by means of X resources in many cases.</source>
          <target state="translated">이것은 모든 Emacs 프레임 (첫 번째 프레임 및 후속 프레임)에 대한 프레임 매개 변수의 기본값을 지정하는 목록입니다. X Window System을 사용할 때 대부분의 경우 X 리소스를 통해 동일한 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a08ddd5a44ca86041fbb4541ee9d2d0a4d56813" translate="yes" xml:space="preserve">
          <source>This is an extensible undo item, which is undone by calling &lt;var&gt;funname&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">이는 확장 가능한 실행 취소 항목으로, 인수 &lt;var&gt;args&lt;/var&gt; 로 &lt;var&gt;funname&lt;/var&gt; 을 호출 하여 실행 취소됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d5230b0361e691994e1df15fe93fd93c1b9b7df" translate="yes" xml:space="preserve">
          <source>This is an extensible undo item, which records a change limited to the range &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;, which increased the size of the buffer by &lt;var&gt;delta&lt;/var&gt; characters. It is undone by calling &lt;var&gt;funname&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">확장 가능한 실행 취소 항목으로, &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; 범위로 제한된 변경 사항을 기록하여 &lt;var&gt;delta&lt;/var&gt; 문자 만큼 버퍼 크기를 늘 렸습니다 . 인수 &lt;var&gt;args&lt;/var&gt; 로 &lt;var&gt;funname&lt;/var&gt; 을 호출 하면 취소됩니다 .</target>
        </trans-unit>
        <trans-unit id="05829727f91e304bdb97c9ea1edc3248d4a08474" translate="yes" xml:space="preserve">
          <source>This is an interactive specification, a string such as might be used as the argument of &lt;code&gt;interactive&lt;/code&gt; in a Lisp function (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;). In the case of &lt;code&gt;or&lt;/code&gt;, it is &lt;code&gt;0&lt;/code&gt; (a null pointer), indicating that &lt;code&gt;or&lt;/code&gt; cannot be called interactively. A value of &lt;code&gt;&quot;&quot;&lt;/code&gt; indicates a function that should receive no arguments when called interactively. If the value begins with a &amp;lsquo;</source>
          <target state="translated">이것은 대화 형 사양 으로 Lisp 함수에서 &lt;code&gt;interactive&lt;/code&gt; 의 인수로 사용될 수있는 문자열입니다 ( &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;대화 형 사용&lt;/a&gt; 참조 ). 의 경우 &lt;code&gt;or&lt;/code&gt; , 그것 인 &lt;code&gt;0&lt;/code&gt; 을 나타내는 (NULL 포인터) &lt;code&gt;or&lt;/code&gt; 대화 형이라 할 수 없다. &lt;code&gt;&quot;&quot;&lt;/code&gt; 값은 대화식으로 호출 될 때 인수를받지 않아야하는 함수를 나타냅니다. 값이 '로 시작하는 경우</target>
        </trans-unit>
        <trans-unit id="84fc6d55ee48e8d014d448e4863ba7e73c412c01" translate="yes" xml:space="preserve">
          <source>This is an unsigned integer type, used as the element type for the magnitude arrays for the big integer conversion functions. The type is guaranteed to have unique object representations, i.e., no padding bits.</source>
          <target state="translated">이것은 큰 정수 변환 함수에 대한 크기 배열의 요소 유형으로 사용되는 부호없는 정수 유형입니다. 유형은 고유 한 객체 표현을 갖도록 보장됩니다. 즉, 패딩 비트가 없습니다.</target>
        </trans-unit>
        <trans-unit id="132dc00444b133cbc6f506c8039288020aaabf46" translate="yes" xml:space="preserve">
          <source>This is another convenience macro that works the same way as &lt;code&gt;dolist&lt;/code&gt; does, but also reports loop progress using the functions described above. As in &lt;code&gt;dotimes-with-progress-reporter&lt;/code&gt;, &lt;code&gt;reporter-or-message&lt;/code&gt; can be a progress reporter or a string. You can rewrite the previous example with this macro as follows:</source>
          <target state="translated">이것은 &lt;code&gt;dolist&lt;/code&gt; 와 동일한 방식으로 작동 하지만 위에서 설명한 함수를 사용하여 루프 진행 상황을보고 하는 또 다른 편리한 매크로입니다 . &lt;code&gt;dotimes-with-progress-reporter&lt;/code&gt; 에서 와 같이 &lt;code&gt;reporter-or-message&lt;/code&gt; 는 진행보고자 또는 문자열 일 수 있습니다. 다음과 같이이 매크로를 사용하여 이전 예제를 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8c60d4e1ad0cedd5e25dc2bfc92f663416bd656" translate="yes" xml:space="preserve">
          <source>This is another name for &lt;code&gt;set-marker&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;set-marker&lt;/code&gt; 의 또 다른 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="10a3f71d2fd56ea0b16ec0616246367064ad9f0f" translate="yes" xml:space="preserve">
          <source>This is computed as &lt;code&gt;z&lt;/code&gt; minus the buffer position of the last glyph in the current matrix of the window. The value is only valid if &lt;code&gt;window_end_valid&lt;/code&gt; is non-zero.</source>
          <target state="translated">이것은 &lt;code&gt;z&lt;/code&gt; 에서 창의 현재 행렬에있는 마지막 글리프의 버퍼 위치를 뺀 값 으로 계산됩니다 . 이 값은 &lt;code&gt;window_end_valid&lt;/code&gt; 가 0이 아닌 경우에만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="60ac1fd13d843b0faaaa408330eda9f9fe2bb405" translate="yes" xml:space="preserve">
          <source>This is convenient, if the meaning of a double click somehow builds on the meaning of a single click&amp;mdash;which is recommended user interface design practice for double clicks.</source>
          <target state="translated">더블 클릭의 의미가 한 번의 클릭의 의미를 기반으로한다면 이는 편리합니다. 이는 더블 클릭에 권장되는 사용자 인터페이스 디자인 방식입니다.</target>
        </trans-unit>
        <trans-unit id="0e75165bd6c0c435e57a13f622ac0560e9f8aea5" translate="yes" xml:space="preserve">
          <source>This is equivalent to</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="d3b4193b38de49e89a5720e5f1b85c4bfb6ca94a" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;init-value&lt;/var&gt; positionally.</source>
          <target state="translated">이것은 위치 적으로 &lt;var&gt;init-value&lt;/var&gt; 을 지정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d6ccd13378dfdbfee1da75331b690f9ccbb0ac31" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;keymap&lt;/var&gt; positionally.</source>
          <target state="translated">이것은 위치에 &lt;var&gt;keymap&lt;/var&gt; 을 지정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a4797cb24e0fd3906d4e5c7d3793c44e3acaa28d" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;lighter&lt;/var&gt; positionally.</source>
          <target state="translated">이것은 위치 적으로 &lt;var&gt;lighter&lt;/var&gt; 를 지정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="37f2c35875bb838f1536318b6c281a2cbff98557" translate="yes" xml:space="preserve">
          <source>This is exactly the same as &lt;code&gt;run-at-time&lt;/code&gt; (so see that definition for an explanation of the parameters; &lt;var&gt;secs&lt;/var&gt; is passed as &lt;var&gt;time&lt;/var&gt; to that function), but is meant to be used when the delay is specified in seconds.</source>
          <target state="translated">이는 &lt;code&gt;run-at-time&lt;/code&gt; 과 정확히 동일하지만 (매개 변수에 대한 설명은 해당 정의를 참조하십시오. &lt;var&gt;secs&lt;/var&gt; 는 해당 함수에 &lt;var&gt;time&lt;/var&gt; 으로 전달됨 ) 지연이 초 단위로 지정 될 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7372acff1de024d834cbce8756247354158e8aeb" translate="yes" xml:space="preserve">
          <source>This is for the sake of filesystems that have the concept of a superroot above the root directory</source>
          <target state="translated">이것은 루트 디렉토리 위에 수퍼 루트 개념이있는 파일 시스템을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="fd9bc2079ac2a71c6fcb711d2240e058b0676b89" translate="yes" xml:space="preserve">
          <source>This is just like &lt;code&gt;forward-char&lt;/code&gt; except that it moves in the opposite direction.</source>
          <target state="translated">이것은 반대 방향으로 움직이는 것을 제외하면 &lt;code&gt;forward-char&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="53415e6c148d53c51f1f9c7d0c90a8c057c564fa" translate="yes" xml:space="preserve">
          <source>This is just like &lt;code&gt;text-property-search-backward&lt;/code&gt;, but searches backward instead. Point is placed at the beginning of the matched region instead of the end, though.</source>
          <target state="translated">이것은 &lt;code&gt;text-property-search-backward&lt;/code&gt; 와 비슷하지만 대신 뒤로 검색합니다. 하지만 포인트는 끝이 아닌 일치하는 영역의 시작 부분에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="fa0e9b932e7b1979c715502e6765745bbb6b8fef" translate="yes" xml:space="preserve">
          <source>This is like &amp;lsquo;</source>
          <target state="translated">이것은 '</target>
        </trans-unit>
        <trans-unit id="99d08ba26d4c45172d07c3abbadf64c076ad5caf" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;buffer-substring&lt;/code&gt;, except that it does not copy text properties, just the characters themselves. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">이것은 텍스트 속성을 복사하지 않고 문자 자체 만 복사한다는 점을 제외하면 &lt;code&gt;buffer-substring&lt;/code&gt; 과 같습니다 . &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;텍스트 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e89667a9f313dde559c6df8e54fd3171dcc357d9" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;get-char-property&lt;/code&gt;, but gives extra information about the overlay that the property value comes from.</source>
          <target state="translated">이것은 &lt;code&gt;get-char-property&lt;/code&gt; 와 비슷하지만 속성 값이 나오는 오버레이에 대한 추가 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="436841bd131be24a48e32bd2750651d955f52ad5" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;get-file-buffer&lt;/code&gt;, except that it can return any buffer visiting the file &lt;em&gt;possibly under a different name&lt;/em&gt;. That is, the buffer&amp;rsquo;s &lt;code&gt;buffer-file-name&lt;/code&gt; does not need to match the expansion of &lt;var&gt;filename&lt;/var&gt; exactly, it only needs to refer to the same file. If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function of one argument, a buffer visiting &lt;var&gt;filename&lt;/var&gt;. The buffer is only considered a suitable return value if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. If it can not find a suitable buffer to return, &lt;code&gt;find-buffer-visiting&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;em&gt;다른 이름으로&lt;/em&gt; 파일을 방문하는 버퍼를 반환 할 수 있다는 점을 제외하면 &lt;code&gt;get-file-buffer&lt;/code&gt; 와 같습니다 . 버퍼의 것을 &lt;code&gt;buffer-file-name&lt;/code&gt; 의 확장과 일치 할 필요는 없습니다 &lt;var&gt;filename&lt;/var&gt; 정확하게, 그것은 단지 같은 파일을 참조 할 필요가있다. 경우에 &lt;var&gt;predicate&lt;/var&gt; 비이다 &lt;code&gt;nil&lt;/code&gt; , 그 하나의 인자 버퍼 방문의 함수이어야 &lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;predicate&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환하는 경우에만 버퍼가 적합한 반환 값으로 간주됩니다 . 반환 할 적절한 버퍼를 찾을 수없는 경우 &lt;code&gt;find-buffer-visiting&lt;/code&gt; 은 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dd79526444e25b1cfeecb5749e143d7022aa627" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;indent-rigidly&lt;/code&gt;, except that it doesn&amp;rsquo;t alter lines that start within strings or comments.</source>
          <target state="translated">이것은 문자열이나 주석 내에서 시작하는 줄을 변경하지 않는다는 점을 제외하면 &lt;code&gt;indent-rigidly&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="85b11594dda9bd84d7f6be1416908f106502654b" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;insert-buffer-substring&lt;/code&gt; except that it does not copy any text properties.</source>
          <target state="translated">이것은 텍스트 속성을 복사하지 않는다는 점을 제외하면 &lt;code&gt;insert-buffer-substring&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d43e97c14640b28935ae7739c8ef0412b5e02c36" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;looking-at&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">정규식 일치를 위해 POSIX 표준에 지정된 전체 역 추적을 수행한다는 점 &lt;code&gt;looking-at&lt;/code&gt; 제외하면 보는 것과 비슷 합니다.</target>
        </trans-unit>
        <trans-unit id="e186261242e430a5d913b4e01eb3d971cdf7ebb9" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;minibuffer-contents&lt;/code&gt;, except that it does not copy text properties, just the characters themselves. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">이것은 텍스트 속성을 복사하지 않고 문자 자체 만 복사한다는 점을 제외하면 &lt;code&gt;minibuffer-contents&lt;/code&gt; 와 같습니다 . &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;텍스트 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f224c0b5f7594edd8638ef5f71fbf09196363387" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-char-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward, and returns the minimum buffer position if no change is found.</source>
          <target state="translated">이것은 &lt;code&gt;next-char-property-change&lt;/code&gt; 와 비슷하지만 앞으로가 아닌 &lt;var&gt;pos&lt;/var&gt; 에서 다시 스캔 하고 변경 사항이 없으면 최소 버퍼 위치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f1c3592da81c9007bdce681edaf24baa510fe25c" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-property-change&lt;/code&gt; except that it considers overlay properties as well as text properties, and if no change is found before the end of the buffer, it returns the maximum buffer position rather than &lt;code&gt;nil&lt;/code&gt; (in this sense, it resembles the corresponding overlay function &lt;code&gt;next-overlay-change&lt;/code&gt;, rather than &lt;code&gt;next-property-change&lt;/code&gt;). There is no &lt;var&gt;object&lt;/var&gt; operand because this function operates only on the current buffer. It returns the next address at which either kind of property changes.</source>
          <target state="translated">이처럼 &lt;code&gt;next-property-change&lt;/code&gt; 가 오버레이 속성뿐만 아니라 텍스트 속성을 고려하는 것을 제외하고 변화가 버퍼의 끝 이전에 발견되지 않으면, 그것은보다는 최대 버퍼의 위치를 반환 &lt;code&gt;nil&lt;/code&gt; 는 유사, 이런 의미에서 ( &lt;code&gt;next-property-change&lt;/code&gt; 가 아닌 해당 오버레이 함수 &lt;code&gt;next-overlay-change&lt;/code&gt; -change ). 이 함수는 현재 버퍼에서만 작동하므로 &lt;var&gt;object&lt;/var&gt; 피연산자 가 없습니다 . 두 종류의 속성이 변경되는 다음 주소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b4191809c394b93b9faa1cf8d4f5fef2999f60c6" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position less than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;next-property-change&lt;/code&gt; 와 비슷하지만 앞으로가 아니라 &lt;var&gt;pos&lt;/var&gt; 에서 다시 스캔 합니다. 값이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;pos&lt;/var&gt; 보다 작거나 같은 위치입니다 . 그것은 동일 &lt;var&gt;pos&lt;/var&gt; 경우에만 &lt;var&gt;limit&lt;/var&gt; 동일 &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f5f370c14e6de2e6853c08ddbeedfe2bc0465f9e" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-char-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward, and returns the minimum valid position in &lt;var&gt;object&lt;/var&gt; if no change is found.</source>
          <target state="translated">이것은 &lt;code&gt;next-single-char-property-change&lt;/code&gt; 와 비슷하지만 앞으로가 아닌 &lt;var&gt;pos&lt;/var&gt; 에서 다시 스캔 하고 변경 사항이 없으면 &lt;var&gt;object&lt;/var&gt; 의 최소 ​​유효 위치를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b4c5ddfdd4e88bfbfa1aac3a9acd9c4777aaec54" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-property-change&lt;/code&gt; except that it considers overlay properties as well as text properties, and if no change is found before the end of the &lt;var&gt;object&lt;/var&gt;, it returns the maximum valid position in &lt;var&gt;object&lt;/var&gt; rather than &lt;code&gt;nil&lt;/code&gt;. Unlike &lt;code&gt;next-char-property-change&lt;/code&gt;, this function &lt;em&gt;does&lt;/em&gt; have an &lt;var&gt;object&lt;/var&gt; operand; if &lt;var&gt;object&lt;/var&gt; is not a buffer, only text-properties are considered.</source>
          <target state="translated">이것은 오버레이 속성과 텍스트 속성을 고려한다는 점을 제외하면 &lt;code&gt;next-single-property-change&lt;/code&gt; 와 유사 하며 &lt;var&gt;object&lt;/var&gt; 의 끝 전에 변경 사항이 없으면 &lt;code&gt;nil&lt;/code&gt; 대신 &lt;var&gt;object&lt;/var&gt; 에서 최대 유효 위치를 반환합니다 . 달리 &lt;code&gt;next-char-property-change&lt;/code&gt; ,이 기능 &lt;em&gt;하지&lt;/em&gt; 있는 &lt;var&gt;object&lt;/var&gt; 피연산자; 경우 &lt;var&gt;object&lt;/var&gt; 버퍼되지 않습니다, 단지 텍스트 속성으로 간주됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4848490c4632438743fbf401d88ff8f17f9445fd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position less than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;next-single-property-change&lt;/code&gt; 와 비슷하지만 앞으로가 아닌 &lt;var&gt;pos&lt;/var&gt; 에서 다시 스캔 합니다. 값이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 &lt;var&gt;pos&lt;/var&gt; 보다 작거나 같은 위치입니다 . 그것은 동일 &lt;var&gt;pos&lt;/var&gt; 경우에만 &lt;var&gt;limit&lt;/var&gt; 동일 &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="94882ec2784795d03f894d91e81c50023b35a3dc" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;re-search-backward&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">정규식 일치를 위해 POSIX 표준에 지정된 전체 역 추적을 수행한다는 점을 제외하면 &lt;code&gt;re-search-backward&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d0da2601bec1f3e5cfb9064ffc4ff54dce0cd7cd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;re-search-forward&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">정규식 일치를 위해 POSIX 표준에 지정된 전체 역 추적을 수행한다는 점을 제외하면 &lt;code&gt;re-search-forward&lt;/code&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="c02381a39ed8dd68932c911385907b1c4d341426" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;read-key-sequence&lt;/code&gt; except that it always returns the key sequence as a vector, never as a string. See &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;.</source>
          <target state="translated">이것은 키 시퀀스를 문자열이 아닌 벡터로 항상 반환한다는 점을 제외하면 &lt;code&gt;read-key-sequence&lt;/code&gt; 키 시퀀스와 같습니다. &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;이벤트 문자열을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="826e11f6eec5fc21c6a5ea503714d5ce5d3c21fe" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;string-match&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">정규식 일치를 위해 POSIX 표준에 지정된 전체 역 추적을 수행한다는 점을 제외하면 &lt;code&gt;string-match&lt;/code&gt; 와 유사 합니다 .</target>
        </trans-unit>
        <trans-unit id="df614ce1d552ba92bda6df3d63dc888585eb690c" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;thunk-let&lt;/code&gt; but any expression in &lt;var&gt;bindings&lt;/var&gt; is allowed to refer to preceding bindings in this &lt;code&gt;thunk-let*&lt;/code&gt; form. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;thunk-let&lt;/code&gt; 과 비슷 하지만 &lt;var&gt;bindings&lt;/var&gt; 모든 표현식 은이 &lt;code&gt;thunk-let*&lt;/code&gt; 형식의 선행 바인딩을 참조 할 수 있습니다. 이 매크로를 사용하려면 &lt;code&gt;lexical-binding&lt;/code&gt; 이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="34b310c08760b47150542f4e5ed94706ea6c4d86" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;:case-fixed&lt;/code&gt; abbrev property except that it applies to all abbrevs in the table.</source>
          <target state="translated">이것은 테이블의 모든 약어에 적용된다는 점을 제외 하면 &lt;code&gt;:case-fixed&lt;/code&gt; abbrev 속성과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a4f9ed34aa3b893ef5215e1e1e15733a8207f90" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;:enable-function&lt;/code&gt; abbrev property except that it applies to all abbrevs in the table. It is used before even trying to find the abbrev before point, so it can dynamically modify the abbrev table.</source>
          <target state="translated">이것은 테이블의 모든 약어에 적용된다는 점을 제외 하면 &lt;code&gt;:enable-function&lt;/code&gt; abbrev 속성과 같습니다. 포인트 앞의 약어를 찾기 전에 사용되므로 약어 테이블을 동적으로 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="350c64c70e76e9e4caeaa13b4f3df2165981c1ed" translate="yes" xml:space="preserve">
          <source>This is meaningful only for certain types, currently including &lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;plist&lt;/code&gt; and &lt;code&gt;alist&lt;/code&gt;. See the definition of the individual types for a description of how to use &lt;code&gt;:options&lt;/code&gt;.</source>
          <target state="translated">이것은 현재 &lt;code&gt;hook&lt;/code&gt; , &lt;code&gt;plist&lt;/code&gt; 및 &lt;code&gt;alist&lt;/code&gt; 를 포함한 특정 유형에만 의미가 있습니다 . &lt;code&gt;:options&lt;/code&gt; 사용 방법에 대한 설명은 개별 유형의 정의를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a393ffc69a5c4aa6e10ed375dafd00e3cfb03a0f" translate="yes" xml:space="preserve">
          <source>This is not a normal hook because the values of the functions are used, and in many cases only some of the functions are called.</source>
          <target state="translated">이것은 함수의 값이 사용되기 때문에 일반적인 후크가 아니며 대부분의 경우 일부 함수 만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7fd0025b3700aa925387621e925fa3d3dde46b1f" translate="yes" xml:space="preserve">
          <source>This is not an exhaustive list, it only covers the more general hooks. For example, every major mode defines a hook named &amp;lsquo;</source>
          <target state="translated">이것은 완전한 목록이 아니며보다 일반적인 후크 만 다룹니다. 예를 들어, 모든 주요 모드는 '</target>
        </trans-unit>
        <trans-unit id="03250d5aa731772bdc8eea9fd068454a1d5a9bca" translate="yes" xml:space="preserve">
          <source>This is not completely equivalent because it can evaluate &lt;var&gt;arg1&lt;/var&gt; or &lt;var&gt;arg2&lt;/var&gt; twice. By contrast, &lt;code&gt;(or &lt;var&gt;arg1&lt;/var&gt; &lt;var&gt;arg2&lt;/var&gt;
&lt;var&gt;arg3&lt;/var&gt;)&lt;/code&gt; never evaluates any argument more than once.</source>
          <target state="translated">&lt;var&gt;arg1&lt;/var&gt; 또는 &lt;var&gt;arg2&lt;/var&gt; 를 두 번 평가할 수 있으므로 완전히 동일하지는 않습니다 . 대조적으로 &lt;code&gt;(or &lt;var&gt;arg1&lt;/var&gt; &lt;var&gt;arg2&lt;/var&gt; &lt;var&gt;arg3&lt;/var&gt;)&lt;/code&gt; 은 인수를 두 번 이상 평가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="acb411e478bcba8c1fe56867bc93cbc8df4d1dff" translate="yes" xml:space="preserve">
          <source>This is often good for code that&amp;rsquo;s only a fallback for compatibility with other versions of Emacs.</source>
          <target state="translated">이것은 종종 다른 버전의 Emacs와의 호환성을위한 대안 일 뿐인 코드에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a4426af0bd4d059601abc817c43755785ce0a999" translate="yes" xml:space="preserve">
          <source>This is represented either as a URI (&amp;lsquo;</source>
          <target state="translated">이것은 URI ( '</target>
        </trans-unit>
        <trans-unit id="6867b54e10bb974c20025f3f660fe4bba4dfb022" translate="yes" xml:space="preserve">
          <source>This is set to 1 during redisplay when this window must be updated.</source>
          <target state="translated">이 창을 업데이트해야 할 때 다시 표시하는 동안 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="957f8c2bc553538244d6cc4314d095b9e689ad04" translate="yes" xml:space="preserve">
          <source>This is shown in the buffer created by</source>
          <target state="translated">이것은 다음에 의해 생성 된 버퍼에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c051f5d03fb2296f46c510780afd0bb6a7d86d61" translate="yes" xml:space="preserve">
          <source>This is shown when the package is listed in the Package Menu. It should occupy a single line, ideally in 36 characters or less.</source>
          <target state="translated">이는 패키지가 패키지 메뉴에 나열 될 때 표시됩니다. 한 줄을 차지해야하며 이상적으로는 36 자 이하이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b4b2ba11f4c17a87d0a1efa4d7f9a5472fc9d061" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;action&lt;/code&gt;, and when present, will be used instead of &lt;code&gt;action&lt;/code&gt; for button invocations resulting from mouse-clicks (instead of the user hitting</source>
          <target state="translated">이것은 &lt;code&gt;action&lt;/code&gt; 과 유사하며 존재하는 경우 사용자가 누르는 대신 마우스 클릭으로 인한 버튼 호출에 대한 &lt;code&gt;action&lt;/code&gt; 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="788b0f74839888d01741f681ba25035dd4198883" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;choice&lt;/code&gt;, except that the choices are displayed using radio buttons rather than a menu. This has the advantage of displaying documentation for the choices when applicable and so is often a good choice for a choice between constant functions (&lt;code&gt;function-item&lt;/code&gt; customization types).</source>
          <target state="translated">선택 항목이 메뉴가 아닌 라디오 버튼을 사용하여 표시된다는 점을 제외하면 &lt;code&gt;choice&lt;/code&gt; 와 유사 합니다. 이는 적용 가능한 경우 선택 항목에 대한 문서를 표시하는 이점이 있으므로 상수 기능 ( &lt;code&gt;function-item&lt;/code&gt; 사용자 정의 유형) 중에서 선택하는 데 좋은 선택 인 경우가 많습니다 .</target>
        </trans-unit>
        <trans-unit id="4e96069698032d138ba0c11ebf7490bdc28c28fe" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;directory-files&lt;/code&gt; in deciding which files to report on and how to report their names. However, instead of returning a list of file names, it returns for each file a list &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;attributes&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;attributes&lt;/var&gt; is what &lt;code&gt;file-attributes&lt;/code&gt; returns for that file. The optional argument &lt;var&gt;id-format&lt;/var&gt; has the same meaning as the corresponding argument to &lt;code&gt;file-attributes&lt;/code&gt; (see &lt;a href=&quot;file-attributes#Definition-of-file_002dattributes&quot;&gt;Definition of file-attributes&lt;/a&gt;).</source>
          <target state="translated">이것은 보고 할 파일과 이름을보고하는 방법을 결정하는 &lt;code&gt;directory-files&lt;/code&gt; 과 유사 합니다. 그러나 파일 이름 목록을 반환하는 대신 각 파일에 대해 목록 &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;attributes&lt;/var&gt;)&lt;/code&gt; 반환합니다. 여기서 &lt;var&gt;attributes&lt;/var&gt; 는 &lt;code&gt;file-attributes&lt;/code&gt; 속성 이 해당 파일에 대해 반환하는 것입니다. 선택적 인수 &lt;var&gt;id-format&lt;/var&gt; 은 &lt;code&gt;file-attributes&lt;/code&gt; 에 해당하는 인수와 동일한 의미를 갖습니다 ( file-attributes &lt;a href=&quot;file-attributes#Definition-of-file_002dattributes&quot;&gt;정의&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d147532a259703926ad8424d25ebde544378f018" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;eval-region&lt;/code&gt;, but the arguments provide different optional features. &lt;code&gt;eval-buffer&lt;/code&gt; operates on the entire accessible portion of buffer &lt;var&gt;buffer-or-name&lt;/var&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html#Narrowing&quot;&gt;Narrowing&lt;/a&gt; in</source>
          <target state="translated">이것은 &lt;code&gt;eval-region&lt;/code&gt; 과 유사 하지만 인수는 다른 선택적 기능을 제공합니다. &lt;code&gt;eval-buffer&lt;/code&gt; 버퍼의 전체 부분에 액세스 동작 &lt;var&gt;buffer-or-name&lt;/var&gt; (참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html#Narrowing&quot;&gt;좁히는&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="ff0b2d7981822696c11d99ce051daaf51626dc0b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;eval-region&lt;/code&gt;, but the arguments provide different optional features. &lt;code&gt;eval-buffer&lt;/code&gt; operates on the entire accessible portion of buffer &lt;var&gt;buffer-or-name&lt;/var&gt; (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html#Narrowing&quot;&gt;Narrowing&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab36335de4d2ca642eb7a73a27cf1fea0cf908b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;ewoc-refresh&lt;/code&gt;, except that only &lt;var&gt;nodes&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt; are updated instead of the entire set.</source>
          <target state="translated">이 유사하다 &lt;code&gt;ewoc-refresh&lt;/code&gt; 만 제외하고, &lt;var&gt;nodes&lt;/var&gt; 에서 &lt;var&gt;ewoc&lt;/var&gt; 가 아닌 전체 집합으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="071624cc7a405f83147f7238cb97c9e536d1d4bc" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;force_start&lt;/code&gt;, but the next redisplay will only obey it if point stays visible.</source>
          <target state="translated">이것은 &lt;code&gt;force_start&lt;/code&gt; 와 유사 하지만 다음 다시 표시는 점이 계속 표시되는 경우에만 준수합니다.</target>
        </trans-unit>
        <trans-unit id="0c0d72d7db7aa28768d39fb84f4daa9541f10b3d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;let&lt;/code&gt; (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;): it sets up local variables as specified by &lt;var&gt;bindings&lt;/var&gt;, and then evaluates &lt;var&gt;body&lt;/var&gt; with those bindings in effect. Each element of &lt;var&gt;bindings&lt;/var&gt; should be either a symbol or a list of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;&lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt;; the result is to evaluate &lt;var&gt;expr&lt;/var&gt; and bind &lt;var&gt;var&lt;/var&gt; to the result. The tail of &lt;var&gt;bindings&lt;/var&gt; can be either &lt;code&gt;nil&lt;/code&gt; or a symbol which should hold a list of arguments, in which case each argument is evaluated, and the symbol is bound to the resulting list.</source>
          <target state="translated">이는 &lt;code&gt;let&lt;/code&gt; 과 유사합니다 ( &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt; 참조 ) : &lt;var&gt;bindings&lt;/var&gt; 에 지정된대로 로컬 변수를 설정 한 다음 해당 바인딩이 적용되는 &lt;var&gt;body&lt;/var&gt; 을 평가 합니다. &lt;var&gt;bindings&lt;/var&gt; 각 요소는 기호 또는 형식 목록 &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;&lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; 이어야합니다 . 결과는 &lt;var&gt;expr&lt;/var&gt; 을 평가 하고 &lt;var&gt;var&lt;/var&gt; 를 결과에 바인딩 하는 것입니다. &lt;var&gt;bindings&lt;/var&gt; 의 꼬리는 &lt;code&gt;nil&lt;/code&gt; 이거나 인수 목록을 보유해야하는 기호 일 수 있습니다 .이 경우 각 인수가 평가되고 기호가 결과 목록에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="6972e5c3397c18efdbdfe782c91288421ed8ea0e" translate="yes" xml:space="preserve">
          <source>This is successful when there are no more arguments to match at the current argument list level; otherwise it fails. See sublist specifications and the backquote example.</source>
          <target state="translated">이것은 현재 인수 목록 레벨에서 일치시킬 인수가 더 이상 없을 때 성공합니다. 그렇지 않으면 실패합니다. 하위 목록 사양 및 역 따옴표 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5164ae1e3cbd498c426b475c98a20978f02fa306" translate="yes" xml:space="preserve">
          <source>This is the</source>
          <target state="translated">이것이</target>
        </trans-unit>
        <trans-unit id="2180873b27de165f770563ca634195e2da011072" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;abbrev-symbol&lt;/code&gt; of the most recent abbrev expanded. This information is left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Expanding-Abbrevs.html#Expanding-Abbrevs&quot;&gt;Expanding Abbrevs&lt;/a&gt; in</source>
          <target state="translated">이것은이다 &lt;code&gt;abbrev-symbol&lt;/code&gt; 확장 된 가장 최근의 약칭의. 이 정보가 남아 &lt;code&gt;expand-abbrev&lt;/code&gt; 의 이익을 위해 &lt;code&gt;unexpand-abbrev&lt;/code&gt; 명령 (참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Expanding-Abbrevs.html#Expanding-Abbrevs&quot;&gt;Abbrevs 확장&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="95855e767687262f91e4ee312a1ef0270766bc11" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;abbrev-symbol&lt;/code&gt; of the most recent abbrev expanded. This information is left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Expanding-Abbrevs.html#Expanding-Abbrevs&quot;&gt;Expanding Abbrevs&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8f78616eff16279484642ce7f3f5e546449369" translate="yes" xml:space="preserve">
          <source>This is the C function name for this function. This is the name that is used in C code for calling the function. The name is, by convention, &amp;lsquo;</source>
          <target state="translated">이 함수의 C 함수 이름입니다. 함수를 호출하기 위해 C 코드에서 사용되는 이름입니다. 이름은 관례 상 '</target>
        </trans-unit>
        <trans-unit id="0e7631d5794c9ec12c76756418cbc63e4165f7ba" translate="yes" xml:space="preserve">
          <source>This is the abbrev table for mode-independent abbrevs. The abbrevs defined in it apply to all buffers. Each buffer may also have a local abbrev table, whose abbrev definitions take precedence over those in the global table.</source>
          <target state="translated">모드 독립적 인 약어에 대한 약어 테이블입니다. 여기에 정의 된 약어는 모든 버퍼에 적용됩니다. 각 버퍼에는 로컬 약어 테이블이있을 수 있으며, 그 약어 정의가 전역 테이블의 정의보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="3c523709cb7c5024477bee4729413d33dfff3e89" translate="yes" xml:space="preserve">
          <source>This is the basic function for evaluating an expression. It evaluates &lt;var&gt;form&lt;/var&gt; in the current environment, and returns the result. The type of the &lt;var&gt;form&lt;/var&gt; object determines how it is evaluated. See &lt;a href=&quot;forms#Forms&quot;&gt;Forms&lt;/a&gt;.</source>
          <target state="translated">이것은 표현식을 평가하기위한 기본 기능입니다. 현재 환경에서 &lt;var&gt;form&lt;/var&gt; 을 평가 하고 결과를 반환합니다. &lt;var&gt;form&lt;/var&gt; 객체 의 유형에 따라 평가 방법이 결정됩니다. &lt;a href=&quot;forms#Forms&quot;&gt;양식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd01e94d17ab080a99e8638997693afb17244e31" translate="yes" xml:space="preserve">
          <source>This is the basic function for undoing elements of an undo list. It undoes the first &lt;var&gt;count&lt;/var&gt; elements of &lt;var&gt;list&lt;/var&gt;, returning the rest of &lt;var&gt;list&lt;/var&gt;.</source>
          <target state="translated">실행 취소 목록의 요소를 실행 취소하는 기본 기능입니다. 그것은 최초의 실행 취소 &lt;var&gt;count&lt;/var&gt; 의 요소 &lt;var&gt;list&lt;/var&gt; 의 나머지를 반환 &lt;var&gt;list&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5edc23af104076b999a3160ccb924d02cdc49953" translate="yes" xml:space="preserve">
          <source>This is the command bound to</source>
          <target state="translated">이것은 바인딩 된 명령입니다</target>
        </trans-unit>
        <trans-unit id="1a1f4f970d0839d66261280186ed2bffd09be10b" translate="yes" xml:space="preserve">
          <source>This is the default file name for reading and saving abbrevs. By default, Emacs will look for</source>
          <target state="translated">약어를 읽고 저장하기위한 기본 파일 이름입니다. 기본적으로 Emacs는</target>
        </trans-unit>
        <trans-unit id="3ac1c0a010df315e398404dba2b20fde641ad886" translate="yes" xml:space="preserve">
          <source>This is the default local keymap for reading from the minibuffer. By default, it makes the following bindings:</source>
          <target state="translated">이것은 미니 버퍼에서 읽기위한 기본 로컬 키맵입니다. 기본적으로 다음 바인딩을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d401506332b2e0b6c73cafdead87e20857817be0" translate="yes" xml:space="preserve">
          <source>This is the default translation table for decoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is applied after them.</source>
          <target state="translated">이것은 디코딩을위한 기본 변환 테이블입니다. 코딩 시스템이 자체 번역 테이블을 지정하는 경우이 변수의 값인 테이블이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 그 뒤에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="0391cdc8080687f7d9e25d7cee6807f2974b303f" translate="yes" xml:space="preserve">
          <source>This is the default translation table for encoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is applied after them.</source>
          <target state="translated">이것은 인코딩을위한 기본 변환 테이블입니다. 코딩 시스템이 자체 번역 테이블을 지정하는 경우이 변수의 값인 테이블이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 그 뒤에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8ff7696e0b2dcaaf5d9a83aa5bfff3d3338f56fd" translate="yes" xml:space="preserve">
          <source>This is the documentation string. It uses C comment syntax rather than C string syntax because comment syntax requires nothing special to include multiple lines. The &amp;lsquo;</source>
          <target state="translated">이것은 문서 문자열입니다. 주석 구문은 여러 줄을 포함하는 데 특별한 것이 필요하지 않기 때문에 C 문자열 구문이 아닌 C 주석 구문을 사용합니다. '</target>
        </trans-unit>
        <trans-unit id="ba1bc11285ca3ad6a244d1d3f63cb12bd61035a6" translate="yes" xml:space="preserve">
          <source>This is the exact expansion text of the most recent abbrev expanded, after case conversion (if any). Its value is &lt;code&gt;nil&lt;/code&gt; if the abbrev has already been unexpanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</source>
          <target state="translated">대소 문자 변환 (있는 경우) 후 확장 된 가장 최근 약어의 정확한 확장 텍스트입니다. 약어가 이미 확장되지 않은 경우 값은 &lt;code&gt;nil&lt;/code&gt; 입니다. 여기에는 &lt;code&gt;unexpand-abbrev&lt;/code&gt; 명령을 위해 &lt;code&gt;expand-abbrev&lt;/code&gt; 가 남긴 정보가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="060ce1d372419ec3a7177fd85251e7258d7b9130" translate="yes" xml:space="preserve">
          <source>This is the exponential function; it returns &lt;em&gt;e&lt;/em&gt; to the power &lt;var&gt;arg&lt;/var&gt;.</source>
          <target state="translated">이것은 지수 함수입니다. &lt;em&gt;e&lt;/em&gt; 를 거듭 제곱 &lt;var&gt;arg&lt;/var&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1c5a3373b574b2d101802192b77f8998ef8a201d" translate="yes" xml:space="preserve">
          <source>This is the face used for drawing the first pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</source>
          <target state="translated">너비가 3 픽셀 이상인 구분선의 첫 번째 픽셀을 그리는 데 사용되는면입니다. 솔리드 모양을 얻으려면이 값을 &lt;code&gt;window-divider&lt;/code&gt; 면에 사용 된 것과 동일한 값으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6082d13ab0522b6c4da76ffdd8e94b61f2396f8" translate="yes" xml:space="preserve">
          <source>This is the face used for drawing the last pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</source>
          <target state="translated">너비가 3 픽셀 이상인 구분선의 마지막 픽셀을 그리는 데 사용되는면입니다. 솔리드 모양을 얻으려면이 값을 &lt;code&gt;window-divider&lt;/code&gt; 면에 사용 된 것과 동일한 값으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ca86d81de089f241f9bce6155e404c269ae806a" translate="yes" xml:space="preserve">
          <source>This is the last time that the window was selected. The function &lt;code&gt;get-lru-window&lt;/code&gt; uses this field.</source>
          <target state="translated">창이 마지막으로 선택된 시간입니다. &lt;code&gt;get-lru-window&lt;/code&gt; 함수 는이 필드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="79177d72d10fb21d4c423cd713d0ac76ece2bd48" translate="yes" xml:space="preserve">
          <source>This is the last window that was selected with this buffer in it, or &lt;code&gt;nil&lt;/code&gt; if that window no longer displays this buffer.</source>
          <target state="translated">이것은이 버퍼와 함께 선택된 마지막 창이거나 , 해당 창이 더 이상이 버퍼를 표시하지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dacccea37445b400ef6fd93c9b5449cdb37bfe67" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Fundamental mode; in other words, it is the local abbrev table in all buffers in Fundamental mode.</source>
          <target state="translated">기본 모드에서 사용되는 로컬 약어 테이블입니다. 즉, 기본 모드의 모든 버퍼에있는 로컬 약어 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="18aea94860a7a9d49b1d6a68460bba6401f70214" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Lisp mode. It is the parent of the local abbrev table used in Emacs Lisp mode. See &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;.</source>
          <target state="translated">Lisp 모드에서 사용되는 로컬 약어 테이블입니다. Emacs Lisp 모드에서 사용되는 로컬 약어 테이블의 부모입니다. &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev 테이블 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a3ef773d17842f24c2eff807ced040674cdf64e" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Text mode.</source>
          <target state="translated">이것은 텍스트 모드에서 사용되는 로컬 약어 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="861277d86f49449eac7c9131ef2a7a22729ce720" translate="yes" xml:space="preserve">
          <source>This is the location of the most recent abbrev expanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</source>
          <target state="translated">가장 최근에 확장 된 약어의 위치입니다. 여기에는 &lt;code&gt;unexpand-abbrev&lt;/code&gt; 명령을 위해 &lt;code&gt;expand-abbrev&lt;/code&gt; 가 남긴 정보가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="f395743344cd27fb23721228430ca1ee2862497e" translate="yes" xml:space="preserve">
          <source>This is the major mode command for Fundamental mode. Unlike other mode commands, it does &lt;em&gt;not&lt;/em&gt; run any mode hooks (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;), since you are not supposed to customize this mode.</source>
          <target state="translated">Fundamental 모드의 주요 모드 명령입니다. 다른 모드 명령과 달리 모드 후크를 실행 하지 &lt;em&gt;않습니다&lt;/em&gt; ( &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;주 모드 규칙&lt;/a&gt; 참조 ).이 모드를 사용자 정의하지 않아야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ace17aa35f7381424427bf2537be21491ab6b400" translate="yes" xml:space="preserve">
          <source>This is the major mode used in inactive minibuffers. It uses keymap &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt;. This can be useful if the minibuffer is in a separate frame. See &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;.</source>
          <target state="translated">이것은 비활성 미니 버퍼에서 사용되는 주요 모드입니다. keymap &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt; 을 사용 합니다. 미니 버퍼가 별도의 프레임에있는 경우 유용 할 수 있습니다. &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;미니 버퍼 및 프레임을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eabab2989ca075fa64bea21443c12a9e426416af" translate="yes" xml:space="preserve">
          <source>This is the maximum number of arguments that the function accepts, if there is a fixed maximum. Alternatively, it can be &lt;code&gt;UNEVALLED&lt;/code&gt;, indicating a special form that receives unevaluated arguments, or &lt;code&gt;MANY&lt;/code&gt;, indicating an unlimited number of evaluated arguments (the equivalent of &lt;code&gt;&amp;amp;rest&lt;/code&gt;). Both &lt;code&gt;UNEVALLED&lt;/code&gt; and &lt;code&gt;MANY&lt;/code&gt; are macros. If &lt;var&gt;max&lt;/var&gt; is a number, it must be more than &lt;var&gt;min&lt;/var&gt; but less than 8.</source>
          <target state="translated">고정 된 최대 값이있는 경우 함수가 허용하는 최대 인수 수입니다. 또는 평가되지 않은 인수를 수신하는 특수 형식을 나타내는 &lt;code&gt;UNEVALLED&lt;/code&gt; 또는 평가 된 인수 의 무제한을 나타내는 &lt;code&gt;MANY&lt;/code&gt; ( &lt;code&gt;&amp;amp;rest&lt;/code&gt; 와 동일 ) 일 수 있습니다. 두 &lt;code&gt;UNEVALLED&lt;/code&gt; 과 &lt;code&gt;MANY&lt;/code&gt; 매크로입니다. 경우 &lt;var&gt;max&lt;/var&gt; 숫자, 그것보다 더해야합니다 &lt;var&gt;min&lt;/var&gt; 미만 8.</target>
        </trans-unit>
        <trans-unit id="b7f77ff184987e29e59b6b15235c322c6e149e19" translate="yes" xml:space="preserve">
          <source>This is the mechanism, how Tramp implements &lt;code&gt;interrupt-process&lt;/code&gt;.</source>
          <target state="translated">이것이 Tramp가 &lt;code&gt;interrupt-process&lt;/code&gt; 구현하는 메커니즘 입니다.</target>
        </trans-unit>
        <trans-unit id="8093786592590fe333b219fb1554b9d18e418bc0" translate="yes" xml:space="preserve">
          <source>This is the minimum number of arguments that the function requires. The function &lt;code&gt;or&lt;/code&gt; allows a minimum of zero arguments.</source>
          <target state="translated">이것은 함수에 필요한 최소 인수 수입니다. &lt;code&gt;or&lt;/code&gt; 함수 는 최소 0 개의 인수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="48b2a8f0369bc6389e8c8f8198f68b775a51fb22" translate="yes" xml:space="preserve">
          <source>This is the mode command for Auto Save mode, a buffer-local minor mode. When Auto Save mode is enabled, auto-saving is enabled in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">이것은 버퍼 로컬 부 모드 인 자동 저장 모드에 대한 모드 명령입니다. 자동 저장 모드가 활성화되면 버퍼에서 자동 저장이 활성화됩니다. 호출 규칙은 다른 부 모드 명령과 동일합니다 ( &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;부 모드 규칙&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="376f985e3ccb8e362301736a9bde6295a248f015" translate="yes" xml:space="preserve">
          <source>This is the mode command for Read Only minor mode, a buffer-local minor mode. When the mode is enabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; in the buffer; when disabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">이것은 버퍼-로컬 부 모드 인 읽기 전용 부 모드에 대한 모드 명령입니다. 모드가 활성화되면 &lt;code&gt;buffer-read-only&lt;/code&gt; 은 버퍼에서 &lt;code&gt;nil&lt;/code&gt; 이 아닙니다 . 비활성화되면 &lt;code&gt;buffer-read-only&lt;/code&gt; 은 버퍼에서 &lt;code&gt;nil&lt;/code&gt; 입니다. 호출 규칙은 다른 부 모드 명령과 동일합니다 ( &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;부 모드 규칙&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ff2d57755388ba15a040fc3ff8136317bff9ef17" translate="yes" xml:space="preserve">
          <source>This is the most general composite type construct. The value may be any Lisp object that satisfies one of &lt;var&gt;criteria&lt;/var&gt;. &lt;var&gt;criteria&lt;/var&gt; should be a list, and each element should be one of these possibilities:</source>
          <target state="translated">이것은 가장 일반적인 복합 유형 구조입니다. 값은 &lt;var&gt;criteria&lt;/var&gt; 중 하나를 충족하는 Lisp 개체 일 수 있습니다 . &lt;var&gt;criteria&lt;/var&gt; 은 목록이어야하며 각 요소는 다음 가능성 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7d928ba7225b20194a4e742b5686cbeb4d8e8cd8" translate="yes" xml:space="preserve">
          <source>This is the name of the Lisp symbol to define as the function name; in the example above, it is &lt;code&gt;or&lt;/code&gt;.</source>
          <target state="translated">함수 이름으로 정의 할 Lisp 기호의 이름입니다. 위의 예에서는 &lt;code&gt;or&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7ce4a96dcfbbf417a5515c79558a45d727d8b69" translate="yes" xml:space="preserve">
          <source>This is the name of the serial port. On Unix and GNU systems, this is a file name such as</source>
          <target state="translated">이것은 직렬 포트의 이름입니다. Unix 및 GNU 시스템에서 이것은 다음과 같은 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6195a15a6a8376e9066802943fcbe1887a28b33c" translate="yes" xml:space="preserve">
          <source>This is the number of columns that the display in the window is scrolled horizontally to the left. Normally, this is 0. When only the current line is hscrolled, this describes how much the current line is scrolled.</source>
          <target state="translated">창의 디스플레이가 왼쪽으로 수평으로 스크롤되는 열 수입니다. 일반적으로이 값은 0입니다. 현재 행만 hscroll 된 경우 현재 행이 얼마나 스크롤되는지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ccb362e8890c8dc7c6b4dd90e2d5c7affca9cdad" translate="yes" xml:space="preserve">
          <source>This is the number of rapid repeated presses so far of the same mouse button. See &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Repeat Events&lt;/a&gt;.</source>
          <target state="translated">이것은 지금까지 동일한 마우스 버튼을 빠르게 반복해서 누른 횟수입니다. &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;반복 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="152c6c5ff46b2d57f3702b8643ad5b3fd0fa9cff" translate="yes" xml:space="preserve">
          <source>This is the only valid way to change the endpoints of an overlay. Do not try modifying the markers in the overlay by hand, as that fails to update other vital data structures and can cause some overlays to be lost.</source>
          <target state="translated">오버레이의 끝점을 변경하는 유일한 방법입니다. 다른 중요한 데이터 구조를 업데이트하지 못하고 일부 오버레이가 손실 될 수 있으므로 오버레이의 마커를 손으로 수정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9e818853e17046ec822acccf394ea56b21547df0" translate="yes" xml:space="preserve">
          <source>This is the regular expression describing line-beginnings that separate pages. The default value is &lt;code&gt;&quot;^\014&quot;&lt;/code&gt; (i.e., &lt;code&gt;&quot;^^L&quot;&lt;/code&gt; or &lt;code&gt;&quot;^\C-l&quot;&lt;/code&gt;); this matches a line that starts with a formfeed character.</source>
          <target state="translated">페이지를 구분하는 줄 시작을 설명하는 정규식입니다. 기본값은 &lt;code&gt;&quot;^\014&quot;&lt;/code&gt; (예 : &lt;code&gt;&quot;^^L&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;^\C-l&quot;&lt;/code&gt; )입니다. 이것은 formfeed 문자로 시작하는 행과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="ef9dc4f2029c4c23dfd2d883356ad4a5524a9429" translate="yes" xml:space="preserve">
          <source>This is the regular expression for recognizing the beginning of a line that separates paragraphs. (If you change this, you may have to change &lt;code&gt;paragraph-start&lt;/code&gt; also.) The default value is &lt;code&gt;&quot;[&amp;nbsp;\t\f]*$&quot;&lt;/code&gt;, which matches a line that consists entirely of spaces, tabs, and form feeds (after its left margin).</source>
          <target state="translated">단락을 구분하는 줄의 시작을 인식하기위한 정규식입니다. (이를 변경하면 &lt;code&gt;paragraph-start&lt;/code&gt; 도 변경해야 할 수 있습니다 .) 기본값은 &lt;code&gt;&quot;[&amp;nbsp;\t\f]*$&quot;&lt;/code&gt; . 왼쪽 여백).</target>
        </trans-unit>
        <trans-unit id="14169eccf058eb3e9106c91e3eeed00bce347148" translate="yes" xml:space="preserve">
          <source>This is the regular expression for recognizing the beginning of a line that starts &lt;em&gt;or&lt;/em&gt; separates paragraphs. The default value is &lt;code&gt;&quot;\f\\|[&amp;nbsp;\t]*$&quot;&lt;/code&gt;, which matches a line containing only whitespace or starting with a form feed (after its left margin).</source>
          <target state="translated">단락 을 시작 &lt;em&gt;하거나&lt;/em&gt; 구분 하는 줄의 시작을 인식하기위한 정규식입니다 . 기본값은 &lt;code&gt;&quot;\f\\|[&amp;nbsp;\t]*$&quot;&lt;/code&gt; 이며 공백 만 포함하거나 용지 공급으로 시작하는 줄 (왼쪽 여백 뒤)과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="a0c0d898779738c507e70e28b25f015c92b6136b" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(car (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;(car (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1dec8ab013682df56cb72d3cee81ea3421bcd721" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(car (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nth 1 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;(car (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 또는 &lt;code&gt;(nth 1 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="07d411bf2c660ed51c61291f8b6a7b659aada3ec" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(cdr (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;(cdr (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="292187d529ba7d31de0638670f15fe461485ab91" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(cdr (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nthcdr 2 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;(cdr (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 또는 &lt;code&gt;(nthcdr 2 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="0e19ce93bf7b37edfba316c893cc348f7dd03583" translate="yes" xml:space="preserve">
          <source>This is the same as no property&amp;mdash;use the standard indentation pattern.</source>
          <target state="translated">이것은 속성이없는 것과 동일합니다. 표준 들여 쓰기 패턴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a15feebe30b7e3e45adb8ff4c691e329282143e8" translate="yes" xml:space="preserve">
          <source>This is the soft limit for the acceptable size of an undo list. The change group at which this size is exceeded is the last one kept.</source>
          <target state="translated">이것은 실행 취소 목록의 허용 가능한 크기에 대한 소프트 제한입니다. 이 크기를 초과하는 변경 그룹이 마지막으로 유지되는 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="9a671f80aca89266fae2db990311441d4c4c6b1a" translate="yes" xml:space="preserve">
          <source>This is the symbol &lt;code&gt;vertical-scroll-bar&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;vertical-scroll-bar&lt;/code&gt; 기호 입니다.</target>
        </trans-unit>
        <trans-unit id="f1fbd7fb3c9f8101ea1faa6a62faecfce025a2e8" translate="yes" xml:space="preserve">
          <source>This is the upper limit for the acceptable size of an undo list. The change group at which this size is exceeded is discarded itself (along with all older change groups). There is one exception: the very latest change group is only discarded if it exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt;.</source>
          <target state="translated">이것은 실행 취소 목록의 허용 가능한 크기에 대한 상한입니다. 이 크기를 초과하는 변경 그룹은 모든 이전 변경 그룹과 함께 자체적으로 삭제됩니다. 한 가지 예외가 있습니다. 가장 최신 변경 그룹은 &lt;code&gt;undo-outer-limit&lt;/code&gt; 를 초과하는 경우에만 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="a4cc5a81c5b084984ed088f83e7f2697063f32d8" translate="yes" xml:space="preserve">
          <source>This is the value of point in the current buffer when this window is selected; when it is not selected, it retains its previous value.</source>
          <target state="translated">이 창이 선택 될 때 현재 버퍼의 포인트 값입니다. 선택하지 않으면 이전 값이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="423417762f6aa3330cc365bfd528db72f28df157" translate="yes" xml:space="preserve">
          <source>This is used for convenience and equals to &lt;code&gt;sizeof (char)&lt;/code&gt;.</source>
          <target state="translated">이것은 편의를 위해 사용되며 &lt;code&gt;sizeof (char)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ee31970b5f1fdac89c5f778fb86c8e1080cd6ff9" translate="yes" xml:space="preserve">
          <source>This is used when defining a function or macro which itself will be used to define entities like functions, macros, or variables. It indicates that the &lt;var&gt;n&lt;/var&gt;th argument, if any, should be considered as a documentation string.</source>
          <target state="translated">함수, 매크로 또는 변수와 같은 엔티티를 정의하는 데 자체적으로 사용될 함수 또는 매크로를 정의 할 때 사용됩니다. &lt;var&gt;n&lt;/var&gt; 번째 인수가있는 경우 문서 문자열로 간주되어야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b514ab09a266bb6df1bfbc536f26517e4414fb02" translate="yes" xml:space="preserve">
          <source>This is useful for creating private files, for example.</source>
          <target state="translated">예를 들어 개인 파일을 만드는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="866343c2b8bfe95e45965d000cb118b1f57008a3" translate="yes" xml:space="preserve">
          <source>This is useful for customizable options that are defined before their value could be computed correctly. For example, during startup Emacs calls this function for some user options that were defined in pre-loaded Emacs Lisp files, but whose initial values depend on information available only at run-time.</source>
          <target state="translated">이는 값이 올바르게 계산되기 전에 정의 된 사용자 정의 가능한 옵션에 유용합니다. 예를 들어, 시작하는 동안 Emacs는 미리로드 된 Emacs Lisp 파일에 정의 된 일부 사용자 옵션에 대해이 함수를 호출하지만 초기 값은 런타임에서만 사용할 수있는 정보에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="b3e760a5e89ad084376779f2141e7164f8a35204" translate="yes" xml:space="preserve">
          <source>This is useful for running a subprocess; every subprocess must have a non-magic directory to serve as its current directory, and this function is a good way to come up with one.</source>
          <target state="translated">이것은 하위 프로세스를 실행하는 데 유용합니다. 모든 하위 프로세스는 현재 디렉토리로 사용할 수있는 비 마법 디렉토리를 가져야하며이 함수는 하나를 찾는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="728aef88857a9046971c33c2a6d4cedfa41537de" translate="yes" xml:space="preserve">
          <source>This is useful mainly if you expect to change the file, and you want Emacs sessions that have already loaded it to keep working when the file changes.</source>
          <target state="translated">이것은 주로 파일을 변경할 것으로 예상하고 이미로드 한 Emacs 세션이 파일이 변경 될 때 계속 작동하도록하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f5fd3494988d166f15654252d52829ff89a4ff31" translate="yes" xml:space="preserve">
          <source>This is useful not only for indenting regions of unindented text, but also for indenting regions of formatted code. For example, if &lt;var&gt;count&lt;/var&gt; is 3, this command adds 3 columns of indentation to every line that begins in the specified region.</source>
          <target state="translated">이것은 들여 쓰기되지 않은 텍스트 영역을 들여 쓰는 것뿐만 아니라 서식이 지정된 코드의 들여 쓰기 영역에도 유용합니다. 예를 들어 &lt;var&gt;count&lt;/var&gt; 가 3이면이 명령은 지정된 영역에서 시작하는 모든 줄에 3 개의 들여 쓰기 열을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e023a8e76b368c9ee76c884e2055089af92b66a6" translate="yes" xml:space="preserve">
          <source>This is valid for macros only. When stepping through the macro with Edebug, use &lt;var&gt;edebug-form-spec&lt;/var&gt;. See &lt;a href=&quot;instrumenting-macro-calls#Instrumenting-Macro-Calls&quot;&gt;Instrumenting Macro Calls&lt;/a&gt;.</source>
          <target state="translated">이것은 매크로에만 유효합니다. Edebug로 매크로를 단계별로 실행할 때 &lt;var&gt;edebug-form-spec&lt;/var&gt; 을 사용하십시오 . &lt;a href=&quot;instrumenting-macro-calls#Instrumenting-Macro-Calls&quot;&gt;매크로 호출 계측을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b80b6274750aae65ca38e0dd4e8b9fe8f5e0f865" translate="yes" xml:space="preserve">
          <source>This keymap is used by &lt;code&gt;read-shell-command&lt;/code&gt; for completing command and file names that are part of a shell command. It uses &lt;code&gt;minibuffer-local-map&lt;/code&gt; as its parent keymap, and binds</source>
          <target state="translated">이 키맵은 쉘 명령의 일부인 명령 및 파일 이름을 완료하기 위해 &lt;code&gt;read-shell-command&lt;/code&gt; 에서 사용됩니다 . 그것은 사용하는 &lt;code&gt;minibuffer-local-map&lt;/code&gt; 부모 키 맵, 그리고 바인딩으로</target>
        </trans-unit>
        <trans-unit id="88249230dfa1461ddb1420acb36091ec3f70b0f6" translate="yes" xml:space="preserve">
          <source>This keymap should be stored permanently in a global variable named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-map&lt;/code&gt;. Normally the library that defines the mode sets this variable.</source>
          <target state="translated">이 키맵은 &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-map&lt;/code&gt; 이라는 전역 변수에 영구적으로 저장되어야합니다 . 일반적으로 모드를 정의하는 라이브러리는이 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4680fcd405dac3250ebef10c358794f36382d314" translate="yes" xml:space="preserve">
          <source>This keyword specifies that the item was first introduced in &lt;var&gt;package&lt;/var&gt; version &lt;var&gt;version&lt;/var&gt;, or that its meaning or default value was changed in that version. This keyword takes priority over &lt;code&gt;:version&lt;/code&gt;.</source>
          <target state="translated">이 키워드는 항목이 &lt;var&gt;package&lt;/var&gt; 버전 &lt;var&gt;version&lt;/var&gt; 에서 처음 도입 되었거나 해당 버전 에서 의미 또는 기본값이 변경되었음을 지정합니다. 이 키워드는 &lt;code&gt;:version&lt;/code&gt; 보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="06717c0c1628edbad88aa49559c6e4c2c1c2190c" translate="yes" xml:space="preserve">
          <source>This keyword specifies that the item was first introduced in Emacs version &lt;var&gt;version&lt;/var&gt;, or that its default value was changed in that version. The value &lt;var&gt;version&lt;/var&gt; must be a string.</source>
          <target state="translated">이 키워드는 항목이 Emacs 버전 &lt;var&gt;version&lt;/var&gt; 에서 처음 도입 되었거나 해당 버전 에서 기본값이 변경되었음을 지정합니다. 값 &lt;var&gt;version&lt;/var&gt; 은 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="33843d9b6330214735b425409f4f8af78ec03941" translate="yes" xml:space="preserve">
          <source>This kind of display specification is an image descriptor (see &lt;a href=&quot;image-descriptors#Image-Descriptors&quot;&gt;Image Descriptors&lt;/a&gt;). When used as a display specification, it means to display the image instead of the text that has the display specification.</source>
          <target state="translated">디스플레이 사양의 이러한 종류의 이미지 기술자 (참조 인 &lt;a href=&quot;image-descriptors#Image-Descriptors&quot;&gt;이미지 설명자&lt;/a&gt; ). 표시 사양으로 사용하는 경우 표시 사양이있는 텍스트 대신 이미지를 표시하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7faaa9ffec418842a1ea32cff679d797acd62bdf" translate="yes" xml:space="preserve">
          <source>This kind of display specification raises or lowers the text it applies to, relative to the baseline of the line. It is mainly meant to support display of subscripts and superscripts.</source>
          <target state="translated">이러한 종류의 표시 사양은 줄의 기준선을 기준으로 적용되는 텍스트를 높이거나 낮 춥니 다. 주로 아래 첨자와 위 첨자의 표시를 지원하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="86f8bcb12625f70473593a24e87217ea7d15f84c" translate="yes" xml:space="preserve">
          <source>This kind of element enables undo limited to a region to determine whether the element pertains to that region.</source>
          <target state="translated">이러한 종류의 요소를 사용하면 영역으로 제한된 실행 취소를 사용하여 요소가 해당 영역에 속하는지 여부를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0198e4d62031d63b971fe601bbcb5036427c502d" translate="yes" xml:space="preserve">
          <source>This kind of element indicates how to delete text that was inserted. Upon insertion, the text occupied the range &lt;var&gt;beg&lt;/var&gt;&amp;ndash;&lt;var&gt;end&lt;/var&gt; in the buffer.</source>
          <target state="translated">이러한 종류의 요소는 삽입 된 텍스트를 삭제하는 방법을 나타냅니다. 삽입시, 텍스트 범위 점유 &lt;var&gt;beg&lt;/var&gt; - &lt;var&gt;end&lt;/var&gt; 버퍼한다.</target>
        </trans-unit>
        <trans-unit id="2031537916062292c8d162859f7c94066f2bd7be" translate="yes" xml:space="preserve">
          <source>This kind of element indicates how to reinsert text that was deleted. The deleted text itself is the string &lt;var&gt;text&lt;/var&gt;. The place to reinsert it is &lt;code&gt;(abs &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt;. If &lt;var&gt;position&lt;/var&gt; is positive, point was at the beginning of the deleted text, otherwise it was at the end. Zero or more (&lt;var&gt;marker&lt;/var&gt; . &lt;var&gt;adjustment&lt;/var&gt;) elements follow immediately after this element.</source>
          <target state="translated">이러한 종류의 요소는 삭제 된 텍스트를 다시 삽입하는 방법을 나타냅니다. 삭제 된 텍스트 자체는 문자열 &lt;var&gt;text&lt;/var&gt; 입니다. 다시 삽입 할 &lt;code&gt;(abs &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt; 는 (abs 위치 ) 입니다. 경우 &lt;var&gt;position&lt;/var&gt; 긍정적 가리킨 그렇지 않으면 말이었다 삭제 된 텍스트의 시작 부분에 있었다. 0 개 이상의 ( &lt;var&gt;marker&lt;/var&gt; . &lt;var&gt;adjustment&lt;/var&gt; ) 요소가이 요소 바로 뒤에옵니다.</target>
        </trans-unit>
        <trans-unit id="6a92ac9457f3eba6f70af9b4039c809a618422d3" translate="yes" xml:space="preserve">
          <source>This kind of element indicates that an unmodified buffer became modified. A &lt;var&gt;time-flag&lt;/var&gt; that is a non-integer Lisp timestamp represents the visited file&amp;rsquo;s modification time as of when it was previously visited or saved, using the same format as &lt;code&gt;current-time&lt;/code&gt;; see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. A &lt;var&gt;time-flag&lt;/var&gt; of 0 means the buffer does not correspond to any file; -1 means the visited file previously did not exist. &lt;code&gt;primitive-undo&lt;/code&gt; uses these values to determine whether to mark the buffer as unmodified once again; it does so only if the file&amp;rsquo;s status matches that of &lt;var&gt;time-flag&lt;/var&gt;.</source>
          <target state="translated">이러한 종류의 요소는 수정되지 않은 버퍼가 수정되었음을 나타냅니다. &lt;var&gt;time-flag&lt;/var&gt; 입니다 타임 스탬프가 이전과 같은 형식 사용, 방문하거나 저장할 때의로 방문 파일의 수정 시간을 나타냅니다 리스프 정수가 아닌 &lt;code&gt;current-time&lt;/code&gt; ; &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;시간을&lt;/a&gt; 참조하십시오 . &lt;var&gt;time-flag&lt;/var&gt; 버퍼가 임의의 파일에 대응하지 않는 0 수단; -1은 이전에 방문한 파일이 존재하지 않았 음을 의미합니다. &lt;code&gt;primitive-undo&lt;/code&gt; 는 이러한 값을 사용하여 버퍼를 수정되지 않은 것으로 다시 표시할지 여부를 결정합니다. 파일의 상태가 &lt;var&gt;time-flag&lt;/var&gt; 의 상태와 일치하는 경우에만 그렇게합니다 .</target>
        </trans-unit>
        <trans-unit id="6026d55330e076e1b5e8302cb8cc0503f89740ae" translate="yes" xml:space="preserve">
          <source>This kind of element is similar to a char-table: the element whose index is &lt;var&gt;c&lt;/var&gt; is the binding for the character &lt;var&gt;c&lt;/var&gt;. Since the range of characters that can be bound this way is limited by the vector size, and vector creation allocates space for all character codes from 0 up, this format should not be used except for creating menu keymaps (see &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;), where the bindings themselves don&amp;rsquo;t matter.</source>
          <target state="translated">이러한 종류의 요소는 char-table과 유사합니다. 인덱스가 &lt;var&gt;c&lt;/var&gt; 인 요소 는 문자 &lt;var&gt;c&lt;/var&gt; 에 대한 바인딩입니다 . 0까지 모든 문자 코드에 대한 벡터 크기에 의해 제한된다 이런 방식으로 결합 될 수있는 문자의 범위 및 벡터 생성 할당 공간 때문에,이 형태는 (참조 : 메뉴 키 맵을 만드는 것을 제외하고 사용되지 않아야 &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;메뉴 키맵을&lt;/a&gt; 어디) 바인딩 자체는 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="670442b4a298391446965e2e0895cc456c3f0e10" translate="yes" xml:space="preserve">
          <source>This kind of element records a change in a text property. Here&amp;rsquo;s how you might undo the change:</source>
          <target state="translated">이러한 종류의 요소는 텍스트 속성의 변경 사항을 기록합니다. 변경을 취소하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7a313669cfb4c507d72ba3c18fb6c15e01e8a702" translate="yes" xml:space="preserve">
          <source>This kind of element records a previous value of point; undoing this element moves point to &lt;var&gt;position&lt;/var&gt;. Ordinary cursor motion does not make any sort of undo record, but deletion operations use these entries to record where point was before the command.</source>
          <target state="translated">이러한 종류의 요소는 이전 포인트 값을 기록합니다. 이 요소를 실행 취소하면 포인트가 &lt;var&gt;position&lt;/var&gt; 이동합니다 . 일반적인 커서 동작은 어떤 종류의 실행 취소 기록도 만들지 않지만, 삭제 작업은 이러한 항목을 사용하여 명령 이전 지점을 기록합니다.</target>
        </trans-unit>
        <trans-unit id="74aca0d37d9ae71f2d1cc20e0acfc59942c4d78e" translate="yes" xml:space="preserve">
          <source>This kind of element records the fact that the marker &lt;var&gt;marker&lt;/var&gt; was relocated due to deletion of surrounding text, and that it moved &lt;var&gt;adjustment&lt;/var&gt; character positions. If the marker&amp;rsquo;s location is consistent with the (&lt;var&gt;text&lt;/var&gt; . &lt;var&gt;position&lt;/var&gt;) element preceding it in the undo list, then undoing this element moves &lt;var&gt;marker&lt;/var&gt; - &lt;var&gt;adjustment&lt;/var&gt; characters.</source>
          <target state="translated">이러한 종류의 요소 는 주변 텍스트의 삭제로 인해 마커 &lt;var&gt;marker&lt;/var&gt; 가 재배치되었고 &lt;var&gt;adjustment&lt;/var&gt; 문자 위치를 이동 했다는 사실을 기록합니다 . 마커의 위치는 (과 일치하는 경우 &lt;var&gt;text&lt;/var&gt; . &lt;var&gt;position&lt;/var&gt; 요소는이 요소를 이동 취소, 실행 취소 목록에서 이전) &lt;var&gt;marker&lt;/var&gt; - &lt;var&gt;adjustment&lt;/var&gt; 문자.</target>
        </trans-unit>
        <trans-unit id="3cb3be606e59ed5b9c0a50d64b8e0f0ec983558d" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user deiconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt;; since the frame has already been made visible, Emacs has no work to do.</source>
          <target state="translated">이러한 종류의 이벤트는 사용자 가 창 관리자를 사용하여 &lt;var&gt;frame&lt;/var&gt; 아이콘을 해제했음을 나타냅니다 . 표준 정의는 &lt;code&gt;ignore&lt;/code&gt; 입니다 . 프레임이 이미 표시되었으므로 Emacs는 할 일이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b0389f029b5476e406f25371cd11ca9df6cb583e" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user gave the window manager a command to delete a particular window, which happens to be an Emacs frame.</source>
          <target state="translated">이러한 종류의 이벤트는 사용자가 창 관리자에게 Emacs 프레임 인 특정 창을 삭제하라는 명령을 내렸음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7952efff4e739b3c0fa91b6b94148a84a46261a0" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user iconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt;; since the frame has already been iconified, Emacs has no work to do. The purpose of this event type is so that you can keep track of such events if you want to.</source>
          <target state="translated">이러한 종류의 이벤트는 사용자 가 창 관리자를 사용하여 &lt;var&gt;frame&lt;/var&gt; 을 아이콘 화했음을 나타냅니다 . 표준 정의는 &lt;code&gt;ignore&lt;/code&gt; 입니다 . 프레임이 이미 아이콘 화되었으므로 Emacs는 할 일이 없습니다. 이 이벤트 유형의 목적은 원하는 경우 이러한 이벤트를 추적 할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cd97f54fd15bd9de60fe7a8f9b207a534d4fa1e6" translate="yes" xml:space="preserve">
          <source>This kind of event is generated on MS-Windows when the input language has changed. This typically means that the keyboard keys will send to Emacs characters from a different language. The generated event has this form:</source>
          <target state="translated">이러한 종류의 이벤트는 입력 언어가 변경되었을 때 MS-Windows에서 생성됩니다. 이것은 일반적으로 키보드 키가 다른 언어의 Emacs 문자로 전송됨을 의미합니다. 생성 된 이벤트의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab75f1664758616d85499184fa4d2d74ea113655" translate="yes" xml:space="preserve">
          <source>This kind of event is generated only on some kinds of systems. On some systems, &lt;code&gt;mouse-4&lt;/code&gt; and &lt;code&gt;mouse-5&lt;/code&gt; are used instead. For portable code, use the variables &lt;code&gt;mouse-wheel-up-event&lt;/code&gt; and &lt;code&gt;mouse-wheel-down-event&lt;/code&gt; defined in</source>
          <target state="translated">이러한 종류의 이벤트는 일부 시스템에서만 생성됩니다. 일부 시스템에서는 대신 &lt;code&gt;mouse-4&lt;/code&gt; 및 &lt;code&gt;mouse-5&lt;/code&gt; 가 사용됩니다. 이식 가능한 코드의 경우 다음에 정의 된 &lt;code&gt;mouse-wheel-up-event&lt;/code&gt; 및 &lt;code&gt;mouse-wheel-down-event&lt;/code&gt; 변수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b769a495f9f3470b8b57a9af6ad31527bc09db20" translate="yes" xml:space="preserve">
          <source>This kind of event is generated when a group of files is selected in an application outside of Emacs, and then dragged and dropped onto an Emacs frame.</source>
          <target state="translated">이러한 종류의 이벤트는 Emacs 외부의 응용 프로그램에서 파일 그룹을 선택한 다음 Emacs 프레임으로 끌어서 놓을 때 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0a898ee417796d3b1ed596e28a0f7497567803e8" translate="yes" xml:space="preserve">
          <source>This kind of event is generated when a mouse pointer moves onto a portion of buffer text which has a &lt;code&gt;help-echo&lt;/code&gt; text property. The generated event has this form:</source>
          <target state="translated">이러한 종류의 이벤트는 마우스 포인터가 &lt;code&gt;help-echo&lt;/code&gt; 텍스트 속성 이있는 버퍼 텍스트 부분으로 이동할 때 생성됩니다 . 생성 된 이벤트의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="762fa25cd888c23ec4fd2eb17c0edbbe84de587e" translate="yes" xml:space="preserve">
          <source>This kind of event is generated, at present, only on some kinds of systems.</source>
          <target state="translated">이러한 종류의 이벤트는 현재 일부 시스템에서만 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="152b0ea6afc5e3668f3d8fd8ad4c72aca4a2bd59" translate="yes" xml:space="preserve">
          <source>This kind of input is used by commands such as &lt;code&gt;describe-key&lt;/code&gt; and &lt;code&gt;global-set-key&lt;/code&gt;.</source>
          <target state="translated">이러한 종류의 입력은 &lt;code&gt;describe-key&lt;/code&gt; 및 &lt;code&gt;global-set-key&lt;/code&gt; 와 같은 명령에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8cd7e1bad968c38ed996dde43c44175da0393db" translate="yes" xml:space="preserve">
          <source>This last application is not a consequence of the idea of a parenthetical grouping; it is a separate feature that was assigned as a second meaning to the same &amp;lsquo;</source>
          <target state="translated">이 마지막 적용은 괄호로 묶은 아이디어의 결과가 아닙니다. 동일한 '에 두 번째 의미로 할당 된 별도의 기능입니다.</target>
        </trans-unit>
        <trans-unit id="945eebdaa1b234786ebd37b08ded017f1f541ffc" translate="yes" xml:space="preserve">
          <source>This last example shows that while the precedence order of action functions is fixed, as described in &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;, an action alist entry specified by a display action ranked lower in that order can affect the execution of a higher ranked display action.</source>
          <target state="translated">이 마지막 예제는 &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;창 선택&lt;/a&gt; 에서 설명한대로 작업 함수의 우선 순위가 고정되어 있지만 해당 순서에서 더 낮은 순위의 표시 작업에 의해 지정된 작업 목록 항목이 더 높은 순위의 표시 작업의 실행에 영향을 미칠 수 있음을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d08e2fc4d861b226b6fd5475d079f142eba7c3bc" translate="yes" xml:space="preserve">
          <source>This limit, with the associated error when it is exceeded, is one way Emacs Lisp avoids infinite recursion on an ill-defined function. If you increase the value of &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; too much, such code can cause stack overflow instead. On some systems, this overflow can be handled. In that case, normal Lisp evaluation is interrupted and control is transferred back to the top level command loop (&lt;code&gt;top-level&lt;/code&gt;). Note that there is no way to enter Emacs Lisp debugger in this situation. See &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;.</source>
          <target state="translated">이 제한은 초과시 관련 오류와 함께 Emacs Lisp가 잘못 정의 된 함수에 대한 무한 재귀를 피하는 한 가지 방법입니다. &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; 의 값을 너무 많이 늘리면 이러한 코드로 인해 대신 스택 오버플로가 발생할 수 있습니다. 일부 시스템에서는이 오버플로를 처리 할 수 ​​있습니다. 이 경우 정상적인 Lisp 평가가 중단되고 제어가 최상위 명령 루프 ( &lt;code&gt;top-level&lt;/code&gt; ) 로 다시 전송됩니다 . 이 상황에서는 Emacs Lisp 디버거로 들어갈 수있는 방법이 없습니다. &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;오류 디버깅을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bcc8007c7808126b523ec31d5e48b3565a52f3b5" translate="yes" xml:space="preserve">
          <source>This limit, with the associated error when it is exceeded, is one way that Lisp avoids infinite recursion on an ill-defined function. &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; provides another limit on depth of nesting. See &lt;a href=&quot;eval#Definition-of-max_002dlisp_002deval_002ddepth&quot;&gt;Eval&lt;/a&gt;.</source>
          <target state="translated">초과시 관련된 오류와 함께이 제한은 Lisp가 잘못 정의 된 함수에서 무한 재귀를 피하는 한 가지 방법입니다. &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; 는 중첩 깊이에 대한 또 다른 제한을 제공합니다. &lt;a href=&quot;eval#Definition-of-max_002dlisp_002deval_002ddepth&quot;&gt;Eval을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d78e690f62161bc69da4b0989efd209c5bdb08c" translate="yes" xml:space="preserve">
          <source>This list contains one format definition for each defined file format. Each format definition is a list of this form:</source>
          <target state="translated">이 목록에는 정의 된 각 파일 형식에 대한 하나의 형식 정의가 포함됩니다. 각 형식 정의는 다음 형식의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="df354d8c21824cc6e8ce1f7f3d36ad96df9240d1" translate="yes" xml:space="preserve">
          <source>This list defines the meaning and severity order of the warning severity levels. Each element defines one severity level, and they are arranged in order of decreasing severity.</source>
          <target state="translated">이 목록은 경고 심각도 수준의 의미와 심각도 순서를 정의합니다. 각 요소는 하나의 심각도 수준을 정의하며 심각도가 낮은 순서대로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="3e2500a44049d519ddab4c6e86d75accf0d1a9e7" translate="yes" xml:space="preserve">
          <source>This list specifies which warning types should not be displayed immediately for the user. Each element of the list should be a list of symbols. If its elements match the first elements in a warning type, then that warning is not displayed immediately.</source>
          <target state="translated">이 목록은 사용자에게 즉시 표시되지 않아야하는 경고 유형을 지정합니다. 목록의 각 요소는 기호 목록이어야합니다. 해당 요소가 경고 유형의 첫 번째 요소와 일치하면 해당 경고가 즉시 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2a489bb904f4efa05b56db344d7277e660987478" translate="yes" xml:space="preserve">
          <source>This list specifies which warning types should not be logged in the warnings buffer. Each element of the list should be a list of symbols. If it matches the first few elements in a warning type, then that warning is not logged.</source>
          <target state="translated">이 목록은 경고 버퍼에 기록되지 않아야하는 경고 유형을 지정합니다. 목록의 각 요소는 기호 목록이어야합니다. 경고 유형의 처음 몇 개 요소와 일치하면 해당 경고가 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ad164428461f53ec9c5402b74b2aab4081066a7" translate="yes" xml:space="preserve">
          <source>This macro adds the quotation prefix &amp;lsquo;</source>
          <target state="translated">이 매크로는 인용 접두사 '</target>
        </trans-unit>
        <trans-unit id="7dd4c963005c973585b291aa5d7643be1547b0bc" translate="yes" xml:space="preserve">
          <source>This macro allows for more complex &lt;code&gt;setf&lt;/code&gt; expansions than the previous form. You may need to use this form, for example, if there is no simple setter function to call, or if there is one but it requires different arguments to the place form.</source>
          <target state="translated">이 매크로는 이전 형식보다 더 복잡한 &lt;code&gt;setf&lt;/code&gt; 확장을 허용합니다 . 예를 들어 호출 할 간단한 setter 함수가 없거나 하나가 있지만 place 양식에 대해 다른 인수가 필요한 경우이 양식을 사용해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="758f1ec089d15ebe80a8c17241dfb12b51b48fa5" translate="yes" xml:space="preserve">
          <source>This macro arranges to evaluate &lt;var&gt;body&lt;/var&gt; at the end of loading the file &lt;var&gt;library&lt;/var&gt;, each time &lt;var&gt;library&lt;/var&gt; is loaded. If &lt;var&gt;library&lt;/var&gt; is already loaded, it evaluates &lt;var&gt;body&lt;/var&gt; right away.</source>
          <target state="translated">이 매크로는 &lt;var&gt;library&lt;/var&gt; 가로드 될 때마다 파일 &lt;var&gt;library&lt;/var&gt; 로드가 끝날 때 &lt;var&gt;body&lt;/var&gt; 을 평가하도록 정렬합니다 . &lt;var&gt;library&lt;/var&gt; 가 이미로드 된 경우 즉시 &lt;var&gt;body&lt;/var&gt; 을 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="c57467ea7cad180121107de2e88fb6ef9897e91e" translate="yes" xml:space="preserve">
          <source>This macro binds the variables defined in &lt;var&gt;var-sequence&lt;/var&gt; to the values that are the corresponding elements of &lt;var&gt;val-sequence&lt;/var&gt;. This is known as &lt;em&gt;destructuring binding&lt;/em&gt;. The elements of &lt;var&gt;var-sequence&lt;/var&gt; can themselves include sequences, allowing for nested destructuring.</source>
          <target state="translated">이 매크로는 &lt;var&gt;var-sequence&lt;/var&gt; 에 정의 된 변수 를 &lt;var&gt;val-sequence&lt;/var&gt; 의 해당 요소 인 값 에 바인딩합니다 . 이를 &lt;em&gt;구조화 바인딩이라고&lt;/em&gt; 합니다. &lt;var&gt;var-sequence&lt;/var&gt; 의 요소 자체에 시퀀스 가 포함될 수 있으므로 중첩 된 구조 해제가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="6f711b665c2a8ce453cb2ebda16137c0492020c9" translate="yes" xml:space="preserve">
          <source>This macro changes neither the ordering of recently selected windows nor the buffer list.</source>
          <target state="translated">이 매크로는 최근에 선택한 창의 순서 나 버퍼 목록을 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="336ca36b3e60f284ef8f4d857ab0f0bc6028697b" translate="yes" xml:space="preserve">
          <source>This macro creates a new list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;var&gt;element&lt;/var&gt; and whose &lt;small&gt;CDR&lt;/small&gt; is the list specified by &lt;var&gt;listname&lt;/var&gt;, and saves that list in &lt;var&gt;listname&lt;/var&gt;. In the simplest case, &lt;var&gt;listname&lt;/var&gt; is an unquoted symbol naming a list, and this macro is equivalent to &lt;code&gt;(setq&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 &lt;small&gt;CAR&lt;/small&gt; 이 &lt;var&gt;element&lt;/var&gt; 이고 &lt;small&gt;CDR&lt;/small&gt; 이 &lt;var&gt;listname&lt;/var&gt; 으로 지정된 목록 인 새 목록을 만들고 해당 목록을 &lt;var&gt;listname&lt;/var&gt; 에 저장합니다 . 가장 간단한 경우, &lt;var&gt;listname&lt;/var&gt; 은 목록을 명명하는 따옴표가없는 기호 이며이 매크로는 &lt;code&gt;(setq&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="40bbfc75de3d0eb2da70ce732701a0dd875cf1fc" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;face&lt;/var&gt; as a named face whose default face spec is given by &lt;var&gt;spec&lt;/var&gt;. You should not quote the symbol &lt;var&gt;face&lt;/var&gt;, and it should not end in &amp;lsquo;</source>
          <target state="translated">이 매크로는 선언 &lt;var&gt;face&lt;/var&gt; 기본적 얼굴 사양에 의해 주어진다 명명 된 얼굴로 &lt;var&gt;spec&lt;/var&gt; . &lt;var&gt;face&lt;/var&gt; 기호를 인용 해서는 안되며 '로 끝나서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="9f34b7009b683930f8acb38d1a8798313c8a8307" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;option&lt;/var&gt; as a user option (i.e., a customizable variable). You should not quote &lt;var&gt;option&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 &lt;var&gt;option&lt;/var&gt; 을 사용자 옵션 (즉, 사용자 정의 가능한 변수)으로 선언합니다 . &lt;var&gt;option&lt;/var&gt; 인용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="2dfe746bac95bbefea5c1811fe5a6eda9b910ee0" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;theme&lt;/var&gt; (a symbol) as the name of a Custom theme. The optional argument &lt;var&gt;doc&lt;/var&gt; should be a string describing the theme; this is the description shown when the user invokes the &lt;code&gt;describe-theme&lt;/code&gt; command or types</source>
          <target state="translated">이 매크로는 &lt;var&gt;theme&lt;/var&gt; (심볼)를 사용자 지정 테마의 이름으로 선언합니다 . 선택적 인수 &lt;var&gt;doc&lt;/var&gt; 는 테마를 설명하는 문자열이어야합니다. 사용자가 &lt;code&gt;describe-theme&lt;/code&gt; 명령을 호출 할 때 표시되는 설명입니다.</target>
        </trans-unit>
        <trans-unit id="4518c52ab2f4211c21f7c20ef2c1d6d61487464c" translate="yes" xml:space="preserve">
          <source>This macro declares that the theme named &lt;var&gt;theme&lt;/var&gt; has been fully specified.</source>
          <target state="translated">이 매크로는 theme라는 &lt;var&gt;theme&lt;/var&gt; 가 완전히 지정되었음을 선언 합니다.</target>
        </trans-unit>
        <trans-unit id="e51efd2a81640a3eaa23b7ac36af0f12627a503f" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;code&gt;obsolete-face&lt;/code&gt; as an alias for &lt;var&gt;current-face&lt;/var&gt;, and also marks it as obsolete, indicating that it may be removed in future. &lt;var&gt;when&lt;/var&gt; should be a string indicating when &lt;code&gt;obsolete-face&lt;/code&gt; was made obsolete (usually a version number string).</source>
          <target state="translated">이 매크로는 &lt;code&gt;obsolete-face&lt;/code&gt; 를 &lt;var&gt;current-face&lt;/var&gt; 의 별칭으로 정의하고 사용되지 않음으로 표시하여 향후 제거 될 수 있음을 나타냅니다. &lt;var&gt;when&lt;/var&gt; 은 &lt;code&gt;obsolete-face&lt;/code&gt; 이 쓸모 없게 된 시기를 나타내는 문자열이어야합니다 (일반적으로 버전 번호 문자열).</target>
        </trans-unit>
        <trans-unit id="af478a0091278edd21c33f699593f63d6a3b16e9" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;symbol&lt;/var&gt; as an image name. The arguments &lt;var&gt;specs&lt;/var&gt; is a list which specifies how to display the image. The third argument, &lt;var&gt;doc&lt;/var&gt;, is an optional documentation string.</source>
          <target state="translated">이 매크로는 &lt;var&gt;symbol&lt;/var&gt; 을 이미지 이름으로 정의합니다 . 인수 &lt;var&gt;specs&lt;/var&gt; 은 이미지를 표시하는 방법을 지정하는 목록입니다. 세 번째 인수 &lt;var&gt;doc&lt;/var&gt; 는 선택적 문서 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="7eca1fac075588092c93c9ef94fd2185bba6a5ed" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;variable&lt;/var&gt; as a variable with initial value &lt;var&gt;value&lt;/var&gt; and &lt;var&gt;docstring&lt;/var&gt;, and marks it as automatically buffer-local. It is equivalent to calling &lt;code&gt;defvar&lt;/code&gt; followed by &lt;code&gt;make-variable-buffer-local&lt;/code&gt;. &lt;var&gt;variable&lt;/var&gt; should be an unquoted symbol.</source>
          <target state="translated">이 매크로는 &lt;var&gt;variable&lt;/var&gt; 를 초기 값 &lt;var&gt;value&lt;/var&gt; 과 &lt;var&gt;docstring&lt;/var&gt; 이 있는 변수 로 정의 하고 자동으로 버퍼 로컬로 표시합니다. &lt;code&gt;defvar&lt;/code&gt; 다음에 &lt;code&gt;make-variable-buffer-local&lt;/code&gt; 을 호출하는 것과 같습니다 . &lt;var&gt;variable&lt;/var&gt; 는 따옴표가없는 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d064b45275a2c98f8eb0eefcc1a0a5b56ffc1c2e" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;variant&lt;/var&gt; as a major mode command, using &lt;var&gt;name&lt;/var&gt; as the string form of the mode name. &lt;var&gt;variant&lt;/var&gt; and &lt;var&gt;parent&lt;/var&gt; should be unquoted symbols.</source>
          <target state="translated">이 매크로는 &lt;var&gt;name&lt;/var&gt; 을 모드 이름의 문자열 형식으로 사용하여 &lt;var&gt;variant&lt;/var&gt; 을 주 모드 명령으로 정의합니다 . &lt;var&gt;variant&lt;/var&gt; 및 &lt;var&gt;parent&lt;/var&gt; 는 따옴표가없는 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e880807d5cb4a8f957d3faabeec3ce262fd66e92" translate="yes" xml:space="preserve">
          <source>This macro defines a generic function with the specified &lt;var&gt;name&lt;/var&gt; and &lt;var&gt;arguments&lt;/var&gt;. If &lt;var&gt;body&lt;/var&gt; is present, it provides the default implementation. If &lt;var&gt;documentation&lt;/var&gt; is present (it should always be), it specifies the documentation string for the generic function, in the form &lt;code&gt;(:documentation &lt;var&gt;docstring&lt;/var&gt;)&lt;/code&gt;. The optional &lt;var&gt;options-and-methods&lt;/var&gt; can be one of the following forms:</source>
          <target state="translated">이 매크로는 지정된 &lt;var&gt;name&lt;/var&gt; 과 &lt;var&gt;arguments&lt;/var&gt; 사용하여 일반 함수를 정의합니다 . &lt;var&gt;body&lt;/var&gt; 가있는 경우 기본 구현을 제공합니다. &lt;var&gt;documentation&lt;/var&gt; 가있는 경우 (항상 있어야 함) 일반 함수에 대한 문서 문자열을 &lt;code&gt;(:documentation &lt;var&gt;docstring&lt;/var&gt;)&lt;/code&gt; 형식으로 지정합니다 . 선택적 &lt;var&gt;options-and-methods&lt;/var&gt; 은 다음 형식 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1581bdfea49b7d91c21dea9fde0735a6274156d" translate="yes" xml:space="preserve">
          <source>This macro defines a generic mode command named &lt;var&gt;mode&lt;/var&gt; (a symbol, not quoted). The optional argument &lt;var&gt;docstring&lt;/var&gt; is the documentation for the mode command. If you do not supply it, &lt;code&gt;define-generic-mode&lt;/code&gt; generates one by default.</source>
          <target state="translated">이 매크로는 &lt;var&gt;mode&lt;/var&gt; (따옴표가 아닌 기호) 라는 일반 모드 명령을 정의합니다 . 선택적 인수 &lt;var&gt;docstring&lt;/var&gt; 은 모드 명령에 대한 문서입니다. 이를 제공하지 않으면 &lt;code&gt;define-generic-mode&lt;/code&gt; 가 기본적으로 하나를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fc780370bfdcea66201ad2e2e48a85cad452cdef" translate="yes" xml:space="preserve">
          <source>This macro defines a help command named &lt;var&gt;fname&lt;/var&gt; that acts like a prefix key that shows a list of the subcommands it offers.</source>
          <target state="translated">이 매크로는 제공하는 하위 명령 목록을 표시하는 &lt;var&gt;fname&lt;/var&gt; 두부 키처럼 작동하는 fname 이라는 도움말 명령을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="ccb93ffc23f150e9bd4d87e556589184b1606d91" translate="yes" xml:space="preserve">
          <source>This macro defines a new minor mode whose name is &lt;var&gt;mode&lt;/var&gt; (a symbol). It defines a command named &lt;var&gt;mode&lt;/var&gt; to toggle the minor mode, with &lt;var&gt;doc&lt;/var&gt; as its documentation string.</source>
          <target state="translated">이 매크로는 이름이 &lt;var&gt;mode&lt;/var&gt; (기호) 인 새로운 부 모드를 정의합니다 . 이것은 문서 문자열 로 &lt;var&gt;doc&lt;/var&gt; 를 사용하여 부 &lt;var&gt;mode&lt;/var&gt; 를 토글하는 mode 라는 명령을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="b5d66b480e164cdf0b5c545618b56e07bcfa1492" translate="yes" xml:space="preserve">
          <source>This macro defines a particular implementation for the generic function called &lt;var&gt;name&lt;/var&gt;. The implementation code is given by &lt;var&gt;body&lt;/var&gt;. If present, &lt;var&gt;docstring&lt;/var&gt; is the documentation string for the method. The &lt;var&gt;arguments&lt;/var&gt; list, which must be identical in all the methods that implement a generic function, and must match the argument list of that function, provides argument specializers of the form &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;arg&lt;/var&gt; is the argument name as specified in the &lt;code&gt;cl-defgeneric&lt;/code&gt; call, and &lt;var&gt;spec&lt;/var&gt; is one of the following specializer forms:</source>
          <target state="translated">이 매크로는 &lt;var&gt;name&lt;/var&gt; 이라는 일반 함수에 대한 특정 구현을 정의합니다 . 구현 코드는 &lt;var&gt;body&lt;/var&gt; 로 제공됩니다 . 있는 경우 &lt;var&gt;docstring&lt;/var&gt; 은 메서드에 대한 문서 문자열입니다. &lt;var&gt;arguments&lt;/var&gt; 일반적인 기능을 구현하고, 그 함수의 인수 목록과 일치해야하는 모든 방법에서 동일해야합니다 목록, 양식의 인수 specializers 제공 &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; , &lt;var&gt;arg&lt;/var&gt; 에 지정된대로 인수 이름입니다 &lt;code&gt;cl-defgeneric&lt;/code&gt; 호출 및 &lt;var&gt;spec&lt;/var&gt; 은 다음 전문화 형식 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="1bf762513226f9e0d0c76fe0ab01e192966cff40" translate="yes" xml:space="preserve">
          <source>This macro defines a piece of advice and adds it to the function named &lt;var&gt;symbol&lt;/var&gt;. The advice is an anonymous function if &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or a function named &lt;code&gt;symbol@name&lt;/code&gt;. See &lt;code&gt;advice-add&lt;/code&gt; for explanation of other arguments.</source>
          <target state="translated">이 매크로는 조언을 정의하고 &lt;var&gt;symbol&lt;/var&gt; 이라는 함수에 추가합니다 . 조언은 &lt;var&gt;name&lt;/var&gt; 이 &lt;code&gt;nil&lt;/code&gt; 인 경우 익명 함수 이거나 &lt;code&gt;symbol@name&lt;/code&gt; 이라는 함수 입니다. 다른 인수에 대한 설명은 &lt;code&gt;advice-add&lt;/code&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="df2969a08f4547b130e03b348f89af4cba3fe3fe" translate="yes" xml:space="preserve">
          <source>This macro defines a pop-up menu and/or menu bar submenu, whose contents are given by &lt;var&gt;menu&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 팝업 메뉴 및 / 또는 메뉴 표시 줄 하위 메뉴를 정의하며 그 내용은 &lt;var&gt;menu&lt;/var&gt; 에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="bd6879d6f7772948c4277202d4a6fc769b411940" translate="yes" xml:space="preserve">
          <source>This macro defines an inline function. Its syntax is exactly the same as &lt;code&gt;defun&lt;/code&gt; (see &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;).</source>
          <target state="translated">이 매크로는 인라인 함수를 정의합니다. 구문은 &lt;code&gt;defun&lt;/code&gt; 과 정확히 동일합니다 ( &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;함수 정의&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0ddeba2369fd28d40fefa3dde64629d58a6b1f8a" translate="yes" xml:space="preserve">
          <source>This macro does not call &lt;code&gt;temp-buffer-show-function&lt;/code&gt;. Rather, it passes the &lt;var&gt;action&lt;/var&gt; argument to &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) in order to display the buffer.</source>
          <target state="translated">이 매크로는 &lt;code&gt;temp-buffer-show-function&lt;/code&gt; 을 호출하지 않습니다 . 오히려 &lt;code&gt;display-buffer&lt;/code&gt; 를 표시 하기 위해 display-buffer ( &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;창 선택&lt;/a&gt; 참조 )에 &lt;var&gt;action&lt;/var&gt; 인수를 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="d8b213d179e92ff57cb3f968b254741602508713" translate="yes" xml:space="preserve">
          <source>This macro does not save or restore anything about the sizes, arrangement or contents of windows; therefore, if &lt;var&gt;forms&lt;/var&gt; change them, the change persists. If the previously selected window of some frame is no longer live at the time of exit from &lt;var&gt;forms&lt;/var&gt;, that frame&amp;rsquo;s selected window is left alone. If the previously selected window is no longer live, then whatever window is selected at the end of &lt;var&gt;forms&lt;/var&gt; remains selected. The current buffer is restored if and only if it is still live when exiting &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 창의 크기, 배열 또는 내용에 대한 어떤 것도 저장하거나 복원하지 않습니다. 따라서 &lt;var&gt;forms&lt;/var&gt; 이 변경되면 변경 사항이 지속됩니다. 이전에 선택한 일부 프레임의 창이 &lt;var&gt;forms&lt;/var&gt; 종료시 더 이상 활성 상태가 아닌 경우 해당 프레임의 선택한 창은 그대로 유지됩니다. 이전에 선택한 창이 더 이상 활성 상태가 아닌 경우 &lt;var&gt;forms&lt;/var&gt; 끝에서 선택한 모든 창이 선택된 상태로 유지됩니다. 현재 버퍼는 &lt;var&gt;forms&lt;/var&gt; 종료 할 때 여전히 활성 상태 인 경우에만 복원됩니다 .</target>
        </trans-unit>
        <trans-unit id="ae86586511d482808422d2e50c0a731fbe37e34b" translate="yes" xml:space="preserve">
          <source>This macro enables you to easily define &lt;code&gt;setf&lt;/code&gt; methods for simple cases. &lt;var&gt;name&lt;/var&gt; is the name of a function, macro, or special form. You can use this macro whenever &lt;var&gt;name&lt;/var&gt; has a directly corresponding &lt;var&gt;setter&lt;/var&gt; function that updates it, e.g., &lt;code&gt;(gv-define-simple-setter car setcar)&lt;/code&gt;.</source>
          <target state="translated">이 매크로를 사용하면 간단한 경우에 &lt;code&gt;setf&lt;/code&gt; 메서드 를 쉽게 정의 할 수 있습니다 . &lt;var&gt;name&lt;/var&gt; 은 함수, 매크로 또는 특수 형식의 이름입니다. &lt;var&gt;name&lt;/var&gt; 에 직접 해당하는 &lt;var&gt;setter&lt;/var&gt; 함수 가 있을 때마다이 매크로를 사용할 수 있습니다 &lt;code&gt;(gv-define-simple-setter car setcar)&lt;/code&gt; 예 : (gv-define-simple-setter car setcar)) .</target>
        </trans-unit>
        <trans-unit id="1fb902944dc65c2f932044169c8fcd9b76aaa264" translate="yes" xml:space="preserve">
          <source>This macro evaluates &lt;var&gt;body&lt;/var&gt; like &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;), inserting any output produced by its forms into a buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;, which can be a buffer or the name of a buffer. (Frequently, &lt;var&gt;buffer-or-name&lt;/var&gt; is the value returned by the function &lt;code&gt;help-buffer&lt;/code&gt;.) This macro puts the specified buffer into Help mode and displays a message telling the user how to quit and scroll the help window. It selects the help window if the current value of the user option &lt;code&gt;help-window-select&lt;/code&gt; has been set accordingly. It returns the last value in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; ( &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;임시 디스플레이&lt;/a&gt; 참조 ) 와 같이 &lt;var&gt;body&lt;/var&gt; 평가 하여 해당 형식에 의해 생성 된 출력을 &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 지정된 버퍼에 삽입합니다 . 이는 버퍼 또는 버퍼의 이름 일 수 있습니다. (보통 &lt;var&gt;buffer-or-name&lt;/var&gt; 은 &lt;code&gt;help-buffer&lt;/code&gt; 함수에 의해 반환되는 값 입니다.)이 매크로는 지정된 버퍼를 도움말 모드로 전환하고 사용자에게 도움말 창을 종료하고 스크롤하는 방법을 알려주는 메시지를 표시합니다. 사용자 옵션 &lt;code&gt;help-window-select&lt;/code&gt; 의 현재 값이 적절하게 설정되어 있으면 도움말 창을 선택합니다 . &lt;var&gt;body&lt;/var&gt; 의 마지막 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6f61480d39d1ecb235b2cc0fd2383304353fc547" translate="yes" xml:space="preserve">
          <source>This macro evaluates &lt;var&gt;form&lt;/var&gt; and stores it in &lt;var&gt;place&lt;/var&gt;, which must be a valid generalized variable form. If there are several &lt;var&gt;place&lt;/var&gt; and &lt;var&gt;form&lt;/var&gt; pairs, the assignments are done sequentially just as with &lt;code&gt;setq&lt;/code&gt;. &lt;code&gt;setf&lt;/code&gt; returns the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 &lt;var&gt;form&lt;/var&gt; 평가 하고 유효한 일반 변수 형식이어야하는 &lt;var&gt;place&lt;/var&gt; 저장합니다 . &lt;var&gt;place&lt;/var&gt; 와 &lt;var&gt;form&lt;/var&gt; 쌍이 여러 개인 경우 할당은 &lt;code&gt;setq&lt;/code&gt; 와 마찬가지로 순차적으로 수행됩니다 . &lt;code&gt;setf&lt;/code&gt; 는 마지막 &lt;var&gt;form&lt;/var&gt; 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7abb8da61962a11ab49639b003be6d8bb328d07a" translate="yes" xml:space="preserve">
          <source>This macro evaluates the &lt;var&gt;body&lt;/var&gt; forms with the default permissions for new files temporarily set to &lt;var&gt;modes&lt;/var&gt; (whose value is as for &lt;code&gt;set-file-modes&lt;/code&gt; above). When finished, it restores the original default file permissions, and returns the value of the last form in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 임시로 &lt;var&gt;modes&lt;/var&gt; 로 설정된 새 파일에 대한 기본 권한으로 &lt;var&gt;body&lt;/var&gt; 양식을 평가합니다 (이 값은 위의 &lt;code&gt;set-file-modes&lt;/code&gt; 값임 ). 완료되면 원래 기본 파일 권한을 복원하고 &lt;var&gt;body&lt;/var&gt; 에있는 마지막 양식의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b129de8793865baa627dc72e801c91e5f70bb260" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; after arranging for the specified &lt;var&gt;function&lt;/var&gt; to be called via &lt;code&gt;minibuffer-setup-hook&lt;/code&gt;. By default, &lt;var&gt;function&lt;/var&gt; is called before the other functions in the &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; list, but if &lt;var&gt;function&lt;/var&gt; is of the form &lt;code&gt;(:append&amp;nbsp;&lt;var&gt;func&lt;/var&gt;)&lt;/code&gt;, &lt;var&gt;func&lt;/var&gt; will be called &lt;em&gt;after&lt;/em&gt; the other hook functions.</source>
          <target state="translated">이 매크로 는 &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; 을 통해 호출되도록 지정된 &lt;var&gt;function&lt;/var&gt; 를 정렬 한 후 &lt;var&gt;body&lt;/var&gt; 를 실행 합니다 . 기본적으로 &lt;var&gt;function&lt;/var&gt; 에서 다른 함수 전에 호출되는 &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; 목록 만있는 경우 &lt;var&gt;function&lt;/var&gt; 형태입니다 &lt;code&gt;(:append&amp;nbsp;&lt;var&gt;func&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;func&lt;/var&gt; ) , &lt;var&gt;func&lt;/var&gt; 호출됩니다 &lt;em&gt;후&lt;/em&gt; 다른 후크 기능을합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27e32e2f6b35805b4a22fbfa454e0d6c350e2f0c" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; forms in sequence, but allows quitting, at least locally, within &lt;var&gt;body&lt;/var&gt; even if &lt;code&gt;inhibit-quit&lt;/code&gt; was non-&lt;code&gt;nil&lt;/code&gt; outside this construct. It returns the value of the last form in &lt;var&gt;body&lt;/var&gt;, unless exited by quitting, in which case it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 &lt;var&gt;body&lt;/var&gt; 형식을 순서대로 실행 하지만, 이 구조 외부에서 &lt;code&gt;inhibit-quit&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니더라도 &lt;var&gt;body&lt;/var&gt; 내에서 적어도 로컬에서 종료 할 수 있습니다 . 종료하여 종료하지 않는 한 &lt;var&gt;body&lt;/var&gt; 에서 마지막 형식의 값을 반환합니다 . 이 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4079406b3a31f1f7d3beeb0e88719167b46392b2" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; using &lt;var&gt;table&lt;/var&gt; as the current syntax table. It returns the value of the last form in &lt;var&gt;body&lt;/var&gt;, after restoring the old current syntax table.</source>
          <target state="translated">이 매크로 는 현재 구문 테이블로 &lt;var&gt;table&lt;/var&gt; 을 사용하여 &lt;var&gt;body&lt;/var&gt; 를 실행 합니다. 이전 현재 구문 테이블을 복원 한 후 &lt;var&gt;body&lt;/var&gt; 에있는 마지막 양식의 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a87f12335539ef121c88feeedfb11d453188e0d7" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, but tells all &lt;code&gt;run-mode-hooks&lt;/code&gt; calls during the execution of &lt;var&gt;body&lt;/var&gt; to delay running their hooks. The hooks will actually run during the next call to &lt;code&gt;run-mode-hooks&lt;/code&gt; after the end of the &lt;code&gt;delay-mode-hooks&lt;/code&gt; construct.</source>
          <target state="translated">이 매크로가 실행 된 &lt;var&gt;body&lt;/var&gt; ,하지만 모든 이야기 &lt;code&gt;run-mode-hooks&lt;/code&gt; 의 실행 중에 호출 &lt;var&gt;body&lt;/var&gt; 자신의 후크 실행을 지연 할 수 있습니다. 후크는 실제로 &lt;code&gt;delay-mode-hooks&lt;/code&gt; 구성 이 끝난 후 &lt;code&gt;run-mode-hooks&lt;/code&gt; 대한 다음 호출 중에 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="3be2fcb384655deb63d77c707b73dc06109fc91b" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, like &lt;code&gt;progn&lt;/code&gt; does (see &lt;a href=&quot;sequencing#Sequencing&quot;&gt;progn&lt;/a&gt;), with &lt;var&gt;coding-systems&lt;/var&gt; at the front of the priority list for coding systems. &lt;var&gt;coding-systems&lt;/var&gt; should be a list of coding systems to prefer during execution of &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로가 실행 된 &lt;var&gt;body&lt;/var&gt; 같이 &lt;code&gt;progn&lt;/code&gt; 는 않는다 (참조 &lt;a href=&quot;sequencing#Sequencing&quot;&gt;progn&lt;/a&gt; 으로) &lt;var&gt;coding-systems&lt;/var&gt; 코딩 시스템을위한 우선 순위리스트의 전면. &lt;var&gt;coding-systems&lt;/var&gt; 은 &lt;var&gt;body&lt;/var&gt; 실행 중에 선호하는 코딩 시스템 목록이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7ae966482029b97e67b7005a2ce5f7d6b14afae5" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, saving and restoring the match data around it. The return value is the value of the last form in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 &lt;var&gt;body&lt;/var&gt; 를 실행 하여 그 주변의 일치 데이터를 저장하고 복원합니다. 반환 값은 &lt;var&gt;body&lt;/var&gt; 의 마지막 양식 값입니다 .</target>
        </trans-unit>
        <trans-unit id="f640cea389a3967eacb832ab28e86e3a59cb68ee" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, with generation of mouse motion events enabled. Typically, &lt;var&gt;body&lt;/var&gt; would use &lt;code&gt;read-event&lt;/code&gt; to read the motion events and modify the display accordingly. See &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;Motion Events&lt;/a&gt;, for the format of mouse motion events.</source>
          <target state="translated">이 매크로 는 마우스 모션 이벤트 생성이 활성화 된 상태로 &lt;var&gt;body&lt;/var&gt; 를 실행 합니다. 일반적으로 &lt;var&gt;body&lt;/var&gt; 는 &lt;code&gt;read-event&lt;/code&gt; 를 사용 하여 모션 이벤트 를 읽고 그에 따라 디스플레이를 수정합니다. 마우스 모션 이벤트의 형식은 &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;모션 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8745bde0573038b4f2bad95e7448ff5307d09cbc" translate="yes" xml:space="preserve">
          <source>This macro executes the &lt;var&gt;body&lt;/var&gt; forms with &lt;code&gt;standard-output&lt;/code&gt; set up to feed output into a string. Then it returns that string.</source>
          <target state="translated">이 매크로는 출력을 문자열로 공급하도록 설정된 &lt;code&gt;standard-output&lt;/code&gt; &lt;var&gt;body&lt;/var&gt; 양식을 실행 합니다. 그런 다음 해당 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac571b79dcf83497cdc095b4b88a5f08d1b0feda" translate="yes" xml:space="preserve">
          <source>This macro expands the form &lt;code&gt;(setf (&lt;var&gt;name&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;) &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; by first binding the &lt;code&gt;setf&lt;/code&gt; argument forms &lt;code&gt;(&lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; according to &lt;var&gt;arglist&lt;/var&gt;, and then executing &lt;var&gt;body&lt;/var&gt;. &lt;var&gt;body&lt;/var&gt; should return a Lisp form that does the assignment, and finally returns the value that was set. An example of using this macro is:</source>
          <target state="translated">이 매크로 는 먼저 &lt;var&gt;arglist&lt;/var&gt; 에 따라 &lt;code&gt;setf&lt;/code&gt; 인수 형식 &lt;code&gt;(&lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; &lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt; &amp;hellip;)을 바인딩 한 다음 &lt;var&gt;body&lt;/var&gt; 를 실행 하여 형식 &lt;code&gt;(setf (&lt;var&gt;name&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;) &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 을 확장합니다 . &lt;var&gt;body&lt;/var&gt; 는 할당을 수행하는 Lisp 양식을 반환하고 마지막으로 설정된 값을 반환해야합니다. 이 매크로를 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d7975753990e004132a21e45f607c6a80990bd7b" translate="yes" xml:space="preserve">
          <source>This macro expands to a constant expression specifying the maximum possible value for an &lt;code&gt;emacs_limb_t&lt;/code&gt; object. The expression is suitable for use in &lt;code&gt;#if&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 &lt;code&gt;emacs_limb_t&lt;/code&gt; 객체에 대해 가능한 최대 값을 지정하는 상수 표현식으로 확장됩니다 . 표현식은 &lt;code&gt;#if&lt;/code&gt; 에서 사용하기에 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="e60951e2d0ea406aacfcfbca8044c42e0c4d8865" translate="yes" xml:space="preserve">
          <source>This macro expands, if appropriate, into a call to &lt;code&gt;set-buffer-multibyte&lt;/code&gt; that will be executed when the compiled program is actually run.</source>
          <target state="translated">이 매크로는 적절한 경우 컴파일 된 프로그램이 실제로 실행될 때 실행되는 &lt;code&gt;set-buffer-multibyte&lt;/code&gt; 호출로 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="dfcf74ca1d7f576cf6dad74cd20210b20966a147" translate="yes" xml:space="preserve">
          <source>This macro ignores its arguments and evaluates to &lt;code&gt;nil&lt;/code&gt;; it has no run-time effect. However, when a &lt;code&gt;declare&lt;/code&gt; form occurs in the &lt;var&gt;declare&lt;/var&gt; argument of a &lt;code&gt;defun&lt;/code&gt; or &lt;code&gt;defsubst&lt;/code&gt; function definition (see &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;) or a &lt;code&gt;defmacro&lt;/code&gt; macro definition (see &lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;Defining Macros&lt;/a&gt;), it appends the properties specified by &lt;var&gt;specs&lt;/var&gt; to the function or macro. This work is specially performed by &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defsubst&lt;/code&gt;, and &lt;code&gt;defmacro&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 인수를 무시하고 &lt;code&gt;nil&lt;/code&gt; 로 평가됩니다 . 런타임 효과가 없습니다. 그러나, 경우에 &lt;code&gt;declare&lt;/code&gt; 형태는 발생 &lt;var&gt;declare&lt;/var&gt; (A)의 인수 &lt;code&gt;defun&lt;/code&gt; 는 또는 &lt;code&gt;defsubst&lt;/code&gt; (참조 : 함수 정의 &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;함수를 정의&lt;/a&gt; ) 또는 &lt;code&gt;defmacro&lt;/code&gt; 매크로 정의 (참고 &lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;정의 매크로&lt;/a&gt; )는에 의해 지정된 속성에 추가 &lt;var&gt;specs&lt;/var&gt; 함수 또는 매크로한다. 이 작업은 &lt;code&gt;defun&lt;/code&gt; , &lt;code&gt;defsubst&lt;/code&gt; 및 &lt;code&gt;defmacro&lt;/code&gt; 에 의해 특별히 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="fde95a9f8f52ccfb477529a522c6da3d80c48947" translate="yes" xml:space="preserve">
          <source>This macro is analogous to &lt;code&gt;let&lt;/code&gt; but creates &amp;ldquo;lazy&amp;rdquo; variable bindings. Any binding has the form &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt;&amp;nbsp;&lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt;. Unlike &lt;code&gt;let&lt;/code&gt;, the evaluation of any &lt;var&gt;value-form&lt;/var&gt; is deferred until the binding of the according &lt;var&gt;symbol&lt;/var&gt; is used for the first time when evaluating the &lt;var&gt;forms&lt;/var&gt;. Any &lt;var&gt;value-form&lt;/var&gt; is evaluated at most once. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 &lt;code&gt;let&lt;/code&gt; 과 유사 하지만 &quot;지연&quot;변수 바인딩을 생성합니다. 모든 바인딩의 형식은 &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt;&amp;nbsp;&lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt; 입니다. &lt;code&gt;let&lt;/code&gt; 과 달리 모든 &lt;var&gt;value-form&lt;/var&gt; 평가는 &lt;var&gt;forms&lt;/var&gt; 평가할 때 해당 &lt;var&gt;symbol&lt;/var&gt; 의 바인딩이 처음으로 사용될 때까지 연기 됩니다 . 모든 &lt;var&gt;value-form&lt;/var&gt; 은 최대 한 번만 평가됩니다. 이 매크로를 사용하려면 &lt;code&gt;lexical-binding&lt;/code&gt; 이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="240dcb5abf7ca46c0582e74a1ff5a3636c413914" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;dolist&lt;/code&gt; (see &lt;a href=&quot;iteration#Iteration&quot;&gt;dolist&lt;/a&gt;), except that &lt;var&gt;sequence&lt;/var&gt; can be a list, vector or string. This is primarily useful for side-effects.</source>
          <target state="translated">이 매크로는 &lt;var&gt;sequence&lt;/var&gt; 가 목록, 벡터 또는 문자열이 될 수 있다는 점을 제외하면 &lt;a href=&quot;iteration#Iteration&quot;&gt;dolist&lt;/a&gt; 와 &lt;code&gt;dolist&lt;/code&gt; ( dolist 참조 ) . 이것은 주로 부작용에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0b40c16c0c4b7a44ed78164f4e17c79e9f8efc88" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;ignore-errors&lt;/code&gt;, but will only ignore the specific error condition specified.</source>
          <target state="translated">이 매크로는 &lt;code&gt;ignore-errors&lt;/code&gt; 와 비슷하지만 지정된 특정 오류 조건 만 무시합니다.</target>
        </trans-unit>
        <trans-unit id="adc365839652648d99b231687a1c47add543bb61" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;save-excursion&lt;/code&gt;, but also saves and restores the mark location and &lt;code&gt;mark-active&lt;/code&gt;. This macro does what &lt;code&gt;save-excursion&lt;/code&gt; did before Emacs 25.1.</source>
          <target state="translated">이 매크로는 &lt;code&gt;save-excursion&lt;/code&gt; 과 유사 하지만 마크 위치 및 &lt;code&gt;mark-active&lt;/code&gt; 를 저장하고 복원합니다 . 이 매크로는 Emacs 25.1 이전에 &lt;code&gt;save-excursion&lt;/code&gt; 이 수행 한 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="9c8d159bb45571cc00a640c67ecde9318447b2a3" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;with-current-buffer-window&lt;/code&gt; but unlike that displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;&lt;em&gt;before&lt;/em&gt; running &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 &lt;code&gt;with-current-buffer-window&lt;/code&gt; 와 비슷하지만 &lt;var&gt;body&lt;/var&gt; &lt;em&gt;를&lt;/em&gt; 실행 &lt;em&gt;하기 전에 &lt;/em&gt; &lt;var&gt;buffer-or-name&lt;/var&gt; 으로 지정된 버퍼를 표시하는 것과는 다릅니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9c606e79e4f7d9aac9955c81c88d2abfd952ab5" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;with-temp-buffer-window&lt;/code&gt; but unlike that makes the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; current for running &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 &lt;code&gt;with-temp-buffer-window&lt;/code&gt; 와 비슷하지만 &lt;var&gt;buffer-or-name&lt;/var&gt; 에 의해 지정된 버퍼를 &lt;var&gt;body&lt;/var&gt; 실행을 위해 현재로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6038dcc9b2f50c57eda40b8b7d329c70ed7fdd8b" translate="yes" xml:space="preserve">
          <source>This macro is like a milder version of &lt;code&gt;ignore-errors&lt;/code&gt;. Rather than suppressing errors altogether, it converts them into messages. It uses the string &lt;var&gt;format&lt;/var&gt; to format the message. &lt;var&gt;format&lt;/var&gt; should contain a single &amp;lsquo;</source>
          <target state="translated">이 매크로는 &lt;code&gt;ignore-errors&lt;/code&gt; 의 더 가벼운 버전과 같습니다 . 오류를 모두 억제하는 대신 메시지로 변환합니다. 문자열 &lt;var&gt;format&lt;/var&gt; 을 사용하여 메시지를 형식화합니다. &lt;var&gt;format&lt;/var&gt; 에는 '</target>
        </trans-unit>
        <trans-unit id="1089adde9cb8e7b3d276f051078a571a9f5f568a" translate="yes" xml:space="preserve">
          <source>This macro is mainly useful in functions that can be called from timers, process filters, process sentinels, &lt;code&gt;pre-command-hook&lt;/code&gt;, &lt;code&gt;post-command-hook&lt;/code&gt;, and other places where &lt;code&gt;inhibit-quit&lt;/code&gt; is normally bound to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 주로 타이머, 프로세스 필터, 프로세스 센티넬, &lt;code&gt;pre-command-hook&lt;/code&gt; , &lt;code&gt;post-command-hook&lt;/code&gt; 및 &lt;code&gt;inhibit-quit&lt;/code&gt; 가 일반적으로 &lt;code&gt;t&lt;/code&gt; 에 바인딩 된 기타 위치에서 호출 할 수있는 함수에서 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="e51efa738bfd57738b122e9bf0d44a2c76376e14" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;code&gt;rx-let&lt;/code&gt;, except that the &lt;var&gt;bindings&lt;/var&gt; argument is evaluated (and thus needs to be quoted if it is a list literal), and the definitions are substituted at run time, which is required for &lt;code&gt;rx-to-string&lt;/code&gt; to work. Example:</source>
          <target state="translated">이 매크로는 &lt;var&gt;bindings&lt;/var&gt; 인수가 평가되고 (따라서 목록 리터럴 인 경우 따옴표로 묶어야 함) 정의가 런타임에 대체 된다는 점을 제외하면 &lt;code&gt;rx-let&lt;/code&gt; 과 유사합니다 . 이는 &lt;code&gt;rx-to-string&lt;/code&gt; 에 작업. 예:</target>
        </trans-unit>
        <trans-unit id="872ab3045f15ef8d0982acc9508a187db02ee5b8" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;. Like that construct, it executes &lt;var&gt;body&lt;/var&gt; while arranging to insert any output it prints into the buffer named &lt;var&gt;buffer-or-name&lt;/var&gt; and displays that buffer in some window. Unlike &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;, however, it does not automatically switch that buffer to Help mode.</source>
          <target state="translated">이 매크로는 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 와 유사합니다 . 그 구조와 마찬가지로, 그것은 출력하는 출력을 &lt;var&gt;buffer-or-name&lt;/var&gt; 이라는 버퍼 에 삽입하도록 배열하면서 &lt;var&gt;body&lt;/var&gt; 를 실행 하고 일부 창에 해당 버퍼를 표시합니다. 그러나 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 와는 달리 해당 버퍼를 도움말 모드로 자동 전환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="502593387f4dd3152d313e067601e6d922f59e20" translate="yes" xml:space="preserve">
          <source>This macro is the handy way to add the advice &lt;var&gt;function&lt;/var&gt; to the function stored in &lt;var&gt;place&lt;/var&gt; (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;).</source>
          <target state="translated">이 매크로는 &lt;var&gt;place&lt;/var&gt; 저장된 &lt;var&gt;function&lt;/var&gt; 에 advice 함수 를 추가하는 편리한 방법입니다 ( &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;일반화 된 변수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="898ca937f667c623cfe6374eeb5823fc4a782653" translate="yes" xml:space="preserve">
          <source>This macro is the simplest and safest way to evaluate forms while holding a mutex. It acquires &lt;var&gt;mutex&lt;/var&gt;, invokes &lt;var&gt;body&lt;/var&gt;, and then releases &lt;var&gt;mutex&lt;/var&gt;. It returns the result of &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 뮤텍스를 유지하면서 양식을 평가하는 가장 간단하고 안전한 방법입니다. &lt;var&gt;mutex&lt;/var&gt; 를 획득 하고 &lt;var&gt;body&lt;/var&gt; 를 호출 한 다음 &lt;var&gt;mutex&lt;/var&gt; 를 해제 합니다. &lt;var&gt;body&lt;/var&gt; 의 결과를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c57d845f68f572ad0dc1d29a18d8a2eefbb811b0" translate="yes" xml:space="preserve">
          <source>This macro is used in the command &lt;code&gt;help-for-help&lt;/code&gt; which is the binding of</source>
          <target state="translated">이 매크로는 다음의 바인딩 인 &lt;code&gt;help-for-help&lt;/code&gt; 명령에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="874301f3bae1355172b9f78c913283a4f918e535" translate="yes" xml:space="preserve">
          <source>This macro is useful when a function makes a possibly large number of repetitive changes to the buffer, and the change hooks would otherwise take a long time to run, were they to be run for each individual buffer modification. Emacs itself uses this macro, for example, in the commands &lt;code&gt;comment-region&lt;/code&gt; and &lt;code&gt;uncomment-region&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 함수가 버퍼를 반복적으로 많이 변경하고 변경 후크가 각 개별 버퍼 수정에 대해 실행되는 경우 실행하는 데 오랜 시간이 걸리는 경우에 유용합니다. Emacs 자체는 예를 들어 &lt;code&gt;comment-region&lt;/code&gt; 및 &lt;code&gt;uncomment-region&lt;/code&gt; 명령에서이 매크로를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ab579982465b6c0abfa804fafecbc12d00aafa32" translate="yes" xml:space="preserve">
          <source>This macro marks the variable &lt;var&gt;obsolete-name&lt;/var&gt; as obsolete and also makes it an alias for the variable &lt;var&gt;current-name&lt;/var&gt;. It is equivalent to the following:</source>
          <target state="translated">이 매크로는 &lt;var&gt;obsolete-name&lt;/var&gt; 변수를 쓸모없는 것으로 표시하고 변수 &lt;var&gt;current-name&lt;/var&gt; 의 별칭으로 만듭니다 . 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c10b428bbf4c831a02afbd670c89c65a2bf0ac8a" translate="yes" xml:space="preserve">
          <source>This macro provides a convenient way to examine the &lt;small&gt;CAR&lt;/small&gt; of a list, and take it off the list, all at once. It operates on the list stored in &lt;var&gt;listname&lt;/var&gt;. It removes the first element from the list, saves the &lt;small&gt;CDR&lt;/small&gt; into &lt;var&gt;listname&lt;/var&gt;, then returns the removed element.</source>
          <target state="translated">이 매크로는 목록 의 &lt;small&gt;CAR&lt;/small&gt; 을 검사 하고 목록에서 한 번에 제거 하는 편리한 방법을 제공합니다 . &lt;var&gt;listname&lt;/var&gt; 에 저장된 목록에서 작동합니다 . 목록에서 첫 번째 요소를 제거하고 &lt;small&gt;CDR&lt;/small&gt; 을 &lt;var&gt;listname&lt;/var&gt; 에 저장 한 다음 제거 된 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5ce1c46667c8342bd53b8c8d00223a597902d3a7" translate="yes" xml:space="preserve">
          <source>This macro provides a way to initialize the variable &lt;var&gt;var&lt;/var&gt; as a collection for completion in a lazy way, not computing its actual contents until they are first needed. You use this macro to produce a value that you store in &lt;var&gt;var&lt;/var&gt;. The actual computation of the proper value is done the first time you do completion using &lt;var&gt;var&lt;/var&gt;. It is done by calling &lt;var&gt;fun&lt;/var&gt; with no arguments. The value &lt;var&gt;fun&lt;/var&gt; returns becomes the permanent value of &lt;var&gt;var&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 변수 &lt;var&gt;var&lt;/var&gt; 를 완료를위한 모음으로 초기화하는 방법을 제공하며 , 처음 필요할 때까지 실제 내용을 계산하지 않습니다. 이 매크로를 사용하여 &lt;var&gt;var&lt;/var&gt; 에 저장하는 값을 생성합니다 . 올바른 값의 실제 계산은 &lt;var&gt;var&lt;/var&gt; 를 사용하여 처음 완료 할 때 수행됩니다 . 인수없이 &lt;var&gt;fun&lt;/var&gt; 을 호출 하여 수행됩니다 . 값 &lt;var&gt;fun&lt;/var&gt; 반환의 영구 값이된다 &lt;var&gt;var&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ab58e2ead360b8247d087db896d63e6217aa1f18" translate="yes" xml:space="preserve">
          <source>This macro records the selected frame, as well as the selected window of each frame, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the earlier selected frame and windows. It also saves and restores the current buffer. It returns the value of the last form in &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 선택한 프레임과 각 프레임의 선택한 창을 기록하고 순서대로 &lt;var&gt;forms&lt;/var&gt; 을 실행 한 다음 이전에 선택한 프레임과 창을 복원합니다. 또한 현재 버퍼를 저장하고 복원합니다. 그것은의 마지막 형태의 값 반환 &lt;var&gt;forms&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="987da63b6119b2ab29ca07d3632561ba48057dc6" translate="yes" xml:space="preserve">
          <source>This macro records the window configuration of the selected frame, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the earlier window configuration. The return value is the value of the final form in &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 선택한 프레임의 창 구성을 기록하고 순서대로 &lt;var&gt;forms&lt;/var&gt; 을 실행 한 다음 이전 창 구성을 복원합니다. 반환 값의 최종 형태의 값입니다 &lt;var&gt;forms&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="20fd0804b7873bc25fc74435b03ebaf4d380e109" translate="yes" xml:space="preserve">
          <source>This macro removes &lt;var&gt;function&lt;/var&gt; from the function stored in &lt;var&gt;place&lt;/var&gt;. This only works if &lt;var&gt;function&lt;/var&gt; was added to &lt;var&gt;place&lt;/var&gt; using &lt;code&gt;add-function&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 &lt;var&gt;place&lt;/var&gt; 저장된 &lt;var&gt;function&lt;/var&gt; 에서 함수 를 제거 합니다 . 이것은 &lt;code&gt;add-function&lt;/code&gt; 을 사용하여 &lt;var&gt;place&lt;/var&gt; &lt;var&gt;function&lt;/var&gt; 가 추가 된 경우에만 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="942af90fbe13d4c3f86fa73a97ddc4ba8207ba72" translate="yes" xml:space="preserve">
          <source>This macro removes the quotation prefix &amp;lsquo;</source>
          <target state="translated">이 매크로는 인용 접두사 '</target>
        </trans-unit>
        <trans-unit id="8e9efbf46d1cb164cf2735c755c967a131313218" translate="yes" xml:space="preserve">
          <source>This macro requests additional trace information around the execution of the &lt;var&gt;body&lt;/var&gt; forms. The argument &lt;var&gt;string&lt;/var&gt; specifies text to put in the trace buffer, after the &amp;lsquo;</source>
          <target state="translated">이 매크로는 &lt;var&gt;body&lt;/var&gt; 양식 실행에 대한 추가 추적 정보를 요청 합니다. 인수 &lt;var&gt;string&lt;/var&gt; 은 '뒤에 추적 버퍼에 넣을 텍스트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2419fc1905805628d557d71d598f621c48e6c92c" translate="yes" xml:space="preserve">
          <source>This macro returns an anonymous function with argument list &lt;var&gt;args&lt;/var&gt;, documentation string &lt;var&gt;doc&lt;/var&gt; (if any), interactive spec &lt;var&gt;interactive&lt;/var&gt; (if any), and body forms given by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">이 매크로는 인수 목록 &lt;var&gt;args&lt;/var&gt; , 문서화 문자열 &lt;var&gt;doc&lt;/var&gt; (있는 경우), 대화 형 사양 &lt;var&gt;interactive&lt;/var&gt; (있는 경우) 및 body에서 제공하는 &lt;var&gt;body&lt;/var&gt; 형식 이있는 익명 함수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="26b9ff57a359c8313aaa645fe66cf2eb57e004e7" translate="yes" xml:space="preserve">
          <source>This macro returns non-&lt;code&gt;nil&lt;/code&gt;, when &lt;var&gt;name&lt;/var&gt; is quoted with the prefix &amp;lsquo;</source>
          <target state="translated">이 매크로는 &lt;var&gt;name&lt;/var&gt; 이 접두사 '로 인용 되면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9cd61259063df009ae5712eff83e0b3891fd958e" translate="yes" xml:space="preserve">
          <source>This macro selects &lt;var&gt;window&lt;/var&gt;, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the previously selected window and current buffer. The ordering of recently selected windows and the buffer list remain unchanged unless you deliberately change them within &lt;var&gt;forms&lt;/var&gt;; for example, by calling &lt;code&gt;select-window&lt;/code&gt; with argument &lt;var&gt;norecord&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt;. Hence, this macro is the preferred way to temporarily work with &lt;var&gt;window&lt;/var&gt; as the selected window without needlessly running &lt;code&gt;buffer-list-update-hook&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 &lt;var&gt;window&lt;/var&gt; 를 선택 하고 순서대로 &lt;var&gt;forms&lt;/var&gt; 을 실행 한 다음 이전에 선택한 창과 현재 버퍼를 복원합니다. &lt;var&gt;forms&lt;/var&gt; 내에서 의도적으로 변경하지 않는 한 최근에 선택한 창과 버퍼 목록의 순서는 변경되지 않습니다 . 예를 들어, &lt;var&gt;norecord&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 인수로 &lt;code&gt;select-window&lt;/code&gt; 를 호출 합니다. 따라서,이 매크로 일시적으로 작업에 바람직한 방법이다 &lt;var&gt;window&lt;/var&gt; 불필요하게 실행없이 선택된 윈도우와 같은 &lt;code&gt;buffer-list-update-hook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="693f5bba499a97927946aee22ad2ce605cde26d4" translate="yes" xml:space="preserve">
          <source>This macro translates a call of the form</source>
          <target state="translated">이 매크로는 다음 형식의 호출을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="afcfd0f6f554ea88595caf452762d1743094941c" translate="yes" xml:space="preserve">
          <source>This macro uses the normal hooks &lt;code&gt;temp-buffer-window-setup-hook&lt;/code&gt; and &lt;code&gt;temp-buffer-window-show-hook&lt;/code&gt; in place of the analogous hooks run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;.</source>
          <target state="translated">이 매크로는 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 가 실행하는 유사한 후크 대신 일반 후크 &lt;code&gt;temp-buffer-window-setup-hook&lt;/code&gt; 및 &lt;code&gt;temp-buffer-window-show-hook&lt;/code&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="064759caf85aa25c2df19fde3cf3ab10e1777e01" translate="yes" xml:space="preserve">
          <source>This macro works by setting a timer to run after &lt;var&gt;seconds&lt;/var&gt; seconds. If &lt;var&gt;body&lt;/var&gt; finishes before that time, it cancels the timer. If the timer actually runs, it terminates execution of &lt;var&gt;body&lt;/var&gt;, then executes &lt;var&gt;timeout-forms&lt;/var&gt;.</source>
          <target state="translated">타이머를 설정하여이 매크로 작품은 후에 실행하는 &lt;var&gt;seconds&lt;/var&gt; 초. 경우 &lt;var&gt;body&lt;/var&gt; 그 시간 이전에 완료, 그것은 타이머를 취소합니다. 타이머가 실제로 실행되면 &lt;var&gt;body&lt;/var&gt; 실행을 종료 한 다음 &lt;var&gt;timeout-forms&lt;/var&gt; 를 실행 합니다 .</target>
        </trans-unit>
        <trans-unit id="3892f820e9a17dbaa7cc95cfd9869c0bb731d0ee" translate="yes" xml:space="preserve">
          <source>This makes &lt;var&gt;string&lt;/var&gt; a unibyte string and clears its contents to zeros. It may also change &lt;var&gt;string&lt;/var&gt;&amp;rsquo;s length.</source>
          <target state="translated">이것은 &lt;var&gt;string&lt;/var&gt; 을 유니 바이트 문자열로 만들고 그 내용을 0으로 지 웁니다. &lt;var&gt;string&lt;/var&gt; 의 길이를 변경할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e2725b5bd51cadb99ca0430032fd2f4aa193e7c" translate="yes" xml:space="preserve">
          <source>This makes a button from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns it.</source>
          <target state="translated">현재 버퍼에서 버튼을 &lt;var&gt;beg&lt;/var&gt; 에서 &lt;var&gt;end&lt;/var&gt; 로 만들고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="178b6f8f62a6a518fa32a1bdbc0465a4aa9f1180" translate="yes" xml:space="preserve">
          <source>This makes a button from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; in the current buffer, using text properties.</source>
          <target state="translated">이렇게하면 텍스트 속성을 사용하여 현재 버퍼에서 버튼을 &lt;var&gt;beg&lt;/var&gt; 에서 &lt;var&gt;end&lt;/var&gt; 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5651846c659c680234340318e7dc35101e13768c" translate="yes" xml:space="preserve">
          <source>This makes a list whose second element is the list itself. Here&amp;rsquo;s how you can see that it really works:</source>
          <target state="translated">이것은 두 번째 요소가 목록 자체 인 목록을 만듭니다. 실제로 작동하는지 확인할 수있는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0408162eef9330f20a098ee431f7e3ac39f5d957" translate="yes" xml:space="preserve">
          <source>This makes the symbol &lt;code&gt;module-func&lt;/code&gt; known to Emacs by calling &lt;code&gt;env-&amp;gt;intern&lt;/code&gt;, then invokes &lt;code&gt;defalias&lt;/code&gt; from Emacs to bind the function to that symbol. Note that it is possible to use &lt;code&gt;fset&lt;/code&gt; instead of &lt;code&gt;defalias&lt;/code&gt;; the differences are described in &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;defalias&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;env-&amp;gt;intern&lt;/code&gt; 을 호출 하여 심볼 &lt;code&gt;module-func&lt;/code&gt; 를 Emacs에 알려지게 한 다음 Emacs에서 &lt;code&gt;defalias&lt;/code&gt; 를 호출 하여 해당 심볼에 함수를 바인딩합니다. &lt;code&gt;defalias&lt;/code&gt; 대신 &lt;code&gt;fset&lt;/code&gt; 을 사용할 수 있습니다 . 차이점은 &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;defalias&lt;/a&gt; 에 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="838829e28dbb8585aa17882aa090c569e767909f" translate="yes" xml:space="preserve">
          <source>This manual has gone through numerous drafts. It is nearly complete but not flawless. There are a few topics that are not covered, either because we consider them secondary (such as most of the individual modes) or because they are yet to be written. Because we are not able to deal with them completely, we have left out several parts intentionally.</source>
          <target state="translated">이 매뉴얼은 수많은 초안을 거쳤습니다. 거의 완벽하지만 완벽하지는 않습니다. (대부분의 개별 모드와 같은) 부차적 인 것으로 간주하거나 아직 작성되지 않았기 때문에 다루지 않은 몇 가지 주제가 있습니다. 우리는 그것들을 완전히 다룰 수 없기 때문에 의도적으로 몇 가지 부분을 생략했습니다.</target>
        </trans-unit>
        <trans-unit id="936a07e8905fb23f7ca42e3e3a559bacae6b739d" translate="yes" xml:space="preserve">
          <source>This manual was originally written by Robert Krawitz, Bil Lewis, Dan LaLiberte, Richard M. Stallman and Chris Welty, the volunteers of the GNU manual group, in an effort extending over several years. Robert J. Chassell helped to review and edit the manual, with the support of the Defense Advanced Research Projects Agency, ARPA Order 6082, arranged by Warren A. Hunt, Jr. of Computational Logic, Inc. Additional sections have since been written by Miles Bader, Lars Brinkhoff, Chong Yidong, Kenichi Handa, Lute Kamstra, Juri Linkov, Glenn Morris, Thien-Thi Nguyen, Dan Nicolaescu, Martin Rudalics, Kim F. Storm, Luc Teirlinck, and Eli Zaretskii, and others.</source>
          <target state="translated">이 매뉴얼은 원래 Robert Krawitz, Bil Lewis, Dan LaLiberte, Richard M. Stallman 및 GNU 매뉴얼 그룹의 자원 봉사자 인 Chris Welty가 수년에 걸친 노력으로 작성했습니다. Robert J. Chassell은 Computational Logic, Inc.의 Warren A. Hunt, Jr.가 마련한 Defense Advanced Research Projects Agency, ARPA Order 6082의 지원으로 매뉴얼 검토 및 편집을 도왔습니다. 이후 Miles가 추가 섹션을 작성했습니다. Bader, Lars Brinkhoff, Chong Yidong, Kenichi Handa, Lute Kamstra, Juri Linkov, Glenn Morris, Thien-Thi Nguyen, Dan Nicolaescu, Martin Rudalics, Kim F. Storm, Luc Teirlinck, Eli Zaretskii 등이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ba70434d315a0d715393f13ea4aaff0d3bf4583" translate="yes" xml:space="preserve">
          <source>This matches &amp;lsquo;</source>
          <target state="translated">이것은 '</target>
        </trans-unit>
        <trans-unit id="c46f49a56c7bf9f506bb49f94594440cbde72778" translate="yes" xml:space="preserve">
          <source>This matches a lambda list&amp;mdash;the argument list of a lambda expression.</source>
          <target state="translated">이것은 람다 목록 (람다 식의 인수 목록)과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="52e79e8c6bec8d676fcd7f3a8075520d1530185f" translate="yes" xml:space="preserve">
          <source>This matches any</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="2e852b2f8e5a993e44ad62b3fb9595b6e1163b55" translate="yes" xml:space="preserve">
          <source>This matches any character that has whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">이것은 공백 구문이있는 모든 문자와 일치합니다 ( &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;구문 클래스 테이블&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="316120a480b1bb306d8dbc88c4f4275dae109009" translate="yes" xml:space="preserve">
          <source>This matches any character that has word syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">이것은 단어 구문이있는 모든 문자와 일치합니다 ( &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;구문 클래스 테이블&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ca176ae8d8f18411fc057bf55270a1faea9b10fa" translate="yes" xml:space="preserve">
          <source>This matches any character whose code is in the range 0&amp;ndash;31.</source>
          <target state="translated">이는 코드가 0-31 범위에있는 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3f883f8024251058915976b3937efaf03a1e481e" translate="yes" xml:space="preserve">
          <source>This matches any letter or digit. For multibyte characters, it matches characters whose Unicode &amp;lsquo;</source>
          <target state="translated">이것은 모든 문자 또는 숫자와 일치합니다. 멀티 바이트 문자의 경우 유니 코드 '</target>
        </trans-unit>
        <trans-unit id="1385fab752bcd45ac517e44ad8fbc4c35fb6064c" translate="yes" xml:space="preserve">
          <source>This matches any letter. For multibyte characters, it matches characters whose Unicode &amp;lsquo;</source>
          <target state="translated">이것은 모든 문자와 일치합니다. 멀티 바이트 문자의 경우 유니 코드 '</target>
        </trans-unit>
        <trans-unit id="14a7a5d964c03d3026f6e2829a00347d764fdf41" translate="yes" xml:space="preserve">
          <source>This matches any lower-case letter, as determined by the current case table (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;). If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this also matches any upper-case letter.</source>
          <target state="translated">이것은 현재 케이스 테이블에 의해 결정된 모든 소문자와 일치합니다 ( &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;케이스 테이블&lt;/a&gt; 참조 ). &lt;code&gt;case-fold-search&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 모든 대문자와도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c3df37610dad534b18b780c61d1f193b1376f968" translate="yes" xml:space="preserve">
          <source>This matches any multibyte character (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">이는 모든 멀티 바이트 문자와 일치합니다 ( &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;텍스트 표현&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="180d6f1f6fc758b03b399a24a591e25561158664" translate="yes" xml:space="preserve">
          <source>This matches any non-</source>
          <target state="translated">이것은 비</target>
        </trans-unit>
        <trans-unit id="7ee7c620c06b045fadb810117b84c21104619363" translate="yes" xml:space="preserve">
          <source>This matches any printing character&amp;mdash;either whitespace, or a graphic character matched by &amp;lsquo;</source>
          <target state="translated">이는 모든 인쇄 문자 (공백 또는 '와 일치하는 그래픽 문자)와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6880ce3e7aa6cea71ff5c3336291254d0e10f5c1" translate="yes" xml:space="preserve">
          <source>This matches any punctuation character. (At present, for multibyte characters, it matches anything that has non-word syntax.)</source>
          <target state="translated">이것은 모든 구두점 문자와 일치합니다. (현재 멀티 바이트 문자의 경우 단어가 아닌 구문을 가진 모든 것과 일치합니다.)</target>
        </trans-unit>
        <trans-unit id="c10e0e88a037e8963b3f03135b0914b802e5a530" translate="yes" xml:space="preserve">
          <source>This matches any unibyte character (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">이는 모든 유니 바이트 문자와 일치합니다 ( &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;텍스트 표현&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="79fea95b9a80da155639878b00fbb1df62448d0d" translate="yes" xml:space="preserve">
          <source>This matches any upper-case letter, as determined by the current case table (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;). If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this also matches any lower-case letter.</source>
          <target state="translated">이는 현재 케이스 테이블에 의해 결정된 모든 대문자와 일치합니다 ( &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;케이스 테이블&lt;/a&gt; 참조 ). &lt;code&gt;case-fold-search&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면 모든 소문자와도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="437945e5b8a6162ae935b450bc0acae72307707b" translate="yes" xml:space="preserve">
          <source>This matches graphic characters&amp;mdash;everything except whitespace,</source>
          <target state="translated">이것은 공백을 제외한 모든 그래픽 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="43814bc77c4368fa9c2f3682191fb2810d888916" translate="yes" xml:space="preserve">
          <source>This matches horizontal whitespace, as defined by Annex C of the Unicode Technical Standard #18. In particular, it matches spaces, tabs, and other characters whose Unicode &amp;lsquo;</source>
          <target state="translated">이것은 유니 코드 기술 표준 # 18의 부록 C에 정의 된 수평 공백과 일치합니다. 특히 유니 코드가 '인 공백, 탭 및 기타 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3d4d3406a6b16fae009d3964eb81351e9fd3c382" translate="yes" xml:space="preserve">
          <source>This matches the hexadecimal digits: &amp;lsquo;</source>
          <target state="translated">다음은 16 진수와 일치합니다. '</target>
        </trans-unit>
        <trans-unit id="e7f9f6ac537d2eb761590b38000c721a4f3bc69d" translate="yes" xml:space="preserve">
          <source>This matches values such as &lt;code&gt;(baz)&lt;/code&gt;, &lt;code&gt;(baz foo)&lt;/code&gt;, &lt;code&gt;(baz bar)&lt;/code&gt; and &lt;code&gt;(baz foo bar)&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;(baz)&lt;/code&gt; , &lt;code&gt;(baz foo)&lt;/code&gt; , &lt;code&gt;(baz bar)&lt;/code&gt; 및 &lt;code&gt;(baz foo bar)&lt;/code&gt; 와 같은 값과 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="c152df7cdf2a432680992178732eee215ebba867" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;display-buffer&lt;/code&gt; makes a new parent window when it splits a window and is passed a &lt;code&gt;window-height&lt;/code&gt; or &lt;code&gt;window-width&lt;/code&gt; entry in the &lt;var&gt;alist&lt;/var&gt; argument (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;). Otherwise, window splitting behaves as for a value of &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;display-buffer&lt;/code&gt; 가 창을 분할 할 때 새 부모 창 을 만들고 &lt;var&gt;alist&lt;/var&gt; 인수 에 &lt;code&gt;window-width&lt;/code&gt; &lt;code&gt;window-height&lt;/code&gt; 또는 창 너비 항목을 전달 한다는 것을 의미합니다 ( &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;버퍼 표시 작업 함수&lt;/a&gt; 참조 ). 그렇지 않으면 창 분할이 &lt;code&gt;nil&lt;/code&gt; 값으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="a39978cf9a358cc964ad492e4a59a24d0e55ba44" translate="yes" xml:space="preserve">
          <source>This means that a frame whose focus is redirected to itself is treated differently from a frame whose focus is not redirected. &lt;code&gt;select-frame&lt;/code&gt; affects the former but not the latter.</source>
          <target state="translated">즉, 포커스가 자신에게 리디렉션되는 프레임은 포커스가 리디렉션되지 않은 프레임과 다르게 처리됩니다. &lt;code&gt;select-frame&lt;/code&gt; 은 전자에 영향을 주지만 후자는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f2afd96003a7534243f6ef3a6c70f84953b139c" translate="yes" xml:space="preserve">
          <source>This means that if &lt;var&gt;window&lt;/var&gt; is not deleted, its buffer is moved to the end of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s list of previous buffers, so it&amp;rsquo;s less likely that a future invocation of &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will switch to it. Also, it moves the buffer to the end of the frame&amp;rsquo;s buffer list.</source>
          <target state="translated">즉, &lt;var&gt;window&lt;/var&gt; 삭제되지 않으면 해당 버퍼가 &lt;var&gt;window&lt;/var&gt; 이전 버퍼 목록 끝으로 이동하므로 이후 에 이전 버퍼로 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 호출 할 때 해당 버퍼로 전환 될 가능성이 적습니다 . 또한 버퍼를 프레임의 버퍼 목록 끝으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="5b907046048fbd095bef74db32285a45463e5a54" translate="yes" xml:space="preserve">
          <source>This means that if &lt;var&gt;window&lt;/var&gt; is not deleted, its buffer is removed from &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s list of previous buffers. Also, it moves the buffer to the end of the frame&amp;rsquo;s buffer list. This value provides the most reliable remedy to not have &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; switch to this buffer again without killing the buffer.</source>
          <target state="translated">즉, &lt;var&gt;window&lt;/var&gt; 삭제되지 않은 경우 해당 버퍼는 &lt;var&gt;window&lt;/var&gt; 이전 버퍼 목록 에서 제거됩니다 . 또한 버퍼를 프레임의 버퍼 목록 끝으로 이동합니다. 이 값은 버퍼를 죽이지 않고이 버퍼로 다시 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 전환 하지 않도록하는 가장 신뢰할 수있는 해결 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d300a849b8bb86290b9bbd4abca8fa07cc020b65" translate="yes" xml:space="preserve">
          <source>This means that in order to move the mouse pointer to the position of point in the selected window, it&amp;rsquo;s sufficient to write:</source>
          <target state="translated">즉, 마우스 포인터를 선택한 창의 지점 위치로 이동하려면 다음과 같이 작성하면됩니다.</target>
        </trans-unit>
        <trans-unit id="092387ab37ec254568f359f9586d6303660f6148" translate="yes" xml:space="preserve">
          <source>This means that splitting a window always creates a new parent window. Thus, if the value of this variable is at all times &lt;code&gt;t&lt;/code&gt;, then at all times every window tree is a binary tree (a tree where each window except the root window has exactly one sibling).</source>
          <target state="translated">즉, 창을 분할하면 항상 새 상위 창이 생성됩니다. 따라서이 변수의 값이 항상 &lt;code&gt;t&lt;/code&gt; 이면 모든 창 트리는 항상 이진 트리 (루트 창을 제외한 각 창에 정확히 하나의 형제가있는 트리)입니다.</target>
        </trans-unit>
        <trans-unit id="c45ee702dfaf599f3e1c29e75b01eae3cb365655" translate="yes" xml:space="preserve">
          <source>This means that the basic groups of functions that alter the window structure treat an atomic window like a live one, thus preserving the internal structure of the atomic window.</source>
          <target state="translated">즉, 창 구조를 변경하는 기본 함수 그룹은 원자 창을 라이브 창과 같이 처리하여 원자 창의 내부 구조를 보존합니다.</target>
        </trans-unit>
        <trans-unit id="1a37188790b9c83fd2de8bfc5e5c0b691a7187b4" translate="yes" xml:space="preserve">
          <source>This means that the new live window is allowed to share the existing parent window, if one exists, provided the split occurs in the same direction as the existing window combination (otherwise, a new internal window is created anyway).</source>
          <target state="translated">This means that the new live window is allowed to share the existing parent window, if one exists, provided the split occurs in the same direction as the existing window combination (otherwise, a new internal window is created anyway).</target>
        </trans-unit>
        <trans-unit id="b2203e9c7795f45a3a1af151be5f65dc7be6f190" translate="yes" xml:space="preserve">
          <source>This means that the parameter is saved unconditionally by both &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt;. This value should not be used for parameters whose values do not have a read syntax. Otherwise, invoking &lt;code&gt;window-state-put&lt;/code&gt; in another session may fail with an &lt;code&gt;invalid-read-syntax&lt;/code&gt; error.</source>
          <target state="translated">This means that the parameter is saved unconditionally by both &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt; . This value should not be used for parameters whose values do not have a read syntax. Otherwise, invoking &lt;code&gt;window-state-put&lt;/code&gt; in another session may fail with an &lt;code&gt;invalid-read-syntax&lt;/code&gt; error.</target>
        </trans-unit>
        <trans-unit id="a02cc2f333ea94096516c648dfdf278fc95f2cf0" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) splits a window it always makes a new parent window. Otherwise, window splitting behaves as for &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This means that when &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) splits a window it always makes a new parent window. Otherwise, window splitting behaves as for &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09304a977990e2e05b2f4bbfcb9fcfbd14544f18" translate="yes" xml:space="preserve">
          <source>This means that you can make sure that the garbage collector will not run during a certain portion of a Lisp program by calling the garbage collector explicitly just before it (provided that portion of the program does not use so much space as to force a second garbage collection).</source>
          <target state="translated">This means that you can make sure that the garbage collector will not run during a certain portion of a Lisp program by calling the garbage collector explicitly just before it (provided that portion of the program does not use so much space as to force a second garbage collection).</target>
        </trans-unit>
        <trans-unit id="ac3f7637f4e9e2e46013206eca24ad296b80682f" translate="yes" xml:space="preserve">
          <source>This means that, while &lt;code&gt;input-decode-map&lt;/code&gt; and &lt;code&gt;key-translation-map&lt;/code&gt; apply regardless of whether the original key sequence would have a binding, the presence of such a binding can still prevent translation from taking place. For example, let us return to our VT100 example above and add a binding for</source>
          <target state="translated">This means that, while &lt;code&gt;input-decode-map&lt;/code&gt; and &lt;code&gt;key-translation-map&lt;/code&gt; apply regardless of whether the original key sequence would have a binding, the presence of such a binding can still prevent translation from taking place. For example, let us return to our VT100 example above and add a binding for</target>
        </trans-unit>
        <trans-unit id="8a16b5c7314a1c5f6279d547d1290a0dad1cba49" translate="yes" xml:space="preserve">
          <source>This means to kill &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">This means to kill &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s buffer.</target>
        </trans-unit>
        <trans-unit id="996beee1789ab59f84adf4b81fe1a5cafea594ce" translate="yes" xml:space="preserve">
          <source>This means to not deal with the buffer in any particular way. As a consequence, if &lt;var&gt;window&lt;/var&gt; is not deleted, invoking &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will usually show the buffer again.</source>
          <target state="translated">This means to not deal with the buffer in any particular way. As a consequence, if &lt;var&gt;window&lt;/var&gt; is not deleted, invoking &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will usually show the buffer again.</target>
        </trans-unit>
        <trans-unit id="08d6fdd594fe3e215d317c018bba3b98caca83d6" translate="yes" xml:space="preserve">
          <source>This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps larger. A &lt;em&gt;step&lt;/em&gt; is defined by the set of available fonts&amp;mdash;specifically, those that match what was otherwise specified for this text, in all attributes except height. Each size for which a suitable font is available counts as another step. &lt;var&gt;n&lt;/var&gt; should be an integer.</source>
          <target state="translated">This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps larger. A &lt;em&gt;step&lt;/em&gt; is defined by the set of available fonts&amp;mdash;specifically, those that match what was otherwise specified for this text, in all attributes except height. Each size for which a suitable font is available counts as another step. &lt;var&gt;n&lt;/var&gt; should be an integer.</target>
        </trans-unit>
        <trans-unit id="4c5f0dec3d5185fd28e5174bfd57e5414e93d908" translate="yes" xml:space="preserve">
          <source>This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps smaller.</source>
          <target state="translated">This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps smaller.</target>
        </trans-unit>
        <trans-unit id="8e16ea0deda4b9d4b78d5b962617a18009e97536" translate="yes" xml:space="preserve">
          <source>This mechanism works invisibly, and Lisp code should never be affected by the gap&amp;rsquo;s current location, but these functions are available for getting information about the gap status.</source>
          <target state="translated">This mechanism works invisibly, and Lisp code should never be affected by the gap&amp;rsquo;s current location, but these functions are available for getting information about the gap status.</target>
        </trans-unit>
        <trans-unit id="201defb8c308b9edefca0d7ec6b5172a1aff31d7" translate="yes" xml:space="preserve">
          <source>This method causes &lt;code&gt;temacs&lt;/code&gt; to dump out an executable program, called</source>
          <target state="translated">This method causes &lt;code&gt;temacs&lt;/code&gt; to dump out an executable program, called</target>
        </trans-unit>
        <trans-unit id="c30b8e29d79cd89a73047ae48d6333627d393d98" translate="yes" xml:space="preserve">
          <source>This method has several benefits. First, if the user quits while loading the file, the variable is either still uninitialized or initialized properly, never in-between. If it is still uninitialized, reloading the file will initialize it properly. Second, reloading the file once the variable is initialized will not alter it; that is important if the user has run hooks to alter part of the contents (such as, to rebind keys). Third, evaluating the &lt;code&gt;defvar&lt;/code&gt; form with</source>
          <target state="translated">This method has several benefits. First, if the user quits while loading the file, the variable is either still uninitialized or initialized properly, never in-between. If it is still uninitialized, reloading the file will initialize it properly. Second, reloading the file once the variable is initialized will not alter it; that is important if the user has run hooks to alter part of the contents (such as, to rebind keys). Third, evaluating the &lt;code&gt;defvar&lt;/code&gt; form with</target>
        </trans-unit>
        <trans-unit id="e581c11712cc79e666659ff354300fee9e44599b" translate="yes" xml:space="preserve">
          <source>This minor mode mainly serves as a wrapper for &lt;code&gt;buffer-read-only&lt;/code&gt;; unlike most minor modes, there is no separate &lt;code&gt;read-only-mode&lt;/code&gt; variable. Even when Read Only mode is disabled, characters with non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;read-only&lt;/code&gt; text properties remain read-only. To temporarily ignore all read-only states, bind &lt;code&gt;inhibit-read-only&lt;/code&gt;, as described above.</source>
          <target state="translated">This minor mode mainly serves as a wrapper for &lt;code&gt;buffer-read-only&lt;/code&gt; ; unlike most minor modes, there is no separate &lt;code&gt;read-only-mode&lt;/code&gt; variable. Even when Read Only mode is disabled, characters with non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;read-only&lt;/code&gt; text properties remain read-only. To temporarily ignore all read-only states, bind &lt;code&gt;inhibit-read-only&lt;/code&gt; , as described above.</target>
        </trans-unit>
        <trans-unit id="e8faa9a939da70b6b89f73a193ac2b0b0e839517" translate="yes" xml:space="preserve">
          <source>This moves forward one line and continues moving by lines until it reaches an empty line. It is peculiar in that the &lt;code&gt;while&lt;/code&gt; has no body, just the end test (which also does the real work of moving point).</source>
          <target state="translated">This moves forward one line and continues moving by lines until it reaches an empty line. It is peculiar in that the &lt;code&gt;while&lt;/code&gt; has no body, just the end test (which also does the real work of moving point).</target>
        </trans-unit>
        <trans-unit id="e368693096f133bc6b460050bac1789c9cb09435" translate="yes" xml:space="preserve">
          <source>This moves point to the start of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">This moves point to the start of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f71107569dfacd57223d7d8a484d87ab7260c477" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;kill-emacs&lt;/code&gt;, before it kills Emacs.</source>
          <target state="translated">This normal hook is run by &lt;code&gt;kill-emacs&lt;/code&gt; , before it kills Emacs.</target>
        </trans-unit>
        <trans-unit id="0baf2d709c443a0bd2878c6da3e14cf0b6c35221" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; after displaying the temporary buffer. When the hook runs, the temporary buffer is current, and the window it was displayed in is selected.</source>
          <target state="translated">This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; after displaying the temporary buffer. When the hook runs, the temporary buffer is current, and the window it was displayed in is selected.</target>
        </trans-unit>
        <trans-unit id="c58f69d92308146819276289bdeca727eb29ffe7" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; before evaluating &lt;var&gt;body&lt;/var&gt;. When the hook runs, the temporary buffer is current. This hook is normally set up with a function to put the buffer in Help mode.</source>
          <target state="translated">This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; before evaluating &lt;var&gt;body&lt;/var&gt; . When the hook runs, the temporary buffer is current. This hook is normally set up with a function to put the buffer in Help mode.</target>
        </trans-unit>
        <trans-unit id="73efc4d58d9742177491042c2f37b4c4f2e11365" translate="yes" xml:space="preserve">
          <source>This normal hook is run by redisplay to update the menu bar contents, before redisplaying the menu bar. You can use it to update menus whose contents should vary. Since this hook is run frequently, we advise you to ensure that the functions it calls do not take much time in the usual case.</source>
          <target state="translated">This normal hook is run by redisplay to update the menu bar contents, before redisplaying the menu bar. You can use it to update menus whose contents should vary. Since this hook is run frequently, we advise you to ensure that the functions it calls do not take much time in the usual case.</target>
        </trans-unit>
        <trans-unit id="26a7490816dcb1bd9b7d01397918b75b12401532" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; after inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</source>
          <target state="translated">This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; after inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</target>
        </trans-unit>
        <trans-unit id="9fabcf4d3195170ffc3de0cdddbda38a1b760045" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; before inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</source>
          <target state="translated">This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; before inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</target>
        </trans-unit>
        <trans-unit id="3db8aa6bc4943b6665387d18c5b883d2efed1404" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the editor command loop after it executes each command (including commands terminated prematurely by quitting or by errors). At that time, &lt;code&gt;this-command&lt;/code&gt; refers to the command that just ran, and &lt;code&gt;last-command&lt;/code&gt; refers to the command before that.</source>
          <target state="translated">This normal hook is run by the editor command loop after it executes each command (including commands terminated prematurely by quitting or by errors). At that time, &lt;code&gt;this-command&lt;/code&gt; refers to the command that just ran, and &lt;code&gt;last-command&lt;/code&gt; refers to the command before that.</target>
        </trans-unit>
        <trans-unit id="b7503df730af207114347e84693a81974cf2339e" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the editor command loop before it executes each command. At that time, &lt;code&gt;this-command&lt;/code&gt; contains the command that is about to run, and &lt;code&gt;last-command&lt;/code&gt; describes the previous command. See &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;.</source>
          <target state="translated">This normal hook is run by the editor command loop before it executes each command. At that time, &lt;code&gt;this-command&lt;/code&gt; contains the command that is about to run, and &lt;code&gt;last-command&lt;/code&gt; describes the previous command. See &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a9ae2b0c68f9fc2606cdf633f67755c853f95b0c" translate="yes" xml:space="preserve">
          <source>This normal hook is run prior to reverting a Tabulated List buffer. A derived mode can add a function to this hook to recompute &lt;code&gt;tabulated-list-entries&lt;/code&gt;.</source>
          <target state="translated">This normal hook is run prior to reverting a Tabulated List buffer. A derived mode can add a function to this hook to recompute &lt;code&gt;tabulated-list-entries&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75bf909bef25e666a4076c50b2d0595881bdfecd" translate="yes" xml:space="preserve">
          <source>This normal hook is run when a keyboard macro terminates, regardless of what caused it to terminate (reaching the macro end or an error which ended the macro prematurely).</source>
          <target state="translated">This normal hook is run when a keyboard macro terminates, regardless of what caused it to terminate (reaching the macro end or an error which ended the macro prematurely).</target>
        </trans-unit>
        <trans-unit id="b110726c237d2745ddc2a7c6988fbcf1289c469c" translate="yes" xml:space="preserve">
          <source>This normal hook is run whenever an auto-save is about to happen.</source>
          <target state="translated">This normal hook is run whenever an auto-save is about to happen.</target>
        </trans-unit>
        <trans-unit id="7cd1f9c30f5785cc4189b3e73fba5bc203487c6c" translate="yes" xml:space="preserve">
          <source>This normal hook is run whenever the echo area is cleared&amp;mdash;either by &lt;code&gt;(message nil)&lt;/code&gt; or for any other reason.</source>
          <target state="translated">This normal hook is run whenever the echo area is cleared&amp;mdash;either by &lt;code&gt;(message nil)&lt;/code&gt; or for any other reason.</target>
        </trans-unit>
        <trans-unit id="753a4beb363049d4d513ba83bd3eb542cce1981b" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just after handling the command line arguments. In batch mode, Emacs does not run this hook.</source>
          <target state="translated">This normal hook is run, once, just after handling the command line arguments. In batch mode, Emacs does not run this hook.</target>
        </trans-unit>
        <trans-unit id="f4cc994b7c49e616c9e0a1d1fd9e6a0930276d7a" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just after loading all the init files (</source>
          <target state="translated">This normal hook is run, once, just after loading all the init files (</target>
        </trans-unit>
        <trans-unit id="c6ae3813d360f8d587d430f4af6518d7db096b6f" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just before loading all the init files (</source>
          <target state="translated">This normal hook is run, once, just before loading all the init files (</target>
        </trans-unit>
        <trans-unit id="d59da32b6a9dcbf1c10d142ee024736429ffe715" translate="yes" xml:space="preserve">
          <source>This normal hook is very similar to &lt;code&gt;emacs-startup-hook&lt;/code&gt;. The only difference is that it runs slightly later, after setting of the frame parameters. See &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;window-setup-hook&lt;/a&gt;.</source>
          <target state="translated">This normal hook is very similar to &lt;code&gt;emacs-startup-hook&lt;/code&gt; . The only difference is that it runs slightly later, after setting of the frame parameters. See &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;window-setup-hook&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="36a8c991ce775c04d048c66fed1cda172bbf6546" translate="yes" xml:space="preserve">
          <source>This normal hook runs after a buffer has been saved in its visited file.</source>
          <target state="translated">This normal hook runs after a buffer has been saved in its visited file.</target>
        </trans-unit>
        <trans-unit id="9d8b4e8365aebd12ddafe74eb3fdaad8c5f9d1b0" translate="yes" xml:space="preserve">
          <source>This normal hook runs before a buffer is saved in its visited file, regardless of whether that is done normally or by one of the hooks described above. For instance, the</source>
          <target state="translated">This normal hook runs before a buffer is saved in its visited file, regardless of whether that is done normally or by one of the hooks described above. For instance, the</target>
        </trans-unit>
        <trans-unit id="51a181a3ec9bee7a303e436d073e58bbf25c3260" translate="yes" xml:space="preserve">
          <source>This obsolete variable is a wrapper hook, whose members should be functions that accept four arguments: &lt;var&gt;fun&lt;/var&gt;, &lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt;. &lt;var&gt;fun&lt;/var&gt; is a function that takes three arguments (&lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt;), and returns a string. In both cases, the &lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt; arguments are the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt;.</source>
          <target state="translated">This obsolete variable is a wrapper hook, whose members should be functions that accept four arguments: &lt;var&gt;fun&lt;/var&gt; , &lt;var&gt;start&lt;/var&gt; , &lt;var&gt;end&lt;/var&gt; , and &lt;var&gt;delete&lt;/var&gt; . &lt;var&gt;fun&lt;/var&gt; is a function that takes three arguments ( &lt;var&gt;start&lt;/var&gt; , &lt;var&gt;end&lt;/var&gt; , and &lt;var&gt;delete&lt;/var&gt; ), and returns a string. In both cases, the &lt;var&gt;start&lt;/var&gt; , &lt;var&gt;end&lt;/var&gt; , and &lt;var&gt;delete&lt;/var&gt; arguments are the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dead3931c339dc6fa12fd52dd9c6c2de9e54205c" translate="yes" xml:space="preserve">
          <source>This once was the usual way to copy a list, before the function &lt;code&gt;copy-sequence&lt;/code&gt; was invented. See &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;.</source>
          <target state="translated">This once was the usual way to copy a list, before the function &lt;code&gt;copy-sequence&lt;/code&gt; was invented. See &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7ce3d6db3e78067603018173c2dffb158427b0a1" translate="yes" xml:space="preserve">
          <source>This option affects all scroll commands that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;scroll-command&lt;/code&gt; symbol property.</source>
          <target state="translated">This option affects all scroll commands that have a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;scroll-command&lt;/code&gt; symbol property.</target>
        </trans-unit>
        <trans-unit id="bf5c5fa9ccfcc09a86ef723f4dcb8912650960d3" translate="yes" xml:space="preserve">
          <source>This option can be used to specify margins around frames to be fit by &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;. Such margins can be useful to avoid, for example, that the resized frame overlaps the taskbar or parts of its parent frame.</source>
          <target state="translated">This option can be used to specify margins around frames to be fit by &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; . Such margins can be useful to avoid, for example, that the resized frame overlaps the taskbar or parts of its parent frame.</target>
        </trans-unit>
        <trans-unit id="d76f5ca2631dbc037c76c48a63e6140c6d86529c" translate="yes" xml:space="preserve">
          <source>This option does not affect non-interactive calls of &lt;code&gt;switch-to-buffer&lt;/code&gt;.</source>
          <target state="translated">This option does not affect non-interactive calls of &lt;code&gt;switch-to-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16d83acf464974bb4f070de60579326fe9ad6d12" translate="yes" xml:space="preserve">
          <source>This option informs Emacs whether and how the window manager transfers focus when you move the mouse pointer into a frame. It can have three meaningful values:</source>
          <target state="translated">This option informs Emacs whether and how the window manager transfers focus when you move the mouse pointer into a frame. It can have three meaningful values:</target>
        </trans-unit>
        <trans-unit id="b173cc7d82799b8c4c9c7af5fa5f4a535f336fae" translate="yes" xml:space="preserve">
          <source>This option is mainly intended for debugging. Garbage collection is inhibited while the question is asked, which means that Emacs might leak memory if the user waits too long before answering the question.</source>
          <target state="translated">This option is mainly intended for debugging. Garbage collection is inhibited while the question is asked, which means that Emacs might leak memory if the user waits too long before answering the question.</target>
        </trans-unit>
        <trans-unit id="0037da3a90bd2feee25788d0d4e95600fb5ae1ce" translate="yes" xml:space="preserve">
          <source>This option is provided for backward compatibility only. Note, that when &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; calls the function specified by &lt;code&gt;pop-up-frame-function&lt;/code&gt;, it prepends the value of all &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; action alist entries to &lt;code&gt;pop-up-frame-alist&lt;/code&gt; so that the values specified by the action alist entry effectively override any corresponding values of &lt;code&gt;pop-up-frame-alist&lt;/code&gt;.</source>
          <target state="translated">This option is provided for backward compatibility only. Note, that when &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; calls the function specified by &lt;code&gt;pop-up-frame-function&lt;/code&gt; , it prepends the value of all &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; action alist entries to &lt;code&gt;pop-up-frame-alist&lt;/code&gt; so that the values specified by the action alist entry effectively override any corresponding values of &lt;code&gt;pop-up-frame-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e379278631b4765a5fd528ea637b79bdf3155f7" translate="yes" xml:space="preserve">
          <source>This option is used in &lt;code&gt;mode-line-position&lt;/code&gt;. Its value specifies both the buffer percentage to display (one of &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;&quot;%o&quot;&lt;/code&gt;, &lt;code&gt;&quot;%p&quot;&lt;/code&gt;, &lt;code&gt;&quot;%P&quot;&lt;/code&gt; or &lt;code&gt;&quot;%q&quot;&lt;/code&gt;, see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;) and a width to space-fill or truncate to. You are recommended to set this option with the &lt;code&gt;customize-variable&lt;/code&gt; facility.</source>
          <target state="translated">This option is used in &lt;code&gt;mode-line-position&lt;/code&gt; . Its value specifies both the buffer percentage to display (one of &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;&quot;%o&quot;&lt;/code&gt; , &lt;code&gt;&quot;%p&quot;&lt;/code&gt; , &lt;code&gt;&quot;%P&quot;&lt;/code&gt; or &lt;code&gt;&quot;%q&quot;&lt;/code&gt; , see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;) and a width to space-fill or truncate to. You are recommended to set this option with the &lt;code&gt;customize-variable&lt;/code&gt; facility.</target>
        </trans-unit>
        <trans-unit id="a8358b294367da2180f0277c0a18cd993a73cfe6" translate="yes" xml:space="preserve">
          <source>This option is useful on platforms that have problems with curved quotes. You can customize it freely according to your personal preference.</source>
          <target state="translated">This option is useful on platforms that have problems with curved quotes. You can customize it freely according to your personal preference.</target>
        </trans-unit>
        <trans-unit id="a411ded73feeaae0425ccb08272069ef03900c86" translate="yes" xml:space="preserve">
          <source>This option lets you customize indentation on a per-mode basis. It is an alist with elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;rules&lt;/var&gt;)&lt;/code&gt;. For the precise form of rules, see the variable&amp;rsquo;s documentation; but you may find it easier to use the command &lt;code&gt;smie-config-guess&lt;/code&gt;.</source>
          <target state="translated">This option lets you customize indentation on a per-mode basis. It is an alist with elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;rules&lt;/var&gt;)&lt;/code&gt; . For the precise form of rules, see the variable&amp;rsquo;s documentation; but you may find it easier to use the command &lt;code&gt;smie-config-guess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e7a38f77aeea47ef5d040cf78350591308ca5be" translate="yes" xml:space="preserve">
          <source>This option provides a maximum height for resizing minibuffer windows automatically. A floating-point number specifies a fraction of the frame&amp;rsquo;s height; an integer specifies the maximum number of lines. The default value is 0.25.</source>
          <target state="translated">This option provides a maximum height for resizing minibuffer windows automatically. A floating-point number specifies a fraction of the frame&amp;rsquo;s height; an integer specifies the maximum number of lines. The default value is 0.25.</target>
        </trans-unit>
        <trans-unit id="8fe1a9afc8a03d9ff94fcb0299265cb0a1c2f9ee" translate="yes" xml:space="preserve">
          <source>This option specifies how &lt;code&gt;backward-delete-char-untabify&lt;/code&gt; should deal with whitespace. Possible values include &lt;code&gt;untabify&lt;/code&gt;, the default, meaning convert a tab to many spaces and delete one; &lt;code&gt;hungry&lt;/code&gt;, meaning delete all tabs and spaces before point with one command; &lt;code&gt;all&lt;/code&gt; meaning delete all tabs, spaces and newlines before point, and &lt;code&gt;nil&lt;/code&gt;, meaning do nothing special for whitespace characters.</source>
          <target state="translated">This option specifies how &lt;code&gt;backward-delete-char-untabify&lt;/code&gt; should deal with whitespace. Possible values include &lt;code&gt;untabify&lt;/code&gt; , the default, meaning convert a tab to many spaces and delete one; &lt;code&gt;hungry&lt;/code&gt; , meaning delete all tabs and spaces before point with one command; &lt;code&gt;all&lt;/code&gt; meaning delete all tabs, spaces and newlines before point, and &lt;code&gt;nil&lt;/code&gt; , meaning do nothing special for whitespace characters.</target>
        </trans-unit>
        <trans-unit id="7d48f2ba33a1fc5f4d6084da918c77858dbe03e4" translate="yes" xml:space="preserve">
          <source>This option specifies how many seconds to wait between execution steps in trace mode or continue mode. The default is 1 second.</source>
          <target state="translated">This option specifies how many seconds to wait between execution steps in trace mode or continue mode. The default is 1 second.</target>
        </trans-unit>
        <trans-unit id="ef38927aca8e6621415e3f21404c9dfd6e465910" translate="yes" xml:space="preserve">
          <source>This option specifies size boundaries for &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;. It specifies the total maximum and minimum lines and maximum and minimum columns of the root window of any frame that shall be fit to its buffer. If any of these values is non-&lt;code&gt;nil&lt;/code&gt;, it overrides the corresponding argument of &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;.</source>
          <target state="translated">This option specifies size boundaries for &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; . It specifies the total maximum and minimum lines and maximum and minimum columns of the root window of any frame that shall be fit to its buffer. If any of these values is non- &lt;code&gt;nil&lt;/code&gt; , it overrides the corresponding argument of &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a398ebe6b398d579cfefbf13eeb12898c5de010" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum height (in lines) of a window displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the height for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</source>
          <target state="translated">This option specifies the maximum height (in lines) of a window displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the height for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</target>
        </trans-unit>
        <trans-unit id="2689c8ebebdcc3bf380aa454d50991f1cae09ef3" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum number of side windows on each side of a frame. The value is a list of four elements specifying the number of side window slots on (in this order) the left, top, right and bottom of each frame. If an element is a number, it means to display at most that many windows on the corresponding side. If an element is &lt;code&gt;nil&lt;/code&gt;, it means there&amp;rsquo;s no bound on the number of slots on that side.</source>
          <target state="translated">This option specifies the maximum number of side windows on each side of a frame. The value is a list of four elements specifying the number of side window slots on (in this order) the left, top, right and bottom of each frame. If an element is a number, it means to display at most that many windows on the corresponding side. If an element is &lt;code&gt;nil&lt;/code&gt; , it means there&amp;rsquo;s no bound on the number of slots on that side.</target>
        </trans-unit>
        <trans-unit id="518a1b8715e666885718e10e9bbb38bd757f5335" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum width of a window (in columns) displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the width for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</source>
          <target state="translated">This option specifies the maximum width of a window (in columns) displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the width for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</target>
        </trans-unit>
        <trans-unit id="b0fc46dfe9e419b3d58f1af045c2293b20891851" translate="yes" xml:space="preserve">
          <source>This option specifies the minimum total height, in lines, of any window. Its value has to accommodate at least one text line as well as a mode and header line, a horizontal scroll bar and a bottom divider, if present.</source>
          <target state="translated">This option specifies the minimum total height, in lines, of any window. Its value has to accommodate at least one text line as well as a mode and header line, a horizontal scroll bar and a bottom divider, if present.</target>
        </trans-unit>
        <trans-unit id="d79bb3e94cfb84949f915995f8f6099465cdf86e" translate="yes" xml:space="preserve">
          <source>This option specifies the minimum total width, in columns, of any window. Its value has to accommodate two text columns as well as margins, fringes, a scroll bar and a right divider, if present.</source>
          <target state="translated">This option specifies the minimum total width, in columns, of any window. Its value has to accommodate two text columns as well as margins, fringes, a scroll bar and a right divider, if present.</target>
        </trans-unit>
        <trans-unit id="7faa7f8ecf58b148dd60015874e826d645801901" translate="yes" xml:space="preserve">
          <source>This option specifies the size of the scroll margin&amp;mdash;a minimum number of lines between point and the top or bottom of a window. Whenever point gets within this many lines of the top or bottom of the window, redisplay scrolls the text automatically (if possible) to move point out of the margin, closer to the center of the window.</source>
          <target state="translated">This option specifies the size of the scroll margin&amp;mdash;a minimum number of lines between point and the top or bottom of a window. Whenever point gets within this many lines of the top or bottom of the window, redisplay scrolls the text automatically (if possible) to move point out of the margin, closer to the center of the window.</target>
        </trans-unit>
        <trans-unit id="fcfa0eafad34f75a4200b32331fbb07597c951b8" translate="yes" xml:space="preserve">
          <source>This option specifies whether minibuffer windows are resized automatically. The default value is &lt;code&gt;grow-only&lt;/code&gt;, which means that a minibuffer window by default expands automatically to accommodate the text it displays and shrinks back to one line as soon as the minibuffer gets empty. If the value is &lt;code&gt;t&lt;/code&gt;, Emacs will always try to fit the height of a minibuffer window to the text it displays (with a minimum of one line). If the value is &lt;code&gt;nil&lt;/code&gt;, a minibuffer window never changes size automatically. In that case the window resizing commands (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) can be used to adjust its height.</source>
          <target state="translated">This option specifies whether minibuffer windows are resized automatically. The default value is &lt;code&gt;grow-only&lt;/code&gt; , which means that a minibuffer window by default expands automatically to accommodate the text it displays and shrinks back to one line as soon as the minibuffer gets empty. If the value is &lt;code&gt;t&lt;/code&gt; , Emacs will always try to fit the height of a minibuffer window to the text it displays (with a minimum of one line). If the value is &lt;code&gt;nil&lt;/code&gt; , a minibuffer window never changes size automatically. In that case the window resizing commands (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) can be used to adjust its height.</target>
        </trans-unit>
        <trans-unit id="ab21c497415b9203a78b72235917a548ee8789a1" translate="yes" xml:space="preserve">
          <source>This option specifies whether top/bottom side windows should appear in reverse order. When this is &lt;code&gt;nil&lt;/code&gt;, side windows on the top and bottom of a frame are always drawn from left to right with increasing slot values. When this is &lt;code&gt;t&lt;/code&gt;, the drawing order is reversed and side windows on the top and bottom of a frame are drawn from right to left with increasing slot values.</source>
          <target state="translated">This option specifies whether top/bottom side windows should appear in reverse order. When this is &lt;code&gt;nil&lt;/code&gt; , side windows on the top and bottom of a frame are always drawn from left to right with increasing slot values. When this is &lt;code&gt;t&lt;/code&gt; , the drawing order is reversed and side windows on the top and bottom of a frame are drawn from right to left with increasing slot values.</target>
        </trans-unit>
        <trans-unit id="7e243199acfe508d45a5f7708f9306930cfd4f7e" translate="yes" xml:space="preserve">
          <source>This option tells Emacs how to proceed when it is asked to iconify a child frame. If it is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;iconify-frame&lt;/code&gt; will do nothing when invoked on a child frame. If it is &lt;code&gt;iconify-top-level&lt;/code&gt;, Emacs will try to iconify the top-level frame that is the ancestor of this child frame instead. If it is &lt;code&gt;make-invisible&lt;/code&gt;, Emacs will try to make this child frame invisible instead of iconifying it.</source>
          <target state="translated">This option tells Emacs how to proceed when it is asked to iconify a child frame. If it is &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;iconify-frame&lt;/code&gt; will do nothing when invoked on a child frame. If it is &lt;code&gt;iconify-top-level&lt;/code&gt; , Emacs will try to iconify the top-level frame that is the ancestor of this child frame instead. If it is &lt;code&gt;make-invisible&lt;/code&gt; , Emacs will try to make this child frame invisible instead of iconifying it.</target>
        </trans-unit>
        <trans-unit id="b91fe0561bb18f03cb7dd3350041b29023cfad30" translate="yes" xml:space="preserve">
          <source>This option, if non-&lt;code&gt;nil&lt;/code&gt;, allows &lt;code&gt;switch-to-buffer&lt;/code&gt; to proceed when called interactively and the selected window is strongly dedicated to its buffer.</source>
          <target state="translated">This option, if non- &lt;code&gt;nil&lt;/code&gt; , allows &lt;code&gt;switch-to-buffer&lt;/code&gt; to proceed when called interactively and the selected window is strongly dedicated to its buffer.</target>
        </trans-unit>
        <trans-unit id="9e973d14ccef7d3d65e0649b81a644dd1137cce9" translate="yes" xml:space="preserve">
          <source>This optional keyword specifies a single Lisp form to evaluate as the final act of the mode function, after the mode hooks have been run. It should not be quoted. Since the form might be evaluated after the mode function has terminated, it should not access any element of the mode function&amp;rsquo;s local state. An &lt;code&gt;:after-hook&lt;/code&gt; form is useful for setting up aspects of the mode which depend on the user&amp;rsquo;s settings, which in turn may have been changed in a mode hook.</source>
          <target state="translated">This optional keyword specifies a single Lisp form to evaluate as the final act of the mode function, after the mode hooks have been run. It should not be quoted. Since the form might be evaluated after the mode function has terminated, it should not access any element of the mode function&amp;rsquo;s local state. An &lt;code&gt;:after-hook&lt;/code&gt; form is useful for setting up aspects of the mode which depend on the user&amp;rsquo;s settings, which in turn may have been changed in a mode hook.</target>
        </trans-unit>
        <trans-unit id="616387e9652c464e7d0287d8be1c9709ca9a1767" translate="yes" xml:space="preserve">
          <source>This overwrites the default &lt;var&gt;base-spec&lt;/var&gt;, which inherits the global face definition, so it is up to the caller to add such inheritance if so desired.</source>
          <target state="translated">This overwrites the default &lt;var&gt;base-spec&lt;/var&gt; , which inherits the global face definition, so it is up to the caller to add such inheritance if so desired.</target>
        </trans-unit>
        <trans-unit id="2c4dc62a8a3a43e3e0eaef58b3528a6e18f739da" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">This parameter affects the execution of &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2a4efd9541357acbf3c43c226c8f3987d945364d" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;delete-window&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">This parameter affects the execution of &lt;code&gt;delete-window&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="bd8f7ec30406c313972f18b1d09bf9a9f9d54784" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">This parameter affects the execution of &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="cc6801035b43919034dd11c0e815cccb70b6fbd1" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;).</source>
          <target state="translated">This parameter affects the execution of &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="88ade6028e119b8df99d838f95f477147afc2c5a" translate="yes" xml:space="preserve">
          <source>This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-margins&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-margins&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c4bd7fce2467e11911b0874c7b90e56b035cf6fb" translate="yes" xml:space="preserve">
          <source>This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-sizes&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-sizes&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c21c193bfbb68b93b62637ef90d1f2d20f1c2550" translate="yes" xml:space="preserve">
          <source>This parameter describes the range of possible colors that can be used in this frame. Its value is &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;grayscale&lt;/code&gt; or &lt;code&gt;mono&lt;/code&gt;.</source>
          <target state="translated">This parameter describes the range of possible colors that can be used in this frame. Its value is &lt;code&gt;color&lt;/code&gt; , &lt;code&gt;grayscale&lt;/code&gt; or &lt;code&gt;mono&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97b1d210e1cd42fdd941ba1e33e2869d415ab72e" translate="yes" xml:space="preserve">
          <source>This parameter is currently meaningful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) only. If it is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs will try to keep the frame&amp;rsquo;s size (width and height) ratios (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;) as well as its left and right position ratios (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) unaltered whenever its parent frame is resized.</source>
          <target state="translated">This parameter is currently meaningful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) only. If it is non- &lt;code&gt;nil&lt;/code&gt; , then Emacs will try to keep the frame&amp;rsquo;s size (width and height) ratios (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;) as well as its left and right position ratios (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) unaltered whenever its parent frame is resized.</target>
        </trans-unit>
        <trans-unit id="04ba41bff9a2d8316aa977a084c6c8d4d506d306" translate="yes" xml:space="preserve">
          <source>This parameter is either &lt;code&gt;dark&lt;/code&gt; or &lt;code&gt;light&lt;/code&gt;, according to whether the background color is a light one or a dark one.</source>
          <target state="translated">This parameter is either &lt;code&gt;dark&lt;/code&gt; or &lt;code&gt;light&lt;/code&gt; , according to whether the background color is a light one or a dark one.</target>
        </trans-unit>
        <trans-unit id="bd1a2b12c68b609de177b3c151a1def942c648d9" translate="yes" xml:space="preserve">
          <source>This parameter is installed by the buffer display functions (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) and consulted by &lt;code&gt;quit-restore-window&lt;/code&gt; (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). It is a list of four elements, see the description of &lt;code&gt;quit-restore-window&lt;/code&gt; in &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt; for details.</source>
          <target state="translated">This parameter is installed by the buffer display functions (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) and consulted by &lt;code&gt;quit-restore-window&lt;/code&gt; (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). It is a list of four elements, see the description of &lt;code&gt;quit-restore-window&lt;/code&gt; in &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="485f27bfbde0345cca6052e79624581796703498" translate="yes" xml:space="preserve">
          <source>This parameter is used internally for implementing atomic windows, see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;.</source>
          <target state="translated">This parameter is used internally for implementing atomic windows, see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5407f7bc49e45028fc2c8784f40634d0185010ae" translate="yes" xml:space="preserve">
          <source>This parameter marks the window as not deletable by &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">This parameter marks the window as not deletable by &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c388a7c37f8c092efed8313ef334c889b57c063c" translate="yes" xml:space="preserve">
          <source>This parameter marks the window as not selectable by &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">This parameter marks the window as not selectable by &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="f6514b7fc5f20bb9d55d77d4a1001fc16e996382" translate="yes" xml:space="preserve">
          <source>This parameter overrides the terminal&amp;rsquo;s color support as given by the system&amp;rsquo;s terminal capabilities database in that this parameter&amp;rsquo;s value specifies the color mode to use on a text terminal. The value can be either a symbol or a number. A number specifies the number of colors to use (and, indirectly, what commands to issue to produce each color). For example, &lt;code&gt;(tty-color-mode . 8)&lt;/code&gt; specifies use of the ANSI escape sequences for 8 standard text colors. A value of -1 turns off color support.</source>
          <target state="translated">This parameter overrides the terminal&amp;rsquo;s color support as given by the system&amp;rsquo;s terminal capabilities database in that this parameter&amp;rsquo;s value specifies the color mode to use on a text terminal. The value can be either a symbol or a number. A number specifies the number of colors to use (and, indirectly, what commands to issue to produce each color). For example, &lt;code&gt;(tty-color-mode . 8)&lt;/code&gt; specifies use of the ANSI escape sequences for 8 standard text colors. A value of -1 turns off color support.</target>
        </trans-unit>
        <trans-unit id="bd8509745ba6765cbc1907061264796d7663c212" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;header-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a header line for this window. Display and contents of the header line on other windows showing this buffer are not affected.</source>
          <target state="translated">This parameter replaces the value of the buffer-local variable &lt;code&gt;header-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a header line for this window. Display and contents of the header line on other windows showing this buffer are not affected.</target>
        </trans-unit>
        <trans-unit id="2ec699ec9c8e7519372ba47de1ea0fe4ba54710b" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a mode line for this window. Display and contents of the mode line on other windows showing this buffer are not affected.</source>
          <target state="translated">This parameter replaces the value of the buffer-local variable &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a mode line for this window. Display and contents of the mode line on other windows showing this buffer are not affected.</target>
        </trans-unit>
        <trans-unit id="ea07d88807fca81810b36713d8feafdd8c4cb0f5" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;tab-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a tab line for this window. Display and contents of the tab line on other windows showing this buffer are not affected.</source>
          <target state="translated">This parameter replaces the value of the buffer-local variable &lt;code&gt;tab-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a tab line for this window. Display and contents of the tab line on other windows showing this buffer are not affected.</target>
        </trans-unit>
        <trans-unit id="41c00b41d6d137508c8d8ab39ab98ef1c2585357" translate="yes" xml:space="preserve">
          <source>This parameter specifies a buffer, a direction where &lt;code&gt;nil&lt;/code&gt; means vertical and &lt;code&gt;t&lt;/code&gt; horizontal, and a size in pixels. If this window displays the specified buffer and its size in the indicated direction equals the size specified by this parameter, then Emacs will try to preserve the size of this window in the indicated direction. This parameter is installed and updated by the function &lt;code&gt;window-preserve-size&lt;/code&gt; (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</source>
          <target state="translated">This parameter specifies a buffer, a direction where &lt;code&gt;nil&lt;/code&gt; means vertical and &lt;code&gt;t&lt;/code&gt; horizontal, and a size in pixels. If this window displays the specified buffer and its size in the indicated direction equals the size specified by this parameter, then Emacs will try to preserve the size of this window in the indicated direction. This parameter is installed and updated by the function &lt;code&gt;window-preserve-size&lt;/code&gt; (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4852787081058fd92ee5a74912af6016072c67fe" translate="yes" xml:space="preserve">
          <source>This parameter specifies a relative position of the frame&amp;rsquo;s window-system window in the stacking (Z-) order of the frame&amp;rsquo;s display.</source>
          <target state="translated">This parameter specifies a relative position of the frame&amp;rsquo;s window-system window in the stacking (Z-) order of the frame&amp;rsquo;s display.</target>
        </trans-unit>
        <trans-unit id="60b30bc5fd34f7ee39bf385de781a443f02c1a56" translate="yes" xml:space="preserve">
          <source>This parameter specifies the desired fullscreen state of the frame after invoking the &lt;code&gt;toggle-frame-fullscreen&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</source>
          <target state="translated">This parameter specifies the desired fullscreen state of the frame after invoking the &lt;code&gt;toggle-frame-fullscreen&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="25fb13009e5b3031779cc093d2e75102ecac3ed2" translate="yes" xml:space="preserve">
          <source>This parameter specifies the desired fullscreen state of the frame after invoking the &lt;code&gt;toggle-frame-fullscreen&lt;/code&gt; command (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13db171be7a96dd431263ef790763257e7812873" translate="yes" xml:space="preserve">
          <source>This parameter specifies the height of the frame. It works just like &lt;code&gt;width&lt;/code&gt;, except vertically instead of horizontally.</source>
          <target state="translated">This parameter specifies the height of the frame. It works just like &lt;code&gt;width&lt;/code&gt; , except vertically instead of horizontally.</target>
        </trans-unit>
        <trans-unit id="220ad6679b282431f44117a1a4f2876c1d9b616b" translate="yes" xml:space="preserve">
          <source>This parameter specifies the minimum native height (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial size or resize a frame make sure that all the frame&amp;rsquo;s windows, horizontal scroll bars and dividers, mode and header lines, the echo area and the internal menu and tool bar can be displayed. This parameter, if non-&lt;code&gt;nil&lt;/code&gt; allows to make a frame smaller than that with the consequence that any components that do not fit will be clipped by the window manager.</source>
          <target state="translated">This parameter specifies the minimum native height (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial size or resize a frame make sure that all the frame&amp;rsquo;s windows, horizontal scroll bars and dividers, mode and header lines, the echo area and the internal menu and tool bar can be displayed. This parameter, if non- &lt;code&gt;nil&lt;/code&gt; allows to make a frame smaller than that with the consequence that any components that do not fit will be clipped by the window manager.</target>
        </trans-unit>
        <trans-unit id="500401d99a4f98be993f7474e83ddea78b4bf383" translate="yes" xml:space="preserve">
          <source>This parameter specifies the minimum native width (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial width or resize a frame horizontally make sure that all the frame&amp;rsquo;s windows, vertical scroll bars, fringes, margins and vertical dividers can be displayed. This parameter, if non-&lt;code&gt;nil&lt;/code&gt; allows to make a frame narrower than that with the consequence that any components that do not fit will be clipped by the window manager.</source>
          <target state="translated">This parameter specifies the minimum native width (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial width or resize a frame horizontally make sure that all the frame&amp;rsquo;s windows, vertical scroll bars, fringes, margins and vertical dividers can be displayed. This parameter, if non- &lt;code&gt;nil&lt;/code&gt; allows to make a frame narrower than that with the consequence that any components that do not fit will be clipped by the window manager.</target>
        </trans-unit>
        <trans-unit id="16827b14a99ac4bd190dd9494af238eb8c88ecc3" translate="yes" xml:space="preserve">
          <source>This parameter specifies the opacity of the frame, on graphical displays that support variable opacity. It should be an integer between 0 and 100, where 0 means completely transparent and 100 means completely opaque. It can also have a &lt;code&gt;nil&lt;/code&gt; value, which tells Emacs not to set the frame opacity (leaving it to the window manager).</source>
          <target state="translated">This parameter specifies the opacity of the frame, on graphical displays that support variable opacity. It should be an integer between 0 and 100, where 0 means completely transparent and 100 means completely opaque. It can also have a &lt;code&gt;nil&lt;/code&gt; value, which tells Emacs not to set the frame opacity (leaving it to the window manager).</target>
        </trans-unit>
        <trans-unit id="dc3c010df2704242bd62337c6c4e53615d7539d7" translate="yes" xml:space="preserve">
          <source>This parameter specifies the width of the frame. It can be specified as in the following ways:</source>
          <target state="translated">This parameter specifies the width of the frame. It can be specified as in the following ways:</target>
        </trans-unit>
        <trans-unit id="1813e6bc72a721928d2e936309adfea83df18dd3" translate="yes" xml:space="preserve">
          <source>This parameter specifies the window that this one has been cloned from. It is installed by &lt;code&gt;window-state-get&lt;/code&gt; (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;).</source>
          <target state="translated">This parameter specifies the window that this one has been cloned from. It is installed by &lt;code&gt;window-state-get&lt;/code&gt; (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a4ae7f76a8aa426d1a2e65e02eeabd44a78f7d1d" translate="yes" xml:space="preserve">
          <source>This parameter specifies whether to maximize the frame&amp;rsquo;s width, height or both. Its value can be &lt;code&gt;fullwidth&lt;/code&gt;, &lt;code&gt;fullheight&lt;/code&gt;, &lt;code&gt;fullboth&lt;/code&gt;, or &lt;code&gt;maximized&lt;/code&gt;. A &lt;em&gt;fullwidth&lt;/em&gt; frame is as wide as possible, a &lt;em&gt;fullheight&lt;/em&gt; frame is as tall as possible, and a &lt;em&gt;fullboth&lt;/em&gt; frame is both as wide and as tall as possible. A &lt;em&gt;maximized&lt;/em&gt; frame is like a &amp;ldquo;fullboth&amp;rdquo; frame, except that it usually keeps its title bar and the buttons for resizing and closing the frame. Also, maximized frames typically avoid hiding any task bar or panels displayed on the desktop. A &amp;ldquo;fullboth&amp;rdquo; frame, on the other hand, usually omits the title bar and occupies the entire available screen space.</source>
          <target state="translated">This parameter specifies whether to maximize the frame&amp;rsquo;s width, height or both. Its value can be &lt;code&gt;fullwidth&lt;/code&gt; , &lt;code&gt;fullheight&lt;/code&gt; , &lt;code&gt;fullboth&lt;/code&gt; , or &lt;code&gt;maximized&lt;/code&gt; . A &lt;em&gt;fullwidth&lt;/em&gt; frame is as wide as possible, a &lt;em&gt;fullheight&lt;/em&gt; frame is as tall as possible, and a &lt;em&gt;fullboth&lt;/em&gt; frame is both as wide and as tall as possible. A &lt;em&gt;maximized&lt;/em&gt; frame is like a &amp;ldquo;fullboth&amp;rdquo; frame, except that it usually keeps its title bar and the buttons for resizing and closing the frame. Also, maximized frames typically avoid hiding any task bar or panels displayed on the desktop. A &amp;ldquo;fullboth&amp;rdquo; frame, on the other hand, usually omits the title bar and occupies the entire available screen space.</target>
        </trans-unit>
        <trans-unit id="b10d0af1350bf93c04231e48aba6ae152932aaab" translate="yes" xml:space="preserve">
          <source>This parameter takes effect when the frame is created. If specified as &lt;code&gt;nil&lt;/code&gt;, Emacs will try to set it to the minibuffer window of &lt;code&gt;default-minibuffer-frame&lt;/code&gt; (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;). For an existing frame, this parameter can be used exclusively to specify another minibuffer window. It is not allowed to change it from a minibuffer window to &lt;code&gt;t&lt;/code&gt; and vice-versa, or from &lt;code&gt;t&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. If the parameter specifies a minibuffer window already, setting it to &lt;code&gt;nil&lt;/code&gt; has no effect.</source>
          <target state="translated">This parameter takes effect when the frame is created. If specified as &lt;code&gt;nil&lt;/code&gt; , Emacs will try to set it to the minibuffer window of &lt;code&gt;default-minibuffer-frame&lt;/code&gt; (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;). For an existing frame, this parameter can be used exclusively to specify another minibuffer window. It is not allowed to change it from a minibuffer window to &lt;code&gt;t&lt;/code&gt; and vice-versa, or from &lt;code&gt;t&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; . If the parameter specifies a minibuffer window already, setting it to &lt;code&gt;nil&lt;/code&gt; has no effect.</target>
        </trans-unit>
        <trans-unit id="56b3a07615de410a1b6fd8e5fd08c25e5c1592b4" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Emacs version 25.1 to support applications that use large margins to center buffer text within a window and should be used, with due care, exclusively by those applications. It might be replaced by an improved solution in future versions of Emacs.</source>
          <target state="translated">This parameter was introduced in Emacs version 25.1 to support applications that use large margins to center buffer text within a window and should be used, with due care, exclusively by those applications. It might be replaced by an improved solution in future versions of Emacs.</target>
        </trans-unit>
        <trans-unit id="fba2e2a45f18cc9ffd9a266943bf1427c2983e79" translate="yes" xml:space="preserve">
          <source>This predicate (whose name comes from the phrase &amp;ldquo;natural number&amp;rdquo;) tests to see whether its argument is a nonnegative integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. 0 is considered non-negative.</source>
          <target state="translated">This predicate (whose name comes from the phrase &amp;ldquo;natural number&amp;rdquo;) tests to see whether its argument is a nonnegative integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. 0 is considered non-negative.</target>
        </trans-unit>
        <trans-unit id="083a57f120b4debea450b8a7f3fd187085477c9e" translate="yes" xml:space="preserve">
          <source>This predicate function does what &lt;code&gt;string-match&lt;/code&gt; does, but it avoids modifying the match data.</source>
          <target state="translated">This predicate function does what &lt;code&gt;string-match&lt;/code&gt; does, but it avoids modifying the match data.</target>
        </trans-unit>
        <trans-unit id="975fd9a6c95dbfb2260b5cd3bc2a1d38647b0145" translate="yes" xml:space="preserve">
          <source>This predicate function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;object&lt;/code&gt; is a timer.</source>
          <target state="translated">This predicate function returns non- &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;object&lt;/code&gt; is a timer.</target>
        </trans-unit>
        <trans-unit id="c3272cdf7a150380c9807fbff4d704899004de96" translate="yes" xml:space="preserve">
          <source>This predicate function returns non-&lt;code&gt;nil&lt;/code&gt; if the mouse pointer displayed on &lt;var&gt;frame&lt;/var&gt; is visible; otherwise it returns &lt;code&gt;nil&lt;/code&gt;. &lt;var&gt;frame&lt;/var&gt; omitted or &lt;code&gt;nil&lt;/code&gt; means the selected frame. This is useful when &lt;code&gt;make-pointer-invisible&lt;/code&gt; is set to &lt;code&gt;t&lt;/code&gt;: it allows you to know if the pointer has been hidden. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Avoidance.html#Mouse-Avoidance&quot;&gt;Mouse Avoidance&lt;/a&gt; in</source>
          <target state="translated">This predicate function returns non- &lt;code&gt;nil&lt;/code&gt; if the mouse pointer displayed on &lt;var&gt;frame&lt;/var&gt; is visible; otherwise it returns &lt;code&gt;nil&lt;/code&gt; . &lt;var&gt;frame&lt;/var&gt; omitted or &lt;code&gt;nil&lt;/code&gt; means the selected frame. This is useful when &lt;code&gt;make-pointer-invisible&lt;/code&gt; is set to &lt;code&gt;t&lt;/code&gt; : it allows you to know if the pointer has been hidden. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Avoidance.html#Mouse-Avoidance&quot;&gt;Mouse Avoidance&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="de920b6f3fd69196178d01edc6af912370a54dcd" translate="yes" xml:space="preserve">
          <source>This predicate function returns non-&lt;code&gt;nil&lt;/code&gt; if the mouse pointer displayed on &lt;var&gt;frame&lt;/var&gt; is visible; otherwise it returns &lt;code&gt;nil&lt;/code&gt;. &lt;var&gt;frame&lt;/var&gt; omitted or &lt;code&gt;nil&lt;/code&gt; means the selected frame. This is useful when &lt;code&gt;make-pointer-invisible&lt;/code&gt; is set to &lt;code&gt;t&lt;/code&gt;: it allows you to know if the pointer has been hidden. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Avoidance.html#Mouse-Avoidance&quot;&gt;Mouse Avoidance&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7cb8638f40c2ebb4006a81e5d23a398f6d9a6ba" translate="yes" xml:space="preserve">
          <source>This predicate function works like &lt;code&gt;looking-at&lt;/code&gt;, but without updating the match data.</source>
          <target state="translated">This predicate function works like &lt;code&gt;looking-at&lt;/code&gt; , but without updating the match data.</target>
        </trans-unit>
        <trans-unit id="c34cbf123174b83ec291ccd467b7b6256fea9713" translate="yes" xml:space="preserve">
          <source>This predicate returns &lt;code&gt;t&lt;/code&gt; if its floating-point argument is a NaN, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This predicate returns &lt;code&gt;t&lt;/code&gt; if its floating-point argument is a NaN, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="0991978cdd6e9b0d75671e2a04242a041730f9c0" translate="yes" xml:space="preserve">
          <source>This predicate returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a frame, and &lt;code&gt;nil&lt;/code&gt; otherwise. For a frame, the value indicates which kind of display the frame uses:</source>
          <target state="translated">This predicate returns a non- &lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a frame, and &lt;code&gt;nil&lt;/code&gt; otherwise. For a frame, the value indicates which kind of display the frame uses:</target>
        </trans-unit>
        <trans-unit id="85090501de9da9f291cf5d05c9059f78e364b791" translate="yes" xml:space="preserve">
          <source>This predicate returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a terminal that is live (i.e., not deleted), and &lt;code&gt;nil&lt;/code&gt; otherwise. For live terminals, the return value indicates what kind of frames are displayed on that terminal; the list of possible values is the same as for &lt;code&gt;framep&lt;/code&gt; above.</source>
          <target state="translated">This predicate returns a non- &lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a terminal that is live (i.e., not deleted), and &lt;code&gt;nil&lt;/code&gt; otherwise. For live terminals, the return value indicates what kind of frames are displayed on that terminal; the list of possible values is the same as for &lt;code&gt;framep&lt;/code&gt; above.</target>
        </trans-unit>
        <trans-unit id="d9bdba95a4f5cf68ca65087e39da58a56f8bf3e1" translate="yes" xml:space="preserve">
          <source>This predicate returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a valid case table.</source>
          <target state="translated">This predicate returns non- &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a valid case table.</target>
        </trans-unit>
        <trans-unit id="7ae94733e1d2813ba78d314bee6a03223350d3e6" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a large integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. Unlike small integers, large integers can be &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;eql&lt;/code&gt; even if they are not &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">This predicate tests whether its argument is a large integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. Unlike small integers, large integers can be &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;eql&lt;/code&gt; even if they are not &lt;code&gt;eq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df6be79cd38e82ff9d7aa739bb616d881052dda6" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a macro, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This predicate tests whether its argument is a macro, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="2e6ccc250cf7f27c5f8a814295bb7bc70bea5bf7" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a number (either integer or floating point), and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 술어는 인수가 숫자 (정수 또는 부동 소수점)인지 여부를 테스트하고, 그렇다면 &lt;code&gt;t&lt;/code&gt; 를 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d36d6cbe9b4ffbc373b0ff581f77a7b4b0b0935f" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a small integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. Small integers can be compared with &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">이 술어는 인수가 작은 정수인지 테스트하고, 그렇다면 &lt;code&gt;t&lt;/code&gt; 를 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 작은 정수는 &lt;code&gt;eq&lt;/code&gt; 와 비교할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="875aca54c98227124ec4e47efb7bb7fe7187c801" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a special form, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 술어는 인수가 특수 형식인지 여부를 테스트하고, 그렇다면 &lt;code&gt;t&lt;/code&gt; 를 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b0de1c35b3d732b0e53e8ab7ca4c0ce2316934f9" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is an integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">이 술어는 인수가 정수인지 여부를 테스트하고, 그렇다면 &lt;code&gt;t&lt;/code&gt; 를 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a8c027dd49f25a17849b4d7dd4317de706a4199a" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is floating point and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">인수 포인트 반환 부동 여부를이 술어 테스트 &lt;code&gt;t&lt;/code&gt; 을 만약 그렇다면, &lt;code&gt;nil&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="9272c9e1efdebef53407afb0f474969eb591636a" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is zero, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. The argument must be a number.</source>
          <target state="translated">이 술어는 인수가 0인지 테스트하고, 그렇다면 &lt;code&gt;t&lt;/code&gt; 를 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다. 인수는 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c51e0987531445179cbfcfdcf7213070d7cfd77c" translate="yes" xml:space="preserve">
          <source>This property activates various features that change the way text is displayed. For example, it can make text appear taller or shorter, higher or lower, wider or narrow, or replaced with an image. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">이 속성은 텍스트가 표시되는 방식을 변경하는 다양한 기능을 활성화합니다. 예를 들어 텍스트를 더 길거나 짧게, 더 높거나 낮게, 더 넓거나 좁게 표시하거나 이미지로 대체 할 수 있습니다. &lt;a href=&quot;display-property#Display-Property&quot;&gt;표시 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3477c9c8be33921d208326a3410a1a7e6d7ea2d" translate="yes" xml:space="preserve">
          <source>This property activates various features that change the way text is displayed. For example, it can make text appear taller or shorter, higher or lower, wider or narrower, or replaced with an image. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">이 속성은 텍스트가 표시되는 방식을 변경하는 다양한 기능을 활성화합니다. 예를 들어, 텍스트를 더 크거나 짧게, 더 높거나 낮게, 더 넓거나 좁게 표시하거나 이미지로 대체 할 수 있습니다. &lt;a href=&quot;display-property#Display-Property&quot;&gt;표시 속성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c929b443b54b5e414ee61f71f93112e679c76e8" translate="yes" xml:space="preserve">
          <source>This property controls the appearance of the text (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;). The value of the property can be the following:</source>
          <target state="translated">이 속성은 텍스트의 모양을 제어합니다 ( &lt;a href=&quot;faces#Faces&quot;&gt;면&lt;/a&gt; 참조 ). 속성 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c2d0f0229ae518416429a0156978b4e4bcfd36ca" translate="yes" xml:space="preserve">
          <source>This property counts the number of times the abbrev has been expanded. If not explicitly set, it is initialized to 0 by &lt;code&gt;define-abbrev&lt;/code&gt;.</source>
          <target state="translated">이 속성은 약어가 확장 된 횟수를 계산합니다. 명시 적으로 설정하지 않으면 &lt;code&gt;define-abbrev&lt;/code&gt; 에 의해 0으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="26ccd3469a95d8c74efa36977201cf82aa7ae80d" translate="yes" xml:space="preserve">
          <source>This property holds a counter incremented each time a new abbrev is added to the table.</source>
          <target state="translated">이 속성은 새 약어가 테이블에 추가 될 때마다 증가하는 카운터를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="75f0fe2db504e09636b38095072fe2193000513e" translate="yes" xml:space="preserve">
          <source>This property holds a list of tables from which to inherit other abbrevs.</source>
          <target state="translated">이 속성은 다른 약어를 상속 할 테이블 목록을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="a9a30015f883285db73ea9d4d7efbf8906c78ce5" translate="yes" xml:space="preserve">
          <source>This property is used instead of &lt;code&gt;face&lt;/code&gt; when the mouse is on or near the character. For this purpose, &amp;ldquo;near&amp;rdquo; means that all text between the character and where the mouse is have the same &lt;code&gt;mouse-face&lt;/code&gt; property value.</source>
          <target state="translated">이 속성은 마우스가 캐릭터 위나 근처에있을 때 &lt;code&gt;face&lt;/code&gt; 대신 사용됩니다 . 이를 위해 &quot;근처&quot;는 문자와 마우스가있는 위치 사이의 모든 텍스트가 동일한 &lt;code&gt;mouse-face&lt;/code&gt; 속성 값을 가짐을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f8d26fcf101ce57ae35fa5f66db3d8f1dd7f79b8" translate="yes" xml:space="preserve">
          <source>This property is used instead of &lt;code&gt;face&lt;/code&gt; when the mouse is within the range of the overlay. However, Emacs ignores all face attributes from this property that alter the text size (e.g., &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;). Those attributes are always the same as in the unhighlighted text.</source>
          <target state="translated">이 속성은 마우스가 오버레이 범위 내에있을 때 &lt;code&gt;face&lt;/code&gt; 대신 사용됩니다 . 그러나 Emacs는 텍스트 크기 (예 &lt;code&gt;:height&lt;/code&gt; , &lt;code&gt;:weight&lt;/code&gt; 및 &lt;code&gt;:slant&lt;/code&gt; ) 를 변경하는이 속성의 모든 얼굴 속성을 무시합니다 . 이러한 속성은 항상 강조 표시되지 않은 텍스트와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="dce37fb61fbd51bb4f6a980899fd7011d0682f35" translate="yes" xml:space="preserve">
          <source>This property list associates &lt;code&gt;pine&lt;/code&gt; with &lt;code&gt;cones&lt;/code&gt;, &lt;code&gt;numbers&lt;/code&gt; with &lt;code&gt;(1 2 3)&lt;/code&gt;, and &lt;code&gt;color&lt;/code&gt; with &lt;code&gt;&quot;blue&quot;&lt;/code&gt;. The property names and values can be any Lisp objects, but the names are usually symbols (as they are in this example).</source>
          <target state="translated">이 속성 목록은 &lt;code&gt;pine&lt;/code&gt; 과 &lt;code&gt;cones&lt;/code&gt; , &lt;code&gt;numbers&lt;/code&gt; 와 &lt;code&gt;(1 2 3)&lt;/code&gt; , &lt;code&gt;color&lt;/code&gt; 와 &lt;code&gt;&quot;blue&quot;&lt;/code&gt; 를 연결 합니다. 속성 이름과 값은 모든 Lisp 개체가 될 수 있지만 이름은 일반적으로 기호입니다 (이 예에서와 같이).</target>
        </trans-unit>
        <trans-unit id="88cf656c745cc043e16b90433b2e4752ad16ceb3" translate="yes" xml:space="preserve">
          <source>This property provides a way to compute the menu item dynamically. The property value &lt;var&gt;filter-fn&lt;/var&gt; should be a function of one argument; when it is called, its argument will be &lt;var&gt;real-binding&lt;/var&gt;. The function should return the binding to use instead.</source>
          <target state="translated">이 속성은 메뉴 항목을 동적으로 계산하는 방법을 제공합니다. 속성 값 &lt;var&gt;filter-fn&lt;/var&gt; 은 한 인수의 함수 여야합니다. 호출되면 인수는 &lt;var&gt;real-binding&lt;/var&gt; 입니다. 함수는 대신 사용할 바인딩을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="46b7a8e42c2f354bec6dab05317844063bb34d06" translate="yes" xml:space="preserve">
          <source>This property provides a way to define radio buttons and toggle buttons. The &lt;small&gt;CAR&lt;/small&gt;, &lt;var&gt;type&lt;/var&gt;, says which: it should be &lt;code&gt;:toggle&lt;/code&gt; or &lt;code&gt;:radio&lt;/code&gt;. The &lt;small&gt;CDR&lt;/small&gt;, &lt;var&gt;selected&lt;/var&gt;, should be a form; the result of evaluating it says whether this button is currently selected.</source>
          <target state="translated">이 속성은 라디오 버튼과 토글 버튼을 정의하는 방법을 제공합니다. &lt;small&gt;자동차&lt;/small&gt; , &lt;var&gt;type&lt;/var&gt; 그것이 있어야 : 어떤 말한다 &lt;code&gt;:toggle&lt;/code&gt; 이나 &lt;code&gt;:radio&lt;/code&gt; . &lt;small&gt;CDR은&lt;/small&gt; , &lt;var&gt;selected&lt;/var&gt; , 폼되어야한다 평가 결과는이 버튼이 현재 선택되어 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5c039cc9e1ce7ea1e1f753eae18d311864902e76" translate="yes" xml:space="preserve">
          <source>This property says whether the text is ready for display. If &lt;code&gt;nil&lt;/code&gt;, Emacs&amp;rsquo;s redisplay routine calls the functions in &lt;code&gt;fontification-functions&lt;/code&gt; (see &lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;Auto Faces&lt;/a&gt;) to prepare this part of the buffer before it is displayed. It is used internally by the just-in-time font locking code.</source>
          <target state="translated">이 속성은 텍스트를 표시 할 준비가되었는지 여부를 나타냅니다. 경우 &lt;code&gt;nil&lt;/code&gt; , 이맥스의 다시 표시 루틴의 함수 호출 &lt;code&gt;fontification-functions&lt;/code&gt; 합니다 ( &lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;자동 얼굴&lt;/a&gt; )이 표시되기 전에 버퍼의이 부분을 준비 할 수 있습니다. Just-In-Time 글꼴 잠금 코드에서 내부적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e41f6cf9480ecee9a630942d6c931b6041ac5def" translate="yes" xml:space="preserve">
          <source>This property specifies a display spec to prepend to each continuation line at display-time. See &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;.</source>
          <target state="translated">이 속성은 표시 시간에 각 연속 줄 앞에 추가 할 표시 사양을 지정합니다. &lt;a href=&quot;truncation#Truncation&quot;&gt;잘림을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e5b1b0f4f375b3c40e6a0fb938ae855cf4466bc" translate="yes" xml:space="preserve">
          <source>This property specifies a display spec to prepend to each non-continuation line at display-time. See &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;.</source>
          <target state="translated">이 속성은 표시 시간에 각 비 연속 줄 앞에 추가 할 표시 사양을 지정합니다. &lt;a href=&quot;truncation#Truncation&quot;&gt;잘림을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="319a7e9cfddcea8ca06fbb8d6a7298c8d54e9c87" translate="yes" xml:space="preserve">
          <source>This property specifies a value for the &lt;code&gt;face&lt;/code&gt; property that Font Lock mode should apply to the underlying text. It is one of the fontification methods used by Font Lock mode, and is useful for special modes that implement their own highlighting. See &lt;a href=&quot;precalculated-fontification#Precalculated-Fontification&quot;&gt;Precalculated Fontification&lt;/a&gt;. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect.</source>
          <target state="translated">이 속성 은 글꼴 잠금 모드가 기본 텍스트에 적용해야하는 &lt;code&gt;face&lt;/code&gt; 속성 의 값을 지정 합니다. 글꼴 잠금 모드에서 사용하는 글꼴 화 방법 중 하나이며 자체 강조 표시를 구현하는 특수 모드에 유용합니다. &lt;a href=&quot;precalculated-fontification#Precalculated-Fontification&quot;&gt;미리 계산 된 글꼴 화를&lt;/a&gt; 참조하십시오 . 글꼴 잠금 모드가 비활성화되면 &lt;code&gt;font-lock-face&lt;/code&gt; 는 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="066470928867b322b764e30f2cfb5f731df9751c" translate="yes" xml:space="preserve">
          <source>This property specifies an extra left margin for filling this part of the text.</source>
          <target state="translated">이 속성은 텍스트의이 부분을 채우기위한 추가 왼쪽 여백을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4560e12e07587ef9a98a362cfe089438cdead139" translate="yes" xml:space="preserve">
          <source>This property specifies an extra right margin for filling this part of the text.</source>
          <target state="translated">이 속성은 텍스트의이 부분을 채우기위한 추가 오른쪽 여백을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b0fb91642f6d350e77e1b6d7a9f207e326502091" translate="yes" xml:space="preserve">
          <source>This property specifies that &lt;var&gt;string&lt;/var&gt; is the string to display as the keyboard equivalent for this menu item. You can use the &amp;lsquo;</source>
          <target state="translated">것을이 속성을 지정하는 &lt;var&gt;string&lt;/var&gt; 이 메뉴 항목의 키보드 동등하게 표시하는 문자열입니다. '</target>
        </trans-unit>
        <trans-unit id="947b8a604b5f02e33ab66249b17e2cc68f23f437" translate="yes" xml:space="preserve">
          <source>This property specifies the style of justification for filling this part of the text.</source>
          <target state="translated">이 속성은 텍스트의이 부분을 채우기위한 자리 맞추기 스타일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="408ee042972bd5e487a5441e49dca7c8524b81af" translate="yes" xml:space="preserve">
          <source>This property specifies which key sequence to display as keyboard equivalent. Before Emacs displays &lt;var&gt;key-sequence&lt;/var&gt; in the menu, it verifies that &lt;var&gt;key-sequence&lt;/var&gt; is really equivalent to this menu item, so it only has an effect if you specify a correct key sequence. Specifying &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;key-sequence&lt;/var&gt; is equivalent to the &lt;code&gt;:key-sequence&lt;/code&gt; attribute being absent.</source>
          <target state="translated">이 속성은 키보드에 해당하는 것으로 표시 할 키 시퀀스를 지정합니다. 이맥스를 표시하기 전에 &lt;var&gt;key-sequence&lt;/var&gt; 메뉴에서, 그 확인 &lt;var&gt;key-sequence&lt;/var&gt; 에만 영향을 있도록 올바른 키 시퀀스를 지정하면,이 메뉴 항목에 정말 동일합니다. &lt;var&gt;key-sequence&lt;/var&gt; 에 &lt;code&gt;nil&lt;/code&gt; 을 지정 하는 것은 &lt;code&gt;:key-sequence&lt;/code&gt; 속성이없는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0c6e3b1e15429e92390803b7d2c89e1a1a17ced3" translate="yes" xml:space="preserve">
          <source>This property tells incremental search how to make an invisible overlay visible, permanently, if the final match overlaps it. See &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Invisible Text&lt;/a&gt;.</source>
          <target state="translated">이 속성은 최종 일치 항목이 겹치는 경우 보이지 않는 오버레이를 영구적으로 표시하는 방법을 증분 검색에 알려줍니다. &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;보이지 않는 텍스트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee0adec20553cd3733d41294342ce226b98fce90" translate="yes" xml:space="preserve">
          <source>This property tells incremental search how to make an invisible overlay visible, temporarily, during the search. See &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Invisible Text&lt;/a&gt;.</source>
          <target state="translated">이 속성은 검색 중 일시적으로 보이지 않는 오버레이를 표시하는 방법을 증분 검색에 알려줍니다. &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;보이지 않는 텍스트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="941f2f9aa0981f31c10bd01f541a1c4ff07ba32a" translate="yes" xml:space="preserve">
          <source>This property value specifies the preferred key binding, when showing documentation, for the named function. See &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;.</source>
          <target state="translated">이 속성 값은 명명 된 함수에 대해 설명서를 표시 할 때 선호하는 키 바인딩을 지정합니다. &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;문서의 키를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f12f6f4471f7bf40f3d10d34706aad2568066452" translate="yes" xml:space="preserve">
          <source>This property works like &lt;code&gt;keymap&lt;/code&gt; except that it specifies a keymap to use &lt;em&gt;instead of&lt;/em&gt; the buffer&amp;rsquo;s local map. For most purposes (perhaps all purposes), it is better to use the &lt;code&gt;keymap&lt;/code&gt; property.</source>
          <target state="translated">이 속성은 버퍼의 로컬 맵 &lt;em&gt;대신&lt;/em&gt; 사용할 키맵을 지정한다는 점을 제외하면 &lt;code&gt;keymap&lt;/code&gt; 처럼 작동 합니다 . 대부분의 경우 (아마 모든 용도) &lt;code&gt;keymap&lt;/code&gt; 속성 을 사용하는 것이 좋습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8038d88cf2b7af9745ca5759eec1c75551d60028" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value determines the priority of the overlay. If you want to specify a priority value, use either &lt;code&gt;nil&lt;/code&gt; (or zero), or a positive integer. Any other value has undefined behavior.</source>
          <target state="translated">이 속성의 값은 오버레이의 우선 순위를 결정합니다. 우선 순위 값을 지정하려면 &lt;code&gt;nil&lt;/code&gt; (또는 0) 또는 양의 정수를 사용하십시오. 다른 값에는 정의되지 않은 동작이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8263b3cc2b75bb93edef1e1b2526768c8c3168b" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called before and after inserting text right at the beginning of the overlay. The calling conventions are the same as for the &lt;code&gt;modification-hooks&lt;/code&gt; functions.</source>
          <target state="translated">이 속성의 값은 오버레이 시작 부분에 텍스트를 삽입하기 전과 후에 호출 할 함수 목록입니다. 호출 규칙은 &lt;code&gt;modification-hooks&lt;/code&gt; 함수 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="56741a519a731d9740cceebca5333924ea138fd8" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called before and after inserting text right at the end of the overlay. The calling conventions are the same as for the &lt;code&gt;modification-hooks&lt;/code&gt; functions.</source>
          <target state="translated">이 속성의 값은 오버레이 끝에 텍스트를 삽입하기 전후에 호출 할 함수 목록입니다. 호출 규칙은 &lt;code&gt;modification-hooks&lt;/code&gt; 함수 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="27865c20e8f49f56c94074bbe90cba6c46543ebf" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called if any character within the overlay is changed or if text is inserted strictly within the overlay.</source>
          <target state="translated">이 속성의 값은 오버레이 내의 문자가 변경되거나 텍스트가 오버레이 내에 엄격하게 삽입 된 경우 호출 할 함수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0cfeea5194bb36721262145ee6f4de77c36e25c5" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a string to add to the display at the beginning of the overlay. The string does not appear in the buffer in any sense&amp;mdash;only on the screen.</source>
          <target state="translated">이 속성의 값은 오버레이 시작시 디스플레이에 추가 할 문자열입니다. 문자열은 어떤 의미에서도 버퍼에 나타나지 않고 화면에만 나타납니다.</target>
        </trans-unit>
        <trans-unit id="3207cdeae20e8ef35aa044ca30d684ad9f36d36b" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a string to add to the display at the end of the overlay. The string does not appear in the buffer in any sense&amp;mdash;only on the screen.</source>
          <target state="translated">이 속성의 값은 오버레이 끝에 디스플레이에 추가 할 문자열입니다. 문자열은 어떤 의미에서도 버퍼에 나타나지 않고 화면에만 나타납니다.</target>
        </trans-unit>
        <trans-unit id="6da911c299714acdfed8889a1653a73a467fdb2c" translate="yes" xml:space="preserve">
          <source>This regular expression contains four parts in succession and can be deciphered as follows:</source>
          <target state="translated">이 정규식은 네 부분을 연속적으로 포함하며 다음과 같이 해독 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0f82443a5d9f2bfa2fd7c397d643a48a6003cf9" translate="yes" xml:space="preserve">
          <source>This removes only images that were put into &lt;var&gt;buffer&lt;/var&gt; the way &lt;code&gt;put-image&lt;/code&gt; does it, not images that were inserted with &lt;code&gt;insert-image&lt;/code&gt; or in other ways.</source>
          <target state="translated">이렇게하면 &lt;code&gt;insert-image&lt;/code&gt; 또는 다른 방식으로 삽입 된 &lt;code&gt;put-image&lt;/code&gt; 가 아니라 put-image 방식 으로 &lt;var&gt;buffer&lt;/var&gt; 에 삽입 된 이미지 만 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="05984eb823fb3287757b3d43c54bdca6f0f899c4" translate="yes" xml:space="preserve">
          <source>This removes the element &lt;var&gt;element&lt;/var&gt; from &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;. This does nothing if &lt;var&gt;element&lt;/var&gt; is not in the list.</source>
          <target state="translated">이것은 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; 에서 요소 &lt;var&gt;element&lt;/var&gt; 를 제거합니다 . &lt;var&gt;element&lt;/var&gt; 가 목록에 없으면 아무 작업도 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="09049b7883acb5c8f9aedb6fbc9b34cc69720da3" translate="yes" xml:space="preserve">
          <source>This replaces the default variable &lt;var&gt;mode&lt;/var&gt;, used to store the state of the mode. If you specify this, the &lt;var&gt;mode&lt;/var&gt; variable is not defined, and any &lt;var&gt;init-value&lt;/var&gt; argument is unused. &lt;var&gt;place&lt;/var&gt; can be a different named variable (which you must define yourself), or anything that can be used with the &lt;code&gt;setf&lt;/code&gt; function (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;). &lt;var&gt;place&lt;/var&gt; can also be a cons &lt;code&gt;(&lt;var&gt;get&lt;/var&gt; . &lt;var&gt;set&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;get&lt;/var&gt; is an expression that returns the current state, and &lt;var&gt;set&lt;/var&gt; is a function of one argument (a state) that sets it.</source>
          <target state="translated">이것은 &lt;var&gt;mode&lt;/var&gt; 의 상태를 저장하는 데 사용되는 기본 변수 mode를 대체 합니다. 이를 지정하면 &lt;var&gt;mode&lt;/var&gt; 변수가 정의되지 않고 &lt;var&gt;init-value&lt;/var&gt; 인수가 사용되지 않습니다. &lt;var&gt;place&lt;/var&gt; 는 다른 이름이 지정된 변수 (사용자가 직접 정의해야 함)이거나 &lt;code&gt;setf&lt;/code&gt; 함수 와 함께 사용할 수있는 모든 것일 수 있습니다 ( &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;일반화 된 변수&lt;/a&gt; 참조 ). &lt;var&gt;place&lt;/var&gt; 는 cons &lt;code&gt;(&lt;var&gt;get&lt;/var&gt; . &lt;var&gt;set&lt;/var&gt;)&lt;/code&gt; 일 수도 있습니다 . 여기서 &lt;var&gt;get&lt;/var&gt; 은 현재 상태를 반환하는 표현식이고 &lt;var&gt;set&lt;/var&gt; 는이를 설정 하는 하나의 인수 (상태)의 함수입니다.</target>
        </trans-unit>
        <trans-unit id="2015f79f8a897ef9eec56c5f2889f1fd17b12d51" translate="yes" xml:space="preserve">
          <source>This represents a file to visit and a position in it; jumping to this value visits file &lt;var&gt;filename&lt;/var&gt; and goes to buffer position &lt;var&gt;position&lt;/var&gt;. Restoring this type of position asks the user for confirmation first.</source>
          <target state="translated">이것은 방문 할 파일과 그 안의 위치를 ​​나타냅니다. 이 값으로 점프하면 파일 &lt;var&gt;filename&lt;/var&gt; 을 방문 하고 버퍼 위치 &lt;var&gt;position&lt;/var&gt; 합니다. 이러한 유형의 위치를 ​​복원하려면 먼저 사용자에게 확인을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="6e311e23ab12fc0f5ff77cf2c9dd596c8e6e5898" translate="yes" xml:space="preserve">
          <source>This represents a file to visit; jumping to this value visits file &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">방문 할 파일을 나타냅니다. 이 값으로 점프하면 &lt;var&gt;filename&lt;/var&gt; 파일을 방문합니다 .</target>
        </trans-unit>
        <trans-unit id="a41393dc89c086ec33aa75ec86f0b399f61aa5c0" translate="yes" xml:space="preserve">
          <source>This represents a frame configuration to restore, and a position to jump to in the current buffer.</source>
          <target state="translated">복원 할 프레임 구성과 현재 버퍼에서 점프 할 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="26e426a26b1412c44b93ace1b6b3fcab4875fc28" translate="yes" xml:space="preserve">
          <source>This represents a window configuration to restore in one frame, and a position to jump to in the current buffer.</source>
          <target state="translated">이것은 한 프레임에서 복원 할 창 구성과 현재 버퍼에서 점프 할 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="da81931882d07d70809d38c360b246cdb2dd7253" translate="yes" xml:space="preserve">
          <source>This results in the &lt;code&gt;lisp-indent-function&lt;/code&gt; property being set on the macro name.</source>
          <target state="translated">이로 인해 &lt;code&gt;lisp-indent-function&lt;/code&gt; 속성이 매크로 이름에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="37aa442144924bd9453ae9ecc7153598bb70f218" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;charcode&lt;/var&gt; is a valid character, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;var&gt;charcode&lt;/var&gt; 가 유효한 문자 이면 &lt;code&gt;t&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a3b912b3bf43b1998f3778c748f8e7993ae43646" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;color&lt;/var&gt; is a shade of gray, as defined on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the question applies to the selected frame. If &lt;var&gt;color&lt;/var&gt; is not a valid color name, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 복귀 &lt;code&gt;t&lt;/code&gt; 경우 &lt;var&gt;color&lt;/var&gt; 에 정의 된 바와 같은, 회색 음영 인 &lt;var&gt;frame&lt;/var&gt; 의 표시. 경우 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 문제는 선택된 프레임에 적용된다. 경우 &lt;var&gt;color&lt;/var&gt; 유효한 색상 이름이 아닙니다,이 함수의 반환 &lt;code&gt;nil&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="5ce1b95c5cf80fb93a3c901f405cc5d55ad4c92f" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; can really display the color &lt;var&gt;color&lt;/var&gt; (or at least something close to it). If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the question applies to the selected frame.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; 이 색상 &lt;var&gt;color&lt;/var&gt; 실제로 표시 할 수있는 경우 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 (또는 적어도 그에 가까운 색상 ). 경우 &lt;var&gt;frame&lt;/var&gt; 생략되거나 &lt;code&gt;nil&lt;/code&gt; , 문제는 선택된 프레임에 적용된다.</target>
        </trans-unit>
        <trans-unit id="0868a58613e40d068044d92b2fcbe0318c821d31" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a bool-vector, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;var&gt;object&lt;/var&gt; 가 부울 벡터 이면 &lt;code&gt;t&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c839e2aa1a81e65848892fbef5edab950e41345" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a ring, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;var&gt;object&lt;/var&gt; 가 링 이면 &lt;code&gt;t&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4381c449d15b921805dbbd14f45e8923f0831d98" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a valid bitmap specification, suitable for use with &lt;code&gt;:stipple&lt;/code&gt; (see above). It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;var&gt;object&lt;/var&gt; 가 &lt;code&gt;:stipple&lt;/code&gt; 과 함께 사용하기에 적합한 유효한 비트 맵 사양 이면 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 (위 참조). 그것은 반환 &lt;code&gt;nil&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="7cf4b639cca363b302dd23f893bca560d01cd331" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;ring&lt;/var&gt; is empty, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;var&gt;ring&lt;/var&gt; 이 비어 있으면 &lt;code&gt;t&lt;/code&gt; 를 반환하고 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="93817d8e919378ef8c20ba57745cdf9326d1c731" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;t1&lt;/var&gt; and &lt;var&gt;t2&lt;/var&gt; are equal time values. The result is &lt;code&gt;nil&lt;/code&gt; if either argument is a NaN.</source>
          <target state="translated">&lt;var&gt;t1&lt;/var&gt; 과 &lt;var&gt;t2&lt;/var&gt; 가 동일한 시간 값 이면 &lt;code&gt;t&lt;/code&gt; 를 반환 합니다. 인수가 NaN이면 결과는 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5edc74eb24a3425cda6dd10a21109bb768d1efdb" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; either has a buffer-local value in buffer &lt;var&gt;buffer&lt;/var&gt;, or is automatically buffer-local. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;buffer&lt;/var&gt; defaults to the current buffer.</source>
          <target state="translated">이 리턴 &lt;code&gt;t&lt;/code&gt; 는 경우 &lt;var&gt;variable&lt;/var&gt; 중 버퍼의 버퍼 값을 갖는 로컬 &lt;var&gt;buffer&lt;/var&gt; , 또는 자동으로 로컬 버퍼이다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 생략되거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 &lt;var&gt;buffer&lt;/var&gt; 는 기본적으로 현재 버퍼로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e86cfc93101aae6a4a6d9773191c1862b7d898d4" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; is buffer-local in buffer &lt;var&gt;buffer&lt;/var&gt; (which defaults to the current buffer); otherwise, &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 리턴 &lt;code&gt;t&lt;/code&gt; 경우 &lt;var&gt;variable&lt;/var&gt; 버퍼 로컬 버퍼에있는 &lt;var&gt;buffer&lt;/var&gt; (이는 현재 버퍼 디폴트); 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="96866d4aec251ac68263fe50d85d77f85a84a7be" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if the faces &lt;var&gt;face1&lt;/var&gt; and &lt;var&gt;face2&lt;/var&gt; have the same attributes for display.</source>
          <target state="translated">이 반환 &lt;code&gt;t&lt;/code&gt; 은 얼굴이 경우 &lt;var&gt;face1&lt;/var&gt; 및 &lt;var&gt;face2&lt;/var&gt; 는 디스플레이 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5224ca5851b00f960a5d63196e913a15a3c578a" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if time value &lt;var&gt;t1&lt;/var&gt; is less than time value &lt;var&gt;t2&lt;/var&gt;. The result is &lt;code&gt;nil&lt;/code&gt; if either argument is a NaN.</source>
          <target state="translated">시간 값 &lt;var&gt;t1&lt;/var&gt; 이 시간 값 &lt;var&gt;t2&lt;/var&gt; 보다 작 으면 &lt;code&gt;t&lt;/code&gt; 를 반환합니다 . 인수가 NaN이면 결과는 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ff8f0193f83cccc9ccc816f2dd5208de39cd29c1" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt; converted to floating point. If &lt;var&gt;number&lt;/var&gt; is already floating point, &lt;code&gt;float&lt;/code&gt; returns it unchanged.</source>
          <target state="translated">이것은 부동 소수점으로 변환 된 &lt;var&gt;number&lt;/var&gt; 반환 합니다. 경우 &lt;var&gt;number&lt;/var&gt; 이미 부동 소수점 인, &lt;code&gt;float&lt;/code&gt; 가 변경되지 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f0d7fc8515dadfd4753d2f97902ec306a70efc45" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding downward (towards negative infinity).</source>
          <target state="translated">이것은 &lt;var&gt;number&lt;/var&gt; 반환하고 , 아래로 반올림하여 정수로 변환합니다 (음의 무한대쪽으로).</target>
        </trans-unit>
        <trans-unit id="9c11d272f5c65c378bcf9409cfcb71769bf2ae18" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding towards the nearest integer. Rounding a value equidistant between two integers returns the even integer.</source>
          <target state="translated">가장 가까운 정수로 반올림하여 정수로 변환 된 &lt;var&gt;number&lt;/var&gt; 를 반환합니다 . 두 정수 사이의 등거리에있는 값을 반올림하면 짝수 정수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e51762dba4a28b5f779343d3d77db63b0d1b518d" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding towards zero.</source>
          <target state="translated">이것은 0으로 반올림하여 정수로 변환 된 &lt;var&gt;number&lt;/var&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e5d4a48f691122ae7d772af433c63d6b5c91b607" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding upward (towards positive infinity).</source>
          <target state="translated">이것은 &lt;var&gt;number&lt;/var&gt; 반환하고 , (양의 무한대로) 반올림하여 정수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="01f9e7cc335a6ab502fc49af5808a89e82fec2c9" translate="yes" xml:space="preserve">
          <source>This returns a cons cell &lt;code&gt;(&lt;var&gt;header&lt;/var&gt; . &lt;var&gt;footer&lt;/var&gt;)&lt;/code&gt; made from &lt;var&gt;ewoc&lt;/var&gt;&amp;rsquo;s header and footer.</source>
          <target state="translated">이것은 &lt;var&gt;ewoc&lt;/var&gt; 의 머리글과 바닥 글로 만든 cons 셀 &lt;code&gt;(&lt;var&gt;header&lt;/var&gt; . &lt;var&gt;footer&lt;/var&gt;)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="875e8657e61f397cced1836bbd86218971239aaa" translate="yes" xml:space="preserve">
          <source>This returns a copy of the property list of &lt;var&gt;overlay&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;overlay&lt;/var&gt; 속성 목록의 복사본을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d2dfe75954a08588ee6aad547b96e70c9c8e4f55" translate="yes" xml:space="preserve">
          <source>This returns a list of numbers that count the number of objects created in this Emacs session. Each of these counters increments for a certain kind of object. See the documentation string for details.</source>
          <target state="translated">이것은이 Emacs 세션에서 생성 된 객체의 수를 세는 숫자 목록을 반환합니다. 이러한 각 카운터는 특정 종류의 개체에 대해 증가합니다. 자세한 내용은 설명서 문자열을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="34776a3e64916dcadab81611ff9cb8a4bf02d987" translate="yes" xml:space="preserve">
          <source>This returns a list of the objects in &lt;var&gt;ring&lt;/var&gt;, in order, newest first.</source>
          <target state="translated">이것은 &lt;var&gt;ring&lt;/var&gt; 의 객체 목록을 최신순으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1ab43147f4b9862f2aa75a726f9a6d8e463c64c5" translate="yes" xml:space="preserve">
          <source>This returns a new ring capable of holding &lt;var&gt;size&lt;/var&gt; objects. &lt;var&gt;size&lt;/var&gt; should be an integer.</source>
          <target state="translated">이것은 &lt;var&gt;size&lt;/var&gt; 개체 를 보유 할 수있는 새로운 링을 반환 합니다. &lt;var&gt;size&lt;/var&gt; 는 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3c3fcee6583b9eac5dbc4f56e3dde99738094d49" translate="yes" xml:space="preserve">
          <source>This returns a new ring which is a copy of &lt;var&gt;ring&lt;/var&gt;. The new ring contains the same (&lt;code&gt;eq&lt;/code&gt;) objects as &lt;var&gt;ring&lt;/var&gt;.</source>
          <target state="translated">이 사본 인 새로운 링 반환 &lt;var&gt;ring&lt;/var&gt; . 새로운 링은 같은 (포함 &lt;code&gt;eq&lt;/code&gt; 등) 객체 &lt;var&gt;ring&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="65c036754d1c25427b168d7cfe14e5946ace79df" translate="yes" xml:space="preserve">
          <source>This returns a string containing the characters &lt;var&gt;characters&lt;/var&gt;.</source>
          <target state="translated">문자 &lt;var&gt;characters&lt;/var&gt; 포함하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="71fe748e7f3eccf5e0946dd6c3d2ca6c89894819" translate="yes" xml:space="preserve">
          <source>This returns an Emacs function created from the C function &lt;var&gt;func&lt;/var&gt;, whose signature is as described for &lt;code&gt;module_func&lt;/code&gt; above (assumed here to be &lt;code&gt;typedef&lt;/code&gt;&amp;rsquo;ed as &lt;code&gt;subr&lt;/code&gt;). The arguments &lt;var&gt;min_arity&lt;/var&gt; and &lt;var&gt;max_arity&lt;/var&gt; specify the minimum and maximum number of arguments that &lt;var&gt;func&lt;/var&gt; can accept. The &lt;var&gt;max_arity&lt;/var&gt; argument can have the special value &lt;code&gt;emacs_variadic_function&lt;/code&gt;, which makes the function accept an unlimited number of arguments, like the &lt;code&gt;&amp;amp;rest&lt;/code&gt; keyword in Lisp (see &lt;a href=&quot;argument-list#Argument-List&quot;&gt;Argument List&lt;/a&gt;).</source>
          <target state="translated">이 복귀 C 함수로부터 생성 이멕스 함수 &lt;var&gt;func&lt;/var&gt; 그 서명 된 바와 같이이다 &lt;code&gt;module_func&lt;/code&gt; (것으로 가정하여 상술 한 &lt;code&gt;typedef&lt;/code&gt; 'ED로서 &lt;code&gt;subr&lt;/code&gt; ). 인수 &lt;var&gt;min_arity&lt;/var&gt; 및 &lt;var&gt;max_arity&lt;/var&gt; 이 있는 최소 및 인수의 최대 수를 지정 &lt;var&gt;func&lt;/var&gt; 받아 들일 수 있습니다. &lt;var&gt;max_arity&lt;/var&gt; 의 인수는 특별한 값을 가질 수 &lt;code&gt;emacs_variadic_function&lt;/code&gt; 함수가 같은 인수를 무제한으로 받아 들일 수, &lt;code&gt;&amp;amp;rest&lt;/code&gt; (참조 리스프에 키워드를 &lt;a href=&quot;argument-list#Argument-List&quot;&gt;인수 목록&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb3c5059729c336a838c733be57db4f22559a1c8" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;plist&lt;/var&gt; contains the given &lt;var&gt;property&lt;/var&gt;. Unlike &lt;code&gt;plist-get&lt;/code&gt;, this allows you to distinguish between a missing property and a property with the value &lt;code&gt;nil&lt;/code&gt;. The value is actually the tail of &lt;var&gt;plist&lt;/var&gt; whose &lt;code&gt;car&lt;/code&gt; is &lt;var&gt;property&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;plist&lt;/var&gt; 에 주어진 &lt;var&gt;property&lt;/var&gt; 포함되어 있으면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다 . &lt;code&gt;plist-get&lt;/code&gt; 과 달리 이를 통해 누락 된 속성과 값이 &lt;code&gt;nil&lt;/code&gt; 인 속성을 구별 할 수 있습니다 . 값은 실제의 꼬리 &lt;var&gt;plist&lt;/var&gt; 그 &lt;code&gt;car&lt;/code&gt; 입니다 &lt;var&gt;property&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7a90e16286f3932a9285396931964137921b9664" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;table&lt;/var&gt; is a hash table object.</source>
          <target state="translated">&lt;var&gt;table&lt;/var&gt; 이 해시 테이블 객체 이면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3c249527629f267214e5f4beaf93b8d756af18d0" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if the face &lt;var&gt;face&lt;/var&gt; displays differently from the default face.</source>
          <target state="translated">&lt;var&gt;face&lt;/var&gt; 이 기본 얼굴과 다르게 표시 되면 &lt;code&gt;nil&lt;/code&gt; 이 아닌 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5629e5b680a27cdb23ea681c6f881e46eb7bb56e" translate="yes" xml:space="preserve">
          <source>This returns the &lt;var&gt;test&lt;/var&gt; value that was given when &lt;var&gt;table&lt;/var&gt; was created, to specify how to hash and compare keys. See &lt;code&gt;make-hash-table&lt;/code&gt; (see &lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;Creating Hash&lt;/a&gt;).</source>
          <target state="translated">키를 해시하고 비교하는 방법을 지정하기 위해 &lt;var&gt;table&lt;/var&gt; 이 생성 될 때 제공된 &lt;var&gt;test&lt;/var&gt; 값을 반환합니다 . 참조 &lt;code&gt;make-hash-table&lt;/code&gt; (참조 &lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;만들기 해시&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="948a541c5e80832dd928ff0eefae22ea67d67224" translate="yes" xml:space="preserve">
          <source>This returns the buffer where &lt;var&gt;ewoc&lt;/var&gt; maintains its text.</source>
          <target state="translated">이것은 &lt;var&gt;ewoc&lt;/var&gt; 가 텍스트를 유지 하는 버퍼를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b092859812c67464305558a0b0aabc8e7e01ea4f" translate="yes" xml:space="preserve">
          <source>This returns the current nominal size of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;table&lt;/var&gt; 의 현재 공칭 크기를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c182f48a42a48a0a68382bf348910d68bdd3c053" translate="yes" xml:space="preserve">
          <source>This returns the day number within the year corresponding to &lt;var&gt;time-value&lt;/var&gt;, assuming the default time zone. The operating system limits the range of time and zone values.</source>
          <target state="translated">기본 시간대를 가정하고 &lt;var&gt;time-value&lt;/var&gt; 에 해당하는 연도 내의 일 수를 반환합니다 . 운영 체제는 시간 및 구역 값의 범위를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="463decc3d5accbbb9fdafa3bab2497b85927aff3" translate="yes" xml:space="preserve">
          <source>This returns the ending position of &lt;var&gt;event&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;event&lt;/var&gt; 의 끝 위치를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4fe847f75aeb7d71dc6eee13922e14782e4a5e09" translate="yes" xml:space="preserve">
          <source>This returns the list of active keymaps that would be used by the command loop in the current circumstances to look up a key sequence. Normally it ignores &lt;code&gt;overriding-local-map&lt;/code&gt; and &lt;code&gt;overriding-terminal-local-map&lt;/code&gt;, but if &lt;var&gt;olp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then it pays attention to them. &lt;var&gt;position&lt;/var&gt; can optionally be either an event position as returned by &lt;code&gt;event-start&lt;/code&gt; or a buffer position, and may change the keymaps as described for &lt;code&gt;key-binding&lt;/code&gt;.</source>
          <target state="translated">현재 상황에서 키 시퀀스를 조회하기 위해 명령 루프가 사용할 활성 키맵 목록을 반환합니다. 일반적으로 &lt;code&gt;overriding-local-map&lt;/code&gt; 과 &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; 을 무시 하지만 &lt;var&gt;olp&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아니면주의를 기울입니다. &lt;var&gt;position&lt;/var&gt; 은 선택적으로 &lt;code&gt;event-start&lt;/code&gt; 또는 버퍼 위치에 의해 반환 된 이벤트 위치가 될 수 있으며 &lt;code&gt;key-binding&lt;/code&gt; 에 설명 된대로 키맵을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a331e4a8856270a8b8d7626f94c5661a9ce28807" translate="yes" xml:space="preserve">
          <source>This returns the maximum capacity of the &lt;var&gt;ring&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;ring&lt;/var&gt; 의 최대 용량을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c4fc9fd0b9ec71660e9f92070e585e203e7e5de2" translate="yes" xml:space="preserve">
          <source>This returns the node in &lt;var&gt;ewoc&lt;/var&gt; found at zero-based index &lt;var&gt;n&lt;/var&gt;. A negative &lt;var&gt;n&lt;/var&gt; means count from the end. &lt;code&gt;ewoc-nth&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;n&lt;/var&gt; is out of range.</source>
          <target state="translated">0부터 시작하는 인덱스 &lt;var&gt;n&lt;/var&gt; 에서 찾은 &lt;var&gt;ewoc&lt;/var&gt; 의 노드를 반환합니다 . 음수 &lt;var&gt;n&lt;/var&gt; 은 끝부터 카운트를 의미합니다. &lt;code&gt;ewoc-nth&lt;/code&gt; 는 &lt;var&gt;n&lt;/var&gt; 이 범위를 벗어나 면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7e7a3da817b8e3a470765907355d6d350d1839da" translate="yes" xml:space="preserve">
          <source>This returns the number of objects that &lt;var&gt;ring&lt;/var&gt; currently contains. The value will never exceed that returned by &lt;code&gt;ring-size&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;var&gt;ring&lt;/var&gt; 포함 된 개체의 수를 반환합니다 . 값은 &lt;code&gt;ring-size&lt;/code&gt; 로 반환 된 값을 초과하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dd47362369e96dc2315d2331cfd8a022e182eb49" translate="yes" xml:space="preserve">
          <source>This returns the object in &lt;var&gt;ring&lt;/var&gt; found at index &lt;var&gt;index&lt;/var&gt;. &lt;var&gt;index&lt;/var&gt; may be negative or greater than the ring length. If &lt;var&gt;ring&lt;/var&gt; is empty, &lt;code&gt;ring-ref&lt;/code&gt; signals an error.</source>
          <target state="translated">인덱스 &lt;var&gt;index&lt;/var&gt; 에서 찾은 &lt;var&gt;ring&lt;/var&gt; 의 객체를 반환합니다 . &lt;var&gt;index&lt;/var&gt; 는 음수이거나 링 길이보다 클 수 있습니다. 경우 &lt;var&gt;ring&lt;/var&gt; 비어 &lt;code&gt;ring-ref&lt;/code&gt; 오류 신호를 보낸다.</target>
        </trans-unit>
        <trans-unit id="1cadd800bec673dff8f3880281742d609319ad1a" translate="yes" xml:space="preserve">
          <source>This returns the object in the function cell of &lt;var&gt;symbol&lt;/var&gt;. It does not check that the returned object is a legitimate function.</source>
          <target state="translated">이것은 &lt;var&gt;symbol&lt;/var&gt; 의 함수 셀에있는 객체를 반환합니다 . 반환 된 개체가 합법적 인 기능인지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b623b4fc462df87e734be3cd1b41ffc061a3ffb2" translate="yes" xml:space="preserve">
          <source>This returns the parent keymap of &lt;var&gt;keymap&lt;/var&gt;. If &lt;var&gt;keymap&lt;/var&gt; has no parent, &lt;code&gt;keymap-parent&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이의 부모 키맵 반환 &lt;var&gt;keymap&lt;/var&gt; . 경우 &lt;var&gt;keymap&lt;/var&gt; 부모가없는, &lt;code&gt;keymap-parent&lt;/code&gt; 반환 &lt;code&gt;nil&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="f63e4bcd0b52bd6e4af0e6223f745f38357e3c5d" translate="yes" xml:space="preserve">
          <source>This returns the query flag of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;process&lt;/var&gt; 의 쿼리 플래그를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c534efd2a0b3fc9e8d278f2977804f08e175cb60" translate="yes" xml:space="preserve">
          <source>This returns the rehash size of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;table&lt;/var&gt; 의 rehash 크기를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4bfb3a5eb062d29cdc825f788c9a91b5fe96bc03" translate="yes" xml:space="preserve">
          <source>This returns the rehash threshold of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;table&lt;/var&gt; 의 재해시 임계 값을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="53c9242b0ac9332f65b31c12052ac39dd627993e" translate="yes" xml:space="preserve">
          <source>This returns the square root of &lt;var&gt;arg&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is finite and less than zero, &lt;code&gt;sqrt&lt;/code&gt; returns a NaN.</source>
          <target state="translated">이것은 &lt;var&gt;arg&lt;/var&gt; 의 제곱근을 반환합니다 . 경우 &lt;var&gt;arg&lt;/var&gt; 유한하고 제로보다 &lt;code&gt;sqrt&lt;/code&gt; 반환 NaN의.</target>
        </trans-unit>
        <trans-unit id="74fca6aa74c9b0151073019f84401084c8b675fc" translate="yes" xml:space="preserve">
          <source>This returns the standard case table.</source>
          <target state="translated">이것은 표준 케이스 테이블을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6fef992f2f7f68cd981b77499b5f90098175b79e" translate="yes" xml:space="preserve">
          <source>This returns the start position of &lt;var&gt;node&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;node&lt;/var&gt; 의 시작 위치를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e39dbdd0ceb66840ace5fbcfbb2be6ad8b917f75" translate="yes" xml:space="preserve">
          <source>This returns the starting position of &lt;var&gt;event&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;event&lt;/var&gt; 의 시작 위치를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9f04e322ee80c2dcb64c9abf54e9c39edb40b5a8" translate="yes" xml:space="preserve">
          <source>This returns the sum of two time values, using the same conversion rules as &lt;code&gt;time-subtract&lt;/code&gt;. One argument should represent a time difference rather than a point in time, as a time value that is often just a single number of elapsed seconds. Here is how to add a number of seconds to a time value:</source>
          <target state="translated">이는 &lt;code&gt;time-subtract&lt;/code&gt; 와 동일한 변환 규칙을 사용하여 두 시간 값의 합계를 반환합니다 . 하나의 인수는 특정 시점이 아니라 단일 경과 초 수인 시간 값으로 시간 차이를 나타내야합니다. 시간 값에 초 수를 추가하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="352062e69b75de0569ad21f6c3d66388bc6a6013" translate="yes" xml:space="preserve">
          <source>This returns the time difference &lt;var&gt;t1&lt;/var&gt; - &lt;var&gt;t2&lt;/var&gt; between two time values, as a Lisp time value. The result is exact and its clock resolution is no worse than the worse of its two arguments&amp;rsquo; resolutions. The result is floating-point only if it is infinite or a NaN. If you need the difference in units of elapsed seconds, you can convert it with &lt;code&gt;time-convert&lt;/code&gt; or &lt;code&gt;float-time&lt;/code&gt;. See &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;.</source>
          <target state="translated">두 시간 값 간의 시간 차이 &lt;var&gt;t1&lt;/var&gt; - &lt;var&gt;t2&lt;/var&gt; 를 Lisp 시간 값으로 반환합니다 . 결과는 정확하고 클럭 해상도는 두 인수의 해상도 중 더 나쁘지 않습니다. 결과는 무한 또는 NaN 인 경우에만 부동 소수점입니다. 경과 된 초 단위의 차이가 필요한 경우 &lt;code&gt;time-convert&lt;/code&gt; 또는 &lt;code&gt;float-time&lt;/code&gt; 으로 변환 할 수 있습니다 . &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;시간 변환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0075db4b2bc852afc323a3227f9d65b375602309" translate="yes" xml:space="preserve">
          <source>This returns the value of the &lt;code&gt;justification&lt;/code&gt; text property at point, or the variable &lt;code&gt;default-justification&lt;/code&gt; if there is no such text property. However, it returns &lt;code&gt;nil&lt;/code&gt; rather than &lt;code&gt;none&lt;/code&gt; to mean &amp;ldquo;don&amp;rsquo;t justify&amp;rdquo;.</source>
          <target state="translated">이것은 점에서 자리 &lt;code&gt;justification&lt;/code&gt; 텍스트 속성 의 값을 반환 하거나 그러한 텍스트 속성이없는 경우 변수 &lt;code&gt;default-justification&lt;/code&gt; 을 반환합니다. 그러나, 반환 &lt;code&gt;nil&lt;/code&gt; 보다는 &lt;code&gt;none&lt;/code&gt; &quot;을 정당화하지 않는다&quot;를 의미 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab6a14cacac282454ab76339669d0b9cccbe739e" translate="yes" xml:space="preserve">
          <source>This returns the value of the &lt;var&gt;property&lt;/var&gt; property stored in the property list &lt;var&gt;plist&lt;/var&gt;. It accepts a malformed &lt;var&gt;plist&lt;/var&gt; argument. If &lt;var&gt;property&lt;/var&gt; is not found in the &lt;var&gt;plist&lt;/var&gt;, it returns &lt;code&gt;nil&lt;/code&gt;. For example,</source>
          <target state="translated">속성 목록 &lt;var&gt;plist&lt;/var&gt; 에 저장된 &lt;var&gt;property&lt;/var&gt; 속성 의 값을 반환합니다 . 잘못된 &lt;var&gt;plist&lt;/var&gt; 인수를 허용합니다 . 경우 &lt;var&gt;property&lt;/var&gt; 에없는 &lt;var&gt;plist&lt;/var&gt; , 그것은 반환 &lt;code&gt;nil&lt;/code&gt; . 예를 들면</target>
        </trans-unit>
        <trans-unit id="1ba933afc263d6d34f28a95c674057b51925c84a" translate="yes" xml:space="preserve">
          <source>This returns the value specified in &lt;var&gt;char-table&lt;/var&gt; for a range of characters &lt;var&gt;range&lt;/var&gt;. Here are the possibilities for &lt;var&gt;range&lt;/var&gt;:</source>
          <target state="translated">문자 &lt;var&gt;range&lt;/var&gt; 범위에 대해 &lt;var&gt;char-table&lt;/var&gt; 에 지정된 값을 반환합니다 . &lt;var&gt;range&lt;/var&gt; 대한 가능성은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ea9e5a8aa8bc095203d3523c6532bc04fa6c436c" translate="yes" xml:space="preserve">
          <source>This rule also applies to carriage return (character code 13), if that character appears in the buffer. But carriage returns usually do not appear in buffer text; they are eliminated as part of end-of-line conversion (see &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;Coding System Basics&lt;/a&gt;).</source>
          <target state="translated">이 규칙은 해당 문자가 버퍼에 나타나는 경우 캐리지 리턴 (문자 코드 13)에도 적용됩니다. 그러나 캐리지 리턴은 일반적으로 버퍼 텍스트에 나타나지 않습니다. 라인 끝 변환의 일부로 제거됩니다 ( &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;코딩 시스템 기본 사항&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="87d7d27eb0f1ccf7ed91e2ad7708b90110efb461" translate="yes" xml:space="preserve">
          <source>This runs &lt;code&gt;window-scroll-functions&lt;/code&gt;, followed by &lt;code&gt;window-configuration-change-hook&lt;/code&gt;. See &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;window-scroll-functions&lt;/code&gt; 다음에 &lt;code&gt;window-configuration-change-hook&lt;/code&gt; 을 실행 합니다. &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;창 후크를&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="9de5c37aceb2f9334cb7face8e382ba6e1e682c1" translate="yes" xml:space="preserve">
          <source>This says that &lt;code&gt;shell-mode&lt;/code&gt; is defined in</source>
          <target state="translated">이것은 &lt;code&gt;shell-mode&lt;/code&gt; 가</target>
        </trans-unit>
        <trans-unit id="e6088724bb93f951c4eb6c7ed08477b700f19a1d" translate="yes" xml:space="preserve">
          <source>This says to load the image from file &lt;var&gt;file&lt;/var&gt;. If &lt;var&gt;file&lt;/var&gt; is not an absolute file name, it is expanded relative to the</source>
          <target state="translated">이것은 파일 &lt;var&gt;file&lt;/var&gt; 에서 이미지를로드하는 것을 말합니다 . &lt;var&gt;file&lt;/var&gt; 이 절대 파일 이름이 아닌 경우 파일 은</target>
        </trans-unit>
        <trans-unit id="136b0d51fa7856677cf7da4c7bdb2a0a2ce50013" translate="yes" xml:space="preserve">
          <source>This section describes additional variables that a major mode can set by means of &lt;var&gt;other-vars&lt;/var&gt; in &lt;code&gt;font-lock-defaults&lt;/code&gt; (see &lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;Font Lock Basics&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 기본 모드가 &lt;code&gt;font-lock-defaults&lt;/code&gt; 의 &lt;var&gt;other-vars&lt;/var&gt; 를 통해 설정할 수있는 추가 변수에 대해 설명합니다 ( &lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;Font Lock Basics&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c97ca81df1d4e4851cc25d5aec68a427c578eb8d" translate="yes" xml:space="preserve">
          <source>This section describes all the simple customization types. For several of these customization types, the customization widget provides inline completion with</source>
          <target state="translated">이 섹션에서는 모든 간단한 사용자 지정 유형에 대해 설명합니다. 이러한 사용자 정의 유형 중 일부에 대해 사용자 정의 위젯은 다음과 같은 인라인 완성 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5757862d6dd39ad2e4194259236662bc74bd9d6e" translate="yes" xml:space="preserve">
          <source>This section describes alternative search functions which perform the full backtracking specified by the POSIX standard for regular expression matching. They continue backtracking until they have tried all possibilities and found all matches, so they can report the longest match, as required by POSIX. This is much slower, so use these functions only when you really need the longest match.</source>
          <target state="translated">이 섹션에서는 정규식 일치를 위해 POSIX 표준에 지정된 전체 역 추적을 수행하는 대체 검색 기능에 대해 설명합니다. 그들은 모든 가능성을 시도하고 모든 일치를 찾을 때까지 계속 역 추적하므로 POSIX에서 요구하는대로 가장 긴 일치를보고 할 수 있습니다. 이것은 훨씬 느리므로 가장 긴 일치가 필요한 경우에만 이러한 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="93dc64212efd2722e65d07586262634c4e25e3ac" translate="yes" xml:space="preserve">
          <source>This section describes commands that indent all the lines in the region. They return unpredictable values.</source>
          <target state="translated">이 섹션에서는 영역의 모든 줄을 들여 쓰는 명령에 대해 설명합니다. 예측할 수없는 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2836810fdb20390b10f1c0ccfec312382f01b6f4" translate="yes" xml:space="preserve">
          <source>This section describes constructs that are often used together with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;cond&lt;/code&gt; to express complicated conditions. The constructs &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; can also be used individually as kinds of multiple conditional constructs.</source>
          <target state="translated">이 섹션에서는 복잡한 조건을 표현하기 위해 &lt;code&gt;if&lt;/code&gt; 및 &lt;code&gt;cond&lt;/code&gt; 와 함께 자주 사용되는 구성에 대해 설명 합니다. 작 제물 &lt;code&gt;and&lt;/code&gt; 과 &lt;code&gt;or&lt;/code&gt; 여러 가지 조건의 구조로서 개별적으로 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="2939de5f07655fb6039ef8dda64c5825f7b065a1" translate="yes" xml:space="preserve">
          <source>This section describes convenient functions for accessing the data in a mouse button or motion event. Keyboard event data can be accessed using the same functions, but data elements that aren&amp;rsquo;t applicable to keyboard events are zero or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 섹션에서는 마우스 버튼 또는 모션 이벤트에서 데이터에 액세스하기위한 편리한 기능에 대해 설명합니다. 동일한 함수를 사용하여 키보드 이벤트 데이터에 액세스 할 수 있지만 키보드 이벤트에 적용 할 수없는 데이터 요소는 0 또는 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="607a7b0b48aab5be8e32f53128987e928331b4c0" translate="yes" xml:space="preserve">
          <source>This section describes facilities for asking the user more complex questions or several similar questions.</source>
          <target state="translated">이 섹션에서는 사용자에게 더 복잡한 질문이나 몇 가지 유사한 질문을하는 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="79ddc32d7e3c06a192c262ce01223ee6d9001053" translate="yes" xml:space="preserve">
          <source>This section describes functions and variables for recording or manipulating terminal input. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for related functions.</source>
          <target state="translated">이 섹션에서는 터미널 입력을 기록하거나 조작하기위한 기능과 변수를 설명합니다. 관련 기능 은 &lt;a href=&quot;display#Display&quot;&gt;디스플레이를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d5a3c334236891680f1d194252d09fa33b318e0" translate="yes" xml:space="preserve">
          <source>This section describes functions and variables used internally by the debugger.</source>
          <target state="translated">이 섹션에서는 디버거에서 내부적으로 사용하는 함수와 변수를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="cef4dede957fdb3aabc4a03f1c4e3b6e01c9fb30" translate="yes" xml:space="preserve">
          <source>This section describes functions for converting between characters, strings and integers. &lt;code&gt;format&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;) and &lt;code&gt;prin1-to-string&lt;/code&gt; (see &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;) can also convert Lisp objects into strings. &lt;code&gt;read-from-string&lt;/code&gt; (see &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;) can convert a string representation of a Lisp object into an object. The functions &lt;code&gt;string-to-multibyte&lt;/code&gt; and &lt;code&gt;string-to-unibyte&lt;/code&gt; convert the text representation of a string (see &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 문자, 문자열 및 정수 간의 변환을위한 함수에 대해 설명합니다. &lt;code&gt;format&lt;/code&gt; ( &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;문자열 형식화&lt;/a&gt; 참조 ) 및 &lt;code&gt;prin1-to-string&lt;/code&gt; ( &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;출력 함수&lt;/a&gt; 참조 )도 Lisp 객체를 문자열로 변환 할 수 있습니다. &lt;code&gt;read-from-string&lt;/code&gt; ( &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;입력 함수&lt;/a&gt; 참조 )는 Lisp 객체의 문자열 표현을 객체로 변환 할 수 있습니다. &lt;code&gt;string-to-multibyte&lt;/code&gt; 및 &lt;code&gt;string-to-unibyte&lt;/code&gt; 함수는 문자열 의 텍스트 표현을 &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;변환&lt;/a&gt; 합니다 ( 표현 변환 참조 ).</target>
        </trans-unit>
        <trans-unit id="35cbe2c2fb4ed671dbe4014681b6b2d86a7db664" translate="yes" xml:space="preserve">
          <source>This section describes functions for creating a new window by &lt;em&gt;splitting&lt;/em&gt; an existing one. Note that some windows are special in the sense that these functions may fail to split them as described here. Examples of such windows are side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;) and atomic windows (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 기존 창을 &lt;em&gt;분할&lt;/em&gt; 하여 새 창을 만드는 기능에 대해 설명합니다 . 일부 창은 여기에 설명 된대로 이러한 기능이 분할하지 못할 수 있다는 점에서 특별합니다. 윈도우의 예는 측면 창 (참조있는 &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;사이드 윈도우&lt;/a&gt; ) 및 원자 창 (참조 &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;원자 윈도우&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="47818cf56fc4f7e8903a6ce34c77610b7b955042" translate="yes" xml:space="preserve">
          <source>This section describes functions for directly accessing and modifying the attributes of a named face.</source>
          <target state="translated">이 섹션에서는 명명 된 얼굴의 속성에 직접 액세스하고 수정하는 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="141033a3273f41ed06dd6b3e27f17379eac30a59" translate="yes" xml:space="preserve">
          <source>This section describes functions for moving across characters that have certain syntax classes.</source>
          <target state="translated">이 섹션에서는 특정 구문 클래스가있는 문자간에 이동하는 함수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="06f7a77fcec2e0268be02cf39a4935cae6c8e26e" translate="yes" xml:space="preserve">
          <source>This section describes functions for parsing and scanning balanced expressions. We will refer to such expressions as &lt;em&gt;sexps&lt;/em&gt;, following the terminology of Lisp, even though these functions can act on languages other than Lisp. Basically, a sexp is either a balanced parenthetical grouping, a string, or a symbol (i.e., a sequence of characters whose syntax is either word constituent or symbol constituent). However, characters in the expression prefix syntax class (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;) are treated as part of the sexp if they appear next to it.</source>
          <target state="translated">이 섹션에서는 균형 잡힌 표현식을 구문 분석하고 스캔하는 함수에 대해 설명합니다. 이러한 함수는 Lisp 이외의 언어에서 작동 할 수 있지만 Lisp 용어에 따라 &lt;em&gt;sexps&lt;/em&gt; 와 같은 표현을 참조합니다 . 기본적으로 sexp는 균형 잡힌 괄호 그룹, 문자열 또는 기호 (즉, 구문이 단어 구성 요소 또는 기호 구성 요소 인 문자 시퀀스)입니다. 그러나 표현식 접두사 구문 클래스 ( &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt; 참조)의 문자는 옆에 표시되는 경우 sexp의 일부로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="57d33f2538dacfd6efddb8fce2fddea46960a01f" translate="yes" xml:space="preserve">
          <source>This section describes functions for reading Lisp objects with the minibuffer.</source>
          <target state="translated">이 섹션에서는 미니 버퍼로 Lisp 객체를 읽는 함수를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b42b78d5eec9408bd106c897f6c7b50efeb38b04" translate="yes" xml:space="preserve">
          <source>This section describes functions for resizing a window without changing the size of its frame. Because live windows do not overlap, these functions are meaningful only on frames that contain two or more windows: resizing a window also changes the size of a neighboring window. If there is just one window on a frame, its size cannot be changed except by resizing the frame (see &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Frame Size&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 프레임 크기를 변경하지 않고 창의 크기를 조정하는 기능에 대해 설명합니다. 라이브 창이 겹치지 않기 때문에 이러한 기능은 두 개 이상의 창이 포함 된 프레임에서만 의미가 있습니다. 창 크기를 조정하면 인접한 창의 크기도 변경됩니다. 프레임에 창이 하나만있는 경우 프레임 크기를 조정하는 것 외에는 크기를 변경할 수 없습니다 ( &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;프레임 크기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c7eb332ef0c83ed8145dea770111e02c1fc7db05" translate="yes" xml:space="preserve">
          <source>This section describes functions that accept any kind of sequence.</source>
          <target state="translated">이 섹션에서는 모든 종류의 시퀀스를 허용하는 함수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f9af78a410b908ce8ce944214cddbcacca84c3b5" translate="yes" xml:space="preserve">
          <source>This section describes functions that allow a Lisp program to convert any portion of the text in the buffer into a string.</source>
          <target state="translated">이 섹션에서는 Lisp 프로그램이 버퍼에있는 텍스트의 일부를 문자열로 변환 할 수있는 함수를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="985654ce26f2910ad902a31cfac301e6b2b4cda1" translate="yes" xml:space="preserve">
          <source>This section describes functions that report positions of and within a window. Most of these functions report positions relative to an origin at the native position of the window&amp;rsquo;s frame (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;). Some functions report positions relative to the origin of the display of the window&amp;rsquo;s frame. In any case, the origin has the coordinates (0, 0) and X and Y coordinates increase rightward and downward respectively.</source>
          <target state="translated">이 섹션에서는 창의 위치 및 창의 위치를보고하는 함수에 대해 설명합니다. 이러한 함수의 대부분은 창 프레임의 기본 위치에있는 원점을 기준으로 위치를보고합니다 ( &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;프레임 형상&lt;/a&gt; 참조 ). 일부 함수는 창 프레임 표시의 원점을 기준으로 위치를보고합니다. 어쨌든 원점에는 좌표 (0, 0)가 있고 X 및 Y 좌표는 각각 오른쪽과 아래쪽으로 증가합니다.</target>
        </trans-unit>
        <trans-unit id="43de4fdfa66a4fc976e043188f0db1074fb72a6b" translate="yes" xml:space="preserve">
          <source>This section describes functions to read and change the parameter values of a terminal. They all accept as their argument either a terminal or a frame; the latter means use that frame&amp;rsquo;s terminal. An argument of &lt;code&gt;nil&lt;/code&gt; means the selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">이 섹션에서는 터미널의 매개 변수 값을 읽고 변경하는 기능에 대해 설명합니다. 그들은 모두 터미널이나 프레임을 인수로 받아들입니다. 후자는 해당 프레임의 터미널을 사용함을 의미합니다. &lt;code&gt;nil&lt;/code&gt; 인수 는 선택한 프레임의 터미널을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d830681066b97fc59528b1103233882bc7f7f540" translate="yes" xml:space="preserve">
          <source>This section describes functions used to ask the user a yes-or-no question. The function &lt;code&gt;y-or-n-p&lt;/code&gt; can be answered with a single character; it is useful for questions where an inadvertent wrong answer will not have serious consequences. &lt;code&gt;yes-or-no-p&lt;/code&gt; is suitable for more momentous questions, since it requires three or four characters to answer.</source>
          <target state="translated">이 섹션에서는 사용자에게 예 / 아니요 질문을하는 데 사용되는 기능에 대해 설명합니다. &lt;code&gt;y-or-n-p&lt;/code&gt; 함수 는 단일 문자로 답할 수 있습니다. 부주의 한 오답이 심각한 결과를 초래하지 않는 질문에 유용합니다. &lt;code&gt;yes-or-no-p&lt;/code&gt; 는 대답하는 데 3 ~ 4자가 필요하므로보다 중요한 질문에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="eb39a938eae6ae2876ea62342933b25512356802" translate="yes" xml:space="preserve">
          <source>This section describes functions used to scan all the current keymaps for the sake of printing help information.</source>
          <target state="translated">이 섹션에서는 도움말 정보를 인쇄하기 위해 모든 현재 키맵을 스캔하는 데 사용되는 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="9afe702fe12b669b1b195f12f0598f5be106c8e5" translate="yes" xml:space="preserve">
          <source>This section describes high-level functions for switching to a specified buffer in some window. In general, &amp;ldquo;switching to a buffer&amp;rdquo; means to (1) show the buffer in some window, (2) make that window the selected window (and its frame the selected frame), and (3) make the buffer the current buffer.</source>
          <target state="translated">이 섹션에서는 일부 창에서 지정된 버퍼로 전환하기위한 고급 기능에 대해 설명합니다. 일반적으로 &quot;버퍼로 전환&quot;은 (1) 일부 창에 버퍼를 표시하고, (2) 해당 창을 선택한 창 (및 해당 프레임을 선택한 프레임)으로 만들고, (3) 버퍼를 현재 버퍼로 만드는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6ec332a9dc15d948615fa251bfa0a29716242a29" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for deleting text, commands intended primarily for the user but useful also in Lisp programs.</source>
          <target state="translated">이 섹션에서는 주로 사용자를위한 명령이지만 Lisp 프로그램에서도 유용한 텍스트 삭제를위한 상위 수준 명령에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8ac4fa32fe571f6948a8178f90f4bb7fc08258e2" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for inserting text, commands intended primarily for the user but useful also in Lisp programs.</source>
          <target state="translated">이 섹션에서는 주로 사용자를위한 명령이지만 Lisp 프로그램에서도 유용한 텍스트 삽입을위한 상위 수준 명령에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="4e4c785134d9f7da88d1b434b45ae65e4efca867" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for yanking, which are intended primarily for the user but useful also in Lisp programs. Both &lt;code&gt;yank&lt;/code&gt; and &lt;code&gt;yank-pop&lt;/code&gt; honor the &lt;code&gt;yank-excluded-properties&lt;/code&gt; variable and &lt;code&gt;yank-handler&lt;/code&gt; text property (see &lt;a href=&quot;yanking#Yanking&quot;&gt;Yanking&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 주로 사용자를위한 것이지만 Lisp 프로그램에서도 유용한 yanking에 대한 상위 수준 명령에 대해 설명합니다. 두 &lt;code&gt;yank&lt;/code&gt; 및 &lt;code&gt;yank-pop&lt;/code&gt; 명예 &lt;code&gt;yank-excluded-properties&lt;/code&gt; 변수와 &lt;code&gt;yank-handler&lt;/code&gt; text 속성 (참조 &lt;a href=&quot;yanking#Yanking&quot;&gt;확 잡아 당기는을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0244187d4fb46d383ef8949507c568b3fd5eea49" translate="yes" xml:space="preserve">
          <source>This section describes how Lisp programs can take action after a window has been scrolled or other window modifications occurred. We first consider the case where a window shows a different part of its buffer.</source>
          <target state="translated">이 섹션에서는 창을 스크롤하거나 다른 창을 수정 한 후 Lisp 프로그램이 작업을 수행하는 방법을 설명합니다. 먼저 창에 버퍼의 다른 부분이 표시되는 경우를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="e042e288acb20b51a94bf664d993271c1f22c403" translate="yes" xml:space="preserve">
          <source>This section describes how characters are actually displayed by Emacs. Typically, a character is displayed as a &lt;em&gt;glyph&lt;/em&gt; (a graphical symbol which occupies one character position on the screen), whose appearance corresponds to the character itself. For example, the character &amp;lsquo;</source>
          <target state="translated">이 섹션에서는 Emacs가 실제로 문자를 표시하는 방법을 설명합니다. 일반적으로 문자는 &lt;em&gt;문자 모양&lt;/em&gt; (화면에서 한 문자 위치를 차지하는 그래픽 기호)으로 표시되며 그 모양은 문자 자체에 해당합니다. 예를 들어 '</target>
        </trans-unit>
        <trans-unit id="f97182452a5c5bafb05df99573bec827f80e1eb1" translate="yes" xml:space="preserve">
          <source>This section describes how to change the position of an existing marker. When you do this, be sure you know whether the marker is used outside of your program, and, if so, what effects will result from moving it&amp;mdash;otherwise, confusing things may happen in other parts of Emacs.</source>
          <target state="translated">이 섹션에서는 기존 마커의 위치를 ​​변경하는 방법을 설명합니다. 이 작업을 수행 할 때 마커가 프로그램 외부에서 사용되는지 여부와 마커를 이동하면 어떤 효과가 발생하는지 확인하십시오. 그렇지 않으면 Emacs의 다른 부분에서 혼란스러운 일이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="724d41af9e73d940223262ab6060a0e9edeed8ab" translate="yes" xml:space="preserve">
          <source>This section describes how to control the contents of the mode line and header line. We include it in this chapter because much of the information displayed in the mode line relates to the enabled major and minor modes.</source>
          <target state="translated">이 섹션에서는 모드 행과 헤더 행의 내용을 제어하는 ​​방법에 대해 설명합니다. 모드 행에 표시되는 많은 정보가 활성화 된 주 및 부 모드와 관련되어 있으므로이 장에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fa59843e7588f790eb908bfe744bb4959c5b641f" translate="yes" xml:space="preserve">
          <source>This section describes how to create and manipulate abbrev tables.</source>
          <target state="translated">이 섹션에서는 약어 테이블을 만들고 조작하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0deb6b47df17ceb642f9f9ef7e0cee0ba90849e4" translate="yes" xml:space="preserve">
          <source>This section describes how to define new forms that &lt;code&gt;setf&lt;/code&gt; can operate on.</source>
          <target state="translated">이 섹션에서는 &lt;code&gt;setf&lt;/code&gt; 가 작동 할 수있는 새 양식을 정의하는 방법에 대해 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="5130c4e9532836c110b2ee9852e4b59bdeac3db0" translate="yes" xml:space="preserve">
          <source>This section describes how to distinguish various kinds of files, such as directories, symbolic links, and ordinary files.</source>
          <target state="translated">이 섹션에서는 디렉토리, 심볼릭 링크 및 일반 파일과 같은 다양한 종류의 파일을 구별하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c8d97a2246f8dcd1a3f21c002a35a9f6eab51d97" translate="yes" xml:space="preserve">
          <source>This section describes how to enable and disable undo information for a given buffer. It also explains how the undo list is truncated automatically so it doesn&amp;rsquo;t get too big.</source>
          <target state="translated">이 섹션에서는 주어진 버퍼에 대한 실행 취소 정보를 활성화 및 비활성화하는 방법을 설명합니다. 또한 실행 취소 목록이 자동으로 잘려 너무 커지지 않도록하는 방법도 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3a3b0a73264d1667956883717ec0d0e370cc4520" translate="yes" xml:space="preserve">
          <source>This section describes how to make Emacs ring the bell (or blink the screen) to attract the user&amp;rsquo;s attention. Be conservative about how often you do this; frequent bells can become irritating. Also be careful not to use just beeping when signaling an error is more appropriate (see &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 사용자의주의를 끌기 위해 Emacs에서 벨을 울리거나 화면을 깜박이게하는 방법을 설명합니다. 이 작업을 얼마나 자주 수행하는지 보수적입니다. 잦은 종소리는 짜증이 날 수 있습니다. 또한 오류 신호가 더 적절할 때 경고음 만 사용하지 않도록주의하십시오 ( &lt;a href=&quot;errors#Errors&quot;&gt;오류&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d2c3552281b567522a1e00f11b308775f58e423f" translate="yes" xml:space="preserve">
          <source>This section describes how to pack and unpack arrays of bytes, usually for binary network protocols. These functions convert byte arrays to alists, and vice versa. The byte array can be represented as a unibyte string or as a vector of integers, while the alist associates symbols either with fixed-size objects or with recursive sub-alists. To use the functions referred to in this section, load the &lt;code&gt;bindat&lt;/code&gt; library.</source>
          <target state="translated">이 섹션에서는 일반적으로 이진 네트워크 프로토콜에 대한 바이트 배열을 압축 및 압축 해제하는 방법을 설명합니다. 이 함수는 바이트 배열을 목록으로 변환하거나 그 반대로 변환합니다. 바이트 배열은 유니 바이트 문자열 또는 정수 벡터로 표현 될 수 있으며, alist는 기호를 고정 크기 객체 또는 재귀 하위 존재와 연관시킵니다. 이 섹션에서 언급 된 함수를 사용하려면 &lt;code&gt;bindat&lt;/code&gt; 라이브러리를 로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfe27e074a15789c4e33522757c8995e465b0cef" translate="yes" xml:space="preserve">
          <source>This section describes how to peek ahead at events without using them up, how to check for pending input, and how to discard pending input. See also the function &lt;code&gt;read-passwd&lt;/code&gt; (see &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;Reading a Password&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 이벤트를 사용하지 않고 미리 보는 방법, 보류중인 입력을 확인하는 방법 및 보류중인 입력을 버리는 방법에 대해 설명합니다. &lt;code&gt;read-passwd&lt;/code&gt; 함수도 참조하십시오 ( &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;암호 읽기&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="150d31cc898a87275de4dfed3e78035a72b41855" translate="yes" xml:space="preserve">
          <source>This section describes how to write the &lt;code&gt;interactive&lt;/code&gt; form that makes a Lisp function an interactively-callable command, and how to examine a command&amp;rsquo;s &lt;code&gt;interactive&lt;/code&gt; form.</source>
          <target state="translated">이 섹션에서는 Lisp 함수를 대화 형 호출 가능 명령으로 만드는 &lt;code&gt;interactive&lt;/code&gt; 양식을 작성하는 방법과 명령의 &lt;code&gt;interactive&lt;/code&gt; 양식 을 검사하는 방법에 대해 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="1218dff17b77ab7b4b54536daebee4816069f53b" translate="yes" xml:space="preserve">
          <source>This section describes low-level functions for examining and setting the contents of windows. See &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;, for higher-level functions for displaying a specific buffer in a window.</source>
          <target state="translated">이 섹션에서는 창의 내용을 검사하고 설정하기위한 하위 수준 기능에 대해 설명합니다. 창에 특정 버퍼를 표시하기위한 상위 수준 함수는 &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;버퍼 전환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b24a3c10ef1ebe7b7d767138f5d1aba660799e7" translate="yes" xml:space="preserve">
          <source>This section describes low-level subroutines for completing a file name. For higher level functions, see &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;Reading File Names&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 파일 이름을 완성하기위한 하위 레벨 서브 루틴에 대해 설명합니다. 더 높은 수준의 함수는 &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;파일 이름 읽기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d66065bf9aca24a2d19e5005f325822b8c7f678" translate="yes" xml:space="preserve">
          <source>This section describes lower-level functions Emacs uses to find or create a window for displaying a specified buffer. The common workhorse of these functions is &lt;code&gt;display-buffer&lt;/code&gt; which eventually handles all incoming requests for buffer display (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 Emacs가 지정된 버퍼를 표시하기위한 창을 찾거나 생성하는 데 사용하는 하위 수준 함수를 설명합니다. 이러한 함수의 일반적인 작업은 &lt;code&gt;display-buffer&lt;/code&gt; , 결국 버퍼 디스플레이에 대한 모든 수신 요청을 처리합니다 ( &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;창 선택&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="cce6b6a6c3c83928852ccf09cb10c900d8680af9" translate="yes" xml:space="preserve">
          <source>This section describes simple point-motion functions that operate based on parsing expressions.</source>
          <target state="translated">이 섹션에서는 구문 분석 표현식을 기반으로 작동하는 간단한 포인트 모션 함수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="387317e8a0a757eb7b94002eefc169e50440251d" translate="yes" xml:space="preserve">
          <source>This section describes some commands meant for use in the minibuffer.</source>
          <target state="translated">이 섹션에서는 미니 버퍼에서 사용하기위한 몇 가지 명령을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="00e4b81b2956553bfa3ccde5e2d44cc3f7878d4e" translate="yes" xml:space="preserve">
          <source>This section describes some convenient interactive interfaces for changing key bindings. They work by calling &lt;code&gt;define-key&lt;/code&gt;.</source>
          <target state="translated">이 섹션에서는 키 바인딩을 변경하기위한 몇 가지 편리한 대화 형 인터페이스에 대해 설명합니다. 그들은 &lt;code&gt;define-key&lt;/code&gt; 를 호출하여 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="47bad1cd798afdfe34fb8983742532e84dbfd4f4" translate="yes" xml:space="preserve">
          <source>This section describes some of the functions and variables for querying and using X resources, or their equivalent on your operating system. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="translated">이 섹션에서는 X 리소스를 쿼리하고 사용하기위한 일부 함수 및 변수 또는 운영 체제에서 이에 상응하는 기능에 대해 설명합니다. 참조 &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X 리소스&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="5d8fd4bcd05bcbcfa2f730ce803a95fc82bc30db" translate="yes" xml:space="preserve">
          <source>This section describes some of the functions and variables for querying and using X resources, or their equivalent on your operating system. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f463133552be76f9660f5367852dbd00a58249" translate="yes" xml:space="preserve">
          <source>This section describes some variables that hold regular expressions used for certain purposes in editing:</source>
          <target state="translated">이 섹션에서는 편집에서 특정 목적으로 사용되는 정규식을 보유하는 몇 가지 변수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f7d186c866c28a5e49c16d8f602fe882757c3d19" translate="yes" xml:space="preserve">
          <source>This section describes the Emacs module</source>
          <target state="translated">이 섹션에서는 Emacs 모듈에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3b61f2b467eac767a29db433892f50ef3a87d728" translate="yes" xml:space="preserve">
          <source>This section describes the Lisp functions and variables that pertain to reading.</source>
          <target state="translated">이 섹션에서는 읽기와 관련된 Lisp 함수 및 변수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="57153f0cacaafd0f58f6f0f7cc9ee983fd95bfdb" translate="yes" xml:space="preserve">
          <source>This section describes the Lisp functions for printing Lisp objects&amp;mdash;converting objects into their printed representation.</source>
          <target state="translated">이 섹션에서는 Lisp 개체를 인쇄하여 개체를 인쇄 된 표현으로 변환하는 Lisp 함수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c00e2ae6dff436e62ada923a09680d42ee5cf78d" translate="yes" xml:space="preserve">
          <source>This section describes the basic interface for reading from the minibuffer with completion.</source>
          <target state="translated">이 섹션에서는 완료시 미니 버퍼에서 읽기위한 기본 인터페이스를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0c6319d42a6efafee3901e82d96aa39cb80ae4ef" translate="yes" xml:space="preserve">
          <source>This section describes the functions for accessing and storing associations in a hash table. In general, any Lisp object can be used as a hash key, unless the comparison method imposes limits. Any Lisp object can also be used as the value.</source>
          <target state="translated">이 섹션에서는 해시 테이블에서 연결에 액세스하고 저장하는 기능에 대해 설명합니다. 일반적으로 비교 방법이 제한을 부과하지 않는 한 모든 Lisp 객체를 해시 키로 사용할 수 있습니다. 모든 Lisp 개체를 값으로 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ba6b7689a29c354d422d2b9766be0a645aba40c" translate="yes" xml:space="preserve">
          <source>This section describes the functions for accessing the components of a marker object.</source>
          <target state="translated">이 섹션에서는 마커 개체의 구성 요소에 액세스하는 함수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e7585c7802cf5f671245e39bc0a21968c91eb8ff" translate="yes" xml:space="preserve">
          <source>This section describes the functions for getting detailed information about a file, including the owner and group numbers, the number of names, the inode number, the size, and the times of access and modification.</source>
          <target state="translated">이 섹션에서는 소유자 및 그룹 번호, 이름 수, inode 번호, 크기, 액세스 및 수정 시간을 포함하여 파일에 대한 자세한 정보를 가져 오는 기능을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e0f5401eb4de70698ee08f0c9741c5ab0b1e12a0" translate="yes" xml:space="preserve">
          <source>This section describes the functions for retrieving various types of information about files (or directories or symbolic links), such as whether a file is readable or writable, and its size. These functions all take arguments which are file names. Except where noted, these arguments need to specify existing files, or an error is signaled.</source>
          <target state="translated">이 섹션에서는 파일 (또는 디렉토리 또는 심볼릭 링크)에 대한 다양한 유형의 정보 (예 : 파일의 읽기 또는 쓰기 가능 여부 및 크기)를 검색하는 기능에 대해 설명합니다. 이 함수는 모두 파일 이름 인 인수를받습니다. 명시된 경우를 제외하고 이러한 인수는 기존 파일을 지정해야하며 그렇지 않으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c10c26d607ccec55c2e5f7140ee66c4e54bc9885" translate="yes" xml:space="preserve">
          <source>This section describes the functions normally used to visit files. For historical reasons, these functions have names starting with &amp;lsquo;</source>
          <target state="translated">이 섹션에서는 일반적으로 파일을 방문하는 데 사용되는 기능에 대해 설명합니다. 역사적 이유로 이러한 함수의 이름은 '</target>
        </trans-unit>
        <trans-unit id="48c3a78a041a9e814520021863360bcfa75470b6" translate="yes" xml:space="preserve">
          <source>This section describes the functions to create, delete and move overlays, and to examine their contents. Overlay changes are not recorded in the buffer&amp;rsquo;s undo list, since the overlays are not part of the buffer&amp;rsquo;s contents.</source>
          <target state="translated">이 섹션에서는 오버레이를 생성, 삭제 및 이동하고 그 내용을 검사하는 기능에 대해 설명합니다. 오버레이는 버퍼 내용의 일부가 아니므로 오버레이 변경 사항은 버퍼의 실행 취소 목록에 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="812370f1b7b93b3d0db054508fcfed78371f1938" translate="yes" xml:space="preserve">
          <source>This section describes the higher-level convenience functions for reading certain sorts of names with completion.</source>
          <target state="translated">이 섹션에서는 완성 된 특정 종류의 이름을 읽기위한 고급 편의 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="75088aebc2a98d56641066d8d18014147f81e6ae" translate="yes" xml:space="preserve">
          <source>This section describes the keymaps, commands and user options used in the minibuffer to do completion.</source>
          <target state="translated">이 섹션에서는 완료를 위해 미니 버퍼에서 사용되는 키맵, 명령 및 사용자 옵션에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="37356dcd063b0ed07b1b0b5d582d678d288fb6fd" translate="yes" xml:space="preserve">
          <source>This section describes the mechanism by which Emacs shows a matching open parenthesis when the user inserts a close parenthesis.</source>
          <target state="translated">이 섹션에서는 사용자가 닫는 괄호를 삽입 할 때 Emacs가 일치하는 여는 괄호를 표시하는 메커니즘을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="40c660a7c361a8150a37bd3ff80cca078ea350f0" translate="yes" xml:space="preserve">
          <source>This section describes the primitive functions used to count and insert indentation. The functions in the following sections use these primitives. See &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;Size of Displayed Text&lt;/a&gt;, for related functions.</source>
          <target state="translated">이 섹션에서는 들여 쓰기를 계산하고 삽입하는 데 사용되는 기본 함수에 대해 설명합니다. 다음 섹션의 함수는 이러한 기본 요소를 사용합니다. 관련 기능 &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;은 표시되는 텍스트의 크기를 참조&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="de6d56383c6730b1286c874377ff16084425dd0d" translate="yes" xml:space="preserve">
          <source>This section describes the standard functions for displaying messages in the echo area.</source>
          <target state="translated">이 섹션에서는 에코 영역에 메시지를 표시하는 표준 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="285a66b80e772ca86f72f7b2368906f74deb731b" translate="yes" xml:space="preserve">
          <source>This section describes the two primitives for creating buffers. &lt;code&gt;get-buffer-create&lt;/code&gt; creates a buffer if it finds no existing buffer with the specified name; &lt;code&gt;generate-new-buffer&lt;/code&gt; always creates a new buffer and gives it a unique name.</source>
          <target state="translated">이 섹션에서는 버퍼 생성을위한 두 가지 기본 요소를 설명합니다. &lt;code&gt;get-buffer-create&lt;/code&gt; 는 지정된 이름을 가진 기존 버퍼를 찾지 못하면 버퍼를 만듭니다. &lt;code&gt;generate-new-buffer&lt;/code&gt; 는 항상 새 버퍼를 만들고 고유 한 이름을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="0789513534d147c3f5d4c93a12b51253baf58490" translate="yes" xml:space="preserve">
          <source>This section describes the window parameters that can be used to associate additional information with windows.</source>
          <target state="translated">이 섹션에서는 추가 정보를 창과 연관시키는 데 사용할 수있는 창 매개 변수에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8c31a7430b6a18b9a95ff129d9d711314130c97f" translate="yes" xml:space="preserve">
          <source>This section describes two commands that indent the current line based on the contents of previous lines.</source>
          <target state="translated">이 섹션에서는 이전 줄의 내용을 기반으로 현재 줄을 들여 쓰는 두 가지 명령에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="4c855fc414099b3af430915906080cdcfbec4adb" translate="yes" xml:space="preserve">
          <source>This section describes variables incorporated by the standard value of &lt;code&gt;mode-line-format&lt;/code&gt; into the text of the mode line. There is nothing inherently special about these variables; any other variables could have the same effects on the mode line if the value of &lt;code&gt;mode-line-format&lt;/code&gt; is changed to use them. However, various parts of Emacs set these variables on the understanding that they will control parts of the mode line; therefore, practically speaking, it is essential for the mode line to use them. Also see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Optional-Mode-Line.html#Optional-Mode-Line&quot;&gt;Optional Mode Line&lt;/a&gt; in</source>
          <target state="translated">이 섹션에서는 &lt;code&gt;mode-line-format&lt;/code&gt; 의 표준 값에 의해 모드 행의 텍스트에 통합 된 변수를 설명합니다 . 이러한 변수에 대해 본질적으로 특별한 것은 없습니다. &lt;code&gt;mode-line-format&lt;/code&gt; 의 값 을 사용하도록 변경 하면 다른 변수가 모드 라인에 동일한 영향을 미칠 수 있습니다. 그러나 Emacs의 여러 부분은 모드 라인의 부분을 제어 할 것이라는 이해를 바탕으로 이러한 변수를 설정합니다. 따라서 실제로는 모드 라인이이를 사용하는 것이 필수적입니다. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Optional-Mode-Line.html#Optional-Mode-Line&quot;&gt;옵션 모드 라인&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dfed6af377ad858fc251d321a9bc0d9cea74028a" translate="yes" xml:space="preserve">
          <source>This section describes variables incorporated by the standard value of &lt;code&gt;mode-line-format&lt;/code&gt; into the text of the mode line. There is nothing inherently special about these variables; any other variables could have the same effects on the mode line if the value of &lt;code&gt;mode-line-format&lt;/code&gt; is changed to use them. However, various parts of Emacs set these variables on the understanding that they will control parts of the mode line; therefore, practically speaking, it is essential for the mode line to use them. Also see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Optional-Mode-Line.html#Optional-Mode-Line&quot;&gt;Optional Mode Line&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ed9022a196b8909f39a1b1327583441fa14d2e" translate="yes" xml:space="preserve">
          <source>This section describes variables that specify the default coding system for certain files or when running certain subprograms, and the function that I/O operations use to access them.</source>
          <target state="translated">이 섹션에서는 특정 파일 또는 특정 하위 프로그램을 실행할 때 기본 코딩 시스템을 지정하는 변수와 I / O 작업에서 액세스하는 데 사용하는 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="46de66764c4cc059a12eb0309664143c34388a7a" translate="yes" xml:space="preserve">
          <source>This section describes what Emacs does when it is started, and how you can customize these actions.</source>
          <target state="translated">이 섹션에서는 Emacs가 시작될 때 수행하는 작업과 이러한 작업을 사용자 정의하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="903047fb180ad2c618ff526c82c10722d15a2387" translate="yes" xml:space="preserve">
          <source>This section explains how to determine the current time and time zone.</source>
          <target state="translated">이 섹션에서는 현재 시간과 시간대를 확인하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="5a3df5ede6e0c1467262e624d345d71f7c0d0ff4" translate="yes" xml:space="preserve">
          <source>This section explains how to search for a file in a list of directories (a &lt;em&gt;path&lt;/em&gt;), or for an executable file in the standard list of executable file directories.</source>
          <target state="translated">이 섹션에서는 디렉토리 목록 ( &lt;em&gt;경로&lt;/em&gt; ) 에서 파일을 검색 하거나 실행 파일 디렉토리의 표준 목록에서 실행 파일 을 검색하는 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="8e4623a46744ca037324529de282cc3752690ceb" translate="yes" xml:space="preserve">
          <source>This section explains how to use the match data to find out what was matched by the last search or match operation, if it succeeded.</source>
          <target state="translated">이 섹션에서는 일치 데이터를 사용하여 마지막 검색 또는 일치 작업이 성공한 경우 일치 항목을 찾는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2d4bfabf48ae37fe06981f061c05255124ae8a0f" translate="yes" xml:space="preserve">
          <source>This section explains the mechanism for user-specified tab stops and the mechanisms that use and set them. The name &amp;ldquo;tab stops&amp;rdquo; is used because the feature is similar to that of the tab stops on a typewriter. The feature works by inserting an appropriate number of spaces and tab characters to reach the next tab stop column; it does not affect the display of tab characters in the buffer (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;). Note that the</source>
          <target state="translated">이 섹션에서는 사용자 지정 탭 정지의 메커니즘과이를 사용 및 설정하는 메커니즘에 대해 설명합니다. 기능이 타자기의 탭 중지와 유사하기 때문에 &quot;탭 중지&quot;라는 이름이 사용됩니다. 이 기능은 적절한 수의 공백과 탭 문자를 삽입하여 다음 탭 정지 열에 도달하는 방식으로 작동합니다. 버퍼의 탭 문자 표시에는 영향을주지 않습니다 ( &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;일반 표시&lt;/a&gt; 참조 ). 참고</target>
        </trans-unit>
        <trans-unit id="7656dde734144a6f98b51ff38b0cc35f415fa7dc" translate="yes" xml:space="preserve">
          <source>This section explains the notational conventions that are used in this manual. You may want to skip this section and refer back to it later.</source>
          <target state="translated">이 섹션에서는이 설명서에서 사용되는 표기법에 대해 설명합니다. 이 섹션을 건너 뛰고 나중에 다시 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="595a2fe62cf2d2c2a6763fbb1f5b0609ab732357" translate="yes" xml:space="preserve">
          <source>This section explains the steps involved in building the Emacs executable. You don&amp;rsquo;t have to know this material to build and install Emacs, since the makefiles do all these things automatically. This information is pertinent to Emacs developers.</source>
          <target state="translated">이 섹션에서는 Emacs 실행 파일 빌드와 관련된 단계를 설명합니다. 메이크 파일이이 모든 작업을 자동으로 수행하기 때문에 Emacs를 빌드하고 설치하기 위해이 자료를 알 필요가 없습니다. 이 정보는 Emacs 개발자와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc6551c37ad72024ef368cf4f395f00c33e26ffb" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:extend&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;extend&lt;/var&gt;.</source>
          <target state="translated">이 설정한다은 &lt;code&gt;:extend&lt;/code&gt; 의 특성 &lt;var&gt;face&lt;/var&gt; 하는 &lt;var&gt;extend&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d8130e3c260f42143e05830c8c2d04a003020396" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:inverse-video&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;inverse-video-p&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;face&lt;/var&gt; 의 &lt;code&gt;:inverse-video&lt;/code&gt; 속성 을 &lt;var&gt;inverse-video-p&lt;/var&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="ab58c5ba739ca3b78ee8a04908dd595bbe8cd577" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:slant&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;normal&lt;/var&gt; if &lt;var&gt;italic-p&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and to &lt;var&gt;italic&lt;/var&gt; otherwise.</source>
          <target state="translated">이 설정한다 &lt;code&gt;:slant&lt;/code&gt; 의 특성 &lt;var&gt;face&lt;/var&gt; 에 &lt;var&gt;normal&lt;/var&gt; 경우 &lt;var&gt;italic-p&lt;/var&gt; 인 &lt;code&gt;nil&lt;/code&gt; 및에 &lt;var&gt;italic&lt;/var&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="aae429b5a51966b6940b72ca36d3c8e55baa9215" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:stipple&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;pattern&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;face&lt;/var&gt; 의 &lt;code&gt;:stipple&lt;/code&gt; 속성 을 &lt;var&gt;pattern&lt;/var&gt; 으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="dc51e75c68faa56f689729fe626d755b66ac4aa7" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:underline&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;underline&lt;/var&gt;.</source>
          <target state="translated">이것은 설정 &lt;code&gt;:underline&lt;/code&gt; 의 속성 &lt;var&gt;face&lt;/var&gt; 에 &lt;var&gt;underline&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="cc3dd036b1f402f5fde0a7cbdfd4a1cf7d832477" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:weight&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;normal&lt;/var&gt; if &lt;var&gt;bold-p&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and to &lt;var&gt;bold&lt;/var&gt; otherwise.</source>
          <target state="translated">&lt;var&gt;bold-p&lt;/var&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이면 &lt;var&gt;face&lt;/var&gt; 의 &lt;code&gt;:weight&lt;/code&gt; 속성 을 &lt;var&gt;normal&lt;/var&gt; 로 설정 &lt;var&gt;bold&lt;/var&gt; 그렇지 않으면 bold로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="a90b31704ed0556eac3260ae834080377e2cf271" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;left-margin&lt;/code&gt; property on the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to the value &lt;var&gt;margin&lt;/var&gt;. If Auto Fill mode is enabled, this command also refills the region to fit the new margin.</source>
          <target state="translated">이렇게 하면 텍스트 의 &lt;code&gt;left-margin&lt;/code&gt; 속성이 &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to 값 &lt;var&gt;margin&lt;/var&gt; 으로 설정 됩니다. 자동 채우기 모드가 활성화 된 경우이 명령은 새 여백에 맞게 영역을 다시 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="d1ee0ea030d6b5e60fbecf46e23b88fa2c2a9600" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;right-margin&lt;/code&gt; property on the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to the value &lt;var&gt;margin&lt;/var&gt;. If Auto Fill mode is enabled, this command also refills the region to fit the new margin.</source>
          <target state="translated">이것은 &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to 값 &lt;var&gt;margin&lt;/var&gt; 으로 텍스트 의 &lt;code&gt;right-margin&lt;/code&gt; 속성을 설정합니다 . 자동 채우기 모드가 활성화 된 경우이 명령은 새 여백에 맞게 영역을 다시 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="f73862b238b47e68dd753897ce88766db86396f4" translate="yes" xml:space="preserve">
          <source>This sets the current buffer&amp;rsquo;s case table to &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">이것은 현재 버퍼의 케이스 테이블을 &lt;var&gt;table&lt;/var&gt; 로 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="80548e91ba60b7200de2595a22b9c550cdcd3d22" translate="yes" xml:space="preserve">
          <source>This sets the data encapsulated by &lt;var&gt;node&lt;/var&gt; to &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">이 설정에 의해 캡슐화 데이터 &lt;var&gt;node&lt;/var&gt; 에 &lt;var&gt;data&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c88140b2b937c3f191e83a4184a47abc4068cb6d" translate="yes" xml:space="preserve">
          <source>This sets the default font to &lt;var&gt;font&lt;/var&gt;. When called interactively, it prompts for the name of a font, and uses that font on the selected frame. When called from Lisp, &lt;var&gt;font&lt;/var&gt; should be a font name (a string), a font object, font entity, or a font spec.</source>
          <target state="translated">이렇게하면 기본 글꼴이 &lt;var&gt;font&lt;/var&gt; 로 설정 됩니다. 대화 형으로 호출하면 글꼴 이름을 묻는 메시지가 표시되고 선택한 프레임에서 해당 글꼴이 사용됩니다. Lisp에서 호출 할 때 &lt;var&gt;font&lt;/var&gt; 는 글꼴 이름 (문자열), 글꼴 개체, 글꼴 엔티티 또는 글꼴 사양이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9d634cf9fbe27ab76656fdf6f42e627e63c40c88" translate="yes" xml:space="preserve">
          <source>This sets the face for the fringe bitmap &lt;var&gt;bitmap&lt;/var&gt; to &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it selects the &lt;code&gt;fringe&lt;/code&gt; face. The bitmap&amp;rsquo;s face controls the color to draw it in.</source>
          <target state="translated">이 프린지 비트 맵에 대한 얼굴 설정 &lt;var&gt;bitmap&lt;/var&gt; 에 &lt;var&gt;face&lt;/var&gt; . 경우 &lt;var&gt;face&lt;/var&gt; 이다 &lt;code&gt;nil&lt;/code&gt; , 상기 선택 &lt;code&gt;fringe&lt;/code&gt; 얼굴. 비트 맵의면은 그릴 색상을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="1c5a72da0843442603e016c15b83b60edada19c7" translate="yes" xml:space="preserve">
          <source>This sets the header and footer of &lt;var&gt;ewoc&lt;/var&gt; to the strings &lt;var&gt;header&lt;/var&gt; and &lt;var&gt;footer&lt;/var&gt;, respectively.</source>
          <target state="translated">이렇게하면 &lt;var&gt;ewoc&lt;/var&gt; 의 &lt;var&gt;header&lt;/var&gt; 과 &lt;var&gt;footer&lt;/var&gt; 이 각각 header 및 footer 문자열로 설정 됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
