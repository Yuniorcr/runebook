<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="720d2f3d2ed41c55bf66cfeaf092ec31b2977526" translate="yes" xml:space="preserve">
          <source>Multiple options are allowed.</source>
          <target state="translated">여러 옵션이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="3feda0153eee1380b496298450dc5a74324eb8c1" translate="yes" xml:space="preserve">
          <source>NA</source>
          <target state="translated">NA</target>
        </trans-unit>
        <trans-unit id="d156608bcd55b8352c33b3f46590d9f6a4e6ddd9" translate="yes" xml:space="preserve">
          <source>NA &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;: Means that no System or Local DCMTK is available</source>
          <target state="translated">NA &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; : 시스템 또는 로컬 DCMTK를 사용할 수 없음을 의미</target>
        </trans-unit>
        <trans-unit id="f3679d12b5545346c750a226d3b6374661a3f782" translate="yes" xml:space="preserve">
          <source>NA ...............: Means that no System or Local DCMTK is available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="e75dedcc315971ca035b9f33d5ff4a268f0acad9" translate="yes" xml:space="preserve">
          <source>NAS</source>
          <target state="translated">NAS</target>
        </trans-unit>
        <trans-unit id="940f3337540f9e486b0499494968e017fa326221" translate="yes" xml:space="preserve">
          <source>NDK</source>
          <target state="translated">NDK</target>
        </trans-unit>
        <trans-unit id="66e14c9725fbe173cbd030d10de9d42e32b56eeb" translate="yes" xml:space="preserve">
          <source>NMake Makefiles</source>
          <target state="translated">NMake Makefiles</target>
        </trans-unit>
        <trans-unit id="bffb5aa6b2fef07f84591173794ea0d50f268585" translate="yes" xml:space="preserve">
          <source>NMake Makefiles JOM</source>
          <target state="translated">NMake Makefiles JOM</target>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="356de56e8b201a3656acb6919561b09abc5b59d9" translate="yes" xml:space="preserve">
          <source>NOTE 1: &lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file(WRITE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt;&lt;code&gt;file(APPEND)&lt;/code&gt;&lt;/a&gt; do exactly the same as this one but add some more functionality.</source>
          <target state="translated">참고 1 : &lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt; &lt;code&gt;file(WRITE)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt; &lt;code&gt;file(APPEND)&lt;/code&gt; &lt;/a&gt; 은 이것과 정확히 동일하지만 더 많은 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8cdccfd9d5ece25c04c8827d759f75e2059e770c" translate="yes" xml:space="preserve">
          <source>NOTE 2: When using &lt;code&gt;write_file&lt;/code&gt; the produced file cannot be used as an input to CMake (CONFIGURE_FILE, source file &amp;hellip;) because it will lead to an infinite loop. Use &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; if you want to generate input files to CMake.</source>
          <target state="translated">참고 2 : &lt;code&gt;write_file&lt;/code&gt; 을 사용할 때 생성 된 파일은 무한 루프로 이어 지므로 CMake (CONFIGURE_FILE, 소스 파일&amp;hellip;)에 대한 입력으로 사용할 수 없습니다. CMake에 입력 파일을 생성 하려면 &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="51ccd64a076e3eacbe33c7dfcb1dda689f677a2d" translate="yes" xml:space="preserve">
          <source>NOTE 2: When using &lt;code&gt;write_file&lt;/code&gt; the produced file cannot be used as an input to CMake (CONFIGURE_FILE, source file ...) because it will lead to an infinite loop. Use &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; if you want to generate input files to CMake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e59a6ae6276f19e05e341a6c54f7649b4c1d24" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;${Java_VERSION}&lt;/code&gt; and &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; are not guaranteed to be identical. For example some java version may return: &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; and &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt;</source>
          <target state="translated">참고 : &lt;code&gt;${Java_VERSION}&lt;/code&gt; 과 &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; 은 (는) 동일하지 않을 수 있습니다. 예를 들어 일부 Java 버전은 &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; 및 &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt; 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0670808df734c6f1bd325aa81aa0dfe9fc8d47b" translate="yes" xml:space="preserve">
          <source>NOTE: A git version of 1.6.5 or later is required if this download method is used.</source>
          <target state="translated">참고 :이 다운로드 방법을 사용하려면 git 버전 1.6.5 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9a5aa217f8e7c0765bdf755f73842936c40a04e8" translate="yes" xml:space="preserve">
          <source>NOTE: Due to how &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; are consumed by the consuming target, unless you certainly know what you are doing, it is always preferred to link &lt;code&gt;OpenSSL::applink&lt;/code&gt; target as &lt;code&gt;PRIVATE&lt;/code&gt; and to make sure that this target is linked at most once for the whole dependency graph of any library or executable:</source>
          <target state="translated">참고 : 사용 대상에서 &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; 를 사용하는 방식으로 인해 수행중인 작업을 확실히 알지 못하는 경우 항상 &lt;code&gt;OpenSSL::applink&lt;/code&gt; 대상을 &lt;code&gt;PRIVATE&lt;/code&gt; 로 연결하고이 대상이 전체에 대해 최대 한 번 연결되도록 하는 것이 좋습니다. 라이브러리 또는 실행 파일의 종속성 그래프 :</target>
        </trans-unit>
        <trans-unit id="6a1de7761fc041b53a5842b0e9689ff963c830e2" translate="yes" xml:space="preserve">
          <source>NOTE: If you intend to use version checking, CMake 2.6.2 or later is</source>
          <target state="translated">참고 : 버전 확인을 사용하려는 경우 CMake 2.6.2 이상은</target>
        </trans-unit>
        <trans-unit id="2308285530c387e46519d4e80330c76c70a2de42" translate="yes" xml:space="preserve">
          <source>NOTE: It is highly recommended that you use the new FindOpenSceneGraph.cmake introduced in CMake 2.6.3 and not use this Find module directly.</source>
          <target state="translated">참고 : CMake 2.6.3에 도입 된 새로운 FindOpenSceneGraph.cmake를 사용하고이 찾기 모듈을 직접 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1ac07f107d1433f76094bc641b65f53758d8514e" translate="yes" xml:space="preserve">
          <source>NOTE: To use this module effectively you must either require &lt;code&gt;CMake &amp;gt;=
2.6.3&lt;/code&gt; with &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt;&lt;/a&gt; or download and place &lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt;&lt;code&gt;FindOpenThreads&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; functions, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; files into your &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 :이 모듈을 효과적으로 사용하려면 &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt; &lt;/a&gt; 와 함께 &lt;code&gt;CMake &amp;gt;= 2.6.3&lt;/code&gt; 이 필요 하거나 &lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt; &lt;code&gt;FindOpenThreads&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt; 함수, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; 파일을 CMAKE_MODULE_PATH에 다운로드하여 배치 해야 &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6901d07c945d6bd8bceb4f94e63987efeaa4c804" translate="yes" xml:space="preserve">
          <source>NOTES wxWidgets 2.6.x is supported for monolithic builds e.g. compiled in wx/build/msw dir as:</source>
          <target state="translated">참고 사항 wxWidgets 2.6.x는 다음과 같이 단일 빌드에 지원됩니다 (예 : wx / build / msw dir에 컴파일 됨).</target>
        </trans-unit>
        <trans-unit id="22eaa553f817c41824014d7412dd87fa514b2f7f" translate="yes" xml:space="preserve">
          <source>NO_SONAME</source>
          <target state="translated">NO_SONAME</target>
        </trans-unit>
        <trans-unit id="8102d33a6f88e8e41850527f1d4be0ab2bf4d596" translate="yes" xml:space="preserve">
          <source>NO_SYSTEM_FROM_IMPORTED</source>
          <target state="translated">NO_SYSTEM_FROM_IMPORTED</target>
        </trans-unit>
        <trans-unit id="a95ad056d519268727c52d1ffc8965b9267c0516" translate="yes" xml:space="preserve">
          <source>NPP</source>
          <target state="translated">NPP</target>
        </trans-unit>
        <trans-unit id="d305d3f7a6cee55b97b42f595107d702f99ddd1a" translate="yes" xml:space="preserve">
          <source>NVIDIA CUDA Toolkit version whose Visual Studio toolset to use.</source>
          <target state="translated">Visual Studio 툴셋을 사용할 NVIDIA CUDA 툴킷 버전.</target>
        </trans-unit>
        <trans-unit id="f3b2b6f8bb522b6680a4d373b1e5f83db361ef90" translate="yes" xml:space="preserve">
          <source>NVIDIA Performance Primitives lib (core). Only available for CUDA version 5.5+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a9f7f3f97e637eafea0c866c2ddedfe33b2b72" translate="yes" xml:space="preserve">
          <source>NVIDIA Performance Primitives lib (image processing). Only available for CUDA version 5.5 - 8.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f575cf6e230b6606d007c13786a6b9a092e60481" translate="yes" xml:space="preserve">
          <source>NVIDIA Performance Primitives lib (image processing). Only available for CUDA version 9.0 - 10.2. Replaced by nvjpeg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c2e5d9e162069a676e589e040723929802de88" translate="yes" xml:space="preserve">
          <source>NVIDIA Performance Primitives lib (image processing). Only available for CUDA version 9.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782fc1a309c9c5f3d57ced0f9546d209b1e42dc1" translate="yes" xml:space="preserve">
          <source>NVIDIA Performance Primitives lib (signal processing). Only available for CUDA version 5.5+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4262a4203a63752e1b6a8568d0b0815494c743b7" translate="yes" xml:space="preserve">
          <source>NVIDIA Performance Primitives lib. Only available for CUDA version 4.0+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553f1f34c87346d39022e7fc991188f09e1bb299" translate="yes" xml:space="preserve">
          <source>Name of &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;*_autogen&lt;/code&gt; targets that are added automatically by CMake for targets for which &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 가 사용 가능한 대상에 대해 CMake에 의해 자동으로 추가되는 &lt;code&gt;*_autogen&lt;/code&gt; 대상에 대한 &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; 의&lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="2a6ca01c8cb211e9a2b0f8260bc2252f6f17f7e8" translate="yes" xml:space="preserve">
          <source>Name of FOLDER for targets that are added automatically by CMake.</source>
          <target state="translated">CMake에서 자동으로 추가 한 대상의 폴더 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2c34dff4bcf78af82b273aa72d09ad18f3607fab" translate="yes" xml:space="preserve">
          <source>Name of archiving tool for static libraries.</source>
          <target state="translated">정적 라이브러리를위한 보관 도구의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8fa1c8314c835d228e98189553a36ea97e50b2d7" translate="yes" xml:space="preserve">
          <source>Name of file used to link (.a, .lib, .so).</source>
          <target state="translated">링크하는 데 사용되는 파일 이름 (.a, .lib, .so)</target>
        </trans-unit>
        <trans-unit id="479557e8495db1c9dba5c88baee71e42f20a7b8b" translate="yes" xml:space="preserve">
          <source>Name of file used to link target &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="translated">대상 &lt;code&gt;tgt&lt;/code&gt; 를 연결하는 데 사용되는 파일의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="ca381ef31498f7fa8c609a94fe871f71cbb48853" translate="yes" xml:space="preserve">
          <source>Name of file with soname (.so.3).</source>
          <target state="translated">soname (.so.3)을 가진 파일 이름</target>
        </trans-unit>
        <trans-unit id="df194b67526b5e2f6bbcfd2756e099ea34f49644" translate="yes" xml:space="preserve">
          <source>Name of file with soname (&lt;code&gt;.so.3&lt;/code&gt;).</source>
          <target state="translated">soname ( &lt;code&gt;.so.3&lt;/code&gt; ) 이있는 파일의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="0c2dc622095d2959bab7436b01d1bb0834ba1e73" translate="yes" xml:space="preserve">
          <source>Name of library containing &lt;code&gt;dlopen&lt;/code&gt; and &lt;code&gt;dlclose&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dlopen&lt;/code&gt; 및 &lt;code&gt;dlclose&lt;/code&gt; 를 포함하는 라이브러리의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="436be8e88cfed1e1483b542ce5c3f18dcaebc0be" translate="yes" xml:space="preserve">
          <source>Name of main file (.exe, .so.1.2, .a).</source>
          <target state="translated">기본 파일 이름 (.exe, .so.1.2, .a)</target>
        </trans-unit>
        <trans-unit id="cfaee1558e2912eb9ee08db68e357a00093f3057" translate="yes" xml:space="preserve">
          <source>Name of randomizing tool for static libraries.</source>
          <target state="translated">정적 라이브러리 용 무작위 화 도구의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e9184b9021d32addcdca39a5573e7eb139ec7240" translate="yes" xml:space="preserve">
          <source>Name of target aliased by this target.</source>
          <target state="translated">이 대상이 별명을 지정한 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c642788c7b0e6f004f10e2695693fc3c80d37d95" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 생성 파일에 대한 &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="5ff73a9a79b9bf16b59eb540fe1823ba7bef3e2c" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 생성 파일에 대한 &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="7d28528c0dbeec45a5115d53d9426fd180839b80" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 생성 파일에 대한 &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="0a8b0debdea49cb6391827662915991bf1c64fc6" translate="yes" xml:space="preserve">
          <source>Name of the OS CMake is running on.</source>
          <target state="translated">OS CMake가 실행중인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1886b6bef9c8c7e25f9d01181832a8f22c9c8fe1" translate="yes" xml:space="preserve">
          <source>Name of the linker generated program database file (.pdb).</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일 (.pdb)의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="181240d7965c11f64fc7b49d9274207e8aed9f42" translate="yes" xml:space="preserve">
          <source>Name of the preset to use from the project&amp;rsquo;s &lt;a href=&quot;cmake-presets.7#manual:cmake-presets(7)&quot; id=&quot;index-0-manual:cmake-presets(7)&quot;&gt;&lt;code&gt;presets&lt;/code&gt;&lt;/a&gt; files, if it has them.</source>
          <target state="translated">프로젝트의 &lt;a href=&quot;cmake-presets.7#manual:cmake-presets(7)&quot; id=&quot;index-0-manual:cmake-presets(7)&quot;&gt; &lt;code&gt;presets&lt;/code&gt; &lt;/a&gt; 파일 (있는 경우) 에서 사용할 사전 설정의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="3f164cfaea529a03fc2c41da2544b81fc328a51f" translate="yes" xml:space="preserve">
          <source>Name of the preset to use from the project's &lt;a href=&quot;cmake-presets.7#manual:cmake-presets(7)&quot; id=&quot;index-0-manual:cmake-presets(7)&quot;&gt;&lt;code&gt;presets&lt;/code&gt;&lt;/a&gt; files, if it has them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2fc15e9ca64c8c870db215293aaaceace4cc55" translate="yes" xml:space="preserve">
          <source>Name of the project given to the project command.</source>
          <target state="translated">프로젝트 명령에 지정된 프로젝트 이름.</target>
        </trans-unit>
        <trans-unit id="d16639249dd5742e083bc3af1fb3f72e2bd82e64" translate="yes" xml:space="preserve">
          <source>Name of the variable being accessed.</source>
          <target state="translated">액세스중인 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="3b9de04514e91474f84cf8749c735059d33d9393" translate="yes" xml:space="preserve">
          <source>Name of the variable in which the list of keys is stored</source>
          <target state="translated">키 목록이 저장된 변수의 이름</target>
        </trans-unit>
        <trans-unit id="aca75e3ad40757352105124c07abb09ecc849df8" translate="yes" xml:space="preserve">
          <source>Name of the variable in which to store the list of resolved dependencies.</source>
          <target state="translated">해결 된 종속성 목록을 저장할 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="71de509ca4e5135576c5b4cb8d435160ac57b470" translate="yes" xml:space="preserve">
          <source>Name of the variable in which to store the list of unresolved dependencies. If this variable is not specified, and there are any unresolved dependencies, an error is issued.</source>
          <target state="translated">해결되지 않은 종속성 목록을 저장할 변수의 이름입니다. 이 변수가 지정되지 않고 해결되지 않은 종속성이있는 경우 오류가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="a2b410698cf57954aff0fd5a5d1c97c060397a8b" translate="yes" xml:space="preserve">
          <source>Name of the variable with the computed &quot;base&quot; of &lt;code&gt;KEY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b3db9e7197d3ae80518399e9a5330f528aabf8" translate="yes" xml:space="preserve">
          <source>Name of the variable with the computed &amp;ldquo;base&amp;rdquo; of &lt;code&gt;KEY&lt;/code&gt;.</source>
          <target state="translated">계산 된 &quot;base&quot;가 &lt;code&gt;KEY&lt;/code&gt; 인 변수의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="36455ca7ed5f12f4faf49095dcba669b16457295" translate="yes" xml:space="preserve">
          <source>Name of the variable with the result value</source>
          <target state="translated">결과 값이있는 변수의 이름</target>
        </trans-unit>
        <trans-unit id="eb7f3c429384bddcba269f0803fd68b09c980ecd" translate="yes" xml:space="preserve">
          <source>Name specified in the preset&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; field.</source>
          <target state="translated">사전 설정의 &lt;code&gt;name&lt;/code&gt; 필드에 지정된 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="6071235bd2889829a868241faffa437930d85f2e" translate="yes" xml:space="preserve">
          <source>Name specified in the preset's &lt;code&gt;name&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db25c9b9176e027e997f546358209090084a5cc" translate="yes" xml:space="preserve">
          <source>Native Conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f509c864dab7ca8a7168c27c9b5babaf8c262dd4" translate="yes" xml:space="preserve">
          <source>Native build system toolset specification provided by user.</source>
          <target state="translated">사용자가 제공 한 기본 빌드 시스템 도구 세트 사양.</target>
        </trans-unit>
        <trans-unit id="c687420ff41c09bf7a06c79234b06b37c90bd40e" translate="yes" xml:space="preserve">
          <source>Natural sorting can be employed to return the highest version when multiple versions of the same library are found by &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. For example suppose that the following libraries have been found:</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 가 동일한 라이브러리의 여러 버전을 찾은 경우 자연 정렬을 사용하여 최고 버전을 반환 할 수 있습니다 . 예를 들어 다음 라이브러리가 발견되었다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="2c1cc852558f04d06d3e93811511d0e35d1740c9" translate="yes" xml:space="preserve">
          <source>Navigate to the install directory and verify that the installed Tutorial runs.</source>
          <target state="translated">설치 디렉토리로 이동하여 설치된 Tutorial이 실행되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1fef217aa68495981fdc1e5596a5c2b3d0e9de16" translate="yes" xml:space="preserve">
          <source>Never try to find application bundles.</source>
          <target state="translated">응용 프로그램 번들을 찾지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9d6e608e16c89137b5b7dafa58a7d2541849042a" translate="yes" xml:space="preserve">
          <source>Never try to find frameworks.</source>
          <target state="translated">프레임 워크를 찾지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3044731cb14928152cff1cf7dc1f4fa6c076e116" translate="yes" xml:space="preserve">
          <source>New in version 3.1.</source>
          <target state="translated">버전 3.1의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="fd4ca936d77d78bfe0976664a852399242ae450f" translate="yes" xml:space="preserve">
          <source>New in version 3.1.1.</source>
          <target state="translated">버전 3.1.1의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="a0847250ac5499da68d54a7e0571d2ca101e9983" translate="yes" xml:space="preserve">
          <source>New in version 3.10.</source>
          <target state="translated">버전 3.10의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="1bebb5136b263b32251d33d0d16528faa73c4d07" translate="yes" xml:space="preserve">
          <source>New in version 3.10.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc168e5b6b18ec0af79970ca3512f6c66839dce" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Added support for Java 9+ version parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0ef8a6120c26bdb2a278640c77a9b4d1947475" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Additional &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; values are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cf843b7985f5ee6b3c138a1a53a264c295111b" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Additionally, the following GLVND-specific library targets are defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d229790a7f6947289dc19cac3f91f5a357e6e8" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Detection of OpenCL 2.1 and 2.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1e4473500f7d560e33141f483ae906c1688188" translate="yes" xml:space="preserve">
          <source>New in version 3.10: GLVND support on Linux. See the &lt;a href=&quot;#linux-specific&quot;&gt;Linux-specific&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fa6b45d4a6f76aec8cda5bd2d53bb69fdee71a" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Ice 3.7 support, including new components, programs and the Nuget package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a25aca8524b5da3de3a5f6baf239097ff2b771" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Major overhaul of the module: many new variables, per-language components, support for a wider variety of runtimes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0919303bb3da0c41bda560cea3f8386d92ece6b7" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Set &lt;code&gt;CURSES_NEED_WIDE&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt; before the &lt;code&gt;find_package(Curses)&lt;/code&gt; call if unicode functionality is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88e1d9f55253044a93321c6614028fff23716f0" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Support for &lt;code&gt;HDF5_USE_STATIC_LIBRARIES&lt;/code&gt; on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a912a8dbdeeea61e1c6688c1522858ba24bf9bd" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Support for installing Intel compiler runtimes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff43ae48d2d5b5266526b03f9ff5f5df4f90463" translate="yes" xml:space="preserve">
          <source>New in version 3.10: The different dependency types &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;INTERFACE&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; are represented as solid, dashed and dotted edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbc4b4d6766215bbe95026c2cdd07562bfe3b06" translate="yes" xml:space="preserve">
          <source>New in version 3.10: The module exposes the components &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, and &lt;code&gt;Fortran&lt;/code&gt;. Each of these controls the various languages to search OpenMP support for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649785b67ce8e869eb20bdb3de6f26c83415b72b" translate="yes" xml:space="preserve">
          <source>New in version 3.10: The protoc compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a65ce7e38f3c0457321edf3046cbe157853927" translate="yes" xml:space="preserve">
          <source>New in version 3.10: The result lines (with the exception of the &lt;code&gt;#undef&lt;/code&gt; comments) can be indented using spaces and/or tabs between the &lt;code&gt;#&lt;/code&gt; character and the &lt;code&gt;cmakedefine&lt;/code&gt; or &lt;code&gt;cmakedefine01&lt;/code&gt; words. This whitespace indentation will be preserved in the output lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3b9054c0209895a48ffe72ea533b5ce812e79e" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Variable to define with autogenerated descriptor files, if requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894d113a5f8ff5f378d1f67029ec3227a01f0e2c" translate="yes" xml:space="preserve">
          <source>New in version 3.10: Variables for GLVND-specific libraries &lt;code&gt;OpenGL&lt;/code&gt;, &lt;code&gt;EGL&lt;/code&gt; and &lt;code&gt;GLX&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3f516156c3cbdf8a26e41c335ee5e8f4906c78" translate="yes" xml:space="preserve">
          <source>New in version 3.11.</source>
          <target state="translated">버전 3.11의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="2c7d96cb1e8efc8c679e940bc47c203dd1b79d5f" translate="yes" xml:space="preserve">
          <source>New in version 3.11: &lt;code&gt;FLAME&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8442157dfafe772fb8049cc59ebb4262190ec435" translate="yes" xml:space="preserve">
          <source>New in version 3.11: Accept &lt;code&gt;UTF-8&lt;/code&gt; spelling for consistency with the &lt;a href=&quot;https://www.ietf.org/rfc/rfc3629&quot;&gt;UTF-8 RFC&lt;/a&gt; naming convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9b6d460b19063856f77a34f84e88f36608eb9f" translate="yes" xml:space="preserve">
          <source>New in version 3.11: Added support for static libraries on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f542358ca0f314924147d052203e9c3f932c15e1" translate="yes" xml:space="preserve">
          <source>New in version 3.11: Added the &lt;code&gt;INCLUDE_GUARD_NAME&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70add65d7219604fa2792f6dcee209b3325a69fe" translate="yes" xml:space="preserve">
          <source>New in version 3.11: Allow setting &lt;code&gt;INTERFACE&lt;/code&gt; items on &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a494f11e2f0270085bc8bcebbf56426c8a3bc25" translate="yes" xml:space="preserve">
          <source>New in version 3.11: An &lt;code&gt;ALIAS&lt;/code&gt; can target a &lt;code&gt;GLOBAL&lt;/code&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Target&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e275245a8c5a176828838d7389540220ca03dccf" translate="yes" xml:space="preserve">
          <source>New in version 3.11: Debug and Release variants are found separately and use per-configuration variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f912d90beaf8622863beb05e21b1c9517ea498c9" translate="yes" xml:space="preserve">
          <source>New in version 3.11: Many of the &lt;code&gt;install()&lt;/code&gt; variants implicitly create the directories containing the installed files. If &lt;a href=&quot;../variable/cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt; is set, these directories will be created with the permissions specified. Otherwise, they will be created according to the uname rules on Unix-like platforms. Windows platforms are unaffected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fee80473c5ae411dd44700031b3bbea99aaedf" translate="yes" xml:space="preserve">
          <source>New in version 3.11: Optionally, using option &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt;, native header files can be generated for methods declared as native. These files provide the connective glue that allow your Java and C code to interact. An INTERFACE target will be created for an easy usage of generated files. Sub-option &lt;code&gt;DESTINATION&lt;/code&gt; can be used to specify the output directory for generated header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03971223e76c49d322c10ed9ffce21b98d37a472" translate="yes" xml:space="preserve">
          <source>New in version 3.11: The &lt;code&gt;&amp;lt;DOWNLOAD_DIR&amp;gt;&lt;/code&gt; substitution token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652effba22ebae75cd358667d3d154f84cd7b626" translate="yes" xml:space="preserve">
          <source>New in version 3.11: The &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99acbb119221d2591cc567f3da95262cabcb1834" translate="yes" xml:space="preserve">
          <source>New in version 3.11: The &lt;code&gt;SameMinorVersion&lt;/code&gt; compatibility mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ccf14aca353271aaac295d81ab0393ab779e47" translate="yes" xml:space="preserve">
          <source>New in version 3.11: The following environment variables can be used as hints: &lt;code&gt;WX_CONFIG&lt;/code&gt;, &lt;code&gt;WXRC_CMD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c870a5427507ce35ac041ed089012a1e5a0ce2" translate="yes" xml:space="preserve">
          <source>New in version 3.11: The source files can be omitted if they are added later using &lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8a3f4d02aacb82b2ea4b437685810ea73c4e2d" translate="yes" xml:space="preserve">
          <source>New in version 3.11: There are situations where it may be undesirable for a particular config option to be automatically quoted by &lt;code&gt;doxygen_add_docs()&lt;/code&gt;, such as &lt;code&gt;ALIASES&lt;/code&gt; which may need to include its own embedded quoting. The &lt;code&gt;DOXYGEN_VERBATIM_VARS&lt;/code&gt; variable can be used to specify a list of Doxygen variables (including the leading &lt;code&gt;DOXYGEN_&lt;/code&gt; prefix) which should not be quoted. The project is then responsible for ensuring that those variables' values make sense when placed directly in the Doxygen input file. In the case of list variables, list items are still separated by spaces, it is only the automatic quoting that is skipped. For example, the following allows &lt;code&gt;doxygen_add_docs()&lt;/code&gt; to apply quoting to &lt;code&gt;DOXYGEN_PROJECT_BRIEF&lt;/code&gt;, but not each item in the &lt;code&gt;DOXYGEN_ALIASES&lt;/code&gt; list (&lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;bracket syntax&lt;/a&gt; can also be used to make working with embedded quotes easier):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f46a34e6f0f5e904cc9f2b3b5fca3c4f0ed134" translate="yes" xml:space="preserve">
          <source>New in version 3.12.</source>
          <target state="translated">버전 3.12의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="18c0c76104994b99f2e34a98b2fb2455e5b778ac" translate="yes" xml:space="preserve">
          <source>New in version 3.12.1.</source>
          <target state="translated">버전 3.12.1의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="bd4b23de658acd97a9628306d422e3bc66a80ee7" translate="yes" xml:space="preserve">
          <source>New in version 3.12: &lt;code&gt;BARE_FEATURES&lt;/code&gt; will define the compatibility macros with the name used in newer versions of the language standard, so the code can use the new feature name unconditionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffcc491c8596b6a29f298a08f42b07d69a7c3a8" translate="yes" xml:space="preserve">
          <source>New in version 3.12: Added Matlab Compiler Runtime (MCR) support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09aa64ea45526aafa9cd4a61c7738a0c4768f55" translate="yes" xml:space="preserve">
          <source>New in version 3.12: Added support for C projects. Previous versions supported C++ project only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c9cebe3ef60ba9f6a9cf3e733dda9d54abda6c" translate="yes" xml:space="preserve">
          <source>New in version 3.12: Added the &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_DESCRIPTION&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7d797353577b1f766435f928c3fc149e3799d7" translate="yes" xml:space="preserve">
          <source>New in version 3.12: Debug and Release variand are found separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621ec6abec654be0d0f12df59fcf65c8efae4c27" translate="yes" xml:space="preserve">
          <source>New in version 3.12: If &lt;code&gt;ALL&lt;/code&gt; is set, the target will be added to the default build target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2268145d30ecb6c814259622426bd018b4ad1b64" translate="yes" xml:space="preserve">
          <source>New in version 3.12: If called from within a find module or any other script loaded by a call to &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;, search prefixes unique to the current package being found. Specifically, look in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable. The package root variables are maintained as a stack, so if called from nested find modules or config packages, root paths from the parent's find module or config package will be searched after paths from the current module or package. In other words, the search order would be &lt;code&gt;&amp;lt;CurrentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;CurrentPackage&amp;gt;_ROOT}&lt;/code&gt;, &lt;code&gt;&amp;lt;ParentPackage&amp;gt;_ROOT&lt;/code&gt;, &lt;code&gt;ENV{&amp;lt;ParentPackage&amp;gt;_ROOT}&lt;/code&gt;, etc. This can be skipped if &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; is passed or by setting the &lt;a href=&quot;../variable/cmake_find_use_package_root_path#variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_ROOT_PATH&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;FALSE&lt;/code&gt;. See policy &lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt;&lt;code&gt;CMP0074&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85448691d2aa34e3b6ec49e65d7ee9fd8f3d3cc1" translate="yes" xml:space="preserve">
          <source>New in version 3.12: If the &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; flag is specified, CMake will add logic to the main build system check target to rerun the flagged &lt;code&gt;GLOB&lt;/code&gt; commands at build time. If any of the outputs change, CMake will regenerate the build system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54f217a436c4f539cc1e0e72f5d0c7d3c4805a7" translate="yes" xml:space="preserve">
          <source>New in version 3.12: Object libraries can be linked to with &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51564942b67bb27c90c1ce04fb15fc30eaa1496a" translate="yes" xml:space="preserve">
          <source>New in version 3.12: Search paths specified in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable, where &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; is the package to be found. The package root variables are maintained as a stack so if called from within a find module, root paths from the parent's find module will also be searched after paths for the current package. This can be skipped if &lt;code&gt;NO_PACKAGE_ROOT_PATH&lt;/code&gt; is passed or by setting the &lt;a href=&quot;../variable/cmake_find_use_package_root_path#variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_ROOT_PATH&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;FALSE&lt;/code&gt;. See policy &lt;a href=&quot;../policy/cmp0074#policy:CMP0074&quot; id=&quot;index-0-policy:CMP0074&quot;&gt;&lt;code&gt;CMP0074&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df65edbd3c9dda24b1946281e1bdec5794e2c1eb" translate="yes" xml:space="preserve">
          <source>New in version 3.12: The optional &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff6638907719bc258500feee35ebcded9c76795" translate="yes" xml:space="preserve">
          <source>New in version 3.12: When the &lt;code&gt;project()&lt;/code&gt; command is called from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, then the version is also stored in the variable &lt;a href=&quot;../variable/cmake_project_version#variable:CMAKE_PROJECT_VERSION&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67796365ad8077a2d0b5851f89a59b83f7e77f65" translate="yes" xml:space="preserve">
          <source>New in version 3.12: While beneficial for individual options, the de-duplication step can break up option groups. For example, &lt;code&gt;-D A -D B&lt;/code&gt; becomes &lt;code&gt;-D A B&lt;/code&gt;. One may specify a group of options using shell-like quoting along with a &lt;code&gt;SHELL:&lt;/code&gt; prefix. The &lt;code&gt;SHELL:&lt;/code&gt; prefix is dropped, and the rest of the option string is parsed using the &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt;&lt;code&gt;separate_arguments()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode. For example, &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; becomes &lt;code&gt;-D A -D B&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7b2fa7d420dd798407a7bc829d008c1eadb20e" translate="yes" xml:space="preserve">
          <source>New in version 3.12: the BZip2 include directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598fb8f46ec223a387a4b51c55a6200cb03edd3c" translate="yes" xml:space="preserve">
          <source>New in version 3.12: the version of the JPEG library found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a691415d122f3f1dac444bb54b5ec4612470f6c2" translate="yes" xml:space="preserve">
          <source>New in version 3.13.</source>
          <target state="translated">버전 3.13의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="8c296685df51992e5422d040524435e9d103c520" translate="yes" xml:space="preserve">
          <source>New in version 3.13: &lt;a href=&quot;#install-targets&quot;&gt;install(TARGETS)&lt;/a&gt; can install targets that were created in other directories. When using such cross-directory install rules, running &lt;code&gt;make install&lt;/code&gt; (or similar) from a subdirectory will not guarantee that targets from other directories are up-to-date. You can use &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; to ensure that such out-of-directory targets are built before the subdirectory-specific install rules are run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311404131827c591982000b6efa72d4b0d613772" translate="yes" xml:space="preserve">
          <source>New in version 3.13: &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-1-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; target property and &lt;a href=&quot;target_link_options#command:target_link_options&quot; id=&quot;index-1-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command. For earlier versions of CMake, use &lt;a href=&quot;../prop_tgt/link_flags#prop_tgt:LINK_FLAGS&quot; id=&quot;index-0-prop_tgt:LINK_FLAGS&quot;&gt;&lt;code&gt;LINK_FLAGS&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a1184056a33f1ab2ee46a51a438d0283981db6" translate="yes" xml:space="preserve">
          <source>New in version 3.13: &lt;code&gt;stacktrace_*&lt;/code&gt; components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01e627c41291be3a22588f420fb2891736963c5" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Add support for Visual Studio generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158c1142fc856f1bc2a06bd20ba67aa14b0f6a01" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Added ILP64 MKL variants (&lt;code&gt;Intel10_64ilp&lt;/code&gt;, &lt;code&gt;Intel10_64ilp_seq&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423b90379cd75df54231577cf622fa377e875cba" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Added the &lt;code&gt;COMPARE&lt;/code&gt;, &lt;code&gt;CASE&lt;/code&gt;, and &lt;code&gt;ORDER&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15aa8f1c31e6dc98d79daf5159c26ff08c26ce6d" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Added the &lt;code&gt;ENGINE_LIBRARY&lt;/code&gt;, &lt;code&gt;DATAARRAY_LIBRARY&lt;/code&gt; and &lt;code&gt;MCC_COMPILER&lt;/code&gt; components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed483e6112a9c6b5c753c29c2de80838e5938ef5" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Added the &lt;code&gt;RETURN_VALUE&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dce869e7eaaadc45466114f1e14f7291450756" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacf761014abf8931bd4688e0fc2f573ee83d03f" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5054edac3b83e1abf0c626c70fdb918b4f612928" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Arguments to &lt;code&gt;link_directories&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &quot;$&amp;lt;...&amp;gt;&quot;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474e4551d1a30a33f9684a02c56d1421f85f2b8d" translate="yes" xml:space="preserve">
          <source>New in version 3.13: By default the directories specified are appended onto the current list of directories. This default behavior can be changed by setting &lt;a href=&quot;../variable/cmake_link_directories_before#variable:CMAKE_LINK_DIRECTORIES_BEFORE&quot; id=&quot;index-0-variable:CMAKE_LINK_DIRECTORIES_BEFORE&quot;&gt;&lt;code&gt;CMAKE_LINK_DIRECTORIES_BEFORE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;ON&lt;/code&gt;. By using &lt;code&gt;AFTER&lt;/code&gt; or &lt;code&gt;BEFORE&lt;/code&gt; explicitly, you can select between appending and prepending, independent of the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694d38ada761606bdf29c8a145693b33169fa55b" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Debug and Release variants are found separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fb3a04db1625f04dec0a0cf2053bd7185084aa" translate="yes" xml:space="preserve">
          <source>New in version 3.13: Hexadecimal numbers are recognized when prefixed with &lt;code&gt;0x&lt;/code&gt;, as in C code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3394f7e45127727c231f8ca0237f31cf5442ee8c" translate="yes" xml:space="preserve">
          <source>New in version 3.13: If the &lt;a href=&quot;../envvar/cudahostcxx#envvar:CUDAHOSTCXX&quot; id=&quot;index-0-envvar:CUDAHOSTCXX&quot;&gt;&lt;code&gt;CUDAHOSTCXX&lt;/code&gt;&lt;/a&gt; environment variable is set it will be used as the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbac64402fa46bf67115a6ddbd0017d005934b9" translate="yes" xml:space="preserve">
          <source>New in version 3.13: The &lt;a href=&quot;../module/findcuda#module:FindCUDA&quot; id=&quot;index-0-module:FindCUDA&quot;&gt;&lt;code&gt;FindCUDA&lt;/code&gt;&lt;/a&gt; module will use this variable to initialize its &lt;code&gt;CUDA_HOST_COMPILER&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d560ddc3788d2964a5ef6c46515f5e096e28ad" translate="yes" xml:space="preserve">
          <source>New in version 3.13: The &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; doesn't have to be defined in the same directory as the &lt;code&gt;target_link_libraries&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7ba2b241916bcf73ea1f932741d230924e903f" translate="yes" xml:space="preserve">
          <source>New in version 3.13: The &lt;code&gt;GLOBAL&lt;/code&gt; argument will make the imported target available in global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18ac19439aa45366f2b3f417c0b5f1904a0f496" translate="yes" xml:space="preserve">
          <source>New in version 3.13: The directories are added to the &lt;a href=&quot;../prop_dir/link_directories#prop_dir:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_dir:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, converting relative paths to absolute as needed. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a254e3efca7a1d777a98fb7caba619837ffb22e7" translate="yes" xml:space="preserve">
          <source>New in version 3.13: The error can be ignored by providing the &lt;code&gt;IGNORE_SVN_FAILURE&lt;/code&gt; option, which causes these variables to remain undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5611f954c09e16e324c13c375d0803a1f68d2563" translate="yes" xml:space="preserve">
          <source>New in version 3.13: The result is formatted according to the option &lt;code&gt;OUTPUT_FORMAT&lt;/code&gt;, where &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda7f5a24fab43e879f607106f35b2fab883c2c0" translate="yes" xml:space="preserve">
          <source>New in version 3.14.</source>
          <target state="translated">버전 3.14의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="bc53a54a1852e54e6a9e44c64e29aec55186ba36" translate="yes" xml:space="preserve">
          <source>New in version 3.14.3.</source>
          <target state="translated">버전 3.14.3의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="1072b60c90ef52e9057354dee4dd1a918b0a05e4" translate="yes" xml:space="preserve">
          <source>New in version 3.14: &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; (in the case of &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;, this refers to their use in the file name, not the file's contents). See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cd0e9ae0d9bca9b66f8b57657be31d844a7cac" translate="yes" xml:space="preserve">
          <source>New in version 3.14: &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144d33876a7cec0d90a5f477ad2415ef19ad9872" translate="yes" xml:space="preserve">
          <source>New in version 3.14: A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of options to add to the link command (see &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; for further details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af45635944d915c596d9a4cfda2c6177d7db6e11" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Added support for &lt;code&gt;CACHE{&amp;lt;name&amp;gt;}&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43cd0e1da3a70dea651a82cb33f1be3b24d6a550" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Added the &lt;code&gt;LAST_EXT&lt;/code&gt; and &lt;code&gt;NAME_WLE&lt;/code&gt; modes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3366b783188b2574c227aa8ae2adae4386861388" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Added the &lt;code&gt;NumPy&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b6410567b7073d3b616993531da1717e6dc2db" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Added the &lt;code&gt;SUBMIT_URL&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d9f73e14d93f4bd580428f3797be54eb40fda2" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Added the &lt;code&gt;X11_Xext_INCLUDE_PATH&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f174e7692870e81322cb925bb8cbbd3c1ae4bc92" translate="yes" xml:space="preserve">
          <source>New in version 3.14: If &lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; is given, the installed package version will be considered compatible even if it was built for a different architecture than the requested architecture. Otherwise, an architecture check will be performed, and the package will be considered compatible only if the architecture matches exactly. For example, if the package is built for a 32-bit architecture, the package is only considered compatible if it is used on a 32-bit architecture, unless &lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; is given, in which case the package is considered compatible on any architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656d7cbee456117aebb163c8068ed10d2aa9b1a6" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Imported targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02402d9392e8a4b280607632bc3b5d06db2b9882" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Renamed &lt;code&gt;Xxf86misc&lt;/code&gt;, &lt;code&gt;X11_Xxf86misc&lt;/code&gt;, &lt;code&gt;X11_Xxf86vm&lt;/code&gt;, &lt;code&gt;X11_xkbfile&lt;/code&gt;, &lt;code&gt;X11_Xtst&lt;/code&gt;, and &lt;code&gt;X11_Xss&lt;/code&gt; libraries to match their file names. Deprecated the &lt;code&gt;X11_Xinput&lt;/code&gt; library. Old names are still available for compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908dcc956888e0a07b9c0a3cdf9e947ef4833745" translate="yes" xml:space="preserve">
          <source>New in version 3.14: The module defines the following &lt;code&gt;IMPORTED&lt;/code&gt; targets (when &lt;a href=&quot;../prop_gbl/cmake_role#prop_gbl:CMAKE_ROLE&quot; id=&quot;index-0-prop_gbl:CMAKE_ROLE&quot;&gt;&lt;code&gt;CMAKE_ROLE&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROJECT&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536549baa9f216900a32f21e45658ca898e3adc8" translate="yes" xml:space="preserve">
          <source>New in version 3.14: The name of the &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; is defined by the user. Previously, it had a fixed name &lt;code&gt;RESULT_VAR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84e8359b9cea2c96bc497677f9998d8c1965f5d" translate="yes" xml:space="preserve">
          <source>New in version 3.14: The names of the result variables &lt;code&gt;&amp;lt;runResultVar&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;compileResultVar&amp;gt;&lt;/code&gt; are defined by the user. Previously, they had fixed names &lt;code&gt;RUN_RESULT_VAR&lt;/code&gt; and &lt;code&gt;COMPILE_RESULT_VAR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883303e0e6685baee2756a6e38fa25196198b323" translate="yes" xml:space="preserve">
          <source>New in version 3.14: The variable GET_PREREQUISITES_VERBOSE can be set to true to enable verbose output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863337a3fa9fddc3ab59e78087e3388286fca2c2" translate="yes" xml:space="preserve">
          <source>New in version 3.14: The version of GDAL found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738806e4c36ac842ac28fa78342259442bed0090" translate="yes" xml:space="preserve">
          <source>New in version 3.14: This behavior can be overridden by specifying the variable &lt;code&gt;SWIG_SOURCE_FILE_EXTENSIONS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d9652355edf0c5cf3afb890f1e960e9d30c03a" translate="yes" xml:space="preserve">
          <source>New in version 3.14: This module accept optional COMPONENTS to check supported features and protocols:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082df8abfcc202c539f36c1f698d5a4c00009a43" translate="yes" xml:space="preserve">
          <source>New in version 3.14: Variables for &lt;code&gt;slice2confluence&lt;/code&gt; and &lt;code&gt;slice2matlab&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40660bd1107f8e9a4c99e32c5bb13608803e2c4c" translate="yes" xml:space="preserve">
          <source>New in version 3.14: When &lt;code&gt;BUILD_IN_SOURCE&lt;/code&gt; option is enabled, the &lt;code&gt;BUILD_COMMAND&lt;/code&gt; is used to point to an alternative directory within the source tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7bdf1943838f12adf02241cb4765a8b0465260" translate="yes" xml:space="preserve">
          <source>New in version 3.14: a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of options to add to the link command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c633b3e6f33f787db247f822d72f4bec61e859" translate="yes" xml:space="preserve">
          <source>New in version 3.14: list of options to pass to link command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77e7d35927c6597990f73b9b1c047e5134a6c68" translate="yes" xml:space="preserve">
          <source>New in version 3.15.</source>
          <target state="translated">버전 3.15의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="e73c54f9d9ef0117ed309b600c57cc0702fe09cd" translate="yes" xml:space="preserve">
          <source>New in version 3.15.1.</source>
          <target state="translated">버전 3.15.1의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="76e213e17279d2702d9e5a8fdad391a098d2af17" translate="yes" xml:space="preserve">
          <source>New in version 3.15: &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; that were given no values at all are collected in a variable &lt;code&gt;&amp;lt;prefix&amp;gt;_KEYWORDS_MISSING_VALUES&lt;/code&gt; that will be undefined if all keywords received values. This can be checked to see if there were keywords without any values given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8127a0a6ab7517f0fa29714d8de0f702c036c8e0" translate="yes" xml:space="preserve">
          <source>New in version 3.15: Added the &lt;code&gt;BUILD_ID&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee66b1d1601aacc128d3ff046e6ea1b68904214" translate="yes" xml:space="preserve">
          <source>New in version 3.15: Added the &lt;code&gt;CMAKE_PROJECT_INCLUDE&lt;/code&gt; and &lt;code&gt;CMAKE_PROJECT_INCLUDE_BEFORE&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a828b0a0b6a3915cbeeba263682bdc745c0da70" translate="yes" xml:space="preserve">
          <source>New in version 3.15: Added the &lt;code&gt;NOTICE&lt;/code&gt;, &lt;code&gt;VERBOSE&lt;/code&gt;, &lt;code&gt;DEBUG&lt;/code&gt;, and &lt;code&gt;TRACE&lt;/code&gt; levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85c4bc832b49a507c2237c86ee7350cd287824d" translate="yes" xml:space="preserve">
          <source>New in version 3.15: Alias for &lt;code&gt;Boost::boost&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6ae388357797c702f5558c6841fa0fd27830f2" translate="yes" xml:space="preserve">
          <source>New in version 3.15: An interface library can have &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-0-prop_tgt:PUBLIC_HEADER&quot;&gt;&lt;code&gt;PUBLIC_HEADER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/private_header#prop_tgt:PRIVATE_HEADER&quot; id=&quot;index-0-prop_tgt:PRIVATE_HEADER&quot;&gt;&lt;code&gt;PRIVATE_HEADER&lt;/code&gt;&lt;/a&gt; properties. The headers specified by those properties can be installed using the &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537792fd856f71beacba95d1ae1b69167f8893a3" translate="yes" xml:space="preserve">
          <source>New in version 3.15: If &lt;code&gt;FOLLOW_SYMLINK_CHAIN&lt;/code&gt; is specified, &lt;code&gt;COPY&lt;/code&gt; will recursively resolve the symlinks at the paths given until a real file is found, and install a corresponding symlink in the destination for each symlink encountered. For each symlink that is installed, the resolution is stripped of the directory, leaving only the filename, meaning that the new symlink points to a file in the same directory as the symlink. This feature is useful on some Unix systems, where libraries are installed as a chain of symlinks with version numbers, with less specific versions pointing to more specific versions. &lt;code&gt;FOLLOW_SYMLINK_CHAIN&lt;/code&gt; will install all of these symlinks and the library itself into the destination directory. For example, if you have the following directory structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cc4c8edb76cd98e51bb2b38c54146170ff28a0" translate="yes" xml:space="preserve">
          <source>New in version 3.15: If the CMake generator is the &lt;code&gt;Green Hills MULTI&lt;/code&gt; and not overridden then the original project's settings for the GHS toolset and target system customization cache variables are propagated into the external project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84ce19713f3b3e471556477b84b3a1904fd9c4d" translate="yes" xml:space="preserve">
          <source>New in version 3.15: Non-library linker options reported by &lt;code&gt;pkg-config&lt;/code&gt; are stored in the &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d45a644b2ec8c2a50edf345bcfee67d2e722a1" translate="yes" xml:space="preserve">
          <source>New in version 3.15: The &lt;code&gt;Boost_VERSION_&amp;lt;PART&amp;gt;&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2c8313ef7a9cc31402ed4963620e495df62c12" translate="yes" xml:space="preserve">
          <source>New in version 3.16.</source>
          <target state="translated">버전 3.16의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="20fb34fc1f24549fe9a2d03527e104ecd65c0a62" translate="yes" xml:space="preserve">
          <source>New in version 3.16.7.</source>
          <target state="translated">버전 3.16.7의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="ea57005b6f30bee3d1148aa7a999ef3c9d6eb684" translate="yes" xml:space="preserve">
          <source>New in version 3.16.7: Added the &lt;code&gt;GTK2::harfbuzz&lt;/code&gt; target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbea0141699d4bbf6940d3fe70afa3a697d0d741" translate="yes" xml:space="preserve">
          <source>New in version 3.16: A target-level dependency is added if any dependency is listed as &lt;code&gt;BYPRODUCTS&lt;/code&gt; of a target or any of its build events in the same directory to ensure the byproducts will be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff0f025e67ad2dc564a6521d2fe86cce780cee6" translate="yes" xml:space="preserve">
          <source>New in version 3.16: Added &lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-1-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20ab2a56ab3daa6c5d610d33904e31402f34603" translate="yes" xml:space="preserve">
          <source>New in version 3.16: Added &lt;code&gt;CMAKE_FIND_USE_&amp;lt;CATEGORY&amp;gt;_PATH&lt;/code&gt; variables to globally disable various search locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459aa276a193134ab78935d1490af205c98c1ce7" translate="yes" xml:space="preserve">
          <source>New in version 3.16: Added &lt;code&gt;OBJC&lt;/code&gt; and &lt;code&gt;OBJCXX&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ef0ff8ea2775eb958d6de7742b964cc3df86d6" translate="yes" xml:space="preserve">
          <source>New in version 3.16: Added the &lt;code&gt;CMAKE_FIND_USE_&amp;lt;CATEGORY&amp;gt;_PATH&lt;/code&gt; variables to globally disable various search locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8d60bb1dc533cf1cf06f58f1160aad0318c468" translate="yes" xml:space="preserve">
          <source>New in version 3.16: If &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is set, the custom command defined by this function will create a stamp file with the name &lt;code&gt;&amp;lt;targetName&amp;gt;.stamp&lt;/code&gt; in the current binary directory whenever doxygen is re-run. With this option present, all items in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; must be files (i.e. no directories, symlinks or wildcards) and each of the files must exist at the time &lt;code&gt;doxygen_add_docs()&lt;/code&gt; is called. An error will be raised if any of the items listed is missing or is not a file when &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; is given. A dependency will be created on each of the files so that doxygen will only be re-run if one of the files is updated. Without the &lt;code&gt;USE_STAMP_FILE&lt;/code&gt; option, doxygen will always be re-run if the &lt;code&gt;&amp;lt;targetName&amp;gt;&lt;/code&gt; target is built regardless of whether anything listed in &lt;code&gt;&amp;lt;filesOrDirs&amp;gt;&lt;/code&gt; has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdc57d0edb1e1c739874e2257bf0bee1253c0d6" translate="yes" xml:space="preserve">
          <source>New in version 3.16: If a module is found, the &lt;code&gt;&amp;lt;prefix&amp;gt;_MODULE_NAME&lt;/code&gt; variable will contain the name of the matching module. This variable can be used if you need to run &lt;a href=&quot;#command:pkg_get_variable&quot; id=&quot;index-1-command:pkg_get_variable&quot;&gt;&lt;code&gt;pkg_get_variable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f58c35a5c930966ed4c3b91942c01011723788f" translate="yes" xml:space="preserve">
          <source>New in version 3.16: Messages of log levels &lt;code&gt;NOTICE&lt;/code&gt; and below will have each line preceded by the content of the &lt;a href=&quot;../variable/cmake_message_indent#variable:CMAKE_MESSAGE_INDENT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_INDENT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_INDENT&lt;/code&gt;&lt;/a&gt; variable (converted to a single string by concatenating its list items). For &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages, this indenting content will be inserted after the hyphens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0342a1b6aa4c306754dda9fc206dbac3141cdaad" translate="yes" xml:space="preserve">
          <source>New in version 3.16: NVIDA CUDA OpenCL library. Available for CUDA version 5+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8de1b6f90fcb9bd535d021d52579ebb42adc5ae" translate="yes" xml:space="preserve">
          <source>New in version 3.16: NVIDA CUDA Tools Extension library. Available for CUDA version 5+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f3cd5e46deb136605ddbcbab34f193f3ad287f" translate="yes" xml:space="preserve">
          <source>New in version 3.17.</source>
          <target state="translated">버전 3.17의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="2078aca75679c32364fd6d8bf5be4baec2d4c097" translate="yes" xml:space="preserve">
          <source>New in version 3.17: Added single dynamic library MKL variant (&lt;code&gt;Intel10_64_dyn&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178592f0dc9de85c2f9bb5ead4608e14f21dc31a" translate="yes" xml:space="preserve">
          <source>New in version 3.17: Added support for &lt;code&gt;conda&lt;/code&gt; environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d411d56fb10a5551b61058283c33c5c14b139d99" translate="yes" xml:space="preserve">
          <source>New in version 3.17: Added the &lt;code&gt;CMAKE_PROJECT_&amp;lt;PROJECT-NAME&amp;gt;_INCLUDE_BEFORE&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299ce68327b266d9e67b40395ec30b3621b8c4f0" translate="yes" xml:space="preserve">
          <source>New in version 3.17: For &lt;code&gt;MODULE&lt;/code&gt; library type, if option &lt;code&gt;WITH_SOABI&lt;/code&gt; is specified, the module suffix will include the &lt;code&gt;Python3_SOABI&lt;/code&gt; value, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa30061714a6a032193d29f884410438bdf30c6" translate="yes" xml:space="preserve">
          <source>New in version 3.17: For &lt;code&gt;MODULE&lt;/code&gt; library type, if option &lt;code&gt;WITH_SOABI&lt;/code&gt; is specified, the module suffix will include the &lt;code&gt;Python_SOABI&lt;/code&gt; value, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9e63b51a2e87ed683ce854b22d53008e9e8b02" translate="yes" xml:space="preserve">
          <source>New in version 3.17: Messages of log levels &lt;code&gt;NOTICE&lt;/code&gt; and below can also have each line preceded with context of the form &lt;code&gt;[some.context.example]&lt;/code&gt;. The content between the square brackets is obtained by converting the &lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt;&lt;/a&gt; list variable to a dot-separated string. The message context will always appear before any indenting content but after any automatically added leading hyphens. By default, message context is not shown, it has to be explicitly enabled by giving the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--log-context&lt;/code&gt; command-line option or by setting the &lt;a href=&quot;../variable/cmake_message_context_show#variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT_SHOW&lt;/code&gt;&lt;/a&gt; variable to true. See the &lt;a href=&quot;../variable/cmake_message_context#variable:CMAKE_MESSAGE_CONTEXT&quot; id=&quot;index-1-variable:CMAKE_MESSAGE_CONTEXT&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt;&lt;/a&gt; documentation for usage examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678158cf998aaa982194e65559b002563741a910" translate="yes" xml:space="preserve">
          <source>New in version 3.17: To find and use the CUDA toolkit libraries the &lt;a href=&quot;findcudatoolkit#module:FindCUDAToolkit&quot; id=&quot;index-0-module:FindCUDAToolkit&quot;&gt;&lt;code&gt;FindCUDAToolkit&lt;/code&gt;&lt;/a&gt; module has superseded this module. It works whether or not the &lt;code&gt;CUDA&lt;/code&gt; language is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3c17d4aab2ddf9609883f7d347eb4468db8007" translate="yes" xml:space="preserve">
          <source>New in version 3.17: To make a log level persist between CMake runs, the &lt;a href=&quot;../variable/cmake_message_log_level#variable:CMAKE_MESSAGE_LOG_LEVEL&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_LOG_LEVEL&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_LOG_LEVEL&lt;/code&gt;&lt;/a&gt; variable can be set instead. Note that the command line option takes precedence over the cache variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24edcc3fd523c085be8c8d9d6299f5a6aa8f3b0" translate="yes" xml:space="preserve">
          <source>New in version 3.18.</source>
          <target state="translated">버전 3.18의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="6ba3ff90e2ad0c591ff7ff155d6c537b3f1d64fb" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Added &lt;code&gt;ISPC&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbf0b499bbb4ec8c29258c759e72c0b222ca1e4" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Added support for &lt;code&gt;DOWNLOAD_NO_EXTRACT&lt;/code&gt; and &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694092906429ebb60bf73da65651922c24ac7363" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Added support to &lt;code&gt;file(UPLOAD)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883960a7f457de179e3d9f55a9a6f8752893964a" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Added the &lt;code&gt;COMPARE NATURAL&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48379d015ba1fb63c2db9bc7365162fd20dbf51b" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Added the &lt;code&gt;xcb&lt;/code&gt;, &lt;code&gt;X11-xcb&lt;/code&gt;, &lt;code&gt;xcb-icccm&lt;/code&gt;, &lt;code&gt;xcb-xkb&lt;/code&gt;, &lt;code&gt;xkbcommon&lt;/code&gt;, and &lt;code&gt;xkbcommon-X11&lt;/code&gt; libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2453682d86fa2c2325d2708ac3def1437ecdbcf" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Allow using forward slashes (&lt;code&gt;/&lt;/code&gt;) to specify subgroups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563b1a94fb3d921cad37f34bb16173e1494dff1d" translate="yes" xml:space="preserve">
          <source>New in version 3.18: An &lt;code&gt;ALIAS&lt;/code&gt; can target a non-&lt;code&gt;GLOBAL&lt;/code&gt; Imported Target. Such alias is scoped to the directory in which it is created and below. The &lt;a href=&quot;../prop_tgt/alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt;&lt;code&gt;ALIAS_GLOBAL&lt;/code&gt;&lt;/a&gt; target property can be used to check if the alias is global or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c2f7a1c417b03e3bca8177f97cd1063753124e" translate="yes" xml:space="preserve">
          <source>New in version 3.18: An &lt;code&gt;ALIAS&lt;/code&gt; can target a non-&lt;code&gt;GLOBAL&lt;/code&gt; Imported Target. Such alias is scoped to the directory in which it is created and subdirectories. The &lt;a href=&quot;../prop_tgt/alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt;&lt;code&gt;ALIAS_GLOBAL&lt;/code&gt;&lt;/a&gt; target property can be used to check if the alias is global or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801f8088de78a39f1a35c94abeb2fac31d35ef02" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Arm Performance Libraries support (&lt;code&gt;Arm&lt;/code&gt;, &lt;code&gt;Arm_mp&lt;/code&gt;, &lt;code&gt;Arm_ilp64&lt;/code&gt;, &lt;code&gt;Arm_ilp64_mp&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ede93ef812ede0906f02f41d37120b67d71e7b6" translate="yes" xml:space="preserve">
          <source>New in version 3.18: By default, source file properties are only visible to targets added in the same directory (&lt;code&gt;CMakeLists.txt&lt;/code&gt;). Visibility can be set in other directory scopes using one or both of the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4efa81c14e3139f1c0d1904c5109eab8d9d7a2d" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Directory scope can be overridden with one of the following sub-options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c145f34684d03a7132ed8e35518fd32c32eb9b9c" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Fortran language support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8dbf1b16a65e7620fd87aede80131f8dd556578" translate="yes" xml:space="preserve">
          <source>New in version 3.18: If a &lt;code&gt;COMPONENTS&lt;/code&gt; or &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; argument is given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command, it will also determine supported target languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f624402790f3acde73e2c6d0fe13ef9e8dfd366c" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Support for Lua 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a50ac1b9ff3ba4b4492732fbdb9a1fc5ad8cbc" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Support for OpenSSL 3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5299f271f6f8c5559cad8c204b54b5c47716f0" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Support for linking wrapped libraries directly (&lt;code&gt;ARMA_DONT_USE_WRAPPER&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb75224280c82c3faeb41108334a70182801f34d" translate="yes" xml:space="preserve">
          <source>New in version 3.18: The &lt;a href=&quot;cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(CALL ...)&lt;/code&gt;&lt;/a&gt; command can also be used to invoke the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b048d7dabd7659badff1873751153978fb0ea2" translate="yes" xml:space="preserve">
          <source>New in version 3.18: The &lt;a href=&quot;cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(CALL ...)&lt;/code&gt;&lt;/a&gt; command can also be used to invoke the macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319828dbb86ccdfb2305799a630fbb9a4959c9f0" translate="yes" xml:space="preserve">
          <source>New in version 3.18: The include directory for exslt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8014229320dcd5c708f51f8c0d87c9d51af6f016" translate="yes" xml:space="preserve">
          <source>New in version 3.18: This component includes two sub-components which can be specified independently:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78bf17e16e6719bbb78f2b6a0da7f7d27a05cad" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Use &lt;code&gt;CMAKE_OBJDUMP&lt;/code&gt; if set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f8f2ddff60e496dde5c454ee20057002df445c" translate="yes" xml:space="preserve">
          <source>New in version 3.18: Visibility can be set in other directory scopes using one or both of the following sub-options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483c8d5e5aa792b8dd74b8544bffc8772656e515" translate="yes" xml:space="preserve">
          <source>New in version 3.18: When a device link step is involved, which is controlled by &lt;a href=&quot;../prop_tgt/cuda_separable_compilation#prop_tgt:CUDA_SEPARABLE_COMPILATION&quot; id=&quot;index-0-prop_tgt:CUDA_SEPARABLE_COMPILATION&quot;&gt;&lt;code&gt;CUDA_SEPARABLE_COMPILATION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/cuda_resolve_device_symbols#prop_tgt:CUDA_RESOLVE_DEVICE_SYMBOLS&quot; id=&quot;index-0-prop_tgt:CUDA_RESOLVE_DEVICE_SYMBOLS&quot;&gt;&lt;code&gt;CUDA_RESOLVE_DEVICE_SYMBOLS&lt;/code&gt;&lt;/a&gt; properties and policy &lt;a href=&quot;../policy/cmp0105#policy:CMP0105&quot; id=&quot;index-0-policy:CMP0105&quot;&gt;&lt;code&gt;CMP0105&lt;/code&gt;&lt;/a&gt;, the raw options will be delivered to the host and device link steps (wrapped in &lt;code&gt;-Xcompiler&lt;/code&gt; or equivalent for device link). Options wrapped with &lt;code&gt;$&amp;lt;DEVICE_LINK:...&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; will be used only for the device link step. Options wrapped with &lt;code&gt;$&amp;lt;HOST_LINK:...&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; will be used only for the host link step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc6ced6a056ed16306ea2a0391f74668555f090" translate="yes" xml:space="preserve">
          <source>New in version 3.18: libraries needed to use ruby from C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa98888a3853dbd3082a0ec396ca4f586284b47e" translate="yes" xml:space="preserve">
          <source>New in version 3.19.</source>
          <target state="translated">버전 3.19의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="0022b6a2511040384439c57096d4193944600d75" translate="yes" xml:space="preserve">
          <source>New in version 3.19.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7215d0316363c56fea1004a34b3f7d41b3717f9" translate="yes" xml:space="preserve">
          <source>New in version 3.19.2: On Apple Silicon hosts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5758bf3e8d566e061e22dc939e8a4b4a0aec8134" translate="yes" xml:space="preserve">
          <source>New in version 3.19: &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; may reference a binary directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380c7e54eec8a53f439b3df7b6a9cb8d640caec2" translate="yes" xml:space="preserve">
          <source>New in version 3.19: &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; may reference a binary directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68125a51c0540f8c43b4ffeb56273a6d9497a13" translate="yes" xml:space="preserve">
          <source>New in version 3.19: &lt;code&gt;COMPATIBILITY_MODE&lt;/code&gt;&lt;code&gt;AnyNewerVersion&lt;/code&gt;, &lt;code&gt;SameMajorVersion&lt;/code&gt; and &lt;code&gt;SameMinorVersion&lt;/code&gt; handle the version range if any is specified (see &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command for the details). &lt;code&gt;ExactVersion&lt;/code&gt; mode is incompatible with version ranges and will display an author warning if one is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcc423ea2fee1b893153a648d0d715f1900c341" translate="yes" xml:space="preserve">
          <source>New in version 3.19: &lt;code&gt;FlexiBLAS&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15163bf8f4758844c036c084009766afc51be71" translate="yes" xml:space="preserve">
          <source>New in version 3.19: &lt;code&gt;bzip2&lt;/code&gt; and &lt;code&gt;zlib&lt;/code&gt; components on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ffe9ed4cadd9f4741fa5476c50f0c2a97f18e6" translate="yes" xml:space="preserve">
          <source>New in version 3.19: Added the &lt;code&gt;SDL_INCLUDE_DIRS&lt;/code&gt;, &lt;code&gt;SDL_LIBRARIES&lt;/code&gt; and &lt;code&gt;SDL_VERSION[_&amp;lt;PART&amp;gt;]&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9087698da7d79ba7b378074a2cb489bbc2465e73" translate="yes" xml:space="preserve">
          <source>New in version 3.19: Added the &lt;code&gt;Xaw&lt;/code&gt;, &lt;code&gt;xcb_util&lt;/code&gt;, and &lt;code&gt;xcb_xfixes&lt;/code&gt; libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d574067f520883cf1723a19a2bbfd1366fd76bf7" translate="yes" xml:space="preserve">
          <source>New in version 3.19: An interface library target may be created with source files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ea9281223ea0058d1d8900cc73b21f9674e0cf" translate="yes" xml:space="preserve">
          <source>New in version 3.19: If &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-5-policy:CMP0114&quot;&gt;&lt;code&gt;CMP0114&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;, step targets are fully responsible for holding the custom commands implementing their steps. The primary target created by &lt;code&gt;ExternalProject_Add&lt;/code&gt; depends on the step targets, and the step targets depend on each other. The target-level dependencies match the file-level dependencies used by the custom commands for each step. The targets for steps created with &lt;a href=&quot;#command:externalproject_add_step&quot; id=&quot;index-3-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;INDEPENDENT&lt;/code&gt; option do not depend on the external targets specified by &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-7-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;DEPENDS&lt;/code&gt; option. The predefined steps &lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;patch&lt;/code&gt; are independent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983d9a173787fead88b9995f2d2224768aac2c17" translate="yes" xml:space="preserve">
          <source>New in version 3.19: If &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; is not specified for &lt;code&gt;file(DOWNLOAD)&lt;/code&gt;, the file is not saved. This can be useful if you want to know if a file can be downloaded (for example, to check that it exists) without actually saving it anywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3111cdd28ba95dc54a009cdf030c7224955ca7" translate="yes" xml:space="preserve">
          <source>New in version 3.19: QNX support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b753092e9fc4719dc3c08993379c25e19329d686" translate="yes" xml:space="preserve">
          <source>New in version 3.19: The compression level can be specified with the &lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; option. The &lt;code&gt;&amp;lt;compression-level&amp;gt;&lt;/code&gt; should be between 0-9, with the default being 0. The &lt;code&gt;COMPRESSION&lt;/code&gt; option must be present when &lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b040d6ca4c1b1f9e548b683706f75e429d4e9a2" translate="yes" xml:space="preserve">
          <source>New in version 3.19: This module defines &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target &lt;code&gt;Vulkan::glslc&lt;/code&gt;, if Vulkan and the GLSLC SPIR-V compiler has been found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec328f1fa42abf825dabb71f7e428bab183dde8" translate="yes" xml:space="preserve">
          <source>New in version 3.19: When a version is requested, it can be specified as a simple value or as a range. For a detailed description of version range usage and capabilities, refer to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56052b55b4f456e9c0f9aa1c240a5c202b8a929f" translate="yes" xml:space="preserve">
          <source>New in version 3.19: When a version is requested, it can be specified as a simple value or as a range. For a detailed description of version range usage and capabilities, refer to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87c82f983df32bd2ff95cf26f1e92561805634a" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Added support for &lt;code&gt;tbz2&lt;/code&gt;, &lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.txz&lt;/code&gt;, and &lt;code&gt;.7z&lt;/code&gt; extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb381958c42c43f3ec05efc152fff2c324a2d41" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Arguments to &lt;code&gt;DEPENDS&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3494893c2c8f39690ef6bf94c8f539fb125affe" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Command signatures that install files may print messages during installation. Use the &lt;a href=&quot;../variable/cmake_install_message#variable:CMAKE_INSTALL_MESSAGE&quot; id=&quot;index-0-variable:CMAKE_INSTALL_MESSAGE&quot;&gt;&lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt;&lt;/a&gt; variable to control which messages are printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a291f2a4ccebe43ea208050c805616dafead890c" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Go and Lua language support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc47ecb1156627bedc295d8ddb1d03cb0f3570f0" translate="yes" xml:space="preserve">
          <source>New in version 3.1: If the &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; argument is passed, this is used as base path to calculate all the relative paths. The &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; argument must be an absolute path. If this argument is not passed, the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable will be used instead. The default value is good when generating a FooConfig.cmake file to use your package from the install tree. When generating a FooConfig.cmake file to use your package from the build tree this option should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62519667a752b230ef6a8404ca2b083b92d1646e" translate="yes" xml:space="preserve">
          <source>New in version 3.1: If the command line client executable is found the following macro is defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df98786957cdfcdce186cd7df076072fd8ebe8a" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Library target can be an &lt;code&gt;OBJECT&lt;/code&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57119b6835c63ebd928100b94eb3a46b1cc676c" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Source arguments to &lt;code&gt;add_executable&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d5d2cfd5a6bd99190872b4f2e44a517a99aee8" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Source arguments to &lt;code&gt;add_library&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78777be167cfe3770bd6ed205c8d22f774eb74df" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_framework_path#variable:CMAKE_FRAMEWORK_PATH&quot; id=&quot;index-0-variable:CMAKE_FRAMEWORK_PATH&quot;&gt;&lt;code&gt;CMAKE_FRAMEWORK_PATH&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../variable/cmake_appbundle_path#variable:CMAKE_APPBUNDLE_PATH&quot; id=&quot;index-0-variable:CMAKE_APPBUNDLE_PATH&quot;&gt;&lt;code&gt;CMAKE_APPBUNDLE_PATH&lt;/code&gt;&lt;/a&gt; cache and environment variables will be added to the &lt;code&gt;pkg-config&lt;/code&gt; search path. The &lt;code&gt;NO_CMAKE_PATH&lt;/code&gt; and &lt;code&gt;NO_CMAKE_ENVIRONMENT_PATH&lt;/code&gt; arguments disable this behavior for the cache variables and environment variables respectively. The &lt;a href=&quot;#variable:PKG_CONFIG_USE_CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:PKG_CONFIG_USE_CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;PKG_CONFIG_USE_CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; variable set to &lt;code&gt;FALSE&lt;/code&gt; disables this behavior globally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185f208b236c1d46966e6c682955c2058a4b6d21" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;MESSAGE_NEVER&lt;/code&gt; option disables file installation status output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e54f4404aaa6675f4c705859f98b2b43494687" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;PKG_CONFIG&lt;/code&gt; environment variable can be used as a hint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c38248ddf67f89278bd7191b292c7bc336a3268" translate="yes" xml:space="preserve">
          <source>New in version 3.1: execute quietly without messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec3464ceeab8cf46a16efea3d5d6d17ad876e19" translate="yes" xml:space="preserve">
          <source>New in version 3.2.</source>
          <target state="translated">버전 3.2의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="8c3a1d558bd791f56e84415812aeae353da08345" translate="yes" xml:space="preserve">
          <source>New in version 3.20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a581910f3d20a10842e9dbae8b7e270bd8abd5e9" translate="yes" xml:space="preserve">
          <source>New in version 3.20: &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; can be a custom target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb613e28f3540d1c07d6a97e08cf07ed0247526" translate="yes" xml:space="preserve">
          <source>New in version 3.20: &lt;code&gt;DESTINATION&lt;/code&gt; sub-option now supports the possibility to specify different output directories for &lt;code&gt;BUILD&lt;/code&gt; and &lt;code&gt;INSTALL&lt;/code&gt; steps. This is required to export the interface target generated by &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; option. If &lt;code&gt;BUILD&lt;/code&gt; directory is not specified, a default directory will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c7c2377577ffc020837fd640dbce26f97987c0" translate="yes" xml:space="preserve">
          <source>New in version 3.20: &lt;code&gt;add_custom_command&lt;/code&gt; supports the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt; generator's cross-config capabilities. See the generator documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038198b45391d1f03e862ad147d050f36cc48758" translate="yes" xml:space="preserve">
          <source>New in version 3.20: &lt;code&gt;add_custom_target&lt;/code&gt; supports the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt; generator's cross-config capabilities. See the generator documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bd4b63511b5849d381f5ccf3eae0d5a64a385a" translate="yes" xml:space="preserve">
          <source>New in version 3.20: Added the &lt;code&gt;Intl_HAVE_GETTEXT_BUILTIN&lt;/code&gt;, &lt;code&gt;Intl_HAVE_DCGETTEXT_BUILTIN&lt;/code&gt; and &lt;code&gt;Intl_IS_BUILTIN&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530612a30f70b22be46318799adba5a0e49773b4" translate="yes" xml:space="preserve">
          <source>New in version 3.20: Added the support of &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a53447d4b78db5d88540d45a69def0ba1423031" translate="yes" xml:space="preserve">
          <source>New in version 3.20: An install rename given as a &lt;code&gt;RENAME&lt;/code&gt; argument may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9c4b3578d6d56465834a37606cab5435b99faf" translate="yes" xml:space="preserve">
          <source>New in version 3.20: Arguments to &lt;code&gt;BYPRODUCTS&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e110ab5f034fd585b29b4270f2123d498f74b025" translate="yes" xml:space="preserve">
          <source>New in version 3.20: Arguments to &lt;code&gt;OUTPUT&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a14347dc39d9eadbc6286ce0b2c0ee420f48f9d" translate="yes" xml:space="preserve">
          <source>New in version 3.20: Elbrus Math Library support (&lt;code&gt;EML&lt;/code&gt;, &lt;code&gt;EML_mt&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6549c1ca923bd09a9796c77ee49c06995150aa" translate="yes" xml:space="preserve">
          <source>New in version 3.20: If an Android NDK is selected, its version number is reported in the &lt;a href=&quot;../variable/cmake_android_ndk_version#variable:CMAKE_ANDROID_NDK_VERSION&quot; id=&quot;index-0-variable:CMAKE_ANDROID_NDK_VERSION&quot;&gt;&lt;code&gt;CMAKE_ANDROID_NDK_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b7081836238acabfafb055cd375baf047d6f03" translate="yes" xml:space="preserve">
          <source>New in version 3.20: It is now possible to export the target generated by &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2fd3a4a7c994986b21f731dcf2aa29f0bb6e4a" translate="yes" xml:space="preserve">
          <source>New in version 3.20: One may use generator expressions to specify per-configuration byproducts. For example, the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3426e59247bb4370c61fb48326f67af03ccfa0ce" translate="yes" xml:space="preserve">
          <source>New in version 3.20: One may use generator expressions to specify per-configuration outputs. For example, the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326a45ee088245ca44c6f692c8fcf704a25c2514" translate="yes" xml:space="preserve">
          <source>New in version 3.20: The &lt;code&gt;SHOW_PROGRESS&lt;/code&gt; argument may be passed to suppress progress information during the download of objects. If not provided, it defaults to &lt;code&gt;OFF&lt;/code&gt; for &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt; generators and &lt;code&gt;ON&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612a6c94b1df98b659ec106597361701994641ff" translate="yes" xml:space="preserve">
          <source>New in version 3.20: The target generated by option &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; has the property &lt;code&gt;NATIVE_HEADERS_DIRECTORY&lt;/code&gt; which specify the directory holding the native headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b37ddd758a80ed9b1192f3017750ab8fa0cd66" translate="yes" xml:space="preserve">
          <source>New in version 3.20: This module defines &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target &lt;code&gt;Intl::Intl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bca408665e7ef5dd44c2c44ea4bca426cbdf3cc" translate="yes" xml:space="preserve">
          <source>New in version 3.20: This module defines the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029b89d54e3f538e1f53faa0986fdc8ac4fd24e5" translate="yes" xml:space="preserve">
          <source>New in version 3.20: Upstream &lt;code&gt;GTestConfig.cmake&lt;/code&gt; is used if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f2935f92759d9ee802791ad1c99d1bb5c109d2" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added &lt;code&gt;MSVC&lt;/code&gt; and &lt;code&gt;AppleClang&lt;/code&gt; compiler support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e54dd82794519d039f36322ff8556cb0a16089" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added the &lt;code&gt;UTF-16LE&lt;/code&gt;, &lt;code&gt;UTF-16BE&lt;/code&gt;, &lt;code&gt;UTF-32LE&lt;/code&gt;, &lt;code&gt;UTF-32BE&lt;/code&gt; encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bc93edc5b8fc3c25d2e3e29da6428f57007178" translate="yes" xml:space="preserve">
          <source>New in version 3.2: CUDA Direct Solver library. Only available for CUDA version 7.0+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f63c40dc6894122be02379595858130033bc216" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Component processing; support for htlatex, pdftops, Biber, xindy, XeLaTeX, LuaLaTeX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932783e86fb6da28aab4fa595a508be14542b31f" translate="yes" xml:space="preserve">
          <source>New in version 3.2: If you wish to use the Gettext library (libintl), use &lt;a href=&quot;findintl#module:FindIntl&quot; id=&quot;index-0-module:FindIntl&quot;&gt;&lt;code&gt;FindIntl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94731f599221675776160251408a6fb85fafae80" translate="yes" xml:space="preserve">
          <source>New in version 3.2: R language support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e656aeccfdd3bd906cae00fa7c0478f89eb5d3a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3.</source>
          <target state="translated">버전 3.3의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="ab7413ef587cf0e52b5cf9ab9058328bc0e00304" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for the &lt;a href=&quot;../variable/ctest_custom_coverage_exclude#variable:CTEST_CUSTOM_COVERAGE_EXCLUDE&quot; id=&quot;index-0-variable:CTEST_CUSTOM_COVERAGE_EXCLUDE&quot;&gt;&lt;code&gt;CTEST_CUSTOM_COVERAGE_EXCLUDE&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297f24965e44dd8117242e326161fd1c524a2486" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Allow adding dependencies to interface libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2abc182ed3ef22a75b2ec8b1b89b8c0b3c45ed1" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Allow exporting targets with &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-1-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7882a44d86d5bb6663c1106b33214b03502f92" translate="yes" xml:space="preserve">
          <source>New in version 3.3: An install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f779b0652d99bd7708b228f12ac9abf2dbc7c9f" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Arguments may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e884c747e9a525c95f7a7817e9fb970724b27b0b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Arguments may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f02e69b65b02d568c626ef91c908aa799d90115" translate="yes" xml:space="preserve">
          <source>New in version 3.3: By default &lt;code&gt;GLOB&lt;/code&gt; lists directories - directories are omitted in result if &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; is set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf9888caf5b85609030b086b3f117d6bb1db248" translate="yes" xml:space="preserve">
          <source>New in version 3.3: By default &lt;code&gt;GLOB_RECURSE&lt;/code&gt; omits directories from result list - setting &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; to true adds directories to result list. If &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; is given or policy &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-1-policy:CMP0009&quot;&gt;&lt;code&gt;CMP0009&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt; then &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; treats symlinks as directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90f834901475ea11016ad301dc92cd3e658db38" translate="yes" xml:space="preserve">
          <source>New in version 3.3: HDF5 library version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7d3bf84377e4fab984611d4f9e968954af0364" translate="yes" xml:space="preserve">
          <source>New in version 3.3: If the same file is named for both output and error then it will be used for both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7955690ce63752bc60d8b6f9b9f73197d80bd907" translate="yes" xml:space="preserve">
          <source>New in version 3.3: In order to match associated files in subdirectories, specify a &lt;code&gt;RECURSE:&lt;/code&gt; option, e.g. &lt;code&gt;DATA{MyDataDir/,RECURSE:,REGEX:.*}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a63e7046882ebdd144acbf58fe94d0d17ce368" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Per-configuration variables &lt;code&gt;Boost_LIBRARY_DIR_RELEASE&lt;/code&gt; and &lt;code&gt;Boost_LIBRARY_DIR_DEBUG&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e66536e62d54ca4655b92c3c1160d5ff352783a" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Token replacement is extended to byproducts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e4d60778dd37453229943aa9a66d66016de497" translate="yes" xml:space="preserve">
          <source>New in version 3.3: True if the given element is contained in the named list variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127554a7dd0b598c7149d635d442aafaf4bb333c" translate="yes" xml:space="preserve">
          <source>New in version 3.3: True if the given name is an existing test name created by the &lt;a href=&quot;add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe19448809286256c1a233b4614ff579882deee" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Use &lt;code&gt;CMAKE_CROSSCOMPILING_EMULATOR&lt;/code&gt; when running cross-compiled binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41224dc3ad1482785fdd83d4be25d59287870563" translate="yes" xml:space="preserve">
          <source>New in version 3.4.</source>
          <target state="translated">버전 3.4의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="d7b454ce1aa7b819e1541e52cc8830773231c016" translate="yes" xml:space="preserve">
          <source>New in version 3.4: Added the &lt;code&gt;Java_IDLJ_EXECUTABLE&lt;/code&gt; and &lt;code&gt;Java_JARSIGNER_EXECUTABLE&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87abd318a842fa43f0f4cf551e210a06df546737" translate="yes" xml:space="preserve">
          <source>New in version 3.4: An install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ce5e9c8768d7f60bbadc43decb4449c1b9b917" translate="yes" xml:space="preserve">
          <source>New in version 3.4: An install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2d5d00d36a2c417e4ba6d599c8d85fbcfed42f" translate="yes" xml:space="preserve">
          <source>New in version 3.4: Debug and Release variants are found separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae49dc1b553441b99e2154ce4190ca2a0277d63f" translate="yes" xml:space="preserve">
          <source>New in version 3.4: If set, the following variables are passed in to the generated try_compile CMakeLists.txt to initialize compile target properties with default values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7aeabb12ead051c807bdba0473b99e86cc7f7a6" translate="yes" xml:space="preserve">
          <source>New in version 3.4: Imported targets for components and most &lt;code&gt;EXECUTABLE&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022aa57ad60959ac5a9c659733e8b4578e1f6ffa" translate="yes" xml:space="preserve">
          <source>New in version 3.4: Set &lt;code&gt;OPENSSL_USE_STATIC_LIBS&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt; to look for static libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110b6711d87c7b28ea9ce776c24b8a15d1e9dbaa" translate="yes" xml:space="preserve">
          <source>New in version 3.4: Support for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; version argument; &lt;code&gt;webview&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eeb4567fe3bd32e00fc0292a5dd2e75414b8243" translate="yes" xml:space="preserve">
          <source>New in version 3.4: Support for response files (prefixed by &lt;code&gt;@&lt;/code&gt;) in the &lt;code&gt;SOURCES&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846149b89327c293a452259daf44c1bb28ea590d" translate="yes" xml:space="preserve">
          <source>New in version 3.4: The second signature with &lt;code&gt;DESTINATION&lt;/code&gt; and &lt;code&gt;COMPONENT&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f837cd28063a6c218f31e72720b5003175aed01" translate="yes" xml:space="preserve">
          <source>New in version 3.5.</source>
          <target state="translated">버전 3.5의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="e5085133bae0cfcacbdf25e3050c3157176b5c3d" translate="yes" xml:space="preserve">
          <source>New in version 3.5: All imported targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a6e92b2c9f6d59045231f6fc998722004081ae" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Clang support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb298bddfab8363d089b7d0457d349493078644" translate="yes" xml:space="preserve">
          <source>New in version 3.5: If flex is configured to output a header file, the &lt;code&gt;DEFINES_FILE&lt;/code&gt; option may be used to specify its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d90d9fd5cc04ee1ca2c84dd87c3e88d9cbfc94" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Set &lt;code&gt;OPENSSL_MSVC_STATIC_RT&lt;/code&gt; set &lt;code&gt;TRUE&lt;/code&gt; to choose the MT version of the lib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb297b06ed0f510115fe90c98b243c6deb6662f" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The list of &lt;code&gt;dirs...&lt;/code&gt; given to &lt;code&gt;DIRECTORY&lt;/code&gt; may use &quot;generator expressions&quot; too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2c9bf0ab9e190d68820aea71c6686ef1f60723" translate="yes" xml:space="preserve">
          <source>New in version 3.5: This command is implemented natively. Previously, it has been defined in the module &lt;a href=&quot;../module/cmakeparsearguments#module:CMakeParseArguments&quot; id=&quot;index-0-module:CMakeParseArguments&quot;&gt;&lt;code&gt;CMakeParseArguments&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119544aebacbeb285ebe96cdf8a3ec0c224c309e" translate="yes" xml:space="preserve">
          <source>New in version 3.5: When &lt;code&gt;GTK2_USE_IMPORTED_TARGETS&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;GTK2_LIBRARIES&lt;/code&gt; will list imported targets instead of library paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bf2295406fe646f85406c7590ce23f4c62ad62" translate="yes" xml:space="preserve">
          <source>New in version 3.6.</source>
          <target state="translated">버전 3.6의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="f97e318888495add16a0707b8af3f955ba326240" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;%s&lt;/code&gt; format specifier (UNIX time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf87baa347d10a28878b3c718d602b3276a3762d" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;OpenBLAS&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cace889dca6c7676e01bc639ee42b76ff4367da" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added &lt;code&gt;Intel&lt;/code&gt; compiler support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b0d338bf2ca6464d4a83c59ff85b47822477d0" translate="yes" xml:space="preserve">
          <source>New in version 3.6: As an optional parameter (&lt;code&gt;IGNORE_ITEM&lt;/code&gt;) a list of file names can be passed, which are then ignored (e.g. &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6521949d06d4bf5e8e2622d4e480493eec37b847" translate="yes" xml:space="preserve">
          <source>New in version 3.6: As an optional parameter (&lt;code&gt;IGNORE_ITEM&lt;/code&gt;) a list of file names can be passed, which are then ignored (e.g. &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe90d437d4720bcb404aaa8ac3662531ddbf318" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Contents of these variables may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15d198b14716afbcc21dab19d83bc95df6d9a1f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Set the &lt;a href=&quot;../variable/cmake_try_compile_platform_variables#variable:CMAKE_TRY_COMPILE_PLATFORM_VARIABLES&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_PLATFORM_VARIABLES&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_PLATFORM_VARIABLES&lt;/code&gt;&lt;/a&gt; variable to specify variables that must be propagated into the test project. This variable is meant for use only in toolchain files and is only honored by the &lt;code&gt;try_compile()&lt;/code&gt; command for the source files form, not when given a whole project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb812db9de89e300c8834bba93eb4fad2d10c8fc" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Set the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-4-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable to specify the type of target used for the source file signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f84090168ea0b4610948ccf076fdbeed7190db9" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Support for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; version checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d97474c0ebba873efb43ac59b4b5d800afd06f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Support for new libarchive 3.2 version string format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083c4f1922df0d025d46688c3decac977af80f13" translate="yes" xml:space="preserve">
          <source>New in version 3.6: The &lt;code&gt;IMPORTED_TARGET&lt;/code&gt; argument will create an imported target named &lt;code&gt;PkgConfig::&amp;lt;prefix&amp;gt;&lt;/code&gt; that can be passed directly as an argument to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377db012074272424f9c9e267a12bfb2a494baf5" translate="yes" xml:space="preserve">
          <source>New in version 3.6: The target is being cross-compiled and an emulator is provided (i.e. its &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; target property is set). In this case, the contents of &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-1-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; will be prepended to the command before the location of the target executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa49b507b223a3ba07fe7912647242a50dac5e3" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Whether a short float (&lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;fp16&lt;/code&gt;) is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd28c614713bbf071342d57c2928588052675b48" translate="yes" xml:space="preserve">
          <source>New in version 3.7.</source>
          <target state="translated">버전 3.7의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="ab8b0d832441ec9f8afe55c3080968bfbf5d3b44" translate="yes" xml:space="preserve">
          <source>New in version 3.7.1.</source>
          <target state="translated">버전 3.7.1의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="2b6166f955ff3af81f0540fe58bf420ba30dde50" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;%A&lt;/code&gt; and &lt;code&gt;%B&lt;/code&gt; format specifiers (full month and weekday names).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbbb13adb49836535574e57b1720a09d37342f8" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;%a&lt;/code&gt; and &lt;code&gt;%b&lt;/code&gt; format specifiers (abbreviated month and weekday names).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253c8f847359296b977ffef2840ab1aa382041e1" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;bzip2&lt;/code&gt; and &lt;code&gt;zlib&lt;/code&gt; components (Windows only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e90275249850cedde1dc8bc8de55ddcf38baa81" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;code&gt;CUSTOM_CONTENT_FROM_VARIABLE&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b53143d7df227c3cbc19b8b77ef6bd12f676c5" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;code&gt;LESS_EQUAL&lt;/code&gt; and &lt;code&gt;GREATER_EQUAL&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad533f82b87974307bebf291381009b896ffe7d" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;code&gt;MAT_LIBRARY&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3cdb8938377a4e0a256fb92d83a9033d91812e" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Component-wise integer version number comparison (version format is &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt;, omitted components are treated as zero). Any non-integer version component or non-integer trailing part of a version component effectively truncates the string at that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7603b45970d5e37c03a280af9cb96c6eb877cf9a" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Debug and Release variants are found separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6da96c6a9a05ed000a3337e89bd25e8a2c94b25" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Device runtime library. Required for separable compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b43f1cec94cf110565c72c6d268e0ccf8251c6" translate="yes" xml:space="preserve">
          <source>New in version 3.7: In addition to cmake language files, the &lt;code&gt;EXPORT_ANDROID_MK&lt;/code&gt; mode maybe used to specify an export to the android ndk build system. This mode accepts the same options as the normal export mode. The Android NDK supports the use of prebuilt libraries, both static and shared. This allows cmake to build the libraries of a project and make them available to an ndk build system complete with transitive dependencies, include flags and defines required to use the libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea79d5aa204a7d359f76aa6853c7fc82be796d2" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The &lt;code&gt;PARSE_ARGV&lt;/code&gt; signature is only for use in a &lt;a href=&quot;function#command:function&quot; id=&quot;index-1-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; body. In this case the arguments that are parsed come from the &lt;code&gt;ARGV#&lt;/code&gt; variables of the calling function. The parsing starts with the &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt;-th argument, where &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt; is an unsigned integer. This allows for the values to have special characters like &lt;code&gt;;&lt;/code&gt; in them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdf2ff9dafc52c9ac68d177a97d9a2dcd43d3e2" translate="yes" xml:space="preserve">
          <source>New in version 3.7: True if the given string or variable's value is a valid number and greater than or equal to that on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72857a92540de4605724a3753e0437c1470dabd" translate="yes" xml:space="preserve">
          <source>New in version 3.7: True if the given string or variable's value is a valid number and less than or equal to that on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4625ea6ca7d21ab955526ba6b7cb09cd1e45d1" translate="yes" xml:space="preserve">
          <source>New in version 3.7: True if the given string or variable's value is lexicographically greater than or equal to the string or variable on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1c23522c092ffd7dda94530c05a9e226fce9f3" translate="yes" xml:space="preserve">
          <source>New in version 3.7: True if the given string or variable's value is lexicographically less than or equal to the string or variable on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47b26a1d8dd776fc7c16b2a5c0deac1fe3b72d5" translate="yes" xml:space="preserve">
          <source>New in version 3.8.</source>
          <target state="translated">버전 3.8의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="966b86c283e313eae7da855226bb7846d964050f" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;code&gt;%%&lt;/code&gt; specifier (literal &lt;code&gt;%&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dd1b4f88598cd23b127771eca95843b9640d35" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;code&gt;ALLOW_UNKNOWN_COMPILERS&lt;/code&gt; and &lt;code&gt;ALLOW_UNKNOWN_COMPILER_VERSIONS&lt;/code&gt; cause the module to generate conditions that treat unknown compilers as simply lacking all features. Without these options the default behavior is to generate a &lt;code&gt;#error&lt;/code&gt; for unknown compilers and versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abe0965674f8d9683a0736a8bc368ab22ab94bf" translate="yes" xml:space="preserve">
          <source>New in version 3.8: A &lt;code&gt;STATIC&lt;/code&gt; library may be marked with the &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-1-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property to create a static Framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016650345f7c555d713920bac80fa60316e403de" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added &lt;code&gt;CUDA&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f68b2ce9eb53174dc8f8ddf5e46d3ba26d922b" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;code&gt;RETRY_COUNT&lt;/code&gt;, &lt;code&gt;RETRY_DELAY&lt;/code&gt;, &lt;code&gt;QUIET&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9b7776982eac159f3b9140afcc9a357455c3c9" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;code&gt;SHA3_*&lt;/code&gt; hash algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a053966637312c9170c17fc5d8bd233526aee1" translate="yes" xml:space="preserve">
          <source>New in version 3.8: If CTEST_USE_LAUNCHERS is on in a ctest -S script the ctest_configure command will add -DCTEST_USE_LAUNCHERS:BOOL=TRUE to the cmake command used to configure the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e8173a12d7e9e804064c49611a0d7ae502dec5" translate="yes" xml:space="preserve">
          <source>New in version 3.8: If the &lt;code&gt;QUIET_ON_EMPTY&lt;/code&gt; option is used, if only one type of package was requested, and no packages belonging to that category were found, then no output (including the &lt;code&gt;DESCRIPTION&lt;/code&gt;) is printed or added to the &lt;code&gt;VAR&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85bdd490d71183de450d805f0fca355fbdb70ed" translate="yes" xml:space="preserve">
          <source>New in version 3.8: If the &lt;code&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set, its value will be used instead of the current time. See &lt;a href=&quot;https://reproducible-builds.org/specs/source-date-epoch/&quot;&gt;https://reproducible-builds.org/specs/source-date-epoch/&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302b715c3eed368f8f062ad8606c8b94c47ed120" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Multiple content links of the same name with different hash algorithms are supported (e.g. &lt;code&gt;img.png.sha256&lt;/code&gt; and &lt;code&gt;img.png.sha1&lt;/code&gt;) so long as they all correspond to the same real file. This allows objects to be fetched from sources indexed by different hash algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96af0ad3b6f20e6161f93bdca9c6157f5d29dfd7" translate="yes" xml:space="preserve">
          <source>New in version 3.8: On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above, library files ending in &lt;code&gt;.targets&lt;/code&gt; will be treated as MSBuild targets files and imported into generated project files. This is not supported by other generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d32fcf91915e623de562b2552462516032461ba" translate="yes" xml:space="preserve">
          <source>New in version 3.9.</source>
          <target state="translated">버전 3.9의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="3930628f90f0fd66d26640b65967bba95b9be130" translate="yes" xml:space="preserve">
          <source>New in version 3.9.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160f0bcebe9740bb3b6eb3274aa616c58f914f01" translate="yes" xml:space="preserve">
          <source>New in version 3.9: &lt;code&gt;()&lt;/code&gt; groups are captured in &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54314ee6a3de429574ec5cdf7aee72d4fcc67b3c" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added support for ImageMagick 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3038f49b8f05a0413a8385ff3b730b12388aa8d6" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added the &lt;code&gt;HTTPHEADER&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3dea87d384ab13f8d7dd5ce5eaddac9fcb913b" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Additionally, the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbb89c02fc4ad45cdeed20113e80a5df347a030" translate="yes" xml:space="preserve">
          <source>New in version 3.9: All regular expression-related commands, including e.g. &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(MATCHES)&lt;/code&gt;&lt;/a&gt;, save subgroup matches in the variables &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; for &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 0..9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c56be5e0aaa57a30f5d763ccd6429d45b0c3694" translate="yes" xml:space="preserve">
          <source>New in version 3.9: If the imported project has different configuration names than the current project, set the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property to specify the mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b5fae59310355f0b11b4d13fe49a8b41c2d093" translate="yes" xml:space="preserve">
          <source>New in version 3.9: One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cc68e386e0881158eb15e8dcfe1de9aa243a8e" translate="yes" xml:space="preserve">
          <source>New in version 3.9: The &lt;code&gt;DEFAULT_DESCRIPTION&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef72a6596b9e23c52d6757333d1e7dca64e7819a" translate="yes" xml:space="preserve">
          <source>New in version 3.9: The &lt;code&gt;NAMESPACE&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2585de04e15c5ec64cd413083995bded31599954" translate="yes" xml:space="preserve">
          <source>New in version 3.9: The following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are also defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75946c777cfe72f1c00c568a457f7a56fd8e7f1f" translate="yes" xml:space="preserve">
          <source>New in version 3.9: The module defines &lt;code&gt;IMPORTED&lt;/code&gt; targets for Doxygen and each component found. These can be used as part of custom commands, etc. and should be preferred over old-style (and now deprecated) variables like &lt;code&gt;DOXYGEN_EXECUTABLE&lt;/code&gt;. The following import targets are defined if their corresponding executable could be found (the component import targets will only be defined if that component was requested):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228b51ff689fe86d69900e7745b2a5fda0d30b7c" translate="yes" xml:space="preserve">
          <source>New in version 3.9: These tools are available as components in the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492dfc0f58f09c4c738aa7e0b569bfd7f5228407" translate="yes" xml:space="preserve">
          <source>New in version 3.9: run-time variable data (&lt;code&gt;LOCALSTATEDIR/run&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506e4ea1bc2ec2438e22280017e459faca57e8e6" translate="yes" xml:space="preserve">
          <source>Next configuration will install fat 5 architectures iOS library and add the &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt;/&lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; flags to the compiler:</source>
          <target state="translated">다음 구성은 fat 5 아키텍처 iOS 라이브러리를 설치하고 &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt; / &lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; 플래그를 컴파일러에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4031ab6e5aaf91916714903b8be0bef6c21262cc" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s add some C++11 features to our project by replacing &lt;code&gt;atof&lt;/code&gt; with &lt;code&gt;std::stod&lt;/code&gt; in &lt;code&gt;tutorial.cxx&lt;/code&gt;. At the same time, remove &lt;code&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">다음 으로 &lt;code&gt;tutorial.cxx&lt;/code&gt; 에서 &lt;code&gt;atof&lt;/code&gt; 를 &lt;code&gt;std::stod&lt;/code&gt; 로 대체하여 프로젝트에 C ++ 11 기능을 추가해 보겠습니다 . 동시에 &lt;code&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/code&gt; 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="9947ccb82745869da192e11d32987a756be7756f" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s test our application. At the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file we can enable testing and then add a number of basic tests to verify that the application is working correctly.</source>
          <target state="translated">다음으로 애플리케이션을 테스트 해 보겠습니다. 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 의 끝에서 테스트를 활성화 한 다음 여러 기본 테스트를 추가하여 애플리케이션이 올바르게 작동하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5109c27f11fa02a882f4129d959329346f6e69b4" translate="yes" xml:space="preserve">
          <source>Next let's add some C++11 features to our project by replacing &lt;code&gt;atof&lt;/code&gt; with &lt;code&gt;std::stod&lt;/code&gt; in &lt;code&gt;tutorial.cxx&lt;/code&gt;. At the same time, remove &lt;code&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60be0707809795a981277bd101b887d6f4bfc34" translate="yes" xml:space="preserve">
          <source>Next let's test our application. At the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file we can enable testing and then add a number of basic tests to verify that the application is working correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450d113b18848c5aab368bbf316b959fb18682fe" translate="yes" xml:space="preserve">
          <source>Next modify &lt;code&gt;tutorial.cxx&lt;/code&gt; to include the configured header file, &lt;code&gt;TutorialConfig.h&lt;/code&gt;.</source>
          <target state="translated">다음으로 구성된 헤더 파일 &lt;code&gt;TutorialConfig.h&lt;/code&gt; 를 포함 하도록 &lt;code&gt;tutorial.cxx&lt;/code&gt; 를 수정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf6a9a8ffbb1178b334798db8e9f112f0742270e" translate="yes" xml:space="preserve">
          <source>Next suppose that we want to distribute our project to other people so that they can use it. We want to provide both binary and source distributions on a variety of platforms. This is a little different from the install we did previously in &lt;a href=&quot;#installing-and-testing-step-4&quot;&gt;Installing and Testing (Step 4)&lt;/a&gt; , where we were installing the binaries that we had built from the source code. In this example we will be building installation packages that support binary installations and package management features. To accomplish this we will use CPack to create platform specific installers. Specifically we need to add a few lines to the bottom of our top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">다음으로 우리의 프로젝트를 다른 사람들이 사용할 수 있도록 배포한다고 가정합니다. 다양한 플랫폼에서 바이너리 및 소스 배포판을 모두 제공하고자합니다. 이것은 이전에 &lt;a href=&quot;#installing-and-testing-step-4&quot;&gt;설치 및 테스트 (4 단계)&lt;/a&gt; 에서 수행 한 설치와 약간 다릅니다 . 여기서는 소스 코드에서 빌드 한 바이너리를 설치했습니다. 이 예에서는 바이너리 설치 및 패키지 관리 기능을 지원하는 설치 패키지를 빌드합니다. 이를 위해 CPack을 사용하여 플랫폼 별 설치 프로그램을 만듭니다. 특히 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 의 맨 아래에 몇 줄을 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b3133c623afca64a82ddd540b09074c7891b0d94" translate="yes" xml:space="preserve">
          <source>Next we add the desired compiler warning flags that we want for our project. As warning flags vary based on the compiler we use the &lt;code&gt;COMPILE_LANG_AND_ID&lt;/code&gt; generator expression to control which flags to apply given a language and a set of compiler ids as seen below:</source>
          <target state="translated">다음으로 프로젝트에 원하는 컴파일러 경고 플래그를 추가합니다. 경고 플래그는 컴파일러에 따라 다르므로 &lt;code&gt;COMPILE_LANG_AND_ID&lt;/code&gt; 생성기 표현식을 사용하여 다음 과 같이 주어진 언어 및 컴파일러 ID 집합에 적용 할 플래그를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="eac03c9953893c622049de638a554b542704b07f" translate="yes" xml:space="preserve">
          <source>Next we are going to refactor MathFunctions to become a real library that encapsulates using &lt;code&gt;mysqrt&lt;/code&gt; or &lt;code&gt;sqrt&lt;/code&gt;, instead of requiring the calling code to do this logic. This will also mean that &lt;code&gt;USE_MYMATH&lt;/code&gt; will not control building MathFunctions, but instead will control the behavior of this library.</source>
          <target state="translated">다음으로 MathFunctions를 리팩터링하여이 로직을 수행하기 위해 호출 코드를 요구하는 대신 &lt;code&gt;mysqrt&lt;/code&gt; 또는 &lt;code&gt;sqrt&lt;/code&gt; 를 사용하여 캡슐화하는 실제 라이브러리가 될 것입니다. 이것은 또한 &lt;code&gt;USE_MYMATH&lt;/code&gt; 가 MathFunctions 빌드를 제어하지 않고 대신이 라이브러리의 동작을 제어 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="c6064ee14baf8abda0f9c8a3f3eb814bed7c2936" translate="yes" xml:space="preserve">
          <source>Next we have to let CMake know that &lt;code&gt;mysqrt.cxx&lt;/code&gt; depends on the generated file &lt;code&gt;Table.h&lt;/code&gt;. This is done by adding the generated &lt;code&gt;Table.h&lt;/code&gt; to the list of sources for the library MathFunctions.</source>
          <target state="translated">다음으로 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 가 생성 된 파일 &lt;code&gt;Table.h&lt;/code&gt; 에 의존 한다는 것을 CMake 에 알려야 합니다. 이는 생성 된 &lt;code&gt;Table.h&lt;/code&gt; 를 라이브러리 MathFunctions의 소스 목록 에 추가하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="7a20ed73f4da7673e20e0cef2238ab0bcf0bc9d7" translate="yes" xml:space="preserve">
          <source>Next, navigate to the build directory and run CMake to configure the project and generate a native build system:</source>
          <target state="translated">다음으로 빌드 디렉터리로 이동하고 CMake를 실행하여 프로젝트를 구성하고 네이티브 빌드 시스템을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="bc0ccf5aaefb8565f01af9408a581bbdb40068c0" translate="yes" xml:space="preserve">
          <source>Next, set the &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-1-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property of the target using the &lt;a href=&quot;../../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command. This will tell CMake the location of the target on disk. The location may need to be adjusted to the &lt;code&gt;&amp;lt;install location&amp;gt;&lt;/code&gt; specified in the previous step.</source>
          <target state="translated">다음으로 &lt;a href=&quot;../../command/set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 대상 의 &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-1-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt; 속성을 설정합니다 . 그러면 CMake가 디스크에서 대상의 위치를 ​​알 수 있습니다. 위치를 이전 단계에서 지정한 &lt;code&gt;&amp;lt;install location&amp;gt;&lt;/code&gt; 로 조정해야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4bb23c39301b73d024bc05a64d32084ba859a72" translate="yes" xml:space="preserve">
          <source>Next, update &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; to use the &lt;code&gt;mathfunctions&lt;/code&gt; and &lt;code&gt;detail&lt;/code&gt; namespaces:</source>
          <target state="translated">다음으로 &lt;code&gt;MathFunctions/mysqrt.cxx&lt;/code&gt; 를 업데이트 하여 &lt;code&gt;mathfunctions&lt;/code&gt; 및 &lt;code&gt;detail&lt;/code&gt; 네임 스페이스 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="aeb6aa91aef40e83cb09d854be90f0d72ddec89a" translate="yes" xml:space="preserve">
          <source>Next, use the &lt;code&gt;CPACK_INSTALL_CMAKE_PROJECTS&lt;/code&gt; variable to specify which projects to install. In this case, we want to install both debug and release.</source>
          <target state="translated">다음으로 &lt;code&gt;CPACK_INSTALL_CMAKE_PROJECTS&lt;/code&gt; 변수를 사용하여 설치할 프로젝트를 지정합니다. 이 경우 디버그와 릴리스를 모두 설치하려고합니다.</target>
        </trans-unit>
        <trans-unit id="1212749226629dd276e19a86dcf6e33964f2e647" translate="yes" xml:space="preserve">
          <source>Next, we can move the check for &lt;code&gt;HAVE_LOG&lt;/code&gt; and &lt;code&gt;HAVE_EXP&lt;/code&gt; to &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; and then specify those values as &lt;code&gt;PRIVATE&lt;/code&gt; compile definitions.</source>
          <target state="translated">다음으로 &lt;code&gt;HAVE_LOG&lt;/code&gt; 및 &lt;code&gt;HAVE_EXP&lt;/code&gt; 확인 을 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 로 이동 한 다음 해당 값을 &lt;code&gt;PRIVATE&lt;/code&gt; 컴파일 정의 로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7eb0443b62987568d843eadd92e5fdf618341050" translate="yes" xml:space="preserve">
          <source>Ninja</source>
          <target state="translated">Ninja</target>
        </trans-unit>
        <trans-unit id="5accf33da27571381c51d2a1c8982dc86c68d95b" translate="yes" xml:space="preserve">
          <source>Ninja Generator</source>
          <target state="translated">닌자 생성기</target>
        </trans-unit>
        <trans-unit id="b899c381b6b8c80fb2e1ebd661bf21888c5b5669" translate="yes" xml:space="preserve">
          <source>Ninja Generators</source>
          <target state="translated">닌자 생성기</target>
        </trans-unit>
        <trans-unit id="4aa478e92bbc1a6ad1a49bf8b0465b3eccfebabe" translate="yes" xml:space="preserve">
          <source>Ninja Multi-Config</source>
          <target state="translated">Ninja 다중 구성</target>
        </trans-unit>
        <trans-unit id="3db50f3556cd724a2884cf3d83c2d4a8f1f3b832" translate="yes" xml:space="preserve">
          <source>Ninja generators transform &lt;code&gt;DEPFILE&lt;/code&gt; s from &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4accf6b5c730c03612c08ed92b56345ae3739cd1" translate="yes" xml:space="preserve">
          <source>Ninja only: List of available pools.</source>
          <target state="translated">닌자 전용 : 사용 가능한 풀 목록.</target>
        </trans-unit>
        <trans-unit id="551054357f2e8728172e8ff9e9cd150b7ddfd3bf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for compiling.</source>
          <target state="translated">닌자 만 : 컴파일에 사용되는 풀.</target>
        </trans-unit>
        <trans-unit id="4849bd3d64295f503596e8a7ca1e663c5f021b5b" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for generating pre-compiled headers.</source>
          <target state="translated">Ninja 전용 : 미리 컴파일 된 헤더를 생성하는 데 사용되는 풀입니다.</target>
        </trans-unit>
        <trans-unit id="103413c2e46dc5dac8a6d13dd69b928646f58daf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for linking.</source>
          <target state="translated">닌자 만 : 연결에 사용되는 풀.</target>
        </trans-unit>
        <trans-unit id="07c2b961f0adec689b30ee2d3b8b3a5e614a7c7e" translate="yes" xml:space="preserve">
          <source>Ninja requires custom command byproducts to be explicit.</source>
          <target state="translated">Ninja는 사용자 정의 명령 부산물을 명시 적으로 요구합니다.</target>
        </trans-unit>
        <trans-unit id="4679f16e5ef177fb48f8688cfae396cd5498ebd2" translate="yes" xml:space="preserve">
          <source>No C++ Support</source>
          <target state="translated">C ++ 지원 없음</target>
        </trans-unit>
        <trans-unit id="249510bb1c1ad1354dd3c70d53681a8e446af0ea" translate="yes" xml:space="preserve">
          <source>No check is made for whether content for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; has already been populated.</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 내용 이 이미 채워져 있는지 확인하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="bffcec9e4220f5c5f0bed45cce4d54907bfe8145" translate="yes" xml:space="preserve">
          <source>No explicit &lt;code&gt;DEPENDS&lt;/code&gt; relationships were needed to make the setup tests run before or the cleanup tests run after the regular tests.</source>
          <target state="translated">설정 테스트 이전에 정리 테스트를 실행하거나 정기 테스트 후에 정리 테스트를 실행하는 데 명시적인 &lt;code&gt;DEPENDS&lt;/code&gt; 관계가 필요 하지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="97947fe6c257409cb8c740c3baf25fd1b7ed0a13" translate="yes" xml:space="preserve">
          <source>No global properties record the source or binary directories used for the populated content.</source>
          <target state="translated">채워진 내용에 사용 된 소스 또는 이진 디렉터리를 기록하는 전역 속성은 없습니다.</target>
        </trans-unit>
        <trans-unit id="4d99d2b47a83169367dc1659fa9dc2d5a1b0a30b" translate="yes" xml:space="preserve">
          <source>No global property is set to record that the population has occurred.</source>
          <target state="translated">인구가 발생했음을 기록하도록 설정된 글로벌 자산은 없습니다.</target>
        </trans-unit>
        <trans-unit id="41e4d4b193bcde5c986925a9152d12c280e94dce" translate="yes" xml:space="preserve">
          <source>Non-Makefile generators currently ignore this property.</source>
          <target state="translated">비 Makefile 생성기는 현재이 특성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="c52f0fcdba21295d98f874c728846202aeb33629" translate="yes" xml:space="preserve">
          <source>Non-boolean properties may also participate in &quot;compatible interface&quot; computations. Properties specified in the &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; property must be either unspecified or compare to the same string among all transitively specified dependencies. This can be useful to ensure that multiple incompatible versions of a library are not linked together through transitive requirements of a target:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cf99e5094000ceea4f2bcc621384cfeab8cf11" translate="yes" xml:space="preserve">
          <source>Non-boolean properties may also participate in &amp;ldquo;compatible interface&amp;rdquo; computations. Properties specified in the &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; property must be either unspecified or compare to the same string among all transitively specified dependencies. This can be useful to ensure that multiple incompatible versions of a library are not linked together through transitive requirements of a target:</source>
          <target state="translated">부울이 아닌 속성은 &quot;호환 가능한 인터페이스&quot;계산에도 참여할 수 있습니다. &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; &lt;/a&gt; 특성에 지정된 특성은 지정되지 않거나 전 이적으로 지정된 모든 종속 항목에서 동일한 문자열과 비교되어야합니다. 이는 호환되지 않는 여러 버전의 라이브러리가 대상의 전이 요구 사항을 통해 서로 연결되지 않도록하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61031049c8013452e7b3d52c5d5f001fff99de5e" translate="yes" xml:space="preserve">
          <source>Non-static data member initialization, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756&lt;/a&gt;.</source>
          <target state="translated">로 정의 비 정적 데이터 멤버 초기화 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07152711e4bcdfa8e80e5e775d8ac3fd24ae14ef" translate="yes" xml:space="preserve">
          <source>Normal Executables</source>
          <target state="translated">일반 실행 파일</target>
        </trans-unit>
        <trans-unit id="38cfcb432bb57e2eb26034910d5d7f500f0169e5" translate="yes" xml:space="preserve">
          <source>Normal Libraries</source>
          <target state="translated">일반 라이브러리</target>
        </trans-unit>
        <trans-unit id="6229d1c8b3cf41f8c4fc10b2e875a989abcd254a" translate="yes" xml:space="preserve">
          <source>Normal libraries and executables may link to &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; to get their objects and usage requirements. Continuing the above example, the code</source>
          <target state="translated">일반 라이브러리 및 실행 파일은 객체 및 사용 요구 사항을 얻기 위해 객체 &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;라이브러리&lt;/a&gt; 에 연결할 수 있습니다 . 위 예제를 계속하면 코드</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="cd5b235417e9723b0e4c51cfab0d74d9d960435a" translate="yes" xml:space="preserve">
          <source>Normalize &lt;code&gt;&amp;lt;path-var&amp;gt;&lt;/code&gt; according the steps described in &lt;a href=&quot;#normalization&quot;&gt;Normalization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b797dee9ae31a08815efc0fabfa014583e7784" translate="yes" xml:space="preserve">
          <source>Normally CMake requires that all targets built in a project have globally unique logical names (see policy &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt;&lt;code&gt;CMP0002&lt;/code&gt;&lt;/a&gt;). This is necessary to generate meaningful project file names in &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators. It also allows the target names to be referenced unambiguously.</source>
          <target state="translated">일반적으로 CMake는 프로젝트에 빌드 된 모든 대상이 전역 적으로 고유 한 논리적 이름을 갖도록 요구합니다 (정책 &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt; &lt;code&gt;CMP0002&lt;/code&gt; &lt;/a&gt; 참조 ). 이것은 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE 생성기 에서 의미있는 프로젝트 파일 이름을 생성하는 데 필요합니다 . 또한 대상 이름을 명확하게 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3031d172068ec14c2789731a3ca8438d81b6075" translate="yes" xml:space="preserve">
          <source>Normally CMake requires that all targets built in a project have globally unique logical names (see policy &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt;&lt;code&gt;CMP0002&lt;/code&gt;&lt;/a&gt;). This is necessary to generate meaningful project file names in &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators. It also allows the target names to be referenced unambiguously.</source>
          <target state="translated">일반적으로 CMake에서는 프로젝트에 빌드 된 모든 대상에 전역 적으로 고유 한 논리적 이름이 있어야합니다 (정책 &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt; &lt;code&gt;CMP0002&lt;/code&gt; &lt;/a&gt; 참조 ). 이는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE 생성기 에서 의미있는 프로젝트 파일 이름을 생성하는 데 필요합니다 . 또한 대상 이름을 명확하게 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16f564637160822a47f4235952c70a82ef7a4417" translate="yes" xml:space="preserve">
          <source>Normally CMake requires that all targets built in a project have globally unique logical names (see policy &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt;&lt;code&gt;CMP0002&lt;/code&gt;&lt;/a&gt;). This is necessary to generate meaningful project file names in &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators. It also allows the target names to be referenced unambiguously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84663b487b1635a4a345914ad0fa224022aec4e" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the &lt;code&gt;RPATH&lt;/code&gt; when building executables etc on systems that use &lt;code&gt;RPATH&lt;/code&gt;. When the software is installed the executables etc are relinked by CMake to have the install &lt;code&gt;RPATH&lt;/code&gt;. If this variable is set to true then the software is always built with the install path for the &lt;code&gt;RPATH&lt;/code&gt; and does not need to be relinked when installed.</source>
          <target state="translated">일반적으로 CMake는의 빌드 트리를 사용 &lt;code&gt;RPATH&lt;/code&gt; 사용하는 시스템에서 실행 파일 등을 만들 때 &lt;code&gt;RPATH&lt;/code&gt; 를 . 소프트웨어가 설치되면 실행 파일 등이 CMake에 의해 다시 연결되어 &lt;code&gt;RPATH&lt;/code&gt; 를 설치 합니다. 이 변수가 true로 설정되면 소프트웨어는 항상 &lt;code&gt;RPATH&lt;/code&gt; 의 설치 경로로 빌드되며 설치 시 다시 링크 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="58f12b4e33c96e29e960f0555c59f783bb5c5b89" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always built with no RPATH.</source>
          <target state="translated">일반적으로 CMake는 RPATH를 사용하는 시스템에서 실행 파일 등을 빌드 할 때 RPATH의 빌드 트리를 사용합니다. 소프트웨어가 설치되면 실행 파일 등이 CMake에 의해 다시 연결되어 RPATH를 설치합니다. 이 변수가 true로 설정되면 소프트웨어는 항상 RPATH없이 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="03011fecce3136586e8e0cddb707b4fe66605b32" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always installed without RPATH, even if RPATH is enabled when building. This can be useful for example to allow running tests from the build directory with RPATH enabled before the installation step. To omit RPATH in both the build and install steps, use &lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">일반적으로 CMake는 RPATH를 사용하는 시스템에서 실행 파일 등을 빌드 할 때 RPATH의 빌드 트리를 사용합니다. 소프트웨어가 설치되면 실행 파일 등이 CMake에 의해 다시 연결되어 RPATH를 설치합니다. 이 변수가 true로 설정되면 빌드 할 때 RPATH가 사용 가능하더라도 소프트웨어는 항상 RPATH없이 설치됩니다. 예를 들어 설치 단계 전에 RPATH를 활성화 한 상태에서 빌드 디렉토리에서 테스트를 실행하는 데 유용 할 수 있습니다. 빌드 및 설치 단계 모두에서 RPATH를 생략하려면 &lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="40daad7e367ec059ed3c76dc103f188ebe23a919" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &quot;link&quot; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. Handling of the executable on the link lines of the loadable modules varies by platform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0f271f5c2895e64990a57b2e432c7f28e62b69" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &amp;ldquo;link&amp;rdquo; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &amp;ldquo;link&amp;rdquo; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">일반적으로 실행 파일은 최종 프로그램이므로 심볼을 내 보내지 않습니다. 실행 파일이로드 가능한 모듈에서 사용하기 위해 심볼을 내보낼 수 있습니다. 이 속성이 true로 설정되면 CMake는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt; 명령으로 다른 대상이 실행 파일에 &quot;링크&quot;되도록합니다 . 모든 플랫폼에서 실행 파일에 대한 대상 수준의 종속성이 해당 대상에 연결됩니다. DLL 플랫폼의 경우 내 보낸 심볼에 대해 가져 오기 라이브러리가 생성 된 다음 연결에 사용됩니다. Cygwin을 포함한 모든 Windows 기반 시스템은 DLL 플랫폼입니다. macOS와 같이 링크 타임에 모든 심볼을 확인해야하는 비 DLL 플랫폼의 경우, 모듈은 &lt;code&gt;-bundle_loader&lt;/code&gt; 와 같은 플래그를 사용하여 실행 파일에 &quot;링크&quot;됩니다.. DLL이 아닌 다른 플랫폼의 경우, 모듈이로드 될 때 동적 로더가 자동으로 심볼을 바인딩하므로 링크 규칙은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9e2a4a8a2f29cf236d11dda90c88607f310eecca" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &amp;ldquo;link&amp;rdquo; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. Handling of the executable on the link lines of the loadable modules varies by platform:</source>
          <target state="translated">일반적으로 실행 파일은 최종 프로그램이므로 심볼을 내 보내지 않습니다. 실행 파일이로드 가능한 모듈에서 사용할 심볼을 내보낼 수 있습니다. 이 속성이 true로 설정되면 CMake는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 다른 대상이 실행 파일에 &quot;연결&quot;되도록 허용 합니다. 모든 플랫폼에서 실행 파일에 대한 대상 수준 종속성은 연결된 대상에 대해 생성됩니다. 로드 가능한 모듈의 링크 라인에서 실행 파일 처리는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ddcbc0f4a8ceab9b951e0446687125cd5fa31a88" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &lt;code&gt;link&lt;/code&gt; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &lt;code&gt;link&lt;/code&gt; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">일반적으로 실행 파일은 최종 프로그램이므로 심볼을 내 보내지 않습니다. 실행 파일이로드 가능한 모듈에서 사용하기 위해 심볼을 내보낼 수 있습니다. 이 특성이 true로 설정되면 CMake는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt; 명령으로 다른 대상 이 실행 파일 에 &lt;code&gt;link&lt;/code&gt; 될 수 있도록 합니다. 모든 플랫폼에서 실행 파일에 대한 대상 수준의 종속성이 해당 대상에 연결됩니다. DLL 플랫폼의 경우 내 보낸 심볼에 대해 가져 오기 라이브러리가 생성 된 다음 연결에 사용됩니다. Cygwin을 포함한 모든 Windows 기반 시스템은 DLL 플랫폼입니다. macOS와 같이 링크 타임에 모든 기호를 확인해야하는 비 DLL 플랫폼의 경우, 모듈은 &lt;code&gt;-bundle_loader&lt;/code&gt; 와 같은 플래그를 사용하여 실행 파일에 &lt;code&gt;link&lt;/code&gt; 됩니다.. DLL이 아닌 다른 플랫폼의 경우, 모듈이로드 될 때 동적 로더가 자동으로 심볼을 바인딩하므로 링크 규칙은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0e0a027e445fe8663e10a601c500a1a4ec5e9a81" translate="yes" xml:space="preserve">
          <source>Normally the build &lt;code&gt;RPATH&lt;/code&gt; of a binary contains absolute paths to the directory of each shared library it links to. The &lt;code&gt;RPATH&lt;/code&gt; entries for directories contained within the build tree can be made relative to enable relocatable builds and to help achieve reproducible builds by omitting the build directory from the build environment.</source>
          <target state="translated">일반적으로 바이너리 의 빌드 &lt;code&gt;RPATH&lt;/code&gt; 에는 링크 된 각 공유 라이브러리의 디렉토리에 대한 절대 경로가 포함됩니다. 빌드 트리 내에 포함 된 디렉토리 의 &lt;code&gt;RPATH&lt;/code&gt; 항목은 재배치 가능한 빌드를 가능하게하고 빌드 환경에서 빌드 디렉토리를 생략하여 재현 가능한 빌드를 달성하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="104d068a09d02a98c430a7da93fd342184a64a6e" translate="yes" xml:space="preserve">
          <source>Normally, the function creates a dependency which will cause CMake to be re-run if any of the sources being scanned are changed. This is to ensure that the list of discovered tests is updated. If this behavior is not desired (as may be the case while actually writing the test cases), this option can be used to prevent the dependency from being added.</source>
          <target state="translated">일반적으로이 함수는 종속성을 생성하여 스캔중인 소스가 변경되면 CMake가 다시 실행되게합니다. 검색된 테스트 목록이 업데이트되도록합니다. 이 동작이 바람직하지 않은 경우 (실제로 테스트 케이스를 작성하는 동안과 같이)이 옵션을 사용하여 종속성이 추가되지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd45e68de040d72f5bc4ac3c7d8eb400604bf1fb" translate="yes" xml:space="preserve">
          <source>Normally, unused and uninitialized variables are searched for only in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. This flag tells CMake to warn about other files as well.</source>
          <target state="translated">일반적으로 사용되지 &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 초기화되지 않은 변수는 CMAKE_SOURCE_DIR 및 &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 에서만 검색됩니다 . 이 플래그는 CMake에게 다른 파일에 대해서도 경고하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="593b5a3d6fe5f7197d2a9005e544b6713f8d5e6d" translate="yes" xml:space="preserve">
          <source>Normally, unused and uninitialized variables are searched for only in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. This flag tells CMake to warn about other files as well.</source>
          <target state="translated">일반적으로 사용되지 &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 초기화되지 않은 변수는 CMAKE_SOURCE_DIR 및 &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 에서만 검색됩니다 . 이 플래그는 CMake에게 다른 파일에 대해서도 경고하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="8adf0077403ccbda5153eb0097042b7e03c5f67d" translate="yes" xml:space="preserve">
          <source>Not included &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; files will be generated in custom folders to avoid name collisions and included in a separate &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; file which is compiled into the target.</source>
          <target state="translated">포함되지 &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; 파일을 피하기 이름 충돌에 대한 사용자 지정 폴더에 생성되어 별도에 포함됩니다 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; 의 목표로 컴파일 파일입니다.</target>
        </trans-unit>
        <trans-unit id="f5abbd07a9e49cd8e6c0b21fab08e4ed8b14d0df" translate="yes" xml:space="preserve">
          <source>Not included &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; files will be generated in custom folders to avoid name collisions and included in a separate file which is compiled into the target, named either &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; or &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation_$&amp;lt;CONFIG&amp;gt;.cpp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a97d3767289c9a5ee3012b740a273cc434550ad" translate="yes" xml:space="preserve">
          <source>Not included moc output files</source>
          <target state="translated">moc 출력 파일은 포함되지 않음</target>
        </trans-unit>
        <trans-unit id="1f08a460d8c734da42ffd7f5cfe94591cc6654b5" translate="yes" xml:space="preserve">
          <source>Not set: no flags are passed to the linker step.</source>
          <target state="translated">설정되지 않음 : 링커 단계에 플래그가 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="1822ac32d88c3d89064dbd816b46f45f929e6e8d" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;file(GENERATE)&lt;/code&gt; does not create the output file until the generation phase. The output file will not yet have been written when the &lt;code&gt;file(GENERATE)&lt;/code&gt; command returns, it is written only after processing all of a project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; files.</source>
          <target state="translated">또한 &lt;code&gt;file(GENERATE)&lt;/code&gt; 은 생성 단계까지 출력 파일을 작성하지 않습니다. 출력 파일은 &lt;code&gt;file(GENERATE)&lt;/code&gt; 명령이 리턴 될 때 아직 기록되지 않으며 프로젝트의 모든 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 을 처리 한 후에 만 ​​기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="d9aa68ed5b3e5fa17d32d65240bfcbbc36f59a15" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;file(GENERATE)&lt;/code&gt; does not create the output file until the generation phase. The output file will not yet have been written when the &lt;code&gt;file(GENERATE)&lt;/code&gt; command returns, it is written only after processing all of a project's &lt;code&gt;CMakeLists.txt&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a425529bb06aec901f03c327d14edbfaa8c1aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the uppercased name of the component.</source>
          <target state="translated">참고는 &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; 요소의 대문자로 이름이다.</target>
        </trans-unit>
        <trans-unit id="7746d9032f8b937f7779e6e2fc406fb2c52ad714" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; is no longer necessary for this purpose but has been left for compatibility with existing projects. Instead &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; recognizes executable target names in its &lt;code&gt;COMMAND&lt;/code&gt; option, so &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; can be replaced by just &lt;code&gt;mytool&lt;/code&gt;.</source>
          <target state="translated">유의하십시오 &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; 는 이 목적을 위해 더 이상 필요하지만, 기존 사업과의 호환성을 위해 남아있다. 대신 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 의에서 실행 목표 이름을 인식 &lt;code&gt;COMMAND&lt;/code&gt; 옵션을, 그래서 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; 바로 교체 할 수 있습니다 &lt;code&gt;mytool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="645dab9a5255614ea7fc6803ec7f9aec3dc2ef22" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; is not set to anything by default when running in script mode, since it&amp;rsquo;s not building anything.</source>
          <target state="translated">참고 &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 이 는 아무 것도 구축하지 이후, 스크립트 모드에서 실행할 때 기본적으로 아무것도 설정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1831e8848a5818f8044220537bb85f64d49512c0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; is not set to anything by default when running in script mode, since it's not building anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0899894d1fcac71c748c2dc6fd3a62999bc8856" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CONFIGURATIONS&lt;/code&gt; appears BEFORE &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt;.</source>
          <target state="translated">참고 것을 &lt;code&gt;CONFIGURATIONS&lt;/code&gt; 하기 전에 나타납니다 &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b17b3c87b9c85f0936dbb2dfa82195d9646a19b9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="093dbb6b91b6e60c088f6f40a35d74b75cf3e033" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-1-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-1-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8ea47314a90bad7660a1577a47cd4aeedbe77c8c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-2-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-2-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="db3595ec7b478df73d6d472fb6b2904ebd1e2899" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-3-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-3-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="eff8f84850a86c8ef69c9d6c9c0d7e5b6cceb310" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-4-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-4-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d89d48e93cebaed0c5d4012662ddbc5ef4483f8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-5-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-5-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="81c2e0a68a1379fe8124a6748d7519f97445bbdd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-6-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-6-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="92b547962c04ef7a5dc6c04fe3326c4e42f9cc7a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-7-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-7-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c320f51d3649e856cdd694b489ee57a1eb497528" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-8-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다 (참조 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-8-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="105fe8ce69d86ea92b6c4f12e650bf846f400466" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-9-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b9cb5e1012bc0e0de4ff9051bfc59bccbf2ed1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on.</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다.</target>
        </trans-unit>
        <trans-unit id="a43722478003908154d67648ee9b9cfef890653e" translate="yes" xml:space="preserve">
          <source>Note that Boost Python components require a Python version suffix (Boost 1.67 and later), e.g. &lt;code&gt;python36&lt;/code&gt; or &lt;code&gt;python27&lt;/code&gt; for the versions built against Python 3.6 and 2.7, respectively. This also applies to additional components using Python including &lt;code&gt;mpi_python&lt;/code&gt; and &lt;code&gt;numpy&lt;/code&gt;. Earlier Boost releases may use distribution-specific suffixes such as &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;2.7&lt;/code&gt;. These may also be used as suffixes, but note that they are not portable.</source>
          <target state="translated">Boost Python 구성 요소에는 Python 3.6 및 2.7에 대해 각각 빌드 된 버전의 경우 Python 버전 접미사 (부스트 1.67 이상) (예 : &lt;code&gt;python36&lt;/code&gt; 또는 &lt;code&gt;python27&lt;/code&gt; )가 필요합니다. 이것은 &lt;code&gt;mpi_python&lt;/code&gt; 및 &lt;code&gt;numpy&lt;/code&gt; 를 포함하여 Python을 사용하는 추가 구성 요소에도 적용됩니다 . 이전 Boost 릴리스는 &lt;code&gt;2&lt;/code&gt; , &lt;code&gt;3&lt;/code&gt; 또는 &lt;code&gt;2.7&lt;/code&gt; 과 같은 배포 판별 접미사를 사용할 수 있습니다 . 이것들은 접미사로도 사용될 수 있지만 이식 가능하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="a968b623d10f301b080581b8506f144e329c8a81" translate="yes" xml:space="preserve">
          <source>Note that CMake generates postSolution sections &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; and &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; by default. If you set the corresponding property, it will override the default section. For example, setting &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; will override the default contents of the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section, while keeping ExtensibilityAddIns on its default. However, CMake will always add a &lt;code&gt;SolutionGuid&lt;/code&gt; to the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section if it is not specified explicitly.</source>
          <target state="translated">CMake는 기본적으로 postSolution 섹션 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 및 &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; 를 생성 합니다. 해당 속성을 설정하면 기본 섹션보다 우선합니다. 예를 들어 &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; 를 설정 하면 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 기본값으로 유지하면서 ExtensibilityGlobals 섹션 의 기본 내용을 재정의합니다 . 그러나 CMake는 명시 적으로 지정되지 않은 경우 항상 &lt;code&gt;SolutionGuid&lt;/code&gt; 를 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 섹션에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e37008e017e701de1fc44e974b1281394a953ddd" translate="yes" xml:space="preserve">
          <source>Note that a &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro&lt;/code&gt;&lt;/a&gt;, unlike a &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/a&gt;, is expanded in place and therefore cannot handle &lt;code&gt;return()&lt;/code&gt;.</source>
          <target state="translated">&amp;bull; 그래도 참고 &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro&lt;/code&gt; &lt;/a&gt; 하는 달리 &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function&lt;/code&gt; &lt;/a&gt; , 처리 할 수 있으므로 장소에 확장하고 &lt;code&gt;return()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7addc7be0fce228bb844409363fbe12c4cc1802" translate="yes" xml:space="preserve">
          <source>Note that any given value is ignored. It&amp;rsquo;s just checked for existence.</source>
          <target state="translated">주어진 값은 무시됩니다. 방금 존재 여부를 확인했습니다.</target>
        </trans-unit>
        <trans-unit id="f9f9533d00f8fb9152c46831a93b9cba8fa1a926" translate="yes" xml:space="preserve">
          <source>Note that any given value is ignored. It's just checked for existence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0224d23b505eb36de0b2809a3302e286acc686fd" translate="yes" xml:space="preserve">
          <source>Note that any source file line not inside &lt;a href=&quot;#command-arguments&quot;&gt;Command Arguments&lt;/a&gt; or a &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt; can end in a &lt;a href=&quot;#line-comment&quot;&gt;Line Comment&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#command-arguments&quot;&gt;Command Arguments&lt;/a&gt; 또는 &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment에&lt;/a&gt; 없는 소스 파일 행 은 &lt;a href=&quot;#line-comment&quot;&gt;Line Comment로&lt;/a&gt; 끝날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a97fd7ee56fa3971600f1637f6ba1297705e9e7" translate="yes" xml:space="preserve">
          <source>Note that care must be taken when specifying usage requirements for targets which will be exported for installation using the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command. See &lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;Creating Packages&lt;/a&gt; for more.</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 설치를 위해 내보낼 대상의 사용 요구 사항을 지정할 때주의해야합니다 . 자세한 내용은 &lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;패키지 만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bec2b4ebf88a78a7d0476d25543c716e6a85f8e8" translate="yes" xml:space="preserve">
          <source>Note that configuration names are case-insensitive. The value of this variable will be the same as it is specified when invoking CMake. For instance, if &lt;code&gt;-DCMAKE_BUILD_TYPE=ReLeAsE&lt;/code&gt; is specified, then the value of &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; will be &lt;code&gt;ReLeAsE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8ca471ebeb1ef90783c23534a44e98652fe915" translate="yes" xml:space="preserve">
          <source>Note that device linking is not supported for &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;개체 라이브러리에&lt;/a&gt; 대해서는 장치 연결이 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c6a6c2b48c9792277a70abe569cf31f235bdd7d0" translate="yes" xml:space="preserve">
          <source>Note that even if a test specifies a &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; property, it is still possible for that to test to run without any resource allocation (and without the corresponding &lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;environment variables&lt;/a&gt;) if the user does not pass a resource specification file. Passing this file, either through the &lt;code&gt;--resource-spec-file&lt;/code&gt; command-line argument or the &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; argument to &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-1-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt;, is what activates the resource allocation feature. Tests should check the &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; environment variable to find out whether or not resource allocation is activated. This variable will always (and only) be defined if resource allocation is activated. If resource allocation is not activated, then the &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; variable will not exist, even if it exists for the parent &lt;code&gt;ctest&lt;/code&gt; process. If a test absolutely must have resource allocation, then it can return a failing exit code or use the &lt;a href=&quot;../prop_test/skip_return_code#prop_test:SKIP_RETURN_CODE&quot; id=&quot;index-0-prop_test:SKIP_RETURN_CODE&quot;&gt;&lt;code&gt;SKIP_RETURN_CODE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; properties to indicate a skipped test.</source>
          <target state="translated">테스트에서 &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 속성을 지정하더라도 사용자가 리소스 사양 파일을 전달하지 않으면 리소스 할당없이 (및 해당 &lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;환경 변수&lt;/a&gt; 없이) 테스트를 실행할 수 있습니다. &lt;code&gt;--resource-spec-file&lt;/code&gt; 명령 줄 인수 또는 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 인수를 통해 &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-1-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 에이 파일을 전달 하면 리소스 할당 기능이 활성화됩니다. 테스트는 &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; 를 확인해야합니다 .자원 할당 활성화 여부를 확인하기위한 환경 변수. 이 변수는 리소스 할당이 활성화 된 경우에만 항상 정의됩니다. 자원 할당이 활성화되지 않은 경우 &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; 변수는 상위 &lt;code&gt;ctest&lt;/code&gt; 프로세스에 대해 존재하더라도 존재하지 않습니다 . 테스트에 리소스 할당이 반드시 있어야하는 경우 실패한 종료 코드를 반환하거나 &lt;a href=&quot;../prop_test/skip_return_code#prop_test:SKIP_RETURN_CODE&quot; id=&quot;index-0-prop_test:SKIP_RETURN_CODE&quot;&gt; &lt;code&gt;SKIP_RETURN_CODE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt; 속성을 사용하여 건너 뛴 테스트를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4068c9fd8cd3f02cbe438ca517fbf100842478a6" translate="yes" xml:space="preserve">
          <source>Note that fairly minimal checking is done for bad colors (although a value higher than what curses believes your terminal supports will be silently ignored) or bad syntax.</source>
          <target state="translated">잘못된 색상 (귀하의 터미널이 지원하는 curses보다 높은 값은 조용히 무시 될 것임) 또는 잘못된 구문에 대해 최소한의 검사가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="0c85f1df496994e79e965d4588746a639827661c" translate="yes" xml:space="preserve">
          <source>Note that for Visual Studio generators, unlike in the command line &lt;code&gt;-G&lt;/code&gt; argument, you cannot include the platform name in the generator name. Use the &lt;code&gt;architecture&lt;/code&gt; field instead.</source>
          <target state="translated">Visual Studio 생성기의 경우 명령 줄 &lt;code&gt;-G&lt;/code&gt; 인수 와 달리 생성기 이름에 플랫폼 이름을 포함 할 수 없습니다. 대신 &lt;code&gt;architecture&lt;/code&gt; 필드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ce154023a8115e73637add41fd01034743578ac" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in each compatible interface property must not intersect with the set specified in any of the other properties.</source>
          <target state="translated">각 종속 자에 대해 호환 가능한 각 인터페이스 속성에 지정된 속성 집합이 다른 속성에 지정된 집합과 교차해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="32e839d08baf002b2c3043084e689998b1b4dbae" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in this property must not intersect with the set specified in any of the other &lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt;.</source>
          <target state="translated">각 종속 자에 대해이 특성에 지정된 특성 세트가 다른 &lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;호환 가능한 인터페이스 특성에&lt;/a&gt; 지정된 세트와 교차해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb48f9c4fc9995384dbee401998d144777ddb3d9" translate="yes" xml:space="preserve">
          <source>Note that for some accesses such as &lt;a href=&quot;list#command:list&quot; id=&quot;index-0-command:list&quot;&gt;&lt;code&gt;list(APPEND)&lt;/code&gt;&lt;/a&gt;, the watcher is executed twice, first with a read access and then with a write one. Also note that an &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(DEFINED)&lt;/code&gt;&lt;/a&gt; query on the variable does not register as an access and the watcher is not executed.</source>
          <target state="translated">&lt;a href=&quot;list#command:list&quot; id=&quot;index-0-command:list&quot;&gt; &lt;code&gt;list(APPEND)&lt;/code&gt; &lt;/a&gt; 와 같은 일부 액세스의 경우 감시자는 먼저 읽기 액세스와 쓰기 액세스로 두 번 실행됩니다. 또한 변수에 대한 &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if(DEFINED)&lt;/code&gt; &lt;/a&gt; 쿼리는 액세스로 등록되지 않고 감시자가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40f1804cb6f8a7ce094584d54978c3e47118fa75" translate="yes" xml:space="preserve">
          <source>Note that generator expressions will not be used in OLD handling of policy &lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; or policy &lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt;&lt;code&gt;CMP0004&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정책 &lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt; 또는 정책 &lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt; &lt;code&gt;CMP0004&lt;/code&gt; &lt;/a&gt; 의 OLD 처리에는 생성기 표현식이 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="16f086a8f3d77a7abae646176eed2f8e4743e8f5" translate="yes" xml:space="preserve">
          <source>Note that if you have a variable with the same name in the scope from which the macro is called, using unreferenced names will use the existing variable instead of the arguments. For example:</source>
          <target state="translated">매크로가 호출되는 범위에서 이름이 같은 변수가 있으면 참조되지 않은 이름을 사용하면 인수 대신 기존 변수가 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d7f10f3ca19b44d2f3e10dc4c1e096b8d0964826" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-6-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">종속성에 대한 절대 경로로 대상 의 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-6-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 를 채우는 것은 바람직하지 않습니다 . 그러면 &lt;strong&gt;패키지가 만들어진 컴퓨터에서 찾은&lt;/strong&gt; 종속성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="05a48c49253cf59541895210ee57def8247750ae" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">의존성에 대한 절대 경로로 대상 의 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 를 채우는 것은 바람직하지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b0a5e72f401d5e98e854af7be674c69919a81e80" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">대상 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 를 종속성의 포함 디렉터리에 대한 절대 경로로 채우는 것은 바람직하지 않습니다 . 그러면 설치된 패키지 &lt;strong&gt;에 패키지가 만들어진 시스템에서 찾은&lt;/strong&gt; 종속성에 대한 포함 디렉터리 경로를 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59a48a5d20f18c89a15adf31d67badb00db37938" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">종속의 포함 디렉토리에 대한 절대 경로로 대상 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 를 채우는 것은 바람직하지 않습니다 . 패키지가 설치된 &lt;strong&gt;머신에서 발견 된&lt;/strong&gt; 의존성에 대한 포함 디렉토리 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85eaba3c941bfe29ab9b364c50ef4dcca79449e1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">종속의 포함 디렉토리에 대한 절대 경로로 대상 의 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 의 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 를 채우는 것은 바람직하지 않습니다 . 패키지가 설치된 &lt;strong&gt;머신에서 발견 된&lt;/strong&gt; 의존성에 대한 포함 디렉토리 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a736c9fe74c18a87b4c5959a3149f4d46024e70" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">의존성에 대한 절대 경로로 대상 의 &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 를 채우는 것은 바람직하지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="048f6109a708af64128647230683886e9d8dec90" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">대상 의 &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; 를 종속성에 대한 절대 경로로 채우는 것은 권장되지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="bc7f396eb8551c37d8aeae258ad89be0a52a02b1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">대상 의 &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 를 종속성에 대한 절대 경로로 채우는 것은 권장되지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3cf4fb4c3afb9c2b0022c60ae490ac73d14d050f" translate="yes" xml:space="preserve">
          <source>Note that it is not possible to change the generator with &lt;code&gt;-G&lt;/code&gt; after the first invocation of CMake. To change the generator, the build directory must be deleted and the build must be started from scratch.</source>
          <target state="translated">CMake를 처음 호출 한 후에는 &lt;code&gt;-G&lt;/code&gt; 로 생성기를 변경할 수 없습니다 . 생성기를 변경하려면 빌드 디렉토리를 삭제하고 빌드를 처음부터 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="439e50463f66534f0662330bb9a7818c4b9f81cc" translate="yes" xml:space="preserve">
          <source>Note that it is the value of this policy setting at the end of the directory scope that is important, not its setting at the time of the call to &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;. This has implications for calling these commands from places that have their own policy scope but not their own directory scope (e.g. from files brought in via &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; &lt;/a&gt; 호출 할 때의 설정이 아니라 중요한 디렉토리 범위의 끝에있는이 정책 설정의 값입니다 . 이는 자체 정책 범위는 있지만 자체 디렉토리 범위가 아닌 장소 (예 : &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 를 통해 가져온 파일)에서 이러한 명령을 호출하는 데 영향을 미칩니다 .</target>
        </trans-unit>
        <trans-unit id="3cfd3c4ffe3ba3311bb34ef5b2ec5abd58de183c" translate="yes" xml:space="preserve">
          <source>Note that lock is advisory - there is no guarantee that other processes will respect this lock, i.e. lock synchronize two or more CMake instances sharing some modifiable resources. Similar logic applied to &lt;code&gt;DIRECTORY&lt;/code&gt; option - locking parent directory doesn&amp;rsquo;t prevent other &lt;code&gt;LOCK&lt;/code&gt; commands to lock any child directory or file.</source>
          <target state="translated">잠금은 권고입니다. 다른 프로세스가이 잠금을 존중한다고 보장 할 수 없습니다. 즉, 수정 가능한 일부 자원을 공유하는 둘 이상의 CMake 인스턴스를 잠금 동기화합니다. &lt;code&gt;DIRECTORY&lt;/code&gt; 옵션에 유사한 논리가 적용됨 -상위 디렉토리 잠금으로 인해 다른 &lt;code&gt;LOCK&lt;/code&gt; 명령이 하위 디렉토리 또는 파일을 잠그는 것을 막을 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d4249840fc90ea89e2ac94cf008282cb3ce44a7b" translate="yes" xml:space="preserve">
          <source>Note that lock is advisory - there is no guarantee that other processes will respect this lock, i.e. lock synchronize two or more CMake instances sharing some modifiable resources. Similar logic applied to &lt;code&gt;DIRECTORY&lt;/code&gt; option - locking parent directory doesn't prevent other &lt;code&gt;LOCK&lt;/code&gt; commands to lock any child directory or file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca28a758499e11be4f72cb3dce5bd60a11bbd88f" translate="yes" xml:space="preserve">
          <source>Note that many compilers treat &lt;code&gt;-DFOO&lt;/code&gt; as equivalent to &lt;code&gt;-DFOO=1&lt;/code&gt;, but other tools may not recognize this in all circumstances (e.g. IntelliSense).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6a870f28530d2f2d249bf2f36f935940885a8d" translate="yes" xml:space="preserve">
          <source>Note that on Windows &lt;code&gt;data&lt;/code&gt; is named &lt;code&gt;dt&lt;/code&gt; and &lt;code&gt;i18n&lt;/code&gt; is named &lt;code&gt;in&lt;/code&gt;; any of the names may be used, and the appropriate platform-specific library name will be automatically selected.</source>
          <target state="translated">Windows에서 &lt;code&gt;data&lt;/code&gt; 이름은 &lt;code&gt;dt&lt;/code&gt; 이고 &lt;code&gt;i18n&lt;/code&gt; 의 이름 &lt;code&gt;in&lt;/code&gt; ; 모든 이름을 사용할 수 있으며 적절한 플랫폼 별 라이브러리 이름이 자동으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="59d58b9f3c162e6e6c53a43052209b1f035d1350" translate="yes" xml:space="preserve">
          <source>Note that some compilers will automatically search the module output directory for modules USEd during compilation but others will not. If your sources USE modules their location must be specified by &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; regardless of this property.</source>
          <target state="translated">일부 컴파일러는 컴파일 중에 USEd 모듈에 대한 모듈 출력 디렉토리를 자동으로 검색하지만 다른 컴파일러는 그렇지 않습니다. 소스 USE 모듈 의 경우이 특성에 관계없이 &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 로&lt;/a&gt; 해당 위치를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6c467dfd0e283a08e1043f346cffe4880f5fff10" translate="yes" xml:space="preserve">
          <source>Note that some of the types&amp;rsquo; built-in defaults use the &lt;code&gt;DATAROOT&lt;/code&gt; directory as a prefix. The &lt;code&gt;DATAROOT&lt;/code&gt; prefix is calculated similarly to the types, with &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; as the variable and &lt;code&gt;share&lt;/code&gt; as the built-in default. You cannot use &lt;code&gt;DATAROOT&lt;/code&gt; as a &lt;code&gt;TYPE&lt;/code&gt; parameter; please use &lt;code&gt;DATA&lt;/code&gt; instead.</source>
          <target state="translated">유형의 내장 기본값 중 일부는 &lt;code&gt;DATAROOT&lt;/code&gt; 디렉토리를 접두어로 사용합니다 . &lt;code&gt;DATAROOT&lt;/code&gt; 의 접두사로, 유형과 유사하게 계산 &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; 변수와 같은 &lt;code&gt;share&lt;/code&gt; 내장 된 기본값으로. &lt;code&gt;DATAROOT&lt;/code&gt; 를 &lt;code&gt;TYPE&lt;/code&gt; 매개 변수 로 사용할 수 없습니다 . 대신 &lt;code&gt;DATA&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="10342e76b0bb7c6d571a343e34b1e1212e3f2094" translate="yes" xml:space="preserve">
          <source>Note that some of the types' built-in defaults use the &lt;code&gt;DATAROOT&lt;/code&gt; directory as a prefix. The &lt;code&gt;DATAROOT&lt;/code&gt; prefix is calculated similarly to the types, with &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; as the variable and &lt;code&gt;share&lt;/code&gt; as the built-in default. You cannot use &lt;code&gt;DATAROOT&lt;/code&gt; as a &lt;code&gt;TYPE&lt;/code&gt; parameter; please use &lt;code&gt;DATA&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8c493778f5b4388cf2c9de70f37b3c92f29640" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command implicitly calls &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; too.</source>
          <target state="translated">있습니다 &lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt; 명령이 암시 적으로 호출 &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; 도 있습니다.</target>
        </trans-unit>
        <trans-unit id="67e768f999f6d23a61d52b776e7c7de3e8a154f8" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; of a series does not include a hash-algorithm extension.</source>
          <target state="translated">시리즈 의 &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; 는 해시 알고리즘 확장을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="69fd022bedad8743a6cbb01ff828162f9bad931f" translate="yes" xml:space="preserve">
          <source>Note that the command invocation must appear in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file itself; a call in an included file is not sufficient. However, the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command may be called to set policy &lt;code&gt;CMP0000&lt;/code&gt; to &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior explicitly. The &lt;code&gt;OLD&lt;/code&gt; behavior is to silently ignore the missing invocation. The &lt;code&gt;NEW&lt;/code&gt; behavior is to issue an error instead of a warning. An included file may set &lt;code&gt;CMP0000&lt;/code&gt; explicitly to affect how this policy is enforced for the main &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">명령 호출은 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 자체에 나타나야 합니다. 포함 된 파일의 호출로는 충분하지 않습니다. 그러나 정책 &lt;code&gt;CMP0000&lt;/code&gt; 을 &lt;code&gt;OLD&lt;/code&gt; 또는 &lt;code&gt;NEW&lt;/code&gt; 동작으로 명시 적으로 설정하기 위해 &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 있습니다 . &lt;code&gt;OLD&lt;/code&gt; 동작은 자동으로 누락 된 호출을 무시하는 것이다. &lt;code&gt;NEW&lt;/code&gt; 동작은 오류 대신 경고를 발행하는 것입니다. 포함 된 파일은 기본 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 에이 정책이 적용되는 방식에 영향을 미치기 위해 &lt;code&gt;CMP0000&lt;/code&gt; 을 명시 적으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="541a3833cb4fbbdc38bde301a59d0f7d984c9cc9" translate="yes" xml:space="preserve">
          <source>Note that the expected include convention is</source>
          <target state="translated">예상되는 포함 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb2b90f720982fe008fa43f3a5683779f4891447" translate="yes" xml:space="preserve">
          <source>Note that the hashes are used only for unique data identification and download verification.</source>
          <target state="translated">해시는 고유 한 데이터 식별 및 다운로드 확인에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="109b213e60f96d78e556497c78abce231429d2c5" translate="yes" xml:space="preserve">
          <source>Note that the header path has changed from SDL/SDL.h to just SDL.h This needed to change because &quot;proper&quot; SDL convention is #include &quot;SDL.h&quot;, not &amp;lt;SDL/SDL.h&amp;gt;. This is done for portability reasons because not all systems place things in SDL/ (see FreeBSD).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaab0de51c8108578ec13b98f6a495b2618eada" translate="yes" xml:space="preserve">
          <source>Note that the header path has changed from SDL/SDL.h to just SDL.h This needed to change because &amp;ldquo;proper&amp;rdquo; SDL convention is #include &amp;ldquo;SDL.h&amp;rdquo;, not &amp;lt;SDL/SDL.h&amp;gt;. This is done for portability reasons because not all systems place things in SDL/ (see FreeBSD).</source>
          <target state="translated">헤더 경로가 SDL / SDL.h에서 SDL.h로만 변경되었습니다.&amp;ldquo;적절한&amp;rdquo;SDL 규칙은 &amp;lt;SDL / SDL.h&amp;gt;가 아니라 #include&amp;ldquo;SDL.h&amp;rdquo;이므로 변경해야합니다. 모든 시스템이 SDL /에 배치하는 것은 아니기 때문에 이식성의 이유로 수행됩니다 (FreeBSD 참조).</target>
        </trans-unit>
        <trans-unit id="b45e434e8f686be4ee04a3a3f8c3a2f36e53ac21" translate="yes" xml:space="preserve">
          <source>Note that the implementation is 8-bit clean so source files may be encoded as UTF-8 on platforms with system APIs supporting this encoding. In addition, CMake 3.2 and above support source files encoded in UTF-8 on Windows (using UTF-16 to call system APIs). Furthermore, CMake 3.0 and above allow a leading UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte-Order Mark&lt;/a&gt; in source files.</source>
          <target state="translated">구현은 8 비트 클린이므로 소스 파일은이 인코딩을 지원하는 시스템 API가있는 플랫폼에서 UTF-8로 인코딩 될 수 있습니다. 또한 CMake 3.2 이상은 Windows에서 UTF-8로 인코딩 된 소스 파일을 지원합니다 (UTF-16을 사용하여 시스템 API 호출). 또한 CMake 3.0 이상 은 소스 파일에서 선행 UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;바이트 순서 표시&lt;/a&gt; 를 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="3041b4413dced77b86ba9021181e8fc309af6d22" translate="yes" xml:space="preserve">
          <source>Note that the implementation is 8-bit clean so source files may be encoded as UTF-8 on platforms with system APIs supporting this encoding. In addition, CMake 3.2 and above support source files encoded in UTF-8 on Windows (using UTF-16 to call system APIs). Furthermore, CMake 3.0 and above allow a leading UTF-8 &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte-Order Mark&lt;/a&gt; in source files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ec7e0e08db57a59d18b8a73ff7886d80ddd976" translate="yes" xml:space="preserve">
          <source>Note that the number of slots following the resource type specifies slots from a &lt;em&gt;single&lt;/em&gt; instance of the resource. If the resource group can tolerate receiving slots from different instances of the same resource, it can indicate this by splitting the specification into multiple requirements of one slot. For example:</source>
          <target state="translated">리소스 유형 다음의 슬롯 수는 리소스의 &lt;em&gt;단일&lt;/em&gt; 인스턴스 에서 슬롯을 지정 합니다. 리소스 그룹이 동일한 리소스의 다른 인스턴스에서 수신 슬롯을 허용 할 수있는 경우 사양을 하나의 슬롯에 대한 여러 요구 사항으로 분할하여이를 나타낼 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="fc40eddac2f499a1c6a950edcc5999c7a8a4e519" translate="yes" xml:space="preserve">
          <source>Note that the prefix(es) may still be searched for other reasons, such as being the same prefix as the CMake installation, or for being a built-in system prefix.</source>
          <target state="translated">CMake 설치와 동일한 접두사 또는 내장 시스템 접두사와 같은 다른 이유로 접두사를 계속 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8903f4774852403fae25828a644a87510a24a025" translate="yes" xml:space="preserve">
          <source>Note that the set of supported components is Ice version-specific.</source>
          <target state="translated">지원되는 구성 요소 세트는 Ice 버전마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9e03f00613d87ee8c036e50cd9f69dc4a8ebc7a7" translate="yes" xml:space="preserve">
          <source>Note that the standard &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; features are supported (i.e., &lt;code&gt;QUIET&lt;/code&gt;, &lt;code&gt;REQUIRED&lt;/code&gt;, etc.).</source>
          <target state="translated">표준 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 기능이 지원됩니다 (예 : &lt;code&gt;QUIET&lt;/code&gt; , &lt;code&gt;REQUIRED&lt;/code&gt; 등).</target>
        </trans-unit>
        <trans-unit id="8bcab119581a5bfc5319861531f6cf336a95ab6c" translate="yes" xml:space="preserve">
          <source>Note that the warning for this policy will be issued for at most one target. This avoids flooding users with messages for every target when setting the policy once will probably fix all targets.</source>
          <target state="translated">이 정책에 대한 경고는 최대 하나의 대상에 대해 발행됩니다. 이렇게하면 정책을 한 번 설정하면 모든 대상이 수정 될 때 모든 대상에 대한 메시지가 사용자에게 넘치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="236808773840b5419371459849320d6a306583a0" translate="yes" xml:space="preserve">
          <source>Note that there are no separate compile features properties or variables for the &lt;code&gt;OBJC&lt;/code&gt; or &lt;code&gt;OBJCXX&lt;/code&gt; languages. These are based off &lt;code&gt;C&lt;/code&gt; or &lt;code&gt;C++&lt;/code&gt; respectively, so the properties and variables for their corresponding base language should be used instead.</source>
          <target state="translated">&lt;code&gt;OBJC&lt;/code&gt; 또는 &lt;code&gt;OBJCXX&lt;/code&gt; 언어에 대한 별도의 컴파일 기능 속성이나 변수가 없습니다 . 이들은 각각 &lt;code&gt;C&lt;/code&gt; 또는 &lt;code&gt;C++&lt;/code&gt; 기반으로 하므로 해당 기본 언어에 대한 속성 및 변수를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ed1dca6959287a44a2e2a42736da332b9bffba6b" translate="yes" xml:space="preserve">
          <source>Note that there&amp;rsquo;s no variable for the C bindings being accessible through &lt;code&gt;mpi.h&lt;/code&gt;, since the MPI standards always have required this binding to work in both C and C++ code.</source>
          <target state="translated">MPI 표준은 항상이 바인딩이 C 및 C ++ 코드 모두에서 작동하도록 요구했기 때문에 &lt;code&gt;mpi.h&lt;/code&gt; 를 통해 C 바인딩에 액세스 할 수있는 변수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="6a9a729efa0f2e77e2abef635dae92f21fa9b40c" translate="yes" xml:space="preserve">
          <source>Note that there's no variable for the C bindings being accessible through &lt;code&gt;mpi.h&lt;/code&gt;, since the MPI standards always have required this binding to work in both C and C++ code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beebc73d4611e774d509944217d8006ffb0853c7" translate="yes" xml:space="preserve">
          <source>Note that this command returns the raw symlink path and does not resolve a relative path. The following is an example of how to ensure that an absolute path is obtained:</source>
          <target state="translated">이 명령은 원시 심볼릭 링크 경로를 반환하고 상대 경로를 확인하지 않습니다. 다음은 절대 경로를 확보하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="25abb1401700782e4e8812ff1472cefd81af46e9" translate="yes" xml:space="preserve">
          <source>Note that this example uses lower case commands in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. Upper, lower, and mixed case commands are supported by CMake. The source code for &lt;code&gt;tutorial.cxx&lt;/code&gt; is provided in the &lt;code&gt;Step1&lt;/code&gt; directory and can be used to compute the square root of a number.</source>
          <target state="translated">이 예제는 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 에서 소문자 명령을 사용 합니다. CMake는 대문자, 소문자 및 대소 문자 혼합 명령을 지원합니다. &lt;code&gt;tutorial.cxx&lt;/code&gt; 의 소스 코드 는 &lt;code&gt;Step1&lt;/code&gt; 디렉토리에 제공되며 숫자의 제곱근을 계산하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7884845fe4a77a551b625f18c9e934374908c819" translate="yes" xml:space="preserve">
          <source>Note that this scope chaining behavior only applies to calls to &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt;&lt;code&gt;get_directory_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt;&lt;code&gt;get_target_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt;&lt;code&gt;get_source_file_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt;&lt;code&gt;get_test_property()&lt;/code&gt;&lt;/a&gt;. There is no inheriting behavior when &lt;em&gt;setting&lt;/em&gt; properties, so using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with the &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command will not consider inherited values when working out the contents to append to.</source>
          <target state="translated">이 범위 체인 동작은 &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt; &lt;code&gt;get_directory_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt; &lt;code&gt;get_target_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt; &lt;code&gt;get_source_file_property()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt; &lt;code&gt;get_test_property()&lt;/code&gt; &lt;/a&gt; 대한 호출에만 적용됩니다 . 속성을 &lt;em&gt;설정할&lt;/em&gt; 때 상속되는 동작이 없으므로 &lt;code&gt;APPEND&lt;/code&gt; 또는 &lt;code&gt;APPEND_STRING&lt;/code&gt; 을 사용하십시오.&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 사용하면 추가 할 내용을 작업 할 때 상속 된 값을 고려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c58f6fc10a00d77a8aea1ad52e9a8b7d81b6df80" translate="yes" xml:space="preserve">
          <source>Note that this use of the term &quot;independent&quot; refers only to independence from external targets specified by the &lt;code&gt;DEPENDS&lt;/code&gt; option and is orthogonal to a step's dependencies on other steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a72a0f2b6ccce9bbb4be7ee482536ac1aaf762" translate="yes" xml:space="preserve">
          <source>Note that this use of the term &amp;ldquo;independent&amp;rdquo; refers only to independence from external targets specified by the &lt;code&gt;DEPENDS&lt;/code&gt; option and is orthogonal to a step&amp;rsquo;s dependencies on other steps.</source>
          <target state="translated">&quot;독립&quot;이라는 용어의 사용은 &lt;code&gt;DEPENDS&lt;/code&gt; 옵션에 의해 지정된 외부 대상으로부터의 독립만을 의미하며 다른 단계에 대한 단계의 종속성과 직교합니다.</target>
        </trans-unit>
        <trans-unit id="9413df23c60db77358449b12b5a59ac903d4d829" translate="yes" xml:space="preserve">
          <source>Note that this variable must always be set for a nightly build in a dashboard script. It is needed so that nightly builds can be properly grouped together in CDash.</source>
          <target state="translated">이 변수는 항상 대시 보드 스크립트에서 야간 빌드에 대해 설정되어야합니다. 야간 빌드가 CDash에서 적절하게 그룹화 될 수 있도록하기 위해 필요합니다.</target>
        </trans-unit>
        <trans-unit id="484d6b6caf2d5c08be824531674f557b2ccaae55" translate="yes" xml:space="preserve">
          <source>Note that this variable only has limited support on &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt;. It is recommended that you use the &lt;code&gt;$&amp;lt;CONFIG&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt; &lt;code&gt;Ninja Multi-Config&lt;/code&gt; &lt;/a&gt; 에서만 제한적으로 지원됩니다 . 대신 &lt;code&gt;$&amp;lt;CONFIG&amp;gt;&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt; 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="9fd87be943b6b896b8064d20a55a14cc1979aead" translate="yes" xml:space="preserve">
          <source>Note that this variable only has limited support on &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt;. It is recommended that you use the &lt;code&gt;$&amp;lt;CONFIG&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08220f5d5eff8872083954f44f517d0f93baaab4" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; no actual scope needs to be given; only the kind of scope is important.</source>
          <target state="translated">&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt; 와 달리&lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt;실제 범위는 제공 할 필요가 없습니다. 범위의 종류 만 중요합니다.</target>
        </trans-unit>
        <trans-unit id="aa6421f58a325323c372d9989be3ba6b83236ea9" translate="yes" xml:space="preserve">
          <source>Note that usage requirements are not designed as a way to make downstreams use particular &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; etc for convenience only. The contents of the properties must be &lt;strong&gt;requirements&lt;/strong&gt;, not merely recommendations or convenience.</source>
          <target state="translated">사용 요구 사항은 다운 스트림이 특정 &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 등을 편의상 사용하도록 만드는 방법으로 설계되지 않았습니다 . 속성의 내용은 권장 사항이나 편의성이 아니라 &lt;strong&gt;요구 사항&lt;/strong&gt; 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="2e1f3a9dd0419a106187145f1ab7e40cdae28bae" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt; variables inside a toolchain file is typically undesirable. The toolchain file is used in contexts where these variables have different values when used in different places (e.g. as part of a call to &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt;). In most cases, where there is a need to evaluate paths inside a toolchain file, the more appropriate variable to use would be &lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt;&lt;/a&gt;, since it always has an unambiguous, predictable value.</source>
          <target state="translated">참고 사용하여 해당 &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; 을&lt;/a&gt;툴체인 파일 내 또는 &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 변수 것은 일반적으로 바람직하지 않습니다. 툴체인 파일은 다른 위치에서 사용될 때 (예 : &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 호출의 일부로) 이러한 변수의 값이 다른 컨텍스트에서 사용됩니다 . 대부분의 경우 툴체인 파일 내부의 경로를 평가해야하는 경우 사용하기에 더 적합한 변수는 다음과 같습니다.&lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt; &lt;/a&gt;는 항상 명확하고 예측 가능한 값을 갖기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="a81524d9ff8bac835f2ae2c90dd51c5abcbf5a8e" translate="yes" xml:space="preserve">
          <source>Note that while Windows environment variable names are case-insensitive, variable names within a preset are still case-sensitive. This may lead to unexpected results when using inconsistent casing. For best results, keep the casing of environment variable names consistent.</source>
          <target state="translated">Windows 환경 변수 이름은 대소 문자를 구분하지 않지만 사전 설정 내의 변수 이름은 여전히 ​​대소 문자를 구분합니다. 일치하지 않는 대 / 소문자를 사용할 때 예기치 않은 결과가 발생할 수 있습니다. 최상의 결과를 얻으려면 환경 변수 이름의 대소 문자를 일관되게 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="2c03a5a0d8e8fa9594d093e6fdfcbf0c230a5fac" translate="yes" xml:space="preserve">
          <source>Note that with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; there is no way to represent target-wide compile definitions or include directories separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Also, with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; there is no way to represent target-wide flags separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Under these generators, expressions for both C and C++ sources will be evaluated using &lt;code&gt;CXX&lt;/code&gt; if there are any C++ sources and otherwise using &lt;code&gt;C&lt;/code&gt;. A workaround is to create separate libraries for each source file language instead:</source>
          <target state="translated">참고 것을 함께 &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; 를&lt;/a&gt; 대상 전체 컴파일 정의를 대표하거나 별도로 디렉토리를 포함 할 수있는 방법이 없습니다 &lt;code&gt;C&lt;/code&gt; 와 &lt;code&gt;CXX&lt;/code&gt; 언어. 또한&lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt; Visual Studio Generators&lt;/a&gt; 를 사용하면 &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;CXX&lt;/code&gt; 언어에 대해 대상 전체 플래그를 별도로 나타낼 수있는 방법이 없습니다 . 이러한 생성기에서 C ++ 소스가있는 경우 &lt;code&gt;CXX&lt;/code&gt; 소스를 사용하고 C ++ 소스가있는 경우 CXX 소스를 사용하여 표현식을 평가 합니다. &lt;code&gt;C&lt;/code&gt; 가 . 해결 방법은 각 소스 파일 언어마다 별도의 라이브러리를 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6c1baeb148973c5233271bb87fb6d337bc5e786d" translate="yes" xml:space="preserve">
          <source>Note that with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; there is no way to represent target-wide compile definitions or include directories separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Also, with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; there is no way to represent target-wide flags separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Under these generators, expressions for both C and C++ sources will be evaluated using &lt;code&gt;CXX&lt;/code&gt; if there are any C++ sources and otherwise using &lt;code&gt;C&lt;/code&gt;. A workaround is to create separate libraries for each source file language instead:</source>
          <target state="translated">참고 것을 함께 &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; 를&lt;/a&gt; 대상 전체 컴파일 정의를 대표하거나 별도로 디렉토리를 포함 할 수있는 방법이 없습니다 &lt;code&gt;C&lt;/code&gt; 와 &lt;code&gt;CXX&lt;/code&gt; 언어. 또한 &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generator&lt;/a&gt; 를 사용하면 &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;CXX&lt;/code&gt; 언어에 대해 대상 전체 플래그를 개별적으로 표현할 방법이 없습니다 . 이 발전기에서 C 및 C ++ 소스를 모두 표현하여 평가됩니다 &lt;code&gt;CXX&lt;/code&gt; 를 사용하는 C ++ 소스와 그렇지 않은 경우가있는 경우 &lt;code&gt;C&lt;/code&gt; 가 . 해결 방법은 대신 각 소스 파일 언어에 대해 별도의 라이브러리를 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="45293461dd563a602a408ffc5520b95abf3a5150" translate="yes" xml:space="preserve">
          <source>Note that with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; there is no way to represent target-wide compile definitions or include directories separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Also, with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; there is no way to represent target-wide flags separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Under these generators, expressions for both C and C++ sources will be evaluated using &lt;code&gt;CXX&lt;/code&gt; if there are any C++ sources and otherwise using &lt;code&gt;C&lt;/code&gt;. A workaround is to create separate libraries for each source file language instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3036fb3c151fe01bb2dd355a3a164423564d41f" translate="yes" xml:space="preserve">
          <source>Note the use of the variable &lt;code&gt;EXTRA_LIBS&lt;/code&gt; to collect up any optional libraries to later be linked into the executable. The variable &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; is used similarly for optional header files. This is a classic approach when dealing with many optional components, we will cover the modern approach in the next step.</source>
          <target state="translated">&lt;code&gt;EXTRA_LIBS&lt;/code&gt; 변수를 사용 하여 나중에 실행 파일에 링크 할 선택적 라이브러리를 수집합니다. &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; 변수 는 선택적 헤더 파일에 대해 유사하게 사용됩니다. 이것은 많은 선택적 구성 요소를 다룰 때 고전적인 접근 방식이며 다음 단계에서 최신 접근 방식을 다룰 것입니다.</target>
        </trans-unit>
        <trans-unit id="0f7efeb68717379846d32660b9cabe863cff2cb2" translate="yes" xml:space="preserve">
          <source>Note, we have &lt;em&gt;not&lt;/em&gt; asked CMake to install the export yet.</source>
          <target state="translated">주, 우리가 &lt;em&gt;하지&lt;/em&gt; 아직 수출을 설치 CMake를 물었다.</target>
        </trans-unit>
        <trans-unit id="0035786e92decfb7fc259d790535fcdcb02b382c" translate="yes" xml:space="preserve">
          <source>Note: The full source code for the examples in this section is not provided and is left as an exercise for the reader.</source>
          <target state="translated">참고 :이 섹션의 예제에 대한 전체 소스 코드는 제공되지 않으며 독자를위한 연습용으로 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="3c5d0ff7dc0767994a19a7e06fd5840c226819cd" translate="yes" xml:space="preserve">
          <source>Note: WinRT compilation is always explicitly disabled for C language source files, even if it is expliclty enabled for a project</source>
          <target state="translated">참고 : WinRT 컴파일은 프로젝트에 대해 명시 적으로 활성화 된 경우에도 항상 C 언어 소스 파일에 대해 명시 적으로 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="1183f0d1b7af55393a8b594bfe6e52898c792e5e" translate="yes" xml:space="preserve">
          <source>Now install the project:</source>
          <target state="translated">이제 프로젝트를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="fcfcfbe6fab053e0d4f16e258c52b45bfa35b870" translate="yes" xml:space="preserve">
          <source>Now let us make the MathFunctions library optional. While for the tutorial there really isn&amp;rsquo;t any need to do so, for larger projects this is a common occurrence. The first step is to add an option to the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">이제 MathFunctions 라이브러리를 선택적으로 만들어 보겠습니다. 튜토리얼의 경우 실제로 그렇게 할 필요가 없지만 더 큰 프로젝트의 경우 일반적으로 발생합니다. 첫 번째 단계는 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일에 옵션을 추가하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="31dacca7d5326d1b489220606327ad73bd894535" translate="yes" xml:space="preserve">
          <source>Now let us make the MathFunctions library optional. While for the tutorial there really isn't any need to do so, for larger projects this is a common occurrence. The first step is to add an option to the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668628d45868677b85c7098851a0120f5b22f4fe" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add these defines to &lt;code&gt;TutorialConfig.h.in&lt;/code&gt; so that we can use them from &lt;code&gt;mysqrt.cxx&lt;/code&gt;:</source>
          <target state="translated">이제 이러한 정의를 &lt;code&gt;TutorialConfig.h.in&lt;/code&gt; 에 추가 하여 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba98443501960e0e0983f6b50ff17628d5665c38" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s update the value of &lt;code&gt;USE_MYMATH&lt;/code&gt;. The easiest way is to use the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-1-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;re in the terminal. Or, alternatively, if you want to change the option from the command-line, try:</source>
          <target state="translated">이제 &lt;code&gt;USE_MYMATH&lt;/code&gt; 값을 업데이트 하겠습니다 . 가장 쉬운 방법은 터미널에있는 경우 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-1-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake&lt;/code&gt; &lt;/a&gt; 를 사용하는 것 입니다. 또는 명령 줄에서 옵션을 변경하려면 다음을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="2fe7ca8a2c889fa3ce1eab0342ffe6827b0a2770" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s use the generated table. First, modify &lt;code&gt;mysqrt.cxx&lt;/code&gt; to include &lt;code&gt;Table.h&lt;/code&gt;. Next, we can rewrite the mysqrt function to use the table:</source>
          <target state="translated">이제 생성 된 테이블을 사용하겠습니다. 먼저 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 를 수정하여 Table.h 를 포함 &lt;code&gt;Table.h&lt;/code&gt; . 다음으로 mysqrt 함수를 다시 작성하여 테이블을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19fa92c255e8619643892c93c139dbf52628d33d" translate="yes" xml:space="preserve">
          <source>Now let's update the value of &lt;code&gt;USE_MYMATH&lt;/code&gt;. The easiest way is to use the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-1-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake&lt;/code&gt;&lt;/a&gt; if you're in the terminal. Or, alternatively, if you want to change the option from the command-line, try:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438028a55e3145e6e3c5b032036e996c979cde7a" translate="yes" xml:space="preserve">
          <source>Now let's use the generated table. First, modify &lt;code&gt;mysqrt.cxx&lt;/code&gt; to include &lt;code&gt;Table.h&lt;/code&gt;. Next, we can rewrite the mysqrt function to use the table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90221c16faa2ce1277a0208f2d511b1764ae28a" translate="yes" xml:space="preserve">
          <source>Now run the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable or the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; to configure the project and then build it with your chosen build tool.</source>
          <target state="translated">이제 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; 실행 파일 또는 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt; 를 실행 하여 프로젝트를 구성한 다음 선택한 빌드 도구로 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="4083d8d69e8b56b109b49e83dae92ad2145b34de" translate="yes" xml:space="preserve">
          <source>Now that both the debug and release builds are complete, we can use a custom configuration file to package both builds into a single release. In the &lt;code&gt;Step12&lt;/code&gt; directory, create a file called &lt;code&gt;MultiCPackConfig.cmake&lt;/code&gt;. In this file, first include the default configuration file that was created by the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-8-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable.</source>
          <target state="translated">이제 디버그 및 릴리스 빌드가 모두 완료되었으므로 사용자 지정 구성 파일을 사용하여 두 빌드를 단일 릴리스로 패키징 할 수 있습니다. 에서 &lt;code&gt;Step12&lt;/code&gt; 의 디렉토리라는 파일 생성 &lt;code&gt;MultiCPackConfig.cmake&lt;/code&gt; 을 . 이 파일에 먼저 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-8-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; 실행 파일에 의해 생성 된 기본 구성 파일을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="b3dc43edb1391ef3aab7e04a820819f20de5a6e6" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;MathFunctions&lt;/code&gt; library and header file are installed, we also need to explicitly install the &lt;code&gt;MathFunctionsTargets&lt;/code&gt; export details. Use the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command to export the targets in &lt;code&gt;MathFunctionsTargets&lt;/code&gt;, as defined by the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이제 &lt;code&gt;MathFunctions&lt;/code&gt; 라이브러리와 헤더 파일이 설치 &lt;code&gt;MathFunctionsTargets&lt;/code&gt; 내보내기 세부 정보도 명시 적으로 설치해야합니다 . 사용 &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-4-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 에서 대상을 내보낼 명령을 &lt;code&gt;MathFunctionsTargets&lt;/code&gt; 에 의해 정의 된 &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-5-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="3fb7b566d33af908ed933b0734cc083e4f37d264" translate="yes" xml:space="preserve">
          <source>Now that we have MathFunctions being exported, we also need to explicitly install the generated &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; file. This is done by adding the following to the bottom of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">이제 MathFunctions를 내보냈 &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; 생성 된 MathFunctionsTargets.cmake 파일도 명시 적으로 설치해야 합니다. 이것은 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 맨 아래에 다음을 추가하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="08b20dfed5e9d3e7c07fd87c326fb380a68803a6" translate="yes" xml:space="preserve">
          <source>Now that we have made MathFunctions always be used, we will need to update the logic of that library. So, in &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; we need to create a SqrtLibrary that will conditionally be built and installed when &lt;code&gt;USE_MYMATH&lt;/code&gt; is enabled. Now, since this is a tutorial, we are going to explicitly require that SqrtLibrary is built statically.</source>
          <target state="translated">이제 MathFunctions를 항상 사용하도록 만들었으므로 해당 라이브러리의 논리를 업데이트해야합니다. 따라서 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 에서 &lt;code&gt;USE_MYMATH&lt;/code&gt; 가 활성화 될 때 조건부로 빌드 및 설치 될 SqrtLibrary를 만들어야 합니다. 이제 이것은 튜토리얼이므로 SqrtLibrary가 정적으로 빌드되도록 명시 적으로 요구할 것입니다.</target>
        </trans-unit>
        <trans-unit id="f70c43d9dafd5dd537cbc963e988526068390e9b" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve specified usage requirements for MathFunctions we can safely remove our uses of the &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; variable from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, here:</source>
          <target state="translated">이제 MathFunctions에 대한 사용 요구 사항을 지정 했으므로 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 에서 &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; 변수 사용을 안전하게 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="715d85b338bdc77c290fd68bab2b5e4cfdd196c6" translate="yes" xml:space="preserve">
          <source>Now that we've specified usage requirements for MathFunctions we can safely remove our uses of the &lt;code&gt;EXTRA_INCLUDES&lt;/code&gt; variable from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c086b33787eb5cc94bfa3b71d160100a05c8307" translate="yes" xml:space="preserve">
          <source>Now we can build the project as described in earlier sections. To test using this package, we can use the project in &lt;code&gt;Help\guide\importing-exporting\DownstreamComponents&lt;/code&gt;. There&amp;rsquo;s two differences from the previous &lt;code&gt;Downstream&lt;/code&gt; project. First, we need to find the package components. Change the &lt;code&gt;find_package&lt;/code&gt; line from:</source>
          <target state="translated">이제 이전 섹션에서 설명한대로 프로젝트를 빌드 할 수 있습니다. 이 패키지를 사용하여 테스트하려면 &lt;code&gt;Help\guide\importing-exporting\DownstreamComponents&lt;/code&gt; 의 프로젝트를 사용할 수 있습니다 . 이전 &lt;code&gt;Downstream&lt;/code&gt; 프로젝트와 두 가지 차이점이 있습니다 . 먼저 패키지 구성 요소를 찾아야합니다. &lt;code&gt;find_package&lt;/code&gt; 행을 다음에서 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="57680249624774e3178a9dcf70ada9f0426334bb" translate="yes" xml:space="preserve">
          <source>Now we can build the project as described in earlier sections. To test using this package, we can use the project in &lt;code&gt;Help\guide\importing-exporting\DownstreamComponents&lt;/code&gt;. There's two differences from the previous &lt;code&gt;Downstream&lt;/code&gt; project. First, we need to find the package components. Change the &lt;code&gt;find_package&lt;/code&gt; line from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06b089b2e03bbe8a3014cc653fd7b656865dada" translate="yes" xml:space="preserve">
          <source>Now we can create a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file for the &lt;code&gt;MathFunctions&lt;/code&gt; project. Start by specifying the &lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required()&lt;/code&gt;&lt;/a&gt; version and &lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; name:</source>
          <target state="translated">이제 &lt;code&gt;MathFunctions&lt;/code&gt; 프로젝트에 대한 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 만들 수 있습니다 . &lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required()&lt;/code&gt; &lt;/a&gt; 버전 및 &lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 이름 을 지정하여 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="f78b1061574f8f80f919ebec192c2576b7207048" translate="yes" xml:space="preserve">
          <source>Now we can import this executable into another CMake project. The source code for this section is available in &lt;code&gt;Help/guide/importing-exporting/Importing&lt;/code&gt;. In the CMakeLists file, use the &lt;a href=&quot;../../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command to create a new target called &lt;code&gt;myexe&lt;/code&gt;. Use the &lt;code&gt;IMPORTED&lt;/code&gt; option to tell CMake that this target references an executable file located outside of the project. No rules will be generated to build it and the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-8-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target property will be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이제이 실행 파일을 다른 CMake 프로젝트로 가져올 수 있습니다. 이 섹션의 소스 코드는 &lt;code&gt;Help/guide/importing-exporting/Importing&lt;/code&gt; 에 있습니다. CMakeLists 파일에서 &lt;a href=&quot;../../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 &lt;code&gt;myexe&lt;/code&gt; 라는 새 대상을 만듭니다 . &lt;code&gt;IMPORTED&lt;/code&gt; 옵션을 사용 하여이 대상이 프로젝트 외부에있는 실행 파일을 참조 함을 CMake에 알립니다. 빌드를위한 규칙이 생성되지 않으며 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-8-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 속성이 &lt;code&gt;true&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7bf8f7205081a7e280cf5a377b46f15957ddc08d" translate="yes" xml:space="preserve">
          <source>Now we can start adding install rules and testing support to our project.</source>
          <target state="translated">이제 설치 규칙을 추가하고 프로젝트에 지원을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fab189de3bf655a6d92b1317980dbddc74c41d45" translate="yes" xml:space="preserve">
          <source>Now we can use &lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt;&lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt;&lt;/a&gt; to do most of the rest of the work for us</source>
          <target state="translated">이제 &lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt; &lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있습니다 를 하여 나머지 작업을 대부분 수행</target>
        </trans-unit>
        <trans-unit id="37f6e23cf1b64fb87b9e0ccd6509a24a7ed78d8a" translate="yes" xml:space="preserve">
          <source>Now we need to create the package configuration file itself. In this case, the &lt;code&gt;Config.cmake.in&lt;/code&gt; file is very simple but sufficient to allow downstreams to use the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-21-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets.</source>
          <target state="translated">이제 패키지 구성 파일 자체를 만들어야합니다. 이 경우 &lt;code&gt;Config.cmake.in&lt;/code&gt; 파일은 매우 간단하지만 다운 스트림이 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-21-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 을 사용하도록 허용하기에 충분합니다 .</target>
        </trans-unit>
        <trans-unit id="9c4ce8c5233f46c9cbb8f11e6b815dcefb7e603e" translate="yes" xml:space="preserve">
          <source>Now we need to find the libraries and include files; we use the information from &lt;code&gt;pkg-config&lt;/code&gt; to provide hints to CMake about where to look.</source>
          <target state="translated">이제 라이브러리를 찾고 파일을 포함시켜야합니다. 우리는 정보를 사용합니다 &lt;code&gt;pkg-config&lt;/code&gt; 어디에서 CMake에 힌트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a632abd436f76ed3c990b5d9d478e82e65c90153" translate="yes" xml:space="preserve">
          <source>Now we need to setup debug and release builds. We can use &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; to set the configuration type:</source>
          <target state="translated">이제 디버그 및 릴리스 빌드를 설정해야합니다. &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; &lt;/a&gt; 을 사용하여 구성 유형을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f45f3f8da5adc56570a9f939f4ebf4b497c2a0e" translate="yes" xml:space="preserve">
          <source>Now we will add a library to our project. This library will contain our own implementation for computing the square root of a number. The executable can then use this library instead of the standard square root function provided by the compiler.</source>
          <target state="translated">이제 프로젝트에 라이브러리를 추가합니다. 이 라이브러리에는 숫자의 제곱근을 계산하기위한 자체 구현이 포함됩니다. 실행 파일은 컴파일러에서 제공하는 표준 제곱근 함수 대신이 라이브러리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce1e8278d68c5642856421416cf841ac5db3d153" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;re ready to create a project to use the installed &lt;code&gt;MathFunctions&lt;/code&gt; library. In this section we will be using source code from &lt;code&gt;Help\guide\importing-exporting\Downstream&lt;/code&gt;. In this directory, there is a source file called &lt;code&gt;main.cc&lt;/code&gt; that uses the &lt;code&gt;MathFunctions&lt;/code&gt; library to calculate the square root of a given number and then prints the results:</source>
          <target state="translated">이제 설치된 &lt;code&gt;MathFunctions&lt;/code&gt; 라이브러리 를 사용할 프로젝트를 만들 준비가되었습니다 . 이 섹션에서는 &lt;code&gt;Help\guide\importing-exporting\Downstream&lt;/code&gt; 소스 코드를 사용합니다 . 이 디렉토리에서라는 소스 파일이 &lt;code&gt;main.cc&lt;/code&gt; 용도 &lt;code&gt;MathFunctions&lt;/code&gt; 주어진 수의 제곱근을 계산하는 라이브러리를 한 후 그 결과를 출력은 :</target>
        </trans-unit>
        <trans-unit id="6d05aace5f7ee0acde47f38f90146430cb5b2f64" translate="yes" xml:space="preserve">
          <source>Now we're ready to create a project to use the installed &lt;code&gt;MathFunctions&lt;/code&gt; library. In this section we will be using source code from &lt;code&gt;Help\guide\importing-exporting\Downstream&lt;/code&gt;. In this directory, there is a source file called &lt;code&gt;main.cc&lt;/code&gt; that uses the &lt;code&gt;MathFunctions&lt;/code&gt; library to calculate the square root of a given number and then prints the results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d077a61a1c112d07535b8869aa326e3ffc29965" translate="yes" xml:space="preserve">
          <source>Null pointer, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431에&lt;/a&gt; 정의 된 널 포인터 .</target>
        </trans-unit>
        <trans-unit id="4e33ab127a2fcf146100d3d84dd3dccba4ee334f" translate="yes" xml:space="preserve">
          <source>NumPy Python library. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">NumPy Python 라이브러리. 구성 요소 &lt;code&gt;NumPy&lt;/code&gt; 인 경우 정의 된 대상 가있는 .</target>
        </trans-unit>
        <trans-unit id="3aa58fa2a36dcf6be068fc411b39262950a44cdf" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 2. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">Python 2 용 NumPy 라이브러리 &lt;code&gt;NumPy&lt;/code&gt; . NumPy 가있는 .</target>
        </trans-unit>
        <trans-unit id="fba964df5c30ec5ef79cb140f58480def575d65e" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 3. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">Python 3 용 NumPy 라이브러리 &lt;code&gt;NumPy&lt;/code&gt; . NumPy 가있는 .</target>
        </trans-unit>
        <trans-unit id="c802dfca903c2a2d97f2a9a6c5fc2e5ad7cf6df5" translate="yes" xml:space="preserve">
          <source>Number of MPI processors to utilize. Defaults to the number of processors detected on the host system.</source>
          <target state="translated">사용할 MPI 프로세서 수 호스트 시스템에서 감지 된 프로세서 수는 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="1cb0011a6258db2a2a59f5fe51f730d3b71d910c" translate="yes" xml:space="preserve">
          <source>Number of command line arguments passed to CMake in script mode.</source>
          <target state="translated">스크립트 모드에서 CMake에 전달 된 명령 줄 인수의 수입니다.</target>
        </trans-unit>
        <trans-unit id="a037c2d6117b3123656653aa77d4d68fa37543ba" translate="yes" xml:space="preserve">
          <source>Number of logical cores</source>
          <target state="translated">논리 코어 수</target>
        </trans-unit>
        <trans-unit id="701494a30c898736fff1a7b1b8c1d5a138ec5d44" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">병렬 수 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스를 사용할 때 시작 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e9ec0542e8fe5407201e4705269e9661cc05030" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">병렬 수 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스를 사용하는 경우 시작 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7eeda1c731e1f3d6019a494278d310c806dfd79f" translate="yes" xml:space="preserve">
          <source>Number of physical cores</source>
          <target state="translated">물리적 코어 수</target>
        </trans-unit>
        <trans-unit id="53fed443889b5067e0ce1565f3e6aaf85385ac1f" translate="yes" xml:space="preserve">
          <source>Number of threads for parallel compilation for Swift targets.</source>
          <target state="translated">Swift 대상에 대한 병렬 컴파일을위한 스레드 수</target>
        </trans-unit>
        <trans-unit id="049b48ccfc69e8b71a3a08e922b5c8b1d3cede1a" translate="yes" xml:space="preserve">
          <source>Number of threads to use when performing parallelized operations, such as compressing the installer package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e31742694b0ad46224d8ce0dea133a82506472" translate="yes" xml:space="preserve">
          <source>Number of version components of the lower end point, 0 to 4</source>
          <target state="translated">하위 엔드 포인트의 버전 구성 요소 수, 0 ~ 4</target>
        </trans-unit>
        <trans-unit id="5335d1f9ccd56f6a5759289bf3212ea4f7723ffe" translate="yes" xml:space="preserve">
          <source>Number of version components of the upper end point, 0 to 4</source>
          <target state="translated">상단 끝점의 버전 구성 요소 수, 0 ~ 4</target>
        </trans-unit>
        <trans-unit id="aaf507339d6a5441d02449948e8658251284de51" translate="yes" xml:space="preserve">
          <source>Number of version components, 0 to 4</source>
          <target state="translated">버전 구성 요소 수, 0 ~ 4</target>
        </trans-unit>
        <trans-unit id="465c8a01a76625bc7bff7484a7fdb95de42ee295" translate="yes" xml:space="preserve">
          <source>OBJC</source>
          <target state="translated">OBJC</target>
        </trans-unit>
        <trans-unit id="c7c38b43c1081b5294798d435f7f802eef18a0b6" translate="yes" xml:space="preserve">
          <source>OBJCXX</source>
          <target state="translated">OBJCXX</target>
        </trans-unit>
        <trans-unit id="376f9ec691b45e54eb878c70be33e24bc8889036" translate="yes" xml:space="preserve">
          <source>OBJCXX_EXTENSIONS</source>
          <target state="translated">OBJCXX_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="41e53ab1fca6eb9604e69b0285783c06a9d617d8" translate="yes" xml:space="preserve">
          <source>OBJCXX_STANDARD</source>
          <target state="translated">OBJCXX_STANDARD</target>
        </trans-unit>
        <trans-unit id="70e3b79430e2a46666ee8d53cda4f28a197e7ebb" translate="yes" xml:space="preserve">
          <source>OBJCXX_STANDARD_REQUIRED</source>
          <target state="translated">OBJCXX_STANDARD_REQUIRED</target>
        </trans-unit>
        <trans-unit id="cafd499cb1ccd2dc960160f5366fde5cbb75a8ba" translate="yes" xml:space="preserve">
          <source>OBJC_EXTENSIONS</source>
          <target state="translated">OBJC_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="cd935e619de86773f105ba448465548b64c94795" translate="yes" xml:space="preserve">
          <source>OBJC_STANDARD</source>
          <target state="translated">OBJC_STANDARD</target>
        </trans-unit>
        <trans-unit id="bf67595ec75ca9ad24fffe5e5c7f6d63704ed0dd" translate="yes" xml:space="preserve">
          <source>OBJC_STANDARD_REQUIRED</source>
          <target state="translated">OBJC_STANDARD_REQUIRED</target>
        </trans-unit>
        <trans-unit id="3a8cbcf5cb4e32d9dcd121755ea1b93ec6755eb9" translate="yes" xml:space="preserve">
          <source>OBJECT_DEPENDS</source>
          <target state="translated">OBJECT_DEPENDS</target>
        </trans-unit>
        <trans-unit id="486e7d54a1c6dc3b34e9cd5091a2aa9d7aa485b8" translate="yes" xml:space="preserve">
          <source>OBJECT_OUTPUTS</source>
          <target state="translated">OBJECT_OUTPUTS</target>
        </trans-unit>
        <trans-unit id="9cbba944964659b08681678766a30b729b69fcd8" translate="yes" xml:space="preserve">
          <source>ODR (One definition rule) errors</source>
          <target state="translated">ODR (하나의 정의 규칙) 오류</target>
        </trans-unit>
        <trans-unit id="4eb942ffad5a4ca752f33cb40964a120a9b617e4" translate="yes" xml:space="preserve">
          <source>ONE_PER_GROUP (default): create one package per component group</source>
          <target state="translated">ONE_PER_GROUP (기본값) : 구성 요소 그룹당 하나의 패키지 생성</target>
        </trans-unit>
        <trans-unit id="0fb01508b6d15eee3431078e3ee55df0aed8f005" translate="yes" xml:space="preserve">
          <source>ONE_PER_GROUP (default): creates one package file per component group</source>
          <target state="translated">ONE_PER_GROUP (기본값) : 구성 요소 그룹당 하나의 패키지 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5d592c6b72732581408f8ac7ce8b51df31dc90cc" translate="yes" xml:space="preserve">
          <source>OPTIMIZE_DEPENDENCIES</source>
          <target state="translated">OPTIMIZE_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="ee556e47159c055a64fe397a86c24b6f5516e1cf" translate="yes" xml:space="preserve">
          <source>OPTIONS If you need OpenGL support please</source>
          <target state="translated">옵션 OpenGL 지원이 필요한 경우</target>
        </trans-unit>
        <trans-unit id="de8aa86286dbb8eb74d2748c7b6d4486d0458203" translate="yes" xml:space="preserve">
          <source>OS</source>
          <target state="translated">OS</target>
        </trans-unit>
        <trans-unit id="79cd8301d2c73c8df2769fba809939382ba38597" translate="yes" xml:space="preserve">
          <source>OS X: The installed versions of Matlab/MCR are given by the MATLAB default installation paths in &lt;code&gt;/Application&lt;/code&gt;. If no such application is found, it falls back to the one that might be accessible from the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">OS X : 설치된 Matlab / MCR 버전은 &lt;code&gt;/Application&lt;/code&gt; 의 MATLAB 기본 설치 경로에 의해 제공됩니다 . 이러한 응용 프로그램을 찾지 못하면 &lt;code&gt;PATH&lt;/code&gt; 에서 액세스 할 수있는 응용 프로그램으로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="42528febd8e9722a1588b91f2af82366cf9eb79b" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_FOUND - Was osgAnimation found? OSGANIMATION_INCLUDE_DIR - Where to find the headers OSGANIMATION_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSGANIMATION_FOUND-osgAnimation을 찾았습니까? OSGANIMATION_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGANIMATION_LIBRARIES-OSG에 대해 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="8e4548385da58522f55038216a8e7fb15d42facb" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_LIBRARY - The OSG library OSGANIMATION_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSGANIMATION_LIBRARY-OSG 라이브러리 OSGANIMATION_LIBRARY_DEBUG-OSG 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="8090e9bbcf8bf38dc5d14b4556af9c0f22b20a0a" translate="yes" xml:space="preserve">
          <source>OSGFX_FOUND - Was osgFX found? OSGFX_INCLUDE_DIR - Where to find the headers OSGFX_LIBRARIES - The libraries to link against for the osgFX (use this)</source>
          <target state="translated">OSGFX_FOUND-osgFX를 찾았습니까? OSGFX_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGFX_LIBRARIES-osgFX에 대해 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="c49266128c8fc1fe62170de0d1b75c72aaa28ec5" translate="yes" xml:space="preserve">
          <source>OSGFX_LIBRARY - The osgFX library OSGFX_LIBRARY_DEBUG - The osgFX debug library</source>
          <target state="translated">OSGFX_LIBRARY-osgFX 라이브러리 OSGFX_LIBRARY_DEBUG-osgFX 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="a3d2aab905675a8f0c71f1ad8c4603d1069a6137" translate="yes" xml:space="preserve">
          <source>OSGGA_FOUND - Was osgGA found? OSGGA_INCLUDE_DIR - Where to find the headers OSGGA_LIBRARIES - The libraries to link against for the osgGA (use this)</source>
          <target state="translated">OSGGA_FOUND-osgGA를 찾았습니까? OSGGA_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGGA_LIBRARIES-osgGA에 대해 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="d47d0798fcec889fbda51dba05e55768a62b7808" translate="yes" xml:space="preserve">
          <source>OSGGA_LIBRARY - The osgGA library OSGGA_LIBRARY_DEBUG - The osgGA debug library</source>
          <target state="translated">OSGGA_LIBRARY-osgGA 라이브러리 OSGGA_LIBRARY_DEBUG-osgGA 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="19f62c46c97d8d6634a38dd0c68599e0151563d2" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_FOUND - Was osgIntrospection found? OSGINTROSPECTION_INCLUDE_DIR - Where to find the headers OSGINTROSPECTION_LIBRARIES - The libraries to link for osgIntrospection (use this)</source>
          <target state="translated">OSGINTROSPECTION_FOUND-osgIntrospection을 찾았습니까? OSGINTROSPECTION_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGINTROSPECTION_LIBRARIES-osgIntrospection에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="5b05156cfa516be8dd1a21b273d9534e1e2aa1a3" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_LIBRARY - The osgIntrospection library OSGINTROSPECTION_LIBRARY_DEBUG - The osgIntrospection debug library</source>
          <target state="translated">OSGINTROSPECTION_LIBRARY-osgIntrospection 라이브러리 OSGINTROSPECTION_LIBRARY_DEBUG-osgIntrospection 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="454638bc2a61e329ccda1cf5458521c72769c4e5" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_FOUND - Was osgManipulator found? OSGMANIPULATOR_INCLUDE_DIR - Where to find the headers OSGMANIPULATOR_LIBRARIES - The libraries to link for osgManipulator (use this)</source>
          <target state="translated">OSGMANIPULATOR_FOUND-osgManipulator를 찾았습니까? OSGMANIPULATOR_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGMANIPULATOR_LIBRARIES-osgManipulator에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="25bc747926a66c9bca81bb6154daa78a0615d883" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_LIBRARY - The osgManipulator library OSGMANIPULATOR_LIBRARY_DEBUG - The osgManipulator debug library</source>
          <target state="translated">OSGMANIPULATOR_LIBRARY-osgManipulator 라이브러리 OSGMANIPULATOR_LIBRARY_DEBUG-osgManipulator 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="834b94753b186d32d77393b50ab76b294180c50e" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_FOUND - Was osgParticle found? OSGPARTICLE_INCLUDE_DIR - Where to find the headers OSGPARTICLE_LIBRARIES - The libraries to link for osgParticle (use this)</source>
          <target state="translated">OSGPARTICLE_FOUND-osgParticle을 찾았습니까? OSGPARTICLE_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGPARTICLE_LIBRARIES-osgParticle에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="695fde7fcd5e800ca826d49e39e8b3f76bdb33ec" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_LIBRARY - The osgParticle library OSGPARTICLE_LIBRARY_DEBUG - The osgParticle debug library</source>
          <target state="translated">OSGPARTICLE_LIBRARY-osgParticle 라이브러리 OSGPARTICLE_LIBRARY_DEBUG-osgParticle 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="6381502041b1fafa1be9bba1237e7c6aa093d1ca" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_FOUND - Was osgPresentation found? OSGPRESENTATION_INCLUDE_DIR - Where to find the headers OSGPRESENTATION_LIBRARIES - The libraries to link for osgPresentation (use this)</source>
          <target state="translated">OSGPRESENTATION_FOUND-osgPresentation을 찾았습니까? OSGPRESENTATION_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGPRESENTATION_LIBRARIES-osgPresentation에 링크 할 라이브러리 (이것을 사용하십시오)</target>
        </trans-unit>
        <trans-unit id="d0257f130ffddebfe0a1fcb5ecaa87912234acbd" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_LIBRARY - The osgPresentation library OSGPRESENTATION_LIBRARY_DEBUG - The osgPresentation debug library</source>
          <target state="translated">OSGPRESENTATION_LIBRARY-osgPresentation 라이브러리 OSGPRESENTATION_LIBRARY_DEBUG-osgPresentation 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="a4faafac3d0f8283ab62aba9835a48a243a0ffe0" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_FOUND - Was osgProducer found? OSGPRODUCER_INCLUDE_DIR - Where to find the headers OSGPRODUCER_LIBRARIES - The libraries to link for osgProducer (use this)</source>
          <target state="translated">OSGPRODUCER_FOUND-osgProducer를 찾았습니까? OSGPRODUCER_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGPRODUCER_LIBRARIES-osgProducer에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="d9ca7e9bce957919bfb21b5338454c7899033282" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_LIBRARY - The osgProducer library OSGPRODUCER_LIBRARY_DEBUG - The osgProducer debug library</source>
          <target state="translated">OSGPRODUCER_LIBRARY-osgProducer 라이브러리 OSGPRODUCER_LIBRARY_DEBUG-osgProducer 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="b77a1e0eebaceab85e7b402fb76b8bd7fc197924" translate="yes" xml:space="preserve">
          <source>OSGQT_FOUND - Was osgQt found? OSGQT_INCLUDE_DIR - Where to find the headers OSGQT_LIBRARIES - The libraries to link for osgQt (use this)</source>
          <target state="translated">OSGQT_FOUND-osgQt를 찾았습니까? OSGQT_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGQT_LIBRARIES-osgQt에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="45ee56f004c3fc8e30dc0d1c8b6456978e2455f5" translate="yes" xml:space="preserve">
          <source>OSGQT_LIBRARY - The osgQt library OSGQT_LIBRARY_DEBUG - The osgQt debug library</source>
          <target state="translated">OSGQT_LIBRARY-osgQt 라이브러리 OSGQT_LIBRARY_DEBUG-osgQt 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="ea2bd6554099a8692ab732f7889d7f0b1aadaba3" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_FOUND - Was osgShadow found? OSGSHADOW_INCLUDE_DIR - Where to find the headers OSGSHADOW_LIBRARIES - The libraries to link for osgShadow (use this)</source>
          <target state="translated">OSGSHADOW_FOUND-osgShadow를 찾았습니까? OSGSHADOW_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGSHADOW_LIBRARIES-osgShadow에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="08cf01767a2e3e74ae06e1891aeab84c8042dd98" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_LIBRARY - The osgShadow library OSGSHADOW_LIBRARY_DEBUG - The osgShadow debug library</source>
          <target state="translated">OSGSHADOW_LIBRARY-osgShadow 라이브러리 OSGSHADOW_LIBRARY_DEBUG-osgShadow 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="4ca83357f1dd24096293f286eee631fd63e201f9" translate="yes" xml:space="preserve">
          <source>OSGSIM_FOUND - Was osgSim found? OSGSIM_INCLUDE_DIR - Where to find the headers OSGSIM_LIBRARIES - The libraries to link for osgSim (use this)</source>
          <target state="translated">OSGSIM_FOUND-osgSim을 찾았습니까? OSGSIM_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGSIM_LIBRARIES-osgSim에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="3921f2b851bbf015d31b0d244408a66d458ed80c" translate="yes" xml:space="preserve">
          <source>OSGSIM_LIBRARY - The osgSim library OSGSIM_LIBRARY_DEBUG - The osgSim debug library</source>
          <target state="translated">OSGSIM_LIBRARY-osgSim 라이브러리 OSGSIM_LIBRARY_DEBUG-osgSim 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="9439bb02c45fa8801aaada57eed5d6d016d8b5ee" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_FOUND - Was osgTerrain found? OSGTERRAIN_INCLUDE_DIR - Where to find the headers OSGTERRAIN_LIBRARIES - The libraries to link for osgTerrain (use this)</source>
          <target state="translated">OSGTERRAIN_FOUND-osgTerrain을 찾았습니까? OSGTERRAIN_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGTERRAIN_LIBRARIES-osgTerrain에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="312b549fb657938a5736198f61bf76bc5ba76ec7" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_LIBRARY - The osgTerrain library OSGTERRAIN_LIBRARY_DEBUG - The osgTerrain debug library</source>
          <target state="translated">OSGTERRAIN_LIBRARY-osgTerrain 라이브러리 OSGTERRAIN_LIBRARY_DEBUG-osgTerrain 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="c34ca640eb4c268edbe287680b959a76a0c65d8c" translate="yes" xml:space="preserve">
          <source>OSGTEXT_FOUND - Was osgText found? OSGTEXT_INCLUDE_DIR - Where to find the headers OSGTEXT_LIBRARIES - The libraries to link for osgText (use this)</source>
          <target state="translated">OSGTEXT_FOUND-osgText를 찾았습니까? OSGTEXT_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGTEXT_LIBRARIES-osgText에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="9c528ef250d02fbbc184503fafd57fe752442d73" translate="yes" xml:space="preserve">
          <source>OSGTEXT_LIBRARY - The osgText library OSGTEXT_LIBRARY_DEBUG - The osgText debug library</source>
          <target state="translated">OSGTEXT_LIBRARY-osgText 라이브러리 OSGTEXT_LIBRARY_DEBUG-osgText 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="dd0a7d9212d0b151a9ccdc19aeded78f9e53bafd" translate="yes" xml:space="preserve">
          <source>OSGUTIL_FOUND - Was osgUtil found? OSGUTIL_INCLUDE_DIR - Where to find the headers OSGUTIL_LIBRARIES - The libraries to link for osgUtil (use this)</source>
          <target state="translated">OSGUTIL_FOUND-osgUtil을 찾았습니까? OSGUTIL_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGUTIL_LIBRARIES-osgUtil에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="8cd643f75dc3c7788844ed557e75678f66d43723" translate="yes" xml:space="preserve">
          <source>OSGUTIL_LIBRARY - The osgUtil library OSGUTIL_LIBRARY_DEBUG - The osgUtil debug library</source>
          <target state="translated">OSGUTIL_LIBRARY-osgUtil 라이브러리 OSGUTIL_LIBRARY_DEBUG-osgUtil 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="5f697aaaae1519e52c80ca4d33d6758565e91e05" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_FOUND - Was osgViewer found? OSGVIEWER_INCLUDE_DIR - Where to find the headers OSGVIEWER_LIBRARIES - The libraries to link for osgViewer (use this)</source>
          <target state="translated">OSGVIEWER_FOUND-osgViewer를 찾았습니까? OSGVIEWER_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGVIEWER_LIBRARIES-osgViewer에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="d569ed8bd0cdb04dbc5e2b0965d5e06f4055b552" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_LIBRARY - The osgViewer library OSGVIEWER_LIBRARY_DEBUG - The osgViewer debug library</source>
          <target state="translated">OSGVIEWER_LIBRARY-osgViewer 라이브러리 OSGVIEWER_LIBRARY_DEBUG-osgViewer 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="05d13c79e496119e00cf1521332ea9a11aea302d" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_FOUND - Was osgVolume found? OSGVOLUME_INCLUDE_DIR - Where to find the headers OSGVOLUME_LIBRARIES - The libraries to link for osgVolume (use this)</source>
          <target state="translated">OSGVOLUME_FOUND-osgVolume을 찾았습니까? OSGVOLUME_INCLUDE_DIR-헤더를 찾을 위치 OSGVOLUME_LIBRARIES-osgVolume에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="1a90817375c33fb365e6c0c18845995a2404ca90" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_LIBRARY - The osgVolume library OSGVOLUME_LIBRARY_DEBUG - The osgVolume debug library</source>
          <target state="translated">OSGVOLUME_LIBRARY-osgVolume 라이브러리 OSGVOLUME_LIBRARY_DEBUG-osgVolume 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="3a0edc6162c3978b653bf2f171a4654855b9b045" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_FOUND - Was osgWidget found? OSGWIDGET_INCLUDE_DIR - Where to find the headers OSGWIDGET_LIBRARIES - The libraries to link for osgWidget (use this)</source>
          <target state="translated">OSGWIDGET_FOUND-osgWidget을 찾았습니까? OSGWIDGET_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGWIDGET_LIBRARIES-osgWidget에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="eba713224ac219f7f83a0a69a40cab68643dccdc" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_LIBRARY - The osgWidget library OSGWIDGET_LIBRARY_DEBUG - The osgWidget debug library</source>
          <target state="translated">OSGWIDGET_LIBRARY-osgWidget 라이브러리 OSGWIDGET_LIBRARY_DEBUG-osgWidget 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="8f5b1d9fdef728c21939ce6df6f80d309a3cbea0" translate="yes" xml:space="preserve">
          <source>OSG_FOUND - Was the Osg found? OSG_INCLUDE_DIR - Where to find the headers OSG_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSG_FOUND-Osg가 발견 되었습니까? OSG_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSG_LIBRARIES-OSG에 대해 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="9da85b533534ccc4a909728d17ef3e661128e795" translate="yes" xml:space="preserve">
          <source>OSG_LIBRARY - The OSG library OSG_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSG_LIBRARY-OSG 라이브러리 OSG_LIBRARY_DEBUG-OSG 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="147b5df69cbff1fb9fcc12402a749b463e399d7b" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES</source>
          <target state="translated">OSX_ARCHITECTURES</target>
        </trans-unit>
        <trans-unit id="4ca90eccf010ad00a92d6e2729e25f1bfb9416ca" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="148b41c6adcab0e02abfb7ada86d61b54bc3a6c3" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_CONFIG</source>
          <target state="translated">OSX_ARCHITECTURES_CONFIG</target>
        </trans-unit>
        <trans-unit id="c207e86c0d9a9db23073b5ea413ad94770b3d9df" translate="yes" xml:space="preserve">
          <source>OUTPUT Variables</source>
          <target state="translated">출력 변수</target>
        </trans-unit>
        <trans-unit id="526abf6c53197b5839e88b9379104dcf1297460d" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME</source>
          <target state="translated">OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="f704977e03348ee941ccc6f13f8b30e81c3a2a0f" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fe2be4f2249782214a1ff8e907ad33b3949fb519" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_CONFIG</source>
          <target state="translated">OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="7a47137f753b96c6485ff781e3ec3b855d898ce7" translate="yes" xml:space="preserve">
          <source>Object Kind &quot;cache&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc550ddbe09c885e3d90542b26a6df85af3242d5" translate="yes" xml:space="preserve">
          <source>Object Kind &quot;cmakeFiles&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ed577f5a12add860e31b93531188d0d9781871" translate="yes" xml:space="preserve">
          <source>Object Kind &quot;codemodel&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c416380e4b4f83f9b891c73f9dea0948777607" translate="yes" xml:space="preserve">
          <source>Object Kind &quot;toolchains&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20981736356a13ca4dd0ac64fb73e5458f9718a" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cache&amp;rdquo;</source>
          <target state="translated">객체 종류&amp;ldquo;캐시&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2e7ca2f14251a21e0aaf1cfcf82fc6d978aa9c7b" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cmakeFiles&amp;rdquo;</source>
          <target state="translated">객체 종류&amp;ldquo;cmakeFiles&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="044a14badb05857d3356792b4764131c222ea370" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;codemodel&amp;rdquo;</source>
          <target state="translated">객체 종류&amp;ldquo;코드 모델&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="21479870ddaccef90452d07663aa320cb6218e8c" translate="yes" xml:space="preserve">
          <source>Object Kinds</source>
          <target state="translated">객체 종류</target>
        </trans-unit>
        <trans-unit id="a125b2c7d3e1c411fc3abd3fd86312e03b3e4a93" translate="yes" xml:space="preserve">
          <source>Object Libraries</source>
          <target state="translated">객체 라이브러리</target>
        </trans-unit>
        <trans-unit id="8396fad9de1f5888fb7387887fa3adbbe24800e5" translate="yes" xml:space="preserve">
          <source>Object files associated with &lt;em&gt;object libraries&lt;/em&gt;.</source>
          <target state="translated">개체 &lt;em&gt;라이브러리&lt;/em&gt; 와 관련된 개체 파일 .</target>
        </trans-unit>
        <trans-unit id="45c93e143a8b17bcf7b6baa9b32514eae50f1efa" translate="yes" xml:space="preserve">
          <source>Object libraries (a simple group of object files) are always treated as &lt;code&gt;OBJECTS&lt;/code&gt; targets.</source>
          <target state="translated">객체 라이브러리 (단순한 객체 파일 그룹)는 항상 &lt;code&gt;OBJECTS&lt;/code&gt; 대상으로 취급됩니다 .</target>
        </trans-unit>
        <trans-unit id="9241ca5e1c776e510ea4790856c684d5ebaca6ec" translate="yes" xml:space="preserve">
          <source>Object libraries may not be used as the &lt;code&gt;TARGET&lt;/code&gt; in a use of the &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(TARGET)&lt;/code&gt;&lt;/a&gt; command signature. However, the list of objects can be used by &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GENERATE)&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">개체 라이브러리는 사용되지 않을 수 있습니다 &lt;code&gt;TARGET&lt;/code&gt; 의 용도에 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(TARGET)&lt;/code&gt; &lt;/a&gt; 명령에 서명. 그러나 개체의 목록을 사용할 수 있습니다 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GENERATE)&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03155ec7a78d1163dcb3cf311caa3bedaa351f74" translate="yes" xml:space="preserve">
          <source>Obsolete pkg-config module for CMake, use FindPkgConfig instead.</source>
          <target state="translated">CMake에 사용되지 않는 pkg-config 모듈은 대신 FindPkgConfig를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b0e2f32beaa96bf3efcf25709fed2c8763d31cef" translate="yes" xml:space="preserve">
          <source>Obsolete variables</source>
          <target state="translated">사용되지 않는 변수</target>
        </trans-unit>
        <trans-unit id="5ac2eaebd052aa270d01cb9dbd42b769361a11e8" translate="yes" xml:space="preserve">
          <source>Obsolete. Specifies either &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; or &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; as the result variable. This exists only for compatibility with older versions of CMake and is now ignored. Result variables of both names are always set for compatibility.</source>
          <target state="translated">더 이상 사용되지 않습니다. 결과 변수로 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; 를 지정합니다 . 이는 이전 버전의 CMake와의 호환성을 위해서만 존재하며 이제 무시됩니다. 두 이름의 결과 변수는 항상 호환성을 위해 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="71f5d52a36de7de8f82a9094facc4721650733c8" translate="yes" xml:space="preserve">
          <source>Obtaining Project Properties</source>
          <target state="translated">프로젝트 속성 얻기</target>
        </trans-unit>
        <trans-unit id="1b12d13facf7352b079a55882c8b7d7c782b3599" translate="yes" xml:space="preserve">
          <source>Of course users may still add this option manually by setting &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt;&lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;MAKECOMMAND&lt;/code&gt; cache entry. See the &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step&lt;/a&gt;&lt;code&gt;MakeCommand&lt;/code&gt; setting documentation for their effects.</source>
          <target state="translated">물론 사용자는 &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt; &lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;MAKECOMMAND&lt;/code&gt; 캐시 항목 을 설정 하여이 옵션을 수동으로 추가 할 수 있습니다 . 그 효과에 대해서는 &lt;code&gt;MakeCommand&lt;/code&gt; &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;Build Step &lt;/a&gt;MakeCommand 설정 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="03886f835848bac777a4a5f9f588e713c085b48c" translate="yes" xml:space="preserve">
          <source>Official CMake binaries available on &lt;code&gt;cmake.org&lt;/code&gt; ship with a &lt;code&gt;liblzma&lt;/code&gt; that does not support parallel compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8f7c0019e70089dbb0e74a30441c7696ee5419" translate="yes" xml:space="preserve">
          <source>Often the third-party package documentation will point out the names of imported targets available after a successful &lt;code&gt;find_package&lt;/code&gt; for a library. Those imported target names can be used with the &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">종종 타사 패키지 문서는 라이브러리에 대한 성공적인 &lt;code&gt;find_package&lt;/code&gt; 후에 사용할 수있는 가져온 대상의 이름을 지적합니다 . 가져온 대상 이름은 &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14db15e1ad7d4b01cde71b5cacb6e75a17bde43f" translate="yes" xml:space="preserve">
          <source>Old executable location variable.</source>
          <target state="translated">이전 실행 가능 위치 변수</target>
        </trans-unit>
        <trans-unit id="909e8626404002308ea9a010ebf6795b987020a6" translate="yes" xml:space="preserve">
          <source>Old library location variable.</source>
          <target state="translated">오래된 라이브러리 위치 변수.</target>
        </trans-unit>
        <trans-unit id="1f8797297a29bb767a5840802d50d39001d33e10" translate="yes" xml:space="preserve">
          <source>Old per-configuration target file base name. Use &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">이전의 구성 별 대상 파일 기본 이름입니다. 사용 &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="f5ba41545ef577de7f78fca6dba24355e72ad228" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above, library files ending in &lt;code&gt;.targets&lt;/code&gt; will be treated as MSBuild targets files and imported into generated project files. This is not supported by other generators.</source>
          <target state="translated">에 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; VS 2010 이상에,로 끝나는 라이브러리 파일 &lt;code&gt;.targets&lt;/code&gt; 은 MSBuild를 목표 파일로 취급되며, 생성 된 프로젝트 파일로 가져옵니다. 다른 생성기에서는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0ead94d8a777326f811ef86fed93b9a01c8e9c0e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; the selected platform name is provided in the &lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt;&lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">에 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 선택한 플랫폼 이름이 제공됩니다 &lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt; &lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt; 의&lt;/a&gt; 변수입니다.</target>
        </trans-unit>
        <trans-unit id="be4bbf8341f4b8cca066138daf71ce8c4b294c92" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;, run before any other rules are executed within the target. On other generators, run just before &lt;code&gt;PRE_LINK&lt;/code&gt; commands.</source>
          <target state="translated">에 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 다른 규칙이 대상 내에서 실행되기 전에 실행합니다. 다른 생성기에서는 &lt;code&gt;PRE_LINK&lt;/code&gt; 명령 직전에 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="483cd1ee2216220f285cba738f95080056d5260c" translate="yes" xml:space="preserve">
          <source>On AIX shared libraries may be named &quot;lib&amp;lt;name&amp;gt;.a&quot;. This property is set to true on such platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af3f901c9f0c6791cf4ed7b184621e3566317cd" translate="yes" xml:space="preserve">
          <source>On AIX shared libraries may be named &amp;ldquo;lib&amp;lt;name&amp;gt;.a&amp;rdquo;. This property is set to true on such platforms.</source>
          <target state="translated">AIX에서 공유 라이브러리의 이름은&amp;ldquo;lib &amp;lt;name&amp;gt; .a&amp;rdquo;일 수 있습니다. 이 특성은 해당 플랫폼에서 true로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="fba3e4fd6436f4924517e25847d69e4abd2cfcdf" translate="yes" xml:space="preserve">
          <source>On AIX, CMake automatically exports all symbols from shared libraries, and from executables with the &lt;a href=&quot;enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property set. Explicitly disable this boolean property to suppress the behavior and export no symbols by default. In this case it is expected that the project will use other means to export some symbols.</source>
          <target state="translated">AIX에서 CMake는 공유 라이브러리 및 &lt;a href=&quot;enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 대상 속성이 설정된 실행 파일에서 모든 기호를 자동으로 내 보냅니다 . 이 부울 속성을 명시 적으로 비활성화하여 동작을 억제하고 기본적으로 심볼을 내 보내지 않습니다. 이 경우 프로젝트는 다른 수단을 사용하여 일부 심볼을 ​​내보낼 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="0edd92a4bb5f411ac075e679f07ef5336cd7f6eb" translate="yes" xml:space="preserve">
          <source>On AIX, a linker &quot;import file&quot; is created along with the executable to list the exported symbols for import when linking other targets. Loadable modules link to the import file to get the symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fb527aab1b359b9517f162af181bce413d7878" translate="yes" xml:space="preserve">
          <source>On AIX, a linker &amp;ldquo;import file&amp;rdquo; is created along with the executable to list the exported symbols for import when linking other targets. Loadable modules link to the import file to get the symbols.</source>
          <target state="translated">AIX에서는 다른 대상을 링크 할 때 가져 오기 위해 내 보낸 기호를 나열하기 위해 실행 파일과 함께 링커 &quot;가져 오기 파일&quot;이 생성됩니다. 로드 가능한 모듈은 심볼을 가져 오기 위해 가져 오기 파일에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="fb402f87818dd1011eb7a6c10f7d5871060083c2" translate="yes" xml:space="preserve">
          <source>On AIX, the &lt;em&gt;linker import file&lt;/em&gt; created for executables with &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; enabled.</source>
          <target state="translated">AIX에서 &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; 가&lt;/a&gt; 활성화 된 실행 &lt;em&gt;파일에 대해&lt;/em&gt; 생성 된 &lt;em&gt;링커 가져 오기 파일&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e3bc19c9ded4158a2075e26df1322ef9457c2a6c" translate="yes" xml:space="preserve">
          <source>On AIX: the linker import file (e.g. &lt;code&gt;.imp&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-5-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command when its &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-1-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set.</source>
          <target state="translated">AIX : &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-1-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 대상 속성이 설정된 경우 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-5-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 명령에 의해 생성 된 실행 가능 대상 의 링커 가져 오기 파일 (예 : &lt;code&gt;.imp&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="cf91d7cb1133a9a948e96f2a4b2c4cbde180c68e" translate="yes" xml:space="preserve">
          <source>On Apple Silicon hosts running macOS, set this environment variable to tell CMake what architecture to use for &lt;a href=&quot;../variable/cmake_host_system_processor#variable:CMAKE_HOST_SYSTEM_PROCESSOR&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_PROCESSOR&quot;&gt;&lt;code&gt;CMAKE_HOST_SYSTEM_PROCESSOR&lt;/code&gt;&lt;/a&gt;. The value must be either &lt;code&gt;arm64&lt;/code&gt; or &lt;code&gt;x86_64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35df923cffa43b5a0f5500ddfa3ea9b853d19437" translate="yes" xml:space="preserve">
          <source>On Apple Silicon hosts running macOS, set this variable to tell CMake what architecture to use for &lt;a href=&quot;cmake_host_system_processor#variable:CMAKE_HOST_SYSTEM_PROCESSOR&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_PROCESSOR&quot;&gt;&lt;code&gt;CMAKE_HOST_SYSTEM_PROCESSOR&lt;/code&gt;&lt;/a&gt;. The value must be either &lt;code&gt;arm64&lt;/code&gt; or &lt;code&gt;x86_64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d93aca0cd5acf99027ccd0513198008b1945d71" translate="yes" xml:space="preserve">
          <source>On Apple Silicon hosts, the architecture printed by &lt;code&gt;uname -m&lt;/code&gt; may vary based on CMake's own architecture and that of the invoking process tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec08f41d2b3fd042ddcef3bc8bc78bdd3cc67593" translate="yes" xml:space="preserve">
          <source>On Apple platforms, library resolution works as follows:</source>
          <target state="translated">Apple 플랫폼에서 라이브러리 확인은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="53dbbee8c504c1c46936892e87cc0ce60da32ba1" translate="yes" xml:space="preserve">
          <source>On Apple, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator may be used to generate project files for the Xcode IDE.</source>
          <target state="translated">Apple에서는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를 사용하여 Xcode IDE 용 프로젝트 파일을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5240e63475b39e9e48c22d197a9ba21a31e5d3b0" translate="yes" xml:space="preserve">
          <source>On Apple, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator may be used to generate project files for the Xcode IDE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcafbbe5f835438683d07de1fdb5e4a8b719ae8" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the executable file (e.g. &lt;code&gt;.dll&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">DLL 플랫폼 : &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 &lt;code&gt;SHARED&lt;/code&gt; 옵션을 사용하여 만든 공유 라이브러리 대상 의 실행 파일 (예 : &lt;code&gt;.dll&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="bd497974175aa0bfe54ccd4308910214baaa99e6" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option. This file is only guaranteed to exist if the library exports at least one unmanaged symbol.</source>
          <target state="translated">DLL 플랫폼 : &lt;code&gt;SHARED&lt;/code&gt; 옵션 과 함께 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 공유 라이브러리 대상 의 가져 오기 라이브러리 파일 (예 : &lt;code&gt;.lib&lt;/code&gt; ) . 이 파일은 라이브러리가 관리되지 않는 기호를 하나 이상 내보내는 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="962f24fc3f89a30da2f16bd5f942940fc5688207" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command when its &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set.</source>
          <target state="translated">DLL 플랫폼 : &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 대상 속성이 설정 될 때 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; executable () 명령으로 생성 된 실행 가능 대상 의 가져 오기 라이브러리 파일 (예 : &lt;code&gt;.lib&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="6adfcd254db33aef249ae7572c3525bfa611dea0" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Application Bundles, the &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">macOS 응용 프로그램 번들을 지원하는 Darwin 또는 시스템에서 &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; 변수는 비어 있거나 다음 중 하나로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="456fb48e62178331c1aea7fcfe1e8d12cbdc2d24" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Frameworks, the &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">macOS 프레임 워크를 지원하는 Darwin 또는 시스템에서 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; 변수를 비우거나 다음 중 하나로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2c7cc4d54f8c64919db4c9f5c8d3b432a5cec9" translate="yes" xml:space="preserve">
          <source>On Linux platforms, library resolution works as follows:</source>
          <target state="translated">Linux 플랫폼에서 라이브러리 확인은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8e921e8fca290aaf484baf1649e18fbbeda121b2" translate="yes" xml:space="preserve">
          <source>On Linux systems, the appropriate tools are often provided in system-wide locations and may be readily installed through the system package manager. Other toolchains provided by the user or installed in non-default locations can also be used.</source>
          <target state="translated">Linux 시스템에서 적절한 도구는 종종 시스템 전체 위치에 제공되며 시스템 패키지 관리자를 통해 쉽게 설치할 수 있습니다. 사용자가 제공하거나 기본 위치가 아닌 위치에 설치된 다른 도구 체인도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d9ddb20e579296a791fc06176eb989549cf8446" translate="yes" xml:space="preserve">
          <source>On NDK r18 or below, this variable must be set to one of these forms:</source>
          <target state="translated">NDK r18 이하에서는이 변수를 다음 형식 중 하나로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d356f8ee19c48abb6ac12e4328dbbe618b51beb7" translate="yes" xml:space="preserve">
          <source>On NDK r19 or above, this variable must be unset or set to &lt;code&gt;clang&lt;/code&gt;.</source>
          <target state="translated">NDK r19 이상에서는이 변수를 설정 해제하거나 &lt;code&gt;clang&lt;/code&gt; 으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2054d16fcf3fba215e0f75a097191393454162a6" translate="yes" xml:space="preserve">
          <source>On NDK r19 or above, this variable must be unset or set to &lt;code&gt;clang&lt;/code&gt;. On NDK r18 or below, set this to the version of the NDK toolchain to be selected as the compiler. If not specified, the default will be the latest available GCC toolchain.</source>
          <target state="translated">NDK r19 이상에서는이 변수를 설정 해제하거나 &lt;code&gt;clang&lt;/code&gt; 으로 설정해야합니다 . NDK r18 이하에서는 컴파일러로 선택할 NDK 도구 모음 버전으로 설정합니다. 지정하지 않으면 기본값은 사용 가능한 최신 GCC 도구 모음입니다.</target>
        </trans-unit>
        <trans-unit id="263f8f1950001a9f3f3d8386aae60f3f9d76abc1" translate="yes" xml:space="preserve">
          <source>On OSX FindOpenGL defaults to using the framework version of OpenGL. People will have to change the cache values of OPENGL_glu_LIBRARY and OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX.</source>
          <target state="translated">OSX에서 FindOpenGL은 기본적으로 OpenGL의 프레임 워크 버전을 사용합니다. OSX에서 X11과 함께 OpenGL을 사용하려면 OPENGL_glu_LIBRARY 및 OPENGL_gl_LIBRARY의 캐시 값을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="b22f48ac057de662733e75a4aa0eafa3941e5c50" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selection or set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">OSX에서는 다른 버전보다 프레임 워크 버전 (있는 경우)을 선호합니다. 이 선택 사항을 대체하거나 검색 경로를 수정하도록 CMake 환경 CMAKE_INCLUDE_PATH를 설정하려면 SDL_LIBRARY의 캐시 값을 수동으로 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e9794abdb6d3812c20fd174806669b1234a0c0e" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selectionor set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">OSX에서는 다른 버전보다 프레임 워크 버전 (있는 경우)을 선호합니다. 사용자는이 선택을 대체하기 위해 SDL_LIBRARY의 캐시 값을 수동으로 변경하거나 검색 경로를 수정하도록 CMake 환경 CMAKE_INCLUDE_PATH를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7c018cb9f8d1812d015ca2ecd3832e78d636b2d4" translate="yes" xml:space="preserve">
          <source>On POSIX platforms, iconv might be part of the C library and the cache variables &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; and &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; might be empty.</source>
          <target state="translated">POSIX 플랫폼에서 iconv는 C 라이브러리의 일부이며 캐시 변수 &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; 및 &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; 는 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10b84629e3ba83e422b3943c70a385e9457cfeb1" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. &lt;code&gt;DESTDIR&lt;/code&gt; means DESTination DIRectory. It is commonly used by makefile users in order to install software at non-default location. It is usually invoked like this:</source>
          <target state="translated">UNIX 에서는 전체 설치를 재배치하기 위해 &lt;code&gt;DESTDIR&lt;/code&gt; 메커니즘을 사용할 수 있습니다 . &lt;code&gt;DESTDIR&lt;/code&gt; 은 DESTination DIRectory를 의미합니다. 기본이 아닌 위치에 소프트웨어를 설치하기 위해 makefile 사용자가 일반적으로 사용합니다. 일반적으로 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c0aff98d2e80946e9d8a77ed604f5befeb1f9efd" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. See &lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt;&lt;code&gt;DESTDIR&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">UNIX 에서는 전체 설치를 재배치하기 위해 &lt;code&gt;DESTDIR&lt;/code&gt; 메커니즘을 사용할 수 있습니다 . 자세한 정보는 &lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt; &lt;code&gt;DESTDIR&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d0b8695db9f347bb169ca5e8accfa929a018d748" translate="yes" xml:space="preserve">
          <source>On UNIX platforms the user package registry is stored in the user home directory under &lt;code&gt;~/.cmake/packages&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under the directory:</source>
          <target state="translated">UNIX 플랫폼에서 사용자 패키지 레지스트리는 &lt;code&gt;~/.cmake/packages&lt;/code&gt; 아래의 사용자 홈 디렉토리에 저장 됩니다 . &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 디렉토리 아래에 나타날 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="60baaa85047c8767e5dea272462058373312eab2" translate="yes" xml:space="preserve">
          <source>On UNIX-like platforms, if the variable &lt;code&gt;HOSTNAME&lt;/code&gt; is set, its value will be executed as a command expected to print out the host name, much like the &lt;code&gt;hostname&lt;/code&gt; command-line tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc59dffaaf4768ac72390481373193481a0081a" translate="yes" xml:space="preserve">
          <source>On Unix systems, if the symbolic link &lt;code&gt;/usr/local/cuda&lt;/code&gt; exists, this is used. No subsequent search attempts are performed. No default symbolic link location exists for the Windows platform.</source>
          <target state="translated">Unix 시스템에서 심볼릭 링크 &lt;code&gt;/usr/local/cuda&lt;/code&gt; 가 존재하면 이것이 사용됩니다. 후속 검색 시도가 수행되지 않습니다. Windows 플랫폼에 대한 기본 기호 링크 위치가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fcc8c20d86383e015de97227ede41d97f5b564b7" translate="yes" xml:space="preserve">
          <source>On Unix, this module allows to search for ODBC library provided by unixODBC or iODBC implementations of ODBC API. This module reads hint about location of the config program:</source>
          <target state="translated">Unix에서이 모듈을 사용하면 unixODBC 또는 iODBC ODBC API 구현에서 제공하는 ODBC 라이브러리를 검색 할 수 있습니다. 이 모듈은 구성 프로그램의 위치에 대한 힌트를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="50478693baf84e153e635e5d01b08307f4c49269" translate="yes" xml:space="preserve">
          <source>On Unix-like systems (including Mac OS X), the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator is used by default. A variant of that generator can also be used on Windows in various environments, such as the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/MinGW%20Makefiles.html#generator:MinGW%20Makefiles&quot; id=&quot;index-0-generator:MinGW Makefiles&quot;&gt;&lt;code&gt;MinGW Makefiles&lt;/code&gt;&lt;/a&gt; generator. These generators generate a &lt;code&gt;Makefile&lt;/code&gt; variant which can be executed with &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gmake&lt;/code&gt;, &lt;code&gt;nmake&lt;/code&gt; or similar tools. See the individual generator documentation for more information on targeted environments and tools.</source>
          <target state="translated">Unix 계열 시스템 (Mac OS X 포함)에서는 기본적으로 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt; 생성기가 사용됩니다. 해당 생성기의 변형은 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt; &lt;code&gt;NMake Makefiles&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/MinGW%20Makefiles.html#generator:MinGW%20Makefiles&quot; id=&quot;index-0-generator:MinGW Makefiles&quot;&gt; &lt;code&gt;MinGW Makefiles&lt;/code&gt; &lt;/a&gt; 생성기 와 같은 다양한 환경의 Windows에서도 사용할 수 있습니다 . 이 생성기는 &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;gmake&lt;/code&gt; , &lt;code&gt;nmake&lt;/code&gt; 또는 유사한 도구 로 실행할 수 있는 &lt;code&gt;Makefile&lt;/code&gt; 변형을 생성합니다 . 대상 환경 및 도구에 대한 자세한 내용은 개별 생성기 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c15861dba9e50a4ca0ddd26429626888fa9c60dd" translate="yes" xml:space="preserve">
          <source>On Unix-like systems (including Mac OS X), the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator is used by default. A variant of that generator can also be used on Windows in various environments, such as the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/MinGW%20Makefiles.html#generator:MinGW%20Makefiles&quot; id=&quot;index-0-generator:MinGW Makefiles&quot;&gt;&lt;code&gt;MinGW Makefiles&lt;/code&gt;&lt;/a&gt; generator. These generators generate a &lt;code&gt;Makefile&lt;/code&gt; variant which can be executed with &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gmake&lt;/code&gt;, &lt;code&gt;nmake&lt;/code&gt; or similar tools. See the individual generator documentation for more information on targeted environments and tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c76833b0f9beb919a9f174b41e8217cc19d0fdd" translate="yes" xml:space="preserve">
          <source>On Visual Studio and Borland compilers Boost headers request automatic linking to corresponding libraries. This requires matching libraries to be linked explicitly or available in the link library search path. In this case setting &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; to &lt;code&gt;OFF&lt;/code&gt; may not achieve dynamic linking. Boost automatic linking typically requests static libraries with a few exceptions (such as &lt;code&gt;Boost.Python&lt;/code&gt;). Use:</source>
          <target state="translated">Visual Studio 및 Borland 컴파일러에서 Boost 헤더는 해당 라이브러리에 대한 자동 링크를 요청합니다. 이를 위해서는 일치하는 라이브러리가 명시 적으로 링크되거나 링크 라이브러리 검색 경로에서 사용 가능해야합니다. 이 경우 &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; 를 &lt;code&gt;OFF&lt;/code&gt; 로 설정 하면 동적 연결이 이루어지지 않을 수 있습니다. Boost 자동 링크는 일반적으로 &lt;code&gt;Boost.Python&lt;/code&gt; 과 같은 몇 가지 예외를 제외하고 정적 라이브러리를 요청합니다 . 사용하다:</target>
        </trans-unit>
        <trans-unit id="9ffe16f67544c8c70edeb0462af39701f143c0ae" translate="yes" xml:space="preserve">
          <source>On Windows and macOS, globbing is case-insensitive even if the underlying filesystem is case-sensitive (both filenames and globbing expressions are converted to lowercase before matching). On other platforms, globbing is case-sensitive.</source>
          <target state="translated">Windows 및 macOS에서 globbing은 기본 파일 시스템이 대소 문자를 구분하더라도 대소 문자를 구분하지 않습니다 (파일 이름과 globbing 표현식 모두 일치하기 전에 소문자로 변환 됨). 다른 플랫폼에서 globbing은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="30ba1ac3cc18dddea01ff174c2aa1e450a16fa03" translate="yes" xml:space="preserve">
          <source>On Windows hosts no extra search paths are included</source>
          <target state="translated">Windows 호스트에서는 추가 검색 경로가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a31fc30019d9b1a767817bd198385911ed15c37" translate="yes" xml:space="preserve">
          <source>On Windows hosts: &lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;, and &lt;code&gt;&amp;lt;entry&amp;gt;/include&lt;/code&gt; for other entries in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Windows 호스트에서 : &lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 각각 &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; 에서 &lt;code&gt;PATH&lt;/code&gt; , 및 &lt;code&gt;&amp;lt;entry&amp;gt;/include&lt;/code&gt; 의 다른 항목을 &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e5c1d8461eeb90e3b4a3e83de4f6bbc2fbd7f46" translate="yes" xml:space="preserve">
          <source>On Windows hosts: &lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-7-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;, and &lt;code&gt;&amp;lt;entry&amp;gt;/include&lt;/code&gt; for other entries in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d02d9c3b3a5e590b762c5fdb89d368c3a807530" translate="yes" xml:space="preserve">
          <source>On Windows hosts: &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;, and &lt;code&gt;&amp;lt;entry&amp;gt;/lib&lt;/code&gt; for other entries in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Windows 호스트의 경우 : &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-3-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 는&lt;/a&gt; 설정이며, &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 각각 &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; 에서 &lt;code&gt;PATH&lt;/code&gt; , 및 &lt;code&gt;&amp;lt;entry&amp;gt;/lib&lt;/code&gt; 에있는 다른 항목에 대한 &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa430664516b8ec266d69e19ca3e05c1b2b6389e" translate="yes" xml:space="preserve">
          <source>On Windows hosts: &lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-7-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;, and &lt;code&gt;&amp;lt;entry&amp;gt;/lib&lt;/code&gt; for other entries in &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be86fa1641f3c88610e1d7ad69cf5806687cc97" translate="yes" xml:space="preserve">
          <source>On Windows platforms, library resolution works as follows:</source>
          <target state="translated">Windows 플랫폼에서 라이브러리 확인은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c8f1098537870f37227124500f81a97499c8cde2" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 사이의 우선 순위를 결정합니다. &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나를 비우거나 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f8daf2692473034f8d94ad163c1629a44ef194fb" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable can be set to one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 간의 우선 순위를 결정합니다. &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나로 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="65ffdec9374b39fd1874560699a4297da759dcaf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. The &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 사이의 우선 순위를 결정합니다. &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나를 비우거나 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4cf8f9c7b4bbc496f8213cdecfe2781d77d9afb6" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. The &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable can be set to one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 간의 우선 순위를 결정합니다. &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나로 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ef0ccdeac97a0ce24eefc233a43eab9ecb96fbbf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 사이의 우선 순위를 결정합니다. &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나를 비우거나 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4b4f494be3754c6a3ce3ff8d592438cb19bc658c" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable can be set to one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 간의 우선 순위를 결정합니다. &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나로 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="07555c5068f5b2637dbffb1621d2bd0f2c5c8987" translate="yes" xml:space="preserve">
          <source>On Windows the system package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under registry key:</source>
          <target state="translated">Windows에서 시스템 패키지 레지스트리는 &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; 의 키로 Windows 레지스트리에 저장됩니다 . &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 레지스트리 키 아래에 나타날 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="19d71df50480638cf35b6952af6c9566865b26f9" translate="yes" xml:space="preserve">
          <source>On Windows the user package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt;.</source>
          <target state="translated">Windows에서 사용자 패키지 레지스트리는 &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; 의 키로 Windows 레지스트리에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="645e650f9770ee9d63ebc2235f837fc18348931c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; can be used to generate solutions for the Visual Studio IDE. Visual Studio versions may be specified by the product name of the IDE, which includes a four-digit year. Aliases are provided for other means by which Visual Studio versions are sometimes referred to, such as two digits which correspond to the product version of the VisualC++ compiler, or a combination of the two:</source>
          <target state="translated">Windows에서는 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 를 사용하여 Visual Studio IDE 용 솔루션을 생성 할 수 있습니다. Visual Studio 버전은 4 자리 연도를 포함하는 IDE의 제품 이름으로 지정할 수 있습니다. VisualC ++ 컴파일러의 제품 버전에 해당하는 두 자리 숫자 또는이 둘의 조합과 같이 Visual Studio 버전이 때때로 참조되는 다른 수단에 대해 별칭이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="21ed806a3ecbdd9d0ebfd513e2fa21fb190220c4" translate="yes" xml:space="preserve">
          <source>On Windows, Ice 3.7.0 and later provide libraries via the NuGet package manager. Appropriate NuGet packages will be searched for using &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;, or alternatively &lt;code&gt;Ice_HOME&lt;/code&gt; may be set to the location of a specific NuGet package to restrict the search.</source>
          <target state="translated">Windows에서 Ice 3.7.0 이상은 NuGet 패키지 관리자를 통해 라이브러리를 제공합니다. &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 를 사용하여 적절한 NuGet 패키지를 검색 하거나 , 검색을 제한하기 위해 &lt;code&gt;Ice_HOME&lt;/code&gt; 을 특정 NuGet 패키지의 위치로 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ee301585ebacc8dde33a700e5e09e2341ca71eb" translate="yes" xml:space="preserve">
          <source>On Windows, a .dll and its .lib import library may be imported together:</source>
          <target state="translated">Windows에서는 .dll과 .lib 가져 오기 라이브러리를 함께 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0578feda7af189368b34c8d77777918c69c673c2" translate="yes" xml:space="preserve">
          <source>On Windows, the encoding that is used to decode output from the process. Ignored on other platforms. Valid encoding names are:</source>
          <target state="translated">Windows에서는 프로세스의 출력을 디코딩하는 데 사용되는 인코딩입니다. 다른 플랫폼에서는 무시되었습니다. 유효한 인코딩 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8fc1bd4890ad2bd126ae3ed53507df06f0ccca82" translate="yes" xml:space="preserve">
          <source>On Windows, this module does not search for iODBC. On Unix, there is no way to prefer unixODBC over iODBC, or vice versa, other than providing the config program location using the &lt;code&gt;ODBC_CONFIG&lt;/code&gt;. This module does not allow to search for a specific ODBC driver.</source>
          <target state="translated">Windows에서이 모듈은 iODBC를 검색하지 않습니다. Unix에서는 &lt;code&gt;ODBC_CONFIG&lt;/code&gt; 를 사용하여 구성 프로그램 위치를 제공하는 것 외에 iODBC보다 unixODBC를 선호하거나 그 반대의 방법을 선택할 수 없습니다 . 이 모듈은 특정 ODBC 드라이버를 검색 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7d5b31fccbbcba7ada893b68d1b1e8f79edb087f" translate="yes" xml:space="preserve">
          <source>On Windows, this variable is set to the value of the environment variable &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781320c7d822efc04b5c5b5df846b1934c556a68" translate="yes" xml:space="preserve">
          <source>On Windows, this variable is set to the value of the environment variable &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt;. On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of:</source>
          <target state="translated">Windows에서이 변수는 환경 변수 &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt; 의 값으로 설정됩니다 . &lt;code&gt;uname&lt;/code&gt; 을 지원하는 시스템 에서이 변수는 다음의 출력으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="fafdffa51a93a1f9824f7dd32ec37d90e1b21528" translate="yes" xml:space="preserve">
          <source>On Windows, when building with Visual Studio, this module assumes the ODBC library is provided by the available Windows SDK.</source>
          <target state="translated">Windows에서 Visual Studio로 빌드 할 때이 모듈은 사용 가능한 Windows SDK가 ODBC 라이브러리를 제공한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="f81e3a1815b83e3b77d772ca566289899968688c" translate="yes" xml:space="preserve">
          <source>On Windows-based systems (including Cygwin) an &quot;import library&quot; is created along with the executable to list the exported symbols. Loadable modules link to the import library to get the symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac43cfbb8b9665da78cd19a5373d6e2e76a2019" translate="yes" xml:space="preserve">
          <source>On Windows-based systems (including Cygwin) an &amp;ldquo;import library&amp;rdquo; is created along with the executable to list the exported symbols. Loadable modules link to the import library to get the symbols.</source>
          <target state="translated">Windows 기반 시스템 (Cygwin 포함)에서는 &quot;가져 오기 라이브러리&quot;가 실행 파일과 함께 생성되어 내 보낸 기호를 나열합니다. 로드 가능한 모듈은 심볼을 가져 오기 위해 가져 오기 라이브러리에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="782fd67e966901b0456723dd7caff50cb6c92f52" translate="yes" xml:space="preserve">
          <source>On any given system, the following combinations of DCMTK versions could be considered:</source>
          <target state="translated">주어진 시스템에서 다음과 같은 DCMTK 버전 조합을 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29ea7f7089702b5e4abece7f02e25e4412c5272b" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt;&lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt;&lt;/a&gt; variables determine the order of preference between Apple-style and unix-style package components.</source>
          <target state="translated">macOS에서 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt; &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; &lt;/a&gt; 변수는 Apple 스타일 패키지와 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="11d6d66bdd1aff922023b134b45ff27e238996ce" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일과 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다. 이 변수는 비어 있거나 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 갖도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6b762850d8b9f8106ff514007072ef977969b48" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일과 유닉스 스타일 패키지 구성 요소 간의 선호도 순서를 결정합니다. 이 변수는 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="804fdc3c2c5f91faf6ab2175a04ad4f48a004888" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일과 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다. 이 변수는 비어 있거나 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 갖도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83766a3396bf129133067e2d133ff9c540cdb525" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일과 Unix 스타일 패키지 구성 요소 간의 선호도 순서를 결정합니다. 이 변수는 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6542dc6fd7fe937ce1a191991c3a9b760484a4d" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일과 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다. 이 변수는 비어 있거나 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 갖도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95686af4158e2e42a6fd8cf9615ec5fa294e1b7b" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일 및 Unix 스타일 패키지 구성 요소 간의 선호도 순서를 결정합니다. 이 변수는 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c84e85ff2f95eb75f16d54b62f8423318b0bf987" translate="yes" xml:space="preserve">
          <source>On macOS, installers that download components on-the-fly can only be built and installed on system using macOS 10.5 or later.</source>
          <target state="translated">macOS에서 구성 요소를 즉시 다운로드하는 설치 프로그램은 macOS 10.5 이상을 사용하는 시스템에서만 빌드하고 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cfb477077a987f20a20bff756274d1d8cf7b37d" translate="yes" xml:space="preserve">
          <source>On macOS, loadable modules link to the executable itself using the &lt;code&gt;-bundle_loader&lt;/code&gt; flag.</source>
          <target state="translated">macOS에서로드 가능한 모듈은 &lt;code&gt;-bundle_loader&lt;/code&gt; 플래그를 사용하여 실행 파일 자체에 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="18323629cb17be5a9936d8d64046209ce7d91d19" translate="yes" xml:space="preserve">
          <source>On non-DLL platforms: the shared library file (e.g. &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dylib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">DLL이 아닌 플랫폼의 경우 : &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 &lt;code&gt;SHARED&lt;/code&gt; 옵션을 사용하여 만든 공유 라이브러리 대상 의 공유 라이브러리 파일 (예 : &lt;code&gt;.so&lt;/code&gt; 또는 &lt;code&gt;.dylib&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="ba8db62006cbd7f578b1a6df1374b4a7cd3db32b" translate="yes" xml:space="preserve">
          <source>On other platforms, loadable modules are simply linked without referencing the executable since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">다른 플랫폼에서는 모듈이로드 될 때 동적 로더가 기호를 자동으로 바인딩하므로로드 가능한 모듈은 실행 파일을 참조하지 않고 간단히 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="34ffa0aee967dbf4ba5ed6c723151d2165110b30" translate="yes" xml:space="preserve">
          <source>On platforms that support runtime paths (&lt;code&gt;RPATH&lt;/code&gt;) with the &lt;code&gt;$ORIGIN&lt;/code&gt; token, setting this property to &lt;code&gt;TRUE&lt;/code&gt; enables relative paths in the build &lt;code&gt;RPATH&lt;/code&gt; for executables and shared libraries that point to shared libraries in the same build tree.</source>
          <target state="translated">&lt;code&gt;$ORIGIN&lt;/code&gt; 토큰 과 함께 런타임 경로 ( &lt;code&gt;RPATH&lt;/code&gt; ) 를 지원하는 플랫폼 에서이 특성을 &lt;code&gt;TRUE&lt;/code&gt; 로 설정 하면 동일한 빌드 트리에서 공유 라이브러리를 가리키는 실행 파일 및 공유 라이브러리 에 대한 빌드 &lt;code&gt;RPATH&lt;/code&gt; 의 상대 경로를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6ec22a5bdec60726cea624f9dd7b3f63ddd669d" translate="yes" xml:space="preserve">
          <source>On some platforms a versioned shared library has a symbolic link such as:</source>
          <target state="translated">일부 플랫폼에서는 버전이 지정된 공유 라이브러리에 다음과 같은 기호 링크가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfcdb80a0b7aff29eddc44d906c06c372ac4e4bd" translate="yes" xml:space="preserve">
          <source>On some platforms, such as Linux with GNU libc, the gettext functions are present in the C standard library and libintl is not required. &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; will be empty in this case.</source>
          <target state="translated">GNU libc가 설치된 Linux와 같은 일부 플랫폼에서는 gettext 함수가 C 표준 라이브러리에 있으며 libintl이 필요하지 않습니다. 이 경우 &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; 는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0ccaefb4745f4a9dd885d662df6770c1e08989b" translate="yes" xml:space="preserve">
          <source>On systems supporting macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;, the following directories are searched for Frameworks or Application Bundles containing a configuration file:</source>
          <target state="translated">macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; 을&lt;/a&gt; 지원하는 시스템 에서 다음 디렉토리는 구성 파일이 포함 된 프레임 워크 또는 애플리케이션 번들을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="511162c2941323b14b7c7c7ce3a52591d1f47653" translate="yes" xml:space="preserve">
          <source>On systems that have the uname command, this variable is set to the output of &lt;code&gt;uname -s&lt;/code&gt;. &lt;code&gt;Linux&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt;, and &lt;code&gt;Darwin&lt;/code&gt; for macOS are the values found on the big three operating systems.</source>
          <target state="translated">uname 명령이있는 시스템에서이 변수는 &lt;code&gt;uname -s&lt;/code&gt; 의 출력으로 설정됩니다 . macOS &lt;code&gt;Linux&lt;/code&gt; , &lt;code&gt;Windows&lt;/code&gt; 및 &lt;code&gt;Darwin&lt;/code&gt; 은 큰 세 가지 운영 체제에서 볼 수있는 값입니다.</target>
        </trans-unit>
        <trans-unit id="79c5c2771a52aadc26c945461550801bc6c8a1a3" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of &lt;code&gt;uname -p&lt;/code&gt;. On Windows it is set to the value of the environment variable &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uname&lt;/code&gt; 을 지원하는 시스템 에서이 변수는 &lt;code&gt;uname -p&lt;/code&gt; 의 출력으로 설정됩니다 . Windows에서는 환경 변수 &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt; 의 값으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d23eba34a9fa167845ea2d868ebc395826dc2eaf" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e32ccc7c57aae0513e4f4939e1c2b7303612c4" translate="yes" xml:space="preserve">
          <source>Once CTest has decided which resources to allocate to a test, it passes this information to the test executable as a series of environment variables. For each example below, we will assume that the test in question has a &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;2,gpus:2;gpus:4,gpus:1,crypto_chips:2&lt;/code&gt;.</source>
          <target state="translated">CTest가 테스트에 할당 할 리소스를 결정하면이 정보를 일련의 환경 변수로 테스트 실행 파일에 전달합니다. 아래의 각 예에 대해 문제의 테스트에 &lt;code&gt;2,gpus:2;gpus:4,gpus:1,crypto_chips:2&lt;/code&gt; 의 &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt; 속성 이 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="9078c3a414d763947d4df1d4d04f43dc90a8b407" translate="yes" xml:space="preserve">
          <source>Once an imported target has been made global, it cannot be changed back to non-global. Therefore, if a project sets this property, it may only provide a value of True. CMake will issue an error if the project tries to set the property to a non-True value, even if the value was already False.</source>
          <target state="translated">가져온 대상을 전역으로 만들면 다시 전역이 아닌 대상으로 변경할 수 없습니다. 따라서 프로젝트가이 속성을 설정하면 True 값만 제공 할 수 있습니다. 값이 이미 False 인 경우에도 프로젝트가 속성을 True가 아닌 값으로 설정하려고하면 CMake에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="657cd42c50adfb192ddc200dc7c7c5a637cf7612" translate="yes" xml:space="preserve">
          <source>Once done this will define</source>
          <target state="translated">완료되면 이것이 정의됩니다</target>
        </trans-unit>
        <trans-unit id="8734757975a256cda47784204481a61ff1279b9a" translate="yes" xml:space="preserve">
          <source>Once done this will define:</source>
          <target state="translated">완료되면 다음을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="618ae98caa9b6895c393024838f17e4d62e9934a" translate="yes" xml:space="preserve">
          <source>Once found, a package configuration file is immediately loaded. It, together with a package version file, contains all the information the project needs to use the package.</source>
          <target state="translated">패키지 구성 파일이 발견되면 즉시로드됩니다. 패키지 버전 파일과 함께 프로젝트가 패키지를 사용하는 데 필요한 모든 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="711d045273559e03221f0c3af28d85f876c7d9bb" translate="yes" xml:space="preserve">
          <source>Once one of the calls succeeds the result variable will be set and stored in the cache so that no call will search again.</source>
          <target state="translated">호출 중 하나가 성공하면 결과 변수가 설정되어 캐시에 저장되므로 호출이 다시 검색되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26abd690a72eead9acb2ffa1e81ad4ef7bc14c4d" translate="yes" xml:space="preserve">
          <source>Once such an include statement is found in a file, CMake searches for the &lt;code&gt;uic&lt;/code&gt; input file &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</source>
          <target state="translated">그런 후, 문이 파일에 대한 상기 검색 CMake 포함 &lt;code&gt;uic&lt;/code&gt; 입력 파일 &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e15e06a524bd8d8d5c201c67cd80f6db81892a5" translate="yes" xml:space="preserve">
          <source>Once the CUDA language is enabled, the &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; variable is read-only and changes to it are undefined behavior.</source>
          <target state="translated">CUDA 언어가 활성화되면 &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; 변수는 읽기 전용이며 변경 사항은 정의되지 않은 동작입니다.</target>
        </trans-unit>
        <trans-unit id="e5315ffb865814a4af6ea5a7d77f27011ed33484" translate="yes" xml:space="preserve">
          <source>Once the generator has initialized a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">생성기가이 변수에 대한 특정 값을 초기화 한 후 값을 변경하면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28af5d67b0f833fe47dfb08a73ca49f9f0eda6aa" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project for a given language, that choice must be used throughout the tree for that language. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">특정 언어에 대해 프로젝트 상단에서 정책이 적용되면 해당 언어의 트리 전체에서 해당 선택을 사용해야합니다. 하위 디렉토리에 중첩 된 프로젝트가있는 프로젝트에서는 모든 것을 함께 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="a36257d3cdfa3c9a2d026d7c3014389a262f06b4" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project, that choice must be used throughout the tree. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">정책이 프로젝트 상단에서 적용되면 트리 전체에서 해당 선택을 사용해야합니다. 하위 디렉토리에 중첩 된 프로젝트가있는 프로젝트에서는 모든 것을 함께 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="0519c6f64fbce8f3d02ba4b13f480ad44d2c28d4" translate="yes" xml:space="preserve">
          <source>Once this has been updated, we can re-run CMake and verify that it doesn&amp;rsquo;t warn anymore.</source>
          <target state="translated">이것이 업데이트되면 CMake를 다시 실행하고 더 이상 경고하지 않는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d82ddfe6dcc99bf70ccf7eea2c4e56d1cfa190e2" translate="yes" xml:space="preserve">
          <source>Once this has been updated, we can re-run CMake and verify that it doesn't warn anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4300ad55341ba89725ab2bdb5b5dbaf1a4f8a9" translate="yes" xml:space="preserve">
          <source>Once this is done, run the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable or the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; to configure the project and then build it with your chosen build tool or by using &lt;code&gt;cmake --build .&lt;/code&gt; from the build directory.</source>
          <target state="translated">이 작업이 완료되면 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; 실행 파일 또는 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt; 를 실행 하여 프로젝트를 구성한 다음 선택한 빌드 도구 또는 &lt;code&gt;cmake --build .&lt;/code&gt; 를 사용하여 빌드 합니다. 빌드 디렉토리에서.</target>
        </trans-unit>
        <trans-unit id="e7da51b90dcbb51fc5ffb1794882bfeab175219f" translate="yes" xml:space="preserve">
          <source>Once this variable is set, it is the responsibility of the exported &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; files to provide the same result variables as the &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; modules so that dependent projects can use them interchangeably.</source>
          <target state="translated">이 변수가 설정되면 내 보낸 &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; 파일이 &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; 모듈 과 동일한 결과 변수를 제공하여 종속 프로젝트가 상호 교환 적으로 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="81ddeb987adcc9cd72bc78896e3c5e019cd6ebe9" translate="yes" xml:space="preserve">
          <source>One MiB (mebibyte) is equal to 1024x1024 bytes.</source>
          <target state="translated">1MiB (메비 바이트)는 1024x1024 바이트와 같습니다.</target>
        </trans-unit>
        <trans-unit id="3fdaaf86d1dcce0f6072260015662fb5e88d5d29" translate="yes" xml:space="preserve">
          <source>One can specify different grouping for different CPack generator by using a CPACK_PROJECT_CONFIG_FILE.</source>
          <target state="translated">CPACK_PROJECT_CONFIG_FILE을 사용하여 다른 CPack 생성기에 다른 그룹을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84630b8d50d85655474a0f54df7ccd0bd15cb054" translate="yes" xml:space="preserve">
          <source>One common use case for this module was to skip CMake&amp;rsquo;s checks for a working compiler when using a cross-compiler that cannot link binaries without special flags or custom linker scripts. This case is now supported by setting the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable in the toolchain file instead.</source>
          <target state="translated">이 모듈의 일반적인 사용 사례는 특수 플래그 나 사용자 지정 링커 스크립트없이 바이너리를 연결할 수없는 크로스 컴파일러를 사용할 때 작동하는 컴파일러에 대한 CMake의 검사를 건너 뛰는 것입니다. 이 사례는 이제 툴체인 파일에서 &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; &lt;/a&gt; 변수를 설정하여 지원 됩니다.</target>
        </trans-unit>
        <trans-unit id="5f3d0fa03652018c486beeb17ca38f23094afa9a" translate="yes" xml:space="preserve">
          <source>One common use case for this module was to skip CMake's checks for a working compiler when using a cross-compiler that cannot link binaries without special flags or custom linker scripts. This case is now supported by setting the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable in the toolchain file instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9544fbf61684226e62071c6b46f72fbf0446d3" translate="yes" xml:space="preserve">
          <source>One example would be the usage of Objective-C (&lt;code&gt;*.m&lt;/code&gt;) files, and Objective-C++ (&lt;code&gt;*.mm&lt;/code&gt;) files, which lead to compilation failure because they are treated (in case of Ninja / Makefile generator) as C, and CXX respectively. The precompile headers are not compatible between languages.</source>
          <target state="translated">한 가지 예는 Objective-C ( &lt;code&gt;*.m&lt;/code&gt; ) 파일과 Objective-C ++ ( &lt;code&gt;*.mm&lt;/code&gt; ) 파일을 사용하는 것입니다.이 파일은 (Ninja / Makefile 생성기의 경우) C로 처리되기 때문에 컴파일 실패로 이어집니다. 각각 CXX. 사전 컴파일 헤더는 언어간에 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9134f5d295f620709575bab3649d05fe9cedc578" translate="yes" xml:space="preserve">
          <source>One if IA64 processor emulating x86</source>
          <target state="translated">x86을 에뮬레이트하는 IA64 프로세서 인 경우 1 개</target>
        </trans-unit>
        <trans-unit id="a28f14a1bdd81f2f490fa98d5dbbd6cd450f6ba1" translate="yes" xml:space="preserve">
          <source>One if processor has floating point unit</source>
          <target state="translated">프로세서에 부동 소수점 장치가있는 경우 1</target>
        </trans-unit>
        <trans-unit id="4853cef7404f5783d1fa098541a4d04116bde4b6" translate="yes" xml:space="preserve">
          <source>One if processor has serial number</source>
          <target state="translated">프로세서에 일련 번호가있는 경우 1</target>
        </trans-unit>
        <trans-unit id="e6a30b6b5d6c6f35bbebf2ccbb753fd9cf12dc80" translate="yes" xml:space="preserve">
          <source>One if processor is 64Bit</source>
          <target state="translated">프로세서가 64 비트 인 경우 1</target>
        </trans-unit>
        <trans-unit id="7cff716eb6da8a118ce580c3df5157435a8a16e6" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow instructions</source>
          <target state="translated">프로세서가 3DNow 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="64d7bfd1ae0d182ebfa6779acfee00a597029ba8" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow+ instructions</source>
          <target state="translated">프로세서가 3DNow + 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="f5255e1fe2288a45b6b2a30126fc4739d86541e1" translate="yes" xml:space="preserve">
          <source>One if processor supports Ext. MMX instructions</source>
          <target state="translated">프로세서가 Ext를 지원하는 경우 하나. MMX 명령어</target>
        </trans-unit>
        <trans-unit id="f1b49ed457fd0b9fb56443dfdd37cfea3ccbed85" translate="yes" xml:space="preserve">
          <source>One if processor supports MMX instructions</source>
          <target state="translated">프로세서가 MMX 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="0553dcf89a724a5dcd334bc8c7defb31d6046b34" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE FP instructions</source>
          <target state="translated">프로세서가 SSE FP 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="2a0785534cdedfc4855f7a24528e91b6e8fda910" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE MMX instructions</source>
          <target state="translated">프로세서가 SSE MMX 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="37f6e1767299c24afe9e799ae2a2c15eaf8dd158" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE instructions</source>
          <target state="translated">프로세서가 SSE 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="6328486f6ed0227b1bca2e62fe5695bc3e33c8f5" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE2 instructions</source>
          <target state="translated">프로세서가 SSE2 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="ac5345239026a77e15b181b2078c1ad5201b60d2" translate="yes" xml:space="preserve">
          <source>One known use case for this identifier is to disambiguate the variables in an anonymous namespace in a limited scope. Anonymous namespaces present a problem for unity builds because they are used to ensure that certain variables and declarations are scoped to a translation unit which is approximated by a single source file. When source files are combined in a unity build file, those variables in different files are combined in a single translation unit and the names clash. This property can be used to avoid that with code like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe580c029d8516226eb9cc2c50de37e5c9d04d4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Include/10.0.*&lt;/code&gt; directories.</source>
          <target state="translated">&lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;환경 변수&lt;/em&gt; 를 CMake가 사용자 정의 위치에서 Windows 10 SDK를 찾도록 지시하는 절대 경로로 설정할 수 있습니다. 지정된 디렉토리에는 &lt;code&gt;Include/10.0.*&lt;/code&gt; 디렉토리가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1754f3bf27d6535ae9ecf31c5a86df7d1c33dd4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; directories.</source>
          <target state="translated">&lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;환경 변수&lt;/em&gt; 를 CMake가 사용자 정의 위치에서 Windows 10 SDK를 찾도록 지시하는 절대 경로로 설정할 수 있습니다. 지정된 디렉토리에는 &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; 디렉토리가 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="2a28f4f724140f6d53c903b814b031ada7852a32" translate="yes" xml:space="preserve">
          <source>One may then use the &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; command to specify the output directory as an include directory:</source>
          <target state="translated">그런 다음 &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 출력 디렉토리를 include 디렉토리로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cae2aec880b93396fe66c70522abf41a43f43330" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;READ_ACCESS&lt;/code&gt;, &lt;code&gt;UNKNOWN_READ_ACCESS&lt;/code&gt;, &lt;code&gt;MODIFIED_ACCESS&lt;/code&gt;, &lt;code&gt;UNKNOWN_MODIFIED_ACCESS&lt;/code&gt;, or &lt;code&gt;REMOVED_ACCESS&lt;/code&gt;. The &lt;code&gt;UNKNOWN_&lt;/code&gt; values are only used when the variable has never been set. Once set, they are never used again during the same CMake run, even if the variable is later unset.</source>
          <target state="translated">&lt;code&gt;READ_ACCESS&lt;/code&gt; , &lt;code&gt;UNKNOWN_READ_ACCESS&lt;/code&gt; , &lt;code&gt;MODIFIED_ACCESS&lt;/code&gt; , &lt;code&gt;UNKNOWN_MODIFIED_ACCESS&lt;/code&gt; 또는 &lt;code&gt;REMOVED_ACCESS&lt;/code&gt; 중 하나입니다 . &lt;code&gt;UNKNOWN_&lt;/code&gt; 의 변수가 설정되어 있지 않을 경우 값에만 사용됩니다. 일단 설정되면 변수가 나중에 설정되지 않더라도 동일한 CMake 실행 중에 다시 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b7cd7722fc8c26bb3c58b1020dd5359eb29f7f48" translate="yes" xml:space="preserve">
          <source>One or more groups of properties may be specified in a single call to the &lt;code&gt;TARGETS&lt;/code&gt; form of this command. A target may be installed more than once to different locations. Consider hypothetical targets &lt;code&gt;myExe&lt;/code&gt;, &lt;code&gt;mySharedLib&lt;/code&gt;, and &lt;code&gt;myStaticLib&lt;/code&gt;. The code:</source>
          <target state="translated">이 명령 의 &lt;code&gt;TARGETS&lt;/code&gt; 양식 에 대한 단일 호출로 하나 이상의 특성 그룹을 지정할 수 있습니다 . 대상은 다른 위치에 두 번 이상 설치 될 수 있습니다. 가상의 목표 &lt;code&gt;myExe&lt;/code&gt; , &lt;code&gt;mySharedLib&lt;/code&gt; 및 &lt;code&gt;myStaticLib&lt;/code&gt; 를 고려하십시오 . 코드:</target>
        </trans-unit>
        <trans-unit id="c162754e9b9304c18c41df671acdced1d072de4e" translate="yes" xml:space="preserve">
          <source>One possible way to generate debug messages is to add a custom target,</source>
          <target state="translated">디버그 메시지를 생성하는 한 가지 가능한 방법은 맞춤 타겟을 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f9f3b84fd254449d6406fa0f212234467125383e" translate="yes" xml:space="preserve">
          <source>One problem that CMake users often face is sharing settings with other people for common ways to configure a project. This may be done to support CI builds, or for users who frequently use the same build. CMake supports two files, &lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt;, that allow users to specify common configure options and share them with others.</source>
          <target state="translated">CMake 사용자가 자주 직면하는 한 가지 문제는 프로젝트를 구성하는 일반적인 방법에 대해 다른 사람들과 설정을 공유하는 것입니다. 이는 CI 빌드를 지원하거나 동일한 빌드를 자주 사용하는 사용자를 위해 수행 될 수 있습니다. CMake는 &lt;code&gt;CMakePresets.json&lt;/code&gt; 및 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 이라는 두 파일을 지원 하여 사용자가 공통 구성 옵션을 지정하고 다른 사용자와 공유 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="a62d99f6659901dda0f92081a62dbc33af23c2db" translate="yes" xml:space="preserve">
          <source>One thing to note about this is that the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; and similar properties should only contain information about the target itself, and not any of its dependencies. Instead, those dependencies should also be targets, and CMake should be told that they are dependencies of this target. CMake will then combine all the necessary information automatically.</source>
          <target state="translated">이것에 대해 한 가지주의 할 점은 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 및 이와 유사한 특성에는 종속물이 아니라 대상 자체에 대한 정보 만 포함되어야한다는 것입니다. 대신 이러한 종속성도 대상이어야하며 CMake는이 대상의 종속성임을 알려야합니다. 그런 다음 CMake는 필요한 모든 정보를 자동으로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="b4290c57fecb2e046b57519cd6d4a6649e47e918" translate="yes" xml:space="preserve">
          <source>Online Documentation and Community Resources</source>
          <target state="translated">온라인 설명서 및 커뮤니티 리소스</target>
        </trans-unit>
        <trans-unit id="1dfe16a93b8378b0aa310df5b394c211c78c7d53" translate="yes" xml:space="preserve">
          <source>Only directories are changed.</source>
          <target state="translated">디렉토리 만 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="5167f626fa8f020059c1213bd755d27272bd549b" translate="yes" xml:space="preserve">
          <source>Only files are changed.</source>
          <target state="translated">파일 만 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="85b51ae1b3fa6a9581c72ddc3a83573774a9b3ae" translate="yes" xml:space="preserve">
          <source>Only interpret &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; arguments as variables or keywords when unquoted.</source>
          <target state="translated">인용 부호가 &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 에만 if () 인수를 변수 또는 키워드로 해석 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c35412ac6bf128c64b3019fb32454c9338189bad" translate="yes" xml:space="preserve">
          <source>Only load the cache. Do not actually run configure and generate steps.</source>
          <target state="translated">캐시 만로드하십시오. 실제로 구성을 실행하고 단계를 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="7b51bbde19a57cb73dca334340df8eebb1203656" translate="yes" xml:space="preserve">
          <source>Only most principal support files are listed. In case some advanced features of &lt;code&gt;SWIG&lt;/code&gt; are used (for example &lt;code&gt;%template&lt;/code&gt;), associated support files may not be listed. Prefer to use the &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; property to handle support files.</source>
          <target state="translated">대부분의 주요 지원 파일 만 나열됩니다. &lt;code&gt;SWIG&lt;/code&gt; 의 일부 고급 기능 이 사용되는 경우 (예 : &lt;code&gt;%template&lt;/code&gt; ) 관련 지원 파일이 나열되지 않을 수 있습니다. 지원 파일을 처리 하려면 &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; 특성 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5e6f4317c69aa703caef3594df9b42e6a96e28b" translate="yes" xml:space="preserve">
          <source>Only non-cache variables can be watched using this command. Access to cache variables is never watched. However, the existence of a cache variable &lt;code&gt;var&lt;/code&gt; causes accesses to the non-cache variable &lt;code&gt;var&lt;/code&gt; to not use the &lt;code&gt;UNKNOWN_&lt;/code&gt; prefix, even if a non-cache variable &lt;code&gt;var&lt;/code&gt; has never existed.</source>
          <target state="translated">이 명령을 사용하여 캐시가 아닌 변수 만 감시 할 수 있습니다. 캐시 변수에 대한 액세스는 감시되지 않습니다. 그러나 캐시 변수 &lt;code&gt;var&lt;/code&gt; 가 있으면 비 캐시 변수 &lt;code&gt;var&lt;/code&gt; 가 존재하지 않더라도 비 캐시 변수 &lt;code&gt;var&lt;/code&gt; 에 대한 액세스가 &lt;code&gt;UNKNOWN_&lt;/code&gt; 접두사를 사용 하지 않게됩니다.</target>
        </trans-unit>
        <trans-unit id="11d0b961c65de0e049c64846582577dd594e8e9c" translate="yes" xml:space="preserve">
          <source>Only supported when the compiler used by the given toolset is the same as the compiler used to build the whole source tree.</source>
          <target state="translated">지정된 도구 세트에서 사용하는 컴파일러가 전체 소스 트리를 빌드하는 데 사용 된 컴파일러와 동일한 경우에만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c99e4b6bca0ba6dcbe16b6f16dab1a1701dda473" translate="yes" xml:space="preserve">
          <source>Only the &quot;Ninja Multi-Config&quot; generator supports a property value that varies by configuration. For all other generators the value of this property must be the same for all configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4985047ddd09c56d478bf04a39881cc08ca21906" translate="yes" xml:space="preserve">
          <source>Only the &amp;ldquo;Ninja Multi-Config&amp;rdquo; generator supports a property value that varies by configuration. For all other generators the value of this property must be the same for all configurations.</source>
          <target state="translated">&quot;Ninja Multi-Config&quot;생성기 만 구성에 따라 달라지는 속성 값을 지원합니다. 다른 모든 생성기의 경우이 속성 값은 모든 구성에 대해 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="83fc6f5feb6148cef23ea9bc32762ced8931a7eb" translate="yes" xml:space="preserve">
          <source>Only the versions are provided. No check is made over the existence of the installation referenced in the registry,</source>
          <target state="translated">버전 만 제공됩니다. 레지스트리에서 참조 된 설치가 있는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa83c90a72c7028ac74e5d0985db22a7dd12460a" translate="yes" xml:space="preserve">
          <source>Only try to find application bundles.</source>
          <target state="translated">응용 프로그램 번들 만 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="7ac85c65432e3aed056fcfba743266ff50858e9d" translate="yes" xml:space="preserve">
          <source>Only try to find frameworks.</source>
          <target state="translated">프레임 워크 만 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="78e62d464c902054491d4bc4b112d0e1978f37d1" translate="yes" xml:space="preserve">
          <source>Only valid in &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; as the outer-most generator expression in an argument. With the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-0-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt; generator, generator expressions in &lt;code&gt;...&lt;/code&gt; are evaluated using the custom command's &quot;output config&quot;. With other generators, the content of &lt;code&gt;...&lt;/code&gt; is evaluated normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e749c2a1266ea7581292c2490be35d6905901f37" translate="yes" xml:space="preserve">
          <source>Only valid in &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; as the outer-most generator expression in an argument. With the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja%20Multi-Config.html#generator:Ninja%20Multi-Config&quot; id=&quot;index-1-generator:Ninja Multi-Config&quot;&gt;&lt;code&gt;Ninja Multi-Config&lt;/code&gt;&lt;/a&gt; generator, generator expressions in &lt;code&gt;...&lt;/code&gt; are evaluated using the custom command's &quot;command config&quot;. With other generators, the content of &lt;code&gt;...&lt;/code&gt; is evaluated normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0e1655342fdb720a7215b3efba1bd86bca79db" translate="yes" xml:space="preserve">
          <source>Only your build tool of choice will still print verbose output when you start to actually build your project.</source>
          <target state="translated">실제로 빌드를 시작하면 선택한 빌드 도구 만 자세한 출력을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="21244ee6e08d40cd736ba3cf4622bf2a0828091f" translate="yes" xml:space="preserve">
          <source>Open a Project</source>
          <target state="translated">프로젝트 열기</target>
        </trans-unit>
        <trans-unit id="5ce548749ab487f88d6245bfc23f29f3cbd20648" translate="yes" xml:space="preserve">
          <source>Open the CMake reference manual in a browser and immediately exit.</source>
          <target state="translated">브라우저에서 CMake 참조 설명서를 열고 즉시 종료합니다.</target>
        </trans-unit>
        <trans-unit id="c1e49f69d5b3cb75c158fe0db6564f08ce1de5bb" translate="yes" xml:space="preserve">
          <source>Open the generated project in the associated application. This is only supported by some generators.</source>
          <target state="translated">연관된 애플리케이션에서 생성 된 프로젝트를여십시오. 일부 생성기에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="352533ac24613eb1e610af6df0a00bd0f3de593e" translate="yes" xml:space="preserve">
          <source>OpenACC compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, as a list. Suitable for usage with target_compile_options or target_link_options.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 대한 OpenACC 컴파일러 플래그를 목록으로 표시합니다. target_compile_options 또는 target_link_options와 함께 사용하기에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="9c80292e452e29c791ce56e213c9f7a95bc1f60d" translate="yes" xml:space="preserve">
          <source>OpenACC compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">공백으로 구분 된 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 대한 OpenACC 컴파일러 플래그 .</target>
        </trans-unit>
        <trans-unit id="612a1c808f295e75fcc12495ab48a5369db657a5" translate="yes" xml:space="preserve">
          <source>OpenACC version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 컴파일러로 구현 된 OpenACC 버전 .</target>
        </trans-unit>
        <trans-unit id="45694d20529ffdaf2271833bc498bf26a12f7f88" translate="yes" xml:space="preserve">
          <source>OpenAL include directory</source>
          <target state="translated">OpenAL 포함 디렉터리</target>
        </trans-unit>
        <trans-unit id="988a0621a69f95c126d429edd6ad72b8b9753d30" translate="yes" xml:space="preserve">
          <source>OpenBLAS</source>
          <target state="translated">OpenBLAS</target>
        </trans-unit>
        <trans-unit id="9fa9b51c62b28a6e97fbdfd541ba3318103319b7" translate="yes" xml:space="preserve">
          <source>OpenBSD:</source>
          <target state="translated">OpenBSD:</target>
        </trans-unit>
        <trans-unit id="19cf533708cb431d6c3c459bb51e37beb597f319" translate="yes" xml:space="preserve">
          <source>OpenCL</source>
          <target state="translated">OpenCL</target>
        </trans-unit>
        <trans-unit id="43012a2c835ddb49fa9f96b8aa86d0f24cba199e" translate="yes" xml:space="preserve">
          <source>OpenMP compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">공백으로 구분 된 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 대한 OpenMP 컴파일러 플래그 .</target>
        </trans-unit>
        <trans-unit id="870df999b9eafdf1cb70c3456044c711d0985a0d" translate="yes" xml:space="preserve">
          <source>OpenMP version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 컴파일러로 구현 된 OpenMP 버전 .</target>
        </trans-unit>
        <trans-unit id="279e71df826b0cc6897af1190be2e850fec6ab50" translate="yes" xml:space="preserve">
          <source>OpenThreads is a C++ based threading library. Its largest userbase seems to OpenSceneGraph so you might notice I accept OSGDIR as an environment path. I consider this part of the Findosg* suite used to find OpenSceneGraph components. Each component is separate and you must opt in to each module.</source>
          <target state="translated">OpenThreads는 C ++ 기반 스레딩 라이브러리입니다. 가장 큰 사용자 기반은 OpenSceneGraph로 보이므로 OSGDIR을 환경 경로로 받아들입니다. OpenSceneGraph 구성 요소를 찾는 데 사용 된 Findosg * 제품군의이 부분을 고려합니다. 각 구성 요소는 별개이므로 각 모듈을 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="179d7b83d0b51949e8160d69a96aa0a1d414e4cb" translate="yes" xml:space="preserve">
          <source>Operator to read cache variables.</source>
          <target state="translated">캐시 변수를 읽는 연산자</target>
        </trans-unit>
        <trans-unit id="8e87e28cca5898d69daa86d82c7277bdfd036015" translate="yes" xml:space="preserve">
          <source>Operator to read environment variables.</source>
          <target state="translated">환경 변수를 읽는 연산자</target>
        </trans-unit>
        <trans-unit id="3f165b619d50dcf84366c965769bcbd58ea9f279" translate="yes" xml:space="preserve">
          <source>Optional COMPONENTS</source>
          <target state="translated">선택적 구성 요소</target>
        </trans-unit>
        <trans-unit id="db0c2ad3a6ee5e06ca66bbc7567b741a4597885a" translate="yes" xml:space="preserve">
          <source>Optional Compile Features</source>
          <target state="translated">선택적 컴파일 기능</target>
        </trans-unit>
        <trans-unit id="e435be0ca01859db0000dfa702f092601fffd5e7" translate="yes" xml:space="preserve">
          <source>Optional fields representing the platform and toolset, respectively, for generators that support them. Each may be either a string or an object with the following fields:</source>
          <target state="translated">플랫폼 및 도구 세트를 지원하는 생성기 각각을 나타내는 선택적 필드입니다. 각각은 다음 필드가있는 문자열 또는 객체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b341150357fbb9c63b7604e12146923c3cb5871b" translate="yes" xml:space="preserve">
          <source>Optional member present when a minimum required version of CMake is known for the directory. This is the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version given to the most local call to the &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command in the directory itself or one of its ancestors. The value is a JSON object with one member:</source>
          <target state="translated">디렉토리에 필요한 최소 버전의 CMake가 알려진 경우 선택적 멤버가 나타납니다. 이것은 디렉토리 자체 또는 상위 항목 중 하나에서 &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt; 명령에 대한 가장 로컬 호출에 제공된 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 버전 입니다. 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="23eb6170758352ed83c60379e4049efb17133c89" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a query through to its reply.</source>
          <target state="translated">클라이언트가 사용하도록 예약 된 선택적 멤버입니다. 이 값은 &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 응답 색인 파일&lt;/a&gt; 에서 클라이언트에 대해 작성된 응답에 유지 되지만 그렇지 않으면 무시됩니다. 고객은이 정보를 사용하여 사용자 정의 정보를 쿼리와 함께 회신에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af0ebe2864d465438fdc78e3cd2b2f23d3c84e54" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a request through to its reply.</source>
          <target state="translated">클라이언트가 사용하도록 예약 된 선택적 멤버입니다. 이 값은 &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 응답 색인 파일&lt;/a&gt; 에서 클라이언트에 대해 작성된 응답에 유지 되지만 그렇지 않으면 무시됩니다. 고객은이 정보를 사용하여 요청과 함께 사용자 정의 정보를 회신에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af995ba93c25c6c2dfabf8824b266bbefb3a7d24" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that are linked or archived into a single primary artifact. The value is a string specifying the file name of that artifact on disk.</source>
          <target state="translated">단일 기본 아티팩트로 링크되거나 아카이브 된 실행 파일 및 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 디스크에서 해당 아티팩트의 파일 이름을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="37df46c6c39ce2a62eac45c041d578c4114f4d02" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that produce artifacts on disk meant for consumption by dependents. The value is a JSON array of entries corresponding to the artifacts. Each entry is a JSON object containing one member:</source>
          <target state="translated">부양 가족이 소비 할 수 있도록 디스크에서 아티팩트를 생성하는 실행 파일 및 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 아티팩트에 해당하는 항목의 JSON 배열입니다. 각 항목은 하나의 멤버를 포함하는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="35efa44dd15d85e7497c9e557e149e0baa768bdd" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executables and shared library targets that link into a runtime binary. The value is a JSON object with members describing the link step:</source>
          <target state="translated">런타임 바이너리에 링크되는 실행 파일 및 공유 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 링크 단계를 설명하는 멤버가있는 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="be757cc5dc85395ba82066d5803f711c0f2b127a" translate="yes" xml:space="preserve">
          <source>Optional member that is present for static library targets. The value is a JSON object with members describing the archive step:</source>
          <target state="translated">정적 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 아카이브 단계를 설명하는 멤버가있는 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="6a3b57bcfc60e59c7aca966f80f5bb5cf01fa811" translate="yes" xml:space="preserve">
          <source>Optional member that is present when &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-0-command:target_precompile_headers&quot;&gt;&lt;code&gt;target_precompile_headers()&lt;/code&gt;&lt;/a&gt; or other command invocations set &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; on the target. The value is a JSON array with an entry for each header. Each entry is a JSON object with members:</source>
          <target state="translated">&lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-0-command:target_precompile_headers&quot;&gt; &lt;code&gt;target_precompile_headers()&lt;/code&gt; &lt;/a&gt; 또는 기타 명령 호출 이 대상에서 &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt; 를 설정할 때 존재하는 선택적 멤버입니다 . 값은 각 헤더에 대한 항목이있는 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a1d4d4143efd4f4b72118d0fcedcfd1deac0c6ae" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, or other command invocation that created this dependency is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 또는이 종속성을 만든 다른 명령 호출에 대한 CMake 언어 역 추적이있을 때 존재하는 선택적 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="aef63a8c2e2eea4cddc6807c52111c8bbcd3caec" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, or other command invocation that created this dependency is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f267841aef05aa6322ee2c995f91c7d6446b4c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command invocation that specified this destination is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">이 대상을 지정한 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 호출에 대한 CMake 언어 역 추적을 사용할 수있는 경우 선택적 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="a4bdd84d098310f6c76433a8ea24906d3eec5de8" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command invocation that specified this destination is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5356e46eee3621dfdba9d3bbf9b33802993c288" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this preprocessor definition is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 대한 CMake 언어 역 추적 또는이 전 처리기 정의를 추가 한 다른 명령 호출을 사용할 수 있는 경우 선택적인 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="a37c2cf7c5f5769f6261a38bd1a1101d755ec95e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this preprocessor definition is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4a9a012d39e457a1e7899a1ed82671715e86ee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this include directory is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 대한 CMake 언어 역 추적 또는이 포함 디렉토리를 추가 한 다른 명령 호출이 사용 가능한 경우 존재하는 선택적 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="c0820132bf3cbb97a42cfa820e4fecaa60afe627" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this include directory is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d27bea4c9ae5996625f1d04d01ae8cecd3275e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-1-command:target_precompile_headers&quot;&gt;&lt;code&gt;target_precompile_headers()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this precompiled header is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-1-command:target_precompile_headers&quot;&gt; &lt;code&gt;target_precompile_headers()&lt;/code&gt; &lt;/a&gt; 대한 CMake 언어 역 추적 또는이 사전 컴파일 된 헤더를 추가 한 기타 명령 호출을 사용할 수 있을 때 존재하는 선택적 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="aa3a4722059e0687f50e00e90ed1dc94fcd9b92c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-1-command:target_precompile_headers&quot;&gt;&lt;code&gt;target_precompile_headers()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this precompiled header is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda949e8dd0a3c7d131d05f5f38c5c6ff8c1ff8d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, or other command invocation that added this source to the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">에 CMake 언어 역 추적 할 때 존재하는 선택 부재 &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; 대상이 소스를 추가 또는 다른 명령 호출이 가능하다. 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="c095c307e779353d4ce56792ea8dc856fa74ff2d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, or other command invocation that added this source to the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42a3691fc985b5030d215da9225afca622b5bd5" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD&lt;/code&gt; setting is available. If the language standard was set implicitly by compile features those are used as the backtrace(s). It&amp;rsquo;s possible for multiple compile features to require the same language standard so there could be multiple backtraces. The value is a JSON array with each entry being an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD&lt;/code&gt; 설정에 대한 CMake 언어 역 추적을 사용할 수 있을 때 존재하는 선택적 멤버입니다 . 언어 표준이 컴파일 기능에 의해 암시 적으로 설정 되었다면 그것들은 역 추적 (들)로 사용됩니다. 여러 컴파일 기능에 동일한 언어 표준이 필요하므로 여러 역 추적이있을 수 있습니다. 값은 각 항목이 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열 에 대한 부호없는 정수 0 기반 인덱스 인 JSON 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="7553dcc1a9fa6e6616f40988ec342ce3a9360d2c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;code&gt;&amp;lt;LANG&amp;gt;_STANDARD&lt;/code&gt; setting is available. If the language standard was set implicitly by compile features those are used as the backtrace(s). It's possible for multiple compile features to require the same language standard so there could be multiple backtraces. The value is a JSON array with each entry being an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b11fad8ea6b8f2ae12d7a0831aa38e87f0baf2" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the command in the source code that created the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">대상을 작성한 소스 코드의 명령에 대한 CMake 언어 역 추적이 사용 가능한 경우 존재하는 선택적 멤버입니다. 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="0025105d4f5f981e773659dc61522c5517265547" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the command in the source code that created the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member's &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c55fb49578fb9b27483626907d9a6943a8cdb39" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the archiver command line invocation are available. The value is a JSON array of entries specifying the fragments. Each entry is a JSON object with members:</source>
          <target state="translated">아카이버 명령 행 호출의 단편을 사용할 수있을 때 존재하는 선택적 멤버입니다. 값은 조각을 지정하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="bf5afa00106c6e8caf3f79165586b718dd254738" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the compiler command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with one member:</source>
          <target state="translated">컴파일러 명령 행 호출의 단편을 사용할 수있을 때 존재하는 선택적 멤버입니다. 값은 순서 조각을 지정하는 항목의 JSON 배열입니다. 각 항목은 멤버가 하나 인 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="0b6e7f84b79aafd4a94baca257b5f09d2558da33" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the link command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with members:</source>
          <target state="translated">링크 명령 행 호출의 단편을 사용할 수있을 때 존재하는 선택적 멤버입니다. 값은 순서 조각을 지정하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d79096b6ba626298692b0951fe9b36614518859e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when sources are grouped together by the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is a JSON array of entries corresponding to the groups. Each entry is a JSON object with members:</source>
          <target state="translated">&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 명령 또는 기본적으로 소스를 그룹화 할 때 존재하는 선택적 멤버입니다 . 값은 그룹에 해당하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="2492431c33d13ce5a984cef66b742eb57a0141e1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property is set. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt; 대상 특성이 설정 될 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="18e546748e34151d32ce58779ce4df520b7a5f42" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 변수가 정의 될 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="dbda13d8b135308fa146242aaf8058d0933b7917" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 변수가 정의 될 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="a255720ed7d59371079490b4ce93090013cfe42d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;cmake-file-api(7)&lt;/code&gt;&lt;/a&gt; is available. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;cmake-file-api(7)&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있을 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="a65b2a6e3c530acaab0d1314592630613614dbfb" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; variable is defined for the current language. Its value is a JSON string holding the path to the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1e61851350e68dd05c74bacf0ee75e06f8ee15" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable is defined for the current language. Its value is a JSON string holding the ID (GNU, MSVC, etc.) of the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b03bb43efc0a36fc5faf594940c67eb5568d8c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_TARGET&lt;/code&gt; variable is defined for the current language. Its value is a JSON string holding the cross-compiling target of the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fb588772137b4dd72e443387ef5b348b19b752" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable is defined for the current language. Its value is a JSON string holding the version of the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155ed2be63eae9dfab539361f28fa57e85910a0e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_INCLUDE_DIRECTORIES&lt;/code&gt; variable is defined for the current language. Its value is a JSON array of JSON strings where each string holds a path to an implicit include directory for the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4302923f4d6ab2241441522d736e227eb2991c80" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_DIRECTORIES&lt;/code&gt; variable is defined for the current language. Its value is a JSON array of JSON strings where each string holds a path to an implicit link directory for the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cedb17160865d8d7fbe55a8fbf3d63a0e0efed2" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES&lt;/code&gt; variable is defined for the current language. Its value is a JSON array of JSON strings where each string holds a path to an implicit link framework directory for the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0b7e5d4e4c245ae6e06cb43747f15d0b7459d4" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_LIBRARIES&lt;/code&gt; variable is defined for the current language. Its value is a JSON array of JSON strings where each string holds a path to an implicit link library for the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a74232faf32dea8e7f38acac9c1f632c6014755" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_SOURCE_FILE_EXTENSIONS&lt;/code&gt; variable is defined for the current language. Its value is a JSON array of JSON strings where each each string holds a file extension (without the leading dot) for the language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470102bf9edb53bf8c889fb13e2a02c4d659ee79" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory has subdirectories. The value is a JSON array of entries corresponding to child directories created by the &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt;&lt;code&gt;subdirs()&lt;/code&gt;&lt;/a&gt; command. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array.</source>
          <target state="translated">디렉토리에 서브 디렉토리가있을 때 존재하는 선택적 멤버. 값은 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt; &lt;code&gt;subdirs()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 하위 디렉토리에 해당하는 항목의 JSON 배열입니다 . 각 항목은 기본 &lt;code&gt;directories&lt;/code&gt; 배열 에있는 다른 항목의 부호없는 정수 0 기반 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="cae094027876a926871cdd70cf524c21f2827b70" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array that corresponds to the parent directory that added this directory as a subdirectory.</source>
          <target state="translated">디렉토리가 최상위 레벨이 아닌 경우 존재하는 선택적 멤버입니다. 값은 이 디렉토리를 서브 디렉토리로 추가 한 상위 디렉토리에 해당하는 기본 &lt;code&gt;directories&lt;/code&gt; 배열 의 다른 항목의 부호없는 정수 0 기반 색인입니다 .</target>
        </trans-unit>
        <trans-unit id="b1ca774ddae3385f4c9129d6afbc8e05e0462435" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory itself has targets, excluding those belonging to subdirectories. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">디렉토리 자체에 대상이있을 때 존재하는 선택적 구성원 (하위 디렉토리에 속하는 대상 제외). 값은 대상에 해당하는 항목의 JSON 배열입니다. 각 항목은 기본 &lt;code&gt;targets&lt;/code&gt; 배열에 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="0d5276b6e17ca9614c3d0bc67e35234879323257" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the function call was deferred by &lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(DEFER)&lt;/code&gt;&lt;/a&gt;. If present, its value is a string containing the deferred call &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt; &lt;code&gt;cmake_language(DEFER)&lt;/code&gt; &lt;/a&gt; 의해 함수 호출이 지연되었을 때 존재하는 선택적 멤버입니다 . 존재하는 경우 값은 지연된 호출 &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; 를 포함하는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="2cc10b8f243f80227f68ec02bd579152516b5801" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the language standard is set explicitly (e.g. via &lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt;) or implicitly by compile features. Each entry is a JSON object with two members:</source>
          <target state="translated">언어 표준이 명시 적으로 (예 : &lt;a href=&quot;../prop_tgt/cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt; 를 통해 ) 설정되거나 컴파일 기능에 의해 암시 적으로 설정 될 때 존재하는 선택적 멤버입니다 . 각 항목은 두 개의 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="7bb828ae72eb64c69825d3286e85919aabef020d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project has sub-projects. The value is a JSON array of entries corresponding to the sub-projects. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array.</source>
          <target state="translated">프로젝트에 하위 프로젝트가있을 때 존재하는 선택적 멤버입니다. 값은 하위 프로젝트에 해당하는 항목의 JSON 배열입니다. 각 항목은 기본 &lt;code&gt;projects&lt;/code&gt; 배열 에있는 다른 항목의 부호없는 정수 0 기반 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="2f6e771e9726e9bd20abf9c1f70502d533a823e9" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array that corresponds to the parent project that added this project as a sub-project.</source>
          <target state="translated">프로젝트가 최상위가 아닌 경우 존재하는 선택적 멤버입니다. 값은 이 프로젝트를 하위 프로젝트로 추가 한 상위 프로젝트에 해당하는 기본 &lt;code&gt;projects&lt;/code&gt; 배열 의 다른 항목에 대한 부호없는 정수 0 기반 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="48295a220c56e2acd5c4df3c057fb3f8cac6c956" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project itself has targets, excluding those belonging to sub-projects. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">하위 프로젝트에 속한 대상을 제외하고 프로젝트 자체에 대상이있을 때 존재하는 선택적 멤버입니다. 값은 대상에 해당하는 항목의 JSON 배열입니다. 각 항목은 기본 &lt;code&gt;targets&lt;/code&gt; 배열에 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="90923382d548612413cb2df4db76ad960f970bbe" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is compiled. The value is an unsigned integer 0-based index into the &lt;code&gt;compileGroups&lt;/code&gt; array.</source>
          <target state="translated">소스가 컴파일 될 때 존재하는 선택적 멤버입니다. 값은 &lt;code&gt;compileGroups&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="1d3530f9990b97c460490d4000b7a7b8ce0efbee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is part of a source group either via the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is an unsigned integer 0-based index into the &lt;code&gt;sourceGroups&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 명령을 통해 또는 기본적으로 소스가 소스 그룹의 일부인 경우 존재하는 선택적 멤버입니다 . 값은 &lt;code&gt;sourceGroups&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="d3deeed7ed71b4b6699adc66a07d8d4781686943" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target depends on other targets. The value is a JSON array of entries corresponding to the dependencies. Each entry is a JSON object with members:</source>
          <target state="translated">대상이 다른 대상에 종속 될 때 존재하는 선택적 멤버입니다. 값은 종속성에 해당하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4584b96781381936ca64c710dbca36084c0aabc8" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rule. The value is a JSON object with members:</source>
          <target state="translated">대상에 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 규칙 이있을 때 존재하는 선택적 멤버입니다 . 값은 멤버가있는 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="d338cb76d81e0050b9bd066fc9d1a396fec0c00e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has sources that compile. The value is a JSON array of entries corresponding to groups of sources that all compile with the same settings. Each entry is a JSON object with members:</source>
          <target state="translated">대상에 컴파일 소스가있을 때 존재하는 선택적 멤버입니다. 값은 모두 동일한 설정으로 컴파일되는 소스 그룹에 해당하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="355a8abc455b50c0a9f66138683030f921de7b8c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are include directories. The value is a JSON array with an entry for each directory. Each entry is a JSON object with members:</source>
          <target state="translated">포함 디렉토리가있을 때 존재하는 선택적 멤버입니다. 값은 각 디렉토리에 대한 항목이있는 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="49f48fb7bdb99ba6a513443f933a83264c37c0d1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are preprocessor definitions. The value is a JSON array with an entry for each definition. Each entry is a JSON object with members:</source>
          <target state="translated">전 처리기 정의가있을 때 존재하는 선택적 멤버입니다. 값은 각 정의에 대한 항목이있는 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ddfc4871a9d9ed4feee132088f1565eeec964ed0" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the include directory is marked as a system include directory.</source>
          <target state="translated">포함 디렉토리가 시스템 포함 디렉토리로 표시되면 부울 값 &lt;code&gt;true&lt;/code&gt; 로 존재하는 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="9053c5b38f0a832287e94b893cac5b811de2486e" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file in the CMake installation.</source>
          <target state="translated">경로가 CMake 설치에서 파일을 지정하면 부울 값이 &lt;code&gt;true&lt;/code&gt; 인 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="d1a3f70f227d9cd359a630cdceb2cf2ff170bdd1" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is not under the top-level source or build directories.</source>
          <target state="translated">부울 값이있는 선택적 멤버 경로가 최상위 소스 또는 빌드 디렉토리에없는 파일을 지정하는 경우 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="35d11ceabca0c20a9ecfba31d3ffc079a690bf87" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is under the top-level build directory and the build is out-of-source. This member is not available on in-source builds.</source>
          <target state="translated">부울 값이있는 선택적 멤버 경로가 최상위 빌드 디렉토리 아래에있는 파일을 지정하고 빌드가 소스가 아닌 경우 &lt;code&gt;true&lt;/code&gt; 입니다. 이 멤버는 소스 빌드에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea8e2697329a2165d96a8539df60315f6b1f22c3" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the source is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스가 &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; 인&lt;/a&gt; 경우 부울 값 &lt;code&gt;true&lt;/code&gt; 로 존재하는 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="bbfffb88eb547dcca9a32d4fa4a7368fcb56c70f" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the target is provided by CMake&amp;rsquo;s build system generator rather than by a command in the source code.</source>
          <target state="translated">부울 값이있는 선택적 멤버 소스가 소스 코드의 명령이 아닌 CMake의 빌드 시스템 생성기에서 대상을 제공하는 경우 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a58b5083c15e4dc01c480b651b952e51ed602fcb" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the target is provided by CMake's build system generator rather than by a command in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f394b80565e758caa7b8bfd857a2918e642060" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when link-time optimization (a.k.a. interprocedural optimization or link-time code generation) is enabled.</source>
          <target state="translated">링크 타임 최적화 (일명 절차 간 최적화 또는 링크 타임 코드 생성)가 활성화 된 경우 부울 값 &lt;code&gt;true&lt;/code&gt; 로 표시 되는 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="8921c2b92fbced21b19e1f2fdebcb273ed2fc0eb" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when the directory or one of its subdirectories contains any &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rules, i.e. whether a &lt;code&gt;make install&lt;/code&gt; or equivalent rule is available.</source>
          <target state="translated">디렉토리 또는 서브 디렉토리 중 하나에 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 규칙이 포함 된 경우 ( 예 : &lt;code&gt;make install&lt;/code&gt; 또는 동등한 규칙이 사용 가능한지 여부 ) 부울 값 &lt;code&gt;true&lt;/code&gt; 로 표시되는 선택적 멤버 .</target>
        </trans-unit>
        <trans-unit id="295073c8a2eb759c3eae2ca772570d63d380a273" translate="yes" xml:space="preserve">
          <source>Optional variables you can define prior to calling this module:</source>
          <target state="translated">이 모듈을 호출하기 전에 정의 할 수있는 선택적 변수 :</target>
        </trans-unit>
        <trans-unit id="01319d8d1c1c535d53d2e16d119e5395db5d222e" translate="yes" xml:space="preserve">
          <source>Optional. Can also be specified without &lt;code&gt;LANGUAGES&lt;/code&gt; keyword per the first, short signature.</source>
          <target state="translated">선택 과목. 첫 번째 짧은 서명마다 &lt;code&gt;LANGUAGES&lt;/code&gt; 키워드 없이 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d81cc973f0e23b63a4be861299df252f0a63187" translate="yes" xml:space="preserve">
          <source>Optional. Sets the variables</source>
          <target state="translated">선택 과목. 변수를 설정</target>
        </trans-unit>
        <trans-unit id="c7ff844e41419814f57f8792f01e887e18c49a7b" translate="yes" xml:space="preserve">
          <source>Optional; may not be used unless policy &lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt;&lt;code&gt;CMP0048&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">선택 과목; 정책 &lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt; &lt;code&gt;CMP0048&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;NEW&lt;/code&gt; 로 설정되어 있지 않으면 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3136af140b86a38af7572707be6fba6a57d545fc" translate="yes" xml:space="preserve">
          <source>Optionally a section listing cache variables used by the module, if any.</source>
          <target state="translated">선택적으로 모듈이 사용하는 캐시 변수를 나열하는 섹션입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="2105faa0cdf20603843b77667271fb317964f07f" translate="yes" xml:space="preserve">
          <source>Optionally, the final set of library directories listed in one variable for use by client code. This should not be a cache entry.</source>
          <target state="translated">선택적으로 클라이언트 코드에서 사용하기 위해 하나의 변수에 나열된 최종 라이브러리 디렉토리 세트입니다. 캐시 항목이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="9326da7df152ff264da507cf0fd827c61160bb90" translate="yes" xml:space="preserve">
          <source>Optionally, the runtime library search path for use when running an executable linked to shared libraries. The list should be used by user code to create the &lt;code&gt;PATH&lt;/code&gt; on windows or &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; on UNIX. This should not be a cache entry.</source>
          <target state="translated">선택적으로 공유 라이브러리에 링크 된 실행 파일을 실행할 때 사용할 런타임 라이브러리 검색 경로입니다. 이 목록은 사용자 코드가 Windows 에서 &lt;code&gt;PATH&lt;/code&gt; 를 작성 하거나 UNIX에서 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 를 작성하는 데 사용해야합니다 . 캐시 항목이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="5c6497a0f460b11b3df1519ab6e63118b0b13622" translate="yes" xml:space="preserve">
          <source>Optionally, using option &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt;, native header files can be generated for methods declared as native. These files provide the connective glue that allow your Java and C code to interact. An INTERFACE target will be created for an easy usage of generated files. Sub-option &lt;code&gt;DESTINATION&lt;/code&gt; can be used to specify the output directory for generated header files.</source>
          <target state="translated">선택적으로 &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; 옵션을 사용하여 native로 선언 된 메소드에 대해 고유 헤더 파일을 생성 할 수 있습니다. 이 파일은 Java 및 C 코드가 상호 작용할 수있는 연결 접착제를 제공합니다. 생성 된 파일을 쉽게 사용할 수 있도록 인터페이스 대상이 작성됩니다. 하위 옵션 &lt;code&gt;DESTINATION&lt;/code&gt; 을 사용하여 생성 된 헤더 파일의 출력 디렉토리를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="translated">옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fb0c0840b475c2a546bf624e9a9bbc54c4480602" translate="yes" xml:space="preserve">
          <source>Options for Dashboard Client include:</source>
          <target state="translated">Dashboard Client의 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="85b85ab75dd0ae66d7aa6313828663d28696cdc6" translate="yes" xml:space="preserve">
          <source>Options include:</source>
          <target state="translated">옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1eace63f6a0f2d21d698a7bb8efb9a507fdd3360" translate="yes" xml:space="preserve">
          <source>Options that are required to make the compiler work correctly can be included as items in a list; they can not be changed.</source>
          <target state="translated">컴파일러가 올바르게 작동하도록하는 데 필요한 옵션은 목록의 항목으로 포함될 수 있습니다. 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="20ec7b9c54302f577ce8a5d9fd1db03b02a80eff" translate="yes" xml:space="preserve">
          <source>Options that are required to make the compiler work correctly can be included; they can not be changed.</source>
          <target state="translated">컴파일러가 올바르게 작동하도록하는 데 필요한 옵션이 포함될 수 있습니다. 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8bc492fdfa7c9f26661839feac27aaa4b885193c" translate="yes" xml:space="preserve">
          <source>Options to both &lt;code&gt;DOWNLOAD&lt;/code&gt; and &lt;code&gt;UPLOAD&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 및 &lt;code&gt;UPLOAD&lt;/code&gt; 옵션 은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5865b2a20f3bdf9e258514a6340f3b9deea4fba6" translate="yes" xml:space="preserve">
          <source>Options used in the &lt;code&gt;bison&lt;/code&gt; command line</source>
          <target state="translated">&lt;code&gt;bison&lt;/code&gt; 명령 행 에서 사용되는 옵션</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="040579f2bccd771aaaec951523b2fa53a2bd958a" translate="yes" xml:space="preserve">
          <source>Or, after installing the package content but before creating the package installation binary for redistribution, manually replace the absolute paths with placeholders for substitution by the installation tool when the package is installed.</source>
          <target state="translated">또는 패키지 컨텐츠를 설치 한 후 재배포를 위해 패키지 설치 바이너리를 작성하기 전에 패키지를 설치할 때 설치 도구가 대체 할 절대 경로를 자리 표시 자로 수동으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="46c9b41136b402ff72d4b94c69f6877e517df2d3" translate="yes" xml:space="preserve">
          <source>Or, from an IDE, build the &lt;code&gt;Experimental&lt;/code&gt; target.</source>
          <target state="translated">또는 IDE에서 &lt;code&gt;Experimental&lt;/code&gt; 대상을 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="1a984f13cdcd0d866dc687475ede5878adb5f191" translate="yes" xml:space="preserve">
          <source>Ordering is done in ascending mode. The lowest folder found will be tested first.</source>
          <target state="translated">주문은 오름차순 모드로 수행됩니다. 가장 낮은 폴더를 먼저 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="822cb67c870a18008d47c17af4a74ee4fb09eb67" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;query.json&lt;/code&gt; top-level members are reserved for future use. If present they are ignored for forward compatibility.</source>
          <target state="translated">다른 &lt;code&gt;query.json&lt;/code&gt; 최상위 멤버는 나중에 사용하기 위해 예약되어 있습니다. 존재하는 경우, 순방향 호환성을 위해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9cf80f9019a6509a21f323a696f4231b663fd481" translate="yes" xml:space="preserve">
          <source>Other Behavior Settings</source>
          <target state="translated">다른 행동 설정</target>
        </trans-unit>
        <trans-unit id="03bd6aa5eb4dd3e7da3f9629c11782a53abacd66" translate="yes" xml:space="preserve">
          <source>Other Generators</source>
          <target state="translated">다른 발전기</target>
        </trans-unit>
        <trans-unit id="c34ec1b223be4052e2cfc9b968487a04965da69c" translate="yes" xml:space="preserve">
          <source>Other IDEs like QtCreator that also use the CodeBlocks generator may ignore this setting.</source>
          <target state="translated">CodeBlocks 생성기를 사용하는 QtCreator와 같은 다른 IDE는이 설정을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1433b37395b9322c3eb2306210b570974a97f178" translate="yes" xml:space="preserve">
          <source>Other Unix</source>
          <target state="translated">기타 유닉스</target>
        </trans-unit>
        <trans-unit id="528c9e4cefd4e5107c8bd960b4ecbc97a328e30c" translate="yes" xml:space="preserve">
          <source>Other Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bad4a4f8f8ab75a9eb4c75ab57c83f008c3b49" translate="yes" xml:space="preserve">
          <source>Other platforms: &lt;code&gt;CPython&lt;/code&gt;</source>
          <target state="translated">기타 플랫폼 : &lt;code&gt;CPython&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7663a677b9013f6a9f50472ca24b517f9032cf78" translate="yes" xml:space="preserve">
          <source>Other project-specific variables may be available to control builds, such as enabling or disabling components of the project.</source>
          <target state="translated">프로젝트의 구성 요소 활성화 또는 비활성화와 같은 다른 프로젝트 별 변수를 사용하여 빌드를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7be83674f6749c6c30ac7cd68c439bf1239ec7b" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) on which this step depends.</source>
          <target state="translated">이 단계가 종속 된 다른 단계 (사용자 정의 또는 사전 정의).</target>
        </trans-unit>
        <trans-unit id="81e5c2c0eb405c739cdc2f74bc5777fbe5714ad1" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) that depend on this new custom step.</source>
          <target state="translated">이 새로운 사용자 정의 단계에 의존하는 다른 단계 (사용자 정의 또는 사전 정의).</target>
        </trans-unit>
        <trans-unit id="cd23a3a339b95ca3110ceda99ac377643b02559a" translate="yes" xml:space="preserve">
          <source>Other values have undefined behavior and may not be diagnosed.</source>
          <target state="translated">다른 값은 정의되지 않은 동작을 가지며 진단되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b842962e775bdb60889773e196709d59501a61a6" translate="yes" xml:space="preserve">
          <source>Other variables one may set to control this module are:</source>
          <target state="translated">이 모듈을 제어하기 위해 설정할 수있는 다른 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="32ad498a7cd4419e84abdcc9bb03d4a47da68ef3" translate="yes" xml:space="preserve">
          <source>Otherwise a single thread/process is started.</source>
          <target state="translated">그렇지 않으면 단일 스레드 / 프로세스가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="40a6319348dbdbd3c896ac46836444cc2a12361d" translate="yes" xml:space="preserve">
          <source>Otherwise evaluates to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;1&lt;/code&gt; 로 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9737ccbae5dddad2bcc291123720458cfd529ea" translate="yes" xml:space="preserve">
          <source>Otherwise it will contain:</source>
          <target state="translated">그렇지 않으면 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f851c81eccd696c689e9c625afa28ea9541f4da4" translate="yes" xml:space="preserve">
          <source>Otherwise you would probably encounter unexpected random problems when building and linking, as both the ISO C and the ISO C++ standard claims almost nothing about what a link process should be.</source>
          <target state="translated">그렇지 않으면 ISO C와 ISO C ++ 표준 모두 링크 프로세스가 무엇인지에 대해 거의 주장하지 않기 때문에 빌드 및 링크 할 때 예기치 않은 임의의 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="129e214d4fd61dc2e838dd2ca0afc855a21da034" translate="yes" xml:space="preserve">
          <source>Otherwise, a file-level dependency is created on that path relative to the current binary directory.</source>
          <target state="translated">그렇지 않으면 현재 바이너리 디렉토리에 상대적인 경로에 파일 수준 종속성이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="2650a3d3223ea796cfe1b9f2489d0073e2435478" translate="yes" xml:space="preserve">
          <source>Otherwise, dependency resolution proceeds.</source>
          <target state="translated">그렇지 않으면 종속성 해결이 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="e33d71a00d511909d98879ec111b05d21ab14b8c" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;EP_BASE&lt;/code&gt; directory property is set then components of an external project are stored under the specified base:</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;EP_BASE&lt;/code&gt; 디렉토리 특성이 설정되면 외부 프로젝트의 컴포넌트가 지정된 기준 아래에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="f38a84ce98a8a5a0e12c79dde70c89ed4826a8c3" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency is an absolute file that exists, the dependency is resolved to that file.</source>
          <target state="translated">그렇지 않고 종속성이 존재하는 절대 파일 인 경우 종속성은 해당 파일로 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="e9515f883260f20ad1fafe6577f891fdfb6bcd80" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency starts with &lt;code&gt;@executable_path/&lt;/code&gt;, and there is a &lt;code&gt;BUNDLE_EXECUTABLE&lt;/code&gt; argument, and replacing &lt;code&gt;@executable_path/&lt;/code&gt; with the directory of the bundle executable yields an existing file, the dependency is resolved to that file.</source>
          <target state="translated">그렇지 않고 종속성이 &lt;code&gt;@executable_path/&lt;/code&gt; 시작 하고 &lt;code&gt;BUNDLE_EXECUTABLE&lt;/code&gt; 인수가 있고 &lt;code&gt;@executable_path/&lt;/code&gt; 를 번들 실행 파일의 디렉토리로 바꾸면 기존 파일이 생성되면 종속성이 해당 파일로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="86a294bd34390bb0a16afd4e3befc2e9bc708d0f" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency starts with &lt;code&gt;@loader_path/&lt;/code&gt;, and replacing &lt;code&gt;@loader_path/&lt;/code&gt; with the directory of the depending file yields an existing file, the dependency is resolved to that file.</source>
          <target state="translated">그렇지 않으면,와 종속성 시작하면 &lt;code&gt;@loader_path/&lt;/code&gt; , 및 교체 &lt;code&gt;@loader_path/&lt;/code&gt; 따라 파일 수율 기존 파일의 디렉토리와는 의존성이 해당 파일에 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="d36b2a87737bce8a524d74b9cdca0096a0cae5b5" translate="yes" xml:space="preserve">
          <source>Otherwise, if the dependency starts with &lt;code&gt;@rpath/&lt;/code&gt;, and replacing &lt;code&gt;@rpath/&lt;/code&gt; with one of the &lt;code&gt;RPATH&lt;/code&gt; entries of the depending file yields an existing file, the dependency is resolved to that file. Note that &lt;code&gt;RPATH&lt;/code&gt; entries that start with &lt;code&gt;@executable_path/&lt;/code&gt; or &lt;code&gt;@loader_path/&lt;/code&gt; also have these items replaced with the appropriate path.</source>
          <target state="translated">그렇지 않으면,와 종속성 시작하면 &lt;code&gt;@rpath/&lt;/code&gt; , 및 교체 &lt;code&gt;@rpath/&lt;/code&gt; 의 하나 &lt;code&gt;RPATH&lt;/code&gt; 의 따라 파일 수율 기존 파일의 항목, 종속성이 해당 파일에 해결됩니다. &lt;code&gt;@executable_path/&lt;/code&gt; 또는 &lt;code&gt;@loader_path/&lt;/code&gt; 시작 하는 &lt;code&gt;RPATH&lt;/code&gt; 항목 에도 이러한 항목이 적절한 경로로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="e8cab491aa55a31b3162c8612b650302b7559eb0" translate="yes" xml:space="preserve">
          <source>Otherwise, if the depending file has any &lt;code&gt;RUNPATH&lt;/code&gt; entries, and the library exists in one of those entries, the dependency is resolved to that file.</source>
          <target state="translated">그렇지 않고 종속 파일에 &lt;code&gt;RUNPATH&lt;/code&gt; 항목이 있고 라이브러리가 해당 항목 중 하나에있는 경우 종속성은 해당 파일로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="f4ea72da32e84010d59be74076b48b85c5ef3f7e" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in either the operating system&amp;rsquo;s &lt;code&gt;system32&lt;/code&gt; directory or the &lt;code&gt;Windows&lt;/code&gt; directory, in that order, the dependency is resolved to that file.</source>
          <target state="translated">그렇지 않고 라이브러리가 운영 체제의 &lt;code&gt;system32&lt;/code&gt; 디렉터리 또는 &lt;code&gt;Windows&lt;/code&gt; 디렉터리에 순서대로 존재하면 종속성이 해당 파일로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="493039852abc4ce14d616dbe26722c7619a972fe" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in either the operating system's &lt;code&gt;system32&lt;/code&gt; directory or the &lt;code&gt;Windows&lt;/code&gt; directory, in that order, the dependency is resolved to that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1601fc9aecbe9681b24a559dbe399bb6b3e1ad31" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in one of the &lt;code&gt;DIRECTORIES&lt;/code&gt; entries, the dependency is resolved to that file. In this case, a warning is issued, because finding a file in one of the &lt;code&gt;DIRECTORIES&lt;/code&gt; means that the depending file is not complete (it does not list all the directories from which it pulls dependencies).</source>
          <target state="translated">그렇지 않고 라이브러리가 &lt;code&gt;DIRECTORIES&lt;/code&gt; 항목 중 하나에 있으면 종속성이 해당 파일로 분석됩니다. 이 경우 &lt;code&gt;DIRECTORIES&lt;/code&gt; 중 하나에서 파일을 찾는 것은 종속 파일이 완전하지 않음을 의미하므로 (종속성을 가져 오는 모든 디렉토리를 나열하지 않음) 경고가 발행 됩니다.</target>
        </trans-unit>
        <trans-unit id="9c50d5ac6460ba72658cbc2fa33035e428c1bdd6" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in one of the directories listed by &lt;code&gt;ldconfig&lt;/code&gt;, the dependency is resolved to that file.</source>
          <target state="translated">그렇지 않고 라이브러리가 &lt;code&gt;ldconfig&lt;/code&gt; 에 나열된 디렉토리 중 하나에 있으면 종속성이 해당 파일로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="c70ff2e96f699e3fa41728c5a14a3764a1448970" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in one of the directories specified by &lt;code&gt;DIRECTORIES&lt;/code&gt;, in the order they are listed, the dependency is resolved to that file. In this case, a warning is not issued, because searching other directories is a normal part of Windows library resolution.</source>
          <target state="translated">그렇지 않고 라이브러리가 &lt;code&gt;DIRECTORIES&lt;/code&gt; 로 지정된 디렉토리 중 하나에 나열된 순서대로 존재하면 종속성이 해당 파일로 분석됩니다. 이 경우 다른 디렉토리를 검색하는 것이 Windows 라이브러리 해결의 일반적인 부분이므로 경고가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1933d4a97dda67047aa94f3d2519b27b00d34a9" translate="yes" xml:space="preserve">
          <source>Otherwise, if the library exists in the same directory as the depending file, the dependency is resolved to that file.</source>
          <target state="translated">그렇지 않고 라이브러리가 종속 파일과 동일한 디렉토리에 있으면 종속성이 해당 파일로 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="633cdfa78f70fd73f6240e900899f18217c374c8" translate="yes" xml:space="preserve">
          <source>Otherwise, the dependency is unresolved.</source>
          <target state="translated">그렇지 않으면 종속성이 해결되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0cd7102474ee66a73a1d5ba511d582a7d336043b" translate="yes" xml:space="preserve">
          <source>Otherwise, the latest API level available in the NDK is used.</source>
          <target state="translated">그렇지 않으면 NDK에서 사용 가능한 최신 API 레벨이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1749f766f2ea9d08bc5fd97e719a51402473b742" translate="yes" xml:space="preserve">
          <source>Otherwise, this module tries to find the config program, first from unixODBC, then from iODBC. If no config program found, this module searches for ODBC header and library in list of known locations.</source>
          <target state="translated">그렇지 않으면이 모듈은 먼저 unixODBC에서 iODBC에서 구성 프로그램을 찾습니다. 구성 프로그램이 없으면이 모듈은 알려진 위치 목록에서 ODBC 헤더 및 라이브러리를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="575d5494e56697fbff0a9c52fb43d44fb7308e2e" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the Android API version number targeted. This will be the same value as the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable for &lt;code&gt;Android&lt;/code&gt; platforms.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Android 용 크로스 컴파일시이&lt;/a&gt; 변수는 대상으로 지정된 Android API 버전 번호를 제공합니다. 이는 &lt;code&gt;Android&lt;/code&gt; 플랫폼 의 &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="264f4e149d0b64776fa86b5ad752026582c3f5d5" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the name of the Android architecture corresponding to the value of the &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; variable. The architecture name may be one of:</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Android 용 크로스 컴파일 &lt;/a&gt;&lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; &lt;/a&gt; 변수 는 CMAKE_ANDROID_ARCH_ABI 변수 의 값에 해당하는 Android 아키텍처의 이름을 제공합니다 . 아키텍처 이름은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19f8352fbdf28e8ba69d66658e9edd8faf04bfe6" translate="yes" xml:space="preserve">
          <source>Output Artifacts</source>
          <target state="translated">산출물</target>
        </trans-unit>
        <trans-unit id="2343b0ca5b797dd02411866e4aa17e8bf582c1ad" translate="yes" xml:space="preserve">
          <source>Output anything outputted by the test program if the test should fail. This option can also be enabled by setting the &lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt;&lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt;&lt;/a&gt; environment variable</source>
          <target state="translated">테스트에 실패한 경우 테스트 프로그램에서 출력 한 내용을 출력하십시오. 이 옵션은 &lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt; &lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt; &lt;/a&gt; 환경 변수를 설정하여 활성화 할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="535f07da4e699fd2acbab6b05429b78c1c0cedb9" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="a756805abfe12cfb451dfeb1ddb6740cd54210d1" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the linker for executable and shared library targets.</source>
          <target state="translated">실행 파일 및 공유 라이브러리 대상에 대해 링커에서 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="fede65554c776dfcfdf720a34d6af6459601b160" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="b2ab6bfea46b6c0ce8cf26585c29350de561b425" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbols &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">실행 파일 또는 공유 라이브러리 대상에 대해 링커에서 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="9e423302ff95148b4156904d083ce731511d55f7" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일 을 빌드 할 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="c7b00243976ae9b66ce89c45eabaa5750b859b36" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일 을 빌드 할 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="555267d70d65751b96eda7f889bd7107ce7731b9" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일 을 빌드 할 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="b0c24f5819c5769eebd8081c3253a9d6ba3745a0" translate="yes" xml:space="preserve">
          <source>Output file location</source>
          <target state="translated">출력 파일 위치</target>
        </trans-unit>
        <trans-unit id="53d19b975b7bdaba19870194ab3d51fd771da33a" translate="yes" xml:space="preserve">
          <source>Output from stdout and stderr if the executable were to be run on the target platform. This is created only if the &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; or &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; option was used.</source>
          <target state="translated">실행 파일이 대상 플랫폼에서 실행되는 경우 stdout 및 stderr의 출력 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; 또는 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 옵션이 사용 된 경우에만 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="7d1518db03d98013391746b7db1844339cd9d89f" translate="yes" xml:space="preserve">
          <source>Output from the above would appear something like the following:</source>
          <target state="translated">위의 출력은 다음과 같이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="87936d28a46ee2400e7288bac24d7e5355c61a45" translate="yes" xml:space="preserve">
          <source>Output is designed for human consumption and not for parsing. Enabling this variable is equivalent to using &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--debug-find&lt;/code&gt; with the added ability to enable debugging for a subset of find calls.</source>
          <target state="translated">출력은 파싱이 아닌 사람이 소비하도록 설계되었습니다. 이 변수 를 활성화하는 것은 찾기 호출의 하위 집합에 대해 디버깅을 활성화하는 추가 기능과 함께 &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--debug-find&lt;/code&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b1adc32e3b3ccdc48da406236ff28316fd1557b5" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="e2ef7381a066e9589c66c399de6fb05e76bbf865" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일의 출력 이름 .</target>
        </trans-unit>
        <trans-unit id="dd2b0b40bd8c7672ce0b18668b00271a5b4d80ea" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="513963de1ed0d4278d05b0be07c3b88af7dce641" translate="yes" xml:space="preserve">
          <source>Output name for target files.</source>
          <target state="translated">대상 파일의 출력 이름입니다.</target>
        </trans-unit>
        <trans-unit id="77bd4f0e287c3158ec0885b565de272a3e921a63" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="85889ac9d0127200bfbfc0d74968525f96bb750a" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">실행 파일 또는 공유 라이브러리 대상에 대해 링커에서 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="b29d566ea46ae0301455b959b7657e391b6e859b" translate="yes" xml:space="preserve">
          <source>Output on Windows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe217d50e49887aa685c4245c9dc66c163142f71" translate="yes" xml:space="preserve">
          <source>Output on all other platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e102c44340713abff35a4fa4eec240c34a110b09" translate="yes" xml:space="preserve">
          <source>Output suffix to be used for ISPC generated headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35877099180878ed78f20b7acfe157ba3ccc57b" translate="yes" xml:space="preserve">
          <source>Output to log file.</source>
          <target state="translated">로그 파일로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="388540448869594b9d558b8525802cdb0fe4e69e" translate="yes" xml:space="preserve">
          <source>Output-Related Expressions</source>
          <target state="translated">출력 관련 표현식</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="574586b51a4f26e9ed16afa662df09313fb00f18" translate="yes" xml:space="preserve">
          <source>Outputs a list of all the source files that are required by the specified &lt;code&gt;srcfile&lt;/code&gt;. This list is written into &lt;code&gt;outputfile&lt;/code&gt;. This is similar to writing out the dependencies for &lt;code&gt;srcfile&lt;/code&gt; except that it jumps from &lt;code&gt;.h&lt;/code&gt; files into &lt;code&gt;.cxx&lt;/code&gt;, &lt;code&gt;.c&lt;/code&gt; and &lt;code&gt;.cpp&lt;/code&gt; files if possible.</source>
          <target state="translated">지정된 &lt;code&gt;srcfile&lt;/code&gt; 에 필요한 모든 소스 파일의 목록을 출력합니다 . 이 목록은 &lt;code&gt;outputfile&lt;/code&gt; 에 기록됩니다 . 이것은 가능한 경우 &lt;code&gt;.h&lt;/code&gt; 파일에서 &lt;code&gt;.cxx&lt;/code&gt; , &lt;code&gt;.c&lt;/code&gt; 및 &lt;code&gt;.cpp&lt;/code&gt; 파일 로 이동 &lt;code&gt;srcfile&lt;/code&gt; 점을 제외하고 srcfile에 대한 종속성을 작성하는 것과 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="bb2ddd8e65bb738740ce4ef57c8fd6d0c626ba83" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;final&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt; , &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; 및 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272에&lt;/a&gt; 정의 된대로 제어 &lt;code&gt;final&lt;/code&gt; 키워드를 재정의 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d46f200cdbb4c965833fd365834a1af93182f2d" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;override&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt; , &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; 및 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272에&lt;/a&gt; 정의 된대로 제어 &lt;code&gt;override&lt;/code&gt; 키워드를 대체 하십시오 .</target>
        </trans-unit>
        <trans-unit id="05b8f9e81d581e4ba2840b32a4cee72e780eee7e" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_item_default_embedded_path_override function.</source>
          <target state="translated">프로젝트 별 gp_item_default_embedded_path_override 함수를 제공하여 프로젝트별로 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="1bf7813e483c9c6df8c93ddcbd64184c00765432" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolve_item_override function.</source>
          <target state="translated">프로젝트 별 gp_resolve_item_override 함수를 제공하여 프로젝트별로 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="3b6bca2bdc640e9f40c2cde7759461ff451cfad6" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolved_file_type_override function.</source>
          <target state="translated">프로젝트 별 gp_resolved_file_type_override 함수를 제공하여 프로젝트별로 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="3675aa628202fbb56df5b63f9b5e4a75851d30ad" translate="yes" xml:space="preserve">
          <source>Override the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2014%202015.html#windows-10-sdk-maximum-version-for-vs-2015&quot;&gt;Windows 10 SDK Maximum Version for VS 2015&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2014%202015.html#windows-10-sdk-maximum-version-for-vs-2015&quot;&gt;VS 2015 용 Windows 10 SDK 최대 버전을&lt;/a&gt; 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="1f564d07fad71fb5c984e41a79c7d10dc3fa2743" translate="yes" xml:space="preserve">
          <source>Override the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Visual%20Studio%2014%202015.html#windows-10-sdk-maximum-version-for-vs-2015&quot;&gt;Windows 10 SDK Maximum Version for VS 2015&lt;/a&gt; and beyond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437afd82fb736e754db9aa73d9cffd5cb1d1efe0" translate="yes" xml:space="preserve">
          <source>Override the CMake generator used for the configure step. Without this option, the same generator as the main build will be used. This option is ignored if a custom configure command has been specified with the &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option.</source>
          <target state="translated">구성 단계에 사용 된 CMake 생성기를 재정의하십시오. 이 옵션이 없으면 기본 빌드와 동일한 생성기가 사용됩니다. &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; 옵션 으로 사용자 정의 구성 명령이 지정된 경우이 옵션은 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="7bf5e7295de248c038b9ab5ad9a5982050fe259b" translate="yes" xml:space="preserve">
          <source>Override the default Visual Studio tool that will be applied to the source file with a new tool not based on the extension of the file.</source>
          <target state="translated">파일 확장자를 기준으로하지 않는 새 도구를 사용하여 소스 파일에 적용될 기본 Visual Studio 도구를 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="e6d9849d3ea35ad5c77b0779ca7324c918b6d630" translate="yes" xml:space="preserve">
          <source>Override the installation prefix, &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">설치 접두사 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 를&lt;/a&gt; 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="1dd80e31c2a9d4e5129a44fd128654121d526acb" translate="yes" xml:space="preserve">
          <source>Override the make program chosen by CTest with a given one.</source>
          <target state="translated">CTest에서 선택한 make 프로그램을 지정된 것으로 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="d607d1a1f4ef49fa084352d194c41559ee3e784a" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt;&lt;/a&gt;, which controls the directory where CPack will perform its packaging work. The resultant package(s) will be created at this location by default and a &lt;code&gt;_CPack_Packages&lt;/code&gt; subdirectory will also be created below this directory to use as a working area during package creation.</source>
          <target state="translated">CPack이 패키지 작업을 수행 할 디렉토리를 제어 하는 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt; 를&lt;/a&gt; 재정의 / 정의 합니다. 결과 패키지는 기본적으로이 위치에 작성되며 패키지 작성 중 작업 영역으로 사용하기 위해이 디렉토리 아래에 &lt;code&gt;_CPack_Packages&lt;/code&gt; 서브 디렉토리도 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="a7292fafd59fdc6e4ad3dccbb8baf9788fcab04e" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">재정 / 정의 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d901968af00caba75a6efc24e15d3ba4fc9d5e6f" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt;&lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt;&lt;/a&gt; variable used for packaging. Any value set for this variable in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file will then be ignored.</source>
          <target state="translated">패키징에 사용 된 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt; &lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt; &lt;/a&gt; 변수 의 값을 재정의 / 정의합니다 . &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 파일 에서이 변수에 설정된 모든 값 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1ab54100489e396947952606c92ce779ecbe4a9e" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt;&lt;/a&gt; variable used for packaging. It will override a value set in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file or one automatically computed from &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">패키징에 사용 된 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt; &lt;/a&gt; 변수 의 값을 재정의 / 정의합니다 . &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 파일에 설정된 값 또는 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; &lt;/a&gt; 에서 자동으로 계산 된 값을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="638b86b6fa6d48b49772e2c38147177479731832" translate="yes" xml:space="preserve">
          <source>Overrides the command used for the download step (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is specified, all other download options will be ignored. Providing an empty string for &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; effectively disables the download step.</source>
          <target state="translated">다운로드 단계에 사용 된 명령을 대체합니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 이 옵션을 지정하면 다른 모든 다운로드 옵션이 무시됩니다. &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 에 빈 문자열을 제공하면 다운로드 단계가 효과적으로 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="fe07d0eb814d45b5666dfca64f6e4b2bad5a8673" translate="yes" xml:space="preserve">
          <source>Overrides the default build command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default build command will be chosen to integrate with the main build in the most appropriate way (e.g. using recursive &lt;code&gt;make&lt;/code&gt; for Makefile generators or &lt;code&gt;cmake --build&lt;/code&gt; if the project uses a CMake build). This option can be specified with an empty string as the command to make the build step do nothing.</source>
          <target state="translated">기본 빌드 명령을 대체합니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 이 옵션을 지정하지 않으면 기본 빌드 명령이 가장 적합한 방식으로 기본 빌드와 통합되도록 선택됩니다 (예 : 프로젝트가 CMake 빌드를 사용하는 경우 Makefile 생성기의 재귀 &lt;code&gt;make&lt;/code&gt; 또는 &lt;code&gt;cmake --build&lt;/code&gt; 사용). 이 옵션은 빌드 단계에서 아무것도하지 않도록하는 명령으로 빈 문자열로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01492b60c06af3d8f8d77d48bfb4bc7e5960729a" translate="yes" xml:space="preserve">
          <source>Overrides the default test command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default behavior of the test step is to build the external project&amp;rsquo;s own &lt;code&gt;test&lt;/code&gt; target. This option can be specified with &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; as an empty string, which allows the test step to still be defined, but it will do nothing. Do not specify any of the other &lt;code&gt;TEST_...&lt;/code&gt; options if providing an empty string as the test command, but prefer to omit all &lt;code&gt;TEST_...&lt;/code&gt; options altogether if the test step target is not needed.</source>
          <target state="translated">기본 테스트 명령을 대체합니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 이 옵션을 지정하지 않으면 테스트 단계의 기본 동작은 외부 프로젝트 자체의 &lt;code&gt;test&lt;/code&gt; 대상 을 빌드하는 것 입니다. 이 옵션은 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 를 빈 문자열로 지정 하여 테스트 단계를 계속 정의 할 수 있지만 아무 것도하지 않습니다. 테스트 명령으로 빈 문자열을 제공하는 경우 다른 &lt;code&gt;TEST_...&lt;/code&gt; 옵션을 지정하지 말고 테스트 단계 대상이 필요하지 않은 경우 모든 &lt;code&gt;TEST_...&lt;/code&gt; 옵션을 모두 생략 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7959c74d076d9fa1bad80a4ba7105cc6fb7f4479" translate="yes" xml:space="preserve">
          <source>Overrides the default test command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default behavior of the test step is to build the external project's own &lt;code&gt;test&lt;/code&gt; target. This option can be specified with &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; as an empty string, which allows the test step to still be defined, but it will do nothing. Do not specify any of the other &lt;code&gt;TEST_...&lt;/code&gt; options if providing an empty string as the test command, but prefer to omit all &lt;code&gt;TEST_...&lt;/code&gt; options altogether if the test step target is not needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42f58c8386993e0206bef0ef7c69ca77a4b2231" translate="yes" xml:space="preserve">
          <source>Overrides the download method&amp;rsquo;s update step with a custom command. The command may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 명령으로 다운로드 방법의 업데이트 단계를 재정의합니다. 명령은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86b5791646b7dcdab4631d42844444cc435435e0" translate="yes" xml:space="preserve">
          <source>Overrides the download method's update step with a custom command. The command may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0069870e7c24ac5b4d436ac20676b24b6f14a6" translate="yes" xml:space="preserve">
          <source>Overrides the platform toolset used to build a target.</source>
          <target state="translated">대상을 빌드하는 데 사용되는 플랫폼 도구 세트를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="cb4b60259fd194f27c4ccd7a2cd0ca806fd94aa8" translate="yes" xml:space="preserve">
          <source>Overriding the default version by setting the &lt;code&gt;DEVELOPER_DIR&lt;/code&gt; environment variable when running CMake and the build tool.</source>
          <target state="translated">CMake 및 빌드 도구를 실행할 때 &lt;code&gt;DEVELOPER_DIR&lt;/code&gt; 환경 변수 를 설정하여 기본 버전을 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="264ff677acc7e78d8f342c25f0181efd3f98eb7e" translate="yes" xml:space="preserve">
          <source>Overwrite CTest configuration option.</source>
          <target state="translated">CTest 구성 옵션을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="665a8e0be08c636daa63c0bac43e01fac2e7241c" translate="yes" xml:space="preserve">
          <source>PACKAGES_FOUND</source>
          <target state="translated">PACKAGES_FOUND</target>
        </trans-unit>
        <trans-unit id="4bc224bbb0f7e2b2e3681c072de8fcf0a975a04b" translate="yes" xml:space="preserve">
          <source>PACKAGES_NOT_FOUND</source>
          <target state="translated">PACKAGES_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="84ff02f7dac86df480d8836122e9d4b4dd429842" translate="yes" xml:space="preserve">
          <source>PARENT_DIRECTORY</source>
          <target state="translated">PARENT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="6bcf76119ef22d667b52f5cb91cd4cd1fd701750" translate="yes" xml:space="preserve">
          <source>PARENT_GROUP, if supplied, names the parent group of this group. Parent groups are used to establish a hierarchy of groups, providing an arbitrary hierarchy of groups.</source>
          <target state="translated">PARENT_GROUP (제공된 경우)은이 그룹의 상위 그룹 이름을 지정합니다. 부모 그룹은 임의의 그룹 계층을 제공하여 그룹 계층을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="765a36a81bd85e7b09f462729ed9db51efc19591" translate="yes" xml:space="preserve">
          <source>PASS_REGULAR_EXPRESSION</source>
          <target state="translated">PASS_REGULAR_EXPRESSION</target>
        </trans-unit>
        <trans-unit id="218d15d583c62beefceba3ba43ac54f9ad3b0fff" translate="yes" xml:space="preserve">
          <source>PCH_INSTANTIATE_TEMPLATES</source>
          <target state="translated">PCH_INSTANTIATE_TEMPLATES</target>
        </trans-unit>
        <trans-unit id="8b1fd9543b255acdc89379b6a639e8f23f20faae" translate="yes" xml:space="preserve">
          <source>PCH_WARN_INVALID</source>
          <target state="translated">PCH_WARN_INVALID</target>
        </trans-unit>
        <trans-unit id="c1db62663da179bb41f28a57283ad50491197b8e" translate="yes" xml:space="preserve">
          <source>PDB_NAME</source>
          <target state="translated">PDB_NAME</target>
        </trans-unit>
        <trans-unit id="4f87246d0ad8666299503a93213abef196e5db87" translate="yes" xml:space="preserve">
          <source>PDB_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9e921119a948a7777a6c1fbd0e54908819a8d290" translate="yes" xml:space="preserve">
          <source>PDB_NAME_CONFIG</source>
          <target state="translated">PDB_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="dfa7c06e20acead154fc69b8e53b5e901c9b2727" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="a265cacfea2d2932769bef7ed7ca446e7f074e81" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e10fb8abcb6dd697a27813de8f2f3b249884d9de" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="1db9cc570b23ac46a3b520d988410fca96ca9145" translate="yes" xml:space="preserve">
          <source>PKGCONFIG(package includedir libdir linkflags cflags)</source>
          <target state="translated">PKGCONFIG (패키지 포함 libdir 링크 플래그 cflags)</target>
        </trans-unit>
        <trans-unit id="0faf1966db6726535cbd31ebafce7d48ec84ab37" translate="yes" xml:space="preserve">
          <source>PLIST gives a filename that is passed to pkgbuild with the &lt;code&gt;--component-plist&lt;/code&gt; argument when using the productbuild generator.</source>
          <target state="translated">PLIST는 제품 빌드 생성기를 사용할 때 &lt;code&gt;--component-plist&lt;/code&gt; 인수 와 함께 pkgbuild로 전달되는 파일 이름을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5f17cf662dcfd0d8d192171312c95d2dc8c51434" translate="yes" xml:space="preserve">
          <source>POSITION_INDEPENDENT_CODE</source>
          <target state="translated">POSITION_INDEPENDENT_CODE</target>
        </trans-unit>
        <trans-unit id="20ed513115e392291d5121ffb66d5bb7379526b5" translate="yes" xml:space="preserve">
          <source>POST_INSTALL_SCRIPT</source>
          <target state="translated">POST_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="a6e8f28c5e78e2c32b6c894b9b323a5cb9f0bc35" translate="yes" xml:space="preserve">
          <source>PRECOMPILE_HEADERS</source>
          <target state="translated">PRECOMPILE_HEADERS</target>
        </trans-unit>
        <trans-unit id="24a2c780f090e9f03ee617addfe7edb0d0e289ad" translate="yes" xml:space="preserve">
          <source>PRECOMPILE_HEADERS_REUSE_FROM</source>
          <target state="translated">PRECOMPILE_HEADERS_REUSE_FROM</target>
        </trans-unit>
        <trans-unit id="418ea1730dc3c4dc9a7329e859a02f2fd5148f4d" translate="yes" xml:space="preserve">
          <source>PREDEFINED_TARGETS_FOLDER</source>
          <target state="translated">PREDEFINED_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="890121a7a9c78fd5d5d495e5aa9c86c681e6fbbb" translate="yes" xml:space="preserve">
          <source>PREFIX</source>
          <target state="translated">PREFIX</target>
        </trans-unit>
        <trans-unit id="791d0020f51578dfb5eff96143a026d7b67b24e0" translate="yes" xml:space="preserve">
          <source>PRE_INSTALL_SCRIPT</source>
          <target state="translated">PRE_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="8d49cd64c4a22b9fafd9722599d8c185a52449a7" translate="yes" xml:space="preserve">
          <source>PRIVATE_HEADER</source>
          <target state="translated">PRIVATE_HEADER</target>
        </trans-unit>
        <trans-unit id="ee1781533c5c7b392b78ee0ca1d0cc24897ef0b1" translate="yes" xml:space="preserve">
          <source>PROCESSORS</source>
          <target state="translated">PROCESSORS</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
