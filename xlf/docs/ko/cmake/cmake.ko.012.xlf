<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="21b9b4a80bb223fcf161dde2aca323870fa0c91e" translate="yes" xml:space="preserve">
          <source>The default behavior or when the property is &lt;code&gt;OFF&lt;/code&gt; is to generate a project file for the target and then a sub-project file for each source group.</source>
          <target state="translated">기본 동작 또는 속성이 &lt;code&gt;OFF&lt;/code&gt; 인 경우 대상의 프로젝트 파일을 생성 한 다음 각 소스 그룹의 하위 프로젝트 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1c15b916d77afa23cdde286369965662899b756c" translate="yes" xml:space="preserve">
          <source>The default build configuration for &lt;a href=&quot;../manual/cmake.1#build-tool-mode&quot;&gt;Build a Project&lt;/a&gt; and &lt;code&gt;ctest&lt;/code&gt; build handler when there is no explicit configuration given.</source>
          <target state="translated">명시 적 구성이없는 경우 &lt;a href=&quot;../manual/cmake.1#build-tool-mode&quot;&gt;프로젝트 빌드&lt;/a&gt; 및 &lt;code&gt;ctest&lt;/code&gt; 빌드 핸들러 의 기본 빌드 구성입니다 .</target>
        </trans-unit>
        <trans-unit id="032049d73737f9fa4a2f26df91d70ec49e05c964" translate="yes" xml:space="preserve">
          <source>The default configuration of the Cray Programming Environment is to only support static libraries. This can be overridden and shared libraries enabled by setting the &lt;code&gt;CRAYPE_LINK_TYPE&lt;/code&gt; environment variable to &lt;code&gt;dynamic&lt;/code&gt;.</source>
          <target state="translated">Cray 프로그래밍 환경의 기본 구성은 정적 라이브러리 만 지원하는 것입니다. &lt;code&gt;CRAYPE_LINK_TYPE&lt;/code&gt; 환경 변수를 &lt;code&gt;dynamic&lt;/code&gt; 으로 설정하여 이를 대체하고 공유 라이브러리를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="728a99b3ca8300b8e4555abf1a670f88e573f552" translate="yes" xml:space="preserve">
          <source>The default configure command runs CMake with options based on the main project. For non-CMake external projects, the &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option must be used to override this behavior (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). For projects that require no configure step, specify this option with an empty string as the command to execute.</source>
          <target state="translated">기본 configure 명령은 기본 프로젝트를 기반으로 옵션과 함께 CMake를 실행합니다. CMake가 아닌 외부 프로젝트의 경우 &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; 옵션을 사용하여이 동작을 재정의해야합니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 구성 단계가 필요없는 프로젝트의 경우 실행할 명령으로 빈 문자열을 사용하여이 옵션을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9457cfae3ee78768fb35bc50aba0f74c19e2e7ff" translate="yes" xml:space="preserve">
          <source>The default for either approach produces identical compilation flags, but if a project modifies &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; from its original value this policy determines which approach to use.</source>
          <target state="translated">두 접근 방식의 기본값은 동일한 컴파일 플래그를 생성하지만 프로젝트가 &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; 를 원래 값에서 수정하면 이 정책에 따라 사용할 접근 방식이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="71d135b421fb17257f3960e1bbfa5328aa85c760" translate="yes" xml:space="preserve">
          <source>The default order for sorting packages found using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. It can assume one of the following values:</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 사용하여 찾은 패키지 정렬의 기본 순서입니다 . 다음 값 중 하나를 가정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af42dbb9e1845011fdbd98e33f9f184d0b6031f7" translate="yes" xml:space="preserve">
          <source>The default package types are , &lt;code&gt;RUNTIME&lt;/code&gt;, &lt;code&gt;OPTIONAL&lt;/code&gt;, &lt;code&gt;RECOMMENDED&lt;/code&gt; and &lt;code&gt;REQUIRED&lt;/code&gt;, and their importance is &lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt;.</source>
          <target state="translated">기본 패키지 유형은 &lt;code&gt;RUNTIME&lt;/code&gt; , &lt;code&gt;OPTIONAL&lt;/code&gt; , &lt;code&gt;RECOMMENDED&lt;/code&gt; 및 &lt;code&gt;REQUIRED&lt;/code&gt; 이며 중요도는 &lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="91b4eb721215fcb126af174662f311fc9932f1bb" translate="yes" xml:space="preserve">
          <source>The default search order is designed to be most-specific to least-specific for common use cases. Projects may override the order by simply calling the command multiple times and using the &lt;code&gt;NO_*&lt;/code&gt; options:</source>
          <target state="translated">기본 검색 순서는 일반적인 사용 사례에서 가장 구체적에서 가장 덜 구체적으로 설계되었습니다. 프로젝트는 단순히 명령을 여러 번 호출하고 &lt;code&gt;NO_*&lt;/code&gt; 옵션을 사용하여 순서를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e9eb16dd9b5ac5db1242f1a8260d48b9b70134a" translate="yes" xml:space="preserve">
          <source>The default target used by &lt;code&gt;Makefile&lt;/code&gt; and &lt;code&gt;Ninja&lt;/code&gt; generators. Builds all targets in the buildsystem, except those which are excluded by their &lt;a href=&quot;../../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; target property or &lt;a href=&quot;../../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; directory property. The name &lt;code&gt;ALL_BUILD&lt;/code&gt; is used for this purpose for the Xcode and Visual Studio generators.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; 및 &lt;code&gt;Ninja&lt;/code&gt; 생성기에서 사용하는 기본 대상 입니다. &lt;a href=&quot;../../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt; 대상 속성 또는 &lt;a href=&quot;../../prop_dir/exclude_from_all#prop_dir:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_dir:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt; 디렉터리 속성에 의해 제외 된 대상을 제외하고 빌드 시스템의 모든 대상을 빌드합니다 . &lt;code&gt;ALL_BUILD&lt;/code&gt; 라는 이름 은 Xcode 및 Visual Studio 생성기에서이 용도로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="efde9d994b3f66593ba8e29cb4cf0c8c19b90106" translate="yes" xml:space="preserve">
          <source>The default timeout for each test if not specified by the &lt;a href=&quot;../prop_test/timeout#prop_test:TIMEOUT&quot; id=&quot;index-1-prop_test:TIMEOUT&quot;&gt;&lt;code&gt;TIMEOUT&lt;/code&gt;&lt;/a&gt; test property.</source>
          <target state="translated">&lt;a href=&quot;../prop_test/timeout#prop_test:TIMEOUT&quot; id=&quot;index-1-prop_test:TIMEOUT&quot;&gt; &lt;code&gt;TIMEOUT&lt;/code&gt; &lt;/a&gt; 테스트 특성으로 지정되지 않은 경우 각 테스트의 기본 시간 종료 .</target>
        </trans-unit>
        <trans-unit id="0d88cb7568937d75fa8dbf9305db6ca66a04a312" translate="yes" xml:space="preserve">
          <source>The default value for &lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-0-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt;&lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt;&lt;/a&gt; when there is no explicit configuration given on the first run while creating a new build tree. On later runs in an existing build tree the value persists in the cache as &lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-1-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt;&lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">새 빌드 트리를 생성하는 동안 처음 실행시 명시 적 구성이 지정되지 않은 경우 &lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-0-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt; &lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt; &lt;/a&gt; 의 기본값 입니다. 나중에 기존 빌드 트리에서 실행될 때 값은 &lt;a href=&quot;../variable/cmake_export_compile_commands#variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot; id=&quot;index-1-variable:CMAKE_EXPORT_COMPILE_COMMANDS&quot;&gt; &lt;code&gt;CMAKE_EXPORT_COMPILE_COMMANDS&lt;/code&gt; 로&lt;/a&gt; 캐시에 유지 됩니다.</target>
        </trans-unit>
        <trans-unit id="ec9241f39e6445568ec875a4069f567110c7d110" translate="yes" xml:space="preserve">
          <source>The default value for this global property is &lt;code&gt;OPTIONAL&lt;/code&gt;.</source>
          <target state="translated">이 글로벌 특성의 기본값은 &lt;code&gt;OPTIONAL&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="22cfd446059291cadca70b7e357b78f4ae8bf0a3" translate="yes" xml:space="preserve">
          <source>The default value for this global property is &lt;code&gt;REQUIRED&lt;/code&gt;.</source>
          <target state="translated">이 글로벌 특성의 기본값은 &lt;code&gt;REQUIRED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dbccfe5ee0079806cb817bbe68d38ad0e5760bb0" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;OFF&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;OFF&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9a093b81019ceef6f4814a47306ba71cf04d0f71" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;Q_OBJECT;Q_GADGET;Q_NAMESPACE&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;Q_OBJECT;Q_GADGET;Q_NAMESPACE&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1d075143a9cd5614fd5b8e9a8f44cf9c64b8d968" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;_ispc.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e34c800a92f6ebfad8c92ab96e8e639ec24360" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;bundle&lt;/code&gt;, &lt;code&gt;framework&lt;/code&gt;, or &lt;code&gt;app&lt;/code&gt; for the respective target types.</source>
          <target state="translated">기본값 은 해당 대상 유형에 대한 &lt;code&gt;bundle&lt;/code&gt; , &lt;code&gt;framework&lt;/code&gt; 또는 &lt;code&gt;app&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="49810283fa6eabb51cd93f454c4dd41f685397d6" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;gnustl_static&lt;/code&gt; on NDK versions that provide it and otherwise &lt;code&gt;c++_static&lt;/code&gt;. Note that this default differs from the native NDK build system because CMake may be used to build projects for Android that are not natively implemented for it and use the C++ standard library.</source>
          <target state="translated">NDK 버전에서 기본값은 &lt;code&gt;gnustl_static&lt;/code&gt; 이며 &lt;code&gt;c++_static&lt;/code&gt; 입니다. CMake는 기본적으로 구현되지 않은 C ++ 표준 라이브러리를 사용하는 Android 용 프로젝트를 빌드하는 데 사용될 수 있으므로이 기본값은 기본 NDK 빌드 시스템과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2d250c63e2d257cebc3ffd1ab48876b708353f1d" translate="yes" xml:space="preserve">
          <source>The default value is:</source>
          <target state="translated">기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0b5ce237429b230b595ab49a2c73077808ac5873" translate="yes" xml:space="preserve">
          <source>The default value of this variable is computed by CPack and contains all components defined by the project. The user may set it to only include the specified components.</source>
          <target state="translated">이 변수의 기본값은 CPack에 의해 계산되며 프로젝트에 의해 정의 된 모든 구성 요소를 포함합니다. 사용자는 지정된 구성 요소 만 포함하도록 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="701a9695872fbd9ead8984d6b0751bb68adb159b" translate="yes" xml:space="preserve">
          <source>The dependencies (list of components) on which this component depends.</source>
          <target state="translated">이 구성 요소가 의존하는 종속성 (구성 요소 목록)</target>
        </trans-unit>
        <trans-unit id="95d9126cd1b2091b7e928a93facb842ad20a89a9" translate="yes" xml:space="preserve">
          <source>The dependency contains any languages which produce side effects that are relevant to the library. Currently, all languages except C, C++, Objective-C, Objective-C++, assembly, and CUDA are assumed to produce side effects. However, side effects from one language are assumed not to be relevant to another (for example, a Fortran library is assumed to not have any side effects that are relevant for a Swift library.)</source>
          <target state="translated">종속성에는 라이브러리와 관련된 부작용을 생성하는 모든 언어가 포함됩니다. 현재 C, C ++, Objective-C, Objective-C ++, 어셈블리 및 CUDA를 제외한 모든 언어가 부작용을 일으키는 것으로 간주됩니다. 그러나 한 언어의 부작용은 다른 언어와 관련이없는 것으로 간주됩니다 (예 : Fortran 라이브러리는 Swift 라이브러리와 관련된 부작용이없는 것으로 간주됩니다).</target>
        </trans-unit>
        <trans-unit id="2981bb6fa88f069e54c76771427c1a6dcaaec20b" translate="yes" xml:space="preserve">
          <source>The dependency contains any source files that were generated by a custom command.</source>
          <target state="translated">종속성에는 사용자 정의 명령으로 생성 된 모든 소스 파일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e87a8feedf3cf48015c6c196d51621de7eac29f1" translate="yes" xml:space="preserve">
          <source>The dependency has any &lt;code&gt;PRE_BUILD&lt;/code&gt;, &lt;code&gt;PRE_LINK&lt;/code&gt;, or &lt;code&gt;POST_BUILD&lt;/code&gt; custom commands associated with it.</source>
          <target state="translated">종속성에는 &lt;code&gt;PRE_BUILD&lt;/code&gt; , &lt;code&gt;PRE_LINK&lt;/code&gt; 또는 &lt;code&gt;POST_BUILD&lt;/code&gt; 사용자 정의 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="60ec6b4085a1b71108dec4c88f8678fa02792370" translate="yes" xml:space="preserve">
          <source>The dependency was added to the library by &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">종속성은 &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; 의해 라이브러리에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4a55290d5e351c5aee4062f88119028ff8dda92b" translate="yes" xml:space="preserve">
          <source>The dependency was added to the library through a source file in the library generated by a custom command that uses the dependency.</source>
          <target state="translated">종속성을 사용하는 사용자 지정 명령에 의해 생성 된 라이브러리의 소스 파일을 통해 종속성이 라이브러리에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="84822d53cc5b7ea6cb7ac2bd388c2627d78c089c" translate="yes" xml:space="preserve">
          <source>The dependent DLL name is converted to lowercase. Windows DLL names are case-insensitive, and some linkers mangle the case of the DLL dependency names. However, this makes it more difficult for &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt;, &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt;, &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt;, and &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; to properly filter DLL names - every regex would have to check for both uppercase and lowercase letters. For example:</source>
          <target state="translated">종속 DLL 이름은 소문자로 변환됩니다. Windows DLL 이름은 대소 문자를 구분하지 않으며 일부 링커는 DLL 종속성 이름의 대소 문자를 변경합니다. 그러나 이로 인해 &lt;code&gt;PRE_INCLUDE_REGEXES&lt;/code&gt; , &lt;code&gt;PRE_EXCLUDE_REGEXES&lt;/code&gt; , &lt;code&gt;POST_INCLUDE_REGEXES&lt;/code&gt; 및 &lt;code&gt;POST_EXCLUDE_REGEXES&lt;/code&gt; 가 DLL 이름을 적절하게 필터링 하기가 더 어려워 집니다 . 모든 정규식은 대문자와 소문자를 모두 확인해야합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="8ab8c851f8fce2e89071a3cf43f8a6e6f95b7564" translate="yes" xml:space="preserve">
          <source>The description of a component.</source>
          <target state="translated">구성 요소에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="c80b38fd245eb8f0b5b92facd960213fb707f6ab" translate="yes" xml:space="preserve">
          <source>The description of the top level project.</source>
          <target state="translated">최상위 프로젝트에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="b3ce0771674515660782d4f3be4442d275813af5" translate="yes" xml:space="preserve">
          <source>The different dependency types &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;INTERFACE&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; are represented as solid, dashed and dotted edges.</source>
          <target state="translated">서로 다른 종속성 유형 &lt;code&gt;PUBLIC&lt;/code&gt; , &lt;code&gt;INTERFACE&lt;/code&gt; 및 &lt;code&gt;PRIVATE&lt;/code&gt; 는 실선, 대시 및 점선 모서리로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="dc41de492aa21d22eae8ce8b445329e446b149af" translate="yes" xml:space="preserve">
          <source>The different dependency types &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; are represented as solid, dashed and dotted edges.</source>
          <target state="translated">&lt;code&gt;PUBLIC&lt;/code&gt; , &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 종속성 유형 은 단색, 점선 및 점선으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a22ebf81277ca4e20b64413c426c63261581db85" translate="yes" xml:space="preserve">
          <source>The directories are added to the &lt;a href=&quot;../prop_dir/link_directories#prop_dir:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_dir:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, converting relative paths to absolute as needed. The command will apply only to targets created after it is called.</source>
          <target state="translated">디렉토리는 현재 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 의 &lt;a href=&quot;../prop_dir/link_directories#prop_dir:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_dir:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 디렉토리 특성에 추가 되어 필요에 따라 상대 경로를 절대로 변환합니다. 명령은 호출 된 후 작성된 대상에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c8c1d2873dbc82fecfa40e25d55608f8087d370c" translate="yes" xml:space="preserve">
          <source>The directories containing the iconv headers.</source>
          <target state="translated">iconv 헤더를 포함하는 디렉토리</target>
        </trans-unit>
        <trans-unit id="7b9bb354f11ce1a2f70d5f684f8948750b05a853" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;INCLUDE&lt;/code&gt; and &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4e59f292c5d416378651a82cc04b1af452f32c" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;LIB&lt;/code&gt; and &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7de365876c355c60d9acd22a5be195a0f80024" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;INCLUDE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; 및 &lt;code&gt;INCLUDE&lt;/code&gt; 의 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="9d8ac66b333432a6ea4f80e9f3e3fc38ccab1213" translate="yes" xml:space="preserve">
          <source>The directories in &lt;code&gt;PATH&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; 자체 의 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="0a9d396df9107dfb15908560c9ad531931c217c5" translate="yes" xml:space="preserve">
          <source>The directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; is relative to the installation prefix, which is stored in the variable &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 디렉토리 는 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 변수에 저장된 설치 접 두부에 상대적 입니다.</target>
        </trans-unit>
        <trans-unit id="917980abd5e99862ffe6bef50d073fabe2825e8d" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;code&gt;gdal.h&lt;/code&gt;.</source>
          <target state="translated">포함하는 디렉토리 &lt;code&gt;gdal.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcefa9a19e036fcc7b26d7ce9be209e2317ea614" translate="yes" xml:space="preserve">
          <source>The directory containing the XCTest Framework headers.</source>
          <target state="translated">XCTest Framework 헤더가 포함 된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="c4068c962246271364fca545817bc7af88812025" translate="yes" xml:space="preserve">
          <source>The directory containing the iconv headers.</source>
          <target state="translated">iconv 헤더를 포함하는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="2aad1e5856f81376865210f72ce7589b6a7b49a9" translate="yes" xml:space="preserve">
          <source>The directory from which the test executable will be called.</source>
          <target state="translated">테스트 실행 파일이 호출 될 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="e492d39b064873c58dc65ab3c5bb06e04a80563a" translate="yes" xml:space="preserve">
          <source>The directory holding the &lt;code&gt;backtrace(3)&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;backtrace(3)&lt;/code&gt; 헤더를 보유하는 디렉토리 입니다.</target>
        </trans-unit>
        <trans-unit id="cb1a23d10f2ab60366988fa3ef0aafa96a690537" translate="yes" xml:space="preserve">
          <source>The directory in which CPack is doing its packaging. If it is not set then this will default (internally) to the build dir. This variable may be defined in a CPack config file or from the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-3-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; command line option &lt;code&gt;-B&lt;/code&gt;. If set, the command line option overrides the value found in the config file.</source>
          <target state="translated">CPack이 패키징을 수행하는 디렉토리입니다. 설정하지 않으면 기본적으로 빌드 디렉토리가 (내부적으로) 설정됩니다. 이 변수는 CPack 구성 파일 또는 &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-3-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt; 명령 행 옵션 &lt;code&gt;-B&lt;/code&gt; 에서 정의 할 수 있습니다 . 설정되면 명령 행 옵션이 구성 파일에있는 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="4f00e991d51d8914c7b0802e611127a81cb6f027" translate="yes" xml:space="preserve">
          <source>The directory is created on demand and automatically added to the &lt;a href=&quot;additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">디렉토리는 요청시 작성되며 &lt;a href=&quot;additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt; &lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt; &lt;/a&gt; 대상 특성에 자동으로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="46a2b8695b9168b3b0c2de986216d07807ea3d5c" translate="yes" xml:space="preserve">
          <source>The directory property is used to initialize the &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property when a target is created. That target property is used by the generators to set the library search directories for the linker.</source>
          <target state="translated">디렉토리 특성은 대상이 작성 될 때 &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 대상 특성 을 초기화하는 데 사용됩니다 . 이 대상 속성은 생성기에서 링커의 라이브러리 검색 디렉토리를 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="30034ad5795748d893b5d11e9c21fd14c710d101" translate="yes" xml:space="preserve">
          <source>The directory specified here must be such that the executable &lt;code&gt;nvcc&lt;/code&gt; or the appropriate &lt;code&gt;version.txt&lt;/code&gt; file can be found underneath the specified directory.</source>
          <target state="translated">여기 에 지정된 디렉토리는 지정된 디렉토리 아래에서 실행 가능한 &lt;code&gt;nvcc&lt;/code&gt; 또는 적절한 &lt;code&gt;version.txt&lt;/code&gt; 파일을 찾을 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1dca176c4023a2f1884f8728426ee259561f051a" translate="yes" xml:space="preserve">
          <source>The directory where the class files can be found. For example to use them with &lt;code&gt;javah&lt;/code&gt;.</source>
          <target state="translated">클래스 파일을 찾을 수있는 디렉토리 예를 들어 &lt;code&gt;javah&lt;/code&gt; 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce0c8f9d0c5fa8a564093a813496ae84dc4ba1ad" translate="yes" xml:space="preserve">
          <source>The directory where the content of the archive will be extracted to can be specified using the &lt;code&gt;DESTINATION&lt;/code&gt; option. If the directory does not exist, it will be created. If &lt;code&gt;DESTINATION&lt;/code&gt; is not given, the current binary directory will be used.</source>
          <target state="translated">아카이브의 내용을 추출 할 디렉토리는 &lt;code&gt;DESTINATION&lt;/code&gt; 옵션을 사용하여 지정할 수 있습니다 . 디렉토리가 존재하지 않으면 생성됩니다. 경우에 &lt;code&gt;DESTINATION&lt;/code&gt; 주어지지 않는, 현재 바이너리 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d489c4fb9f8de008d49b0f555d90d54402a37296" translate="yes" xml:space="preserve">
          <source>The directory with the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;CMakeCache.txt&lt;/code&gt; 파일 이있는 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="3416dab1ae5b5452859edd263b091fd191552de0" translate="yes" xml:space="preserve">
          <source>The documentation file is not processed and should be in the following format:</source>
          <target state="translated">문서 파일은 처리되지 않으며 다음 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="26125fe1fc422c3b2c96e73d9de946ef0615e539" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Archive generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt;&lt;code&gt;CPack Archive Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack Archive Generator에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt; &lt;code&gt;CPack Archive Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a2ef799ec8fd7a20541a007174c44636b72fb09" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Archive generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt;&lt;code&gt;CPack Archive Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack 아카이브 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt; &lt;code&gt;CPack Archive Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69b95c0944ac36c5e05a6b690b582c6b58690747" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Archive generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt;&lt;code&gt;CPack Archive Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561e9feb59c259285b4c882f898f25931c694e88" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Bundle generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt;&lt;code&gt;CPack Bundle Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack 번들 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt; &lt;code&gt;CPack Bundle Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c0d61b7744d06b4dc03a329d802455ba6b468e7" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Bundle generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt;&lt;code&gt;CPack Bundle Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack 번들 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt; &lt;code&gt;CPack Bundle Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b6eb0c2171483ff46ce199615769d9bfc8c7e5a" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Bundle generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt;&lt;code&gt;CPack Bundle Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cac2c3daccfbef1511050aa6369461324c9f3c" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Cygwin generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt;&lt;code&gt;CPack Cygwin Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack Cygwin Generator에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt; &lt;code&gt;CPack Cygwin Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="466c49316f06f27592c97d35e4168e4ce3c7662b" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Cygwin generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt;&lt;code&gt;CPack Cygwin Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack Cygwin 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt; &lt;code&gt;CPack Cygwin Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e105965bc0b675801046f1dad308c6baac599dd" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Cygwin generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt;&lt;code&gt;CPack Cygwin Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e524bb8601731b38778bd205d48423eb830bbdb3" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DEB generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt;&lt;code&gt;CPack DEB Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DEB Generator에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt; &lt;code&gt;CPack DEB Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7aa5584e023a4dc9880c49a67fa55fc437631e3" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DEB generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt;&lt;code&gt;CPack DEB Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DEB 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt; &lt;code&gt;CPack DEB Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20e3d37612fbea707fa6d0421d6a63a9bfb136da" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DEB generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt;&lt;code&gt;CPack DEB Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faec3bda0ade575c81908efe5e7bed3589f72318" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DragNDrop generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt;&lt;code&gt;CPack DragNDrop Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DragNDrop 생성기 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt; &lt;code&gt;CPack DragNDrop Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf90ee439cd69c8c4b7e050a53e8a4b37dcd9708" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DragNDrop generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt;&lt;code&gt;CPack DragNDrop Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack DragNDrop 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt; &lt;code&gt;CPack DragNDrop Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="264ec3ebfb1c399071b4e36cde78faef54f8c933" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DragNDrop generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt;&lt;code&gt;CPack DragNDrop Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a032fbc375d987088b0bdfb9a9f3469ed206ca1" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack FreeBSD generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt;&lt;code&gt;CPack FreeBSD Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack FreeBSD 생성기에 대한 문서가 여기로 이동되었습니다 : &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt; &lt;code&gt;CPack FreeBSD Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74faf7868509eeca4749506a40879eed8d8a42bc" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack FreeBSD generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt;&lt;code&gt;CPack FreeBSD Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack FreeBSD 생성기에 대한 문서가 여기로 옮겨졌습니다 : &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt; &lt;code&gt;CPack FreeBSD Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4a37078466f2a0916e18808771c180b6b06acab" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack FreeBSD generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt;&lt;code&gt;CPack FreeBSD Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b34048823d186128efc6cc3b5af1eb8f289d15b" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack IFW generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt;&lt;code&gt;CPack IFW Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack IFW Generator에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt; &lt;code&gt;CPack IFW Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="986566636e1ae033e6cdecb5d86bb56dee5a9aad" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NSIS generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt;&lt;code&gt;CPack NSIS Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NSIS 생성기 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt; &lt;code&gt;CPack NSIS Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c51495d242899ac8ca3539afe99a78f227538ea9" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NSIS generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt;&lt;code&gt;CPack NSIS Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NSIS 생성기에 대한 설명서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt; &lt;code&gt;CPack NSIS Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b57e41af34272d91706f865d873078f8970c7985" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NSIS generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt;&lt;code&gt;CPack NSIS Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b499d8296ac3034c848b039a2f8bd3b3205f9025" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NuGet generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt;&lt;code&gt;CPack NuGet Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NuGet 생성기 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt; &lt;code&gt;CPack NuGet Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69f6bed8e09b0df40d513d8f947e6d7a3351eac7" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NuGet generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt;&lt;code&gt;CPack NuGet Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack NuGet 생성기에 대한 설명서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt; &lt;code&gt;CPack NuGet Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab99c4fccdfc512971b71f465ce4c6d1125240f4" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NuGet generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt;&lt;code&gt;CPack NuGet Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59383a85f81e3a2c63bfe74645f5572190773437" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack PackageMaker generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt;&lt;code&gt;CPack PackageMaker Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack PackageMaker 생성기 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt; &lt;code&gt;CPack PackageMaker Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86fb6f7a9f84df2712b259e0e1d7b8a3437ac887" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack PackageMaker generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt;&lt;code&gt;CPack PackageMaker Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack PackageMaker 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt; &lt;code&gt;CPack PackageMaker Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1578469750b5132f30eead6fd6a08ae517d4176d" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack PackageMaker generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt;&lt;code&gt;CPack PackageMaker Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c702f4ec09a030005cde9204430416dfa1af6f33" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack RPM generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt;&lt;code&gt;CPack RPM Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack RPM 생성기 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt; &lt;code&gt;CPack RPM Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6396ddfe9b715266180d07f2f2ac2c7e06cdc62" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack RPM generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt;&lt;code&gt;CPack RPM Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack RPM 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt; &lt;code&gt;CPack RPM Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c2366bb6b083361b14df46ad8f8e5f903a47c60" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack RPM generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt;&lt;code&gt;CPack RPM Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dd93852509d0c4cfbf97ce16f29a578a84042d" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack WIX generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack WIX 생성기 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40112a74bb2095798048f9545d29987d5c5911ab" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack WIX generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack WIX 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8812517eea6f3dd306bbdf679151d9066895908e" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack WIX generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f102ca41acb2c64d823b5185fad17efc9d0f94" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack productbuild generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt;&lt;code&gt;CPack productbuild Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack 제품 빌드 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt; &lt;code&gt;CPack productbuild Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="271e2bf052e361a12444500c8a682a9152085fa1" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack productbuild generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt;&lt;code&gt;CPack productbuild Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">CPack productbuild 생성기에 대한 문서가 여기로 이동되었습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt; &lt;code&gt;CPack productbuild Generator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0ee4d291e3fe67f0a12b93ebbad386bdcf8678" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack productbuild generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt;&lt;code&gt;CPack productbuild Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78328ad091fb72a25dea0a6e9b5ad081ef340328" translate="yes" xml:space="preserve">
          <source>The end result is that &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; should look like:</source>
          <target state="translated">최종 결과는 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 가 다음과 같아야 한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="361e78af485380e05594c5215f9d380d1cdf3a86" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;a href=&quot;../../envvar/ctest_parallel_level#envvar:CTEST_PARALLEL_LEVEL&quot; id=&quot;index-0-envvar:CTEST_PARALLEL_LEVEL&quot;&gt;&lt;code&gt;CTEST_PARALLEL_LEVEL&lt;/code&gt;&lt;/a&gt; can alternatively be set to avoid the need to pass &lt;code&gt;-j&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-j&lt;/code&gt; 를 전달할 필요가 없도록 환경 변수 &lt;a href=&quot;../../envvar/ctest_parallel_level#envvar:CTEST_PARALLEL_LEVEL&quot; id=&quot;index-0-envvar:CTEST_PARALLEL_LEVEL&quot;&gt; &lt;code&gt;CTEST_PARALLEL_LEVEL&lt;/code&gt; &lt;/a&gt; 을 대신 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="879b849d288ccc744d25e7618d2ca6bd28529979" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; may also be populated with prefixes to search for packages. Like the &lt;code&gt;PATH&lt;/code&gt; environment variable, this is a list and needs to use the platform-specific environment variable list item separator (&lt;code&gt;:&lt;/code&gt; on Unix and &lt;code&gt;;&lt;/code&gt; on Windows).</source>
          <target state="translated">환경 변수 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 는 패키지를 검색하기위한 접두사로 채워질 수도 있습니다. &lt;code&gt;PATH&lt;/code&gt; 환경 변수 와 마찬가지로 이것은 목록이며 플랫폼 별 환경 변수 목록 항목 구분 기호 ( &lt;code&gt;:&lt;/code&gt; Unix 및 &lt;code&gt;;&lt;/code&gt; Windows) 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a07c2990ce8a0d61a14a814a03a7ebd1e33aa75e" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;ICE_HOME&lt;/code&gt; may also be used; the Ice_HOME variable takes precedence.</source>
          <target state="translated">환경 변수 &lt;code&gt;ICE_HOME&lt;/code&gt; 도 사용될 수 있습니다. Ice_HOME 변수가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="f3d434912dec1f581b5adfa63bac70869385903b" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;ICU_ROOT&lt;/code&gt; may also be used; the ICU_ROOT variable takes precedence.</source>
          <target state="translated">환경 변수 &lt;code&gt;ICU_ROOT&lt;/code&gt; 도 사용될 수 있습니다. ICU_ROOT 변수가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="f66b68a7573bee06149df050e6ede72ea8cdf0fb" translate="yes" xml:space="preserve">
          <source>The exact compile flags and language standard are deliberately not part of the user interface for this use-case. CMake will compute the appropriate compile flags to use by considering the features specified for each target.</source>
          <target state="translated">정확한 컴파일 플래그와 언어 표준은 의도적으로이 사용 사례에 대한 사용자 인터페이스의 일부가 아닙니다. CMake는 각 대상에 지정된 기능을 고려하여 사용할 적절한 컴파일 플래그를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="565f19f0423372ff3e34a53d8c4d9a4da9285f62" translate="yes" xml:space="preserve">
          <source>The exact parsing rules depend on the operating system. They are specified by the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; argument which must be one of the following keywords:</source>
          <target state="translated">정확한 구문 분석 규칙은 운영 체제에 따라 다릅니다. &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; 인수 로 지정되며 다음 키워드 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6ad522306ca10dc04b81d45ab1a7996402c9f1d8" translate="yes" xml:space="preserve">
          <source>The exact version of the CUDA Toolkit found (as reported by &lt;code&gt;nvcc --version&lt;/code&gt; or &lt;code&gt;version.txt&lt;/code&gt;).</source>
          <target state="translated">찾은 CUDA 툴킷의 정확한 버전 ( &lt;code&gt;nvcc --version&lt;/code&gt; 또는 &lt;code&gt;version.txt&lt;/code&gt; 로보고 됨 ).</target>
        </trans-unit>
        <trans-unit id="74fd747a002f5588632b26df6e05a059cb0976e8" translate="yes" xml:space="preserve">
          <source>The executable file (e.g. &lt;code&gt;.exe&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-3-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-3-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; executable () 명령으로 작성된 실행 파일의 실행 파일 (예 : &lt;code&gt;.exe&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0ce833ca73d0adc97b00113c9bb1344808cf8469" translate="yes" xml:space="preserve">
          <source>The executable is run in the optionally specified directory. The executable can include arguments if it is double quoted, but it is better to use the optional &lt;code&gt;ARGS&lt;/code&gt; argument to specify arguments to the program. This is because cmake will then be able to escape spaces in the executable path. An optional argument &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; specifies a variable in which to store the output. To capture the return value of the execution, provide a &lt;code&gt;RETURN_VALUE&lt;/code&gt;. If &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; is specified, then no output will go to the stdout/stderr of the console running cmake.</source>
          <target state="translated">실행 파일은 선택적으로 지정된 디렉토리에서 실행됩니다. 큰 따옴표로 묶인 경우 실행 파일에 인수가 포함될 수 있지만 선택적 &lt;code&gt;ARGS&lt;/code&gt; 인수를 사용하여 프로그램에 인수를 지정 하는 것이 좋습니다 . cmake가 실행 경로에서 공백을 이스케이프 할 수 있기 때문입니다. 선택적 인수 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 은 출력을 저장할 변수를 지정합니다. 실행의 리턴 값을 캡처하려면 &lt;code&gt;RETURN_VALUE&lt;/code&gt; 를 제공하십시오 . 경우 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 을 지정하면 출력이 콘솔 실행 cmake의 표준 출력 / 표준 에러로 이동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c06128cea25f99cee949b9db1acbdbf56d396bb5" translate="yes" xml:space="preserve">
          <source>The existence of &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-1-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; means that for Qt upstream to provide package config files that can be found by &lt;code&gt;find_package(Qt)&lt;/code&gt;, the consuming project has to explicitly specify &lt;code&gt;find_package(Qt CONFIG)&lt;/code&gt;. Removing this module gives Qt a path forward for exporting its own config files which can easily be found by consuming projects.</source>
          <target state="translated">&lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-1-module:FindQt&quot;&gt; &lt;code&gt;FindQt&lt;/code&gt; 가&lt;/a&gt; 존재 한다는 것은 Qt 업스트림이 &lt;code&gt;find_package(Qt)&lt;/code&gt; 로 찾을 수있는 패키지 구성 파일을 제공하기 위해 소비하는 프로젝트가 명시 적으로 &lt;code&gt;find_package(Qt CONFIG)&lt;/code&gt; 지정해야 함을 의미 합니다. 이 모듈을 제거하면 Qt는 프로젝트를 소비하여 쉽게 찾을 수있는 자체 구성 파일을 내보낼 수있는 경로를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5de824a8c82ad42d2c1280e14f2edbeb9aaf6e8a" translate="yes" xml:space="preserve">
          <source>The external library providing backtrace, if any.</source>
          <target state="translated">역 추적을 제공하는 외부 라이브러리 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="66abe0c3869182d7d42a5560943ad9d968b53356" translate="yes" xml:space="preserve">
          <source>The external project&amp;rsquo;s own install step is invoked as part of the main project&amp;rsquo;s &lt;em&gt;build&lt;/em&gt;. It is done after the external project&amp;rsquo;s build step and may be before or after the external project&amp;rsquo;s test step (see the &lt;code&gt;TEST_BEFORE_INSTALL&lt;/code&gt; option below). The external project&amp;rsquo;s install rules are not part of the main project&amp;rsquo;s install rules, so if anything from the external project should be installed as part of the main build, these need to be specified in the main build as additional &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; commands. The default install step builds the &lt;code&gt;install&lt;/code&gt; target of the external project, but this can be overridden with a custom command using this option (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-6-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). Passing an empty string as the &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; makes the install step do nothing.</source>
          <target state="translated">외부 프로젝트의 자체 설치 단계는 기본 프로젝트 &lt;em&gt;빌드&lt;/em&gt; 의 일부로 호출됩니다 . 외부 프로젝트의 빌드 단계 이후에 수행되며 외부 프로젝트의 테스트 단계 이전 또는 이후에 수행 될 수 있습니다 ( 아래 &lt;code&gt;TEST_BEFORE_INSTALL&lt;/code&gt; 옵션 참조). 외부 프로젝트의 설치 규칙은 기본 프로젝트의 설치 규칙의 일부가 아니므로 외부 프로젝트의 항목을 기본 빌드의 일부로 설치해야하는 경우 기본 빌드에서 추가 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 으로 지정해야 합니다. 기본 설치 단계 는 외부 프로젝트 의 &lt;code&gt;install&lt;/code&gt; 대상을 빌드 하지만이 옵션을 사용하여 사용자 정의 명령으로 대체 할 수 있습니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-6-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 빈 문자열을 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 는 설치 단계가 아무 것도하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="eb35f2b26b7caf5d3264e707feaaf05a078b1079" translate="yes" xml:space="preserve">
          <source>The external project's own install step is invoked as part of the main project's &lt;em&gt;build&lt;/em&gt;. It is done after the external project's build step and may be before or after the external project's test step (see the &lt;code&gt;TEST_BEFORE_INSTALL&lt;/code&gt; option below). The external project's install rules are not part of the main project's install rules, so if anything from the external project should be installed as part of the main build, these need to be specified in the main build as additional &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; commands. The default install step builds the &lt;code&gt;install&lt;/code&gt; target of the external project, but this can be overridden with a custom command using this option (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-6-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). Passing an empty string as the &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; makes the install step do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d79013701b2af46cc384214309f6f04feb69e5" translate="yes" xml:space="preserve">
          <source>The external toolchain for cross-compiling, if supported.</source>
          <target state="translated">지원되는 경우 크로스 컴파일을위한 외부 툴체인.</target>
        </trans-unit>
        <trans-unit id="29334c937856e1acf5ad5dd3f7ff1bd761dcc263" translate="yes" xml:space="preserve">
          <source>The extra generator used to build the project. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로젝트를 빌드하는 데 사용 된 추가 생성기 &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38f71449aae8ecc35b9768f54f3391aeb545f0f3" translate="yes" xml:space="preserve">
          <source>The fatal error is emitted before the installation of the offending file takes place. Some CPack generators, like &lt;code&gt;NSIS&lt;/code&gt;, enforce this internally. This variable triggers the definition of &lt;a href=&quot;cmake_error_on_absolute_install_destination#variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot; id=&quot;index-0-variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot;&gt;&lt;code&gt;CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&lt;/code&gt;&lt;/a&gt; when CPack runs.</source>
          <target state="translated">문제가있는 파일을 설치하기 전에 치명적인 오류가 발생합니다. &lt;code&gt;NSIS&lt;/code&gt; 와 같은 일부 CPack 생성기는 이를 내부적으로 시행합니다. 이 변수는 &lt;a href=&quot;cmake_error_on_absolute_install_destination#variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot; id=&quot;index-0-variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot;&gt; &lt;code&gt;CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&lt;/code&gt; &lt;/a&gt; 이 실행될 때 CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION 의 정의를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="527af01fccaf230d8c8c65ff8e4b497738c28589" translate="yes" xml:space="preserve">
          <source>The fatal error is emitted before the installation of the offending file takes place. This variable is used by CMake-generated &lt;code&gt;cmake_install.cmake&lt;/code&gt; scripts. If one sets this variable to &lt;code&gt;ON&lt;/code&gt; while running the script, it may get fatal error messages from the script.</source>
          <target state="translated">문제가있는 파일을 설치하기 전에 치명적인 오류가 발생합니다. 이 변수는 CMake 생성 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 스크립트에서 사용합니다. 스크립트를 실행하는 동안 이 변수를 &lt;code&gt;ON&lt;/code&gt; 으로 설정 하면 스크립트에서 치명적인 오류 메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05db1221ed36f3633f376892c35bea3c1839607a" translate="yes" xml:space="preserve">
          <source>The features and user interfaces described in this manual are available for all CMake-based build systems by virtue of providing CMake files.</source>
          <target state="translated">이 설명서에 설명 된 기능과 사용자 인터페이스는 CMake 파일 제공을 통해 모든 CMake 기반 빌드 시스템에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17987e983e9cb573789d9234932f3d64d06bbaff" translate="yes" xml:space="preserve">
          <source>The features known to this version of CMake are listed below.</source>
          <target state="translated">이 버전의 CMake에 알려진 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75fd211f9c9f73124ac9f362f5cb3df7f4f54aeb" translate="yes" xml:space="preserve">
          <source>The features known to this version of CMake are:</source>
          <target state="translated">이 CMake 버전에 알려진 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6ae763a9b48bb1cd5c6443c5c73badf44c61185e" translate="yes" xml:space="preserve">
          <source>The features listed here may be used with the &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-0-command:target_compile_features&quot;&gt;&lt;code&gt;target_compile_features()&lt;/code&gt;&lt;/a&gt; command. See the &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt;&lt;code&gt;cmake-compile-features(7)&lt;/code&gt;&lt;/a&gt; manual for information on compile features and a list of supported compilers.</source>
          <target state="translated">여기에 나열된 기능은 &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-0-command:target_compile_features&quot;&gt; &lt;code&gt;target_compile_features()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 사용할 수 있습니다 . 컴파일 기능 및 지원되는 컴파일러 목록에 대한 정보 는 &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt; &lt;code&gt;cmake-compile-features(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="821fccea7b3508458b393643ca5fcaeb0e2fdb93" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the C compiler. If the feature is available with the C compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">이 전역 속성에 나열된 기능은 C 컴파일러에서 사용할 수있는 것으로 알려져 있습니다. C 컴파일러에서 기능을 사용할 수 있으면 &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 변수에 나열됩니다 .</target>
        </trans-unit>
        <trans-unit id="87f2fa253a023446d07e984a34fdb2488d11ddc4" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the C++ compiler. If the feature is available with the C++ compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">이 전역 속성에 나열된 기능은 C ++ 컴파일러에서 사용할 수있는 것으로 알려져 있습니다. C ++ 컴파일러에서 기능을 사용할 수 있으면 &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 변수에 나열됩니다 .</target>
        </trans-unit>
        <trans-unit id="c33391efbf67240539e984bd307706ae44c6e8de" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the CUDA compiler. If the feature is available with the C++ compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">이 전역 속성에 나열된 기능은 CUDA 컴파일러에서 사용할 수있는 것으로 알려져있을 수 있습니다. C ++ 컴파일러에서 기능을 사용할 수있는 경우 &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 변수에 나열됩니다 .</target>
        </trans-unit>
        <trans-unit id="86a7ad53a740d4b7a65b12dcf680cdc9cebf9830" translate="yes" xml:space="preserve">
          <source>The file created by this command is specific to the build tree and should never be installed. See the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command to export targets from an installation tree.</source>
          <target state="translated">이 명령으로 작성된 파일은 빌드 트리에 따라 다르므로 절대 설치해서는 안됩니다. 설치 트리에서 대상을 내보내 려면 &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f30adfe1abbd591206250e85af1d75dbd0a27c3f" translate="yes" xml:space="preserve">
          <source>The file extension is built into the name of the target because another file with the same name but a different extension may exist. However, build-targets without the file extension are also provided.</source>
          <target state="translated">이름은 같지만 확장자가 다른 다른 파일이 존재할 수 있으므로 파일 확장자는 대상의 이름에 빌드됩니다. 그러나 파일 확장자가없는 빌드 대상도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="dddd6003fcdeafb6b43057e710d92ba57728d9b0" translate="yes" xml:space="preserve">
          <source>The file extension used to name a &lt;a href=&quot;bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; target on the macOS and iOS.</source>
          <target state="translated">macOS 및 iOS 에서 &lt;a href=&quot;bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt; 대상의 이름을 지정하는 데 사용되는 파일 확장자 입니다.</target>
        </trans-unit>
        <trans-unit id="f4993cbb8a00d41faa56d40fce2929e47a32fdf9" translate="yes" xml:space="preserve">
          <source>The file name found in the first match group is searched for</source>
          <target state="translated">첫 번째 일치 그룹에서 찾은 파일 이름이 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="40ae6525329debb7c88718ac62d1d26acda643b8" translate="yes" xml:space="preserve">
          <source>The file named will be attached to the standard input of the first process, standard output of the last process, or standard error of all processes, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5081c41045e4133663e490649981dd15ed49c209" translate="yes" xml:space="preserve">
          <source>The file named will be attached to the standard input of the first process, standard output of the last process, or standard error of all processes, respectively. If the same file is named for both output and error then it will be used for both.</source>
          <target state="translated">이름이 지정된 파일은 첫 번째 프로세스의 표준 입력, 마지막 프로세스의 표준 출력 또는 모든 프로세스의 표준 오류에 각각 첨부됩니다. 출력과 오류 모두에 동일한 파일의 이름이 지정된 경우 둘 다에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4d79fa8813072c0b87b589ddfcb3a0cfff1ee705" translate="yes" xml:space="preserve">
          <source>The file-based API uses a &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/&lt;/code&gt; directory at the top of a build tree. The API is versioned to support changes to the layout of files within the API directory. API file layout versioning is orthogonal to the versioning of &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; used in replies. This version of CMake supports only one API version, &lt;a href=&quot;#api-v1&quot;&gt;API v1&lt;/a&gt;.</source>
          <target state="translated">파일 기반 API는 빌드 트리 맨 위에 있는 &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/&lt;/code&gt; 디렉토리를 사용합니다. API는 API 디렉토리 내의 파일 레이아웃 변경을 지원하도록 버전이 지정되었습니다. API 파일 레이아웃 버전 관리는 응답에 사용 된 &lt;a href=&quot;#object-kinds&quot;&gt;객체 종류&lt;/a&gt; 의 버전 관리와 직교 합니다. 이 CMake 버전은 하나의 API 버전 인 &lt;a href=&quot;#api-v1&quot;&gt;API v1&lt;/a&gt; 만 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="77dacb59a8aec3a2b29cbba1368a751d388bded6" translate="yes" xml:space="preserve">
          <source>The files are a JSON document with an object as the root:</source>
          <target state="translated">파일은 객체가 루트 인 JSON 문서입니다.</target>
        </trans-unit>
        <trans-unit id="d2bbcd86cda99257a79ec483b6cda229f78fa69a" translate="yes" xml:space="preserve">
          <source>The files which should be installed. This is used by &lt;code&gt;install_jar()&lt;/code&gt;.</source>
          <target state="translated">설치해야 할 파일 &lt;code&gt;install_jar()&lt;/code&gt; 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fe1035d9a63f05364a648fc61458f726fbabaadb" translate="yes" xml:space="preserve">
          <source>The final &lt;code&gt;\&lt;/code&gt; on any line ending in an odd number of backslashes is treated as a line continuation and ignored along with the immediately following newline character. For example:</source>
          <target state="translated">홀수 백 슬래시로 끝나는 모든 줄 의 마지막 &lt;code&gt;\&lt;/code&gt; 는 줄 연속으로 취급되며 바로 다음 줄 바꿈 문자와 함께 무시됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7d8c8d234e4e62b21cb309a7a53e0b10b70da66c" translate="yes" xml:space="preserve">
          <source>The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of it dependencies. The set of options is de-duplicated to avoid repetition. While beneficial for individual options, the de-duplication step can break up option groups. For example, &lt;code&gt;-D A -D B&lt;/code&gt; becomes &lt;code&gt;-D A B&lt;/code&gt;. One may specify a group of options using shell-like quoting along with a &lt;code&gt;SHELL:&lt;/code&gt; prefix. The &lt;code&gt;SHELL:&lt;/code&gt; prefix is dropped and the rest of the option string is parsed using the &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt;&lt;code&gt;separate_arguments()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode. For example, &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; becomes &lt;code&gt;-D A -D B&lt;/code&gt;.</source>
          <target state="translated">대상에 사용되는 최종 컴파일 또는 링크 옵션 세트는 현재 대상의 옵션과 대상의 사용 요구 사항을 누적하여 구성됩니다. 반복되지 않도록 옵션 세트는 중복 제거됩니다. 중복 제거 단계는 개별 옵션에 유리하지만 옵션 그룹을 분리 할 수 ​​있습니다. 예를 들어, &lt;code&gt;-D A -D B&lt;/code&gt; 는 &lt;code&gt;-D A B&lt;/code&gt; 가 됩니다 . 쉘과 같은 따옴표를 &lt;code&gt;SHELL:&lt;/code&gt; 접두사 와 함께 사용하여 옵션 그룹을 지정할 수 있습니다 . &lt;code&gt;SHELL:&lt;/code&gt; 접두사는 삭제하고 옵션 문자열의 나머지는 사용하여 구문 분석됩니다 &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt; &lt;code&gt;separate_arguments()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;UNIX_COMMAND&lt;/code&gt; 의 모드. 예를 들어 &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; 는 &lt;code&gt;-D A -D B&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="f6c61c98dcd998654d5086d0f02a08ff29689e89" translate="yes" xml:space="preserve">
          <source>The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of its dependencies. The set of options is de-duplicated to avoid repetition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750c48f72ae0d97dcee0421cf8f3abeec296127d" translate="yes" xml:space="preserve">
          <source>The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of its dependencies. The set of options is de-duplicated to avoid repetition. While beneficial for individual options, the de-duplication step can break up option groups. For example, &lt;code&gt;-D A -D B&lt;/code&gt; becomes &lt;code&gt;-D A B&lt;/code&gt;. One may specify a group of options using shell-like quoting along with a &lt;code&gt;SHELL:&lt;/code&gt; prefix. The &lt;code&gt;SHELL:&lt;/code&gt; prefix is dropped, and the rest of the option string is parsed using the &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt;&lt;code&gt;separate_arguments()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode. For example, &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; becomes &lt;code&gt;-D A -D B&lt;/code&gt;.</source>
          <target state="translated">대상에 사용되는 최종 컴파일 또는 링크 옵션 집합은 현재 대상의 옵션과 해당 종속성의 사용 요구 사항을 누적하여 구성됩니다. 옵션 세트는 반복을 피하기 위해 중복 제거됩니다. 개별 옵션에는 유용하지만 중복 제거 단계는 옵션 그룹을 분리 할 수 ​​있습니다. 예를 들어 &lt;code&gt;-D A -D B&lt;/code&gt; 는 &lt;code&gt;-D A B&lt;/code&gt; 가 됩니다 . &lt;code&gt;SHELL:&lt;/code&gt; 접두사 와 함께 쉘과 같은 인용을 사용하여 옵션 그룹을 지정할 수 있습니다 . &lt;code&gt;SHELL:&lt;/code&gt; 접두사는 삭제되고 옵션 문자열의 나머지는 사용하여 구문 분석됩니다 &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt; &lt;code&gt;separate_arguments()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;UNIX_COMMAND&lt;/code&gt; 의 모드. 예를 들어, &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; 는 &lt;code&gt;-D A -D B&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="c1887c71d5f162f003d8fdbf161bbc1c757f360a" translate="yes" xml:space="preserve">
          <source>The final set of include directories listed in one variable for use by client code. This should not be a cache entry (note that this also means this variable should not be used as the result variable of a &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; command - see &lt;code&gt;Xxx_INCLUDE_DIR&lt;/code&gt; below for that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14b124c683356bfd85eb5cf93a9fefd7f73657b" translate="yes" xml:space="preserve">
          <source>The final set of include directories listed in one variable for use by client code. This should not be a cache entry.</source>
          <target state="translated">클라이언트 코드에서 사용하기 위해 하나의 변수에 나열된 포함 디렉토리의 마지막 세트. 캐시 항목이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="6a8592e29b381cf1a3977856a9ab4e5f28e6a1c6" translate="yes" xml:space="preserve">
          <source>The find module implementation may begin below the documentation block. Now the actual libraries and so on have to be found. The code here will obviously vary from module to module (dealing with that, after all, is the point of find modules), but there tends to be a common pattern for libraries.</source>
          <target state="translated">찾기 모듈 구현은 문서 블록 아래에서 시작할 수 있습니다. 이제 실제 라이브러리 등을 찾아야합니다. 여기의 코드는 모듈마다 분명히 다르지만 (결국 찾기 모듈의 핵심입니다) 라이브러리에는 공통적 인 패턴이 있습니다.</target>
        </trans-unit>
        <trans-unit id="99fe84daf7c67a9a0d33395778d2f3200eb97793" translate="yes" xml:space="preserve">
          <source>The first argument (&lt;code&gt;TEST_VARIABLE&lt;/code&gt;) is the name of the variable to be tested, if that variable is false nothing else is done. If &lt;code&gt;TEST_VARIABLE&lt;/code&gt; is true, then the next argument (&lt;code&gt;RESULT_VARIABLE&lt;/code&gt;) is a variable that is set to true if all the required variables are set. The rest of the arguments are variables that must be true or not set to &lt;code&gt;NOTFOUND&lt;/code&gt; to avoid an error. If any are not true, an error is reported.</source>
          <target state="translated">첫 번째 인수 ( &lt;code&gt;TEST_VARIABLE&lt;/code&gt; )는 테스트 할 변수의 이름입니다. 해당 변수가 false 인 경우 다른 작업은 수행되지 않습니다. 경우 &lt;code&gt;TEST_VARIABLE&lt;/code&gt; 는 사실이다, 그 다음 인수 ( &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; 는 ) 필요한 모든 변수가 설정된 경우 true로 설정되어있는 변수입니다. 나머지 인수는 오류를 피하기 위해 true이거나 &lt;code&gt;NOTFOUND&lt;/code&gt; 로 설정되어서는 안되는 변수입니다 . 그렇지 않은 경우 오류가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="8fb5eba87d5d3604bc82922ac7730f4af497abc1" translate="yes" xml:space="preserve">
          <source>The first argument determines the scope in which the property is set. It must be one of the following:</source>
          <target state="translated">첫 번째 인수는 속성이 설정되는 범위를 결정합니다. 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d57df7e69cbb25bed3a0fb3a3dd7147d14fc9d98" translate="yes" xml:space="preserve">
          <source>The first argument is the file name, the rest of the arguments are messages to write. If the argument &lt;code&gt;APPEND&lt;/code&gt; is specified, then the message will be appended.</source>
          <target state="translated">첫 번째 인수는 파일 이름이고 나머지 인수는 작성할 메시지입니다. &lt;code&gt;APPEND&lt;/code&gt; 인수 가 지정되면 메시지가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="437be15c3f07df6e99084228b2738011a1a63786" translate="yes" xml:space="preserve">
          <source>The first argument specifies the variable in which to store the result. The second argument determines the scope from which to get the property. It must be one of the following:</source>
          <target state="translated">첫 번째 인수는 결과를 저장할 변수를 지정합니다. 두 번째 인수는 속성을 가져올 범위를 결정합니다. 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c007a23ab66fdd9230b5250d37ba94de6ee80635" translate="yes" xml:space="preserve">
          <source>The first feature we will add is to provide our executable and project with a version number. While we could do this exclusively in the source code, using &lt;code&gt;CMakeLists.txt&lt;/code&gt; provides more flexibility.</source>
          <target state="translated">추가 할 첫 번째 기능은 실행 파일과 프로젝트에 버전 번호를 제공하는 것입니다. 소스 코드에서만이 작업을 수행 할 수 있지만 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 를 사용 하면 더 많은 유연성이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="396e0b065181819225bbe8ba53e119117fb8baca" translate="yes" xml:space="preserve">
          <source>The first item in &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; is assumed to be an executable and will be searched in the system search path or left as a full path. If not found, &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; will be empty. Otherwise, &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; is a list of 2 elements:</source>
          <target state="translated">&lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 의 첫 번째 항목 은 실행 파일로 간주되며 시스템 검색 경로에서 검색되거나 전체 경로로 남습니다. 찾을 수없는 경우 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 는 비어 있습니다. 그렇지 않으면 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 는 다음 두 요소의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="470ea5d172410d9ab7808cfd817637f227d8a5ee" translate="yes" xml:space="preserve">
          <source>The first line of the file contains only the string &lt;code&gt;@PACKAGE_INIT@&lt;/code&gt;. This expands when the file is configured and allows the use of relocatable paths prefixed with &lt;code&gt;PACKAGE_&lt;/code&gt;. It also provides the &lt;code&gt;set_and_check()&lt;/code&gt; and &lt;code&gt;check_required_components()&lt;/code&gt; macros.</source>
          <target state="translated">파일의 첫 번째 줄에는 &lt;code&gt;@PACKAGE_INIT@&lt;/code&gt; 문자열 만 포함됩니다 . 이것은 파일이 구성 될 때 확장되고 &lt;code&gt;PACKAGE_&lt;/code&gt; 접두사가 붙은 재배치 가능한 경로의 사용을 허용합니다 . 또한 &lt;code&gt;set_and_check()&lt;/code&gt; 및 &lt;code&gt;check_required_components()&lt;/code&gt; 매크로를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b55932d01770dd21962fa6b91f46a7a44a87de37" translate="yes" xml:space="preserve">
          <source>The first request that the client may send to the server is of type &amp;ldquo;handshake&amp;rdquo;.</source>
          <target state="translated">클라이언트가 서버로 전송할 수있는 첫 번째 요청은 &quot;핸드 셰이크&quot;유형입니다.</target>
        </trans-unit>
        <trans-unit id="1c04f980f20a6a0e448497eeb4a48feaf2197992" translate="yes" xml:space="preserve">
          <source>The first signature is for adding a custom command to produce an output:</source>
          <target state="translated">첫 번째 서명은 사용자 정의 명령을 추가하여 출력을 생성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="462d16c548a693bf8ebaef9d063f1c2590a80f5b" translate="yes" xml:space="preserve">
          <source>The first signature reads processes arguments passed in the &lt;code&gt;&amp;lt;args&amp;gt;...&lt;/code&gt;. This may be used in either a &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">첫 번째 서명은 &lt;code&gt;&amp;lt;args&amp;gt;...&lt;/code&gt; 에 전달 된 인수를 읽습니다 . 이것은 &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 에서 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6368a70965157d515473e249ad8f04c55620abd2" translate="yes" xml:space="preserve">
          <source>The first step is to update our &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; commands to not only specify a &lt;code&gt;DESTINATION&lt;/code&gt; but also an &lt;code&gt;EXPORT&lt;/code&gt;. The &lt;code&gt;EXPORT&lt;/code&gt; keyword generates and installs a CMake file containing code to import all targets listed in the install command from the installation tree. So let&amp;rsquo;s go ahead and explicitly &lt;code&gt;EXPORT&lt;/code&gt; the MathFunctions library by updating the &lt;code&gt;install&lt;/code&gt; command in &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; to look like:</source>
          <target state="translated">첫 번째 단계는 &lt;code&gt;DESTINATION&lt;/code&gt; 뿐만 아니라 &lt;code&gt;EXPORT&lt;/code&gt; 도 지정하도록 &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 명령 을 업데이트하는 것 입니다. &lt;code&gt;EXPORT&lt;/code&gt; 키워드를 생성하고 설치 트리에서 설치 명령에 나열된 모든 목표를 가져올 코드를 포함하는 CMake 파일을 설치합니다. 그래서 앞서 명시 적으로 가자 &lt;code&gt;EXPORT&lt;/code&gt; 업데이트하여 MathFunctions 라이브러리를 &lt;code&gt;install&lt;/code&gt; 에 명령 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 같이하기 :</target>
        </trans-unit>
        <trans-unit id="5a01287a9f8221a2271c8eea56ec8c5afdf0fa98" translate="yes" xml:space="preserve">
          <source>The first step is to update our &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; commands to not only specify a &lt;code&gt;DESTINATION&lt;/code&gt; but also an &lt;code&gt;EXPORT&lt;/code&gt;. The &lt;code&gt;EXPORT&lt;/code&gt; keyword generates and installs a CMake file containing code to import all targets listed in the install command from the installation tree. So let's go ahead and explicitly &lt;code&gt;EXPORT&lt;/code&gt; the MathFunctions library by updating the &lt;code&gt;install&lt;/code&gt; command in &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; to look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6ac0a45b21650aeb326f5b06b90d63fc307b4b" translate="yes" xml:space="preserve">
          <source>The first step is to update the starting section of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; to look like:</source>
          <target state="translated">첫 번째 단계는 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 시작 섹션 을 다음과 같이 업데이트하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="71af8c1f8f4c188a7b91e179a878975cb6e364fc" translate="yes" xml:space="preserve">
          <source>The first test simply verifies that the application runs, does not segfault or otherwise crash, and has a zero return value. This is the basic form of a CTest test.</source>
          <target state="translated">첫 번째 테스트는 단순히 응용 프로그램이 실행되고 segfault 또는 기타 충돌이 발생하지 않으며 반환 값이 0인지 확인합니다. 이것은 CTest 테스트의 기본 형식입니다.</target>
        </trans-unit>
        <trans-unit id="3f6ebc0311cb48b12659624e8cc7964609da9210" translate="yes" xml:space="preserve">
          <source>The flag to be used to add a library search path to a compiler.</source>
          <target state="translated">라이브러리 검색 경로를 컴파일러에 추가하는 데 사용되는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="d879b88c0a74d2478e89e60362e1044a8b7f6c5a" translate="yes" xml:space="preserve">
          <source>The flag will be used before a library file path is given to the linker. This is needed only on very few platforms.</source>
          <target state="translated">라이브러리 파일 경로가 링커에 제공되기 전에 플래그가 사용됩니다. 이것은 매우 적은 플랫폼에서만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b8e879feb0048be3230134b41971858823311192" translate="yes" xml:space="preserve">
          <source>The flag will be used to add a &lt;code&gt;.def&lt;/code&gt; file when creating a dll on Windows; this is only defined on Windows.</source>
          <target state="translated">이 플래그는 Windows에서 dll을 작성할 때 &lt;code&gt;.def&lt;/code&gt; 파일 을 추가하는 데 사용됩니다 . 이것은 Windows에서만 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="eb81e80f1b480e8eacc274efc517c292004fde26" translate="yes" xml:space="preserve">
          <source>The flag will be used to specify a library directory to the compiler. On most compilers this is &lt;code&gt;-L&lt;/code&gt;.</source>
          <target state="translated">플래그는 컴파일러에 라이브러리 디렉토리를 지정하는 데 사용됩니다. 대부분의 컴파일러에서 이것은 &lt;code&gt;-L&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac47f8473a635847737682145aafc18a4f64e62d" translate="yes" xml:space="preserve">
          <source>The flag will be used to specify a library to link to an executable. On most compilers this is &lt;code&gt;-l&lt;/code&gt;.</source>
          <target state="translated">플래그는 실행 파일에 링크 할 라이브러리를 지정하는 데 사용됩니다. 대부분의 컴파일러에서 이것은 &lt;code&gt;-l&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="27e5d253ec168df2a1d59a493891c587ae6bc31e" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are also defined:</source>
          <target state="translated">다음과 같은 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상도 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a39fd8f589dbd7b8167901d600e27ba5972244b4" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets may be defined:</source>
          <target state="translated">다음 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27dcabb615138b975704367a4d2fbc1e3da31132" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;cmake -E&lt;/code&gt; commands are available only on Windows:</source>
          <target state="translated">다음 &lt;code&gt;cmake -E&lt;/code&gt; 명령은 Windows에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b4733c04f7ff100352817453c2353db9d0e905a" translate="yes" xml:space="preserve">
          <source>The following CPack variables are specific to source packages, and will not affect binary packages:</source>
          <target state="translated">다음 CPack 변수는 소스 패키지에만 적용되며 바이너리 패키지에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4548898349f3edeefd7d5a96d5dfca9cf167329a" translate="yes" xml:space="preserve">
          <source>The following are set after the configuration is done for both windows and unix style:</source>
          <target state="translated">다음은 windows 및 unix 스타일 모두에 대한 구성이 완료된 후에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ab4373d298b2f50bc8c21319e198bbff03ff82ff" translate="yes" xml:space="preserve">
          <source>The following arguments specify filters for including or excluding libraries to be resolved. See below for a full description of how they work.</source>
          <target state="translated">다음 인수는 해결할 라이브러리를 포함하거나 제외하기위한 필터를 지정합니다. 작동 방식에 대한 자세한 설명은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="327d25567d388ab1f031b487dd318997317991c4" translate="yes" xml:space="preserve">
          <source>The following cache variable will be set:</source>
          <target state="translated">다음과 같은 캐시 변수가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="319b4c74978db6951bf33251c05778bd355efc77" translate="yes" xml:space="preserve">
          <source>The following cache variables are also available to set or use:</source>
          <target state="translated">다음 캐시 변수도 설정하거나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85a7e43e228cd8436b60833287dd1038d9e5518d" translate="yes" xml:space="preserve">
          <source>The following cache variables may also be set:</source>
          <target state="translated">다음과 같은 캐시 변수도 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac76b281ad06b9b40a44990ddac4b63adbeaee47" translate="yes" xml:space="preserve">
          <source>The following characters have special meaning in regular expressions:</source>
          <target state="translated">다음 문자는 정규식에서 특별한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="c1aa2988f8d9209e0d3c4d585ec27011860ffe6f" translate="yes" xml:space="preserve">
          <source>The following combinations, in that order, will be used: &lt;code&gt;mu&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt;, &lt;code&gt;dmu&lt;/code&gt;, &lt;code&gt;dm&lt;/code&gt;, &lt;code&gt;du&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">순서대로 &lt;code&gt;mu&lt;/code&gt; , &lt;code&gt;m&lt;/code&gt; , &lt;code&gt;u&lt;/code&gt; , &lt;code&gt;&amp;lt;empty&amp;gt;&lt;/code&gt; , &lt;code&gt;dmu&lt;/code&gt; , &lt;code&gt;dm&lt;/code&gt; , &lt;code&gt;du&lt;/code&gt; 및 &lt;code&gt;d&lt;/code&gt; 조합이 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="11a2c8e2f5bd2d0bec1c3263e92b87bce1addd08" translate="yes" xml:space="preserve">
          <source>The following components are supported:</source>
          <target state="translated">다음 구성 요소가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7b89d6426d120e9d737dbd6be9cc41a0b5d4bd44" translate="yes" xml:space="preserve">
          <source>The following conventions are used in this command's documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff366673b34a10827273c589c1c62268ac780e6a" translate="yes" xml:space="preserve">
          <source>The following environment variables are also respected for finding the OSG and it&amp;rsquo;s various components. &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; can also be used for this (see &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; CMake documentation).</source>
          <target state="translated">다음 환경 변수는 OSG를 찾는 데 사용되며 다양한 구성 요소입니다. &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 를&lt;/a&gt; 사용할 수도 있습니다 ( &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; CMake 설명서 참조).</target>
        </trans-unit>
        <trans-unit id="db039851d807d48ba9021f29914b8a85489fbf36" translate="yes" xml:space="preserve">
          <source>The following environment variables are also respected for finding the OSG and it's various components. &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; can also be used for this (see &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; CMake documentation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7c6bcc427e8383ab274a42eaaab00aabeb3973" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;LISTS&lt;/code&gt; option is processed:</source>
          <target state="translated">다음 예제는 &lt;code&gt;LISTS&lt;/code&gt; 옵션이 처리되는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="cc7fd1c7bcd656380c5588ad3aa86ed07c5a7c8f" translate="yes" xml:space="preserve">
          <source>The following example shows how to download and build a hypothetical project called &lt;em&gt;FooBar&lt;/em&gt; from github:</source>
          <target state="translated">다음 예제는 github에서 &lt;em&gt;FooBar&lt;/em&gt; 라는 가상 프로젝트를 다운로드하고 빌드하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8fe82870cb5728a9de5b53598b36942174432d6e" translate="yes" xml:space="preserve">
          <source>The following exceptions apply to the above interpretation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1e69acb46c51cff9c75a3db4e11d049b73d2d1" translate="yes" xml:space="preserve">
          <source>The following features generate corresponding symbol defines and if they are available as &lt;code&gt;BARE_FEATURES&lt;/code&gt;:</source>
          <target state="translated">다음 기능은 해당 기호 정의를 생성하며 &lt;code&gt;BARE_FEATURES&lt;/code&gt; 로 사용 가능한 경우 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="d2fb5a93f718f52d418dc1a0ba5dc62f19007a48" translate="yes" xml:space="preserve">
          <source>The following flags combinations will be appended, in that order, to the artifact names: &lt;code&gt;dmu&lt;/code&gt;, &lt;code&gt;dm&lt;/code&gt;, &lt;code&gt;du&lt;/code&gt;, and &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">다음 플래그 조합이 순서대로 이슈 이름에 추가됩니다 : &lt;code&gt;dmu&lt;/code&gt; , &lt;code&gt;dm&lt;/code&gt; , &lt;code&gt;du&lt;/code&gt; , &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6ba6786a53eeebe70fe4a0f7e0747476dc0264c" translate="yes" xml:space="preserve">
          <source>The following forms of the &lt;code id=&quot;get&quot;&gt;GET&lt;/code&gt; subcommand each retrieve a different component or group of components from a path. See &lt;a href=&quot;#path-structure-and-terminology&quot;&gt;Path Structure And Terminology&lt;/a&gt; for the meaning of each path component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af87b0c885535a5fdd9b6e360cc23313054eeaeb" translate="yes" xml:space="preserve">
          <source>The following functions are provided by this module:</source>
          <target state="translated">이 모듈은 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="33822d2ea5ac830e8b12ddc2646800c04544db27" translate="yes" xml:space="preserve">
          <source>The following hash algorithms are supported:</source>
          <target state="translated">다음과 같은 해시 알고리즘이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="6ba646baa7466e79f29be4c2bd24d116085ac4f4" translate="yes" xml:space="preserve">
          <source>The following import target is created</source>
          <target state="translated">다음과 같은 가져 오기 대상이 생성됩니다</target>
        </trans-unit>
        <trans-unit id="ce9c1221808914118a7fb3f5d11863ffe58749ff" translate="yes" xml:space="preserve">
          <source>The following macros are provided for compatibility with previous CMake versions:</source>
          <target state="translated">이전 CMake 버전과의 호환성을 위해 다음 매크로가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f634bd37fa997a6ba088e6af0daf7ffc7f79695d" translate="yes" xml:space="preserve">
          <source>The following meta features indicate general support for the associated language standard. It reflects the language support claimed by the compiler, but it does not necessarily imply complete conformance to that standard.</source>
          <target state="translated">다음 메타 기능은 관련 언어 표준에 대한 일반적인 지원을 나타냅니다. 컴파일러가 요구하는 언어 지원을 반영하지만 반드시 해당 표준에 대한 완전한 준수를 의미하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="026081cea808d1980cc3f05bccf2799924b3f1ab" translate="yes" xml:space="preserve">
          <source>The following names should not usually be used in &lt;code&gt;CMakeLists.txt&lt;/code&gt; files. They are intended for use by Find modules to specify and cache the locations of specific files or directories. Users are typically able to set and edit these variables to control the behavior of Find modules (like entering the path to a library manually):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a71647e556425e40edfbf08e018290c1129b943" translate="yes" xml:space="preserve">
          <source>The following names should not usually be used in CMakeLists.txt files, but are typically cache variables for users to edit and control the behaviour of find modules (like entering the path to a library manually)</source>
          <target state="translated">다음 이름은 일반적으로 CMakeLists.txt 파일에서 사용되지 않아야하지만 일반적으로 사용자가 찾기 모듈의 동작을 수동으로 라이브러리 경로를 입력하는 등의 편집 및 제어를위한 캐시 변수입니다.</target>
        </trans-unit>
        <trans-unit id="626346361168a6be6f519db1fc622d19c97c67b3" translate="yes" xml:space="preserve">
          <source>The following resources are available to get help using CMake:</source>
          <target state="translated">CMake 사용에 대한 도움을 얻을 수있는 다음 자료가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c9c6074a1987864439ac94999d66ad6ca16042e" translate="yes" xml:space="preserve">
          <source>The following settings are defined</source>
          <target state="translated">다음과 같은 설정이 정의됩니다</target>
        </trans-unit>
        <trans-unit id="f79d633c8959dce75f4438afbe0c918f9ff0ba2b" translate="yes" xml:space="preserve">
          <source>The following settings should not be used in general.</source>
          <target state="translated">다음 설정은 일반적으로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="8447973b80aa1708bf7500ec7c85eeab2cc3d1dd" translate="yes" xml:space="preserve">
          <source>The following shows a typical example of declaring content details:</source>
          <target state="translated">다음은 컨텐츠 세부 사항을 선언하는 일반적인 예입니다.</target>
        </trans-unit>
        <trans-unit id="8a1d3dc0b4e124b2cbf2467ccaae5a0ee08398e3" translate="yes" xml:space="preserve">
          <source>The following shows one example of how these two variables can be used to refer to an object file whose location depends on both the SDK and the architecture:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e9f7ca084e8ce25a2ecf4e16080578cc0bef73" translate="yes" xml:space="preserve">
          <source>The following single value Doxygen options will be quoted automatically if they contain at least one space:</source>
          <target state="translated">다음 단일 값 Doxygen 옵션은 하나 이상의 공백을 포함하면 자동으로 인용됩니다.</target>
        </trans-unit>
        <trans-unit id="b135b37f8ef7289c9c0a82ebf5c2d0f1274dd4dd" translate="yes" xml:space="preserve">
          <source>The following string-valued generator expressions are available:</source>
          <target state="translated">다음과 같은 문자열 값 생성기 표현식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d0c687f34292697391261a456dd61db2b0fffa4" translate="yes" xml:space="preserve">
          <source>The following syntax applies to the &lt;code&gt;condition&lt;/code&gt; argument of the &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elseif&lt;/code&gt; and &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt; clauses.</source>
          <target state="translated">다음 구문 은 &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;elseif&lt;/code&gt; 및 &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt; &lt;code&gt;while()&lt;/code&gt; &lt;/a&gt; 절의 &lt;code&gt;condition&lt;/code&gt; 인수에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f22c7024babde5966495649dabdbfd19e22728aa" translate="yes" xml:space="preserve">
          <source>The following table shows the target types with their associated variables and built-in defaults that apply when no destination is given:</source>
          <target state="translated">다음 표는 대상이 지정되지 않은 경우 적용되는 관련 변수 및 기본 제공 기본값이있는 대상 유형을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b304c4198d8ab217d8a53fb4e305e550b603fb1e" translate="yes" xml:space="preserve">
          <source>The following target properties are output properties and can be used to get information about support files generated by &lt;code&gt;SWIG&lt;/code&gt; interface compilation.</source>
          <target state="translated">다음 대상 특성은 출력 특성이며 &lt;code&gt;SWIG&lt;/code&gt; 인터페이스 컴파일로 생성 된 지원 파일에 대한 정보를 얻는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b7948d70e1e8f940b3f93c0c2143cb58ce7a234" translate="yes" xml:space="preserve">
          <source>The following target properties may be set to specify content to be configured into the file:</source>
          <target state="translated">파일에 구성 할 내용을 지정하기 위해 다음과 같은 대상 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a20e9ed564901f9059a9e8941f72203bbf43d89" translate="yes" xml:space="preserve">
          <source>The following target properties overwrite the default of the corresponding settings on the &quot;Diagnostic&quot; tab for each schema file. Each of those is initialized by the respective &lt;code&gt;CMAKE_&lt;/code&gt; variable at target creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6af0f6c2884381de847cfa5cd228b6961243e3" translate="yes" xml:space="preserve">
          <source>The following target properties overwrite the default of the corresponding settings on the &amp;ldquo;Diagnostic&amp;rdquo; tab for each schema file. Each of those is initialized by the respective &lt;code&gt;CMAKE_&lt;/code&gt; variable at target creation time.</source>
          <target state="translated">다음 대상 속성은 각 스키마 파일의&amp;ldquo;진단&amp;rdquo;탭에서 해당 설정의 기본값을 덮어 씁니다. 각각은 대상 작성시 해당 &lt;code&gt;CMAKE_&lt;/code&gt; 변수에 의해 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad3db2604798c00a5f8073dc508dbb5148d9a00b" translate="yes" xml:space="preserve">
          <source>The following target properties will be applied on the &quot;Info&quot;, &quot;Arguments&quot;, and &quot;Options&quot; tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73b0a838c512e73906fb91ce122aea4314e771e" translate="yes" xml:space="preserve">
          <source>The following target properties will be applied on the &amp;ldquo;Info&amp;rdquo; and &amp;ldquo;Arguments&amp;rdquo; tab:</source>
          <target state="translated">다음과 같은 대상 속성이 &quot;정보&quot;및 &quot;인수&quot;탭에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="a155249a670d17a23ed7384e8ba9ddb6eed9bac3" translate="yes" xml:space="preserve">
          <source>The following target properties will be applied on the &amp;ldquo;Info&amp;rdquo;, &amp;ldquo;Arguments&amp;rdquo;, and &amp;ldquo;Options&amp;rdquo; tab:</source>
          <target state="translated">&quot;정보&quot;, &quot;인수&quot;및 &quot;옵션&quot;탭에 다음 대상 속성이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="29849cc89d1502ac2c4f9607aac75b71d7aa3c20" translate="yes" xml:space="preserve">
          <source>The following target-based generator expressions that query for directory or file name components no longer add a dependency on the evaluated target.</source>
          <target state="translated">디렉터리 또는 파일 이름 구성 요소를 쿼리하는 다음 대상 기반 생성기 식은 더 이상 평가 대상에 대한 종속성을 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="03fc6a02c40e7b60505a045cf7bbc82f10cb63e8" translate="yes" xml:space="preserve">
          <source>The following user adjustable options are provided:</source>
          <target state="translated">다음과 같은 사용자 조정 옵션이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b71b319cf663993159fcec0552cc51be597a483e" translate="yes" xml:space="preserve">
          <source>The following values of &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; are special:</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 의 다음 값 은 특별합니다.</target>
        </trans-unit>
        <trans-unit id="66fa440d5b129df3a975d499ad8e4a6af97bb094" translate="yes" xml:space="preserve">
          <source>The following variable are provided for backward compatibility</source>
          <target state="translated">이전 버전과의 호환성을 위해 다음 변수가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="858c3fb8d045a3193d9882267ec509a8d5574431" translate="yes" xml:space="preserve">
          <source>The following variable are provided for backward compatibility:</source>
          <target state="translated">이전 버전과의 호환성을 위해 다음 변수가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="fe1e1150295844d9b2e62f831121f5be52870ccd" translate="yes" xml:space="preserve">
          <source>The following variable can be set to guide the search for HDF5 libraries and includes:</source>
          <target state="translated">다음 변수는 HDF5 라이브러리 검색을 안내하도록 설정할 수 있으며 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="99dc1b23de57217623c181a845cc732be395bb7c" translate="yes" xml:space="preserve">
          <source>The following variables affect the behavior of the macros in the script (in alphabetical order). Note that any of these flags can be changed multiple times in the same directory before calling &lt;code&gt;CUDA_ADD_EXECUTABLE&lt;/code&gt;, &lt;code&gt;CUDA_ADD_LIBRARY&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_PTX&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_FATBIN&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_CUBIN&lt;/code&gt; or &lt;code&gt;CUDA_WRAP_SRCS&lt;/code&gt;:</source>
          <target state="translated">다음 변수는 스크립트의 매크로 동작 (알파벳 순서)에 영향을줍니다. &lt;code&gt;CUDA_ADD_EXECUTABLE&lt;/code&gt; , &lt;code&gt;CUDA_ADD_LIBRARY&lt;/code&gt; , &lt;code&gt;CUDA_COMPILE&lt;/code&gt; , &lt;code&gt;CUDA_COMPILE_PTX&lt;/code&gt; , &lt;code&gt;CUDA_COMPILE_FATBIN&lt;/code&gt; , &lt;code&gt;CUDA_COMPILE_CUBIN&lt;/code&gt; 또는 &lt;code&gt;CUDA_WRAP_SRCS&lt;/code&gt; 를 호출하기 전에 이러한 플래그 중 하나를 동일한 디렉토리에서 여러 번 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0bf14e2a2280eabbd52ec0fad1322d3ebd3ccc1" translate="yes" xml:space="preserve">
          <source>The following variables affect the behavior of the macros in the script (in alphabetical order). Note that any of these flags can be changed multiple times in the same directory before calling &lt;code&gt;cuda_add_executable()&lt;/code&gt;, &lt;code&gt;cuda_add_library()&lt;/code&gt;, &lt;code&gt;cuda_compile()&lt;/code&gt;, &lt;code&gt;cuda_compile_ptx()&lt;/code&gt;, &lt;code&gt;cuda_compile_fatbin()&lt;/code&gt;, &lt;code&gt;cuda_compile_cubin()&lt;/code&gt; or &lt;code&gt;cuda_wrap_srcs()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793732c1661aac719d7adeaedf496e5c3b036a5a" translate="yes" xml:space="preserve">
          <source>The following variables are also provided for compatibility reasons, don&amp;rsquo;t use them in new code:</source>
          <target state="translated">다음 변수도 호환성을 위해 제공되므로 새 코드에서 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="7bce7f07ef0e7a6c6e109e21ecd85b1c0ebee705" translate="yes" xml:space="preserve">
          <source>The following variables are defined by this module:</source>
          <target state="translated">이 모듈은 다음 변수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0c5f3bf4caca26f3eb7cc7ef68e1ec6feaf1ceba" translate="yes" xml:space="preserve">
          <source>The following variables are for advanced uses of CPack:</source>
          <target state="translated">다음 변수는 CPack의 고급 사용을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="61d8632cf273a28ca313a766a8e5deafc50249a0" translate="yes" xml:space="preserve">
          <source>The following variables are passed to the test process:</source>
          <target state="translated">다음 변수가 테스트 프로세스에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="12afa14b0c5de3d8bb87df12a8d1ce37575c74b4" translate="yes" xml:space="preserve">
          <source>The following variables are provided to indicate iconv support:</source>
          <target state="translated">iconv 지원을 표시하기 위해 다음 변수가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3ba80994bbac8b987d781180531475f41f0c54a0" translate="yes" xml:space="preserve">
          <source>The following variables are set</source>
          <target state="translated">다음과 같은 변수가 설정됩니다</target>
        </trans-unit>
        <trans-unit id="169bfa46b2e3ea97a91cb9ebc7988896293ccac2" translate="yes" xml:space="preserve">
          <source>The following variables are set by including this module:</source>
          <target state="translated">이 모듈을 포함하여 다음 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f40d42a98fa1727c2bc27137652ac1e0a2336bec" translate="yes" xml:space="preserve">
          <source>The following variables are set:</source>
          <target state="translated">다음 변수가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f959b65accfbceecfc289d0a12605fdbdde53f52" translate="yes" xml:space="preserve">
          <source>The following variables can be set and are optional:</source>
          <target state="translated">다음 변수를 설정할 수 있으며 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="cd9c76debc3cc69023ee5487bb08046f55e42f68" translate="yes" xml:space="preserve">
          <source>The following variables can be set to guide the search for HDF5 libraries and includes:</source>
          <target state="translated">HDF5 라이브러리 검색을 안내하기 위해 다음 변수를 설정할 수 있으며 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="05f03e5e975cd583148b792c3b5c4c3e5c7f7dfd" translate="yes" xml:space="preserve">
          <source>The following variables configure behavior. They should be set before calling any of the functions provided by this module.</source>
          <target state="translated">다음 변수는 동작을 구성합니다. 이 모듈에서 제공하는 기능을 호출하기 전에 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7bfad48e46fefc716c849c2906a4f09f26d5157" translate="yes" xml:space="preserve">
          <source>The following variables indicating which bindings are present will be defined:</source>
          <target state="translated">어떤 바인딩이 존재하는지 나타내는 다음 변수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="acb82d18ca90179d7d02ee14deaf8b739d1f9eed" translate="yes" xml:space="preserve">
          <source>The following variables influence the component-specific packaging:</source>
          <target state="translated">다음 변수는 구성 요소 별 패키징에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="01f6c966a6af4260b8dcca888a07f46a29daff30" translate="yes" xml:space="preserve">
          <source>The following variables may also be set, for backwards compatibility:</source>
          <target state="translated">이전 버전과의 호환성을 위해 다음 변수를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="09e5af84628ffa18059b3a35c0d832529ea84805" translate="yes" xml:space="preserve">
          <source>The following variables may be set before calling this function to modify the way the check is run:</source>
          <target state="translated">점검 실행 방법을 수정하기 위해이 함수를 호출하기 전에 다음 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79520afc50139fd60f32f42c9809126f7926dceb" translate="yes" xml:space="preserve">
          <source>The following variables may be set before calling this macro to modify the way the check is run:</source>
          <target state="translated">검사가 실행되는 방식을 수정하기 위해이 매크로를 호출하기 전에 다음 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9966ada739bc8f2ac6bbcc6adc9f4926cff3d454" translate="yes" xml:space="preserve">
          <source>The following variables may be set to influence this module&amp;rsquo;s behavior:</source>
          <target state="translated">이 모듈의 동작에 영향을 주도록 다음 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c61f7395cd87be2447cfa081fa3ea31029fbb133" translate="yes" xml:space="preserve">
          <source>The following variables may be set to influence this module's behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb42f02283356dc557d2cb838a676879de73517" translate="yes" xml:space="preserve">
          <source>The following variables may be set to modify the search strategy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983929f2a97807e678aa9104c46ee8fa1cba3713" translate="yes" xml:space="preserve">
          <source>The following variables may be set upon return. Two sets of values exist: One for the common case (&lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;&lt;/code&gt;) and another for the information &lt;code&gt;pkg-config&lt;/code&gt; provides when called with the &lt;code&gt;--static&lt;/code&gt; option (&lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;_STATIC&lt;/code&gt;).</source>
          <target state="translated">반환 할 때 다음 변수를 설정할 수 있습니다. 두 가지 값 세트가 존재합니다. 하나는 일반적인 경우 ( &lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;&lt;/code&gt; ) 하나 는 &lt;code&gt;--static&lt;/code&gt; 옵션 ( &lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;_STATIC&lt;/code&gt; )으로 호출 될 때 &lt;code&gt;pkg-config&lt;/code&gt; 가 제공 하는 정보에 대한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="5d1abe9f1179e57385759c159f8f980bb1e9001c" translate="yes" xml:space="preserve">
          <source>The following variables will be computed and provided automatically:</source>
          <target state="translated">다음 변수가 자동으로 계산되어 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0cec2db2cd7b28b17e1d54c2accaad792be07f36" translate="yes" xml:space="preserve">
          <source>The following variables will be defined for your use</source>
          <target state="translated">사용하기 위해 다음 변수가 정의됩니다</target>
        </trans-unit>
        <trans-unit id="23e5a2ea0eb33aaf1f187ca650830245b5b5888f" translate="yes" xml:space="preserve">
          <source>The following variables will be defined:</source>
          <target state="translated">다음과 같은 변수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0e5412f2f183ba35d3a237f5f9a57401750d0658" translate="yes" xml:space="preserve">
          <source>The full absolute path to an executable. In this case, &lt;code&gt;Xxx&lt;/code&gt; might not be the name of the module, it might be the name of the tool (usually converted to all uppercase), assuming that tool has such a well-known name that it is unlikely that another tool with the same name exists. It would be appropriate to use this as the result variable of a &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d53c477f09906bda4ed926d5c37b0cf837a87f" translate="yes" xml:space="preserve">
          <source>The full path to a source file.</source>
          <target state="translated">소스 파일의 전체 경로</target>
        </trans-unit>
        <trans-unit id="6f9fe8aeee2bc39a5a8123820c92477c8f2f895b" translate="yes" xml:space="preserve">
          <source>The full path to the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; executable.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 실행 파일 의 전체 경로 입니다.</target>
        </trans-unit>
        <trans-unit id="7c31310ec3ad820028931bff0fdccea44d0e8472" translate="yes" xml:space="preserve">
          <source>The full path to the CMake source file where the function was called.</source>
          <target state="translated">함수가 호출 된 CMake 소스 파일의 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="9be9cd0de324758464b43541a5ebb28ceed951d9" translate="yes" xml:space="preserve">
          <source>The full path to the compiler for &lt;code&gt;LANG&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; 컴파일러의 전체 경로 입니다.</target>
        </trans-unit>
        <trans-unit id="90d08917bb106ad5765397453a477b528046e35f" translate="yes" xml:space="preserve">
          <source>The full path to the library file will be quoted/escaped for the shell automatically.</source>
          <target state="translated">라이브러리 파일의 전체 경로는 셸에 대해 자동으로 인용 / 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="bcf041c5171cb925f230ca6adafaec7d0aaa4fbb" translate="yes" xml:space="preserve">
          <source>The full path to the project build tree.</source>
          <target state="translated">프로젝트 빌드 트리의 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="cd7cea3ebd58c660dc0d06a07d3d5866b4e73e0e" translate="yes" xml:space="preserve">
          <source>The full path to the project source tree.</source>
          <target state="translated">프로젝트 소스 트리의 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="ac51fb021a12f3175a9b41f7347e19087795c0e7" translate="yes" xml:space="preserve">
          <source>The full path to the target&amp;rsquo;s artifact will be quoted/escaped for the shell automatically.</source>
          <target state="translated">대상 아티팩트의 전체 경로는 셸에 대해 자동으로 인용 / 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="a6479d5f08e9c646b029bf9ab19a58c964f3ee3f" translate="yes" xml:space="preserve">
          <source>The full path to the target's artifact will be quoted/escaped for the shell automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34d73e9c7b8aa7c4ec2eb21ec776c8291635a15" translate="yes" xml:space="preserve">
          <source>The full version string as displayed by cmake &lt;code&gt;--version&lt;/code&gt;.</source>
          <target state="translated">cmake &lt;code&gt;--version&lt;/code&gt; 에 의해 표시되는 정식 버전 문자열 .</target>
        </trans-unit>
        <trans-unit id="772aaee3ad64351a87d264736d690659eb5116f8" translate="yes" xml:space="preserve">
          <source>The full version string of the package found, if any. Note that many existing modules provide &lt;code&gt;Xxx_VERSION_STRING&lt;/code&gt; instead.</source>
          <target state="translated">발견 된 패키지의 전체 버전 문자열입니다 (있는 경우). 많은 기존 모듈이 대신 &lt;code&gt;Xxx_VERSION_STRING&lt;/code&gt; 을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="4c7bc43b9c13b739b1c162497ae0c1b09e964d69" translate="yes" xml:space="preserve">
          <source>The function arguments are:</source>
          <target state="translated">함수 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="66a77d32e673e713341a8c2402142fd822a31a14" translate="yes" xml:space="preserve">
          <source>The function constructs a &lt;code&gt;Doxyfile&lt;/code&gt; and defines a custom target that runs Doxygen on that generated file. The listed files and directories are used as the &lt;code&gt;INPUT&lt;/code&gt; of the generated &lt;code&gt;Doxyfile&lt;/code&gt; and they can contain wildcards. Any files that are listed explicitly will also be added as &lt;code&gt;SOURCES&lt;/code&gt; of the custom target so they will show up in an IDE project&amp;rsquo;s source list.</source>
          <target state="translated">이 함수는 &lt;code&gt;Doxyfile&lt;/code&gt; 을 구성하고 생성 된 파일에서 Doxygen을 실행하는 사용자 정의 대상을 정의합니다. 나열된 파일 및 디렉토리는 생성 된 &lt;code&gt;Doxyfile&lt;/code&gt; 의 &lt;code&gt;INPUT&lt;/code&gt; 으로 사용되며 와일드 카드를 포함 할 수 있습니다. 명시 적으로 나열된 모든 파일 은 사용자 정의 대상의 &lt;code&gt;SOURCES&lt;/code&gt; 로 추가 되므로 IDE 프로젝트의 소스 목록에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4e41f2daa2eca446d80c975dc85c3d766cce9405" translate="yes" xml:space="preserve">
          <source>The function constructs a &lt;code&gt;Doxyfile&lt;/code&gt; and defines a custom target that runs Doxygen on that generated file. The listed files and directories are used as the &lt;code&gt;INPUT&lt;/code&gt; of the generated &lt;code&gt;Doxyfile&lt;/code&gt; and they can contain wildcards. Any files that are listed explicitly will also be added as &lt;code&gt;SOURCES&lt;/code&gt; of the custom target so they will show up in an IDE project's source list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb952b05ca9b4af2f450102d6d19029ac4d206" translate="yes" xml:space="preserve">
          <source>The function expects one Matlab test script file to be given. In the case &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; is given, the unittest script file should contain the script to be run, plus an exit command with the exit value. This exit value will be passed to the ctest framework (0 success, non 0 failure). Additional arguments accepted by &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; can be passed through &lt;code&gt;TEST_ARGS&lt;/code&gt; (eg. &lt;code&gt;CONFIGURATION &amp;lt;config&amp;gt; ...&lt;/code&gt;).</source>
          <target state="translated">이 함수는 하나의 Matlab 테스트 스크립트 파일이 제공 될 것으로 예상합니다. &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; 가 제공 되는 경우 unittest 스크립트 파일에는 실행할 스크립트와 종료 값이있는 종료 명령이 포함되어야합니다. 이 종료 값은 ctest 프레임 워크에 전달됩니다 (0 성공, 0이 아닌 실패). 수락 추가 인수 &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt; 를 통해 전달 될 수 &lt;code&gt;TEST_ARGS&lt;/code&gt; (예. &lt;code&gt;CONFIGURATION &amp;lt;config&amp;gt; ...&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7f1e3a606e6e2388589c1e79edc11e85381c9be9" translate="yes" xml:space="preserve">
          <source>The function invocation is case-insensitive. A function defined as</source>
          <target state="translated">함수 호출은 대소 문자를 구분하지 않습니다. 로 정의 된 함수</target>
        </trans-unit>
        <trans-unit id="bb60e4528b9e07d1170279337ffa20c6f1db734f" translate="yes" xml:space="preserve">
          <source>The function stores property values in variables of the same name. Property names correspond to the keyword argument names of &lt;code&gt;ExternalProject_Add()&lt;/code&gt;. For example, the source directory might be retrieved like so:</source>
          <target state="translated">이 함수는 속성 이름을 같은 이름의 변수에 저장합니다. 속성 이름은 &lt;code&gt;ExternalProject_Add()&lt;/code&gt; 의 키워드 인수 이름에 해당합니다 . 예를 들어, 소스 디렉토리는 다음과 같이 검색 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2560b82c0cecf20c08907630c0a29206e574f680" translate="yes" xml:space="preserve">
          <source>The functionality of this module has been superseded by the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable that contains the compiler version number.</source>
          <target state="translated">이 모듈의 기능은 컴파일러 버전 번호가 포함 된 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4907baea6f7a4813a0ecf1fa6b16106db36ceead" translate="yes" xml:space="preserve">
          <source>The general signature is:</source>
          <target state="translated">일반적인 서명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e2407afbfd580f80af484cff504609ed457d63fe" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets have appropriate properties set to define their &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;usage requirements&lt;/a&gt;, such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and other relevant built-in &lt;code&gt;INTERFACE_&lt;/code&gt; properties. The &lt;code&gt;INTERFACE&lt;/code&gt; variant of user-defined properties listed in &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; and other &lt;a href=&quot;cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt; are also propagated to the generated &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-4-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets. In the above case, &lt;code&gt;ClimbingStats_MAJOR_VERSION&lt;/code&gt; is defined as a string which must be compatible among the dependencies of any depender. By setting this custom defined user property in this version and in the next version of &lt;code&gt;ClimbingStats&lt;/code&gt;, &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; will issue a diagnostic if there is an attempt to use version 3 together with version 4. Packages can choose to employ such a pattern if different major versions of the package are designed to be incompatible.</source>
          <target state="translated">생성 된 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상에는 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 기타 관련 내장 &lt;code&gt;INTERFACE_&lt;/code&gt; 특성 과 같이 &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;사용 요구 사항&lt;/a&gt; 을 정의하기 위해 적절한 특성이 설정되어 있습니다. &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; &lt;/a&gt; 및 기타 &lt;a href=&quot;cmake-buildsystem.7#compatible-interface-properties&quot;&gt;호환 가능한 인터페이스 속성에&lt;/a&gt; 나열된 사용자 정의 속성 의 &lt;code&gt;INTERFACE&lt;/code&gt; 변형 도 생성 된 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-4-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상으로 전파됩니다 . 위의 경우 &lt;code&gt;ClimbingStats_MAJOR_VERSION&lt;/code&gt; 는 종속 자의 종속성간에 호환되어야하는 문자열로 정의됩니다. 이 버전과의 다음 버전이 사용자 정의 된 사용자 속성을 설정하여 &lt;code&gt;ClimbingStats&lt;/code&gt; , &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 등의 패턴과 다른 경우를 채택 4. 패키지를 선택할 수 있습니다 버전과 함께 사용 버전 3에 대한 시도가있을 경우 진단을 발급합니다 주요 버전의 패키지는 호환되지 않도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="4bb2123b1d899d576101c47c7cd056f91ea5fbfb" translate="yes" xml:space="preserve">
          <source>The generated binary installers will contain all files that have been installed via CMake&amp;rsquo;s &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command (and the deprecated commands &lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;). Note that the &lt;code&gt;DESTINATION&lt;/code&gt; option of the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command must be a relative path; otherwise installed files are ignored by CPack.</source>
          <target state="translated">생성 된 바이너리 설치 프로그램에는 CMake의 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 (및 더 이상 사용되지 않는 명령 &lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt; )을 통해 설치된 모든 파일이 포함됩니다 . &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;DESTINATION&lt;/code&gt; 옵션은 상대 경로 여야합니다. 그렇지 않으면 설치된 파일은 CPack에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1ba8bc38d5cb5f52841635eaa1ff86964b7f38ce" translate="yes" xml:space="preserve">
          <source>The generated binary installers will contain all files that have been installed via CMake's &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command (and the deprecated commands &lt;a href=&quot;../command/install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;). Note that the &lt;code&gt;DESTINATION&lt;/code&gt; option of the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command must be a relative path; otherwise installed files are ignored by CPack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509d1f4f8402700ad04a0d4204a3f3fd2b309496" translate="yes" xml:space="preserve">
          <source>The generated build system will link &lt;code&gt;myexe&lt;/code&gt; to &lt;code&gt;m.lib&lt;/code&gt; when built in the release configuration, and &lt;code&gt;md.lib&lt;/code&gt; when built in the debug configuration.</source>
          <target state="translated">생성 된 빌드 시스템이 연결됩니다 &lt;code&gt;myexe&lt;/code&gt; 을 에 &lt;code&gt;m.lib&lt;/code&gt; 릴리스 구성에 내장 할 때, 그리고 &lt;code&gt;md.lib&lt;/code&gt; 디버그 구성에 내장 된 경우.</target>
        </trans-unit>
        <trans-unit id="2cdfbd99b5e1fa59c7cf5d1954807c4309a701d6" translate="yes" xml:space="preserve">
          <source>The generated export file contains code that creates an &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-20-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; library.</source>
          <target state="translated">생성 된 내보내기 파일에는 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-20-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 라이브러리 를 생성하는 코드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="787be742186ad75ea6b4ba9f5cb04197950fa7b7" translate="yes" xml:space="preserve">
          <source>The generated file permissions default to the standard 644 value (-rw-r--r--).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ccb8d4f6d8f13188e5eefed34463bdbd94261a" translate="yes" xml:space="preserve">
          <source>The generated generated &lt;code&gt;ui_*.h&lt;/code&gt; files are placed in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성 된 생성 된 &lt;code&gt;ui_*.h&lt;/code&gt; 파일은 대상의 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 에&lt;/a&gt; 자동으로 추가되는 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="21656a0083e8ba33610e4f0b5cc0461df55960d5" translate="yes" xml:space="preserve">
          <source>The generated generated &lt;code&gt;ui_*.h&lt;/code&gt; files are placed in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target's &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979093fd6920c79ce080c852ec6550c2e32ff18b" translate="yes" xml:space="preserve">
          <source>The generator used to build the project. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로젝트를 빌드하는 데 사용 된 생성기 &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ea2e2f709f1910bfccbf5c7f29dd658f44449ee" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;MSBuild.exe&lt;/code&gt; command installed with the corresponding Visual Studio version.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt; &lt;code&gt;Visual Studio 10 2010&lt;/code&gt; &lt;/a&gt; 이상의 생성기는 이 변수를 해당 Visual Studio 버전과 함께 설치된 &lt;code&gt;MSBuild.exe&lt;/code&gt; 명령으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="6dda4de0dc9ffd74e25eadcf30ada99345ca3fb5" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;devenv.com&lt;/code&gt; command installed with the corresponding Visual Studio version. Note that this variable may be empty on Visual Studio Express editions because they do not provide this tool.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt; &lt;code&gt;Visual Studio 9 2008&lt;/code&gt; &lt;/a&gt; 이상의 생성기는 이 변수를 해당 Visual Studio 버전과 함께 설치된 &lt;code&gt;devenv.com&lt;/code&gt; 명령으로 설정합니다 . 이 변수는이 도구를 제공하지 않으므로 Visual Studio Express 버전에서 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3c73aae96b545011f6a9ec9598846deee948580" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;MSBuild.exe&lt;/code&gt; command installed with the corresponding Visual Studio version.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt; &lt;code&gt;Visual Studio 10 2010&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MSBuild.exe&lt;/code&gt; 생성기는 이 변수를 해당 Visual Studio 버전과 함께 설치된 MSBuild.exe 명령으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="862f2b4671b232341295136dce62900664b0ba69" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;devenv.com&lt;/code&gt; command installed with the corresponding Visual Studio version. Note that this variable may be empty on Visual Studio Express editions because they do not provide this tool.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt; &lt;code&gt;Visual Studio 9 2008&lt;/code&gt; &lt;/a&gt; 이상의 생성기는 이 변수를 해당 Visual Studio 버전과 함께 설치된 &lt;code&gt;devenv.com&lt;/code&gt; 명령으로 설정합니다 . Visual Studio Express 버전에서는이 도구를 제공하지 않으므로이 변수가 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8842a7810114f5a5f7bfb7a7f169494e44f1efc1" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;MSBuild.exe&lt;/code&gt; command installed with the corresponding Visual Studio version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ab0e6018e8196a663394402bb6478fab038d3b" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;devenv.com&lt;/code&gt; command installed with the corresponding Visual Studio version. Note that this variable may be empty on Visual Studio Express editions because they do not provide this tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c818643d579e5241a4fa6ffd3a68658f574d353" translate="yes" xml:space="preserve">
          <source>The given directory must be known to CMake, being either the top-level directory or one added by &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;. Furthermore, the given directory must not yet be finished processing. This means it can be the current directory or one of its ancestors.</source>
          <target state="translated">주어진 디렉터리는 최상위 디렉터리이거나 &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 에 의해 추가 된 디렉터리 인 CMake에 알려야 합니다. 또한 지정된 디렉토리는 아직 처리가 완료되지 않아야합니다. 즉, 현재 디렉터리 또는 조상 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a143d0d01a88ea21217145a8a97cd30e941c646c" translate="yes" xml:space="preserve">
          <source>The given locations are searched for a library whose name is cmCOMMAND_NAME. If found, it is loaded as a module and the command is added to the set of available CMake commands. Usually, &lt;a href=&quot;try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; is used before this command to compile the module. If the command is successfully loaded a variable named</source>
          <target state="translated">주어진 위치는 이름이 cmCOMMAND_NAME 인 라이브러리를 검색합니다. 발견되면 모듈로로드되고 명령이 사용 가능한 CMake 명령 세트에 추가됩니다. 일반적으로 &lt;a href=&quot;try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 은이 명령 전에 모듈을 컴파일하는 데 사용됩니다. 명령이 성공적으로로드 된 경우 이름이 지정된 변수</target>
        </trans-unit>
        <trans-unit id="996c458fc513621aeb83c98b7c9f4595376ade5e" translate="yes" xml:space="preserve">
          <source>The given test command is expected to exit with code &lt;code&gt;0&lt;/code&gt; to pass and non-zero to fail, or vice-versa if the &lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt;&lt;code&gt;WILL_FAIL&lt;/code&gt;&lt;/a&gt; test property is set. Any output written to stdout or stderr will be captured by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; but does not affect the pass/fail status unless the &lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; test property is used.</source>
          <target state="translated">주어진 테스트 명령은 코드 &lt;code&gt;0&lt;/code&gt; 으로 종료되고 0 이 아닌 값은 실패하거나 &lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt; &lt;code&gt;WILL_FAIL&lt;/code&gt; &lt;/a&gt; 테스트 속성이 설정된 경우 그 반대 입니다. stdout 또는 stderr에 작성된 출력은 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 의해 캡처 되지만 &lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt; 테스트 특성을 사용 하지 않으면 통과 / 실패 상태에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8e139ae5c3ff53561e3adfb15006faaebe6518ea" translate="yes" xml:space="preserve">
          <source>The given test command is expected to exit with code &lt;code&gt;0&lt;/code&gt; to pass and non-zero to fail, or vice-versa if the &lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt;&lt;code&gt;WILL_FAIL&lt;/code&gt;&lt;/a&gt; test property is set. Any output written to stdout or stderr will be captured by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; but does not affect the pass/fail status unless the &lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; test property is used.</source>
          <target state="translated">주어진 테스트 명령은 통과하려면 코드 &lt;code&gt;0&lt;/code&gt; , 실패하려면 0이 아닌 코드로 종료되어야하며 , &lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt; &lt;code&gt;WILL_FAIL&lt;/code&gt; &lt;/a&gt; 테스트 속성이 설정된 경우 그 반대의 경우도 마찬가지 입니다. stdout 또는 stderr에 기록 된 모든 출력은 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 의해 캡처 되지만 &lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_test/skip_regular_expression#prop_test:SKIP_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:SKIP_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt; 테스트 속성이 사용 되지 않는 한 통과 / 실패 상태에 영향을주지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ada39a25d8116322468d78732c2f96f93ca6319c" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot; id=&quot;index-0-variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot;&gt;&lt;code&gt;FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&lt;/code&gt;&lt;/a&gt; can be defined for each type to replace the type name with the specified string whenever the package type is used in an output string.</source>
          <target state="translated">패키지 유형이 출력 문자열에 사용될 때마다 유형 이름을 지정된 문자열로 바꾸도록 각 유형에 대해 전역 특성 &lt;a href=&quot;#variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot; id=&quot;index-0-variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot;&gt; &lt;code&gt;FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&lt;/code&gt; &lt;/a&gt; 을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9997e476b970743e029b2bf2c9fac97c4c1a6694" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-0-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt;&lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt;&lt;/a&gt; defines which package type is the default one. When calling &lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-1-command:feature_summary&quot;&gt;&lt;code&gt;feature_summary()&lt;/code&gt;&lt;/a&gt;, if the user did not set the package type explicitly, the package will be assigned to this category.</source>
          <target state="translated">전역 속성 &lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-0-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt; &lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt; &lt;/a&gt; 은 어떤 패키지 유형이 기본 유형인지 정의합니다. &lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-1-command:feature_summary&quot;&gt; &lt;code&gt;feature_summary()&lt;/code&gt; &lt;/a&gt; 호출 할 때 사용자가 패키지 유형을 명시 적으로 설정하지 않은 경우 패키지가이 카테고리에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="5dbd88240387289669cc1fba5e937226d3a1e237" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt;&lt;/a&gt; defines the type of packages used by &lt;code&gt;FeatureSummary&lt;/code&gt;.</source>
          <target state="translated">전역 속성 &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;FeatureSummary&lt;/code&gt; 에서 사용하는 패키지 유형을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="adbe57db89431afbbb254c3d130ebfe208361dd5" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; defines which package types are required.</source>
          <target state="translated">전역 속성 &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt; &lt;/a&gt; 는 필요한 패키지 유형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a875354013426ed42217b754900765286ed2b598" translate="yes" xml:space="preserve">
          <source>The gnutls include directory</source>
          <target state="translated">gnutls는 디렉토리를 포함합니다</target>
        </trans-unit>
        <trans-unit id="a7e957d28d12e66e55fa8be287bdb5f0cc428b09" translate="yes" xml:space="preserve">
          <source>The graph name.</source>
          <target state="translated">그래프 이름.</target>
        </trans-unit>
        <trans-unit id="2d9ee55ad559de46d0258e0bd629633236707604" translate="yes" xml:space="preserve">
          <source>The graph type.</source>
          <target state="translated">그래프 타입.</target>
        </trans-unit>
        <trans-unit id="15db1a3e8a9c1528e176dc8851fd38cafb02ac9c" translate="yes" xml:space="preserve">
          <source>The group of a component.</source>
          <target state="translated">구성 요소 그룹.</target>
        </trans-unit>
        <trans-unit id="249cf166eb6586561669e75ae8512fe7ea08ef1f" translate="yes" xml:space="preserve">
          <source>The header file generated by bison</source>
          <target state="translated">들소가 생성 한 헤더 파일</target>
        </trans-unit>
        <trans-unit id="f03f264c47e9281858c23a1fa359de269ff1c054" translate="yes" xml:space="preserve">
          <source>The header file needed for &lt;code&gt;backtrace(3)&lt;/code&gt;. Cached. Could be forcibly set by user.</source>
          <target state="translated">&lt;code&gt;backtrace(3)&lt;/code&gt; 필요한 헤더 파일 입니다. 캐시되었습니다. 사용자가 강제로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ce102b99dca7c8f64e39f2d74db3a14dfea5eb7" translate="yes" xml:space="preserve">
          <source>The header will be &lt;code&gt;moc&lt;/code&gt; compiled again if a file from the additional file dependencies changes.</source>
          <target state="translated">추가 파일 종속성의 파일이 변경되면 헤더가 다시 &lt;code&gt;moc&lt;/code&gt; 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="40ff8be056143b316f9bd9d46783d12b8d1f1dee" translate="yes" xml:space="preserve">
          <source>The header written at the top of the Graphviz files.</source>
          <target state="translated">Graphviz 파일의 맨 위에 쓰여진 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="e8748d0c639ab9cf25e064b9941d07024105b546" translate="yes" xml:space="preserve">
          <source>The header written at the top of the graphviz file.</source>
          <target state="translated">graphviz 파일의 상단에 쓰여진 헤더.</target>
        </trans-unit>
        <trans-unit id="ac5e8dceb6dd93113215243ba5452e8d3fddb042" translate="yes" xml:space="preserve">
          <source>The homepage URL of the project.</source>
          <target state="translated">프로젝트의 홈페이지 URL입니다.</target>
        </trans-unit>
        <trans-unit id="5e79a77aba6b0975f6e513f21778e89198918fbb" translate="yes" xml:space="preserve">
          <source>The homepage URL of the top level project.</source>
          <target state="translated">최상위 프로젝트의 홈페이지 URL입니다.</target>
        </trans-unit>
        <trans-unit id="4c42f0a23a7922ae97ca336b2ba1e714b6ee4cc0" translate="yes" xml:space="preserve">
          <source>The host platform suffix of the &lt;code&gt;binutils&lt;/code&gt; in the standalone toolchain.</source>
          <target state="translated">독립형 툴체인 에있는 &lt;code&gt;binutils&lt;/code&gt; 의 호스트 플랫폼 접미사 .</target>
        </trans-unit>
        <trans-unit id="10dbb063ef27e8c281624eeece9a59276e9bb233" translate="yes" xml:space="preserve">
          <source>The host platform suffix of the binutils in the NDK toolchain.</source>
          <target state="translated">NDK 툴체인에있는 binutils의 호스트 플랫폼 접미사.</target>
        </trans-unit>
        <trans-unit id="dbff586aef8016c473142584874288c1786c9d52" translate="yes" xml:space="preserve">
          <source>The iconv libraries to be linked.</source>
          <target state="translated">링크 할 iconv 라이브러리</target>
        </trans-unit>
        <trans-unit id="df737933f31947c15d60460fb78d26589023e595" translate="yes" xml:space="preserve">
          <source>The iconv library (if not implicitly given in the C library).</source>
          <target state="translated">iconv 라이브러리 (C 라이브러리에 내재적으로 제공되지 않은 경우)</target>
        </trans-unit>
        <trans-unit id="fda06fdf97ed5372e2c715a6602cebce7e9a8916" translate="yes" xml:space="preserve">
          <source>The if command was written very early in CMake&amp;rsquo;s history, predating the &lt;code&gt;${}&lt;/code&gt; variable evaluation syntax, and for convenience evaluates variables named by its arguments as shown in the above signatures. Note that normal variable evaluation with &lt;code&gt;${}&lt;/code&gt; applies before the if command even receives the arguments. Therefore code like</source>
          <target state="translated">if 명령은 CMake의 역사 초기에 &lt;code&gt;${}&lt;/code&gt; 변수 평가 구문을 앞두고 작성 되었으며 편의상 위의 시그니처에 표시된대로 인수로 명명 된 변수를 평가합니다. &lt;code&gt;${}&lt;/code&gt; 사용한 일반 변수 평가 는 if 명령이 인수를 받기 전에도 적용됩니다. 따라서 코드는</target>
        </trans-unit>
        <trans-unit id="9a1e68ac2b96c14b7fe8e08d89fac86e3bd28f92" translate="yes" xml:space="preserve">
          <source>The if command was written very early in CMake's history, predating the &lt;code&gt;${}&lt;/code&gt; variable evaluation syntax, and for convenience evaluates variables named by its arguments as shown in the above signatures. Note that normal variable evaluation with &lt;code&gt;${}&lt;/code&gt; applies before the if command even receives the arguments. Therefore code like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1ce6cd35f2b94612a54f829dc54d1c30683dc8" translate="yes" xml:space="preserve">
          <source>The implementation of this command has been empty since December 2001 but was kept in CMake for compatibility for a long time.</source>
          <target state="translated">이 명령의 구현은 2001 년 12 월부터 비워졌지만 오랫동안 호환성을 위해 CMake에 유지되었습니다.</target>
        </trans-unit>
        <trans-unit id="72aac52fdc22b4a0c0d65b28f7b5bbfc7863e385" translate="yes" xml:space="preserve">
          <source>The implementation was buggy and always returned 0. It cannot be fixed without breaking backwards compatibility. Use &lt;code&gt;rm&lt;/code&gt; instead.</source>
          <target state="translated">구현이 버그가있어서 항상 0을 반환했습니다. 이전 버전과의 호환성을 깨지 않고는 수정할 수 없습니다. 대신 &lt;code&gt;rm&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="21cee72e798f5376932eb7024779f39cb61a9582" translate="yes" xml:space="preserve">
          <source>The include directories are added to the &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists&lt;/code&gt; file. They are also added to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property for each target in the current &lt;code&gt;CMakeLists&lt;/code&gt; file. The target property values are the ones used by the generators.</source>
          <target state="translated">포함 디렉토리는 현재 &lt;code&gt;CMakeLists&lt;/code&gt; 파일 의 &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 디렉토리 특성에 추가 됩니다. 또한 현재 &lt;code&gt;CMakeLists&lt;/code&gt; 파일 의 각 대상에 대한 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 대상 특성에 추가 됩니다. 대상 속성 값은 생성기가 사용하는 값입니다.</target>
        </trans-unit>
        <trans-unit id="c608a1bb2dbf4fdce14f5bc78838422a7f658465" translate="yes" xml:space="preserve">
          <source>The include directories needed to use &lt;code&gt;backtrace(3)&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;backtrace(3)&lt;/code&gt; 헤더 를 사용하는 데 필요한 포함 디렉토리</target>
        </trans-unit>
        <trans-unit id="9d42480d0497ff5ab81ddc4dfb1c586411444d2c" translate="yes" xml:space="preserve">
          <source>The include directories needed to use Curses.</source>
          <target state="translated">Curses를 사용하는 데 필요한 포함 디렉토리.</target>
        </trans-unit>
        <trans-unit id="f62c8a1c7c323e6cd2fb8e25475ccbcca031e380" translate="yes" xml:space="preserve">
          <source>The include directory for exslt.</source>
          <target state="translated">exslt의 포함 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="1401d30cc2139ca41d9288d0a0acf9424c693e4d" translate="yes" xml:space="preserve">
          <source>The include directory for protocol buffers</source>
          <target state="translated">프로토콜 버퍼를위한 include 디렉토리</target>
        </trans-unit>
        <trans-unit id="98ce86c568aa8e5551b56837b1e2df704725bff9" translate="yes" xml:space="preserve">
          <source>The include directory is automatically added to the target&amp;rsquo;s &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포함 디렉토리는 대상의 &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 에&lt;/a&gt; 자동으로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="387f076205d4210e184a3ad827792beb2e0b799a" translate="yes" xml:space="preserve">
          <source>The include directory is automatically added to the target's &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4bc7891cd197d22d27b19b2cef49282f1f9f05" translate="yes" xml:space="preserve">
          <source>The include guard applies globally to the whole build. The current file will only be included once regardless of the scope.</source>
          <target state="translated">포함 가드는 전체 빌드에 전체적으로 적용됩니다. 현재 파일은 범위에 관계없이 한 번만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d97fc6b2b9b96ec626ced221881bc056de0059a8" translate="yes" xml:space="preserve">
          <source>The include guard applies within the current directory and below. The file will only be included once within this directory scope, but may be included again by other files outside of this directory (i.e. a parent directory or another directory not pulled in by &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; from the current file or its children).</source>
          <target state="translated">포함 가드는 현재 디렉토리와 그 아래에 적용됩니다. 파일은이 디렉토리 범위 내에 한 번만 포함되지만이 디렉토리 외부의 다른 파일 (예 : 상위 디렉토리 또는 현재 파일 또는 해당 하위에서 &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 가져 오지 않은 다른 디렉토리 ) 에 의해 다시 포함될 수 있습니다. ).</target>
        </trans-unit>
        <trans-unit id="1d1da10426c27ed44ffdb5a5957dafff4397bae2" translate="yes" xml:space="preserve">
          <source>The individual steps within the process can be driven independently if required (e.g. for CDash submission) and extra custom steps can be defined, along with the ability to control the step dependencies. The directory structure used for the management of the external project can also be customized. The function supports a large number of options which can be used to tailor the external project behavior.</source>
          <target state="translated">프로세스 내의 개별 단계는 필요한 경우 독립적으로 진행될 수 있으며 (예 : CDash 제출의 경우) 단계 종속성을 제어하는 ​​기능과 함께 추가 사용자 정의 단계를 정의 할 수 있습니다. 외부 프로젝트 관리에 사용되는 디렉토리 구조도 사용자 정의 할 수 있습니다. 이 기능은 외부 프로젝트 동작을 조정하는 데 사용할 수있는 많은 옵션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6d8f13f221a1d6113c8ecfe80aef117547108d6f" translate="yes" xml:space="preserve">
          <source>The initial message send by the cmake server on startup is of type &amp;ldquo;hello&amp;rdquo;. This is the only message ever sent by the server that is not of type &amp;ldquo;reply&amp;rdquo;, &amp;ldquo;progress&amp;rdquo; or &amp;ldquo;error&amp;rdquo;.</source>
          <target state="translated">시작할 때 cmake 서버가 보낸 초기 메시지는&amp;ldquo;hello&amp;rdquo;유형입니다. &quot;reply&quot;, &quot;progress&quot;또는 &quot;error&quot;유형이 아닌 서버가 보낸 유일한 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="46ead6e8481c5fff6ebaf79e3aa66527bccc3bb7" translate="yes" xml:space="preserve">
          <source>The initial value for this property is taken from the &lt;a href=&quot;../variable/cmake_unity_build_batch_size#variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;CMAKE_UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; variable when the target is created. If that variable has not been set, the initial value will be 8.</source>
          <target state="translated">이 속성의 초기 값 은 대상이 생성 될 때 &lt;a href=&quot;../variable/cmake_unity_build_batch_size#variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-variable:CMAKE_UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;CMAKE_UNITY_BUILD_BATCH_SIZE&lt;/code&gt; &lt;/a&gt; 변수 에서 가져옵니다 . 해당 변수가 설정되지 않은 경우 초기 값은 8이됩니다.</target>
        </trans-unit>
        <trans-unit id="deeff57bb461c7164e68279cd60bbdd3d8a39477" translate="yes" xml:space="preserve">
          <source>The input source file, an alias for &amp;lt;YaccInput&amp;gt;</source>
          <target state="translated">&amp;lt;YaccInput&amp;gt;의 별명 인 입력 소스 파일</target>
        </trans-unit>
        <trans-unit id="a29c330b7eb96304a38a1cde05d43bc2c3234a55" translate="yes" xml:space="preserve">
          <source>The install rules are fairly simple: for MathFunctions we want to install the library and header file and for the application we want to install the executable and configured header.</source>
          <target state="translated">설치 규칙은 매우 간단합니다. MathFunctions의 경우 라이브러리와 헤더 파일을 설치하고 응용 프로그램의 경우 실행 가능하고 구성된 헤더를 설치하려고합니다.</target>
        </trans-unit>
        <trans-unit id="8610b73d50214f80b55242009a473df06cc60d26" translate="yes" xml:space="preserve">
          <source>The installation prefix is also added to &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; so that &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt; will search the prefix for other software.</source>
          <target state="translated">설치 접두사도 추가됩니다 &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 있도록 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt; 다른 소프트웨어에 대한 접두사를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="31352c20cd1d01baca7baeddff78bcb5d6cd5f69" translate="yes" xml:space="preserve">
          <source>The installed &lt;code&gt;&amp;lt;export-name&amp;gt;.cmake&lt;/code&gt; file may come with additional per-configuration &lt;code&gt;&amp;lt;export-name&amp;gt;-*.cmake&lt;/code&gt; files to be loaded by globbing. Do not use an export name that is the same as the package name in combination with installing a &lt;code&gt;&amp;lt;package-name&amp;gt;-config.cmake&lt;/code&gt; file or the latter may be incorrectly matched by the glob and loaded.</source>
          <target state="translated">설치된 &lt;code&gt;&amp;lt;export-name&amp;gt;.cmake&lt;/code&gt; 파일은 globbing으로로드 할 추가 구성 별 &lt;code&gt;&amp;lt;export-name&amp;gt;-*.cmake&lt;/code&gt; 파일과 함께 제공 될 수 있습니다. &lt;code&gt;&amp;lt;package-name&amp;gt;-config.cmake&lt;/code&gt; 파일 을 설치할 때 패키지 이름과 동일한 내보내기 이름을 사용하지 마십시오. 그렇지 않으면 후자가 glob에서 잘못 일치하여로드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04a6311768200c0030d9de402cf6df80f31cecb8" translate="yes" xml:space="preserve">
          <source>The item name consisting of a single dot character &lt;code&gt;.&lt;/code&gt; is a directory name that refers to the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7061b879184d59b3699e748c482a25e3acab04a3" translate="yes" xml:space="preserve">
          <source>The item name consisting of two dot characters &lt;code&gt;..&lt;/code&gt; is a directory name that refers to the parent directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694569c7652c7f39f3a1797d7d44a0ee86858115" translate="yes" xml:space="preserve">
          <source>The key of which the base will be computed. Expected to be a upper case full filename.</source>
          <target state="translated">기준이 계산 될 키입니다. 대문자 전체 파일 이름이 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="249cd7279e3c1d1683183deb69838e47889805d2" translate="yes" xml:space="preserve">
          <source>The language of the source files compiled.</source>
          <target state="translated">컴파일 된 소스 파일의 언어</target>
        </trans-unit>
        <trans-unit id="27475e6ad1202d097833d3d3407241ebc392ab94" translate="yes" xml:space="preserve">
          <source>The last filename component of &lt;code&gt;${sourceDir}&lt;/code&gt;. For example, if &lt;code&gt;${sourceDir}&lt;/code&gt; is &lt;code&gt;/path/to/source&lt;/code&gt;, this would be &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;${sourceDir}&lt;/code&gt; 의 마지막 파일 이름 구성 요소입니다 . 예를 들어 &lt;code&gt;${sourceDir}&lt;/code&gt; 이 &lt;code&gt;/path/to/source&lt;/code&gt; 이면 &lt;code&gt;source&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="538490f6bf6c0958d609785ee55c1e1e280900e2" translate="yes" xml:space="preserve">
          <source>The left and right hand arguments to &lt;code&gt;AND&lt;/code&gt; and &lt;code&gt;OR&lt;/code&gt; are independently tested to see if they are boolean constants, if so they are used as such, otherwise they are assumed to be variables and are dereferenced.</source>
          <target state="translated">&lt;code&gt;AND&lt;/code&gt; 및 &lt;code&gt;OR&lt;/code&gt; 에 대한 왼쪽 및 오른쪽 인수 는 부울 상수인지 확인하기 위해 독립적으로 테스트되며, 그렇지 않은 경우 변수로 간주되고 역 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="ca92318e7b6e875d2797cddc9ed5eaaf9a9d4f2b" translate="yes" xml:space="preserve">
          <source>The left hand argument to &lt;code&gt;MATCHES&lt;/code&gt; is first checked to see if it is a defined variable, if so the variable&amp;rsquo;s value is used, otherwise the original value is used.</source>
          <target state="translated">&lt;code&gt;MATCHES&lt;/code&gt; 에 대한 왼쪽 인수 는 먼저 변수가 정의 된 변수인지 확인하여 변수 값이 사용되면 원래 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="09484110f4a8a4fec50b6b7ead675bf51644e5b5" translate="yes" xml:space="preserve">
          <source>The left hand argument to &lt;code&gt;MATCHES&lt;/code&gt; is first checked to see if it is a defined variable, if so the variable's value is used, otherwise the original value is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215e678c4a0a9f06245697e70224e28edf8a42d6" translate="yes" xml:space="preserve">
          <source>The libgdal library file.</source>
          <target state="translated">libgdal 라이브러리 파일</target>
        </trans-unit>
        <trans-unit id="c763b8a1d860c4c95c455d81a5536ce39e692dd9" translate="yes" xml:space="preserve">
          <source>The libinput library, if found.</source>
          <target state="translated">libinput 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="27d2a06f2e9c1ef850258d6e796ca3fc7e14e8b3" translate="yes" xml:space="preserve">
          <source>The libpng library, if found.</source>
          <target state="translated">찾은 경우 libpng 라이브러리</target>
        </trans-unit>
        <trans-unit id="b067232aab9867bdbbdc7f706cce622689314272" translate="yes" xml:space="preserve">
          <source>The libraries (linker flags) needed to use &lt;code&gt;backtrace(3)&lt;/code&gt;, if any.</source>
          <target state="translated">라이브러리 (링커 플래그)는 &lt;code&gt;backtrace(3)&lt;/code&gt; 를 사용해야했습니다 (있는 경우 ) .</target>
        </trans-unit>
        <trans-unit id="a28ebd58cda5ffbe38f30abfbb202cf0087294e8" translate="yes" xml:space="preserve">
          <source>The libraries needed to use Curses.</source>
          <target state="translated">라이브러리는 Curses를 사용해야했습니다.</target>
        </trans-unit>
        <trans-unit id="3173927d81b88829ad6867109cb25474d3b416a3" translate="yes" xml:space="preserve">
          <source>The libraries needed to use LTTng-UST</source>
          <target state="translated">LTTng-UST를 사용하는 데 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="0bc79453fff1698be629bbfc99948673e145813c" translate="yes" xml:space="preserve">
          <source>The libraries needed to use gnutls</source>
          <target state="translated">gnutls를 사용하는 데 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="6e85d5f8177db9b575cfeba9bc28242a0ea137bf" translate="yes" xml:space="preserve">
          <source>The libraries to link against for the osgDB</source>
          <target state="translated">osgDB에 대해 링크 할 라이브러리</target>
        </trans-unit>
        <trans-unit id="fde66fd62c883f9f2b29bbb3152a00315c28a434" translate="yes" xml:space="preserve">
          <source>The libraries to link against to use Xxx. These should include full paths. This should not be a cache entry.</source>
          <target state="translated">Xxx를 사용하기 위해 링크 할 라이브러리입니다. 여기에는 전체 경로가 포함되어야합니다. 캐시 항목이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="d4eedd73a7f5a7ebd17041d0d3e07654dc7c1c19" translate="yes" xml:space="preserve">
          <source>The libraries to use for BLAS, if found.</source>
          <target state="translated">BLAS에 사용할 라이브러리 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="d0b6e3b9804c391de43efff7634cfb7d4b9dc581" translate="yes" xml:space="preserve">
          <source>The libraries to use for LAPACK, if found.</source>
          <target state="translated">LAPACK에 사용할 라이브러리 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="52c751ba0e689100a7771ae8495766cb775efaee" translate="yes" xml:space="preserve">
          <source>The libraries to use with the module. These may be CMake targets, full absolute paths to a library binary or the name of a library that the linker must find in its search path. This should not be a cache entry (note that this also means this variable should not be used as the result variable of a &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command - see &lt;code&gt;Xxx_LIBRARY&lt;/code&gt; below for that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5758a92e1447d33067d81fe92459449a021c5036" translate="yes" xml:space="preserve">
          <source>The library dependency graph is normally acyclic (a DAG), but in the case of mutually-dependent &lt;code&gt;STATIC&lt;/code&gt; libraries CMake allows the graph to contain cycles (strongly connected components). When another target links to one of the libraries, CMake repeats the entire connected component. For example, the code</source>
          <target state="translated">라이브러리 종속성 그래프는 일반적으로 비순환 (DAG)이지만 상호 종속적 인 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리의 경우 CMake는 그래프에주기 (강하게 연결된 구성 요소)를 포함 할 수 있습니다. 다른 대상이 라이브러리 중 하나에 연결되면 CMake는 연결된 전체 구성 요소를 반복합니다. 예를 들어, 코드</target>
        </trans-unit>
        <trans-unit id="50792cfdf6a745ca9277b9656fb4f65f85b34832" translate="yes" xml:space="preserve">
          <source>The library name/flag is treated as a command-line string fragment and will be used with no extra quoting or escaping.</source>
          <target state="translated">라이브러리 이름 / 플래그는 명령 줄 문자열 조각으로 취급되며 추가 인용이나 이스케이프없이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9cbc94482b7d8fd2a9788aa136362d78fa80a88e" translate="yes" xml:space="preserve">
          <source>The library or executable may not be necessary in the primary deploy/debug scenario, and excluding from deployment saves time in the develop/download/debug cycle.</source>
          <target state="translated">기본 배포 / 디버그 시나리오에서는 라이브러리 또는 실행 파일이 필요하지 않을 수 있으며 배포에서 제외하면 개발 / 다운로드 / 디버그주기에서 시간이 절약됩니다.</target>
        </trans-unit>
        <trans-unit id="84569b1e2daf01293a78ce1824f73d2c7e31303f" translate="yes" xml:space="preserve">
          <source>The library variables below are set as normal variables. These contain debug/optimized keywords when a debugging library is found.</source>
          <target state="translated">아래 라이브러리 변수는 일반 변수로 설정되어 있습니다. 여기에는 디버깅 라이브러리가있을 때 디버그 / 최적화 된 키워드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4e4d848407edbafa475d2ccf843f5846d9490409" translate="yes" xml:space="preserve">
          <source>The line in &lt;code&gt;file&lt;/code&gt; of the function call.</source>
          <target state="translated">함수 호출의 &lt;code&gt;file&lt;/code&gt; 라인입니다 .</target>
        </trans-unit>
        <trans-unit id="20f2dfca08c8b5bf3c097102d72ce9a580fa7c50" translate="yes" xml:space="preserve">
          <source>The line number of the current file being processed.</source>
          <target state="translated">처리중인 현재 파일의 줄 번호</target>
        </trans-unit>
        <trans-unit id="edd834512d7f3a77cf56097f0b65e2afdf3f4f87" translate="yes" xml:space="preserve">
          <source>The link (or archiving) step of those other targets will use the object files collection in addition to those from their own sources.</source>
          <target state="translated">이러한 다른 대상의 링크 (또는 아카이브) 단계는 자체 소스의 파일 외에도 오브젝트 파일 콜렉션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6b4f93cc2bf96071fa7f894cfbb7adc00bc41c96" translate="yes" xml:space="preserve">
          <source>The link (or archiving) step of those other targets will use the object files from &lt;code&gt;OBJECT&lt;/code&gt; libraries that are &lt;em&gt;directly&lt;/em&gt; linked. Additionally, usage requirements of the &lt;code&gt;OBJECT&lt;/code&gt; libraries will be honored when compiling sources in those other targets. Furthermore, those usage requirements will propagate transitively to dependents of those other targets.</source>
          <target state="translated">이러한 다른 대상의 링크 (또는 아카이브) 단계 는 &lt;em&gt;직접&lt;/em&gt; 링크 된 &lt;code&gt;OBJECT&lt;/code&gt; 라이브러리 의 오브젝트 파일을 사용합니다 . 또한 &lt;code&gt;OBJECT&lt;/code&gt; 라이브러리 의 사용 요구 사항은 다른 대상에서 소스를 컴파일 할 때 적용됩니다. 또한 이러한 사용 요구 사항은 다른 대상의 종속 항목에 전 이적으로 전파됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e10902b613679b542c34c30b1079fb6217bfab5b" translate="yes" xml:space="preserve">
          <source>The link flag is treated as a command-line string fragment and will be used with no extra quoting or escaping.</source>
          <target state="translated">링크 플래그는 명령 줄 문자열 조각으로 취급되며 추가 인용이나 이스케이프없이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c0e19ed660a8b73c19e4a7dcfe73a5ef5fb668f2" translate="yes" xml:space="preserve">
          <source>The link language of target when evaluating link options. See &lt;a href=&quot;#boolean-link-language-generator-expression&quot;&gt;the related boolean expression&lt;/a&gt;&lt;code&gt;$&amp;lt;LINK_LANGUAGE:language&amp;gt;&lt;/code&gt; for notes about the portability of this generator expression.</source>
          <target state="translated">링크 옵션을 평가할 때 대상의 링크 언어입니다. 이 생성기 표현식의 이식성에 대한 참고 사항은 &lt;a href=&quot;#boolean-link-language-generator-expression&quot;&gt;관련 부울 표현식 &lt;/a&gt; &lt;code&gt;$&amp;lt;LINK_LANGUAGE:language&amp;gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27f05c3c94f03b483977b0e209ec559e4250e598" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_NAME&quot;&gt;&lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그에 의해 지정되며 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그에 지정된 컴파일러 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 후자를 지정 하려면 &lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_NAME&quot;&gt; &lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt; &lt;/a&gt; 특성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="80207255ffe73e66b68b9d238e7cd72770bb3ea4" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_NAME&quot;&gt;&lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정되며 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정된 컴파일러 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_NAME&quot;&gt; &lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt; 의&lt;/a&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="983ac1d533bc79681c02cfe13202d7d12cf22639" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그에 의해 지정되며 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그에 지정된 컴파일러 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="692998fa3b519166e20bddc1a2d4cb1d79d14a36" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정되며 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정된 컴파일러 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="91e5486ef25a6e2ae4fdb6aa80033b958196cd6e" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;code&gt;COMPILE_PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정되며 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정된 컴파일러 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;code&gt;COMPILE_PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="18974999f3b1fb52c494554dcc1fc1da5b48504a" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정되며 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정된 컴파일러 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="b20221775e9dbaa8b74542d5033862ee28cb0c62" translate="yes" xml:space="preserve">
          <source>The list contains all commands for which help may be obtained by using the &lt;code&gt;--help-command&lt;/code&gt; option followed by a command name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">이 목록에는 &lt;code&gt;--help-command&lt;/code&gt; 옵션과 명령 이름 을 사용하여 도움말을 얻을 수있는 모든 명령이 포함되어 있습니다 . 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="c91cfc8f1046f406689231c3f0c1c7d047f93589" translate="yes" xml:space="preserve">
          <source>The list contains all manuals for which help may be obtained by using the &lt;code&gt;--help-manual&lt;/code&gt; option followed by a manual name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">이 목록에는 &lt;code&gt;--help-manual&lt;/code&gt; 옵션과 수동 이름 을 사용하여 도움을 얻을 수있는 모든 설명서가 포함되어 있습니다 . 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="ac947f560d8fa2746db08c981fc12b947911df61" translate="yes" xml:space="preserve">
          <source>The list contains all modules for which help may be obtained by using the &lt;code&gt;--help-module&lt;/code&gt; option followed by a module name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">이 목록에는 &lt;code&gt;--help-module&lt;/code&gt; 옵션과 모듈 이름 을 사용하여 도움말을 얻을 수있는 모든 모듈이 포함되어 있습니다 . 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="8ece94a4ba64c7e174e226d433b228ae0efdcc75" translate="yes" xml:space="preserve">
          <source>The list contains all policies for which help may be obtained by using the &lt;code&gt;--help-policy&lt;/code&gt; option followed by a policy name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">이 목록에는 &lt;code&gt;--help-policy&lt;/code&gt; 옵션 다음에 정책 이름 을 사용하여 도움말을 얻을 수있는 모든 정책이 포함되어 있습니다 . 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="9de77fdd97fa13ac556227133dcef245ddf70ce5" translate="yes" xml:space="preserve">
          <source>The list contains all properties for which help may be obtained by using the &lt;code&gt;--help-property&lt;/code&gt; option followed by a property name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">이 목록에는 &lt;code&gt;--help-property&lt;/code&gt; 옵션과 속성 이름 을 사용하여 도움말을 얻을 수있는 모든 속성이 포함되어 있습니다 . 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="debcca7b4116a7b6c3caa4ac17d9621521a04095" translate="yes" xml:space="preserve">
          <source>The list contains all variables for which help may be obtained by using the &lt;code&gt;--help-variable&lt;/code&gt; option followed by a variable name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">이 목록에는 &lt;code&gt;--help-variable&lt;/code&gt; 옵션과 변수 이름 을 사용하여 도움말을 얻을 수있는 모든 변수가 포함됩니다 . 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="1fa82080282107c238f6247ca5941013c0d8955e" translate="yes" xml:space="preserve">
          <source>The list is reported in dashboard submissions.</source>
          <target state="translated">이 목록은 대시 보드 제출에보고됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6ef684097965a32f5e520844e4e1fabcc16107" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;dirs...&lt;/code&gt; given to &lt;code&gt;DIRECTORY&lt;/code&gt; and an install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">목록 &lt;code&gt;dirs...&lt;/code&gt; 주어진 &lt;code&gt;DIRECTORY&lt;/code&gt; 와 같이 주어진 설치 대상 &lt;code&gt;DESTINATION&lt;/code&gt; 의 인수는 구문과 함께 &quot;발전기 표현을&quot;사용할 수 있습니다 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44772c0ed1fd639f46c3fa100c9b451cc72c1ed2" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;files...&lt;/code&gt; given to &lt;code&gt;FILES&lt;/code&gt; or &lt;code&gt;PROGRAMS&lt;/code&gt; may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. However, if any item begins in a generator expression it must evaluate to a full path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65edfe6f991d315640a7c43196b52fec7bd9ad9" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;files...&lt;/code&gt; given to &lt;code&gt;FILES&lt;/code&gt; or &lt;code&gt;PROGRAMS&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. However, if any item begins in a generator expression it must evaluate to a full path.</source>
          <target state="translated">&lt;code&gt;FILES&lt;/code&gt; 또는 &lt;code&gt;PROGRAMS&lt;/code&gt; 에 제공된 &lt;code&gt;files...&lt;/code&gt; 목록은 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 그러나 항목이 생성기 표현식에서 시작되면 전체 경로로 평가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6ad21660e014ccbaf54a074709ed54eef4f1f31b" translate="yes" xml:space="preserve">
          <source>The list of component to install.</source>
          <target state="translated">설치할 구성 요소 목록.</target>
        </trans-unit>
        <trans-unit id="10cbc92ba535c22dfb71f77dde24f54829b32761" translate="yes" xml:space="preserve">
          <source>The list of features in this property are a subset of the features listed in the &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variables.</source>
          <target state="translated">이 속성의 기능 목록은 &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 변수에 나열된 기능의 하위 집합입니다 .</target>
        </trans-unit>
        <trans-unit id="8ac4fe94c40246d9ced84c58d469e39c59d6c546" translate="yes" xml:space="preserve">
          <source>The list of features in this property are a subset of the features listed in the &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">이 특성의 기능 목록은 &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 변수에 나열된 기능의 서브 세트입니다 .</target>
        </trans-unit>
        <trans-unit id="d692ff2433be0587c17848648b17252fbb07a0ed" translate="yes" xml:space="preserve">
          <source>The list of files which &amp;ldquo;isCMake&amp;rdquo; set to true are part of the cmake installation.</source>
          <target state="translated">&amp;ldquo;isCMake&amp;rdquo;가 true로 설정된 파일 목록은 cmake 설치의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="d0a85a4881d90962f11ad36e353d437651f0a379" translate="yes" xml:space="preserve">
          <source>The list of files witch &amp;ldquo;isTemporary&amp;rdquo; set to true are part of the build directory and will not survive the build directory getting cleaned out.</source>
          <target state="translated">&quot;isTemporary&quot;스위치를 true로 설정 한 파일 목록은 빌드 디렉토리의 일부이며 정리 된 빌드 디렉토리에서 살아남지 않습니다.</target>
        </trans-unit>
        <trans-unit id="12bafc9ced88df9e9697b1c7bb6108e1ae9bd462" translate="yes" xml:space="preserve">
          <source>The list of header files is used to generate a header file named &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; which is used to generate the precompiled header file (&lt;code&gt;.pch&lt;/code&gt;, &lt;code&gt;.gch&lt;/code&gt;, &lt;code&gt;.pchi&lt;/code&gt;) artifact. The &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; header file will be force included (&lt;code&gt;-include&lt;/code&gt; for GCC, &lt;code&gt;/FI&lt;/code&gt; for MSVC) to all source files, so sources do not need to have &lt;code&gt;#include &quot;pch.h&quot;&lt;/code&gt;.</source>
          <target state="translated">헤더 파일 목록은 미리 컴파일 된 헤더 파일 ( &lt;code&gt;.pch&lt;/code&gt; , &lt;code&gt;.gch&lt;/code&gt; , &lt;code&gt;.pchi&lt;/code&gt; ) 아티팩트 를 생성하는 데 사용되는 &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; 라는 헤더 파일을 생성하는 데 사용됩니다 . &lt;code&gt;cmake_pch.h|xx&lt;/code&gt; 헤더 파일 (포함 힘이 될 것입니다 &lt;code&gt;-include&lt;/code&gt; GCC에 대한 &lt;code&gt;/FI&lt;/code&gt; 소스를 가질 필요가 없습니다, 모든 소스 파일에 MSVC에 대한) &lt;code&gt;#include &quot;pch.h&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6587e99a16e03de557066dada9c1363a777af60" translate="yes" xml:space="preserve">
          <source>The list of resource IDs and number of slots from each ID allocated to each group for a given resource type. This variable consists of a series of pairs, each pair separated by a semicolon, and with the two items in the pair separated by a comma. The first item in each pair is &lt;code&gt;id:&lt;/code&gt; followed by the ID of a resource of type &lt;code&gt;&amp;lt;resource-type&amp;gt;&lt;/code&gt;, and the second item is &lt;code&gt;slots:&lt;/code&gt; followed by the number of slots from that resource allocated to the given group. For example:</source>
          <target state="translated">주어진 리소스 유형에 대해 각 그룹에 할당 된 각 ID의 리소스 ID 및 슬롯 수 목록입니다. 이 변수는 세미콜론으로 구분 된 각 쌍과 쉼표로 구분 된 쌍의 두 항목으로 구성된 일련의 쌍으로 구성됩니다. 각 쌍의 첫 번째 항목은 &lt;code&gt;id:&lt;/code&gt; 다음에 &lt;code&gt;&amp;lt;resource-type&amp;gt;&lt;/code&gt; 유형의 리소스 ID &lt;code&gt;slots:&lt;/code&gt; 두 번째 항목은 slots : 그 뒤에 주어진 그룹에 할당 된 해당 리소스의 슬롯 수입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="f3a36cb4eda13ad699bc24bca3ccd11f92989eb3" translate="yes" xml:space="preserve">
          <source>The list of resource types allocated to each group, with each item separated by a comma. &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; is a number from zero to &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; minus one. &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;&lt;/code&gt; is defined for each &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; in this range. For example:</source>
          <target state="translated">쉼표로 구분 된 각 항목과 함께 각 그룹에 할당 된 리소스 유형 목록입니다. &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; 은 0에서 &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; 에서 1을 뺀 숫자입니다 . &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;&lt;/code&gt; 은이 범위의 각 &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; 에 대해 정의됩니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="a994de45b34394cd195dc630061f5602f292603c" translate="yes" xml:space="preserve">
          <source>The list subcommands &lt;code&gt;APPEND&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;FILTER&lt;/code&gt;, &lt;code&gt;PREPEND&lt;/code&gt;, &lt;code&gt;POP_BACK&lt;/code&gt;, &lt;code&gt;POP_FRONT&lt;/code&gt;, &lt;code&gt;REMOVE_AT&lt;/code&gt;, &lt;code&gt;REMOVE_ITEM&lt;/code&gt;, &lt;code&gt;REMOVE_DUPLICATES&lt;/code&gt;, &lt;code&gt;REVERSE&lt;/code&gt; and &lt;code&gt;SORT&lt;/code&gt; may create new values for the list within the current CMake variable scope. Similar to the &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command, the LIST command creates new variable values in the current scope, even if the list itself is actually defined in a parent scope. To propagate the results of these operations upwards, use &lt;a href=&quot;set#command:set&quot; id=&quot;index-1-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;PARENT_SCOPE&lt;/code&gt;, &lt;a href=&quot;set#command:set&quot; id=&quot;index-2-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;CACHE INTERNAL&lt;/code&gt;, or some other means of value propagation.</source>
          <target state="translated">리스트 부속 명령 &lt;code&gt;APPEND&lt;/code&gt; , &lt;code&gt;INSERT&lt;/code&gt; , &lt;code&gt;FILTER&lt;/code&gt; , &lt;code&gt;PREPEND&lt;/code&gt; , &lt;code&gt;POP_BACK&lt;/code&gt; , &lt;code&gt;POP_FRONT&lt;/code&gt; , &lt;code&gt;REMOVE_AT&lt;/code&gt; , &lt;code&gt;REMOVE_ITEM&lt;/code&gt; , &lt;code&gt;REMOVE_DUPLICATES&lt;/code&gt; , &lt;code&gt;REVERSE&lt;/code&gt; 및 &lt;code&gt;SORT&lt;/code&gt; 는 현재 CMake 변수 범위 내에서 목록의 새 값을 작성할 수 있습니다. &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt; 명령과 유사하게 LIST 명령은 목록 자체가 실제로 상위 범위에 정의되어 있어도 현재 범위에 새 변수 값을 작성합니다. 이러한 연산 결과를 위쪽으로 전파하려면 &lt;a href=&quot;set#command:set&quot; id=&quot;index-1-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; 와 함께 사용 하고 &lt;a href=&quot;set#command:set&quot; id=&quot;index-2-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;와 &lt;code&gt;CACHE INTERNAL&lt;/code&gt; , 또는 값 전파의 다른 수단.</target>
        </trans-unit>
        <trans-unit id="009cfce0d2f5674508b9c08b112f32628076958c" translate="yes" xml:space="preserve">
          <source>The loadable module file (e.g. &lt;code&gt;.dll&lt;/code&gt; or &lt;code&gt;.so&lt;/code&gt;) of a module library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-5-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;MODULE&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;MODULE&lt;/code&gt; 옵션 과 함께 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-5-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 모듈 라이브러리 대상 의로드 가능한 모듈 파일 (예 : &lt;code&gt;.dll&lt;/code&gt; 또는 &lt;code&gt;.so&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="0c549a8d45905d6133251ddaea8047709468d4da" translate="yes" xml:space="preserve">
          <source>The loaded environment will not survive past the end of the calling process. Do not use this module in project code (&lt;code&gt;CMakeLists.txt&lt;/code&gt; files) to load a compiler environment; it will not be available during the build. Instead load the environment manually before running CMake or using the generated build system.</source>
          <target state="translated">로드 된 환경은 호출 프로세스가 끝난 후에도 지속되지 않습니다. 컴파일러 환경을로드하기 위해 프로젝트 코드 ( &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일) 에서이 모듈을 사용하지 마십시오 . 빌드 중에는 사용할 수 없습니다. 대신 CMake를 실행하거나 생성 된 빌드 시스템을 사용하기 전에 환경을 수동으로로드하십시오.</target>
        </trans-unit>
        <trans-unit id="5c2c12ea686019734eb961386aa09699d7197f29" translate="yes" xml:space="preserve">
          <source>The local option takes precedence over this variable.</source>
          <target state="translated">로컬 옵션이이 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="9caf93e9f677baef4383a82ff6e9d520667210ca" translate="yes" xml:space="preserve">
          <source>The location of a library called &lt;code&gt;&amp;lt;lib_name&amp;gt;&lt;/code&gt; for use with MPI.</source>
          <target state="translated">MPI와 함께 사용하기위한 &lt;code&gt;&amp;lt;lib_name&amp;gt;&lt;/code&gt; 이라는 라이브러리의 위치입니다 .</target>
        </trans-unit>
        <trans-unit id="683382c26145fbc52b488c275f48cfd38b656950" translate="yes" xml:space="preserve">
          <source>The location of the XCTest Framework.</source>
          <target state="translated">XCTest Framework의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="c5841b9cf264645584c3df9c8f2ba73ed4014abb" translate="yes" xml:space="preserve">
          <source>The location of the jar file so that you can include it.</source>
          <target state="translated">jar 파일의 위치로이를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d1c7d7d9a705e2da3fbe1e70809cf394c21ab6a" translate="yes" xml:space="preserve">
          <source>The logging output during population can be quite verbose, making the configure stage quite noisy. This cache option (&lt;code&gt;ON&lt;/code&gt; by default) hides all population output unless an error is encountered. If experiencing problems with hung downloads, temporarily switching this option off may help diagnose which content population is causing the issue.</source>
          <target state="translated">채우기 중 로깅 출력은 매우 장황 할 수 있으므로 구성 단계가 시끄 럽습니다. 이 캐시 옵션 ( 기본적으로 &lt;code&gt;ON&lt;/code&gt; )은 오류가 발생하지 않는 한 모든 채우기 출력을 숨 깁니다. 중단 된 다운로드에 문제가있는 경우이 옵션을 일시적으로 끄면 문제를 일으키는 컨텐츠 인구를 진단하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6229b83bfac70060e36abec55cc40a55fc41af0e" translate="yes" xml:space="preserve">
          <source>The logical name of executable and library targets does not have to correspond to the physical file names built. Consider using the &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt;&lt;code&gt;OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target property to create two targets with the same physical name while keeping logical names distinct. Custom targets must simply have globally unique names (unless one uses the global property &lt;a href=&quot;../prop_gbl/allow_duplicate_custom_targets#prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot; id=&quot;index-0-prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot;&gt;&lt;code&gt;ALLOW_DUPLICATE_CUSTOM_TARGETS&lt;/code&gt;&lt;/a&gt; with a Makefiles generator).</source>
          <target state="translated">실행 파일 및 라이브러리 대상의 논리적 이름은 작성된 실제 파일 이름과 일치하지 않아도됩니다. 사용을 고려 &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt; &lt;code&gt;OUTPUT_NAME&lt;/code&gt; 의&lt;/a&gt; 고유 한 논리 이름을 유지하면서 동일한 물리적 이름을 가진 두 개의 대상을 작성할 대상 속성을. 사용자 정의 대상은 글로벌 고유 이름을 가져야합니다 (글로벌 특성 &lt;a href=&quot;../prop_gbl/allow_duplicate_custom_targets#prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot; id=&quot;index-0-prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot;&gt; &lt;code&gt;ALLOW_DUPLICATE_CUSTOM_TARGETS&lt;/code&gt; &lt;/a&gt; 를 Makefile 생성기와 함께 사용하지 않는 한 ).</target>
        </trans-unit>
        <trans-unit id="3c3d0b2897abea141d8e9f6274641dae72d3ccfe" translate="yes" xml:space="preserve">
          <source>The low level module command to use. Currently supported implementations are the Lua based Lmod and TCL based EnvironmentModules.</source>
          <target state="translated">사용할 저수준 모듈 명령입니다. 현재 지원되는 구현은 Lua 기반 Lmod 및 TCL 기반 EnvironmentModules입니다.</target>
        </trans-unit>
        <trans-unit id="c3b4300a74f47a8c072c54fbb4b3616598819612" translate="yes" xml:space="preserve">
          <source>The macro defines the following variables:</source>
          <target state="translated">이 매크로는 다음 변수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2e16df74b441432c8e1cabac63d76e390a3f4d2d" translate="yes" xml:space="preserve">
          <source>The macro invocation is case-insensitive. A macro defined as</source>
          <target state="translated">매크로 호출은 대소 문자를 구분하지 않습니다. 로 정의 된 매크로</target>
        </trans-unit>
        <trans-unit id="d6c89de410121242df0245cc214e16d8ae9341a3" translate="yes" xml:space="preserve">
          <source>The macros provided by &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-1-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; are intended to be invoked at install time rather than at configure time, because they depend on the listed targets already existing at the time they are invoked. If they are invoked at configure time, the targets haven&amp;rsquo;t been built yet, and the commands will fail.</source>
          <target state="translated">&lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-1-module:BundleUtilities&quot;&gt; &lt;code&gt;BundleUtilities&lt;/code&gt; 에서&lt;/a&gt; 제공하는 매크로 는 호출 할 때 이미 존재하는 나열된 대상에 의존하기 때문에 구성 시간이 아닌 설치시 호출되도록되어 있습니다. 구성시 호출되면 대상이 아직 빌드되지 않았으며 명령이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="0b12c278e844902bc70825d1f990ece0e00b19f5" translate="yes" xml:space="preserve">
          <source>The macros provided by &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-1-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; are intended to be invoked at install time rather than at configure time, because they depend on the listed targets already existing at the time they are invoked. If they are invoked at configure time, the targets haven't been built yet, and the commands will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577774d5f7eb9657a182d6aa83933693a33db6b8" translate="yes" xml:space="preserve">
          <source>The macros provided by this module were once intended for use by cross-compiling toolchain files when CMake was not able to automatically detect the compiler identification. Since the introduction of this module, CMake&amp;rsquo;s compiler identification capabilities have improved and can now be taught to recognize any compiler. Furthermore, the suite of information CMake detects from a compiler is now too extensive to be provided by toolchain files using these macros.</source>
          <target state="translated">CMake가 컴파일러 식별을 자동으로 감지 할 수 없을 때이 모듈에서 제공 한 매크로는 한 번 크로스 컴파일 툴체인 파일에서 사용하기위한 것입니다. 이 모듈이 도입 된 이후 CMake의 컴파일러 식별 기능이 향상되었으며 이제 모든 컴파일러를 인식하도록 교육 할 수 있습니다. 또한 CMake가 컴파일러에서 감지하는 일련의 정보는 이제 이러한 매크로를 사용하여 툴체인 파일에서 제공하기에는 너무 광범위합니다.</target>
        </trans-unit>
        <trans-unit id="9486e04388b81a2ed5f7f27c01d13009dbba5439" translate="yes" xml:space="preserve">
          <source>The macros provided by this module were once intended for use by cross-compiling toolchain files when CMake was not able to automatically detect the compiler identification. Since the introduction of this module, CMake's compiler identification capabilities have improved and can now be taught to recognize any compiler. Furthermore, the suite of information CMake detects from a compiler is now too extensive to be provided by toolchain files using these macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d522051f7991452c49d298c3a984e76b0148bc" translate="yes" xml:space="preserve">
          <source>The main advantage to using this variable is to make a log level persist between CMake runs. Setting it as a cache variable will ensure that subsequent CMake runs will continue to use the chosen log level.</source>
          <target state="translated">이 변수를 사용하는 주요 이점은 CMake 실행간에 로그 수준을 유지하는 것입니다. 이를 캐시 변수로 설정하면 후속 CMake 실행에서 선택한 로그 수준을 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f298b4a6ce2c0901484026c037df64c760795436" translate="yes" xml:space="preserve">
          <source>The main interesting messages that project users might be interested in. Ideally these should be concise, no more than a single line, but still informative.</source>
          <target state="translated">프로젝트 사용자가 관심을 가질만한 흥미로운 주요 메시지는 이상적으로는 간결해야하며 한 줄 이상이어야하지만 여전히 유익합니다.</target>
        </trans-unit>
        <trans-unit id="444e9b7abcb928866f448d3fbdf79dd410bfa953" translate="yes" xml:space="preserve">
          <source>The main view of the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-6-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; user interface can be used to edit existing variables.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-6-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 사용자 인터페이스 의 기본보기를 사용하여 기존 변수를 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="814a73cdd9e2fc9a653dcd7f77d37a071b700550" translate="yes" xml:space="preserve">
          <source>The major version number in integer form.</source>
          <target state="translated">정수 형식의 주 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="2237319d061a68ea158e250e495f56ccf8f9f650" translate="yes" xml:space="preserve">
          <source>The major version of GTK2</source>
          <target state="translated">GTK2의 주요 버전</target>
        </trans-unit>
        <trans-unit id="de73324432eebe976bb875eb87d08650e007147f" translate="yes" xml:space="preserve">
          <source>The major version of Qt found.</source>
          <target state="translated">Qt의 주요 버전이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="656ec97bc426c74c800cce67ffef1906fe2c87d3" translate="yes" xml:space="preserve">
          <source>The major version of cuda as reported by nvcc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf10b8d809d9335970ddd512f819035519df74b" translate="yes" xml:space="preserve">
          <source>The major version of lzma</source>
          <target state="translated">lzma의 주요 버전</target>
        </trans-unit>
        <trans-unit id="e64b1e14999840daa84f6de2415d392a6ada9c1c" translate="yes" xml:space="preserve">
          <source>The major version of the CUDA Toolkit.</source>
          <target state="translated">CUDA 툴킷의 주요 버전.</target>
        </trans-unit>
        <trans-unit id="3de8c47e71618f49f7da153972eaf8e059afb820" translate="yes" xml:space="preserve">
          <source>The major version of the package found, if any.</source>
          <target state="translated">발견 된 패키지의 주 버전입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="7cc293eff8e79e3986d5b645e09adb33ef844685" translate="yes" xml:space="preserve">
          <source>The major version of the top level project.</source>
          <target state="translated">최상위 프로젝트의 주요 버전.</target>
        </trans-unit>
        <trans-unit id="f4d831da7f1c5d9c52ab5b100a23aff004fd1a5f" translate="yes" xml:space="preserve">
          <source>The mapping of the release names and the version of Matlab is performed by defining pairs (name, version). The variable &lt;a href=&quot;#variable:MATLAB_ADDITIONAL_VERSIONS&quot; id=&quot;index-0-variable:MATLAB_ADDITIONAL_VERSIONS&quot;&gt;&lt;code&gt;MATLAB_ADDITIONAL_VERSIONS&lt;/code&gt;&lt;/a&gt; may be provided before the call to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; in order to handle additional versions.</source>
          <target state="translated">릴리스 이름과 Matlab 버전의 매핑은 쌍 (이름, 버전)을 정의하여 수행됩니다. 추가 버전을 처리하기 위해 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 를 호출하기 전에 변수 &lt;a href=&quot;#variable:MATLAB_ADDITIONAL_VERSIONS&quot; id=&quot;index-0-variable:MATLAB_ADDITIONAL_VERSIONS&quot;&gt; &lt;code&gt;MATLAB_ADDITIONAL_VERSIONS&lt;/code&gt; 를&lt;/a&gt; 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd6854a55dc70d3b17698aa8eec4dfe070fbe440" translate="yes" xml:space="preserve">
          <source>The mathematical expression must be given as a string (i.e. enclosed in double quotation marks). An example is &lt;code&gt;&quot;5 * (10 + 13)&quot;&lt;/code&gt;. Supported operators are &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;(...)&lt;/code&gt;; they have the same meaning as in C code.</source>
          <target state="translated">수학 표현식은 문자열로 제공해야합니다 (즉, 큰 따옴표로 묶어야 함). 예는 &lt;code&gt;&quot;5 * (10 + 13)&quot;&lt;/code&gt; 입니다. 지원되는 연산자는 &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt; , &lt;code&gt;~&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 및 &lt;code&gt;(...)&lt;/code&gt; ; 그것들은 C 코드에서와 같은 의미를 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="52e681f7ad4969baed5276f81adb11fd847f9774" translate="yes" xml:space="preserve">
          <source>The maximum number of concurrent processes to use when building. If &lt;code&gt;&amp;lt;jobs&amp;gt;&lt;/code&gt; is omitted the native build tool&amp;rsquo;s default number is used.</source>
          <target state="translated">빌드 할 때 사용할 최대 동시 프로세스 수입니다. 경우 &lt;code&gt;&amp;lt;jobs&amp;gt;&lt;/code&gt; 생략 기본 빌드 도구의 기본 번호가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3f609e6e4a429666e2a921284a695b50acf49442" translate="yes" xml:space="preserve">
          <source>The maximum number of concurrent processes to use when building. If &lt;code&gt;&amp;lt;jobs&amp;gt;&lt;/code&gt; is omitted the native build tool's default number is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3f03aaf0f5aa8b004f1216451be62a576d8622" translate="yes" xml:space="preserve">
          <source>The maximum number of errors in a single build step which will be detected. After this, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command will truncate the output. Defaults to 50.</source>
          <target state="translated">단일 빌드 단계에서 감지되는 최대 오류 수입니다. 그런 다음 &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령은 출력을 자릅니다. 기본값은 50입니다.</target>
        </trans-unit>
        <trans-unit id="9d4abd791ec4ef732f02378f6beef064afbe683c" translate="yes" xml:space="preserve">
          <source>The maximum number of warnings in a single build step which will be detected. After this, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command will truncate the output. Defaults to 50.</source>
          <target state="translated">단일 빌드 단계에서 감지되는 최대 경고 수입니다. 그런 다음 &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령은 출력을 자릅니다. 기본값은 50입니다.</target>
        </trans-unit>
        <trans-unit id="c4dd7ff4b6de068b8ddcb130b1e1d9282cff78c8" translate="yes" xml:space="preserve">
          <source>The members are:</source>
          <target state="translated">회원은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="f2bcac00aaf7452adc0a3cdd236c640b0b211a5e" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;cache&lt;/code&gt; objects are:</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; 객체와 관련된 멤버 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="89f190ae54ea7bbdcd29365c5a8a26a077581c08" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;cmakeFiles&lt;/code&gt; objects are:</source>
          <target state="translated">&lt;code&gt;cmakeFiles&lt;/code&gt; 객체와 관련된 멤버 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9fe87a1e2d0931c71c2125de94215e978bd24d67" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;codemodel&lt;/code&gt; objects are:</source>
          <target state="translated">&lt;code&gt;codemodel&lt;/code&gt; 객체와 관련된 멤버 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d3614ac7958c44fc75a276a27b000c2e22c7516b" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;toolchains&lt;/code&gt; objects are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1792c6629e57c460d4813faeca99c278a798ef" translate="yes" xml:space="preserve">
          <source>The message may &amp;ndash; depending on the type of the original request &amp;ndash; contain values.</source>
          <target state="translated">원래 요청의 유형에 따라 메시지에 값이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22dc890998888058f8c11f9d033b3decd3480b9c" translate="yes" xml:space="preserve">
          <source>The minimum required version of &lt;code&gt;bison&lt;/code&gt; can be specified using the standard CMake syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(BISON 2.1.3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">표준 CMake 구문을 사용하여 &lt;code&gt;bison&lt;/code&gt; 의 최소 ​​필수 버전을 지정할 수 있습니다 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(BISON 2.1.3)&lt;/code&gt; &lt;/a&gt; 예 : find_package (BISON 2.1.3)) .</target>
        </trans-unit>
        <trans-unit id="a85d991d8e1a572eae2c3491c5c9cfc377f01a4e" translate="yes" xml:space="preserve">
          <source>The minimum required version of Java can be specified using the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; syntax, e.g.</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 구문을 사용하여 Java의 최소 필수 버전을 지정할 수 있습니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="189fd75d99fa7caa9b9e33b25aad11c00954fb60" translate="yes" xml:space="preserve">
          <source>The minimum required version of Perl can be specified using the standard syntax, e.g. find_package(PerlLibs 6.0)</source>
          <target state="translated">표준 구문을 사용하여 Perl의 최소 필수 버전을 지정할 수 있습니다 (예 : find_package (PerlLibs 6.0)).</target>
        </trans-unit>
        <trans-unit id="6f99317656839f142506d303554f0e9fdfad9946" translate="yes" xml:space="preserve">
          <source>The minimum required version of Ruby can be specified using the standard syntax, e.g.</source>
          <target state="translated">Ruby의 최소 필수 버전은 표준 구문을 사용하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1602e7ddc541618ce75450a8c9e30582fb6e4179" translate="yes" xml:space="preserve">
          <source>The minimum required version of Ruby can be specified using the standard syntax, e.g. find_package(Ruby 1.8)</source>
          <target state="translated">표준 구문을 사용하여 Ruby의 최소 필수 버전을 지정할 수 있습니다 (예 : find_package (Ruby 1.8)).</target>
        </trans-unit>
        <trans-unit id="abd8f6a11bed00665aabe4196cd5e61530a3d414" translate="yes" xml:space="preserve">
          <source>The minimum required version of SWIG can be specified using the standard syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(SWIG 1.1)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">표준 구문을 사용하여 SWIG의 최소 필수 버전을 지정할 수 있습니다 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(SWIG 1.1)&lt;/code&gt; &lt;/a&gt; 예 : find_package (SWIG 1.1)).</target>
        </trans-unit>
        <trans-unit id="3d3988367ee15273593a3cf1c70a976cc8485446" translate="yes" xml:space="preserve">
          <source>The minimum required version of Subversion can be specified using the standard syntax, e.g. &lt;code&gt;find_package(Subversion 1.4)&lt;/code&gt;.</source>
          <target state="translated">표준 구문을 사용하여 Subversion의 최소 필수 버전을 지정할 수 있습니다 &lt;code&gt;find_package(Subversion 1.4)&lt;/code&gt; 예 : find_package (Subversion 1.4)) .</target>
        </trans-unit>
        <trans-unit id="a28e782ab537f27786212e867bedb52e207f9fd4" translate="yes" xml:space="preserve">
          <source>The minimum required version of flex can be specified using the standard syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(FLEX 2.5.13)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">표준 구문을 사용하여 flex의 최소 필수 버전을 지정할 수 있습니다 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package(FLEX 2.5.13)&lt;/code&gt; &lt;/a&gt; 예 : find_package (FLEX 2.5.13)</target>
        </trans-unit>
        <trans-unit id="0583fd23f39802fb496fc3e1ed217807c5bb6a3d" translate="yes" xml:space="preserve">
          <source>The minor version number in integer form.</source>
          <target state="translated">정수 형식의 부 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="7836eb3547ae7dd59234f475b826886a0ade9cd3" translate="yes" xml:space="preserve">
          <source>The minor version of GTK2</source>
          <target state="translated">GTK2의 부 버전</target>
        </trans-unit>
        <trans-unit id="ddc767e8b11008c5dc7437c5cf9dcae4b094a41b" translate="yes" xml:space="preserve">
          <source>The minor version of Qt found.</source>
          <target state="translated">부 버전의 Qt가 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="6649905529df4f59b07233073ba53185f732d2ad" translate="yes" xml:space="preserve">
          <source>The minor version of lzma</source>
          <target state="translated">lzma의 부 버전</target>
        </trans-unit>
        <trans-unit id="eb01cde13285ba53f88e43f112b697071cd23966" translate="yes" xml:space="preserve">
          <source>The minor version of the CUDA Toolkit.</source>
          <target state="translated">CUDA 툴킷의 부 버전.</target>
        </trans-unit>
        <trans-unit id="99696d8c3125bcff589eff6336cd232718c2368e" translate="yes" xml:space="preserve">
          <source>The minor version of the package found, if any.</source>
          <target state="translated">발견 된 패키지의 부 버전입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="d6c5bacd1a4bcdf8e23537691f736550c32a211b" translate="yes" xml:space="preserve">
          <source>The minor version of the top level project.</source>
          <target state="translated">최상위 프로젝트의 부 버전입니다.</target>
        </trans-unit>
        <trans-unit id="f6dea59eb33fdedaab6ac7e2045257413e7aa179" translate="yes" xml:space="preserve">
          <source>The minor version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9728687705fe327352e996e5f86658830a8b22" translate="yes" xml:space="preserve">
          <source>The module also defines several commands to control the behavior of the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt;&lt;code&gt;CPack IFW Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모듈은 또한 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt; &lt;code&gt;CPack IFW Generator&lt;/code&gt; &lt;/a&gt; 의 동작을 제어하는 ​​여러 명령을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="24c2e65ec7a127859443a6f8d2f90e73a8e40353" translate="yes" xml:space="preserve">
          <source>The module also defines several commands to control the behavior of the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt;&lt;code&gt;CPack IFW Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d277a1f123c3e698ee452cf0cc10406ffb2625" translate="yes" xml:space="preserve">
          <source>The module also defines several commands to control the behavior of the CPack &lt;code&gt;IFW&lt;/code&gt; generator.</source>
          <target state="translated">이 모듈은 또한 CPack &lt;code&gt;IFW&lt;/code&gt; 생성기 의 동작을 제어하기위한 여러 명령을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="c268c3dac2abf37e9941724d40fd6fe0ef6e5413" translate="yes" xml:space="preserve">
          <source>The module automatically creates a &lt;code&gt;BUILD_TESTING&lt;/code&gt; option that selects whether to enable testing support (&lt;code&gt;ON&lt;/code&gt; by default). After including the module, use code like:</source>
          <target state="translated">모듈은 테스트 지원 활성화 여부를 선택 하는 &lt;code&gt;BUILD_TESTING&lt;/code&gt; 옵션을 자동으로 생성합니다 ( 기본적으로 &lt;code&gt;ON&lt;/code&gt; ). 모듈을 포함시킨 후 다음과 같은 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c2625e3b9376e9e00c5e73ad882000ab3ded0080" translate="yes" xml:space="preserve">
          <source>The module can perform some advanced feature detections upon explicit request.</source>
          <target state="translated">모듈은 명시적인 요청에 따라 일부 고급 기능 감지를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="099733639d9f01d31c13d4fd4ebf41911c6981bc" translate="yes" xml:space="preserve">
          <source>The module defines &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; similar command to configure file templates prepared in QtIFW/SDK/Creator style.</source>
          <target state="translated">이 모듈은 QtIFW / SDK / Creator 스타일로 준비된 파일 템플릿을 구성하기 위해 &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt; 비슷한 명령을 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="704a7786f2e3d042e6e586e957bcf31669361906" translate="yes" xml:space="preserve">
          <source>The module defines &lt;code&gt;IMPORTED&lt;/code&gt; targets for Doxygen and each component found. These can be used as part of custom commands, etc. and should be preferred over old-style (and now deprecated) variables like &lt;code&gt;DOXYGEN_EXECUTABLE&lt;/code&gt;. The following import targets are defined if their corresponding executable could be found (the component import targets will only be defined if that component was requested):</source>
          <target state="translated">이 모듈은 Doxygen 및 발견 된 각 구성 요소에 대한 &lt;code&gt;IMPORTED&lt;/code&gt; 대상을 정의합니다 . 이것들은 커스텀 명령 등의 일부로 사용될 수 있으며 &lt;code&gt;DOXYGEN_EXECUTABLE&lt;/code&gt; 과 같은 구식 ( 더 이상 사용되지 않는) 변수보다 선호되어야합니다 . 해당 실행 파일을 찾을 수있는 경우 다음 가져 오기 대상이 정의됩니다 (구성 요소 가져 오기 대상은 해당 구성 요소가 요청 된 경우에만 정의 됨).</target>
        </trans-unit>
        <trans-unit id="0a0a3bf546a81ba756292a683a782b157ed8b43c" translate="yes" xml:space="preserve">
          <source>The module defines the following &lt;code&gt;IMPORTED&lt;/code&gt; targets (when &lt;a href=&quot;../prop_gbl/cmake_role#prop_gbl:CMAKE_ROLE&quot; id=&quot;index-0-prop_gbl:CMAKE_ROLE&quot;&gt;&lt;code&gt;CMAKE_ROLE&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROJECT&lt;/code&gt;):</source>
          <target state="translated">이 모듈은 다음과 같은 &lt;code&gt;IMPORTED&lt;/code&gt; 대상을 정의합니다 ( &lt;a href=&quot;../prop_gbl/cmake_role#prop_gbl:CMAKE_ROLE&quot; id=&quot;index-0-prop_gbl:CMAKE_ROLE&quot;&gt; &lt;code&gt;CMAKE_ROLE&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;PROJECT&lt;/code&gt; 인 경우 ).</target>
        </trans-unit>
        <trans-unit id="a531a447ac0ef68c33387534b50847e3239fc608" translate="yes" xml:space="preserve">
          <source>The module defines the following &lt;code&gt;IMPORTED&lt;/code&gt; targets:</source>
          <target state="translated">모듈은 다음 &lt;code&gt;IMPORTED&lt;/code&gt; 대상을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="baa37d670194d6ec721db39c5782bbdfdba9b55f" translate="yes" xml:space="preserve">
          <source>The module defines the following commands:</source>
          <target state="translated">모듈은 다음 명령을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="cf88c0fc1e85025aee9056c781e66efa090defb3" translate="yes" xml:space="preserve">
          <source>The module defines the following variables:</source>
          <target state="translated">모듈은 다음 변수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dd2d39c9a1313029253f30df5aba314b6abcd414" translate="yes" xml:space="preserve">
          <source>The module documentation consists of:</source>
          <target state="translated">모듈 문서는 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="4aae0b20b367976af83ab838c6b602c9c8da2e52" translate="yes" xml:space="preserve">
          <source>The module exposes some of CMake's implementation details directly to C++ translation units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9d7286692b61919f5e4079c9ce01cdc5304870" translate="yes" xml:space="preserve">
          <source>The module exposes the components &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;MPICXX&lt;/code&gt; and &lt;code&gt;Fortran&lt;/code&gt;. Each of these controls the various MPI languages to search for. The difference between &lt;code&gt;CXX&lt;/code&gt; and &lt;code&gt;MPICXX&lt;/code&gt; is that &lt;code&gt;CXX&lt;/code&gt; refers to the MPI C API being usable from C++, whereas &lt;code&gt;MPICXX&lt;/code&gt; refers to the MPI-2 C++ API that was removed again in MPI-3.</source>
          <target state="translated">이 모듈은 구성 요소 &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CXX&lt;/code&gt; , &lt;code&gt;MPICXX&lt;/code&gt; 및 &lt;code&gt;Fortran&lt;/code&gt; 을 노출합니다 . 이들 각각은 검색 할 다양한 MPI 언어를 제어합니다. 차이 &lt;code&gt;CXX&lt;/code&gt; 및 &lt;code&gt;MPICXX&lt;/code&gt; 는 점이다 &lt;code&gt;CXX&lt;/code&gt; 는 반면, C ++에서 사용할 인 MPI C의 API를 의미 &lt;code&gt;MPICXX&lt;/code&gt; 은 MPI-3에서 다시 제거 하였다 MPI-2 C ++ API를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="fd8ada8d02c76f774006e6df6ae5f22bea570804" translate="yes" xml:space="preserve">
          <source>The module exposes the components &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, and &lt;code&gt;Fortran&lt;/code&gt;. Each of these controls the various languages to search OpenMP support for.</source>
          <target state="translated">이 모듈은 구성 요소 &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CXX&lt;/code&gt; 및 &lt;code&gt;Fortran&lt;/code&gt; 을 노출합니다 . 이들 각각은 OpenMP 지원을 검색 할 다양한 언어를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="a5657978aa50fbfcefe865d16a1f789fff6ef7ec" translate="yes" xml:space="preserve">
          <source>The module provides &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d93e1f01c41617b1541bd9d9efc107dd8c0fcf" translate="yes" xml:space="preserve">
          <source>The module provides a &lt;code&gt;BISON_TARGET&lt;/code&gt; macro which generates BISON output. In CMake 3.13 and below the macro would generate a custom command that runs &lt;code&gt;bison&lt;/code&gt; in the source directory. CMake 3.14 and later prefer to run it in the build directory and use &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; of its &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; invocation. This ensures that any implicitly generated file is written to the build tree rather than the source.</source>
          <target state="translated">이 모듈은 BISON 출력을 생성 하는 &lt;code&gt;BISON_TARGET&lt;/code&gt; 매크로를 제공합니다 . CMake 3.13 이하에서 매크로는 소스 디렉토리에서 &lt;code&gt;bison&lt;/code&gt; 를 실행하는 사용자 정의 명령을 생성합니다 . CMake 3.14 이후 빌드 디렉토리에 실행하고 사용하는 것을 선호 &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; 을&lt;/a&gt; 은 AS &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 자사의 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 호출. 이것은 내재적으로 생성 된 파일이 소스가 아닌 빌드 트리에 기록되도록합니다.</target>
        </trans-unit>
        <trans-unit id="1d7281374f61deec801fc9e993e1e108fb733ce5" translate="yes" xml:space="preserve">
          <source>The module provides a &lt;code&gt;FLEX_TARGET&lt;/code&gt; macro which generates FLEX output. In CMake 3.16 and below the macro would generate a custom command that runs &lt;code&gt;flex&lt;/code&gt; in the current source directory. CMake 3.17 and later prefer to run it in the build directory and use &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; of its &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; invocation. This ensures that any implicitly generated file is written relative to the build tree rather than the source tree, unless the generated file is provided as absolute path.</source>
          <target state="translated">모듈은 FLEX 출력을 생성 하는 &lt;code&gt;FLEX_TARGET&lt;/code&gt; 매크로를 제공합니다 . CMake 3.16 이하에서 매크로는 현재 소스 디렉터리에서 &lt;code&gt;flex&lt;/code&gt; 를 실행하는 사용자 지정 명령을 생성합니다 . CMake 3.17 이후 빌드 디렉토리에 실행하고 사용하는 것을 선호 &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; 을&lt;/a&gt; 은 AS &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 자사의 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 호출. 이렇게하면 생성 된 파일이 절대 경로로 제공되지 않는 한 암시 적으로 생성 된 파일이 소스 트리가 아닌 빌드 트리를 기준으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="6915cfd3176e03893de6334a79b5dc89b3846dda" translate="yes" xml:space="preserve">
          <source>The module provides a &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; option which controls what submodules to initialize and update. Starting with CMake 3.16, explicitly setting &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; to an empty string means no submodules will be initialized or updated.</source>
          <target state="translated">모듈은 초기화 및 업데이트 할 하위 모듈을 제어 하는 &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; 옵션을 제공합니다 . CMake 3.16부터 &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; 를 빈 문자열로 명시 적으로 설정 하면 하위 모듈이 초기화되거나 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5af2ace897924944d849e09b56e4511e719e8c77" translate="yes" xml:space="preserve">
          <source>The module sub-command and arguments to execute as if they were passed directly to the module command in your shell environment.</source>
          <target state="translated">마치 쉘 환경에서 모듈 명령으로 직접 전달 된 것처럼 실행할 모듈 부속 명령 및 인수.</target>
        </trans-unit>
        <trans-unit id="259162abdc8502204de79e93a5d266f3ebe32598" translate="yes" xml:space="preserve">
          <source>The module supports the following components:</source>
          <target state="translated">이 모듈은 다음 구성 요소를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d1559ddd1f0e092720cf833d89daa667a33e03db" translate="yes" xml:space="preserve">
          <source>The module will also define three cache variables:</source>
          <target state="translated">모듈은 또한 세 가지 캐시 변수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b7f3dbb19c0062f71b5a7f0421bcf87257a90bf8" translate="yes" xml:space="preserve">
          <source>The module will also define two cache variables:</source>
          <target state="translated">이 모듈은 또한 두 가지 캐시 변수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="320120221ea7d1084aa37e1f31692ee989abaa55" translate="yes" xml:space="preserve">
          <source>The module will also try to provide the OpenACC version variables:</source>
          <target state="translated">모듈은 OpenACC 버전 변수를 제공하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="def309404f771d7f935e51c9c1adf4b665910405" translate="yes" xml:space="preserve">
          <source>The module will also try to provide the OpenMP version variables:</source>
          <target state="translated">모듈은 OpenMP 버전 변수를 제공하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="4dfcfdc06bb23f5f20bd9839a8632809cc91c36f" translate="yes" xml:space="preserve">
          <source>The module will optionally accept the &lt;code&gt;COMPONENTS&lt;/code&gt; argument. If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, then the find module will default to finding only the &lt;code&gt;HDF5&lt;/code&gt; C library. If one or more &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, the module will attempt to find the language bindings for the specified components. The only valid components are &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;HL&lt;/code&gt;, and &lt;code&gt;Fortran_HL&lt;/code&gt;. If the &lt;code&gt;COMPONENTS&lt;/code&gt; argument is not given, the module will attempt to find only the C bindings.</source>
          <target state="translated">모듈은 선택적으로 &lt;code&gt;COMPONENTS&lt;/code&gt; 인수를 승인합니다 . &lt;code&gt;COMPONENTS&lt;/code&gt; 를 지정 하지 않으면 찾기 모듈은 기본적으로 &lt;code&gt;HDF5&lt;/code&gt; C 라이브러리 만 찾도록 설정합니다 . 하나 이상의 &lt;code&gt;COMPONENTS&lt;/code&gt; 가 지정된 경우, 모듈은 지정된 구성 요소에 대한 언어 바인딩을 찾으려고 시도합니다. 유효한 구성 요소는 &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CXX&lt;/code&gt; , &lt;code&gt;Fortran&lt;/code&gt; , &lt;code&gt;HL&lt;/code&gt; 및 &lt;code&gt;Fortran_HL&lt;/code&gt; 뿐입니다 . 경우 &lt;code&gt;COMPONENTS&lt;/code&gt; 인수가 주어지지 모듈 만 C 바인딩을 찾기 위해 시도합니다.</target>
        </trans-unit>
        <trans-unit id="bf1be9e67a69c006f955b378d87618f75b176b06" translate="yes" xml:space="preserve">
          <source>The module will optionally accept the &lt;code&gt;COMPONENTS&lt;/code&gt; argument. If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, then the find module will default to finding only the &lt;code&gt;HDF5&lt;/code&gt; C library. If one or more &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, the module will attempt to find the language bindings for the specified components. The valid components are &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;HL&lt;/code&gt;. &lt;code&gt;HL&lt;/code&gt; refers to the &quot;high-level&quot; HDF5 functions for C and Fortran. If the &lt;code&gt;COMPONENTS&lt;/code&gt; argument is not given, the module will attempt to find only the C bindings. For example, to use Fortran HDF5 and HDF5-HL functions, do: &lt;code&gt;find_package(HDF5 COMPONENTS Fortran HL)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b656a3b6cc4a1757a4f590352d44e034dc4311" translate="yes" xml:space="preserve">
          <source>The module will optionally accept the &lt;code&gt;COMPONENTS&lt;/code&gt; argument. If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, then the find module will default to finding only the &lt;code&gt;HDF5&lt;/code&gt; C library. If one or more &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, the module will attempt to find the language bindings for the specified components. The valid components are &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;HL&lt;/code&gt;. &lt;code&gt;HL&lt;/code&gt; refers to the &amp;ldquo;high-level&amp;rdquo; HDF5 functions for C and Fortran. If the &lt;code&gt;COMPONENTS&lt;/code&gt; argument is not given, the module will attempt to find only the C bindings. For example, to use Fortran HDF5 and HDF5-HL functions, do: &lt;code&gt;find_package(HDF5 COMPONENTS Fortran HL)&lt;/code&gt;.</source>
          <target state="translated">모듈은 선택적으로 &lt;code&gt;COMPONENTS&lt;/code&gt; 인수를 허용합니다 . &lt;code&gt;COMPONENTS&lt;/code&gt; 가 지정 되지 않은 경우 find 모듈은 기본적으로 &lt;code&gt;HDF5&lt;/code&gt; C 라이브러리 만 찾습니다 . 하나 이상의 &lt;code&gt;COMPONENTS&lt;/code&gt; 가 지정된 경우 모듈은 지정된 구성 요소에 대한 언어 바인딩을 찾으려고 시도합니다. 유효한 구성 요소는 &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CXX&lt;/code&gt; , &lt;code&gt;Fortran&lt;/code&gt; , &lt;code&gt;HL&lt;/code&gt; 입니다. &lt;code&gt;HL&lt;/code&gt; 은 C 및 Fortran에 대한 &quot;고수준&quot;HDF5 기능을 나타냅니다. 경우 &lt;code&gt;COMPONENTS&lt;/code&gt; 인수가 주어지지 모듈 만 C 바인딩을 찾기 위해 시도합니다. 예를 들어 Fortran HDF5 및 HDF5-HL 함수를 사용하려면 다음을 수행하십시오. &lt;code&gt;find_package(HDF5 COMPONENTS Fortran HL)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3959e35da2c261dc90e88387cb2cd28efac080ee" translate="yes" xml:space="preserve">
          <source>The module's approach effectively provides a header file with CMake, thus tying the version of the header to the version of CMake. Many projects found that the &lt;a href=&quot;../module/writecompilerdetectionheader#module:WriteCompilerDetectionHeader&quot; id=&quot;index-1-module:WriteCompilerDetectionHeader&quot;&gt;&lt;code&gt;WriteCompilerDetectionHeader&lt;/code&gt;&lt;/a&gt; was best used by manually generating its header locally with a recent version of CMake and then bundling it with the project source so that it could be used with older CMake versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609d7f9e93163d1f10fb3ce41df1e30c4a5aa629" translate="yes" xml:space="preserve">
          <source>The modules listed here are part of the CMake distribution. Projects may provide further modules; their location(s) can be specified in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">여기에 나열된 모듈은 CMake 배포의 일부입니다. 프로젝트는 추가 모듈을 제공 할 수 있습니다. &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt; 변수 에 위치를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5bb1ce194c3bf90b4a0bd86856fe2232e2231bb0" translate="yes" xml:space="preserve">
          <source>The more modern approach is to behave as much like &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file packages&lt;/a&gt; files as possible, by providing &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt;. This has the advantage of propagating &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;Transitive Usage Requirements&lt;/a&gt; to consumers.</source>
          <target state="translated">보다 현대적인 접근 방식은 &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;가져온 target&lt;/a&gt; 을 제공하여 &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;구성 파일 패키지&lt;/a&gt; 파일과 최대한 유사하게 작동하는 것 입니다. 이는 소비자에게 &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;전이성 사용 요구 사항&lt;/a&gt; 을 전파하는 이점이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57218b9c5b44963a48fc3e03b88cef26f8d477e1" translate="yes" xml:space="preserve">
          <source>The most basic project is an executable built from source code files. For simple projects, a three line &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is all that is required. This will be the starting point for our tutorial. Create a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file in the &lt;code&gt;Step1&lt;/code&gt; directory that looks like:</source>
          <target state="translated">가장 기본적인 프로젝트는 소스 코드 파일에서 빌드 된 실행 파일입니다. 간단한 프로젝트의 경우 3 줄 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 만 있으면 됩니다. 이것이 우리 튜토리얼의 시작점이 될 것입니다. &lt;code&gt;Step1&lt;/code&gt; 디렉터리에 다음과 같은 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f724e210002c75a61e8f7fa3873be605477cc929" translate="yes" xml:space="preserve">
          <source>The most convenient way for a third-party to provide library binaries for use with CMake is to provide &lt;a href=&quot;../../manual/cmake-packages.7#config-file-packages&quot;&gt;Config-file Packages&lt;/a&gt;. These packages are text files shipped with the library which instruct CMake how to use the library binaries and associated headers, helper tools and CMake macros provided by the library.</source>
          <target state="translated">타사에서 CMake와 함께 사용할 라이브러리 바이너리를 제공하는 가장 편리한 방법은 &lt;a href=&quot;../../manual/cmake-packages.7#config-file-packages&quot;&gt;Config-file Packages&lt;/a&gt; 를 제공하는 것 입니다. 이러한 패키지는 라이브러리와 함께 제공되는 텍스트 파일로, 라이브러리에서 제공하는 라이브러리 바이너리 및 관련 헤더, 도우미 도구 및 CMake 매크로를 사용하는 방법을 CMake에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="20963a1917b21713e8e9aee035c81b8a48bf7cbe" translate="yes" xml:space="preserve">
          <source>The most important properties are:</source>
          <target state="translated">가장 중요한 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e22b45ca9f371af68608d1037fb1e4ed6871944c" translate="yes" xml:space="preserve">
          <source>The most recently seen &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command from the top level CMakeLists.txt would be &lt;code&gt;project(Second ...)&lt;/code&gt;, so this will print:</source>
          <target state="translated">최상위 CMakeLists.txt에서 가장 최근에 본 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령은 &lt;code&gt;project(Second ...)&lt;/code&gt; 이므로 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="f6c5d842c821d863f8b597742e699eb8d22e411b" translate="yes" xml:space="preserve">
          <source>The most recently seen &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command from the top level CMakeLists.txt would be &lt;code&gt;project(Second)&lt;/code&gt;, so this will print:</source>
          <target state="translated">최상위 CMakeLists.txt에서 가장 최근에 본 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령은 &lt;code&gt;project(Second)&lt;/code&gt; 이므로 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="b422482c06ddb09017b5d47afa4512ffed5d6a2c" translate="yes" xml:space="preserve">
          <source>The name of a valid C-identifier which is set to a unique per-file value during unity builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504a0fb43e79d6be324fcee7a49f2fa7b7bf214a" translate="yes" xml:space="preserve">
          <source>The name of a variable into which the result of a command will be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31b0ec300496c25eb19f25a6b2b0560bfb23920" translate="yes" xml:space="preserve">
          <source>The name of the CPU CMake is building for.</source>
          <target state="translated">구축중인 CPU CMake의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="66d50986ef173e9726714caf993f637076fba01a" translate="yes" xml:space="preserve">
          <source>The name of the CPU CMake is running on.</source>
          <target state="translated">CPU CMake의 이름이 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="0c85a7da49b9359cc9c431f86aa143bd8bb1080e" translate="yes" xml:space="preserve">
          <source>The name of the CPack binary configuration file. This file is the CPack configuration generated by the CPack module for binary installers. Defaults to &lt;code&gt;CPackConfig.cmake&lt;/code&gt;.</source>
          <target state="translated">CPack 바이너리 구성 파일의 이름입니다. 이 파일은 이진 설치 프로그램을 위해 CPack 모듈에서 생성 한 CPack 구성입니다. 기본값은 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca1853d6f8248e03779889087d355f273adea747" translate="yes" xml:space="preserve">
          <source>The name of the CPack source configuration file. This file is the CPack configuration generated by the CPack module for source installers. Defaults to &lt;code&gt;CPackSourceConfig.cmake&lt;/code&gt;.</source>
          <target state="translated">CPack 소스 구성 파일의 이름입니다. 이 파일은 소스 설치 프로그램을 위해 CPack 모듈에서 생성 한 CPack 구성입니다. 기본값은 &lt;code&gt;CPackSourceConfig.cmake&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="beeacf14b68abb3be3153f06fb63474747bb9f18" translate="yes" xml:space="preserve">
          <source>The name of the function that was called.</source>
          <target state="translated">호출 된 함수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="989bb535c25f2dc9b2a197ac0a274077ae26498b" translate="yes" xml:space="preserve">
          <source>The name of the generator that is being used to generate the build files. (e.g. &lt;code&gt;Unix Makefiles&lt;/code&gt;, &lt;code&gt;Ninja&lt;/code&gt;, etc.)</source>
          <target state="translated">빌드 파일을 생성하는 데 사용되는 생성기의 이름입니다. (예 : &lt;code&gt;Unix Makefiles&lt;/code&gt; , &lt;code&gt;Ninja&lt;/code&gt; 등)</target>
        </trans-unit>
        <trans-unit id="e303a744f0e75170f361572d7bc74a5c67c8e730" translate="yes" xml:space="preserve">
          <source>The name of the global &lt;code&gt;autogen&lt;/code&gt; target can be changed by setting &lt;a href=&quot;cmake_global_autogen_target_name#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cmake_global_autogen_target_name#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt; &lt;/a&gt; 을 설정 하여 글로벌 &lt;code&gt;autogen&lt;/code&gt; 대상 의 이름을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="180e10fe730075f8cf20f33eb6e823a112cba895" translate="yes" xml:space="preserve">
          <source>The name of the global &lt;code&gt;autorcc&lt;/code&gt; target can be changed by setting &lt;a href=&quot;cmake_global_autorcc_target_name#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">세계의 이름 &lt;code&gt;autorcc&lt;/code&gt; 의 목표 설정을 변경할 수 있습니다 &lt;a href=&quot;cmake_global_autorcc_target_name#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2f44df70abd0a1a5045ae1496c1f13b52074e9b" translate="yes" xml:space="preserve">
          <source>The name of the library that has &lt;code&gt;dlopen&lt;/code&gt; and &lt;code&gt;dlclose&lt;/code&gt; in it, usually &lt;code&gt;-ldl&lt;/code&gt; on most UNIX machines.</source>
          <target state="translated">한 라이브러리의 이름 &lt;code&gt;dlopen&lt;/code&gt; 과 &lt;code&gt;dlclose&lt;/code&gt; 일반적으로, 거기에 &lt;code&gt;-ldl&lt;/code&gt; 대부분의 유닉스 시스템에서.</target>
        </trans-unit>
        <trans-unit id="cac6dee17146c3bbed2cc72f18679ad90a8aa7be" translate="yes" xml:space="preserve">
          <source>The name of the operating system for which CMake is to build. See the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable for the OS version.</source>
          <target state="translated">CMake를 빌드 할 운영 체제의 이름입니다. OS 버전 은 &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt; 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8d5cf4ca4d9699099795d32ff3c0ccf9513f6e8" translate="yes" xml:space="preserve">
          <source>The name of the package (or application). If not specified, it defaults to the project name.</source>
          <target state="translated">패키지 (또는 응용 프로그램)의 이름입니다. 지정하지 않으면 프로젝트 이름이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="ead5f342705a939e4698dad9eff6e5a3cc5a7534" translate="yes" xml:space="preserve">
          <source>The name of the package file to generate, not including the extension. For example, &lt;code&gt;cmake-2.6.1-Linux-i686&lt;/code&gt;. The default value is:</source>
          <target state="translated">확장명을 포함하지 않고 생성 할 패키지 파일의 이름입니다. 예를 들어, &lt;code&gt;cmake-2.6.1-Linux-i686&lt;/code&gt; 입니다. 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="96df09805ace44bb616a4882f0716f27a449e5a7" translate="yes" xml:space="preserve">
          <source>The name of the package vendor. (e.g., &quot;Kitware&quot;). The default is &quot;Humanity&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea645e97b13d1eb72241195f136ea1b9f47d621" translate="yes" xml:space="preserve">
          <source>The name of the package vendor. (e.g., &amp;ldquo;Kitware&amp;rdquo;). The default is &amp;ldquo;Humanity&amp;rdquo;.</source>
          <target state="translated">패키지 공급 업체의 이름입니다. (예 :&amp;ldquo;Kitware&amp;rdquo;). 기본 설정은 &quot;Humanity&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="7e3498a277d2ab7672c2d7231e42fd864c4f63ac" translate="yes" xml:space="preserve">
          <source>The name of the package version file must match that of the package configuration file but has either &lt;code&gt;-version&lt;/code&gt; or &lt;code&gt;Version&lt;/code&gt; appended to the name before the &lt;code&gt;.cmake&lt;/code&gt; extension. For example, the files:</source>
          <target state="translated">패키지 버전 파일 이름은 패키지 구성 파일 이름과 일치해야하지만 &lt;code&gt;.cmake&lt;/code&gt; 확장자 앞에 이름에 &lt;code&gt;-version&lt;/code&gt; 또는 &lt;code&gt;Version&lt;/code&gt; 이 추가되어 있어야 합니다. 예를 들어 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3c09b2097b61bd91f3fc42935a1ad75a56a41a31" translate="yes" xml:space="preserve">
          <source>The name of the source package. For example &lt;code&gt;cmake-2.6.1&lt;/code&gt;.</source>
          <target state="translated">소스 패키지의 이름 예를 들어 &lt;code&gt;cmake-2.6.1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8acafaa3b40572ac641f330c2ef1155462ee2591" translate="yes" xml:space="preserve">
          <source>The name of the top level project.</source>
          <target state="translated">최상위 프로젝트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="371d45d6b821a234aa08c66c1b558b7d015de274" translate="yes" xml:space="preserve">
          <source>The name to be displayed for a component.</source>
          <target state="translated">구성 요소에 표시 될 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d070d5953e04c49aecc5dafa6e5f03f4138d725f" translate="yes" xml:space="preserve">
          <source>The named &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;.</source>
          <target state="translated">명명 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 등의 커맨드에 의해 생성되어 있어야 &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 및 아니어야 &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS 타겟&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7f8fcea0268c49988f9e4da47401deef075aee2" translate="yes" xml:space="preserve">
          <source>The named &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;. If policy &lt;a href=&quot;../policy/cmp0079#policy:CMP0079&quot; id=&quot;index-0-policy:CMP0079&quot;&gt;&lt;code&gt;CMP0079&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt; then the target must have been created in the current directory. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">명명 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 등의 커맨드에 의해 생성되어 있어야 &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 및 아니어야 &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS 타겟&lt;/a&gt; . 정책 &lt;a href=&quot;../policy/cmp0079#policy:CMP0079&quot; id=&quot;index-0-policy:CMP0079&quot;&gt; &lt;code&gt;CMP0079&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;NEW&lt;/code&gt; 로 설정되어 있지 않으면 대상이 현재 디렉토리에 작성되어 있어야합니다. 호출 된 순서대로 동일한 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 추가 항목에 대한 반복 호출 .</target>
        </trans-unit>
        <trans-unit id="382138c63570c4631739f2ad28d5960d9575041b" translate="yes" xml:space="preserve">
          <source>The named directory will be set as the current working directory of the child processes.</source>
          <target state="translated">명명 된 디렉토리는 하위 프로세스의 현재 작업 디렉토리로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e32cab0d2872a502365476f57f9461e7805a02cb" translate="yes" xml:space="preserve">
          <source>The named target must be created by &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; within the project or as an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED library&lt;/a&gt;. If it is created within the project an ordering dependency will automatically be added in the build system to make sure the named library target is up-to-date before the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; links.</source>
          <target state="translated">명명 된 대상은 프로젝트 내 &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED library&lt;/a&gt; 로 작성해야합니다 . 프로젝트 내에서 생성 된 경우 순서 지정 종속성이 빌드 시스템에 자동으로 추가되어 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 링크 전에 명명 된 라이브러리 대상이 최신 상태인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="4f2040f1dd982dd650372dc66094c3270c62012b" translate="yes" xml:space="preserve">
          <source>The next change is to make building and linking the MathFunctions library conditional. To do this we change the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to look like the following:</source>
          <target state="translated">다음 변경 사항은 MathFunctions 라이브러리를 조건부로 빌드하고 연결하는 것입니다. 이를 위해 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 의 끝을 다음과 같이 변경합니다.</target>
        </trans-unit>
        <trans-unit id="8f3dfeaaa1d301f446636d699854e2ecaed11099" translate="yes" xml:space="preserve">
          <source>The next step is to add the appropriate commands to the &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; file to build the MakeTable executable and then run it as part of the build process. A few commands are needed to accomplish this.</source>
          <target state="translated">다음 단계는 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 파일에 적절한 명령을 추가하여 MakeTable 실행 파일을 빌드 한 다음 빌드 프로세스의 일부로 실행하는 것입니다. 이를 수행하려면 몇 가지 명령이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="fc8a7e4eb4bcfdc78cc46aa991ef7030e89b0c38" translate="yes" xml:space="preserve">
          <source>The next step is to add the necessary information so that other CMake projects can use our project, be it from a build directory, a local install or when packaged.</source>
          <target state="translated">다음 단계는 빌드 디렉터리, 로컬 설치 또는 패키징 된 경우 다른 CMake 프로젝트에서 프로젝트를 사용할 수 있도록 필요한 정보를 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d43a9a610772dd434be55cf8ea093efe0dde1439" translate="yes" xml:space="preserve">
          <source>The next step is to build the project in the usual manner and then run the &lt;a href=&quot;../../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; executable. To build a binary distribution, from the binary directory run:</source>
          <target state="translated">다음 단계는 일반적인 방식으로 프로젝트를 빌드 한 다음 &lt;a href=&quot;../../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt; 실행 파일 을 실행하는 것 입니다. 바이너리 배포를 빌드하려면 바이너리 디렉토리에서 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f325512ae8ef38b7297ce7ea3fe5edf00f230a06" translate="yes" xml:space="preserve">
          <source>The next test makes use of the &lt;a href=&quot;../../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; test property to verify that the output of the test contains certain strings. In this case, verifying that the usage message is printed when an incorrect number of arguments are provided.</source>
          <target state="translated">다음 테스트에서는 &lt;a href=&quot;../../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt; &lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; &lt;/a&gt; 테스트 속성을 사용하여 테스트 출력에 특정 문자열이 포함되어 있는지 확인합니다. 이 경우 잘못된 수의 인수가 제공 될 때 사용법 메시지가 인쇄되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e31ab7d6a41645762914172c44c79b27451c3bf8" translate="yes" xml:space="preserve">
          <source>The number of lines to include as context which follow an error message by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. The default is 10.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령에 의해 오류 메시지 뒤에 나오는 컨텍스트로 포함 할 행 수입니다 . 기본값은 10입니다.</target>
        </trans-unit>
        <trans-unit id="1f75e4d7c9c4c5b1706c64ae13b92638d13a1f1e" translate="yes" xml:space="preserve">
          <source>The number of lines to include as context which precede an error message by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. The default is 10.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령에 의해 오류 메시지 앞에 나오는 컨텍스트로 포함 할 행 수입니다 . 기본값은 10입니다.</target>
        </trans-unit>
        <trans-unit id="3f1a109c274de36bea70d4810bd01a938b5cb1f7" translate="yes" xml:space="preserve">
          <source>The number of matches with the last regular expression.</source>
          <target state="translated">마지막 정규식과 일치하는 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="00ebfd5d25f4978dd7e740aabcc7fb4a4ffe6e80" translate="yes" xml:space="preserve">
          <source>The number of parallel compile processes could be limited by defining pools with the global &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property and then specifying here the pool name.</source>
          <target state="translated">글로벌 &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt; 특성을 사용하여 풀을 정의한 후 여기에 풀 이름을 지정하여 병렬 컴파일 프로세스 수를 제한 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18c4fa36942b63230c1e419286411f7bd12cf5a5" translate="yes" xml:space="preserve">
          <source>The number of parallel link processes could be limited by defining pools with the global &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property and then specifying here the pool name.</source>
          <target state="translated">글로벌 &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; &lt;/a&gt; 특성을 사용하여 풀을 정의한 후 여기에 풀 이름을 지정하여 병렬 링크 프로세스 수를 제한 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="472479172cef569a0a4c9dcee9983feb201dcb41" translate="yes" xml:space="preserve">
          <source>The old-style library dependencies file does not take into account per-configuration names of libraries or the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">이전 스타일 라이브러리 종속성 파일은 라이브러리의 구성 별 이름 또는 &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt; 대상 특성 을 고려하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="74928f70369b2c3e061c4a65f690c3f1bf207391" translate="yes" xml:space="preserve">
          <source>The only recognized directory separator is a forward slash character &lt;code&gt;/&lt;/code&gt;. If this character is repeated, it is treated as a single directory separator. In other words, &lt;code&gt;/usr///////lib&lt;/code&gt; is the same as &lt;code&gt;/usr/lib&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cadbf27a1b47c16cb696a1f6b5d08b5eb8f6b10" translate="yes" xml:space="preserve">
          <source>The option KDE3_ENABLE_FINAL to enable all-in-one compilation is no longer supported.</source>
          <target state="translated">올인원 컴파일을 활성화하는 KDE3_ENABLE_FINAL 옵션은 더 이상 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1decfb88136e63861caaebfe357e2d218b3b482f" translate="yes" xml:space="preserve">
          <source>The option following &lt;code&gt;COMMAND_ERROR_IS_FATAL&lt;/code&gt; determines the behavior when an error is encountered:</source>
          <target state="translated">&lt;code&gt;COMMAND_ERROR_IS_FATAL&lt;/code&gt; 다음 옵션 은 오류 발생시 동작을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9733d3a1582e128032657a04d9331556d49996d8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the argument of the opening &lt;code&gt;if&lt;/code&gt; clause.</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 인수는 이전 버전과의 호환성을 위해서만 지원됩니다. 사용되는 경우 여는 &lt;code&gt;if&lt;/code&gt; 절의 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="efd7ba138781ab64e2a79c10500e9f87ce7e6fd0" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the argument of the opening &lt;code&gt;while&lt;/code&gt; clause.</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 인수는 이전 버전과의 호환성을 위해서만 지원됩니다. 사용되는 경우 여는 &lt;code&gt;while&lt;/code&gt; 절의 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bff2d7c035887f33175821c5754f26a7280040e4" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; may contain the following format specifiers:</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; 에는 다음과 같은 형식 지정자가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12356e2ea812685d4644befad273795b63bf4be7" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; may contain the following format specifiers:</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;format_string&amp;gt;&lt;/code&gt; 에는 다음 형식 지정자가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="470bf9c847620216dc5229a642208a92e321d8f4" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;foreach&lt;/code&gt; clause.</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; 인수는 이전 버전과의 호환성을 위해서만 지원됩니다. 사용되는 경우 여는 &lt;code&gt;foreach&lt;/code&gt; 절의 &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="169b2d5a829ec6621a94b974b94ff41cef135d64" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; keyword determines the type of message, which influences the way the message is handled:</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; 키워드는 메시지 처리 방식에 영향을주는 메시지 유형을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="828febdea1e147044923db7753986c59836d471f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; keyword determines the type of message:</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; 키워드는 메시지 유형을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a623b31437f0a3f20ce7763d1a3c85116964b624" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;function&lt;/code&gt; command.</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 인수는 이전 버전과의 호환성을 위해서만 지원됩니다. 사용되는 경우 열기 &lt;code&gt;function&lt;/code&gt; 명령 의 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="23e4273c4ee61416535ca928e1aff3ef594025c8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;macro&lt;/code&gt; command.</source>
          <target state="translated">선택적 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 인수는 이전 버전과의 호환성을 위해서만 지원됩니다. 사용되는 경우 시작 &lt;code&gt;macro&lt;/code&gt; 명령 의 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c537ec50996a887513542a6cd5ea983fd0dbe804" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;UTC&lt;/code&gt; flag requests the current date/time representation to be in Coordinated Universal Time (UTC) rather than local time.</source>
          <target state="translated">선택적 &lt;code&gt;UTC&lt;/code&gt; 플래그는 현재 날짜 / 시간 표현이 현지 시간이 아닌 UTC (협정 세계시)가되도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="530cefe29f7f34827121fd6ab5cc80dba858f885" translate="yes" xml:space="preserve">
          <source>The optional name of the remote. If this option is not specified, it defaults to &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">리모컨의 선택적 이름입니다. 이 옵션을 지정하지 않으면 기본값은 &lt;code&gt;origin&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dbc030680dac1e5576f7a0a32beac02271b1de9f" translate="yes" xml:space="preserve">
          <source>The options are:</source>
          <target state="translated">옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a2bfdecde870f0d23357e40c7eca9ad75e1fc1a" translate="yes" xml:space="preserve">
          <source>The options set on the &lt;code&gt;.qrc&lt;/code&gt; source file may override &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the target.</source>
          <target state="translated">&lt;code&gt;.qrc&lt;/code&gt; 소스 파일 에 설정된 옵션 은 대상에 설정된 &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; 를&lt;/a&gt; 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="798d46295b31c896c3f8ce628302c7357ebda37c" translate="yes" xml:space="preserve">
          <source>The options set on the &lt;code&gt;.ui&lt;/code&gt; source file may override &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the target.</source>
          <target state="translated">&lt;code&gt;.ui&lt;/code&gt; 소스 파일 에 설정된 옵션 은 대상에 설정된 &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; 를&lt;/a&gt; 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d971ac1b0c5f37f8e460ccb3501da715321c4cd5" translate="yes" xml:space="preserve">
          <source>The options set on the target may be overridden by &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the &lt;code&gt;.qrc&lt;/code&gt; source file.</source>
          <target state="translated">대상에 설정된 옵션 은 &lt;code&gt;.qrc&lt;/code&gt; 소스 파일 에 설정된 &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt; 로 대체 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6cc0304afae0ced519877f7bee242e20866124c" translate="yes" xml:space="preserve">
          <source>The options set on the target may be overridden by &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the &lt;code&gt;.ui&lt;/code&gt; source file.</source>
          <target state="translated">대상에 설정된 옵션 은 &lt;code&gt;.ui&lt;/code&gt; 소스 파일 에 설정된 &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; 로 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae09b903eea6453c2eb69e3797f35a009ef48d19" translate="yes" xml:space="preserve">
          <source>The options unique to this command are:</source>
          <target state="translated">이 명령에 고유 한 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b9344a83a9fd785e0a8087854a315258b87146d7" translate="yes" xml:space="preserve">
          <source>The order in this list is important, the first package type in the list is the least important, the last is the most important. the of a package can only be changed to higher types.</source>
          <target state="translated">이 목록의 순서는 중요합니다. 목록의 첫 번째 패키지 유형이 가장 중요하지 않으며 마지막 패키지가 가장 중요합니다. 패키지는 더 높은 유형으로 만 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a2558e2023e451f0b17577c9932a6714bf16c27" translate="yes" xml:space="preserve">
          <source>The order of entries in this list matters when several versions of Matlab are installed. The priority is set according to the ordering in this list.</source>
          <target state="translated">이 목록의 항목 순서는 여러 버전의 Matlab이 설치 될 때 중요합니다. 우선 순위는이 목록의 순서에 따라 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="746973ff5d125894f961763836e3586a5cf33390" translate="yes" xml:space="preserve">
          <source>The order of source files added to the target via commands like &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; will be preserved in the generated unity source files. This can be used to manually enforce a specific grouping based on the &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-2-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt; 와 같은 명령을 통해 타겟에 추가 된 소스 파일의 순서 는 생성 된 Unity 소스 파일에서 유지됩니다. &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-2-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt; &lt;/a&gt; 대상 속성을 기반으로 특정 그룹화를 수동으로 적용하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8fe0758bfcb1863e2f414905795d770159921d64" translate="yes" xml:space="preserve">
          <source>The original Xcode build system. This is the default when using Xcode 11.x or below.</source>
          <target state="translated">원래 Xcode 빌드 시스템. 이것은 Xcode 11.x 이하를 사용할 때의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="6128279f042f41ba41931ed71da9cc0adcda187a" translate="yes" xml:space="preserve">
          <source>The osgDB debug library</source>
          <target state="translated">osgDB 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="9e9e20aba67bd450375dd3c721f7e89300777037" translate="yes" xml:space="preserve">
          <source>The osgDB library</source>
          <target state="translated">osgDB 라이브러리</target>
        </trans-unit>
        <trans-unit id="b29f69cfac2eeeb3480c4ba9d0f053ce3b781bef" translate="yes" xml:space="preserve">
          <source>The other actions are meant for use by software developers writing scripts in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt;&lt;code&gt;CMake language&lt;/code&gt;&lt;/a&gt; to support their builds.</source>
          <target state="translated">다른 조치는 소프트웨어 개발자 가 빌드를 지원하기 위해 &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt; &lt;code&gt;CMake language&lt;/code&gt; &lt;/a&gt; 로 스크립트를 작성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7cb15e64be3792b1e82108da32207de467e0af61" translate="yes" xml:space="preserve">
          <source>The output can be limited to a list of keys by passing an array of key names to the &amp;ldquo;keys&amp;rdquo; optional field of the &amp;ldquo;cache&amp;rdquo; request.</source>
          <target state="translated">키 이름 배열을 &quot;캐시&quot;요청의 &quot;키&quot;옵션 필드에 전달하여 출력을 키 목록으로 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="583e8fbcd54e6c0597d7ee7064af66659654bda9" translate="yes" xml:space="preserve">
          <source>The output directory of the target being built has not been changed from its default (see &lt;a href=&quot;runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">빌드중인 대상의 출력 디렉토리가 기본값에서 변경되지 않았습니다 ( &lt;a href=&quot;runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="bc9921268cba50667716f2646758409485393b40" translate="yes" xml:space="preserve">
          <source>The output must match this regular expression for the test to pass.</source>
          <target state="translated">테스트가 통과하려면 출력이이 정규식과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="8d6421eb3ffd20c5fba83e6d66a86b792fa3b401" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;cmake --help&lt;/code&gt; includes a list of &lt;a href=&quot;../../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;generators&lt;/code&gt;&lt;/a&gt; available for the user to choose from. Note that generator names are case sensitive.</source>
          <target state="translated">&lt;code&gt;cmake --help&lt;/code&gt; 의 출력 에는 사용자가 선택할 수 있는 &lt;a href=&quot;../../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;generators&lt;/code&gt; &lt;/a&gt; 목록이 포함 되어 있습니다. 생성기 이름은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="e9d3d1ec004740ed8fffa959cd5e062150b2e2a7" translate="yes" xml:space="preserve">
          <source>The output will be duplicated, it will be sent into the configured variables and also on standard output or standard error.</source>
          <target state="translated">출력은 복제되고 구성된 변수와 표준 출력 또는 표준 오류로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="689be0ad0c03f9d7efa00c893004bb96db67e2e7" translate="yes" xml:space="preserve">
          <source>The parameters are as follows:</source>
          <target state="translated">매개 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c6c515ba4949cbf83040646f3dd241b77a22e584" translate="yes" xml:space="preserve">
          <source>The parameters for &lt;code&gt;ctest_start()&lt;/code&gt; can be issued in any order, with the exception that &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;binary&amp;gt;&lt;/code&gt; have to appear in that order with respect to each other. The following are all valid and equivalent:</source>
          <target state="translated">&lt;code&gt;ctest_start()&lt;/code&gt; 의 매개 변수 는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;binary&amp;gt;&lt;/code&gt; 가 서로 순서대로 표시되어야하는 것을 제외하고는 임의의 순서로 발행 될 수 있습니다 . 다음은 모두 유효하고 동일합니다.</target>
        </trans-unit>
        <trans-unit id="758db9a08f2adf51e1b7bab347adc42329480e58" translate="yes" xml:space="preserve">
          <source>The patch level in integer form.</source>
          <target state="translated">정수 형태의 패치 레벨.</target>
        </trans-unit>
        <trans-unit id="54e64612bd73e7ba013e0912635a1bb4d89bddba" translate="yes" xml:space="preserve">
          <source>The patch version of GTK2</source>
          <target state="translated">GTK2의 패치 버전</target>
        </trans-unit>
        <trans-unit id="98a1dd7d82bde9289306b3b2af87efff378d576e" translate="yes" xml:space="preserve">
          <source>The patch version of Qt found.</source>
          <target state="translated">Qt의 패치 버전이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="41770a98d9db696400ed6227ad5eb075df38a9b0" translate="yes" xml:space="preserve">
          <source>The patch version of lzma</source>
          <target state="translated">lzma의 패치 버전</target>
        </trans-unit>
        <trans-unit id="744e60f0a09c9a17bedd6b120884e6a7ae7c1a33" translate="yes" xml:space="preserve">
          <source>The patch version of the CUDA Toolkit.</source>
          <target state="translated">CUDA 툴킷의 패치 버전.</target>
        </trans-unit>
        <trans-unit id="747eaa7c9f651d4e6dd8203bce80cef6a0697048" translate="yes" xml:space="preserve">
          <source>The patch version of the package found, if any.</source>
          <target state="translated">발견 된 패키지의 패치 버전.</target>
        </trans-unit>
        <trans-unit id="a8754fbe5d9757d9cb26b779b6b7c88134d92bfe" translate="yes" xml:space="preserve">
          <source>The patch version of the top level project.</source>
          <target state="translated">최상위 프로젝트의 패치 버전.</target>
        </trans-unit>
        <trans-unit id="4deb15f398f5064cf94fcf53a8b03f4bb5a06a4a" translate="yes" xml:space="preserve">
          <source>The path entries in that target property should not be relative. High-level API should ensure that by adding either a source directory or a install directory prefix, as appropriate.</source>
          <target state="translated">해당 대상 속성의 경로 항목은 상대적이 아니어야합니다. 고급 API는 소스 디렉토리 또는 설치 디렉토리 접 두부를 적절하게 추가하여 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="cce8b9af08938313f29c6c6db20910eed3a1e33e" translate="yes" xml:space="preserve">
          <source>The path of library &lt;code&gt;Yy&lt;/code&gt; provided by the module &lt;code&gt;Xxx&lt;/code&gt;. Use this form when the module provides more than one library or where other modules may also provide a library of the same name. It is also appropriate to use this form as the result variable in a &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-2-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ea282a4a6fabe01829348237057c96a4eb66e7" translate="yes" xml:space="preserve">
          <source>The path of the Xxx library (as used with &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, for example).</source>
          <target state="translated">Xxx 라이브러리의 경로 &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 예 : find_library () 와 함께 사용 )</target>
        </trans-unit>
        <trans-unit id="761ef366dc5ca1ccea61b4db8b2dc0c7fc3a9b3c" translate="yes" xml:space="preserve">
          <source>The path of the Yy library that is part of the Xxx system. It may or may not be required to use Xxx.</source>
          <target state="translated">Xxx 시스템의 일부인 Yy 라이브러리의 경로입니다. Xxx를 사용해야 할 수도 있고 필요하지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcd8e07776d82cfffc915cae9721f535ddf3195a" translate="yes" xml:space="preserve">
          <source>The path of the library. Use this form only when the module provides a single library. It is appropriate to use this as the result variable in a &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8da2b58c40ec2a14a01e5c8d616edc50c326678" translate="yes" xml:space="preserve">
          <source>The path to mesa includes, should contain &lt;code&gt;gl_mangle.h&lt;/code&gt;. The mesa headers are copied to the specified output directory. This allows mangled mesa headers to override other GL headers by being added to the include directory path earlier.</source>
          <target state="translated">메사 경로에는 &lt;code&gt;gl_mangle.h&lt;/code&gt; 가 포함되어야합니다 . mesa 헤더가 지정된 출력 디렉토리에 복사됩니다. 이를 통해 맹 글링 된 mesa 헤더가 이전에 포함 디렉토리 경로에 추가되어 다른 GL 헤더를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="387e1a2ff1b90eb0b52ae8a871927f5c8eb52fd9" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;dot&lt;/code&gt; command. If projects need to refer to the &lt;code&gt;dot&lt;/code&gt; executable directly, they should use the &lt;code&gt;Doxygen::dot&lt;/code&gt; import target instead.</source>
          <target state="translated">&lt;code&gt;dot&lt;/code&gt; 명령 의 경로 입니다. 프로젝트가 &lt;code&gt;dot&lt;/code&gt; 실행 파일을 직접 참조해야하는 경우 대신 &lt;code&gt;Doxygen::dot&lt;/code&gt; 가져 오기 대상을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de99a1eb6e5044a959c716fad0908730594ca958" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;doxygen&lt;/code&gt; command. If projects need to refer to the &lt;code&gt;doxygen&lt;/code&gt; executable directly, they should use the &lt;code&gt;Doxygen::doxygen&lt;/code&gt; import target instead.</source>
          <target state="translated">&lt;code&gt;doxygen&lt;/code&gt; 명령 의 경로 입니다. 프로젝트가 &lt;code&gt;doxygen&lt;/code&gt; 실행 파일을 직접 참조해야하는 경우 대신 &lt;code&gt;Doxygen::doxygen&lt;/code&gt; 가져 오기 대상을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b6533fad4f716a61ee1cfc73705cf27e95c6d9e8" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit &lt;code&gt;include&lt;/code&gt; folder containing the header files required to compile a project linking against CUDA.</source>
          <target state="translated">CUDA 툴킷의 경로에는 CUDA에 대한 프로젝트 링크를 컴파일하는 데 필요한 헤더 파일이 &lt;code&gt;include&lt;/code&gt; 폴더가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5da3f67e845587ce332bdcbcb7b54850f5ff43f7" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit directory containing the nvvm directory and version.txt.</source>
          <target state="translated">nvvm 디렉토리 및 version.txt를 포함하는 CUDA 툴킷 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="05e537916643a4826a1ded9e96c9653c760135cc" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit directory including the target architecture when cross-compiling. When not cross-compiling this will be equivalent to the parent directory of &lt;code&gt;CUDAToolkit_BIN_DIR&lt;/code&gt;.</source>
          <target state="translated">크로스 컴파일시 대상 아키텍처를 포함하는 CUDA 툴킷 디렉토리 경로입니다. 크로스 컴파일하지 않을 때 이것은 &lt;code&gt;CUDAToolkit_BIN_DIR&lt;/code&gt; 의 부모 디렉토리와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="b2bcf9a9adc0cade2d29cd639f9cc9b99d1abd5e" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit library directory that contains the CUDA Runtime library &lt;code&gt;cudart&lt;/code&gt;.</source>
          <target state="translated">CUDA 런타임 라이브러리 &lt;code&gt;cudart&lt;/code&gt; 가 포함 된 CUDA 툴킷 라이브러리 디렉토리 경로 입니다.</target>
        </trans-unit>
        <trans-unit id="066b0cce790131582381094efc6dec890c200688" translate="yes" xml:space="preserve">
          <source>The path to the CUDA Toolkit library directory that contains the CUDA executable &lt;code&gt;nvcc&lt;/code&gt;.</source>
          <target state="translated">CUDA 실행 파일 &lt;code&gt;nvcc&lt;/code&gt; 가 포함 된 CUDA 툴킷 라이브러리 디렉토리 경로 입니다.</target>
        </trans-unit>
        <trans-unit id="fe3ae03aae022e709574e0cae0a00196086b3c88" translate="yes" xml:space="preserve">
          <source>The path to the NVIDIA CUDA compiler &lt;code&gt;nvcc&lt;/code&gt;. Note that this path may &lt;strong&gt;not&lt;/strong&gt; be the same as &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt;. &lt;code&gt;nvcc&lt;/code&gt; must be found to determine the CUDA Toolkit version as well as determining other features of the Toolkit. This variable is set for the convenience of modules that depend on this one.</source>
          <target state="translated">NVIDIA CUDA 컴파일러 &lt;code&gt;nvcc&lt;/code&gt; 의 경로 입니다. 이 경로는 &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; 와 동일 &lt;strong&gt;하지 않을&lt;/strong&gt; 수 있습니다 . CUDA Toolkit 버전을 확인하고 Toolkit의 다른 기능을 확인하려면 &lt;code&gt;nvcc&lt;/code&gt; 를 찾아야합니다. 이 변수는이 변수에 의존하는 모듈의 편의를 위해 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="493577ca08771db9b62de7507adda35cc36652e9" translate="yes" xml:space="preserve">
          <source>The path to the binary directory currently being processed.</source>
          <target state="translated">현재 처리중인 이진 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="726abc28200b23c910b2416902ded3cfc35fd748" translate="yes" xml:space="preserve">
          <source>The path to the compiler.</source>
          <target state="translated">컴파일러의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="7c66f4b6cf146974b8f0b5ed20369b72e9c50beb" translate="yes" xml:space="preserve">
          <source>The path to the directory containing the &lt;code&gt;dot&lt;/code&gt; executable as reported in &lt;code&gt;DOXYGEN_DOT_EXECUTABLE&lt;/code&gt;. The path may have forward slashes even on Windows and is not suitable for direct substitution into a &lt;code&gt;Doxyfile.in&lt;/code&gt; template. If you need this value, get the &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;Doxygen::dot&lt;/code&gt; target and use &lt;a href=&quot;../command/get_filename_component#command:get_filename_component&quot; id=&quot;index-0-command:get_filename_component&quot;&gt;&lt;code&gt;get_filename_component()&lt;/code&gt;&lt;/a&gt; to extract the directory part of that path. You may also want to consider using &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(TO_NATIVE_PATH)&lt;/code&gt;&lt;/a&gt; to prepare the path for a Doxygen configuration file.</source>
          <target state="translated">&lt;code&gt;DOXYGEN_DOT_EXECUTABLE&lt;/code&gt; 에보 고 된 &lt;code&gt;dot&lt;/code&gt; 실행 파일이 포함 된 디렉토리의 경로 입니다. 경로는 Windows에서도 슬래시가있을 수 있으며 &lt;code&gt;Doxyfile.in&lt;/code&gt; 템플릿 으로 직접 대체하기에 적합하지 않습니다 . 이 값이 필요한 경우 &lt;code&gt;Doxygen::dot&lt;/code&gt; 대상 의 &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt; 특성을 가져 오고 &lt;a href=&quot;../command/get_filename_component#command:get_filename_component&quot; id=&quot;index-0-command:get_filename_component&quot;&gt; &lt;code&gt;get_filename_component()&lt;/code&gt; &lt;/a&gt; 를 사용하여 해당 경로의 디렉토리 부분을 추출하십시오. &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(TO_NATIVE_PATH)&lt;/code&gt; &lt;/a&gt; 을 사용하여 Doxygen 구성 파일의 경로를 준비 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a69dca71cb1cae163994a9f292f9e8d50095fbb1" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;NumPy&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python2_NumPy_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumPy&lt;/code&gt; 헤더 의 디렉토리 경로 입니다. 변수 &lt;code&gt;Python2_NumPy_INCLUDE_DIRS&lt;/code&gt; 를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d45196e01e3402ce33c0b384a863cc16902e22c9" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;NumPy&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python3_NumPy_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumPy&lt;/code&gt; 헤더 의 디렉토리 경로 입니다. 변수 &lt;code&gt;Python3_NumPy_INCLUDE_DIRS&lt;/code&gt; 를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7248fe4bf575f341c2b2ec84fb0a86c4732f8c60" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;NumPy&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python_NumPy_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumPy&lt;/code&gt; 헤더 의 디렉토리 경로 입니다. 변수 &lt;code&gt;Python_NumPy_INCLUDE_DIRS&lt;/code&gt; 를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="80f3ca14be29f5547e306e2c51473663f61f0734" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;Python&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python2_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Python&lt;/code&gt; 헤더 의 디렉토리 경로 입니다. 변수 &lt;code&gt;Python2_INCLUDE_DIRS&lt;/code&gt; 를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="120efec3f5ee3ec0400c6171895694fc93d8f2bd" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;Python&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python3_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Python&lt;/code&gt; 헤더 의 디렉토리 경로 입니다. 변수 &lt;code&gt;Python3_INCLUDE_DIRS&lt;/code&gt; 를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d7da40b6f9cec4d89c1c02efc4b6914eb63385c7" translate="yes" xml:space="preserve">
          <source>The path to the directory of the &lt;code&gt;Python&lt;/code&gt; headers. It will be used to compute the variable &lt;code&gt;Python_INCLUDE_DIRS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Python&lt;/code&gt; 헤더 의 디렉토리 경로 입니다. 변수 &lt;code&gt;Python_INCLUDE_DIRS&lt;/code&gt; 를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="16a7eedffb5853007c16432fcab415e92700ea63" translate="yes" xml:space="preserve">
          <source>The path to the interpreter.</source>
          <target state="translated">통역사의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="be506f698e0e11125a8c794ef1e98e9d32c55f19" translate="yes" xml:space="preserve">
          <source>The path to the library. It will be used to compute the variables &lt;code&gt;Python2_LIBRARIES&lt;/code&gt;, &lt;code&gt;Python2_LIBRARY_DIRS&lt;/code&gt; and &lt;code&gt;Python2_RUNTIME_LIBRARY_DIRS&lt;/code&gt;.</source>
          <target state="translated">라이브러리 경로입니다. &lt;code&gt;Python2_LIBRARIES&lt;/code&gt; , &lt;code&gt;Python2_LIBRARY_DIRS&lt;/code&gt; 및 &lt;code&gt;Python2_RUNTIME_LIBRARY_DIRS&lt;/code&gt; 변수를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b704194b9c6cc418b1fa787d5e9bb0a070b5c58d" translate="yes" xml:space="preserve">
          <source>The path to the library. It will be used to compute the variables &lt;code&gt;Python3_LIBRARIES&lt;/code&gt;, &lt;code&gt;Python3_LIBRARY_DIRS&lt;/code&gt; and &lt;code&gt;Python3_RUNTIME_LIBRARY_DIRS&lt;/code&gt;.</source>
          <target state="translated">라이브러리 경로입니다. &lt;code&gt;Python3_LIBRARIES&lt;/code&gt; , &lt;code&gt;Python3_LIBRARY_DIRS&lt;/code&gt; 및 &lt;code&gt;Python3_RUNTIME_LIBRARY_DIRS&lt;/code&gt; 변수를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="666ff66aa94d8197a0cdd2cb5c1a1859d5770b81" translate="yes" xml:space="preserve">
          <source>The path to the library. It will be used to compute the variables &lt;code&gt;Python_LIBRARIES&lt;/code&gt;, &lt;code&gt;Python_LIBRARY_DIRS&lt;/code&gt; and &lt;code&gt;Python_RUNTIME_LIBRARY_DIRS&lt;/code&gt;.</source>
          <target state="translated">라이브러리 경로입니다. &lt;code&gt;Python_LIBRARIES&lt;/code&gt; , &lt;code&gt;Python_LIBRARY_DIRS&lt;/code&gt; 및 &lt;code&gt;Python_RUNTIME_LIBRARY_DIRS&lt;/code&gt; 변수를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0aefe992905eced5fc3dec16c8f6af7b854c68f2" translate="yes" xml:space="preserve">
          <source>The path to the source directory currently being processed.</source>
          <target state="translated">현재 처리중인 소스 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="fa3e2d0e7260846667980a4249dbbdcb944df526" translate="yes" xml:space="preserve">
          <source>The path to the test executable or the name of a CMake target.</source>
          <target state="translated">테스트 실행 파일의 경로 또는 CMake 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="673833e98c36a6ebfb4b826338a205dd49755e56" translate="yes" xml:space="preserve">
          <source>The path to the top level of the build tree.</source>
          <target state="translated">빌드 트리의 최상위 레벨 경로입니다.</target>
        </trans-unit>
        <trans-unit id="7a1e85a909be88a2219c3e4c9e8b78c65957b038" translate="yes" xml:space="preserve">
          <source>The path to the top level of the source tree.</source>
          <target state="translated">소스 트리의 최상위 레벨 경로입니다.</target>
        </trans-unit>
        <trans-unit id="0e8743b3c556fedf19006d9612e3a76a71b9c053" translate="yes" xml:space="preserve">
          <source>The path to the xctest command line tool used to execute XCTest bundles.</source>
          <target state="translated">XCTest 번들을 실행하는 데 사용되는 xctest 명령 행 도구의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="020d25ee72df24a058e43913688c108390e71617" translate="yes" xml:space="preserve">
          <source>The phonon target</source>
          <target state="translated">포논 대상</target>
        </trans-unit>
        <trans-unit id="c02ba451f9afb11797ab1c42936315f94ecda0cd" translate="yes" xml:space="preserve">
          <source>The platform paths that these variables contain are locations that typically include installed software. An example being &lt;code&gt;/usr/local&lt;/code&gt; for UNIX based platforms.</source>
          <target state="translated">이러한 변수에 포함 된 플랫폼 경로는 일반적으로 설치된 소프트웨어를 포함하는 위치입니다. UNIX 기반 플랫폼 의 경우 예는 &lt;code&gt;/usr/local&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="385330954eeb9914b142934036c3aaa2f4f29859" translate="yes" xml:space="preserve">
          <source>The platform specific default install locations are searched. If exactly one candidate is found, this is used. The default CUDA Toolkit install locations searched are:</source>
          <target state="translated">플랫폼 별 기본 설치 위치가 검색됩니다. 정확히 하나의 후보가 발견되면 이것이 사용됩니다. 검색되는 기본 CUDA 툴킷 설치 위치는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07b1f1998e49dabd4d95ea357c4c1ea499a82523" translate="yes" xml:space="preserve">
          <source>The prefix for each node in the Graphviz files.</source>
          <target state="translated">Graphviz 파일의 각 노드에 대한 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="a41302b10fb77f0980bf3bbc20508a924f83828c" translate="yes" xml:space="preserve">
          <source>The prefix for each node in the graphviz file.</source>
          <target state="translated">graphviz 파일의 각 노드에 대한 접두사.</target>
        </trans-unit>
        <trans-unit id="3072cbc71276575005203d041d4be1bb9f0a373c" translate="yes" xml:space="preserve">
          <source>The prefix for import libraries that you link to.</source>
          <target state="translated">링크하는 가져 오기 라이브러리의 접 두부입니다.</target>
        </trans-unit>
        <trans-unit id="ba85ca71aed04c0b08636b3c13616d644524ec3e" translate="yes" xml:space="preserve">
          <source>The prefix for loadable modules that you link to.</source>
          <target state="translated">링크 가능한로드 가능한 모듈의 접두사.</target>
        </trans-unit>
        <trans-unit id="dcf7b9db8093dc025311429d36992f133a8202b3" translate="yes" xml:space="preserve">
          <source>The prefix for shared libraries that you link to.</source>
          <target state="translated">링크 한 공유 라이브러리의 접두사.</target>
        </trans-unit>
        <trans-unit id="6bd7e8708b57e87bd6992bf100b8f08498a70bb5" translate="yes" xml:space="preserve">
          <source>The prefix for static libraries that you link to.</source>
          <target state="translated">링크하는 정적 라이브러리의 접 두부입니다.</target>
        </trans-unit>
        <trans-unit id="746019558c89a6d3ec44bbacf34d31e45100a355" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a loadable module on this platform.</source>
          <target state="translated">이 플랫폼에서로드 가능한 모듈의 이름에 사용할 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="d49278ad624fd16cd750d078c1c4678ca36967d0" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a shared library, &lt;code&gt;lib&lt;/code&gt; on UNIX.</source>
          <target state="translated">공유 라이브러리 이름에 사용할 접 두부, UNIX의 경우 &lt;code&gt;lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="247578078bd4389f67138722d4e89ba3a64447e4" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a static library, &lt;code&gt;lib&lt;/code&gt; on UNIX.</source>
          <target state="translated">정적 라이브러리의 이름으로 사용되는 접 두부, UNIX의 경우 &lt;code&gt;lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5c140bbce28b40469b5bb76c34695111f99c294" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of an import library if used on this platform.</source>
          <target state="translated">이 플랫폼에서 사용되는 경우 가져 오기 라이브러리 이름에 사용할 접 두부입니다.</target>
        </trans-unit>
        <trans-unit id="b7c3bf6556ad1c87377554113aa82e344961c3e0" translate="yes" xml:space="preserve">
          <source>The prefix used in the built package.</source>
          <target state="translated">빌드 된 패키지에 사용 된 접두사.</target>
        </trans-unit>
        <trans-unit id="a2fd6f56fb119a0e3fc45cf9267b755afe1628ae" translate="yes" xml:space="preserve">
          <source>The preprocessor definitions are added to the &lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists&lt;/code&gt; file. They are also added to the &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; target property for each target in the current &lt;code&gt;CMakeLists&lt;/code&gt; file.</source>
          <target state="translated">전 처리기 정의는 현재 &lt;code&gt;CMakeLists&lt;/code&gt; 파일 의 &lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 디렉터리 속성에 추가 됩니다. 또한 현재 &lt;code&gt;CMakeLists&lt;/code&gt; 파일 의 각 대상에 대한 &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 대상 속성에 추가 됩니다.</target>
        </trans-unit>
        <trans-unit id="882c112952dd465d7238ca05ccd663c698ca69e1" translate="yes" xml:space="preserve">
          <source>The presets are read before all other command line options. The options specified by the preset (variables, generator, etc.) can all be overridden by manually specifying them on the command line. For example, if the preset sets a variable called &lt;code&gt;MYVAR&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;, but the user sets it to &lt;code&gt;2&lt;/code&gt; with a &lt;code&gt;-D&lt;/code&gt; argument, the value &lt;code&gt;2&lt;/code&gt; is preferred.</source>
          <target state="translated">사전 설정은 다른 모든 명령 줄 옵션보다 먼저 읽습니다. 사전 설정 (변수, 생성기 등)에서 지정한 옵션은 모두 명령 줄에서 수동으로 지정하여 재정의 할 수 있습니다. 예를 들어, 프리셋라는 변수 설정하면 &lt;code&gt;MYVAR&lt;/code&gt; 에 &lt;code&gt;1&lt;/code&gt; , 이에 사용자 집합 그 &lt;code&gt;2&lt;/code&gt; A의 &lt;code&gt;-D&lt;/code&gt; 인수 값 &lt;code&gt;2&lt;/code&gt; 가 바람직하다.</target>
        </trans-unit>
        <trans-unit id="f661a4c04635c98524da6725b155fc2a5cba1f9a" translate="yes" xml:space="preserve">
          <source>The primary starting point for learning about CMake.</source>
          <target state="translated">CMake에 대해 배우기위한 기본 시작점.</target>
        </trans-unit>
        <trans-unit id="4ffab2fd17f335501a1b8a9862731c7847f68bc7" translate="yes" xml:space="preserve">
          <source>The primary task of a find module is to determine whether a package exists on the system, set the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable to reflect this and provide any variables, macros and imported targets required to use the package. A find module is useful in cases where an upstream library does not provide a &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file package&lt;/a&gt;.</source>
          <target state="translated">찾기 모듈의 기본 작업은 패키지가 시스템에 존재하는지 확인하고 이를 반영 하도록 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 변수를 설정 하고 패키지를 사용하는 데 필요한 변수, 매크로 및 가져온 대상을 제공하는 것입니다. 찾기 모듈은 업스트림 라이브러리가 &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;구성 파일 패키지를&lt;/a&gt; 제공하지 않는 경우에 유용 합니다 .</target>
        </trans-unit>
        <trans-unit id="f4a2ac65be2eb1576df21653c6e1c6ef82adbf21" translate="yes" xml:space="preserve">
          <source>The primary task of a find module is to determine whether a package is available, set the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable to reflect this and provide any variables, macros and imported targets required to use the package. A find module is useful in cases where an upstream library does not provide a &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7533c0aa587fdb18b73310ce256889b2ef736c64" translate="yes" xml:space="preserve">
          <source>The program in &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; will be found in the system search path or left as a full path. If &lt;code&gt;PROGRAM_ARGS&lt;/code&gt; is present with &lt;code&gt;PROGRAM&lt;/code&gt;, then any command-line arguments present in the &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; string are split from the program name and stored in &lt;code&gt;&amp;lt;arg_var&amp;gt;&lt;/code&gt;. This is used to separate a program name from its arguments in a command line string.</source>
          <target state="translated">&lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; 의 프로그램 은 시스템 검색 경로에 있거나 전체 경로로 남아 있습니다. 경우 &lt;code&gt;PROGRAM_ARGS&lt;/code&gt; 가 함께 존재 &lt;code&gt;PROGRAM&lt;/code&gt; 다음 명령 줄 인자는에 존재하는 &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; 문자열 프로그램 이름의 분할 및에 저장된 &lt;code&gt;&amp;lt;arg_var&amp;gt;&lt;/code&gt; . 명령 행 문자열에서 프로그램 이름과 인수를 구분하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dc92c8e756382cacca1c52d71b5f9efe3f0ad678" translate="yes" xml:space="preserve">
          <source>The program invoked by the &lt;code&gt;--build&lt;/code&gt; mode is determined by the &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-2-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable. For most generators, the particular program does not need to be configured.</source>
          <target state="translated">&lt;code&gt;--build&lt;/code&gt; 모드에 의해 호출되는 프로그램 은 &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-2-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt; 변수에 의해 결정됩니다 . 대부분의 발전기의 경우 특정 프로그램을 구성 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c71654802dbbf98b220e40fba72392a9be4dbd06" translate="yes" xml:space="preserve">
          <source>The project could be configured to use one of the downloaded toolchains like so:</source>
          <target state="translated">다음과 같이 다운로드 한 툴체인 중 하나를 사용하도록 프로젝트를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9cd9fd7ba02cb96e3dc3246210d87326b59e703" translate="yes" xml:space="preserve">
          <source>The properties permitted to be set on or read from an &lt;code&gt;INTERFACE&lt;/code&gt; library are:</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; 라이브러리 에서 설정하거나 읽을 수있는 특성 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f5352fa6dcb1ae2eda9da30c134fd1b774ed42d" translate="yes" xml:space="preserve">
          <source>The properties set on the generated IMPORTED targets will have the same values as the final values of the input TARGETS.</source>
          <target state="translated">생성 된 IMPORTED 대상에 설정된 특성은 입력 TARGETS의 최종 값과 동일한 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3db1528adb176abacc985fb6033a986753649f60" translate="yes" xml:space="preserve">
          <source>The property can contain multiple list entries, each of which has to match the following format.</source>
          <target state="translated">이 속성에는 여러 목록 항목이 포함될 수 있으며 각 항목은 다음 형식과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5d652639af835cc075b39a1d4eba63d5893af9c4" translate="yes" xml:space="preserve">
          <source>The property is currently only supported by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 속성은 현재 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt; 에서만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="06a75ee687ca61c7f9f9057bafcab6355abfdfa6" translate="yes" xml:space="preserve">
          <source>The property is currently only supported by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 속성은 현재 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt; &lt;code&gt;CPack WIX Generator&lt;/code&gt; &lt;/a&gt; 에서만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a828fdd868c68d4e2d99c8809651a9a16da5931" translate="yes" xml:space="preserve">
          <source>The property is currently only supported by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866ddb4ff3305ee7d76c0a1cbe1a1100b479b274" translate="yes" xml:space="preserve">
          <source>The property must be set to a semicolon-separated list of &lt;code&gt;key=value&lt;/code&gt; pairs. Each such pair will be transformed into an entry in the solution global section. Whitespace around key and value is ignored. List elements which do not contain an equal sign are skipped.</source>
          <target state="translated">이 속성은 세미콜론으로 구분 된 &lt;code&gt;key=value&lt;/code&gt; 쌍 목록으로 설정해야합니다 . 이러한 각 쌍은 솔루션 글로벌 섹션의 항목으로 변환됩니다. 키와 값 주위의 공백은 무시됩니다. 등호가 포함되지 않은 목록 요소는 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="f234efb5d6fe9a3b473a2f364deb0eb3817b1107" translate="yes" xml:space="preserve">
          <source>The property must be set to the name of an existing target. This will cause that project to be listed first in the generated solution file causing Visual Studio to make it the startup project if the solution has never been opened before.</source>
          <target state="translated">특성은 기존 대상의 이름으로 설정되어야합니다. 이로 인해 생성 된 솔루션 파일에서 프로젝트가 먼저 나열되어 솔루션을 이전에 열지 않은 경우 Visual Studio에서 시작 프로젝트로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a6b6b35d0d9fecf780bd7d7d817066ca3d5c538" translate="yes" xml:space="preserve">
          <source>The protobuf libraries</source>
          <target state="translated">protobuf 라이브러리</target>
        </trans-unit>
        <trans-unit id="c03b6193170ba4a2c20d62459b91084642e0acc0" translate="yes" xml:space="preserve">
          <source>The protobuf library</source>
          <target state="translated">프로토 부프 라이브러리</target>
        </trans-unit>
        <trans-unit id="48720c814533c7b7b6636e7eedab88741fc033f9" translate="yes" xml:space="preserve">
          <source>The protobuf library (debug)</source>
          <target state="translated">protobuf 라이브러리 (디버그)</target>
        </trans-unit>
        <trans-unit id="2650acff070f276c19162aa05f09fd4cf3b44279" translate="yes" xml:space="preserve">
          <source>The protobuf library.</source>
          <target state="translated">protobuf 라이브러리.</target>
        </trans-unit>
        <trans-unit id="6c84184a01676ec3497b5bb78c511a981baaed89" translate="yes" xml:space="preserve">
          <source>The protobuf lite library</source>
          <target state="translated">프로토 뷰프 라이트 라이브러리</target>
        </trans-unit>
        <trans-unit id="48e7731ee4abf966d682d781062129c813618edf" translate="yes" xml:space="preserve">
          <source>The protobuf lite library (debug)</source>
          <target state="translated">protobuf lite 라이브러리 (디버그)</target>
        </trans-unit>
        <trans-unit id="3110a7e942d3b67fdff32b1247fe123c88d19d8f" translate="yes" xml:space="preserve">
          <source>The protobuf lite library.</source>
          <target state="translated">protobuf lite 라이브러리</target>
        </trans-unit>
        <trans-unit id="fe76ee6c476a785268e65c827ae13fdd939bcfc1" translate="yes" xml:space="preserve">
          <source>The protobuf-lite libraries</source>
          <target state="translated">프로토 부프 라이트 라이브러리</target>
        </trans-unit>
        <trans-unit id="0f7ac0f0713649d59acbff5fed3a5a3967a3f68b" translate="yes" xml:space="preserve">
          <source>The protoc compiler</source>
          <target state="translated">프로토 타입 컴파일러</target>
        </trans-unit>
        <trans-unit id="094d7dab5861a5d1b502f6d24e2bbdce2377c6fd" translate="yes" xml:space="preserve">
          <source>The protoc compiler.</source>
          <target state="translated">프로토 타입 컴파일러.</target>
        </trans-unit>
        <trans-unit id="61fd803373bae0678ced3082cff9c07dc21235cb" translate="yes" xml:space="preserve">
          <source>The protoc libraries</source>
          <target state="translated">프로토 타입 라이브러리</target>
        </trans-unit>
        <trans-unit id="c67bd1f75b9fc0444a0ced5c8e41099016141d9f" translate="yes" xml:space="preserve">
          <source>The protoc library</source>
          <target state="translated">프로토 타입 라이브러리</target>
        </trans-unit>
        <trans-unit id="c363028dd3ae380cb8fdffaaba9ec9385fae9fb1" translate="yes" xml:space="preserve">
          <source>The protoc library (debug)</source>
          <target state="translated">프로토 타입 라이브러리 (디버그)</target>
        </trans-unit>
        <trans-unit id="1f21ef7d6b8384bc06cc28823442fcc943ff6cd9" translate="yes" xml:space="preserve">
          <source>The protoc library.</source>
          <target state="translated">프로토 타입 라이브러리.</target>
        </trans-unit>
        <trans-unit id="831bea72899a52bd35cd0e2f4468204fcd3cb41c" translate="yes" xml:space="preserve">
          <source>The protocol aims to provide information to tooling to satisfy several needs:</source>
          <target state="translated">이 프로토콜은 몇 가지 요구를 충족시키기 위해 툴링에 정보를 제공하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="5fcd95299c75bad5c63b652c87e61eb76602ab82" translate="yes" xml:space="preserve">
          <source>The protocol is designed to be useful to IDEs, refactoring tools, and other tools which have a need to understand the buildsystem in entirety.</source>
          <target state="translated">이 프로토콜은 IDE, 리팩토링 도구 및 빌드 시스템을 완전히 이해해야하는 기타 도구에 유용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="c51d7a8cddb60f51b72e7e0d19193538a0ba2555" translate="yes" xml:space="preserve">
          <source>The pseudononymous namespace is used within a truly anonymous namespace. On many platforms, this maintains the invariant that the symbols within do not get external linkage when performing a unity build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198c883d8a4820112f7d698a968b83a99e71b2f2" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[ \t\r\n]&quot;&lt;/code&gt; specifies a regex that matches any single whitespace character.</source>
          <target state="translated">인용 된 인수 &lt;code&gt;&quot;[ \t\r\n]&quot;&lt;/code&gt; 은 단일 공백 ​​문자와 일치하는 정규식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bb260368c9a748077e2f7bb1cf2641ded184e0f0" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[/\\]&quot;&lt;/code&gt; specifies a regex that matches a single forward slash &lt;code&gt;/&lt;/code&gt; or backslash &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="translated">인용 된 인수 &lt;code&gt;&quot;[/\\]&quot;&lt;/code&gt; 는 단일 슬래시 &lt;code&gt;/&lt;/code&gt; 또는 백 슬래시 &lt;code&gt;\&lt;/code&gt; 와 일치하는 정규식을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="2a7c0e146a59da8ce017ecead33ac0f29185bc8f" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[A-Za-z0-9_]&quot;&lt;/code&gt; specifies a regex that matches any single &quot;word&quot; character in the C locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c237201d36a9240d67f1e82c725faaa9f8ade1" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[A-Za-z0-9_]&quot;&lt;/code&gt; specifies a regex that matches any single &amp;ldquo;word&amp;rdquo; character in the C locale.</source>
          <target state="translated">인용 된 인수 &lt;code&gt;&quot;[A-Za-z0-9_]&quot;&lt;/code&gt; 는 C 로케일의 단일 &quot;단어&quot;문자와 일치하는 정규식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e250217d3bf3a529d1d2967ab005929f3cdc2700" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;\\(\\a\\+b\\)&quot;&lt;/code&gt; specifies a regex that matches the exact string &lt;code&gt;(a+b)&lt;/code&gt;. Each &lt;code&gt;\\&lt;/code&gt; is parsed in a quoted argument as just &lt;code&gt;\&lt;/code&gt;, so the regex itself is actually &lt;code&gt;\(\a\+\b\)&lt;/code&gt;. This can alternatively be specified in a &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; without having to escape the backslashes, e.g. &lt;code&gt;[[\(\a\+\b\)]]&lt;/code&gt;.</source>
          <target state="translated">인용 된 인수 &lt;code&gt;&quot;\\(\\a\\+b\\)&quot;&lt;/code&gt; 는 정확한 문자열 &lt;code&gt;(a+b)&lt;/code&gt; 와 일치하는 정규 표현식을 지정합니다 . 각 &lt;code&gt;\\&lt;/code&gt; 는 인용 된 인수로 &lt;code&gt;\&lt;/code&gt; 로 구문 분석 되므로 정규 표현식 자체는 실제로 &lt;code&gt;\(\a\+\b\)&lt;/code&gt; 입니다. 이것은 &lt;code&gt;[[\(\a\+\b\)]]&lt;/code&gt; 같이 백 슬래시를 이스케이프 처리하지 않고 &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;대괄호 인수에&lt;/a&gt; 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77dce416a0548e7f996511d2a442d222eac6b5b6" translate="yes" xml:space="preserve">
          <source>The real data files named by expanded &lt;code&gt;DATA{}&lt;/code&gt; references may be made available under &lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; using symbolic links on some platforms. The &lt;code&gt;ExternalData_NO_SYMLINKS&lt;/code&gt; variable may be set to disable use of symbolic links and enable use of copies instead.</source>
          <target state="translated">확장 된 &lt;code&gt;DATA{}&lt;/code&gt; 참조로 명명 된 실제 데이터 파일 은 일부 플랫폼에서 기호 링크를 사용하여 &lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; 에서 사용 가능할 수 있습니다 . &lt;code&gt;ExternalData_NO_SYMLINKS&lt;/code&gt; 의 변수는 심볼릭 링크의 해제를 사용하도록 설정 대신 사본의 사용을 가능하게 할 수있다.</target>
        </trans-unit>
        <trans-unit id="5a5d63ccc73ea21c633b67126b20c62b5acc0c27" translate="yes" xml:space="preserve">
          <source>The referenced variables may contain the absolute paths to libraries and include directories &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;. This would create a package with hard-coded paths to dependencies and not suitable for relocation.</source>
          <target state="translated">참조 된 변수는 라이브러리에 대한 절대 경로를 포함 &lt;strong&gt;하고 패키지가 작성된 시스템에서 찾은&lt;/strong&gt; 디렉토리 &lt;strong&gt;를&lt;/strong&gt; 포함 할 수 있습니다 . 이것은 의존성에 대한 하드 코딩 된 경로를 가진 패키지를 생성하며 재배치에 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="97e7a8abb710c3f53083dccf52996f1c6373b7a8" translate="yes" xml:space="preserve">
          <source>The referenced variables may contain the absolute paths to libraries and include directories &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;. This would create a package with hard-coded paths to dependencies not suitable for relocation.</source>
          <target state="translated">참조 된 변수는 라이브러리에 대한 절대 경로를 포함 할 수 있으며 &lt;strong&gt;패키지가 만들어진 시스템에있는&lt;/strong&gt; 디렉토리 &lt;strong&gt;를&lt;/strong&gt; 포함 할 수 있습니다 . 이렇게하면 재배치에 적합하지 않은 종속성에 대한 하드 코딩 된 경로가있는 패키지가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c2f96c7b7859944e72577d4375755bdd5deff6b6" translate="yes" xml:space="preserve">
          <source>The registries are especially useful to help projects find packages in non-standard install locations or directly in their own build trees. A project may populate either the user or system registry (using its own means, see below) to refer to its location. In either case the package should store at the registered location a &lt;a href=&quot;#package-configuration-file&quot;&gt;Package Configuration File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt;) and optionally a &lt;a href=&quot;#package-version-file&quot;&gt;Package Version File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt;).</source>
          <target state="translated">레지스트리는 프로젝트가 비표준 설치 위치 또는 자체 빌드 트리에서 패키지를 찾는 데 특히 유용합니다. 프로젝트는 해당 위치를 참조하기 위해 사용자 또는 시스템 레지스트리 (자체 수단을 사용하여 아래 참조)를 채울 수 있습니다. 두 경우 모두 패키지는 등록 된 위치에 &lt;a href=&quot;#package-configuration-file&quot;&gt;패키지 구성 파일&lt;/a&gt; ( &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; ) 및 선택적으로 &lt;a href=&quot;#package-version-file&quot;&gt;패키지 버전 파일&lt;/a&gt; ( &lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt; )을 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="bff58885d0a9c7e4f279c402cafcde33f2189660" translate="yes" xml:space="preserve">
          <source>The replace expression may refer to paren-delimited subexpressions of the match using &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;\9&lt;/code&gt;. Note that two backslashes (&lt;code&gt;\\1&lt;/code&gt;) are required in CMake code to get a backslash through argument parsing.</source>
          <target state="translated">바꾸기 식은 &lt;code&gt;\1&lt;/code&gt; , &lt;code&gt;\2&lt;/code&gt; ,&amp;hellip;, &lt;code&gt;\9&lt;/code&gt; 사용하여 일치하는 항목으로 구분 된 하위 식을 나타낼 수 있습니다 . 인수 구문 분석을 통해 백 슬래시를 얻으려면 CMake 코드에 두 개의 백 슬래시 ( &lt;code&gt;\\1&lt;/code&gt; )가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f3b1ab7bd5cfaba14fe9f1d2252bdd68e09e2666" translate="yes" xml:space="preserve">
          <source>The reply index file contains a JSON object:</source>
          <target state="translated">응답 색인 파일에는 JSON 오브젝트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="eecf23f15a38ddb486512f6964d897785f7f322a" translate="yes" xml:space="preserve">
          <source>The reply index file represents each reference to another reply file using a JSON object with members:</source>
          <target state="translated">응답 색인 파일은 멤버가있는 JSON 오브젝트를 사용하여 다른 응답 파일에 대한 각 참조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="12f31718f94ac86520fe999becd1c3d96b9208e6" translate="yes" xml:space="preserve">
          <source>The reply will contain a key &amp;ldquo;configurations&amp;rdquo;, which will contain a list of configuration objects. Configuration objects are used to destinquish between different configurations the build directory might have enabled. While most generators only support one configuration, others might support several.</source>
          <target state="translated">회신에는 구성 개체 목록이 포함 된 주요 &quot;구성&quot;이 포함됩니다. 구성 객체는 빌드 디렉토리가 활성화했을 수있는 다른 구성을 지정하는 데 사용됩니다. 대부분의 생성기는 하나의 구성 만 지원하지만 다른 생성기는 여러 구성을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4074ad92e71b1a7a6553e82df2e5b72b01bd5df" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;PROPERTY&lt;/code&gt; option is immediately followed by the name of the property being defined.</source>
          <target state="translated">필요한 &lt;code&gt;PROPERTY&lt;/code&gt; 옵션 바로 뒤에 정의중인 특성 이름이옵니다.</target>
        </trans-unit>
        <trans-unit id="4c3150e6b763d8bd99ce8b71bc7ec34119ee239d" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;PROPERTY&lt;/code&gt; option is immediately followed by the name of the property to get. If the property is not set an empty value is returned, although some properties support inheriting from a parent scope if defined to behave that way (see &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt;&lt;code&gt;define_property()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">필요한 &lt;code&gt;PROPERTY&lt;/code&gt; 옵션 바로 뒤에 가져올 속성 이름이옵니다. 속성이 설정되지 않은 경우 빈 값이 반환되지만 일부 속성은 그런 식으로 동작하도록 정의 된 경우 부모 범위에서 상속을 지원합니다 ( &lt;a href=&quot;define_property#command:define_property&quot; id=&quot;index-0-command:define_property&quot;&gt; &lt;code&gt;define_property()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1bc4beabaf99745e588a728cc71278d4c717a142" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;PROPERTY&lt;/code&gt; option is immediately followed by the name of the property to set. Remaining arguments are used to compose the property value in the form of a semicolon-separated list.</source>
          <target state="translated">필요한 &lt;code&gt;PROPERTY&lt;/code&gt; 옵션 바로 뒤에 설정할 속성의 이름 이옵니다 . 나머지 인수는 세미콜론으로 구분 된 목록 형식으로 속성 값을 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c9c8813422983b137e7500ae940224383767355d" translate="yes" xml:space="preserve">
          <source>The resource specification file is a JSON file which is passed to CTest, either on the &lt;a href=&quot;#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; command line as &lt;code&gt;--resource-spec-file&lt;/code&gt;, or as the &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; argument of &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-2-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt;. If a dashboard script is used and &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; is not specified, the value of &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-1-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt;&lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;&lt;/a&gt; in the dashboard script is used instead. If &lt;code&gt;--resource-spec-file&lt;/code&gt;, &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt;, and &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-2-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt;&lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;&lt;/a&gt; in the dashboard script are not specified, the value of &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-3-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt;&lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;&lt;/a&gt; in the CMake build is used instead. If none of these are specified, no resource spec file is used.</source>
          <target state="translated">리소스 사양 파일은 &lt;code&gt;--resource-spec-file&lt;/code&gt; &lt;a href=&quot;#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 명령 줄에서 --resource-spec-file 로 또는 &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-2-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 인수로 CTest 에 전달되는 JSON 파일입니다 . 대시 보드 스크립트를 사용하고 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 을 지정하지 않으면 대시 보드 스크립트 의 &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-1-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt; &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; &lt;/a&gt; 값이 대신 사용됩니다. 경우 &lt;code&gt;--resource-spec-file&lt;/code&gt; , &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 및 &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-2-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt; &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; 는&lt;/a&gt; 대시 보드 스크립트에 지정되지 않은,의 값 &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-3-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt; &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; &lt;/a&gt;대신 CMake 빌드에서 사용됩니다. 이들 중 아무것도 지정되지 않으면 리소스 사양 파일이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="028edf8e160e96cf18b1ec39639dfcda27ed819e" translate="yes" xml:space="preserve">
          <source>The resource specification file must be a JSON object. All examples in this document assume the following resource specification file:</source>
          <target state="translated">리소스 사양 파일은 JSON 개체 여야합니다. 이 문서의 모든 예제는 다음 리소스 사양 파일을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="932a08f8a1109f0c3213d2ef53caed3dce8654e3" translate="yes" xml:space="preserve">
          <source>The rest of the supplied arguments consist of the full paths to the &lt;code&gt;/src/main/java&lt;/code&gt; directories of each module within the source tree. These directories are needed and should not be forgotten.</source>
          <target state="translated">제공된 나머지 인수 는 소스 트리 내 각 모듈 의 &lt;code&gt;/src/main/java&lt;/code&gt; 디렉토리에 대한 전체 경로로 구성됩니다 . 이 디렉토리는 필요하며 잊어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c2b02c6a95d1f23a82aa6e690d14e17df71f9bd0" translate="yes" xml:space="preserve">
          <source>The result is formatted according to the option &lt;code&gt;OUTPUT_FORMAT&lt;/code&gt;, where &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is one of</source>
          <target state="translated">결과는 옵션 &lt;code&gt;OUTPUT_FORMAT&lt;/code&gt; 에 따라 형식이 지정됩니다 . 여기서 &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; 은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="f23b64fb56b1d6a029b9e908a84ee76c283a78a0" translate="yes" xml:space="preserve">
          <source>The result will be stored in the internal cache variable &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt;, with a boolean true value for success and boolean false for failure.</source>
          <target state="translated">결과는 내부 캐시 변수 &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; 에 저장되며 성공의 경우 부울 true 값, 실패의 경우 부울 false와 함께 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="adfda7245076cc63a8a04bec96c6d9e8abcdc768" translate="yes" xml:space="preserve">
          <source>The result will be the full path name of the bundle&amp;rsquo;s main executable file or an &lt;code&gt;error:&lt;/code&gt; prefixed string if it could not be determined.</source>
          <target state="translated">결과는 번들의 기본 실행 파일의 전체 경로 이름이거나 &lt;code&gt;error:&lt;/code&gt; 판별 할 수없는 경우 접 두부 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8099a2e6d45e3ba51b30d743d5646ff17c0af18a" translate="yes" xml:space="preserve">
          <source>The result will be the full path name of the bundle's main executable file or an &lt;code&gt;error:&lt;/code&gt; prefixed string if it could not be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dc752b529e98bc1010de11e42ac65eb6c201af" translate="yes" xml:space="preserve">
          <source>The resultant &lt;code&gt;Doxyfile&lt;/code&gt; will contain the following lines:</source>
          <target state="translated">결과 &lt;code&gt;Doxyfile&lt;/code&gt; 에는 다음 줄이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="35fb84852205d094a7bacac7a0cbc5fe9e30146d" translate="yes" xml:space="preserve">
          <source>The resulting graphs can be huge. The look and content of the generated graphs can be controlled using the file &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt;. This file is first searched in &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, and then in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. If found, the variables set in it are used to adjust options for the generated Graphviz files.</source>
          <target state="translated">결과 그래프는 엄청날 수 있습니다. 생성 된 그래프의 모양과 내용은 &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt; 파일을 사용하여 제어 할 수 있습니다 . 이 파일은 먼저 검색됩니다 &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 에 다음과 &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; . 발견되면 여기에 설정된 변수를 사용하여 생성 된 Graphviz 파일의 옵션을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="09962de1a8873b57bad57e1339d3cedcd568e410" translate="yes" xml:space="preserve">
          <source>The return code from executing the module command.</source>
          <target state="translated">모듈 명령 실행의 리턴 코드</target>
        </trans-unit>
        <trans-unit id="d4c0ad00000fb74f88279d6ac51f217a29a671d6" translate="yes" xml:space="preserve">
          <source>The returned directory may or may not exist.</source>
          <target state="translated">리턴 된 디렉토리가 존재하거나 존재하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8de2f724f955f63853d88654b3dfa6e6cf0544b9" translate="yes" xml:space="preserve">
          <source>The right hand argument to &lt;code&gt;NOT&lt;/code&gt; is tested to see if it is a boolean constant, if so the value is used, otherwise it is assumed to be a variable and it is dereferenced.</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; 에 대한 오른쪽 인수 는 부울 상수인지 확인하기 위해 테스트되며, 값이 사용되면 변수로 가정되며 역 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="258be6941ab914d89db59123e8f3575022f4846f" translate="yes" xml:space="preserve">
          <source>The root directory of the Google Test installation (may also be set as an environment variable)</source>
          <target state="translated">Google Test 설치의 루트 디렉토리 (환경 변수로 설정 될 수도 있음)</target>
        </trans-unit>
        <trans-unit id="3887b1933aa5753098ff7106792a66df5ab62068" translate="yes" xml:space="preserve">
          <source>The root folder of the Matlab installation. If set before the call to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, the module will look for the components in that path. If not set, then an automatic search of Matlab will be performed. If set, it should point to a valid version of Matlab.</source>
          <target state="translated">Matlab 설치의 루트 폴더입니다. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출하기 전에 모듈을 설정하면 해당 경로에서 구성 요소를 찾습니다. 설정하지 않으면 Matlab의 자동 검색이 수행됩니다. 설정된 경우 Matlab의 유효한 버전을 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="a2f1c985114b7f0e5dbc5c08a547afc06ce9dba8" translate="yes" xml:space="preserve">
          <source>The root object recognizes the following fields:</source>
          <target state="translated">루트 개체는 다음 필드를 인식합니다.</target>
        </trans-unit>
        <trans-unit id="64b84bda1f671ecfcb4497719a6fe5341b1fe272" translate="yes" xml:space="preserve">
          <source>The rpath to use for installed targets.</source>
          <target state="translated">설치된 대상에 사용할 rpath입니다.</target>
        </trans-unit>
        <trans-unit id="860d3602299a3a20e544e600b29c8dec6af5c66f" translate="yes" xml:space="preserve">
          <source>The scope of the definition of an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-9-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target is the directory where it was defined. It may be accessed and used from subdirectories, but not from parent directories or sibling directories. The scope is similar to the scope of a cmake variable.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-9-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 의 정의 범위는 대상이 정의 된 디렉토리입니다. 하위 디렉토리에서 액세스하고 사용할 수 있지만 상위 디렉토리 나 형제 디렉토리에서는 액세스 할 수 없습니다. 범위는 cmake 변수의 범위와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="110b19d75e08b2ff3cafbe745c6e2b03120313ce" translate="yes" xml:space="preserve">
          <source>The script creates the following functions and macros (in alphabetical order):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390747391f17cb1e41ef21e482091ccbfaa79e2c" translate="yes" xml:space="preserve">
          <source>The script creates the following macros (in alphabetical order):</source>
          <target state="translated">스크립트는 다음 매크로를 사전 순으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bf1b1e6412f77f00b003c666b58bf0fc3d8b5971" translate="yes" xml:space="preserve">
          <source>The script defines the following variables:</source>
          <target state="translated">스크립트는 다음 변수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7ddd05a3f489e47d8295ff3856f04b475d8c9854" translate="yes" xml:space="preserve">
          <source>The script uses &lt;code&gt;find&lt;/code&gt; to capture the paths to all of the &lt;code&gt;cobertura.ser&lt;/code&gt; files found below the project&amp;rsquo;s source directory. It keeps the list of files and supplies it as an argument to the &lt;code&gt;cobertura-merge&lt;/code&gt; program. The &lt;code&gt;--datafile&lt;/code&gt; argument signifies where the result of the merge will be kept.</source>
          <target state="translated">이 스크립트는 &lt;code&gt;find&lt;/code&gt; 를 사용 하여 프로젝트의 소스 디렉토리 아래 에있는 &lt;code&gt;cobertura.ser&lt;/code&gt; 파일 의 경로를 캡처합니다 . 파일 목록을 유지하고이를 &lt;code&gt;cobertura-merge&lt;/code&gt; 프로그램에 대한 인수로 제공합니다 . &lt;code&gt;--datafile&lt;/code&gt; 병합의 결과가 유지됩니다 인수 의미한다.</target>
        </trans-unit>
        <trans-unit id="a8dd5877325364227b5515a24cce7695e379b928" translate="yes" xml:space="preserve">
          <source>The script uses &lt;code&gt;find&lt;/code&gt; to capture the paths to all of the &lt;code&gt;cobertura.ser&lt;/code&gt; files found below the project's source directory. It keeps the list of files and supplies it as an argument to the &lt;code&gt;cobertura-merge&lt;/code&gt; program. The &lt;code&gt;--datafile&lt;/code&gt; argument signifies where the result of the merge will be kept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459835893b46800285d5e89e8bcb6c6565d90093" translate="yes" xml:space="preserve">
          <source>The script will prompt the user to specify &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; if the prefix cannot be determined by the location of nvcc in the system path and &lt;code&gt;REQUIRED&lt;/code&gt; is specified to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. To use a different installed version of the toolkit set the environment variable &lt;code&gt;CUDA_BIN_PATH&lt;/code&gt; before running cmake (e.g. &lt;code&gt;CUDA_BIN_PATH=/usr/local/cuda1.0&lt;/code&gt; instead of the default &lt;code&gt;/usr/local/cuda&lt;/code&gt;) or set &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; after configuring. If you change the value of &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt;, various components that depend on the path will be relocated.</source>
          <target state="translated">시스템 경로에서 접두어를 nvcc의 위치로 판별 할 수없고 &lt;code&gt;REQUIRED&lt;/code&gt; 가 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 지정된 경우 스크립트는 &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; 을 지정하도록 프롬프트합니다 . 설치된 다른 툴킷 버전을 사용하려면 cmake를 실행하기 전에 환경 변수 &lt;code&gt;CUDA_BIN_PATH&lt;/code&gt; 를 설정하거나 (예 : 기본 &lt;code&gt;/usr/local/cuda&lt;/code&gt; 대신 &lt;code&gt;CUDA_BIN_PATH=/usr/local/cuda1.0&lt;/code&gt; ) &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; 후 CUDA_TOOLKIT_ROOT_DIR 을 설정하십시오. &lt;code&gt;CUDA_TOOLKIT_ROOT_DIR&lt;/code&gt; 의 값을 변경하면 경로에 의존하는 다양한 구성 요소가 재배치됩니다.</target>
        </trans-unit>
        <trans-unit id="5efef62f63fddfa2851767ff4c412403ab2872fd" translate="yes" xml:space="preserve">
          <source>The second signature adds a custom command to a target such as a library or executable. This is useful for performing an operation before or after building the target. The command becomes part of the target and will only execute when the target itself is built. If the target is already built, the command will not execute.</source>
          <target state="translated">두 번째 서명은 라이브러리 또는 실행 파일과 같은 대상에 사용자 정의 명령을 추가합니다. 대상을 빌드하기 전후에 작업을 수행하는 데 유용합니다. 명령은 대상의 일부가되며 대상 자체가 빌드 된 경우에만 실행됩니다. 대상이 이미 구축 된 경우 명령이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f35c47be8b6b3f7a8a3ed46aafc05690a70e6efd" translate="yes" xml:space="preserve">
          <source>The second signature for &lt;code&gt;create_javadoc()&lt;/code&gt; works on a given list of files.</source>
          <target state="translated">&lt;code&gt;create_javadoc()&lt;/code&gt; 의 두 번째 서명 은 주어진 파일 목록에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="961cdd4132f17ee7c7f269ee17fbba56818e9f94" translate="yes" xml:space="preserve">
          <source>The second signature for &lt;code&gt;create_javah()&lt;/code&gt; creates a target which encapsulates header files generation. E.g.</source>
          <target state="translated">&lt;code&gt;create_javah()&lt;/code&gt; 의 두 번째 서명은 헤더 파일 생성을 캡슐화하는 대상을 작성합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="8757f8bbda6d8816654e64246f65a3046b63ca0a" translate="yes" xml:space="preserve">
          <source>The server can send signals when it detects changes in the system state. Signals are of type &amp;ldquo;signal&amp;rdquo;, have an empty &amp;ldquo;cookie&amp;rdquo; and &amp;ldquo;inReplyTo&amp;rdquo; field and always have a &amp;ldquo;name&amp;rdquo; set to show which signal was sent.</source>
          <target state="translated">서버는 시스템 상태의 변화를 감지하면 신호를 보낼 수 있습니다. 신호는 &quot;신호&quot;유형이며, 비어있는 &quot;쿠키&quot;및 &quot;inReplyTo&quot;필드가 있으며 전송 된 신호를 표시하기 위해 항상 &quot;이름&quot;이 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="12f4ca1bce00681687b8fd2b0455cded477b18fa" translate="yes" xml:space="preserve">
          <source>The server can watch the filesystem for changes. The &amp;ldquo;fileSystemWatchers&amp;rdquo; command will report on the files and directories watched.</source>
          <target state="translated">서버는 파일 시스템의 변경 사항을 감시 할 수 있습니다. &amp;ldquo;fileSystemWatchers&amp;rdquo;명령은 감시 된 파일 및 디렉토리를보고합니다.</target>
        </trans-unit>
        <trans-unit id="cda052b839371add42d82347909a1e3d0f049066" translate="yes" xml:space="preserve">
          <source>The server has made a copy of this response into the file /tmp/error.txt and took 0.011 seconds to turn the JSON response into a string, and it took 0.025 seconds to process the request in total. The reply has a size of 111 bytes.</source>
          <target state="translated">서버는이 응답의 사본을 /tmp/error.txt 파일에 작성했으며 JSON 응답을 문자열로 변환하는 데 0.011 초가 걸렸으며 요청을 전체적으로 처리하는 데 0.025 초가 걸렸습니다. 회신의 크기는 111 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="e1574716c9aebad4b49c4330da77d33f205e488a" translate="yes" xml:space="preserve">
          <source>The server is now ready to accept further requests via the named pipe or stdin.</source>
          <target state="translated">서버는 이제 명명 된 파이프 또는 stdin을 통해 추가 요청을 수락 할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="dd9044af07b4860535d2999716e78935a4b21852" translate="yes" xml:space="preserve">
          <source>The server will communicate using stdin/stdout (with the &lt;code&gt;--debug&lt;/code&gt; parameter) or using a named pipe (with the &lt;code&gt;--pipe=&amp;lt;NAMED_PIPE&amp;gt;&lt;/code&gt; parameter). Note that &amp;ldquo;named pipe&amp;rdquo; refers to a local domain socket on Unix and to a named pipe on Windows.</source>
          <target state="translated">서버 (와 표준 입력 / 표준 출력을 사용하여 통신한다 &lt;code&gt;--debug&lt;/code&gt; 의 파라미터) 또는합니다 (네임드 파이프와 사용 &lt;code&gt;--pipe=&amp;lt;NAMED_PIPE&amp;gt;&lt;/code&gt; 매개 변수). &quot;명명 된 파이프&quot;는 Unix의 로컬 도메인 소켓과 Windows의 명명 된 파이프를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d9ea1513b010d767168cd2ba9a90babd7a10f4e5" translate="yes" xml:space="preserve">
          <source>The server will respond with an empty reply message or an error.</source>
          <target state="translated">서버는 빈 응답 메시지 또는 오류로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="73b14df05428ea655c1ff4bca44e0b07592b17fa" translate="yes" xml:space="preserve">
          <source>The set of installation prefixes is constructed using the following steps. If &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; is specified all &lt;code&gt;NO_*&lt;/code&gt; options are enabled.</source>
          <target state="translated">설치 접두사 세트는 다음 단계를 사용하여 구성됩니다. 경우 &lt;code&gt;NO_DEFAULT_PATH&lt;/code&gt; 이 모두 지정 &lt;code&gt;NO_*&lt;/code&gt; 옵션이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="528f1155f7b2193a043cba84bc4b88eaf7fbb28d" translate="yes" xml:space="preserve">
          <source>The setting for this policy used when generating the link line is that in effect when the target is created by an add_executable or add_library command. For the example described above, the code</source>
          <target state="translated">링크 라인을 생성 할 때 사용되는이 정책의 설정은 대상이 add_ executable 또는 add_library 명령으로 작성 될 때 적용됩니다. 위에서 설명한 예제의 코드</target>
        </trans-unit>
        <trans-unit id="55e1053a6c6fa6f535bb7ffcdb497141991fad0b" translate="yes" xml:space="preserve">
          <source>The setting of a policy is confined in some cases to not propagate to the parent scope. For example, if the files read by the &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command or the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command contain a use of &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-1-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt;, that policy setting will not affect the caller by default. Both commands accept an optional &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; keyword to control this behavior.</source>
          <target state="translated">정책 설정은 경우에 따라 상위 범위로 전파되지 않도록 제한됩니다. 파일이 읽을 예를 들어, &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 명령 또는 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령의 사용을 포함 &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-1-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt; , 해당 정책 설정은 기본적으로 발신자에 영향을 미치지 않습니다. 두 명령 모두 선택적 &lt;code&gt;NO_POLICY_SCOPE&lt;/code&gt; 키워드를 사용하여이 동작을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="ffef4b7289de55ddf3ff91bd11b9838566a84965" translate="yes" xml:space="preserve">
          <source>The setting of policy &lt;a href=&quot;cmp0010#policy:CMP0010&quot; id=&quot;index-0-policy:CMP0010&quot;&gt;&lt;code&gt;CMP0010&lt;/code&gt;&lt;/a&gt; is not considered, so improper variable reference syntax is always an error.</source>
          <target state="translated">정책 &lt;a href=&quot;cmp0010#policy:CMP0010&quot; id=&quot;index-0-policy:CMP0010&quot;&gt; &lt;code&gt;CMP0010&lt;/code&gt; &lt;/a&gt; 의 설정은 고려되지 않으므로 부적절한 변수 참조 구문은 항상 오류입니다.</target>
        </trans-unit>
        <trans-unit id="500818d061d85fb4cc6aff1ff3ad05c509942797" translate="yes" xml:space="preserve">
          <source>The setup and cleanup tests never list the fixtures they are for in their own &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; property, as that would result in a dependency on themselves and be considered an error.</source>
          <target state="translated">셋업 및 클린업 테스트는 자신의 의존성을 초래하고 오류로 간주 될 수 있는 픽스쳐를 자체 &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; 속성 에 나열하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="91556753af05bae919a8754285df6eae872eea68" translate="yes" xml:space="preserve">
          <source>The shell command &lt;code&gt;make genexdebug&lt;/code&gt; (invoked after execution of &lt;code&gt;cmake&lt;/code&gt;) would then print the result of &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">쉘 명령 &lt;code&gt;make genexdebug&lt;/code&gt; ( &lt;code&gt;cmake&lt;/code&gt; 실행 후 호출 )는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 의 결과를 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="063c084497efcf1cb38cac57241ea5f42dc175eb" translate="yes" xml:space="preserve">
          <source>The site argument is a URL where the archives for downloadable components will reside, e.g., &lt;a href=&quot;https://cmake.org/files/2.6.1/installer/&quot;&gt;https://cmake.org/files/2.6.1/installer/&lt;/a&gt; All of the archives produced by CPack should be uploaded to that location.</source>
          <target state="translated">site 인수는 다운로드 가능한 구성 요소의 아카이브 (예 : &lt;a href=&quot;https://cmake.org/files/2.6.1/installer/&quot;&gt;https://cmake.org/files/2.6.1/installer/)&lt;/a&gt; 가있는 URL입니다. CPack에서 생성 한 모든 아카이브는 해당 위치에 업로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="c6342f40b6fe75b6eef9cea5baa0e2ff24e86201" translate="yes" xml:space="preserve">
          <source>The sort direction can be controlled using the &lt;a href=&quot;cmake_find_package_sort_direction#variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_DIRECTION&lt;/code&gt;&lt;/a&gt; variable (by default decrescent, e.g. lib-B will be tested before lib-A).</source>
          <target state="translated">정렬 방향은 &lt;a href=&quot;cmake_find_package_sort_direction#variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_SORT_DIRECTION&lt;/code&gt; &lt;/a&gt; 변수를 사용하여 제어 할 수 있습니다 (기본적으로 감소, 예를 들어 lib-B는 lib-A 전에 테스트됩니다).</target>
        </trans-unit>
        <trans-unit id="6fd6d289b153877f71d7a3bff333323971bdf816" translate="yes" xml:space="preserve">
          <source>The sorting direction used by &lt;a href=&quot;cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt;&lt;/a&gt;. It can assume one of the following values:</source>
          <target state="translated">&lt;a href=&quot;cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt; 가&lt;/a&gt; 사용하는 정렬 방향 입니다. 다음 값 중 하나를 가정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8b30abe38434cdebd573fe1833c31f0e14069ff" translate="yes" xml:space="preserve">
          <source>The source and binary directories must first be populated. It is always advised to use different directories for the source and the build.</source>
          <target state="translated">소스 및 바이너리 디렉토리를 먼저 채워야합니다. 항상 소스와 빌드에 다른 디렉토리를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a1692c581eefc0ba4f0740fefcb2efe210a5c43a" translate="yes" xml:space="preserve">
          <source>The source file generated by bison</source>
          <target state="translated">들소에 의해 생성 된 소스 파일</target>
        </trans-unit>
        <trans-unit id="5038a9423593341ac9018841ef888a909bc8b560" translate="yes" xml:space="preserve">
          <source>The source file properties will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories&amp;rsquo; scopes. CMake must already know about each of these source directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">소스 파일 속성은 각 &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; 디렉터리의 범위에서 설정됩니다. CMake는 &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 대한 호출을 통해 추가 했거나 최상위 소스 디렉토리가 됨으로써 이러한 각 소스 디렉토리에 대해 이미 알고 있어야합니다 . 상대 경로는 현재 소스 디렉토리에 상대적인 것으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="3ebb423e2b5e5eb5a0d7126fa723059e66b53dce" translate="yes" xml:space="preserve">
          <source>The source file properties will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories' scopes. CMake must already know about each of these source directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7ab7d510cb5c943c80e463910e1a1ed9291f17" translate="yes" xml:space="preserve">
          <source>The source file properties will be set in each of the directory scopes where any of the specified &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; were created (the &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; must therefore already exist).</source>
          <target state="translated">소스 파일 속성은 지정된 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 가 생성 된 각 디렉터리 범위에서 설정됩니다 (따라서 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 가 이미 존재해야 함).</target>
        </trans-unit>
        <trans-unit id="8800a6e8e9f3d6ae42645e525f2f1722cc9ae8a9" translate="yes" xml:space="preserve">
          <source>The source file property &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; adds options to one source file.</source>
          <target state="translated">소스 파일 특성 &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 는 하나의 소스 파일에 옵션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b5c5df3cad6a151e84c10b5385dbeb150fef767c" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory&amp;rsquo;s scope. CMake must already know about that source directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">소스 파일 속성은 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 디렉터리의 범위 에서 읽습니다 . CMake는 &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 호출을 통해 추가 했거나 최상위 소스 디렉토리 인 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 을 통해 해당 소스 디렉토리에 대해 이미 알고 있어야합니다 . 상대 경로는 현재 소스 디렉토리에 상대적인 것으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="7e6dfee73757440854711f49b1ab3cae1f8357ad" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory&amp;rsquo;s scope. The &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; may reference either a source directory, or since CMake 3.19, a binary directory. CMake must already know about the directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">소스 파일 속성은 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 디렉터리의 범위 에서 읽습니다 . &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 참조 할 수도 있고, 소스 디렉토리 또는 CMake 3.19 이진 디렉토리입니다. CMake는 &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 호출을 통해 디렉토리를 추가 했거나 최상위 디렉토리 인 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 을 통해 디렉토리에 대해 이미 알고 있어야합니다 . 상대 경로는 현재 소스 디렉토리에 상대적인 것으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="a4fad127ca691015ea54fd7fbf1c779e00409370" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory's scope. CMake must already know about that source directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd9ab420a9150b533a2010e521ea13a0848ff1c" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directory's scope. CMake must already know about the directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; being the top level directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ee79e334b3dd56266b2cdfdfdcf5c7509223a" translate="yes" xml:space="preserve">
          <source>The source file property will be read from the directory scope in which &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was created (&lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must therefore already exist).</source>
          <target state="translated">소스 파일 속성은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 이 생성 된 디렉터리 범위에서 읽 습니다 ( 따라서 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 이 이미 존재해야 함).</target>
        </trans-unit>
        <trans-unit id="470bea5fb74db871d573c277f292574e9a270d48" translate="yes" xml:space="preserve">
          <source>The source file property will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories&amp;rsquo; scopes. Each path may reference either a source directory, or since CMake 3.19, a binary directory. CMake must already know about each of these directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="translated">소스 파일 속성은 각 &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; 디렉터리의 범위에 설정됩니다. 각 경로는 소스 디렉토리 또는 CMake 3.19 이후 바이너리 디렉토리를 참조 할 수 있습니다. CMake는 &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 대한 호출을 통해 추가 했거나 최상위 소스 디렉터리가 됨으로써 이러한 각 디렉터리에 대해 이미 알고 있어야합니다 . 상대 경로는 현재 소스 디렉토리에 상대적인 것으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="e167bad4a04817d6470eac1cd2f8882a96d6a270" translate="yes" xml:space="preserve">
          <source>The source file property will be set in each of the &lt;code&gt;&amp;lt;dirs&amp;gt;&lt;/code&gt; directories' scopes. CMake must already know about each of these directories, either by having added them through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or it being the top level source directory. Relative paths are treated as relative to the current source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac5f71394f10652ddc820bfc904d3a7e2a1a200" translate="yes" xml:space="preserve">
          <source>The source file property will be set in each of the directory scopes where any of the specified &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; were created (the &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; must therefore already exist).</source>
          <target state="translated">소스 파일 속성은 지정된 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 가 생성 된 각 디렉터리 범위에서 설정됩니다 (따라서 &lt;code&gt;&amp;lt;targets&amp;gt;&lt;/code&gt; 가 이미 존재해야 함).</target>
        </trans-unit>
        <trans-unit id="708cc056ff4b446142760a71fd7a562e50abb660" translate="yes" xml:space="preserve">
          <source>The source file signature of the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command uses the value of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variable in the test project so that the test compilation works as it would in the main project. However, CMake 3.6 and below do not also honor config-specific compiler flags such as those in the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; variable. CMake 3.7 and above prefer to honor config-specific compiler flags too. This policy provides compatibility for projects that do not expect config-specific compiler flags to be used.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령 의 소스 파일 서명은 테스트 프로젝트에서 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 변수 의 값을 사용 하여 테스트 컴파일이 기본 프로젝트에서와 같이 작동합니다. 그러나 CMake 3.6 이하는 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; 변수 와 같은 구성 별 컴파일러 플래그도 적용하지 않습니다 . CMake 3.7 이상은 구성 별 컴파일러 플래그도 선호합니다. 이 정책은 구성 별 컴파일러 플래그를 사용하지 않을 프로젝트에 대한 호환성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="33ef3a60f20b2e61e02e66fd28fe95c11216bd6d" translate="yes" xml:space="preserve">
          <source>The source file then will be compiled by the &lt;code&gt;moc&lt;/code&gt; to the output file &lt;code&gt;&amp;lt;base&amp;gt;.moc&lt;/code&gt;. A description of the complete output file path is in section &lt;a href=&quot;#output-file-location&quot;&gt;Output file location&lt;/a&gt;.</source>
          <target state="translated">그런 다음 소스 파일은 &lt;code&gt;moc&lt;/code&gt; 에 의해 &lt;code&gt;&amp;lt;base&amp;gt;.moc&lt;/code&gt; 출력 파일 로 컴파일됩니다 . 전체 출력 파일 경로에 대한 설명은 &lt;a href=&quot;#output-file-location&quot;&gt;출력 파일 위치&lt;/a&gt; 섹션에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6d9821350ae284e3a68129ac061d708a6518ec1" translate="yes" xml:space="preserve">
          <source>The source tree is updated by &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git reset --hard&lt;/code&gt; to the &lt;code&gt;FETCH_HEAD&lt;/code&gt;. The result is the same as &lt;code&gt;git pull&lt;/code&gt; except that any local modifications are overwritten. Use &lt;code&gt;GITUpdateCustom&lt;/code&gt; to specify a different approach.</source>
          <target state="translated">소스 트리는 &lt;code&gt;git fetch&lt;/code&gt; 와 &lt;code&gt;git reset --hard&lt;/code&gt; 에 의해 &lt;code&gt;FETCH_HEAD&lt;/code&gt; 로 업데이트됩니다 . 결과는 로컬 수정 사항을 덮어 &lt;code&gt;git pull&lt;/code&gt; 점을 제외하고 git pull과 동일합니다. 다른 접근법을 지정 하려면 &lt;code&gt;GITUpdateCustom&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f59f557df59d84ef4e318bb7ffef077f61abfa45" translate="yes" xml:space="preserve">
          <source>The source will be &lt;code&gt;moc&lt;/code&gt; compiled again if a file from the additional file dependencies changes.</source>
          <target state="translated">추가 파일 종속성의 파일이 변경되면 소스는 다시 &lt;code&gt;moc&lt;/code&gt; 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="1a6bc7dce1ea4c069ed6393c20851b167855fb4b" translate="yes" xml:space="preserve">
          <source>The sources in the target &lt;code&gt;OpenSSL::applink&lt;/code&gt; that is mentioned above. This variable shall always be undefined if found openssl version is less than 0.9.8 or if platform is not MSVC.</source>
          <target state="translated">위에서 언급 한 대상 &lt;code&gt;OpenSSL::applink&lt;/code&gt; 의 소스입니다 . 이 변수는 발견 된 openssl 버전이 0.9.8 미만이거나 플랫폼이 MSVC가 아닌 경우 항상 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6260912732d844ac614e922e5ad4bb9750d59b03" translate="yes" xml:space="preserve">
          <source>The specification date is formatted as given in the OpenACC standard: &lt;code&gt;yyyymm&lt;/code&gt; where &lt;code&gt;yyyy&lt;/code&gt; and &lt;code&gt;mm&lt;/code&gt; represents the year and month of the OpenACC specification implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">사양 날짜는 OpenACC 표준에 지정된대로 포맷됩니다. &lt;code&gt;yyyymm&lt;/code&gt; 여기서 &lt;code&gt;yyyy&lt;/code&gt; 와 &lt;code&gt;mm&lt;/code&gt; 은 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 컴파일러로 구현 된 OpenACC 사양의 연도와 월을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b4489fdf05845a320b9a044a955f7ef1ee8f8b9e" translate="yes" xml:space="preserve">
          <source>The specification date is formatted as given in the OpenMP standard: &lt;code&gt;yyyymm&lt;/code&gt; where &lt;code&gt;yyyy&lt;/code&gt; and &lt;code&gt;mm&lt;/code&gt; represents the year and month of the OpenMP specification implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">사양 날짜는 OpenMP 표준에 지정된대로 포맷됩니다. &lt;code&gt;yyyymm&lt;/code&gt; 여기서 &lt;code&gt;yyyy&lt;/code&gt; 와 &lt;code&gt;mm&lt;/code&gt; 은 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 컴파일러로 구현 된 OpenMP 사양의 연도와 월을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="05923a7daab93d81fc79f35d46f8de80e13c7359" translate="yes" xml:space="preserve">
          <source>The specified arguments are passed to the &lt;code&gt;cmake&lt;/code&gt; command line. They can be any argument the &lt;code&gt;cmake&lt;/code&gt; command understands, not just cache values defined by &lt;code&gt;-D...&lt;/code&gt; arguments (see also &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;CMake Options&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec367961e8d792924a06377cb51f2985ae0916a" translate="yes" xml:space="preserve">
          <source>The specified arguments are passed to the &lt;code&gt;cmake&lt;/code&gt; command line. They can be any argument the &lt;code&gt;cmake&lt;/code&gt; command understands, not just cache values defined by &lt;code&gt;-D...&lt;/code&gt; arguments (see also &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;CMake Options&lt;/code&gt;&lt;/a&gt;). In addition, arguments may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 인수는 &lt;code&gt;cmake&lt;/code&gt; 명령 행으로 전달됩니다 . 이는 &lt;code&gt;-D...&lt;/code&gt; 인수로 정의 된 캐시 값뿐만 아니라 &lt;code&gt;cmake&lt;/code&gt; 명령이 이해 하는 모든 인수 일 수 있습니다 ( &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;CMake Options&lt;/code&gt; &lt;/a&gt; 참조 ). 또한 인수는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7052669acbb6b5182fb14b01b11be235763c9892" translate="yes" xml:space="preserve">
          <source>The specified manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">지정된 매뉴얼은 사람이 읽을 수있는 텍스트 형식으로 인쇄됩니다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="0e6d7c3938110c881fdbbd29ea003df7a1c047d6" translate="yes" xml:space="preserve">
          <source>The standard output from executing the module command.</source>
          <target state="translated">모듈 명령 실행의 표준 출력</target>
        </trans-unit>
        <trans-unit id="b1bd544fd17afaa74df6d1cbfce3fed2a813a6ed" translate="yes" xml:space="preserve">
          <source>The standard output or standard error results will be quietly ignored.</source>
          <target state="translated">표준 출력 또는 표준 오류 결과는 조용히 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c53807e759a33f4e6c44e9b3a5bb6fd000af7c1b" translate="yes" xml:space="preserve">
          <source>The standard output or standard error will not be exclusively redirected to the configured variables.</source>
          <target state="translated">표준 출력 또는 표준 오류는 구성된 변수로 배타적으로 리디렉션되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bba139fccbb56dbb7b45a53cef1ee824c94604ec" translate="yes" xml:space="preserve">
          <source>The static library file (e.g. &lt;code&gt;.lib&lt;/code&gt; or &lt;code&gt;.a&lt;/code&gt;) of a static library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-7-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;STATIC&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;STATIC&lt;/code&gt; 옵션 과 함께 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-7-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 정적 라이브러리 대상 의 정적 라이브러리 파일 (예 : &lt;code&gt;.lib&lt;/code&gt; 또는 &lt;code&gt;.a&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4a7dcdc3d4cb78b464794f465ab9667a0fb2cfd1" translate="yes" xml:space="preserve">
          <source>The string &quot;ctestInfo&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431b5ef0469e813055b0b43b38b44c7178775063" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;ctestInfo&amp;rdquo;.</source>
          <target state="translated">문자열&amp;ldquo;ctestInfo&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="79afd1e93be8d4769b3a492492896849a9ffb4e7" translate="yes" xml:space="preserve">
          <source>The sub-commands &lt;a href=&quot;#relative-path&quot;&gt;RELATIVE_PATH&lt;/a&gt;, &lt;a href=&quot;#to-cmake-path&quot;&gt;TO_CMAKE_PATH&lt;/a&gt; and &lt;a href=&quot;#to-native-path&quot;&gt;TO_NATIVE_PATH&lt;/a&gt; has been superseded, respectively, by sub-commands &lt;a href=&quot;cmake_path#cmake-path-relative-path&quot;&gt;RELATIVE_PATH&lt;/a&gt;, &lt;a href=&quot;cmake_path#cmake-path-to-cmake-path-list&quot;&gt;CONVERT ... TO_CMAKE_PATH_LIST&lt;/a&gt; and &lt;a href=&quot;cmake_path#cmake-path-to-native-path-list&quot;&gt;CONVERT ... TO_NATIVE_PATH_LIST&lt;/a&gt; of &lt;a href=&quot;cmake_path#command:cmake_path&quot; id=&quot;index-1-command:cmake_path&quot;&gt;&lt;code&gt;cmake_path()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f5cb1a40bb9dbf361e689e3fb384504d5d25b8" translate="yes" xml:space="preserve">
          <source>The suffix corresponds to the file extension (such as &quot;.so&quot; or &quot;.lib&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8144534797a7578d70f1f707c90ed1be03d07189" translate="yes" xml:space="preserve">
          <source>The suffix corresponds to the file extension (such as &amp;ldquo;.so&amp;rdquo; or &amp;ldquo;.exe&amp;rdquo;).</source>
          <target state="translated">접미사는 파일 확장자 (예 : &quot;.so&quot;또는 &quot;.exe&quot;)에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="55ba2fee6bb56f6f809aaa4cb825580c4cb609ee" translate="yes" xml:space="preserve">
          <source>The suffix corresponds to the file extension (such as &amp;ldquo;.so&amp;rdquo; or &amp;ldquo;.lib&amp;rdquo;).</source>
          <target state="translated">접미사는 파일 확장자 (예 : &quot;.so&quot;또는 &quot;.lib&quot;)에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="a05fc4da9628e139cf40f9ae1f8abe0541e52c28" translate="yes" xml:space="preserve">
          <source>The suffix for executables on this platform.</source>
          <target state="translated">이 플랫폼에서 실행 파일의 접미사입니다.</target>
        </trans-unit>
        <trans-unit id="66388636491cbba50667b3fc413661388fe431bc" translate="yes" xml:space="preserve">
          <source>The suffix for import libraries that you link to.</source>
          <target state="translated">링크하는 가져 오기 라이브러리의 접미 부.</target>
        </trans-unit>
        <trans-unit id="f1c4c8eb5725dc0ed7c083aa070b13397b8c58d3" translate="yes" xml:space="preserve">
          <source>The suffix for libraries that you link to.</source>
          <target state="translated">링크하는 라이브러리의 접미사입니다.</target>
        </trans-unit>
        <trans-unit id="e0214f890f738dc33b49f01e7e041eac712b5c5e" translate="yes" xml:space="preserve">
          <source>The suffix for shared libraries that you link to.</source>
          <target state="translated">링크 한 공유 라이브러리의 접미사.</target>
        </trans-unit>
        <trans-unit id="5937930379e632af6f42d0924c5fa341cee45324" translate="yes" xml:space="preserve">
          <source>The suffix for static libraries that you link to.</source>
          <target state="translated">링크하는 정적 라이브러리의 접미 부입니다.</target>
        </trans-unit>
        <trans-unit id="adcae9fce03f45d659f7038047884dd33e48af33" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a library filename, &lt;code&gt;.lib&lt;/code&gt; on Windows.</source>
          <target state="translated">Windows 에서 라이브러리 파일 이름 인 &lt;code&gt;.lib&lt;/code&gt; 의 끝에 사용되는 접미사 입니다.</target>
        </trans-unit>
        <trans-unit id="d0e7572709899e1213483b52175a256e66ae68ba" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a loadable module filename on this platform</source>
          <target state="translated">이 플랫폼에서로드 가능한 모듈 파일 이름의 끝에 사용되는 접미사</target>
        </trans-unit>
        <trans-unit id="96d7b3a400c5b753188cfc5f784e0e51b83b43c1" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a shared library filename, &lt;code&gt;.dll&lt;/code&gt; on Windows.</source>
          <target state="translated">Windows 에서 공유 라이브러리 파일 이름 인 &lt;code&gt;.dll&lt;/code&gt; 의 끝에 사용할 접미사 입니다.</target>
        </trans-unit>
        <trans-unit id="11acb3d69bc016374dc84e266f665f8b9ee3adf7" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of a static library filename, &lt;code&gt;.lib&lt;/code&gt; on Windows.</source>
          <target state="translated">정적 라이브러리 파일 이름 ( Windows의 경우 &lt;code&gt;.lib&lt;/code&gt; ) 의 끝에 사용할 접미사 입니다.</target>
        </trans-unit>
        <trans-unit id="469da3478ef2d570a97446bb3c3bea59fa99e710" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of an executable filename if any, &lt;code&gt;.exe&lt;/code&gt; on Windows.</source>
          <target state="translated">실행 파일 이름 (있는 경우)의 끝에 사용되는 접미사 ( Windows의 경우 &lt;code&gt;.exe&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="40d73bcb846820e3749fcb3fac1c6021c35a14ae" translate="yes" xml:space="preserve">
          <source>The suffix to use for the end of an import library filename if used on this platform.</source>
          <target state="translated">이 플랫폼에서 사용되는 경우 가져 오기 라이브러리 파일 이름 끝에 사용할 접미사입니다.</target>
        </trans-unit>
        <trans-unit id="bd0f718a2e407d71af70170d4de65197a2ab0629" translate="yes" xml:space="preserve">
          <source>The supported options for &lt;code&gt;FetchContent_Populate()&lt;/code&gt; are the same as those for &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-2-command:fetchcontent_declare&quot;&gt;&lt;code&gt;FetchContent_Declare()&lt;/code&gt;&lt;/a&gt;. Those few options shown just above are either specific to &lt;code&gt;FetchContent_Populate()&lt;/code&gt; or their behavior is slightly modified from how &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; treats them.</source>
          <target state="translated">위한 지원되는 옵션 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 과 동일 &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-2-command:fetchcontent_declare&quot;&gt; &lt;code&gt;FetchContent_Declare()&lt;/code&gt; &lt;/a&gt; . 위에 표시된 몇 가지 옵션은 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 에만 해당 되거나 &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-3-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 처리 하는 방식에 따라 동작이 약간 수정 됩니다.</target>
        </trans-unit>
        <trans-unit id="10446e3f325fc0038efc31bb580bb6b93524410a" translate="yes" xml:space="preserve">
          <source>The system directories that are contained in &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; are locations that typically include installed software. An example being &lt;code&gt;/usr/local&lt;/code&gt; for UNIX based platforms. In addition to standard platform locations, CMake will also add values to &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; based on environment variables. The environment variables and search locations that CMake uses may evolve over time, as platforms and their conventions also evolve. The following provides an indicative list of environment variables and locations that CMake searches, but they are subject to change:</source>
          <target state="translated">&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 에 포함 된 시스템 디렉토리는 일반적으로 설치된 소프트웨어를 포함하는 위치입니다. UNIX 기반 플랫폼 의 경우 예는 &lt;code&gt;/usr/local&lt;/code&gt; 입니다. 표준 플랫폼 위치 외에도 CMake는 환경 변수를 기반으로 &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 에 값을 추가합니다 . CMake가 사용하는 환경 변수와 검색 위치는 플랫폼과 그 규칙도 진화함에 따라 시간이 지남에 따라 진화 할 수 있습니다. 다음은 CMake가 검색하는 환경 변수 및 위치의 표시 목록을 제공하지만 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="831e4fbb0cc9ed7045c26665ec0dc929dfca8c4d" translate="yes" xml:space="preserve">
          <source>The target architecture is Big Endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4c6ff894d2d2668a064719cbc4b13db2e78e22" translate="yes" xml:space="preserve">
          <source>The target architecture is Little Endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b55b5e2640b5221cd48c33e4ef20bbe469bdab" translate="yes" xml:space="preserve">
          <source>The target for cross-compiling, if supported.</source>
          <target state="translated">지원되는 경우 크로스 컴파일 대상.</target>
        </trans-unit>
        <trans-unit id="2aeaff34f8b1fc8f1576712a0d9f5b4c30fbf305" translate="yes" xml:space="preserve">
          <source>The target in the &lt;code&gt;TARGET&lt;/code&gt; signature of &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; must exist and must be defined in the current directory.</source>
          <target state="translated">&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;TARGET&lt;/code&gt; 서명에 대상이 존재해야하며 현재 디렉토리에 정의되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="2f981fabc2eb3af0244ccf70cdd129bdb424d9ec" translate="yes" xml:space="preserve">
          <source>The target is being cross-compiled and an emulator is provided (i.e. its &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; target property is set). In this case, the contents of &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-1-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; will be prepended to the command before the location of the target executable.</source>
          <target state="translated">대상이 교차 컴파일되고 에뮬레이터가 제공됩니다 (예 : &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt; 대상 속성이 설정 됨). 이 경우 &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-1-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt; 의 내용은 대상 실행 파일의 위치 앞에 명령 앞에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b3327d6903c8367f32f100840a5edf0879addae7" translate="yes" xml:space="preserve">
          <source>The target is not being cross-compiled (i.e. the &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable is not set to true).</source>
          <target state="translated">대상이 교차 컴파일되지 않습니다 (예 : &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt; &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; &lt;/a&gt; 변수가 true로 설정되지 않음).</target>
        </trans-unit>
        <trans-unit id="a7a058e5dcf955cd5822c26a0b01c492a2cfb340" translate="yes" xml:space="preserve">
          <source>The target name &lt;code&gt;tgt&lt;/code&gt; if the target exists, an empty string otherwise.</source>
          <target state="translated">대상이 있으면 대상 이름 &lt;code&gt;tgt&lt;/code&gt; , 그렇지 않으면 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="2515535148bc040ba7627720d288cbac016054bc" translate="yes" xml:space="preserve">
          <source>The target properties &lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; supersede this variable for a target if they are set. Library targets are otherwise placed in this directory.</source>
          <target state="translated">대상 특성 &lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; 는&lt;/a&gt; 이 변수가 설정된 경우 대상에 대해이 변수를 대체합니다. 그렇지 않으면 라이브러리 대상이이 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="e868ee8f785f8a659d74d79aabfd2c628f3ea846" translate="yes" xml:space="preserve">
          <source>The target properties &lt;code&gt;CXX_VISIBILITY_PRESET&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/visibility_inlines_hidden#prop_tgt:VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-prop_tgt:VISIBILITY_INLINES_HIDDEN&quot;&gt;&lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt;&lt;/a&gt; can be used to add the appropriate compile flags for targets. See the documentation of those target properties, and the convenience variables &lt;code&gt;CMAKE_CXX_VISIBILITY_PRESET&lt;/code&gt; and &lt;a href=&quot;../variable/cmake_visibility_inlines_hidden#variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot;&gt;&lt;code&gt;CMAKE_VISIBILITY_INLINES_HIDDEN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대상 속성 &lt;code&gt;CXX_VISIBILITY_PRESET&lt;/code&gt; 및 &lt;a href=&quot;../prop_tgt/visibility_inlines_hidden#prop_tgt:VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-prop_tgt:VISIBILITY_INLINES_HIDDEN&quot;&gt; &lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt; &lt;/a&gt; 을 사용하여 대상에 적절한 컴파일 플래그를 추가 할 수 있습니다. 해당 대상 특성 및 편의 변수 &lt;code&gt;CMAKE_CXX_VISIBILITY_PRESET&lt;/code&gt; 및 &lt;a href=&quot;../variable/cmake_visibility_inlines_hidden#variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-variable:CMAKE_VISIBILITY_INLINES_HIDDEN&quot;&gt; &lt;code&gt;CMAKE_VISIBILITY_INLINES_HIDDEN&lt;/code&gt; &lt;/a&gt; 의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ffb95185af810efbdc39ebf54b0b3d0bfeb6a4c" translate="yes" xml:space="preserve">
          <source>The target property &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; supercedes this variable for a target if it is set. Executable targets are otherwise placed in this directory.</source>
          <target state="translated">대상 속성 &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 가 설정된 경우 대상에 대해이 변수를 대체합니다. 실행 가능한 대상은이 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="5674d51bd5b51b7ed5227bd9792cc0ff7b72253d" translate="yes" xml:space="preserve">
          <source>The target property values are used by the generators to set the include paths for the compiler.</source>
          <target state="translated">대상 속성 값은 생성기에서 컴파일러의 포함 경로를 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dec006d58ca9f8195ba5f313c4b0fcfed7d3bef8" translate="yes" xml:space="preserve">
          <source>The target to be linked to is a regular non-imported, non-interface library target.</source>
          <target state="translated">링크 할 대상은 가져 오지 않은 일반 비 인터페이스 라이브러리 대상입니다.</target>
        </trans-unit>
        <trans-unit id="3ac4522ff260c870036e21d0db8b791f3e1a94f5" translate="yes" xml:space="preserve">
          <source>The target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/source_dir#prop_tgt:SOURCE_DIR&quot; id=&quot;index-0-prop_tgt:SOURCE_DIR&quot;&gt;&lt;code&gt;SOURCE_DIR&lt;/code&gt;&lt;/a&gt; property differs from &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대상의 &lt;a href=&quot;../prop_tgt/source_dir#prop_tgt:SOURCE_DIR&quot; id=&quot;index-0-prop_tgt:SOURCE_DIR&quot;&gt; &lt;code&gt;SOURCE_DIR&lt;/code&gt; 의&lt;/a&gt; 에서 속성 다릅니다 &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a01575be009acaff2474d6824d80b8f986b50e7e" translate="yes" xml:space="preserve">
          <source>The target's &lt;a href=&quot;../prop_tgt/source_dir#prop_tgt:SOURCE_DIR&quot; id=&quot;index-0-prop_tgt:SOURCE_DIR&quot;&gt;&lt;code&gt;SOURCE_DIR&lt;/code&gt;&lt;/a&gt; property differs from &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32688b5d2da5a01dffe2460f07ed578d042d6afd" translate="yes" xml:space="preserve">
          <source>The test step is only defined if at least one of the following &lt;code&gt;TEST_...&lt;/code&gt; options are provided.</source>
          <target state="translated">테스트 단계는 다음 &lt;code&gt;TEST_...&lt;/code&gt; 옵션 중 하나 이상 이 제공되는 경우에만 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="2e05e793d193f3a304cbbe5b6d98d4d1f5e234b5" translate="yes" xml:space="preserve">
          <source>The thread library to use. This may be empty if the thread functions are provided by the system libraries and no special flags are needed to use them.</source>
          <target state="translated">사용할 스레드 라이브러리입니다. 스레드 함수가 시스템 라이브러리에서 제공되고이를 사용하는 데 특별한 플래그가 필요하지 않은 경우 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3122095c6e751b23fc315f5d53cf1827a754072" translate="yes" xml:space="preserve">
          <source>The thread library, if found.</source>
          <target state="translated">스레드 라이브러리 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="e227ccb7022ee76694c3a0352fa12075fb0b6d5c" translate="yes" xml:space="preserve">
          <source>The time limit in seconds</source>
          <target state="translated">초 단위의 시간 제한</target>
        </trans-unit>
        <trans-unit id="cabf54e414b3e27b2b1746fcc714264d3efcb4e2" translate="yes" xml:space="preserve">
          <source>The tool selected depends on the &lt;a href=&quot;cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; used to configure the project:</source>
          <target state="translated">선택된 도구 는 프로젝트를 구성하는 데 사용 된 &lt;a href=&quot;cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 에&lt;/a&gt; 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="d6ec8779fb1a5b16a481dbe32aed3cea51329374" translate="yes" xml:space="preserve">
          <source>The toolset version of Microsoft Visual C/C++ being used if any. If MSVC-like is being used, this variable is set based on the version of the compiler as given by the &lt;a href=&quot;msvc_version#variable:MSVC_VERSION&quot; id=&quot;index-0-variable:MSVC_VERSION&quot;&gt;&lt;code&gt;MSVC_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">사용중인 Microsoft Visual C / C ++의 도구 세트 버전. MSVC &lt;a href=&quot;msvc_version#variable:MSVC_VERSION&quot; id=&quot;index-0-variable:MSVC_VERSION&quot;&gt; &lt;code&gt;MSVC_VERSION&lt;/code&gt; &lt;/a&gt; 하는 경우이 변수 는 MSVC_VERSION 변수에서 제공 한 컴파일러 버전을 기반으로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="79a88fc39845d58956335847c931fc1b58805db4" translate="yes" xml:space="preserve">
          <source>The top of the module should begin with a license notice, followed by a blank line, and then followed by a &lt;a href=&quot;cmake-language.7#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt;. The comment should begin with &lt;code&gt;.rst:&lt;/code&gt; to indicate that the rest of its content is reStructuredText-format documentation. For example:</source>
          <target state="translated">모듈 상단은 라이센스 통지로 시작하고 빈 줄이오고 그 다음에 &lt;a href=&quot;cmake-language.7#bracket-comment&quot;&gt;Bracket Comment가&lt;/a&gt; 옵니다 . 주석은 &lt;code&gt;.rst:&lt;/code&gt; 로 시작해야 나머지 내용이 reStructuredText 형식 문서임을 나타냅니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="be191b9a8cb5286e1e5a5c1a00c3de6137e6ee84" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file for a project must contain a literal, direct call to the &lt;code&gt;project()&lt;/code&gt; command; loading one through the &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command is not sufficient. If no such call exists, CMake will issue a warning and pretend there is a &lt;code&gt;project(Project)&lt;/code&gt; at the top to enable the default languages (&lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;).</source>
          <target state="translated">프로젝트의 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일에는 &lt;code&gt;project()&lt;/code&gt; 명령 에 대한 직접적인 직접 호출이 포함되어야합니다 . &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 명령을 통해로드하는 것만으로는 충분하지 않습니다. 이러한 호출이 존재하지 않으면 CMake는 경고를 발행 하고 맨 위에 기본 언어 ( &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;CXX&lt;/code&gt; ) 를 사용하도록 설정 하는 &lt;code&gt;project(Project)&lt;/code&gt; 를 가장합니다 .</target>
        </trans-unit>
        <trans-unit id="87005bb6261e6aee373e54368a2ff756eb0e8f8a" translate="yes" xml:space="preserve">
          <source>The top-level directory containing source files provided by the project. The project specifies its buildsystem using files as described in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-2-manual:cmake-language(7)&quot;&gt;&lt;code&gt;cmake-language(7)&lt;/code&gt;&lt;/a&gt; manual, starting with a top-level file named &lt;code&gt;CMakeLists.txt&lt;/code&gt;. These files specify build targets and their dependencies as described in the &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual.</source>
          <target state="translated">프로젝트에서 제공 한 소스 파일이 포함 된 최상위 디렉토리입니다. 프로젝트는 &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-2-manual:cmake-language(7)&quot;&gt; &lt;code&gt;cmake-language(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼에 설명 된대로 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 라는 최상위 파일로 시작 하여 파일을 사용하여 빌드 시스템을 지정합니다 . 이 파일은 &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼에 설명 된대로 빌드 대상 및 해당 종속성을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="b6f692fa81b19c5e665cd44984736ab1ec190ea6" translate="yes" xml:space="preserve">
          <source>The top-level directory in which buildsystem files and build output artifacts (e.g. executables and libraries) are to be stored. CMake will write a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file to identify the directory as a build tree and store persistent information such as buildsystem configuration options.</source>
          <target state="translated">빌드 시스템 파일 및 빌드 출력 결과물 (예 : 실행 파일 및 라이브러리)이 저장되는 최상위 디렉토리입니다. CMake는 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 파일을 작성 하여 디렉토리를 빌드 트리로 식별하고 빌드 시스템 구성 옵션과 같은 영구 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="6a9cac256c48503c5fdd8d291c1aa5b2ea37187c" translate="yes" xml:space="preserve">
          <source>The total number of groups specified by the &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-3-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; property. For example:</source>
          <target state="translated">&lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-3-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt; 속성에 지정된 총 그룹 수입니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="843cb6d39697368bf1a371bc7e39d4e541ccb895" translate="yes" xml:space="preserve">
          <source>The traditional approach is to use variables for everything, including libraries and executables: see the &lt;a href=&quot;#standard-variable-names&quot;&gt;Standard Variable Names&lt;/a&gt; section below. This is what most of the existing find modules provided by CMake do.</source>
          <target state="translated">전통적인 접근 방식은 라이브러리 및 실행 파일을 포함하여 모든 것에 변수를 사용하는 것 입니다. 아래 의 &lt;a href=&quot;#standard-variable-names&quot;&gt;표준 변수 이름&lt;/a&gt; 섹션을 참조하십시오. 이것이 CMake가 제공하는 대부분의 기존 찾기 모듈이하는 일입니다.</target>
        </trans-unit>
        <trans-unit id="9ae838f55dcb7153ed11d5b6b9fd151826fd0373" translate="yes" xml:space="preserve">
          <source>The tweak version of the top level project.</source>
          <target state="translated">최상위 프로젝트의 조정 버전.</target>
        </trans-unit>
        <trans-unit id="cc02ca2a79f21efa6eb20dfa402da0ed9729a454" translate="yes" xml:space="preserve">
          <source>The type of the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target created in the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command can always be specified as &lt;code&gt;UNKNOWN&lt;/code&gt; type. This simplifies the code in cases where static or shared variants may be found, and CMake will determine the type by inspecting the files.</source>
          <target state="translated">&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 의 유형은 항상 &lt;code&gt;UNKNOWN&lt;/code&gt; 유형 으로 지정할 수 있습니다 . 이것은 정적 또는 공유 변형을 찾을 수있는 경우 코드를 단순화하며 CMake는 파일을 검사하여 유형을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="7d205f1515145921e405590e3fb8ce8438072639" translate="yes" xml:space="preserve">
          <source>The type of the target.</source>
          <target state="translated">대상의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="cb82581139167e9dbdf573a69a9a5abfe6e30c27" translate="yes" xml:space="preserve">
          <source>The unary &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; generator expression and the &lt;code&gt;TARGET_POLICY&lt;/code&gt; generator expression are evaluated with the consuming target context. This means that a usage requirement specification may be evaluated differently based on the consumer:</source>
          <target state="translated">단항 &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; 생성기 표현식 및 &lt;code&gt;TARGET_POLICY&lt;/code&gt; 생성기 표현식은 소비 대상 컨텍스트로 평가됩니다. 이는 사용 요구 사항 사양이 소비자에 따라 다르게 평가 될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="26c879444538846681ce925ef419c860f55102ce" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_c_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">기본 점검은 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . &lt;code&gt;check_c_source_compiles()&lt;/code&gt; 를 호출하기 전에 다음 변수를 설정하여 컴파일 및 링크 명령에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="73deb8c8f9ca71a8e51ff649f460bca8ed613a36" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_cxx_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">기본 점검은 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . &lt;code&gt;check_cxx_source_compiles()&lt;/code&gt; 를 호출하기 전에 다음 변수를 설정하여 컴파일 및 링크 명령에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0a3774d17d7c85b7cdcd1991b834bc3a48e2c06" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_fortran_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">기본 점검은 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . &lt;code&gt;check_fortran_source_compiles()&lt;/code&gt; 를 호출하기 전에 다음 변수를 설정하여 컴파일 및 링크 명령에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b304ad05cf9d36f84b8c381b165f7ff314023eb" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objc_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">기본 검사는 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령에 의해 수행됩니다 . 컴파일 및 링크 명령은 &lt;code&gt;check_objc_source_compiles()&lt;/code&gt; 를 호출하기 전에 다음 변수 중 하나를 설정하여 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b67a6a348ca7a59e2a197cd1920ed9b5a8478e4" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objcxx_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">기본 검사는 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령에 의해 수행됩니다 . 컴파일 및 링크 명령은 &lt;code&gt;check_objcxx_source_compiles()&lt;/code&gt; 를 호출하기 전에 다음 변수 중 하나를 설정하여 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f79f9f51fc73e53e7d52cbcd844456134f7facda" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_source_compiles()&lt;/code&gt;:</source>
          <target state="translated">기본 검사는 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령에 의해 수행됩니다 . 컴파일 및 링크 명령은 &lt;code&gt;check_source_compiles()&lt;/code&gt; 를 호출하기 전에 다음 변수 중 하나를 설정하여 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a02bae9e16544c62e2e6fded8f8d33ed3fb0238" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_c_source_runs()&lt;/code&gt;:</source>
          <target state="translated">기본 점검은 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . &lt;code&gt;check_c_source_runs()&lt;/code&gt; 를 호출하기 전에 다음 변수를 설정하여 컴파일 및 링크 명령에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="72f4fcca24cc3cd98bc4fbfbbcbf7204c4b91334" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_cxx_source_runs()&lt;/code&gt;:</source>
          <target state="translated">기본 점검은 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . &lt;code&gt;check_cxx_source_runs()&lt;/code&gt; 를 호출하기 전에 다음 변수를 설정하여 컴파일 및 링크 명령에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ce0512050b8d715b774d611ca12f78255f1f2f5" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_fortran_source_runs()&lt;/code&gt;:</source>
          <target state="translated">기본 점검은 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . &lt;code&gt;check_fortran_source_runs()&lt;/code&gt; 를 호출하기 전에 다음 변수를 설정하여 컴파일 및 링크 명령에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfc6ac20b16c37cbf7cdbe0aaf7e3a4ec0a93e38" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objc_source_runs()&lt;/code&gt;:</source>
          <target state="translated">기본 검사는 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . 컴파일 및 링크 명령은 &lt;code&gt;check_objc_source_runs()&lt;/code&gt; 를 호출하기 전에 다음 변수 중 하나를 설정하여 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74a4307969e74d0d387212fc4aaeb09acbf42e46" translate="yes" xml:space="preserve">
          <source>The underlying check is performed by the &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command. The compile and link commands can be influenced by setting any of the following variables prior to calling &lt;code&gt;check_objcxx_source_runs()&lt;/code&gt;:</source>
          <target state="translated">기본 검사는 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 명령으로 수행됩니다 . 컴파일 및 링크 명령은 &lt;code&gt;check_objcxx_source_runs()&lt;/code&gt; 를 호출하기 전에 다음 변수 중 하나를 설정하여 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e586c073d7f83c2ad9e2c9c9df8e38fa98005e23" translate="yes" xml:space="preserve">
          <source>The underlying implementation relies on the &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property to check the specified flag. The &lt;code&gt;LINKER:&lt;/code&gt; prefix, as described in the &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command, can be used as well.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; 속성을 사용하여 지정된 플래그를 확인합니다. &lt;code&gt;LINKER:&lt;/code&gt; 에서 설명한 바와 같이 프리픽스 &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt; &lt;code&gt;target_link_options()&lt;/code&gt; &lt;/a&gt; 명령을 잘 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="a82dd6e8ed186a4ef23e0eb9a95f3bfd81642c5c" translate="yes" xml:space="preserve">
          <source>The unit test uses the Matlab unittest framework (default, available starting Matlab 2013b+) except if the option &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; is given.</source>
          <target state="translated">단위 테스트는 &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; 옵션 이 지정된 경우를 제외하고 Matlab 단위 테스트 프레임 워크 (기본값, Matlab 2013b +부터 사용 가능)를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e107268d63cb59107e6b3f38393bc14137373fa8" translate="yes" xml:space="preserve">
          <source>The update always follows the version control branch currently checked out in the source directory. See the &lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;CTest Update Step&lt;/a&gt; documentation for information about variables that change the behavior of &lt;code&gt;ctest_update()&lt;/code&gt;.</source>
          <target state="translated">업데이트는 항상 소스 디렉토리에서 현재 체크 아웃 된 버전 제어 분기를 따릅니다. &lt;code&gt;ctest_update()&lt;/code&gt; 의 동작을 변경하는 변수에 대한 정보는 CTest &lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;업데이트 단계&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05c2d011f4614edf570c12151b0f19f446305098" translate="yes" xml:space="preserve">
          <source>The usage requirements of a target can transitively propagate to dependents. The &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command has &lt;code&gt;PRIVATE&lt;/code&gt;, &lt;code&gt;INTERFACE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; keywords to control the propagation.</source>
          <target state="translated">대상의 사용 요구 사항은 종속적으로 전 이적으로 전파 될 수 있습니다. &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령이 &lt;code&gt;PRIVATE&lt;/code&gt; , &lt;code&gt;INTERFACE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 이 전파를 제어하는 키워드를.</target>
        </trans-unit>
        <trans-unit id="53775e59bcb9b393c1e60348bd910d614c55e9c6" translate="yes" xml:space="preserve">
          <source>The use of double-colons is a common pattern used to namespace &lt;code&gt;IMPORTED&lt;/code&gt; targets and &lt;code&gt;ALIAS&lt;/code&gt; targets. When computing the link dependencies of a target, the name of each dependency could either be a target, or a file on disk. Previously, if a target was not found with a matching name, the name was considered to refer to a file on disk. This can lead to confusing error messages if there is a typo in what should be a target name.</source>
          <target state="translated">이중 콜론 사용은 네임 스페이스 &lt;code&gt;IMPORTED&lt;/code&gt; 대상 및 &lt;code&gt;ALIAS&lt;/code&gt; 대상에 사용되는 일반적인 패턴 입니다. 대상의 링크 종속성을 계산할 때 각 종속성의 이름은 대상이거나 디스크의 파일 일 수 있습니다. 이전에는 이름이 일치하는 대상을 찾지 못한 경우 이름은 디스크의 파일을 참조하는 것으로 간주되었습니다. 대상 이름에 오타가 있으면 혼동되는 오류 메시지가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf9221aeeea30f430b2d4835116c84301fa8ab12" translate="yes" xml:space="preserve">
          <source>The user may override the default generator with the &lt;code&gt;-G&lt;/code&gt; option:</source>
          <target state="translated">사용자는 &lt;code&gt;-G&lt;/code&gt; 옵션을 사용하여 기본 생성기를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3005cdf318a29b1ccec06fa5c313af92a8b2caf4" translate="yes" xml:space="preserve">
          <source>The user may set the environment variable &lt;code&gt;FREETYPE_DIR&lt;/code&gt; to the root directory of a Freetype installation.</source>
          <target state="translated">사용자는 &lt;code&gt;FREETYPE_DIR&lt;/code&gt; 환경 변수 를 Freetype 설치의 루트 디렉토리로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1208c9ab1d0bd99e69d1dd334df6c3da50507aa" translate="yes" xml:space="preserve">
          <source>The user&amp;rsquo;s path is searched for &lt;code&gt;nvcc&lt;/code&gt; using &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;. If this is found, no subsequent search attempts are performed. Users are responsible for ensuring that the first &lt;code&gt;nvcc&lt;/code&gt; to show up in the path is the desired path in the event that multiple CUDA Toolkits are installed.</source>
          <target state="translated">사용자 경로는 &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;nvcc&lt;/code&gt; 를 검색합니다 . 이것이 발견되면 후속 검색 시도가 수행되지 않습니다. 사용자는 여러 CUDA 툴킷이 설치된 경우 경로에 표시 되는 첫 번째 &lt;code&gt;nvcc&lt;/code&gt; 가 원하는 경로 인지 확인할 책임이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9d83061787f3c3dc68f5631f3b6d7ac224f3fda" translate="yes" xml:space="preserve">
          <source>The user's path is searched for &lt;code&gt;nvcc&lt;/code&gt; using &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;. If this is found, no subsequent search attempts are performed. Users are responsible for ensuring that the first &lt;code&gt;nvcc&lt;/code&gt; to show up in the path is the desired path in the event that multiple CUDA Toolkits are installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8818d5812d55805fd3ddb3f8c0997bbbcb1eb78b" translate="yes" xml:space="preserve">
          <source>The value for each resource type is a JSON array consisting of JSON objects, each of which describe a specific instance of the specified resource. These objects have the following members:</source>
          <target state="translated">각 리소스 유형의 값은 각각 지정된 리소스의 특정 인스턴스를 설명하는 JSON 개체로 구성된 JSON 배열입니다. 이러한 개체에는 다음과 같은 멤버가 있습니다.</target>
        </trans-unit>
        <trans-unit id="12ecb7b4875bfc1a3897c62b973f9a49acf4c174" translate="yes" xml:space="preserve">
          <source>The value is ignored on non-MSVC compilers but an unsupported value will be rejected as an error when using a compiler targeting the MSVC ABI.</source>
          <target state="translated">비 MSVC 컴파일러에서는 값이 무시되지만 MSVC ABI를 대상으로하는 컴파일러를 사용할 때 지원되지 않는 값은 오류로 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="fa891bc15061f771b7b6ed0b82dcf459e794c93c" translate="yes" xml:space="preserve">
          <source>The value may also be the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) in which case no runtime library selection flag will be added explicitly by CMake. Note that with &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; the native build system may choose to add its own default runtime library selection flag.</source>
          <target state="translated">값은 빈 문자열 ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ) 일 수도 있으며이 경우 CMake에 의해 런타임 라이브러리 선택 플래그가 명시 적으로 추가되지 않습니다. 로 유의 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 기본 빌드 시스템은 자체 기본 런타임 라이브러리 선택 플래그를 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="72f4774889847e366857bf187bfaabb218f3112c" translate="yes" xml:space="preserve">
          <source>The value must be a semi-colon separated list of configuration names. Currently this property is used only by the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. Additional uses may be defined in the future.</source>
          <target state="translated">값은 세미콜론으로 구분 된 구성 이름 목록이어야합니다. 현재이 특성은 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령 에서만 사용됩니다 . 추가 용도는 추후에 정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4fe961a1225525d9ef8b71f5302b677f166481e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;uname -m&lt;/code&gt; is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff642730260b86b0ece63e1398b73bbef65c04c" translate="yes" xml:space="preserve">
          <source>The value of the variable. On a modification, this is the new (modified) value of the variable. On removal, the value is empty.</source>
          <target state="translated">변수의 값입니다. 수정시 이것은 변수의 새 (수정 된) 값입니다. 제거시 값은 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="24b83fc3f94fff45e5ff85e4f532becab9be5f24" translate="yes" xml:space="preserve">
          <source>The value of this property is used by the generators to set the include paths for the compiler.</source>
          <target state="translated">이 속성 값은 생성기에서 컴파일러의 포함 경로를 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3d4cb493f7d0cbfd65529d84420563c61c1d3e31" translate="yes" xml:space="preserve">
          <source>The value of this property is used by the generators to set the link libraries for the compiler.</source>
          <target state="translated">이 속성의 값은 생성기에서 컴파일러의 링크 라이브러리를 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="230ea3c5a144f3d9052a4970fcf76f0a55c7e646" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a subset of &lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 변수의 값은 &lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt; &lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt; &lt;/a&gt; 의 하위 집합이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="375747d1525212e9bf27e63a6b05b08fd7ff41ff" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a subset of &lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-1-variable:CMAKE_CROSS_CONFIGS&quot;&gt;&lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt;&lt;/a&gt; or be the same as &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-2-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt;&lt;/a&gt;. It must not be specified if &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-3-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-2-variable:CMAKE_CROSS_CONFIGS&quot;&gt;&lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt;&lt;/a&gt; is not used.</source>
          <target state="translated">이 변수의 값은 &lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-1-variable:CMAKE_CROSS_CONFIGS&quot;&gt; &lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt; &lt;/a&gt; 의 하위 집합 이거나 &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-2-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt; &lt;/a&gt; 과 동일 해야합니다 . &lt;a href=&quot;cmake_default_build_type#variable:CMAKE_DEFAULT_BUILD_TYPE&quot; id=&quot;index-3-variable:CMAKE_DEFAULT_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_DEFAULT_BUILD_TYPE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;cmake_cross_configs#variable:CMAKE_CROSS_CONFIGS&quot; id=&quot;index-2-variable:CMAKE_CROSS_CONFIGS&quot;&gt; &lt;code&gt;CMAKE_CROSS_CONFIGS&lt;/code&gt; &lt;/a&gt; 를 사용하지 않는 경우 지정하면 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="d08e058ff4ee1b3104a38a8f17ea02d1eba2b0e0" translate="yes" xml:space="preserve">
          <source>The value of this variable must be one of the items from &lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 변수의 값은 &lt;a href=&quot;cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-1-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt; &lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt; &lt;/a&gt; 의 항목 중 하나 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="ec4fa616717aab9609e62328be83947fa6b12843" translate="yes" xml:space="preserve">
          <source>The value of this variable should be set prior to the first &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command invocation because it may influence configuration of the toolchain and flags. It is intended to be set locally by the user creating a build tree. This variable should be set as a &lt;code&gt;CACHE&lt;/code&gt; entry (or else CMake may remove it while initializing a cache entry of the same name).</source>
          <target state="translated">이 변수의 값은 툴체인 및 플래그 구성에 영향을 줄 수 있으므로 첫 번째 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt; 명령 호출 전에 설정해야합니다 . 빌드 트리를 작성하는 사용자가 로컬로 설정하도록되어 있습니다. 이 변수는 &lt;code&gt;CACHE&lt;/code&gt; 항목 으로 설정해야합니다. 그렇지 않으면 CMake가 동일한 이름의 캐시 항목을 초기화하는 동안이를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1859ff922bb5763e596920470278dfab19a82c4b" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A generator may be selected via the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-G&lt;/code&gt; option, interactively in &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt;, or via the &lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">이 변수의 값은 프로젝트 코드로 수정해서는 안됩니다. 발전기는 통해 선택 될 수있다 &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-G&lt;/code&gt; 대화식에서 옵션 &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; , 또는 비아 &lt;a href=&quot;../envvar/cmake_generator#envvar:CMAKE_GENERATOR&quot; id=&quot;index-0-envvar:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 의&lt;/a&gt; 환경 변수.</target>
        </trans-unit>
        <trans-unit id="c396a8ef032d0a6b352646ab0366d1579c787bc2" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable may initialize &lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt; as a cache entry. Once a given build tree has been initialized with a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">이 변수의 값은 프로젝트 코드로 수정해서는 안됩니다. &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt; &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; &lt;/a&gt; 변수에 의해 지정된 툴체인 파일은 &lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt; 를 캐시 항목으로 초기화 할 수 있습니다 . 주어진 빌드 트리가이 변수에 대한 특정 값으로 초기화되면 값을 변경하면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13f3519b32bb07b643df27cdb26fd5ef4ed5596e" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable may initialize &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;. Once a given build tree has been initialized with a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">이 변수의 값은 프로젝트 코드로 수정해서는 안됩니다. 에 의해 지정한 툴체인 파일 &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt; &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; 의&lt;/a&gt; 변수는 초기화 할 수 있습니다 &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; 을 . 주어진 빌드 트리가이 변수에 대한 특정 값으로 초기화되면 값을 변경하면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74ea294dcf974192292309e0211fc2aa6c74c0b4" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. A toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable may initialize &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;. Once a given build tree has been initialized with a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">이 변수의 값은 프로젝트 코드로 수정해서는 안됩니다. 에 의해 지정한 툴체인 파일 &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt; &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; 의&lt;/a&gt; 변수는 초기화 할 수 있습니다 &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; 을 . 주어진 빌드 트리가이 변수에 대한 특정 값으로 초기화되면 값을 변경하면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="08171fbee14ea580c78225f9d32f4d97b0f362ab" translate="yes" xml:space="preserve">
          <source>The value of this variable should never be modified by project code. It is meant to be set by a toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable, or as a cache entry provided by the user, e.g. via &lt;code&gt;-DCMAKE_APPLE_SILICON_PROCESSOR=...&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805297702c383f56eca7feac28009b51b570aef7" translate="yes" xml:space="preserve">
          <source>The values of the three variables can also be retrieved from anywhere in the project hierarchy using the &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-2-command:fetchcontent_getproperties&quot;&gt;&lt;code&gt;FetchContent_GetProperties()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-2-command:fetchcontent_getproperties&quot;&gt; &lt;code&gt;FetchContent_GetProperties()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 프로젝트 계층의 어느 곳에서나 세 변수의 값을 검색 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="125b920e6f9a6a44a6184bd994b57c47d05e3225" translate="yes" xml:space="preserve">
          <source>The variable &lt;a href=&quot;#variable:Matlab_ROOT_DIR&quot; id=&quot;index-0-variable:Matlab_ROOT_DIR&quot;&gt;&lt;code&gt;Matlab_ROOT_DIR&lt;/code&gt;&lt;/a&gt; may be specified in order to give the path of the desired Matlab version. Otherwise, the behaviour is platform specific:</source>
          <target state="translated">&lt;a href=&quot;#variable:Matlab_ROOT_DIR&quot; id=&quot;index-0-variable:Matlab_ROOT_DIR&quot;&gt; &lt;code&gt;Matlab_ROOT_DIR&lt;/code&gt; &lt;/a&gt; 변수 는 원하는 Matlab 버전의 경로를 제공하기 위해 지정 될 수 있습니다. 그렇지 않으면, 동작은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="782181abcee84f56371cf0b7d22aa555398079bb" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;${VARIABLE}&lt;/code&gt; may be &lt;code&gt;0&lt;/code&gt; when &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; has multiple architectures for building OS X universal binaries. This indicates that the type size varies across architectures. In this case &lt;code&gt;${VARIABLE}_CODE&lt;/code&gt; contains C preprocessor tests mapping from each architecture macro to the corresponding type size. The list of architecture macros is stored in &lt;code&gt;${VARIABLE}_KEYS&lt;/code&gt;, and the value for each key is stored in &lt;code&gt;${VARIABLE}-${KEY}&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; 에&lt;/a&gt; OS X 범용 바이너리를 빌드하기위한 여러 아키텍처가있는 경우 &lt;code&gt;${VARIABLE}&lt;/code&gt; 변수 는 &lt;code&gt;0&lt;/code&gt; 일 수 있습니다 . 이는 유형 크기가 아키텍처마다 다릅니다. 이 경우 &lt;code&gt;${VARIABLE}_CODE&lt;/code&gt; 에는 각 아키텍처 매크로에서 해당 유형 크기로 매핑하는 C 프리 프로세서 테스트가 포함되어 있습니다. 아키텍처 매크로 목록은 &lt;code&gt;${VARIABLE}_KEYS&lt;/code&gt; 에 저장되며 각 키의 값은 &lt;code&gt;${VARIABLE}-${KEY}&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="75a4ccdc5735740096caf0b1292677b915dcf360" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;CMAKE_EP_GIT_REMOTE_UPDATE_STRATEGY&lt;/code&gt; can be set to override the default strategy. This variable should not be set by a project, it is intended for the user to set. It is primarily intended for use in continuous integration scripts to ensure that when history is rewritten on a remote branch, the build doesn&amp;rsquo;t end up with unintended changes or failed builds resulting from conflicts during rebase operations.</source>
          <target state="translated">&lt;code&gt;CMAKE_EP_GIT_REMOTE_UPDATE_STRATEGY&lt;/code&gt; 변수 는 기본 전략을 재정의하도록 설정할 수 있습니다. 이 변수는 프로젝트에서 설정해서는 안되며 사용자가 설정하기위한 것입니다. 이는 주로 원격 브랜치에서 기록을 다시 작성할 때 빌드가 리베이스 작업 중 충돌로 인해 의도하지 않은 변경이나 실패한 빌드로 끝나지 않도록하기 위해 지속적 통합 스크립트에서 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f0bf3c002903cdac0414a87d8db0bf9d0b92e3a6" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;CMAKE_EP_GIT_REMOTE_UPDATE_STRATEGY&lt;/code&gt; can be set to override the default strategy. This variable should not be set by a project, it is intended for the user to set. It is primarily intended for use in continuous integration scripts to ensure that when history is rewritten on a remote branch, the build doesn't end up with unintended changes or failed builds resulting from conflicts during rebase operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32eafb55dfd802a9cde348afc53c1da3484a0a2e" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; will be assembled from the following variables. For C and CXX:</source>
          <target state="translated">가변 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_INCLUDE_DIRS&lt;/code&gt; 다음 변수로 조립한다. C 및 CXX의 경우 :</target>
        </trans-unit>
        <trans-unit id="ebe8320d05433600081d5b0a6f66af7085e32554" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; will be assembled from the following variables:</source>
          <target state="translated">변수의 &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_LIBRARIES&lt;/code&gt; 다음 변수 조립한다 :</target>
        </trans-unit>
        <trans-unit id="6bcbe102148410a351b4aed68ba2fa8f38276688" translate="yes" xml:space="preserve">
          <source>The variable GET_PREREQUISITES_VERBOSE can be set to true to enable verbose output.</source>
          <target state="translated">상세 출력을 가능하게하기 위해 변수 GET_PREREQUISITES_VERBOSE를 true로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4b64ab1b9c3efc911c15ccbf1e904e089917899" translate="yes" xml:space="preserve">
          <source>The variable could be set in a user supplied toolchain file or via &lt;code&gt;-D&lt;/code&gt; on the command line.</source>
          <target state="translated">변수는 사용자가 제공 한 도구 모음 파일에서 설정하거나 명령 줄에서 &lt;code&gt;-D&lt;/code&gt; 를 통해 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a2446f47abe64dd9a4296d77dd572d6c0d071e7" translate="yes" xml:space="preserve">
          <source>The variable named by &lt;code&gt;outVar&lt;/code&gt; will be populated in the calling scope with the list of discovered test cases. This allows the caller to do things like manipulate test properties of the discovered tests.</source>
          <target state="translated">&lt;code&gt;outVar&lt;/code&gt; 로 명명 된 변수 는 호출 범위에서 감지 된 테스트 케이스 목록으로 채워집니다. 이를 통해 호출자는 검색된 테스트의 테스트 속성을 조작하는 것과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd61db832514a4fd1b32791392cff1866ea6e5a8" translate="yes" xml:space="preserve">
          <source>The variable named will be set with the contents of the standard output and standard error pipes, respectively. If the same variable is named for both pipes their output will be merged in the order produced.</source>
          <target state="translated">명명 된 변수는 표준 출력 및 표준 오류 파이프의 내용으로 각각 설정됩니다. 두 파이프에 대해 동일한 변수의 이름이 지정된 경우 출력은 생성 된 순서대로 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="27ea5b8c421cab6aff15366bf8225117c20b4f59" translate="yes" xml:space="preserve">
          <source>The variable will be set to contain the result of all processes as a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt;, in order of the given &lt;code&gt;COMMAND&lt;/code&gt; arguments. Each entry will be an integer return code from the corresponding child or a string describing an error condition.</source>
          <target state="translated">변수는 주어진 &lt;code&gt;COMMAND&lt;/code&gt; 인수 순서대로 모든 프로세스의 결과를 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된 목록&lt;/a&gt; 으로 포함하도록 설정됩니다 . 각 항목은 해당 자식의 정수 리턴 코드 또는 오류 조건을 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c611fe177cbac586659801642a5b57ad6d20cffa" translate="yes" xml:space="preserve">
          <source>The variable will be set to contain the result of last child process. This will be an integer return code from the last child or a string describing an error condition.</source>
          <target state="translated">변수는 마지막 자식 프로세스의 결과를 포함하도록 설정됩니다. 마지막 자식의 정수 리턴 코드 또는 오류 조건을 설명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9592ae069508aeb5e92a7176709c404367afbb7c" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;&amp;lt;var1&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;varN&amp;gt;&lt;/code&gt; given as &lt;code&gt;PATH_VARS&lt;/code&gt; are the variables which contain install destinations. For each of them the macro will create a helper variable &lt;code&gt;PACKAGE_&amp;lt;var...&amp;gt;&lt;/code&gt;. These helper variables must be used in the &lt;code&gt;FooConfig.cmake.in&lt;/code&gt; file for setting the installed location. They are calculated by &lt;code&gt;configure_package_config_file&lt;/code&gt; so that they are always relative to the installed location of the package. This works both for relative and also for absolute locations. For absolute locations it works only if the absolute location is a subdirectory of &lt;code&gt;INSTALL_PREFIX&lt;/code&gt;.</source>
          <target state="translated">변수 &lt;code&gt;&amp;lt;var1&amp;gt;&lt;/code&gt; 에 &lt;code&gt;&amp;lt;varN&amp;gt;&lt;/code&gt; 로 주어진 &lt;code&gt;PATH_VARS&lt;/code&gt; 는 목적지를 설치 포함 된 변수입니다. 각각에 대해 매크로는 도우미 변수 &lt;code&gt;PACKAGE_&amp;lt;var...&amp;gt;&lt;/code&gt; 만듭니다. 설치된 위치를 설정하려면 &lt;code&gt;FooConfig.cmake.in&lt;/code&gt; 파일 에서 이러한 도우미 변수를 사용해야합니다 . 그것들은 항상 패키지의 설치된 위치에 상대적이되도록 &lt;code&gt;configure_package_config_file&lt;/code&gt; 에 의해 계산됩니다 . 이것은 상대 위치와 절대 위치 모두에서 작동합니다. 절대 위치의 경우 절대 위치가 &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; 의 서브 디렉토리 인 경우에만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="e467a8fd0a6985c7f87452ff1ea923d1c37971fa" translate="yes" xml:space="preserve">
          <source>The variables report the version of the package that was actually found. The &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; part of their name matches the argument given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-10-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">변수는 실제로 발견 된 패키지 버전을보고합니다. 이름의 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 부분은 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-10-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령에 제공된 인수와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="31779c46258d9e41d92fe3dcbe265e0cf06f47a6" translate="yes" xml:space="preserve">
          <source>The variables set through the &lt;code&gt;VERSION&lt;/code&gt;, &lt;code&gt;DESCRIPTION&lt;/code&gt; and &lt;code&gt;HOMEPAGE_URL&lt;/code&gt; options are intended for use as default values in package metadata and documentation.</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt; , &lt;code&gt;DESCRIPTION&lt;/code&gt; 및 &lt;code&gt;HOMEPAGE_URL&lt;/code&gt; 옵션을 통해 설정된 변수 는 패키지 메타 데이터 및 문서에서 기본값으로 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="619b3fa9ed3c368a779a0d3cd7e59f448eb83f90" translate="yes" xml:space="preserve">
          <source>The version file checks whether it satisfies the requested version and sets these variables:</source>
          <target state="translated">버전 파일은 요청 된 버전을 만족하는지 확인하고 다음 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5fc5bb09b3cdf7986dcf453d7a995421174b6248" translate="yes" xml:space="preserve">
          <source>The version file must use these variables to check whether it is compatible or an exact match for the requested version and set the following variables with results:</source>
          <target state="translated">버전 파일은 이러한 변수를 사용하여 호환되는지 또는 요청 된 버전과 정확히 일치하는지 확인하고 다음 변수를 결과와 함께 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0ed80ecfe22a7111ad993955bb995da627ebfdad" translate="yes" xml:space="preserve">
          <source>The version given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; directive is the Matlab &lt;strong&gt;version&lt;/strong&gt;, which should not be confused with the Matlab &lt;em&gt;release&lt;/em&gt; name (eg. &lt;code&gt;R2014&lt;/code&gt;). The &lt;a href=&quot;#command:matlab_get_version_from_release_name&quot; id=&quot;index-0-command:matlab_get_version_from_release_name&quot;&gt;&lt;code&gt;matlab_get_version_from_release_name()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#command:matlab_get_release_name_from_version&quot; id=&quot;index-0-command:matlab_get_release_name_from_version&quot;&gt;&lt;code&gt;matlab_get_release_name_from_version()&lt;/code&gt;&lt;/a&gt; provide a mapping between the release name and the version.</source>
          <target state="translated">받는 사람 주어진 버전 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 지시어는 매트랩입니다 &lt;strong&gt;버전&lt;/strong&gt; matlab에와 혼동해서는 안, &lt;em&gt;릴리스의&lt;/em&gt; 이름 (예를 들어. &lt;code&gt;R2014&lt;/code&gt; ). &lt;a href=&quot;#command:matlab_get_version_from_release_name&quot; id=&quot;index-0-command:matlab_get_version_from_release_name&quot;&gt; &lt;code&gt;matlab_get_version_from_release_name()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#command:matlab_get_release_name_from_version&quot; id=&quot;index-0-command:matlab_get_release_name_from_version&quot;&gt; &lt;code&gt;matlab_get_release_name_from_version()&lt;/code&gt; &lt;/a&gt; 릴리스 이름과 버전 사이의 매핑을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e1891fc792756bf54ea33ec36b3a5047929cd38f" translate="yes" xml:space="preserve">
          <source>The version of &lt;code&gt;curl&lt;/code&gt; found.</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; 버전이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="078c153cf627478277ad9bdfb0611cf95bb8535d" translate="yes" xml:space="preserve">
          <source>The version of GDAL found.</source>
          <target state="translated">GDAL 버전이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="35d48a00e9553b1ecdb4d49c7506dccb0e3de34b" translate="yes" xml:space="preserve">
          <source>The version of GTK2 found (x.y.z)</source>
          <target state="translated">발견 된 GTK2 버전 (xyz)</target>
        </trans-unit>
        <trans-unit id="49c99be59cc7f3ead5b093af43d50439f46ee318" translate="yes" xml:space="preserve">
          <source>The version of Git found.</source>
          <target state="translated">Git의 버전이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="12e747d8edd87e0eb96ab5e73cdc4ad3066e46d7" translate="yes" xml:space="preserve">
          <source>The version of Microsoft Visual C/C++ being used if any. If a compiler simulating Visual C++ is being used, this variable is set to the toolset version simulated as given by the &lt;code&gt;_MSC_VER&lt;/code&gt; preprocessor definition.</source>
          <target state="translated">사용중인 Microsoft Visual C / C ++ 버전입니다. Visual C ++을 시뮬레이트하는 컴파일러를 사용하는 경우이 변수는 &lt;code&gt;_MSC_VER&lt;/code&gt; 전 처리기 정의 에 따라 시뮬레이션 된 도구 세트 버전으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="24be9ca449a290ddf56cfef5ce3df100f8daf1e7" translate="yes" xml:space="preserve">
          <source>The version of the C compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 C 컴파일러의 버전입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7dce4cd57258b546098250a78fbf219f40d1ee0b" translate="yes" xml:space="preserve">
          <source>The version of the CUDA compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 CUDA 컴파일러의 버전. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64e5aaf1e6ac50b54aed7dfd7f614a573b568631" translate="yes" xml:space="preserve">
          <source>The version of the CXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 CXX 컴파일러 버전. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52abd9cc4af5898d3a1e0c078e5856dade908a04" translate="yes" xml:space="preserve">
          <source>The version of the Fortran compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 포트란 컴파일러의 버전입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ffa4716915b14b20f10ed831f8f1e90c67b0b20" translate="yes" xml:space="preserve">
          <source>The version of the ISPC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 ISPC 컴파일러의 버전입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fface636aaa18516496da430af2ee4da944bb9de" translate="yes" xml:space="preserve">
          <source>The version of the OBJC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 OBJC 컴파일러의 버전입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43027f6a6f22283ea9c81e2a5338f9c54c7af242" translate="yes" xml:space="preserve">
          <source>The version of the OBJCXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 OBJCXX 컴파일러의 버전입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d7363d8a0753efa544eaf77e7241810db42074e" translate="yes" xml:space="preserve">
          <source>The version of the operating system for which CMake is to build. See the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable for the OS name.</source>
          <target state="translated">CMake를 빌드 할 운영 체제의 버전입니다. OS 이름 은 &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="00026a0a0ddafcb43740697ab76478f0a0439428" translate="yes" xml:space="preserve">
          <source>The version of the top level project.</source>
          <target state="translated">최상위 프로젝트의 버전입니다.</target>
        </trans-unit>
        <trans-unit id="69d878d04211983f2cf71b7922fa1929103fa539" translate="yes" xml:space="preserve">
          <source>The version reported by &lt;code&gt;doxygen --version&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;doxygen --version&lt;/code&gt; 에 의해보고 된 버전 입니다.</target>
        </trans-unit>
        <trans-unit id="405e1d263cae4395182d9f718dd5c8ef94224baf" translate="yes" xml:space="preserve">
          <source>The weighted time summary reported for each label or subproject &lt;code&gt;j&lt;/code&gt; is computed as:</source>
          <target state="translated">각 레이블 또는 하위 프로젝트 &lt;code&gt;j&lt;/code&gt; 에 대해보고 된 가중치 적용 시간 요약 은 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="90aef7de933e633f590c95b06a197ed2d6b13508" translate="yes" xml:space="preserve">
          <source>Their values are used to set the corresponding target properties in the generated project (unless overridden by an explicit option).</source>
          <target state="translated">이 값은 명시 적 옵션으로 재정의되지 않는 한 생성 된 프로젝트에서 해당 대상 속성을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ec57c73e6232d48a31453519e24a3a7cc4ffc77b" translate="yes" xml:space="preserve">
          <source>Then call that build system to actually compile/link the project:</source>
          <target state="translated">그런 다음 해당 빌드 시스템을 호출하여 실제로 프로젝트를 컴파일 / 링크합니다.</target>
        </trans-unit>
        <trans-unit id="c7b86859fd44d717bc5ea3148a742697366171a5" translate="yes" xml:space="preserve">
          <source>Then clear all the keys and call &lt;code&gt;verify_app&lt;/code&gt; on the final bundle to ensure that it is truly standalone.</source>
          <target state="translated">그런 다음 모든 키를 지우고 최종 번들에서 &lt;code&gt;verify_app&lt;/code&gt; 를 호출 하여 실제로 독립형인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="82d7289e9ff5884336b1032b9e856313f21e09ce" translate="yes" xml:space="preserve">
          <source>Then run the install step by using the &lt;code&gt;install&lt;/code&gt; option of the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; command (introduced in 3.15, older versions of CMake must use &lt;code&gt;make install&lt;/code&gt;) from the command line. For multi-configuration tools, don&amp;rsquo;t forget to use the &lt;code&gt;--config&lt;/code&gt; argument to specify the configuration. If using an IDE, simply build the &lt;code&gt;INSTALL&lt;/code&gt; target. This step will install the appropriate header files, libraries, and executables. For example:</source>
          <target state="translated">그런 다음 명령 줄 에서 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;install&lt;/code&gt; 옵션을 사용하여 설치 단계를 실행합니다 (3.15에 도입되었으며 이전 버전의 CMake는 &lt;code&gt;make install&lt;/code&gt; 을 사용해야 함 ). 다중 구성 도구의 경우 &lt;code&gt;--config&lt;/code&gt; 인수를 사용하여 구성을 지정하는 것을 잊지 마십시오 . IDE를 사용하는 경우 &lt;code&gt;INSTALL&lt;/code&gt; 대상을 빌드하기 만하면 됩니다. 이 단계는 적절한 헤더 파일, 라이브러리 및 실행 파일을 설치합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="53b387f41a5ed994f6a94251f25b63ccc4e34200" translate="yes" xml:space="preserve">
          <source>Then run the install step by using the &lt;code&gt;install&lt;/code&gt; option of the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-4-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; command (introduced in 3.15, older versions of CMake must use &lt;code&gt;make install&lt;/code&gt;) from the command line. For multi-configuration tools, don't forget to use the &lt;code&gt;--config&lt;/code&gt; argument to specify the configuration. If using an IDE, simply build the &lt;code&gt;INSTALL&lt;/code&gt; target. This step will install the appropriate header files, libraries, and executables. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb273e4ad6b718538765828dd3cbee49da2ce34" translate="yes" xml:space="preserve">
          <source>Then use the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; library inside of our project:</source>
          <target state="translated">그런 다음 프로젝트 내 에서 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 라이브러리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a460f8b0160cc2db89fe8c18abbac20e60aa44a0" translate="yes" xml:space="preserve">
          <source>Then we add a custom command that specifies how to produce &lt;code&gt;Table.h&lt;/code&gt; by running MakeTable.</source>
          <target state="translated">그런 다음 &lt;code&gt;Table.h&lt;/code&gt; 을 실행 하여 Table.h 를 생성하는 방법을 지정하는 사용자 지정 명령을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="4be11c2342fcf3f77959432f1ff9ade4e59a7c0f" translate="yes" xml:space="preserve">
          <source>Then we will create a package configuration file and a package version file.</source>
          <target state="translated">그런 다음 패키지 구성 파일과 패키지 버전 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="bb3481572e2059fd406fdd07b6be775a4f3c2827" translate="yes" xml:space="preserve">
          <source>Then, configure a header file to pass the version number to the source code:</source>
          <target state="translated">그런 다음 소스 코드에 버전 번호를 전달하도록 헤더 파일을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="2eab000b60f368ace39ef6b2e32bd91d6c5901cd" translate="yes" xml:space="preserve">
          <source>Then, in the same file, make &lt;code&gt;USE_MYMATH&lt;/code&gt; control which square root function is used:</source>
          <target state="translated">그런 다음 동일한 파일에서 사용되는 제곱근 함수를 &lt;code&gt;USE_MYMATH&lt;/code&gt; 제어합니다.</target>
        </trans-unit>
        <trans-unit id="b639490efe44d74f7843c7aac12170ab20ee713b" translate="yes" xml:space="preserve">
          <source>Then, to properly configure and install that file, add the following to the bottom of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">그런 다음 해당 파일을 올바르게 구성하고 설치하려면 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 맨 아래에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d0650feaf9553e0c972a62c5c073194589204ed" translate="yes" xml:space="preserve">
          <source>There are also components for the following ImageMagick APIs:</source>
          <target state="translated">다음 ImageMagick API에 대한 구성 요소도 있습니다.</target>
        </trans-unit>
        <trans-unit id="66c97021c733000e9e917fc493681376bba5c574" translate="yes" xml:space="preserve">
          <source>There are different types of &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; including Logical, Informational, and Output expressions.</source>
          <target state="translated">논리, 정보 및 출력 표현식을 포함한 다양한 유형의 &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 표현식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ff0e6eab86a7d8d70ee64a0fa14e04d58425857" translate="yes" xml:space="preserve">
          <source>There are multiple signatures for this command. Some of them define installation options for files and targets. Options common to multiple signatures are covered here but they are valid only for signatures that specify them. The common options are:</source>
          <target state="translated">이 명령에는 여러 서명이 있습니다. 그들 중 일부는 파일 및 대상에 대한 설치 옵션을 정의합니다. 여러 서명에 공통적 인 옵션은 여기에서 다루지 만 서명을 지정하는 서명에만 유효합니다. 일반적인 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="25ea110bdc37148cea43fa707960df8b63f7d50b" translate="yes" xml:space="preserve">
          <source>There are reasons one might want to exclude a target / generated project from deployment:</source>
          <target state="translated">대상에서 생성 된 프로젝트를 배포에서 제외하려는 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c885f8e3a33450edcb18810d636db2d66cfc1c67" translate="yes" xml:space="preserve">
          <source>There are several user interface tools which may be used to generate a buildsystem from CMake files. The &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake(1)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; tools guide the user through setting the various necessary options. The &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; tool can be invoked to specify options on the command line. This manual describes options which may be set using any of the user interface tools, though the mode of setting an option is different for each tool.</source>
          <target state="translated">CMake 파일에서 빌드 시스템을 생성하는 데 사용할 수있는 여러 사용자 인터페이스 도구가 있습니다. &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake(1)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 도구는 여러 가지 필요한 옵션을 설정을 통해 사용자를 안내합니다. &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 도구는 명령 줄 옵션을 지정하는 호출 할 수 있습니다. 이 설명서에서는 사용자 인터페이스 도구를 사용하여 설정할 수있는 옵션에 대해 설명하지만 옵션 설정 모드는 도구마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d406eb74ae74bd2b0e583a7dd2a733f563057983" translate="yes" xml:space="preserve">
          <source>There are situations where it may be undesirable for a particular config option to be automatically quoted by &lt;code&gt;doxygen_add_docs()&lt;/code&gt;, such as &lt;code&gt;ALIASES&lt;/code&gt; which may need to include its own embedded quoting. The &lt;code&gt;DOXYGEN_VERBATIM_VARS&lt;/code&gt; variable can be used to specify a list of Doxygen variables (including the leading &lt;code&gt;DOXYGEN_&lt;/code&gt; prefix) which should not be quoted. The project is then responsible for ensuring that those variables&amp;rsquo; values make sense when placed directly in the Doxygen input file. In the case of list variables, list items are still separated by spaces, it is only the automatic quoting that is skipped. For example, the following allows &lt;code&gt;doxygen_add_docs()&lt;/code&gt; to apply quoting to &lt;code&gt;DOXYGEN_PROJECT_BRIEF&lt;/code&gt;, but not each item in the &lt;code&gt;DOXYGEN_ALIASES&lt;/code&gt; list (&lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;bracket syntax&lt;/a&gt; can also be used to make working with embedded quotes easier):</source>
          <target state="translated">특정 구성 옵션이 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 의해 자동으로 인용되는 것이 바람직하지 않은 상황이 있습니다 ( 예 : 자체 인용 &lt;code&gt;ALIASES&lt;/code&gt; 를 포함해야하는 ALIASES ) . &lt;code&gt;DOXYGEN_VERBATIM_VARS&lt;/code&gt; 의 변수는 (선도 포함 Doxygen을 변수의 목록을 지정하는 데 사용할 수 있습니다 &lt;code&gt;DOXYGEN_&lt;/code&gt; 의 인용해서는 안 접두사). 그런 다음 프로젝트는 Doxygen 입력 파일에 직접 배치 할 때 해당 변수의 값이 올바른지 확인해야합니다. 목록 변수의 경우 목록 항목은 여전히 ​​공백으로 구분되며 건너 뛴 자동 인용 만입니다. 예를 들어, 다음은 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 가 &lt;code&gt;DOXYGEN_PROJECT_BRIEF&lt;/code&gt; 에 인용을 적용 할 수 있게합니다.이지만 &lt;code&gt;DOXYGEN_ALIASES&lt;/code&gt; 목록의 각 항목이 아닙니다 ( &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;괄호 구문&lt;/a&gt; 을 사용하여 포함 된 따옴표로 쉽게 작업 할 수도 있습니다).</target>
        </trans-unit>
        <trans-unit id="305db87b768c8ea7c882b4b82544a7c64f492795" translate="yes" xml:space="preserve">
          <source>There are some cases where CMake may ask the linker to search for the library (e.g. &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; becomes &lt;code&gt;-lfoo&lt;/code&gt;), such as when a shared library is detected to have no &lt;code&gt;SONAME&lt;/code&gt; field. See policy &lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt;&lt;code&gt;CMP0060&lt;/code&gt;&lt;/a&gt; for discussion of another case.</source>
          <target state="translated">CMake가 공유 라이브러리에 &lt;code&gt;SONAME&lt;/code&gt; 필드 가없는 것으로 감지되는 경우와 같이 CMake가 링커에게 라이브러리를 검색하도록 요청할 수있는 경우가 있습니다 (예 : &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; 가 &lt;code&gt;-lfoo&lt;/code&gt; 가 됨 ) . 다른 사례에 대한 설명은 정책 &lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt; &lt;code&gt;CMP0060&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="03b69345ac258658906ce509e56aff5e76e071e6" translate="yes" xml:space="preserve">
          <source>There are some special variables whose prefix depends on the number of &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; given. When there is only one &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; will simply be &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt;, but if two or more &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; items are given, &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; will be &lt;code&gt;&amp;lt;prefix&amp;gt;_&amp;lt;moduleName&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; 의 수에 따라 접두사가 붙는 특수 변수가 있습니다. &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; 이 하나만있는 경우 &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; 는 단순히 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 이지만 둘 이상의 &lt;code&gt;&amp;lt;moduleSpec&amp;gt;&lt;/code&gt; 항목이 제공되면 &lt;code&gt;&amp;lt;YYY&amp;gt;&lt;/code&gt; 는 &lt;code&gt;&amp;lt;prefix&amp;gt;_&amp;lt;moduleName&amp;gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="318f29afb931010e7313eec52586c03d8ea4730a" translate="yes" xml:space="preserve">
          <source>There are three kinds of output artifacts that may be build by targets as detailed in the following sections. Their classification differs between DLL platforms and non-DLL platforms. All Windows-based systems including Cygwin are DLL platforms.</source>
          <target state="translated">다음 섹션에 자세히 설명 된대로 대상별로 빌드 할 수있는 출력 아티팩트에는 세 가지 종류가 있습니다. DLL 플랫폼과 비 DLL 플랫폼은 분류가 다릅니다. Cygwin을 포함한 모든 Windows 기반 시스템은 DLL 플랫폼입니다.</target>
        </trans-unit>
        <trans-unit id="1417f502ee98a9af9d2fec95c149e2dfbbe1768a" translate="yes" xml:space="preserve">
          <source>There are three types of arguments within &lt;a href=&quot;#command-invocations&quot;&gt;Command Invocations&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#command-invocations&quot;&gt;명령 호출&lt;/a&gt; 에는 세 가지 유형의 인수가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6e4c097ae8e4e3f70b1c1da9889d54ea621a740" translate="yes" xml:space="preserve">
          <source>There are too many factors involved in making an automatic decision in the presence of multiple CUDA Toolkits being installed. In this situation, users are encouraged to either (1) set &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; or (2) ensure that the correct &lt;code&gt;nvcc&lt;/code&gt; executable shows up in &lt;code&gt;$PATH&lt;/code&gt; for &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; to find.</source>
          <target state="translated">여러 CUDA 툴킷이 설치되어있을 때 자동 결정을 내리는 데 너무 많은 요소가 포함됩니다. 이 상황에서 사용자는 (1) &lt;code&gt;CUDAToolkit_ROOT&lt;/code&gt; 를 설정 하거나 (2) &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-1-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; 이 찾을 수 있도록 &lt;code&gt;$PATH&lt;/code&gt; 에 올바른 &lt;code&gt;nvcc&lt;/code&gt; 실행 파일이 표시 되는지 확인하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c903109d183838d2f5d94a15e83463d86e199c71" translate="yes" xml:space="preserve">
          <source>There are two main signatures for &lt;code&gt;add_custom_command&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_custom_command&lt;/code&gt; 에 대한 두 가지 주요 서명이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="759a1f54246695dbed08640abb56adb13160bbf8" translate="yes" xml:space="preserve">
          <source>There are two main signatures for &lt;code&gt;create_javadoc()&lt;/code&gt;. The first signature works with package names on a path with source files.</source>
          <target state="translated">&lt;code&gt;create_javadoc()&lt;/code&gt; 대한 두 가지 주요 서명이 있습니다 . 첫 번째 서명은 소스 파일이있는 경로에서 패키지 이름으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1e7c2008c385968e0a965cfa7230616b6863ac20" translate="yes" xml:space="preserve">
          <source>There are two main signatures for &lt;code&gt;create_javah()&lt;/code&gt;. The first signature returns generated files through variable specified by the &lt;code&gt;GENERATED_FILES&lt;/code&gt; option. For example:</source>
          <target state="translated">&lt;code&gt;create_javah()&lt;/code&gt; 대한 두 가지 주요 서명이 있습니다 . 첫 번째 서명은 &lt;code&gt;GENERATED_FILES&lt;/code&gt; 옵션으로 지정된 변수를 통해 생성 된 파일을 리턴합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="396875b3c9505b695782d75854cc3f54f9c7d229" translate="yes" xml:space="preserve">
          <source>There are two search branches: a windows style and a unix style. For windows, the following variables are searched for and set to defaults in case of multiple choices. Change them if the defaults are not desired (i.e., these are the only variables you should change to select a configuration):</source>
          <target state="translated">검색 스타일에는 Windows 스타일과 유닉스 스타일의 두 가지가 있습니다. 창의 경우, 여러 변수를 선택할 경우 다음 변수가 검색되고 기본값으로 설정됩니다. 기본값을 원하지 않는 경우 변경하십시오 (예 : 구성을 선택하기 위해 변경해야하는 유일한 변수).</target>
        </trans-unit>
        <trans-unit id="e4cc015cb1b3fa6660aed6c300930dd787349c5c" translate="yes" xml:space="preserve">
          <source>There are two signatures:</source>
          <target state="translated">두 가지 서명이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebc86498bb5decd1ce1f5463eec9ef48af68226c" translate="yes" xml:space="preserve">
          <source>There is a similar variable &lt;a href=&quot;cpack_component_include_toplevel_directory#variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot;&gt;&lt;code&gt;CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&lt;/code&gt;&lt;/a&gt; which may be used to override the behavior for the component packaging case which may have different default value for historical (now backward compatibility) reason.</source>
          <target state="translated">이전 (이전 버전과의 호환성) 이유로 인해 기본값이 다른 구성 요소 패키징 케이스의 동작을 대체하는 데 사용할 수 있는 유사한 변수 &lt;a href=&quot;cpack_component_include_toplevel_directory#variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&quot;&gt; &lt;code&gt;CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY&lt;/code&gt; &lt;/a&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f279e62a34074414a832876bc4c520ebacebc32" translate="yes" xml:space="preserve">
          <source>There is also a wxWidgets_CONFIG_OPTIONS variable for all other options that need to be passed to the wx-config utility. For example, to use the base toolkit found in the /usr/local path, set the variable (before calling the FIND_PACKAGE command) as such:</source>
          <target state="translated">wx-config 유틸리티로 전달되어야하는 다른 모든 옵션에 대한 wxWidgets_CONFIG_OPTIONS 변수도 있습니다. 예를 들어, / usr / local 경로에있는 기본 툴킷을 사용하려면 다음과 같이 변수를 설정하십시오 (FIND_PACKAGE 명령을 호출하기 전에).</target>
        </trans-unit>
        <trans-unit id="00d9049f874585a48f5a5951c26beccd585b89bd" translate="yes" xml:space="preserve">
          <source>There is no automatic evaluation for environment or cache &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;Variable References&lt;/a&gt;. Their values must be referenced as &lt;code&gt;$ENV{&amp;lt;name&amp;gt;}&lt;/code&gt; or &lt;code&gt;$CACHE{&amp;lt;name&amp;gt;}&lt;/code&gt; wherever the above-documented condition syntax accepts &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">환경 또는 캐시 &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;변수 참조에&lt;/a&gt; 대한 자동 평가는 없습니다 . 이들의 값은 위에서 설명한 조건 구문이 &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt; 허용 할 때마다 &lt;code&gt;$ENV{&amp;lt;name&amp;gt;}&lt;/code&gt; 또는 &lt;code&gt;$CACHE{&amp;lt;name&amp;gt;}&lt;/code&gt; 으로 참조되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="06ffd9157dde85a7bddd7c82eb63924ef52c53a8" translate="yes" xml:space="preserve">
          <source>There is no convention provided by CMake for how such variables are named between different provided buildsystems, except that variables with the prefix &lt;code&gt;CMAKE_&lt;/code&gt; usually refer to options provided by CMake itself and should not be used in third-party options, which should use their own prefix instead. The &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; tool can display options in groups defined by their prefix, so it makes sense for third parties to ensure that they use a self-consistent prefix.</source>
          <target state="translated">&lt;code&gt;CMAKE_&lt;/code&gt; 접두사가있는 변수는 일반적으로 CMake 자체에서 제공하는 옵션을 참조하고 자체 접두사를 사용해야하는 타사 옵션에서 사용해서는 안된다는 점을 제외하고는 제공된 서로 다른 빌드 시스템간에 이러한 변수의 이름을 지정하는 방법에 대해 CMake에서 제공하는 규칙이 없습니다. 대신. &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 도구는 제 3자가 그들이 일관성있는 접두사를 사용하는지 확인하기 때문에 말이, 자신의 접두사에 의해 정의 된 그룹의 옵션을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6009c4748a41f90b2572c7e7e327455144a6262a" translate="yes" xml:space="preserve">
          <source>There is no system package registry on non-Windows platforms.</source>
          <target state="translated">Windows 이외의 플랫폼에는 시스템 패키지 레지스트리가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d8d4a35ed839c204dbf0484a4c05298d273946fa" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;cache&lt;/code&gt; object major version, version 2. Version 1 does not exist to avoid confusion with that from &lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-1-manual:cmake-server(7)&quot;&gt;&lt;code&gt;cmake-server(7)&lt;/code&gt;&lt;/a&gt; mode.</source>
          <target state="translated">&lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-1-manual:cmake-server(7)&quot;&gt; &lt;code&gt;cmake-server(7)&lt;/code&gt; &lt;/a&gt; 모드 와의 혼동을 피하기 위해 하나의 &lt;code&gt;cache&lt;/code&gt; 오브젝트 주 버전, 버전 2 만 있습니다 . 버전 1은 존재하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="106dca16f950740214a5fd6d9c57988b3241d13f" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;cmakeFiles&lt;/code&gt; object major version, version 1.</source>
          <target state="translated">&lt;code&gt;cmakeFiles&lt;/code&gt; 오브젝트 메이저 버전, 버전 1 이 하나만 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4fdb0a8824d6a647321f56324812dd785f7a4f9e" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;codemodel&lt;/code&gt; object major version, version 2. Version 1 does not exist to avoid confusion with that from &lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt;&lt;code&gt;cmake-server(7)&lt;/code&gt;&lt;/a&gt; mode.</source>
          <target state="translated">&lt;a href=&quot;cmake-server.7#manual:cmake-server(7)&quot; id=&quot;index-0-manual:cmake-server(7)&quot;&gt; &lt;code&gt;cmake-server(7)&lt;/code&gt; &lt;/a&gt; 모드 와의 혼동을 피하기 위해 하나의 &lt;code&gt;codemodel&lt;/code&gt; 오브젝트 주 버전 인 버전 2 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec6d327c19dd1e124add6015876036e653e9a9cc" translate="yes" xml:space="preserve">
          <source>There is only one &lt;code&gt;toolchains&lt;/code&gt; object major version, version 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7186b2cbf7b5852c2c7029365248b549edd2d9" translate="yes" xml:space="preserve">
          <source>There may be additional files providing CMake macros or &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; for you to use. CMake does not enforce any naming convention for these files. They are related to the primary &lt;code&gt;Config&lt;/code&gt; file by use of the CMake &lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">사용할 수있는 CMake 매크로 또는 &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 대상&lt;/a&gt; 을 제공하는 추가 파일이있을 수 있습니다 . CMake는 이러한 파일에 대한 명명 규칙을 적용하지 않습니다. CMake &lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 명령 을 사용 하여 기본 &lt;code&gt;Config&lt;/code&gt; 파일 과 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="faa92ef914803615a7606f4567700a7fc22b9b28" translate="yes" xml:space="preserve">
          <source>There may be insufficient space on the target device to accommodate all of the build products.</source>
          <target state="translated">모든 빌드 제품을 수용하기에 대상 장치의 공간이 부족할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaa54b3f7ea02219e4d24db794e3ba441300e47d" translate="yes" xml:space="preserve">
          <source>Therefore, the weighted time summary for each label or subproject represents the amount of time that CTest gave to run the tests for each label or subproject and gives a good representation of the total expense of the tests for each label or subproject when compared to other labels or subprojects.</source>
          <target state="translated">따라서 각 레이블 또는 하위 프로젝트에 대한 가중 시간 요약은 CTest가 각 레이블 또는 하위 프로젝트에 대한 테스트를 실행하기 위해 제공 한 시간을 나타내며 다른 레이블과 비교할 때 각 레이블 또는 하위 프로젝트에 대한 테스트의 총 비용을 잘 나타냅니다. 또는 하위 프로젝트.</target>
        </trans-unit>
        <trans-unit id="b8abe6ae80fa575b1b1cda9e3b35e2cbe0700aec" translate="yes" xml:space="preserve">
          <source>These arguments can be used to exclude unwanted system libraries when resolving the dependencies, or to include libraries from a specific directory. The filtering works as follows:</source>
          <target state="translated">이러한 인수는 종속성을 해결할 때 원하지 않는 시스템 라이브러리를 제외하거나 특정 디렉토리의 라이브러리를 포함하는 데 사용할 수 있습니다. 필터링은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="04afb6fdcca8687f82a84581f731af89daf82d7a" translate="yes" xml:space="preserve">
          <source>These commands are always available.</source>
          <target state="translated">이 명령은 항상 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8f44d87bec44058ca9b710ee65e164f7b1f4d3ce" translate="yes" xml:space="preserve">
          <source>These commands are available only in CMake projects.</source>
          <target state="translated">이 명령은 CMake 프로젝트에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="568d1254f89c683a2a733c2aea55fb9fc210434f" translate="yes" xml:space="preserve">
          <source>These commands are available only in CTest scripts.</source>
          <target state="translated">이 명령은 CTest 스크립트에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c570a6cc2c83e5f5755d305879d34f988532406f" translate="yes" xml:space="preserve">
          <source>These commands are deprecated and are only made available to maintain backward compatibility. The documentation of each command states the CMake version in which it was deprecated. Do not use these commands in new code.</source>
          <target state="translated">이 명령은 더 이상 사용되지 않으며 이전 버전과의 호환성을 유지하기 위해서만 사용할 수 있습니다. 각 명령의 설명서에는 더 이상 사용되지 않는 CMake 버전이 나와 있습니다. 새 코드에서는 이러한 명령을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9e5fcf17cd7d25fe91f787e704f67f8339dab8cc" translate="yes" xml:space="preserve">
          <source>These expressions expand to some string. For example,</source>
          <target state="translated">이 표현식은 일부 문자열로 확장됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="c156164aa0abae785cb641a7e5d52e5c5d3a484e" translate="yes" xml:space="preserve">
          <source>These features are known to be available for use with the C compiler. This list is a subset of the features listed in the &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="translated">이러한 기능은 C 컴파일러와 함께 사용할 수있는 것으로 알려져 있습니다. 이 목록은 &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 글로벌 속성에 나열된 기능의 하위 집합입니다 .</target>
        </trans-unit>
        <trans-unit id="5c2072ce48075e608da4a0ae18b02d061688e253" translate="yes" xml:space="preserve">
          <source>These features are known to be available for use with the C++ compiler. This list is a subset of the features listed in the &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="translated">이러한 기능은 C ++ 컴파일러와 함께 사용할 수있는 것으로 알려져 있습니다. 이 목록은 &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 글로벌 특성에 나열된 기능의 서브 세트입니다 .</target>
        </trans-unit>
        <trans-unit id="aa876f14998cb3edf5033476c361d8d3e0d75765" translate="yes" xml:space="preserve">
          <source>These features are known to be available for use with the CUDA compiler. This list is a subset of the features listed in the &lt;a href=&quot;../prop_gbl/cmake_cuda_known_features#prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="translated">이러한 기능은 CUDA 컴파일러에서 사용할 수있는 것으로 알려져 있습니다. 이 목록은 &lt;a href=&quot;../prop_gbl/cmake_cuda_known_features#prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 전역 속성에 나열된 기능의 하위 집합입니다 .</target>
        </trans-unit>
        <trans-unit id="3ae19fff971b110970b3f72ff3dccb4a74be88a1" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating a module.</source>
          <target state="translated">이 플래그는 모듈을 만들 때 링커에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0741c601864719f86e5e5ec40658a3d7bb6141b9" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating a shared library.</source>
          <target state="translated">이 플래그는 공유 라이브러리를 만들 때 링커에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e933f9801bc8530201ce8c8d4d9901c33fcb797" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating a static library.</source>
          <target state="translated">이 플래그는 정적 라이브러리를 만들 때 링커에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="34f5097fdb467c88b48af7e41b0a42113a20783f" translate="yes" xml:space="preserve">
          <source>These flags will be used by the linker when creating an executable.</source>
          <target state="translated">이 플래그는 실행 파일을 만들 때 링커에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dd93a0e9b018ee1a7479022fc4659c9574dfbd34" translate="yes" xml:space="preserve">
          <source>These functions can be used to generate a summary of enabled and disabled packages and/or feature for a build tree such as:</source>
          <target state="translated">이 기능은 다음과 같은 빌드 트리에 대해 활성화 및 비활성화 된 패키지 및 / 또는 기능의 요약을 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a5aba5fa40766475bf93a597c348b7768a441af" translate="yes" xml:space="preserve">
          <source>These generators prefer to lookup the build tool at build time rather than to store &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; in the CMake cache ahead of time. This is because the tools are version-specific and can be located using the Windows Registry. It is also necessary because the proper build tool may depend on the project content (e.g. the Intel Fortran plugin to VS 10 and 11 requires &lt;code&gt;devenv.com&lt;/code&gt; to build its &lt;code&gt;.vfproj&lt;/code&gt; project files even though &lt;code&gt;MSBuild.exe&lt;/code&gt; is normally preferred to support the &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이러한 생성자는 &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 을 CMake 캐시에 미리 저장하지 않고 빌드시 빌드 도구를 찾는 것을 선호합니다 . 도구는 버전별로 다르며 Windows 레지스트리를 사용하여 찾을 수 있기 때문입니다. 적절한 빌드 도구 (VS 10 예를 들어 인텔 포트란 플러그인을 11 필요한 프로젝트의 내용에 따라 달라질 수 있기 때문에 필요하다 &lt;code&gt;devenv.com&lt;/code&gt; 을 자사의 구축 &lt;code&gt;.vfproj&lt;/code&gt; 에도 불구하고 프로젝트 파일을 &lt;code&gt;MSBuild.exe&lt;/code&gt; 를가 일반적으로 지원하는 것이 바람직하다 &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; 를&lt;/a&gt; ) .</target>
        </trans-unit>
        <trans-unit id="84f5a5bca1d98ff89b8c5718188904d92c9655f5" translate="yes" xml:space="preserve">
          <source>These generators store &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; in the CMake cache so that it may be edited by the user.</source>
          <target state="translated">이러한 생성기는 &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 을 CMake 캐시에 저장 하여 사용자가 편집 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="bc67a52347b20547d5df75745150548ad709a92c" translate="yes" xml:space="preserve">
          <source>These generators support Integrated Development Environment (IDE) project files. Since the IDEs configure their own environment one may launch CMake from any environment.</source>
          <target state="translated">이 생성기는 IDE (Integrated Development Environment) 프로젝트 파일을 지원합니다. IDE는 자체 환경을 구성하므로 모든 환경에서 CMake를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dc4a41929b54c68ee52a6158882f11892651d0f" translate="yes" xml:space="preserve">
          <source>These generators support command-line build tools. In order to use them, one must launch CMake from a command-line prompt whose environment is already configured for the chosen compiler and build tool.</source>
          <target state="translated">이 생성기는 명령 줄 빌드 도구를 지원합니다. 그것들을 사용하려면, 선택된 컴파일러 및 빌드 툴에 대해 환경이 이미 구성된 명령 행 프롬프트에서 CMake를 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="64c91b5361d65a8cd2ad10ad0e5781cb9be851d1" translate="yes" xml:space="preserve">
          <source>These macros mangle four categories of Fortran symbols, respectively:</source>
          <target state="translated">이 매크로는 각각 4 가지 범주의 포트란 기호를 엉망으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="39d686aedcae765fe0925149e5a568de7db1ebd8" translate="yes" xml:space="preserve">
          <source>These module-file packages are different to config-file packages in that:</source>
          <target state="translated">이러한 모듈 파일 패키지는 다음과 같은 점에서 구성 파일 패키지와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f9532ebe7eef88658a326492b7ede60520cf830d" translate="yes" xml:space="preserve">
          <source>These modules are loaded using the &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="cf743bab4e9530f6efc0d0245daa97f385636701" translate="yes" xml:space="preserve">
          <source>These modules search for third-party software. They are normally called through the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 모듈은 타사 소프트웨어를 검색합니다. 이들은 일반적으로 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령을 통해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f92129a629026d208ee477f60e1eb16921aa8a2a" translate="yes" xml:space="preserve">
          <source>These modules used to be mistakenly exposed to the user, and have been moved out of user visibility. They are for CPack internal use, and should never be used directly.</source>
          <target state="translated">이러한 모듈은 실수로 사용자에게 노출되어 사용자가 볼 수 없게되었습니다. CPack 내부 용이며 직접 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="2fed7926e60140c73a73051f52788b2ce3144968" translate="yes" xml:space="preserve">
          <source>These options are the first arguments passed to &lt;code&gt;CoverageCommand&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;CoverageCommand&lt;/code&gt; 에 전달 된 첫 번째 인수 입니다.</target>
        </trans-unit>
        <trans-unit id="0e775304499cf91894e5a4ff04a41c1bb35afe87" translate="yes" xml:space="preserve">
          <source>These options are used for both normal linking and device linking (see policy &lt;a href=&quot;../policy/cmp0105#policy:CMP0105&quot; id=&quot;index-0-policy:CMP0105&quot;&gt;&lt;code&gt;CMP0105&lt;/code&gt;&lt;/a&gt;). To control link options for normal and device link steps, &lt;code&gt;$&amp;lt;HOST_LINK&amp;gt;&lt;/code&gt; and &lt;code&gt;$&amp;lt;DEVICE_LINK&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; can be used.</source>
          <target state="translated">이러한 옵션은 일반 연결 및 장치 연결 모두에 사용됩니다 (정책 &lt;a href=&quot;../policy/cmp0105#policy:CMP0105&quot; id=&quot;index-0-policy:CMP0105&quot;&gt; &lt;code&gt;CMP0105&lt;/code&gt; &lt;/a&gt; 참조 ). 일반 및 장치 링크 단계에 대한 링크 옵션을 제어하기 위해 &lt;code&gt;$&amp;lt;HOST_LINK&amp;gt;&lt;/code&gt; 및 &lt;code&gt;$&amp;lt;DEVICE_LINK&amp;gt;&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e540a9766087cea8606912d23ba87188fbaa1174" translate="yes" xml:space="preserve">
          <source>These paths are implicit linker framework search directories for the compiler&amp;rsquo;s language. CMake automatically detects these directories for each language and reports the results in this variable.</source>
          <target state="translated">이러한 경로는 컴파일러 언어에 대한 암시 적 링커 프레임 워크 검색 디렉토리입니다. CMake는 각 언어에 대해 이러한 디렉토리를 자동으로 감지하여이 변수에 결과를보고합니다.</target>
        </trans-unit>
        <trans-unit id="23799c3d8fe181cbd3d77d3116e90091ef17d59b" translate="yes" xml:space="preserve">
          <source>These paths are implicit linker framework search directories for the compiler's language. CMake automatically detects these directories for each language and reports the results in this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed89f7f34ffa851ce8e86f39485efc6b5b1d66d5" translate="yes" xml:space="preserve">
          <source>These properties will be applied to all SWIG input files and have same semantic as target properties &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 속성은 모든 SWIG 입력 파일에 적용되며 대상 속성 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 와 동일한 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="c9c6f830c4e5854b0bf75509a22835345d09a1c0" translate="yes" xml:space="preserve">
          <source>These properties will populate, respectively, properties &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt;&lt;code&gt;COMPILE_FLAGS&lt;/code&gt;&lt;/a&gt; of all generated C/C++ files.</source>
          <target state="translated">이러한 특성은 각각 생성 된 모든 C / C ++ 파일의 &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt; &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; &lt;/a&gt; 특성을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="facb8e1636570769e54ca6c80d71e0774f831a46" translate="yes" xml:space="preserve">
          <source>These queries refer to a target &lt;code&gt;tgt&lt;/code&gt;. This can be any runtime artifact, namely:</source>
          <target state="translated">이러한 쿼리는 대상 &lt;code&gt;tgt&lt;/code&gt; 를 참조합니다 . 이는 모든 런타임 아티팩트 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8951c302bdbbd8768ab2954a922c92b772cbf7b7" translate="yes" xml:space="preserve">
          <source>These variables are checked by the &lt;code&gt;find_package&lt;/code&gt; command to determine whether the configuration file provides an acceptable version. They are not available after the &lt;code&gt;find_package&lt;/code&gt; call returns. If the version is acceptable the following variables are set:</source>
          <target state="translated">이 변수는 &lt;code&gt;find_package&lt;/code&gt; 명령으로 점검 하여 구성 파일이 허용 가능한 버전을 제공하는지 판별합니다. &lt;code&gt;find_package&lt;/code&gt; 호출이 리턴 된 후에는 사용할 수 없습니다 . 버전이 허용 가능한 경우 다음 변수가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="88f5b6ebe0b2bd61293853228462efb1d8c1ca00" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉터리를 가리 키도록 크로스 컴파일 할 때 특히 유용하며 CMake도 여기에서 검색합니다. 기본적으로 처음에는 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉터리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉터리를 검색 한 다음 루트가 아닌 디렉터리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt; &lt;/a&gt; 를 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4830b5e6f2636a30f31924680be5215180185d9b" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉토리를 가리 키도록 교차 컴파일 할 때 특히 유용하며 CMake도 검색합니다. 기본적으로 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉토리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉토리를 검색 한 다음 루트가 아닌 디렉토리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_include#variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_INCLUDE&lt;/code&gt; &lt;/a&gt; 를 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="658bbe6a9a64774d2fb019c959dddf168b4a5e70" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉터리를 가리 키도록 크로스 컴파일 할 때 특히 유용하며 CMake도 여기에서 검색합니다. 기본적으로 처음에는 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉터리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉터리를 검색 한 다음 루트가 아닌 디렉터리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt; &lt;/a&gt; 를 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16c4e74a3481c2767e0fdbc1356f250633dc63e2" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉토리를 가리 키도록 교차 컴파일 할 때 특히 유용하며 CMake도 검색합니다. 기본적으로 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉토리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉토리를 검색 한 다음 루트가 아닌 디렉토리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_library#variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_LIBRARY&lt;/code&gt; &lt;/a&gt; 를 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19c4e63302d9a26788d8ba823b813677868054c8" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉터리를 가리 키도록 크로스 컴파일 할 때 특히 유용하며 CMake도 여기에서 검색합니다. 기본적으로 처음에는 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉터리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉터리를 검색 한 다음 루트가 아닌 디렉터리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt; &lt;/a&gt; 를 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="576e26aa393b5ecf123e51853f0298bd64e332d8" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉토리를 가리 키도록 교차 컴파일 할 때 특히 유용하며 CMake도 검색합니다. 기본적으로 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉토리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉토리를 검색 한 다음 루트가 아닌 디렉토리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_package#variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PACKAGE&lt;/code&gt; &lt;/a&gt; 를 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2273e9137e71686152591f1dc163a545c58d2504" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉터리를 가리 키도록 크로스 컴파일 할 때 특히 유용하며 CMake도 여기에서 검색합니다. 기본적으로 처음에는 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉터리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉터리를 검색 한 다음 루트가 아닌 디렉터리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt; &lt;/a&gt; 을 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0780369a20c3e9e2f57f4a25db7a0427ebf2ad7c" translate="yes" xml:space="preserve">
          <source>These variables are especially useful when cross-compiling to point to the root directory of the target environment and CMake will search there too. By default at first the directories listed in &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; are searched, then the &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; directory is searched, and then the non-rooted directories will be searched. The default behavior can be adjusted by setting &lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt;&lt;/a&gt;. This behavior can be manually overridden on a per-call basis using options:</source>
          <target state="translated">이러한 변수는 대상 환경의 루트 디렉토리를 가리 키도록 교차 컴파일 할 때 특히 유용하며 CMake도 검색합니다. 기본적으로 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-2-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 에&lt;/a&gt; 나열된 디렉토리를 검색 한 다음 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-2-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 디렉토리를 검색 한 다음 루트가 아닌 디렉토리를 검색합니다. &lt;a href=&quot;../variable/cmake_find_root_path_mode_program#variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH_MODE_PROGRAM&lt;/code&gt; &lt;/a&gt; 을 설정하여 기본 동작을 조정할 수 있습니다 . 이 동작은 옵션을 사용하여 호출별로 수동으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86cefd6d321fd738aede1c8bea70aa62ec3a6fb2" translate="yes" xml:space="preserve">
          <source>These variables are obsolete and provided for backwards compatibility:</source>
          <target state="translated">이러한 변수는 더 이상 사용되지 않으며 이전 버전과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="88a87d00d1e380b7b088cc0396e6a1bef1783e6f" translate="yes" xml:space="preserve">
          <source>These variables may optionally be set to help this module find the correct files:</source>
          <target state="translated">이 모듈이 올바른 파일을 찾는 데 도움이되도록 이러한 변수를 선택적으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d69d15081c2a6c34a919288c46a7f2919e693a1" translate="yes" xml:space="preserve">
          <source>These variables should not be used directly by project code.</source>
          <target state="translated">이러한 변수는 프로젝트 코드에서 직접 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ea2f3cfa50040b1cb7526bd4ec39bd14c23155d2" translate="yes" xml:space="preserve">
          <source>They enable conditional linking, conditional definitions used when compiling, conditional include directories, and more. The conditions may be based on the build configuration, target properties, platform information or any other queryable information.</source>
          <target state="translated">조건부 연결, 컴파일시 사용되는 조건부 정의, 조건부 포함 디렉토리 등을 사용할 수 있습니다. 조건은 빌드 구성, 대상 속성, 플랫폼 정보 또는 기타 쿼리 가능한 정보를 기반으로 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7872242f49b4c1ffa1807e0643c8dbef1939c0a" translate="yes" xml:space="preserve">
          <source>They should not be provided by the third party, except perhaps in the form of documentation</source>
          <target state="translated">문서 형식을 제외하고는 제 3자가 제공해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="87263b9f2ef52dfb3f4900cc379f5fb7f79376a6" translate="yes" xml:space="preserve">
          <source>Third version number component of the &lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt;&lt;code&gt;CMAKE_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;cmake_version#variable:CMAKE_VERSION&quot; id=&quot;index-0-variable:CMAKE_VERSION&quot;&gt; &lt;code&gt;CMAKE_VERSION&lt;/code&gt; &lt;/a&gt; 변수 의 세 번째 버전 번호 구성 요소 .</target>
        </trans-unit>
        <trans-unit id="ebc3320b0bc5879d1d9fb89fc4a9553078359455" translate="yes" xml:space="preserve">
          <source>Third version number component of the &lt;a href=&quot;project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt; variable as set by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 으로 설정된 &lt;a href=&quot;project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt; 변수 의 세 번째 버전 번호 구성 요소 .</target>
        </trans-unit>
        <trans-unit id="a31591cfee110cb9717e1e613650471029af4147" translate="yes" xml:space="preserve">
          <source>Third version number component of the &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt; variable as set by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 으로 설정된 &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt; 변수 의 세 번째 버전 번호 구성 요소 .</target>
        </trans-unit>
        <trans-unit id="914e1e7d20f4ff96eaf79946788222c616a03f5d" translate="yes" xml:space="preserve">
          <source>Third-party libraries which do not provide config-file packages can still be found with the &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-6-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command, if a &lt;code&gt;FindSomePackage.cmake&lt;/code&gt; file is available.</source>
          <target state="translated">구성 파일 패키지를 제공하지 않는 타사 라이브러리 는 &lt;code&gt;FindSomePackage.cmake&lt;/code&gt; 파일을 사용할 수 있는 경우 &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-6-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령으로 계속 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eace5764a5faf1cacd0aae5864dc84ca2527daba" translate="yes" xml:space="preserve">
          <source>Third-party platform dependent installation directory.</source>
          <target state="translated">타사 플랫폼 종속 설치 디렉토리</target>
        </trans-unit>
        <trans-unit id="81bc45201d44552473073731f96dd77732af3d8a" translate="yes" xml:space="preserve">
          <source>Third-party platform independent installation directory.</source>
          <target state="translated">타사 플랫폼 독립 설치 디렉토리</target>
        </trans-unit>
        <trans-unit id="bdd6461e7673c0a8c13ac7ddf69648a5f170ba8d" translate="yes" xml:space="preserve">
          <source>This CMake file contains two macros to assist with searching for OSG libraries and nodekits. Please see FindOpenSceneGraph.cmake for full documentation.</source>
          <target state="translated">이 CMake 파일에는 OSG 라이브러리 및 노드 킷 검색을 지원하는 두 개의 매크로가 포함되어 있습니다. 자세한 내용은 FindOpenSceneGraph.cmake를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7f4205f986c6e88a14124a5881a7b86094fe87bc" translate="yes" xml:space="preserve">
          <source>This a string property that contains the directory paths separated by semicolons.</source>
          <target state="translated">세미콜론으로 구분 된 디렉토리 경로를 포함하는 문자열 특성입니다.</target>
        </trans-unit>
        <trans-unit id="6ee28c51dbe5b9f2023a1e0d0e3273c2a132dad2" translate="yes" xml:space="preserve">
          <source>This a string property that contains the directory paths separated by semicolons. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_jar_directories#variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot; id=&quot;index-0-variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot;&gt;&lt;code&gt;CMAKE_ANDROID_JAR_DIRECTORIES&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">세미콜론으로 구분 된 디렉토리 경로를 포함하는 문자열 특성입니다. 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_android_jar_directories#variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot; id=&quot;index-0-variable:CMAKE_ANDROID_JAR_DIRECTORIES&quot;&gt; &lt;code&gt;CMAKE_ANDROID_JAR_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 변수 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd730564ee5d3a7edcd80ea92d1462729b7c0c5e" translate="yes" xml:space="preserve">
          <source>This abstracts a native build tool&amp;rsquo;s command-line interface with the following options:</source>
          <target state="translated">다음과 같은 옵션으로 기본 빌드 도구의 명령 행 인터페이스를 추상화합니다.</target>
        </trans-unit>
        <trans-unit id="d0d1ab3246ec1e94416adcdb32e18c379f4221b2" translate="yes" xml:space="preserve">
          <source>This abstracts a native build tool's command-line interface with the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f58f75f971e96790bee0d95d81187ee0857ed4" translate="yes" xml:space="preserve">
          <source>This allows the user to build the target from the CUDA file; however, bad things can happen if the CUDA source file is added to multiple targets. When performing parallel builds it is possible for the custom build command to be run more than once and in parallel causing cryptic build errors. VS runs the rules for every source file in the target, and a source can have only one rule no matter how many projects it is added to. When the rule is run from multiple targets race conditions can occur on the generated file. Eventually everything will get built, but if the user is unaware of this behavior, there may be confusion. It would be nice if this script could detect the reuse of source files across multiple targets and turn the option off for the user, but no good solution could be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0008fb8eb1072ad418b846414621f7a7b9dffc7d" translate="yes" xml:space="preserve">
          <source>This allows to add individual build events for every configuration.</source>
          <target state="translated">이를 통해 모든 구성에 대해 개별 빌드 이벤트를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbe9ec337665b641794de1d01c2bfe390ee47d3a" translate="yes" xml:space="preserve">
          <source>This also applies to paths referencing external dependencies. It is not advisable to populate any properties which may contain paths, such as &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, with paths relevant to dependencies. For example, this code may not work well for a relocatable package:</source>
          <target state="translated">이는 외부 종속성을 참조하는 경로에도 적용됩니다. &lt;a href=&quot;../../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 와 같은 경로를 포함 할 수있는 속성 을 종속성과 관련된 경로 로 채우지 않는 것이 좋습니다 . 예를 들어, 다음 코드는 재배치 가능한 패키지에 대해 제대로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2de2c06055757e590cd299e1bb6725be2f784597" translate="yes" xml:space="preserve">
          <source>This also applies to paths referencing external dependencies. It is not advisable to populate any properties which may contain paths, such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, with paths relevant to dependencies. For example, this code may not work well for a relocatable package:</source>
          <target state="translated">이것은 외부 종속성을 참조하는 경로에도 적용됩니다. &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 와 같이 경로를 포함 할 수있는 특성 을 종속성과 관련된 경로 로 채우는 것은 바람직하지 않습니다 . 예를 들어,이 코드는 재배치 가능 패키지에서 제대로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e581283826ac5de55d1245a6ba0cc35f61ed52a" translate="yes" xml:space="preserve">
          <source>This built-in read-only property does not exist if policy &lt;a href=&quot;../policy/cmp0059#policy:CMP0059&quot; id=&quot;index-0-policy:CMP0059&quot;&gt;&lt;code&gt;CMP0059&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">정책 &lt;a href=&quot;../policy/cmp0059#policy:CMP0059&quot; id=&quot;index-0-policy:CMP0059&quot;&gt; &lt;code&gt;CMP0059&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;NEW&lt;/code&gt; 로 설정된 경우이 내장 읽기 전용 특성이 존재하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9aa56af604d601f7f36dd78b138f1a85a870e0db" translate="yes" xml:space="preserve">
          <source>This cache variable is used by the Eclipse project generator. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 캐시 변수는 Eclipse 프로젝트 생성기에서 사용됩니다. &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1caf5547fa089671dd32d13d36ee97ff070b69e" translate="yes" xml:space="preserve">
          <source>This cache variable tells the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Eclipse%20CDT4.html#generator:Eclipse%20CDT4&quot; id=&quot;index-0-generator:Eclipse CDT4&quot;&gt;&lt;code&gt;Eclipse CDT4&lt;/code&gt;&lt;/a&gt; project generator to set the resource encoding to the given value in generated project files. If no value is given, no encoding will be set.</source>
          <target state="translated">이 캐시 변수는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Eclipse%20CDT4.html#generator:Eclipse%20CDT4&quot; id=&quot;index-0-generator:Eclipse CDT4&quot;&gt; &lt;code&gt;Eclipse CDT4&lt;/code&gt; &lt;/a&gt; 프로젝트 생성기에 리소스 인코딩을 생성 된 프로젝트 파일의 지정된 값으로 설정하도록 지시 합니다. 값을 지정하지 않으면 인코딩이 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c66364b02830206b3a35b304b77bfb90c79bf701" translate="yes" xml:space="preserve">
          <source>This cache variable tells the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Eclipse%20CDT4.html#generator:Eclipse%20CDT4&quot; id=&quot;index-0-generator:Eclipse CDT4&quot;&gt;&lt;code&gt;Eclipse CDT4&lt;/code&gt;&lt;/a&gt; project generator to set the resource encoding to the given value in generated project files. If no value is given, no encoding will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a209d1f9b5b63be5c3b707052229c8ca350429ff" translate="yes" xml:space="preserve">
          <source>This can aid performance analysis of CMake scripts executed. Third party applications should be used to process the output into human readable format.</source>
          <target state="translated">이는 실행 된 CMake 스크립트의 성능 분석을 지원할 수 있습니다. 출력을 사람이 읽을 수있는 형식으로 처리하려면 타사 응용 프로그램을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="22c5e960332c968d1f7f198770d080ce75f3cbe6" translate="yes" xml:space="preserve">
          <source>This can also be extended to cover dependencies:</source>
          <target state="translated">또한 종속성을 포함하도록 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00a5456bc2226ce5046182804eaadecdebf7fec2" translate="yes" xml:space="preserve">
          <source>This can also be used to specify the resource spec file from a CMake build. If no &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; is passed to &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; is not specified in the dashboard script, the value of this variable from the build is used.</source>
          <target state="translated">이는 CMake 빌드에서 리소스 사양 파일을 지정하는데도 사용할 수 있습니다. 어떤 경우 &lt;code&gt;RESOURCE_SPEC_FILE&lt;/code&gt; 가 전달되지 않습니다 &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; 는 대시 보드 스크립트에 지정되지 않은 빌드에서이 변수의 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ff7e18935aac6398cc434e155abbd615576adbcc" translate="yes" xml:space="preserve">
          <source>This can be more robustly and conveniently expressed using the &lt;code&gt;CHECK_...&lt;/code&gt; keyword form of the &lt;code&gt;message()&lt;/code&gt; command:</source>
          <target state="translated">이것은 &lt;code&gt;message()&lt;/code&gt; 명령 의 &lt;code&gt;CHECK_...&lt;/code&gt; 키워드 형식을 사용하여보다 강력하고 편리하게 표현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3ae453288169d9e8decb5f92411620ac183c6e7" translate="yes" xml:space="preserve">
          <source>This can be set to the path of the pkg-config executable. If not provided, it will be set by the module as a result of calling &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6ca8704106cafa0ed52b98fbdbd0b0816fde8d" translate="yes" xml:space="preserve">
          <source>This can be set to the path of the pkg-config executable. If not provided, it will be set by the module as a result of calling &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; internally. The &lt;code&gt;PKG_CONFIG&lt;/code&gt; environment variable can be used as a hint.</source>
          <target state="translated">이것은 pkg-config 실행 파일의 경로로 설정 될 수 있습니다. 제공하지 않으면 &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; 내부적 으로 호출 한 결과 모듈에 의해 설정됩니다 . &lt;code&gt;PKG_CONFIG&lt;/code&gt; 의 환경 변수 힌트로 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="b4224f37300f5c0408591e109df74b387bdc1eea" translate="yes" xml:space="preserve">
          <source>This can be used in conjunction with &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt;, which CMake uses to select &lt;a href=&quot;cmake_vs_windows_target_platform_version#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot;&gt;&lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이것은 CMake가 &lt;a href=&quot;cmake_vs_windows_target_platform_version#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&quot;&gt; &lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt; &lt;/a&gt; 을 선택하는 데 사용하는 &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt; 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="170847bbeac8e31080e8313e4f0fb7779447dbd6" translate="yes" xml:space="preserve">
          <source>This can result in huge graphs. Using the file &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt; the look and content of the generated graphs can be influenced. This file is searched first in &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and then in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. If found, it is read and the variables set in it are used to adjust options for the generated graphviz files.</source>
          <target state="translated">이로 인해 큰 그래프가 생성 될 수 있습니다. &lt;code&gt;CMakeGraphVizOptions.cmake&lt;/code&gt; 파일을 사용하면 생성 된 그래프의 모양과 내용이 영향을받을 수 있습니다. 이 파일은 &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 에서 먼저 검색된 다음 &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 에서 검색 됩니다. 발견되면, 읽히고 여기에 설정된 변수는 생성 된 graphviz 파일의 옵션을 조정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b7d7e5d8a61e5438d8832b6d73a809ebbec5e0f6" translate="yes" xml:space="preserve">
          <source>This cancels all deferred calls matching any of the given ids in the specified &lt;code&gt;DIRECTORY&lt;/code&gt; scope (or the current directory scope if no &lt;code&gt;DIRECTORY&lt;/code&gt; option is given). Unknown ids are silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6983e8a5bba900878424d435d64b74c93287f757" translate="yes" xml:space="preserve">
          <source>This cancels all deferred calls matching any of the given ids. Unknown ids are silently ignored.</source>
          <target state="translated">이렇게하면 지정된 ID와 일치하는 모든 지연된 호출이 취소됩니다. 알 수없는 ID는 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a753ad6b61b004480f9ab6069877c4a12f3d5a79" translate="yes" xml:space="preserve">
          <source>This chooses the kind of buildsystem to generate. See the &lt;a href=&quot;cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt; manual for documentation of all generators. Run &lt;code&gt;cmake --help&lt;/code&gt; to see a list of generators available locally. Optionally use the &lt;code&gt;-G&lt;/code&gt; option below to specify a generator, or simply accept the default CMake chooses for the current platform.</source>
          <target state="translated">생성 할 빌드 시스템의 종류를 선택합니다. 모든 생성기의 설명서 는 &lt;a href=&quot;cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;cmake-generators(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 . &lt;code&gt;cmake --help&lt;/code&gt; 를 실행 하여 로컬로 사용 가능한 생성기 목록을보십시오. 선택적으로 아래 의 &lt;code&gt;-G&lt;/code&gt; 옵션을 사용하여 생성기를 지정하거나 현재 플랫폼에 대한 기본 CMake 선택을 수락하십시오.</target>
        </trans-unit>
        <trans-unit id="7434c32dd78da6621aec2d1303f86497d1e5da99" translate="yes" xml:space="preserve">
          <source>This code is very similar to the example we created by hand in the &lt;a href=&quot;#importing-libraries&quot;&gt;Importing Libraries&lt;/a&gt; section. Note that &lt;code&gt;${_IMPORT_PREFIX}&lt;/code&gt; is computed relative to the file location.</source>
          <target state="translated">이 코드는 &lt;a href=&quot;#importing-libraries&quot;&gt;Importing Libraries&lt;/a&gt; 섹션 에서 직접 만든 예제와 매우 유사합니다 . 참고 것을 &lt;code&gt;${_IMPORT_PREFIX}&lt;/code&gt; 파일 위치를 기준으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="f1df7ec8f1969f6be1c13eb4b9d762f814491d3b" translate="yes" xml:space="preserve">
          <source>This code sets the following variables:</source>
          <target state="translated">이 코드는 다음 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8d652f690e6f3f1b0281d42dbc3ccff49a1b0dee" translate="yes" xml:space="preserve">
          <source>This command affects only the current CMake process, not the process from which CMake was called, nor the system environment at large, nor the environment of subsequent build or test processes.</source>
          <target state="translated">이 명령은 CMake가 호출 된 프로세스 나 시스템 환경이 크거나 후속 빌드 또는 테스트 프로세스의 환경이 아니라 현재 CMake 프로세스에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="e5c5b0bc1f1a9ab6db941c20058c5975f75976ce" translate="yes" xml:space="preserve">
          <source>This command can be used to add any link options, but alternative commands exist to add libraries (&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;link_libraries#command:link_libraries&quot; id=&quot;index-0-command:link_libraries&quot;&gt;&lt;code&gt;link_libraries()&lt;/code&gt;&lt;/a&gt;). See documentation of the &lt;a href=&quot;../prop_dir/link_options#prop_dir:LINK_OPTIONS&quot; id=&quot;index-0-prop_dir:LINK_OPTIONS&quot;&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt; properties.</source>
          <target state="translated">이 명령은 링크 옵션을 추가하는 데 사용할 수 있지만 라이브러리를 추가하기위한 대체 명령이 있습니다 ( &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;link_libraries#command:link_libraries&quot; id=&quot;index-0-command:link_libraries&quot;&gt; &lt;code&gt;link_libraries()&lt;/code&gt; &lt;/a&gt; ). &lt;a href=&quot;../prop_dir/link_options#prop_dir:LINK_OPTIONS&quot; id=&quot;index-0-prop_dir:LINK_OPTIONS&quot;&gt; &lt;code&gt;directory&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; 속성의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b11d0e34a8f52cbfa245d2e41869d0bdc85eed36" translate="yes" xml:space="preserve">
          <source>This command can be used to add any options. However, for adding preprocessor definitions and include directories it is recommended to use the more specific commands &lt;a href=&quot;add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt;&lt;code&gt;add_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 옵션을 추가하는 데 사용할 수 있습니다. 그러나 전 처리기 정의 및 포함 디렉토리를 추가하려면 &lt;a href=&quot;add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt; &lt;code&gt;add_compile_definitions()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt; 와 같은보다 구체적인 명령을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="bb4a7ce5aa6997e18d0e5b68ee46e34e9291fe23" translate="yes" xml:space="preserve">
          <source>This command can be used to add any options. However, for adding preprocessor definitions and include directories it is recommended to use the more specific commands &lt;a href=&quot;target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 옵션을 추가하는 데 사용할 수 있습니다. 그러나 전 처리기 정의 및 포함 디렉토리를 추가하려면보다 구체적인 명령 &lt;a href=&quot;target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ee139e4ec01add5274cc903b653733f9057e7ee8" translate="yes" xml:space="preserve">
          <source>This command can help avoid costly build processes when a compiler lacks support for a necessary feature, or a particular vendor library is not compatible with the Fortran compiler version being used. Some of these failures only occur at runtime instead of linktime, and a trivial runtime example can catch the issue before the main build process.</source>
          <target state="translated">이 명령은 컴파일러에 필요한 기능에 대한 지원이 없거나 특정 공급 업체 라이브러리가 사용중인 Fortran 컴파일러 버전과 호환되지 않는 경우 비용이 많이 드는 빌드 프로세스를 피할 수 있습니다. 이러한 오류 중 일부는 링크 타임이 아닌 런타임시에만 발생하며 간단한 런타임 예제는 기본 빌드 프로세스 전에 문제를 포착 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d944797fadde856deeca0701da63b77f1c3253a" translate="yes" xml:space="preserve">
          <source>This command can help avoid costly build processes when a compiler lacks support for a necessary feature, or a particular vendor library is not compatible with the Fortran compiler version being used. This generate-time check may advise the user of such before the main build process. See also the &lt;a href=&quot;checkfortransourceruns#command:check_fortran_source_runs&quot; id=&quot;index-0-command:check_fortran_source_runs&quot;&gt;&lt;code&gt;check_fortran_source_runs()&lt;/code&gt;&lt;/a&gt; command to actually run the compiled code.</source>
          <target state="translated">이 명령은 컴파일러에 필요한 기능에 대한 지원이 없거나 특정 공급 업체 라이브러리가 사용중인 Fortran 컴파일러 버전과 호환되지 않는 경우 비용이 많이 드는 빌드 프로세스를 피할 수 있습니다. 이 생성 시간 확인은 기본 빌드 프로세스 전에 사용자에게이를 알려줄 수 있습니다. 컴파일 된 코드를 실제로 실행 하려면 &lt;a href=&quot;checkfortransourceruns#command:check_fortran_source_runs&quot; id=&quot;index-0-command:check_fortran_source_runs&quot;&gt; &lt;code&gt;check_fortran_source_runs()&lt;/code&gt; &lt;/a&gt; 명령을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a466d3b030e4a757976ab12f2064068956ecc1f7" translate="yes" xml:space="preserve">
          <source>This command cannot be used to add options for static library targets, since they do not use a linker. To add archiver or MSVC librarian flags, see the &lt;a href=&quot;../prop_tgt/static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">이 명령은 링커를 사용하지 않으므로 정적 라이브러리 대상에 대한 옵션을 추가하는 데 사용할 수 없습니다. 아카이버 또는 MSVC 사서 플래그를 추가하려면 &lt;a href=&quot;../prop_tgt/static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="947855a3d664d19b1a310edccba214d0b99f1ada" translate="yes" xml:space="preserve">
          <source>This command creates a &lt;code&gt;&amp;lt;target_name&amp;gt;.jar&lt;/code&gt;. It compiles the given &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; files and adds the given &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt; files to the jar file. Source files can be java files or listing files (prefixed by &lt;code&gt;@&lt;/code&gt;). If only resource files are given then just a jar file is created. The list of &lt;code&gt;INCLUDE_JARS&lt;/code&gt; are added to the classpath when compiling the java sources and also to the dependencies of the target. &lt;code&gt;INCLUDE_JARS&lt;/code&gt; also accepts other target names created by &lt;code&gt;add_jar()&lt;/code&gt;. For backwards compatibility, jar files listed as sources are ignored (as they have been since the first version of this module).</source>
          <target state="translated">이 명령은 &lt;code&gt;&amp;lt;target_name&amp;gt;.jar&lt;/code&gt; 을 작성합니다 . 주어진 &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; 파일을 컴파일하고 주어진 &amp;lt; &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt; 파일을 jar 파일에 추가합니다. 소스 파일은 Java 파일 또는 목록 파일 ( &lt;code&gt;@&lt;/code&gt; 접두사 ) 일 수 있습니다. 자원 파일 만 제공되면 jar 파일 만 작성됩니다. &lt;code&gt;INCLUDE_JARS&lt;/code&gt; 목록은 Java 소스를 컴파일 할 때 클래스 경로와 대상의 종속성에 추가됩니다. &lt;code&gt;INCLUDE_JARS&lt;/code&gt; 는 &lt;code&gt;add_jar()&lt;/code&gt; 작성된 다른 대상 이름도 허용 합니다. 이전 버전과의 호환성을 위해 소스로 나열된 jar 파일은이 모듈의 첫 번째 버전 이후로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="509aa45e8304030eea65e8c580e7fc0748524036" translate="yes" xml:space="preserve">
          <source>This command creates a target with the specified &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; when policy &lt;a href=&quot;../policy/cmp0078#policy:CMP0078&quot; id=&quot;index-0-policy:CMP0078&quot;&gt;&lt;code&gt;CMP0078&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;. Otherwise, the legacy behavior will choose a different target name and store it in the &lt;code&gt;SWIG_MODULE_&amp;lt;name&amp;gt;_REAL_NAME&lt;/code&gt; variable.</source>
          <target state="translated">이 명령은 정책 &lt;a href=&quot;../policy/cmp0078#policy:CMP0078&quot; id=&quot;index-0-policy:CMP0078&quot;&gt; &lt;code&gt;CMP0078&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;NEW&lt;/code&gt; 로 설정된 경우 지정된 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 으로 대상을 작성합니다 . 그렇지 않으면 레거시 동작은 다른 대상 이름을 선택하여 &lt;code&gt;SWIG_MODULE_&amp;lt;name&amp;gt;_REAL_NAME&lt;/code&gt; 변수에 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="1fdcda3916e082f2626208844c32bc55650b092d" translate="yes" xml:space="preserve">
          <source>This command exists only because ancient CMake versions provided it. CMake handles preprocessor dependency scanning automatically using a more advanced scanner.</source>
          <target state="translated">이 명령은 고대 CMake 버전에서 제공했기 때문에 존재합니다. CMake는 고급 스캐너를 사용하여 전 처리기 종속성 검색을 자동으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="db88f4b5bbd5da6dda1c8a56744244c0c6cb1fd4" translate="yes" xml:space="preserve">
          <source>This command generates an old-style library dependencies file. Projects requiring CMake 2.6 or later should not use the command. Use instead the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command to help export targets from an installation tree and the &lt;a href=&quot;export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command to export targets from a build tree.</source>
          <target state="translated">이 명령은 구식 라이브러리 종속성 파일을 생성합니다. CMake 2.6 이상이 필요한 프로젝트는 명령을 사용하지 않아야합니다. &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령을 대신 사용 하여 설치 트리에서 대상을 &lt;a href=&quot;export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 빌드 트리에서 대상을 내보내십시오.</target>
        </trans-unit>
        <trans-unit id="1d5be62c5b21f75ed4816deafa5a1c2f42762524" translate="yes" xml:space="preserve">
          <source>This command generates installation rules for a project. Install rules specified by calls to the &lt;code&gt;install()&lt;/code&gt; command within a source directory are executed in order during installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ebfd8f56e28c2068ade766d8f474ae49094f45" translate="yes" xml:space="preserve">
          <source>This command generates installation rules for a project. Install rules specified by calls to the &lt;code&gt;install()&lt;/code&gt; command within a source directory are executed in order during installation. Install rules in subdirectories added by calls to the &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; command are interleaved with those in the parent directory to run in the order declared (see policy &lt;a href=&quot;../policy/cmp0082#policy:CMP0082&quot; id=&quot;index-0-policy:CMP0082&quot;&gt;&lt;code&gt;CMP0082&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 명령은 프로젝트에 대한 설치 규칙을 생성합니다. 소스 디렉토리 내 에서 &lt;code&gt;install()&lt;/code&gt; 명령 을 호출하여 지정된 설치 규칙은 설치 중에 순서대로 실행됩니다. &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 명령 에 대한 호출로 추가 된 하위 디렉터리의 설치 규칙은 선언 된 순서대로 실행되도록 상위 디렉터리의 규칙 과 인터리브됩니다 (정책 &lt;a href=&quot;../policy/cmp0082#policy:CMP0082&quot; id=&quot;index-0-policy:CMP0082&quot;&gt; &lt;code&gt;CMP0082&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="feb5cc1cb06b29ad6bfae6fd2c21a299456f6385" translate="yes" xml:space="preserve">
          <source>This command generates installation rules for a project. Rules specified by calls to this command within a source directory are executed in order during installation. The order across directories is not defined.</source>
          <target state="translated">이 명령은 프로젝트의 설치 규칙을 생성합니다. 소스 디렉토리 내에서이 명령을 호출하여 지정된 규칙은 설치 중에 순서대로 실행됩니다. 디렉토리 간 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6118165206f25f313cdd290df6e65eb3b9060a35" translate="yes" xml:space="preserve">
          <source>This command generates the &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; file and arranges to install it to &lt;code&gt;lib/cmake&lt;/code&gt;. The file contains code suitable for use by downstreams to import all targets listed in the install command from the installation tree.</source>
          <target state="translated">이 명령은 &lt;code&gt;MathFunctionsTargets.cmake&lt;/code&gt; 파일을 생성하고 &lt;code&gt;lib/cmake&lt;/code&gt; 에 설치하도록 정렬합니다 . 이 파일에는 다운 스트림에서 설치 트리에서 설치 명령에 나열된 모든 대상을 가져 오는 데 사용하기에 적합한 코드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3935ff2b85ed39953cfceb4433dfdf45abcd736d" translate="yes" xml:space="preserve">
          <source>This command handles the &lt;code&gt;REQUIRED&lt;/code&gt;, &lt;code&gt;QUIET&lt;/code&gt; and version-related arguments of &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. It also sets the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable. The package is considered found if all variables listed contain valid results, e.g. valid filepaths.</source>
          <target state="translated">이 명령 은 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;REQUIRED&lt;/code&gt; , &lt;code&gt;QUIET&lt;/code&gt; 및 버전 관련 인수를 처리합니다 . 또한 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 변수를 설정합니다 . 나열된 모든 변수에 유효한 결과 (예 : 유효한 파일 경로)가 포함 된 경우 패키지를 찾은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="ceba51c70ab5dcb5c2392e312250140fa0070826" translate="yes" xml:space="preserve">
          <source>This command has been superceded by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. It is provided for compatibility with older CMake code.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 으로 대체되었습니다 . 이전 CMake 코드와의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="561357901351a4381e176935ec1dd2236fd67255" translate="yes" xml:space="preserve">
          <source>This command has been superceded by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. It is provided for compatibility with older CMake code. The &lt;code&gt;FILES&lt;/code&gt; form is directly replaced by the &lt;code&gt;FILES&lt;/code&gt; form of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. The regexp form can be expressed more clearly using the &lt;code&gt;GLOB&lt;/code&gt; form of the &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 으로 대체되었습니다 . 이전 CMake 코드와의 호환성을 위해 제공됩니다. &lt;code&gt;FILES&lt;/code&gt; 형태로 직접적으로 대체 &lt;code&gt;FILES&lt;/code&gt; 의 형태로 &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령. regexp 양식은 &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;GLOB&lt;/code&gt; 양식을 사용하여보다 명확하게 표현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f69738b0632db1e3fd288749347bed89d7b00ab" translate="yes" xml:space="preserve">
          <source>This command has been superceded by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. It is provided for compatibility with older CMake code. The &lt;code&gt;FILES&lt;/code&gt; form is directly replaced by the &lt;code&gt;PROGRAMS&lt;/code&gt; form of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command. The regexp form can be expressed more clearly using the &lt;code&gt;GLOB&lt;/code&gt; form of the &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 으로 대체되었습니다 . 이전 CMake 코드와의 호환성을 위해 제공됩니다. &lt;code&gt;FILES&lt;/code&gt; 형태로 직접적으로 대체 &lt;code&gt;PROGRAMS&lt;/code&gt; 의 형태로 &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령. regexp 양식은 &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;GLOB&lt;/code&gt; 양식을 사용하여보다 명확하게 표현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b9a2b3b35303ee3f359484e497f245f5767d4a0" translate="yes" xml:space="preserve">
          <source>This command has been superseded by alternatives:</source>
          <target state="translated">이 명령은 다음과 같은 대안으로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="626beb65ff68ab0df17067a0ce5cd42bf9060bc2" translate="yes" xml:space="preserve">
          <source>This command has same capabilities as &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령 과 동일한 기능을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="9c546529879d6e9d5e008c95a23e701de5d04f87" translate="yes" xml:space="preserve">
          <source>This command has several signatures as detailed in subsections below. All of them have the general form</source>
          <target state="translated">이 명령에는 아래 하위 섹션에 자세히 설명 된 여러 서명이 있습니다. 그들 모두는 일반적인 형태를 가지고 있습니다</target>
        </trans-unit>
        <trans-unit id="91c1aca77d98f402824cae6de7c201e873974efc" translate="yes" xml:space="preserve">
          <source>This command implements the common pattern typically needed for most dependencies. It iterates over each of the named dependencies in turn and for each one it loosely follows the &lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;canonical pattern&lt;/a&gt; as presented at the beginning of this section. An important difference is that &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; will only be called on the populated content if there is a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file in its top level source directory. This allows the command to be used for dependencies that make downloaded content available at a known location but which do not need or support being added directly to the build.</source>
          <target state="translated">이 명령은 대부분의 종속성에 일반적으로 필요한 공통 패턴을 구현합니다. 이름이 지정된 각 종속성을 차례로 반복하고 각 종속성에 대해이 섹션의 시작 부분에 제시된 &lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;표준 패턴&lt;/a&gt; 을 느슨하게 따릅니다 . 중요한 차이점은 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 는 최상위 소스 디렉토리에 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 이있는 경우 채워진 콘텐츠에서만 호출된다는 것입니다 . 이렇게하면 다운로드 한 콘텐츠를 알려진 위치에서 사용할 수 있지만 빌드에 직접 추가 할 필요가 없거나 지원하지 않는 종속성에 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cccaac9f52abb9eb763a8509bd58c988359030bf" translate="yes" xml:space="preserve">
          <source>This command implements the common pattern typically needed for most dependencies. It iterates over each of the named dependencies in turn and for each one it loosely follows the same &lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;canonical pattern&lt;/a&gt; as presented at the beginning of this section. One small difference to that pattern is that it will only call &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; on the populated content if there is a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file in its top level source directory. This allows the command to be used for dependencies that make downloaded content available at a known location but which do not need or support being added directly to the build.</source>
          <target state="translated">이 명령은 대부분의 종속성에 일반적으로 필요한 공통 패턴을 구현합니다. 각각의 명명 된 종속성을 차례로 반복하며 각각 에 대해이 섹션의 시작 부분에 제시된 것과 동일한 &lt;a href=&quot;#fetch-content-canonical-pattern&quot;&gt;표준 패턴&lt;/a&gt; 을 느슨하게 따릅니다 . 이 패턴과의 작은 차이점 은 최상위 소스 디렉토리에 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 이있는 경우 채워진 컨텐츠에서 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-3-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 만 호출한다는 것입니다 . 이를 통해 알려진 위치에서 다운로드 한 컨텐츠를 사용할 수 있지만 빌드에 직접 추가 할 필요가없는 종속성에 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81a6b87376ed545816b6066724d28af421e4c2bb" translate="yes" xml:space="preserve">
          <source>This command installs a target export file &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; for the named jar targets to the given &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; directory. Its function is similar to that of &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORTS)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령 은 지정된 jar 대상 의 대상 내보내기 파일 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 을 지정된 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 디렉토리에 설치합니다. 기능은 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORTS)&lt;/code&gt; &lt;/a&gt; 의 기능과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="e92b1d1a079d279999e46db8e77b3ff81349865f" translate="yes" xml:space="preserve">
          <source>This command installs the &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; JNI symlinks to the given &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;. It should be called in the same scope as &lt;code&gt;add_jar()&lt;/code&gt; or it will fail.</source>
          <target state="translated">이 명령은 &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; JNI 심볼릭 링크를 지정된 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 에 설치 합니다. &lt;code&gt;add_jar()&lt;/code&gt; 와 동일한 범위에서 호출되어야합니다 . 그렇지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="6a39cd8c7d5824dc228056bbac487aa318cb38be" translate="yes" xml:space="preserve">
          <source>This command installs the &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; files to the given &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;. It should be called in the same scope as &lt;code&gt;add_jar()&lt;/code&gt; or it will fail.</source>
          <target state="translated">이 명령은 &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; 파일을 지정된 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 에 설치 합니다. &lt;code&gt;add_jar()&lt;/code&gt; 와 동일한 범위에서 호출되어야합니다 . 그렇지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="9e93e75db723b1f751eb2bc894a92c738287e373" translate="yes" xml:space="preserve">
          <source>This command is automatically invoked when the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module is included, except if the &lt;code&gt;BUILD_TESTING&lt;/code&gt; option is turned off.</source>
          <target state="translated">경우이 명령은 자동으로 호출됩니다 &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈이 포함되어있는 경우를 제외하고, &lt;code&gt;BUILD_TESTING&lt;/code&gt; 의 옵션이 꺼져 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d7a9c016e81725596efb38227d34de61baccdcf" translate="yes" xml:space="preserve">
          <source>This command is dedicated to file and path manipulation requiring access to the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaa2532ecf4d75d9fa2a0a53694251af1cccf73" translate="yes" xml:space="preserve">
          <source>This command is for the manipulation of paths. Only syntactic aspects of paths are handled, there is no interaction of any kind with any underlying file system. The path may represent a non-existing path or even one that is not allowed to exist on the current file system or platform. For operations that do interact with the filesystem, see the &lt;a href=&quot;file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ec982f287fa7f04d687c939c5972aeb8985960" translate="yes" xml:space="preserve">
          <source>This command is for use in macros or functions. It processes the arguments given to that macro or function, and defines a set of variables which hold the values of the respective options.</source>
          <target state="translated">이 명령은 매크로 또는 함수에 사용됩니다. 해당 매크로 또는 함수에 주어진 인수를 처리하고 각 옵션의 값을 보유하는 변수 세트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a47bb2a9b477b2fb72b8bd941a490a5553314a22" translate="yes" xml:space="preserve">
          <source>This command is intended to install programs that are not built by cmake, such as shell scripts. See the &lt;code&gt;TARGETS&lt;/code&gt; form of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command to create installation rules for targets built by cmake.</source>
          <target state="translated">이 명령은 쉘 스크립트와 같이 cmake가 빌드하지 않은 프로그램을 설치하기위한 것입니다. cmake가 빌드 한 대상에 대한 설치 규칙을 작성 &lt;a href=&quot;install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;TARGETS&lt;/code&gt; 양식을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a3f0073db2cf7370fd6f98c2c8166d6f134fce8" translate="yes" xml:space="preserve">
          <source>This command is rarely necessary and should be avoided where there are other choices. Prefer to pass full absolute paths to libraries where possible, since this ensures the correct library will always be linked. The &lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command provides the full path, which can generally be used directly in calls to &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. Situations where a library search path may be needed include:</source>
          <target state="translated">이 명령은 거의 필요하지 않으며 다른 선택이있을 경우 피해야합니다. 올바른 라이브러리는 항상 연결되므로 가능한 경우 라이브러리에 전체 절대 경로를 전달하는 것이 좋습니다. &lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령은 일반적으로 전화에서 직접 사용할 수있는 전체 경로를 제공 &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; . 라이브러리 검색 경로가 필요할 수있는 상황은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f6d6baba93c7214417c1fbfc40f0cabac405f0d3" translate="yes" xml:space="preserve">
          <source>This command is unreliable when &lt;code&gt;&amp;lt;symbol&amp;gt;&lt;/code&gt; is (potentially) an overloaded function. Since there is no reliable way to predict whether a given function in the system environment may be defined as an overloaded function or may be an overloaded function on other systems or will become so in the future, it is generally advised to use the &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-1-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module for checking any function symbol (unless somehow you surely know the checked function is not overloaded on other systems or will not be so in the future).</source>
          <target state="translated">이 명령은 &lt;code&gt;&amp;lt;symbol&amp;gt;&lt;/code&gt; 이 (잠재적으로) 오버로드 된 함수 인 경우 신뢰할 수 없습니다 . 시스템 환경에서 주어진 함수가 오버로드 된 함수로 정의 될 수 있는지 또는 다른 시스템에서 오버로드 된 함수가 될 수 있는지 또는 앞으로 그렇게 될지를 예측할 수있는 신뢰할 수있는 방법이 없기 때문에 일반적으로 &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-1-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; &lt;/a&gt; 모듈 을 사용하는 것이 좋습니다. 모든 기능 기호 확인 (확인 된 기능이 다른 시스템에서 과부하되지 않았거나 앞으로 그렇게되지 않을 것이라는 것을 확실히 알지 않는 한).</target>
        </trans-unit>
        <trans-unit id="df56d93f17efb79a5e3a790ad2ac7ca274aa8d34" translate="yes" xml:space="preserve">
          <source>This command is used to find a directory containing the named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the file in a directory is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_path is invoked with the same variable.</source>
          <target state="translated">이 명령은 명명 된 파일이 포함 된 디렉토리를 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 작성됩니다. 디렉토리의 파일을 찾으면 결과가 변수에 저장되고 변수가 지워지지 않으면 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 가되고 다음에 같은 변수로 find_path가 호출 될 때 검색이 다시 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="98b0325600f3648c8cdc87117247cfbc7a384758" translate="yes" xml:space="preserve">
          <source>This command is used to find a directory containing the named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the file in a directory is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ced798632d8b255dcf5e8e4782d40e1ba72e93d" translate="yes" xml:space="preserve">
          <source>This command is used to find a directory containing the named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the file in a directory is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_path is invoked with the same variable.</source>
          <target state="translated">이 명령은 명명 된 파일이 포함 된 디렉토리를 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 생성됩니다. 디렉토리의 파일이 발견되면 결과가 변수에 저장되고 변수를 지우지 않는 한 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 입니다. &lt;code&gt;REQUIRED&lt;/code&gt; 아무것도 그렇지 않으면 검색이 다시 시도됩니다 다음 번 find_path이 같은 변수를 호출, 발견되지 않으면 옵션은 오류 메시지 처리를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="91414715f268f9b1a1c3931c62b9fab53f2b4e11" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a file is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_file is invoked with the same variable.</source>
          <target state="translated">이 명령은 명명 된 파일의 전체 경로를 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 작성됩니다. 파일의 전체 경로를 찾으면 결과가 변수에 저장되고 변수를 지우지 않으면 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 가되고 다음에 같은 변수로 find_file을 호출하면 검색이 다시 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="ee6e9565f34a42e9db013c88b8b66746a576f2d1" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a file is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d7e1d58121c9f62ddb327d375e61a227b4ae91" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to named file. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a file is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_file is invoked with the same variable.</source>
          <target state="translated">이 명령은 명명 된 파일의 전체 경로를 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 생성됩니다. 파일의 전체 경로가 발견되면 결과가 변수에 저장되고 변수를 지우지 않는 한 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 입니다. &lt;code&gt;REQUIRED&lt;/code&gt; 아무것도 그렇지 않으면 검색이 다시 find_file 같은 변수를 호출 다음에 시도됩니다, 발견되지 않으면 옵션은 오류 메시지 처리를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="4195cf04252e65539f143bf841330eabb45f59ff" translate="yes" xml:space="preserve">
          <source>This command is used to find a full path to the named jar. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the full path to a jar is found the result is stored in the variable and the search will not repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again next time &lt;code&gt;find_jar()&lt;/code&gt; is invoked with the same variable. The name of the full path to a file that is searched for is specified by the names listed after &lt;code&gt;NAMES&lt;/code&gt; argument. Additional search locations can be specified after the &lt;code&gt;PATHS&lt;/code&gt; argument. If you require special a version of a jar file you can specify it with the &lt;code&gt;VERSIONS&lt;/code&gt; argument. The argument after &lt;code&gt;DOC&lt;/code&gt; will be used for the documentation string in the cache.</source>
          <target state="translated">이 명령은 명명 된 jar의 전체 경로를 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 작성됩니다. jar의 전체 경로를 찾으면 결과가 변수에 저장되고 변수를 지우지 않으면 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 가되고 다음 에 같은 변수로 &lt;code&gt;find_jar()&lt;/code&gt; 가 호출 될 때 검색이 다시 시도됩니다 . 검색된 파일의 전체 경로 이름은 &lt;code&gt;NAMES&lt;/code&gt; 인수 뒤에 나열된 이름으로 지정됩니다 . 뒤에 추가 검색 위치를 지정할 수 있습니다 &lt;code&gt;PATHS&lt;/code&gt; 인수 . 특수한 버전의 jar 파일이 필요한 경우 &lt;code&gt;VERSIONS&lt;/code&gt; 로이를 지정할 수 있습니다.논의. &lt;code&gt;DOC&lt;/code&gt; 뒤의 인수 는 캐시의 문서 문자열에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dd29ba83b91a198cdd15c03a4a0fc034da5ef773" translate="yes" xml:space="preserve">
          <source>This command is used to find a library. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the library is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_library is invoked with the same variable.</source>
          <target state="translated">이 명령은 라이브러리를 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 작성됩니다. 라이브러리가 발견되면 결과가 변수에 저장되고 변수가 지워지지 않으면 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 가되고 다음에 같은 변수로 find_library를 호출하면 검색이 다시 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="84a680bf2a2d9e40444678c116f721985af4c405" translate="yes" xml:space="preserve">
          <source>This command is used to find a library. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the library is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baddd6b6cc4a5bd4f9859021b74be0e26293d45" translate="yes" xml:space="preserve">
          <source>This command is used to find a library. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the library is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_library is invoked with the same variable.</source>
          <target state="translated">이 명령은 라이브러리를 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 생성됩니다. 라이브러리가 발견되면 결과가 변수에 저장되고 변수를 지우지 않는 한 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 입니다. &lt;code&gt;REQUIRED&lt;/code&gt; 아무것도 그렇지 않으면 검색이 다시 시도됩니다 다음 번 find_library이 같은 변수를 호출, 발견되지 않으면 옵션은 오류 메시지 처리를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="ca84d051d5dcc907ddc6a744a4fbbfaea4602144" translate="yes" xml:space="preserve">
          <source>This command is used to find a program. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the program is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;, and the search will be attempted again the next time find_program is invoked with the same variable.</source>
          <target state="translated">이 명령은 프로그램을 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 작성됩니다. 프로그램을 찾으면 결과가 변수에 저장되고 변수가 지워지지 않으면 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 가됩니다. 가되고 다음에 같은 변수로 find_program이 호출 될 때 검색이 다시 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="16fefdd8cc37177f4a5ca0ac73873db9560de461" translate="yes" xml:space="preserve">
          <source>This command is used to find a program. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the program is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382415c29110119fcb0013e7aec93e162d36120e" translate="yes" xml:space="preserve">
          <source>This command is used to find a program. A cache entry named by &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; is created to store the result of this command. If the program is found the result is stored in the variable and the search will not be repeated unless the variable is cleared. If nothing is found, the result will be &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt;. The &lt;code&gt;REQUIRED&lt;/code&gt; option stops processing with an error message if nothing is found, otherwise the search will be attempted again the next time find_program is invoked with the same variable.</source>
          <target state="translated">이 명령은 프로그램을 찾는 데 사용됩니다. 이 명령의 결과를 저장하기 위해 &lt;code&gt;&amp;lt;VAR&amp;gt;&lt;/code&gt; 로 명명 된 캐시 항목 이 생성됩니다. 프로그램이 발견되면 결과가 변수에 저장되고 변수를 지우지 않는 한 검색이 반복되지 않습니다. 아무것도 발견되지 않으면 결과는 &lt;code&gt;&amp;lt;VAR&amp;gt;-NOTFOUND&lt;/code&gt; 입니다. &lt;code&gt;REQUIRED&lt;/code&gt; 아무것도 그렇지 않으면 검색이 다시 시도됩니다 다음 번 find_program이 같은 변수를 호출, 발견되지 않으면 옵션은 오류 메시지 처리를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="26950c986c0f89055a411f21e1a4edcf3cc631e0" translate="yes" xml:space="preserve">
          <source>This command must be called in file scope, not in a function call. Furthermore, it must be called in the highest directory common to all targets using the named language directly for compiling sources or indirectly through link dependencies. It is simplest to enable all needed languages in the top-level directory of a project.</source>
          <target state="translated">이 명령은 함수 호출이 아닌 파일 범위에서 호출되어야합니다. 또한 소스를 컴파일하기 위해 직접 또는 링크 종속성을 통해 간접적으로 명명 된 언어를 사용하여 모든 대상에 공통 인 최상위 디렉토리에서 호출해야합니다. 프로젝트의 최상위 디렉토리에서 필요한 모든 언어를 활성화하는 것이 가장 간단합니다.</target>
        </trans-unit>
        <trans-unit id="281de571d0642fa81daaa1d0ab96b8c6513f13c6" translate="yes" xml:space="preserve">
          <source>This command should be called after &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-0-command:cpack_add_component&quot;&gt;&lt;code&gt;cpack_add_component()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-0-command:cpack_add_component&quot;&gt; &lt;code&gt;cpack_add_component()&lt;/code&gt; &lt;/a&gt; 명령 다음에 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="359d967da72af3068d942f0cb648bf621bed0d62" translate="yes" xml:space="preserve">
          <source>This command should be called after &lt;a href=&quot;cpackcomponent#command:cpack_add_component_group&quot; id=&quot;index-0-command:cpack_add_component_group&quot;&gt;&lt;code&gt;cpack_add_component_group()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;cpackcomponent#command:cpack_add_component_group&quot; id=&quot;index-0-command:cpack_add_component_group&quot;&gt; &lt;code&gt;cpack_add_component_group()&lt;/code&gt; &lt;/a&gt; 명령 다음에 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6abbe1eaed96b0c7768f4be3d3dc1a743d9eaf35" translate="yes" xml:space="preserve">
          <source>This command should be in the source directory root because ctest expects to find a test file in the build directory root.</source>
          <target state="translated">ctest는 빌드 디렉토리 루트에서 테스트 파일을 찾을 것으로 예상하므로이 명령은 소스 디렉토리 루트에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a5049bb89f04f0cd8206d72d3515cbef9cdcb511" translate="yes" xml:space="preserve">
          <source>This command supercedes the &lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt; command and the &lt;a href=&quot;../prop_tgt/pre_install_script#prop_tgt:PRE_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:PRE_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/post_install_script#prop_tgt:POST_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:POST_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; target properties. It also replaces the &lt;code&gt;FILES&lt;/code&gt; forms of the &lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt; commands. The processing order of these install rules relative to those generated by &lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-1-command:install_targets&quot;&gt;&lt;code&gt;install_targets()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-1-command:install_files&quot;&gt;&lt;code&gt;install_files()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-1-command:install_programs&quot;&gt;&lt;code&gt;install_programs()&lt;/code&gt;&lt;/a&gt; commands is not defined.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-0-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt; 명령과 &lt;a href=&quot;../prop_tgt/pre_install_script#prop_tgt:PRE_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:PRE_INSTALL_SCRIPT&quot;&gt; &lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/post_install_script#prop_tgt:POST_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:POST_INSTALL_SCRIPT&quot;&gt; &lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt; &lt;/a&gt; 대상 특성을 대체합니다 . 또한 &lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-0-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-0-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;FILES&lt;/code&gt; 양식을 대체 합니다. &lt;a href=&quot;install_targets#command:install_targets&quot; id=&quot;index-1-command:install_targets&quot;&gt; &lt;code&gt;install_targets()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;install_files#command:install_files&quot; id=&quot;index-1-command:install_files&quot;&gt; &lt;code&gt;install_files()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;install_programs#command:install_programs&quot; id=&quot;index-1-command:install_programs&quot;&gt; &lt;code&gt;install_programs()&lt;/code&gt; &lt;/a&gt; 명령으로 생성 된 규칙과 관련된 이러한 설치 규칙의 처리 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c69f21758bcb76a631d47d5de39659d392f25b9" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_c_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt;&lt;code&gt;CheckCSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">이 명령은 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 변수를 임시로 설정 하고 &lt;a href=&quot;checkcsourcecompiles#module:CheckCSourceCompiles&quot; id=&quot;index-0-module:CheckCSourceCompiles&quot;&gt; &lt;code&gt;CheckCSourceCompiles&lt;/code&gt; &lt;/a&gt; 모듈 에서 &lt;code&gt;check_c_source_compiles&lt;/code&gt; 매크로를 호출합니다 . 그렇지 않으면 빌드를 수정할 수있는 변수 목록은 해당 모듈의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6dedff60252571e0d8e1e72cb8230a211ef80e72" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_cxx_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">이 명령은 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 변수를 임시로 설정 하고 &lt;a href=&quot;checkcxxsourcecompiles#module:CheckCXXSourceCompiles&quot; id=&quot;index-0-module:CheckCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckCXXSourceCompiles&lt;/code&gt; &lt;/a&gt; 모듈 에서 &lt;code&gt;check_cxx_source_compiles&lt;/code&gt; 매크로를 호출합니다 . 그렇지 않으면 빌드를 수정할 수있는 변수 목록은 해당 모듈의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9fde9c8531ebbc907fa18de5af70413dd69f8ac4" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_fortran_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkfortransourcecompiles#module:CheckFortranSourceCompiles&quot; id=&quot;index-0-module:CheckFortranSourceCompiles&quot;&gt;&lt;code&gt;CheckFortranSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">이 명령은 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 변수를 임시로 설정 하고 &lt;a href=&quot;checkfortransourcecompiles#module:CheckFortranSourceCompiles&quot; id=&quot;index-0-module:CheckFortranSourceCompiles&quot;&gt; &lt;code&gt;CheckFortranSourceCompiles&lt;/code&gt; &lt;/a&gt; 모듈 에서 &lt;code&gt;check_fortran_source_compiles&lt;/code&gt; 매크로를 호출합니다 . 그렇지 않으면 빌드를 수정할 수있는 변수 목록은 해당 모듈의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ce2039fcfcc25713d6c73e5118b28c71fc1944ab" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_objc_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkobjcsourcecompiles#module:CheckOBJCSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCSourceCompiles&quot;&gt;&lt;code&gt;CheckOBJCSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">이 명령은 일시적으로 설정 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 의 변수와 호출 &lt;code&gt;check_objc_source_compiles&lt;/code&gt; 로부터 매크로 &lt;a href=&quot;checkobjcsourcecompiles#module:CheckOBJCSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCSourceCompiles&quot;&gt; &lt;code&gt;CheckOBJCSourceCompiles&lt;/code&gt; 의&lt;/a&gt; 모듈을. 빌드를 수정할 수있는 변수 목록은 해당 모듈의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="24f52004fdbc6a958217e85e89ff0b8d54851b78" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_objcxx_source_compiles&lt;/code&gt; macro from the &lt;a href=&quot;checkobjcxxsourcecompiles#module:CheckOBJCXXSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCXXSourceCompiles&quot;&gt;&lt;code&gt;CheckOBJCXXSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">이 명령은 일시적으로 설정 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 의 변수와 호출 &lt;code&gt;check_objcxx_source_compiles&lt;/code&gt; 로부터 매크로 &lt;a href=&quot;checkobjcxxsourcecompiles#module:CheckOBJCXXSourceCompiles&quot; id=&quot;index-0-module:CheckOBJCXXSourceCompiles&quot;&gt; &lt;code&gt;CheckOBJCXXSourceCompiles&lt;/code&gt; 의&lt;/a&gt; 모듈을. 빌드를 수정할 수있는 변수 목록은 해당 모듈의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dceaae5eed7534e1fac03dda6dd7cf084cee333d" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; variable and calls the &lt;code&gt;check_source_compiles(&amp;lt;LANG&amp;gt;)&lt;/code&gt; function from the &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt;&lt;code&gt;CheckSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See documentation of that module for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">이 명령은 일시적으로 &lt;code&gt;CMAKE_REQUIRED_DEFINITIONS&lt;/code&gt; 변수를 설정 하고 &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt; &lt;code&gt;CheckSourceCompiles&lt;/code&gt; &lt;/a&gt; 모듈 에서 &lt;code&gt;check_source_compiles(&amp;lt;LANG&amp;gt;)&lt;/code&gt; 함수를 호출 합니다. 빌드를 수정할 수있는 변수 목록은 해당 모듈의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e3180fc68236b6f02998cbb8c5db87e44b210e9b" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_LINK_OPTIONS&lt;/code&gt; variable and calls the &lt;a href=&quot;checksourcecompiles#command:check_source_compiles&quot; id=&quot;index-0-command:check_source_compiles&quot;&gt;&lt;code&gt;check_source_compiles()&lt;/code&gt;&lt;/a&gt; command from the &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt;&lt;code&gt;CheckSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See that module&amp;rsquo;s documentation for a listing of variables that can otherwise modify the build.</source>
          <target state="translated">이 명령은 일시적으로 &lt;code&gt;CMAKE_REQUIRED_LINK_OPTIONS&lt;/code&gt; 변수를 설정 하고 &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt; &lt;code&gt;CheckSourceCompiles&lt;/code&gt; &lt;/a&gt; 모듈 에서 &lt;a href=&quot;checksourcecompiles#command:check_source_compiles&quot; id=&quot;index-0-command:check_source_compiles&quot;&gt; &lt;code&gt;check_source_compiles()&lt;/code&gt; &lt;/a&gt; 명령을 호출합니다 . 빌드를 수정할 수있는 변수 목록은 해당 모듈의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d32a45ed3cbc4ae8f3cf882146da3f0fa639403f" translate="yes" xml:space="preserve">
          <source>This command temporarily sets the &lt;code&gt;CMAKE_REQUIRED_LINK_OPTIONS&lt;/code&gt; variable and calls the &lt;a href=&quot;checksourcecompiles#command:check_source_compiles&quot; id=&quot;index-0-command:check_source_compiles&quot;&gt;&lt;code&gt;check_source_compiles()&lt;/code&gt;&lt;/a&gt; command from the &lt;a href=&quot;checksourcecompiles#module:CheckSourceCompiles&quot; id=&quot;index-0-module:CheckSourceCompiles&quot;&gt;&lt;code&gt;CheckSourceCompiles&lt;/code&gt;&lt;/a&gt; module. See that module's documentation for a listing of variables that can otherwise modify the build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d775becfbb2283d1e19dcf6bda8e254f3f5e7569" translate="yes" xml:space="preserve">
          <source>This command was added in August 2002 to allow projects to add arbitrary commands implemented in C or C++. However, it does not work when the toolchain in use does not match the ABI of the CMake process. It has been mostly superseded by the &lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">이 명령은 프로젝트가 C 또는 C ++로 구현 된 임의의 명령을 추가 할 수 있도록 2002 년 8 월에 추가되었습니다. 그러나 사용중인 툴체인이 CMake 프로세스의 ABI와 일치하지 않으면 작동하지 않습니다. 주로 &lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 명령으로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c79d90e7de3318c4820b877ccfabbf957f5cb702" translate="yes" xml:space="preserve">
          <source>This command was added in January 2003 to export &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; internal CMake cache entries to a file for installation with a project. This was used at the time to allow transitive link dependencies to work for applications outside of the original build tree of a project. The functionality has been superseded by the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">이 명령은 2003 년 1 월에 추가되어 &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; 내부 CMake 캐시 항목을 프로젝트로 설치하기위한 파일로 내보냈습니다 . 이것은 전 이적 링크 종속성이 프로젝트의 원래 빌드 트리 외부의 응용 프로그램에서 작동하도록하기 위해 사용되었습니다. 기능은 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령 으로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3a8701804b90fe370f646663af51b2fa19b314be" translate="yes" xml:space="preserve">
          <source>This command was added in June 2001 to expose the then-current CMake implicit dependency scanner. CMake&amp;rsquo;s real implicit dependency scanner has evolved since then but is not exposed through this command. The scanning capabilities of this command are very limited and this functionality is better achieved through dedicated outside tools.</source>
          <target state="translated">이 명령은 2001 년 6 월에 추가되어 당시의 CMake 암시 적 종속성 스캐너를 노출시킵니다. CMake의 실제 암시 적 종속성 스캐너는 그 이후로 발전했지만이 명령을 통해 노출되지 않습니다. 이 명령의 스캔 기능은 매우 제한되어 있으며이 기능은 전용 외부 도구를 통해 더 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6ee8d7f171ce08d752f50d8f8b8ee060f44fa7b7" translate="yes" xml:space="preserve">
          <source>This command was added in June 2001 to expose the then-current CMake implicit dependency scanner. CMake's real implicit dependency scanner has evolved since then but is not exposed through this command. The scanning capabilities of this command are very limited and this functionality is better achieved through dedicated outside tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bef46593472a96c6ccd386977c1a5f7cb50994c" translate="yes" xml:space="preserve">
          <source>This command was added in May 2001 to compute a name for the current operating system and compiler combination. The command has long been documented as discouraged and replaced by the &lt;a href=&quot;../variable/cmake_system#variable:CMAKE_SYSTEM&quot; id=&quot;index-0-variable:CMAKE_SYSTEM&quot;&gt;&lt;code&gt;CMAKE_SYSTEM&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; variables.</source>
          <target state="translated">이 명령은 2001 년 5 월에 추가되어 현재 운영 체제 및 컴파일러 조합의 이름을 계산합니다. 이 명령은 오랫동안 권장하지 않으며 &lt;a href=&quot;../variable/cmake_system#variable:CMAKE_SYSTEM&quot; id=&quot;index-0-variable:CMAKE_SYSTEM&quot;&gt; &lt;code&gt;CMAKE_SYSTEM&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; 변수 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="57e10248084b3f014419600134079d0362bb54e0" translate="yes" xml:space="preserve">
          <source>This command was created in September 2001 to support VTK before modern CMake language and custom command capabilities. VTK has not used it in years.</source>
          <target state="translated">이 명령은 최신 CMake 언어 및 사용자 지정 명령 기능 이전에 VTK를 지원하기 위해 2001 년 9 월에 작성되었습니다. VTK는 몇 년 동안 사용하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="54328122fbe95e31bc689737dd580b37a9c3392c" translate="yes" xml:space="preserve">
          <source>This command was introduced in March 2001 to help build executables used to generate other files. This approach has long been replaced by &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; combined with &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 2001 년 3 월에 도입되어 다른 파일을 생성하는 데 사용되는 실행 파일을 빌드하는 데 도움을줍니다. 이러한 접근 방식은 오랫동안로 대체되었습니다 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 와 함께 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="312314642a433dcba232f77d3eeeefbeec359d03" translate="yes" xml:space="preserve">
          <source>This command was introduced in November 2001 to perform some conditional logic. It has long been replaced by the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 명령은 일부 조건부 논리를 수행하기 위해 2001 년 11 월에 도입되었습니다. 오랫동안 &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 명령 으로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c31a46d7976726351cb99cb9750ade2469810807" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 또한 &amp;lt;reponame&amp;gt; 저장소를 변수 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 에&lt;/a&gt; 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9999e9f9257a0f6f96ef4384ad3ad1b372d8979b" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 또한 &amp;lt;reponame&amp;gt; 저장소를 변수 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 에&lt;/a&gt; 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="285ac14c956c941ae31a9879fba25d0022dc4edb" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 또한 &amp;lt;reponame&amp;gt; 저장소를 변수 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 에&lt;/a&gt; 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="d0b3ee48f82c91d658ef8fd21f871f252857bd9f" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 또한 &amp;lt;reponame&amp;gt; 저장소를 변수 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt; &lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt; 에&lt;/a&gt; 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="757ab5950d8420449bb396609b67a36a51ce43ca" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-0-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0878836584b0aca14232bfd9d746d1644c32f3f6" translate="yes" xml:space="preserve">
          <source>This command will also add the &amp;lt;reponame&amp;gt; repository to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#variable:CPACK_IFW_REPOSITORIES_ALL&quot; id=&quot;index-1-variable:CPACK_IFW_REPOSITORIES_ALL&quot;&gt;&lt;code&gt;CPACK_IFW_REPOSITORIES_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfaf22378f700e2fbd40d3d4be0542716bb1757" translate="yes" xml:space="preserve">
          <source>This command will also add the specified files to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt;&lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 지정된 파일을 변수 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt; &lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt; 에&lt;/a&gt; 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="106605c5b8968072de3fc21bfd5802eb4a3a6d00" translate="yes" xml:space="preserve">
          <source>This command will also add the specified files to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt;&lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 명령은 또한 지정된 파일을 변수 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt; &lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt; 에&lt;/a&gt; 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5e3b2764b9d93999b798b0a92bff50fff6eaa92a" translate="yes" xml:space="preserve">
          <source>This command will also add the specified files to a variable &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/cpack_gen/ifw.html#variable:CPACK_IFW_PACKAGE_RESOURCES&quot; id=&quot;index-0-variable:CPACK_IFW_PACKAGE_RESOURCES&quot;&gt;&lt;code&gt;CPACK_IFW_PACKAGE_RESOURCES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92505a7bb2d004b7410696dcb2cd10a746bdb32c" translate="yes" xml:space="preserve">
          <source>This command will call meta-operations on built-in CMake commands or those created via the &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">이 명령은 내장 CMake 명령 또는 &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 명령을 통해 생성 된 메타 작업을 호출 합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
