<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="2e9112d1ae2306c676340cdf2244d5e24b7becff" translate="yes" xml:space="preserve">
          <source>$OPENTHREADS_DIR is an environment variable that would correspond to the ./configure &amp;ndash;prefix=$OPENTHREADS_DIR used in building osg.</source>
          <target state="translated">$ OPENTHREADS_DIR은 osg 빌드에 사용 된 ./configure &amp;ndash;prefix = $ OPENTHREADS_DIR에 해당하는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="b2b95ed7f79d3660c0200871fe254abda813c68c" translate="yes" xml:space="preserve">
          <source>$OSGDIR is an environment variable that would correspond to the ./configure &amp;ndash;prefix=$OSGDIR used in building osg.</source>
          <target state="translated">$ OSGDIR은 osg 빌드에 사용 된 ./configure &amp;ndash;prefix = $ OSGDIR에 해당하는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="c334b2010802a534ab7ac5be0c969bad78add640" translate="yes" xml:space="preserve">
          <source>$PHYSFSDIR is an environment variable that would correspond to the ./configure &amp;ndash;prefix=$PHYSFSDIR used in building PHYSFS.</source>
          <target state="translated">$ PHYSFSDIR은 PHYSFS 빌드에 사용 된 ./configure &amp;ndash;prefix = $ PHYSFSDIR에 해당하는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="530a7bc4194d659856f3156a4f3c0e0d6839db4a" translate="yes" xml:space="preserve">
          <source>$PRODUCER_DIR is an environment variable that would correspond to the ./configure &amp;ndash;prefix=$PRODUCER_DIR used in building osg.</source>
          <target state="translated">$ PRODUCER_DIR은 osg 빌드에 사용 된 ./configure &amp;ndash;prefix = $ PRODUCER_DIR에 해당하는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="44bb798894aa28254fb74cb5370af5c19a40688c" translate="yes" xml:space="preserve">
          <source>$QUICKTIME_DIR is an environment variable that would correspond to the ./configure &amp;ndash;prefix=$QUICKTIME_DIR</source>
          <target state="translated">$ QUICKTIME_DIR은 ./configure &amp;ndash;prefix = $ QUICKTIME_DIR에 해당하는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="0421edc692d937a38788397ba5da155e54304c0a" translate="yes" xml:space="preserve">
          <source>$SDLDIR is an environment variable that would correspond to the ./configure &amp;ndash;prefix=$SDLDIR used in building SDL.</source>
          <target state="translated">$ SDLDIR은 SDL 작성에 사용되는 ./configure &amp;ndash;prefix = $ SDLDIR에 해당하는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="6dfbeade8b97dea9cd66fd084bd871dd10b45491" translate="yes" xml:space="preserve">
          <source>$SDLDIR is an environment variable that would correspond to the ./configure &amp;ndash;prefix=$SDLDIR used in building SDL. l.e.galup 9-20-02</source>
          <target state="translated">$ SDLDIR은 SDL 작성에 사용되는 ./configure &amp;ndash;prefix = $ SDLDIR에 해당하는 환경 변수입니다. legalup 9-20-02</target>
        </trans-unit>
        <trans-unit id="33528a1eb0266f8ea6e1f6fd8c5ef0dd02dc6d49" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2000&amp;ndash;2019 Kitware, Inc. and Contributors</source>
          <target state="translated">&amp;copy; 2000&amp;ndash;2019 Kitware, Inc. 및 기고자</target>
        </trans-unit>
        <trans-unit id="bcfd217302397213553d67d1e0eda69463434be7" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2000&amp;ndash;2020 Kitware, Inc. and Contributors</source>
          <target state="translated">&amp;copy; 2000&amp;ndash;2020 Kitware, Inc. 및 기여자</target>
        </trans-unit>
        <trans-unit id="cb7da423a4ee04f92c042a9281ee9d7afabc6c2b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;True&amp;rdquo; if &lt;code&gt;curl&lt;/code&gt; found.</source>
          <target state="translated">&lt;code&gt;curl&lt;/code&gt; 발견 되면 &quot;참&quot; .</target>
        </trans-unit>
        <trans-unit id="dd00a45b6713291b670dae50fe7130b371b61b71" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;True&amp;rdquo; if the program was found</source>
          <target state="translated">프로그램이 발견되면&amp;ldquo;참&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ce5e8a19bbcc134be09895e0fd419859e3ec8b96" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;artifacts&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;artifacts&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="95ec3ccca6c1daba3fa9615ddcbc6648e5bfa627" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;buildDirectory&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;buildDirectory&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="f89b6a3e3c5f47fd84275f439cfe2c718ff5abef" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;buildDirectory&amp;rdquo; with a path to the build directory</source>
          <target state="translated">빌드 디렉토리 경로가있는 &quot;buildDirectory&quot;</target>
        </trans-unit>
        <trans-unit id="ff9b9f7f28044a62a8ea49bc6f9fa6791b73211c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;cache&amp;rdquo; version 2</source>
          <target state="translated">&amp;ldquo;캐시&amp;rdquo;버전 2</target>
        </trans-unit>
        <trans-unit id="e9be702b8de44b13ef35d643e222b476e9ee2cf4" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;cmakeFiles&amp;rdquo; version 1</source>
          <target state="translated">&amp;ldquo;cmakeFiles&amp;rdquo;버전 1</target>
        </trans-unit>
        <trans-unit id="14cd17c607cc141dc00bb167591b5a3296c496bf" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;codemodel&amp;rdquo; version 2</source>
          <target state="translated">&amp;ldquo;codemodel&amp;rdquo;버전 2</target>
        </trans-unit>
        <trans-unit id="6ec8f3ea227643d41a33f36dcea1c39074d94efd" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;codemodel&amp;rdquo; version 2 &amp;ldquo;target&amp;rdquo; object</source>
          <target state="translated">&amp;ldquo;codemodel&amp;rdquo;버전 2&amp;ldquo;target&amp;rdquo;객체</target>
        </trans-unit>
        <trans-unit id="09df809479c44db285f75089ccc4d34efe4c108d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;compileFlags&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;compileFlags&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2ceeab4c8070d9a25ec25ae9195468f5060f73b4" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;ctestCommand&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;ctestCommand&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="57788e8a1440bb0445385866eb20a73700447c60" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;ctestInfo&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;ctestInfo&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="8c40a0e7a2c308727898bcec47b8432c2535c779" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;ctestName&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;ctestName&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="eed1a0c2f589dd4a605cc70d158d429b73024ae3" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;defines&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;defines&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a9058727ffbbf66ff01c56c1c7c9a6671fc9a4ac" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;digraph&amp;rdquo; : Nodes are joined with arrows showing direction</source>
          <target state="translated">&quot;digraph&quot;: 노드가 방향을 나타내는 화살표와 결합됩니다</target>
        </trans-unit>
        <trans-unit id="40c32a3a5cb3f6dfa07eaf29e0a5472b417a3acd" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;dirty&amp;rdquo; Signal</source>
          <target state="translated">&quot;더러운&quot;신호</target>
        </trans-unit>
        <trans-unit id="3de78751272bc117b5d401e40e0dbe6c8d5e577b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;extraGenerator&amp;rdquo; (optional!) with the extra generator to be used</source>
          <target state="translated">사용할 여분의 발전기가있는&amp;ldquo;extraGenerator&amp;rdquo;(옵션!)</target>
        </trans-unit>
        <trans-unit id="8eda62ca61fba7307e5b131eedeb146dc14fb100" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fileChange&amp;rdquo; Signal</source>
          <target state="translated">&quot;fileChange&quot;신호</target>
        </trans-unit>
        <trans-unit id="975bed3cc8e7b5b92022757cdb45cdb99afdc120" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fileGroups&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;fileGroups&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b3aa169fe792ae1d7c3e608aed514608f8c331f5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;frameworkPath&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;frameworkPath&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="fd806cb907bec6b983fcb11c05ad9fbb088e2226" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;fullName&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;fullName&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b2e90117cffffb53b8403564e1629652d0105165" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;generator&amp;rdquo; with the generator name</source>
          <target state="translated">생성기 이름이있는 &quot;생성기&quot;</target>
        </trans-unit>
        <trans-unit id="ddf3f345ed5bef07ade51fbfab55ba07a9ee7071" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;graph&amp;rdquo; : Nodes are joined with lines</source>
          <target state="translated">&amp;ldquo;graph&amp;rdquo;: 노드가 선으로 연결됩니다</target>
        </trans-unit>
        <trans-unit id="346b974cc92cedf9a31f9d7702ede00169b85b07" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;hasInstallRule&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;hasInstallRule&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d8e915618c4d8651b0effc8652a8b88daa2ef1d3" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;includePath&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;includePath&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="27e30291f13c2ba6c5ea6b3a49a716ed9666f7bd" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;installPaths&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;installPaths&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d0ea20485a557da303130a0a7648561378cfdfdf" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;isGeneratorProvided&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;isGeneratorProvided&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="10fbb6fefee831ed906b2468266617874da3c20e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;key&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;key&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ac3dce29d7b13ebbd7e37255954e4a338b68a216" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;language&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;language&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="e35ced24fd8ff265c16d68a611243db228431d67" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;linkFlags&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;linkFlags&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="02653ee9e5d94b21d9e48a53135dff74944295a3" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;linkLanguageFlags&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;linkLanguageFlags&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ad637b90d11acefdf7708f12fe63e0be6097156b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;linkLibraries&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;linkLibraries&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="809244cc5d52423859001f438250122e02d1ae70" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;linkPath&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;linkPath&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="fb01635dd1c28554d35fa47f96c02feda5bfdd90" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;linkerLanguage&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;linkerLanguage&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ede6e8ec4154cb78a6199d9fcf76bf698010ffc7" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;minimumCMakeVersion&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;minimumCMakeVersion&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="562e7698e8c29de01baca4057a73c633fd734ebd" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;name&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;name&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="00f1345853015c5697a1060314af8be5e6638a80" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;platform&amp;rdquo; with the generator platform (if supported by the generator)</source>
          <target state="translated">생성기 플랫폼의 &quot;플랫폼&quot;(생성기에서 지원하는 경우)</target>
        </trans-unit>
        <trans-unit id="a090fe2a8be4caf45e2ed5662a4cc0b52136449f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;progress&amp;rdquo; messages may not be emitted after the &amp;ldquo;reply&amp;rdquo; or &amp;ldquo;error&amp;rdquo; message for the request that triggered the responses was delivered.</source>
          <target state="translated">응답을 트리거 한 요청에 대한 &quot;응답&quot;또는 &quot;오류&quot;메시지가 전달 된 후 &quot;진행&quot;메시지가 생성되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="136e24918e1252f9cb4ec0d7ed5f6bc282593bdc" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;projects&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;projects&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="dd9523b7b14dbab9288369869443520a75111549" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;properties&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;properties&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="42d427065c80a781342d3923e69dc3ba5577677b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;sourceDirectory&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;sourceDirectory&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="190cbfd5d3e0d5e6147306141ccbafae1dfe7389" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;sourceDirectory&amp;rdquo; with a path to the sources</source>
          <target state="translated">소스 경로가있는&amp;ldquo;sourceDirectory&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a3f26fd0c1f146d8881e9b3cc31d66ec91fa6bf6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;sources&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;sources&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6c65e438d9c3abb7b47b77e6f0a1a94acb70d51b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;strict digraph&amp;rdquo; : Like &amp;ldquo;graph&amp;rdquo; but max one line between each node in each direction</source>
          <target state="translated">&amp;ldquo;엄격한 그래프&amp;rdquo;:&amp;ldquo;그래프&amp;rdquo;와 비슷하지만 각 방향에서 각 노드 사이에 최대 한 줄</target>
        </trans-unit>
        <trans-unit id="0af907cc641818439988e9f1bf621ab7445147b7" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;strict graph&amp;rdquo; : Like &amp;ldquo;graph&amp;rdquo; but max one line between each node</source>
          <target state="translated">&amp;ldquo;엄격한 그래프&amp;rdquo;:&amp;ldquo;graph&amp;rdquo;와 비슷하지만 각 노드 사이에 최대 한 줄</target>
        </trans-unit>
        <trans-unit id="3f3614f955b7c4003151a1edeeb0ce980675db6d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;sysroot&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;sysroot&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="17dd3b9544a1f481dedd04ee676f08c2c051385f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;targets&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;targets&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="663ccff5320b67c0ac1ff39dc357ea3611ccfa21" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;toolset&amp;rdquo; with the generator toolset (if supported by the generator)</source>
          <target state="translated">생성기 도구 세트가있는 &quot;도구 세트&quot;(생성기에서 지원하는 경우)</target>
        </trans-unit>
        <trans-unit id="efacbc5df459c831101c2390fcb9bb01f4b522f1" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;type&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;type&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="e4c82893328f8aabd0e0c7ce1a22ed4f1291217a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;value&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;value&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="927efc5cfb4ca03a605a657a7e05432f5e3c1864" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_implib#prop_tgt:IMPORTED_IMPLIB&quot; id=&quot;index-0-prop_tgt:IMPORTED_IMPLIB&quot;&gt;&lt;code&gt;IMPORTED_IMPLIB&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;imported_implib#prop_tgt:IMPORTED_IMPLIB&quot; id=&quot;index-0-prop_tgt:IMPORTED_IMPLIB&quot;&gt; &lt;code&gt;IMPORTED_IMPLIB&lt;/code&gt; &lt;/a&gt; 특성 의 &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="0d8dfe105146e0e1d06c6134e22e05865d53c730" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_libname#prop_tgt:IMPORTED_LIBNAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_LIBNAME&quot;&gt;&lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;imported_libname#prop_tgt:IMPORTED_LIBNAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_LIBNAME&quot;&gt; &lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; &lt;/a&gt; 속성 의 &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="d911c97752d56f892f81635018d7ebb43f1c4ef5" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_link_dependent_libraries#prop_tgt:IMPORTED_LINK_DEPENDENT_LIBRARIES&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_DEPENDENT_LIBRARIES&quot;&gt;&lt;code&gt;IMPORTED_LINK_DEPENDENT_LIBRARIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;imported_link_dependent_libraries#prop_tgt:IMPORTED_LINK_DEPENDENT_LIBRARIES&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_DEPENDENT_LIBRARIES&quot;&gt; &lt;code&gt;IMPORTED_LINK_DEPENDENT_LIBRARIES&lt;/code&gt; 의&lt;/a&gt; &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="030e98d312d455e3edaa4d27cfcede2b095224bc" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_link_interface_languages#prop_tgt:IMPORTED_LINK_INTERFACE_LANGUAGES&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_INTERFACE_LANGUAGES&quot;&gt;&lt;code&gt;IMPORTED_LINK_INTERFACE_LANGUAGES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;imported_link_interface_languages#prop_tgt:IMPORTED_LINK_INTERFACE_LANGUAGES&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_INTERFACE_LANGUAGES&quot;&gt; &lt;code&gt;IMPORTED_LINK_INTERFACE_LANGUAGES&lt;/code&gt; 의&lt;/a&gt; &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="049ec1fb0fc0f7c63c72cb60c525282ec0fe6fbc" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_link_interface_libraries#prop_tgt:IMPORTED_LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;IMPORTED_LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;imported_link_interface_libraries#prop_tgt:IMPORTED_LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;IMPORTED_LINK_INTERFACE_LIBRARIES&lt;/code&gt; 의&lt;/a&gt; &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="44522421f1ed58ec4c36f41c01163db20254742b" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_link_interface_multiplicity#prop_tgt:IMPORTED_LINK_INTERFACE_MULTIPLICITY&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_INTERFACE_MULTIPLICITY&quot;&gt;&lt;code&gt;IMPORTED_LINK_INTERFACE_MULTIPLICITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;imported_link_interface_multiplicity#prop_tgt:IMPORTED_LINK_INTERFACE_MULTIPLICITY&quot; id=&quot;index-0-prop_tgt:IMPORTED_LINK_INTERFACE_MULTIPLICITY&quot;&gt; &lt;code&gt;IMPORTED_LINK_INTERFACE_MULTIPLICITY&lt;/code&gt; 의&lt;/a&gt; &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="fdd498bbdf244368b340f88667c7fa372ad6129a" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt; 속성 의 &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="139ba659dc8e5bced972d99e595b61bbec310945" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_no_soname#prop_tgt:IMPORTED_NO_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_NO_SONAME&quot;&gt;&lt;code&gt;IMPORTED_NO_SONAME&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;imported_no_soname#prop_tgt:IMPORTED_NO_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_NO_SONAME&quot;&gt; &lt;code&gt;IMPORTED_NO_SONAME&lt;/code&gt; &lt;/a&gt; 속성 의 &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="512152948659967f7cd1d99fa6de7e8a58a60728" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_objects#prop_tgt:IMPORTED_OBJECTS&quot; id=&quot;index-0-prop_tgt:IMPORTED_OBJECTS&quot;&gt;&lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;imported_objects#prop_tgt:IMPORTED_OBJECTS&quot; id=&quot;index-0-prop_tgt:IMPORTED_OBJECTS&quot;&gt; &lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt; &lt;/a&gt; 속성 의 &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="ae63ef547dd6f92d015b590df6ffde7f59f7a9ee" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;-specific version of &lt;a href=&quot;imported_soname#prop_tgt:IMPORTED_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_SONAME&quot;&gt;&lt;code&gt;IMPORTED_SONAME&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;imported_soname#prop_tgt:IMPORTED_SONAME&quot; id=&quot;index-0-prop_tgt:IMPORTED_SONAME&quot;&gt; &lt;code&gt;IMPORTED_SONAME&lt;/code&gt; &lt;/a&gt; 속성 의 &amp;lt;CONFIG&amp;gt; 특정 버전 .</target>
        </trans-unit>
        <trans-unit id="d46e7cd327df6521df63b202e6f1e73c9a37fbd6" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;_OUTPUT_NAME</source>
          <target state="translated">&amp;lt;CONFIG&amp;gt;_OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="d48b8855e0cc53c416d697c17de7801bc9d35bb7" translate="yes" xml:space="preserve">
          <source>&amp;lt;CONFIG&amp;gt;_POSTFIX</source>
          <target state="translated">&amp;lt;CONFIG&amp;gt;_POSTFIX</target>
        </trans-unit>
        <trans-unit id="8906e36948e02b1996164d5c9a54371a640db616" translate="yes" xml:space="preserve">
          <source>&amp;lt;LANG&amp;gt;_CLANG_TIDY</source>
          <target state="translated">&amp;lt;LANG&amp;gt;_CLANG_TIDY</target>
        </trans-unit>
        <trans-unit id="75ce92b1b032160acecf50186c5c38be026bdc16" translate="yes" xml:space="preserve">
          <source>&amp;lt;LANG&amp;gt;_COMPILER_LAUNCHER</source>
          <target state="translated">&amp;lt;LANG&amp;gt;_COMPILER_LAUNCHER</target>
        </trans-unit>
        <trans-unit id="6fbf232531b450cc0de1af242cc9429072ce0d57" translate="yes" xml:space="preserve">
          <source>&amp;lt;LANG&amp;gt;_CPPCHECK</source>
          <target state="translated">&amp;lt;LANG&amp;gt;_CPPCHECK</target>
        </trans-unit>
        <trans-unit id="7ea0434c39672e4201b62a20dba77f7d7b7013a2" translate="yes" xml:space="preserve">
          <source>&amp;lt;LANG&amp;gt;_CPPLINT</source>
          <target state="translated">&amp;lt;LANG&amp;gt;_CPPLINT</target>
        </trans-unit>
        <trans-unit id="2c042949d833df7e9ae2fffb97f62bcf36a9fbd8" translate="yes" xml:space="preserve">
          <source>&amp;lt;LANG&amp;gt;_INCLUDE_WHAT_YOU_USE</source>
          <target state="translated">&amp;lt;LANG&amp;gt;_INCLUDE_WHAT_YOU_USE</target>
        </trans-unit>
        <trans-unit id="9caac587baf587fd560ac46658c78a4caaaf4069" translate="yes" xml:space="preserve">
          <source>&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET</source>
          <target state="translated">&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET</target>
        </trans-unit>
        <trans-unit id="8652b477a6522725c7cb1c61122721a19cbba419" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_BINARY_DIR</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="fb371f065815d9f7dffdde92adb72817d7b66458" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_DESCRIPTION</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="f10de6098bd8d0f94b979e1e61a226f67083fc01" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_HOMEPAGE_URL</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_HOMEPAGE_URL</target>
        </trans-unit>
        <trans-unit id="31bc9dd1c906cc9eea187d2a1ab2f30bbcd77b7a" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_SOURCE_DIR</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="bd6a2c395b8728f14f1c81b884762fb64eff39d3" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_VERSION</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_VERSION</target>
        </trans-unit>
        <trans-unit id="ac5132267fcb9b262341eae39d9f011eda19c40b" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MAJOR</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MAJOR</target>
        </trans-unit>
        <trans-unit id="49799b65df7dd716641be106a2118ce9d725b74c" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MINOR</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MINOR</target>
        </trans-unit>
        <trans-unit id="133166fa8879b35fc9c879cf1d356913d009cef2" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_VERSION_PATCH</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="ba9ac45ec2701327247c80489e805eb459807ba9" translate="yes" xml:space="preserve">
          <source>&amp;lt;PROJECT-NAME&amp;gt;_VERSION_TWEAK</source>
          <target state="translated">&amp;lt;PROJECT-NAME&amp;gt;_VERSION_TWEAK</target>
        </trans-unit>
        <trans-unit id="77c7e3fe3261d5a25fa7571e5d0f08943d05c69d" translate="yes" xml:space="preserve">
          <source>&amp;lt;PackageName&amp;gt;_ROOT</source>
          <target state="translated">&amp;lt;PackageName&amp;gt;_ROOT</target>
        </trans-unit>
        <trans-unit id="da1a1572a50ba06495b51397e5720c6b734cd2b1" translate="yes" xml:space="preserve">
          <source>&amp;lt;dirs&amp;gt; will be passed to BundleUtilities and should contain and directories to be searched to find library dependencies.</source>
          <target state="translated">&amp;lt;dirs&amp;gt;는 BundleUtilities로 전달되며 라이브러리 종속성을 찾기 위해 검색 할 디렉토리와 디렉토리를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="dab3de1470a2b132e7f3ec65e17d57c32a7765e6" translate="yes" xml:space="preserve">
          <source>&amp;lt;executable&amp;gt; should point to the executable to be fixed-up.</source>
          <target state="translated">&amp;lt;실행 파일&amp;gt;은 수정 될 실행 파일을 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="4e64f3c00085d3e9af2a5a8fae2a900c8873dc4b" translate="yes" xml:space="preserve">
          <source>&amp;lt;libs&amp;gt; will be passed to BundleUtilities and should be a list of any already installed plugins, libraries or executables to also be fixed-up.</source>
          <target state="translated">&amp;lt;libs&amp;gt;는 BundleUtilities로 전달되며 이미 설치된 플러그인, 라이브러리 또는 실행 파일도 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="77b8517c386d92fff752dda60635aa805dd99655" translate="yes" xml:space="preserve">
          <source>&amp;lt;plugins_dir&amp;gt; allows an custom plugins directory to be used.</source>
          <target state="translated">&amp;lt;plugins_dir&amp;gt;을 사용하면 사용자 정의 플러그인 디렉토리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81480b948f832ed667bd849a9b0275e15e6aa01b" translate="yes" xml:space="preserve">
          <source>&amp;lt;qtplugins&amp;gt; should contain a list of the names or paths of any Qt plugins to be installed.</source>
          <target state="translated">&amp;lt;qtplugins&amp;gt;는 설치할 Qt 플러그인의 이름 또는 경로 목록을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="cee8cab7e60e8e25783ac7676ff19a15b16f8d10" translate="yes" xml:space="preserve">
          <source>&amp;lt;request_qt_conf&amp;gt; will force a qt.conf file to be written even if not needed.</source>
          <target state="translated">&amp;lt;request_qt_conf&amp;gt;는 필요하지 않더라도 qt.conf 파일을 강제로 작성합니다.</target>
        </trans-unit>
        <trans-unit id="8f0c4df2e54de0aadf07a31aae352a94c699697d" translate="yes" xml:space="preserve">
          <source>&amp;lt;target&amp;gt; is the full path to an executable file. &amp;lt;prerequisites_var&amp;gt; is the name of a CMake variable to contain the results. &amp;lt;exclude_system&amp;gt; must be 0 or 1 indicating whether to include or exclude &amp;ldquo;system&amp;rdquo; prerequisites. If &amp;lt;recurse&amp;gt; is set to 1 all prerequisites will be found recursively, if set to 0 only direct prerequisites are listed. &amp;lt;exepath&amp;gt; is the path to the top level executable used for @executable_path replacement on the Mac. &amp;lt;dirs&amp;gt; is a list of paths where libraries might be found: these paths are searched first when a target without any path info is given. Then standard system locations are also searched: PATH, Framework locations, /usr/lib&amp;hellip;</source>
          <target state="translated">&amp;lt;target&amp;gt;은 실행 파일의 전체 경로입니다. &amp;lt;prerequisites_var&amp;gt;는 결과를 포함 할 CMake 변수의 이름입니다. &amp;lt;exclude_system&amp;gt;은 &quot;시스템&quot;전제 조건을 포함할지 제외할지 여부를 나타내는 0 또는 1이어야합니다. &amp;lt;recurse&amp;gt;가 1로 설정되면 모든 필수 구성 요소가 반복적으로 검색되고 0으로 설정되면 직접 필수 구성 요소 만 나열됩니다. &amp;lt;exepath&amp;gt;는 Mac에서 @executable_path 대체에 사용되는 최상위 실행 파일의 경로입니다. &amp;lt;dirs&amp;gt;는 라이브러리를 찾을 수있는 경로 목록입니다. 이러한 경로는 경로 정보가없는 대상이 제공 될 때 먼저 검색됩니다. 그런 다음 표준 시스템 위치도 검색됩니다 : PATH, Framework 위치, / usr / lib&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="96a0a5cd480449b7638fc02b9addecb1f0a0acf3" translate="yes" xml:space="preserve">
          <source>&amp;lt;target&amp;gt; is the full path to an executable file. &amp;lt;prerequisites_var&amp;gt; is the name of a CMake variable to contain the results. &amp;lt;exclude_system&amp;gt; must be 0 or 1 indicating whether to include or exclude &amp;ldquo;system&amp;rdquo; prerequisites. If &amp;lt;recurse&amp;gt; is set to 1 all prerequisites will be found recursively, if set to 0 only direct prerequisites are listed. &amp;lt;exepath&amp;gt; is the path to the top level executable used for @executable_path replacment on the Mac. &amp;lt;dirs&amp;gt; is a list of paths where libraries might be found: these paths are searched first when a target without any path info is given. Then standard system locations are also searched: PATH, Framework locations, /usr/lib&amp;hellip;</source>
          <target state="translated">&amp;lt;target&amp;gt;은 실행 파일의 전체 경로입니다. &amp;lt;prerequisites_var&amp;gt;는 결과를 포함 할 CMake 변수의 이름입니다. &amp;lt;exclude_system&amp;gt;은&amp;ldquo;시스템&amp;rdquo;전제 조건을 포함 또는 제외 시킬지 여부를 나타내는 0 또는 1이어야합니다. &amp;lt;recurse&amp;gt;를 1로 설정하면 모든 필수 구성 요소가 재귀 적으로 발견되며 0으로 설정하면 직접 필수 구성 요소 만 나열됩니다. &amp;lt;exepath&amp;gt;는 Mac에서 @ executable_path 대체에 사용되는 최상위 실행 파일의 경로입니다. &amp;lt;dirs&amp;gt;는 라이브러리를 찾을 수있는 경로 목록입니다. 이러한 경로는 경로 정보가없는 대상이 제공 될 때 먼저 검색됩니다. 그런 다음 표준 시스템 위치도 검색됩니다 : PATH, 프레임 워크 위치, / usr / lib&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="23fa2616619ffdabc0c8c622616e4226a5989404" translate="yes" xml:space="preserve">
          <source>&amp;lt;target&amp;gt; is the name of a shared library or executable target or the full path to a shared library or executable file. If &amp;lt;recurse&amp;gt; is set to 1 all prerequisites will be found recursively, if set to 0 only direct prerequisites are listed. &amp;lt;exclude_system&amp;gt; must be 0 or 1 indicating whether to include or exclude &amp;ldquo;system&amp;rdquo; prerequisites. With &amp;lt;verbose&amp;gt; set to 0 only the full path names of the prerequisites are printed, set to 1 extra informatin will be displayed.</source>
          <target state="translated">&amp;lt;target&amp;gt;은 공유 라이브러리 또는 실행 파일의 이름이거나 공유 라이브러리 또는 실행 파일의 전체 경로입니다. &amp;lt;recurse&amp;gt;를 1로 설정하면 모든 필수 구성 요소가 재귀 적으로 발견되며 0으로 설정하면 직접 필수 구성 요소 만 나열됩니다. &amp;lt;exclude_system&amp;gt;은&amp;ldquo;시스템&amp;rdquo;전제 조건을 포함 또는 제외 시킬지 여부를 나타내는 0 또는 1이어야합니다. &amp;lt;verbose&amp;gt;를 0으로 설정하면 필수 구성 요소의 전체 경로 이름 만 인쇄되고 1로 설정하면 추가 정보가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4839c2eba9c96af58d716d59e9dbe57d56733d57" translate="yes" xml:space="preserve">
          <source>&amp;ndash; Typical Use</source>
          <target state="translated">&amp;ndash; 일반적인 사용</target>
        </trans-unit>
        <trans-unit id="84668189479a44a5cddb67fd7890860f665c0492" translate="yes" xml:space="preserve">
          <source>(*) See Troubleshooting section.</source>
          <target state="translated">(*) 문제 해결 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="842381e71d530314a7cce96a9a244a602e9b7cf1" translate="yes" xml:space="preserve">
          <source>(&lt;strong&gt;Not yet implemented&lt;/strong&gt;) If the depending file is a Windows Store app, and the dependency is listed as a dependency in the application&amp;rsquo;s package manifest, the dependency is resolved to that file.</source>
          <target state="translated">( &lt;strong&gt;아직 구현되지 않음&lt;/strong&gt; ) 종속 파일이 Windows 스토어 앱이고 종속성이 애플리케이션의 패키지 매니페스트에 종속성으로 나열되는 경우 종속성이 해당 파일로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="d4b00f6a820aabcc0f8bfcad4ffeed84f2bff309" translate="yes" xml:space="preserve">
          <source>(the CDash server can provide the file to a project administrator who configures &lt;code&gt;MyProject&lt;/code&gt;). Settings in the config file are shared by both this &lt;code&gt;CTest&lt;/code&gt; module and the &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; command-line &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt; mode (&lt;code&gt;ctest -S&lt;/code&gt;).</source>
          <target state="translated">CDash 서버는 &lt;code&gt;MyProject&lt;/code&gt; 를 구성하는 프로젝트 관리자에게 파일을 제공 할 수 있습니다 . 구성 파일의 설정은이 &lt;code&gt;CTest&lt;/code&gt; 모듈과 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 명령 행 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 모드 ( &lt;code&gt;ctest -S&lt;/code&gt; ) 모두에서 공유됩니다 .</target>
        </trans-unit>
        <trans-unit id="67ff09f1ca65d75c992173ca54ee258ca74f2930" translate="yes" xml:space="preserve">
          <source>(where &lt;code&gt;MODULE&lt;/code&gt; is of the form &amp;ldquo;OSGVOLUME&amp;rdquo; and there is a &lt;a href=&quot;findosgvolume#module:FindosgVolume&quot; id=&quot;index-0-module:FindosgVolume&quot;&gt;&lt;code&gt;FindosgVolume&lt;/code&gt;&lt;/a&gt;.cmake` file)</source>
          <target state="translated">(여기서 &lt;code&gt;MODULE&lt;/code&gt; 은&amp;ldquo;OSGVOLUME&amp;rdquo;형식이며 &lt;a href=&quot;findosgvolume#module:FindosgVolume&quot; id=&quot;index-0-module:FindosgVolume&quot;&gt; &lt;code&gt;FindosgVolume&lt;/code&gt; &lt;/a&gt; .cmake` 파일이 있습니다)</target>
        </trans-unit>
        <trans-unit id="74eee03262b8dd96540c825bfe5002ac18134b6e" translate="yes" xml:space="preserve">
          <source>3, 4 or a full version string (eg 5.1.4) for versions &amp;gt;= 4.1.6.</source>
          <target state="translated">&amp;gt; = 4.1.6 버전의 경우 3, 4 또는 정식 버전 문자열 (예 : 5.1.4).</target>
        </trans-unit>
        <trans-unit id="9de521b64c1bbacf7757e18a0f227758959629ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#command-definitions&quot;&gt;Command Definitions&lt;/a&gt; created by the &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-1-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; command create commands that, when invoked, process the recorded commands in a new variable binding scope. A variable &amp;ldquo;set&amp;rdquo; or &amp;ldquo;unset&amp;rdquo; binds in this scope and is visible for the current function and any nested calls within it, but not after the function returns.</source>
          <target state="translated">&lt;a href=&quot;#command-definitions&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-1-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 명령 정의 는 호출 될 때 새 변수 바인딩 범위에서 기록 된 명령을 처리하는 명령을 작성합니다. 변수 &quot;set&quot;또는 &quot;unset&quot;은이 범위에서 바인드되며 현재 함수 및 함수 내에서 중첩 된 호출에 대해 표시되지만 함수가 반환 된 후에는 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f7549bdaf48fe9501eb73d4a582cca114d7b1254" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_binary_directory#variable:CTEST_BINARY_DIRECTORY&quot; id=&quot;index-0-variable:CTEST_BINARY_DIRECTORY&quot;&gt;&lt;code&gt;CTEST_BINARY_DIRECTORY&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_binary_directory#variable:CTEST_BINARY_DIRECTORY&quot; id=&quot;index-0-variable:CTEST_BINARY_DIRECTORY&quot;&gt; &lt;code&gt;CTEST_BINARY_DIRECTORY&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_BINARY_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="64e8abdc83121b11fc8739868b159b0f9712458e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt;&lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt; &lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_BUILD_COMMAND</target>
        </trans-unit>
        <trans-unit id="76d379e8cccff82e357dff5929be925a28b43fda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_build_name#variable:CTEST_BUILD_NAME&quot; id=&quot;index-0-variable:CTEST_BUILD_NAME&quot;&gt;&lt;code&gt;CTEST_BUILD_NAME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_build_name#variable:CTEST_BUILD_NAME&quot; id=&quot;index-0-variable:CTEST_BUILD_NAME&quot;&gt; &lt;code&gt;CTEST_BUILD_NAME&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_BUILD_NAME</target>
        </trans-unit>
        <trans-unit id="3f2477a75be1f1305bfaf43c8506d2c08dd847cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_bzr_command#variable:CTEST_BZR_COMMAND&quot; id=&quot;index-0-variable:CTEST_BZR_COMMAND&quot;&gt;&lt;code&gt;CTEST_BZR_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_bzr_command#variable:CTEST_BZR_COMMAND&quot; id=&quot;index-0-variable:CTEST_BZR_COMMAND&quot;&gt; &lt;code&gt;CTEST_BZR_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_BZR_COMMAND</target>
        </trans-unit>
        <trans-unit id="72214738452d29cd3bf79e76eec65a37e3fa3741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_bzr_update_options#variable:CTEST_BZR_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_BZR_UPDATE_OPTIONS&quot;&gt;&lt;code&gt;CTEST_BZR_UPDATE_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_bzr_update_options#variable:CTEST_BZR_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_BZR_UPDATE_OPTIONS&quot;&gt; &lt;code&gt;CTEST_BZR_UPDATE_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_BZR_UPDATE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="73386642ea443717e039da860508852626f0c04c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_configuration_type#variable:CTEST_CONFIGURATION_TYPE&quot; id=&quot;index-0-variable:CTEST_CONFIGURATION_TYPE&quot;&gt;&lt;code&gt;CTEST_CONFIGURATION_TYPE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_configuration_type#variable:CTEST_CONFIGURATION_TYPE&quot; id=&quot;index-0-variable:CTEST_CONFIGURATION_TYPE&quot;&gt; &lt;code&gt;CTEST_CONFIGURATION_TYPE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_CONFIGURATION_TYPE</target>
        </trans-unit>
        <trans-unit id="b81a5cc1b245079ec3ed646257db7d0fe716b56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_configure_command#variable:CTEST_CONFIGURE_COMMAND&quot; id=&quot;index-0-variable:CTEST_CONFIGURE_COMMAND&quot;&gt;&lt;code&gt;CTEST_CONFIGURE_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_configure_command#variable:CTEST_CONFIGURE_COMMAND&quot; id=&quot;index-0-variable:CTEST_CONFIGURE_COMMAND&quot;&gt; &lt;code&gt;CTEST_CONFIGURE_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_CONFIGURE_COMMAND</target>
        </trans-unit>
        <trans-unit id="1935567a56d36bb755787513d18f285c2ab71986" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_coverage_command#variable:CTEST_COVERAGE_COMMAND&quot; id=&quot;index-0-variable:CTEST_COVERAGE_COMMAND&quot;&gt;&lt;code&gt;CTEST_COVERAGE_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_coverage_command#variable:CTEST_COVERAGE_COMMAND&quot; id=&quot;index-0-variable:CTEST_COVERAGE_COMMAND&quot;&gt; &lt;code&gt;CTEST_COVERAGE_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_COVERAGE_COMMAND</target>
        </trans-unit>
        <trans-unit id="f9e142bc75268ee01c721b7f46afc02ad07920ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_coverage_extra_flags#variable:CTEST_COVERAGE_EXTRA_FLAGS&quot; id=&quot;index-0-variable:CTEST_COVERAGE_EXTRA_FLAGS&quot;&gt;&lt;code&gt;CTEST_COVERAGE_EXTRA_FLAGS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_coverage_extra_flags#variable:CTEST_COVERAGE_EXTRA_FLAGS&quot; id=&quot;index-0-variable:CTEST_COVERAGE_EXTRA_FLAGS&quot;&gt; &lt;code&gt;CTEST_COVERAGE_EXTRA_FLAGS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_COVERAGE_EXTRA_FLAGS</target>
        </trans-unit>
        <trans-unit id="a8791fe2e275f5752ab8cd43f0925dbe2f2d0e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_curl_options#variable:CTEST_CURL_OPTIONS&quot; id=&quot;index-0-variable:CTEST_CURL_OPTIONS&quot;&gt;&lt;code&gt;CTEST_CURL_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_curl_options#variable:CTEST_CURL_OPTIONS&quot; id=&quot;index-0-variable:CTEST_CURL_OPTIONS&quot;&gt; &lt;code&gt;CTEST_CURL_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_CURL_OPTIONS</target>
        </trans-unit>
        <trans-unit id="59ac68aaa3dca73f7d5ba4338901d86c6d98b05d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_cvs_command#variable:CTEST_CVS_COMMAND&quot; id=&quot;index-0-variable:CTEST_CVS_COMMAND&quot;&gt;&lt;code&gt;CTEST_CVS_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_cvs_command#variable:CTEST_CVS_COMMAND&quot; id=&quot;index-0-variable:CTEST_CVS_COMMAND&quot;&gt; &lt;code&gt;CTEST_CVS_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_CVS_COMMAND</target>
        </trans-unit>
        <trans-unit id="82d1a7ad18935aadf16d8090c5af4920d5bddd49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_cvs_update_options#variable:CTEST_CVS_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_CVS_UPDATE_OPTIONS&quot;&gt;&lt;code&gt;CTEST_CVS_UPDATE_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_cvs_update_options#variable:CTEST_CVS_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_CVS_UPDATE_OPTIONS&quot;&gt; &lt;code&gt;CTEST_CVS_UPDATE_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_CVS_UPDATE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="0158e0ffb0edb42b5f63c1c82016c3f5f768e24f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_drop_location#variable:CTEST_DROP_LOCATION&quot; id=&quot;index-0-variable:CTEST_DROP_LOCATION&quot;&gt;&lt;code&gt;CTEST_DROP_LOCATION&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_drop_location#variable:CTEST_DROP_LOCATION&quot; id=&quot;index-0-variable:CTEST_DROP_LOCATION&quot;&gt; &lt;code&gt;CTEST_DROP_LOCATION&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_DROP_LOCATION</target>
        </trans-unit>
        <trans-unit id="4f19baeabf79f55cc78a4f24633c00f6c7aba0bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_drop_method#variable:CTEST_DROP_METHOD&quot; id=&quot;index-0-variable:CTEST_DROP_METHOD&quot;&gt;&lt;code&gt;CTEST_DROP_METHOD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_drop_method#variable:CTEST_DROP_METHOD&quot; id=&quot;index-0-variable:CTEST_DROP_METHOD&quot;&gt; &lt;code&gt;CTEST_DROP_METHOD&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_DROP_METHOD</target>
        </trans-unit>
        <trans-unit id="2e375b439e85760cae810920a1757fa8970042b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_drop_site#variable:CTEST_DROP_SITE&quot; id=&quot;index-0-variable:CTEST_DROP_SITE&quot;&gt;&lt;code&gt;CTEST_DROP_SITE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_drop_site#variable:CTEST_DROP_SITE&quot; id=&quot;index-0-variable:CTEST_DROP_SITE&quot;&gt; &lt;code&gt;CTEST_DROP_SITE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_DROP_SITE</target>
        </trans-unit>
        <trans-unit id="93cfe1626eb252a7fbef6a05a184c0551bdcc34a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_drop_site_cdash#variable:CTEST_DROP_SITE_CDASH&quot; id=&quot;index-0-variable:CTEST_DROP_SITE_CDASH&quot;&gt;&lt;code&gt;CTEST_DROP_SITE_CDASH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_drop_site_cdash#variable:CTEST_DROP_SITE_CDASH&quot; id=&quot;index-0-variable:CTEST_DROP_SITE_CDASH&quot;&gt; &lt;code&gt;CTEST_DROP_SITE_CDASH&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_DROP_SITE_CDASH</target>
        </trans-unit>
        <trans-unit id="ed5027283dbd2c508164bde3b825d71ce71092d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_drop_site_password#variable:CTEST_DROP_SITE_PASSWORD&quot; id=&quot;index-0-variable:CTEST_DROP_SITE_PASSWORD&quot;&gt;&lt;code&gt;CTEST_DROP_SITE_PASSWORD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_drop_site_password#variable:CTEST_DROP_SITE_PASSWORD&quot; id=&quot;index-0-variable:CTEST_DROP_SITE_PASSWORD&quot;&gt; &lt;code&gt;CTEST_DROP_SITE_PASSWORD&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_DROP_SITE_PASSWORD</target>
        </trans-unit>
        <trans-unit id="cf019f395ce219d9fdec84dea16caf1b84afdf2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_drop_site_user#variable:CTEST_DROP_SITE_USER&quot; id=&quot;index-0-variable:CTEST_DROP_SITE_USER&quot;&gt;&lt;code&gt;CTEST_DROP_SITE_USER&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_drop_site_user#variable:CTEST_DROP_SITE_USER&quot; id=&quot;index-0-variable:CTEST_DROP_SITE_USER&quot;&gt; &lt;code&gt;CTEST_DROP_SITE_USER&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_DROP_SITE_USER</target>
        </trans-unit>
        <trans-unit id="e203b1b33db08b1e7a6ce448c4cc784a73ed2ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_git_command#variable:CTEST_GIT_COMMAND&quot; id=&quot;index-0-variable:CTEST_GIT_COMMAND&quot;&gt;&lt;code&gt;CTEST_GIT_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_git_command#variable:CTEST_GIT_COMMAND&quot; id=&quot;index-0-variable:CTEST_GIT_COMMAND&quot;&gt; &lt;code&gt;CTEST_GIT_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_GIT_COMMAND</target>
        </trans-unit>
        <trans-unit id="ce8d22930b324f27ab32c022a16f8575d0f1047d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_git_init_submodules#variable:CTEST_GIT_INIT_SUBMODULES&quot; id=&quot;index-0-variable:CTEST_GIT_INIT_SUBMODULES&quot;&gt;&lt;code&gt;CTEST_GIT_INIT_SUBMODULES&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_git_init_submodules#variable:CTEST_GIT_INIT_SUBMODULES&quot; id=&quot;index-0-variable:CTEST_GIT_INIT_SUBMODULES&quot;&gt; &lt;code&gt;CTEST_GIT_INIT_SUBMODULES&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_GIT_INIT_SUBMODULES</target>
        </trans-unit>
        <trans-unit id="fd6a2d3d207336f6e2d4eaa15eddbd9a4cea2e9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_git_update_custom#variable:CTEST_GIT_UPDATE_CUSTOM&quot; id=&quot;index-0-variable:CTEST_GIT_UPDATE_CUSTOM&quot;&gt;&lt;code&gt;CTEST_GIT_UPDATE_CUSTOM&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_git_update_custom#variable:CTEST_GIT_UPDATE_CUSTOM&quot; id=&quot;index-0-variable:CTEST_GIT_UPDATE_CUSTOM&quot;&gt; &lt;code&gt;CTEST_GIT_UPDATE_CUSTOM&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_GIT_UPDATE_CUSTOM</target>
        </trans-unit>
        <trans-unit id="07e725ed4bd804f858e38448ef929f1b3390f0cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_git_update_options#variable:CTEST_GIT_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_GIT_UPDATE_OPTIONS&quot;&gt;&lt;code&gt;CTEST_GIT_UPDATE_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_git_update_options#variable:CTEST_GIT_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_GIT_UPDATE_OPTIONS&quot;&gt; &lt;code&gt;CTEST_GIT_UPDATE_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_GIT_UPDATE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="4487387fe316b8a4b22a94cf7024413788b5acce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_hg_command#variable:CTEST_HG_COMMAND&quot; id=&quot;index-0-variable:CTEST_HG_COMMAND&quot;&gt;&lt;code&gt;CTEST_HG_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_hg_command#variable:CTEST_HG_COMMAND&quot; id=&quot;index-0-variable:CTEST_HG_COMMAND&quot;&gt; &lt;code&gt;CTEST_HG_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_HG_COMMAND</target>
        </trans-unit>
        <trans-unit id="23a4936fbb3b496614758062da188d7b65f34f56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_hg_update_options#variable:CTEST_HG_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_HG_UPDATE_OPTIONS&quot;&gt;&lt;code&gt;CTEST_HG_UPDATE_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_hg_update_options#variable:CTEST_HG_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_HG_UPDATE_OPTIONS&quot;&gt; &lt;code&gt;CTEST_HG_UPDATE_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_HG_UPDATE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="bcebc8e0f95e67e438ab91dae95f36eff188f2f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_labels_for_subprojects#variable:CTEST_LABELS_FOR_SUBPROJECTS&quot; id=&quot;index-0-variable:CTEST_LABELS_FOR_SUBPROJECTS&quot;&gt;&lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_labels_for_subprojects#variable:CTEST_LABELS_FOR_SUBPROJECTS&quot; id=&quot;index-0-variable:CTEST_LABELS_FOR_SUBPROJECTS&quot;&gt; &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_LABELS_FOR_SUBPROJECTS</target>
        </trans-unit>
        <trans-unit id="648f03dd0b49e9e19bbb355ca5abdef342cec0a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_labels_for_subprojects#variable:CTEST_LABELS_FOR_SUBPROJECTS&quot; id=&quot;index-1-variable:CTEST_LABELS_FOR_SUBPROJECTS&quot;&gt;&lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_labels_for_subprojects#variable:CTEST_LABELS_FOR_SUBPROJECTS&quot; id=&quot;index-1-variable:CTEST_LABELS_FOR_SUBPROJECTS&quot;&gt; &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_LABELS_FOR_SUBPROJECTS</target>
        </trans-unit>
        <trans-unit id="cfa4e570a47ef9ca085d0ab69c24565dd8c7c511" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_labels_for_subprojects#variable:CTEST_LABELS_FOR_SUBPROJECTS&quot; id=&quot;index-2-variable:CTEST_LABELS_FOR_SUBPROJECTS&quot;&gt;&lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_labels_for_subprojects#variable:CTEST_LABELS_FOR_SUBPROJECTS&quot; id=&quot;index-2-variable:CTEST_LABELS_FOR_SUBPROJECTS&quot;&gt; &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_LABELS_FOR_SUBPROJECTS</target>
        </trans-unit>
        <trans-unit id="4d40516b6872207d4dc2b6db73c2723adda65c9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_memorycheck_command#variable:CTEST_MEMORYCHECK_COMMAND&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_COMMAND&quot;&gt;&lt;code&gt;CTEST_MEMORYCHECK_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_memorycheck_command#variable:CTEST_MEMORYCHECK_COMMAND&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_COMMAND&quot;&gt; &lt;code&gt;CTEST_MEMORYCHECK_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_MEMORYCHECK_COMMAND</target>
        </trans-unit>
        <trans-unit id="a23fa86d500e8ed429cd23f2bf9ee65a4ebb9c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_memorycheck_command_options#variable:CTEST_MEMORYCHECK_COMMAND_OPTIONS&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_COMMAND_OPTIONS&quot;&gt;&lt;code&gt;CTEST_MEMORYCHECK_COMMAND_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_memorycheck_command_options#variable:CTEST_MEMORYCHECK_COMMAND_OPTIONS&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_COMMAND_OPTIONS&quot;&gt; &lt;code&gt;CTEST_MEMORYCHECK_COMMAND_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_MEMORYCHECK_COMMAND_OPTIONS</target>
        </trans-unit>
        <trans-unit id="696d6f09ee2969a8696758ed1f966fac0e78b069" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_memorycheck_sanitizer_options#variable:CTEST_MEMORYCHECK_SANITIZER_OPTIONS&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_SANITIZER_OPTIONS&quot;&gt;&lt;code&gt;CTEST_MEMORYCHECK_SANITIZER_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_memorycheck_sanitizer_options#variable:CTEST_MEMORYCHECK_SANITIZER_OPTIONS&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_SANITIZER_OPTIONS&quot;&gt; &lt;code&gt;CTEST_MEMORYCHECK_SANITIZER_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_MEMORYCHECK_SANITIZER_OPTIONS</target>
        </trans-unit>
        <trans-unit id="a711b83da1ae159582aa5b885d3013dfc9396ad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_memorycheck_suppressions_file#variable:CTEST_MEMORYCHECK_SUPPRESSIONS_FILE&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_SUPPRESSIONS_FILE&quot;&gt;&lt;code&gt;CTEST_MEMORYCHECK_SUPPRESSIONS_FILE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_memorycheck_suppressions_file#variable:CTEST_MEMORYCHECK_SUPPRESSIONS_FILE&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_SUPPRESSIONS_FILE&quot;&gt; &lt;code&gt;CTEST_MEMORYCHECK_SUPPRESSIONS_FILE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_MEMORYCHECK_SUPPRESSIONS_FILE</target>
        </trans-unit>
        <trans-unit id="7279270daec5889c8d0bb60891ead9cb7478fe10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_memorycheck_type#variable:CTEST_MEMORYCHECK_TYPE&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_TYPE&quot;&gt;&lt;code&gt;CTEST_MEMORYCHECK_TYPE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_memorycheck_type#variable:CTEST_MEMORYCHECK_TYPE&quot; id=&quot;index-0-variable:CTEST_MEMORYCHECK_TYPE&quot;&gt; &lt;code&gt;CTEST_MEMORYCHECK_TYPE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_MEMORYCHECK_TYPE</target>
        </trans-unit>
        <trans-unit id="7a7772dc695f54c55d23d8e4ecca8bf069212623" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_nightly_start_time#variable:CTEST_NIGHTLY_START_TIME&quot; id=&quot;index-0-variable:CTEST_NIGHTLY_START_TIME&quot;&gt;&lt;code&gt;CTEST_NIGHTLY_START_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_nightly_start_time#variable:CTEST_NIGHTLY_START_TIME&quot; id=&quot;index-0-variable:CTEST_NIGHTLY_START_TIME&quot;&gt; &lt;code&gt;CTEST_NIGHTLY_START_TIME&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_NIGHTLY_START_TIME</target>
        </trans-unit>
        <trans-unit id="c6a04e4e6d33b46c7b1e6d74cb59dbe364fb807d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_p4_client#variable:CTEST_P4_CLIENT&quot; id=&quot;index-0-variable:CTEST_P4_CLIENT&quot;&gt;&lt;code&gt;CTEST_P4_CLIENT&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_p4_client#variable:CTEST_P4_CLIENT&quot; id=&quot;index-0-variable:CTEST_P4_CLIENT&quot;&gt; &lt;code&gt;CTEST_P4_CLIENT&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_P4_CLIENT</target>
        </trans-unit>
        <trans-unit id="004e579f4df0a9fe0d4ba939a6820299306a35d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_p4_command#variable:CTEST_P4_COMMAND&quot; id=&quot;index-0-variable:CTEST_P4_COMMAND&quot;&gt;&lt;code&gt;CTEST_P4_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_p4_command#variable:CTEST_P4_COMMAND&quot; id=&quot;index-0-variable:CTEST_P4_COMMAND&quot;&gt; &lt;code&gt;CTEST_P4_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_P4_COMMAND</target>
        </trans-unit>
        <trans-unit id="49f04df9e3f5af6147e8d3dc4e2edcfd2efe4a6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_p4_options#variable:CTEST_P4_OPTIONS&quot; id=&quot;index-0-variable:CTEST_P4_OPTIONS&quot;&gt;&lt;code&gt;CTEST_P4_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_p4_options#variable:CTEST_P4_OPTIONS&quot; id=&quot;index-0-variable:CTEST_P4_OPTIONS&quot;&gt; &lt;code&gt;CTEST_P4_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_P4_OPTIONS</target>
        </trans-unit>
        <trans-unit id="db95b4ddbab1e9d01ce7733bb85c03c99cc01040" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_p4_update_options#variable:CTEST_P4_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_P4_UPDATE_OPTIONS&quot;&gt;&lt;code&gt;CTEST_P4_UPDATE_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_p4_update_options#variable:CTEST_P4_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_P4_UPDATE_OPTIONS&quot;&gt; &lt;code&gt;CTEST_P4_UPDATE_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_P4_UPDATE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="9e6c10d0cf11c965978d39357df636c28ba3e03a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-0-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt;&lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_resource_spec_file#variable:CTEST_RESOURCE_SPEC_FILE&quot; id=&quot;index-0-variable:CTEST_RESOURCE_SPEC_FILE&quot;&gt; &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_RESOURCE_SPEC_FILE</target>
        </trans-unit>
        <trans-unit id="1c010d4f7da1ab766b8bc3cd4573eed742099d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_scp_command#variable:CTEST_SCP_COMMAND&quot; id=&quot;index-0-variable:CTEST_SCP_COMMAND&quot;&gt;&lt;code&gt;CTEST_SCP_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_scp_command#variable:CTEST_SCP_COMMAND&quot; id=&quot;index-0-variable:CTEST_SCP_COMMAND&quot;&gt; &lt;code&gt;CTEST_SCP_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_SCP_COMMAND</target>
        </trans-unit>
        <trans-unit id="0227f804915ea0fc83123662a8f33766ba4659ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_site#variable:CTEST_SITE&quot; id=&quot;index-0-variable:CTEST_SITE&quot;&gt;&lt;code&gt;CTEST_SITE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_site#variable:CTEST_SITE&quot; id=&quot;index-0-variable:CTEST_SITE&quot;&gt; &lt;code&gt;CTEST_SITE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_SITE</target>
        </trans-unit>
        <trans-unit id="f50a50c67ae9d67d931544136fa021e62dadf06d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_source_directory#variable:CTEST_SOURCE_DIRECTORY&quot; id=&quot;index-0-variable:CTEST_SOURCE_DIRECTORY&quot;&gt;&lt;code&gt;CTEST_SOURCE_DIRECTORY&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_source_directory#variable:CTEST_SOURCE_DIRECTORY&quot; id=&quot;index-0-variable:CTEST_SOURCE_DIRECTORY&quot;&gt; &lt;code&gt;CTEST_SOURCE_DIRECTORY&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_SOURCE_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="01f577738f5d8d0a6455fc87c31b83ebf82072a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_submit_url#variable:CTEST_SUBMIT_URL&quot; id=&quot;index-0-variable:CTEST_SUBMIT_URL&quot;&gt;&lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_submit_url#variable:CTEST_SUBMIT_URL&quot; id=&quot;index-0-variable:CTEST_SUBMIT_URL&quot;&gt; &lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_SUBMIT_URL</target>
        </trans-unit>
        <trans-unit id="4871acbe8516e0350758546d8a2ecb0e1fb1e1eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_svn_command#variable:CTEST_SVN_COMMAND&quot; id=&quot;index-0-variable:CTEST_SVN_COMMAND&quot;&gt;&lt;code&gt;CTEST_SVN_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_svn_command#variable:CTEST_SVN_COMMAND&quot; id=&quot;index-0-variable:CTEST_SVN_COMMAND&quot;&gt; &lt;code&gt;CTEST_SVN_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_SVN_COMMAND</target>
        </trans-unit>
        <trans-unit id="1c70b7ba98322fad40ab38494ad7bf53317b8a61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_svn_options#variable:CTEST_SVN_OPTIONS&quot; id=&quot;index-0-variable:CTEST_SVN_OPTIONS&quot;&gt;&lt;code&gt;CTEST_SVN_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_svn_options#variable:CTEST_SVN_OPTIONS&quot; id=&quot;index-0-variable:CTEST_SVN_OPTIONS&quot;&gt; &lt;code&gt;CTEST_SVN_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_SVN_OPTIONS</target>
        </trans-unit>
        <trans-unit id="cf41521e2f49021a24a6150dc8e450bbea0bd34d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_svn_update_options#variable:CTEST_SVN_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_SVN_UPDATE_OPTIONS&quot;&gt;&lt;code&gt;CTEST_SVN_UPDATE_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_svn_update_options#variable:CTEST_SVN_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_SVN_UPDATE_OPTIONS&quot;&gt; &lt;code&gt;CTEST_SVN_UPDATE_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_SVN_UPDATE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="a646b9e961534271163f9a2d0ecde2f9fe67c201" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_test_load#variable:CTEST_TEST_LOAD&quot; id=&quot;index-0-variable:CTEST_TEST_LOAD&quot;&gt;&lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_test_load#variable:CTEST_TEST_LOAD&quot; id=&quot;index-0-variable:CTEST_TEST_LOAD&quot;&gt; &lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_TEST_LOAD</target>
        </trans-unit>
        <trans-unit id="598bb819702066770ffce2b84103cf36d7d33802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_test_timeout#variable:CTEST_TEST_TIMEOUT&quot; id=&quot;index-0-variable:CTEST_TEST_TIMEOUT&quot;&gt;&lt;code&gt;CTEST_TEST_TIMEOUT&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_test_timeout#variable:CTEST_TEST_TIMEOUT&quot; id=&quot;index-0-variable:CTEST_TEST_TIMEOUT&quot;&gt; &lt;code&gt;CTEST_TEST_TIMEOUT&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_TEST_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="e10eddc623fa44315933f28c81adcecda91fa40b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_trigger_site#variable:CTEST_TRIGGER_SITE&quot; id=&quot;index-0-variable:CTEST_TRIGGER_SITE&quot;&gt;&lt;code&gt;CTEST_TRIGGER_SITE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_trigger_site#variable:CTEST_TRIGGER_SITE&quot; id=&quot;index-0-variable:CTEST_TRIGGER_SITE&quot;&gt; &lt;code&gt;CTEST_TRIGGER_SITE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_TRIGGER_SITE</target>
        </trans-unit>
        <trans-unit id="d2329202dccce74cb6afc6ce07ad4aab59dd0d27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_update_command#variable:CTEST_UPDATE_COMMAND&quot; id=&quot;index-0-variable:CTEST_UPDATE_COMMAND&quot;&gt;&lt;code&gt;CTEST_UPDATE_COMMAND&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_update_command#variable:CTEST_UPDATE_COMMAND&quot; id=&quot;index-0-variable:CTEST_UPDATE_COMMAND&quot;&gt; &lt;code&gt;CTEST_UPDATE_COMMAND&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_UPDATE_COMMAND</target>
        </trans-unit>
        <trans-unit id="49da9e8e8a26f6240b96b66e4950eed044fef3a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_update_options#variable:CTEST_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_UPDATE_OPTIONS&quot;&gt;&lt;code&gt;CTEST_UPDATE_OPTIONS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_update_options#variable:CTEST_UPDATE_OPTIONS&quot; id=&quot;index-0-variable:CTEST_UPDATE_OPTIONS&quot;&gt; &lt;code&gt;CTEST_UPDATE_OPTIONS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_UPDATE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="c7db296084d15b4334895863b690f81b7a6674c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_update_version_only#variable:CTEST_UPDATE_VERSION_ONLY&quot; id=&quot;index-0-variable:CTEST_UPDATE_VERSION_ONLY&quot;&gt;&lt;code&gt;CTEST_UPDATE_VERSION_ONLY&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_update_version_only#variable:CTEST_UPDATE_VERSION_ONLY&quot; id=&quot;index-0-variable:CTEST_UPDATE_VERSION_ONLY&quot;&gt; &lt;code&gt;CTEST_UPDATE_VERSION_ONLY&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_UPDATE_VERSION_ONLY</target>
        </trans-unit>
        <trans-unit id="58ce7c052acd65500ecab5ea6ad4d04590a13815" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_update_version_override#variable:CTEST_UPDATE_VERSION_OVERRIDE&quot; id=&quot;index-0-variable:CTEST_UPDATE_VERSION_OVERRIDE&quot;&gt;&lt;code&gt;CTEST_UPDATE_VERSION_OVERRIDE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_update_version_override#variable:CTEST_UPDATE_VERSION_OVERRIDE&quot; id=&quot;index-0-variable:CTEST_UPDATE_VERSION_OVERRIDE&quot;&gt; &lt;code&gt;CTEST_UPDATE_VERSION_OVERRIDE&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_UPDATE_VERSION_OVERRIDE</target>
        </trans-unit>
        <trans-unit id="4e1b1cd6f94a5968dc4a97565ee0b278fcdbba53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: &lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt;&lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt; &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; &lt;/a&gt; 스크립트 변수 : CTEST_USE_LAUNCHERS</target>
        </trans-unit>
        <trans-unit id="305150dfc14cc24498a43301cb216d62d0618782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: none</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;CTest 스크립트&lt;/a&gt; 변수 : none</target>
        </trans-unit>
        <trans-unit id="1bca90b8b67d1e793a91d13e8dc50e5469ddad71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: none, detected from server</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;CTest 스크립트&lt;/a&gt; 변수 : 없음, 서버에서 감지</target>
        </trans-unit>
        <trans-unit id="4f44971f1128b894a8801447ac0a31319d9a8ce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: none, detected from source tree</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;CTest 스크립트&lt;/a&gt; 변수 : 없음, 소스 트리에서 감지</target>
        </trans-unit>
        <trans-unit id="c185544e4a541b872507b706ea79400a2de44e7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: none, use the &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-1-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;RETRY_COUNT&lt;/code&gt; option.</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;CTest 스크립트&lt;/a&gt; 변수 : 없음, &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-1-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;RETRY_COUNT&lt;/code&gt; 사용 옵션을 .</target>
        </trans-unit>
        <trans-unit id="469d9032238076f2e7372db2a876638abb5def60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ctest-script&quot;&gt;CTest Script&lt;/a&gt; variable: none, use the &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-2-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;RETRY_DELAY&lt;/code&gt; option.</source>
          <target state="translated">&lt;a href=&quot;#ctest-script&quot;&gt;CTest 스크립트&lt;/a&gt; 변수 : 없음, &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-2-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;RETRY_DELAY&lt;/code&gt; 사용 옵션을 .</target>
        </trans-unit>
        <trans-unit id="89480ef302c107abf5f937afedf2ca4166f7a06e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#directories&quot;&gt;Directories&lt;/a&gt; (&lt;code&gt;CMakeLists.txt&lt;/code&gt;),</source>
          <target state="translated">&lt;a href=&quot;#directories&quot;&gt;디렉토리&lt;/a&gt; ( &lt;code&gt;CMakeLists.txt&lt;/code&gt; ),</target>
        </trans-unit>
        <trans-unit id="76298e0a7e5b7e1dc0f95de161a1f317cf081acf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#install-targets&quot;&gt;install(TARGETS)&lt;/a&gt; can install targets that were created in other directories. When using such cross-directory install rules, running &lt;code&gt;make install&lt;/code&gt; (or similar) from a subdirectory will not guarantee that targets from other directories are up-to-date. You can use &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; to ensure that such out-of-directory targets are built before the subdirectory-specific install rules are run.</source>
          <target state="translated">&lt;a href=&quot;#install-targets&quot;&gt;install (TARGETS)&lt;/a&gt; 은 다른 디렉토리에서 작성된 대상을 설치할 수 있습니다. 이러한 교차 디렉토리 설치 규칙을 사용할 때 서브 디렉토리에서 &lt;code&gt;make install&lt;/code&gt; (또는 이와 유사한)을 실행 한다고해서 다른 디렉토리의 대상이 최신인지는 보장 할 수 없습니다. 당신은 사용할 수 있습니다 &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; 같은 밖으로의 디렉토리를 대상 설치 규칙이 실행되는 하위 디렉토리 별 이전에 건축되어 있는지 확인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66608157d43fecf18f50b559f31526e445ef1f2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#modules&quot;&gt;Modules&lt;/a&gt; (&lt;code&gt;&amp;lt;module&amp;gt;.cmake&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;#modules&quot;&gt;모듈&lt;/a&gt; ( &lt;code&gt;&amp;lt;module&amp;gt;.cmake&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7310474c3ce051f6713e8dfc97f571869df6a117" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt;&lt;code&gt;SKIP_AUTOUIC&lt;/code&gt;&lt;/a&gt; can be set on C++ header and source files and on &lt;code&gt;.ui&lt;/code&gt; files.</source>
          <target state="translated">&lt;a href=&quot;#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt; &lt;code&gt;SKIP_AUTOUIC&lt;/code&gt; &lt;/a&gt; 은 C ++ 헤더 및 소스 파일과 &lt;code&gt;.ui&lt;/code&gt; 파일에서 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="447edec39fe76f625ab160377547747eeb9111c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-0-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt;&lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt;&lt;/a&gt; is useful for avoiding spurious timeouts when your test must wait for some system resource to become available before it can execute. Set &lt;a href=&quot;timeout#prop_test:TIMEOUT&quot; id=&quot;index-1-prop_test:TIMEOUT&quot;&gt;&lt;code&gt;TIMEOUT&lt;/code&gt;&lt;/a&gt; to a longer duration that accounts for resource acquisition and use &lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-1-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt;&lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt;&lt;/a&gt; to control how long the actual test is allowed to run.</source>
          <target state="translated">&lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-0-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt; &lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt; &lt;/a&gt; 는 테스트하기 전에 시스템 리소스를 사용할 수있을 때까지 기다려야 할 때 허위 타임 아웃을 피하는 데 유용합니다. 자원 획득을 설명하는&lt;a href=&quot;timeout#prop_test:TIMEOUT&quot; id=&quot;index-1-prop_test:TIMEOUT&quot;&gt; &lt;code&gt;TIMEOUT&lt;/code&gt; &lt;/a&gt; 을 더 긴 기간으로설정하고&lt;a href=&quot;#prop_test:TIMEOUT_AFTER_MATCH&quot; id=&quot;index-1-prop_test:TIMEOUT_AFTER_MATCH&quot;&gt; &lt;code&gt;TIMEOUT_AFTER_MATCH&lt;/code&gt; &lt;/a&gt; 를사용하여 실제 테스트 실행 시간 을 제어하십시오.</target>
        </trans-unit>
        <trans-unit id="aa1a6fa7bc408dc33c39b8e67c9dedf5fdcf23c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is a boolean specifying whether CMake will handle the Qt &lt;code&gt;moc&lt;/code&gt; preprocessor automatically, i.e. without having to use the &lt;a href=&quot;../module/findqt4#module:FindQt4&quot; id=&quot;index-0-module:FindQt4&quot;&gt;&lt;code&gt;QT4_WRAP_CPP()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;QT5_WRAP_CPP()&lt;/code&gt; macro. Currently Qt4 and Qt5 are supported.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 는 CMake가 Qt &lt;code&gt;moc&lt;/code&gt; 전처리기를 자동으로처리하는지, 즉&lt;a href=&quot;../module/findqt4#module:FindQt4&quot; id=&quot;index-0-module:FindQt4&quot;&gt; &lt;code&gt;QT4_WRAP_CPP()&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;QT5_WRAP_CPP()&lt;/code&gt; 매크로를 사용할 필요가없는지를 지정하는 부울입니다. 현재 Qt4 및 Qt5가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="19139b7900ffe39cb1650bd778f022ca328d9772" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; enabled targets need to know the Qt major and minor version they&amp;rsquo;re working with. The major version usually is provided by the &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; property of the &lt;code&gt;Qt[45]Core&lt;/code&gt; library, that the target links to. To find the minor version, CMake builds a list of available Qt versions from</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 지원 대상은 작업중인 Qt 주 버전과 부 버전을 알아야합니다. 메이저 버전은 보통 &lt;code&gt;Qt[45]Core&lt;/code&gt; 의 &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; 속성에의해 제공됩니다 대상이 연결 라이브러리 . 부 버전을 찾기 위해 CMake는 사용 가능한 Qt 버전 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="dd9934ce0486128461f9f20e61dfa5916a663c91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot;&gt;&lt;code&gt;AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt;&lt;/a&gt; is enabled,</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot;&gt; &lt;code&gt;AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt; &lt;/a&gt; 가 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="dafad06799e8410084edf3456e7b049014c49e62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTOMOC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOMOC_EXECUTABLE&quot;&gt;&lt;code&gt;AUTOMOC_EXECUTABLE&lt;/code&gt;&lt;/a&gt; is file path pointing to the &lt;code&gt;moc&lt;/code&gt; executable to use for &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; enabled files. Setting this property will make CMake skip the automatic detection of the &lt;code&gt;moc&lt;/code&gt; binary as well as the sanity-tests normally run to ensure that the binary is available and working as expected.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOMOC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOMOC_EXECUTABLE&quot;&gt; &lt;code&gt;AUTOMOC_EXECUTABLE&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 가능 파일에 사용할 &lt;code&gt;moc&lt;/code&gt; 실행 파일을가리키는 파일 경로입니다. 이 속성을 설정하면 CMake가 &lt;code&gt;moc&lt;/code&gt; 이진의 자동 감지를 건너 뛰고정상 성 테스트가 정상적으로 실행되어 이진이 사용 가능하고 예상대로 작동하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fbb103be9e564f76d44a0ee69f0f428488fcfdb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTOMOC_PATH_PREFIX&quot; id=&quot;index-0-prop_tgt:AUTOMOC_PATH_PREFIX&quot;&gt;&lt;code&gt;AUTOMOC_PATH_PREFIX&lt;/code&gt;&lt;/a&gt; is initialized from the variable &lt;a href=&quot;../variable/cmake_automoc_path_prefix#variable:CMAKE_AUTOMOC_PATH_PREFIX&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_PATH_PREFIX&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_PATH_PREFIX&lt;/code&gt;&lt;/a&gt;, which is &lt;code&gt;OFF&lt;/code&gt; by default.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOMOC_PATH_PREFIX&quot; id=&quot;index-0-prop_tgt:AUTOMOC_PATH_PREFIX&quot;&gt; &lt;code&gt;AUTOMOC_PATH_PREFIX&lt;/code&gt; 는&lt;/a&gt; 변수를 초기화 할&lt;a href=&quot;../variable/cmake_automoc_path_prefix#variable:CMAKE_AUTOMOC_PATH_PREFIX&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_PATH_PREFIX&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_PATH_PREFIX&lt;/code&gt; &lt;/a&gt; 이다, &lt;code&gt;OFF&lt;/code&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="71d44786038844e42a753fa6a42cf285107899b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; is a boolean specifying whether CMake will handle the Qt &lt;code&gt;rcc&lt;/code&gt; code generator automatically, i.e. without having to use the &lt;a href=&quot;../module/findqt4#module:FindQt4&quot; id=&quot;index-0-module:FindQt4&quot;&gt;&lt;code&gt;QT4_ADD_RESOURCES()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;QT5_ADD_RESOURCES()&lt;/code&gt; macro. Currently Qt4 and Qt5 are supported.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 는 CMake가 Qt &lt;code&gt;rcc&lt;/code&gt; 코드 생성기를 자동으로처리할지 여부를 지정하는 부울입니다 (예 :&lt;a href=&quot;../module/findqt4#module:FindQt4&quot; id=&quot;index-0-module:FindQt4&quot;&gt; &lt;code&gt;QT4_ADD_RESOURCES()&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;QT5_ADD_RESOURCES()&lt;/code&gt; 를 사용할 필요 없음 ). 매크로 입니다. 현재 Qt4 및 Qt5가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="a3fc9f60ad0729423512eb976342a680cd765508" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTORCC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTORCC_EXECUTABLE&quot;&gt;&lt;code&gt;AUTORCC_EXECUTABLE&lt;/code&gt;&lt;/a&gt; is file path pointing to the &lt;code&gt;rcc&lt;/code&gt; executable to use for &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; enabled files. Setting this property will make CMake skip the automatic detection of the &lt;code&gt;rcc&lt;/code&gt; binary as well as the sanity-tests normally run to ensure that the binary is available and working as expected.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTORCC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTORCC_EXECUTABLE&quot;&gt; &lt;code&gt;AUTORCC_EXECUTABLE&lt;/code&gt; 는&lt;/a&gt; 받는 가리키는 파일 경로입니다 &lt;code&gt;rcc&lt;/code&gt; 사용할 실행&lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; 이&lt;/a&gt; 파일을 사용 가능. 이 속성을 설정하면 CMake가 &lt;code&gt;rcc&lt;/code&gt; 이진의 자동 감지를 건너 뛰고정상 성 테스트가 정상적으로 실행되어 이진이 사용 가능하고 예상대로 작동하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e30151583cb3cf0b45ab15224485c7627ccfc1de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; is a boolean specifying whether CMake will handle the Qt &lt;code&gt;uic&lt;/code&gt; code generator automatically, i.e. without having to use the &lt;a href=&quot;../module/findqt4#module:FindQt4&quot; id=&quot;index-0-module:FindQt4&quot;&gt;&lt;code&gt;QT4_WRAP_UI()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;QT5_WRAP_UI()&lt;/code&gt; macro. Currently Qt4 and Qt5 are supported.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 는 CMake가 Qt &lt;code&gt;uic&lt;/code&gt; 코드 생성기를 자동으로처리할지 여부를 지정하는 부울입니다 (예 :&lt;a href=&quot;../module/findqt4#module:FindQt4&quot; id=&quot;index-0-module:FindQt4&quot;&gt; &lt;code&gt;QT4_WRAP_UI()&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;QT5_WRAP_UI()&lt;/code&gt; 를 사용하지 않아도 됨 ) 매크로 입니다. 현재 Qt4 및 Qt5가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="6e28c16b8ab6d35d5a3e539ee477a9990e176c6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#prop_tgt:AUTOUIC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOUIC_EXECUTABLE&quot;&gt;&lt;code&gt;AUTOUIC_EXECUTABLE&lt;/code&gt;&lt;/a&gt; is file path pointing to the &lt;code&gt;uic&lt;/code&gt; executable to use for &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; enabled files. Setting this property will make CMake skip the automatic detection of the &lt;code&gt;uic&lt;/code&gt; binary as well as the sanity-tests normally run to ensure that the binary is available and working as expected.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOUIC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOUIC_EXECUTABLE&quot;&gt; &lt;code&gt;AUTOUIC_EXECUTABLE&lt;/code&gt; 는&lt;/a&gt; 받는 가리키는 파일 경로입니다 &lt;code&gt;uic&lt;/code&gt; 에 사용할 실행&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 이&lt;/a&gt; 파일을 사용 가능. 이 속성을 설정하면 CMake가 &lt;code&gt;uic&lt;/code&gt; 이진의 자동 감지를 건너 뛰고정상 성 테스트가 정상적으로 실행되어 이진이 사용 가능하고 예상대로 작동하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="adcaf4bfd9f4dae94babb7b7cfde33a5a807c185" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#scripts&quot;&gt;Scripts&lt;/a&gt; (&lt;code&gt;&amp;lt;script&amp;gt;.cmake&lt;/code&gt;), and</source>
          <target state="translated">&lt;a href=&quot;#scripts&quot;&gt;스크립트&lt;/a&gt; ( &lt;code&gt;&amp;lt;script&amp;gt;.cmake&lt;/code&gt; ) 및</target>
        </trans-unit>
        <trans-unit id="3f2cbf3266efee06e850412a81af3c5aafb9fc3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt; have the form &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#variable-references&quot;&gt;변수 참조&lt;/a&gt; 는 &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0cf93a06c669fc8b3b80c2564008b46197117db6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;Generator expressions&lt;/code&gt;&lt;/a&gt; are evaluated during build system generation to produce information specific to each build configuration.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;Generator expressions&lt;/code&gt; &lt;/a&gt; 은 빌드 시스템 생성 중에 평가되어 각 빌드 구성에 특정한 정보를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="566e2b27b7bcecb031c2189467e7a76cfd184c4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;Generator expressions&lt;/code&gt;&lt;/a&gt; are allowed in the context of many target properties, such as &lt;a href=&quot;../../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and others. They may also be used when using commands to populate those properties, such as &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-2-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and others.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;Generator expressions&lt;/code&gt; &lt;/a&gt; 은&lt;a href=&quot;../../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 등과 같은 많은 대상 속성의 컨텍스트에서 허용됩니다. 명령을 사용하여&lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-2-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 등과 같은 속성을 채울 때도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1509555e4fa8105ce648e8b6cfbcaa2acf6ed148" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;Generator expressions&lt;/code&gt;&lt;/a&gt; may be used to enable conditional linking, conditional definitions used when compiling, conditional include directories and more. The conditions may be based on the build configuration, target properties, platform information or any other queryable information.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;Generator expressions&lt;/code&gt; &lt;/a&gt; 은 조건부 링크, 컴파일시 사용되는 조건부 정의, 조건부 포함 디렉토리 등을 활성화하는 데 사용할 수 있습니다. 조건은 빌드 구성, 대상 속성, 플랫폼 정보 또는 기타 쿼리 가능한 정보를 기반으로 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60ed63ffb3a11a260393fda6db6057b102c54a8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; supports outputting a JSON format with information about the available tests and test configurations. IDEs which want to run CTest should obtain this information and use it to present the user with a list of tests.</source>
          <target state="translated">&lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 은 사용 가능한 테스트 및 테스트 구성에 대한 정보가 포함 된 JSON 형식 출력을 지원합니다. CTest를 실행하려는 IDE는이 정보를 얻고이를 사용하여 사용자에게 테스트 목록을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="5f717df605fa9e66764e9918bd24c2b786cba9a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are used to convert files outside of a CMake project into logical targets inside of the project. &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are created using the &lt;code&gt;IMPORTED&lt;/code&gt; option of the &lt;a href=&quot;../../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; commands. No build files are generated for &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets. Once imported, &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-4-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets may be referenced like any other target within the project and provide a convenient, flexible reference to outside executables and libraries.</source>
          <target state="translated">&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상은 CMake 프로젝트 외부의 파일을 프로젝트 내부의 논리적 대상으로 변환하는 데 사용됩니다. &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상은&lt;a href=&quot;../../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령의 &lt;code&gt;IMPORTED&lt;/code&gt; 옵션을사용하여 생성됩니다. &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상에대한 빌드 파일이 생성되지 않습니다. 가져 오면&lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-4-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상은 프로젝트 내의 다른 대상과 마찬가지로 참조 될 수 있으며 외부 실행 파일 및 라이브러리에 대한 편리하고 유연한 참조를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4ce2f94557835a2084169abce67ba1c6c10386b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json&quot;&gt;&lt;code&gt;This file&lt;/code&gt;&lt;/a&gt; provides a machine-readable JSON schema for the &lt;code&gt;CMakePresets.json&lt;/code&gt; format.</source>
          <target state="translated">&lt;a href=&quot;../_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json&quot;&gt; &lt;code&gt;This file&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;CMakePresets.json&lt;/code&gt; 형식에대한 기계 판독 가능 JSON 스키마를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="3de00fa44cf0e6745cd3723e6bb36626748a0eed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt;&lt;code&gt;add_compile_options()&lt;/code&gt;&lt;/a&gt; for directory-wide settings</source>
          <target state="translated">&lt;a href=&quot;../command/add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt; &lt;code&gt;add_compile_options()&lt;/code&gt; &lt;/a&gt;디렉토리 전체 설정을위한 add_compile_options ()</target>
        </trans-unit>
        <trans-unit id="4dbde38a4e318d9316ee32c6c1128a8c89babd1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; supports arbitrary characters in test names.</source>
          <target state="translated">&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt; 는 테스트 이름에서 임의의 문자를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4d6ea9ed74b5dc84e5c1065bd03e3947576bccf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-1-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; can now (officially) create tests with whitespace and other special characters in its name. Before CMake version 3.19 that was not allowed, however, it was possible to work around this limitation by explicitly putting escaped quotes arount the test&amp;rsquo;s name in the &lt;code&gt;add_test&lt;/code&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-1-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt; 는 이제 (공식적으로) 이름에 공백 및 기타 특수 문자가 포함 된 테스트를 만들 수 있습니다. 그러나 허용되지 않는 CMake 버전 3.19 이전에는 &lt;code&gt;add_test&lt;/code&gt; 명령에서 테스트 이름 뒤에 이스케이프 된 따옴표를 명시 적으로 넣어이 제한을 해결할 수있었습니다 .</target>
        </trans-unit>
        <trans-unit id="3223bbe1b5816cc02e60c8825871315c2440d5c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/ctest_run_script#command:ctest_run_script&quot; id=&quot;index-0-command:ctest_run_script&quot;&gt;&lt;code&gt;ctest_run_script()&lt;/code&gt;&lt;/a&gt; (unless &lt;code&gt;NEW_PROCESS&lt;/code&gt; is specified)</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_run_script#command:ctest_run_script&quot; id=&quot;index-0-command:ctest_run_script&quot;&gt; &lt;code&gt;ctest_run_script()&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;NEW_PROCESS&lt;/code&gt; 가 아닌 경우 ) 가 지정 경우)</target>
        </trans-unit>
        <trans-unit id="c7a77d7f46ea79d2dfa83e8159e3fc4a7532c4dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; does not populate package registry by default.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 는 기본적으로 패키지 레지스트리를 채우지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8baf770d37ded347a834c61ffd9590d514886965" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command except the last one.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt;마지막 하나를 제외한 export () 명령.</target>
        </trans-unit>
        <trans-unit id="2a251e1d9c85dce1391ee7f664bf8fbc0d41dae1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; uses &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables.</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 변수를사용합니다.</target>
        </trans-unit>
        <trans-unit id="8672185cb381586ec3fc2225d233acba28ce8a9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; requires permission to execute but not to read.</source>
          <target state="translated">&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; 에는 실행 권한이 필요하지만 읽을 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="8eb32210a30a95463b6027ecfa66cb9b2a4726c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; recognizes numbers and boolean constants.</source>
          <target state="translated">&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 는 숫자와 부울 상수를 인식합니다.</target>
        </trans-unit>
        <trans-unit id="c8512943169482b1f18d3e736f8413699b1bed8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt; support generator expressions.</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; &lt;/a&gt; 은 생성기 표현식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b46e7c0bb5f5a88f1e5138d0ee5b115cc8d9ec21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-0-command:link_directories&quot;&gt;&lt;code&gt;link_directories()&lt;/code&gt;&lt;/a&gt; treats paths relative to the source dir.</source>
          <target state="translated">&lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-0-command:link_directories&quot;&gt; &lt;code&gt;link_directories()&lt;/code&gt; &lt;/a&gt; 는 소스 디렉토리에 상대적인 경로를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="aa21b8494ccda1e74f93c78802d09673c180388c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; honors normal variables.</source>
          <target state="translated">&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt; 은 일반 변수를 존중합니다.</target>
        </trans-unit>
        <trans-unit id="8064f355edddd2b20c5dbeed3a20379aeaf06a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; for target-specific settings</source>
          <target state="translated">&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt;타겟 별 설정을위한 target_compile_options ()</target>
        </trans-unit>
        <trans-unit id="80321901a74e5bc9d0b0aee971534f199e063beb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; now honors &lt;code&gt;BEFORE&lt;/code&gt; keyword in all scopes.</source>
          <target state="translated">&lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt; 이제모든 범위에서 &lt;code&gt;BEFORE&lt;/code&gt; 키워드를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="2a53fa33386969de401d3ba1d583f4a790025b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; allows use with targets in other directories.</source>
          <target state="translated">&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 사용하면 다른 디렉토리의 대상과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b59f542ffa8adbc6bac21b7760343679a68a36f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; reports error if its only argument is not a target.</source>
          <target state="translated">&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 는 유일한 인수가 대상이 아닌 경우 오류를보고합니다.</target>
        </trans-unit>
        <trans-unit id="25840c218a5e1cf5f2f857b6ae2e6172788e0b4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; for library files and executables require that their location on disk is specified in a target property such as &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/imported_implib#prop_tgt:IMPORTED_IMPLIB&quot; id=&quot;index-0-prop_tgt:IMPORTED_IMPLIB&quot;&gt;&lt;code&gt;IMPORTED_IMPLIB&lt;/code&gt;&lt;/a&gt;, or a per-configuration equivalent. If a needed location property is not set, CMake 3.18 and below generate the string &lt;code&gt;&amp;lt;TARGET_NAME&amp;gt;-NOTFOUND&lt;/code&gt; in its place, which results in failures of the corresponding rules at build time. CMake 3.19 and above prefer instead to raise an error during generation. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;&lt;/a&gt;라이브러리 파일 및 실행 파일에 대해 가져온 대상 을 사용하려면 디스크에서의 해당 위치가 &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/imported_implib#prop_tgt:IMPORTED_IMPLIB&quot; id=&quot;index-0-prop_tgt:IMPORTED_IMPLIB&quot;&gt; &lt;code&gt;IMPORTED_IMPLIB&lt;/code&gt; &lt;/a&gt; 또는 이와 동등한 구성 별 속성과 같은 대상 속성에 지정되어야합니다 . 필요한 위치 속성이 설정되지 않은 경우 CMake 3.18 이하 에서는 그 자리에 &lt;code&gt;&amp;lt;TARGET_NAME&amp;gt;-NOTFOUND&lt;/code&gt; 문자열을 생성하여 빌드시 해당 규칙이 실패합니다. CMake 3.19 이상은 대신 생성 중에 오류를 발생시키는 것을 선호합니다. 이 정책은 새로운 동작을 예상하도록 업데이트되지 않은 프로젝트에 대한 호환성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0402cccaa62e4e277de4903d23fea54347691c23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt; may be listed among the targets to install. They install no artifacts but will be included in an associated &lt;code&gt;EXPORT&lt;/code&gt;. If &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; are listed but given no destination for their object files, they will be exported as &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt;. This is sufficient to satisfy transitive usage requirements of other targets that link to the object libraries in their implementation.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;&lt;/a&gt;설치할 대상 중 인터페이스 라이브러리 가 나열 될 수 있습니다. 아티팩트를 설치하지 않지만 연관된 &lt;code&gt;EXPORT&lt;/code&gt; 에 포함됩니다 . &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;객체 라이브러리&lt;/a&gt; 가 나열되어 있지만 객체 파일의 대상이없는 경우 &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;인터페이스 라이브러리&lt;/a&gt; 로 내보내집니다. . 이는 구현시 오브젝트 라이브러리에 링크되는 다른 대상의 전 이적 사용 요구 사항을 충족시키기에 충분합니다.</target>
        </trans-unit>
        <trans-unit id="fe9d6456750812ba55577774b2ef1e0d308fd69d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; may &amp;ldquo;link&amp;rdquo; to other object libraries to get usage requirements, but since they do not have a link step nothing is done with their object files. Continuing from the above example, the code:</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;객체 라이브러리&lt;/a&gt; 는 사용 요구 사항을 얻기 위해 다른 객체 라이브러리에 &quot;링크&quot;할 수 있지만 링크 단계가 없기 때문에 객체 파일에 대해서는 아무 것도 수행되지 않습니다. 위 예제에서 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="524c45fd685f605728c30b8bd7b304c3fa80a2a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; may be used as the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; (first) argument of &lt;code&gt;target_link_libraries&lt;/code&gt; to specify dependencies of their sources on other libraries. For example, the code</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; 는 &lt;code&gt;target_link_libraries&lt;/code&gt; 의 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; (첫 번째) 인수 로 사용되어 다른 라이브러리에 대한 소스의 종속성을 지정할 수 있습니다. 예를 들어, 코드</target>
        </trans-unit>
        <trans-unit id="7a9a567357faf8306c7dc1b6bf43859d812681f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; under &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; have special handling if multiple architectures are listed in &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt;. In this case they will be exported as &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt; with no object files available to clients. This is sufficient to satisfy transitive usage requirements of other targets that link to the object libraries in their implementation.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;개체 라이브러리&lt;/a&gt; 에서 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 여러 아키텍처가 나열되는 경우 특별한 처리가 &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; &lt;/a&gt; . 이 경우 클라이언트가 사용할 수있는 객체 파일이없는 &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;인터페이스 라이브러리&lt;/a&gt; 로 내보내집니다 . 이는 구현시 오브젝트 라이브러리에 링크되는 다른 대상의 전 이적 사용 요구 사항을 충족시키기에 충분합니다.</target>
        </trans-unit>
        <trans-unit id="058d74f9ba4a2d8de30474f1be5150954282f2f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; under &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; have special handling if multiple architectures are listed in &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt;. In this case they will be exported as &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt; with no object files available to clients. This is sufficient to satisfy transitive usage requirements of other targets that link to the object libraries in their implementation.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; 에&lt;/a&gt; 여러 아키텍처가 나열된 경우 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 아래의 개체 라이브러리 는 특수 처리를합니다 . 이 경우 클라이언트에서 사용할 수있는 개체 파일이없는 &lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;인터페이스 라이브러리&lt;/a&gt; 로 내보내집니다 . 이는 구현시 개체 라이브러리에 연결되는 다른 대상의 전 이적 사용 요구 사항을 충족하기에 충분합니다.</target>
        </trans-unit>
        <trans-unit id="514bfdf7a55c9f768e451237fbe4f523324d1e33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;Generator expressions&lt;/code&gt;&lt;/a&gt; are supported.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;Generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f5391559cdbb3fc4f12dd4e9d6603113733f64e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator prefix compiler commands with the given launcher command line. This is intended to allow launchers to intercept build problems with high granularity. Other generators ignore this property because their underlying build systems provide no hook to wrap individual commands with a launcher.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;&lt;/a&gt;지정된 런처 명령 행이있는 Makefile 생성기 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기 접 두부 컴파일러 명령 이것은 발사기가 높은 세분성으로 빌드 문제를 가로 챌 수 있도록하기위한 것입니다. 다른 생성기는 기본 빌드 시스템이 개별 명령을 실행기로 감싸는 후크를 제공하지 않으므로이 특성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="1e196d580fe9a48dfd83752babe24b4f4ea744fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator prefix custom commands with the given launcher command line. This is intended to allow launchers to intercept build problems with high granularity. Other generators ignore this property because their underlying build systems provide no hook to wrap individual commands with a launcher.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기에는 제공된 실행기 명령 행이있는 사용자 정의 명령 접 두부가 있습니다. 이것은 발사기가 높은 세분성으로 빌드 문제를 가로 챌 수 있도록하기위한 것입니다. 다른 생성기는 기본 빌드 시스템이 개별 명령을 실행기로 감싸는 후크를 제공하지 않으므로이 특성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="bf440dfbf7e06ef500a49031f6cc6e92781e491e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator prefix link and archive commands with the given launcher command line. This is intended to allow launchers to intercept build problems with high granularity. Other generators ignore this property because their underlying build systems provide no hook to wrap individual commands with a launcher.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기 접두사는 주어진 실행기 명령 행과 명령을 링크 및 아카이브합니다. 이것은 발사기가 높은 세분성으로 빌드 문제를 가로 챌 수 있도록하기위한 것입니다. 다른 생성기는 기본 빌드 시스템이 개별 명령을 실행기로 감싸는 후크를 제공하지 않으므로이 특성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="81a16fd01dccd1b6d8c3e8b3909788adea1ff015" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator prefix compiler commands with the given launcher command line. This is intended to allow launchers to intercept build problems with high granularity. Other generators ignore this property because their underlying build systems provide no hook to wrap individual commands with a launcher.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기 프리픽스 컴파일러 명령과 지정된 실행기 명령 줄. 이는 런처가 세분화 된 빌드 문제를 가로 챌 수 있도록하기위한 것입니다. 다른 생성기는 기본 빌드 시스템이 실행기로 개별 명령을 래핑하는 후크를 제공하지 않기 때문에이 속성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="ff7166408ea55eb5c13d01537fd3f5c54443fb87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator prefix custom commands with the given launcher command line. This is intended to allow launchers to intercept build problems with high granularity. Other generators ignore this property because their underlying build systems provide no hook to wrap individual commands with a launcher.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기는 지정된 실행기 명령 줄을 사용자 정의 명령 접두사로 사용합니다. 이는 런처가 세분화 된 빌드 문제를 가로 챌 수 있도록하기위한 것입니다. 다른 생성기는 기본 빌드 시스템이 실행기로 개별 명령을 래핑하는 후크를 제공하지 않기 때문에이 속성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="7f865ededf6a4082d94f9cf8aaed5420f16263d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator prefix link and archive commands with the given launcher command line. This is intended to allow launchers to intercept build problems with high granularity. Other generators ignore this property because their underlying build systems provide no hook to wrap individual commands with a launcher.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기 접두사 링크 및 아카이브 명령은 지정된 실행기 명령 줄과 함께 사용됩니다. 이는 런처가 세분화 된 빌드 문제를 가로 챌 수 있도록하기위한 것입니다. 다른 생성기는 기본 빌드 시스템이 실행기로 개별 명령을 래핑하는 후크를 제공하지 않기 때문에이 속성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="2b503439fa5f4f68a61734936b0028c621b81ea0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; do not repeat custom commands from target dependencies.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 는 대상 종속성에서 사용자 지정 명령을 반복하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="58ad2b6db6e3eabc91722efdaa94d423b8681d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;&lt;/a&gt;VS 2010 이상의 Visual Studio 생성기</target>
        </trans-unit>
        <trans-unit id="8d3f1fa232e6efe86f6283ecdf027946dce3ecde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of libraries for OpenMP programs for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;- &lt;/a&gt; &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 의 OpenMP 프로그램 용 라이브러리 목록 .</target>
        </trans-unit>
        <trans-unit id="39137ca77a3b379cde6f4c3595fa8de129285ece" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; list of macro names used by &lt;a href=&quot;cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt;&lt;/a&gt; to determine if a C++ file needs to be processed by &lt;code&gt;moc&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;moc&lt;/code&gt; 가 C ++ 파일을 처리 해야하는지 여부 를 결정하기 위해 세미콜론으로 구분 된 매크로 이름 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="99682fe850ca3703f995afa8da4d0972796c3a10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for CMake modules to be loaded by the &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands before checking the default modules that come with CMake. By default it is empty, it is intended to be set by the project.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;CMake 와 함께 제공되는 기본 모듈을 확인하기 전에 &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 으로로드 할 CMake 모듈의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 . 기본적으로 비어 있으며 프로젝트에서 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5106e256f1ad9fc4ba5fb044618d159a3f96e999" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for macOS application bundles used by the &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령에서 사용하는 macOS 응용 프로그램 번들의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 .</target>
        </trans-unit>
        <trans-unit id="a1977ee25fa368f1a04a28eef25e4913da6b6a00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for macOS frameworks used by the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt; 명령에서 사용되는 macOS 프레임 워크의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 .</target>
        </trans-unit>
        <trans-unit id="6d4dd04d57356d66d621d50d07774ba2426ea4ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for the &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; commands. By default it is empty, it is intended to be set by the project. See also &lt;a href=&quot;cmake_system_include_path#variable:CMAKE_SYSTEM_INCLUDE_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_INCLUDE_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_INCLUDE_PATH&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt; 명령 의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 . 기본적으로 비어 있으며 프로젝트에서 설정합니다. &lt;a href=&quot;cmake_system_include_path#variable:CMAKE_SYSTEM_INCLUDE_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_INCLUDE_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_INCLUDE_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3db2c85dba76b8ab8e507a88c96626bbb8b25441" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for the &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; commands. By default this contains the standard directories for the current system. It is &lt;em&gt;not&lt;/em&gt; intended to be modified by the project; use &lt;a href=&quot;cmake_include_path#variable:CMAKE_INCLUDE_PATH&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_PATH&quot;&gt;&lt;code&gt;CMAKE_INCLUDE_PATH&lt;/code&gt;&lt;/a&gt; for this. See also &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt; 명령 의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 . 기본적으로 여기에는 현재 시스템의 표준 디렉토리가 포함됩니다. 프로젝트에 의해 수정 &lt;em&gt;되지&lt;/em&gt; 는 &lt;em&gt;않습니다&lt;/em&gt; . 이를 위해 &lt;a href=&quot;cmake_include_path#variable:CMAKE_INCLUDE_PATH&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_PATH&quot;&gt; &lt;code&gt;CMAKE_INCLUDE_PATH&lt;/code&gt; &lt;/a&gt; 를 사용 하십시오. &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ca0e82658b00b985152d95aa110ff539a58c628" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command. By default it is empty, it is intended to be set by the project. See also &lt;a href=&quot;cmake_system_library_path#variable:CMAKE_SYSTEM_LIBRARY_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_LIBRARY_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령 의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 . 기본적으로 비어 있으며 프로젝트에서 설정합니다. &lt;a href=&quot;cmake_system_library_path#variable:CMAKE_SYSTEM_LIBRARY_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_LIBRARY_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d4b4bcc3e39b1b3f740eefbd222f6478a72b77d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command. By default this contains the standard directories for the current system. It is &lt;em&gt;not&lt;/em&gt; intended to be modified by the project; use &lt;a href=&quot;cmake_library_path#variable:CMAKE_LIBRARY_PATH&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_PATH&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_PATH&lt;/code&gt;&lt;/a&gt; for this. See also &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령 의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 . 기본적으로 여기에는 현재 시스템의 표준 디렉토리가 포함됩니다. 프로젝트에 의해 수정 &lt;em&gt;되지&lt;/em&gt; 는 &lt;em&gt;않습니다&lt;/em&gt; . 이를 위해 &lt;a href=&quot;cmake_library_path#variable:CMAKE_LIBRARY_PATH&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_PATH&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_PATH&lt;/code&gt; &lt;/a&gt; 를 사용 하십시오. &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5fc77fd8c7ce48a37c7d3eb3e40e70d15a5692c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for the &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; command. By default it is empty, it is intended to be set by the project. See also &lt;a href=&quot;cmake_system_program_path#variable:CMAKE_SYSTEM_PROGRAM_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PROGRAM_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PROGRAM_PATH&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; 명령 의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 . 기본적으로 비어 있으며 프로젝트에서 설정합니다. &lt;a href=&quot;cmake_system_program_path#variable:CMAKE_SYSTEM_PROGRAM_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PROGRAM_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PROGRAM_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c98d2136510831cf644326bb78f96e6d7da1dfb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying a search path for the &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt; command. By default this contains the standard directories for the current system. It is &lt;em&gt;not&lt;/em&gt; intended to be modified by the project; use &lt;a href=&quot;cmake_program_path#variable:CMAKE_PROGRAM_PATH&quot; id=&quot;index-0-variable:CMAKE_PROGRAM_PATH&quot;&gt;&lt;code&gt;CMAKE_PROGRAM_PATH&lt;/code&gt;&lt;/a&gt; for this. See also &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; 명령 의 검색 경로를 지정하는 세미콜론으로 구분 된 디렉토리 목록 . 기본적으로 여기에는 현재 시스템의 표준 디렉토리가 포함됩니다. 프로젝트에 의해 수정 &lt;em&gt;되지&lt;/em&gt; 는 &lt;em&gt;않습니다&lt;/em&gt; . 이를 위해 &lt;a href=&quot;cmake_program_path#variable:CMAKE_PROGRAM_PATH&quot; id=&quot;index-0-variable:CMAKE_PROGRAM_PATH&quot;&gt; &lt;code&gt;CMAKE_PROGRAM_PATH&lt;/code&gt; &lt;/a&gt; 를 사용 하십시오. &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae90892fa676938cdb5dbddfd6225f05cf18bd7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories specifying installation &lt;em&gt;prefixes&lt;/em&gt; to be searched by the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; commands. Each command will add appropriate subdirectories (like &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, or &lt;code&gt;include&lt;/code&gt;) as specified in its own documentation.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt; 명령 으로 검색 할 설치 접&lt;em&gt; 두부&lt;/em&gt; 를 지정하는 세미콜론으로 구분 된 디렉토리 목록 입니다 . 각 명령은 자체 설명서에 지정된대로 적절한 하위 디렉토리 (예 : &lt;code&gt;bin&lt;/code&gt; , &lt;code&gt;lib&lt;/code&gt; 또는 &lt;code&gt;include&lt;/code&gt; )를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b981b23c2fec8c811ea4a94321e09f846045e27b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of directories to be &lt;em&gt;ignored&lt;/em&gt; by the &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; commands. This is useful in cross-compiling environments where some system directories contain incompatible but possibly linkable libraries. For example, on cross-compiled cluster environments, this allows a user to ignore directories containing libraries meant for the front-end machine.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;&lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt; 명령에 의해 &lt;em&gt;무시&lt;/em&gt; 될 세미콜론으로 구분 된 디렉토리 목록 . 이는 일부 시스템 디렉토리에 호환되지 않지만 링크 가능한 라이브러리가 포함 된 크로스 컴파일 환경에서 유용합니다. 예를 들어, 크로스 컴파일 된 클러스터 환경에서 사용자는 프런트 엔드 시스템 용 라이브러리가 포함 된 디렉토리를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbb24a9475fe44aec73c02e5170e8dbfbbd25d90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; of root paths to search on the filesystem.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;파일 시스템에서 검색 할 세미콜론으로 구분 된 루트 경로 목록 입니다.</target>
        </trans-unit>
        <trans-unit id="6e41b59bd1d725e8f3b17a696af66adf285ce49b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;Semicolon-separated list&lt;/a&gt; specifying runtime path (&lt;code&gt;RPATH&lt;/code&gt;) entries to add to binaries linked in the build tree (for platforms that support it). The entries will &lt;em&gt;not&lt;/em&gt; be used for binaries in the install tree. See also the &lt;a href=&quot;cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;&lt;/a&gt;빌드 트리에 링크 된 바이너리에 추가 할 런타임 경로 ( &lt;code&gt;RPATH&lt;/code&gt; ) 항목을 지정하는 세미콜론으로 구분 된 목록 (이를 지원하는 플랫폼의 경우). 설치 트리의 바이너리에는 항목이 사용 &lt;em&gt;되지 않습니다&lt;/em&gt; . &lt;a href=&quot;cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0235f1c38f4d9ec8f5a4f4592a591ad983a2d51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-2-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; runs</source>
          <target state="translated">&lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-2-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt; 실행</target>
        </trans-unit>
        <trans-unit id="500ce422b3e287f366da09d485546625350bef54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-0-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; cannot be included at configure time.</source>
          <target state="translated">&lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-0-module:BundleUtilities&quot;&gt; &lt;code&gt;BundleUtilities&lt;/code&gt; &lt;/a&gt;구성시 번들 유틸리티 를 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9482be2d900493c595af9055a255be1b91612d87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-1-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;a href=&quot;../variable/project_binary_dir#variable:PROJECT_BINARY_DIR&quot; id=&quot;index-0-variable:PROJECT_BINARY_DIR&quot;&gt;&lt;code&gt;PROJECT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-1-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 :&lt;a href=&quot;../variable/project_binary_dir#variable:PROJECT_BINARY_DIR&quot; id=&quot;index-0-variable:PROJECT_BINARY_DIR&quot;&gt; &lt;code&gt;PROJECT_BINARY_DIR&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3725c15aee1e0c3a4fb7f871bbe2b5a0a4f2794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-10-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;GIT_UPDATE_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-10-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;GIT_UPDATE_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6688d8206f32cc0d55db368ba0bc992f57f11d4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-11-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: none</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-11-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : none</target>
        </trans-unit>
        <trans-unit id="4358c4d8d457a52844c196b64d27f35c2250f1d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-12-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: none</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-12-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : none</target>
        </trans-unit>
        <trans-unit id="6d98c94e1a5c20d8abffd0e32cd0fda237c3efac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-13-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_P4_CLIENT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-13-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_P4_CLIENT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62627bc2cbea359468190b3f8ce64b5444a4ff78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-14-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;P4COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-14-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;P4COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cfb4bbaee4de6c6d2467e51f7413221c69fb4d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-15-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_P4_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-15-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_P4_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1231f14ee1fde6d03f39ef711cb8f12592f63d2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-16-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_P4_UPDATE_CUSTOM&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-16-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_P4_UPDATE_CUSTOM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="517b41af0fdf04609020f012b426b1c36859afc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-17-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_P4_UPDATE_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-17-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_P4_UPDATE_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80dd40328b429b19e7334a4c622653c5bcac3480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-18-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SVNCOMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-18-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;SVNCOMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="526ead0b454503e8e3a9c29885ec9382db5a4686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-19-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_SVN_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-19-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_SVN_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d49d1fbb21f12a78b587db1e6f462e67c319ad4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-2-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;a href=&quot;../variable/project_source_dir#variable:PROJECT_SOURCE_DIR&quot; id=&quot;index-0-variable:PROJECT_SOURCE_DIR&quot;&gt;&lt;code&gt;PROJECT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-2-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 :&lt;a href=&quot;../variable/project_source_dir#variable:PROJECT_SOURCE_DIR&quot; id=&quot;index-0-variable:PROJECT_SOURCE_DIR&quot;&gt; &lt;code&gt;PROJECT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee7ca482748d290763c510907a38d00b0c044fa7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-20-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SVN_UPDATE_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-20-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;SVN_UPDATE_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f48ab00a68f48d2cf728f6880c6c31f51921ad84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-21-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;&amp;lt;VCS&amp;gt;COMMAND&lt;/code&gt; when &lt;code&gt;UPDATE_TYPE&lt;/code&gt; is &lt;code&gt;&amp;lt;vcs&amp;gt;&lt;/code&gt;, else &lt;code&gt;UPDATE_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-21-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;&amp;lt;VCS&amp;gt;COMMAND&lt;/code&gt; &lt;code&gt;UPDATE_TYPE&lt;/code&gt; 이 &lt;code&gt;&amp;lt;vcs&amp;gt;&lt;/code&gt; 일때, 그렇지 않으면 &lt;code&gt;UPDATE_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7d7bcce7b437d364cf20265a3e3cec58a0f0872" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-22-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;&amp;lt;VCS&amp;gt;_UPDATE_OPTIONS&lt;/code&gt; when &lt;code&gt;UPDATE_TYPE&lt;/code&gt; is &lt;code&gt;&amp;lt;vcs&amp;gt;&lt;/code&gt;, else &lt;code&gt;UPDATE_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-22-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;&amp;lt;VCS&amp;gt;_UPDATE_OPTIONS&lt;/code&gt; &lt;code&gt;UPDATE_TYPE&lt;/code&gt; 가 있다 &lt;code&gt;&amp;lt;vcs&amp;gt;&lt;/code&gt; , 다른 &lt;code&gt;UPDATE_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0848fa2694089edef2a619e92d18a6f78b295d6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-23-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;UPDATE_TYPE&lt;/code&gt; if set, else &lt;code&gt;CTEST_UPDATE_TYPE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-23-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;UPDATE_TYPE&lt;/code&gt; ( 설정된 경우), 그렇지 않으면 &lt;code&gt;CTEST_UPDATE_TYPE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e1cd06eaacfc3db0f4c6f4afd05389542e05006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-24-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;NIGHTLY_START_TIME&lt;/code&gt; if set, else &lt;code&gt;CTEST_NIGHTLY_START_TIME&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-24-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;NIGHTLY_START_TIME&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_NIGHTLY_START_TIME&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3bb251257f6a304e80313575ce924271e0bb7d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-25-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;a href=&quot;../variable/cmake_command#variable:CMAKE_COMMAND&quot; id=&quot;index-0-variable:CMAKE_COMMAND&quot;&gt;&lt;code&gt;CMAKE_COMMAND&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;../variable/project_source_dir#variable:PROJECT_SOURCE_DIR&quot; id=&quot;index-1-variable:PROJECT_SOURCE_DIR&quot;&gt;&lt;code&gt;PROJECT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-25-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 :&lt;a href=&quot;../variable/cmake_command#variable:CMAKE_COMMAND&quot; id=&quot;index-0-variable:CMAKE_COMMAND&quot;&gt; &lt;code&gt;CMAKE_COMMAND&lt;/code&gt; 는&lt;/a&gt; 다음&lt;a href=&quot;../variable/project_source_dir#variable:PROJECT_SOURCE_DIR&quot; id=&quot;index-1-variable:PROJECT_SOURCE_DIR&quot;&gt; &lt;code&gt;PROJECT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e4fde5687b22b6af0cd69e990b5c1bc1a232809" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-26-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-26-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78a2a941ca4cb3b75f56f5abd2f1979572e8478e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-27-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DEFAULT_CTEST_CONFIGURATION_TYPE&lt;/code&gt;, initialized by the &lt;a href=&quot;../envvar/cmake_config_type#envvar:CMAKE_CONFIG_TYPE&quot; id=&quot;index-0-envvar:CMAKE_CONFIG_TYPE&quot;&gt;&lt;code&gt;CMAKE_CONFIG_TYPE&lt;/code&gt;&lt;/a&gt; environment variable</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-27-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;DEFAULT_CTEST_CONFIGURATION_TYPE&lt;/code&gt; ,&lt;a href=&quot;../envvar/cmake_config_type#envvar:CMAKE_CONFIG_TYPE&quot; id=&quot;index-0-envvar:CMAKE_CONFIG_TYPE&quot;&gt; &lt;code&gt;CMAKE_CONFIG_TYPE&lt;/code&gt; &lt;/a&gt; 환경 변수로초기화</target>
        </trans-unit>
        <trans-unit id="52745cd3957297a4bb41234dfc18a26f2b9c2a75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-28-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-28-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47c6448c21333243aa8dbc5077e35d24f027c05c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-29-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MAKECOMMAND&lt;/code&gt;, initialized by the &lt;a href=&quot;../command/build_command#command:build_command&quot; id=&quot;index-0-command:build_command&quot;&gt;&lt;code&gt;build_command()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-29-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;MAKECOMMAND&lt;/code&gt; 상기 초기화&lt;a href=&quot;../command/build_command#command:build_command&quot; id=&quot;index-0-command:build_command&quot;&gt; &lt;code&gt;build_command()&lt;/code&gt; &lt;/a&gt; 명령</target>
        </trans-unit>
        <trans-unit id="d0137f87d602ede7f5ce9b2b960d25c46de39284" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-3-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: none</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-3-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : none</target>
        </trans-unit>
        <trans-unit id="b61f30dda08d17018c9d485a4064d4c3cee92bb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-31-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-31-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec68eb9eb125cd22d336d3c86bb1f01e3a3f1a07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-32-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-32-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16438e88cdeb178be51f5a62804a34a1b7d3cf09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-32-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-32-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_RESOURCE_SPEC_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d5d610cf399274fac61b8a305d5122ed8a143bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-33-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-33-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_LABELS_FOR_SUBPROJECTS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70913847d06e987d124ae5acde5d4003ae9f515c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-33-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-33-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0cba914a43a51983051d1005c1419527fb2f8c21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-34-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-34-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2de96aaa6260824b8402453fbf4019046df50458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-34-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DART_TESTING_TIMEOUT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-34-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DART_TESTING_TIMEOUT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8fe78e4985f95fe41c0f2417f04f318b1508d4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-35-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;COVERAGE_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-35-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;COVERAGE_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17d6f7393a3420f70b6194a5c334746ecf084e2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-35-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DART_TESTING_TIMEOUT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-35-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DART_TESTING_TIMEOUT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2ccf000837f5c5480c5faba8dd4a2ec4bfc69c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-36-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;COVERAGE_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-36-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;COVERAGE_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f737b8a12b02192e9ce41452da41ae76961900f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-36-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;COVERAGE_EXTRA_FLAGS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-36-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;COVERAGE_EXTRA_FLAGS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a668323cf3efa6573d25f0131144793c7dde10ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-37-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;COVERAGE_EXTRA_FLAGS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-37-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;COVERAGE_EXTRA_FLAGS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="646965be26ec2e6813596129700d804c1dc080c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-37-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-37-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2b9cd365b14dce55c1fd1fa77e26eea0b60c3a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-38-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-38-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c16418aada8406a5a21ec793c97fc3cd5c0656a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-38-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_COMMAND_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-38-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_COMMAND_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9699471f401167e71e8803a4149e067c3feac521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-39-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_COMMAND_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-39-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_COMMAND_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cbbba46b21886508b0d9b495c7a312a3330b23c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-39-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_TYPE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-39-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_TYPE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c83bea70e394b2052cbaebffba76a2f99f8b02f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-4-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: none</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-4-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : none</target>
        </trans-unit>
        <trans-unit id="e314d64d9a90558e6872615bdfbe1cc58a7a589d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-40-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_SANITIZER_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-40-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_SANITIZER_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4db46302c9965f453b362ffaba65550c004af0c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-40-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_TYPE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-40-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_TYPE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52dc8591aef4042a62ac399f0eaca375f1a6bd1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-41-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_SANITIZER_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-41-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_SANITIZER_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="568ef4e39c36ac92b1866c5dd4aab4e1f0696fd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-41-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_SUPPRESSIONS_FILE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-41-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_SUPPRESSIONS_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb0c6fcd6b6a87e14b6dd07bbdb966b936a0c8a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-42-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;MEMORYCHECK_SUPPRESSIONS_FILE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-42-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;MEMORYCHECK_SUPPRESSIONS_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae0367e0f166feee19d3fa7dac259e79fa341755" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-42-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: none</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-42-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : none</target>
        </trans-unit>
        <trans-unit id="377056064c8ede3d496524dd65ab3f8c4c0132ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-43-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;PURIFYCOMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-43-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;PURIFYCOMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="039ca32f0841d58f3fe00db81293309ff7c8539d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-43-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: none</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-43-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : 없음</target>
        </trans-unit>
        <trans-unit id="197413afd4796466701e2e4fa51c5a8904cb04f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-44-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;PURIFYCOMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-44-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;PURIFYCOMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a843e3a69b062c9dc22d2fb070f6b9320bf2786" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-44-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;VALGRIND_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-44-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;VALGRIND_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b215aad0b1073188e7cf202a98f10f91e6c3244" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-45-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;VALGRIND_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-45-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;VALGRIND_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="539c9a1b09b131175e020c73919c549a4469ca99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-45-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;VALGRIND_COMMAND_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-45-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;VALGRIND_COMMAND_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ad4eb3e698c8da583d360bbf89910076d444a62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-46-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;BUILDNAME&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-46-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;BUILDNAME&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc0b1d28a9b6eb9d3f112600486a0bcbb2356721" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-46-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;VALGRIND_COMMAND_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-46-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;VALGRIND_COMMAND_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e24ee363afb8a5bea471654781d97f841e728ba2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-47-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_CDASH_VERSION&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-47-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_CDASH_VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b76ce52ea49e9f65f75d8c1f2f6261c27dfaff0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-47-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DRMEMORY_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-47-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DRMEMORY_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28463f70f0313d5e19905cb3b0648a6ccca55e54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-48-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_SUBMIT_RETRY_COUNT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-48-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_SUBMIT_RETRY_COUNT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e88860c8ea7ccfbfaa7c8a3c40b41db5301a7ba2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-48-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DRMEMORY_COMMAND_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-48-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DRMEMORY_COMMAND_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9cf98271346e91a47dc3c7eae22a59bd432238e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-49-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_SUBMIT_RETRY_DELAY&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-49-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_SUBMIT_RETRY_DELAY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="974c21acf2d916907b501fc14cb2c4f3811ca437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-49-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CUDA_MEMCHECK_COMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-49-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CUDA_MEMCHECK_COMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5beebe7325fb6c4103e87a09fe765be8417140a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-5-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CVSCOMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-5-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CVSCOMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d65d3df0880de6a6d554285d1a835e5efaf6992" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-50-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_CURL_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-50-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_CURL_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="226fa33107dd6d72ed99b574264b606d56ddab28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-50-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CUDA_MEMCHECK_COMMAND_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-50-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CUDA_MEMCHECK_COMMAND_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f75add2c5ae3c7b66a238147d78681ee2d88aeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-51-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;BUILDNAME&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-51-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;BUILDNAME&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9624c636c9cb3dfd024cbe4b516da26fcd0cc0f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-51-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_LOCATION&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_LOCATION&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-51-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_LOCATION&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_LOCATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="419323f45aa276b35c059741657f89bf8b2c0fbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-52-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_CDASH_VERSION&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-52-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_CDASH_VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27a0f7df6182cf6e5df7be0234b77343c5e73c89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-52-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_METHOD&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_METHOD&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-52-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_METHOD&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_METHOD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6c05a598feb5a2453b1296a59c86860b774dd2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-53-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_SUBMIT_RETRY_COUNT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-53-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_SUBMIT_RETRY_COUNT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="127a0ffe0569dd88675591bedb7fcf0e178e7f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-53-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_SITE&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_SITE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-53-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_SITE&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_SITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4864301efcd01301ad730aa113a51614e0625f88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-54-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_SUBMIT_RETRY_DELAY&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-54-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_SUBMIT_RETRY_DELAY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2adde131ffc85a4d5ccd93666a28cc26b71fe7ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-54-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_SITE_PASSWORD&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_SITE_PASWORD&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-54-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_SITE_PASSWORD&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_SITE_PASWORD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e93094b2e591ca24dcf85fd7785e9d4f86bedfce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-55-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_CURL_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-55-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_CURL_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f7d620dc194a662a1da67084d9dce6eba456fee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-55-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_SITE_USER&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_SITE_USER&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-55-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_SITE_USER&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_SITE_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffa2948786435d98c42d94947687e089958d2bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-56-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_DROP_SITE_CDASH&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-56-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_DROP_SITE_CDASH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74d5cdfc96747eba3a9e194c2b48c28a8426a859" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-56-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_LOCATION&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_LOCATION&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-56-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_LOCATION&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_LOCATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1fd8f50a704fa2a80cdfb12a7a9abe8e34555a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-57-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_METHOD&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_METHOD&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-57-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_METHOD&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_METHOD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ef6d2081d817e1368c5682d36a8744d853e30e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-57-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SCPCOMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-57-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;SCPCOMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="168b5badec499ff1d0c53ceecda33d6127152c54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-58-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_SITE&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_SITE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-58-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_SITE&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_SITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fc933782c63e65cc092d3c8783bad03abbd7b8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-58-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SITE&lt;/code&gt;, initialized by the &lt;a href=&quot;../command/site_name#command:site_name&quot; id=&quot;index-0-command:site_name&quot;&gt;&lt;code&gt;site_name()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-58-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;SITE&lt;/code&gt; 상기 초기화&lt;a href=&quot;../command/site_name#command:site_name&quot; id=&quot;index-0-command:site_name&quot;&gt; &lt;code&gt;site_name()&lt;/code&gt; &lt;/a&gt; 명령</target>
        </trans-unit>
        <trans-unit id="79cbe81874b5c5a3ea7ee69022eeef6dd0644cd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-59-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_SITE_PASSWORD&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_SITE_PASWORD&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-59-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_SITE_PASSWORD&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_SITE_PASWORD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0332114ffefcfa35a777f0c38932eb12846a0b73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-59-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SUBMIT_URL&lt;/code&gt; if set, else &lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-59-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;SUBMIT_URL&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5db89ba48aa7939309ae3097824198781d166a37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-6-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CVS_UPDATE_OPTIONS&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-6-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CVS_UPDATE_OPTIONS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8eac854ea33c8005f7da61219a8738970569458b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-60-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;DROP_SITE_USER&lt;/code&gt; if set, else &lt;code&gt;CTEST_DROP_SITE_USER&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-60-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;DROP_SITE_USER&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_DROP_SITE_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39cca4dc79f2ca293751d26b1e2cf5bcb70636a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-60-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;TRIGGER_SITE&lt;/code&gt; if set, else &lt;code&gt;CTEST_TRIGGER_SITE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-60-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;TRIGGER_SITE&lt;/code&gt; ( 설정된 경우), 그렇지 않으면 &lt;code&gt;CTEST_TRIGGER_SITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b932b9a4927b6c3962f3c624d4d54800b580279" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-61-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_DROP_SITE_CDASH&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-61-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_DROP_SITE_CDASH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebeaac15ae09baee20d5ce96cbd6c4487aac5b50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-62-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SCPCOMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-62-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;SCPCOMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b792947514866fc4c438a595f4daac8ce3b3db27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-63-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SITE&lt;/code&gt;, initialized by the &lt;a href=&quot;../command/site_name#command:site_name&quot; id=&quot;index-0-command:site_name&quot;&gt;&lt;code&gt;site_name()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-63-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 : &lt;code&gt;SITE&lt;/code&gt; ,&lt;a href=&quot;../command/site_name#command:site_name&quot; id=&quot;index-0-command:site_name&quot;&gt; &lt;code&gt;site_name()&lt;/code&gt; &lt;/a&gt; 명령으로초기화 됨</target>
        </trans-unit>
        <trans-unit id="b0af5132dc302fa3a3e2e7954c40cd26fc94aff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-64-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;SUBMIT_URL&lt;/code&gt; if set, else &lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-64-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;SUBMIT_URL&lt;/code&gt; 설정된 경우, 다른 &lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59eedae83526526a162e0b9e7d4d52c9c0d40218" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-65-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;TRIGGER_SITE&lt;/code&gt; if set, else &lt;code&gt;CTEST_TRIGGER_SITE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-65-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 모듈 변수 :설정된 경우 &lt;code&gt;TRIGGER_SITE&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;CTEST_TRIGGER_SITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6debfaf6b769887a688487b2f3967333fd353310" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-7-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;GITCOMMAND&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-7-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;GITCOMMAND&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a8570e51702e7b05c0863cb7dc0f8d2673a3d80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-8-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_GIT_INIT_SUBMODULES&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-8-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_GIT_INIT_SUBMODULES&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7998bed90bdd18c87d9415f0264a1fee14260257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-9-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module variable: &lt;code&gt;CTEST_GIT_UPDATE_CUSTOM&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-9-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈 변수 : &lt;code&gt;CTEST_GIT_UPDATE_CUSTOM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ca46c92568644b835a16f69dae9cab4057808a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/externalproject#command:externalproject_add&quot; id=&quot;index-0-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;GIT_SUBMODULES &quot;&quot;&lt;/code&gt; initializes no submodules.</source>
          <target state="translated">&lt;a href=&quot;../module/externalproject#command:externalproject_add&quot; id=&quot;index-0-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;GIT_SUBMODULES &quot;&quot;&lt;/code&gt; 를 사용하는 ExternalProject_Add () 는하위 모듈을 초기화하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="262367280068fae782f86c59986c94f6e696ab83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-0-module:ExternalProject&quot;&gt;&lt;code&gt;ExternalProject&lt;/code&gt;&lt;/a&gt; step targets fully adopt their steps.</source>
          <target state="translated">&lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-0-module:ExternalProject&quot;&gt; &lt;code&gt;ExternalProject&lt;/code&gt; &lt;/a&gt; 단계 목표는 단계를 완전히 채택합니다.</target>
        </trans-unit>
        <trans-unit id="81a9948202d20fee948b3682f79efe1e76bcd3c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/findbison#module:FindBISON&quot; id=&quot;index-0-module:FindBISON&quot;&gt;&lt;code&gt;FindBISON&lt;/code&gt;&lt;/a&gt; runs bison in &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; when executing.</source>
          <target state="translated">&lt;a href=&quot;../module/findbison#module:FindBISON&quot; id=&quot;index-0-module:FindBISON&quot;&gt; &lt;code&gt;FindBISON&lt;/code&gt; 는&lt;/a&gt; 에 들소 실행&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 실행할 때.</target>
        </trans-unit>
        <trans-unit id="5208b35085779cc248142e3778a8609b20f15324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-0-module:FindBoost&quot;&gt;&lt;code&gt;FindBoost&lt;/code&gt;&lt;/a&gt; reports &lt;code&gt;Boost_VERSION&lt;/code&gt; in &lt;code&gt;x.y.z&lt;/code&gt; format.</source>
          <target state="translated">&lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-0-module:FindBoost&quot;&gt; &lt;code&gt;FindBoost&lt;/code&gt; 는&lt;/a&gt; 보고 &lt;code&gt;Boost_VERSION&lt;/code&gt; 을 에 &lt;code&gt;x.y.z&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="9b0049e35dda818a18dcbbbe5408ee9092f7eb0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/findflex#module:FindFLEX&quot; id=&quot;index-0-module:FindFLEX&quot;&gt;&lt;code&gt;FindFLEX&lt;/code&gt;&lt;/a&gt; runs &lt;code&gt;flex&lt;/code&gt; in directory &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; when executing.</source>
          <target state="translated">&lt;a href=&quot;../module/findflex#module:FindFLEX&quot; id=&quot;index-0-module:FindFLEX&quot;&gt; &lt;code&gt;FindFLEX&lt;/code&gt; &lt;/a&gt; 는 실행시&lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 디렉터리에서 &lt;code&gt;flex&lt;/code&gt; 를실행합니다.</target>
        </trans-unit>
        <trans-unit id="5ed303a9fc572abfc144ec760b46eb159bb5f108" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/findopengl#module:FindOpenGL&quot; id=&quot;index-0-module:FindOpenGL&quot;&gt;&lt;code&gt;FindOpenGL&lt;/code&gt;&lt;/a&gt; prefers GLVND by default when available.</source>
          <target state="translated">&lt;a href=&quot;../module/findopengl#module:FindOpenGL&quot; id=&quot;index-0-module:FindOpenGL&quot;&gt; &lt;code&gt;FindOpenGL&lt;/code&gt; &lt;/a&gt;사용 가능한 경우 FindOpenGL은 기본적으로 GLVND를 선호합니다.</target>
        </trans-unit>
        <trans-unit id="5835113bdc90b81d65ed03d0e402582b976c1f5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/useswig#module:UseSWIG&quot; id=&quot;index-0-module:UseSWIG&quot;&gt;&lt;code&gt;UseSWIG&lt;/code&gt;&lt;/a&gt; generates standard target names.</source>
          <target state="translated">&lt;a href=&quot;../module/useswig#module:UseSWIG&quot; id=&quot;index-0-module:UseSWIG&quot;&gt; &lt;code&gt;UseSWIG&lt;/code&gt; &lt;/a&gt; 는 표준 대상 이름을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6beddfdcfc25b249a97114bf655e3bc99bedf88f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module/useswig#module:UseSWIG&quot; id=&quot;index-0-module:UseSWIG&quot;&gt;&lt;code&gt;UseSWIG&lt;/code&gt;&lt;/a&gt; honors &lt;code&gt;SWIG_MODULE_NAME&lt;/code&gt; via &lt;code&gt;-module&lt;/code&gt; flag.</source>
          <target state="translated">&lt;a href=&quot;../module/useswig#module:UseSWIG&quot; id=&quot;index-0-module:UseSWIG&quot;&gt; &lt;code&gt;UseSWIG&lt;/code&gt; 의&lt;/a&gt; 명예 &lt;code&gt;SWIG_MODULE_NAME&lt;/code&gt; 를 통해 &lt;code&gt;-module&lt;/code&gt; 플래그.</target>
        </trans-unit>
        <trans-unit id="f9dc394e27aba58059ee3c6bde77d2cf61ec5946" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt;: This global property can be used to group files generated by &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-6-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; together in an IDE, e.g. in MSVS.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt; :이 전역 속성은&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-6-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; 에&lt;/a&gt; 의해 생성 된 파일을IDE (예 : MSVS)에서 함께그룹화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1a0f19553d3bfe04d76fa8b793a6ed22323aad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt;: This global property can be used to group files generated by &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-4-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; together in an IDE, e.g. in MSVS.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt; :이 전역 속성은&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-4-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; 에&lt;/a&gt; 의해 생성 된 파일을IDE (예 : MSVS)에서 함께그룹화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d533f37478d5c23a5ed366bd7ec5caed9c24e190" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_gbl/autogen_targets_folder#prop_gbl:AUTOGEN_TARGETS_FOLDER&quot; id=&quot;index-0-prop_gbl:AUTOGEN_TARGETS_FOLDER&quot;&gt;&lt;code&gt;AUTOGEN_TARGETS_FOLDER&lt;/code&gt;&lt;/a&gt;: This global property can be used to group &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-7-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-2-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; targets together in an IDE, e.g. in MSVS.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/autogen_targets_folder#prop_gbl:AUTOGEN_TARGETS_FOLDER&quot; id=&quot;index-0-prop_gbl:AUTOGEN_TARGETS_FOLDER&quot;&gt; &lt;code&gt;AUTOGEN_TARGETS_FOLDER&lt;/code&gt; &lt;/a&gt; :이 전역 속성은&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-7-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-2-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 대상을 IDE (예 : MSVS)에서 함께그룹화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2bd601748cd3d85f3c58025251a1b0894cd4479" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_gbl/autogen_targets_folder#prop_gbl:AUTOGEN_TARGETS_FOLDER&quot; id=&quot;index-0-prop_gbl:AUTOGEN_TARGETS_FOLDER&quot;&gt;&lt;code&gt;AUTOGEN_TARGETS_FOLDER&lt;/code&gt;&lt;/a&gt;: This global property can be used to group &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-3-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; targets together in an IDE, e.g. in MSVS.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/autogen_targets_folder#prop_gbl:AUTOGEN_TARGETS_FOLDER&quot; id=&quot;index-0-prop_gbl:AUTOGEN_TARGETS_FOLDER&quot;&gt; &lt;code&gt;AUTOGEN_TARGETS_FOLDER&lt;/code&gt; &lt;/a&gt; :이 전역 속성은&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-3-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 대상을 IDE (예 : MSVS)에서 함께그룹화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b3f853be517c749221634b97ede5a20bf49310" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_gbl/autogen_targets_folder#prop_gbl:AUTOGEN_TARGETS_FOLDER&quot; id=&quot;index-0-prop_gbl:AUTOGEN_TARGETS_FOLDER&quot;&gt;&lt;code&gt;AUTOGEN_TARGETS_FOLDER&lt;/code&gt;&lt;/a&gt;: This global property can be used to group &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-5-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; targets together in an IDE, e.g. in MSVS.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/autogen_targets_folder#prop_gbl:AUTOGEN_TARGETS_FOLDER&quot; id=&quot;index-0-prop_gbl:AUTOGEN_TARGETS_FOLDER&quot;&gt; &lt;code&gt;AUTOGEN_TARGETS_FOLDER&lt;/code&gt; &lt;/a&gt; :이 전역 속성은&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-5-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 대상을 IDE (예 : MSVS)에서 함께그룹화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a66bf8e4923cf292eba1572da99e098b34f064d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt;: Additional command line options for &lt;code&gt;rcc&lt;/code&gt; can be set via this &lt;code&gt;.qrc&lt;/code&gt; source file property.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt; : 추가 명령 행 옵션 &lt;code&gt;rcc&lt;/code&gt; 이를 통해 설정할 수 있습니다 &lt;code&gt;.qrc&lt;/code&gt; 소스 파일 속성입니다.</target>
        </trans-unit>
        <trans-unit id="46becd259749fdfaae6ab1957861d290d63c4600" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt;: Additional command line options for &lt;code&gt;uic&lt;/code&gt; can be set via this source file property on a &lt;code&gt;&amp;lt;base_name&amp;gt;.ui&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; : 추가 명령 줄 옵션 &lt;code&gt;uic&lt;/code&gt; A의이 소스 파일 속성을 통해 설정할 수 있습니다 &lt;code&gt;&amp;lt;base_name&amp;gt;.ui&lt;/code&gt; 파일.</target>
        </trans-unit>
        <trans-unit id="15a9b7292d5de4ec20b44c0fe3db524eccbe9d22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt;&lt;code&gt;SKIP_AUTOGEN&lt;/code&gt;&lt;/a&gt;: Source files can be excluded from &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-5-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; processing by setting this source file property.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt; &lt;code&gt;SKIP_AUTOGEN&lt;/code&gt; &lt;/a&gt; :이 소스 파일 특성을 설정하여&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-5-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 처리에서 소스 파일을 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be89e5487ba7c5d31de5a1d03da6e9f855f3200c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt;&lt;code&gt;SKIP_AUTOGEN&lt;/code&gt;&lt;/a&gt;: Source files can be excluded from &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; processing by setting this source file property.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt; &lt;code&gt;SKIP_AUTOGEN&lt;/code&gt; &lt;/a&gt; :이 소스 파일 특성을 설정하여&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 처리에서 소스 파일을 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e53fd5c1cec48ad7c5db9f2aec4ba22f6f8cf8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt;&lt;code&gt;SKIP_AUTOGEN&lt;/code&gt;&lt;/a&gt;: Source files can be excluded from &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-3-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; processing by setting this source file property.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt; &lt;code&gt;SKIP_AUTOGEN&lt;/code&gt; &lt;/a&gt; :이 소스 파일 특성을 설정하여&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-3-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 처리에서 소스 파일을 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b5d19a38909f07687db43f212685152ccab9ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt;&lt;code&gt;SKIP_AUTOMOC&lt;/code&gt;&lt;/a&gt;: Sources and headers can be excluded from &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-4-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; processing by setting this source file property.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt; &lt;code&gt;SKIP_AUTOMOC&lt;/code&gt; &lt;/a&gt; :이 소스 파일 특성을 설정하여&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-4-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 처리에서 소스 및 헤더를 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2f1e9c97e74b43f946c181305bcf29cbfeb5ebc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/skip_autorcc#prop_sf:SKIP_AUTORCC&quot; id=&quot;index-0-prop_sf:SKIP_AUTORCC&quot;&gt;&lt;code&gt;SKIP_AUTORCC&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;.qrc&lt;/code&gt; files can be excluded from &lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-2-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; processing by setting this source file property.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/skip_autorcc#prop_sf:SKIP_AUTORCC&quot; id=&quot;index-0-prop_sf:SKIP_AUTORCC&quot;&gt; &lt;code&gt;SKIP_AUTORCC&lt;/code&gt; &lt;/a&gt; :이 소스 파일 특성을 설정하여&lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-2-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 처리에서 &lt;code&gt;.qrc&lt;/code&gt; 파일을 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23b56185c9940dcff29a5bfa689b05c98e9576ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_sf/skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt;&lt;code&gt;SKIP_AUTOUIC&lt;/code&gt;&lt;/a&gt;: Source files can be excluded from &lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; processing by setting this source file property.</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt; &lt;code&gt;SKIP_AUTOUIC&lt;/code&gt; &lt;/a&gt; :이 소스 파일 특성을 설정하여&lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 처리에서 소스 파일을 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27ccd4f99bd922f43d9597f1af6c98c2154f1c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; lists a source file</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; &lt;/a&gt; 는 소스 파일을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="04fd05303ea3d1ef452206da13060c2f2aabe6fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; target property</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 대상 속성</target>
        </trans-unit>
        <trans-unit id="93f4cbfc6ee19f972faba2f1bcd27b745111d718" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-7-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets may have the same usage requirement properties populated as binary targets, such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-2-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_tgt/interface_position_independent_code#prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-7-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상에는&lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-2-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../prop_tgt/interface_position_independent_code#prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 와 같은 이진 대상으로 채워진 동일한 사용 요구 사항 속성이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="906e69c952059f355cc065836120e87e24eca1cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; (and its per-configuration variant &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt;) which specifies the location of the main library file on disk.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; &lt;/a&gt;디스크에서 기본 라이브러리 파일의 위치를 ​​지정하는 IMPORTED_LOCATION (및 구성 별 변형 &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c40cc0aefe0a43e66a4e0e08d740036e2f87e770" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/imported_objects#prop_tgt:IMPORTED_OBJECTS&quot; id=&quot;index-0-prop_tgt:IMPORTED_OBJECTS&quot;&gt;&lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt;&lt;/a&gt; (and &lt;code&gt;IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt;) for object libraries, specifies the locations of object files on disk.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported_objects#prop_tgt:IMPORTED_OBJECTS&quot; id=&quot;index-0-prop_tgt:IMPORTED_OBJECTS&quot;&gt; &lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt; &lt;/a&gt;오브젝트 라이브러리의 IMPORTED_OBJECTS (및 &lt;code&gt;IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; )는 디스크에서 오브젝트 파일의 위치를 ​​지정합니다.</target>
        </trans-unit>
        <trans-unit id="277e9dfaa9b71c2e8192871ec6ad0ab34971f107" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; defines the link interface.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 는 링크 인터페이스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e71ee1af81f35a8b453179042ab5ef1cf3857d04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/interprocedural_optimization#prop_tgt:INTERPROCEDURAL_OPTIMIZATION&quot; id=&quot;index-0-prop_tgt:INTERPROCEDURAL_OPTIMIZATION&quot;&gt;&lt;code&gt;INTERPROCEDURAL_OPTIMIZATION&lt;/code&gt;&lt;/a&gt; is enforced when enabled.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/interprocedural_optimization#prop_tgt:INTERPROCEDURAL_OPTIMIZATION&quot; id=&quot;index-0-prop_tgt:INTERPROCEDURAL_OPTIMIZATION&quot;&gt; &lt;code&gt;INTERPROCEDURAL_OPTIMIZATION&lt;/code&gt; &lt;/a&gt;활성화되면 INTERPROCEDURAL_OPTIMIZATION 이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="aa9d6977ffc4719c0a498c50577419f7344652f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties are now used for the device link step.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 속성이 장치 링크 단계에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="07b9f5152b5484cef9f6050b886c2710c767e48b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/macosx_rpath#prop_tgt:MACOSX_RPATH&quot; id=&quot;index-0-prop_tgt:MACOSX_RPATH&quot;&gt;&lt;code&gt;MACOSX_RPATH&lt;/code&gt;&lt;/a&gt; is enabled by default.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/macosx_rpath#prop_tgt:MACOSX_RPATH&quot; id=&quot;index-0-prop_tgt:MACOSX_RPATH&quot;&gt; &lt;code&gt;MACOSX_RPATH&lt;/code&gt; &lt;/a&gt; 는 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="81f766fee8e737a677a8ffaa92cb51357f264a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-0-prop_tgt:PUBLIC_HEADER&quot;&gt;&lt;code&gt;PUBLIC_HEADER&lt;/code&gt;&lt;/a&gt; files to be installed during &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; invocation</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-0-prop_tgt:PUBLIC_HEADER&quot;&gt; &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 호출중에 설치 될 PUBLIC_HEADER 파일</target>
        </trans-unit>
        <trans-unit id="d6731f0d637d2b331f0619f206f1dc7b10822c1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../prop_tgt/skip_build_rpath#prop_tgt:SKIP_BUILD_RPATH&quot; id=&quot;index-0-prop_tgt:SKIP_BUILD_RPATH&quot;&gt;&lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt;&lt;/a&gt; target property</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/skip_build_rpath#prop_tgt:SKIP_BUILD_RPATH&quot; id=&quot;index-0-prop_tgt:SKIP_BUILD_RPATH&quot;&gt; &lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt; &lt;/a&gt; 대상 속성</target>
        </trans-unit>
        <trans-unit id="3d97c0338e5849a10835da12c0cd2a4ff2692cfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-1-guide:User Interaction Guide&quot;&gt;&lt;code&gt;Invoking CMake&lt;/code&gt;&lt;/a&gt; with the intent of using a package of third party binaries requires that cmake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands succeed in finding the package. If the location of the package is in a directory known to CMake, the &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-5-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call should succeed. The directories known to cmake are platform-specific. For example, packages installed on Linux with a standard system package manager will be found in the &lt;code&gt;/usr&lt;/code&gt; prefix automatically. Packages installed in &lt;code&gt;Program Files&lt;/code&gt; on Windows will similarly be found automatically.</source>
          <target state="translated">&lt;a href=&quot;../user-interaction/index#guide:User%20Interaction%20Guide&quot; id=&quot;index-1-guide:User Interaction Guide&quot;&gt; &lt;code&gt;Invoking CMake&lt;/code&gt; &lt;/a&gt;타사 바이너리 패키지를 사용하려는 의도로 CMake 를 호출 하려면 cmake&lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령이 패키지를 찾는 데 성공해야합니다. 패키지의 위치가 CMake에 알려진 디렉토리에&lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-5-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출이 성공해야합니다. cmake에 알려진 디렉토리는 플랫폼별로 다릅니다. 예를 들어, 표준 시스템 패키지 관리자를 사용하여 Linux에 설치된 패키지는 &lt;code&gt;/usr&lt;/code&gt; 접두사에서 자동으로 찾습니다. Windows의 &lt;code&gt;Program Files&lt;/code&gt; 에설치된 패키지는 유사하게 자동으로 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="6632193e572a6106bf0f64f8a124adbf043c648f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-1-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; introduced in CMake 3.18 is used to initialize &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-1-prop_tgt:CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt;, which passes correct code generation flags to the CUDA compiler.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-1-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt; CMake 3.18에 도입 초기화하는 데 사용됩니다&lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-1-prop_tgt:CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt; 쿠다 컴파일러에 올바른 코드 생성 플래그를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="24708ac50b43b6db47504a5854ccde9232c94b11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_find_package_no_package_registry#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; disables the User Package Registry in all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-15-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_find_package_no_package_registry#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 는 모든&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-15-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출에서 사용자 패키지 레지스트리를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="7825cf33326fa5006b3af554af0d7ed2dbbc21a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_find_package_no_system_package_registry#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; disables the System Package Registry in all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-16-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_find_package_no_system_package_registry#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 는 모든&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-16-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출에서 시스템 패키지 레지스트리를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="1e1259cb92d009bc042cdb80bfa5d4dc37690e57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_find_package_no_system_package_registry#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; disables the System Package Registry in all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-17-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_find_package_no_system_package_registry#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 는 모든&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-17-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출에서 시스템 패키지 레지스트리를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b0e638dfdeecfdccc7c8b5f959c4e63bd2a9dfb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_find_use_package_registry#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; disables the User Package Registry in all the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-15-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; calls when set to &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_find_use_package_registry#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;FALSE&lt;/code&gt; 로 설정 될 때모든&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-15-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출에서 사용자 패키지 레지스트리를 비활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="bb517baf869359da957beed319cdce12ba6ad8ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt; is enabled</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt; &lt;/a&gt; 이 사용 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="4e07a945e1f2b8e4a0f76a6200db1bdfff7bbbde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt;: A global &lt;code&gt;autogen&lt;/code&gt; target, that depends on all &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-8-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; generated &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; targets in the project, will be generated when this variable is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt; &lt;/a&gt; :이 변수가 &lt;code&gt;ON&lt;/code&gt; 일 때 프로젝트의모든&lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-8-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 생성 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상에종속되는 글로벌 &lt;code&gt;autogen&lt;/code&gt; 생성대상이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5ddc191f91ea41ab31ada42632e02c41ba414f69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt;: A global &lt;code&gt;autogen&lt;/code&gt; target, that depends on all &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; generated &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; targets in the project, will be generated when this variable is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt; &lt;/a&gt; :이 변수가 &lt;code&gt;ON&lt;/code&gt; 일 때 프로젝트의모든&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 생성 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상에종속되는 글로벌 &lt;code&gt;autogen&lt;/code&gt; 생성대상이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b3b880f77c5030b023061928e3bafd6e439c064f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt;: A global &lt;code&gt;autorcc&lt;/code&gt; target that depends on all &lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-6-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; targets in the project will be generated when this variable is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt; &lt;/a&gt; :이 변수가 &lt;code&gt;ON&lt;/code&gt; 이면 프로젝트의모든&lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-6-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 대상에의존하는 전역 &lt;code&gt;autorcc&lt;/code&gt; 대상이생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ab1b53cec3dff21158a531ac16d6a78314ee39e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_link_search_start_static#variable:CMAKE_LINK_SEARCH_START_STATIC&quot; id=&quot;index-0-variable:CMAKE_LINK_SEARCH_START_STATIC&quot;&gt;&lt;code&gt;CMAKE_LINK_SEARCH_START_STATIC&lt;/code&gt;&lt;/a&gt; if it is set when a target is created.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_link_search_start_static#variable:CMAKE_LINK_SEARCH_START_STATIC&quot; id=&quot;index-0-variable:CMAKE_LINK_SEARCH_START_STATIC&quot;&gt; &lt;code&gt;CMAKE_LINK_SEARCH_START_STATIC&lt;/code&gt; &lt;/a&gt;대상을 만들 때 설정된 경우 CMAKE_LINK_SEARCH_START_STATIC</target>
        </trans-unit>
        <trans-unit id="6f06ba0f3a4d69df319c0b6b5c39437b850b2ac6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; variable</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_skip_install_rpath#variable:CMAKE_SKIP_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 변수</target>
        </trans-unit>
        <trans-unit id="1601c5ec2853d21604c5de58f2ae9c69c2ca5ef1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt;&lt;/a&gt; variable</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt; &lt;/a&gt; 변수</target>
        </trans-unit>
        <trans-unit id="f6c1d33fe132ee6a0d22e467e56929ececb3efcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_binary_dir#variable:PROJECT_BINARY_DIR&quot; id=&quot;index-0-variable:PROJECT_BINARY_DIR&quot;&gt;&lt;code&gt;PROJECT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_BINARY_DIR&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_binary_dir#variable:PROJECT_BINARY_DIR&quot; id=&quot;index-0-variable:PROJECT_BINARY_DIR&quot;&gt; &lt;code&gt;PROJECT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_BINARY_DIR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ceea46ae0199885f311bc14a62cc6d357125f910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_description#variable:PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:PROJECT_DESCRIPTION&quot;&gt;&lt;code&gt;PROJECT_DESCRIPTION&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_DESCRIPTION&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_description#variable:PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:PROJECT_DESCRIPTION&quot;&gt; &lt;code&gt;PROJECT_DESCRIPTION&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_DESCRIPTION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a6f1d830805ec89bee4537cfc2ee987e54967a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_homepage_url#variable:PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:PROJECT_HOMEPAGE_URL&quot;&gt;&lt;code&gt;PROJECT_HOMEPAGE_URL&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_HOMEPAGE_URL&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_homepage_url#variable:PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:PROJECT_HOMEPAGE_URL&quot;&gt; &lt;code&gt;PROJECT_HOMEPAGE_URL&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_HOMEPAGE_URL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68892a98481c2be63c6edb1c83528e43cda51c95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_source_dir#variable:PROJECT_SOURCE_DIR&quot; id=&quot;index-0-variable:PROJECT_SOURCE_DIR&quot;&gt;&lt;code&gt;PROJECT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_SOURCE_DIR&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_source_dir#variable:PROJECT_SOURCE_DIR&quot; id=&quot;index-0-variable:PROJECT_SOURCE_DIR&quot;&gt; &lt;code&gt;PROJECT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_SOURCE_DIR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b7fd310ce81b40e0f34f387f2b8114a46af56d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dc7812650764934c10c8784f5005609f040e5c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_version_major#variable:PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:PROJECT_VERSION_MAJOR&quot;&gt;&lt;code&gt;PROJECT_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MAJOR&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_version_major#variable:PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:PROJECT_VERSION_MAJOR&quot;&gt; &lt;code&gt;PROJECT_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MAJOR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e782f7defb37bc7d2f319af19f13d7023346c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_version_minor#variable:PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:PROJECT_VERSION_MINOR&quot;&gt;&lt;code&gt;PROJECT_VERSION_MINOR&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MINOR&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_version_minor#variable:PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:PROJECT_VERSION_MINOR&quot;&gt; &lt;code&gt;PROJECT_VERSION_MINOR&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_MINOR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2757dacbce0e16e2bee027f3b667be0b4402e505" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_version_patch#variable:PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:PROJECT_VERSION_PATCH&quot;&gt;&lt;code&gt;PROJECT_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_PATCH&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../variable/project_version_patch#variable:PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:PROJECT_VERSION_PATCH&quot;&gt; &lt;code&gt;PROJECT_VERSION_PATCH&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_PATCH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e675b564b779a7e6e5a59a8cb2824b2fb2b564a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable/project_version_tweak#variable:PROJECT_VERSION_TWEAK&quot; id=&quot;index-0-variable:PROJECT_VERSION_TWEAK&quot;&gt;&lt;code&gt;PROJECT_VERSION_TWEAK&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_TWEAK&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../variable/project_version_tweak#variable:PROJECT_VERSION_TWEAK&quot; id=&quot;index-0-variable:PROJECT_VERSION_TWEAK&quot;&gt; &lt;code&gt;PROJECT_VERSION_TWEAK&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;_VERSION_TWEAK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e3012e1785476d39cac416330ea6081fc686eec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autogen_parallel#prop_tgt:AUTOGEN_PARALLEL&quot; id=&quot;index-0-prop_tgt:AUTOGEN_PARALLEL&quot;&gt;&lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt;&lt;/a&gt;: This target property controls the number of &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start in parallel during builds.</source>
          <target state="translated">&lt;a href=&quot;autogen_parallel#prop_tgt:AUTOGEN_PARALLEL&quot; id=&quot;index-0-prop_tgt:AUTOGEN_PARALLEL&quot;&gt; &lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt; &lt;/a&gt; :이 대상 속성은빌드 중에 동시에 시작될 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스수를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="540d254476a54275d786b1ea708ceff1810abce8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is enabled,</source>
          <target state="translated">&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 가 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="88380b68e0261281c5e2272ebc909ab4371da283" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;automoc_compiler_predefines#prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot;&gt;&lt;code&gt;AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt;&lt;/a&gt;: Compiler pre definitions for &lt;code&gt;moc&lt;/code&gt; are written to the &lt;code&gt;moc_predefs.h&lt;/code&gt; file. The generation of this file can be enabled or disabled in this target property.</source>
          <target state="translated">&lt;a href=&quot;automoc_compiler_predefines#prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot;&gt; &lt;code&gt;AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;moc&lt;/code&gt; 에대한 컴파일러 사전 정의가 &lt;code&gt;moc_predefs.h&lt;/code&gt; 파일에기록됩니다. 이 대상 속성에서이 파일 생성을 활성화 또는 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c77d480f70aff0d1f888117bf726cd95a0461f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-2-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;moc&lt;/code&gt; dependency file names can be extracted from headers or sources by defining file name filters in this target property.</source>
          <target state="translated">&lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-2-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt; :이 대상 특성에 파일 이름 필터를 정의하여 헤더 또는 소스에서 &lt;code&gt;moc&lt;/code&gt; 종속성 파일 이름을 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f27be26459d64eed6fdb3136c9daeb8b402dcd26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;automoc_executable#prop_tgt:AUTOMOC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOMOC_EXECUTABLE&quot;&gt;&lt;code&gt;AUTOMOC_EXECUTABLE&lt;/code&gt;&lt;/a&gt;: The &lt;code&gt;moc&lt;/code&gt; executable will be detected automatically, but can be forced to a certain binary using this target property.</source>
          <target state="translated">&lt;a href=&quot;automoc_executable#prop_tgt:AUTOMOC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOMOC_EXECUTABLE&quot;&gt; &lt;code&gt;AUTOMOC_EXECUTABLE&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;moc&lt;/code&gt; 실행 파일이 자동으로 감지되지만이 대상 속성을 사용하여 특정 이진 파일로 강제 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52423b934997c6168392239664404959867d56d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-2-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;: This list of Qt macro names can be extended to search for additional macros in headers and sources.</source>
          <target state="translated">&lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-2-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; &lt;/a&gt; :이 Qt 매크로 이름 목록을 확장하여 헤더 및 소스에서 추가 매크로를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd6b1accfb1622af40f29c5482a577833117359a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;automoc_moc_options#prop_tgt:AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MOC_OPTIONS&quot;&gt;&lt;code&gt;AUTOMOC_MOC_OPTIONS&lt;/code&gt;&lt;/a&gt;: Additional command line options for &lt;code&gt;moc&lt;/code&gt; can be set in this target property.</source>
          <target state="translated">&lt;a href=&quot;automoc_moc_options#prop_tgt:AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MOC_OPTIONS&quot;&gt; &lt;code&gt;AUTOMOC_MOC_OPTIONS&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;moc&lt;/code&gt; 에 대한 추가 명령 행 옵션을이 대상 특성에서 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89e48c708e1edd3b5e6290e4f1cdbada3faa5dc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autorcc_executable#prop_tgt:AUTORCC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTORCC_EXECUTABLE&quot;&gt;&lt;code&gt;AUTORCC_EXECUTABLE&lt;/code&gt;&lt;/a&gt;: The &lt;code&gt;rcc&lt;/code&gt; executable will be detected automatically, but can be forced to a certain binary by setting this target property.</source>
          <target state="translated">&lt;a href=&quot;autorcc_executable#prop_tgt:AUTORCC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTORCC_EXECUTABLE&quot;&gt; &lt;code&gt;AUTORCC_EXECUTABLE&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;rcc&lt;/code&gt; 실행 파일이 자동으로 감지되지만이 대상 속성을 설정하여 특정 바이너리로 강제 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a145afae5e2f4d115a5ac03f5a621dc3056ae074" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt;: Additional command line options for &lt;code&gt;rcc&lt;/code&gt; can be set via this target property. The corresponding &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; source file property can be used to specify options to be applied only to a specific &lt;code&gt;.qrc&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt; :이 대상 속성을 통해 &lt;code&gt;rcc&lt;/code&gt; 에 대한 추가 명령 줄 옵션을 설정할 수 있습니다. 해당&lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt; 소스 파일 특성을 사용하여 특정 &lt;code&gt;.qrc&lt;/code&gt; 파일에만 적용 할 옵션을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21e185d26b2c5aa1aa71ee74d77f86bd5b484857" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autouic_executable#prop_tgt:AUTOUIC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOUIC_EXECUTABLE&quot;&gt;&lt;code&gt;AUTOUIC_EXECUTABLE&lt;/code&gt;&lt;/a&gt;: The &lt;code&gt;uic&lt;/code&gt; executable will be detected automatically, but can be forced to a certain binary using this target property.</source>
          <target state="translated">&lt;a href=&quot;autouic_executable#prop_tgt:AUTOUIC_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:AUTOUIC_EXECUTABLE&quot;&gt; &lt;code&gt;AUTOUIC_EXECUTABLE&lt;/code&gt; 는&lt;/a&gt; 다음 &lt;code&gt;uic&lt;/code&gt; 실행 파일은 자동으로 감지되지만,이 대상 속성을 사용하여 특정 바이너리에 강제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6c7e6d4bc1e8270e0806a81a86c30bff33c1fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt;: Additional command line options for &lt;code&gt;uic&lt;/code&gt; can be set via this target property. The corresponding &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; source file property can be used to specify options to be applied only to a specific &lt;code&gt;&amp;lt;base_name&amp;gt;.ui&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; : 추가 명령 행 옵션 &lt;code&gt;uic&lt;/code&gt; 이 대상 속성을 통해 설정할 수 있습니다. 해당하는&lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; 소스 파일 속성을 사용하여 특정 &lt;code&gt;&amp;lt;base_name&amp;gt;.ui&lt;/code&gt; 파일에만 적용 할 옵션을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66aae3661deba28f2dd28d0269ef3f4cfd955c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; is capable of providing semantic information about CMake code it executes to generate a buildsystem. If executed with the &lt;code&gt;-E server&lt;/code&gt; command line options, it starts in a long running mode and allows a client to request the available information via a JSON protocol.</source>
          <target state="translated">&lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 는 빌드 시스템을 생성하기 위해 실행하는 CMake 코드에 대한 의미 정보를 제공 할 수 있습니다. 으로 실행하는 경우 &lt;code&gt;-E server&lt;/code&gt; 명령 줄 옵션, 그것은 긴 실행 모드로 시작하고 클라이언트가 JSON 프로토콜을 통해 사용할 수있는 정보를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae282bf3e02cc7381e33f90f7aee2ea10eb5ed45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://git.dcmtk.org/web?p=dcmtk.git;a=commit;h=662ae187c493c6b9a73dd5e3875372cebd0c11fe&quot;&gt;Recent DCMTK&lt;/a&gt; provides a &lt;em&gt;DCMTKConfig.cmake&lt;/em&gt;&lt;a href=&quot;../manual/cmake-packages.7#manual:cmake-packages(7)&quot; id=&quot;index-0-manual:cmake-packages(7)&quot;&gt;&lt;code&gt;package configuration file&lt;/code&gt;&lt;/a&gt;. To exclusively use the package configuration file (recommended when possible), pass the &lt;code&gt;NO_MODULE&lt;/code&gt; option to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. For example, &lt;code&gt;find_package(DCMTK NO_MODULE)&lt;/code&gt;. This requires official DCMTK snapshot &lt;em&gt;3.6.1_20140617&lt;/em&gt; or newer.</source>
          <target state="translated">&lt;a href=&quot;http://git.dcmtk.org/web?p=dcmtk.git;a=commit;h=662ae187c493c6b9a73dd5e3875372cebd0c11fe&quot;&gt;최근 DCMTK&lt;/a&gt; 는 &lt;em&gt;DCMTKConfig.cmake &lt;/em&gt;&lt;a href=&quot;../manual/cmake-packages.7#manual:cmake-packages(7)&quot; id=&quot;index-0-manual:cmake-packages(7)&quot;&gt; &lt;code&gt;package configuration file&lt;/code&gt; &lt;/a&gt; 제공 합니다 . 패키지 구성 파일을 독점적으로 사용하려면 (가능한 경우 권장) &lt;code&gt;NO_MODULE&lt;/code&gt; 옵션을 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 로 전달하십시오 . 예를 들어, &lt;code&gt;find_package(DCMTK NO_MODULE)&lt;/code&gt; 입니다. 공식 DCMTK 스냅 샷 &lt;em&gt;3.6.1_20140617&lt;/em&gt; 이상 이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="ce912501b6e28957896325ab341a64350bfc60af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://graphviz.org&quot;&gt;Graphviz&lt;/a&gt;&lt;code&gt;dot&lt;/code&gt; utility used to render various graphs.</source>
          <target state="translated">&lt;a href=&quot;http://graphviz.org&quot;&gt;&lt;/a&gt;다양한 그래프를 렌더링하는 데 사용되는 Graphviz &lt;code&gt;dot&lt;/code&gt; 유틸리티.</target>
        </trans-unit>
        <trans-unit id="bf0529f8ff61b7bd36cc48156c53aa0b6d1ef15e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.mcternan.me.uk/mscgen/&quot;&gt;Message Chart Generator&lt;/a&gt; utility used by Doxygen&amp;rsquo;s &lt;code&gt;\msc&lt;/code&gt; and &lt;code&gt;\mscfile&lt;/code&gt; commands.</source>
          <target state="translated">&lt;a href=&quot;http://www.mcternan.me.uk/mscgen/&quot;&gt;&lt;/a&gt;Doxygen의 &lt;code&gt;\msc&lt;/code&gt; 및 &lt;code&gt;\mscfile&lt;/code&gt; 명령에 사용되는 메시지 차트 생성기 유틸리티 입니다.</target>
        </trans-unit>
        <trans-unit id="4837f0143ec48812a6d143ce79253c1db769cadb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; supports selection of a compiler from one of the installed toolsets. CMake provides the name of the chosen toolset in this variable, if any is explicitly selected (e.g. via the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-T&lt;/code&gt; option).</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 는 설치된 툴셋 중 하나에서 컴파일러 선택을 지원합니다. CMake는 명시 적으로 선택된 경우 (예 :&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-T&lt;/code&gt; 옵션을통해)이 변수에서 선택한 도구 세트의 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="037e467edd9725fda499f4247177548f2ced91bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; supports selection of a compiler from one of the installed toolsets. CMake provides the name of the chosen toolset in this variable, if any is explicitly selected (e.g. via the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-T&lt;/code&gt; option).</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 는 설치된 도구 세트 중 하나에서 컴파일러 선택을 지원합니다. CMake는 명시 적으로 선택된 경우 (예 :&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-T&lt;/code&gt; 옵션을통해)이 변수에서 선택한 도구 세트의 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c51114bae4d59cdc1cefc5c3eaa4d734520bcd3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wiki.gnome.org/Apps/Dia&quot;&gt;Dia&lt;/a&gt; the diagram editor used by Doxygen&amp;rsquo;s &lt;code&gt;\diafile&lt;/code&gt; command.</source>
          <target state="translated">&lt;a href=&quot;https://wiki.gnome.org/Apps/Dia&quot;&gt;디아&lt;/a&gt; Doxygen을의에 의해 사용되는 다이어그램 편집기 &lt;code&gt;\diafile&lt;/code&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="9f7a2a1cb77ab22255d386bdad67934b2d63235a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="42bafb7ca49bc12737677fa0b03d4005bc2f1dd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="947b7b83ea7e46a7946b56f6c288a32a62d5f26d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions(INTERFACE)&lt;/code&gt;&lt;/a&gt;, and</source>
          <target state="translated">&lt;a href=&quot;target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions(INTERFACE)&lt;/code&gt; &lt;/a&gt; 및</target>
        </trans-unit>
        <trans-unit id="24c998c4260126a3f665533b113d9ff4feca85c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="008ec457b0227685600bf44e37510bc832b87a23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="69cfaed257f80b2a70641ee262d07b299698c242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="3746a4bd2fa4250260a7c26dc8782cfa1c3323b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="3dd90a094081778cf925287c8638520a57f760d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="9c43b6f1e449f8944214997608f8d14aeecbc15a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-1-command:target_sources&quot;&gt;&lt;code&gt;target_sources(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-1-command:target_sources&quot;&gt;&lt;code&gt;target_sources(INTERFACE)&lt;/code&gt;&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="510036b20514fa19297ce71bf5c21f48f2a70c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; handles empty list items.</source>
          <target state="translated">&lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; 는 빈 목록 항목을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="14a8ad5ae667f27bf735c19c1601617031b45f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$OPENALDIR&lt;/code&gt; is an environment variable that would correspond to the &lt;code&gt;./configure --prefix=$OPENALDIR&lt;/code&gt; used in building OpenAL.</source>
          <target state="translated">&lt;code&gt;$OPENALDIR&lt;/code&gt; 은 OpenAL 구축에 사용 된 &lt;code&gt;./configure --prefix=$OPENALDIR&lt;/code&gt; 해당하는 환경 변수입니다 .</target>
        </trans-unit>
        <trans-unit id="67721eb25f831727b8af36603370349d832e211a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$OSGDIR&lt;/code&gt; is an environment variable that would correspond to:</source>
          <target state="translated">&lt;code&gt;$OSGDIR&lt;/code&gt; 은 다음에 해당하는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="43e726def9a38e97cfad49a2809121cceb55d4fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;ACTION&amp;gt;&lt;/code&gt; specifies the action to apply to the elements of the list. The actions have exactly the same semantics as sub-commands of the &lt;a href=&quot;string#command:string&quot; id=&quot;index-2-command:string&quot;&gt;&lt;code&gt;string()&lt;/code&gt;&lt;/a&gt; command. &lt;code&gt;&amp;lt;ACTION&amp;gt;&lt;/code&gt; must be one of the following:</source>
          <target state="translated">&lt;code&gt;&amp;lt;ACTION&amp;gt;&lt;/code&gt; 은 목록 요소에 적용 할 동작을 지정합니다. 액션은 &lt;a href=&quot;string#command:string&quot; id=&quot;index-2-command:string&quot;&gt; &lt;code&gt;string()&lt;/code&gt; &lt;/a&gt; 명령 의 하위 명령과 정확히 동일한 의미를 갖습니다 . &lt;code&gt;&amp;lt;ACTION&amp;gt;&lt;/code&gt; 은 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a88c14df732b39cd98cdcd7105dfa1960f9f05d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/&amp;lt;SOURCE_DIR_CHECKSUM&amp;gt;&lt;/code&gt; for single configuration generators or in,</source>
          <target state="translated">&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/&amp;lt;SOURCE_DIR_CHECKSUM&amp;gt;&lt;/code&gt; 단일 구성 생성기의 경우 &amp;lt;AUTOGEN_BUILD_DIR&amp;gt; / &amp;lt;SOURCE_DIR_CHECKSUM&amp;gt; 또는</target>
        </trans-unit>
        <trans-unit id="00c3c5d1a622c1b11f2988fb3e9c9eb882bb81b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; for single configuration generators or in</source>
          <target state="translated">&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; 단일 구성 생성기 또는 &amp;lt;AUTOGEN_BUILD_DIR&amp;gt; / include</target>
        </trans-unit>
        <trans-unit id="1bf45a4d42b068d452a4d8c796d461d3bf908eab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;/&amp;lt;SOURCE_DIR_CHECKSUM&amp;gt;&lt;/code&gt; for &lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-1-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt;&lt;code&gt;multi configuration&lt;/code&gt;&lt;/a&gt; generators.</source>
          <target state="translated">&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;/&amp;lt;SOURCE_DIR_CHECKSUM&amp;gt;&lt;/code&gt; 대한 &lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-1-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt; &lt;code&gt;multi configuration&lt;/code&gt; &lt;/a&gt; 발전기.</target>
        </trans-unit>
        <trans-unit id="539ebb835fee8510e5b2f48c7c07365d5160e860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; for &lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-0-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt;&lt;code&gt;multi configuration&lt;/code&gt;&lt;/a&gt; generators.</source>
          <target state="translated">&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대한 &lt;a href=&quot;../prop_gbl/generator_is_multi_config#prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot; id=&quot;index-0-prop_gbl:GENERATOR_IS_MULTI_CONFIG&quot;&gt; &lt;code&gt;multi configuration&lt;/code&gt; &lt;/a&gt; 발전기.</target>
        </trans-unit>
        <trans-unit id="922935f729bd924c5d93fe43f8149944192d68e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="4b218c8fcc9edf57c5a6dbd9afff37a1640c6d6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; flags used regardless of the value of &lt;a href=&quot;cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; &lt;a href=&quot;cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; &lt;/a&gt; 값에 관계없이 &amp;lt;LANG&amp;gt; 플래그가 사용 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7f5dab54415e8b8751e4c84b4da5a4ae3bcdfd19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; targets by default inherit their origin target&amp;rsquo;s dependencies. This might result in unintended dependency target builds when only &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; targets are built. A solution is to disable &lt;a href=&quot;../prop_tgt/autogen_origin_depends#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; on the respective origin targets.</source>
          <target state="translated">&lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상은 기본적으로 원래 대상의 종속성을 상속합니다. 이로 인해 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상 만 빌드 될 때 의도하지 않은 종속성 대상 빌드가 발생할 수 있습니다 . 해결책은 각각의 원점 타겟에서 &lt;a href=&quot;../prop_tgt/autogen_origin_depends#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; &lt;/a&gt; 를 비활성화하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="f9b25dd13e1cc449b18086121965d73f92749d91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt; determines which elements of the list will be transformed. Only one type of selector can be specified at a time. When given, &lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt; must be one of the following:</source>
          <target state="translated">&lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt; 는 변환 할 목록의 요소를 결정합니다. 한 번에 한 가지 유형의 선택기 만 지정할 수 있습니다. 주어진 경우 &lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt; 는 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ec8c9d6bb8451c519316015f59378406ea662bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; (in the case of &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;, this refers to their use in the file name, not the file&amp;rsquo;s contents). See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">&lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 ( &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 의 경우 파일 내용이 아니라 파일 이름에서의 사용을 나타냄). 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="113d05816d005e9cd7065e352c47d8386d83c70a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; is the output filename, it should be in the build tree. &lt;code&gt;&amp;lt;major.minor.patch&amp;gt;&lt;/code&gt; is the version number of the project to be installed.</source>
          <target state="translated">&lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 은 출력 파일 이름이며 빌드 트리에 있어야합니다. &lt;code&gt;&amp;lt;major.minor.patch&amp;gt;&lt;/code&gt; 는 설치할 프로젝트의 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="2e40a0f9e9515aa8cba816dca526a62f9b6bf50d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can be one of the following values.</source>
          <target state="translated">&lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; 은 다음 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47f3eccf5aaee26f570a1c83969227304880a320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;generators&amp;gt;&lt;/code&gt; is a &lt;a href=&quot;cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of generator names. &lt;code&gt;cpack&lt;/code&gt; will iterate through this list and produce package(s) in that generator&amp;rsquo;s format according to the details provided in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; configuration file. If this option is not given, the &lt;a href=&quot;../module/cpack#variable:CPACK_GENERATOR&quot; id=&quot;index-1-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; variable determines the default set of generators that will be used.</source>
          <target state="translated">&lt;code&gt;&amp;lt;generators&amp;gt;&lt;/code&gt; 는 &lt;a href=&quot;cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된&lt;/a&gt; 생성기 이름 목록 입니다. &lt;code&gt;cpack&lt;/code&gt; 은이 목록을 반복하여 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 구성 파일에 제공된 세부 정보에 따라 생성기 형식으로 패키지를 생성 합니다. 이 옵션을 지정하지 않으면 &lt;a href=&quot;../module/cpack#variable:CPACK_GENERATOR&quot; id=&quot;index-1-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; &lt;/a&gt; 변수가 사용될 기본 생성기 세트를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="15e853b822d41411b7650582bd353328b945fae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; can be one of the following values:</source>
          <target state="translated">&lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; 는 다음 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abcdcf3b537c366c10878660ebbeae63dff5c31f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt;: GCC of specified version</source>
          <target state="translated">&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; : 지정된 버전의 GCC</target>
        </trans-unit>
        <trans-unit id="e67ba22653e2966690fc46c3eb7aad4518ebe97d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; and the optional &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; are each CMake versions of the form &lt;code&gt;major.minor[.patch[.tweak]]&lt;/code&gt;, and the &lt;code&gt;...&lt;/code&gt; is literal.</source>
          <target state="translated">&lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 과 선택적 &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; 폼 각각 CMake 버전이다 &lt;code&gt;major.minor[.patch[.tweak]]&lt;/code&gt; , 그리고이 &lt;code&gt;...&lt;/code&gt; 리터이다.</target>
        </trans-unit>
        <trans-unit id="8529081d470799082e6523a7f6a2e424e0481709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; and the optional &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; are each CMake versions of the form &lt;code&gt;major.minor[.patch[.tweak]]&lt;/code&gt;, and the &lt;code&gt;...&lt;/code&gt; is literal. The &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version must be at least &lt;code&gt;2.4&lt;/code&gt; and at most the running version of CMake. The &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; version, if specified, must be at least the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version but may exceed the running version of CMake. If the running version of CMake is older than 3.12, the extra &lt;code&gt;...&lt;/code&gt; dots will be seen as version component separators, resulting in the &lt;code&gt;...&amp;lt;max&amp;gt;&lt;/code&gt; part being ignored and preserving the pre-3.12 behavior of basing policies on &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 과 선택적 &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; 폼 각각 CMake 버전이다 &lt;code&gt;major.minor[.patch[.tweak]]&lt;/code&gt; , 그리고이 &lt;code&gt;...&lt;/code&gt; 리터이다. &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 버전 이상이어야 &lt;code&gt;2.4&lt;/code&gt; 많아야 CMake의 주행 버전. &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; 버전이 지정된 경우, 적어도 있어야 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 버전하지만 CMake의 주행 버전을 초과 할 수있다. CMake의 실행 버전이 3.12보다 오래된 경우 추가 &lt;code&gt;...&lt;/code&gt; 도트가 버전 구성 요소 구분 기호로 표시되어 &lt;code&gt;...&amp;lt;max&amp;gt;&lt;/code&gt; 부분이 무시되고 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deb1e9c440624dae399d73e4658b9326a4633718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is the same as the name passed to the original call to &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;. The specified &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; must not be one of the pre-defined steps (&lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;configure&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;). The supported options are:</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 은 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 에 대한 원래 호출에 전달 된 이름과 동일합니다 . 지정된 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; 은 사전 정의 된 단계 ( &lt;code&gt;mkdir&lt;/code&gt; , &lt;code&gt;download&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , &lt;code&gt;patch&lt;/code&gt; , &lt;code&gt;configure&lt;/code&gt; , &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;install&lt;/code&gt; 또는 &lt;code&gt;test&lt;/code&gt; ) 중 하나가 아니어야합니다 . 지원되는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="901d0600ae413b609fdfa36f7fa03ae607f53e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is the same as the name passed to the original call to &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;. The specified &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; must not be one of the pre-defined steps (&lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;skip-update&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;configure&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;). The supported options are:</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 은 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 에 대한 원래 호출에 전달 된 이름과 동일합니다 . 지정된 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; 은 사전 정의 된 단계 ( &lt;code&gt;mkdir&lt;/code&gt; , &lt;code&gt;download&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , &lt;code&gt;skip-update&lt;/code&gt; , &lt;code&gt;patch&lt;/code&gt; , &lt;code&gt;configure&lt;/code&gt; , &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;install&lt;/code&gt; 또는 &lt;code&gt;test&lt;/code&gt; ) 중 하나가 아니어야합니다 . 지원되는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9064019838e4f327c3d503ae3abafabc880020ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; is a number from zero to &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; minus one. &lt;code&gt;&amp;lt;resource-type&amp;gt;&lt;/code&gt; is the name of a resource type, converted to uppercase. &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;_&amp;lt;resource-type&amp;gt;&lt;/code&gt; is defined for the product of each &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; in the range listed above and each resource type listed in &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; 은 0에서 &lt;code&gt;CTEST_RESOURCE_GROUP_COUNT&lt;/code&gt; 에서 1을 뺀 숫자입니다 . &lt;code&gt;&amp;lt;resource-type&amp;gt;&lt;/code&gt; 은 대문자로 변환 된 리소스 유형의 이름입니다. &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;_&amp;lt;resource-type&amp;gt;&lt;/code&gt; 은 위에 나열된 범위 의 각 &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; 및 &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;&lt;/code&gt; 에 나열된 각 리소스 유형 의 제품에 대해 정의 됩니다 .</target>
        </trans-unit>
        <trans-unit id="89e28b517b66b8df7ca2066149ee77fb3d0dc0b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; that were given no values at all are collected in a variable &lt;code&gt;&amp;lt;prefix&amp;gt;_KEYWORDS_MISSING_VALUES&lt;/code&gt; that will be undefined if all keywords received values. This can be checked to see if there were keywords without any values given.</source>
          <target state="translated">&lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; 값이 전혀없는 &amp;lt;one_value_keywords&amp;gt; 및 &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; 는 모든 키워드에 값이 수신되면 정의되지 않는 변수 &lt;code&gt;&amp;lt;prefix&amp;gt;_KEYWORDS_MISSING_VALUES&lt;/code&gt; 에 수집 됩니다. 값이없는 키워드가 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4737b4e0a089ee0663a9253b5c467d960616438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;permission&amp;gt;&lt;/code&gt; is any of the YesNoType attributes listed here:</source>
          <target state="translated">&lt;code&gt;&amp;lt;permission&amp;gt;&lt;/code&gt; 은 다음에 나열된 YesNoType 속성 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="63a71206e7e0022e5c282ad47f505f94e97035ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin</target>
        </trans-unit>
        <trans-unit id="870c9aca7eb4b4c45de83f5276e257a7e21a6e9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin</target>
        </trans-unit>
        <trans-unit id="62ae937de6878dec6f16084ad75db214f0a8a7a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin</target>
        </trans-unit>
        <trans-unit id="e1b27cde3ff296c54151558babd1e94a4228bfbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-3-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-3-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin</target>
        </trans-unit>
        <trans-unit id="f50b77ed726d1b127fb9d14d717efc4ceace36ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin</target>
        </trans-unit>
        <trans-unit id="b6f1c9ab594bf70c5c96293a02a6912061488fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin</target>
        </trans-unit>
        <trans-unit id="6353e2f15424c3d3c3d1a761c31c3cfade51fe6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable if called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake 변수의 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin 및 &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의해로드 된 찾기 모듈 내에서 호출 된 경우 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 환경 변수</target>
        </trans-unit>
        <trans-unit id="ebf75609c257baebc2f165e0b49e8ceb5f6f19c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable if called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/[s]bin&lt;/code&gt; &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의해로드 된 찾기 모듈 내에서 호출 된 경우 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake 변수 및 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 환경 변수의 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &amp;lt;prefix&amp;gt; / [s] bin</target>
        </trans-unit>
        <trans-unit id="31188fff164e5d8b5e8d67d9c892afa24bb1295d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable if called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt; 가 설정된 경우 &amp;lt;prefix&amp;gt; / include / &amp;lt;arch&amp;gt; , &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake 변수 및 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 환경 변수의 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대해 &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 가로 드 한 찾기 모듈 내에서 호출되는 경우 &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93a64b425c71bdd45363fee92b6c9a0d768fda7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-1-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-1-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="942633301d038e17c0b87de849f19296969c5920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-2-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-2-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f13a4d9cf082e32221302b7307d78ae63ea8391c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf441598a75338457984e702681ac4a37fb1b90b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable if called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt; 가 설정된 경우 &amp;lt;prefix&amp;gt; / include / &amp;lt;arch&amp;gt; 및 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake 변수 및 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 환경 변수의 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대해 &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 가로 드 한 찾기 모듈 내에서 호출 된 경우 &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d230b290c7f24a6a1714a87ae9d12071af6ccecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-5-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-5-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b80a04a391ede3e9a6fba9aff6f32c033b043b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-6-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-3-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-6-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-3-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18e2fc4ea06ba4efd5c6016f4c44b78642e2d610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-8-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/include/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-8-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/include&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55888fa913b44560b0abe9b9e2be64854d6ac2fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable if called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt; 가 설정된 경우 &amp;lt;prefix&amp;gt; / lib / &amp;lt;arch&amp;gt; , &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake 변수의 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대한 &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 및 로드 된 찾기 모듈 내에서 호출 된 경우 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 환경 변수 &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010d3597ba148eb25bd294c3ed7592cdc7dda642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-1-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-1-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02abcd335c81d1e5d9a56e21ed0652a117562c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-2-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-2-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5750911612a1631cfef824a07ef630437d8fed22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f59be9a566cc01f97f41ea3244201dd35dbc689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake variable and the &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; environment variable if called from within a find module loaded by &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-4-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt; 가 설정된 경우 &amp;lt;prefix&amp;gt; / lib / &amp;lt;arch&amp;gt; , &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; CMake 변수 및 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 환경 변수의 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 대해 &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 는 다음에 의해로드 된 찾기 모듈 내에서 호출됩니다. &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00e7d102c3d7d7020089e12a0302a78e827d5a93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-5-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-5-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96a14eb882d9fe292a3dc2b3bc56e7973d549088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-6-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-3-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-6-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-3-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a73ab2ade9be65a84d4b386016d33f20058da660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; if &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-8-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; is set, and &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; for each &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;prefix&amp;gt;/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 경우 &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-8-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; 가&lt;/a&gt; 설정되고, &lt;code&gt;&amp;lt;prefix&amp;gt;/lib&lt;/code&gt; 각 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 에서 &lt;a href=&quot;../variable/cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0ff0f1b895e1e38004f2871697ce8f2a318c658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; specify the windows user and domain for which the &lt;code&gt;&amp;lt;Permission&amp;gt;&lt;/code&gt; element should be generated.</source>
          <target state="translated">&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;Permission&amp;gt;&lt;/code&gt; 요소를 생성 할 Windows 사용자 및 도메인을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="0b7fd3c30caf1c2fd0087057b89580b6af90ac04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; have higher precedence than concatenation. &lt;code&gt;|&lt;/code&gt; has lower precedence than concatenation. This means that the regular expression &lt;code&gt;^ab+d$&lt;/code&gt; matches &lt;code&gt;abbd&lt;/code&gt; but not &lt;code&gt;ababd&lt;/code&gt;, and the regular expression &lt;code&gt;^(ab|cd)$&lt;/code&gt; matches &lt;code&gt;ab&lt;/code&gt; but not &lt;code&gt;abd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;?&lt;/code&gt; 연결보다 우선 순위가 높습니다. &lt;code&gt;|&lt;/code&gt; 연결보다 우선 순위가 낮습니다. 정규 표현식 것을이 수단 &lt;code&gt;^ab+d$&lt;/code&gt; 일치 &lt;code&gt;abbd&lt;/code&gt; 하지만 &lt;code&gt;ababd&lt;/code&gt; , 그리고 정규 표현식은 &lt;code&gt;^(ab|cd)$&lt;/code&gt; 와 일치 &lt;code&gt;ab&lt;/code&gt; 하지만 &lt;code&gt;abd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26a8fb8591b8476944f5488dd06515cf88880b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--build-and-test&lt;/code&gt; See &lt;a href=&quot;#build-and-test-mode&quot;&gt;Build and Test Mode&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--build-and-test&lt;/code&gt; &lt;a href=&quot;#build-and-test-mode&quot;&gt;빌드 및 테스트 모드를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="11da95453e5d9f447d0faa51519893843b6290ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.proto&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;.proto&lt;/code&gt; 파일</target>
        </trans-unit>
        <trans-unit id="bdd117ccfb14e2a535e8cbc3a7452d348469fe33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.proto&lt;/code&gt; filess</source>
          <target state="translated">&lt;code&gt;.proto&lt;/code&gt; 의 filess</target>
        </trans-unit>
        <trans-unit id="04ce0156dd121c716a455ab86528ea1f0f2c08b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;condition&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, else &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 만약 &lt;code&gt;condition&lt;/code&gt; 인 &lt;code&gt;1&lt;/code&gt; , 다른 &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1027103f98d5d2fda7f0f4861decb0ceba035156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt; are equal, else &lt;code&gt;0&lt;/code&gt;. The comparison is case-sensitive. For a case-insensitive comparison, combine with a &lt;a href=&quot;#string-transforming-generator-expressions&quot;&gt;string transforming generator expression&lt;/a&gt;,</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우 &lt;code&gt;string1&lt;/code&gt; 과 &lt;code&gt;string2&lt;/code&gt; 동일하고, 또 &lt;code&gt;0&lt;/code&gt; . 비교는 대소 문자를 구분합니다. 대소 문자를 구분하지 않는 비교를 위해 &lt;a href=&quot;#string-transforming-generator-expressions&quot;&gt;문자열 변환 생성기 expression&lt;/a&gt; 과 결합하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9c686fbb8390b1d0bff5b56923261f1e38c124c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;string&lt;/code&gt; is member of the semicolon-separated &lt;code&gt;list&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;. Uses case-sensitive comparisons.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; 이 세미콜론으로 구분 된 &lt;code&gt;list&lt;/code&gt; 의 멤버 이면 1 이고 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; 입니다. 대소 문자 구분 비교를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="78423367cd72eefc535785a7a770c87f418a936a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;target&lt;/code&gt; exists, else &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우, &lt;code&gt;target&lt;/code&gt; 존재, 다른 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31e51fb9101a5f4469065e77e20a8fa54cf66694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;v1&lt;/code&gt; is a version greater than &lt;code&gt;v2&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우에 &lt;code&gt;v1&lt;/code&gt; 보다 큰 버전 &lt;code&gt;v2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84d8eecd5382af38f4a7442371b3c977d51107df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;v1&lt;/code&gt; is a version greater than or equal to &lt;code&gt;v2&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우에 &lt;code&gt;v1&lt;/code&gt; 아닌 버전 크거나 같은 &lt;code&gt;v2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d22c56fd647b5773afb01476e1996ac9f21b6516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;v1&lt;/code&gt; is a version less than &lt;code&gt;v2&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우에 &lt;code&gt;v1&lt;/code&gt; 버전 미만이다 &lt;code&gt;v2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03a48b73ca5e53e1a6756a28241ae1434817798d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;v1&lt;/code&gt; is a version less than or equal to &lt;code&gt;v2&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우에 &lt;code&gt;v1&lt;/code&gt; 버전 미만이거나 동일 &lt;code&gt;v2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a8fd96cb956dafb56e2121a8544080267215ab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;v1&lt;/code&gt; is the same version as &lt;code&gt;v2&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우, &lt;code&gt;v1&lt;/code&gt; 동일한 버전 &lt;code&gt;v2&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94d2ee1d3aa7f5d976d6105a6765384e7643f7e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;value1&lt;/code&gt; and &lt;code&gt;value2&lt;/code&gt; are numerically equal, else &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 경우 &lt;code&gt;value1&lt;/code&gt; 및 &lt;code&gt;value2&lt;/code&gt; 동일한 수치이고, 다른 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="560b4049030974a46aaf7d4df38a3cd09181f9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if config is &lt;code&gt;cfg&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;. This is a case-insensitive comparison. The mapping in &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is also considered by this expression when it is evaluated on a property on an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 설정 인 경우 &lt;code&gt;cfg&lt;/code&gt; 다른, &lt;code&gt;0&lt;/code&gt; . 대소 문자를 구분하지 않는 비교입니다. &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 의 매핑 은 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 의 속성에서 평가 될 때이 식에 의해 고려됩니다 .</target>
        </trans-unit>
        <trans-unit id="ebce77e7f080fb94252819eaa20da1af8606061f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if config is any one of the entries in &lt;code&gt;cfgs&lt;/code&gt;, else &lt;code&gt;0&lt;/code&gt;. This is a case-insensitive comparison. The mapping in &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is also considered by this expression when it is evaluated on a property on an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; config가 &lt;code&gt;cfgs&lt;/code&gt; 의 항목 중 하나이면 1 이고 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; 입니다. 대소 문자를 구분하지 않는 비교입니다. &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 의 매핑 도 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 의 속성에서 평가 될 때이 식에서 고려됩니다 .</target>
        </trans-unit>
        <trans-unit id="270f0feb9ca329b04b98588171c03d99e5cac6ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the &lt;code&gt;policy&lt;/code&gt; was NEW when the &amp;lsquo;head&amp;rsquo; target was created, else &lt;code&gt;0&lt;/code&gt;. If the &lt;code&gt;policy&lt;/code&gt; was not set, the warning message for the policy will be emitted. This generator expression only works for a subset of policies.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 'head'대상이 작성 될 때 &lt;code&gt;policy&lt;/code&gt; 이 NEW 인 경우 1 이고 , 그렇지 않은 경우 &lt;code&gt;0&lt;/code&gt; 입니다. &lt;code&gt;policy&lt;/code&gt; 이 설정되지 않은 경우 정책 에 대한 경고 메시지가 나타납니다. 이 생성기 표현식은 정책의 서브 세트에만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d307e14900f83347bda40da440c74b8057b24217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the version of the C compiler matches &lt;code&gt;version&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; C 컴파일러의 &lt;code&gt;version&lt;/code&gt; 과 일치하면 1 이고 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; 입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c95c4c83b574d0f9045d579d37508e2ca154e28e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the version of the CXX compiler matches &lt;code&gt;version&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; CXX 컴파일러의 &lt;code&gt;version&lt;/code&gt; 과 일치하면 1 이고 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; 입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc2330dfad2f2764a9abd7eca5b1bfb10bdb2d62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the version of the Fortran compiler matches &lt;code&gt;version&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; Fortran 컴파일러의 &lt;code&gt;version&lt;/code&gt; 과 일치하면 1 이고 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; 입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49c51865eab79fd610eb1997650f4c2ac37c05f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the version of the ISPC compiler matches &lt;code&gt;version&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; ISPC 컴파일러의 &lt;code&gt;version&lt;/code&gt; 과 일치하면 1 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b80b40d79bf8e043c5e6bbc7f15a33aa362c019c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the version of the OBJC compiler matches &lt;code&gt;version&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; OBJC 컴파일러의 &lt;code&gt;version&lt;/code&gt; 과 일치하면 1 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ef76968080886c65c9241bcb89f7baef34ea3c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the version of the OBJCXX compiler matches &lt;code&gt;version&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; OBJCXX 컴파일러의 &lt;code&gt;version&lt;/code&gt; 과 일치하면 1 , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="15324d61bc64587ab591fdc6f61d3a85ee7df80d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; when the language used for compilation unit matches &lt;code&gt;language&lt;/code&gt; and the CMake&amp;rsquo;s compiler id of the language compiler matches any one of the entries in &lt;code&gt;compiler_ids&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. This expression is a short form for the combination of &lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:language&amp;gt;&lt;/code&gt; and &lt;code&gt;$&amp;lt;LANG_COMPILER_ID:compiler_ids&amp;gt;&lt;/code&gt;. This expression may be used to specify compile options, compile definitions, and include directories for source files of a particular language and compiler combination in a target. For example:</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 컴파일 단위에 사용되는 언어가 일치 할 때 &lt;code&gt;language&lt;/code&gt; 와 언어 컴파일러의 CMake 컴파일러의 ID가있는 항목 중 하나와 일치 &lt;code&gt;compiler_ids&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . 이 표현식은 &lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:language&amp;gt;&lt;/code&gt; 와 &lt;code&gt;$&amp;lt;LANG_COMPILER_ID:compiler_ids&amp;gt;&lt;/code&gt; 의 조합에 대한 짧은 형식입니다 . 이 표현식은 컴파일 옵션을 지정하고 정의를 컴파일하며 특정 언어의 소스 파일 및 컴파일러 조합을 대상에 포함하는 디렉토리를 포함하는 데 사용될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c4405b37c5faae264189cd41d2ee441624be771f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; when the language used for compilation unit matches any of the entries in &lt;code&gt;languages&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. This expression may be used to specify compile options, compile definitions, and include directories for source files of a particular language in a target. For example:</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 컴파일 단위에 사용되는 언어의 항목 중 하나와 일치하는 &lt;code&gt;languages&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . 이 표현식은 컴파일 옵션을 지정하고, 정의를 컴파일하고, 특정 언어의 소스 파일에 대한 디렉토리를 대상에 포함시키는 데 사용될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="63be24849e7f069d9c4623936ff0543472684be4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; when the language used for link step matches &lt;code&gt;language&lt;/code&gt; and the CMake&amp;rsquo;s compiler id of the language linker matches any one of the entries in &lt;code&gt;compiler_ids&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. This expression is a short form for the combination of &lt;code&gt;$&amp;lt;LINK_LANGUAGE:language&amp;gt;&lt;/code&gt; and &lt;code&gt;$&amp;lt;LANG_COMPILER_ID:compiler_ids&amp;gt;&lt;/code&gt;. This expression may be used to specify link libraries, link options, link directories and link dependencies of a particular language and linker combination in a target. For example:</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 링크 단계에 사용되는 언어가 일치 할 때 &lt;code&gt;language&lt;/code&gt; 및 언어 링커의 CMake의 컴파일러 ID가있는 항목 중 하나와 일치 &lt;code&gt;compiler_ids&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . 이 표현식은 &lt;code&gt;$&amp;lt;LINK_LANGUAGE:language&amp;gt;&lt;/code&gt; 및 &lt;code&gt;$&amp;lt;LANG_COMPILER_ID:compiler_ids&amp;gt;&lt;/code&gt; 조합에 대한 짧은 형식입니다 . 이 표현식은 링크 라이브러리, 링크 옵션, 링크 디렉토리 및 특정 언어의 링크 종속성과 타겟의 링커 조합을 지정하는 데 사용할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="387d1c6da6d4f567b6b5da94ce1b3abb90e291b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; when the language used for link step matches any of the entries in &lt;code&gt;languages&lt;/code&gt;, otherwise &lt;code&gt;0&lt;/code&gt;. This expression may be used to specify link libraries, link options, link directories and link dependencies of a particular language in a target. For example:</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 링크 단계에 사용되는 언어의 항목 중 하나와 일치하는 &lt;code&gt;languages&lt;/code&gt; , 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; . 이 표현식은 링크 라이브러리, 링크 옵션, 링크 디렉토리 및 타겟에서 특정 언어의 링크 종속성을 지정하는 데 사용할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="9f0fd9ca50f40baccc161017b705de930afd9a40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALIAS&lt;/code&gt; targets are not mutable, installable or exportable. They are entirely local to the buildsystem description. A name can be tested for whether it is an &lt;code&gt;ALIAS&lt;/code&gt; name by reading the &lt;a href=&quot;../prop_tgt/aliased_target#prop_tgt:ALIASED_TARGET&quot; id=&quot;index-0-prop_tgt:ALIASED_TARGET&quot;&gt;&lt;code&gt;ALIASED_TARGET&lt;/code&gt;&lt;/a&gt; property from it:</source>
          <target state="translated">&lt;code&gt;ALIAS&lt;/code&gt; 대상은 변경, 설치 또는 내보낼 수 없습니다. 그것들은 전적으로 빌드 시스템 설명에 국한됩니다. &lt;a href=&quot;../prop_tgt/aliased_target#prop_tgt:ALIASED_TARGET&quot; id=&quot;index-0-prop_tgt:ALIASED_TARGET&quot;&gt; &lt;code&gt;ALIASED_TARGET&lt;/code&gt; &lt;/a&gt; 특성을 읽어서 이름이 &lt;code&gt;ALIAS&lt;/code&gt; 이름 인지 여부를 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0689ec13b81b8ca11793f7173b560d265d9fa2f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALIAS&lt;/code&gt; targets can be used as linkable targets and as targets to read properties from. They can also be tested for existence with the regular &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(TARGET)&lt;/code&gt;&lt;/a&gt; subcommand. The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; may not be used to modify properties of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, that is, it may not be used as the operand of &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;set_target_properties#command:set_target_properties&quot; id=&quot;index-0-command:set_target_properties&quot;&gt;&lt;code&gt;set_target_properties()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; etc. An &lt;code&gt;ALIAS&lt;/code&gt; target may not be installed or exported.</source>
          <target state="translated">&lt;code&gt;ALIAS&lt;/code&gt; 대상은 연결 가능한 대상 및 속성을 읽을 대상으로 사용할 수 있습니다. 일반 &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if(TARGET)&lt;/code&gt; &lt;/a&gt; 부속 명령 으로 존재 여부를 테스트 할 수도 있습니다 . &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 특성을 수정하는 데 사용되지 않을 수도 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; , 즉, 그것의 피연산자로 사용하지 않을 수 &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;set_target_properties#command:set_target_properties&quot; id=&quot;index-0-command:set_target_properties&quot;&gt; &lt;code&gt;set_target_properties()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 등의 &lt;code&gt;ALIAS&lt;/code&gt; 의 타겟이 설치 또는 반출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7984714e93d11f64e68171de30b8239a8e54b41e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALIAS&lt;/code&gt; targets can be used as targets to read properties from, executables for custom commands and custom targets. They can also be tested for existence with the regular &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(TARGET)&lt;/code&gt;&lt;/a&gt; subcommand. The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; may not be used to modify properties of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, that is, it may not be used as the operand of &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;set_target_properties#command:set_target_properties&quot; id=&quot;index-0-command:set_target_properties&quot;&gt;&lt;code&gt;set_target_properties()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; etc. An &lt;code&gt;ALIAS&lt;/code&gt; target may not be installed or exported.</source>
          <target state="translated">&lt;code&gt;ALIAS&lt;/code&gt; 대상은 속성을 읽을 대상, 사용자 지정 명령 및 사용자 지정 대상의 실행 파일로 사용할 수 있습니다. 일반 &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if(TARGET)&lt;/code&gt; &lt;/a&gt; 부속 명령 으로 존재 여부를 테스트 할 수도 있습니다 . &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 특성을 수정하는 데 사용되지 않을 수도 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; , 즉, 그것의 피연산자로 사용하지 않을 수 &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-0-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;set_target_properties#command:set_target_properties&quot; id=&quot;index-0-command:set_target_properties&quot;&gt; &lt;code&gt;set_target_properties()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 등의 &lt;code&gt;ALIAS&lt;/code&gt; 의 타겟이 설치 또는 반출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="460e85b1dd6c621168f42dfb4ad753053314f4aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALLOW_UNKNOWN_COMPILERS&lt;/code&gt; and &lt;code&gt;ALLOW_UNKNOWN_COMPILER_VERSIONS&lt;/code&gt; cause the module to generate conditions that treat unknown compilers as simply lacking all features. Without these options the default behavior is to generate a &lt;code&gt;#error&lt;/code&gt; for unknown compilers and versions.</source>
          <target state="translated">&lt;code&gt;ALLOW_UNKNOWN_COMPILERS&lt;/code&gt; 및 &lt;code&gt;ALLOW_UNKNOWN_COMPILER_VERSIONS&lt;/code&gt; 는 모듈이 알 수없는 컴파일러를 모든 기능이없는 것으로 취급하는 조건을 생성하게합니다. 이러한 옵션이 없으면 기본 동작은 알 수없는 컴파일러 및 버전에 대해 &lt;code&gt;#error&lt;/code&gt; 를 생성하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="3bd200f0fd3f8da6745d0351a402219bf24df05a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANY&lt;/code&gt; If any of the commands in the list of commands fail, the &lt;code&gt;execute_process()&lt;/code&gt; command halts with an error.</source>
          <target state="translated">&lt;code&gt;ANY&lt;/code&gt; 명령 목록의 명령 중 하나라도 실패하면 &lt;code&gt;execute_process()&lt;/code&gt; 명령이 오류와 함께 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="376abfc6dfbe893ee65c365059bd59bac8c07137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANY&lt;/code&gt;: The two possibilities (&lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;OFF&lt;/code&gt;) will be searched.</source>
          <target state="translated">&lt;code&gt;ANY&lt;/code&gt; : 두 가지 가능성 ( &lt;code&gt;ON&lt;/code&gt; 및 &lt;code&gt;OFF&lt;/code&gt; )이 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="37653c017d8d57efd6f482809809275044baa9ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;APPEND&lt;/code&gt;, &lt;code&gt;PREPEND&lt;/code&gt;: Append, prepend specified value to each element of the list.</source>
          <target state="translated">&lt;code&gt;APPEND&lt;/code&gt; , &lt;code&gt;PREPEND&lt;/code&gt; : 추가, 목록의 각 요소 앞에 지정된 값을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f64a0f38821050b756e276ae57bea84ef3ab3359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; is intended for header-only libraries or similar packages with no binaries.</source>
          <target state="translated">&lt;code&gt;ARCH_INDEPENDENT&lt;/code&gt; 는 헤더가없는 라이브러리 또는 바이너리가없는 유사한 패키지를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="0fdb8e1373256acbbc0eee18cffc04bca1e7c81e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASCENDING&lt;/code&gt;: Sorts the list in ascending order. This is the default behavior when the &lt;code&gt;ORDER&lt;/code&gt; option is not given.</source>
          <target state="translated">&lt;code&gt;ASCENDING&lt;/code&gt; : 목록을 오름차순으로 정렬합니다. &lt;code&gt;ORDER&lt;/code&gt; 옵션이 제공되지 않은 경우의 기본 동작 입니다.</target>
        </trans-unit>
        <trans-unit id="fb14960b147fbba035a2ce80ee84717d113e3f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AT&lt;/code&gt;: Specify a list of indexes.</source>
          <target state="translated">&lt;code&gt;AT&lt;/code&gt; : 인덱스 목록을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7f05b46b49ef3545bc2b82850280cbcbe15f63c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppleClang&lt;/code&gt;: Apple Clang for Xcode versions 4.4 though 9.2.</source>
          <target state="translated">&lt;code&gt;AppleClang&lt;/code&gt; : Xcode 용 Apple Clang 버전 4.4 ~ 9.2.</target>
        </trans-unit>
        <trans-unit id="d0ac7d835068750d607f75506cb9fb68b45a836c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppleClang&lt;/code&gt;: Apple Clang for Xcode versions 4.4+.</source>
          <target state="translated">&lt;code&gt;AppleClang&lt;/code&gt; : Xcode 버전 4.4 이상용 Apple Clang.</target>
        </trans-unit>
        <trans-unit id="a7c97a3c38bd8eac8f5c8deb1558266a91dc706f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BARE_FEATURES&lt;/code&gt; will define the compatibility macros with the name used in newer versions of the language standard, so the code can use the new feature name unconditionally.</source>
          <target state="translated">&lt;code&gt;BARE_FEATURES&lt;/code&gt; 는 최신 버전의 언어 표준에서 사용되는 이름으로 호환성 매크로를 정의하므로 코드는 새로운 기능 이름을 무조건 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a81d39e47ef2d28ddf995c41eb06916fc9fe7519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BATCH&lt;/code&gt; When in this mode CMake determines which files are grouped together. The &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; property controls the upper limit on how many sources can be combined per unity source file.</source>
          <target state="translated">&lt;code&gt;BATCH&lt;/code&gt; 이 모드에서 CMake는 함께 그룹화되는 파일을 결정합니다. &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt; 의&lt;/a&gt; 속성은 단일 소스 파일 당 결합 할 수있는 방법을 많은 소스에 상한을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="d39b5556aeec3d9179acd46e4fcf6cdfdddeb993" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt; is a boolean specifying whether the macOS &lt;code&gt;install_name&lt;/code&gt; of a target in the build tree uses the directory given by &lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt;. This setting only applies to targets on macOS.</source>
          <target state="translated">&lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt; 은 빌드 트리에서 대상 의 macOS &lt;code&gt;install_name&lt;/code&gt; 이 &lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; 에&lt;/a&gt; 의해 제공된 디렉토리를 사용 할지 여부를 지정하는 부울 입니다. 이 설정은 macOS의 대상에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8eb5f227843f727741182a62f42484a57b2ae2d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt; is a boolean specifying whether to link the target in the build tree with the &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt;. This takes precedence over &lt;a href=&quot;skip_build_rpath#prop_tgt:SKIP_BUILD_RPATH&quot; id=&quot;index-0-prop_tgt:SKIP_BUILD_RPATH&quot;&gt;&lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt;&lt;/a&gt; and avoids the need for relinking before installation.</source>
          <target state="translated">&lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt; 는 빌드 트리의 대상을 &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 와 연결할지 여부를 지정하는 부울 입니다. 이는 &lt;a href=&quot;skip_build_rpath#prop_tgt:SKIP_BUILD_RPATH&quot; id=&quot;index-0-prop_tgt:SKIP_BUILD_RPATH&quot;&gt; &lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt; &lt;/a&gt; 보다 우선하며 설치 전에 다시 연결할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fed63dd1d22ba245698434b13a677844c30e1137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BUILT_ONLY&lt;/code&gt; The &amp;ldquo;Link Binary With Libraries&amp;rdquo; build phase will be used to link to another target under the following conditions:</source>
          <target state="translated">&lt;code&gt;BUILT_ONLY&lt;/code&gt; &amp;ldquo;Link Binary With Libraries&amp;rdquo;빌드 단계는 다음 조건에서 다른 대상에 연결하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="03dd84428de85ec17460b943d9ab343c6adc0bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; should no longer be used.</source>
          <target state="translated">&lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; 를 더 이상 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="12739c28eae524a00a3075a996823ba62cc76dbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_CUDA_FLAGS&lt;/code&gt;: Initialized by the &lt;a href=&quot;../envvar/cudaflags#envvar:CUDAFLAGS&quot; id=&quot;index-0-envvar:CUDAFLAGS&quot;&gt;&lt;code&gt;CUDAFLAGS&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;CMAKE_CUDA_FLAGS&lt;/code&gt; : &lt;a href=&quot;../envvar/cudaflags#envvar:CUDAFLAGS&quot; id=&quot;index-0-envvar:CUDAFLAGS&quot;&gt; &lt;code&gt;CUDAFLAGS&lt;/code&gt; &lt;/a&gt; 환경 변수에 의해 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="f7f45637b804de58722eb4cfc013ded85424ca86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_CXX_COMPILER_PREDEFINES_COMMAND&lt;/code&gt; isn&amp;rsquo;t empty and</source>
          <target state="translated">&lt;code&gt;CMAKE_CXX_COMPILER_PREDEFINES_COMMAND&lt;/code&gt; 가 비어 있지 않고</target>
        </trans-unit>
        <trans-unit id="7b57d43a8e2afce5dfb73e2963f1dd0c663f942a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt;: Initialized by the &lt;a href=&quot;../envvar/cxxflags#envvar:CXXFLAGS&quot; id=&quot;index-0-envvar:CXXFLAGS&quot;&gt;&lt;code&gt;CXXFLAGS&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; : &lt;a href=&quot;../envvar/cxxflags#envvar:CXXFLAGS&quot; id=&quot;index-0-envvar:CXXFLAGS&quot;&gt; &lt;code&gt;CXXFLAGS&lt;/code&gt; &lt;/a&gt; 환경 변수에 의해 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="07a6b2709eda072d13f22840e9f419dad2e7d69b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_C_FLAGS&lt;/code&gt;: Initialized by the &lt;a href=&quot;../envvar/cflags#envvar:CFLAGS&quot; id=&quot;index-0-envvar:CFLAGS&quot;&gt;&lt;code&gt;CFLAGS&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;CMAKE_C_FLAGS&lt;/code&gt; : &lt;a href=&quot;../envvar/cflags#envvar:CFLAGS&quot; id=&quot;index-0-envvar:CFLAGS&quot;&gt; &lt;code&gt;CFLAGS&lt;/code&gt; &lt;/a&gt; 환경 변수에 의해 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="32efbdbfcc3e83996aa97b4f7b664d0670fbefdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_EXECUTABLE_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_EXECUTABLE_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="adfcad415c73ba6bf573ff9524d0735d081c6efd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; is ignored if &lt;a href=&quot;cmake_find_use_package_registry#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-2-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; is set.</source>
          <target state="translated">&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; 는 경우 무시됩니다 &lt;a href=&quot;cmake_find_use_package_registry#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-2-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt; 가&lt;/a&gt; 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="cbe81a41315bf6e0625f61b0a4b534c02d888f96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; is ignored if &lt;a href=&quot;cmake_find_use_system_package_registry#variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-2-variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; is set.</source>
          <target state="translated">&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 는 경우 무시됩니다 &lt;a href=&quot;cmake_find_use_system_package_registry#variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-2-variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 가&lt;/a&gt; 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9260003cfd6f2a2da9356eebbefc17e113c79310" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_Fortran_FLAGS&lt;/code&gt;: Initialized by the &lt;a href=&quot;../envvar/fflags#envvar:FFLAGS&quot; id=&quot;index-0-envvar:FFLAGS&quot;&gt;&lt;code&gt;FFLAGS&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;CMAKE_Fortran_FLAGS&lt;/code&gt; : &lt;a href=&quot;../envvar/fflags#envvar:FFLAGS&quot; id=&quot;index-0-envvar:FFLAGS&quot;&gt; &lt;code&gt;FFLAGS&lt;/code&gt; &lt;/a&gt; 환경 변수에 의해 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="7c275d016384b20bcb1098a8bb02cb7fed67c1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_IMPORT_LIBRARY_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_IMPORT_LIBRARY_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="2ff9fa437d8c69918e185acb26de6ffa08755db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_IMPORT_LIBRARY_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_IMPORT_LIBRARY_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="6ac2fd5c4e84859643e593fb31f7b9a626d0bdcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_INSTALL_NAME_DIR&lt;/code&gt; is used to initialize the &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; property on all targets. See that target property for more information.</source>
          <target state="translated">&lt;code&gt;CMAKE_INSTALL_NAME_DIR&lt;/code&gt; 은 모든 대상 에서 &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt; 속성 을 초기화하는 데 사용됩니다 . 자세한 정보는 해당 대상 특성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0c1e57af6cde8667f30aac0cf3828493aae03762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH&lt;/code&gt; is a boolean that provides the default value for the &lt;a href=&quot;../prop_tgt/install_remove_environment_rpath#prop_tgt:INSTALL_REMOVE_ENVIRONMENT_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_REMOVE_ENVIRONMENT_RPATH&quot;&gt;&lt;code&gt;INSTALL_REMOVE_ENVIRONMENT_RPATH&lt;/code&gt;&lt;/a&gt; property of all subsequently created targets.</source>
          <target state="translated">&lt;code&gt;CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH&lt;/code&gt; 는 이후에 생성되는 모든 대상 의 &lt;a href=&quot;../prop_tgt/install_remove_environment_rpath#prop_tgt:INSTALL_REMOVE_ENVIRONMENT_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_REMOVE_ENVIRONMENT_RPATH&quot;&gt; &lt;code&gt;INSTALL_REMOVE_ENVIRONMENT_RPATH&lt;/code&gt; &lt;/a&gt; 속성에 대한 기본값을 제공하는 부울입니다 .</target>
        </trans-unit>
        <trans-unit id="096c72fdc9c27588d2601360a807c83134c67747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; is a boolean that if set to &lt;code&gt;True&lt;/code&gt; will append to the runtime search path (rpath) of installed binaries any directories outside the project that are in the linker search path or contain linked library files. The directories are appended after the value of the &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;code&gt;CMAKE_INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; 는 &lt;code&gt;True&lt;/code&gt; 로 설정 하면 링커 검색 경로에 있거나 링크 된 라이브러리 파일을 포함하는 프로젝트 외부의 모든 디렉토리가 설치된 바이너리의 런타임 검색 경로 (rpath)에 추가 되는 부울입니다 . 디렉토리는 &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 대상 특성 값 뒤에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="57617c217be258cdb208c50621a21f3d51a8a177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; is a boolean that if set to &lt;code&gt;true&lt;/code&gt; will append directories in the linker search path and outside the project to the &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt;. This is used to initialize the target property &lt;a href=&quot;../prop_tgt/install_rpath_use_link_path#prop_tgt:INSTALL_RPATH_USE_LINK_PATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH_USE_LINK_PATH&quot;&gt;&lt;code&gt;INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt;&lt;/a&gt; for all targets.</source>
          <target state="translated">&lt;code&gt;CMAKE_INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 링커 검색 경로 및 프로젝트 외부의 디렉토리를 &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; 에&lt;/a&gt; 추가 하는 부울입니다 . 모든 대상에 대한 대상 특성 &lt;a href=&quot;../prop_tgt/install_rpath_use_link_path#prop_tgt:INSTALL_RPATH_USE_LINK_PATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH_USE_LINK_PATH&quot;&gt; &lt;code&gt;INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; &lt;/a&gt; 를 초기화하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="70c9367236b7a54edec7f2553e1b5c902c2e1284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0025&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0025#policy:CMP0025&quot; id=&quot;index-0-policy:CMP0025&quot;&gt;&lt;code&gt;CMP0025&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0025&lt;/code&gt; 는 정책 &lt;a href=&quot;../policy/cmp0025#policy:CMP0025&quot; id=&quot;index-0-policy:CMP0025&quot;&gt; &lt;code&gt;CMP0025&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="a23b83a003dc396c274b10d106c1087e55481d9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0047&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0047#policy:CMP0047&quot; id=&quot;index-0-policy:CMP0047&quot;&gt;&lt;code&gt;CMP0047&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0047&lt;/code&gt; 은 정책 &lt;a href=&quot;../policy/cmp0047#policy:CMP0047&quot; id=&quot;index-0-policy:CMP0047&quot;&gt; &lt;code&gt;CMP0047&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="fbfbe760f0ad2d8160913adf7fac1b2e9644cffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0056&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0056#policy:CMP0056&quot; id=&quot;index-0-policy:CMP0056&quot;&gt;&lt;code&gt;CMP0056&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0056&lt;/code&gt; 은 정책 &lt;a href=&quot;../policy/cmp0056#policy:CMP0056&quot; id=&quot;index-0-policy:CMP0056&quot;&gt; &lt;code&gt;CMP0056&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="b4d095bd91cbf1da97fa41d73d15443ed18543c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0060&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt;&lt;code&gt;CMP0060&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0060&lt;/code&gt; 은 정책 &lt;a href=&quot;../policy/cmp0060#policy:CMP0060&quot; id=&quot;index-0-policy:CMP0060&quot;&gt; &lt;code&gt;CMP0060&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="a99b04bde05abab032ea6b73f749186920d066ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0065&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0065#policy:CMP0065&quot; id=&quot;index-0-policy:CMP0065&quot;&gt;&lt;code&gt;CMP0065&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0065&lt;/code&gt; 는 정책 &lt;a href=&quot;../policy/cmp0065#policy:CMP0065&quot; id=&quot;index-0-policy:CMP0065&quot;&gt; &lt;code&gt;CMP0065&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="29c735725dfa0d42186e64fd4799b442007ca3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0066&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0066#policy:CMP0066&quot; id=&quot;index-0-policy:CMP0066&quot;&gt;&lt;code&gt;CMP0066&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0066&lt;/code&gt; 은 정책 &lt;a href=&quot;../policy/cmp0066#policy:CMP0066&quot; id=&quot;index-0-policy:CMP0066&quot;&gt; &lt;code&gt;CMP0066&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="eb33024c284b203172d2a3e9d003a92ccc7150cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0067&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0067#policy:CMP0067&quot; id=&quot;index-0-policy:CMP0067&quot;&gt;&lt;code&gt;CMP0067&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0067&lt;/code&gt; 은 정책 &lt;a href=&quot;../policy/cmp0067#policy:CMP0067&quot; id=&quot;index-0-policy:CMP0067&quot;&gt; &lt;code&gt;CMP0067&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="c93ba7fb7d449ff730193bde1dc2500b49b3397f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0082&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0082#policy:CMP0082&quot; id=&quot;index-0-policy:CMP0082&quot;&gt;&lt;code&gt;CMP0082&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0082&lt;/code&gt; 는 정책 &lt;a href=&quot;../policy/cmp0082#policy:CMP0082&quot; id=&quot;index-0-policy:CMP0082&quot;&gt; &lt;code&gt;CMP0082&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="4cc56dd4b2737944f7017db4e6fa034ec82095d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0089&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0089#policy:CMP0089&quot; id=&quot;index-0-policy:CMP0089&quot;&gt;&lt;code&gt;CMP0089&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0089&lt;/code&gt; 는 정책 &lt;a href=&quot;../policy/cmp0089#policy:CMP0089&quot; id=&quot;index-0-policy:CMP0089&quot;&gt; &lt;code&gt;CMP0089&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="2ff6b17de929d57b90c87e18b24547d908c02ad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0102&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0102#policy:CMP0102&quot; id=&quot;index-0-policy:CMP0102&quot;&gt;&lt;code&gt;CMP0102&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0102&lt;/code&gt; 는 정책 &lt;a href=&quot;../policy/cmp0102#policy:CMP0102&quot; id=&quot;index-0-policy:CMP0102&quot;&gt; &lt;code&gt;CMP0102&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="300ff8a01dd68784e4f3fb4db94eefc0a43cdc6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_POLICY_WARNING_CMP0112&lt;/code&gt; controls the warning for policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_POLICY_WARNING_CMP0112&lt;/code&gt; 는 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; 에&lt;/a&gt; 대한 경고를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="9721052ceef03387caf6ae9bd67c4dfb1ec6473c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_PUSH_CHECK_STATE()&lt;/code&gt; macro receives optional argument &lt;code&gt;RESET&lt;/code&gt;. Whether it&amp;rsquo;s specified, &lt;code&gt;CMAKE_PUSH_CHECK_STATE()&lt;/code&gt; will set all &lt;code&gt;CMAKE_REQUIRED_*&lt;/code&gt; variables to empty values, same as &lt;code&gt;CMAKE_RESET_CHECK_STATE()&lt;/code&gt; call will do.</source>
          <target state="translated">&lt;code&gt;CMAKE_PUSH_CHECK_STATE()&lt;/code&gt; 매크로는 선택적 인수 &lt;code&gt;RESET&lt;/code&gt; 을 수신 합니다. 지정 여부에 관계없이 &lt;code&gt;CMAKE_PUSH_CHECK_STATE()&lt;/code&gt; 는 &lt;code&gt;CMAKE_RESET_CHECK_STATE()&lt;/code&gt; 호출 과 마찬가지로 모든 &lt;code&gt;CMAKE_REQUIRED_*&lt;/code&gt; 변수를 빈 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="240910a890b33ec7d11bdab7c005a5ae647dc408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_SHARED_LIBRARY_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_SHARED_LIBRARY_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해이를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="e9ea9040833a2fdcf8cc85aa31e3026b510377ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_SHARED_LIBRARY_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_SHARED_LIBRARY_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="b341f796e9fc28e69f66f5359bab12dbde812cbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_SHARED_MODULE_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_SHARED_MODULE_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="51fd8f06149ab7b2ad57cf62d3bcd2bd7f7b407b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_SHARED_MODULE_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_SHARED_MODULE_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="c28d05d55d496173001d5f6fdd8f23f538f45ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_STATIC_LIBRARY_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_STATIC_LIBRARY_PREFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="0215c2aea8cc45f05eb2f856cde3932e94ba59e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_STATIC_LIBRARY_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; overrides this for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_STATIC_LIBRARY_SUFFIX_&amp;lt;LANG&amp;gt;&lt;/code&gt; 은 언어 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대해 이것을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="85172101e200e7bfa10ced765e240643802936a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; is by default set to the same value as the &lt;a href=&quot;cmake_host_system_name#variable:CMAKE_HOST_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_HOST_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable so that the build targets the host system.</source>
          <target state="translated">&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 은 기본적으로 &lt;a href=&quot;cmake_host_system_name#variable:CMAKE_HOST_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_HOST_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값으로 설정되어 빌드가 호스트 시스템을 대상으로합니다.</target>
        </trans-unit>
        <trans-unit id="eac079d94dedcfc45d19881775343e04ab7167fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; may be set explicitly when first configuring a new build tree in order to enable &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-toolchain&quot;&gt;cross compiling&lt;/a&gt;. In this case the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable must also be set explicitly.</source>
          <target state="translated">&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-toolchain&quot;&gt;교차 컴파일&lt;/a&gt; 을 사용하기 위해 새 빌드 트리를 처음 구성 할 때 CMAKE_SYSTEM_NAME을 명시 적으로 설정할 수 있습니다 . 이 경우 &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt; 변수도 명시 적으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ac6ad4844df0927f0616d1a47511bb730e87cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; intended to be modified by the project; use &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; for this.</source>
          <target state="translated">&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 는 프로젝트에 의해 수정 &lt;em&gt;되지 않습니다&lt;/em&gt; . 이를 위해 &lt;a href=&quot;cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="acc463c8000eba21355381d932d418223ea89cf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CMakeLists.txt&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="33d682669df8cfbbd2c7b7cf18a50ba2ab14b9d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; live in the project&amp;rsquo;s root directory. They both have exactly the same format, and both are optional (though at least one must be present if &lt;code&gt;--preset&lt;/code&gt; is specified.) &lt;code&gt;CMakePresets.json&lt;/code&gt; is meant to save project-wide builds, while &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; is meant for developers to save their own local builds. &lt;code&gt;CMakePresets.json&lt;/code&gt; may be checked into a version control system, and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; should NOT be checked in. For example, if a project is using Git, &lt;code&gt;CMakePresets.json&lt;/code&gt; may be tracked, and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; should be added to the &lt;code&gt;.gitignore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMakePresets.json&lt;/code&gt; 및 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 은 프로젝트의 루트 디렉터리에 있습니다. 둘 다 정확히 동일한 형식을 가지며 둘 다 선택 사항입니다 ( &lt;code&gt;--preset&lt;/code&gt; 이 지정된 경우 적어도 하나가 있어야 함 ). &lt;code&gt;CMakePresets.json&lt;/code&gt; 은 프로젝트 전체 빌드를 저장하는 반면 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 은 개발자가 저장할 수 있습니다. 자신의 로컬 빌드. &lt;code&gt;CMakePresets.json&lt;/code&gt; 는 버전 관리 시스템에 확인 될 수 있고, &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 는 체크되지 않아야한다. 프로젝트 힘내을 사용하는 경우, 예를 들어, &lt;code&gt;CMakePresets.json&lt;/code&gt; 가 추적 될 수 있고, &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 을 받는 추가되어야 &lt;code&gt;.gitignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c5a5d6f6e986e7be0cdfd886f94d15dc887a5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMPATIBILITY_MODE&lt;/code&gt;&lt;code&gt;AnyNewerVersion&lt;/code&gt; handles the version range if any is specified (see &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command for the details). All other modes are incompatible with version ranges and will display an author warning if one is specified.</source>
          <target state="translated">&lt;code&gt;COMPATIBILITY_MODE&lt;/code&gt; &lt;code&gt;AnyNewerVersion&lt;/code&gt; 은 지정된 경우 버전 범위를 처리합니다 (자세한 내용은 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 참조). 다른 모든 모드는 버전 범위와 호환되지 않으며 지정된 경우 작성자 경고를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="db8f630884c0904f4bebc238c2d54528dcb3bfcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CPython&lt;/code&gt;: this is the standard implementation. Various products, like &lt;code&gt;Anaconda&lt;/code&gt; or &lt;code&gt;ActivePython&lt;/code&gt;, rely on this implementation.</source>
          <target state="translated">&lt;code&gt;CPython&lt;/code&gt; : 이것은 표준 구현입니다. &lt;code&gt;Anaconda&lt;/code&gt; 또는 &lt;code&gt;ActivePython&lt;/code&gt; 과 같은 다양한 제품 이이 구현에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="7f1b37d948d5c0290adc6f604ae3d4a24c65197a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CUDA::cublasLt&lt;/code&gt; starting in CUDA 10.1</source>
          <target state="translated">&lt;code&gt;CUDA::cublasLt&lt;/code&gt; 10.1부터 CUDA :: cublasLt</target>
        </trans-unit>
        <trans-unit id="4e5674efbbc6f97baa7ff824c9c0d6043934aa3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CUDA::cublasLt_static&lt;/code&gt; starting in CUDA 10.1</source>
          <target state="translated">&lt;code&gt;CUDA::cublasLt_static&lt;/code&gt; 10.1부터 CUDA :: cublasLt_static</target>
        </trans-unit>
        <trans-unit id="5e8d08275e532bec38ed824626b533abcb11d154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Clang&lt;/code&gt;: Clang compiler versions 2.9 through 6.0.</source>
          <target state="translated">&lt;code&gt;Clang&lt;/code&gt; : Clang 컴파일러 버전 2.9-6.0.</target>
        </trans-unit>
        <trans-unit id="022360dc4f01917ffb284e1ac46c5e9de111f796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Clang&lt;/code&gt;: Clang compiler versions 2.9+.</source>
          <target state="translated">&lt;code&gt;Clang&lt;/code&gt; : Clang 컴파일러 버전 2.9 이상.</target>
        </trans-unit>
        <trans-unit id="dee2b0e26bb1e13b66093cd5f9f59fe15383019a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compiler&lt;/code&gt;: search for Python 2 compiler. Only offered by IronPython.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; : Python 2 컴파일러를 검색하십시오. IronPython에서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="85b10b12164c60bbd97b1d68824cebea1c1dc0f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compiler&lt;/code&gt;: search for Python 3 compiler. Only offered by IronPython.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; : Python 3 컴파일러를 검색하십시오. IronPython에서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9d96e36f3d5dfdbc98b6b00d35ca92c705118601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compiler&lt;/code&gt;: search for Python compiler. Only offered by IronPython.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; : Python 컴파일러를 검색합니다. IronPython에서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1cb706bf6005cca4d80fddead89529a04ce3ff24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cray&lt;/code&gt;: Cray Compiler Environment version 8.1 through 8.5.8.</source>
          <target state="translated">&lt;code&gt;Cray&lt;/code&gt; : Cray 컴파일러 환경 버전 8.1-8.5.8.</target>
        </trans-unit>
        <trans-unit id="277016c86205d49d3f418dc2d5dfab291dd74d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cray&lt;/code&gt;: Cray Compiler Environment version 8.1+.</source>
          <target state="translated">&lt;code&gt;Cray&lt;/code&gt; : Cray 컴파일러 환경 버전 8.1+.</target>
        </trans-unit>
        <trans-unit id="3c9df3c3ef12b0e498f5b737301561785d56cac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFINE_SYMBOL&lt;/code&gt; sets the name of the preprocessor symbol defined when compiling sources in a shared library. If not set here then it is set to &lt;code&gt;target_EXPORTS&lt;/code&gt; by default (with some substitutions if the target is not a valid C identifier). This is useful for headers to know whether they are being included from inside their library or outside to properly setup dllexport/dllimport decorations.</source>
          <target state="translated">&lt;code&gt;DEFINE_SYMBOL&lt;/code&gt; 은 공유 라이브러리에서 소스를 컴파일 할 때 정의 된 전 처리기 기호의 이름을 설정합니다. 여기서 설정하지 않으면 기본적 으로 &lt;code&gt;target_EXPORTS&lt;/code&gt; 로 설정됩니다 (대상이 유효한 C 식별자가 아닌 경우 일부 대체 사용). 헤더가 라이브러리 내부 또는 외부에 포함되어 있는지 여부를 알면 dllexport / dllimport 장식을 올바르게 설정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5b6a9a4ade121a92eae2cb23b4c4ae58ba7da488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEPRECATION&lt;/code&gt; is the message regarding a deprecation status to be displayed to downstream users of a target.</source>
          <target state="translated">&lt;code&gt;DEPRECATION&lt;/code&gt; 은 대상의 다운 스트림 사용자에게 표시되는 지원 중단 상태에 관한 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="ff03d10f2b0b336a384c03e51f4c276f0a5de374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESCENDING&lt;/code&gt;: Sorts the list in descending order.</source>
          <target state="translated">&lt;code&gt;DESCENDING&lt;/code&gt; : 목록을 내림차순으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="511663e290cf6ce11453b0fe0cab212c1778d0ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESTDIR&lt;/code&gt; means DESTination DIRectory. It is commonly used by makefile users in order to install software at non-default location. It is a basic relocation mechanism that should not be used on Windows (see &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; documentation). It is usually invoked like this:</source>
          <target state="translated">&lt;code&gt;DESTDIR&lt;/code&gt; 은 목적지 디렉토리를 의미합니다. 기본이 아닌 위치에 소프트웨어를 설치하기 위해 makefile 사용자가 일반적으로 사용합니다. Windows에서 사용해서는 안되는 기본 재배치 메커니즘입니다 ( &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 설명서 참조 ). 일반적으로 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c31525641dfda893c9b34b10d083fa8b17202755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DIRECTORY&lt;/code&gt; scope chains to its parent directory&amp;rsquo;s scope, continuing the walk up parent directories until a directory has the property set or there are no more parents. If still not found at the top level directory, it chains to the &lt;code&gt;GLOBAL&lt;/code&gt; scope.</source>
          <target state="translated">&lt;code&gt;DIRECTORY&lt;/code&gt; 범위는 상위 디렉토리의 범위에 연결되어 디렉토리에 특성이 설정되거나 더 이상 상위가 없을 때까지 상위 디렉토리를 계속 진행합니다. 최상위 레벨 디렉토리에서 여전히 발견되지 않으면 &lt;code&gt;GLOBAL&lt;/code&gt; 범위에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="16f18affa01eb65c6c1f8f405ffba78f836f7f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DIRECTORY_PERMISSIONS&lt;/code&gt; overrides &lt;code&gt;PERMISSIONS&lt;/code&gt; for directories.</source>
          <target state="translated">&lt;code&gt;DIRECTORY_PERMISSIONS&lt;/code&gt; 는 디렉토리에 대한 &lt;code&gt;PERMISSIONS&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="c943acb5c223fc4465f8e6f252f09ad3d3ab68b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DISCOVERY_MODE&lt;/code&gt; defaults to the value of the &lt;code&gt;CMAKE_GTEST_DISCOVER_TESTS_DISCOVERY_MODE&lt;/code&gt; variable if it is not passed when calling &lt;code&gt;gtest_discover_tests()&lt;/code&gt;. This provides a mechanism for globally selecting a preferred test discovery behavior without having to modify each call site.</source>
          <target state="translated">&lt;code&gt;DISCOVERY_MODE&lt;/code&gt; 는 &lt;code&gt;gtest_discover_tests()&lt;/code&gt; 호출시 전달되지 않은 경우 &lt;code&gt;CMAKE_GTEST_DISCOVER_TESTS_DISCOVERY_MODE&lt;/code&gt; 변수 의 값으로 기본 설정됩니다 . 이는 각 호출 사이트를 수정하지 않고도 선호하는 테스트 검색 동작을 전역 적으로 선택할 수있는 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4758dbd47d3ce81b63f8493deb76c418bae5b7b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development.Embed&lt;/code&gt;: search for artifacts for Python 2 embedding developments.</source>
          <target state="translated">&lt;code&gt;Development.Embed&lt;/code&gt; : Python 2 임베딩 개발을위한 아티팩트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ea4fc84683fb498127582abdf5f08c079c4bf353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development.Embed&lt;/code&gt;: search for artifacts for Python 3 embedding developments.</source>
          <target state="translated">&lt;code&gt;Development.Embed&lt;/code&gt; : Python 3 임베딩 개발을위한 아티팩트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="677979b0f5e607f9899069d704096f29171cec7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development.Embed&lt;/code&gt;: search for artifacts for Python embedding developments.</source>
          <target state="translated">&lt;code&gt;Development.Embed&lt;/code&gt; : Python 임베딩 개발을위한 아티팩트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="c343ec1296740f2d51506d4e9690f3f4dba7953c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development.Module&lt;/code&gt;: search for artifacts for Python 2 module developments.</source>
          <target state="translated">&lt;code&gt;Development.Module&lt;/code&gt; : Python 2 모듈 개발을위한 아티팩트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="fc87e241edcaa46b2eee0ada7f54f34dd677c118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development.Module&lt;/code&gt;: search for artifacts for Python 3 module developments.</source>
          <target state="translated">&lt;code&gt;Development.Module&lt;/code&gt; : Python 3 모듈 개발을위한 아티팩트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="2f97e4a9695b787264e0d77aaf9bd0b9fec2a9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development.Module&lt;/code&gt;: search for artifacts for Python module developments.</source>
          <target state="translated">&lt;code&gt;Development.Module&lt;/code&gt; : Python 모듈 개발을위한 아티팩트를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="003b32bbd6f30bdc3577bebd7fb5d0661efdb5e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development&lt;/code&gt;: search for development artifacts (include directories and libraries)</source>
          <target state="translated">&lt;code&gt;Development&lt;/code&gt; : 개발 아티팩트 검색 (디렉토리 및 라이브러리 포함)</target>
        </trans-unit>
        <trans-unit id="ed3b54a68c8b3221007b4877be15dbd724add70e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development&lt;/code&gt;: search for development artifacts (include directories and libraries).</source>
          <target state="translated">&lt;code&gt;Development&lt;/code&gt; : 개발 아티팩트를 검색하십시오 (디렉토리 및 라이브러리 포함).</target>
        </trans-unit>
        <trans-unit id="bf2469d50724c55d5f9f2ae3e12b74d23fa551fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Development&lt;/code&gt;: search for development artifacts (include directories and libraries). This component includes two sub-components which can be specified independently:</source>
          <target state="translated">&lt;code&gt;Development&lt;/code&gt; : 개발 아티팩트를 검색합니다 (디렉토리 및 라이브러리 포함). 이 구성 요소에는 독립적으로 지정할 수있는 두 개의 하위 구성 요소가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2f6176cce66cf14f4e4ca1606b0cdb76cde4acf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENG_LIBRARY&lt;/code&gt; and &lt;code&gt;MAT_LIBRARY&lt;/code&gt;: respectively the &lt;code&gt;ENG&lt;/code&gt; and &lt;code&gt;MAT&lt;/code&gt; libraries of Matlab</source>
          <target state="translated">&lt;code&gt;ENG_LIBRARY&lt;/code&gt; 및 &lt;code&gt;MAT_LIBRARY&lt;/code&gt; : 각각 Matlab 의 &lt;code&gt;ENG&lt;/code&gt; 및 &lt;code&gt;MAT&lt;/code&gt; 라이브러리</target>
        </trans-unit>
        <trans-unit id="7b65b78787eed16bd5a46b2c76de82e222e36529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENV{CONDA_PREFIX}&lt;/code&gt; when using a conda compiler</source>
          <target state="translated">&lt;code&gt;ENV{CONDA_PREFIX}&lt;/code&gt; conda 컴파일러를 사용할 때 ENV {CONDA_PREFIX}</target>
        </trans-unit>
        <trans-unit id="3ba28fda7f768721af5651c5c3d41ea3ec43c723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENV{SDKROOT}/usr&lt;/code&gt; When &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; is not explicitly specified.</source>
          <target state="translated">&lt;code&gt;ENV{SDKROOT}/usr&lt;/code&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; 가 명시 적으로 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="af75ace480e5b2fe5de5238f828f017c559cccbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt; expects a list of regular expressions.</source>
          <target state="translated">&lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt; 에는 정규식 목록이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="598c3ebb600b9f90f57b9ef2464d2da65923ca02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE_BASENAME&lt;/code&gt;: Sorts a list of pathnames of files by their basenames.</source>
          <target state="translated">&lt;code&gt;FILE_BASENAME&lt;/code&gt; : 파일의 경로 이름 목록을 기본 이름으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="1faec0b9713c3c6e709aec4cd36c534d0ad34327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; overrides &lt;code&gt;PERMISSIONS&lt;/code&gt; for files.</source>
          <target state="translated">&lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; 는 파일에 대한 &lt;code&gt;PERMISSIONS&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d97d33ecaf9b3759bdd1a83ac5b70ee7b3c2ba25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; is a boolean specifying whether the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command should automatically search the &lt;code&gt;lib32&lt;/code&gt; variant of directories called &lt;code&gt;lib&lt;/code&gt; in the search path when building 32-bit binaries.</source>
          <target state="translated">&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; 는 32 비트 바이너리를 빌드 할 때 &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령이 검색 경로에서 &lt;code&gt;lib&lt;/code&gt; 라는 디렉토리 의 &lt;code&gt;lib32&lt;/code&gt; 변형을 자동으로 검색 해야하는지 여부를 지정하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="65599b68380d3dc0209420e4bc3febacefdaefff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; is a boolean specifying whether the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command should automatically search the &lt;code&gt;libx32&lt;/code&gt; variant of directories called &lt;code&gt;lib&lt;/code&gt; in the search path when building x32-abi binaries.</source>
          <target state="translated">&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; 는 x32-abi 바이너리를 빌드 할 때 &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령이 검색 경로에서 &lt;code&gt;lib&lt;/code&gt; 라는 &lt;code&gt;libx32&lt;/code&gt; 변형 디렉토리를 자동으로 검색 해야하는지 여부를 지정하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="f34c10b9a31195b6ad2060db6893c038f1e0e7e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIRST&lt;/code&gt;: The virtual environment is used before any other standard paths to look-up for the interpreter. This is the default.</source>
          <target state="translated">&lt;code&gt;FIRST&lt;/code&gt; : 가상 환경은 인터프리터를 찾기위한 다른 표준 경로보다 먼저 사용됩니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="5ab4a5cad7eb4001dd7928a24997ae7139930483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIRST&lt;/code&gt;: Try to use registry before environment variables. This is the default.</source>
          <target state="translated">&lt;code&gt;FIRST&lt;/code&gt; : 환경 변수보다 먼저 레지스트리를 사용하십시오. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="316f36a87bad31eb12036afa8397b6bdc7d7395e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOR&lt;/code&gt;: Specify a range with, optionally, an increment used to iterate over the range.</source>
          <target state="translated">&lt;code&gt;FOR&lt;/code&gt; : 선택적으로 범위를 반복하는 데 사용되는 증분으로 범위를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="cd35aa484bd2e750e39119661aadb8e3a1f7266f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FetchContent_Populate()&lt;/code&gt; will set three variables in the scope of the caller; &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt;, &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; and &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt;, where &lt;code&gt;&amp;lt;lcName&amp;gt;&lt;/code&gt; is the lowercased &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt; will always be set to &lt;code&gt;True&lt;/code&gt; by the call. &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; is the location where the content can be found upon return (it will have already been populated), while &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; is a directory intended for use as a corresponding build directory. The main use case for the two directory variables is to call &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-2-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; immediately after population, i.e.:</source>
          <target state="translated">&lt;code&gt;FetchContent_Populate()&lt;/code&gt; 는 호출자의 범위에서 3 개의 변수를 설정합니다. &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt; , &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; 및 &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; 여기서 &lt;code&gt;&amp;lt;lcName&amp;gt;&lt;/code&gt; 은 소문자 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 입니다. &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt; 는 항상 호출에 의해 &lt;code&gt;True&lt;/code&gt; 로 설정됩니다 . &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; 은 반환시 컨텐츠를 찾을 수있는 위치 (이미 채워져 있음)이고 &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; 은 해당 빌드 디렉토리로 사용하기위한 디렉토리입니다.두 디렉토리 변수의 주요 사용 사례는 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-2-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 직후 add_subdirectory () 를 호출하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="895cf3993f0da01f2b9bc46a82a3bf1b4e78421d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FooConfig.cmake.in&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;FooConfig.cmake.in&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="583f3641272b3749a6ea5950ea42327239d078d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; option requires, at least, version 1.8 of the JDK.</source>
          <target state="translated">&lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; 옵션에는 최소한 JDK 버전 1.8 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ad977ca4cf3c075bbdbdaa8a3a8216e5a94f4e17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GENEX_STRIP&lt;/code&gt;: Strip any &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; from each element of the list.</source>
          <target state="translated">&lt;code&gt;GENEX_STRIP&lt;/code&gt; : 목록의 각 요소에서 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 제거합니다.</target>
        </trans-unit>
        <trans-unit id="aa07a514ce2d1e8583cf452633b98848a80cd776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GIF_DIR&lt;/code&gt; is an environment variable that would correspond to the &lt;code&gt;./configure --prefix=$GIF_DIR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GIF_DIR&lt;/code&gt; 은 &lt;code&gt;./configure --prefix=$GIF_DIR&lt;/code&gt; 해당하는 환경 변수입니다 .</target>
        </trans-unit>
        <trans-unit id="b664fad4bff3f33dc996fe0da3d8dda21d76fb03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GNU&lt;/code&gt;: GNU compiler versions 3.4 through 8.0.</source>
          <target state="translated">&lt;code&gt;GNU&lt;/code&gt; : GNU 컴파일러 버전 3.4-8.0.</target>
        </trans-unit>
        <trans-unit id="656ead8ac6a33c9559550cfb43abc98fef560608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GNU&lt;/code&gt;: GNU compiler versions 3.4+</source>
          <target state="translated">&lt;code&gt;GNU&lt;/code&gt; : GNU 컴파일러 버전 3.4 이상</target>
        </trans-unit>
        <trans-unit id="c5ccc3a02b56b085218a6b2d488915247936a625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GNU&lt;/code&gt;: GNU compiler versions 4.4 through 8.0.</source>
          <target state="translated">&lt;code&gt;GNU&lt;/code&gt; : GNU 컴파일러 버전 4.4 ~ 8.0.</target>
        </trans-unit>
        <trans-unit id="cda651a90d6146b9e8852f635f201fd119ee3baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GNU&lt;/code&gt;: GNU compiler versions 4.4+.</source>
          <target state="translated">&lt;code&gt;GNU&lt;/code&gt; : GNU 컴파일러 버전 4.4 이상.</target>
        </trans-unit>
        <trans-unit id="9c427a4bec2b35f2a3eafd04d6affffc27435558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GROUP&lt;/code&gt; When in this mode each target explicitly specifies how to group source files. Each source file that has the same &lt;a href=&quot;../prop_sf/unity_group#prop_sf:UNITY_GROUP&quot; id=&quot;index-0-prop_sf:UNITY_GROUP&quot;&gt;&lt;code&gt;UNITY_GROUP&lt;/code&gt;&lt;/a&gt; value will be grouped together. Any sources that don&amp;rsquo;t have this property will be compiled individually. The &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; property is ignored when using this mode.</source>
          <target state="translated">&lt;code&gt;GROUP&lt;/code&gt; 이 모드에서 각 대상은 소스 파일을 그룹화하는 방법을 명시 적으로 지정합니다. 동일한 &lt;a href=&quot;../prop_sf/unity_group#prop_sf:UNITY_GROUP&quot; id=&quot;index-0-prop_sf:UNITY_GROUP&quot;&gt; &lt;code&gt;UNITY_GROUP&lt;/code&gt; &lt;/a&gt; 값 을 가진 각 소스 파일이 함께 그룹화됩니다. 이 속성이없는 모든 소스는 개별적으로 컴파일됩니다. &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt; 의&lt;/a&gt; 이 모드를 사용하는 경우 속성은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="123db4c30c88813ba63b08e03cd82b1c178ab1e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSENSITIVE&lt;/code&gt;: List items are sorted case insensitively. The order of items which differ only by upper/lowercase is not specified.</source>
          <target state="translated">&lt;code&gt;INSENSITIVE&lt;/code&gt; : 목록 항목은 대소 문자를 구분하지 않고 정렬됩니다. 대소 문자 만 다른 항목의 순서는 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="c0c0ae07f0fa1a4e452fef98e8eabfdf9a643a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; is a string specifying the directory portion of the &amp;ldquo;install_name&amp;rdquo; field of shared libraries on macOS to use in the installed targets.</source>
          <target state="translated">&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; 은 설치된 대상에서 사용하기 위해 macOS에서 공유 라이브러리의 &quot;install_name&quot;필드의 디렉토리 부분을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3adb56f50850c77d5c759e242c7a9b703697bfef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; is a boolean that if set to &lt;code&gt;True&lt;/code&gt; will append directories in the linker search path and outside the project to the &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt;. This property is initialized by the value of the variable &lt;code&gt;CMAKE_INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; if it is set when a target is created.</source>
          <target state="translated">&lt;code&gt;INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; 은 부울로 설정하면 그 &lt;code&gt;True&lt;/code&gt; 링커 검색 경로에와에 프로젝트 이외의 디렉토리를 추가합니다 &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; . 이 특성은 대상을 작성할 때 설정된 경우 변수 &lt;code&gt;CMAKE_INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="685086c3383a126c438e3e95c65de218cb791ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; is a boolean that if set to &lt;code&gt;True&lt;/code&gt; will append to the runtime search path (rpath) of installed binaries any directories outside the project that are in the linker search path or contain linked library files. The directories are appended after the value of the &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;code&gt;INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt; 는 &lt;code&gt;True&lt;/code&gt; 로 설정 하면 링커 검색 경로에 있거나 링크 된 라이브러리 파일을 포함하는 프로젝트 외부의 모든 디렉토리에 설치된 바이너리의 런타임 검색 경로 (rpath)에 추가 되는 부울입니다 . 디렉토리는 &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 대상 특성 값 뒤에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d544cfc7b9057f3fbaa491254a8dd6cafb82680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INTERFACE&lt;/code&gt; libraries may be installed and exported. Any content they refer to must be installed separately:</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; 라이브러리를 설치하고 내보낼 수 있습니다. 참조하는 모든 컨텐츠는 별도로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="a41a9a171e235e67dd634f00561e06b7b5577ecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageMagick_VERSION_STRING&lt;/code&gt; will not work for old versions like 5.2.3.</source>
          <target state="translated">&lt;code&gt;ImageMagick_VERSION_STRING&lt;/code&gt; 은 5.2.3과 같은 이전 버전에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a24c1ec4acdd4ace7c1c6bc916c0ac568c90468" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel10_32&lt;/code&gt; (intel mkl v10 32 bit)</source>
          <target state="translated">&lt;code&gt;Intel10_32&lt;/code&gt; (Intel MKL v10 32 비트)</target>
        </trans-unit>
        <trans-unit id="2d87d7c45f7e0399ed0423d81c0fb785b8c3853d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel10_32&lt;/code&gt; (intel mkl v10 32 bit, threaded code)</source>
          <target state="translated">&lt;code&gt;Intel10_32&lt;/code&gt; (intel mkl v10 32 비트, 스레드 코드)</target>
        </trans-unit>
        <trans-unit id="87183fa818e43ed320d11f7a493ec1dc8a623ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel10_64_dyn&lt;/code&gt; (intel mkl v10+ 64 bit, single dynamic library)</source>
          <target state="translated">&lt;code&gt;Intel10_64_dyn&lt;/code&gt; (intel mkl v10 + 64 비트, 단일 동적 라이브러리)</target>
        </trans-unit>
        <trans-unit id="e853de9b4291d4c43ee074963e4b3845aa43db4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel10_64ilp&lt;/code&gt; (intel mkl v10+ 64 bit, threaded code, ilp64 model)</source>
          <target state="translated">&lt;code&gt;Intel10_64ilp&lt;/code&gt; (Intel Mkl v10 + 64 비트, 스레드 코드, ILP64 모델)</target>
        </trans-unit>
        <trans-unit id="d01b674188cc7e787b7b5044435612aae00b41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel10_64ilp_seq&lt;/code&gt; (intel mkl v10+ 64 bit, sequential code, ilp64 model)</source>
          <target state="translated">&lt;code&gt;Intel10_64ilp_seq&lt;/code&gt; (Intel Mkl v10 + 64 비트, 순차 코드, ILP64 모델)</target>
        </trans-unit>
        <trans-unit id="9c2ccc3e90322af05a53fe333584d8370ff2bc43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel10_64lp&lt;/code&gt; (intel mkl v10+ 64 bit, threaded code, lp64 model)</source>
          <target state="translated">&lt;code&gt;Intel10_64lp&lt;/code&gt; (Intel Mkl v10 + 64 비트, 스레드 코드, LP64 모델)</target>
        </trans-unit>
        <trans-unit id="2fdb483241a0eabbf701a5df39200afd016c9338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel10_64lp_seq&lt;/code&gt; (intel mkl v10+ 64 bit, sequential code, lp64 model)</source>
          <target state="translated">&lt;code&gt;Intel10_64lp_seq&lt;/code&gt; (Intel Mkl v10 + 64 비트, 순차 코드, LP64 모델)</target>
        </trans-unit>
        <trans-unit id="f0f57d561810ed141bbb71f4492aee96a35ea9d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel&lt;/code&gt; (obsolete versions of mkl 32 and 64 bit)</source>
          <target state="translated">&lt;code&gt;Intel&lt;/code&gt; (mkl 32 및 64 비트의 구식 버전)</target>
        </trans-unit>
        <trans-unit id="67a2823e9115946bd7437547357549696426aa7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel&lt;/code&gt;: Intel compiler versions 12.1 through 17.0.</source>
          <target state="translated">&lt;code&gt;Intel&lt;/code&gt; : 인텔 컴파일러 버전 12.1 ~ 17.0.</target>
        </trans-unit>
        <trans-unit id="7fbd21338fdbc1dbe180c1288ee57fb23d6e67b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Intel&lt;/code&gt;: Intel compiler versions 12.1+.</source>
          <target state="translated">&lt;code&gt;Intel&lt;/code&gt; : Intel 컴파일러 버전 12.1+.</target>
        </trans-unit>
        <trans-unit id="b6558e614ca198c9201c0d8b3531e6e49481ceb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Interpreter&lt;/code&gt;: search for Python 2 interpreter</source>
          <target state="translated">&lt;code&gt;Interpreter&lt;/code&gt; : Python 2 인터프리터 검색</target>
        </trans-unit>
        <trans-unit id="934f7f11c1d3435f9f201b125521496a852c56ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Interpreter&lt;/code&gt;: search for Python 3 interpreter</source>
          <target state="translated">&lt;code&gt;Interpreter&lt;/code&gt; : 파이썬 3 인터프리터 검색</target>
        </trans-unit>
        <trans-unit id="d9313b2977c714c11b11813effb2c58219957d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Interpreter&lt;/code&gt;: search for Python interpreter.</source>
          <target state="translated">&lt;code&gt;Interpreter&lt;/code&gt; : Python 인터프리터를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="ce104d301ac79b897d90d4919114a023143b9232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IronPython&lt;/code&gt;: This implementation use the &lt;code&gt;CSharp&lt;/code&gt; language for &lt;code&gt;.NET Framework&lt;/code&gt; on top of the &lt;code&gt;Dynamic Language Runtime&lt;/code&gt; (&lt;code&gt;DLR&lt;/code&gt;). See &lt;a href=&quot;http://ironpython.net&quot;&gt;IronPython&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IronPython&lt;/code&gt; :이 구현은 &lt;code&gt;DLR&lt;/code&gt; ( &lt;code&gt;Dynamic Language Runtime&lt;/code&gt; 위에 &lt;code&gt;.NET Framework&lt;/code&gt; 용 &lt;code&gt;CSharp&lt;/code&gt; 언어를 사용합니다 . &lt;a href=&quot;http://ironpython.net&quot;&gt;IronPython을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f73095762f68bb728d4b8941583c3473172058c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KNOWN_LOCATION&lt;/code&gt; The &amp;ldquo;Link Binary With Libraries&amp;rdquo; build phase will be used to link to another target under the same conditions as with &lt;code&gt;BUILT_ONLY&lt;/code&gt; and also: - Imported library targets except those of type &lt;code&gt;UNKNOWN&lt;/code&gt;. - Any non-target library specified directly with a path.</source>
          <target state="translated">&lt;code&gt;KNOWN_LOCATION&lt;/code&gt; &quot;Link Binary With Libraries&quot;빌드 단계는 &lt;code&gt;BUILT_ONLY&lt;/code&gt; 및 다음과 같은 조건에서 다른 대상에 연결하는 데 사용됩니다 .- &lt;code&gt;UNKNOWN&lt;/code&gt; 유형의 대상을 제외한 가져온 라이브러리 대상 . -경로와 함께 직접 지정된 비 대상 라이브러리.</target>
        </trans-unit>
        <trans-unit id="105a0eeef1266872d273f48a6cbb00a9f17bf2ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LAST&lt;/code&gt; If the last command in the list of commands fails, the &lt;code&gt;execute_process()&lt;/code&gt; command halts with an error. Commands earlier in the list will not cause a fatal error.</source>
          <target state="translated">&lt;code&gt;LAST&lt;/code&gt; 명령 목록의 마지막 명령이 실패하면 &lt;code&gt;execute_process()&lt;/code&gt; 명령이 오류와 함께 중지됩니다. 목록의 앞부분에있는 명령은 치명적인 오류를 일으키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b271edebe0e94f383bb5c71bddc99221bad632c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LAST&lt;/code&gt;: Try to use registry after environment variables.</source>
          <target state="translated">&lt;code&gt;LAST&lt;/code&gt; : 환경 변수 다음에 레지스트리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ce2bc8b44ca98edc0180db1e10037575ec7edf3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEGACY&lt;/code&gt;: legacy strategy is applied. Variable &lt;code&gt;SWIG_MODULE_&amp;lt;name&amp;gt;_REAL_NAME&lt;/code&gt; must be used to get real target name. This is the default if not specified.</source>
          <target state="translated">&lt;code&gt;LEGACY&lt;/code&gt; : 기존 전략이 적용됩니다. 실제 대상 이름을 얻으려면 변수 &lt;code&gt;SWIG_MODULE_&amp;lt;name&amp;gt;_REAL_NAME&lt;/code&gt; 을 사용해야합니다. 지정하지 않은 경우 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="562d19968e5da34ca24a5f4f430059559197beec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIST_ONLY&lt;/code&gt; will list the files in the archive rather than extract them.</source>
          <target state="translated">&lt;code&gt;LIST_ONLY&lt;/code&gt; 는 압축을 풀지 않고 아카이브에있는 파일을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="089775f422ec7016507ad04becb04d1ef23bc0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCATION&lt;/code&gt;: Stops lookup as soon as a version satisfying version constraints is founded. This is the default if policy &lt;a href=&quot;../policy/cmp0094#policy:CMP0094&quot; id=&quot;index-1-policy:CMP0094&quot;&gt;&lt;code&gt;CMP0094&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOCATION&lt;/code&gt; : 버전 제약 조건을 만족하는 버전이 발견되는 즉시 조회를 중지합니다. 정책 &lt;a href=&quot;../policy/cmp0094#policy:CMP0094&quot; id=&quot;index-1-policy:CMP0094&quot;&gt; &lt;code&gt;CMP0094&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;NEW&lt;/code&gt; 로 설정된 경우 이것이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="349e1c9bab35b12930fd13fb21f3c3341c81da59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MAIN_PROGRAM&lt;/code&gt; the Matlab binary program. Note that this component is not available on the MCR version, and will yield an error if the MCR is found instead of the regular Matlab installation.</source>
          <target state="translated">&lt;code&gt;MAIN_PROGRAM&lt;/code&gt; Matlab 바이너리 프로그램. 이 구성 요소는 MCR 버전에서 사용할 수 없으며 일반 Matlab 설치 대신 MCR이 발견되면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="beb3d8e135ac64721663c4c26ae361ff64a60326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MCC_COMPILER&lt;/code&gt; the MCC compiler, included with the Matlab Compiler add-on.</source>
          <target state="translated">&lt;code&gt;MCC_COMPILER&lt;/code&gt; Matlab 컴파일러 애드온에 포함 된 MCC 컴파일러.</target>
        </trans-unit>
        <trans-unit id="f731ae835224d2b70f37862fa307431b51d50089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MEX_COMPILER&lt;/code&gt; the MEX compiler.</source>
          <target state="translated">&lt;code&gt;MEX_COMPILER&lt;/code&gt; MEX 컴파일러.</target>
        </trans-unit>
        <trans-unit id="1a4bc3b9b3d7c01a2f0f8fd8161229c4d9ea917b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MSVC&lt;/code&gt;: Microsoft Visual Studio versions 2010 through 2017.</source>
          <target state="translated">&lt;code&gt;MSVC&lt;/code&gt; : Microsoft Visual Studio 버전 2010에서 2017까지</target>
        </trans-unit>
        <trans-unit id="b555735a521dc6c2a767e74430bf3a54be90e517" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MSVC&lt;/code&gt;: Microsoft Visual Studio versions 2010+.</source>
          <target state="translated">&lt;code&gt;MSVC&lt;/code&gt; : Microsoft Visual Studio 버전 2010 이상.</target>
        </trans-unit>
        <trans-unit id="6c67541ef88638f7243c93f46f1a89af5f3e8227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Makefile&lt;/code&gt; based systems also provide build-targets to preprocess, assemble and compile individual files in a particular directory.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; 기반 시스템은 특정 디렉토리에서 개별 파일을 전처리, 어셈블 및 컴파일하기위한 빌드 타겟도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d3b7582a1e1250e7ad55a8d02be83b8c0f234fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NATURAL&lt;/code&gt;: Sorts a list of strings using natural order (see &lt;code&gt;strverscmp(3)&lt;/code&gt; manual), i.e. such that contiguous digits are compared as whole numbers. For example: the following list &lt;code&gt;10.0 1.1 2.1 8.0 2.0 3.1&lt;/code&gt; will be sorted as &lt;code&gt;1.1 2.0 2.1 3.1 8.0 10.0&lt;/code&gt; if the &lt;code&gt;NATURAL&lt;/code&gt; comparison is selected where it will be sorted as &lt;code&gt;1.1 10.0 2.0 2.1 3.1 8.0&lt;/code&gt; with the &lt;code&gt;STRING&lt;/code&gt; comparison.</source>
          <target state="translated">&lt;code&gt;NATURAL&lt;/code&gt; : 자연 순 ( &lt;code&gt;strverscmp(3)&lt;/code&gt; 설명서 참조)을 사용하여 문자열 목록을 정렬합니다. 즉, 연속 된 숫자가 정수로 비교됩니다. 예 : 다음 목록 &lt;code&gt;10.0 1.1 2.1 8.0 2.0 3.1&lt;/code&gt; 은 &lt;code&gt;STRING&lt;/code&gt; 비교를 사용하여 &lt;code&gt;1.1 10.0 2.0 2.1 3.1 8.0&lt;/code&gt; 으로 정렬되는 &lt;code&gt;NATURAL&lt;/code&gt; 비교를 선택한 경우 &lt;code&gt;1.1 2.0 2.1 3.1 8.0 10.0&lt;/code&gt; 으로 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="828861ba24d1e1f918944d8ac88fe9f8e6af5b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEVER&lt;/code&gt;: Never try to use registry.</source>
          <target state="translated">&lt;code&gt;NEVER&lt;/code&gt; : 레지스트리를 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="cdef67b2597b080369fdb267aa77edf60bb0ff08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt; The libraries will be linked by specifying the linker flags directly.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; 링커 플래그를 직접 지정하여 라이브러리를 링크합니다.</target>
        </trans-unit>
        <trans-unit id="cf81bf7b0a618ad0172f41c08158963eac8a4437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NO_EXTERNAL_INSTALL&lt;/code&gt; is required for forward compatibility with a future version that supports installation of the external project binaries during &lt;code&gt;make install&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NO_EXTERNAL_INSTALL&lt;/code&gt; &lt;code&gt;make install&lt;/code&gt; 중 외부 프로젝트 바이너리 설치를 지원하는 향후 버전과의 호환성을 위해서는 NO_EXTERNAL_INSTALL 이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="14e297c21c6b14043c70ad394bf70fe29c3f9eda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NVIDIA&lt;/code&gt;: NVIDIA nvcc compiler 7.5 though 9.1.</source>
          <target state="translated">&lt;code&gt;NVIDIA&lt;/code&gt; : NVIDIA nvcc 컴파일러 7.5 ~ 9.1.</target>
        </trans-unit>
        <trans-unit id="080de708f7d48009d1c1b839b65efee57b75f361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NVIDIA&lt;/code&gt;: NVIDIA nvcc compiler 7.5+.</source>
          <target state="translated">&lt;code&gt;NVIDIA&lt;/code&gt; : NVIDIA nvcc 컴파일러 7.5 이상.</target>
        </trans-unit>
        <trans-unit id="6a3b0a793764e6df48e2d66f210c9053d4b6da2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nightly&lt;/code&gt; or &lt;code&gt;Experimental&lt;/code&gt; starts with next day tag.</source>
          <target state="translated">&lt;code&gt;Nightly&lt;/code&gt; 또는 &lt;code&gt;Experimental&lt;/code&gt; 은 다음 날 태그로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="b6c65ec881f1ffacb5ccee38348a8f7f6a57cfa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumPy&lt;/code&gt;: search for NumPy include directories.</source>
          <target state="translated">&lt;code&gt;NumPy&lt;/code&gt; : NumPy 포함 디렉토리를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="66f2e33cb726816f21c96146d42a4eedc4f8d2e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OFF&lt;/code&gt;: Corresponding flag is not selected.</source>
          <target state="translated">&lt;code&gt;OFF&lt;/code&gt; : 해당 플래그가 선택되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7aae886a318ac734e18469c9ccab919611c44b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON&lt;/code&gt; / &lt;code&gt;OFF&lt;/code&gt; boolean to control if the project file for a target should be one single file or multiple files.</source>
          <target state="translated">&lt;code&gt;ON&lt;/code&gt; / &lt;code&gt;OFF&lt;/code&gt; boolean 대상의 프로젝트 파일이 하나의 파일 또는 여러 파일인지 여부를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="04c071969e367a2bd8362bf508c2f34b995b5983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON&lt;/code&gt; / &lt;code&gt;OFF&lt;/code&gt; boolean to control if the project file for a target should be one single file or multiple files. Refer to &lt;a href=&quot;../prop_tgt/ghs_no_source_group_file#prop_tgt:GHS_NO_SOURCE_GROUP_FILE&quot; id=&quot;index-0-prop_tgt:GHS_NO_SOURCE_GROUP_FILE&quot;&gt;&lt;code&gt;GHS_NO_SOURCE_GROUP_FILE&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">&lt;code&gt;ON&lt;/code&gt; / &lt;code&gt;OFF&lt;/code&gt; boolean 대상의 프로젝트 파일이 하나의 파일 또는 여러 파일인지 여부를 제어합니다. 자세한 내용은 &lt;a href=&quot;../prop_tgt/ghs_no_source_group_file#prop_tgt:GHS_NO_SOURCE_GROUP_FILE&quot; id=&quot;index-0-prop_tgt:GHS_NO_SOURCE_GROUP_FILE&quot;&gt; &lt;code&gt;GHS_NO_SOURCE_GROUP_FILE&lt;/code&gt; &lt;/a&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="b0ff352334ea6262a76f899103e01a9bda998fbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON&lt;/code&gt; / &lt;code&gt;OFF&lt;/code&gt; boolean to determine if an executable target should be treated as an &lt;code&gt;Integrity Application&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ON&lt;/code&gt; 실행 대상을 &lt;code&gt;Integrity Application&lt;/code&gt; 으로 취급해야하는지 여부를 결정하는 ON / &lt;code&gt;OFF&lt;/code&gt; 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="90346e00c61541b05307b251d307d98b9d16de17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON&lt;/code&gt;: Corresponding flag is selected.</source>
          <target state="translated">&lt;code&gt;ON&lt;/code&gt; : 해당 플래그가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="45f58b478cbb8e598cea5de261c1db3b96e9fcfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ONLY&lt;/code&gt;: Only the virtual environment is used to look-up for the interpreter.</source>
          <target state="translated">&lt;code&gt;ONLY&lt;/code&gt; : 가상 환경 만 인터프리터를 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ff7df0f069e8cc707bf87aa14229979ed777adc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPENGL_egl_LIBRARY&lt;/code&gt; and &lt;code&gt;OPENGL_EGL_INCLUDE_DIRS&lt;/code&gt; are defined in the case of GLVND. For non-GLVND Linux and other systems these are left undefined.</source>
          <target state="translated">&lt;code&gt;OPENGL_egl_LIBRARY&lt;/code&gt; 및 &lt;code&gt;OPENGL_EGL_INCLUDE_DIRS&lt;/code&gt; 는 GLVND 의 경우에 정의됩니다. GLVND가 아닌 Linux 및 기타 시스템의 경우에는 정의되지 않은 상태로 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="74c6fc4fc8e21b7f917b349742be59bb77a6362c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OpenACC_ACCEL_TARGET=&amp;lt;target&amp;gt;&lt;/code&gt; If set, will the correct target accelerator flag set to the &amp;lt;target&amp;gt; will be returned with OpenACC_&amp;lt;lang&amp;gt;_FLAGS.</source>
          <target state="translated">&lt;code&gt;OpenACC_ACCEL_TARGET=&amp;lt;target&amp;gt;&lt;/code&gt; 설정된 경우 &amp;lt;target&amp;gt;으로 설정된 올바른 대상 가속기 플래그가 OpenACC_ &amp;lt;lang&amp;gt; _FLAGS와 함께 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1cf2bd6149c1543b197d413ea0fe9a1429a8d6bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; expects a list of regular expressions.</source>
          <target state="translated">&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt; 에는 정규식 목록이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7cc7ea78dd09cfb8aa97834994a1786425c4825d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PGI&lt;/code&gt;: PGI version 12.10 through 17.5.</source>
          <target state="translated">&lt;code&gt;PGI&lt;/code&gt; : PGI 버전 12.10 ~ 17.5.</target>
        </trans-unit>
        <trans-unit id="a15b07a94f5b8ca8264271583d266ba53a848b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PGI&lt;/code&gt;: PGI version 12.10+.</source>
          <target state="translated">&lt;code&gt;PGI&lt;/code&gt; : PGI 버전 12.10+.</target>
        </trans-unit>
        <trans-unit id="edc61e009792542ec3aa7f01ae29f567c28878ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLOG&lt;/code&gt; may be specified as text content to write at the start of the header. &lt;code&gt;EPILOG&lt;/code&gt; may be specified as text content to write at the end of the header</source>
          <target state="translated">&lt;code&gt;PROLOG&lt;/code&gt; 는 헤더의 시작 부분에 쓸 텍스트 내용으로 지정 될 수 있습니다. &lt;code&gt;EPILOG&lt;/code&gt; 는 헤더 끝에 쓸 텍스트 내용으로 지정 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="cf82edb30a932a7e7ccfa9f74e27504e8e991094" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PyPy&lt;/code&gt;: This implementation use &lt;code&gt;RPython&lt;/code&gt; language and &lt;code&gt;RPython translation toolchain&lt;/code&gt; to produce the python interpreter. See &lt;a href=&quot;https://www.pypy.org&quot;&gt;PyPy&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;PyPy&lt;/code&gt; :이 구현은 &lt;code&gt;RPython&lt;/code&gt; 언어와 &lt;code&gt;RPython translation toolchain&lt;/code&gt; 을 사용하여 파이썬 인터프리터를 생성합니다. &lt;a href=&quot;https://www.pypy.org&quot;&gt;PyPy를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="941122b57885b29b669122539da0e2913583eadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QT_VERSION_MAJOR&lt;/code&gt; and &lt;code&gt;QT_VERSION_MINOR&lt;/code&gt; directory properties</source>
          <target state="translated">&lt;code&gt;QT_VERSION_MAJOR&lt;/code&gt; 및 &lt;code&gt;QT_VERSION_MINOR&lt;/code&gt; 디렉토리 특성</target>
        </trans-unit>
        <trans-unit id="db0fb4fd6b173203ca615ed57bf82e49726fbaed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QT_VERSION_MAJOR&lt;/code&gt; and &lt;code&gt;QT_VERSION_MINOR&lt;/code&gt; variables (usually set by &lt;code&gt;find_package(Qt4...)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;QT_VERSION_MAJOR&lt;/code&gt; 및 &lt;code&gt;QT_VERSION_MINOR&lt;/code&gt; 변수 (일반적으로 &lt;code&gt;find_package(Qt4...)&lt;/code&gt; 의해 설정 됨 )</target>
        </trans-unit>
        <trans-unit id="5afa011c3f84a187bc46ce4aafe509dd6876f0c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Qt5Core_VERSION_MAJOR&lt;/code&gt; and &lt;code&gt;Qt5Core_VERSION_MINOR&lt;/code&gt; directory properties</source>
          <target state="translated">&lt;code&gt;Qt5Core_VERSION_MAJOR&lt;/code&gt; 및 &lt;code&gt;Qt5Core_VERSION_MINOR&lt;/code&gt; 디렉토리 특성</target>
        </trans-unit>
        <trans-unit id="5387c4afd4c4e042dd1fe12730a0f279e3d23805" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Qt5Core_VERSION_MAJOR&lt;/code&gt; and &lt;code&gt;Qt5Core_VERSION_MINOR&lt;/code&gt; variables (usually set by &lt;code&gt;find_package(Qt5...)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Qt5Core_VERSION_MAJOR&lt;/code&gt; 및 &lt;code&gt;Qt5Core_VERSION_MINOR&lt;/code&gt; 변수 (일반적으로 &lt;code&gt;find_package(Qt5...)&lt;/code&gt; 의해 설정 됨 )</target>
        </trans-unit>
        <trans-unit id="854e8534f1a92a614ed96213e90d6a7c6924a33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REGEX&lt;/code&gt;: Specify a regular expression. Only elements matching the regular expression will be transformed.</source>
          <target state="translated">&lt;code&gt;REGEX&lt;/code&gt; : 정규식을 지정합니다. 정규식과 일치하는 요소 만 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="865e2539f430dcd82285ee0eb6e85751a13e1229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REPLACE&lt;/code&gt;: Match the regular expression as many times as possible and substitute the replacement expression for the match for each element of the list (Same semantic as &lt;code&gt;REGEX REPLACE&lt;/code&gt; from &lt;a href=&quot;string#command:string&quot; id=&quot;index-3-command:string&quot;&gt;&lt;code&gt;string()&lt;/code&gt;&lt;/a&gt; command).</source>
          <target state="translated">&lt;code&gt;REPLACE&lt;/code&gt; : 가능한 한 많은 시간과 정규 표현식을 일치하고 목록의 각 요소 (같은 의미 동일 위해 경기를보기 위해 교체 식을 대체 &lt;code&gt;REGEX REPLACE&lt;/code&gt; 에서 &lt;a href=&quot;string#command:string&quot; id=&quot;index-3-command:string&quot;&gt; &lt;code&gt;string()&lt;/code&gt; &lt;/a&gt; 명령).</target>
        </trans-unit>
        <trans-unit id="a45262e04dbf4ca0d6751552cb5045c3b058ce67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; Property</source>
          <target state="translated">&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="23f836559b0d512e0807dad6721f867533f4572f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RPATH&lt;/code&gt; entries are properly escaped in the intermediary CMake install script.</source>
          <target state="translated">&lt;code&gt;RPATH&lt;/code&gt; 항목은 중간 CMake 설치 스크립트에서 제대로 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="330dcbb07d87717e42cefa1f90769d8cb9a20e42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RPATH&lt;/code&gt; settings on macOS do not affect &lt;code&gt;install_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RPATH&lt;/code&gt; macOS의 RPATH 설정은 &lt;code&gt;install_name&lt;/code&gt; 에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d45716c9c5f0412502802538ba4e76b2a68366ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SENSITIVE&lt;/code&gt;: List items are sorted in a case-sensitive manner. This is the default behavior if the &lt;code&gt;CASE&lt;/code&gt; option is not given.</source>
          <target state="translated">&lt;code&gt;SENSITIVE&lt;/code&gt; : 목록 항목은 대소 문자를 구분하는 방식으로 분류되어 있습니다. &lt;code&gt;CASE&lt;/code&gt; 옵션이 제공되지 않은 경우 이것이 기본 동작 입니다.</target>
        </trans-unit>
        <trans-unit id="98184ab9ebbeffea8b4d7d40f5b060e4765c1ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHARED&lt;/code&gt;, &lt;code&gt;MODULE&lt;/code&gt; and &lt;code&gt;STATIC&lt;/code&gt; have the same semantic as for the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command. If &lt;code&gt;USE_BUILD_SHARED_LIBS&lt;/code&gt; is specified, the library type will be &lt;code&gt;STATIC&lt;/code&gt; or &lt;code&gt;SHARED&lt;/code&gt; based on whether the current value of the &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; variable is &lt;code&gt;ON&lt;/code&gt;. If no type is specified, &lt;code&gt;MODULE&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;SHARED&lt;/code&gt; , &lt;code&gt;MODULE&lt;/code&gt; 및 &lt;code&gt;STATIC&lt;/code&gt; 은 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령 과 동일한 의미를 갖습니다 . 경우 &lt;code&gt;USE_BUILD_SHARED_LIBS&lt;/code&gt; 가 지정된 라이브러리 유형 것이다 &lt;code&gt;STATIC&lt;/code&gt; 또는 &lt;code&gt;SHARED&lt;/code&gt; 의 전류 값인지에 따라 &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt; &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; 의&lt;/a&gt; 변수가 &lt;code&gt;ON&lt;/code&gt; . 유형을 지정하지 않으면 &lt;code&gt;MODULE&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="169bfd9f2291e1b00945f68451680364357fc700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIMULINK&lt;/code&gt; the Simulink environment.</source>
          <target state="translated">&lt;code&gt;SIMULINK&lt;/code&gt; Simulink 환경.</target>
        </trans-unit>
        <trans-unit id="be2d08a2486cd9367018c3ef995bfb331004c0e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt; is a boolean specifying whether to skip automatic generation of an rpath allowing the target to run from the build tree. This property is initialized by the value of the variable &lt;a href=&quot;../variable/cmake_skip_build_rpath#variable:CMAKE_SKIP_BUILD_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_BUILD_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_BUILD_RPATH&lt;/code&gt;&lt;/a&gt; if it is set when a target is created.</source>
          <target state="translated">&lt;code&gt;SKIP_BUILD_RPATH&lt;/code&gt; 는 빌드 트리에서 대상을 실행할 수 있도록 rpath의 자동 생성을 건너 뛸지 여부를 지정하는 부울입니다. 이 특성은 대상을 작성할 때 설정된 경우 변수 &lt;a href=&quot;../variable/cmake_skip_build_rpath#variable:CMAKE_SKIP_BUILD_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_BUILD_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_BUILD_RPATH&lt;/code&gt; &lt;/a&gt; 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e6034990374abb04f07c003983da41e8bd7805ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt; expects a list of regular expressions.</source>
          <target state="translated">&lt;code&gt;SKIP_REGULAR_EXPRESSION&lt;/code&gt; 에는 정규식 목록이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="fabba3f7ba853494cd787c7b1be7934c338b7bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: The virtual environment is not used to look-up for the interpreter (assuming it isn&amp;rsquo;t still in the PATH&amp;hellip;)</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 가상 환경은 인터프리터를 찾는 데 사용되지 않습니다 (아직 PATH에 없다고 가정합니다&amp;hellip;).</target>
        </trans-unit>
        <trans-unit id="20358b011d425d90385cd55af3c3511fbd940454" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: The virtual environment is not used to look-up for the interpreter but environment variable &lt;code&gt;PATH&lt;/code&gt; is always considered. In this case, variable &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; (Windows) or &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS) can be set with value &lt;code&gt;LAST&lt;/code&gt; or &lt;code&gt;NEVER&lt;/code&gt; to select preferably the interpreter from the virtual environment.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 가상 환경은 인터프리터를 찾는 데 사용되지 않지만 항상 환경 변수 &lt;code&gt;PATH&lt;/code&gt; 가 고려됩니다. 이 경우 변수 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; (Windows) 또는 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS)는 가상 환경에서 인터프리터를 선택하기 위해 &lt;code&gt;LAST&lt;/code&gt; 또는 &lt;code&gt;NEVER&lt;/code&gt; 값으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="231e18fd294e41051d49f62b51398e514591fb2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: The virtual environment is not used to look-up for the interpreter but environment variable &lt;code&gt;PATH&lt;/code&gt; is always considered. In this case, variable &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; (Windows) or &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS) can be set with value &lt;code&gt;LAST&lt;/code&gt; or &lt;code&gt;NEVER&lt;/code&gt; to select preferably the interpreter from the virtual environment.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 가상 환경은 인터프리터를 찾는 데 사용되지 않지만 항상 환경 변수 &lt;code&gt;PATH&lt;/code&gt; 가 고려됩니다. 이 경우 변수 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; (Windows) 또는 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS)는 가상 환경에서 인터프리터를 선택하기 위해 &lt;code&gt;LAST&lt;/code&gt; 또는 &lt;code&gt;NEVER&lt;/code&gt; 값으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0f79dca552ebc54418dd56eba49dd607fd38c81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: The virtual environment is not used to look-up for the interpreter but environment variable &lt;code&gt;PATH&lt;/code&gt; is always considered. In this case, variable &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; (Windows) or &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS) can be set with value &lt;code&gt;LAST&lt;/code&gt; or &lt;code&gt;NEVER&lt;/code&gt; to select preferably the interpreter from the virtual environment.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 가상 환경은 인터프리터를 찾는 데 사용되지 않지만 항상 환경 변수 &lt;code&gt;PATH&lt;/code&gt; 가 고려됩니다. 이 경우 변수 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; (Windows) 또는 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS)를 &lt;code&gt;LAST&lt;/code&gt; 또는 &lt;code&gt;NEVER&lt;/code&gt; 값으로 설정 하여 가상 환경에서 인터프리터를 선택하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f3a167e039b914c3a19eb20dee96008d990fdb2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: The virtual environment is not used to look-up for the interpreter. In this case, variable &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; (Windows) or &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS) can be set with value &lt;code&gt;LAST&lt;/code&gt; or &lt;code&gt;NEVER&lt;/code&gt; to select preferably the interpreter from the virtual environment.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 가상 환경이 인터프리터를 찾는 데 사용되지 않습니다. 이 경우 변수 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; (Windows) 또는 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS)를 가상 환경에서 인터프리터를 선택하도록 &lt;code&gt;LAST&lt;/code&gt; 또는 &lt;code&gt;NEVER&lt;/code&gt; 값으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12615b613783109d3cb4c1313260a9d980ad390a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: The virtual environment is not used to look-up for the interpreter. In this case, variable &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; (Windows) or &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS) can be set with value &lt;code&gt;LAST&lt;/code&gt; or &lt;code&gt;NEVER&lt;/code&gt; to select preferably the interpreter from the virtual environment.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 가상 환경이 인터프리터를 찾는 데 사용되지 않습니다. 이 경우 변수 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; (Windows) 또는 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS)를 가상 환경에서 인터프리터를 선택하도록 &lt;code&gt;LAST&lt;/code&gt; 또는 &lt;code&gt;NEVER&lt;/code&gt; 값으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ceddbd19a04386839395597d2dcd9bde4923053a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: The virtual environment is not used to look-up for the interpreter. In this case, variable &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; (Windows) or &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS) can be set with value &lt;code&gt;LAST&lt;/code&gt; or &lt;code&gt;NEVER&lt;/code&gt; to select preferably the interpreter from the virtual environment.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 가상 환경이 인터프리터를 찾는 데 사용되지 않습니다. 이 경우 변수 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; (Windows) 또는 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; (macOS)를 가상 환경에서 인터프리터를 선택하도록 &lt;code&gt;LAST&lt;/code&gt; 또는 &lt;code&gt;NEVER&lt;/code&gt; 값으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="971420ccb3b6668fb341c3cbbec96899dfb2e052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt;: target name matches specified name.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; : 대상 이름이 지정된 이름과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="7247255f90d29ced68bec647c3d75c4482bd5508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STATIC&lt;/code&gt;, &lt;code&gt;SHARED&lt;/code&gt;, or &lt;code&gt;MODULE&lt;/code&gt; may be given to specify the type of library to be created. &lt;code&gt;STATIC&lt;/code&gt; libraries are archives of object files for use when linking other targets. &lt;code&gt;SHARED&lt;/code&gt; libraries are linked dynamically and loaded at runtime. &lt;code&gt;MODULE&lt;/code&gt; libraries are plugins that are not linked into other targets but may be loaded dynamically at runtime using dlopen-like functionality. If no type is given explicitly the type is &lt;code&gt;STATIC&lt;/code&gt; or &lt;code&gt;SHARED&lt;/code&gt; based on whether the current value of the variable &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;ON&lt;/code&gt;. For &lt;code&gt;SHARED&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; libraries the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; target property is set to &lt;code&gt;ON&lt;/code&gt; automatically. A &lt;code&gt;SHARED&lt;/code&gt; or &lt;code&gt;STATIC&lt;/code&gt; library may be marked with the &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property to create an macOS Framework.</source>
          <target state="translated">&lt;code&gt;STATIC&lt;/code&gt; 작성할 라이브러리 유형을 지정하기 위해 STATIC , &lt;code&gt;SHARED&lt;/code&gt; 또는 &lt;code&gt;MODULE&lt;/code&gt; 이 제공 될 수 있습니다. &lt;code&gt;STATIC&lt;/code&gt; 라이브러리는 다른 대상을 링크 할 때 사용하기 위해 오브젝트 파일의 아카이브입니다. &lt;code&gt;SHARED&lt;/code&gt; 라이브러리는 동적으로 링크되고 런타임에로드됩니다. &lt;code&gt;MODULE&lt;/code&gt; 라이브러리는 다른 대상에 연결되지 않지만 dlopen과 유사한 기능을 사용하여 런타임에 동적으로로드 될 수있는 플러그인입니다. 유형이 명시 적으로 지정되지 않은 경우 변수 &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt; &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; &lt;/a&gt; 의 현재 값 이 &lt;code&gt;ON&lt;/code&gt; 인지 여부에 따라 유형은 &lt;code&gt;STATIC&lt;/code&gt; 또는 &lt;code&gt;SHARED&lt;/code&gt; 입니다. 들어 &lt;code&gt;SHARED&lt;/code&gt; 및 &lt;code&gt;MODULE&lt;/code&gt; 도서관&lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 대상 속성이자동으로 &lt;code&gt;ON&lt;/code&gt; 으로설정되어있습니다. &lt;code&gt;SHARED&lt;/code&gt; 또는 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리는로 표시 될 수있다&lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 맥 OS 워크를 만드는 목표 속성.</target>
        </trans-unit>
        <trans-unit id="e6b0c07a491ac248e04f1ec87fd13bf35940ce6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRING&lt;/code&gt;: Sorts a list of strings alphabetically. This is the default behavior if the &lt;code&gt;COMPARE&lt;/code&gt; option is not given.</source>
          <target state="translated">&lt;code&gt;STRING&lt;/code&gt; : 문자열 목록을 알파벳순으로 정렬합니다. &lt;code&gt;COMPARE&lt;/code&gt; 옵션이 제공되지 않은 경우 이것이 기본 동작 입니다.</target>
        </trans-unit>
        <trans-unit id="eac2aa017b7562ab4b37cc9ac1669d07ff0041fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRIP&lt;/code&gt;: Remove leading and trailing spaces from each element of the list.</source>
          <target state="translated">&lt;code&gt;STRIP&lt;/code&gt; : 목록의 각 요소에서 앞뒤 공백을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5ef44181109cae1bf5ba6553cb1d9d753361e60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Subversion_WC_INFO&lt;/code&gt; extracts information of a subversion working copy at a given location. This macro defines the following variables if running Subversion&amp;rsquo;s &lt;code&gt;info&lt;/code&gt; command on &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; succeeds; otherwise a &lt;code&gt;SEND_ERROR&lt;/code&gt; message is generated. The error can be ignored by providing the &lt;code&gt;IGNORE_SVN_FAILURE&lt;/code&gt; option, which causes these variables to remain undefined.</source>
          <target state="translated">&lt;code&gt;Subversion_WC_INFO&lt;/code&gt; 는 지정된 위치에서 Subversion 작업 복사본의 정보를 추출합니다. 이 매크로는 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 에서 Subversion의 &lt;code&gt;info&lt;/code&gt; 명령을 실행하면 다음 변수를 정의 합니다. 그렇지 않으면 &lt;code&gt;SEND_ERROR&lt;/code&gt; 메시지가 생성됩니다. &lt;code&gt;IGNORE_SVN_FAILURE&lt;/code&gt; 옵션 을 제공하면 오류를 무시할 수 있습니다 .이 옵션을 사용하면 이러한 변수가 정의되지 않은 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="fafa0193c295529e3d62d5565b717b6c26e38bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Subversion_WC_LOG&lt;/code&gt; retrieves the log message of the base revision of a subversion working copy at a given location. This macro defines the variable:</source>
          <target state="translated">&lt;code&gt;Subversion_WC_LOG&lt;/code&gt; 는 지정된 위치에서 Subversion 작업 복사본의 기본 개정판의 로그 메시지를 검색합니다. 이 매크로는 변수를 정의합니다 :</target>
        </trans-unit>
        <trans-unit id="ff09d8b637e95527d3a6848b0d127cedc0bf2efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SunPro&lt;/code&gt;: Oracle SolarisStudio versions 12.4 through 12.6.</source>
          <target state="translated">&lt;code&gt;SunPro&lt;/code&gt; : Oracle SolarisStudio 버전 12.4 ~ 12.6.</target>
        </trans-unit>
        <trans-unit id="4b688750bbd849b3cc22e63c1eddddbf91fef59e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SunPro&lt;/code&gt;: Oracle SolarisStudio versions 12.4+.</source>
          <target state="translated">&lt;code&gt;SunPro&lt;/code&gt; : Oracle SolarisStudio 버전 12.4 이상.</target>
        </trans-unit>
        <trans-unit id="46015071f89ada73dbcb357385e091d8770afd1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TARBALL&lt;/code&gt; data file. Using this option reduces the size of the data file before it is submitted to CDash. &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; must be one of &lt;code&gt;GZIP&lt;/code&gt;, &lt;code&gt;BZIP2&lt;/code&gt;, &lt;code&gt;XZ&lt;/code&gt;, &lt;code&gt;ZSTD&lt;/code&gt;, &lt;code&gt;FROM_EXT&lt;/code&gt;, or an expression that CMake evaluates as &lt;code&gt;FALSE&lt;/code&gt;. The default value is &lt;code&gt;BZIP2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TARBALL&lt;/code&gt; 데이터 파일. 이 옵션을 사용하면 데이터 파일이 CDash에 제출되기 전에 크기가 줄어 듭니다. &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 은 &lt;code&gt;GZIP&lt;/code&gt; , &lt;code&gt;BZIP2&lt;/code&gt; , &lt;code&gt;XZ&lt;/code&gt; , &lt;code&gt;ZSTD&lt;/code&gt; , &lt;code&gt;FROM_EXT&lt;/code&gt; 중 하나 이거나 CMake가 &lt;code&gt;FALSE&lt;/code&gt; 로 평가하는 표현식 이어야 합니다 . 기본값은 &lt;code&gt;BZIP2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="006661fae8ef25fffabff6ba0300e73f8390beb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TARGET&lt;/code&gt;, &lt;code&gt;SOURCE&lt;/code&gt; and &lt;code&gt;TEST&lt;/code&gt; properties chain to &lt;code&gt;DIRECTORY&lt;/code&gt; scope, including further chaining up the directories, etc. as needed.</source>
          <target state="translated">&lt;code&gt;TARGET&lt;/code&gt; , &lt;code&gt;SOURCE&lt;/code&gt; 과 &lt;code&gt;TEST&lt;/code&gt; 의 속성 연쇄 &lt;code&gt;DIRECTORY&lt;/code&gt; 의 필요 등이 더 포함하는 디렉토리를 체인, 스코프.</target>
        </trans-unit>
        <trans-unit id="95bd7c19d76bc695c758f9316717f6d5490bdb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TI&lt;/code&gt;: Texas Instruments compiler.</source>
          <target state="translated">&lt;code&gt;TI&lt;/code&gt; : Texas Instruments 컴파일러.</target>
        </trans-unit>
        <trans-unit id="a9138bef7df67cfacd6367fc8aae75e90e799e39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TOUPPER&lt;/code&gt;, &lt;code&gt;TOLOWER&lt;/code&gt;: Convert each element of the list to upper, lower characters.</source>
          <target state="translated">&lt;code&gt;TOUPPER&lt;/code&gt; 는 , &lt;code&gt;TOLOWER&lt;/code&gt; : 대문자, 소문자 문자리스트의 각 요소를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="bf6d4b2af183fe60cffe65ae212ef49be362524a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUE&lt;/code&gt; if system has LTTng-UST</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; 시스템에 LTTng-UST가있는 경우 TRUE</target>
        </trans-unit>
        <trans-unit id="e8109e2e157e194063b21dd47a69663dbca76854" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUE&lt;/code&gt; if the &lt;code&gt;tracef()&lt;/code&gt; API is available in the system&amp;rsquo;s LTTng-UST</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; &lt;code&gt;tracef()&lt;/code&gt; API가 시스템의 LTTng-UST에서 사용 가능한 경우 TRUE</target>
        </trans-unit>
        <trans-unit id="ddfec91a470c9e774fbcef20abd0e6b6003259aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUE&lt;/code&gt; if the &lt;code&gt;tracelog()&lt;/code&gt; API is available in the system&amp;rsquo;s LTTng-UST</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; &lt;code&gt;tracelog()&lt;/code&gt; API가 시스템의 LTTng-UST에서 사용 가능한 경우 TRUE</target>
        </trans-unit>
        <trans-unit id="4d2ba1901d698dfb30763df263fb0d4ce3d372e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUE&lt;/code&gt; if the Matlab installation is found, &lt;code&gt;FALSE&lt;/code&gt; otherwise. All variable below are defined if Matlab is found.</source>
          <target state="translated">&lt;code&gt;TRUE&lt;/code&gt; matlab에 설치가 발견되면, &lt;code&gt;FALSE&lt;/code&gt; 그렇지. Matlab이 발견되면 아래의 모든 변수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b2d8b3ea89de577c0093ac9aad18d6e1678685a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TYPE&lt;/code&gt; Argument</source>
          <target state="translated">&lt;code&gt;TYPE&lt;/code&gt; 인수</target>
        </trans-unit>
        <trans-unit id="64d6067bd37e27ee0f74d3e37fb9bb79a0331290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TYPE&lt;/code&gt;, &lt;code&gt;GUID&lt;/code&gt; and &lt;code&gt;PLATFORM&lt;/code&gt; are optional parameters that allow one to specify the type of project, id (&lt;code&gt;GUID&lt;/code&gt;) of the project and the name of the target platform. This is useful for projects requiring values other than the default (e.g. WIX projects).</source>
          <target state="translated">&lt;code&gt;TYPE&lt;/code&gt; , &lt;code&gt;GUID&lt;/code&gt; 및 &lt;code&gt;PLATFORM&lt;/code&gt; 은 프로젝트의 유형, 프로젝트의 ID ( &lt;code&gt;GUID&lt;/code&gt; ) 및 대상 플랫폼의 이름 을 지정할 수있는 선택적 매개 변수입니다 . 이는 기본값 이외의 값이 필요한 프로젝트 (예 : WIX 프로젝트)에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e6d06d7854a9a82c3b9c048e0fb9a71ec49d175e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; for Apple macOS operating systems.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 애플 맥 OS 운영 체제.</target>
        </trans-unit>
        <trans-unit id="7efbee6a02954c99dcea49edd9990ed2a4a4ec02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; for Cygwin.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; Cygwin에서합니다.</target>
        </trans-unit>
        <trans-unit id="32c5ac4937dcafeff7f804ecb379c23817d2e8bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; for Oracle Solaris operating systems.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Oracle Solaris 운영 체제.</target>
        </trans-unit>
        <trans-unit id="0b93ea7475ac526a5c61082ae194f4110fa4f808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; for UNIX and UNIX like operating systems.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 운영 시스템과 같은 UNIX 및 UNIX 용.</target>
        </trans-unit>
        <trans-unit id="ea3859437834c90e98afe24032b03191d2622089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the Borland compiler is being used.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 볼랜드 컴파일러를 사용중인 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="86e8e7365a7c1dc05a1ebccf2284883e26d09a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the host system is running Windows, including Windows 64-bit and MSYS.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 호스트 시스템이 Windows 64 비트 및 MSYS를 포함하여 Windows를 실행중인 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="5323ca275641cc1f490de0bf68e4f8b5c3ce2b8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; is the macro ran successfully</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 성공적으로 매크로 실행 된 것입니다</target>
        </trans-unit>
        <trans-unit id="61ebbcebdcfe60e681b2b725ca13b70cb62c9344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 사용할 때 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt; 발전기를.</target>
        </trans-unit>
        <trans-unit id="7a761e6031ef7c405d8e570cd964359b4eccd689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를 사용할 때 참 입니다.</target>
        </trans-unit>
        <trans-unit id="6f8a7cb9291e145afc7b82f69d79eda492f8b2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt; 제너레이터를 사용할 때 참 입니다.</target>
        </trans-unit>
        <trans-unit id="374475ad2aa7f27c2f9fff84d13c43332919a98d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를 사용할 때 참 입니다.</target>
        </trans-unit>
        <trans-unit id="3886944a56a9e3d45f6fc8ef82f50c24d5bfc0a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using Microsoft Visual C++ 6.0.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 의 Microsoft Visual C ++ 6.0을 사용하는 경우.</target>
        </trans-unit>
        <trans-unit id="bfc40902cb4ea0f6da02fb89f8d3e3b42edc22c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using Microsoft Visual C++ 7.0.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 의 Microsoft Visual C ++ 7.0을 사용하는 경우.</target>
        </trans-unit>
        <trans-unit id="cd9da33b39721693609e446c5d2e16d189be6ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using Microsoft Visual C++ 7.1.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 의 Microsoft Visual C ++ 7.1을 사용하는 경우.</target>
        </trans-unit>
        <trans-unit id="b3d3e0f686a91be94a63588878b6e06d81c620aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using MinGW</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; MinGW를 사용할 때 참</target>
        </trans-unit>
        <trans-unit id="7d0c6c4cb3b0ae0b1b63e0450f3887aad109b8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/MSYS%20Makefiles.html#generator:MSYS%20Makefiles&quot; id=&quot;index-0-generator:MSYS Makefiles&quot;&gt;&lt;code&gt;MSYS Makefiles&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/MSYS%20Makefiles.html#generator:MSYS%20Makefiles&quot; id=&quot;index-0-generator:MSYS Makefiles&quot;&gt; &lt;code&gt;MSYS Makefiles&lt;/code&gt; &lt;/a&gt; 생성기를 사용할 때 참 입니다.</target>
        </trans-unit>
        <trans-unit id="f8ef0a86bb26bf84fd003ba1c55326be1e7e8e46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/MSYS%20Makefiles.html#generator:MSYS%20Makefiles&quot; id=&quot;index-0-generator:MSYS Makefiles&quot;&gt;&lt;code&gt;MSYS Makefiles&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/MSYS%20Makefiles.html#generator:MSYS%20Makefiles&quot; id=&quot;index-0-generator:MSYS Makefiles&quot;&gt; &lt;code&gt;MSYS Makefiles&lt;/code&gt; &lt;/a&gt; 생성기를 사용할 때 참 입니다.</target>
        </trans-unit>
        <trans-unit id="c876d2cb4cff760ea54fbc663a4ede13eda04c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the Microsoft Visual C++ IDE.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Microsoft의 Visual C ++ IDE를 사용하는 경우.</target>
        </trans-unit>
        <trans-unit id="31287f25bb0a75ad5fd8ab44dbbeb44e431bf87b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the Microsoft Visual Studio &lt;code&gt;v100&lt;/code&gt; toolset (&lt;code&gt;cl&lt;/code&gt; version 16) or another compiler that simulates it.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Microsoft의 Visual Studio 사용하는 경우 &lt;code&gt;v100&lt;/code&gt; 도구 세트 ( &lt;code&gt;cl&lt;/code&gt; 버전 16) 또는 시뮬레이션 다른 컴파일러.</target>
        </trans-unit>
        <trans-unit id="5f55bf81f7dad435e65bceba5b09f349362a9fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the Microsoft Visual Studio &lt;code&gt;v110&lt;/code&gt; toolset (&lt;code&gt;cl&lt;/code&gt; version 17) or another compiler that simulates it.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Microsoft의 Visual Studio 사용하는 경우 &lt;code&gt;v110&lt;/code&gt; 도구 세트 ( &lt;code&gt;cl&lt;/code&gt; 버전 17) 또는 시뮬레이션 다른 컴파일러.</target>
        </trans-unit>
        <trans-unit id="18ed5a03ce7faf3d42b01b8013b8defcc7502461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the Microsoft Visual Studio &lt;code&gt;v120&lt;/code&gt; toolset (&lt;code&gt;cl&lt;/code&gt; version 18) or another compiler that simulates it.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Microsoft의 Visual Studio 사용하는 경우 &lt;code&gt;v120&lt;/code&gt; 도구 세트 ( &lt;code&gt;cl&lt;/code&gt; 버전 18) 또는 시뮬레이션 다른 컴파일러.</target>
        </trans-unit>
        <trans-unit id="a762c3c073fc6d9d7323d193ae63291729a0878a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the Microsoft Visual Studio &lt;code&gt;v140&lt;/code&gt; or &lt;code&gt;v141&lt;/code&gt; toolset (&lt;code&gt;cl&lt;/code&gt; version 19) or another compiler that simulates it.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Microsoft의 Visual Studio 사용하는 경우 &lt;code&gt;v140&lt;/code&gt; 또는 &lt;code&gt;v141&lt;/code&gt; 도구 세트 ( &lt;code&gt;cl&lt;/code&gt; 버전 19) 또는 시뮬레이션 다른 컴파일러.</target>
        </trans-unit>
        <trans-unit id="0b318173e1b5a2e956298e6eca8555d09ea77ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the Microsoft Visual Studio &lt;code&gt;v80&lt;/code&gt; toolset (&lt;code&gt;cl&lt;/code&gt; version 14) or another compiler that simulates it.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Microsoft의 Visual Studio 사용하는 경우 &lt;code&gt;v80&lt;/code&gt; 도구 세트 ( &lt;code&gt;cl&lt;/code&gt; 버전 14) 또는 시뮬레이션 다른 컴파일러.</target>
        </trans-unit>
        <trans-unit id="417d3b5cd161c03b7bf623c17b78be3e421b5086" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when using the Microsoft Visual Studio &lt;code&gt;v90&lt;/code&gt; toolset (&lt;code&gt;cl&lt;/code&gt; version 15) or another compiler that simulates it.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 은 Microsoft의 Visual Studio 사용하는 경우 &lt;code&gt;v90&lt;/code&gt; 도구 세트 ( &lt;code&gt;cl&lt;/code&gt; 버전 15) 또는 시뮬레이션 다른 컴파일러.</target>
        </trans-unit>
        <trans-unit id="4d5f08247dfc98d39572aec9d5606be0439e64df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION&lt;/code&gt; may be used to specify the API version to be generated. Future versions of CMake may introduce alternative APIs. A given API is selected by any &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; value greater than or equal to the version of CMake that introduced the given API and less than the version of CMake that introduced its succeeding API. The value of the &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; variable is used if no explicit version is specified. (As of CMake version 3.15.2 there is only one API version.)</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt; 을 사용하여 생성 할 API 버전을 지정할 수 있습니다. 향후 버전의 CMake는 대체 API를 도입 할 수 있습니다. 주어진 API는 주어진 API 를 도입 한 CMake 버전보다 크거나 같은 &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; 값과 그 후속 API를 도입 한 CMake 버전보다 작은 &amp;lt;version&amp;gt; 값으로 선택됩니다 . 명시 적 버전이 지정되지 않은 경우 &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt; &lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt; &lt;/a&gt; 변수 의 값 이 사용됩니다. (CMake 버전 3.15.2부터는 하나의 API 버전 만 있습니다.)</target>
        </trans-unit>
        <trans-unit id="f6ec70f9336014f8922c7ada7ae2ea0c056070e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION&lt;/code&gt; may be used to specify the API version to be generated. Future versions of CMake may introduce alternative APIs. A given API is selected by any &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; value greater than or equal to the version of CMake that introduced the given API and less than the version of CMake that introduced its succeeding API. The value of the &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; variable is used if no explicit version is specified. (As of CMake version 3.19.0-rc3 there is only one API version.)</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt; 을 사용하여 생성 할 API 버전을 지정할 수 있습니다. 향후 버전의 CMake는 대체 API를 도입 할 수 있습니다. 주어진 API는 주어진 API 를 도입 한 CMake 버전보다 크거나 같고 후속 API를 도입 한 CMake 버전보다 작은 모든 &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; 값에 의해 선택됩니다 . 명시 적 버전이 지정되지 않은 경우 &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt; &lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt; &lt;/a&gt; 변수 의 값 이 사용됩니다. (CMake 버전 3.19.0-rc3 현재 API 버전은 하나뿐입니다.)</target>
        </trans-unit>
        <trans-unit id="a96265c408fa10e15e1fd24808ce6fa4cdafc79a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION&lt;/code&gt;: Try to find the most recent version in all specified locations. This is the default if policy &lt;a href=&quot;../policy/cmp0094#policy:CMP0094&quot; id=&quot;index-0-policy:CMP0094&quot;&gt;&lt;code&gt;CMP0094&lt;/code&gt;&lt;/a&gt; is undefined or set to &lt;code&gt;OLD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt; : 지정된 모든 위치에서 최신 버전을 찾습니다. 정책 &lt;a href=&quot;../policy/cmp0094#policy:CMP0094&quot; id=&quot;index-0-policy:CMP0094&quot;&gt; &lt;code&gt;CMP0094&lt;/code&gt; &lt;/a&gt; 가 정의되지 않았거나 &lt;code&gt;OLD&lt;/code&gt; 로 설정된 경우 이것이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="40fe22d78e9c763ba762ae7abdb8c5a016e21107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XL&lt;/code&gt;: IBM XL version 10.1 through 13.1.5.</source>
          <target state="translated">&lt;code&gt;XL&lt;/code&gt; : IBM XL 버전 10.1-13.1.5.</target>
        </trans-unit>
        <trans-unit id="449f8b79d131465c27034eafe00aa3ca8cf27afe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XL&lt;/code&gt;: IBM XL version 10.1+.</source>
          <target state="translated">&lt;code&gt;XL&lt;/code&gt; : IBM XL 버전 10.1 이상.</target>
        </trans-unit>
        <trans-unit id="f6c6e7a4d8083d2ac06bc21ffe19432ea136644a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[deprecated]]&lt;/code&gt; attribute, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3760.html&quot;&gt;N3760&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[[deprecated]]&lt;/code&gt; 에 정의 된 속성 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3760.html&quot;&gt;N3760&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d415484f7ab464bb966037190d497807a66bff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arch&lt;/code&gt; on OpenBSD, or</source>
          <target state="translated">&lt;code&gt;arch&lt;/code&gt; OpenBSD의 arch , 또는</target>
        </trans-unit>
        <trans-unit id="2033e6b8591d6ca986c125f54b828ee662e5f3b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;architecture&lt;/code&gt;&lt;code&gt;toolset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;architecture&lt;/code&gt;&lt;code&gt;toolset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37a560f9fd47ea6859b13a974df22a2471faea42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;archive&lt;/code&gt; is defined as a &lt;code&gt;STATIC&lt;/code&gt; library &amp;ndash; an archive containing objects compiled from &lt;code&gt;archive.cpp&lt;/code&gt;, &lt;code&gt;zip.cpp&lt;/code&gt;, and &lt;code&gt;lzma.cpp&lt;/code&gt;. &lt;code&gt;zipapp&lt;/code&gt; is defined as an executable formed by compiling and linking &lt;code&gt;zipapp.cpp&lt;/code&gt;. When linking the &lt;code&gt;zipapp&lt;/code&gt; executable, the &lt;code&gt;archive&lt;/code&gt; static library is linked in.</source>
          <target state="translated">&lt;code&gt;archive&lt;/code&gt; 는 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리 &amp;ndash; &lt;code&gt;archive.cpp&lt;/code&gt; , &lt;code&gt;zip.cpp&lt;/code&gt; 및 &lt;code&gt;lzma.cpp&lt;/code&gt; 에서 컴파일 된 객체를 포함하는 아카이브 로 정의됩니다 . &lt;code&gt;zipapp&lt;/code&gt; 를 컴파일하고 링크하여 형성된 실행으로 정의 &lt;code&gt;zipapp.cpp&lt;/code&gt; 를 . &lt;code&gt;zipapp&lt;/code&gt; 실행 파일을 링크하면 &lt;code&gt;archive&lt;/code&gt; 정적 라이브러리가 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="68dcaa2881b2c6ac740a31c5858f7be313a8e193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arm64-v8a&lt;/code&gt;: &amp;ldquo;ARMv8-A, 64bit (arm64-v8a)&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;arm64-v8a&lt;/code&gt; :&amp;ldquo;ARMv8-A, 64 비트 (arm64-v8a)&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="f4ddd776cc51d60fb4da3dc58cce1132bef4fb1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;armv7-a-hard&lt;/code&gt;: &amp;ldquo;ARMv7-A, hard-float ABI (armv7-a)&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;armv7-a-hard&lt;/code&gt; :&amp;ldquo;ARMv7-A, 하드 플로트 ABI (armv7-a)&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a5a00575144e925defa0bec58a5b480e26eefa22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;armv7-a&lt;/code&gt;: &amp;ldquo;ARMv7-A (armv7-a)&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;armv7-a&lt;/code&gt; :&amp;ldquo;ARMv7-A (armv7-a)&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="90ad24c2c42c21d6f48160732b8d0472c94b2d56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bzr&lt;/code&gt; command-line tool to use if source tree is managed by Bazaar.</source>
          <target state="translated">&lt;code&gt;bzr&lt;/code&gt; 소스 트리가 Bazaar에 의해 관리되는 경우 사용할 bzr 명령 행 도구.</target>
        </trans-unit>
        <trans-unit id="c625b0f11e5ef17d8d9d36c3f2e68c4eec5e5a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;: A value which has an associated list of choices.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; : 연관된 선택 목록이있는 값.</target>
        </trans-unit>
        <trans-unit id="0244d05b46a44161cd8ab1de4f3bad1ddab8d788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache&lt;/code&gt; object version 2 is a JSON object:</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; 객체 버전 2는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="3546989559e4eebda31a7552deeb399864b3752b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_function_exists()&lt;/code&gt; can&amp;rsquo;t detect anything in the 32-bit versions of the Win32 API, because of a mismatch in calling conventions.</source>
          <target state="translated">&lt;code&gt;check_function_exists()&lt;/code&gt; 는 호출 규칙이 일치하지 않기 때문에 32 비트 버전의 Win32 API에서 아무것도 감지 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b027a267ea3957a62d5397d67de33d1f77c8f534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_function_exists()&lt;/code&gt; can&amp;rsquo;t detect functions that are inlined in headers or specified as a macro.</source>
          <target state="translated">&lt;code&gt;check_function_exists()&lt;/code&gt; 는 헤더에 인라인되거나 매크로로 지정된 함수를 감지 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6551ab49cb51afa506118515bf472997e623f735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_function_exists()&lt;/code&gt; only verifies linking, it does not verify that the function is declared in system headers.</source>
          <target state="translated">&lt;code&gt;check_function_exists()&lt;/code&gt; 는 링크 만 확인하고 함수가 시스템 헤더에 선언되어 있는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4fa3854ca514606c11d8ce7ceeb9d700020301fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_include_file&lt;/code&gt; macro in the &lt;a href=&quot;../module/checkincludefile#module:CheckIncludeFile&quot; id=&quot;index-0-module:CheckIncludeFile&quot;&gt;&lt;code&gt;CheckIncludeFile&lt;/code&gt;&lt;/a&gt; module, the</source>
          <target state="translated">&lt;code&gt;check_include_file&lt;/code&gt; 매크로 &lt;a href=&quot;../module/checkincludefile#module:CheckIncludeFile&quot; id=&quot;index-0-module:CheckIncludeFile&quot;&gt; &lt;code&gt;CheckIncludeFile&lt;/code&gt; 의&lt;/a&gt; 모듈은</target>
        </trans-unit>
        <trans-unit id="e6449a5b0132cbbc70428ed243f2ed959e6135e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_include_file_cxx&lt;/code&gt; macro in the &lt;a href=&quot;../module/checkincludefilecxx#module:CheckIncludeFileCXX&quot; id=&quot;index-0-module:CheckIncludeFileCXX&quot;&gt;&lt;code&gt;CheckIncludeFileCXX&lt;/code&gt;&lt;/a&gt; module, and the</source>
          <target state="translated">&lt;code&gt;check_include_file_cxx&lt;/code&gt; 에서 매크로 &lt;a href=&quot;../module/checkincludefilecxx#module:CheckIncludeFileCXX&quot; id=&quot;index-0-module:CheckIncludeFileCXX&quot;&gt; &lt;code&gt;CheckIncludeFileCXX&lt;/code&gt; 의&lt;/a&gt; 모듈 및</target>
        </trans-unit>
        <trans-unit id="0f58b3d6a863db5859f8c9b26c0b970bb8599e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_include_files&lt;/code&gt; macro in the &lt;a href=&quot;../module/checkincludefiles#module:CheckIncludeFiles&quot; id=&quot;index-0-module:CheckIncludeFiles&quot;&gt;&lt;code&gt;CheckIncludeFiles&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">&lt;code&gt;check_include_files&lt;/code&gt; 매크로 &lt;a href=&quot;../module/checkincludefiles#module:CheckIncludeFiles&quot; id=&quot;index-0-module:CheckIncludeFiles&quot;&gt; &lt;code&gt;CheckIncludeFiles&lt;/code&gt; 용&lt;/a&gt; 모듈</target>
        </trans-unit>
        <trans-unit id="0528c1025d3433618e5cdffa820deac42cb6c461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_required_components(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; should be called at the end of the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file. This macro checks whether all requested, non-optional components have been found, and if this is not the case, sets the &lt;code&gt;Foo_FOUND&lt;/code&gt; variable to &lt;code&gt;FALSE&lt;/code&gt;, so that the package is considered to be not found. It does that by testing the &lt;code&gt;Foo_&amp;lt;Component&amp;gt;_FOUND&lt;/code&gt; variables for all requested required components. This macro should be called even if the package doesn&amp;rsquo;t provide any components to make sure users are not specifying components erroneously. When using the &lt;code&gt;NO_CHECK_REQUIRED_COMPONENTS_MACRO&lt;/code&gt; option, this macro is not generated into the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;check_required_components(&amp;lt;PackageName&amp;gt;)&lt;/code&gt; 는 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 파일 의 끝에 호출되어야 합니다. 이 매크로는 요청 된 비 선택적 구성 요소가 모두 있는지 확인하고, 그렇지 않은 경우 &lt;code&gt;Foo_FOUND&lt;/code&gt; 변수를 &lt;code&gt;FALSE&lt;/code&gt; 로 설정 하여 패키지를 찾을 수없는 것으로 간주합니다. 요청 된 모든 필수 구성 요소에 대해 &lt;code&gt;Foo_&amp;lt;Component&amp;gt;_FOUND&lt;/code&gt; 변수를 테스트하여 이를 수행합니다 . 사용자가 구성 요소를 잘못 지정하지 않도록 패키지에서 구성 요소를 제공하지 않더라도이 매크로를 호출해야합니다. &lt;code&gt;NO_CHECK_REQUIRED_COMPONENTS_MACRO&lt;/code&gt; 옵션을 사용하는 경우이 매크로는 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 파일에 생성되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6103cd57963f30cf2b9ec3370c9f15cfbac0bd57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clang&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt;: Clang of specified version</source>
          <target state="translated">&lt;code&gt;clang&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; : 지정된 버전의 Clang</target>
        </trans-unit>
        <trans-unit id="700f3a054bc2f413d4020c13837b334f918099d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clang&lt;/code&gt;: Clang of most recent available version</source>
          <target state="translated">&lt;code&gt;clang&lt;/code&gt; : 사용 가능한 최신 버전의 Clang</target>
        </trans-unit>
        <trans-unit id="b3bdf85f43ba07f978aa111da040ac6f3e6f5a76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmakeFiles&lt;/code&gt; object version 1 is a JSON object:</source>
          <target state="translated">&lt;code&gt;cmakeFiles&lt;/code&gt; 객체 버전 1은 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f453dcd3f468055e922b9a922b1481cc9c7a32a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmake_language&lt;/code&gt; does not introduce a new variable or policy scope.</source>
          <target state="translated">&lt;code&gt;cmake_language&lt;/code&gt; 는 새 변수 또는 정책 범위를 도입하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="371a3f6d6e53d7e69190d8c63f4de03f804d65f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codemodel&lt;/code&gt; object version 2 is a JSON object:</source>
          <target state="translated">&lt;code&gt;codemodel&lt;/code&gt; 객체 버전 2는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="68f7d197ec1d1c4d1f21dd0af82f99b978cd2289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compname&lt;/code&gt; is the name of an installation component, as defined by the &lt;code&gt;COMPONENT&lt;/code&gt; argument of one or more CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; commands. With the &lt;code&gt;cpack_add_component&lt;/code&gt; command one can set a name, a description, and other attributes of an installation component. One can also assign a component to a component group.</source>
          <target state="translated">&lt;code&gt;compname&lt;/code&gt; 은 하나 이상의 CMake &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;COMPONENT&lt;/code&gt; 인수 로 정의 된 설치 구성 요소의 이름입니다 . 와 &lt;code&gt;cpack_add_component&lt;/code&gt; 의 이름을 설정할 수 있습니다 명령 하나, 설명 및 설치 구성 요소의 다른 속성. 구성 요소 그룹에 구성 요소를 할당 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ab1f983e051dedc8341e94f2179609b72fd213f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configure_package_config_file()&lt;/code&gt; should be used instead of the plain &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; command when creating the &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; or &lt;code&gt;&amp;lt;PackageName&amp;gt;-config.cmake&lt;/code&gt; file for installing a project or library. It helps making the resulting package relocatable by avoiding hardcoded paths in the installed &lt;code&gt;Config.cmake&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;configure_package_config_file()&lt;/code&gt; 프로젝트 또는 라이브러리 설치를 위해 &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;PackageName&amp;gt;-config.cmake&lt;/code&gt; 파일을 작성할 때 일반 &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt; 명령 대신 configure_package_config_file ()을 사용해야합니다 . 설치된 &lt;code&gt;Config.cmake&lt;/code&gt; 파일 에서 하드 코드 된 경로를 피함으로써 결과 패키지를 재배치 할 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="d014ebbb7f391ef2654979045ef7e3a787cfc3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cvs&lt;/code&gt; command-line tool to use if source tree is managed by CVS.</source>
          <target state="translated">&lt;code&gt;cvs&lt;/code&gt; 소스 트리가 CVS에 의해 관리되는 경우 사용할 cvs 명령 줄 도구입니다.</target>
        </trans-unit>
        <trans-unit id="6b64d4420a1cfb7d9f10eed76b3dc136b79c7028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decltype(auto)&lt;/code&gt; semantics, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3638.html&quot;&gt;N3638&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;decltype(auto)&lt;/code&gt; &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3638.html&quot;&gt;N3638에&lt;/a&gt; 정의 된 decltype (auto) 의미론 .</target>
        </trans-unit>
        <trans-unit id="3143c4ff73c7da496336f024f00b031cd8ef4ed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; searches for the dependency according to the linking rules of the platform (see below).</source>
          <target state="translated">&lt;code&gt;file(GET_RUNTIME_DEPENDENCIES)&lt;/code&gt; 은 플랫폼의 연결 규칙에 따라 종속성을 검색합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="e4f301fca7710c74274ba409edf355a779a3415e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt;: archiver flags.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; : 아카이버 플래그.</target>
        </trans-unit>
        <trans-unit id="9a5199139d6ce238afc35bf3f2bda9c6f8bbb0cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt;: link flags.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; : 링크 플래그.</target>
        </trans-unit>
        <trans-unit id="c5b33791265b6376d2ae111c559bd4c6b6fd08b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&amp;gt;=3.1&lt;/code&gt; matches any version from 3.1 or later.</source>
          <target state="translated">&lt;code&gt;foo&amp;gt;=3.1&lt;/code&gt; 은 3.1 이상의 모든 버전과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="78559b27e393f07c8bd1346f7910a4a2fb129107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&amp;lt;2&lt;/code&gt; only matches versions before 2.</source>
          <target state="translated">&lt;code&gt;foo&amp;lt;2&lt;/code&gt; 이전의 버전과 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="1fe4371cdf5b8edc78127a269a7ee64acf43b766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; matches any version.</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; 는 모든 버전과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8b904dffb28bb19bc176f6537c9fd93f058b3cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo=1.2.3&lt;/code&gt; requires that foo must be exactly version 1.2.3.</source>
          <target state="translated">&lt;code&gt;foo=1.2.3&lt;/code&gt; 에서는 foo가 정확히 1.2.3이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0160abbf70796ab379bc950c5865531577a759e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; / &lt;code&gt;endforeach&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; / &lt;code&gt;endforeach&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d92d92c3d0cd29aa39ee799cbe958f3157004a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frameworkPath&lt;/code&gt;: macOS framework search path flags.</source>
          <target state="translated">&lt;code&gt;frameworkPath&lt;/code&gt; : macOS 프레임 워크 검색 경로 플래그.</target>
        </trans-unit>
        <trans-unit id="4917674453de053fbc0df18084c9f418ca3ee735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; / &lt;code&gt;endfunction&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; / &lt;code&gt;endfunction&lt;/code&gt; 기능</target>
        </trans-unit>
        <trans-unit id="740f8c8a28746232344bd536caa4826a8bab9fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git&lt;/code&gt; command-line tool to use if source tree is managed by Git.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; 소스 트리가 Git에 의해 관리되는 경우 사용할 git 명령 줄 도구입니다.</target>
        </trans-unit>
        <trans-unit id="173a3083a551d05141f36d15e73b829e3a24dd7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gtest_add_tests&lt;/code&gt; attempts to identify tests by scanning source files. Although this is generally effective, it uses only a basic regular expression match, which can be defeated by atypical test declarations, and is unable to fully &amp;ldquo;split&amp;rdquo; parameterized tests. Additionally, it requires that CMake be re-run to discover any newly added, removed or renamed tests (by default, this means that CMake is re-run when any test source file is changed, but see &lt;code&gt;SKIP_DEPENDENCY&lt;/code&gt;). However, it has the advantage of declaring tests at CMake time, which somewhat simplifies setting additional properties on tests, and always works in a cross-compiling environment.</source>
          <target state="translated">&lt;code&gt;gtest_add_tests&lt;/code&gt; 는 소스 파일을 스캔하여 테스트를 식별하려고 시도합니다. 이 방법은 일반적으로 효과적이지만 기본 정규식 일치 만 사용합니다.이 규칙은 비정형 테스트 선언으로 이길 수 있으며 매개 변수화 된 테스트를 완전히 &quot;분할&quot;할 수 없습니다. 또한 새로 추가, 제거 또는 이름이 바뀐 테스트를 발견하려면 CMake를 다시 실행해야합니다 (기본적으로 이는 테스트 소스 파일이 변경 될 때 CMake가 다시 실행되지만 &lt;code&gt;SKIP_DEPENDENCY&lt;/code&gt; 참조 ). 그러나 CMake 시간에 테스트를 선언하면 테스트에 대한 추가 속성 설정이 약간 단순화되고 항상 크로스 컴파일 환경에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f51bfe33b64e634fb30161dbf33ff1fb83ff8676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gtest_discover_tests()&lt;/code&gt; sets up a post-build command on the test executable that generates the list of tests by parsing the output from running the test with the &lt;code&gt;--gtest_list_tests&lt;/code&gt; argument. Compared to the source parsing approach of &lt;a href=&quot;#command:gtest_add_tests&quot; id=&quot;index-2-command:gtest_add_tests&quot;&gt;&lt;code&gt;gtest_add_tests()&lt;/code&gt;&lt;/a&gt;, this ensures that the full list of tests, including instantiations of parameterized tests, is obtained. Since test discovery occurs at build time, it is not necessary to re-run CMake when the list of tests changes. However, it requires that &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; is properly set in order to function in a cross-compiling environment.</source>
          <target state="translated">&lt;code&gt;gtest_discover_tests()&lt;/code&gt; 는 &lt;code&gt;--gtest_list_tests&lt;/code&gt; 인수를 사용 하여 테스트를 실행하여 출력을 구문 분석하여 테스트 목록을 생성하는 테스트 실행 파일에 빌드 후 명령을 설정합니다 . &lt;a href=&quot;#command:gtest_add_tests&quot; id=&quot;index-2-command:gtest_add_tests&quot;&gt; &lt;code&gt;gtest_add_tests()&lt;/code&gt; &lt;/a&gt; 의 소스 파싱 접근 방식과 비교 하면 매개 변수화 된 테스트의 인스턴스화를 포함한 전체 테스트 목록을 얻을 수 있습니다. 빌드시 테스트 검색이 발생하므로 테스트 목록이 변경 될 때 CMake를 다시 실행할 필요가 없습니다. 그러나 크로스 컴파일 환경에서 작동 하려면 &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt; 를 올바르게 설정 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="df2c6f2b1c1374b334d5fe556a883398e590d231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gtest_discover_tests&lt;/code&gt; sets up a post-build command on the test executable that generates the list of tests by parsing the output from running the test with the &lt;code&gt;--gtest_list_tests&lt;/code&gt; argument. Compared to the source parsing approach of &lt;a href=&quot;#command:gtest_add_tests&quot; id=&quot;index-2-command:gtest_add_tests&quot;&gt;&lt;code&gt;gtest_add_tests()&lt;/code&gt;&lt;/a&gt;, this ensures that the full list of tests, including instantiations of parameterized tests, is obtained. Since test discovery occurs at build time, it is not necessary to re-run CMake when the list of tests changes. However, it requires that &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; is properly set in order to function in a cross-compiling environment.</source>
          <target state="translated">&lt;code&gt;gtest_discover_tests&lt;/code&gt; 는 테스트 실행 결과를 &lt;code&gt;--gtest_list_tests&lt;/code&gt; 인수 로 구문 분석하여 테스트 목록을 생성하는 테스트 실행 파일에 빌드 후 명령을 설정합니다 . &lt;a href=&quot;#command:gtest_add_tests&quot; id=&quot;index-2-command:gtest_add_tests&quot;&gt; &lt;code&gt;gtest_add_tests()&lt;/code&gt; &lt;/a&gt; 의 소스 파싱 접근 방식과 비교하여 매개 변수화 된 테스트의 인스턴스화를 포함한 전체 테스트 목록을 얻을 수 있습니다. 테스트 발견은 빌드시 발생하므로 테스트 목록이 변경 될 때 CMake를 다시 실행할 필요가 없습니다. 그러나 크로스 컴파일 환경에서 작동 하려면 &lt;a href=&quot;../prop_tgt/crosscompiling_emulator#prop_tgt:CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-prop_tgt:CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt; 가 올바르게 설정되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b6c96b815c24735f5f038e2ea960dca2f3c72950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hg&lt;/code&gt; command-line tool to use if source tree is managed by Mercurial.</source>
          <target state="translated">&lt;code&gt;hg&lt;/code&gt; 소스 트리가 Mercurial에 의해 관리되는 경우 사용할 hg 명령 행 도구.</target>
        </trans-unit>
        <trans-unit id="a84ce50733bd6f349d2b4dfcf8905760f7631d03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; / &lt;code&gt;elseif&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; / &lt;code&gt;endif&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; / &lt;code&gt;elseif&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; / &lt;code&gt;endif&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2abb38f611d265dd4bcce0607bba1684df6891bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraries&lt;/code&gt;: link library file paths or flags.</source>
          <target state="translated">&lt;code&gt;libraries&lt;/code&gt; : 라이브러리 파일 경로 또는 플래그를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="dd550960e469fb0d4894b1194b8681d96e736aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryPath&lt;/code&gt;: library search path flags.</source>
          <target state="translated">&lt;code&gt;libraryPath&lt;/code&gt; : 라이브러리 검색 경로 플래그.</target>
        </trans-unit>
        <trans-unit id="4bedfbba3c4b78a503ef7a9587bdb81dee240599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;long long&lt;/code&gt; type, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1811.pdf&quot;&gt;N1811&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;long long&lt;/code&gt; &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1811.pdf&quot;&gt;N1811에&lt;/a&gt; 정의 된 long long 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="044ce0e47370c1938d47f531dbff5fa98451cc87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro&lt;/code&gt; / &lt;code&gt;endmacro&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; / &lt;code&gt;endmacro&lt;/code&gt; 매크로</target>
        </trans-unit>
        <trans-unit id="153fffc09dd2df4addcf831211955b3f69765f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moc&lt;/code&gt; output files are identical on different build setups,</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 출력 파일은 다른 빌드 설정에서 동일합니다.</target>
        </trans-unit>
        <trans-unit id="193899a1fa91ef6d3aa7bf13050e98904ce08609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moc&lt;/code&gt; output files that are included by a source file will be generated in</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 소스 파일에 포함 된 moc 출력 파일은</target>
        </trans-unit>
        <trans-unit id="4174aa297a105d30e477ae2efa3a194381cd8e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moc&lt;/code&gt; output files that are not included in a source file will be generated in</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 소스 파일에 포함되지 않은 moc 출력 파일은</target>
        </trans-unit>
        <trans-unit id="a3419fbfed26c7dd1f0e9befb186c66f11e98b0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moc&lt;/code&gt; output files will compile correctly when the source and/or build directory is a symbolic link.</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 출력 파일은 소스 및 / 또는 빌드 디렉토리가 심볼릭 링크 일 때 올바르게 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="dddc4fd71c56ab2b6649e3e6b8b17d5d80c6be0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: A &lt;code&gt;BOOL&lt;/code&gt; which has a false-like value (e.g. &lt;code&gt;OFF&lt;/code&gt;, &lt;code&gt;NO&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; : 거짓과 유사한 값을 갖는 &lt;code&gt;BOOL&lt;/code&gt; (예 : &lt;code&gt;OFF&lt;/code&gt; , &lt;code&gt;NO&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7098d48ed90ae90db4a5b9ce5a1a9dc22af91511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;nppc&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="c489da96f0e6c96db7e876dc8f38b34e5927f196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppial&lt;/code&gt;: Arithmetic and logical operation functions in &lt;code&gt;nppi_arithmetic_and_logical_operations.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppial&lt;/code&gt; : 산술 및 논리 연산 기능 &lt;code&gt;nppi_arithmetic_and_logical_operations.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f53a6a672776bfeb35babad8da5300a3a179e9fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppicc&lt;/code&gt;: Color conversion and sampling functions in &lt;code&gt;nppi_color_conversion.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppicc&lt;/code&gt; : 색상 변환 및 샘플링 기능 &lt;code&gt;nppi_color_conversion.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40fa09ce93c25e91061c0cb0cc4671fa9aa75749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppicom&lt;/code&gt;: JPEG compression and decompression functions in &lt;code&gt;nppi_compression_functions.h&lt;/code&gt; Removed starting in CUDA 11.0, use &lt;a href=&quot;#cuda-toolkit-nvjpeg&quot;&gt;nvJPEG&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;nppicom&lt;/code&gt; :에 JPEG 압축 및 압축 해제 기능 &lt;code&gt;nppi_compression_functions.h&lt;/code&gt; CUDA 11.0 제거가 시작을 사용 &lt;a href=&quot;#cuda-toolkit-nvjpeg&quot;&gt;nvJPEG을&lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="048c93c91560c993ce56cdf6d2039ab161ac2caa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppidei&lt;/code&gt;: Data exchange and initialization functions in &lt;code&gt;nppi_data_exchange_and_initialization.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppidei&lt;/code&gt; : 데이터는 교환 및 초기화 기능 &lt;code&gt;nppi_data_exchange_and_initialization.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1df7e08336a5589c023570098115c0deb524521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppif&lt;/code&gt;: Filtering and computer vision functions in &lt;code&gt;nppi_filter_functions.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppif&lt;/code&gt; :에서 필터링 및 컴퓨터 비전 기능 &lt;code&gt;nppi_filter_functions.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28148e2abcd7c528183b03cf99fb6f59899b5aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppig&lt;/code&gt;: Geometry transformation functions found in &lt;code&gt;nppi_geometry_transforms.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppig&lt;/code&gt; : 기하 변환 함수 검색된 &lt;code&gt;nppi_geometry_transforms.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13604154738c4fb390d4483da0c6ad93e9ee610d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppim&lt;/code&gt;: Morphological operation functions found in &lt;code&gt;nppi_morphological_operations.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppim&lt;/code&gt; : 형태 학적 연산 기능에서 발견 &lt;code&gt;nppi_morphological_operations.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8787b05bc2fddcd2c2a49219a3cf1c701d2670fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppist&lt;/code&gt;: Statistics and linear transform in &lt;code&gt;nppi_statistics_functions.h&lt;/code&gt; and &lt;code&gt;nppi_linear_transforms.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppist&lt;/code&gt; : &lt;code&gt;nppi_statistics_functions.h&lt;/code&gt; 및 &lt;code&gt;nppi_linear_transforms.h&lt;/code&gt; 의 통계 및 선형 변환</target>
        </trans-unit>
        <trans-unit id="c9ecd6ec652dd2bbd072994a33873500e0f55208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppisu&lt;/code&gt;: Memory support functions in &lt;code&gt;nppi_support_functions.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppisu&lt;/code&gt; :의 메모리 지원 기능 &lt;code&gt;nppi_support_functions.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bfe936ebfd9d13a8e98f5a9db0f288008e6bcb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nppitc&lt;/code&gt;: Threshold and compare operation functions in &lt;code&gt;nppi_threshold_and_compare_operations.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nppitc&lt;/code&gt; : 임계 값과의 비교 연산 기능 &lt;code&gt;nppi_threshold_and_compare_operations.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="711ff7ab7e32001775157995f552ae8e399eaf09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npps&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;npps&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="f3cf6960de7c5139ff7065f860c6d045336cb2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;num_processors[j,i]&lt;/code&gt;: Value of the CTest &lt;a href=&quot;../prop_test/processors#prop_test:PROCESSORS&quot; id=&quot;index-2-prop_test:PROCESSORS&quot;&gt;&lt;code&gt;PROCESSORS&lt;/code&gt;&lt;/a&gt; property for the &lt;code&gt;i&lt;/code&gt; test for the &lt;code&gt;j&lt;/code&gt; label or subproject</source>
          <target state="translated">&lt;code&gt;num_processors[j,i]&lt;/code&gt; : &lt;code&gt;j&lt;/code&gt; 레이블 또는 서브 프로젝트에 대한 &lt;code&gt;i&lt;/code&gt; 테스트 의 CTest &lt;a href=&quot;../prop_test/processors#prop_test:PROCESSORS&quot; id=&quot;index-2-prop_test:PROCESSORS&quot;&gt; &lt;code&gt;PROCESSORS&lt;/code&gt; &lt;/a&gt; 특성 값</target>
        </trans-unit>
        <trans-unit id="5ceb69e518b27b33f51fae57aa236a4459c4da99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;num_tests[j]&lt;/code&gt;: Number of tests associated with the &lt;code&gt;j&lt;/code&gt; label or subproject</source>
          <target state="translated">&lt;code&gt;num_tests[j]&lt;/code&gt; : &lt;code&gt;j&lt;/code&gt; 레이블 또는 서브 프로젝트 와 연관된 테스트 수</target>
        </trans-unit>
        <trans-unit id="3c26f57e2b4719a21cc25179a98ca09a0b07960a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p4&lt;/code&gt; command-line tool to use if source tree is managed by Perforce.</source>
          <target state="translated">&lt;code&gt;p4&lt;/code&gt; 소스 트리가 Perforce에 의해 관리되는 경우 사용할 p4 명령 줄 도구입니다.</target>
        </trans-unit>
        <trans-unit id="ef32864226bfbb770b1e05a8e8de75af56e3b71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt;: A &lt;code&gt;FILEPATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; : &lt;code&gt;FILEPATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="143b3099921691cdc1ccbf54d43652c675698264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; define different content details for &lt;code&gt;projD&lt;/code&gt;, but &lt;code&gt;projA&lt;/code&gt; also defines a set of content details for &lt;code&gt;projD&lt;/code&gt;. Because &lt;code&gt;projA&lt;/code&gt; will define them first, the details from &lt;code&gt;projB&lt;/code&gt; and &lt;code&gt;projC&lt;/code&gt; will not be used. The override details defined by &lt;code&gt;projA&lt;/code&gt; are not required to match either of those from &lt;code&gt;projB&lt;/code&gt; or &lt;code&gt;projC&lt;/code&gt;, but it is up to the higher level project to ensure that the details it does define still make sense for the child projects.</source>
          <target state="translated">&lt;code&gt;projB&lt;/code&gt; 및 &lt;code&gt;projC&lt;/code&gt; 는 서로 다른 내용의 세부 사항을 정의 &lt;code&gt;projD&lt;/code&gt; 만 &lt;code&gt;projA&lt;/code&gt; 또한 콘텐츠 세부 사항의 집합을 정의 &lt;code&gt;projD&lt;/code&gt; 을 . 때문에 &lt;code&gt;projA&lt;/code&gt; 먼저 정의한다,에서 세부 사항 &lt;code&gt;projB&lt;/code&gt; 및 &lt;code&gt;projC&lt;/code&gt; 는 사용되지 않습니다. &lt;code&gt;projA&lt;/code&gt; 에 의해 정의 된 대체 세부 사항 은 &lt;code&gt;projB&lt;/code&gt; 또는 &lt;code&gt;projC&lt;/code&gt; 의 세부 사항 과 일치 할 필요는 없지만 정의 된 세부 사항이 여전히 하위 프로젝트에 적합한 지 확인하는 것은 상위 레벨 프로젝트에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="f95a8534f91c5a9c1213183fa06d5b79084c2b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;query.json&lt;/code&gt; files are stateful queries owned by the client &lt;code&gt;&amp;lt;client&amp;gt;&lt;/code&gt;. The owning client may update or remove them at any time. When a given client installation is updated it may then update the stateful query it writes to build trees to request newer object versions. This can be used to avoid asking CMake to generate multiple object versions unnecessarily.</source>
          <target state="translated">&lt;code&gt;query.json&lt;/code&gt; 파일은 &lt;code&gt;&amp;lt;client&amp;gt;&lt;/code&gt; 클라이언트가 소유 한 상태 저장 쿼리입니다 . 소유 한 클라이언트는 언제든지 업데이트하거나 제거 할 수 있습니다. 주어진 클라이언트 설치가 업데이트되면 새로운 객체 버전을 요청하기 위해 트리를 빌드하기 위해 작성하는 상태 저장 쿼리를 업데이트 할 수 있습니다. 이것은 CMake에게 불필요하게 여러 객체 버전을 생성하도록 요구하는 것을 피하기 위해 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea8381017d6f39a433e338c95a1acfb295ab099c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw_test_time[j,i]&lt;/code&gt;: Wall-clock time for the &lt;code&gt;i&lt;/code&gt; test for the &lt;code&gt;j&lt;/code&gt; label or subproject</source>
          <target state="translated">&lt;code&gt;raw_test_time[j,i]&lt;/code&gt; : &lt;code&gt;j&lt;/code&gt; 레이블 또는 하위 프로젝트에 대한 &lt;code&gt;i&lt;/code&gt; 테스트의 벽시계 시간</target>
        </trans-unit>
        <trans-unit id="a8714bab2368b22b11f0a475b022d52803575806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restrict&lt;/code&gt; keyword, as defined in &lt;code&gt;ISO/IEC 9899:1999&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;restrict&lt;/code&gt; 에 정의 된 키워드 &lt;code&gt;ISO/IEC 9899:1999&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c51ea6ea4261ff642686fde7ac5bd46ba29e668e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: A &lt;code&gt;STRING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; : &lt;code&gt;STRING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98d64fa2a4dedad8a3e48bcf1d1454a025c05340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_and_check()&lt;/code&gt; should be used instead of the normal &lt;code&gt;set()&lt;/code&gt; command for setting directories and file locations. Additionally to setting the variable it also checks that the referenced file or directory actually exists and fails with a &lt;code&gt;FATAL_ERROR&lt;/code&gt; otherwise. This makes sure that the created &lt;code&gt;FooConfig.cmake&lt;/code&gt; file does not contain wrong references. When using the &lt;code&gt;NO_SET_AND_CHECK_MACRO&lt;/code&gt;, this macro is not generated into the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;set_and_check()&lt;/code&gt; 디렉토리 및 파일 위치를 설정 하려면 일반 &lt;code&gt;set()&lt;/code&gt; 명령 대신 set_and_check ()를 사용해야합니다 . 또한 변수를 설정하기 위해 참조 된 파일 또는 디렉토리가 실제로 존재 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 그렇지 않으면 FATAL_ERROR로 실패합니다 . 이렇게하면 생성 된 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 파일에 잘못된 참조가 포함되지 않습니다. &lt;code&gt;NO_SET_AND_CHECK_MACRO&lt;/code&gt; 를 사용하는 경우이 매크로는 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 파일에 생성되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="65b9f12d344934942183a9a2b682235010fd069d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; ends in the suffix &lt;code&gt;-NOTFOUND&lt;/code&gt; (case-sensitive).</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 은 접미사 &lt;code&gt;-NOTFOUND&lt;/code&gt; (대소 문자 구분)로 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="f8af3239c2c60adf8fa93ff70fa58644c38629b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is a case-insensitive equal of &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;OFF&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;NO&lt;/code&gt;, &lt;code&gt;IGNORE&lt;/code&gt;, or &lt;code&gt;NOTFOUND&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 은 대소 문자를 구분하지 않는 &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;FALSE&lt;/code&gt; , &lt;code&gt;OFF&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;NO&lt;/code&gt; , &lt;code&gt;IGNORE&lt;/code&gt; 또는 &lt;code&gt;NOTFOUND&lt;/code&gt; 또는</target>
        </trans-unit>
        <trans-unit id="125643fd66f04961e0579942e34ef754a8164b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; is empty,</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="088f9d9ad706d4066280da91fbf206928df9c89f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;svn&lt;/code&gt; command-line tool to use if source tree is managed by Subversion.</source>
          <target state="translated">&lt;code&gt;svn&lt;/code&gt; 소스 트리가 Subversion으로 관리되는 경우 사용할 svn 명령 줄 도구입니다.</target>
        </trans-unit>
        <trans-unit id="f4e3c4616c8f9be2df100f127bc39e7dddd86a29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;testsDone&lt;/code&gt; is a cleanup test for both the &lt;code&gt;DB&lt;/code&gt; and &lt;code&gt;Foo&lt;/code&gt; fixtures. Therefore, it will only execute once regular tests for both fixtures have finished (i.e. after &lt;code&gt;fooOnly&lt;/code&gt;, &lt;code&gt;dbOnly&lt;/code&gt; and &lt;code&gt;dbWithFoo&lt;/code&gt;). No &lt;code&gt;DEPENDS&lt;/code&gt; relationship was specified for &lt;code&gt;testsDone&lt;/code&gt;, so it is free to run before, after or concurrently with other cleanup tests for either fixture.</source>
          <target state="translated">&lt;code&gt;testsDone&lt;/code&gt; 은 &lt;code&gt;DB&lt;/code&gt; 및 &lt;code&gt;Foo&lt;/code&gt; 픽스처 모두에 대한 정리 테스트입니다 . 따라서 두 조명기 모두에 대한 정기 테스트가 완료된 후에 &lt;code&gt;fooOnly&lt;/code&gt; (즉 fooOnly , &lt;code&gt;dbOnly&lt;/code&gt; 및 &lt;code&gt;dbWithFoo&lt;/code&gt; 이후 ) 실행됩니다. &lt;code&gt;testsDone&lt;/code&gt; 에 &lt;code&gt;DEPENDS&lt;/code&gt; 관계가 지정 되지 않았 으므로 어느 하나의 픽스처에 대한 다른 클린업 테스트 전, 후에 또는 동시에 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="012435875a5589a7fbdffecff5aab6989f019a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total&lt;/code&gt;: Total number of labels or subprojects that have at least one test run</source>
          <target state="translated">&lt;code&gt;total&lt;/code&gt; : 하나 이상의 테스트 실행이있는 총 레이블 또는 하위 프로젝트 수</target>
        </trans-unit>
        <trans-unit id="d749ea78ad3816b7248e6f226786450da470315f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if cmake supports server-mode and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; cmake가 서버 모드를 지원하면 true 이고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5d66900bb484db69c35293521c2ed81ffa9c2245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the generator supports platforms and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 생성기가 플랫폼을 지원하면 true 이고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8b1fa42c3d79721eafdc50d73d3b3b3c392eb49e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the generator supports toolsets and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 생성기가 도구 세트를 지원하면 true 이고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e88d54b5b74f6f9e626d3a19a80f83f7886ac72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uname -m&lt;/code&gt; on GNU, Linux, Cygwin, Darwin, Android, or</source>
          <target state="translated">&lt;code&gt;uname -m&lt;/code&gt; ( GNU, Linux, Cygwin, Darwin, Android 또는</target>
        </trans-unit>
        <trans-unit id="24648981a0087e647f9d348c0a0b44210e1096ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uname -m&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;uname -m&lt;/code&gt; 그렇지 않으면.</target>
        </trans-unit>
        <trans-unit id="24f848213111860d98eec270d04b58253c3c8404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uname -p&lt;/code&gt; if its exit code is nonzero, or</source>
          <target state="translated">&lt;code&gt;uname -p&lt;/code&gt; 종료 코드가 0이 아니면</target>
        </trans-unit>
        <trans-unit id="e861b2dbed0ffbe297973fd4826bd557c3a242c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; / &lt;code&gt;endwhile&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; / &lt;code&gt;endwhile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4bfc7883984afc52b8b07b719d0d26850a5416b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x86&lt;/code&gt;: &amp;ldquo;x86 (x86)&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;x86&lt;/code&gt; :&amp;ldquo;x86 (x86)&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="70ae8e603e3d7fe4601fb97768aec7de536e4164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x86_64&lt;/code&gt;: &amp;ldquo;x86_64 (x86_64)&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;x86_64&lt;/code&gt; :&amp;ldquo;x86_64 (x86_64)&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4f06fd4083096dd4f88614733cd2f574bb201ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt;: A &lt;code&gt;BOOL&lt;/code&gt; which has a true-like value (e.g. &lt;code&gt;ON&lt;/code&gt;, &lt;code&gt;YES&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; : 실제와 같은 값을 갖는 &lt;code&gt;BOOL&lt;/code&gt; (예 : &lt;code&gt;ON&lt;/code&gt; , &lt;code&gt;YES&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0aa00246cc0e3254ddfcd198a9bdfc191a9c1ea7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(&lt;a href=&quot;#id1&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;#id2&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;#id3&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;#id4&quot;&gt;4&lt;/a&gt;)&lt;/em&gt; One MiB (mebibyte) is equal to 1024x1024 bytes.</source>
          <target state="translated">&lt;em&gt;( &lt;a href=&quot;#id1&quot;&gt;1&lt;/a&gt; , &lt;a href=&quot;#id2&quot;&gt;2&lt;/a&gt; , &lt;a href=&quot;#id3&quot;&gt;3&lt;/a&gt; , &lt;a href=&quot;#id4&quot;&gt;4&lt;/a&gt; )&lt;/em&gt; 하나의 MiB (mebibyte)는 1024x1024 바이트와 같습니다.</target>
        </trans-unit>
        <trans-unit id="f1d5aac8558779eee583a06f20e4dd1a41caea06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CVS&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;CVS&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f76c145cc39faf9f16602a25f7f66ac369465d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DLL import libraries&lt;/em&gt; (on all Windows-based systems including Cygwin; they have extension &lt;code&gt;.lib&lt;/code&gt;, in contrast to the &lt;code&gt;.dll&lt;/code&gt; libraries that go to &lt;code&gt;RUNTIME&lt;/code&gt;);</source>
          <target state="translated">&lt;em&gt;DLL 가져 오기 라이브러리&lt;/em&gt; (Cygwin을 포함한 모든 Windows 기반 시스템 에서 &lt;code&gt;RUNTIME&lt;/code&gt; 로 이동 하는 &lt;code&gt;.dll&lt;/code&gt; 라이브러리 와 달리 확장자가 &lt;code&gt;.lib&lt;/code&gt; 입니다 .)</target>
        </trans-unit>
        <trans-unit id="55d89184686afab447b06d854abe44b520f140b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Executables&lt;/em&gt; (except on macOS when marked as &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;, see &lt;code&gt;BUNDLE&lt;/code&gt; below);</source>
          <target state="translated">&lt;em&gt;실행 파일&lt;/em&gt; (MacOS에서 &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; 로 표시된 경우 제외 , 아래 &lt;code&gt;BUNDLE&lt;/code&gt; 참조)</target>
        </trans-unit>
        <trans-unit id="68805055fe93cd12144e1092793f16f42c2935b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Git&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Git&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf7ea1806ac715c6067f9b9562aa4364dfd91e6a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Labels.json&lt;/em&gt; indicates any &lt;a href=&quot;../prop_sf/labels#prop_sf:LABELS&quot; id=&quot;index-0-prop_sf:LABELS&quot;&gt;&lt;code&gt;LABELS&lt;/code&gt;&lt;/a&gt; that have been set on the source files.</source>
          <target state="translated">&lt;em&gt;Labels.json&lt;/em&gt; 은 소스 파일에 설정된 &lt;a href=&quot;../prop_sf/labels#prop_sf:LABELS&quot; id=&quot;index-0-prop_sf:LABELS&quot;&gt; &lt;code&gt;LABELS&lt;/code&gt; &lt;/a&gt; 를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="64d704080f500168deecb39c5df31f1499d80084" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mercurial&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Mercurial&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0ed112ff807d35c57c65603a29d102f9ca97a9f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Shared libraries&lt;/em&gt;, except</source>
          <target state="translated">&lt;em&gt;공유 라이브러리&lt;/em&gt; , 제외</target>
        </trans-unit>
        <trans-unit id="9819d7637ba793a0ec2278dfe313cdb11fe97ecb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Static libraries&lt;/em&gt; (except on macOS when marked as &lt;code&gt;FRAMEWORK&lt;/code&gt;, see below);</source>
          <target state="translated">&lt;em&gt;정적 라이브러리&lt;/em&gt; ( &lt;code&gt;FRAMEWORK&lt;/code&gt; 로 표시된 macOS 제외 , 아래 참조)</target>
        </trans-unit>
        <trans-unit id="0aff0b220913b0163a069755aa76914206996dd5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Subversion&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Subversion&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acaa57dfbb4c5f964cbc87d29fe6a3349336d4a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;URL Download&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;URL 다운로드&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87bc74101fabfb16b8b5a74f40143361cd9ce5a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data.json&lt;/em&gt; defines the source and build directories for use by CDash.</source>
          <target state="translated">&lt;em&gt;data.json&lt;/em&gt; 은 &lt;em&gt;CDash&lt;/em&gt; 에서 사용할 소스 및 빌드 디렉토리를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="541e3bd25805535b873b09c5512498c459806c05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;getFirmware.cmake&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;getFirmware.cmake&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="e35af244c0ca7a776b3f42d6fce3f56795d8c3ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;projA&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;projA&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="7d602f4ef555855100f5d07e51cb2083cce67d1c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;projB&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;projB&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="d40a5583ec72acb9bbde649055b4b0a2cbac4344" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;projC&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;projC&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="38b73371fc16223e43f3cdb0452bdaa1d9266987" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A full path to a library file&lt;/strong&gt;: The generated link line will normally preserve the full path to the file. The buildsystem will have a dependency to re-link &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; if the library file changes.</source>
          <target state="translated">&lt;strong&gt;라이브러리 파일의 전체 경로&lt;/strong&gt; : 생성 된 링크 행은 일반적으로 파일의 전체 경로를 유지합니다. 라이브러리 파일이 변경되면 빌드 시스템은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 을 다시 연결하는 데 의존합니다 .</target>
        </trans-unit>
        <trans-unit id="4636ddcbeaba234f8e194343484ba30915d36073" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A generator expression&lt;/strong&gt;: A &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; may evaluate to any of the above items or to a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of them. If the &lt;code&gt;...&lt;/code&gt; contains any &lt;code&gt;;&lt;/code&gt; characters, e.g. after evaluation of a &lt;code&gt;${list}&lt;/code&gt; variable, be sure to use an explicitly quoted argument &lt;code&gt;&quot;$&amp;lt;...&amp;gt;&quot;&lt;/code&gt; so that this command receives it as a single &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;생성기 표현식&lt;/strong&gt; : &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt; 은 위 항목 중 하나 또는 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된 목록&lt;/a&gt; 으로 평가할 수 있습니다. 는 IF &lt;code&gt;...&lt;/code&gt; 모든 포함 &lt;code&gt;;&lt;/code&gt; 문자 (예 : &lt;code&gt;${list}&lt;/code&gt; 변수 평가 후) 는 명시 적으로 인용 된 인수 &lt;code&gt;&quot;$&amp;lt;...&amp;gt;&quot;&lt;/code&gt; 를 사용하여이 명령이 단일 &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; 으로 수신되도록하십시오 .</target>
        </trans-unit>
        <trans-unit id="d90e436e2fc30b275530342909755edafc715afe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A library target name&lt;/strong&gt;: The generated link line will have the full path to the linkable library file associated with the target. The buildsystem will have a dependency to re-link &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; if the library file changes.</source>
          <target state="translated">&lt;strong&gt;라이브러리 대상 이름&lt;/strong&gt; : 생성 된 링크 행에는 대상과 연관된 링크 가능한 라이브러리 파일의 전체 경로가 있습니다. 라이브러리 파일이 변경되면 빌드 시스템은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 을 다시 연결하는 데 의존합니다 .</target>
        </trans-unit>
        <trans-unit id="1027d8135123a2b8db4f61bf93a5ab9099bf8ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A link flag&lt;/strong&gt;: Item names starting with &lt;code&gt;-&lt;/code&gt;, but not &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;-framework&lt;/code&gt;, are treated as linker flags. Note that such flags will be treated like any other library link item for purposes of transitive dependencies, so they are generally safe to specify only as private link items that will not propagate to dependents.</source>
          <target state="translated">&lt;strong&gt;링크 플래그&lt;/strong&gt; : &lt;code&gt;-&lt;/code&gt; 로 시작 하지만 &lt;code&gt;-l&lt;/code&gt; 또는 &lt;code&gt;-framework&lt;/code&gt; 가 아닌 항목 이름 은 링커 플래그로 처리됩니다. 이러한 플래그는 전이 종속성의 목적으로 다른 라이브러리 링크 항목처럼 취급되므로 일반적으로 종속 항목으로 전파되지 않는 개인 링크 항목으로 만 지정하는 것이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="ebbd50a1b187bc2a0448a86db1f36d21cbb47355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A plain library name&lt;/strong&gt;: The generated link line will ask the linker to search for the library (e.g. &lt;code&gt;foo&lt;/code&gt; becomes &lt;code&gt;-lfoo&lt;/code&gt; or &lt;code&gt;foo.lib&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;일반 라이브러리 이름&lt;/strong&gt; : 생성 된 링크 라인은 링커에게 라이브러리를 검색하도록 요청합니다 (예 : &lt;code&gt;foo&lt;/code&gt; 는 &lt;code&gt;-lfoo&lt;/code&gt; 또는 &lt;code&gt;foo.lib&lt;/code&gt; 가 됨 ).</target>
        </trans-unit>
        <trans-unit id="d3255723d696988edecf519ca39c4bc2fd06b717" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All required dependencies of a package must also be found in the package configuration file.&lt;/strong&gt; Let&amp;rsquo;s imagine that we require the &lt;code&gt;Stats&lt;/code&gt; library in our project. In the CMakeLists file, we would add:</source>
          <target state="translated">&lt;strong&gt;패키지의 모든 필수 종속성은 패키지 구성 파일에서도 찾아야합니다. &lt;/strong&gt;프로젝트에 &lt;code&gt;Stats&lt;/code&gt; 라이브러리 가 필요하다고 가정 해 보겠습니다 . CMakeLists 파일에서 다음을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ea9ba9e1a69242f1f4fc903bd1f333d3a668df2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Build Step Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;빌드 단계 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d79b57cd204f4391ced0ac12cce3d6e462d18e26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configure Step Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단계 옵션 구성 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3732abe8e8052cdd73fa883673c1f187adfa2ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Directory Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;디렉토리 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4112f5d1d41a5f1211d805f54843fb5afd12dca0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Download Step Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단계 옵션 다운로드 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a05ee98a86bb538eea3a61f7b0e7d7e7a597b07e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exercise:&lt;/strong&gt; Add a required library to the &lt;code&gt;MathFunctions&lt;/code&gt; project.</source>
          <target state="translated">&lt;strong&gt;연습 : &lt;/strong&gt; &lt;code&gt;MathFunctions&lt;/code&gt; 프로젝트에 필요한 라이브러리를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="6bffbc2e13b6884b763360e1ae4dcff3825fbf50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exercise&lt;/strong&gt;: Modify &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; so that all targets have a &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; call to &lt;code&gt;tutorial_compiler_flags&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;연습&lt;/strong&gt; : 모든 대상이 &lt;code&gt;tutorial_compiler_flags&lt;/code&gt; 에 대한 &lt;a href=&quot;../../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 호출을 갖도록 &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 를 수정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d58d527c40d4e81968eb5e756986ae32eee3da5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exercise&lt;/strong&gt;: We modified &lt;code&gt;MathFunctions.h&lt;/code&gt; to use dll export defines. Using CMake documentation can you find a helper module to simplify this?</source>
          <target state="translated">&lt;strong&gt;연습&lt;/strong&gt; : 우리는 dll 내보내기 정의를 사용 하도록 &lt;code&gt;MathFunctions.h&lt;/code&gt; 를 수정 했습니다 . CMake 문서를 사용하여 이것을 단순화하는 도우미 모듈을 찾을 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="82012afd98a67a3ee175ad00d3abad4eab75e631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exercise&lt;/strong&gt;: Why is it important that we configure &lt;code&gt;TutorialConfig.h.in&lt;/code&gt; after the option for &lt;code&gt;USE_MYMATH&lt;/code&gt;? What would happen if we inverted the two?</source>
          <target state="translated">&lt;strong&gt;연습&lt;/strong&gt; : &lt;code&gt;USE_MYMATH&lt;/code&gt; 옵션 다음에 &lt;code&gt;TutorialConfig.h.in&lt;/code&gt; 을 구성하는 것이 중요한 이유는 무엇 입니까? 우리가 둘을 뒤집 으면 어떻게 될까요?</target>
        </trans-unit>
        <trans-unit id="b220dbd1d634d34e26371cabea4a14adea51c55e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Helper functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;도우미 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78d812029b97e1dc4901bd512c3b809825a57afe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important notice:&lt;/strong&gt; The following checks cannot be performed without &lt;em&gt;executing&lt;/em&gt; an MPI test program. Consider the special considerations for the behavior of &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; during cross compilation. Moreover, running an MPI program can cause additional issues, like a firewall notification on some systems. You should only enable these detections if you absolutely need the information.</source>
          <target state="translated">&lt;strong&gt;중요 공지 :&lt;/strong&gt; MPI 테스트 프로그램 을 &lt;em&gt;실행&lt;/em&gt; 하지 않으면 다음 점검을 수행 할 수 없습니다 . 크로스 컴파일 중에 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 의 동작에 대한 특별한 고려 사항을 고려하십시오 . 또한 MPI 프로그램을 실행하면 일부 시스템의 방화벽 알림과 같은 추가 문제가 발생할 수 있습니다. 정보가 절대적으로 필요한 경우에만 이러한 탐지를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="4a818bc048326525affa4e1169156ccec96bb29a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Install Step Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단계 옵션 설치 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5e12bf370b7d5f775bd45e03dcc642cd9c5265b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Main functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;주요 기능&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd64765b48f63bf6115a55e95d72c7c4e5c625d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Miscellaneous Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;기타 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74fb2068140fd27081bc83361ad04f1bd0febfc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This example is valid for single-configuration generators and will not work for multi-configuration generators (e.g. Visual Studio).</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 예제는 단일 구성 생성기에 유효하며 다중 구성 생성기 (예 : Visual Studio)에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff76f4f57e8625fb2ce1800d976ea86f4c5eae8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: direct usage of this target by consumers should not be necessary.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 소비자가이 대상을 직접 사용할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a593a2daf7191012ee98aa04637ca971e9aea3d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output Logging Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;출력 로깅 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63d49148799ea33545c06b4d52a8559cc7a8854b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Symbol clash in a MEX target&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;MEX 대상의 심볼 충돌&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5555f61b85029f487fa7f68c39bc92c5ccefcff3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Target Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;대상 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16cbdabde852eb45b52b88f4d50735a27266b8df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Terminal Access Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;터미널 액세스 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5c11b7e16cbdf41aedebba63706f58c3bc09d78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test Step Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;테스트 단계 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba00d73f719b0b22594530d74d2f609319103410" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tests using GPU resources&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;GPU 리소스를 사용한 테스트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d4796b4fac5faa5f9a4e71e73bf2b4a87669ac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update/Patch Step Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;업데이트 / 패치 단계 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4178a376aa8c6018b79adacbdbadec5dd2c3ca3" translate="yes" xml:space="preserve">
          <source>================= Example Usage:</source>
          <target state="translated">================= 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="a915d7e2eeb1d2f666c5f5c0e89b90fea3a9c392" translate="yes" xml:space="preserve">
          <source>================================== Example Usage:</source>
          <target state="translated">================================== 사용 예 :</target>
        </trans-unit>
        <trans-unit id="0fa5520ed492d8ac5e7b8d6493403e201b903bdb" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;find module&amp;rdquo; is a &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt; file to be loaded by the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command when invoked for &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">A &quot;찾기 모듈&quot;는 것입니다 &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt; 에 의해로드 할 파일 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 에 대해 호출 할 때 명령 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d25b76435bed6cfd72c04e017e6a6db13a4eb3f" translate="yes" xml:space="preserve">
          <source>A ;-list of extra arguments to be passed to executable. The entire list must be passed as a single argument. Enclose it in quotes, or pass &lt;code&gt;&quot;&quot;&lt;/code&gt; for no arguments.</source>
          <target state="translated">실행 파일로 전달 될 추가 인수의;-목록 전체 목록은 단일 인수로 전달되어야합니다. 따옴표로 묶거나 인수없이 &lt;code&gt;&quot;&quot;&lt;/code&gt; 를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="ef3d0ce1de272b287601ddf10547127746d6c2c4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of &lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt; that will be added to the include locations of &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;; -list&lt;/a&gt; 의 &lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt; 받는 추가 될의 위치를 포함하는 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebc65010115c2ad0c05b791cdfcb7b7f9950bafa" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of &lt;code&gt;&amp;lt;lib_name&amp;gt;&lt;/code&gt; that will be added to the include locations of &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;; -list&lt;/a&gt; 의 &lt;code&gt;&amp;lt;lib_name&amp;gt;&lt;/code&gt; 받는 추가 될의 위치를 포함하는 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18644562d1a6e35474e3fae9730fe0561c0f44d7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of compiler definitions of the form &lt;code&gt;-DFOO&lt;/code&gt; or &lt;code&gt;-DFOO=bar&lt;/code&gt;. A definition for the name specified by &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; will also be added automatically.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;; -list&lt;/a&gt; 형식의 컴파일러 정의 &lt;code&gt;-DFOO&lt;/code&gt; 또는 &lt;code&gt;-DFOO=bar&lt;/code&gt; . &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; 로 지정된 이름에 대한 정의 도 자동으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e55e1d361bb2e46c009d96ef09b9beeb6daad38e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of files or directories that will be removed as a part of the global &lt;code&gt;clean&lt;/code&gt; target. It can be used to specify files and directories that are generated as part of building the target or that are directly associated with the target in some way (e.g. created as a result of running the target).</source>
          <target state="translated">전역 &lt;code&gt;clean&lt;/code&gt; 대상 의 일부로 제거 될 파일 또는 디렉토리 의 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-목록&lt;/a&gt; . 대상 작성의 일부로 생성되거나 대상과 직접 연관되는 파일 및 디렉토리를 지정하는 데 사용할 수 있습니다 (예 : 대상 실행의 결과로 작성 됨).</target>
        </trans-unit>
        <trans-unit id="3d79dc481a877e86491f89543576f11f415d8f4b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of files or directories that will be removed as a part of the global &lt;code&gt;clean&lt;/code&gt; target. It is useful for specifying generated files or directories that are used by multiple targets or by CMake itself, or that are generated in ways which cannot be captured as outputs or byproducts of custom commands.</source>
          <target state="translated">전역 &lt;code&gt;clean&lt;/code&gt; 대상 의 일부로 제거 될 파일 또는 디렉토리 의 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-목록&lt;/a&gt; . 여러 대상 또는 CMake 자체에서 사용하거나 사용자 정의 명령의 출력 또는 부산물로 캡처 할 수없는 방식으로 생성 된 생성 된 파일 또는 디렉토리를 지정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ac8e0880f2b5ac29d867e79ff35382c785402bd5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of files that will be removed as a part of the &lt;code&gt;make clean&lt;/code&gt; target.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 의 일환으로 제거됩니다 파일의 &lt;code&gt;make clean&lt;/code&gt; 대상입니다.</target>
        </trans-unit>
        <trans-unit id="b62125df1a09b6be4b8fe2a1fd5bebee1cfc5a43" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of header search paths to pass to the compiler. These will be the only header search paths used by &lt;code&gt;try_compile()&lt;/code&gt;, i.e. the contents of the &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property will be ignored.</source>
          <target state="translated">컴파일러에 전달할 헤더 검색 경로 의 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-목록 &lt;/a&gt;이는 &lt;code&gt;try_compile()&lt;/code&gt; 의해 사용되는 유일한 헤더 검색 경로가됩니다 . 즉 &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 디렉토리 특성 의 내용은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e44d17546574d23afc40be9dcc1ace2941c91d6f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of header search paths to pass to the compiler. These will be the only header search paths used by &lt;code&gt;try_run()&lt;/code&gt;, i.e. the contents of the &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property will be ignored.</source>
          <target state="translated">컴파일러에 전달할 헤더 검색 경로 의 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-목록 &lt;/a&gt;이는 &lt;code&gt;try_run()&lt;/code&gt; 의해 사용되는 유일한 헤더 검색 경로가됩니다 . 즉 &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 디렉토리 특성 의 내용은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7dc511e22f4ea779da961f4d2c5e15ae3050458d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of libraries to add to the link command. These can be the name of system libraries or they can be &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; (see &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; for further details).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 라이브러리는 링크 명령에 추가 할 수 있습니다. 이들은 시스템 라이브러리의 이름이거나 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 대상&lt;/a&gt; 일 수 있습니다 (자세한 내용은 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="06a909b711809e65dcd437d7c867e8f9d8b828e3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of libraries to add to the link command. These can be the name of system libraries or they can be &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; (see &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-2-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; for further details).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 라이브러리는 링크 명령에 추가 할 수 있습니다. 이들은 시스템 라이브러리의 이름이거나 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 대상&lt;/a&gt; 일 수 있습니다 (자세한 내용은 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-2-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="8de68b8931be6cc7e6dadf244afb155f153c65d5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of libraries to add to the link command. These can be the name of system libraries or they can be &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; (see &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-2-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; for further details).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 라이브러리는 링크 명령에 추가 할 수 있습니다. 이들은 시스템 라이브러리의 이름이거나 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 대상&lt;/a&gt; 일 수 있습니다 (자세한 내용은 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-2-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="83c40d1dfbd6dcccf4056930c5758f1e21daff68" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of options to add to the link command (see &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; for further details).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 옵션의 링크 명령에 추가 (볼 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 자세한 내용).</target>
        </trans-unit>
        <trans-unit id="d4565ca5a2b458bcc73da84d162218b69bcc0749" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of options to add to the link command (see &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; for further details).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 옵션의 링크 명령에 추가 (볼 &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 자세한 내용).</target>
        </trans-unit>
        <trans-unit id="fdb7da87101cff12784268f369eecbce98ac92d0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of options to add to the link command (see &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-1-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; for further details).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 옵션의 링크 명령에 추가 (참조 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-1-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 자세한 내용).</target>
        </trans-unit>
        <trans-unit id="efdc6149e4da66138b991c86e6bb3673ac29830a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of paths needed in addition to the normal include directories.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 일반 이외에 필요한 경로의 디렉토리를 포함한다.</target>
        </trans-unit>
        <trans-unit id="a5a0aa27ec92123c3c4f238b27184af2b7f1cad4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; list of macro names used by &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; to determine if a C++ file needs to be processed by &lt;code&gt;moc&lt;/code&gt;.</source>
          <target state="translated">C ++ 파일을 &lt;code&gt;moc&lt;/code&gt; 가 처리 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 판별하기 위해 AUTOMOC 에서 사용하는 매크로 이름 의 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된 목록&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d137d0cd9eb5c629f5dcea6b14d0e1a64bab482e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of absolute paths to the object files on disk for an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported&lt;/a&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;object library&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 &lt;/a&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;오브젝트 라이브러리의&lt;/a&gt; 디스크에있는 오브젝트 파일에 대한 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된&lt;/a&gt; 절대 경로 목록 .</target>
        </trans-unit>
        <trans-unit id="313f54ede59c78f87ae2eefd981f641e2013ee9c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; specifying runtime path (&lt;code&gt;RPATH&lt;/code&gt;) entries to add to binaries linked in the build tree (for platforms that support it). The entries will &lt;em&gt;not&lt;/em&gt; be used for binaries in the install tree. See also the &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">빌드 트리에 링크 된 바이너리에 추가 할 런타임 경로 ( &lt;code&gt;RPATH&lt;/code&gt; ) 항목을 지정 하는 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된 목록&lt;/a&gt; 입니다 (이를 지원하는 플랫폼의 경우). 설치 트리의 바이너리에는 이 항목이 사용 &lt;em&gt;되지 않습니다&lt;/em&gt; . &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 대상 등록 정보 도 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="139ee328ae83f2d4661a6b3fb0d182de548471f3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#&lt;/code&gt; immediately followed by a &lt;a href=&quot;#grammar-token-bracket-open&quot;&gt;&lt;code&gt;bracket_open&lt;/code&gt;&lt;/a&gt; forms a &lt;em&gt;bracket comment&lt;/em&gt; consisting of the entire bracket enclosure:</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 바로 뒤에 &lt;a href=&quot;#grammar-token-bracket-open&quot;&gt; &lt;code&gt;bracket_open&lt;/code&gt; 는&lt;/a&gt; 폼 &lt;em&gt;브라켓 주석&lt;/em&gt; 전체 브래킷 인클로저 구성을 :</target>
        </trans-unit>
        <trans-unit id="6d723a345e321566a8af5cd2df4f5df9bc6677bf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#&lt;/code&gt; immediately followed by a &lt;a href=&quot;#grammar-token-bracket_open&quot;&gt;&lt;code&gt;bracket_open&lt;/code&gt;&lt;/a&gt; forms a &lt;em&gt;bracket comment&lt;/em&gt; consisting of the entire bracket enclosure:</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 바로 뒤에 &lt;a href=&quot;#grammar-token-bracket_open&quot;&gt; &lt;code&gt;bracket_open&lt;/code&gt; 는&lt;/a&gt; 폼 &lt;em&gt;브라켓 주석&lt;/em&gt; 전체 브래킷 인클로저 구성을 :</target>
        </trans-unit>
        <trans-unit id="f0186a7228979534890019a26302cbb1bdb46ac0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#&lt;/code&gt; not immediately followed by a &lt;a href=&quot;#grammar-token-bracket-open&quot;&gt;&lt;code&gt;bracket_open&lt;/code&gt;&lt;/a&gt; forms a &lt;em&gt;line comment&lt;/em&gt; that runs until the end of the line:</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 바로 다음에하지 &lt;a href=&quot;#grammar-token-bracket-open&quot;&gt; &lt;code&gt;bracket_open&lt;/code&gt; 는&lt;/a&gt; 폼 &lt;em&gt;줄 주석을&lt;/em&gt; 그 줄의 끝까지 실행 :</target>
        </trans-unit>
        <trans-unit id="0f96cc8c0ec3ae8f27bab6169a3253eeeaa86de4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#&lt;/code&gt; not immediately followed by a &lt;a href=&quot;#grammar-token-bracket_open&quot;&gt;&lt;code&gt;bracket_open&lt;/code&gt;&lt;/a&gt; forms a &lt;em&gt;line comment&lt;/em&gt; that runs until the end of the line:</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 바로 다음에하지 &lt;a href=&quot;#grammar-token-bracket_open&quot;&gt; &lt;code&gt;bracket_open&lt;/code&gt; 는&lt;/a&gt; 폼 &lt;em&gt;줄 주석을&lt;/em&gt; 그 줄의 끝까지 실행 :</target>
        </trans-unit>
        <trans-unit id="24b0895b592f5cba654bd4bd9e47d317f09b9e10" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under registry key:</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 레지스트리 키 아래에 나타날 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="cb458ebe62c39fed815f841ec68e13aee6d54ba7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DEPENDS&lt;/code&gt; relationship is set up to ensure &lt;code&gt;setupUsers&lt;/code&gt; happens after &lt;code&gt;createDB&lt;/code&gt;, both of which are setup tests for the &lt;code&gt;DB&lt;/code&gt; fixture and will therefore be executed before the &lt;code&gt;dbOnly&lt;/code&gt; and &lt;code&gt;dbWithFoo&lt;/code&gt; tests automatically.</source>
          <target state="translated">&lt;code&gt;DEPENDS&lt;/code&gt; 관계가되도록 설정되어 &lt;code&gt;setupUsers&lt;/code&gt; 후 발생 &lt;code&gt;createDB&lt;/code&gt; 의 설정 시험이다 둘, &lt;code&gt;DB&lt;/code&gt; 의 정체를 따라서 전에 실행될 &lt;code&gt;dbOnly&lt;/code&gt; 및 &lt;code&gt;dbWithFoo&lt;/code&gt; 은 자동 테스트한다.</target>
        </trans-unit>
        <trans-unit id="c4c449a7e91b2370f659e1deb1a4b733e2e299c5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DISABLED&lt;/code&gt; test does not participate in test fixture dependency resolution. If a &lt;code&gt;DISABLED&lt;/code&gt; test has fixture requirements defined in its &lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-0-prop_test:FIXTURES_REQUIRED&quot;&gt;&lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt;&lt;/a&gt; property, it will not cause setup or cleanup tests for those fixtures to be added to the test set.</source>
          <target state="translated">&lt;code&gt;DISABLED&lt;/code&gt; 테스트는 테스트 고정 의존성 해석에 참가하지 않습니다. 경우 &lt;code&gt;DISABLED&lt;/code&gt; 테스트가에 정의 된 고정 요구 사항이 &lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-0-prop_test:FIXTURES_REQUIRED&quot;&gt; &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; &lt;/a&gt; 속성을, 그것은 그 설비에 대한 설치 또는 정리 테스트는 테스트 세트에 추가 할 수 없습니다 원인.</target>
        </trans-unit>
        <trans-unit id="d0eaa6cdafe9956708c6d192292f115204ab1a53" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NAMESPACE&lt;/code&gt; with double-colons is specified when exporting the targets for installation. This convention of double-colons gives CMake a hint that the name is an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target when it is used by downstreams with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. This way, CMake can issue a diagnostic if the package providing it has not yet been found.</source>
          <target state="translated">설치 대상을 내보낼 때 이중 콜론이 있는 &lt;code&gt;NAMESPACE&lt;/code&gt; 가 지정됩니다. 이 이중 콜론 규칙은 CMake에 이름이 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령 으로 다운 스트림에서 사용될 때 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 이라는 힌트를 제공합니다 . 이런 식으로 CMake는 패키지를 제공하는 패키지를 아직 찾지 못한 경우 진단을 발행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="851437470a06fdc17164e74eb0a585ced23b6ce5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; variable may be set to specify the preferred way to provide legacy GL interfaces in case multiple choices are available. The value may be one of:</source>
          <target state="translated">&lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; 의 변수는 여러 선택이 가능한 경우 기존 GL 인터페이스를 제공하는 바람직한 방법을 지정하는 설정 될 수있다. 값은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bb27f20d811dfe67f261079854b5890e90082ee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SHARED&lt;/code&gt; library may be marked with the &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property to create an macOS or iOS Framework Bundle. A library with the &lt;code&gt;FRAMEWORK&lt;/code&gt; target property should also set the &lt;a href=&quot;../prop_tgt/framework_version#prop_tgt:FRAMEWORK_VERSION&quot; id=&quot;index-0-prop_tgt:FRAMEWORK_VERSION&quot;&gt;&lt;code&gt;FRAMEWORK_VERSION&lt;/code&gt;&lt;/a&gt; target property. This property is typically set to the value of &amp;ldquo;A&amp;rdquo; by macOS conventions. The &lt;code&gt;MACOSX_FRAMEWORK_IDENTIFIER&lt;/code&gt; sets &lt;code&gt;CFBundleIdentifier&lt;/code&gt; key and it uniquely identifies the bundle.</source>
          <target state="translated">&lt;code&gt;SHARED&lt;/code&gt; 라이브러리가 표시 될 수 있습니다 &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 맥 OS 또는 iOS 프레임 워크 번들을 만들 수있는 대상 속성입니다. 와 라이브러리 &lt;code&gt;FRAMEWORK&lt;/code&gt; target 속성도 설정해야합니다 &lt;a href=&quot;../prop_tgt/framework_version#prop_tgt:FRAMEWORK_VERSION&quot; id=&quot;index-0-prop_tgt:FRAMEWORK_VERSION&quot;&gt; &lt;code&gt;FRAMEWORK_VERSION&lt;/code&gt; 의&lt;/a&gt; 대상 속성을. 이 속성은 일반적으로 macOS 규칙에 따라 &quot;A&quot;값으로 설정됩니다. &lt;code&gt;MACOSX_FRAMEWORK_IDENTIFIER&lt;/code&gt; 는 설정 &lt;code&gt;CFBundleIdentifier&lt;/code&gt; 의 키를 그리고 고유 번들을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="8996f386ab98028e1e50aeb66948d00ae17c4e5b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SHARED&lt;/code&gt; library may be marked with the &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property to create an macOS or iOS Framework Bundle. The &lt;code&gt;MACOSX_FRAMEWORK_IDENTIFIER&lt;/code&gt; sets &lt;code&gt;CFBundleIdentifier&lt;/code&gt; key and it uniquely identifies the bundle.</source>
          <target state="translated">&lt;code&gt;SHARED&lt;/code&gt; 라이브러리가 표시 될 수 있습니다 &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 맥 OS 또는 iOS 프레임 워크 번들을 만들 수있는 대상 속성입니다. &lt;code&gt;MACOSX_FRAMEWORK_IDENTIFIER&lt;/code&gt; 는 설정 &lt;code&gt;CFBundleIdentifier&lt;/code&gt; 의 키를 그리고 고유 번들을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="9e9a0bece6de9f6d72e69294dba68001d0c97d5a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;\&lt;/code&gt; followed by a non-alphanumeric character simply encodes the literal character without interpreting it as syntax. A &lt;code&gt;\t&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, or &lt;code&gt;\n&lt;/code&gt; encodes a tab, carriage return, or newline character, respectively. A &lt;code&gt;\;&lt;/code&gt; outside of any &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt; encodes itself but may be used in an &lt;a href=&quot;#unquoted-argument&quot;&gt;Unquoted Argument&lt;/a&gt; to encode the &lt;code&gt;;&lt;/code&gt; without dividing the argument value on it. A &lt;code&gt;\;&lt;/code&gt; inside &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt; encodes the literal &lt;code&gt;;&lt;/code&gt; character. (See also policy &lt;a href=&quot;../policy/cmp0053#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt;&lt;code&gt;CMP0053&lt;/code&gt;&lt;/a&gt; documentation for historical considerations.)</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt; 는 비 - 영숫자 단순히 문법으로 해석하지 않고 그대로 문자 인코딩 하였다. &lt;code&gt;\t&lt;/code&gt; , &lt;code&gt;\r&lt;/code&gt; 또는 &lt;code&gt;\n&lt;/code&gt; 각각 탭, 캐리지 리턴하거나, 개행 문자를 부호화한다. A &lt;code&gt;\;&lt;/code&gt; &lt;a href=&quot;#variable-references&quot;&gt;변수 참조의&lt;/a&gt; 외부 는 자체적으로 인코딩되지만 인용 &lt;a href=&quot;#unquoted-argument&quot;&gt;되지 않은 인수&lt;/a&gt; 로 사용될 수 있습니다 &lt;code&gt;;&lt;/code&gt; 인수 값을 나누지 않고. A &lt;code&gt;\;&lt;/code&gt; 내부 &lt;a href=&quot;#variable-references&quot;&gt;변수 참조&lt;/a&gt; 는 리터럴을 인코딩합니다 &lt;code&gt;;&lt;/code&gt; 캐릭터. ( &lt;a href=&quot;../policy/cmp0053#policy:CMP0053&quot; id=&quot;index-0-policy:CMP0053&quot;&gt; &lt;code&gt;CMP0053&lt;/code&gt; &lt;/a&gt; 고려 사항 은 정책 CMP0053 문서 도 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="b7bf6ca6c435a5f196af67641e4089214143b762" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;optimized&lt;/code&gt;, or &lt;code&gt;general&lt;/code&gt; keyword immediately followed by another &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;. The item following such a keyword will be used only for the corresponding build configuration. The &lt;code&gt;debug&lt;/code&gt; keyword corresponds to the &lt;code&gt;Debug&lt;/code&gt; configuration (or to configurations named in the &lt;a href=&quot;../prop_gbl/debug_configurations#prop_gbl:DEBUG_CONFIGURATIONS&quot; id=&quot;index-0-prop_gbl:DEBUG_CONFIGURATIONS&quot;&gt;&lt;code&gt;DEBUG_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; global property if it is set). The &lt;code&gt;optimized&lt;/code&gt; keyword corresponds to all other configurations. The &lt;code&gt;general&lt;/code&gt; keyword corresponds to all configurations, and is purely optional. Higher granularity may be achieved for per-configuration rules by creating and linking to &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED library targets&lt;/a&gt;. These keywords are interpreted immediately by this command and therefore have no special meaning when produced by a generator expression.</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;optimized&lt;/code&gt; , 또는 &lt;code&gt;general&lt;/code&gt; 키워드는 바로 다른 다음에 &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; . 이러한 키워드 다음에 나오는 항목은 해당 빌드 구성에만 사용됩니다. &lt;code&gt;debug&lt;/code&gt; 받는 키워드에 대응 &lt;code&gt;Debug&lt;/code&gt; 구성 (또는에 명명 된 구성을 &lt;a href=&quot;../prop_gbl/debug_configurations#prop_gbl:DEBUG_CONFIGURATIONS&quot; id=&quot;index-0-prop_gbl:DEBUG_CONFIGURATIONS&quot;&gt; &lt;code&gt;DEBUG_CONFIGURATIONS&lt;/code&gt; &lt;/a&gt; 이 설정되어있는 경우 전역 속성). &lt;code&gt;optimized&lt;/code&gt; 다른 모든 구성을 키워드에 해당합니다. &lt;code&gt;general&lt;/code&gt; 키워드는 모든 구성에 해당하고, 순전히 선택 사항입니다. &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 라이브러리 대상&lt;/a&gt; 을 작성하고 연결하여 구성 별 규칙에 대해 더 세분화 할 수 있습니다.. 이 키워드는이 명령으로 즉시 해석되므로 생성기 표현식으로 생성 될 때 특별한 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bd2f10d69b3fa44049fd22fe30a3d7ce6f7d5704" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;find_package(Qt[45]...)&lt;/code&gt; call sets the &lt;code&gt;QT/Qt5Core_VERSION_MAJOR/MINOR&lt;/code&gt; variables. If the call is in a different context than the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; call, e.g. in a function, then the version variables might not be available to the &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; enabled target. In that case the version variables can be forwarded from the &lt;code&gt;find_package(Qt[45]&amp;hellip;)&lt;/code&gt; calling context to the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-2-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-2-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; calling context as directory properties. The following Qt5 example demonstrates the procedure.</source>
          <target state="translated">&lt;code&gt;find_package(Qt[45]...)&lt;/code&gt; 호 설정한다 &lt;code&gt;QT/Qt5Core_VERSION_MAJOR/MINOR&lt;/code&gt; 의 변수. 호출이 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 add_library () 호출과 다른 컨텍스트 ( 예 : 함수) 인 경우 버전 변수를 &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 가능 대상에서 사용 하지 못할 수 있습니다 . 이 경우 버전 변수로부터 전달할 수 &lt;code&gt;find_package(Qt[45]&amp;hellip;)&lt;/code&gt; 받는 콘텍스트를 호출 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-2-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-2-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 디렉토리 속성으로 호출 컨텍스트. 다음 Qt5 예제는 절차를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8f42b4f7bd8ead0574d81ce53762f4977fabffed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;find_package(Qt[45]...)&lt;/code&gt; call sets the &lt;code&gt;QT/Qt5Core_VERSION_MAJOR/MINOR&lt;/code&gt; variables. If the call is in a different context than the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; call, e.g. in a function, then the version variables might not be available to the &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; enabled target. In that case the version variables can be forwarded from the &lt;code&gt;find_package(Qt[45]...)&lt;/code&gt; calling context to the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-2-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-2-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; calling context as directory properties. The following Qt5 example demonstrates the procedure.</source>
          <target state="translated">&lt;code&gt;find_package(Qt[45]...)&lt;/code&gt; 호 설정한다 &lt;code&gt;QT/Qt5Core_VERSION_MAJOR/MINOR&lt;/code&gt; 의 변수. 호출이 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 호출과 다른 컨텍스트 ( 예 : 함수)에있는 경우 &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 활성화 대상 에서 버전 변수를 사용할 수 없습니다 . 이 경우 버전 변수는 &lt;code&gt;find_package(Qt[45]...)&lt;/code&gt; 호출 컨텍스트에서 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-2-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-2-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 호출 컨텍스트로 디렉토리 속성 으로 전달 될 수 있습니다 . 다음 Qt5 예제는 절차를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b165a7736909d7a235e740c01b41e22a20e41019" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;pkg-config&lt;/code&gt; module for CMake.</source>
          <target state="translated">&lt;code&gt;pkg-config&lt;/code&gt; CMake에 대한 모듈.</target>
        </trans-unit>
        <trans-unit id="79fa0924f8da0e6cfd3535644afa545938642052" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;query.json&lt;/code&gt; file must contain a JSON object:</source>
          <target state="translated">&lt;code&gt;query.json&lt;/code&gt; 의 파일은 JSON 객체를 포함해야합니다 :</target>
        </trans-unit>
        <trans-unit id="4d839dc31792e5174a6af20aa7b50e140562b88c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;CMake Generator&lt;/em&gt; is responsible for writing the input files for a native build system. Exactly one of the &lt;a href=&quot;#cmake-generators&quot;&gt;CMake Generators&lt;/a&gt; must be selected for a build tree to determine what native build system is to be used. Optionally one of the &lt;a href=&quot;#extra-generators&quot;&gt;Extra Generators&lt;/a&gt; may be selected as a variant of some of the &lt;a href=&quot;#command-line-build-tool-generators&quot;&gt;Command-Line Build Tool Generators&lt;/a&gt; to produce project files for an auxiliary IDE.</source>
          <target state="translated">&lt;em&gt;CMake 생성기는&lt;/em&gt; 기본 빌드 시스템의 입력 파일을 작성하기위한 책임이 있습니다. 사용할 기본 빌드 시스템을 판별하려면 빌드 트리에 대해 &lt;a href=&quot;#cmake-generators&quot;&gt;CMake Generator&lt;/a&gt; 중 하나를 정확하게 선택해야합니다. 선택적으로 &lt;a href=&quot;#extra-generators&quot;&gt;보조 생성기&lt;/a&gt; 중 하나를 보조 IDE 용 프로젝트 파일을 생성하기 위해 일부 &lt;a href=&quot;#command-line-build-tool-generators&quot;&gt;명령 줄 빌드 도구 생성기&lt;/a&gt; 의 변형으로 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0422ef14ad61ded044ef926d172683dbbeac9fa2" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;bracket argument&lt;/em&gt;, inspired by &lt;a href=&quot;http://www.lua.org/&quot;&gt;Lua&lt;/a&gt; long bracket syntax, encloses content between opening and closing &amp;ldquo;brackets&amp;rdquo; of the same length:</source>
          <target state="translated">&lt;em&gt;브래킷 인수&lt;/em&gt; 에 의해 영감을, &lt;a href=&quot;http://www.lua.org/&quot;&gt;루아&lt;/a&gt; 긴 브래킷 구문은, 개방과 같은 길이의 &quot;괄호&quot;닫는간에 콘텐츠를 둘러싸 :</target>
        </trans-unit>
        <trans-unit id="1ed68fe7c496b5df6549f826987024adf525e043" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;buildsystem&lt;/em&gt; describes how to build a project&amp;rsquo;s executables and libraries from its source code using a &lt;em&gt;build tool&lt;/em&gt; to automate the process. For example, a buildsystem may be a &lt;code&gt;Makefile&lt;/code&gt; for use with a command-line &lt;code&gt;make&lt;/code&gt; tool or a project file for an Integrated Development Environment (IDE). In order to avoid maintaining multiple such buildsystems, a project may specify its buildsystem abstractly using files written in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt;&lt;code&gt;CMake language&lt;/code&gt;&lt;/a&gt;. From these files CMake generates a preferred buildsystem locally for each user through a backend called a &lt;em&gt;generator&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;buildsystem는&lt;/em&gt; 사용하여 소스 코드에서 프로젝트의 실행 파일 및 라이브러리를 구축하는 방법에 대해 설명 &lt;em&gt;빌드 도구를&lt;/em&gt; 프로세스를 자동화 할 수 있습니다. 예를 들어, 빌드 시스템은 명령 행 &lt;code&gt;make&lt;/code&gt; 도구 또는 IDE (Integrated Development Environment) 용 프로젝트 파일 과 함께 사용하기 위한 &lt;code&gt;Makefile&lt;/code&gt; 일 수 있습니다 . 이러한 빌드 시스템을 여러 개 유지하지 않기 위해 프로젝트는 &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt; &lt;code&gt;CMake language&lt;/code&gt; &lt;/a&gt; 작성된 파일을 사용하여 빌드 시스템을 추상적으로 지정할 수 있습니다 . 이러한 파일에서 CMake는 &lt;em&gt;generator&lt;/em&gt; 라고하는 백엔드를 통해 각 사용자에 대해 로컬로 기본 빌드 시스템을 생성합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4c1bf262a1eef57bc3deccd3481cd6d0e6fa688" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;cache variable reference&lt;/em&gt; has the form &lt;code&gt;$CACHE{&amp;lt;variable&amp;gt;}&lt;/code&gt;. See &lt;a href=&quot;../variable/cache#variable:CACHE&quot; id=&quot;index-0-variable:CACHE&quot;&gt;&lt;code&gt;CACHE&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;em&gt;캐시 변수 참조&lt;/em&gt; 형식 갖는다 &lt;code&gt;$CACHE{&amp;lt;variable&amp;gt;}&lt;/code&gt; . 자세한 정보는 &lt;a href=&quot;../variable/cache#variable:CACHE&quot; id=&quot;index-0-variable:CACHE&quot;&gt; &lt;code&gt;CACHE&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="61b2173248812a60ee54b599553334e167b8faa0" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;command invocation&lt;/em&gt; is a name followed by paren-enclosed arguments separated by whitespace:</source>
          <target state="translated">&lt;em&gt;명령 호출은&lt;/em&gt; 공백으로 분리 괄호 둘러싸인 인수 뒤에 이름 :</target>
        </trans-unit>
        <trans-unit id="c8406c06fd2a9c0e4e480e9552523478a73d2474" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;library&lt;/em&gt; output artifact of a buildsystem target may be:</source>
          <target state="translated">빌드 시스템 대상 의 &lt;em&gt;라이브러리&lt;/em&gt; 출력 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7815929478e060f2b980a87215001be95bc86f47" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;quoted argument&lt;/em&gt; encloses content between opening and closing double-quote characters:</source>
          <target state="translated">&lt;em&gt;인용 인수는&lt;/em&gt; 열고 닫는 큰 따옴표 문자 사이에 콘텐츠를 둘러싸는 :</target>
        </trans-unit>
        <trans-unit id="2fdbe711071c04cfbeb0988725da5dee49dc0adc" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;runtime&lt;/em&gt; output artifact of a buildsystem target may be:</source>
          <target state="translated">빌드 시스템 대상 의 &lt;em&gt;런타임&lt;/em&gt; 출력 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fb44073816667e9f471c525f5edf751fdcf6ebcf" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;variable reference&lt;/em&gt; has the form &lt;code&gt;${&amp;lt;variable&amp;gt;}&lt;/code&gt; and is evaluated inside a &lt;a href=&quot;#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt; or an &lt;a href=&quot;#unquoted-argument&quot;&gt;Unquoted Argument&lt;/a&gt;. A variable reference is replaced by the value of the variable, or by the empty string if the variable is not set. Variable references can nest and are evaluated from the inside out, e.g. &lt;code&gt;${outer_${inner_variable}_variable}&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;변수 참조&lt;/em&gt; 형식 갖는다 &lt;code&gt;${&amp;lt;variable&amp;gt;}&lt;/code&gt; 및 내측 평가 &lt;a href=&quot;#quoted-argument&quot;&gt;인용 인수&lt;/a&gt; 또는 &lt;a href=&quot;#unquoted-argument&quot;&gt;인용 부호 인수&lt;/a&gt; . 변수 참조는 변수 값으로 대체되거나 변수가 설정되지 않은 경우 빈 문자열로 대체됩니다. 변수 참조는 중첩 될 수 있으며 내부에서 평가됩니다 (예 : &lt;code&gt;${outer_${inner_variable}_variable}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ee84bff4ffe35421d5d51bd269c27b81a47e389" translate="yes" xml:space="preserve">
          <source>A Basic Starting Point (Step 1)</source>
          <target state="translated">기본 시작점 (1 단계)</target>
        </trans-unit>
        <trans-unit id="2c49370fac87e3dcf6118b4b126bd3c9add717dd" translate="yes" xml:space="preserve">
          <source>A CMake Language source file consists of zero or more &lt;a href=&quot;#command-invocations&quot;&gt;Command Invocations&lt;/a&gt; separated by newlines and optionally spaces and &lt;a href=&quot;#comments&quot;&gt;Comments&lt;/a&gt;:</source>
          <target state="translated">CMake Language 소스 파일은 개행과 선택적으로 공백과 &lt;a href=&quot;#comments&quot;&gt;주석&lt;/a&gt; 으로 구분 된 0 개 이상의 &lt;a href=&quot;#command-invocations&quot;&gt;명령 호출&lt;/a&gt; 로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d96d9af3e9c2c7b4aa39b8430c81e4a85826d86" translate="yes" xml:space="preserve">
          <source>A CMake Language source file may be written in 7-bit ASCII text for maximum portability across all supported platforms. Newlines may be encoded as either &lt;code&gt;\n&lt;/code&gt; or &lt;code&gt;\r\n&lt;/code&gt; but will be converted to &lt;code&gt;\n&lt;/code&gt; as input files are read.</source>
          <target state="translated">CMake Language 소스 파일은 지원되는 모든 플랫폼에서 최대한의 이식성을 위해 7 비트 ASCII 텍스트로 작성 될 수 있습니다. 줄 바꾸기는 &lt;code&gt;\n&lt;/code&gt; 또는 &lt;code&gt;\r\n&lt;/code&gt; 으로 인코딩 될 수 있지만 입력 파일을 읽을 때 &lt;code&gt;\n&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc43c5773074fa2436e19f1177894afa68516297" translate="yes" xml:space="preserve">
          <source>A CMake buildsystem which was initially created on the command line can be modified using the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; and vice-versa.</source>
          <target state="translated">명령 줄에서 처음 생성 된 CMake 빌드 시스템은 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 사용하여 수정할 수 있으며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="4186fb14f672dc5e4babf8189642eb92edf88be0" translate="yes" xml:space="preserve">
          <source>A CMake language file or module to be included as the first step of all &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command calls. This is intended for injecting custom code into project builds without modifying their source.</source>
          <target state="translated">모든 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 호출 의 첫 단계로 포함될 CMake 언어 파일 또는 모듈 . 소스를 수정하지 않고 프로젝트 빌드에 사용자 정의 코드를 삽입하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="c3041132449f98c7e4c3d8524b3f8b8c7a3e2b2c" translate="yes" xml:space="preserve">
          <source>A CMake language file or module to be included as the first step of any &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command calls that specify &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;&lt;/code&gt; as the project name. This is intended for injecting custom code into project builds without modifying their source.</source>
          <target state="translated">프로젝트 이름으로 &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;&lt;/code&gt; 을 지정하는 모든 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 호출 의 첫 번째 단계로 포함될 CMake 언어 파일 또는 모듈 입니다. 이는 소스를 수정하지 않고 프로젝트 빌드에 커스텀 코드를 삽입하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f5948af202beeaf81aa24354a5526534aa1f19a1" translate="yes" xml:space="preserve">
          <source>A CMake language file or module to be included as the last step of all &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command calls. This is intended for injecting custom code into project builds without modifying their source.</source>
          <target state="translated">모든 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 호출 의 마지막 단계로 포함될 CMake 언어 파일 또는 모듈 . 소스를 수정하지 않고 프로젝트 빌드에 사용자 정의 코드를 삽입하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="906ee9734c52f34d84706706d3e764e293496c86" translate="yes" xml:space="preserve">
          <source>A CMake language file or module to be included as the last step of any &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command calls that specify &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;&lt;/code&gt; as the project name. This is intended for injecting custom code into project builds without modifying their source.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;&lt;/code&gt; 을 프로젝트 이름으로 지정 하는 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 호출 의 마지막 단계로 포함 할 CMake 언어 파일 또는 모듈 . 소스를 수정하지 않고 프로젝트 빌드에 사용자 정의 코드를 삽입하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="fcde9cd25bbc8a087c4f24d9374b236bf13ca24b" translate="yes" xml:space="preserve">
          <source>A CMake target may not link to both Qt 4 and Qt 5. A diagnostic is issued if this is attempted or results from transitive target dependency evaluation.</source>
          <target state="translated">CMake 대상이 Qt 4 및 Qt 5에 모두 연결되지 않을 수 있습니다.이 작업이 시도되거나 전이 대상 종속성 평가 결과 인 경우 진단이 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="4d097659434554c0a665ddeafe3fb0c9d7a2927b" translate="yes" xml:space="preserve">
          <source>A CMake-based buildsystem is organized as a set of high-level logical targets. Each target corresponds to an executable or library, or is a custom target containing custom commands. Dependencies between the targets are expressed in the buildsystem to determine the build order and the rules for regeneration in response to change.</source>
          <target state="translated">CMake 기반 빌드 시스템은 일련의 고급 논리 대상으로 구성됩니다. 각 대상은 실행 파일 또는 라이브러리에 해당하거나 사용자 지정 명령이 포함 된 사용자 지정 대상입니다. 대상 간의 종속성은 빌드 시스템에서 표현되어 빌드 순서와 변경에 대한 응답으로 재생 규칙을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="78975b9332aeabb61137c2d7716e1c4bb9dc226d" translate="yes" xml:space="preserve">
          <source>A FindFoo.cmake module will typically be loaded by the command:</source>
          <target state="translated">FindFoo.cmake 모듈은 일반적으로 다음 명령으로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="f84e84135e625a9ab84ce6a8cbb9e4b781f2d94f" translate="yes" xml:space="preserve">
          <source>A JSON array containing zero or more requests. Each request is a JSON object with members:</source>
          <target state="translated">요청이 0 개 이상 포함 된 JSON 배열입니다. 각 요청은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d133b9b97e915b309432bbaadd8a6223126f288e" translate="yes" xml:space="preserve">
          <source>A JSON array containing zero or more supported file-api requests. Each request is a JSON object with members:</source>
          <target state="translated">지원되지 않는 파일 -api 요청이 포함 된 JSON 배열입니다. 각 요청은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="5f80acb9ea0dff876f50256a3aa53ed8984a7a90" translate="yes" xml:space="preserve">
          <source>A JSON array listing CMake language files referenced by backtrace nodes. Each entry is a string specifying the path to a file, represented with forward slashes. If the file is inside the top-level source directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">역 추적 노드에서 참조하는 CMake 언어 파일을 나열하는 JSON 배열입니다. 각 항목은 파일 경로를 지정하는 문자열이며 슬래시로 표시됩니다. 파일이 최상위 소스 디렉토리 안에 있으면 경로는 해당 디렉토리를 기준으로 지정됩니다. 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="799aad0c6d8049cc3987e8186501338f8d6cb099" translate="yes" xml:space="preserve">
          <source>A JSON array listing all versions of all &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; generated as part of the reply. Each array entry is a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt;.</source>
          <target state="translated">응답의 일부로 생성 된 모든 &lt;a href=&quot;#object-kinds&quot;&gt;객체 종류&lt;/a&gt; 의 모든 버전을 나열하는 JSON 배열 입니다. 각 배열 항목은 &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 응답 파일 참조&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a7f2bd8ee514106f3ccf0378c6d3f7c972b8f75a" translate="yes" xml:space="preserve">
          <source>A JSON array listing command names referenced by backtrace nodes. Each entry is a string specifying a command name.</source>
          <target state="translated">역 추적 노드에서 참조하는 명령 이름을 나열하는 JSON 배열입니다. 각 항목은 명령 이름을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="de81a98a2b843da910dec665f984518e21b0b134" translate="yes" xml:space="preserve">
          <source>A JSON array listing information about each test. Each entry is a JSON object with members:</source>
          <target state="translated">각 테스트에 대한 정보를 나열하는 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1175a8ac885fe5d33d16460ead4939026060e13d" translate="yes" xml:space="preserve">
          <source>A JSON array listing nodes in the backtrace graph. Each entry is a JSON object with members:</source>
          <target state="translated">역 추적 그래프에 노드를 나열하는 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c68eb07edfb46a1b9d09b759f98efaf3cfa0356d" translate="yes" xml:space="preserve">
          <source>A JSON array listing the sources belonging to the group. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;sources&lt;/code&gt; array for the target.</source>
          <target state="translated">그룹에 속하는 소스를 나열하는 JSON 배열입니다. 각 항목은 대상 의 주 &lt;code&gt;sources&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="dad7a93d00ddcba65e4033196e50e6c8eb9cbb2e" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to available build configurations. On single-configuration generators there is one entry for the value of the &lt;a href=&quot;../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; variable. For multi-configuration generators there is an entry for each configuration listed in the &lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt; variable. Each entry is a JSON object containing members:</source>
          <target state="translated">사용 가능한 빌드 구성에 해당하는 항목의 JSON 배열입니다. 단일 구성 생성기에는 &lt;a href=&quot;../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; &lt;/a&gt; 변수 값에 대한 항목이 하나 있습니다. 다중 구성 생성기의 경우 &lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt; &lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt; &lt;/a&gt; 변수에 나열된 각 구성에 대한 항목이 있습니다. 각 항목은 멤버를 포함하는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a16f078b7f368aa368828a245672aed21a073c7e" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to build system directories that are part of the project. The first entry corresponds to the top-level directory of the project. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;directories&lt;/code&gt; array.</source>
          <target state="translated">프로젝트의 일부인 빌드 시스템 디렉토리에 해당하는 항목의 JSON 배열입니다. 첫 번째 항목은 프로젝트의 최상위 디렉토리에 해당합니다. 각 항목은 주 &lt;code&gt;directories&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 색인 입니다.</target>
        </trans-unit>
        <trans-unit id="0262c437257a9f36c6844e6a93e5dbb595e5f2e3" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to the build system targets. Such targets are created by calls to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, excluding imported targets and interface libraries (which do not generate any build rules). Each entry is a JSON object containing members:</source>
          <target state="translated">빌드 시스템 대상에 해당하는 항목의 JSON 배열입니다. 이러한 목표에 대한 호출에 의해 생성되는 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; 수입 목표 및 (모든 빌드 규칙을 생성하지 않습니다) 인터페이스 라이브러리 제외. 각 항목은 멤버를 포함하는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="95c2614b2850ab8519e4b800c25d03203505ca56" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to the target&amp;rsquo;s source files. Each entry is a JSON object with members:</source>
          <target state="translated">대상의 소스 파일에 해당하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="03138fa9d3b451d8851eb958102a96d395234a28" translate="yes" xml:space="preserve">
          <source>A JSON array of entries corresponding to the top-level project and sub-projects defined in the build system. Each (sub-)project corresponds to a source directory whose &lt;code&gt;CMakeLists.txt&lt;/code&gt; file calls the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command with a project name different from its parent directory. The first entry corresponds to the top-level project.</source>
          <target state="translated">빌드 시스템에 정의 된 최상위 프로젝트 및 하위 프로젝트에 해당하는 항목으로 구성된 JSON 배열입니다. 각 (하위) 프로젝트는 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 이 상위 디렉토리와 다른 프로젝트 이름으로 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령을 호출 하는 소스 디렉토리에 해당합니다 . 첫 번째 항목은 최상위 프로젝트에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="1b35aad6db3614367d3ea11a806ac852e90d6f6d" translate="yes" xml:space="preserve">
          <source>A JSON array of entries each corresponding to a build system directory whose source directory contains a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. The first entry corresponds to the top-level directory. Each entry is a JSON object containing members:</source>
          <target state="translated">소스 디렉토리에 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일이 포함 된 빌드 시스템 디렉토리에 각각 해당하는 항목의 JSON 배열입니다 . 첫 번째 항목은 최상위 디렉토리에 해당합니다. 각 항목은 멤버를 포함하는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="887ff6003e8a053a25a706b83af28472779ed093" translate="yes" xml:space="preserve">
          <source>A JSON array of entries specifying an install destination path. Each entry is a JSON object with members:</source>
          <target state="translated">설치 대상 경로를 지정하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="5be49f53a2edfd3549871349f89b6609b95c37bb" translate="yes" xml:space="preserve">
          <source>A JSON array of entries specifying associated &lt;a href=&quot;cmake-properties.7#cache-entry-properties&quot;&gt;cache entry properties&lt;/a&gt;. Each entry is a JSON object containing members:</source>
          <target state="translated">관련 &lt;a href=&quot;cmake-properties.7#cache-entry-properties&quot;&gt;캐시 항목 속성을&lt;/a&gt; 지정하는 항목의 JSON 배열입니다 . 각 항목은 멤버를 포함하는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="0c4567bf945a49dc0cec2ef6171acfad8e3a7a13" translate="yes" xml:space="preserve">
          <source>A JSON array of resource sets present on the system. Currently, this array is restricted to being of size 1.</source>
          <target state="translated">시스템에있는 리소스 세트의 JSON 배열입니다. 현재이 배열은 크기 1로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="d5718b637c4fdc22dafde922834fd892d56dd3f4" translate="yes" xml:space="preserve">
          <source>A JSON array whose elements are each a JSON object containing &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; members specifying non-negative integer version components.</source>
          <target state="translated">음수가 아닌 정수 버전 구성 요소를 지정 하는 &lt;code&gt;major&lt;/code&gt; 구성원 과 &lt;code&gt;minor&lt;/code&gt; 구성원을 포함하는 각 JSON 요소 인 요소 인 JSON 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="c714a967d0a02f9134b6134665763b0d48938a9e" translate="yes" xml:space="preserve">
          <source>A JSON array whose entries are each a JSON object specifying a cache entry. The members of each entry are:</source>
          <target state="translated">캐시 항목을 지정하는 항목이 각각 JSON 객체 인 JSON 배열입니다. 각 항목의 구성원은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="615c0ec1a007f0ed1a5006f05bfb058da996aafc" translate="yes" xml:space="preserve">
          <source>A JSON array whose entries are each a JSON object specifying an input file used by CMake when configuring and generating the build system. The members of each entry are:</source>
          <target state="translated">빌드 시스템을 구성 및 생성 할 때 CMake에서 사용하는 입력 파일을 지정하는 항목이 각각 JSON 객체 인 JSON 배열입니다. 각 항목의 구성원은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e61654ec02d8552b01b52b5eebed6682589272f8" translate="yes" xml:space="preserve">
          <source>A JSON object containing information about the instance of CMake that generated the reply. It contains members:</source>
          <target state="translated">응답을 생성 한 CMake 인스턴스에 대한 정보가 포함 된 JSON 객체입니다. 회원이 포함되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5a40f1812c8dfd6f06aa1cd0d299146f5b95d18d" translate="yes" xml:space="preserve">
          <source>A JSON object containing members:</source>
          <target state="translated">멤버를 포함하는 JSON 객체 :</target>
        </trans-unit>
        <trans-unit id="b01dbfce70621777ffd753eaecba4ede02101763" translate="yes" xml:space="preserve">
          <source>A JSON object describing the CMake generator used for the build. It has members:</source>
          <target state="translated">빌드에 사용 된 CMake 생성기를 설명하는 JSON 객체입니다. 회원이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a4075e78142db9ade481f90e642d6382d0267225" translate="yes" xml:space="preserve">
          <source>A JSON object describing the graph of backtraces whose nodes are referenced from &lt;code&gt;backtrace&lt;/code&gt; members elsewhere. The members are:</source>
          <target state="translated">다른 곳 에서 &lt;code&gt;backtrace&lt;/code&gt; 멤버 에서 노드를 참조하는 역 추적 그래프를 설명하는 JSON 객체 입니다. 회원은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="e3286a58246c6458a3872056dc466a59b5689c29" translate="yes" xml:space="preserve">
          <source>A JSON object mirroring the content of the &lt;code&gt;query/&lt;/code&gt; directory that CMake loaded to produce the reply. The members are of the form</source>
          <target state="translated">CMake가 응답을 생성하기 위해로드 한 &lt;code&gt;query/&lt;/code&gt; 디렉토리 의 컨텐츠를 미러링하는 JSON 오브젝트 입니다. 회원은 형태입니다</target>
        </trans-unit>
        <trans-unit id="3c0a2011c07ac32ff17d5f3cdfee5e6600786228" translate="yes" xml:space="preserve">
          <source>A JSON object specifying paths to things that come with CMake. It has members for &lt;code&gt;cmake&lt;/code&gt;, &lt;code&gt;ctest&lt;/code&gt;, and &lt;code&gt;cpack&lt;/code&gt; whose values are JSON strings specifying the absolute path to each tool, represented with forward slashes. It also has a &lt;code&gt;root&lt;/code&gt; member for the absolute path to the directory containing CMake resources like the &lt;code&gt;Modules/&lt;/code&gt; directory (see &lt;a href=&quot;../variable/cmake_root#variable:CMAKE_ROOT&quot; id=&quot;index-0-variable:CMAKE_ROOT&quot;&gt;&lt;code&gt;CMAKE_ROOT&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">CMake와 함께 제공되는 경로를 지정하는 JSON 객체입니다. 이는 보유 부재 용 &lt;code&gt;cmake&lt;/code&gt; , &lt;code&gt;ctest&lt;/code&gt; 및 &lt;code&gt;cpack&lt;/code&gt; 값 슬래시 표현 각 도구의 절대 경로를 지정 JSON 문자열됩니다. 또한 &lt;code&gt;Modules/&lt;/code&gt; 디렉토리 와 같은 CMake 자원을 포함하는 디렉토리의 절대 경로에 대한 &lt;code&gt;root&lt;/code&gt; 멤버가 있습니다 ( &lt;a href=&quot;../variable/cmake_root#variable:CMAKE_ROOT&quot; id=&quot;index-0-variable:CMAKE_ROOT&quot;&gt; &lt;code&gt;CMAKE_ROOT&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f88e131a61519126abedcaa97be39520b0b28315" translate="yes" xml:space="preserve">
          <source>A JSON object specifying the installation prefix. It has one member:</source>
          <target state="translated">설치 접두사를 지정하는 JSON 객체입니다. 멤버가 하나 있습니다.</target>
        </trans-unit>
        <trans-unit id="91300b5382f222dc1ed1f8977a0dc36707617342" translate="yes" xml:space="preserve">
          <source>A JSON object specifying the version components. Its members are</source>
          <target state="translated">버전 구성 요소를 지정하는 JSON 오브젝트입니다. 회원은</target>
        </trans-unit>
        <trans-unit id="8ccf41fbc5bc8e69585d5f594ac103dc3950ffd6" translate="yes" xml:space="preserve">
          <source>A JSON object specifying the version of CMake with members:</source>
          <target state="translated">멤버가있는 CMake 버전을 지정하는 JSON 오브젝트 :</target>
        </trans-unit>
        <trans-unit id="cc94a44a2771335702e785e4da3101a427728392" translate="yes" xml:space="preserve">
          <source>A JSON object with members &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; specifying integer version components of the object kind.</source>
          <target state="translated">오브젝트 종류의 정수 버전 구성 요소를 지정하는 &lt;code&gt;major&lt;/code&gt; 및 &lt;code&gt;minor&lt;/code&gt; 멤버를 가진 JSON 오브젝트</target>
        </trans-unit>
        <trans-unit id="a94bdf4a432eef041d6afeb1e282c54c5de63b23" translate="yes" xml:space="preserve">
          <source>A JSON object with version information. Keys are:</source>
          <target state="translated">버전 정보가 포함 된 JSON 객체입니다. 키는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3952209f147938f6adf835f109c662471ae34406" translate="yes" xml:space="preserve">
          <source>A JSON string specifying a path relative to the codemodel file to another JSON file containing a &lt;a href=&quot;#codemodel-version-2-target-object&quot;&gt;&amp;ldquo;codemodel&amp;rdquo; version 2 &amp;ldquo;target&amp;rdquo; object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#codemodel-version-2-target-object&quot;&gt;&quot;codemodel&quot;버전 2 &quot;target&quot;오브젝트를&lt;/a&gt; 포함하는 다른 JSON 파일에 대한 codemodel 파일 관련 경로를 지정하는 JSON 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="b18f62bc29f4de7a668668823a6d33b8b909955c" translate="yes" xml:space="preserve">
          <source>A JSON string specifying a path relative to the reply index file to another JSON file containing the object.</source>
          <target state="translated">객체를 포함하는 다른 JSON 파일에 대한 응답 색인 파일과 관련된 경로를 지정하는 JSON 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="1766b36208a4491869118c405e4c1db18293f472" translate="yes" xml:space="preserve">
          <source>A Matlab scripts can be added to the set of tests using the &lt;a href=&quot;#command:matlab_add_unit_test&quot; id=&quot;index-0-command:matlab_add_unit_test&quot;&gt;&lt;code&gt;matlab_add_unit_test()&lt;/code&gt;&lt;/a&gt;. By default, the Matlab unit test framework will be used (&amp;gt;= 2013a) to run this script, but regular &lt;code&gt;.m&lt;/code&gt; files returning an exit code can be used as well (0 indicating a success).</source>
          <target state="translated">&lt;a href=&quot;#command:matlab_add_unit_test&quot; id=&quot;index-0-command:matlab_add_unit_test&quot;&gt; &lt;code&gt;matlab_add_unit_test()&lt;/code&gt; &lt;/a&gt; 사용하여 테스트 세트에 Matlab 스크립트를 추가 할 수 있습니다 . 기본적으로 Matlab 단위 테스트 프레임 워크가이 스크립트를 실행하는 데 사용되지만 (&amp;gt; = 2013a) 종료 코드를 반환하는 일반 &lt;code&gt;.m&lt;/code&gt; 파일도 사용할 수 있습니다 (0은 성공을 나타냄).</target>
        </trans-unit>
        <trans-unit id="4cd3375d3d6e6bcf5e202e5aaa652883d9e0bfe9" translate="yes" xml:space="preserve">
          <source>A Sample Find Module</source>
          <target state="translated">샘플 찾기 모듈</target>
        </trans-unit>
        <trans-unit id="cf3054d8072cc6c0d152e78f5401574851e3136b" translate="yes" xml:space="preserve">
          <source>A Windows 10 Universal Application targets both Windows Store and Windows Phone. Specify the &lt;a href=&quot;../variable/cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable to be &lt;code&gt;10.0&lt;/code&gt; to build with the latest available Windows 10 SDK. Specify a more specific version (e.g. &lt;code&gt;10.0.10240.0&lt;/code&gt; for RTM) to build with the corresponding SDK.</source>
          <target state="translated">Windows 10 Universal Application은 Windows Store와 Windows Phone을 모두 대상으로합니다. 사용 가능한 최신 Windows 10 SDK로 빌드 하려면 &lt;a href=&quot;../variable/cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt; 변수를 &lt;code&gt;10.0&lt;/code&gt; 으로 지정하십시오 . 해당 SDK로 빌드 할보다 구체적인 버전 (예 : RTM의 경우 &lt;code&gt;10.0.10240.0&lt;/code&gt; )을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="dfdcd4b7e25c1e643c2e619cc88afb58ab8efdcd" translate="yes" xml:space="preserve">
          <source>A Windows command-line is parsed using the same syntax the runtime library uses to construct argv at startup. It separates arguments by whitespace that is not double-quoted. Backslashes are literal unless they precede double-quotes. See the MSDN article &lt;a href=&quot;https://msdn.microsoft.com/library/a1y7w461.aspx&quot;&gt;Parsing C Command-Line Arguments&lt;/a&gt; for details.</source>
          <target state="translated">Windows 명령 행은 런타임 라이브러리가 시작시 argv를 구성하는 데 사용하는 것과 동일한 구문을 사용하여 구문 분석됩니다. 큰 따옴표가 아닌 공백으로 인수를 구분합니다. 백 슬래시는 큰 따옴표 앞에 있지 않으면 리터럴입니다. 자세한 내용은 MSDN 문서 &lt;a href=&quot;https://msdn.microsoft.com/library/a1y7w461.aspx&quot;&gt;구문 분석 C 명령 줄 인수&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="922832d6bd6b6977784a7bceeedd1ee9e49c8e65" translate="yes" xml:space="preserve">
          <source>A bool that is set if the cmake build is from a dirty tree.</source>
          <target state="translated">cmake 빌드가 더러운 나무에서 나온 경우 설정되는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="d31c43352414dab539154190c0e9e1dc10170c63" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the version was built from a version controlled source tree with local modifications.</source>
          <target state="translated">버전이 로컬로 수정 된 버전 제어 소스 트리에서 빌드되었는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="134c24296ca40b389895e5f270fd6c37f524dfcb" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether or not the CUDA Toolkit was found.</source>
          <target state="translated">CUDA 툴킷을 찾았는지 여부를 지정하는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="43353a7b2145010e6a5f25677f765c18cb725076" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether the generator supports multiple output configurations.</source>
          <target state="translated">생성기가 다중 출력 구성을 지원하는지 여부를 지정하는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="6dd7f078ea7da3c6dd39c45f987f0d02a336306a" translate="yes" xml:space="preserve">
          <source>A branding image that will be displayed inside the installer (used by GUI installers).</source>
          <target state="translated">설치 프로그램 안에 표시 될 브랜딩 이미지 (GUI 설치 프로그램에서 사용).</target>
        </trans-unit>
        <trans-unit id="ba19bc649a6c97d646a7a33e1efbedb47c0b713b" translate="yes" xml:space="preserve">
          <source>A call to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt;&lt;/a&gt; may update this property on &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was not created in the same directory as the call then &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; will add a suffix of the form &lt;code&gt;::@&amp;lt;directory-id&amp;gt;&lt;/code&gt; to each entry, where the &lt;code&gt;::@&lt;/code&gt; is a separator and the &lt;code&gt;&amp;lt;directory-id&amp;gt;&lt;/code&gt; is unspecified. This tells the generators that the named libraries must be looked up in the scope of the caller rather than in the scope in which the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was created. Valid directory ids are stripped on export by the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">를 호출 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt; &lt;/a&gt; 에 등록이 업데이트 될 수 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; . &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 이 호출과 동일한 디렉토리에 작성되지 않은 경우 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;::@&amp;lt;directory-id&amp;gt;&lt;/code&gt; 형식의 접미 부를 각 항목에 추가합니다. 여기서 &lt;code&gt;::@&lt;/code&gt; 은 구분 기호이고 &lt;code&gt;&amp;lt;directory-id&amp;gt;&lt;/code&gt; 가 지정되지 않았습니다. 이를 통해 생성자에게 명명 된 라이브러리를 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 이 작성된 범위가 아닌 호출자의 범위에서 찾아야한다고 알립니다 . &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령으로 내보낼 때 유효한 디렉토리 ID가 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="2ac7ed2f504e15918e3a1158a50b7cd649581ece" translate="yes" xml:space="preserve">
          <source>A call to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt;&lt;/a&gt; may update this property on &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was not created in the same directory as the call then &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; will wrap each entry with the form &lt;code&gt;::@(directory-id);...;::@&lt;/code&gt;, where the &lt;code&gt;::@&lt;/code&gt; is literal and the &lt;code&gt;(directory-id)&lt;/code&gt; is unspecified. This tells the generators that the named libraries must be looked up in the scope of the caller rather than in the scope in which the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; was created. Valid directory ids are stripped on export by the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">를 호출 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries(&amp;lt;target&amp;gt; ...)&lt;/code&gt; &lt;/a&gt; 에 등록이 업데이트 될 수 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; . &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 이 호출과 동일한 디렉토리에 생성되지 않은 경우 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 는 각 항목을 &lt;code&gt;::@(directory-id);...;::@&lt;/code&gt; 형식으로 래핑합니다 . 여기서 &lt;code&gt;::@&lt;/code&gt; 은 리터럴이고 &lt;code&gt;(directory-id)&lt;/code&gt; 지정되지 않습니다. 이것은 생성자에게 명명 된 라이브러리가 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 이 생성 된 범위가 아닌 호출자의 범위에서 조회되어야 함을 알려줍니다 . &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령에 의해 내보내기시 유효한 디렉토리 ID가 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9589f0a707feb9e987c40893c7cdaadac411b31" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;find_package(PythonInterp ${V})&lt;/code&gt; for python version &lt;code&gt;V&lt;/code&gt; may find a &lt;code&gt;python&lt;/code&gt; executable with no version suffix. In this case no attempt is made to avoid python executables from other versions. Use &lt;a href=&quot;findpython3#module:FindPython3&quot; id=&quot;index-1-module:FindPython3&quot;&gt;&lt;code&gt;FindPython3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;findpython2#module:FindPython2&quot; id=&quot;index-1-module:FindPython2&quot;&gt;&lt;code&gt;FindPython2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;findpython#module:FindPython&quot; id=&quot;index-1-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Python 버전 &lt;code&gt;V&lt;/code&gt; 의 &lt;code&gt;find_package(PythonInterp ${V})&lt;/code&gt; 를 호출하면 버전 접미사가없는 &lt;code&gt;python&lt;/code&gt; 실행 파일을 찾을 수 있습니다 . 이 경우 다른 버전의 Python 실행 파일을 피하려는 시도가 없습니다. 사용 &lt;a href=&quot;findpython3#module:FindPython3&quot; id=&quot;index-1-module:FindPython3&quot;&gt; &lt;code&gt;FindPython3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;findpython2#module:FindPython2&quot; id=&quot;index-1-module:FindPython2&quot;&gt; &lt;code&gt;FindPython2&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;findpython#module:FindPython&quot; id=&quot;index-1-module:FindPython&quot;&gt; &lt;code&gt;FindPython&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="a7ced58bffd200876853fd0e93ed2a4280c7c779" translate="yes" xml:space="preserve">
          <source>A child process command line.</source>
          <target state="translated">자식 프로세스 명령 줄</target>
        </trans-unit>
        <trans-unit id="31b28d650cc9e59e1a96b4862dbab2b08a56b0e4" translate="yes" xml:space="preserve">
          <source>A cleanup test can have multiple fixtures listed in its &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; property. It will execute only once for the whole CTest run, not once for each fixture. A fixture can also have more than one cleanup test defined. If there are multiple cleanup tests for a fixture, projects can control their order with the usual &lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt;&lt;code&gt;DEPENDS&lt;/code&gt;&lt;/a&gt; test property if necessary.</source>
          <target state="translated">클린업 테스트는 &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; 프로퍼티 에 여러 개의 조명기를 나열 할 수 있습니다 . 각 조명기마다 한 번이 아니라 전체 CTest 실행에 대해 한 번만 실행됩니다. 픽스처에는 둘 이상의 클린업 테스트가 정의되어있을 수도 있습니다. 조명기에 대해 여러 가지 클린업 테스트가있는 경우 프로젝트는 필요한 경우 일반적인 &lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt; &lt;code&gt;DEPENDS&lt;/code&gt; &lt;/a&gt; 테스트 속성을 사용하여 순서를 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a9e6df354b4f589ed777e31fa803a706c0c0a50" translate="yes" xml:space="preserve">
          <source>A cleanup test is allowed to require other fixtures, but not any fixture listed in its &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; property. For example:</source>
          <target state="translated">클린업 테스트는 &lt;code&gt;FIXTURES_CLEANUP&lt;/code&gt; 프로퍼티에 나열된 픽스쳐가 아닌 다른 픽스쳐를 요구할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="06bf7bd5c307947f08e59df1cb1cdd4aeb7b7ffc" translate="yes" xml:space="preserve">
          <source>A cmake file that will be included when ctest is run.</source>
          <target state="translated">ctest가 실행될 때 포함될 cmake 파일.</target>
        </trans-unit>
        <trans-unit id="aa5481b6b6121ef08e4abb0a101a437a27ef0410" translate="yes" xml:space="preserve">
          <source>A codemodel &amp;ldquo;target&amp;rdquo; object is referenced by a &lt;a href=&quot;#codemodel-version-2&quot;&gt;&amp;ldquo;codemodel&amp;rdquo; version 2&lt;/a&gt; object&amp;rsquo;s &lt;code&gt;targets&lt;/code&gt; array. Each &amp;ldquo;target&amp;rdquo; object is a JSON object with members:</source>
          <target state="translated">코드 모델&amp;ldquo;target&amp;rdquo;객체는 &lt;a href=&quot;#codemodel-version-2&quot;&gt;&amp;ldquo;codemodel&amp;rdquo;버전 2&lt;/a&gt; 객체의 &lt;code&gt;targets&lt;/code&gt; 배열에 의해 참조됩니다 . 각&amp;ldquo;대상&amp;rdquo;객체는 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a62d4083c8b74e1d58d874b187d48b5613da05c3" translate="yes" xml:space="preserve">
          <source>A collection of CMake utility functions useful for dealing with &lt;code&gt;.app&lt;/code&gt; bundles on the Mac and bundle-like directories on any OS.</source>
          <target state="translated">Mac의 &lt;code&gt;.app&lt;/code&gt; 번들 및 모든 OS의 번들 유사 디렉토리 를 처리하는 데 유용한 CMake 유틸리티 기능 모음입니다 .</target>
        </trans-unit>
        <trans-unit id="c10ad90cfe3a984b19cb64fac5093713668df736" translate="yes" xml:space="preserve">
          <source>A collection of CMake utility functions useful for dealing with CSharp targets for Visual Studio generators from version 2010 and later.</source>
          <target state="translated">버전 2010 이상의 Visual Studio 생성 기용 CSharp 대상을 처리하는 데 유용한 CMake 유틸리티 함수 모음입니다.</target>
        </trans-unit>
        <trans-unit id="463a018691a4c7ff95e2ceab74a83cebc7e8a329" translate="yes" xml:space="preserve">
          <source>A collection of CMake utility functions useful for deploying Qt4 executables.</source>
          <target state="translated">Qt4 실행 파일을 배포하는 데 유용한 CMake 유틸리티 기능 모음입니다.</target>
        </trans-unit>
        <trans-unit id="7f6a6acb1d64297dc5f1c916d8a1e5274f193677" translate="yes" xml:space="preserve">
          <source>A comment starts with a &lt;code&gt;#&lt;/code&gt; character that is not inside a &lt;a href=&quot;#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt;, &lt;a href=&quot;#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt;, or escaped with &lt;code&gt;\&lt;/code&gt; as part of an &lt;a href=&quot;#unquoted-argument&quot;&gt;Unquoted Argument&lt;/a&gt;. There are two types of comments: a &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt; and a &lt;a href=&quot;#line-comment&quot;&gt;Line Comment&lt;/a&gt;.</source>
          <target state="translated">주석은 &lt;a href=&quot;#bracket-argument&quot;&gt;대괄호 인수&lt;/a&gt; , &lt;a href=&quot;#quoted-argument&quot;&gt;인용 인수&lt;/a&gt; 내부에 있지 않거나 인용 &lt;a href=&quot;#unquoted-argument&quot;&gt;부호없는 인수의&lt;/a&gt; 일부로 &lt;code&gt;\&lt;/code&gt; 로 이스케이프 된 &lt;code&gt;#&lt;/code&gt; 문자로 시작합니다 . 주석에는 &lt;a href=&quot;#bracket-comment&quot;&gt;브라켓 주석&lt;/a&gt; 과 &lt;a href=&quot;#line-comment&quot;&gt;라인 주석&lt;/a&gt; 두 가지 유형이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc3e1dda5b60458d7f58ad6739c2c1b72d963b9d" translate="yes" xml:space="preserve">
          <source>A common pattern in CMake output is a message indicating the start of some sort of check, followed by another message reporting the result of that check. For example:</source>
          <target state="translated">CMake 출력의 일반적인 패턴은 일종의 검사 시작을 나타내는 메시지와 그 검사 결과를보고하는 또 다른 메시지입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1ff5635e01732c8e5e393e6b4d62064a1d2442e3" translate="yes" xml:space="preserve">
          <source>A common usage of &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; is to conditionally add compiler flags, such as those for language levels or warnings. A nice pattern is to associate this information to an &lt;code&gt;INTERFACE&lt;/code&gt; target allowing this information to propagate. Let&amp;rsquo;s start by constructing an &lt;code&gt;INTERFACE&lt;/code&gt; target and specifying the required C++ standard level of &lt;code&gt;11&lt;/code&gt; instead of using &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-2-variable:CMAKE_CXX_STANDARD&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 의 일반적인 용도는 언어 수준 또는 경고와 같은 컴파일러 플래그를 조건부로 추가하는 것입니다. 좋은 패턴은 이 정보를 전파 할 수 있도록이 정보를 &lt;code&gt;INTERFACE&lt;/code&gt; 대상에 연결하는 것입니다. &lt;code&gt;INTERFACE&lt;/code&gt; 타겟 을 생성하고 &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-2-variable:CMAKE_CXX_STANDARD&quot;&gt; &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; &lt;/a&gt; 를 사용하는 대신 필요한 C ++ 표준 레벨 &lt;code&gt;11&lt;/code&gt; 을 지정하여 시작 하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="fa420aab599c1cda432c73d0ab0ea5fafec44bf4" translate="yes" xml:space="preserve">
          <source>A common use case for this feature is for tests that require the use of a GPU. Multiple tests can simultaneously allocate memory from a GPU, but if too many tests try to do this at once, some of them will fail to allocate, resulting in a failed test, even though the test would have succeeded if it had the memory it needed. By using the resource allocation feature, each test can specify how much memory it requires from a GPU, allowing CTest to schedule tests in a way that running several of these tests at once does not exhaust the GPU&amp;rsquo;s memory pool.</source>
          <target state="translated">이 기능의 일반적인 사용 사례는 GPU를 사용해야하는 테스트입니다. 여러 테스트가 GPU에서 동시에 메모리를 할당 할 수 있지만, 한 번에 너무 많은 테스트를 시도하면 일부 테스트가 할당에 실패하여 필요한 메모리가 있다면 테스트가 성공 했더라도 테스트에 실패하게됩니다. . 리소스 할당 기능을 사용하면 각 테스트에서 GPU에서 필요한 메모리 양을 지정할 수 있으므로 CTest는 이러한 테스트 중 여러 개를 한 번에 실행해도 GPU의 메모리 풀이 소모되지 않는 방식으로 테스트를 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="233e66011604fe0d72ea136ea4dd358763cab83a" translate="yes" xml:space="preserve">
          <source>A complete example which makes a simple use of a third party library might look like:</source>
          <target state="translated">타사 라이브러리를 간단하게 사용하는 완전한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6593312973a1821006c024e201f42399626badc1" translate="yes" xml:space="preserve">
          <source>A config-file package consists of a &lt;a href=&quot;#package-configuration-file&quot;&gt;Package Configuration File&lt;/a&gt; and optionally a &lt;a href=&quot;#package-version-file&quot;&gt;Package Version File&lt;/a&gt; provided with the project distribution.</source>
          <target state="translated">구성 파일 패키지는 &lt;a href=&quot;#package-configuration-file&quot;&gt;패키지 구성 파일&lt;/a&gt; 과 선택적으로 프로젝트 배포와 함께 제공 되는 &lt;a href=&quot;#package-version-file&quot;&gt;패키지 버전 파일로&lt;/a&gt; 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e1d1f539c7c3ea8539bb60d5342ef84c8a62eae3" translate="yes" xml:space="preserve">
          <source>A config-file package is a set of files provided by upstreams for downstreams to use. CMake searches in a number of locations for package configuration files, as described in the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; documentation. The most simple way for a CMake user to tell &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; to search in a non-standard prefix for a package is to set the &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; cache variable.</source>
          <target state="translated">구성 파일 패키지는 다운 스트림에서 사용하기 위해 업스트림에서 제공하는 파일 세트입니다. CMake는 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-4-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 문서에 설명 된대로 여러 위치에서 패키지 구성 파일을 검색 합니다. CMake 사용자가 &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 에게 비표준 접두사에서 패키지를 검색 하도록 지시하는 가장 간단한 방법 은 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 캐시 변수 를 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="3afa983505cc0499e017d0a39def7703bc6c5119" translate="yes" xml:space="preserve">
          <source>A consuming project linking to the target exported from upstream automatically uses appropriate options when &lt;code&gt;uic&lt;/code&gt; is run by &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;, as a result of linking with the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target:</source>
          <target state="translated">때 상류에서 내 보낸 대상에 연결하는이 소요되는 프로젝트는 자동으로 해당 옵션을 사용 &lt;code&gt;uic&lt;/code&gt; 운영하는 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 와 연결의 결과로 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 :</target>
        </trans-unit>
        <trans-unit id="ab0b6cffca4fa28746ce11fc9ce534a2f796eafd" translate="yes" xml:space="preserve">
          <source>A copy of the &lt;code&gt;query.json&lt;/code&gt; file &lt;code&gt;client&lt;/code&gt; member, if it exists.</source>
          <target state="translated">&lt;code&gt;query.json&lt;/code&gt; 파일 &lt;code&gt;client&lt;/code&gt; 멤버 의 사본입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="6c8b193cc15ccabfe1e44b3b478fe8fcc84d8e34" translate="yes" xml:space="preserve">
          <source>A copy of the &lt;code&gt;query.json&lt;/code&gt; file &lt;code&gt;requests&lt;/code&gt; member, if it exists.</source>
          <target state="translated">&lt;code&gt;query.json&lt;/code&gt; 파일 의 사본은 멤버 (있는 경우)를 &lt;code&gt;requests&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f58af76fd9d24c31f6e422863f76ace6918076be" translate="yes" xml:space="preserve">
          <source>A deprecated &lt;code&gt;NO_DEPENDS&lt;/code&gt; option may be specified immediately after the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; and before the first step. If the &lt;code&gt;NO_DEPENDS&lt;/code&gt; option is specified, the step target will not depend on the dependencies of the external project (i.e. on any dependencies of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; custom target created by &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-8-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;). This is usually safe for the &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt; steps, since they do not typically require that the dependencies are updated and built. Using &lt;code&gt;NO_DEPENDS&lt;/code&gt; for any of the other pre-defined steps, however, may break parallel builds. Only use &lt;code&gt;NO_DEPENDS&lt;/code&gt; where it is certain that the named steps genuinely do not have dependencies. For custom steps, consider whether or not the custom commands require the dependencies to be configured, built and installed.</source>
          <target state="translated">더 이상 사용되지 않는 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 옵션은 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 바로 뒤 와 첫 번째 단계 이전에 지정할 수 있습니다 . 는 IF &lt;code&gt;NO_DEPENDS&lt;/code&gt; 의 옵션을 지정, 단계 목표 (의 종속성에 즉, 외부 프로젝트의 의존성에 의존하지 않습니다 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 에 의해 만들어진 사용자 지정 대상 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-8-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; ). 일반적으로 종속성을 업데이트하고 빌드 할 필요가 없기 때문에 일반적으로 &lt;code&gt;download&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; 및 &lt;code&gt;patch&lt;/code&gt; 단계에 안전합니다 . 그러나 사전 정의 된 다른 단계에 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 를 사용하면 병렬 빌드가 중단 될 수 있습니다. &lt;code&gt;NO_DEPENDS&lt;/code&gt; 만 사용명명 된 단계에 진정으로 종속성이없는 것이 확실합니다. 사용자 정의 단계의 경우 사용자 정의 명령이 종속성을 구성, 빌드 및 설치해야하는지 여부를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="fea60e916717245cc1621b1deb4910d04a0a311a" translate="yes" xml:space="preserve">
          <source>A description of the project, used in places such as the introduction screen of CPack-generated Windows installers. If not set, the value of this variable is populated from the file named by &lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CPack 생성 Windows 설치 프로그램의 소개 화면과 같은 장소에서 사용되는 프로젝트에 대한 설명입니다. 설정되지 않은 경우이 변수의 값은 &lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION_FILE&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt; 로&lt;/a&gt; 이름이 지정된 파일에서 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="9a9522c096778f8ae879ba5e7a894419b2c1f8d6" translate="yes" xml:space="preserve">
          <source>A download method can be omitted if the &lt;code&gt;SOURCE_DIR&lt;/code&gt; option is used to point to an existing non-empty directory. Otherwise, one of the download methods below must be specified (multiple download methods should not be given) or a custom &lt;code&gt;DOWNLOAD_COMMAND&lt;/code&gt; provided.</source>
          <target state="translated">&lt;code&gt;SOURCE_DIR&lt;/code&gt; 옵션을 사용하여 비어 있지 않은 기존 디렉토리를 가리키는 경우 다운로드 방법을 생략 할 수 있습니다 . 그렇지 않으면 아래의 다운로드 방법 중 하나를 지정하거나 (다중 다운로드 방법을 지정하지 않아야 함) 사용자 정의 &lt;code&gt;DOWNLOAD_COMMAND&lt;/code&gt; 를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="7162e719b4b52e7e92dc2d650065278b8738cfdf" translate="yes" xml:space="preserve">
          <source>A few key points should be noted in the above:</source>
          <target state="translated">위의 몇 가지 핵심 사항에 유의해야합니다.</target>
        </trans-unit>
        <trans-unit id="52e944908f64176672f2ede652425883ca16d0fe" translate="yes" xml:space="preserve">
          <source>A find module is a file with a set of rules for finding the required pieces of a dependency, primarily header files and libraries. Typically, a find module is needed when the upstream is not built with CMake, or is not CMake-aware enough to otherwise provide a package configuration file. Unlike a package configuration file, it is not shipped with upstream, but is used by downstream to find the files by guessing locations of files with platform-specific hints.</source>
          <target state="translated">찾기 모듈은 기본적으로 헤더 파일 및 라이브러리의 필수 종속성을 찾는 규칙 세트가 포함 된 파일입니다. 일반적으로 업스트림이 CMake로 구축되지 않았거나 패키지 구성 파일을 제공 할만큼 CMake를 인식하지 못하는 경우 찾기 모듈이 필요합니다. 패키지 구성 파일과 달리 업스트림과 함께 제공되지는 않지만 다운 스트림에서 플랫폼 별 힌트가있는 파일의 위치를 ​​추측하여 파일을 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="96ed877eeb17768ef9fdb7292981ddcbe04207a8" translate="yes" xml:space="preserve">
          <source>A function opens a new scope: see &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set(var PARENT_SCOPE)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">함수는 새로운 범위를 엽니 다 : 자세한 내용은 &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set(var PARENT_SCOPE)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c1c730431a784c7d86d9c611589ff3b32b036cc4" translate="yes" xml:space="preserve">
          <source>A header file &lt;code&gt;my_class.hpp&lt;/code&gt; uses a custom macro &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt; which is defined in an other header &lt;code&gt;macros.hpp&lt;/code&gt;. We want the &lt;code&gt;moc&lt;/code&gt; file of &lt;code&gt;my_class.hpp&lt;/code&gt; to depend on the file name argument of &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt;:</source>
          <target state="translated">헤더 파일 &lt;code&gt;my_class.hpp&lt;/code&gt; 는 다른 헤더 &lt;code&gt;macros.hpp&lt;/code&gt; 에 정의 된 사용자 정의 매크로 &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt; 를 사용합니다 . &lt;code&gt;my_class.hpp&lt;/code&gt; 의 &lt;code&gt;moc&lt;/code&gt; 파일 이 &lt;code&gt;JSON_FILE_MACRO&lt;/code&gt; 의 파일 이름 인수에 의존하기를 원합니다 .</target>
        </trans-unit>
        <trans-unit id="4273a54198b5fd1bcd4930a917f669861d68e9b2" translate="yes" xml:space="preserve">
          <source>A library target with &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; enabled will be built as a framework on macOS. By default its &lt;code&gt;Info.plist&lt;/code&gt; file is created by configuring a template called &lt;code&gt;MacOSXFrameworkInfo.plist.in&lt;/code&gt; located in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;. This property specifies an alternative template file name which may be a full path.</source>
          <target state="translated">&lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; 가&lt;/a&gt; 활성화 된 라이브러리 대상 은 macOS에서 프레임 워크로 빌드됩니다. 기본적으로 자사 &lt;code&gt;Info.plist&lt;/code&gt; 파일이라고 템플릿 구성하여 만든 &lt;code&gt;MacOSXFrameworkInfo.plist.in&lt;/code&gt; 에 위치한 &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; 을&lt;/a&gt; . 이 특성은 전체 경로 일 수있는 대체 템플리트 파일 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="551c348bb08c8acc0c90ac81e5854f14d95c09cd" translate="yes" xml:space="preserve">
          <source>A library with multiple configurations may be imported with a single target:</source>
          <target state="translated">여러 구성이있는 라이브러리를 단일 대상으로 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a253968820778e8bdaa77028e267d1e708d32fcb" translate="yes" xml:space="preserve">
          <source>A line of text. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a text field or a drop-down selection if the &lt;a href=&quot;../prop_cache/strings#prop_cache:STRINGS&quot; id=&quot;index-0-prop_cache:STRINGS&quot;&gt;&lt;code&gt;STRINGS&lt;/code&gt;&lt;/a&gt; cache entry property is set.</source>
          <target state="translated">한 줄의 텍스트. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../prop_cache/strings#prop_cache:STRINGS&quot; id=&quot;index-0-prop_cache:STRINGS&quot;&gt; &lt;code&gt;STRINGS&lt;/code&gt; &lt;/a&gt; 캐시 항목 특성이 설정된 경우 텍스트 필드 또는 드롭 다운 선택 사항을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="84aaa68d487b185bce9d78ecbd98c2ed37345342" translate="yes" xml:space="preserve">
          <source>A line of text. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; does not show internal entries. They may be used to store variables persistently across runs. Use of this type implies &lt;code&gt;FORCE&lt;/code&gt;.</source>
          <target state="translated">한 줄의 텍스트. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-4-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 에는 내부 항목이 표시되지 않습니다. 여러 실행에서 변수를 지속적으로 저장하는 데 사용될 수 있습니다. 이 유형의 사용은 &lt;code&gt;FORCE&lt;/code&gt; 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="32707b1b056479f83a286e7958689b65cac599fd" translate="yes" xml:space="preserve">
          <source>A list available generators. Each generator is a JSON object with the following keys:</source>
          <target state="translated">사용 가능한 생성기 목록. 각 생성기는 다음 키가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1a23a1d92c772f354cda75dc2aec2d828cad0b48" translate="yes" xml:space="preserve">
          <source>A list in cmake is a &lt;code&gt;;&lt;/code&gt; separated group of strings. To create a list the set command can be used. For example, &lt;code&gt;set(var a b c d e)&lt;/code&gt; creates a list with &lt;code&gt;a;b;c;d;e&lt;/code&gt;, and &lt;code&gt;set(var &quot;a b c d e&quot;)&lt;/code&gt; creates a string or a list with one item in it. (Note macro arguments are not variables, and therefore cannot be used in LIST commands.)</source>
          <target state="translated">cmake의 목록은 &lt;code&gt;;&lt;/code&gt; 분리 된 문자열 그룹. 목록을 작성하기 위해 set 명령을 사용할 수 있습니다. 예를 들어, &lt;code&gt;set(var a b c d e)&lt;/code&gt; A의리스트 작성 &lt;code&gt;a;b;c;d;e&lt;/code&gt; 와 &lt;code&gt;set(var &quot;a b c d e&quot;)&lt;/code&gt; 문자열 또는 하나 개의 항목리스트를 생성한다. (매크로 인수는 변수가 아니므로 LIST 명령에서 사용할 수 없습니다.)</target>
        </trans-unit>
        <trans-unit id="5f8b2a2136330282661c08b25ba5fafa8333f03e" translate="yes" xml:space="preserve">
          <source>A list of cmake files that will be included when ctest is run.</source>
          <target state="translated">ctest가 실행될 때 포함될 cmake 파일 목록.</target>
        </trans-unit>
        <trans-unit id="c2a9a8867533acecd87203503b4406022103a062" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the end of the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt; 명령 의 끝에서 실행할 명령 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="2f7c0f2754db0ddff7af012e748c5f067827c457" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the end of the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령 의 끝에서 실행할 명령 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="e3e7169d292851d7dd454c89a731ee15bc6348ea" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the start of the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt; 명령 시작시 실행할 명령 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c15f0c0f1f4f0bdb374900135e83fb52bfe73df1" translate="yes" xml:space="preserve">
          <source>A list of commands to run at the start of the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령 시작시 실행할 명령 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="691db5b7232b5e14c2c24a27a71b6f544bcd810e" translate="yes" xml:space="preserve">
          <source>A list of elements is represented as a string by concatenating the elements separated by &lt;code&gt;;&lt;/code&gt;. For example, the &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-3-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command stores multiple values into the destination variable as a list:</source>
          <target state="translated">요소 목록은 &lt;code&gt;;&lt;/code&gt; 로 구분 된 요소를 연결하여 문자열로 표시됩니다 . . 예를 들어 &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-3-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt; 명령은 여러 값을 대상 변수에 목록으로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="bd4691aef86e7d68073fb3edc2e9f7b93c5e40f6" translate="yes" xml:space="preserve">
          <source>A list of libraries needed to link with OpenMP code written in &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 로 작성된 OpenMP 코드와 연결하는 데 필요한 라이브러리 목록 .</target>
        </trans-unit>
        <trans-unit id="6c2ea5eefb6ebda4b90624644f9370fcd50aa52b" translate="yes" xml:space="preserve">
          <source>A list of regular expressions for ignoring targets.</source>
          <target state="translated">대상을 무시하기위한 정규식 목록입니다.</target>
        </trans-unit>
        <trans-unit id="70f2d1c61a18cf5e57b3891bf4f25706541d4e81" translate="yes" xml:space="preserve">
          <source>A list of regular expressions for names of targets to exclude from the generated graphs.</source>
          <target state="translated">생성 된 그래프에서 제외 할 대상 이름에 대한 정규식 목록입니다.</target>
        </trans-unit>
        <trans-unit id="92527ebcac2e79743d6d93cb2d660dc44172075a" translate="yes" xml:space="preserve">
          <source>A list of regular expressions to use to exclude tests during the &lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt;&lt;code&gt;ctest_memcheck()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_memcheck#command:ctest_memcheck&quot; id=&quot;index-0-command:ctest_memcheck&quot;&gt; &lt;code&gt;ctest_memcheck()&lt;/code&gt; &lt;/a&gt; 명령 중에 테스트를 제외하는 데 사용할 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="88f6889a48ddadd5ed2b67549310dfa5d0416410" translate="yes" xml:space="preserve">
          <source>A list of regular expressions to use to exclude tests during the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령 중에 테스트를 제외하는 데 사용할 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="8c1d89e50425a6efc443b5601f4f2a34f0a293fe" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to detect error messages in build outputs by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령으로 빌드 출력에서 ​​오류 메시지를 감지하는 데 사용되는 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="8e524ddff4eea7311924d17e4ea4cfbbc0c491ae" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to detect warning messages in build outputs by the &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt; &lt;code&gt;ctest_build()&lt;/code&gt; &lt;/a&gt; 명령으로 빌드 출력에서 ​​경고 메시지를 감지하는 데 사용되는 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c4b73344580ce1477d62cac113a8155f9b71b5ef" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to exclude files by their path from coverage output by the &lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt;&lt;code&gt;ctest_coverage()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt; &lt;code&gt;ctest_coverage()&lt;/code&gt; &lt;/a&gt; 명령 의 적용 범위 출력에서 ​​해당 경로로 파일을 제외하는 데 사용되는 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="f1294af4834cf3c67538e8c6d88aa5f716f80797" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to exclude when detecting error messages in build outputs by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령으로 빌드 출력에서 ​​오류 메시지를 감지 할 때 제외하는 데 사용되는 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="0b985d3e0293d11948a2788e3d84389e7bdd0191" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to exclude when detecting warning messages in build outputs by the &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt; &lt;code&gt;ctest_build()&lt;/code&gt; &lt;/a&gt; 명령으로 빌드 출력에서 ​​경고 메시지를 감지 할 때 제외하는 데 사용되는 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="aa4622a0f0d46b3d9ae6e418a58eec0b62ca0a86" translate="yes" xml:space="preserve">
          <source>A list of regular expressions which will be used to find files which should be covered by the &lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt;&lt;code&gt;ctest_coverage()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_coverage#command:ctest_coverage&quot; id=&quot;index-0-command:ctest_coverage&quot;&gt; &lt;code&gt;ctest_coverage()&lt;/code&gt; &lt;/a&gt; 명령으로 다루어야 할 파일을 찾는 데 사용되는 정규식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="e7b19ec64219bace1bc45f9b2d6054428d3f9f0a" translate="yes" xml:space="preserve">
          <source>A list of source files to search for tests and test fixtures. Alternatively, use &lt;code&gt;AUTO&lt;/code&gt; to specify that &lt;code&gt;exe&lt;/code&gt; is the name of a CMake executable target whose sources should be scanned.</source>
          <target state="translated">테스트 및 테스트 픽스처를 검색 할 소스 파일 목록. 또는 &lt;code&gt;AUTO&lt;/code&gt; 를 사용하여 &lt;code&gt;exe&lt;/code&gt; 가 소스를 스캔해야하는 CMake 실행 가능 대상의 이름 임을 지정 하십시오.</target>
        </trans-unit>
        <trans-unit id="d02fe63e8e916f9081c3c9f6b67816ef70250590" translate="yes" xml:space="preserve">
          <source>A list of strings with all the extra generators compatible with the generator.</source>
          <target state="translated">생성기와 호환되는 모든 추가 생성기가있는 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="fa9e1adeb3952fad63edbe12d4d5a7efe396a0bd" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;&amp;gt;&lt;/code&gt;. Used for example to compare strings that contain a &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">리터럴 &lt;code&gt;&amp;gt;&lt;/code&gt; . 예를 들어 &lt;code&gt;&amp;gt;&lt;/code&gt; 가 포함 된 문자열을 비교하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="61da1a68ce2fbab4bd43605be4596faac6e37a93" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;,&lt;/code&gt;. Used for example to compare strings which contain a &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">리터럴 &lt;code&gt;,&lt;/code&gt; . 예를 들어 &lt;code&gt;,&lt;/code&gt; 을 포함하는 문자열을 비교하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b361ef457389ada6c0f5aca11c1805186911d4a0" translate="yes" xml:space="preserve">
          <source>A literal &lt;code&gt;;&lt;/code&gt;. Used to prevent list expansion on an argument with &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">리터럴 &lt;code&gt;;&lt;/code&gt; . ;를 사용하여 인수에서 목록 확장을 방지하는 데 사용됩니다 &lt;code&gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49b730782384bb6b007f1f667442e74be33ec349" translate="yes" xml:space="preserve">
          <source>A literal dollar sign (&lt;code&gt;$&lt;/code&gt;).</source>
          <target state="translated">리터럴 달러 기호 ( &lt;code&gt;$&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="359af70041a916f553ad572128840b99198606e7" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each client-owned directory holding &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt;. The value is a JSON object mirroring the content of the &lt;code&gt;query/client-&amp;lt;client&amp;gt;/&lt;/code&gt; directory. The members are of the form:</source>
          <target state="translated">이 양식의 구성원은 &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files를&lt;/a&gt; 보유하는 각 클라이언트 소유 디렉토리에 나타납니다 . 값은 &lt;code&gt;query/client-&amp;lt;client&amp;gt;/&lt;/code&gt; 디렉토리 의 컨텐츠를 미러링하는 JSON 오브젝트 입니다. 멤버는 다음과 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="d236ec48dd779318dd734f38342d40458e4754c4" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt; that CMake did not recognize. The value is a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message indicating that the query file is unknown.</source>
          <target state="translated">이 양식의 멤버는 CMake가 인식하지 못한 각 &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless 쿼리 파일&lt;/a&gt; 에 대해 나타납니다 . 값은 쿼리 파일을 알 수 없음을 나타내는 오류 메시지가 포함 된 문자열을 포함 하는 단일 &lt;code&gt;error&lt;/code&gt; 멤버 가있는 JSON 오브젝트입니다 .</target>
        </trans-unit>
        <trans-unit id="bad100f39eb7816d20b944d83f2490378f9ad591" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt; that CMake recognized as a request for object kind &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; with major version &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt;. The value is a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt; to the corresponding reply file for that object kind and version.</source>
          <target state="translated">이 양식의 멤버는 CMake 가 주요 버전이 &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt; 인 오브젝트 종류 &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; 에 대한 요청으로 인식 한 각 &lt;a href=&quot;#v1-client-stateless-query-files&quot;&gt;v1 Client Stateless Query Files&lt;/a&gt; 에 대해 나타납니다 . 값은 해당 오브젝트 종류 및 버전에 해당하는 응답 파일에 대한 &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 응답 파일 참조&lt;/a&gt; 입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
