<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="06cb7cb047966b15cdfe6bd0f9f8c7e463d4c366" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1 Shared Stateless Query Files&lt;/a&gt; that CMake did not recognize. The value is a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message indicating that the query file is unknown.</source>
          <target state="translated">이 양식의 멤버는 CMake가 인식하지 못한 각 &lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1 공유 상태 비 저장 쿼리 파일&lt;/a&gt; 에 대해 나타납니다 . 값은 쿼리 파일을 알 수 없음을 나타내는 오류 메시지가 포함 된 문자열을 포함 하는 단일 &lt;code&gt;error&lt;/code&gt; 멤버 가있는 JSON 오브젝트입니다 .</target>
        </trans-unit>
        <trans-unit id="195ebc52e7c0736c63b0ebcdde4d5648f2bcc784" translate="yes" xml:space="preserve">
          <source>A member of this form appears for each of the &lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1 Shared Stateless Query Files&lt;/a&gt; that CMake recognized as a request for object kind &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; with major version &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt;. The value is a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt; to the corresponding reply file for that object kind and version.</source>
          <target state="translated">이 양식의 멤버는 CMake 가 주요 버전이 &lt;code&gt;&amp;lt;major&amp;gt;&lt;/code&gt; 인 오브젝트 종류 &lt;code&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; 에 대한 요청으로 인식 한 각 &lt;a href=&quot;#v1-shared-stateless-query-files&quot;&gt;v1 공유 Stateless 쿼리 파일&lt;/a&gt; 에 대해 나타납니다 . 값은 해당 오브젝트 종류 및 버전에 해당하는 응답 파일에 대한 &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 응답 파일 참조&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a673e37bae399df2d3504bc56d7847a677a69424" translate="yes" xml:space="preserve">
          <source>A message is triggered when the server processes a request and produces some form of output that should be displayed to the user. A Message has a &amp;ldquo;message&amp;rdquo; with the actual text to display as well as a &amp;ldquo;title&amp;rdquo; with a suggested dialog box title.</source>
          <target state="translated">서버가 요청을 처리하고 사용자에게 표시해야하는 출력 형식을 생성 할 때 메시지가 트리거됩니다. 메시지에는 표시 할 실제 텍스트가 포함 된 &quot;메시지&quot;와 제안 된 대화 상자 제목이있는 &quot;제목&quot;이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b44ff292404883379535548ed835a873e203a8ec" translate="yes" xml:space="preserve">
          <source>A message to be displayed when the target is built.</source>
          <target state="translated">대상이 빌드 될 때 표시 될 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="445058bfe5b5d10140664472dc4b024520d8fa1c" translate="yes" xml:space="preserve">
          <source>A message to display on some generators (such as &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;) when the target is built.</source>
          <target state="translated">대상이 빌드 될 때 일부 생성기 (예 : &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; ) 에 표시 할 메시지 입니다.</target>
        </trans-unit>
        <trans-unit id="d100a07975b278693f56590ba61bd917f05ceabe" translate="yes" xml:space="preserve">
          <source>A minimum required CMake version must be specified.</source>
          <target state="translated">최소 필수 CMake 버전을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="11c7733c8635291007d08c704fc4f635934b1bf1" translate="yes" xml:space="preserve">
          <source>A non-empty false value (e.g. &lt;code&gt;OFF&lt;/code&gt;) disables adding architectures. This is intended to support packagers and rare cases where full control over the passed flags is required.</source>
          <target state="translated">비어 있지 않은 false 값 (예 : &lt;code&gt;OFF&lt;/code&gt; )은 아키텍처 추가를 비활성화합니다. 이는 전달 된 플래그에 대한 완전한 제어가 필요한 패키저 및 드문 경우를 지원하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="803147fa4000efb28b98218e572b25d29dfe8103" translate="yes" xml:space="preserve">
          <source>A non-negative integer specifying the major version component.</source>
          <target state="translated">주 버전 구성 요소를 지정하는 음이 아닌 정수입니다.</target>
        </trans-unit>
        <trans-unit id="67f2646713723d82cbc33c8987b03f3f6ef7f889" translate="yes" xml:space="preserve">
          <source>A non-negative integer specifying the minor version component.</source>
          <target state="translated">부 버전 구성 요소를 지정하는 음이 아닌 정수입니다.</target>
        </trans-unit>
        <trans-unit id="1d7cd05fc7ea5cfe757454ffdf2272a4290b0f0f" translate="yes" xml:space="preserve">
          <source>A number of Doxygen config options accept lists of values, but Doxygen requires them to be separated by whitespace. CMake variables hold lists as a string with items separated by semi-colons, so a conversion needs to be performed. The &lt;code&gt;doxygen_add_docs()&lt;/code&gt; command specifically checks the following Doxygen config options and will convert their associated CMake variable&amp;rsquo;s contents into the required form if set.</source>
          <target state="translated">많은 Doxygen 구성 옵션은 값 목록을 허용하지만 Doxygen은 공백으로 구분해야합니다. CMake 변수는 세미콜론으로 구분 된 항목이 포함 된 문자열로 목록을 보유하므로 변환을 수행해야합니다. &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 검사에게 구체적으로 다음과 같은 Doxygen을의 설정 옵션을 명령하고 필요한 형태로 설정하는 경우에 관련 CMake 변수의 내용을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8ca6895233a19caecb5ac61dbac755391e000100" translate="yes" xml:space="preserve">
          <source>A number of cache variables influence the behavior of all content population performed using details saved from a &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-1-command:fetchcontent_declare&quot;&gt;&lt;code&gt;FetchContent_Declare()&lt;/code&gt;&lt;/a&gt; call:</source>
          <target state="translated">많은 캐시 변수는 &lt;a href=&quot;#command:fetchcontent_declare&quot; id=&quot;index-1-command:fetchcontent_declare&quot;&gt; &lt;code&gt;FetchContent_Declare()&lt;/code&gt; &lt;/a&gt; 호출 에서 저장된 세부 사항을 사용하여 수행 된 모든 컨텐츠 채우기 의 작동에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="5c16b6597fdffd7dfe9c8135e77b59ad0d7a30e8" translate="yes" xml:space="preserve">
          <source>A numeric version string for the system. On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of &lt;code&gt;uname -r&lt;/code&gt;. On other systems this is set to major-minor version numbers.</source>
          <target state="translated">시스템의 숫자 버전 문자열입니다. &lt;code&gt;uname&lt;/code&gt; 을 지원하는 시스템 에서이 변수는 &lt;code&gt;uname -r&lt;/code&gt; 의 출력으로 설정됩니다 . 다른 시스템에서는 메이저 부 버전 번호로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b83888c1ec379d7aa02ce74c9b0acd32639d2724" translate="yes" xml:space="preserve">
          <source>A package-specific list of required components may be listed after the &lt;code&gt;COMPONENTS&lt;/code&gt; option (or after the &lt;code&gt;REQUIRED&lt;/code&gt; option if present). Additional optional components may be listed after &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt;. Available components and their influence on whether a package is considered to be found are defined by the target package.</source>
          <target state="translated">필수 컴포넌트의 패키지 특정 목록은 &lt;code&gt;COMPONENTS&lt;/code&gt; 옵션 뒤에 (또는있는 경우 &lt;code&gt;REQUIRED&lt;/code&gt; 옵션 뒤에) 나열 될 수 있습니다 . 추가 옵션 구성 요소는 &lt;code&gt;OPTIONAL_COMPONENTS&lt;/code&gt; 뒤에 나열 될 수 있습니다 . 사용 가능한 구성 요소 및 패키지를 찾은 것으로 간주되는지 여부에 대한 영향은 대상 패키지에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="23b96a198d82e4c5ef396d0d9cdd8c5895a0022b" translate="yes" xml:space="preserve">
          <source>A particular Qt library may be used by using the corresponding &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 해당 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상을 사용하여 특정 Qt 라이브러리를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63d7664d014641de7b0e330f08be7f1d483c6d4a" translate="yes" xml:space="preserve">
          <source>A path that begins with a generator expression is always left unmodified.</source>
          <target state="translated">생성기 표현식으로 시작하는 경로는 항상 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2f6ee740e943c199a3ab47eec0c4600cb342a9a" translate="yes" xml:space="preserve">
          <source>A policy is a deprecation mechanism and not a reliable feature toggle. A policy should almost never be set to &lt;code&gt;OLD&lt;/code&gt;, except to silence warnings in an otherwise frozen or stable codebase, or temporarily as part of a larger migration path. The &lt;code&gt;OLD&lt;/code&gt; behavior of each policy is undesirable and will be replaced with an error condition in a future release.</source>
          <target state="translated">정책은 더 이상 사용되지 않는 메커니즘이며 신뢰할 수있는 기능 토글이 아닙니다. 고정되거나 안정된 코드베이스에서 경고를 침묵 시키거나 일시적으로 더 큰 마이그레이션 경로의 일부로 경고 를 &lt;code&gt;OLD&lt;/code&gt; 것을 제외하고 는 정책을 거의 OLD 로 설정해서는 안됩니다 . 각 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 바람직하지 않으며 향후 릴리스에서 오류 조건으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="762f46b64c46229bda268ff21dacec81cdf0928f" translate="yes" xml:space="preserve">
          <source>A pool is a named integer property and defines the maximum number of concurrent jobs which can be started by a rule assigned to the pool. The &lt;a href=&quot;#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property is a semicolon-separated list of pairs using the syntax NAME=integer (without a space after the equality sign).</source>
          <target state="translated">풀은 명명 된 정수 속성이며 풀에 할당 된 규칙으로 시작할 수있는 최대 동시 작업 수를 정의합니다. &lt;a href=&quot;#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;JOB_POOLS&lt;/code&gt; 의&lt;/a&gt; 속성 (등호 기호 뒤에 공백없이) 구문 NAME = 정수를 사용하여 쌍 세미콜론으로 분리 된리스트이다.</target>
        </trans-unit>
        <trans-unit id="6d92930e237cee03c36427da44dd27f339f55e51" translate="yes" xml:space="preserve">
          <source>A positive non zero integer value sets the exact thread/process count.</source>
          <target state="translated">0이 아닌 양의 정수 값은 정확한 스레드 / 프로세스 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ed379d91052fee086ac49a82407f66e6db559228" translate="yes" xml:space="preserve">
          <source>A positive result from this check indicates only that the compiler did not issue a diagnostic message when given the flag. Whether the flag has any effect or even a specific one is beyond the scope of this module.</source>
          <target state="translated">이 검사의 긍정적 결과는 컴파일러가 플래그를 제공했을 때 진단 메시지를 발행하지 않았 음을 나타냅니다. 플래그가 영향을 주거나 특정 플래그를 적용하는지 여부는이 모듈의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="fbb66abb9488c6f63b3f800eaef3859cff9517d8" translate="yes" xml:space="preserve">
          <source>A positive result from this check indicates only that the compiler did not issue a diagnostic message when given the link flag. Whether the flag has any effect or even a specific one is beyond the scope of this module.</source>
          <target state="translated">이 검사의 긍정적 인 결과는 링크 플래그가 주어 졌을 때 컴파일러가 진단 메시지를 발행하지 않았 음을 나타냅니다. 플래그가 어떤 영향을 미치는지 특정 영향을 미치는지 여부는이 모듈의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="f472d5a3e09fdb06fd5fbf5f1d91a445737fbe5b" translate="yes" xml:space="preserve">
          <source>A preprocessor test is generated based on the compiler version denoting whether each feature is enabled. A preprocessor macro matching &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_&amp;lt;FEATURE&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;FEATURE&amp;gt;&lt;/code&gt; is the upper-case &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; name, is generated to contain the value &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; depending on whether the compiler in use supports the feature:</source>
          <target state="translated">전 처리기 테스트는 각 기능의 활성화 여부를 나타내는 컴파일러 버전을 기반으로 생성됩니다. &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_&amp;lt;FEATURE&amp;gt;&lt;/code&gt; 와 일치하는 전 처리기 매크로 ( 여기서 &lt;code&gt;&amp;lt;FEATURE&amp;gt;&lt;/code&gt; 는 대문자 &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; 이름 임)는 사용중인 컴파일러가 기능을 지원하는지 여부에 따라 값 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 을 포함하도록 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c619330c424780a4dee4d17f92ef2b9ad3652543" translate="yes" xml:space="preserve">
          <source>A primary use-case for &lt;code&gt;INTERFACE&lt;/code&gt; libraries is header-only libraries.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; 라이브러리 의 기본 사용 사례 는 헤더 전용 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="571e1e6eea024aca009c0b6d28b489ece3df0152" translate="yes" xml:space="preserve">
          <source>A property on a directory that indicates if its targets are excluded from the default build target. If it is not, then with a Makefile for example typing make will cause the targets to be built. The same concept applies to the default build of other generators.</source>
          <target state="translated">대상이 기본 빌드 대상에서 제외되는지 여부를 나타내는 디렉토리의 특성입니다. 그렇지 않은 경우 makefile과 같이 Makefile을 사용하면 대상이 작성됩니다. 다른 생성기의 기본 빌드에도 동일한 개념이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c262b7485098f0a9e50b5e4913d3b058cdeab47" translate="yes" xml:space="preserve">
          <source>A property on a source file that indicates if the source file is a header file with no associated implementation. This is set automatically based on the file extension and is used by CMake to determine if certain dependency information should be computed.</source>
          <target state="translated">소스 파일이 연관된 구현이없는 헤더 파일인지를 표시하는 소스 파일의 특성입니다. 이는 파일 확장자를 기반으로 자동 설정되며 CMake에서 특정 종속성 정보를 계산해야하는지 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="85873f45eab2410d20d2e2995afebe9e8077af68" translate="yes" xml:space="preserve">
          <source>A property on a source file that indicates if the source file represents a class that is abstract. This only makes sense for languages that have a notion of an abstract class and it is only used by some tools that wrap classes into other languages.</source>
          <target state="translated">소스 파일이 추상 클래스를 나타내는 지 표시하는 소스 파일의 특성입니다. 이것은 추상 클래스라는 개념을 가진 언어에만 적합하며 클래스를 다른 언어로 래핑하는 일부 도구에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7681f1f01ad6aded8cd3ff83df064c199ce846ad" translate="yes" xml:space="preserve">
          <source>A property on a target that indicates if the target is excluded from the default build target. If it is not, then with a Makefile for example typing make will cause this target to be built. The same concept applies to the default build of other generators.</source>
          <target state="translated">대상이 기본 빌드 대상에서 제외되는지 여부를 나타내는 대상의 특성입니다. 그렇지 않은 경우 makefile과 같이 Makefile을 사용하면이 대상이 빌드됩니다. 다른 생성기의 기본 빌드에도 동일한 개념이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e1b3e7363a24a29e3780ea6582156a498abd241" translate="yes" xml:space="preserve">
          <source>A property that can be set to indicate what programming language the source file is. If it is not set the language is determined based on the file extension. Typical values are &lt;code&gt;CXX&lt;/code&gt; (i.e. C++), &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CSharp&lt;/code&gt;, &lt;code&gt;CUDA&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;ISPC&lt;/code&gt;, and &lt;code&gt;ASM&lt;/code&gt;. Setting this property for a file means this file will be compiled. Do not set this for headers or files that should not be compiled.</source>
          <target state="translated">소스 파일이 어떤 프로그래밍 언어인지 나타내도록 설정할 수있는 속성입니다. 설정되어 있지 않으면 파일 확장자에 따라 언어가 결정됩니다. 일반적인 값은 &lt;code&gt;CXX&lt;/code&gt; (예 : C ++), &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CSharp&lt;/code&gt; , &lt;code&gt;CUDA&lt;/code&gt; , &lt;code&gt;Fortran&lt;/code&gt; , &lt;code&gt;ISPC&lt;/code&gt; 및 &lt;code&gt;ASM&lt;/code&gt; 입니다. 파일에이 속성을 설정하면이 파일이 컴파일됩니다. 컴파일하지 말아야 할 헤더 나 파일에 대해서는 이것을 설정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="71e15b288c5f9d3b79422763c711fdd011b54078" translate="yes" xml:space="preserve">
          <source>A property that can be set to indicate what programming language the source file is. If it is not set the language is determined based on the file extension. Typical values are &lt;code&gt;CXX&lt;/code&gt; (i.e. C++), &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CSharp&lt;/code&gt;, &lt;code&gt;CUDA&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, and &lt;code&gt;ASM&lt;/code&gt;. Setting this property for a file means this file will be compiled. Do not set this for headers or files that should not be compiled.</source>
          <target state="translated">소스 파일의 프로그래밍 언어를 나타내도록 설정할 수있는 속성입니다. 설정하지 않으면 파일 확장자에 따라 언어가 결정됩니다. 일반적인 값은 &lt;code&gt;CXX&lt;/code&gt; (예 : C ++), &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CSharp&lt;/code&gt; , &lt;code&gt;CUDA&lt;/code&gt; , &lt;code&gt;Fortran&lt;/code&gt; 및 &lt;code&gt;ASM&lt;/code&gt; 입니다. 파일에이 속성을 설정하면이 파일이 컴파일됩니다. 컴파일해서는 안되는 헤더 나 파일에 대해서는 이것을 설정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="5f29ee1e4d0ae289791758c29d6a777d813edd96" translate="yes" xml:space="preserve">
          <source>A read only property on a SOURCE FILE that contains the full path to the source file.</source>
          <target state="translated">소스 파일의 전체 경로를 포함하는 소스 파일의 읽기 전용 특성입니다.</target>
        </trans-unit>
        <trans-unit id="401b05cd21a684d01140686b17259c4511553f22" translate="yes" xml:space="preserve">
          <source>A read-only property that indicates where a target&amp;rsquo;s main file is located on disk for the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;. The property is defined only for library and executable targets. An imported target may provide a set of configurations different from that of the importing project. By default CMake looks for an exact-match but otherwise uses an arbitrary available configuration. Use the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to map imported configurations explicitly.</source>
          <target state="translated">&lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 구성을 위해 디스크에서 대상의 기본 파일이있는 위치를 나타내는 읽기 전용 특성입니다 . 이 특성은 라이브러리 및 실행 가능 대상에 대해서만 정의됩니다. 가져온 대상은 가져 오는 프로젝트와 다른 구성 세트를 제공 할 수 있습니다. CMake는 기본적으로 정확히 일치하는 것을 찾지 만 임의로 사용 가능한 구성을 사용합니다. 가져온 구성을 명시 적으로 맵핑 하려면 &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 특성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="850814c30f731fe5d21d96485e5393020c26d9ed" translate="yes" xml:space="preserve">
          <source>A regular expression can be passed to run only tests which match the expression. To run only tests with &lt;code&gt;Qt&lt;/code&gt; in their name:</source>
          <target state="translated">정규 표현식을 전달하여 표현식과 일치하는 테스트 만 실행할 수 있습니다. 이름에 &lt;code&gt;Qt&lt;/code&gt; 가 있는 테스트 만 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="9699a04e2b9f2775fbf4ec54c895e223281c2b05" translate="yes" xml:space="preserve">
          <source>A relocatable package must not reference absolute paths of files on the machine where the package is built that will not exist on the machines where the package may be installed.</source>
          <target state="translated">재배치 가능 패키지는 패키지가 설치된 시스템에서 패키지가 설치 될 수있는 시스템에 존재하지 않는 파일의 절대 경로를 참조해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="4f957df3c1c1a4ee32e9dc61efe179ef8f154a14" translate="yes" xml:space="preserve">
          <source>A required integer representing the version of the JSON schema. Currently, the only supported version is 1.</source>
          <target state="translated">JSON 스키마의 버전을 나타내는 필수 정수입니다. 현재 지원되는 유일한 버전은 1입니다.</target>
        </trans-unit>
        <trans-unit id="cce8432a7c2bb1a4efef9e29a2398ed88268d344" translate="yes" xml:space="preserve">
          <source>A required string or boolean representing the value of the variable. A boolean is equivalent to &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; or &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt;. This field supports macro expansion.</source>
          <target state="translated">변수 값을 나타내는 필수 문자열 또는 부울입니다. 부울은 &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt; 와 동일합니다 . 이 필드는 매크로 확장을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="431c0c42b4b86e2b33cd21da2c15fb22ab10f2d8" translate="yes" xml:space="preserve">
          <source>A required string representing the machine-friendly name of the preset. This identifier is used in the &lt;code&gt;--preset&lt;/code&gt; argument. There must not be two presets in the union of &lt;code&gt;CMakePresets.json&lt;/code&gt; and &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; in the same directory with the same name.</source>
          <target state="translated">컴퓨터에 친숙한 사전 설정 이름을 나타내는 필수 문자열입니다. 이 식별자는 &lt;code&gt;--preset&lt;/code&gt; 인수에 사용됩니다 . 동일한 이름의 동일한 디렉터리에있는 &lt;code&gt;CMakePresets.json&lt;/code&gt; 및 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; 의 통합에 두 개의 사전 설정이 없어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4576e8f58a94d5eb3b97a302f5ec1721cea134ee" translate="yes" xml:space="preserve">
          <source>A sample executable to use to determine the configuration that should be used. e.g. &lt;code&gt;Debug&lt;/code&gt;, &lt;code&gt;Release&lt;/code&gt; etc.</source>
          <target state="translated">사용해야 할 구성을 결정하는 데 사용할 샘플 실행 파일입니다. 예 : &lt;code&gt;Debug&lt;/code&gt; , &lt;code&gt;Release&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="543e724331668b776c77c770a5e27e5bbfaff9d4" translate="yes" xml:space="preserve">
          <source>A section listing imported targets provided by the module, if any.</source>
          <target state="translated">모듈에서 제공 한 가져온 대상을 나열하는 섹션입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="885cd84d4869536fcb1b71ef49ec741ddf3a4197" translate="yes" xml:space="preserve">
          <source>A section listing result variables provided by the module.</source>
          <target state="translated">모듈이 제공 한 결과 변수를 나열하는 섹션입니다.</target>
        </trans-unit>
        <trans-unit id="a11673cda167f8fe337f81e195bde779c507ddf2" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list specifying the rpath to use in installed targets (for platforms that support it). This is used to initialize the target property &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; for all targets.</source>
          <target state="translated">설치된 대상에서 사용할 경로를 지정하는 세미콜론으로 구분 된 목록입니다 (지원되는 플랫폼의 경우). 모든 대상 의 대상 특성 &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 를 초기화하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="dafcc27956f1e90cfac28280c21825adc2af727d" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list specifying the rpath to use in installed targets (for platforms that support it). This property is initialized by the value of the variable &lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt;&lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; if it is set when a target is created.</source>
          <target state="translated">설치된 대상에서 사용할 경로를 지정하는 세미콜론으로 구분 된 목록입니다 (지원되는 플랫폼의 경우). 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_install_rpath#variable:CMAKE_INSTALL_RPATH&quot; id=&quot;index-0-variable:CMAKE_INSTALL_RPATH&quot;&gt; &lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 변수의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="331c81e26a1ee265470a147b8bf649d468b8f33b" translate="yes" xml:space="preserve">
          <source>A set of variables which provide package status information are also set automatically when using a config-file package. The &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable is set to true or false, depending on whether the package was found. The &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; cache variable is set to the location of the package configuration file.</source>
          <target state="translated">패키지 상태 정보를 제공하는 변수 세트는 구성 파일 패키지를 사용할 때 자동으로 설정됩니다. &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 변수는 패키지가 발견되었는지의 여부에 따라서, 참 또는 거짓으로 설정된다. &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; 캐시 변수 패키지 구성 파일의 위치로 설정된다.</target>
        </trans-unit>
        <trans-unit id="900a8c45bfb0ef7720eaae0491adac0a036056c1" translate="yes" xml:space="preserve">
          <source>A setup test can have multiple fixtures listed in its &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; property. It will execute only once for the whole CTest run, not once for each fixture. A fixture can also have more than one setup test defined. If there are multiple setup tests for a fixture, projects can control their order with the usual &lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt;&lt;code&gt;DEPENDS&lt;/code&gt;&lt;/a&gt; test property if necessary.</source>
          <target state="translated">셋업 테스트는 &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; 프로퍼티 에 여러 조명기를 나열 할 수 있습니다 . 각 조명기마다 한 번이 아니라 전체 CTest 실행에 대해 한 번만 실행됩니다. 픽스처에는 둘 이상의 설정 테스트가 정의되어있을 수도 있습니다. 조명기에 대해 여러 설정 테스트가있는 경우 프로젝트는 필요한 경우 일반적인 &lt;a href=&quot;depends#prop_test:DEPENDS&quot; id=&quot;index-0-prop_test:DEPENDS&quot;&gt; &lt;code&gt;DEPENDS&lt;/code&gt; &lt;/a&gt; 테스트 속성을 사용하여 순서를 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87b22a94e291fdee4fe1af542013801408b2b204" translate="yes" xml:space="preserve">
          <source>A setup test is allowed to require other fixtures, but not any fixture listed in its &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; property. For example:</source>
          <target state="translated">셋업 테스트는 다른 조명기를 필요로하지만 &lt;code&gt;FIXTURES_SETUP&lt;/code&gt; 속성에 나열된 조명기는 필요하지 않습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="856f61aa416f5a0bb630c362fdd793275809b94d" translate="yes" xml:space="preserve">
          <source>A short description what that package is, at most one sentence. Ideally this is set already directly in the Find-module.</source>
          <target state="translated">패키지가 무엇인지에 대한 간단한 설명, 최대 한 문장. 이상적으로는 찾기 모듈에서 직접 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b4bb1bba38b31cf766e40eeb6901990a2772960" translate="yes" xml:space="preserve">
          <source>A short string unique to the compiler vendor. Possible values include:</source>
          <target state="translated">컴파일러 공급 업체에 고유 한 짧은 문자열입니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2e616969629a39e95a8be486682e0a7ea47c5e3" translate="yes" xml:space="preserve">
          <source>A short string unique to the compiler. Possible values include:</source>
          <target state="translated">컴파일러에 고유 한 짧은 문자열입니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5a28952320665e349a8de7a1ead7a59b550dd69" translate="yes" xml:space="preserve">
          <source>A short string unique to the interpreter. Possible values include:</source>
          <target state="translated">인터프리터에 고유 한 짧은 문자열. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="af1fa625d23ea5c5f5a4f1b3d7f849c4aa3fc9f7" translate="yes" xml:space="preserve">
          <source>A short-hand signature is:</source>
          <target state="translated">속기 서명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cf5f8bb44ec001a064c5ca644daab69bb4150477" translate="yes" xml:space="preserve">
          <source>A simple but typical use of &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; with a fresh copy of software source code is to create a build directory and invoke cmake there:</source>
          <target state="translated">새 소프트웨어 소스 코드 사본과 함께 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 를 간단하지만 일반적으로 사용 하는 방법은 빌드 디렉토리를 만들고 여기에서 cmake를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="952e41fcbf722f10e1ec4f9aa345f87745471a6c" translate="yes" xml:space="preserve">
          <source>A simple convention for naming package registry entries is to use content hashes. They are deterministic and unlikely to collide (&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; uses this approach). The name of an entry referencing a specific directory is simply the content hash of the directory path itself.</source>
          <target state="translated">패키지 레지스트리 항목의 이름을 지정하는 간단한 규칙은 컨텐츠 해시를 사용하는 것입니다. 그것들은 결정적이며 충돌하지 않을 것입니다 ( &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 는이 접근법을 사용합니다). 특정 디렉토리를 참조하는 항목의 이름은 단순히 디렉토리 경로 자체의 컨텐츠 해시입니다.</target>
        </trans-unit>
        <trans-unit id="d9c75a6bac4d6ae2a3ead033355ab8096bb7b681" translate="yes" xml:space="preserve">
          <source>A simple description of what the module finds. More description may be required for some packages. If there are caveats or other details users of the module should be aware of, specify them here.</source>
          <target state="translated">모듈이 찾는 것에 대한 간단한 설명. 일부 패키지에는 추가 설명이 필요할 수 있습니다. 모듈 사용자가 알아야 할주의 사항이나 기타 세부 사항이있는 경우 여기에 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="39ab78d299b11c8361cacf217fcbfe724c471618" translate="yes" xml:space="preserve">
          <source>A single &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; may describe buildsystem contents and build properties which differ based on &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generation-time context&lt;/code&gt;&lt;/a&gt; including:</source>
          <target state="translated">단일 &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 은 다음을 포함하여 &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generation-time context&lt;/code&gt; &lt;/a&gt; 에 따라 다른 빌드 시스템 내용 및 빌드 속성을 설명 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="55fb9a6939f20f4818a1c3391c5cf590da0aa692" translate="yes" xml:space="preserve">
          <source>A single version with the format &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt; 형식의 단일 버전 .</target>
        </trans-unit>
        <trans-unit id="6ddf13f3638e2d14214a2aefa4d53316c7a8a482" translate="yes" xml:space="preserve">
          <source>A source file can include the &lt;code&gt;moc&lt;/code&gt; output file of a header &lt;code&gt;&amp;lt;header_base&amp;gt;.&amp;lt;header_extension&amp;gt;&lt;/code&gt; by using an include statement of the form</source>
          <target state="translated">소스 파일은 형식의 include 문을 사용하여 헤더 &lt;code&gt;&amp;lt;header_base&amp;gt;.&amp;lt;header_extension&amp;gt;&lt;/code&gt; 의 &lt;code&gt;moc&lt;/code&gt; 출력 파일을 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c0abca635f1821ea8ef31c2df06ce141d5aa0808" translate="yes" xml:space="preserve">
          <source>A special value of &lt;code&gt;NONE&lt;/code&gt; can also be used with the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command to enable no languages:</source>
          <target state="translated">특별한 값 &lt;code&gt;NONE&lt;/code&gt; 을 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 사용하여 언어를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ec6c6d15c55b6eb1de74f7f196c3e10640109aea" translate="yes" xml:space="preserve">
          <source>A string consisting of an identifier for the resource. Each character in the identifier can be a lowercase letter, a digit, or an underscore. Uppercase letters are not allowed.</source>
          <target state="translated">리소스의 식별자로 구성된 문자열입니다. 식별자의 각 문자는 소문자, 숫자 또는 밑줄 일 수 있습니다. 대문자는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4529f904aa1aa140b14aa0d3fbb4e2de451168c5" translate="yes" xml:space="preserve">
          <source>A string containing the name of the generator.</source>
          <target state="translated">생성기 이름이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b1dc22d4ace0c99bd98a490cc366e1277996aebe" translate="yes" xml:space="preserve">
          <source>A string list of all function parameters.</source>
          <target state="translated">모든 함수 매개 변수의 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b4a1703068d590d0929b62bcf9178776cfdb944c" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the archiver command line invocation. The value is encoded in the build system&amp;rsquo;s native shell format.</source>
          <target state="translated">아카이버 명령 행 호출의 단편을 지정하는 문자열. 값은 빌드 시스템의 기본 쉘 형식으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="fef9379bdd25bfc213d349c72b89b6315b5480b5" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the compile command line invocation. The value is encoded in the build system&amp;rsquo;s native shell format.</source>
          <target state="translated">컴파일 명령 행 호출의 단편을 지정하는 문자열. 값은 빌드 시스템의 기본 쉘 형식으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="222a8738ce3f03a59cefc2526639f9dcd97ec75e" translate="yes" xml:space="preserve">
          <source>A string specifying a fragment of the link command line invocation. The value is encoded in the build system&amp;rsquo;s native shell format.</source>
          <target state="translated">링크 명령 행 호출의 단편을 지정하는 문자열. 값은 빌드 시스템의 기본 쉘 형식으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="abe701b10148f9132480ea6692709cea5807faa7" translate="yes" xml:space="preserve">
          <source>A string specifying one of the &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; 중 하나를 지정하는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="e18104c9661d816e72fd6b5ad6506b80a06415b4" translate="yes" xml:space="preserve">
          <source>A string specifying the absolute path to the sysroot, represented with forward slashes.</source>
          <target state="translated">슬래시로 표시되는 sysroot의 절대 경로를 지정하는 문자열.</target>
        </trans-unit>
        <trans-unit id="e3595946d3d2b82b2cc23f1f38727c2c95d348df" translate="yes" xml:space="preserve">
          <source>A string specifying the absolute path to the top-level build directory, represented with forward slashes.</source>
          <target state="translated">슬래시로 표시되는 최상위 빌드 디렉토리의 절대 경로를 지정하는 문자열.</target>
        </trans-unit>
        <trans-unit id="014dad5879fff381100d82771730b51dade42250" translate="yes" xml:space="preserve">
          <source>A string specifying the absolute path to the top-level source directory, represented with forward slashes.</source>
          <target state="translated">슬래시로 표시되는 최상위 소스 디렉토리의 절대 경로를 지정하는 문자열.</target>
        </trans-unit>
        <trans-unit id="f5b3cb83772f65e7bb2c30592907a9b96593d1fd" translate="yes" xml:space="preserve">
          <source>A string specifying the full version in the format &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;[-&amp;lt;suffix&amp;gt;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;[-&amp;lt;suffix&amp;gt;]&lt;/code&gt; 형식으로 전체 버전을 지정하는 문자열 .</target>
        </trans-unit>
        <trans-unit id="dec1ad1d1bf2ac84e442b1448f40b19f2271ac8c" translate="yes" xml:space="preserve">
          <source>A string specifying the install destination path. The path may be absolute or relative to the install prefix.</source>
          <target state="translated">설치 대상 경로를 지정하는 문자열 경로는 설치 접두사에 대해 절대적이거나 상대적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0624a9f6d507c69744b451a6b354e33cee267f40" translate="yes" xml:space="preserve">
          <source>A string specifying the language (e.g. &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;) of the toolchain is used to compile the source file.</source>
          <target state="translated">툴체인 의 언어 (예 : &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CXX&lt;/code&gt; , &lt;code&gt;Fortran&lt;/code&gt; )를 지정하는 문자열 은 소스 파일을 컴파일하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="64bd985fb4ec40be553a3312141936a358cbca0d" translate="yes" xml:space="preserve">
          <source>A string specifying the language (e.g. &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;) of the toolchain is used to invoke the linker.</source>
          <target state="translated">툴체인 의 언어 (예 : &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CXX&lt;/code&gt; , &lt;code&gt;Fortran&lt;/code&gt; )를 지정하는 문자열 은 링커를 호출하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="358314455e9e48186a901c318c5610598c888791" translate="yes" xml:space="preserve">
          <source>A string specifying the logical name of the target.</source>
          <target state="translated">대상의 논리적 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="01284ecdd1ede565dddbd33f22cd2f004440d43c" translate="yes" xml:space="preserve">
          <source>A string specifying the minimum required version in the format:</source>
          <target state="translated">형식에 필요한 최소 버전을 지정하는 문자열 :</target>
        </trans-unit>
        <trans-unit id="6219e85daf98b39d94e4580eeddeecfe274602d2" translate="yes" xml:space="preserve">
          <source>A string specifying the name given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령에 지정된 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="349b6216f1a7feaefb3c0fe78883fd53cdb62426" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the cache entry property.</source>
          <target state="translated">캐시 항목 특성의 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="e827689ef92bba0d11dca834cd058f9422e0382b" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the configuration, e.g. &lt;code&gt;Debug&lt;/code&gt;.</source>
          <target state="translated">구성 이름을 지정하는 문자열입니다 (예 : &lt;code&gt;Debug&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="dff856522454970ac7134bd965c23b1e7d8b9e11" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the entry.</source>
          <target state="translated">항목 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="9e3e3d582f79740e4ba3ef6b1700f367e8a39718" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the generator.</source>
          <target state="translated">생성기 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="c6ccad70795cf86a913bc8a0dbcddf6e6b441205" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the source group.</source>
          <target state="translated">소스 그룹의 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="07732a647f5c6d3399ff1e848f2b091d86e05809" translate="yes" xml:space="preserve">
          <source>A string specifying the name of the target folder.</source>
          <target state="translated">대상 폴더의 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="b43ffb29f74b170458a1c018bc07128bf52d7e5b" translate="yes" xml:space="preserve">
          <source>A string specifying the path to an input file to CMake, represented with forward slashes. If the file is inside the top-level source directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">슬래시로 표시되는 CMake에 대한 입력 파일의 경로를 지정하는 문자열. 파일이 최상위 소스 디렉토리 안에 있으면 경로는 해당 디렉토리를 기준으로 지정됩니다. 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="d281b54bb5d4c6c0d6a84dab87c4252869287c42" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the build directory, represented with forward slashes. If the directory is inside the top-level build directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level build directory itself). Otherwise the path is absolute.</source>
          <target state="translated">슬래시로 표시되는 빌드 디렉토리의 경로를 지정하는 문자열. 디렉토리가 최상위 빌드 디렉토리 안에있는 경우 경로는 디렉토리를 기준으로 지정됩니다 (과 &lt;code&gt;.&lt;/code&gt; 최상위 빌드 디렉토리 자체). 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="ace5f2ddb7bb3e3c2f455da7c6dbb74f30113f3a" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the file on disk, represented with forward slashes. If the file is inside the top-level build directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">슬래시로 표시되는 디스크의 파일 경로를 지정하는 문자열 파일이 최상위 빌드 디렉토리 안에 있으면 경로는 해당 디렉토리를 기준으로 지정됩니다. 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="8e76df00bace03c158ae8476b91bf9f2ef2ec4d9" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the include directory, represented with forward slashes.</source>
          <target state="translated">슬래시로 표시되는 포함 디렉토리의 경로를 지정하는 문자열.</target>
        </trans-unit>
        <trans-unit id="1bcd3fbf31a4a1c1d9af5f6164869b25e66ff362" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the source directory, represented with forward slashes. If the directory is inside the top-level source directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level source directory itself). Otherwise the path is absolute.</source>
          <target state="translated">슬래시로 표시되는 소스 디렉토리의 경로를 지정하는 문자열. 디렉토리가 최상위 소스 디렉토리 안에있는 경우 경로는 디렉토리를 기준으로 지정됩니다 (과 &lt;code&gt;.&lt;/code&gt; 최상위 소스 디렉토리 자체). 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="24ea84154beb631cfa15da46921202a6d648dd0e" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the source file on disk, represented with forward slashes. If the file is inside the top-level source directory then the path is specified relative to that directory. Otherwise the path is absolute.</source>
          <target state="translated">디스크에서 소스 파일의 경로를 지정하는 문자열이며 슬래시로 표시됩니다. 파일이 최상위 소스 디렉토리 안에 있으면 경로는 해당 디렉토리를 기준으로 지정됩니다. 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="617bbaf7aff5f27ba7e5c4642e4c9c12019ac94f" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the target&amp;rsquo;s build directory, represented with forward slashes. If the directory is inside the top-level build directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level build directory itself). Otherwise the path is absolute.</source>
          <target state="translated">대상의 빌드 디렉토리 경로를 지정하는 문자열이며 슬래시로 표시됩니다. 디렉토리가 최상위 빌드 디렉토리 안에있는 경우 경로는 디렉토리를 기준으로 지정됩니다 (과 &lt;code&gt;.&lt;/code&gt; 최상위 빌드 디렉토리 자체). 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="13f82449efd0f72aba3dba9ad7292e9b63470de9" translate="yes" xml:space="preserve">
          <source>A string specifying the path to the target&amp;rsquo;s source directory, represented with forward slashes. If the directory is inside the top-level source directory then the path is specified relative to that directory (with &lt;code&gt;.&lt;/code&gt; for the top-level source directory itself). Otherwise the path is absolute.</source>
          <target state="translated">대상의 소스 디렉토리에 대한 경로를 지정하는 문자열로 슬래시로 표시됩니다. 디렉토리가 최상위 소스 디렉토리 안에있는 경우 경로는 디렉토리를 기준으로 지정됩니다 (과 &lt;code&gt;.&lt;/code&gt; 최상위 소스 디렉토리 자체). 그렇지 않으면 경로는 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="7706841d635a59260168321c61c2c40d6ff03a1b" translate="yes" xml:space="preserve">
          <source>A string specifying the preprocessor definition in the format &lt;code&gt;&amp;lt;name&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt;, e.g. &lt;code&gt;DEF&lt;/code&gt; or &lt;code&gt;DEF=1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt; 형식으로 프리 프로세서 정의를 지정하는 문자열 ( 예 : &lt;code&gt;DEF&lt;/code&gt; 또는 &lt;code&gt;DEF=1&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="67a23dbf3fe7b70c847e93b5587d0d0621703102" translate="yes" xml:space="preserve">
          <source>A string specifying the role of the fragment&amp;rsquo;s content:</source>
          <target state="translated">프래그먼트 컨텐츠의 역할을 지정하는 문자열 :</target>
        </trans-unit>
        <trans-unit id="c369d5567fec604b7083d75123a9ee5874d21648" translate="yes" xml:space="preserve">
          <source>A string specifying the target name.</source>
          <target state="translated">대상 이름을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="e12bf9745e14f1c0f61d04ec7eeeacaaabbe2e02" translate="yes" xml:space="preserve">
          <source>A string specifying the type of the entry used by &lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; to choose a widget for editing.</source>
          <target state="translated">편집 할 위젯을 선택하기 위해 &lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 에서 사용하는 항목의 유형을 지정하는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="78722d264c947e9bbede8ff59b911ddadd42d408" translate="yes" xml:space="preserve">
          <source>A string specifying the type of the target. The value is one of &lt;code&gt;EXECUTABLE&lt;/code&gt;, &lt;code&gt;STATIC_LIBRARY&lt;/code&gt;, &lt;code&gt;SHARED_LIBRARY&lt;/code&gt;, &lt;code&gt;MODULE_LIBRARY&lt;/code&gt;, &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt;, &lt;code&gt;INTERFACE_LIBRARY&lt;/code&gt;, or &lt;code&gt;UTILITY&lt;/code&gt;.</source>
          <target state="translated">대상 유형을 지정하는 문자열입니다. 값은 &lt;code&gt;EXECUTABLE&lt;/code&gt; , &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; , &lt;code&gt;SHARED_LIBRARY&lt;/code&gt; , &lt;code&gt;MODULE_LIBRARY&lt;/code&gt; , &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt; , &lt;code&gt;INTERFACE_LIBRARY&lt;/code&gt; 또는 &lt;code&gt;UTILITY&lt;/code&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="a6f1254c0d08224c807b7fa7b001308c7ac26931" translate="yes" xml:space="preserve">
          <source>A string specifying the type of the target. The value is one of &lt;code&gt;EXECUTABLE&lt;/code&gt;, &lt;code&gt;STATIC_LIBRARY&lt;/code&gt;, &lt;code&gt;SHARED_LIBRARY&lt;/code&gt;, &lt;code&gt;MODULE_LIBRARY&lt;/code&gt;, &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt;, or &lt;code&gt;UTILITY&lt;/code&gt;.</source>
          <target state="translated">대상 유형을 지정하는 문자열 값은 &lt;code&gt;EXECUTABLE&lt;/code&gt; , &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; , &lt;code&gt;SHARED_LIBRARY&lt;/code&gt; , &lt;code&gt;MODULE_LIBRARY&lt;/code&gt; , &lt;code&gt;OBJECT_LIBRARY&lt;/code&gt; 또는 &lt;code&gt;UTILITY&lt;/code&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="ef22938b4577f1078f1672209f2e25817e25a30b" translate="yes" xml:space="preserve">
          <source>A string specifying the value of &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 값을 지정하는 문자열 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ac6bc7177720378a6c9208979928eb57a2f2cfd" translate="yes" xml:space="preserve">
          <source>A string specifying the value of the cache entry property.</source>
          <target state="translated">캐시 항목 특성 값을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="7258c1ccdfe8d37bc338a7a08782cb82d57524f2" translate="yes" xml:space="preserve">
          <source>A string specifying the value of the entry.</source>
          <target state="translated">항목 값을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="b5648fb17fb1e642dd72ddc60aeffa843a7cb744" translate="yes" xml:space="preserve">
          <source>A string specifying the version suffix, if any, e.g. &lt;code&gt;g0abc3&lt;/code&gt;.</source>
          <target state="translated">버전 접미사를 지정하는 문자열입니다 (예 : &lt;code&gt;g0abc3&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="d0dabac61d9b5171fe4d3be9202f3a561e7379b0" translate="yes" xml:space="preserve">
          <source>A string uniquely identifying the target on which this target depends. This matches the main &lt;code&gt;id&lt;/code&gt; member of the other target.</source>
          <target state="translated">이 대상이 의존하는 대상을 고유하게 식별하는 문자열입니다. 이것은 다른 대상 의 기본 &lt;code&gt;id&lt;/code&gt; 멤버 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="93fc5888e412120b9e61de4306607ac0b576d6f5" translate="yes" xml:space="preserve">
          <source>A string uniquely identifying the target. The format is unspecified and should not be interpreted by clients.</source>
          <target state="translated">대상을 고유하게 식별하는 문자열입니다. 형식이 지정되지 않았으며 클라이언트가 해석해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="10313f1961b788696b08fb9a9b57958901efe41f" translate="yes" xml:space="preserve">
          <source>A string uniquely identifying the target. This matches the &lt;code&gt;id&lt;/code&gt; field in the file referenced by &lt;code&gt;jsonFile&lt;/code&gt;.</source>
          <target state="translated">대상을 고유하게 식별하는 문자열입니다. 이것은 &lt;code&gt;jsonFile&lt;/code&gt; 이 참조하는 파일 의 &lt;code&gt;id&lt;/code&gt; 필드 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="fb58b137926fb62ec9a0d78ee33cd8a034af7530" translate="yes" xml:space="preserve">
          <source>A suffix which is appended to all names that are being looked for. For instance you may set this to &lt;code&gt;.mpich&lt;/code&gt; or &lt;code&gt;.openmpi&lt;/code&gt; to prefer the one or the other on Debian and its derivatives.</source>
          <target state="translated">찾고있는 모든 이름에 추가되는 접미사입니다. 예를 들어 , 데비안과 그 파생물 중 하나를 선호 하도록 &lt;code&gt;.mpich&lt;/code&gt; 또는 &lt;code&gt;.openmpi&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5941e0c2930d9f977e3cbe72a4a7cecc76242058" translate="yes" xml:space="preserve">
          <source>A target is not allowed to link to itself even through an &lt;code&gt;ALIAS&lt;/code&gt; target.</source>
          <target state="translated">대상은 &lt;code&gt;ALIAS&lt;/code&gt; 대상을 통해서도 자신에게 링크 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="945a5c9ef6cee868ee7e4113f55c898c74ca98af" translate="yes" xml:space="preserve">
          <source>A target may populate the &lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property with options that should be used when invoking &lt;code&gt;uic&lt;/code&gt;. This must be consistent with the &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-2-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property content of the depender target. The &lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt;&lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt;&lt;/a&gt; variable may be used to track the origin target of such &lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt;. This means that a library which provides an alternative translation system for Qt may specify options which should be used when running &lt;code&gt;uic&lt;/code&gt;:</source>
          <target state="translated">대상은 &lt;code&gt;uic&lt;/code&gt; 를 호출 할 때 사용해야하는 옵션으로 &lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성을 채울 수 있습니다 . 이는 &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-2-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 의 AUTOUIC_OPTIONS 대상 특성 컨텐츠 와 일치해야합니다 . &lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt; &lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt; 의&lt;/a&gt; 변수 등의 근원 대상을 추적하기 위해 사용될 수있다 &lt;a href=&quot;../prop_tgt/interface_autouic_options#prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_AUTOUIC_OPTIONS&lt;/code&gt; 를&lt;/a&gt; . 이것은 Qt에 대한 대체 번역 시스템을 제공하는 라이브러리가 &lt;code&gt;uic&lt;/code&gt; 를 실행할 때 사용해야하는 옵션을 지정할 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="378a14904c696a1ae949768d30bd5d25f3209299" translate="yes" xml:space="preserve">
          <source>A target property that can be set to override the prefix (such as &lt;code&gt;lib&lt;/code&gt;) on a library name.</source>
          <target state="translated">라이브러리 이름 의 접두사 (예 : &lt;code&gt;lib&lt;/code&gt; ) 를 대체하도록 설정할 수있는 대상 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="d0062d15d1c6b70319280546a9c2be0b78e9eee4" translate="yes" xml:space="preserve">
          <source>A target property that can be set to override the suffix (such as &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.exe&lt;/code&gt;) on the name of a library, module or executable.</source>
          <target state="translated">라이브러리, 모듈 또는 실행 파일 이름 에서 접미사 (예 : &lt;code&gt;.so&lt;/code&gt; 또는 &lt;code&gt;.exe&lt;/code&gt; ) 를 대체하도록 설정할 수있는 대상 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="9eba6f49b6d973906cb4e4fca889bc8af05269be" translate="yes" xml:space="preserve">
          <source>A test driver is a program that links together many small tests into a single executable. This is useful when building static executables with large libraries to shrink the total required size. The list of source files needed to build the test driver will be in &lt;code&gt;sourceListName&lt;/code&gt;. &lt;code&gt;driverName&lt;/code&gt; is the name of the test driver program. The rest of the arguments consist of a list of test source files, can be semicolon separated. Each test source file should have a function in it that is the same name as the file with no extension (foo.cxx should have int foo(int, char*[]);) &lt;code&gt;driverName&lt;/code&gt; will be able to call each of the tests by name on the command line. If &lt;code&gt;EXTRA_INCLUDE&lt;/code&gt; is specified, then the next argument is included into the generated file. If &lt;code&gt;FUNCTION&lt;/code&gt; is specified, then the next argument is taken as a function name that is passed a pointer to ac and av. This can be used to add extra command line processing to each test. The &lt;code&gt;CMAKE_TESTDRIVER_BEFORE_TESTMAIN&lt;/code&gt; cmake variable can be set to have code that will be placed directly before calling the test main function. &lt;code&gt;CMAKE_TESTDRIVER_AFTER_TESTMAIN&lt;/code&gt; can be set to have code that will be placed directly after the call to the test main function.</source>
          <target state="translated">테스트 드라이버는 많은 작은 테스트를 하나의 실행 파일로 연결하는 프로그램입니다. 이는 필요한 전체 크기를 줄이기 위해 큰 라이브러리로 정적 실행 파일을 빌드 할 때 유용합니다. 테스트 드라이버를 빌드하는 데 필요한 소스 파일 목록은 &lt;code&gt;sourceListName&lt;/code&gt; 에 있습니다. &lt;code&gt;driverName&lt;/code&gt; 은 테스트 드라이버 프로그램의 이름입니다. 나머지 인수는 테스트 소스 파일 목록으로 구성되며 세미콜론으로 구분할 수 있습니다. 각 테스트 소스 파일에는 확장자가없는 파일과 동일한 이름의 함수가 있어야합니다 (foo.cxx는 int foo (int, char * []);) &lt;code&gt;driverName&lt;/code&gt; 은 다음과 같은 방법으로 각 테스트를 호출 할 수 있습니다. 명령 행에 이름을 입력하십시오. &lt;code&gt;EXTRA_INCLUDE&lt;/code&gt; 인 경우를 지정하면 다음 인수가 생성 된 파일에 포함됩니다. 경우 &lt;code&gt;FUNCTION&lt;/code&gt; 지정하면 다음 인수는 AC 및 AV에 대한 포인터를 전달 함수 이름으로한다. 이것은 각 테스트에 추가 명령 행 처리를 추가하는 데 사용될 수 있습니다. &lt;code&gt;CMAKE_TESTDRIVER_BEFORE_TESTMAIN&lt;/code&gt; 의 cmake 변수는 테스트의 주요 함수를 호출하기 전에 직접 배치됩니다 코드를 설정할 수 있습니다. &lt;code&gt;CMAKE_TESTDRIVER_AFTER_TESTMAIN&lt;/code&gt; 은 테스트 메인 함수 호출 후 바로 배치되는 코드를 갖도록 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efe7f08f57cf3236dd7a11fca4ad53e1244cb30e" translate="yes" xml:space="preserve">
          <source>A text file used to describe the project when &lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DESCRIPTION&lt;/code&gt;&lt;/a&gt; is not explicitly set. The default value for &lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt; points to a built-in template file &lt;code&gt;Templates/CPack.GenericDescription.txt&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#variable:CPACK_PACKAGE_DESCRIPTION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DESCRIPTION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DESCRIPTION&lt;/code&gt; &lt;/a&gt; 이 명시 적으로 설정되지 않은 경우 프로젝트를 설명하는 데 사용되는 텍스트 파일 입니다. &lt;code&gt;CPACK_PACKAGE_DESCRIPTION_FILE&lt;/code&gt; 의 기본값 은 내장 템플릿 파일 &lt;code&gt;Templates/CPack.GenericDescription.txt&lt;/code&gt; 를 가리 킵니다 .</target>
        </trans-unit>
        <trans-unit id="477e49c778b9ce4ab12f933a2acf88dc0cbb52fa" translate="yes" xml:space="preserve">
          <source>A third-party package which provides config-file packages may also provide &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;. These will be specified in files containing configuration-specific file paths relevant to the package, such as debug and release versions of libraries.</source>
          <target state="translated">구성 파일 패키지를 제공하는 타사 패키지는 &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 대상을&lt;/a&gt; 제공 할 수도 있습니다 . 이는 라이브러리의 디버그 및 릴리스 버전과 같이 패키지와 관련된 구성 별 파일 경로를 포함하는 파일에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="da1439a8bf9a2295dad9cf44e4698f2245869d6f" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to target Android for cross-compiling.</source>
          <target state="translated">툴체인 파일은 교차 컴파일을 위해 Android를 대상으로 &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 또는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ceba3e18e71aeb4c7bae854650dd45cea5852109" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to target Android for cross-compiling using a standalone toolchain.</source>
          <target state="translated">툴체인 파일은 독립형 툴체인을 사용하여 크로스 컴파일을 위해 Android를 대상으로 하도록 &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 또는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81ce329006fad9a6e0382e79f26a337756c51456" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; or the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to target Android for cross-compiling using a standalone toolchain.</source>
          <target state="translated">도구 모음 파일은 독립형 도구 모음을 사용하여 교차 컴파일을 위해 Android를 대상으로 하는 &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 또는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea79b4d14f92b544860be7c4f16c8ac29be13631" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt;, &lt;a href=&quot;cmake-generators.7#ninja-generators&quot;&gt;Ninja Generators&lt;/a&gt;, or &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; to target Android for cross-compiling.</source>
          <target state="translated">도구 체인 파일은 크로스 컴파일을 위해 Android를 대상으로하는 &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; , &lt;a href=&quot;cmake-generators.7#ninja-generators&quot;&gt;Ninja Generators&lt;/a&gt; 또는 &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c90e7ac83d5d16466f8f49a60af9becf083577e8" translate="yes" xml:space="preserve">
          <source>A toolchain file may configure cross-compiling for Android by setting the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable to &lt;code&gt;Android&lt;/code&gt;. Further configuration is specific to the Android development environment to be used.</source>
          <target state="translated">툴체인 파일은 &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 변수를 &lt;code&gt;Android&lt;/code&gt; 로 설정하여 Android에 대한 크로스 컴파일을 구성 할 수 있습니다 . 추가 구성은 사용할 Android 개발 환경에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="96bca0d7ceafbdf8489991d34b5aba78e1e0b62e" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for Windows CE may look like this:</source>
          <target state="translated">Windows CE 용 Visual Studio 생성기를 구성하기위한 도구 체인 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="264cc4a21002a7f722dd3d0508cc13d049a54538" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for Windows Phone may look like this:</source>
          <target state="translated">Windows Phone 용 Visual Studio 생성기를 구성하기위한 툴체인 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b1d2a9a32d0901f43b5968e88cd6c4ceaa05e9ae" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for Windows Store may look like this:</source>
          <target state="translated">Windows 스토어 용 Visual Studio 생성기를 구성하기위한 툴체인 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0f2d8f12c50a9c7879c3a73a251a3535c2b18f2d" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure a Visual Studio generator for a Windows 10 Universal Application may look like this:</source>
          <target state="translated">Windows 10 Universal Application에 대해 Visual Studio 생성기를 구성하기위한 툴체인 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5daec528af3ae480539b026bf8f8524e21670226" translate="yes" xml:space="preserve">
          <source>A toolchain file to configure one of the &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; to build using NVIDIA Nsight Tegra targeting Android may look like this:</source>
          <target state="translated">Android를 대상으로 NVIDIA Nsight Tegra를 사용하여 빌드 하도록 &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; 중 하나를 구성하는 툴체인 파일 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0664e6b36b0a4fececba98655e6c129705de91e2" translate="yes" xml:space="preserve">
          <source>A toolchain of the requested version will be selected automatically to match the ABI named in the &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; &lt;/a&gt; 변수에 이름이 지정된 ABI와 일치하도록 요청 된 버전의 툴체인이 자동으로 선택됩니다 .</target>
        </trans-unit>
        <trans-unit id="9dfa61fea4b8cb7212ccb05d04beef919c036edf" translate="yes" xml:space="preserve">
          <source>A typical cross-compiling toolchain for Linux has content such as:</source>
          <target state="translated">Linux 용 일반적인 크로스 컴파일 툴체인에는 다음과 같은 내용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5491906717841f26ae2a9bcf994c3c9db800c57f" translate="yes" xml:space="preserve">
          <source>A use-case which arises with such deprecation macros is the deprecation of an entire library. In that case, all public API in the library may be decorated with the &lt;code&gt;&amp;lt;PREFIX&amp;gt;_DEPRECATED&lt;/code&gt; macro. This results in very noisy build output when building the library itself, so the macro may be may be defined to empty in that case when building the deprecated library:</source>
          <target state="translated">이러한 지원 중단 매크로에서 발생하는 사용 사례는 전체 라이브러리의 지원 중단입니다. 이 경우 라이브러리의 모든 공용 API는 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_DEPRECATED&lt;/code&gt; 매크로 로 장식 될 수 있습니다 . 이로 인해 라이브러리 자체를 빌드 할 때 노이즈가 많은 빌드 출력이 발생하므로 더 이상 사용되지 않는 라이브러리를 빌드 할 때 매크로가 비어있는 것으로 정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="588b4642361f9397743f5f9264530429d9a300d5" translate="yes" xml:space="preserve">
          <source>A user may set &lt;code&gt;ZLIB_ROOT&lt;/code&gt; to a zlib installation root to tell this module where to look.</source>
          <target state="translated">사용자는 &lt;code&gt;ZLIB_ROOT&lt;/code&gt; 를 zlib 설치 루트로 설정 하여이 모듈에 찾을 위치를 알려줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a6539597a967103925dd14858039f3cb132abe4" translate="yes" xml:space="preserve">
          <source>A variable &amp;ldquo;set&amp;rdquo; or &amp;ldquo;unset&amp;rdquo; not inside a function call binds to the current directory scope.</source>
          <target state="translated">함수 호출 내에없는 변수&amp;ldquo;set&amp;rdquo;또는&amp;ldquo;unset&amp;rdquo;은 현재 디렉토리 범위에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="d3a3d732c574763adaf6afb428b42e812e78a539" translate="yes" xml:space="preserve">
          <source>A variable indicating whether iconv support is stemming from the C library or not. Even if the C library provides &lt;code&gt;iconv()&lt;/code&gt;, the presence of an external &lt;code&gt;libiconv&lt;/code&gt; implementation might lead to this being false.</source>
          <target state="translated">iconv 지원이 C 라이브러리에서 파생되는지 여부를 나타내는 변수입니다. C 라이브러리가 &lt;code&gt;iconv()&lt;/code&gt; 제공하더라도 외부 &lt;code&gt;libiconv&lt;/code&gt; 구현이 있으면 이것이 false가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a486262fac7d785809139ef76fd018c4c760e62d" translate="yes" xml:space="preserve">
          <source>A variable is created with the name used in the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, and is the binary directory for the project. This can be useful when &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; is used to connect several projects.</source>
          <target state="translated">변수는 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령에 사용 된 이름으로 작성되며 프로젝트 의 바이너리 디렉토리입니다. &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 를 사용하여 여러 프로젝트를 연결할 때 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="727a05c6ac1694a8e7fcc2697e957b8cf455f457" translate="yes" xml:space="preserve">
          <source>A variable is created with the name used in the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, and is the source directory for the project. This can be useful when &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; is used to connect several projects.</source>
          <target state="translated">변수는 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령에 사용 된 이름으로 작성되며 프로젝트 의 소스 디렉토리입니다. &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 를 사용하여 여러 프로젝트를 연결할 때 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17fbaffddaae1b5f853cdd4e73b349d0d4142289" translate="yes" xml:space="preserve">
          <source>A version range with the format &lt;code&gt;versionMin...[&amp;lt;]versionMax&lt;/code&gt; where &lt;code&gt;versionMin&lt;/code&gt; and &lt;code&gt;versionMax&lt;/code&gt; have the same format as the single version. By default, both end points are included. By specifying &lt;code&gt;&amp;lt;&lt;/code&gt;, the upper end point will be excluded. Version ranges are only supported with CMake 3.19 or later.</source>
          <target state="translated">&lt;code&gt;versionMin...[&amp;lt;]versionMax&lt;/code&gt; 형식의 버전 범위. 여기서 &lt;code&gt;versionMin&lt;/code&gt; 및 &lt;code&gt;versionMax&lt;/code&gt; 는 단일 버전과 형식이 동일합니다. 기본적으로 두 끝 점이 모두 포함됩니다. &lt;code&gt;&amp;lt;&lt;/code&gt; 를 지정 하면 상단 끝 점이 제외됩니다. 버전 범위는 CMake 3.19 이상에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="14fed08045c68dad1d6997c583bb9e0da223ba18" translate="yes" xml:space="preserve">
          <source>A warning may have appeared during CMake configuration:</source>
          <target state="translated">CMake 구성 중에 경고가 표시되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22b9529f554444ee63e9eea3573eb8bc99245cc2" translate="yes" xml:space="preserve">
          <source>A wrapper around &lt;code&gt;ar&lt;/code&gt; adding the appropriate &lt;code&gt;--plugin&lt;/code&gt; option for the compiler.</source>
          <target state="translated">컴파일러에 적합한 &lt;code&gt;--plugin&lt;/code&gt; 옵션을 추가하는 &lt;code&gt;ar&lt;/code&gt; 래퍼 입니다.</target>
        </trans-unit>
        <trans-unit id="90e706357090795a7c84de5d3a6a217d68036236" translate="yes" xml:space="preserve">
          <source>A wrapper around &lt;code&gt;ranlib&lt;/code&gt; adding the appropriate &lt;code&gt;--plugin&lt;/code&gt; option for the compiler.</source>
          <target state="translated">컴파일러에 적합한 &lt;code&gt;--plugin&lt;/code&gt; 옵션을 추가하는 &lt;code&gt;ranlib&lt;/code&gt; 의 래퍼 입니다.</target>
        </trans-unit>
        <trans-unit id="e29c6cbd184a79deb8c1a9f477b3e3ad1f42e851" translate="yes" xml:space="preserve">
          <source>ABSTRACT</source>
          <target state="translated">ABSTRACT</target>
        </trans-unit>
        <trans-unit id="2c7c350eb2e995ef9a0b76422d7557d7eda5a866" translate="yes" xml:space="preserve">
          <source>ACML</source>
          <target state="translated">ACML</target>
        </trans-unit>
        <trans-unit id="7aa7e8e3339f87bcad58b0258274d6bd8a678a1a" translate="yes" xml:space="preserve">
          <source>ACML_GPU</source>
          <target state="translated">ACML_GPU</target>
        </trans-unit>
        <trans-unit id="777dc195ee87cdebefe70bf4f63393521ea6c5f7" translate="yes" xml:space="preserve">
          <source>ACML_MP</source>
          <target state="translated">ACML_MP</target>
        </trans-unit>
        <trans-unit id="542fc6fbb34318532404a2793c541e891d888388" translate="yes" xml:space="preserve">
          <source>ADDITIONAL_CLEAN_FILES</source>
          <target state="translated">ADDITIONAL_CLEAN_FILES</target>
        </trans-unit>
        <trans-unit id="c1fcc3e1ceb8b31064b0fb286f0d9434105717e2" translate="yes" xml:space="preserve">
          <source>ADDITIONAL_MAKE_CLEAN_FILES</source>
          <target state="translated">ADDITIONAL_MAKE_CLEAN_FILES</target>
        </trans-unit>
        <trans-unit id="afbb8acf03edeaf6e4521aad5823466f58a87bb8" translate="yes" xml:space="preserve">
          <source>ADD_REMOVE indicates that CPack should install a copy of the installer that can be called from Windows&amp;rsquo; Add/Remove Programs dialog (via the &amp;ldquo;Modify&amp;rdquo; button) to change the set of installed components. NO_ADD_REMOVE turns off this behavior. This option is ignored on Mac OS X.</source>
          <target state="translated">ADD_REMOVE는 CPack이 Windows의 프로그램 추가 / 제거 대화 상자 ( &quot;수정&quot;단추를 통해)에서 호출 할 수있는 설치 프로그램의 사본을 설치하여 설치된 구성 요소 세트를 변경해야 함을 나타냅니다. NO_ADD_REMOVE는이 동작을 끕니다. 이 옵션은 Mac OS X에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="6052c880cd89242e8c525f6ff1c0a1bf129ca2e0" translate="yes" xml:space="preserve">
          <source>ADVANCED</source>
          <target state="translated">ADVANCED</target>
        </trans-unit>
        <trans-unit id="20572482af84f4b1a5054b89385b4b65d062cb34" translate="yes" xml:space="preserve">
          <source>AIX_EXPORT_ALL_SYMBOLS</source>
          <target state="translated">AIX_EXPORT_ALL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="d99e526c5aa7ac334529da757e24a9602486a117" translate="yes" xml:space="preserve">
          <source>ALIASED_TARGET</source>
          <target state="translated">ALIASED_TARGET</target>
        </trans-unit>
        <trans-unit id="7c3becbb7d60f1fbafac9641761f3aad4055bf43" translate="yes" xml:space="preserve">
          <source>ALIAS_GLOBAL</source>
          <target state="translated">ALIAS_GLOBAL</target>
        </trans-unit>
        <trans-unit id="c29fc0df2c53714b3a2120d9cf5e6b71a87519d4" translate="yes" xml:space="preserve">
          <source>ALLOW_DUPLICATE_CUSTOM_TARGETS</source>
          <target state="translated">ALLOW_DUPLICATE_CUSTOM_TARGETS</target>
        </trans-unit>
        <trans-unit id="c6eb09dd621fad06557b9e375a0d25258758d200" translate="yes" xml:space="preserve">
          <source>ALL_COMPONENTS_IN_ONE : create a single package with all requested components</source>
          <target state="translated">ALL_COMPONENTS_IN_ONE : 요청 된 모든 구성 요소가 포함 된 단일 패키지 생성</target>
        </trans-unit>
        <trans-unit id="bde7422c1e6b01e73f127e419d8bad420b6b7c85" translate="yes" xml:space="preserve">
          <source>ALL_COMPONENTS_IN_ONE : creates a single package with all (requested) components</source>
          <target state="translated">ALL_COMPONENTS_IN_ONE : 모든 (요청 된) 구성 요소로 단일 패키지를 작성합니다</target>
        </trans-unit>
        <trans-unit id="81297a2ee021a840a160551409407615f0d05b15" translate="yes" xml:space="preserve">
          <source>ANDROID</source>
          <target state="translated">ANDROID</target>
        </trans-unit>
        <trans-unit id="d333f6a3166a045cdd3f771be099d6266151bdb6" translate="yes" xml:space="preserve">
          <source>ANDROID_ANT_ADDITIONAL_OPTIONS</source>
          <target state="translated">ANDROID_ANT_ADDITIONAL_OPTIONS</target>
        </trans-unit>
        <trans-unit id="afbb39ca9c72a3accbf3717f10dfed0478d8e51f" translate="yes" xml:space="preserve">
          <source>ANDROID_API</source>
          <target state="translated">ANDROID_API</target>
        </trans-unit>
        <trans-unit id="ae112f1206dd6cc40417076f75463bdc79f2cc38" translate="yes" xml:space="preserve">
          <source>ANDROID_API_MIN</source>
          <target state="translated">ANDROID_API_MIN</target>
        </trans-unit>
        <trans-unit id="c1684e20fd638bb8310af4e4eeedba650d44877f" translate="yes" xml:space="preserve">
          <source>ANDROID_ARCH</source>
          <target state="translated">ANDROID_ARCH</target>
        </trans-unit>
        <trans-unit id="9a79b4e9e7ea1070ed0555d48dbed376c8d718a4" translate="yes" xml:space="preserve">
          <source>ANDROID_ASSETS_DIRECTORIES</source>
          <target state="translated">ANDROID_ASSETS_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="9ca8de9df8939266f5b83559c7accf85198a59b1" translate="yes" xml:space="preserve">
          <source>ANDROID_GUI</source>
          <target state="translated">ANDROID_GUI</target>
        </trans-unit>
        <trans-unit id="23fe6d36e636826a2f36a53080c9580a7e271d4b" translate="yes" xml:space="preserve">
          <source>ANDROID_JAR_DEPENDENCIES</source>
          <target state="translated">ANDROID_JAR_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="f4a304214ef63a57c3fe967fab3af218511698a9" translate="yes" xml:space="preserve">
          <source>ANDROID_JAR_DIRECTORIES</source>
          <target state="translated">ANDROID_JAR_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="c3d6733c878d6febc1d2eacff981ccd47d72162d" translate="yes" xml:space="preserve">
          <source>ANDROID_JAVA_SOURCE_DIR</source>
          <target state="translated">ANDROID_JAVA_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="b91157648690035c3125316498e05a60a2d80c05" translate="yes" xml:space="preserve">
          <source>ANDROID_NATIVE_LIB_DEPENDENCIES</source>
          <target state="translated">ANDROID_NATIVE_LIB_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="e57f23fd2aac9745dc3a9db72c8a18b7bac29136" translate="yes" xml:space="preserve">
          <source>ANDROID_NATIVE_LIB_DIRECTORIES</source>
          <target state="translated">ANDROID_NATIVE_LIB_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="0fc1645fd1f64d76fabcec020bf4ef142e2a9c0c" translate="yes" xml:space="preserve">
          <source>ANDROID_PROCESS_MAX</source>
          <target state="translated">ANDROID_PROCESS_MAX</target>
        </trans-unit>
        <trans-unit id="bb5532ad8f0c8960b4e06dfa4bdf84dcefd4abbb" translate="yes" xml:space="preserve">
          <source>ANDROID_PROGUARD</source>
          <target state="translated">ANDROID_PROGUARD</target>
        </trans-unit>
        <trans-unit id="930b188d0828670c21430f0820cde8555a56a9a8" translate="yes" xml:space="preserve">
          <source>ANDROID_PROGUARD_CONFIG_PATH</source>
          <target state="translated">ANDROID_PROGUARD_CONFIG_PATH</target>
        </trans-unit>
        <trans-unit id="8c690d2516dbe27d8f1855fc30340aad53c93e0e" translate="yes" xml:space="preserve">
          <source>ANDROID_SECURE_PROPS_PATH</source>
          <target state="translated">ANDROID_SECURE_PROPS_PATH</target>
        </trans-unit>
        <trans-unit id="067018278487a1bbed75c7d9bf5947dd8254dd80" translate="yes" xml:space="preserve">
          <source>ANDROID_SKIP_ANT_STEP</source>
          <target state="translated">ANDROID_SKIP_ANT_STEP</target>
        </trans-unit>
        <trans-unit id="c5d00996b33e07d1890cced84736c77eeacd7cdb" translate="yes" xml:space="preserve">
          <source>ANDROID_STL_TYPE</source>
          <target state="translated">ANDROID_STL_TYPE</target>
        </trans-unit>
        <trans-unit id="9e8e2225d646e944b0d8d61fc3a1616642f2faec" translate="yes" xml:space="preserve">
          <source>API v1</source>
          <target state="translated">API v1</target>
        </trans-unit>
        <trans-unit id="c871fe2caec2573ed4bccdc76f9ab1505b3519c3" translate="yes" xml:space="preserve">
          <source>API v1 is housed in the &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/v1/&lt;/code&gt; directory. It has the following subdirectories:</source>
          <target state="translated">API v1은 &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/v1/&lt;/code&gt; 디렉토리에 있습니다. 다음과 같은 하위 디렉토리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="569bea285d70dda2218f89ef5454ea69fb5111ef" translate="yes" xml:space="preserve">
          <source>APPLE</source>
          <target state="translated">APPLE</target>
        </trans-unit>
        <trans-unit id="afccdd9aab3f5ab704b0dfa43efdda67dfe89cf8" translate="yes" xml:space="preserve">
          <source>ARCHIVE_FILE provides a name for the archive file created by CPack to be used for downloaded components. If not supplied, CPack will create a file with some name based on CPACK_PACKAGE_FILE_NAME and the name of the component. See cpack_configure_downloads for more information.</source>
          <target state="translated">ARCHIVE_FILE은 CPack에서 생성 한 아카이브 파일의 이름으로 다운로드 한 구성 요소에 사용됩니다. 제공되지 않은 경우 CPack은 CPACK_PACKAGE_FILE_NAME 및 구성 요소 이름을 기반으로하는 이름을 가진 파일을 작성합니다. 자세한 내용은 cpack_configure_downloads를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c32d2c5518e82d0bdafc60e591fb32490ada1d6a" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_DIRECTORY</source>
          <target state="translated">ARCHIVE_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="877b05a486f35c94474b96e4d60eaeb86e79e462" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">ARCHIVE_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="71c7605b881b96431e374d50df8ae1cc576f32cf" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">ARCHIVE_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="18add6d3daed0b6c0f97c7e4771ac9f570a69441" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_NAME</source>
          <target state="translated">ARCHIVE_OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="7614dfe2bbfc93bb87ccd456f4d3a8c3c312515d" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">ARCHIVE_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="28f24d6ba908f954ed7b5e3367660035d46b08c9" translate="yes" xml:space="preserve">
          <source>ARCHIVE_OUTPUT_NAME_CONFIG</source>
          <target state="translated">ARCHIVE_OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="f0ad23a38fa745b8fc3aad4565bb339730310c66" translate="yes" xml:space="preserve">
          <source>ASM&amp;lt;DIALECT&amp;gt;</source>
          <target state="translated">ASM&amp;lt;DIALECT&amp;gt;</target>
        </trans-unit>
        <trans-unit id="45310abe8decf27af2d9ab6c2b34cf45406531cc" translate="yes" xml:space="preserve">
          <source>ASM&amp;lt;DIALECT&amp;gt;FLAGS</source>
          <target state="translated">ASM&amp;lt;DIALECT&amp;gt;FLAGS</target>
        </trans-unit>
        <trans-unit id="cbb992b39640d7e2e21b0e862f23fb86e109ccaa" translate="yes" xml:space="preserve">
          <source>ASM_DIALECT</source>
          <target state="translated">ASM_DIALECT</target>
        </trans-unit>
        <trans-unit id="7789496061ebc6c9fdc971615bd2b0a3f7b6e128" translate="yes" xml:space="preserve">
          <source>ASM_DIALECTFLAGS</source>
          <target state="translated">ASM_DIALECTFLAGS</target>
        </trans-unit>
        <trans-unit id="406aec65432f58ffc94317ba395f4556fc5ebc2a" translate="yes" xml:space="preserve">
          <source>ATLAS PhiPACK</source>
          <target state="translated">아틀라스 파이 팩</target>
        </trans-unit>
        <trans-unit id="c7e124692abee3350406d4df6e70699b81350dfc" translate="yes" xml:space="preserve">
          <source>ATTACHED_FILES</source>
          <target state="translated">ATTACHED_FILES</target>
        </trans-unit>
        <trans-unit id="3742c5ab47f8dd497ed34fa3a63f36eb66022ae1" translate="yes" xml:space="preserve">
          <source>ATTACHED_FILES_ON_FAIL</source>
          <target state="translated">ATTACHED_FILES_ON_FAIL</target>
        </trans-unit>
        <trans-unit id="8b61f8355a2ccf4ace40fd469d2de5233617a66b" translate="yes" xml:space="preserve">
          <source>AUTHOR</source>
          <target state="translated">AUTHOR</target>
        </trans-unit>
        <trans-unit id="c192cc0431c919e16b7b65c874e001280b419d26" translate="yes" xml:space="preserve">
          <source>AUTHOR Jan Woetzel &amp;lt;&lt;a href=&quot;http://www.mip.informatik.uni-kiel.de/~jw&quot;&gt;http://www.mip.informatik.uni-kiel.de/~jw&lt;/a&gt;&amp;gt; (07/2003-01/2006)</source>
          <target state="translated">저자 Jan Woetzel &amp;lt; &lt;a href=&quot;http://www.mip.informatik.uni-kiel.de/~jw&quot;&gt;http://www.mip.informatik.uni-kiel.de/~jw&lt;/a&gt; &amp;gt; (07 / 2003-01 / 2006)</target>
        </trans-unit>
        <trans-unit id="8be091067f274b810722189eafba547836c60c06" translate="yes" xml:space="preserve">
          <source>AUTOGEN_BUILD_DIR</source>
          <target state="translated">AUTOGEN_BUILD_DIR</target>
        </trans-unit>
        <trans-unit id="7a2a1c36ba4b123f78e8e9d6470ad584a3d52f39" translate="yes" xml:space="preserve">
          <source>AUTOGEN_ORIGIN_DEPENDS</source>
          <target state="translated">AUTOGEN_ORIGIN_DEPENDS</target>
        </trans-unit>
        <trans-unit id="8516b42008e03770eb1c7140b1a72f9f49e0c525" translate="yes" xml:space="preserve">
          <source>AUTOGEN_PARALLEL</source>
          <target state="translated">AUTOGEN_PARALLEL</target>
        </trans-unit>
        <trans-unit id="a506b8857a18e3b4c56a16bc7903696498166852" translate="yes" xml:space="preserve">
          <source>AUTOGEN_SOURCE_GROUP</source>
          <target state="translated">AUTOGEN_SOURCE_GROUP</target>
        </trans-unit>
        <trans-unit id="fc781d010f328a93bc541c84e18636d7606d3a8e" translate="yes" xml:space="preserve">
          <source>AUTOGEN_TARGETS_FOLDER</source>
          <target state="translated">AUTOGEN_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="80983858d68d8e18bc4ccf12363dcfd09228a766" translate="yes" xml:space="preserve">
          <source>AUTOGEN_TARGET_DEPENDS</source>
          <target state="translated">AUTOGEN_TARGET_DEPENDS</target>
        </trans-unit>
        <trans-unit id="08296a503064c9102a454e044a73ba0653ba87cb" translate="yes" xml:space="preserve">
          <source>AUTOMOC</source>
          <target state="translated">AUTOMOC</target>
        </trans-unit>
        <trans-unit id="7f7b78dc0252bd799990d61f277f30c22ac25de4" translate="yes" xml:space="preserve">
          <source>AUTOMOC_COMPILER_PREDEFINES</source>
          <target state="translated">AUTOMOC_COMPILER_PREDEFINES</target>
        </trans-unit>
        <trans-unit id="dd4a868d7f9ce0893d6a51e95776ef394322053a" translate="yes" xml:space="preserve">
          <source>AUTOMOC_DEPEND_FILTERS</source>
          <target state="translated">AUTOMOC_DEPEND_FILTERS</target>
        </trans-unit>
        <trans-unit id="49a900b86dfa5b75d44fa137f9622ef5c31a852c" translate="yes" xml:space="preserve">
          <source>AUTOMOC_EXECUTABLE</source>
          <target state="translated">AUTOMOC_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="228b525eee35fc28756fac4eecc2135b31c1d03b" translate="yes" xml:space="preserve">
          <source>AUTOMOC_MACRO_NAMES</source>
          <target state="translated">AUTOMOC_MACRO_NAMES</target>
        </trans-unit>
        <trans-unit id="781ee93f55dd640b3fb79ccf24d2db8fc7f7a52f" translate="yes" xml:space="preserve">
          <source>AUTOMOC_MOC_OPTIONS</source>
          <target state="translated">AUTOMOC_MOC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="8ce6e6b9dcfe6285ccefe0005d6b33e55583472d" translate="yes" xml:space="preserve">
          <source>AUTOMOC_PATH_PREFIX</source>
          <target state="translated">AUTOMOC_PATH_PREFIX</target>
        </trans-unit>
        <trans-unit id="b289efd305c9784d354efe6693882b58b837ce87" translate="yes" xml:space="preserve">
          <source>AUTOMOC_SOURCE_GROUP</source>
          <target state="translated">AUTOMOC_SOURCE_GROUP</target>
        </trans-unit>
        <trans-unit id="95619cc7658ff4562473543263e6b1282fd66d4e" translate="yes" xml:space="preserve">
          <source>AUTOMOC_TARGETS_FOLDER</source>
          <target state="translated">AUTOMOC_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="872b1fd073a8a194c5e552d9bb3f7b282ae63cd0" translate="yes" xml:space="preserve">
          <source>AUTORCC</source>
          <target state="translated">AUTORCC</target>
        </trans-unit>
        <trans-unit id="3407b54511d0c8985beacf53b7d50532b518820b" translate="yes" xml:space="preserve">
          <source>AUTORCC_EXECUTABLE</source>
          <target state="translated">AUTORCC_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="914867e13d616a87b88efd5df06014e5197edd91" translate="yes" xml:space="preserve">
          <source>AUTORCC_OPTIONS</source>
          <target state="translated">AUTORCC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="8309ee6045e75de4067d067b1d6cb1b843bbb2d7" translate="yes" xml:space="preserve">
          <source>AUTORCC_SOURCE_GROUP</source>
          <target state="translated">AUTORCC_SOURCE_GROUP</target>
        </trans-unit>
        <trans-unit id="c13c3ebba6ccf989662771c5ddc92e00e034a36b" translate="yes" xml:space="preserve">
          <source>AUTOUIC</source>
          <target state="translated">AUTOUIC</target>
        </trans-unit>
        <trans-unit id="384021b4529da3994b74f00877626868fa4b58e2" translate="yes" xml:space="preserve">
          <source>AUTOUIC_EXECUTABLE</source>
          <target state="translated">AUTOUIC_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="36a735daba1221f507c9613e27bbbeea34546acf" translate="yes" xml:space="preserve">
          <source>AUTOUIC_OPTIONS</source>
          <target state="translated">AUTOUIC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="597d2d6969e3fcf3cb07e3eaf2be05980934b6a6" translate="yes" xml:space="preserve">
          <source>AUTOUIC_SEARCH_PATHS</source>
          <target state="translated">AUTOUIC_SEARCH_PATHS</target>
        </trans-unit>
        <trans-unit id="39cbe06e7851f32a5aa4e0a065153e850657f736" translate="yes" xml:space="preserve">
          <source>AVIFILE (&lt;a href=&quot;http://avifile.sourceforge.net/&quot;&gt;http://avifile.sourceforge.net/&lt;/a&gt;) is a set of libraries for i386 machines to use various AVI codecs. Support is limited beyond Linux. Windows provides native AVI support, and so doesn&amp;rsquo;t need this library. This module defines</source>
          <target state="translated">AVIFILE ( &lt;a href=&quot;http://avifile.sourceforge.net/&quot;&gt;http://avifile.sourceforge.net/&lt;/a&gt; )은 i386 시스템이 다양한 AVI 코덱을 사용하기위한 라이브러리 세트입니다. 지원은 Linux 이상으로 제한됩니다. Windows는 기본 AVI 지원을 제공하므로이 라이브러리가 필요하지 않습니다. 이 모듈은</target>
        </trans-unit>
        <trans-unit id="3270b3f864f773afaaa2b298dd39e39851231085" translate="yes" xml:space="preserve">
          <source>Absolute path of the program</source>
          <target state="translated">프로그램의 절대 경로</target>
        </trans-unit>
        <trans-unit id="199acdbb0c6370bbadc1595c27d768974ebdd3db" translate="yes" xml:space="preserve">
          <source>Accumulate changes in a local variable and make &lt;em&gt;one&lt;/em&gt; call to &lt;code&gt;install_name_tool&lt;/code&gt; at the end of the function with all the changes at once.</source>
          <target state="translated">로컬 변수의 변경 사항을 누적 하고 함수의 끝에서 한 번에 모든 변경 사항이있는 &lt;code&gt;install_name_tool&lt;/code&gt; 을 &lt;em&gt;한 번&lt;/em&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d174453f4b0f35d52fa04aeeff1464b9de5600c" translate="yes" xml:space="preserve">
          <source>Activates dependency optimization of static and object libraries.</source>
          <target state="translated">정적 및 개체 라이브러리의 종속성 최적화를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="7ee97de449cf1a4b6dbbef08f869d8cbc0f70d0f" translate="yes" xml:space="preserve">
          <source>Activates verbose output from CMake and your build tools of choice when you start to actually build your project.</source>
          <target state="translated">실제로 프로젝트 빌드를 시작할 때 CMake 및 자세한 빌드 도구의 상세 출력을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="d54f4ee57faac88d8d48d3f7be3eae4c0004f045" translate="yes" xml:space="preserve">
          <source>ActivePython</source>
          <target state="translated">ActivePython</target>
        </trans-unit>
        <trans-unit id="2e6ef97a14b44867d72eff29f8932cda9bf3d54e" translate="yes" xml:space="preserve">
          <source>Actually this is only the filename without any path given at the moment.</source>
          <target state="translated">실제로 이것은 현재 주어진 경로가없는 파일 이름 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="e3e1d99b1c9968c9f671adaeaaa3d02db36f0b2e" translate="yes" xml:space="preserve">
          <source>Add -D define flags to the compilation of source files.</source>
          <target state="translated">소스 파일의 컴파일에 -D define 플래그를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a37d896d755eca7ebfa5b515fcb4743ab90e800b" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; specific remote repository to binary installer.</source>
          <target state="translated">바이너리 설치 프로그램에 &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; 특정 원격 저장소를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a4818718302b8b718a49864ced4375f72059082" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; key to the list (if necessary) for the given item. If added, also set all the variables associated with that key.</source>
          <target state="translated">주어진 항목의 목록에 &lt;code&gt;&amp;lt;keys_var&amp;gt;&lt;/code&gt; 키를 추가 하십시오 (필요한 경우). 추가 된 경우 해당 키와 관련된 모든 변수도 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d25ca9aa83afd26f24349d6c26d0d54956194436" translate="yes" xml:space="preserve">
          <source>Add QtIFW specific remote repository to binary installer.</source>
          <target state="translated">바이너리 설치 프로그램에 QtIFW 특정 원격 저장소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b0134877ba3db2d910181247c1e65700e6174b57" translate="yes" xml:space="preserve">
          <source>Add a custom build rule to the generated build system.</source>
          <target state="translated">생성 된 빌드 시스템에 사용자 정의 빌드 규칙을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d56a08af22f152544a1c7c4ca0c781225886b7e7" translate="yes" xml:space="preserve">
          <source>Add a dependency between top-level targets.</source>
          <target state="translated">최상위 대상간에 종속성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3be03e4edade21838fa7c27fb7f121016d002213" translate="yes" xml:space="preserve">
          <source>Add a fortran-only subdirectory, find a fortran compiler, and build.</source>
          <target state="translated">포트란 전용 서브 디렉토리를 추가하고 포트란 컴파일러를 찾고 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="1928d07832aecbe0f56da119975bdc0ed52de79b" translate="yes" xml:space="preserve">
          <source>Add a library to the project using the specified source files.</source>
          <target state="translated">지정된 소스 파일을 사용하여 프로젝트에 라이브러리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="42dfff7a2a71e1b2a330f936b4660cfb63451d17" translate="yes" xml:space="preserve">
          <source>Add a list of header files to precompile.</source>
          <target state="translated">미리 컴파일 할 헤더 파일 목록을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bbb6ff187ea409fec5712949a4f4d0d6ae4e8dca" translate="yes" xml:space="preserve">
          <source>Add a list of subdirectories to the build.</source>
          <target state="translated">하위 디렉토리 목록을 빌드에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="b96df46ea24718242f9ec2c6258412fce5dcbdfd" translate="yes" xml:space="preserve">
          <source>Add a list of subdirectories to the build. The &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; command should be used instead of &lt;code&gt;subdirs&lt;/code&gt; although &lt;code&gt;subdirs&lt;/code&gt; will still work. This will cause any CMakeLists.txt files in the sub directories to be processed by CMake. Any directories after the &lt;code&gt;PREORDER&lt;/code&gt; flag are traversed first by makefile builds, the &lt;code&gt;PREORDER&lt;/code&gt; flag has no effect on IDE projects. Any directories after the &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; marker will not be included in the top level makefile or project file. This is useful for having CMake create makefiles or projects for a set of examples in a project. You would want CMake to generate makefiles or project files for all the examples at the same time, but you would not want them to show up in the top level project or be built each time make is run from the top.</source>
          <target state="translated">하위 디렉토리 목록을 빌드에 추가하십시오. &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 명령을 대신 사용해야 &lt;code&gt;subdirs&lt;/code&gt; 하지만 &lt;code&gt;subdirs&lt;/code&gt; 여전히 작동합니다. 서브 디렉토리의 CMakeLists.txt 파일이 CMake에 의해 처리됩니다. &lt;code&gt;PREORDER&lt;/code&gt; 플래그 뒤의 디렉토리 는 makefile 빌드에 의해 먼저 순회되며 &lt;code&gt;PREORDER&lt;/code&gt; 플래그는 IDE 프로젝트에 영향을 미치지 않습니다. &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 이후의 모든 디렉토리마커는 최상위 makefile 또는 프로젝트 파일에 포함되지 않습니다. 이는 CMake가 프로젝트의 예제 세트에 대한 makefile 또는 프로젝트를 작성하도록하는 데 유용합니다. CMake가 모든 예제에 대한 makefile 또는 프로젝트 파일을 동시에 생성하기를 원하지만 최상위 프로젝트에 표시되거나 make가 맨 처음부터 실행될 때마다 빌드되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1dbee97acd12d4dc7e4333042cab0f90cb3d566" translate="yes" xml:space="preserve">
          <source>Add a new installation type containing a set of predefined component selections to the graphical installer.</source>
          <target state="translated">사전 정의 된 구성 요소 선택 세트가 포함 된 새 설치 유형을 그래픽 설치 프로그램에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="17ef59666e7e5898ad1fac2a18933bd1c372fcb0" translate="yes" xml:space="preserve">
          <source>Add a notes file with submission.</source>
          <target state="translated">제출 된 메모 파일을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c65841fe08f02e0377fc0da7d4a4a07064b8f32b" translate="yes" xml:space="preserve">
          <source>Add a subdirectory to the build.</source>
          <target state="translated">빌드에 서브 디렉토리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e5a247411d2f42466f737f04af12fc7f35326458" translate="yes" xml:space="preserve">
          <source>Add a target with no output so it will always be built.</source>
          <target state="translated">출력이없는 대상을 추가하면 항상 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="0659ddee2fd5ec25198d6c699c79933faed624c0" translate="yes" xml:space="preserve">
          <source>Add a test called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with the given command-line. Unlike the above &lt;code&gt;NAME&lt;/code&gt; signature no transformation is performed on the command-line to support target names or generator expressions.</source>
          <target state="translated">주어진 명령 행으로 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 이라는 테스트를 추가하십시오 . 위의 &lt;code&gt;NAME&lt;/code&gt; 서명 과 달리 대상 이름 또는 생성기 표현식을 지원하기 위해 명령 행에서 변환이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f595405314b38b7cd2182df9677cc175be11907" translate="yes" xml:space="preserve">
          <source>Add a test to the project to be run by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 의해 실행될 테스트를 프로젝트에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="15797c7cc9fd48510082d3b41e84ea638978314f" translate="yes" xml:space="preserve">
          <source>Add additional resources in the installer binary.</source>
          <target state="translated">설치 프로그램 바이너리에 추가 리소스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="253295802261b9c21a90ba540064049fb34edd35" translate="yes" xml:space="preserve">
          <source>Add an executable to the project using the specified source files.</source>
          <target state="translated">지정된 소스 파일을 사용하여 프로젝트에 실행 파일을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e1939281ac714290222c821dc76f8b055e1fcaa5" translate="yes" xml:space="preserve">
          <source>Add compile definitions to a target.</source>
          <target state="translated">컴파일 정의를 대상에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="bfb68054336642a7790e0e76b4002759e9879b90" translate="yes" xml:space="preserve">
          <source>Add compile options to a target.</source>
          <target state="translated">대상에 컴파일 옵션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8ea9062f548b198369d0b57630913f9ae54f5ba8" translate="yes" xml:space="preserve">
          <source>Add component</source>
          <target state="translated">구성 요소 추가</target>
        </trans-unit>
        <trans-unit id="be14142f8c3910437ecd910969fa3fc1d5ed9407" translate="yes" xml:space="preserve">
          <source>Add component group</source>
          <target state="translated">구성 요소 그룹 추가</target>
        </trans-unit>
        <trans-unit id="ed481a1598c26d9d108c9197cd1b08612f5b1dda" translate="yes" xml:space="preserve">
          <source>Add custom commands to process &lt;code&gt;.proto&lt;/code&gt; files to C++:</source>
          <target state="translated">&lt;code&gt;.proto&lt;/code&gt; 파일을 C ++ 로 처리하는 사용자 정의 명령을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="8628ec4054fa8ecc6ff54db3c59bbb21c204623a" translate="yes" xml:space="preserve">
          <source>Add custom commands to process &lt;code&gt;.proto&lt;/code&gt; files to Python:</source>
          <target state="translated">Python으로 &lt;code&gt;.proto&lt;/code&gt; 파일을 처리하는 사용자 정의 명령을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d2c5540a2aec7359c5a294f03344a14ad90653a" translate="yes" xml:space="preserve">
          <source>Add custom flags to SWIG compiler and have same semantic as properties &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SWIG 컴파일러에 사용자 정의 플래그를 추가하고 속성 &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 와 동일한 의미를 갖 습니다 .</target>
        </trans-unit>
        <trans-unit id="958f801c9ba546f22795f2af82c2b33072879e07" translate="yes" xml:space="preserve">
          <source>Add custom flags to the C/C++ generated source. They will fill, respectively, properties &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; of generated C/C++ file.</source>
          <target state="translated">C / C ++ 생성 소스에 사용자 정의 플래그를 추가하십시오. 생성 된 C / C ++ 파일의 속성 &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 를 각각 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="1a69c33d04c043d292f09d2adeb115c3de3dc69a" translate="yes" xml:space="preserve">
          <source>Add dependencies to a source file.</source>
          <target state="translated">소스 파일에 종속성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="5b14cb93c58d36542a55135f851e0ac6ea5bdf6c" translate="yes" xml:space="preserve">
          <source>Add dependencies to all SWIG input files.</source>
          <target state="translated">모든 SWIG 입력 파일에 종속성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="868f959394058f0259e9f6f0df8ba33baa8e7b10" translate="yes" xml:space="preserve">
          <source>Add directories in which the linker will look for libraries.</source>
          <target state="translated">링커가 라이브러리를 찾을 디렉토리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="dbf008f4e9a77163d4d78a902ff20d3eadcca26a" translate="yes" xml:space="preserve">
          <source>Add expected compiler features to a target.</source>
          <target state="translated">예상되는 컴파일러 기능을 대상에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="06ffbb6c840f179916fae5f6e3b307c96415458c" translate="yes" xml:space="preserve">
          <source>Add flags to all swig calls.</source>
          <target state="translated">모든 Swig 호출에 플래그를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="17f400b4434fdb250918be27c41943463c684534" translate="yes" xml:space="preserve">
          <source>Add include directories to a target.</source>
          <target state="translated">대상에 포함 디렉토리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8b282224d5d8a101d7a67eae1ff63bacddbfb738" translate="yes" xml:space="preserve">
          <source>Add include directories to the build.</source>
          <target state="translated">빌드에 포함 디렉토리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a660740005c131c8c1bfe2adba80e7be03de47cc" translate="yes" xml:space="preserve">
          <source>Add installation type</source>
          <target state="translated">설치 유형 추가</target>
        </trans-unit>
        <trans-unit id="df656728d1cc176cd462e47da23c27018cd07d1d" translate="yes" xml:space="preserve">
          <source>Add link directories to a target.</source>
          <target state="translated">대상에 링크 디렉토리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a267278bb02bc7fdb1ca126f686b3718a52ed79b" translate="yes" xml:space="preserve">
          <source>Add options to the compilation of source files.</source>
          <target state="translated">소스 파일 컴파일에 옵션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="608309476e9f80e1ed9da577c66a1431ad5eacb3" translate="yes" xml:space="preserve">
          <source>Add options to the link step for an executable, shared library or module library target.</source>
          <target state="translated">실행 가능, 공유 라이브러리 또는 모듈 라이브러리 대상에 대한 링크 단계에 옵션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="2cfc03f56f0c8e7698d8d1942e76e8c25ada538e" translate="yes" xml:space="preserve">
          <source>Add options to the link step for executable, shared library or module library targets in the current directory and below that are added after this command is invoked.</source>
          <target state="translated">이 명령이 호출 된 후 추가되는 현재 디렉토리 및 그 아래의 실행 가능, 공유 라이브러리 또는 모듈 라이브러리 대상에 대한 링크 단계에 옵션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f74c6d8f083c4a9438153fb6843aaf73e10f768c" translate="yes" xml:space="preserve">
          <source>Add paths to linker search and installed rpath.</source>
          <target state="translated">링커 검색 및 설치된 rpath에 경로를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="760dbe7e2d802db78284291c13abc29a93c0c6d2" translate="yes" xml:space="preserve">
          <source>Add preprocessor definitions to the compilation of source files.</source>
          <target state="translated">소스 파일 컴파일에 프리 프로세서 정의를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="77bd45b23bcb7b3a3484de6483dc788d871382d4" translate="yes" xml:space="preserve">
          <source>Add some definitions that will disable the MPI-2 C++ bindings. Currently supported are MPICH, Open MPI, Platform MPI and derivatives thereof, for example MVAPICH or Intel MPI.</source>
          <target state="translated">MPI-2 C ++ 바인딩을 사용하지 않을 정의를 추가하십시오. 현재 지원되는 MPICH, Open MPI, Platform MPI 및 그 파생물 (예 : MVAPICH 또는 Intel MPI).</target>
        </trans-unit>
        <trans-unit id="4a10f8b413dfaf8ff65396301fdd717ef606c46b" translate="yes" xml:space="preserve">
          <source>Add sources to a target.</source>
          <target state="translated">대상에 소스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="caccdcce3f866c4a495d7d01b821f02cc99afaee" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; source file explicitly to the target &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command invocation to specify the root directory of the application package source.</source>
          <target state="translated">&lt;code&gt;AndroidManifest.xml&lt;/code&gt; 소스 파일을 대상 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 명령 호출에 명시 적으로 추가하여 애플리케이션 패키지 소스의 루트 디렉토리를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="7b6bf42efadbfd994f1481469a5d493c989d4360" translate="yes" xml:space="preserve">
          <source>Add the following one line &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to the &lt;code&gt;MathFunctions&lt;/code&gt; directory:</source>
          <target state="translated">&lt;code&gt;MathFunctions&lt;/code&gt; 디렉터리에 다음 한 줄의 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="acf120808fcd29eafd86bcb5b440a4e7be55ee24" translate="yes" xml:space="preserve">
          <source>Add the given directories to those the compiler uses to search for include files. Relative paths are interpreted as relative to the current source directory.</source>
          <target state="translated">컴파일러가 포함 파일을 검색하는 데 사용하는 디렉토리에 지정된 디렉토리를 추가하십시오. 상대 경로는 현재 소스 디렉토리를 기준으로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="b4930a6e35cf0a4ed74bc40e2949ed637d24a4e2" translate="yes" xml:space="preserve">
          <source>Add values to the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;&lt;code&gt;ATTRIBUTES&lt;/code&gt; setting on its reference to a source file. Among other things, this can be used to set the role on a &lt;code&gt;.mig&lt;/code&gt; file:</source>
          <target state="translated">소스 파일을 참조 하여 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ATTRIBUTES&lt;/code&gt; 설정에 값을 추가 하십시오. 무엇보다도 &lt;code&gt;.mig&lt;/code&gt; 파일 에서 역할을 설정하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e67cba2cc35fabe35f83182288f55130f23c80d" translate="yes" xml:space="preserve">
          <source>Add values to the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;&lt;code&gt;ATTRIBUTES&lt;/code&gt; setting on its reference to a source file. Among other things, this can be used to set the role on a &lt;code&gt;.mig&lt;/code&gt; file:</source>
          <target state="translated">소스 파일에 대한 참조 에서 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ATTRIBUTES&lt;/code&gt; 설정에 값을 추가 하십시오. 무엇보다도 이것은 &lt;code&gt;.mig&lt;/code&gt; 파일 에 대한 역할을 설정하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ead9e0b6c945da5728eab3df1c68bb8e34572d1" translate="yes" xml:space="preserve">
          <source>Add-on package: &lt;code&gt;/opt&lt;/code&gt;.</source>
          <target state="translated">애드온 패키지 : &lt;code&gt;/opt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e626febee066f03c706db64758381e786318829b" translate="yes" xml:space="preserve">
          <source>AddFileDependencies</source>
          <target state="translated">AddFileDependencies</target>
        </trans-unit>
        <trans-unit id="e65387b7aba39e844667ba68e93612514ab18b0d" translate="yes" xml:space="preserve">
          <source>Adding Components</source>
          <target state="translated">구성 요소 추가</target>
        </trans-unit>
        <trans-unit id="ba372e1f50367a54b51ddb94fb85edc5ebf73b66" translate="yes" xml:space="preserve">
          <source>Adding Export Configuration (Step 11)</source>
          <target state="translated">내보내기 구성 추가 (11 단계)</target>
        </trans-unit>
        <trans-unit id="4be452f4d0a574a01553316eb29125fb913252ee" translate="yes" xml:space="preserve">
          <source>Adding Generator Expressions (Step 10)</source>
          <target state="translated">생성기 표현식 추가 (10 단계)</target>
        </trans-unit>
        <trans-unit id="61b38c12108cf4f17a509188cde89bb231fb5122" translate="yes" xml:space="preserve">
          <source>Adding Support for a Dashboard (Step 8)</source>
          <target state="translated">대시 보드에 대한 지원 추가 (8 단계)</target>
        </trans-unit>
        <trans-unit id="1d11dd975ffbb944a69a27dc3a95435d59703198" translate="yes" xml:space="preserve">
          <source>Adding System Introspection (Step 5)</source>
          <target state="translated">System Introspection 추가 (5 단계)</target>
        </trans-unit>
        <trans-unit id="4de6a22aea4772b194e461addcdf08b9b644caf5" translate="yes" xml:space="preserve">
          <source>Adding Usage Requirements for Library (Step 3)</source>
          <target state="translated">라이브러리에 대한 사용 요구 사항 추가 (3 단계)</target>
        </trans-unit>
        <trans-unit id="2623f98edbb0f147da4121113d418228072dad4d" translate="yes" xml:space="preserve">
          <source>Adding a Custom Command and Generated File (Step 6)</source>
          <target state="translated">사용자 지정 명령 및 생성 된 파일 추가 (6 단계)</target>
        </trans-unit>
        <trans-unit id="bff6ca463cccd88cb0b9fa29be5b5ee18fed4868" translate="yes" xml:space="preserve">
          <source>Adding a Library (Step 2)</source>
          <target state="translated">라이브러리 추가 (2 단계)</target>
        </trans-unit>
        <trans-unit id="286f3777b44302a0ea5f38033c1eb4f62a654a29" translate="yes" xml:space="preserve">
          <source>Adding a Version Number and Configured Header File</source>
          <target state="translated">버전 번호 및 구성된 헤더 파일 추가</target>
        </trans-unit>
        <trans-unit id="a651e7592bfab21033ddf1f3b7bdad3f74a021be" translate="yes" xml:space="preserve">
          <source>Adding support for submitting our test results to a dashboard is simple. We already defined a number of tests for our project in &lt;a href=&quot;#testing-support&quot;&gt;Testing Support&lt;/a&gt;. Now we just have to run those tests and submit them to a dashboard. To include support for dashboards we include the &lt;a href=&quot;../../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module in our top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;.</source>
          <target state="translated">테스트 결과를 대시 보드에 제출하기위한 지원을 추가하는 것은 간단합니다. 이미 &lt;a href=&quot;#testing-support&quot;&gt;테스트 지원&lt;/a&gt; 에서 프로젝트에 대한 여러 테스트를 정의했습니다 . 이제 해당 테스트를 실행하고 대시 보드에 제출하기 만하면됩니다. 대시 보드에 대한 지원을 포함하기 위해 우리는 포함 &lt;a href=&quot;../../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 우리의 최고 수준의 모듈 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="92939baca9b4a99a14627d44dff760563b4c022c" translate="yes" xml:space="preserve">
          <source>Additional &lt;code&gt;moc&lt;/code&gt; dependency file names can be extracted from source code by using &lt;a href=&quot;../prop_tgt/automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt; 를 사용하여 소스 코드에서 추가 &lt;code&gt;moc&lt;/code&gt; 종속성 파일 이름을 추출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c51a184d76ab2bac994d02bfc3c43a4a94eaa18" translate="yes" xml:space="preserve">
          <source>Additional Manglings</source>
          <target state="translated">추가 맨 글링</target>
        </trans-unit>
        <trans-unit id="a5dd30b970b4ad29fe09f9e29faf458fb848f6e4" translate="yes" xml:space="preserve">
          <source>Additional Note: If you see an empty SDL_LIBRARY_TEMP in your configuration and no SDL_LIBRARY, it means CMake did not find your SDL library (SDL.dll, libsdl.so, SDL.framework, etc). Set SDL_LIBRARY_TEMP to point to your SDL library, and configure again. Similarly, if you see an empty SDLMAIN_LIBRARY, you should set this value as appropriate. These values are used to generate the final SDL_LIBRARY variable, but when these values are unset, SDL_LIBRARY does not get created.</source>
          <target state="translated">추가 참고 : 구성에 빈 SDL_LIBRARY_TEMP가 있고 SDL_LIBRARY가 없으면 CMake가 SDL 라이브러리 (SDL.dll, libsdl.so, SDL.framework 등)를 찾지 못했음을 의미합니다. SDL_LIBRARY_TEMP가 SDL 라이브러리를 가리 키도록 설정하고 다시 구성하십시오. 마찬가지로 빈 SDLMAIN_LIBRARY가 표시되면이 값을 적절하게 설정해야합니다. 이 값은 최종 SDL_LIBRARY 변수를 생성하는 데 사용되지만이 값을 설정하지 않으면 SDL_LIBRARY가 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e825f5c4432adf1b1cc5335acce793ba193360b4" translate="yes" xml:space="preserve">
          <source>Additional compiler flags</source>
          <target state="translated">추가 컴파일러 플래그</target>
        </trans-unit>
        <trans-unit id="7fbd24048be0bb6b7f9c67a5f0debce542ffe4ab" translate="yes" xml:space="preserve">
          <source>Additional configuration settings include:</source>
          <target state="translated">추가 구성 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db30f2b6adfa396599f8a85c1b9ba942ae996515" translate="yes" xml:space="preserve">
          <source>Additional contents to be inserted into the generated Eclipse cproject file.</source>
          <target state="translated">생성 된 Eclipse cproject 파일에 삽입 할 추가 컨텐츠입니다.</target>
        </trans-unit>
        <trans-unit id="ad1c379a88eddebb1031094268c15c198aaeb838" translate="yes" xml:space="preserve">
          <source>Additional files on which a compiled object file depends.</source>
          <target state="translated">컴파일 된 오브젝트 파일이 의존하는 추가 파일.</target>
        </trans-unit>
        <trans-unit id="c3048d353848813a412cddd235ed9c1f0697a243" translate="yes" xml:space="preserve">
          <source>Additional files on which a target binary depends for linking.</source>
          <target state="translated">대상 바이너리가 링크를 위해 의존하는 추가 파일.</target>
        </trans-unit>
        <trans-unit id="130bf962b26f46e964878676c4c70dc3086d220a" translate="yes" xml:space="preserve">
          <source>Additional files to remove during the clean stage.</source>
          <target state="translated">정리 단계에서 제거 할 추가 파일.</target>
        </trans-unit>
        <trans-unit id="f177839d5023229e89a01abe8a1d30424f74e546" translate="yes" xml:space="preserve">
          <source>Additional flags to be added when compiling this source file.</source>
          <target state="translated">이 소스 파일을 컴파일 할 때 추가 할 추가 플래그.</target>
        </trans-unit>
        <trans-unit id="54f0fa59db9a4da57e15015623cbc89cea927e2e" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">컴파일러에 전달할 추가 플래그입니다. 내용 참고 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 와 관련된 형상 특정 변수의 내용을 자동 전에 컴파일러 명령에 추가 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81538f9ee890ef2c2607416b15e4f64465e5a137" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">컴파일러에 전달할 추가 플래그. &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; 의 내용 및 관련 구성 특정 변수는 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 의 내용 전에 컴파일러 명령에 자동으로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="11118a58a2be21d7a9a8342b6393509693512ab8" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_C_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">컴파일러에 전달할 추가 플래그. &lt;code&gt;CMAKE_C_FLAGS&lt;/code&gt; 의 내용 및 관련 구성 특정 변수는 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 의 내용 전에 컴파일러 명령에 자동으로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b631a90d95202cd17ede5af5736d54ee8eaf46e" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_Fortran_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">컴파일러에 전달할 추가 플래그. &lt;code&gt;CMAKE_Fortran_FLAGS&lt;/code&gt; 의 내용 및 관련 구성 특정 변수는 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; 의 내용 전에 컴파일러 명령에 자동으로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad0ae8eeba366a0711cdbdde465a4d76d8851055" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_OBJCXX_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">컴파일러에 전달할 추가 플래그입니다. 의 내용을 참고 &lt;code&gt;CMAKE_OBJCXX_FLAGS&lt;/code&gt; 및 관련 설정 특정 변수가 자동으로의 내용보다 먼저 컴파일러 명령에 추가됩니다 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="893772400a60dc18cbc14402eb185421b106adef" translate="yes" xml:space="preserve">
          <source>Additional flags to pass to the compiler. Note that the contents of &lt;code&gt;CMAKE_OBJC_FLAGS&lt;/code&gt; and its associated configuration-specific variable are automatically added to the compiler command before the contents of &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt;.</source>
          <target state="translated">컴파일러에 전달할 추가 플래그입니다. 의 내용을 참고 &lt;code&gt;CMAKE_OBJC_FLAGS&lt;/code&gt; 및 관련 설정 특정 변수가 자동으로의 내용보다 먼저 컴파일러 명령에 추가됩니다 &lt;code&gt;CMAKE_REQUIRED_FLAGS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee56e54c1d1654ccdb9296802e7aa6f45108a7b1" translate="yes" xml:space="preserve">
          <source>Additional flags to use when compiling this target&amp;rsquo;s sources.</source>
          <target state="translated">이 타겟의 소스를 컴파일 할 때 사용할 추가 플래그.</target>
        </trans-unit>
        <trans-unit id="e5ecfa1c682cd480a51de7ff36e24e4c8190bf7a" translate="yes" xml:space="preserve">
          <source>Additional flags to use when linking this target if it is a shared library, module library, or an executable. Static libraries need to use &lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;static_library_flags#prop_tgt:STATIC_LIBRARY_FLAGS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_FLAGS&quot;&gt;&lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">이 대상이 공유 라이브러리, 모듈 라이브러리 또는 실행 파일 인 경우이 대상을 링크 할 때 사용할 추가 플래그입니다. 정적 라이브러리는 &lt;a href=&quot;static_library_options#prop_tgt:STATIC_LIBRARY_OPTIONS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_OPTIONS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_OPTIONS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;static_library_flags#prop_tgt:STATIC_LIBRARY_FLAGS&quot; id=&quot;index-0-prop_tgt:STATIC_LIBRARY_FLAGS&quot;&gt; &lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt; &lt;/a&gt; 특성 을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="46c9a32d5379ea6bf00840babb5d412eb1bd4c73" translate="yes" xml:space="preserve">
          <source>Additional information is provided when &lt;a href=&quot;#variable:MATLAB_FIND_DEBUG&quot; id=&quot;index-0-variable:MATLAB_FIND_DEBUG&quot;&gt;&lt;code&gt;MATLAB_FIND_DEBUG&lt;/code&gt;&lt;/a&gt; is set. When a Matlab/MCR installation is found automatically and the &lt;code&gt;MATLAB_VERSION&lt;/code&gt; is not given, the version is queried from Matlab directly (on Windows this may pop up a Matlab window) or from the MCR installation.</source>
          <target state="translated">&lt;a href=&quot;#variable:MATLAB_FIND_DEBUG&quot; id=&quot;index-0-variable:MATLAB_FIND_DEBUG&quot;&gt; &lt;code&gt;MATLAB_FIND_DEBUG&lt;/code&gt; &lt;/a&gt; 가 설정 되면 추가 정보가 제공됩니다 . Matlab / MCR 설치가 자동으로 발견되고 &lt;code&gt;MATLAB_VERSION&lt;/code&gt; 이 제공되지 않으면 버전은 Matlab에서 직접 (Windows의 경우 Matlab 창이 팝업 될 수 있음) 또는 MCR 설치에서 쿼리됩니다.</target>
        </trans-unit>
        <trans-unit id="4969cb59e1b34116597a9a9531774753f98a0333" translate="yes" xml:space="preserve">
          <source>Additional macro names to search for can be added to &lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">검색 할 추가 매크로 이름을 &lt;a href=&quot;../prop_tgt/automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; 에&lt;/a&gt; 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3ed80825ec3d8efa6a88d65b25d32520120e738" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;moc&lt;/code&gt; when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">추가 옵션 &lt;code&gt;moc&lt;/code&gt; 사용 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; 을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08feb6564a0597fff3bf7ac0e83fd2798519b1d6" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;moc&lt;/code&gt; when using &lt;a href=&quot;cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">추가 옵션 &lt;code&gt;moc&lt;/code&gt; 사용 &lt;a href=&quot;cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb98365a36aa09a880b6c4f90adc1ef391b38e23" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;rcc&lt;/code&gt; when using &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;rcc&lt;/code&gt; 사용시 &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 대한 추가 옵션</target>
        </trans-unit>
        <trans-unit id="7656843e8ee37fa401b7781263c8abd8d35ffa1e" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;rcc&lt;/code&gt; when using &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;rcc&lt;/code&gt; 사용시 &lt;a href=&quot;autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 대한 추가 옵션</target>
        </trans-unit>
        <trans-unit id="f9dc126d3e90ce491309b5bd391e6b2bca9d18cc" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;rcc&lt;/code&gt; when using &lt;a href=&quot;cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt;&lt;code&gt;CMAKE_AUTORCC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rcc&lt;/code&gt; 사용시 &lt;a href=&quot;cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt; &lt;code&gt;CMAKE_AUTORCC&lt;/code&gt; &lt;/a&gt; 대한 추가 옵션 .</target>
        </trans-unit>
        <trans-unit id="97214efba8762e28820d461f63637709fd41b0b8" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;uic&lt;/code&gt; when using &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">추가 옵션 &lt;code&gt;uic&lt;/code&gt; 사용 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0ccdc5c846f81987a1c24fca20bafcb239a4e0c" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;uic&lt;/code&gt; when using &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">추가 옵션 &lt;code&gt;uic&lt;/code&gt; 사용 &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="069751368f7dfb969ddc6dcff1533bd136239351" translate="yes" xml:space="preserve">
          <source>Additional options for &lt;code&gt;uic&lt;/code&gt; when using &lt;a href=&quot;cmake_autouic#variable:CMAKE_AUTOUIC&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC&quot;&gt;&lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">추가 옵션 &lt;code&gt;uic&lt;/code&gt; 사용 &lt;a href=&quot;cmake_autouic#variable:CMAKE_AUTOUIC&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC&quot;&gt; &lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c7ad1730a25654745727fa6a258c25c2300a60a6" translate="yes" xml:space="preserve">
          <source>Additional options for configuring the build (i.e. for CMake, not for the build tool). Note that if this is specified, the &lt;code&gt;--build-options&lt;/code&gt; keyword and its arguments must be the last option given on the command line, with the possible exception of &lt;code&gt;--test-command&lt;/code&gt;.</source>
          <target state="translated">빌드 구성을위한 추가 옵션 (예 : 빌드 도구가 아닌 CMake). 이것이 지정되면 &lt;code&gt;--build-options&lt;/code&gt; 키워드 및 해당 인수는 &lt;code&gt;--test-command&lt;/code&gt; 를 제외하고 명령 행에 제공된 마지막 옵션이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5bf205343353f44b72f0c4957e6d19b49133feeb" translate="yes" xml:space="preserve">
          <source>Additional options for moc when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; 사용시&lt;/a&gt; moc에 대한 추가 옵션</target>
        </trans-unit>
        <trans-unit id="c98be86e950871cb25bcdb0c1fa99324c4a7063a" translate="yes" xml:space="preserve">
          <source>Additional options provided to the add_test command. These options are added to the default options (eg. &amp;ldquo;CONFIGURATIONS Release&amp;rdquo;)</source>
          <target state="translated">add_test 명령에 추가 옵션이 제공되었습니다. 이 옵션은 기본 옵션에 추가됩니다 (예 :&amp;ldquo;CONFIGURATIONS Release&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="ad63195c422610c74d24295e9654635927eeb960" translate="yes" xml:space="preserve">
          <source>Additional options to &lt;code&gt;DOWNLOAD&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 있는 추가 옵션 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6baac8f4111c6808b3c814bf7e7813e1880a02f5" translate="yes" xml:space="preserve">
          <source>Additional outputs created by compilation of this source file. If any of these outputs is missing the object will be recompiled. This is supported only on the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and will be ignored on other generators.</source>
          <target state="translated">이 소스 파일을 컴파일하여 생성 된 추가 출력. 이러한 출력 중 하나라도 없으면 개체가 다시 컴파일됩니다. 이것은 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 에서만 지원되며 다른 생성기에서는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae51bbed489fd578f430e99c146ce36d5bc158a2" translate="yes" xml:space="preserve">
          <source>Additional outputs created by compilation of this source file. If any of these outputs is missing the object will be recompiled. This is supported only on the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and will be ignored on other generators.</source>
          <target state="translated">이 소스 파일을 컴파일하여 생성 된 추가 출력. 이러한 출력 중 하나라도 누락 된 경우 개체가 다시 컴파일됩니다. 이것은 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 에서만 지원되며 다른 생성기에서는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2cc3172df56dd6712620ea20246eb104ac7c6058" translate="yes" xml:space="preserve">
          <source>Additional outputs for a &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; rule.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; 규칙에 대한 추가 출력 .</target>
        </trans-unit>
        <trans-unit id="1496eda80030e7f075985cf09460d103190a3688" translate="yes" xml:space="preserve">
          <source>Additional outputs for a &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; rule.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; 규칙에 대한 추가 출력 .</target>
        </trans-unit>
        <trans-unit id="86d23f38dcfbb7bc676cff6498a535381e2de53d" translate="yes" xml:space="preserve">
          <source>Additional public interface files on which a target binary depends for linking.</source>
          <target state="translated">대상 바이너리가 링크를 위해 의존하는 추가 공용 인터페이스 파일.</target>
        </trans-unit>
        <trans-unit id="9c65691e7a88dc15f2f3bb511076a9807b50e3be" translate="yes" xml:space="preserve">
          <source>Additional suffixes for shared libraries.</source>
          <target state="translated">공유 라이브러리에 대한 추가 접미사.</target>
        </trans-unit>
        <trans-unit id="9c37795a028fb25055d5c46aa63afbe7aaf3af9f" translate="yes" xml:space="preserve">
          <source>Additional target dependencies of the corresponding &lt;code&gt;_autogen&lt;/code&gt; target.</source>
          <target state="translated">해당 &lt;code&gt;_autogen&lt;/code&gt; 대상 의 추가 대상 종속성</target>
        </trans-unit>
        <trans-unit id="0e5a1d1c98b512e00e5a6edd395c0498ee28c9ee" translate="yes" xml:space="preserve">
          <source>Additionally it provides the following macros:</source>
          <target state="translated">또한 다음 매크로를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="13ba009570983be75a1257a2f76231cbd3ed8642" translate="yes" xml:space="preserve">
          <source>Additionally we assume &lt;code&gt;meta.json&lt;/code&gt; is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-2-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; which is why we have to add it to &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">또한 우리는 가정 &lt;code&gt;meta.json&lt;/code&gt; 가 되어 &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-2-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 우리에 추가해야 할 이유입니다 &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="29245f02c9a71ee245618a60d153dd0548613e42" translate="yes" xml:space="preserve">
          <source>Additionally, a generator expression may be used as a fragment of any of the above items, e.g. &lt;code&gt;foo$&amp;lt;1:_d&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">또한 생성기 표현식은 위 항목 중 일부 (예 : &lt;code&gt;foo$&amp;lt;1:_d&amp;gt;&lt;/code&gt; 의 단편으로 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="278b60130466b2477a61a8de500285bbb7708772" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is given, this command will be executed. The command will receive the following arguments: &lt;code&gt;COMMAND(&amp;lt;variable&amp;gt; &amp;lt;access&amp;gt; &amp;lt;value&amp;gt; &amp;lt;current_list_file&amp;gt; &amp;lt;stack&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">또한 &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; 를 지정하면이 명령이 실행됩니다. 명령은 다음 인수를 수신합니다. &lt;code&gt;COMMAND(&amp;lt;variable&amp;gt; &amp;lt;access&amp;gt; &amp;lt;value&amp;gt; &amp;lt;current_list_file&amp;gt; &amp;lt;stack&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f813d0378ea8696eae1801f65a99950955cd049d" translate="yes" xml:space="preserve">
          <source>Additionally, setting properties on tests is somewhat less convenient, since the tests are not available at CMake time. Additional test properties may be assigned to the set of tests as a whole using the &lt;code&gt;PROPERTIES&lt;/code&gt; option. If more fine-grained test control is needed, custom content may be provided through an external CTest script using the &lt;a href=&quot;../prop_dir/test_include_files#prop_dir:TEST_INCLUDE_FILES&quot; id=&quot;index-0-prop_dir:TEST_INCLUDE_FILES&quot;&gt;&lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt;&lt;/a&gt; directory property. The set of discovered tests is made accessible to such a script via the &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt; variable.</source>
          <target state="translated">또한 CMake 시간에는 테스트를 사용할 수 없으므로 테스트에서 속성을 설정하는 것이 다소 편리하지 않습니다. &lt;code&gt;PROPERTIES&lt;/code&gt; 옵션을 사용하여 추가 테스트 속성을 전체 테스트 세트에 할당 할 수 있습니다 . 보다 세분화 된 테스트 제어가 필요한 경우 &lt;a href=&quot;../prop_dir/test_include_files#prop_dir:TEST_INCLUDE_FILES&quot; id=&quot;index-0-prop_dir:TEST_INCLUDE_FILES&quot;&gt; &lt;code&gt;TEST_INCLUDE_FILES&lt;/code&gt; &lt;/a&gt; 디렉토리 특성을 사용하여 외부 CTest 스크립트를 통해 사용자 정의 컨텐츠를 제공 할 수 있습니다 . 발견 된 테스트 세트는 &lt;code&gt;&amp;lt;target&amp;gt;_TESTS&lt;/code&gt; 변수 를 통해 해당 스크립트에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="287151e3bdc9abf40d9f662c0a254d44157eccec" translate="yes" xml:space="preserve">
          <source>Additionally, some features call for additional defines, such as the &lt;code&gt;cxx_final&lt;/code&gt; and &lt;code&gt;cxx_override&lt;/code&gt; features. Rather than being used in &lt;code&gt;#ifdef&lt;/code&gt; code, the &lt;code&gt;final&lt;/code&gt; keyword is abstracted by a symbol which is defined to either &lt;code&gt;final&lt;/code&gt;, a compiler-specific equivalent, or to empty. That way, C++ code can be written to unconditionally use the symbol, and compiler support determines what it is expanded to:</source>
          <target state="translated">또한 일부 기능은 &lt;code&gt;cxx_final&lt;/code&gt; 및 &lt;code&gt;cxx_override&lt;/code&gt; 기능 과 같은 추가 정의를 요구 합니다. &lt;code&gt;#ifdef&lt;/code&gt; 코드 에서 사용되는 대신 &lt;code&gt;final&lt;/code&gt; 키워드는 &lt;code&gt;final&lt;/code&gt; , 컴파일러 관련 항목 또는 비어 있는 것으로 정의 된 기호로 추상화됩니다 . 이렇게하면 C ++ 코드를 작성하여 무조건 기호를 사용할 수 있으며 컴파일러 지원에 따라 확장 대상이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="f2a38d133b43725f27cd816455f8408b98d89e3a" translate="yes" xml:space="preserve">
          <source>Additionally, the first JSON document outputted contains the &lt;code&gt;version&lt;/code&gt; key for the current major and minor version of the</source>
          <target state="translated">또한 출력 된 첫 번째 JSON 문서에는 현재 주 및 부 버전의 &lt;code&gt;version&lt;/code&gt; 키 가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9004d5f8534b1dc8b853d00c39cb5e98a518ab89" translate="yes" xml:space="preserve">
          <source>Additionally, the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target is being provided:</source>
          <target state="translated">또한 다음과 같은 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1e4552c98ca0accdd129c8f7ee956a761967ab63" translate="yes" xml:space="preserve">
          <source>Additionally, the following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are defined:</source>
          <target state="translated">또한 다음과 같은 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b4054836dfba1f5873cc9df72605b7751a953d63" translate="yes" xml:space="preserve">
          <source>Additionally, the following control variable is available to change search behavior:</source>
          <target state="translated">또한 다음 제어 변수를 사용하여 검색 동작을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e24aeb12c1a2b83978cf0dcec4eaea92d96fa49" translate="yes" xml:space="preserve">
          <source>Additionally, the following two variables are set (but not required for using xslt):</source>
          <target state="translated">또한 다음 두 변수가 설정됩니다 (xslt 사용에는 필요하지 않음).</target>
        </trans-unit>
        <trans-unit id="c170ba18ae53bfab1e82cf571801d0c3acd5ad5b" translate="yes" xml:space="preserve">
          <source>Additionally, the module provides &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets:</source>
          <target state="translated">또한이 모듈은 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="62853379a936424e04769300cf3f586bc8f11f5d" translate="yes" xml:space="preserve">
          <source>Adds a Matlab MEX target. This commands compiles the given sources with the current tool-chain in order to produce a MEX file. The final name of the produced output may be specified, as well as additional link libraries, and a documentation entry for the MEX file. Remaining arguments of the call are passed to the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Matlab MEX 대상을 추가합니다. 이 명령은 MEX 파일을 생성하기 위해 현재 툴 체인으로 지정된 소스를 컴파일합니다. 생성 된 출력의 최종 이름, 추가 링크 라이브러리 및 MEX 파일의 문서 항목을 지정할 수 있습니다. 호출의 나머지 인수는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 또는 add_ executable &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 명령으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="052332c8f6d9980d3ab91aae4d1f8cbe7ccc1642" translate="yes" xml:space="preserve">
          <source>Adds a Matlab unit test to the test set of cmake/ctest. This command requires the component &lt;code&gt;MAIN_PROGRAM&lt;/code&gt; and hence is not available for an MCR installation.</source>
          <target state="translated">cmake / ctest의 테스트 세트에 Matlab 단위 테스트를 추가합니다. 이 명령에는 &lt;code&gt;MAIN_PROGRAM&lt;/code&gt; 구성 요소가 필요 하므로 MCR 설치에 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="55890b1a66b5911d00f6e0cec4fc356c5a62554f" translate="yes" xml:space="preserve">
          <source>Adds a library target called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; to be built from the source files listed in the command invocation. (The source files can be omitted here if they are added later using &lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;.) The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; corresponds to the logical target name and must be globally unique within a project. The actual file name of the library built is constructed based on conventions of the native platform (such as &lt;code&gt;lib&amp;lt;name&amp;gt;.a&lt;/code&gt; or &lt;code&gt;&amp;lt;name&amp;gt;.lib&lt;/code&gt;).</source>
          <target state="translated">명령 호출에 나열된 소스 파일에서 빌드 할 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 이라는 라이브러리 대상을 추가합니다 . (소스 파일은 나중에 &lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt; 사용하여 추가하는 경우 생략 할 수 있습니다 .) &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 은 논리적 대상 이름에 해당하며 프로젝트 내에서 전역 적으로 고유해야합니다. 빌드 된 라이브러리의 실제 파일 이름은 기본 플랫폼 규칙 (예 : &lt;code&gt;lib&amp;lt;name&amp;gt;.a&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;name&amp;gt;.lib&lt;/code&gt; )을 기반으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="886126ee517b813bde95c06a6e7bfaf06e1d6962" translate="yes" xml:space="preserve">
          <source>Adds a subdirectory to the build. The source_dir specifies the directory in which the source CMakeLists.txt and code files are located. If it is a relative path it will be evaluated with respect to the current directory (the typical usage), but it may also be an absolute path. The &lt;code&gt;binary_dir&lt;/code&gt; specifies the directory in which to place the output files. If it is a relative path it will be evaluated with respect to the current output directory, but it may also be an absolute path. If &lt;code&gt;binary_dir&lt;/code&gt; is not specified, the value of &lt;code&gt;source_dir&lt;/code&gt;, before expanding any relative path, will be used (the typical usage). The CMakeLists.txt file in the specified source directory will be processed immediately by CMake before processing in the current input file continues beyond this command.</source>
          <target state="translated">빌드에 서브 디렉토리를 추가합니다. source_dir은 소스 CMakeLists.txt 및 코드 파일이있는 디렉토리를 지정합니다. 상대 경로 인 경우 현재 디렉토리 (일반적인 사용법)와 관련하여 평가되지만 절대 경로 일 수도 있습니다. &lt;code&gt;binary_dir&lt;/code&gt; 는 출력 파일을 배치 할 디렉토리를 지정합니다. 상대 경로 인 경우 현재 출력 디렉토리와 관련하여 평가되지만 절대 경로 일 수도 있습니다. 경우 &lt;code&gt;binary_dir&lt;/code&gt; 이 지정되지 않은,의 값 &lt;code&gt;source_dir&lt;/code&gt; 상대 경로를 확장하기 전에가 사용됩니다 (일반적인 사용법). 지정된 소스 디렉토리의 CMakeLists.txt 파일은 현재 입력 파일에서의 처리가이 명령을 넘어 서기 전에 CMake에 의해 즉시 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9fb42a3aac1fb3e2119928540ffbba7b030d2056" translate="yes" xml:space="preserve">
          <source>Adds a target with the given name that executes the given commands. The target has no output file and is &lt;em&gt;always considered out of date&lt;/em&gt; even if the commands try to create a file with the name of the target. Use the &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command to generate a file with dependencies. By default nothing depends on the custom target. Use the &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; command to add dependencies to or from other targets.</source>
          <target state="translated">주어진 이름으로 주어진 명령을 실행하는 대상을 추가합니다. 대상은 출력 파일이 없으며 명령이 대상 이름으로 파일을 작성하려고 시도하더라도 &lt;em&gt;항상 오래된 것으로 간주됩니다&lt;/em&gt; . &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 종속성이있는 파일을 생성하십시오. 기본적으로 사용자 정의 대상에 의존하는 것은 없습니다. &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 다른 대상과의 종속성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="da9ed824182d3c6b806b5f9243c9bfb3313b2c3a" translate="yes" xml:space="preserve">
          <source>Adds a test called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. The test name may contain arbitrary characters, expressed as a &lt;a href=&quot;../manual/cmake-language.7#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt; or &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; if necessary. See policy &lt;a href=&quot;../policy/cmp0110#policy:CMP0110&quot; id=&quot;index-0-policy:CMP0110&quot;&gt;&lt;code&gt;CMP0110&lt;/code&gt;&lt;/a&gt;. The options are:</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 이라는 테스트를 추가합니다 . 테스트 이름은 필요한 경우 &lt;a href=&quot;../manual/cmake-language.7#quoted-argument&quot;&gt;인용 인수&lt;/a&gt; 또는 &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;대괄호 인수&lt;/a&gt; 로 표현되는 임의의 문자를 포함 할 수 있습니다 . 정책 &lt;a href=&quot;../policy/cmp0110#policy:CMP0110&quot; id=&quot;index-0-policy:CMP0110&quot;&gt; &lt;code&gt;CMP0110&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 . 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="14cabb0ad777c6abd1bd280a0e4a3ba4175ba535" translate="yes" xml:space="preserve">
          <source>Adds a test called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. The test name may not contain spaces, quotes, or other characters special in CMake syntax. The options are:</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 이라는 테스트를 추가합니다 . 테스트 이름에는 공백, 따옴표 또는 CMake 구문에 특수 문자가 포함될 수 없습니다. 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7810dfe956b9edc839f97ad505b033c7a53db79a" translate="yes" xml:space="preserve">
          <source>Adds an executable target called &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; to be built from the source files listed in the command invocation. (The source files can be omitted here if they are added later using &lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;.) The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; corresponds to the logical target name and must be globally unique within a project. The actual file name of the executable built is constructed based on conventions of the native platform (such as &lt;code&gt;&amp;lt;name&amp;gt;.exe&lt;/code&gt; or just &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">명령 호출에 나열된 소스 파일에서 빌드 할 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 이라는 실행 가능 대상을 추가합니다 . (소스 파일은 나중에 &lt;a href=&quot;target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt; 사용하여 추가하는 경우 생략 될 수 있습니다 .) &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 은 논리적 대상 이름에 해당하며 프로젝트 내에서 전역 적으로 고유해야합니다. 빌드 된 실행 파일의 실제 파일 이름은 기본 플랫폼 규칙 (예 : &lt;code&gt;&amp;lt;name&amp;gt;.exe&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; )을 기반으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="98fbf1a7a97e76f421a1f240316eafa6f02f34a4" translate="yes" xml:space="preserve">
          <source>Adds definitions to the compiler command line for targets in the current directory and below (whether added before or after this command is invoked). This command can be used to add any flags, but it is intended to add preprocessor definitions.</source>
          <target state="translated">현재 디렉토리와 그 아래에있는 대상에 대한 컴파일러 명령 줄에 정의를 추가합니다 (이 명령이 호출되기 전 또는 후에 추가되었는지 여부). 이 명령은 플래그를 추가하는 데 사용할 수 있지만 전 처리기 정의를 추가하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="185e590c5a571d9d28b3a77f5c99c7f142a19fd3" translate="yes" xml:space="preserve">
          <source>Adds definitions to the compiler command line for targets in the current directory, whether added before or after this command is invoked, and for the ones in sub-directories added after. This command can be used to add any flags, but it is intended to add preprocessor definitions.</source>
          <target state="translated">이 명령이 호출되기 전이나 후에 추가되었는지 여부에 관계없이 현재 디렉터리의 대상과 그 뒤에 추가 된 하위 디렉터리의 대상에 대한 정의를 컴파일러 명령 줄에 추가합니다. 이 명령은 플래그를 추가하는 데 사용할 수 있지만 전 처리기 정의를 추가하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="3fe626a237ac72b810bd0e8a7a57cdcc83029dbb" translate="yes" xml:space="preserve">
          <source>Adds one .NET reference to generated Visual Studio project. The reference will have the name &lt;code&gt;&amp;lt;refname&amp;gt;&lt;/code&gt; and will point to the assembly given as value of the property.</source>
          <target state="translated">생성 된 Visual Studio 프로젝트에 하나의 .NET 참조를 추가합니다. 참조의 이름은 &lt;code&gt;&amp;lt;refname&amp;gt;&lt;/code&gt; 이며 속성 값으로 지정된 어셈블리를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="6eef6e66e6410d2461f88660e6aee360a2b62512" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited .NET references to a generated Visual Studio project. For example, &amp;ldquo;System;System.Windows.Forms&amp;rdquo;.</source>
          <target state="translated">생성 된 Visual Studio 프로젝트에 하나 이상의 세미콜론으로 구분 된 .NET 참조를 추가합니다. 예를 들어 &quot;System; System.Windows.Forms&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="77b41f64fb6699a3575404572f19b5c6ee9afc0b" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited WinRT references to a generated Visual Studio project. For example, &amp;ldquo;Windows;Windows.UI.Core&amp;rdquo;.</source>
          <target state="translated">하나 이상의 세미콜론으로 구분 된 WinRT 참조를 생성 된 Visual Studio 프로젝트에 추가합니다. 예를 들어 &quot;Windows; Windows.UI.Core&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="a3f3e5124c79a20b4da2e2c10b1ebefea5b5b64f" translate="yes" xml:space="preserve">
          <source>Adds one or more semicolon-delimited package references to a generated Visual Studio project. The version of the package will be underscore delimited. For example, &lt;code&gt;boost_1.7.0;nunit_3.12.*&lt;/code&gt;.</source>
          <target state="translated">하나 이상의 세미콜론으로 구분 된 패키지 참조를 생성 된 Visual Studio 프로젝트에 추가합니다. 패키지 버전은 밑줄로 구분됩니다. 예를 들어 &lt;code&gt;boost_1.7.0;nunit_3.12.*&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="262abdeb50d3d6cbfd05c7bc1a9c9bc27c981412" translate="yes" xml:space="preserve">
          <source>Adds options to the &lt;a href=&quot;../prop_dir/compile_options#prop_dir:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_dir:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; directory property. These options are used when compiling targets from the current directory and below.</source>
          <target state="translated">&lt;a href=&quot;../prop_dir/compile_options#prop_dir:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_dir:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 디렉토리 특성에 옵션을 추가합니다 . 이 옵션은 현재 디렉토리와 그 아래에서 대상을 컴파일 할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="11b04df5e11297e681be68f271727f8683189380" translate="yes" xml:space="preserve">
          <source>Adds options to the &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties. These options are used when compiling the given &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, which must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성에 옵션을 추가합니다 . 이러한 옵션은 소정의 컴파일시 이용되는 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 과 같은 명령에 의해 생성되어 있어야하는 &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 및 아니어야 &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS 타겟&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="222a9dba05a6e66bdec939af7358ad42d4f5bc9e" translate="yes" xml:space="preserve">
          <source>Adds preprocessor definitions to the compiler command line for targets in the current directory and below (whether added before or after this command is invoked). See documentation of the &lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; properties.</source>
          <target state="translated">현재 디렉토리와 그 아래에있는 대상의 컴파일러 명령 행에 프리 프로세서 정의를 추가합니다 (이 명령이 호출되기 전 또는 후에 추가되는지 여부). &lt;a href=&quot;../prop_dir/compile_definitions#prop_dir:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_dir:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;directory&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; 특성의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5136493f2327d2d2695df5433fca5dd0a70976a7" translate="yes" xml:space="preserve">
          <source>Adds preprocessor definitions to the compiler command line.</source>
          <target state="translated">컴파일러 명령 줄에 전 처리기 정의를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4d3fbeaeb95cb721108cdfa6420f351bcb9a2625" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;#command:configure_package_config_file&quot; id=&quot;index-0-command:configure_package_config_file&quot;&gt;&lt;code&gt;configure_package_config_file()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#command:write_basic_package_version_file&quot; id=&quot;index-0-command:write_basic_package_version_file&quot;&gt;&lt;code&gt;write_basic_package_version_file()&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">&lt;a href=&quot;#command:configure_package_config_file&quot; id=&quot;index-0-command:configure_package_config_file&quot;&gt; &lt;code&gt;configure_package_config_file()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#command:write_basic_package_version_file&quot; id=&quot;index-0-command:write_basic_package_version_file&quot;&gt; &lt;code&gt;write_basic_package_version_file()&lt;/code&gt; &lt;/a&gt; 명령을 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="4f5ddec668b81cc7c6ecd7e3b0ba748121d08f14" translate="yes" xml:space="preserve">
          <source>Adds the given &lt;code&gt;&amp;lt;files&amp;gt;&lt;/code&gt; to the dependencies of file &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;&amp;lt;files&amp;gt;&lt;/code&gt; 를 &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; 파일의 종속성에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="677ad7a582094f6a9e339623b178efcba85314be" translate="yes" xml:space="preserve">
          <source>Adds the paths in which the linker should search for libraries. Relative paths given to this command are interpreted as relative to the current source directory, see &lt;a href=&quot;../policy/cmp0015#policy:CMP0015&quot; id=&quot;index-0-policy:CMP0015&quot;&gt;&lt;code&gt;CMP0015&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">링커가 라이브러리를 검색해야하는 경로를 추가합니다. 이 명령에 제공된 상대 경로는 현재 소스 디렉토리를 기준으로 해석됩니다 ( &lt;a href=&quot;../policy/cmp0015#policy:CMP0015&quot; id=&quot;index-0-policy:CMP0015&quot;&gt; &lt;code&gt;CMP0015&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="c085c8b3596eb01cac0cff43589ff629559f532f" translate="yes" xml:space="preserve">
          <source>Adds to a generated Visual Studio project one or more semicolon-delimited paths to .props files needed when building projects from some NuGet packages. For example, &lt;code&gt;my_packages_path/MyPackage.1.0.0/build/MyPackage.props&lt;/code&gt;.</source>
          <target state="translated">일부 NuGet 패키지에서 프로젝트를 빌드 할 때 필요한 하나 이상의 세미콜론으로 구분 된 .props 파일 경로를 생성 된 Visual Studio 프로젝트에 추가합니다. 예를 들어, &lt;code&gt;my_packages_path/MyPackage.1.0.0/build/MyPackage.props&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d1a066748b0b9bfbeb968ee66771fa8729304f79" translate="yes" xml:space="preserve">
          <source>Advanced variables for using MPI</source>
          <target state="translated">MPI 사용을위한 고급 변수</target>
        </trans-unit>
        <trans-unit id="794976583ba61204e7a2b82a37a2cb9a94549ca9" translate="yes" xml:space="preserve">
          <source>After explicit expansion of variables this gives:</source>
          <target state="translated">변수를 명시 적으로 확장 한 후에는 다음을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="30a35191d1e40fea2bed634b0d98f17ff9828403" translate="yes" xml:space="preserve">
          <source>After generating a buildsystem one may use the corresponding native build tool to build the project. For example, after using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator one may run &lt;code&gt;make&lt;/code&gt; directly:</source>
          <target state="translated">빌드 시스템을 생성 한 후 해당 네이티브 빌드 도구를 사용하여 프로젝트를 빌드 할 수 있습니다. 예를 들어 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt; 생성기를 사용한 후 &lt;code&gt;make&lt;/code&gt; 를 직접 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e55137fd38f6fe644ec5740f709347ef3324020" translate="yes" xml:space="preserve">
          <source>After generating a buildsystem one may use the corresponding native build tool to build the project. For example, after using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt;&lt;code&gt;Unix Makefiles&lt;/code&gt;&lt;/a&gt; generator one may run &lt;code&gt;make&lt;/code&gt; directly:</source>
          <target state="translated">빌드 시스템을 생성 한 후 해당 네이티브 빌드 도구를 사용하여 프로젝트를 빌드 할 수 있습니다. 예를 들어, &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Unix%20Makefiles.html#generator:Unix%20Makefiles&quot; id=&quot;index-0-generator:Unix Makefiles&quot;&gt; &lt;code&gt;Unix Makefiles&lt;/code&gt; &lt;/a&gt; 생성기를 사용한 후 &lt;code&gt;make&lt;/code&gt; 를 직접 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d37fca60264c2c088d1204a7c7a7bac0804532d1" translate="yes" xml:space="preserve">
          <source>After generating the buildsystem, the software can be built by invoking the particular build tool. In the case of the IDE generators, this can involve loading the generated project file into the IDE to invoke the build.</source>
          <target state="translated">빌드 시스템을 생성 한 후 특정 빌드 도구를 호출하여 소프트웨어를 빌드 할 수 있습니다. IDE 생성기의 경우 생성 된 프로젝트 파일을 IDE로로드하여 빌드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5065237c7565f029b33a43eed6e2f11712a15e15" translate="yes" xml:space="preserve">
          <source>After generating this tar file, it can be sent to CDash for display with the &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit(CDASH_UPLOAD)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 tar 파일을 생성 한 후 &lt;a href=&quot;../command/ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit(CDASH_UPLOAD)&lt;/code&gt; &lt;/a&gt; 명령으로 표시하기 위해 CDash로 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01fd8452612104083426e405de5044f03b77f45b" translate="yes" xml:space="preserve">
          <source>After making these updates, go ahead and build the project again. Run the built Tutorial executable and verify that the results are same as earlier in this step.</source>
          <target state="translated">이러한 업데이트를 수행 한 후 계속해서 프로젝트를 다시 빌드하십시오. 빌드 된 Tutorial 실행 파일을 실행하고 결과가이 단계의 앞부분과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="aec62611ea34fa3d13d73b4769490a8f5a369751" translate="yes" xml:space="preserve">
          <source>After making this update, go ahead and build the project again and run the built Tutorial executable. If &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; are still not being used, open the generated &lt;code&gt;TutorialConfig.h&lt;/code&gt; file from the build directory. Maybe they aren&amp;rsquo;t available on the current system?</source>
          <target state="translated">이 업데이트를 수행 한 후 프로젝트를 다시 빌드하고 빌드 된 Tutorial 실행 파일을 실행하십시오. 경우 &lt;code&gt;log&lt;/code&gt; 및 &lt;code&gt;exp&lt;/code&gt; 아직 사용하지 않는, 생성 된 열 &lt;code&gt;TutorialConfig.h&lt;/code&gt; 의 빌드 디렉토리에서 파일을. 현재 시스템에서는 사용할 수 없습니까?</target>
        </trans-unit>
        <trans-unit id="d7175cd7ea9a822289a68ea3b0fba7aeb9cae5f9" translate="yes" xml:space="preserve">
          <source>After reading the reply index file, clients may read the other &lt;a href=&quot;#v1-reply-files&quot;&gt;v1 Reply Files&lt;/a&gt; it references.</source>
          <target state="translated">응답 색인 파일을 읽은 후 클라이언트는 참조 하는 다른 &lt;a href=&quot;#v1-reply-files&quot;&gt;v1 응답 파일을&lt;/a&gt; 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ea816e3c4370f4d4ffad7a3543faa646f94d047" translate="yes" xml:space="preserve">
          <source>After reviewing the file, we can see that the table is produced as valid C++ code and that the output filename is passed in as an argument.</source>
          <target state="translated">파일을 검토 한 후 테이블이 유효한 C ++ 코드로 생성되고 출력 파일 이름이 인수로 전달되었음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6c152fc5bb3cc8642ec5d38688f4ae373c53f64" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;cmake_parse_arguments&lt;/code&gt; call the macro will have set or undefined the following variables:</source>
          <target state="translated">애프터 &lt;code&gt;cmake_parse_arguments&lt;/code&gt; 이 전화 매크로 설정하거나 다음 변수를 정의되지 않은 것이다 :</target>
        </trans-unit>
        <trans-unit id="8a36a7fdbcc638d14145c1815498e65a4a2109a0" translate="yes" xml:space="preserve">
          <source>After the first line the link interface has not been set explicitly so CMake would use the link implementation, A, as the link interface. However, the second line sets the link interface to empty. In order to avoid this subtle behavior CMake now prefers to disallow mixing the plain and keyword signatures of &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; for a single target.</source>
          <target state="translated">첫 번째 라인 이후 링크 인터페이스가 명시 적으로 설정되지 않았으므로 CMake는 링크 구현 A를 링크 인터페이스로 사용합니다. 그러나 두 번째 줄은 링크 인터페이스를 비 웁니다. 이 미묘한 동작을 피하기 위해 CMake는 이제 단일 대상에 대해 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 의 일반 및 키워드 서명을 혼합하는 것을 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b83a4efbe7fe2d020517ad2e24b07bec01259401" translate="yes" xml:space="preserve">
          <source>After the specified number of seconds (fractions allowed), all unfinished child processes will be terminated, and the &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; will be set to a string mentioning the &amp;ldquo;timeout&amp;rdquo;.</source>
          <target state="translated">지정된 시간 (분수 허용)이 지나면 완료되지 않은 모든 자식 프로세스가 종료되고 &lt;code&gt;RESULT_VARIABLE&lt;/code&gt; 은 &quot;timeout&quot;을 언급하는 문자열로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1dbbae50f34fdf35522f8a2580e6d5692917a6c3" translate="yes" xml:space="preserve">
          <source>Aggregate default initializers, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3605.html&quot;&gt;N3605&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3605.html&quot;&gt;N3605에&lt;/a&gt; 정의 된대로 기본 이니셜 라이저를 집계 하십시오 .</target>
        </trans-unit>
        <trans-unit id="51b6bccf889ac572557f307bf25be60611b0ee84" translate="yes" xml:space="preserve">
          <source>Alias Executables</source>
          <target state="translated">별칭 실행 파일</target>
        </trans-unit>
        <trans-unit id="55df34e0cfadae187a73cdd3ecb21e5b7374c918" translate="yes" xml:space="preserve">
          <source>Alias Libraries</source>
          <target state="translated">별명 라이브러리</target>
        </trans-unit>
        <trans-unit id="8a660b70b006272be9726820b54d762351abcca1" translate="yes" xml:space="preserve">
          <source>Alias Targets</source>
          <target state="translated">별칭 대상</target>
        </trans-unit>
        <trans-unit id="45a57e25de350417d61b4bf488f9e37beab15d06" translate="yes" xml:space="preserve">
          <source>Alignment control &lt;code&gt;alignas&lt;/code&gt;, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341&lt;/a&gt;.</source>
          <target state="translated">배향 제어 &lt;code&gt;alignas&lt;/code&gt; 에 정의 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0b0c3ec1c55e39f61e26bc1c5cf091efb6956e2" translate="yes" xml:space="preserve">
          <source>Alignment control &lt;code&gt;alignof&lt;/code&gt;, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341&lt;/a&gt;.</source>
          <target state="translated">배향 제어 &lt;code&gt;alignof&lt;/code&gt; 에 정의 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2341.pdf&quot;&gt;N2341&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3adee3017389deec5eb323a3da9812ff36639ab" translate="yes" xml:space="preserve">
          <source>All 4 options shown above are not sufficient, since the first 3 hardcode the absolute directory locations, and the 4th case works only if the logic to determine the &lt;code&gt;installedPrefix&lt;/code&gt; is correct, and if &lt;code&gt;CONFIG_INSTALL_DIR&lt;/code&gt; contains a relative path, which in general cannot be guaranteed. This has the effect that the resulting &lt;code&gt;FooConfig.cmake&lt;/code&gt; file would work poorly under Windows and OSX, where users are used to choose the install location of a binary package at install time, independent from how &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; was set at build/cmake time.</source>
          <target state="translated">첫 번째 3 개는 절대 디렉토리 위치를 하드 코딩하고 4 번째 경우는 &lt;code&gt;installedPrefix&lt;/code&gt; 를 결정하는 논리 가 올 바르고 &lt;code&gt;CONFIG_INSTALL_DIR&lt;/code&gt; 에 상대 경로가 포함되어있는 경우 에만 작동하므로 위에 표시된 4 가지 옵션만으로는 충분 하지 않습니다. 이는 Windows 및 OSX 에서 결과 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 파일이 제대로 작동하지 않는데 , 사용자가 빌드 / cmake 시간에 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 를 설정 한 방법과 관계없이 설치시 이진 패키지의 설치 위치를 선택하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c98e9fb9b04fb1adcae5e6fea55a14534a79c62" translate="yes" xml:space="preserve">
          <source>All OpenSSL libraries and their dependencies.</source>
          <target state="translated">모든 OpenSSL 라이브러리 및 해당 종속성.</target>
        </trans-unit>
        <trans-unit id="b2446498180cec0c65b3ff48af828f1624f711b3" translate="yes" xml:space="preserve">
          <source>All OpenSSL libraries.</source>
          <target state="translated">모든 OpenSSL 라이브러리</target>
        </trans-unit>
        <trans-unit id="df127d50ea8890b3dd5654bdbd83ce22b8fef4f0" translate="yes" xml:space="preserve">
          <source>All arguments to the commands will be escaped properly for the build tool so that the invoked command receives each argument unchanged. Note that one level of escapes is still used by the CMake language processor before &lt;code&gt;add_custom_target&lt;/code&gt; even sees the arguments. Use of &lt;code&gt;VERBATIM&lt;/code&gt; is recommended as it enables correct behavior. When &lt;code&gt;VERBATIM&lt;/code&gt; is not given the behavior is platform specific because there is no protection of tool-specific special characters.</source>
          <target state="translated">호출 된 명령이 변경되지 않은 각 인수를 수신하도록 빌드 도구에 대해 명령에 대한 모든 인수가 올바르게 이스케이프됩니다. &lt;code&gt;add_custom_target&lt;/code&gt; 이 인수를보기 전에 CMake 언어 프로세서는 여전히 한 수준의 이스케이프를 사용합니다 . 올바른 동작이 가능하도록 &lt;code&gt;VERBATIM&lt;/code&gt; 을 사용하는 것이 좋습니다. 때 &lt;code&gt;VERBATIM&lt;/code&gt; 동작을 주어지지 도구 고유의 특수 문자를 더 보호가 없기 때문에 플랫폼 고유의 것입니다.</target>
        </trans-unit>
        <trans-unit id="b1f5b4118e8666688a413afc7d5fc4ddee79e731" translate="yes" xml:space="preserve">
          <source>All arguments to the commands will be escaped properly for the build tool so that the invoked command receives each argument unchanged. Note that one level of escapes is still used by the CMake language processor before add_custom_command even sees the arguments. Use of &lt;code&gt;VERBATIM&lt;/code&gt; is recommended as it enables correct behavior. When &lt;code&gt;VERBATIM&lt;/code&gt; is not given the behavior is platform specific because there is no protection of tool-specific special characters.</source>
          <target state="translated">호출 된 명령이 변경되지 않은 각 인수를 수신하도록 빌드 도구에 대해 명령에 대한 모든 인수가 올바르게 이스케이프됩니다. add_custom_command가 인수를보기 전에 CMake 언어 프로세서는 여전히 한 수준의 이스케이프를 사용합니다. 올바른 동작이 가능하도록 &lt;code&gt;VERBATIM&lt;/code&gt; 을 사용하는 것이 좋습니다. 때 &lt;code&gt;VERBATIM&lt;/code&gt; 동작을 주어지지 도구 고유의 특수 문자를 더 보호가 없기 때문에 플랫폼 고유의 것입니다.</target>
        </trans-unit>
        <trans-unit id="a3ae802d9d377a347888d442f6baaf9e3a7f6c4c" translate="yes" xml:space="preserve">
          <source>All but &lt;code&gt;&amp;lt;XXX&amp;gt;_FOUND&lt;/code&gt; may be a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; if the associated variable returned from &lt;code&gt;pkg-config&lt;/code&gt; has multiple values.</source>
          <target state="translated">&lt;code&gt;pkg-config&lt;/code&gt; 에서 반환 된 관련 변수에 여러 값이있는 경우 &lt;code&gt;&amp;lt;XXX&amp;gt;_FOUND&lt;/code&gt; 를 제외한 모두 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;- &lt;/a&gt;목록 이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9a8ef04137eae0e2ab1d80d18a52bac8b647601" translate="yes" xml:space="preserve">
          <source>All commands between while and the matching &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-0-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; are recorded without being invoked. Once the &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-1-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; is evaluated, the recorded list of commands is invoked as long as the &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; is true.</source>
          <target state="translated">while과 일치하는 &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-0-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt; 사이의 모든 명령 은 호출되지 않고 기록됩니다. 한 번 &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-1-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt; 평가, 명령의 기록 목록은만큼 호출 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 사실이다.</target>
        </trans-unit>
        <trans-unit id="ede70fa5e7029c04b031e77cf0592ec5a2dae27e" translate="yes" xml:space="preserve">
          <source>All configuration files which have been considered by CMake while searching for an installation of the package with an appropriate version are stored in the cmake variable &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_CONFIGS&lt;/code&gt;, the associated versions in &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_VERSIONS&lt;/code&gt;.</source>
          <target state="translated">적절한 버전의 패키지의 설치를 검색하는 동안 CMake 의해 고려 된 모든 구성 파일은 cmake 변수에 저장된 &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_CONFIGS&lt;/code&gt; 에 연관된 버전 &lt;code&gt;&amp;lt;PackageName&amp;gt;_CONSIDERED_VERSIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9bb496766a875414e2a2806d3dca2fcdfcad71b" translate="yes" xml:space="preserve">
          <source>All file names are either relative to the top level source directory or absolute.</source>
          <target state="translated">모든 파일 이름은 최상위 소스 디렉토리에 상대적이거나 절대적입니다.</target>
        </trans-unit>
        <trans-unit id="5552187a5c2b142971365571f95a21109c54a946" translate="yes" xml:space="preserve">
          <source>All file paths in the fileGroup are either absolute or relative to the sourceDirectory of the target.</source>
          <target state="translated">fileGroup의 모든 파일 경로는 대상의 sourceDirectory에 대해 절대적이거나 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="895880ded8e5d79644cae93be527ac1d925b2464" translate="yes" xml:space="preserve">
          <source>All files generated by bison including the source, the header and the report</source>
          <target state="translated">소스, 헤더 및 보고서를 포함하여 들소에 의해 생성 된 모든 파일</target>
        </trans-unit>
        <trans-unit id="aad56595df4c7a6ddd2fe9ca568dc7708a61fdff" translate="yes" xml:space="preserve">
          <source>All generators available on the command line are also available in &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명령 줄에서 사용할 수있는 모든 생성기는 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-3-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 에서도 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6d43dc2aa0c08232530dc0901c1761d16c4a3bd" translate="yes" xml:space="preserve">
          <source>All header files in the target&amp;rsquo;s sources are added to the scan list.</source>
          <target state="translated">대상 소스의 모든 헤더 파일이 스캔 목록에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="21e84a7532a1370ed8c0e9890416661f72c407ce" translate="yes" xml:space="preserve">
          <source>All imported targets</source>
          <target state="translated">가져온 모든 대상</target>
        </trans-unit>
        <trans-unit id="394f5e70872122de4ec1d182e37430993e9b420e" translate="yes" xml:space="preserve">
          <source>All include directories</source>
          <target state="translated">모두 포함 디렉토리</target>
        </trans-unit>
        <trans-unit id="631fd71e8d386f87cb0b4f7548e86c4e804527f6" translate="yes" xml:space="preserve">
          <source>All information is collected from the &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;, so the version to be found can be changed from the command line by means of setting &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;</source>
          <target state="translated">모든 정보는 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 에서 수집 되므로 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 을 설정하여 명령 행에서 찾을 버전을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e652712e47b1c9bf86c21ba98d3e7d7528b1d7" translate="yes" xml:space="preserve">
          <source>All information is collected from the &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;, so the version to be found can be changed from the command line by means of setting &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt;.</source>
          <target state="translated">모든 정보는 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 에서 수집 되므로 &lt;code&gt;SWIG_EXECUTABLE&lt;/code&gt; 설정을 통해 명령 줄에서 찾을 버전을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df44bd8908c5d4bc2f284160b13be3566c11e425" translate="yes" xml:space="preserve">
          <source>All items are changed.</source>
          <target state="translated">모든 항목이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="e5dabf90649a96996ffa9e979672ee38e7efa030" translate="yes" xml:space="preserve">
          <source>All keywords shall be unique. I.e. every keyword shall only be specified once in either &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt;. A warning will be emitted if uniqueness is violated.</source>
          <target state="translated">모든 키워드는 고유해야합니다. 즉, 모든 키워드는 &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; 에 한 번만 지정해야합니다 . 고유성을 위반하면 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a29788c058670d8ab0b9697ccadd61773f1af766" translate="yes" xml:space="preserve">
          <source>All libraries</source>
          <target state="translated">모든 도서관</target>
        </trans-unit>
        <trans-unit id="98653ad982e348fff38a7135aab79d1bb29b38af" translate="yes" xml:space="preserve">
          <source>All libraries to link MPI programs against.</source>
          <target state="translated">MPI 프로그램을 연결할 모든 라이브러리.</target>
        </trans-unit>
        <trans-unit id="ab069b60cf1415114e44de07f8efd50f7db47f2c" translate="yes" xml:space="preserve">
          <source>All manuals are printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">모든 매뉴얼은 사람이 읽을 수있는 텍스트 형식으로 인쇄됩니다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="f1da3fe61c9076179679c70aa142e5dbc01e37fe" translate="yes" xml:space="preserve">
          <source>All messages need to have a &amp;ldquo;type&amp;rdquo; value, which identifies the type of message that is passed back or forth. E.g. the initial message sent by the server is of type &amp;ldquo;hello&amp;rdquo;. Messages without a type will generate an response of type &amp;ldquo;error&amp;rdquo;.</source>
          <target state="translated">모든 메시지에는 &quot;유형&quot;값이 있어야합니다.이 값은 앞뒤로 전달되는 메시지 유형을 식별합니다. 예를 들어 서버가 보낸 초기 메시지는 &quot;hello&quot;유형입니다. 유형이없는 메시지는 &quot;오류&quot;유형의 응답을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1dba9200b50f8b044a38a0829ae0aa51621a965f" translate="yes" xml:space="preserve">
          <source>All not included &lt;code&gt;moc&lt;/code&gt; output files will be included automatically by the CMake generated file</source>
          <target state="translated">포함되지 않은 모든 &lt;code&gt;moc&lt;/code&gt; 출력 파일은 CMake 생성 파일에 의해 자동으로 포함됩니다</target>
        </trans-unit>
        <trans-unit id="95b926b7e0f796bbb5a17b9989895aa55f93d0cd" translate="yes" xml:space="preserve">
          <source>All other settings will be changed.</source>
          <target state="translated">다른 모든 설정이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="5082d50fccf1811f2ae620939967891314be66b7" translate="yes" xml:space="preserve">
          <source>All paths must be absolute. Any artifact specified with a relative path will be ignored.</source>
          <target state="translated">모든 경로는 절대 경로 여야합니다. 상대 경로로 지정된 모든 이슈는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="fe19cdeadc3c18ccbbe2a424ade092402c2d2df0" translate="yes" xml:space="preserve">
          <source>All remaining arguments are collected in a variable &lt;code&gt;&amp;lt;prefix&amp;gt;_UNPARSED_ARGUMENTS&lt;/code&gt; that will be undefined if all arguments were recognized. This can be checked afterwards to see whether your macro was called with unrecognized parameters.</source>
          <target state="translated">나머지 모든 인수는 변수 &lt;code&gt;&amp;lt;prefix&amp;gt;_UNPARSED_ARGUMENTS&lt;/code&gt; 에 수집되며 모든 인수가 인식되면 정의되지 않습니다. 인식 할 수없는 매개 변수로 매크로가 호출되었는지 여부를 나중에 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c2d12d1a505edea9fb54a0990156c92c8f309af" translate="yes" xml:space="preserve">
          <source>All requests sent to the server may contain a &amp;ldquo;cookie&amp;rdquo; value. This value will he handed back unchanged in all responses triggered by the request.</source>
          <target state="translated">서버로 전송 된 모든 요청에는 &quot;쿠키&quot;값이 포함될 수 있습니다. 이 값은 요청에 의해 트리거 된 모든 응답에서 변경되지 않은 채로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="cd930eb8cd5d553acfa25d8425e52163f7ccbc33" translate="yes" xml:space="preserve">
          <source>All required population details are assumed to have been provided directly in the call to &lt;code&gt;FetchContent_Populate()&lt;/code&gt;. Any saved details for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; are ignored.</source>
          <target state="translated">필요한 모든 모집단 세부 사항은 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 호출에서 직접 제공되었다고 가정합니다 . &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 에 대한 저장된 세부 사항 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="25d20fccd6163581a4ee2ea505cb8c358ac4d4fb" translate="yes" xml:space="preserve">
          <source>All responses will contain a value &amp;ldquo;inReplyTo&amp;rdquo;, which may be empty in case of parse errors, but will contain the type of the request message in all other cases.</source>
          <target state="translated">모든 응답에는 &quot;inReplyTo&quot;값이 포함되며 구문 분석 오류의 경우 비어있을 수 있지만 다른 모든 경우에는 요청 메시지 유형이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2e47a4bc6e62a722e7f504c54ce973387f8d53ea" translate="yes" xml:space="preserve">
          <source>All supported generators are specified in the &lt;a href=&quot;cpack-generators.7#manual:cpack-generators(7)&quot; id=&quot;index-0-manual:cpack-generators(7)&quot;&gt;&lt;code&gt;cpack-generators&lt;/code&gt;&lt;/a&gt; manual. The command &lt;code&gt;cpack --help&lt;/code&gt; prints a list of generators supported for the target platform. Which of them are to be used can be selected through the &lt;a href=&quot;../module/cpack#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; variable or through the command-line option &lt;code&gt;-G&lt;/code&gt;.</source>
          <target state="translated">지원되는 모든 생성기는 &lt;a href=&quot;cpack-generators.7#manual:cpack-generators(7)&quot; id=&quot;index-0-manual:cpack-generators(7)&quot;&gt; &lt;code&gt;cpack-generators&lt;/code&gt; &lt;/a&gt; 매뉴얼에 지정되어 있습니다. &lt;code&gt;cpack --help&lt;/code&gt; 명령 은 대상 플랫폼에 지원되는 생성기 목록을 인쇄합니다. 사용할 &lt;a href=&quot;../module/cpack#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; &lt;/a&gt; 는 CPACK_GENERATOR 변수 또는 명령 행 옵션 &lt;code&gt;-G&lt;/code&gt; 를 통해 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b097860caa2fa9c498f8e06c826b8443a6b08fa" translate="yes" xml:space="preserve">
          <source>Allow a test &lt;code&gt;seconds&lt;/code&gt; to complete after &lt;code&gt;regex&lt;/code&gt; is encountered in its output.</source>
          <target state="translated">&lt;code&gt;regex&lt;/code&gt; 이 출력에 도달 한 후 테스트 &lt;code&gt;seconds&lt;/code&gt; 를 완료하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c93f696b08b132d4302b6344430167b70b87ea4" translate="yes" xml:space="preserve">
          <source>Allow duplicate custom targets to be created.</source>
          <target state="translated">중복 된 맞춤 타겟을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74047e4b8b2bb45d163b1f512f132f092c6d1219" translate="yes" xml:space="preserve">
          <source>Allow each test to run up to &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; times in order to pass. Repeats tests if they fail for any reason. This is useful in tolerating sporadic failures in test cases.</source>
          <target state="translated">통과하려면 각 테스트를 최대 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 번 실행하십시오 . 어떤 이유로 든 실패하면 테스트를 반복합니다. 이는 테스트 케이스에서 산발적 인 실패를 허용하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="22be125271dc75e6a5a1ddf7cd5621873176a532" translate="yes" xml:space="preserve">
          <source>Allow each test to run up to &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; times in order to pass. Repeats tests only if they timeout. This is useful in tolerating sporadic timeouts in test cases on busy machines.</source>
          <target state="translated">통과하려면 각 테스트를 최대 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 번 실행하십시오 . 시간이 초과 된 경우에만 테스트를 반복합니다. 이는 바쁜 시스템의 테스트 케이스에서 산발적 인 시간 초과를 허용하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="35701c868fe1fe3462974902851584332f12a8a6" translate="yes" xml:space="preserve">
          <source>Allows defining additional directories to search for include files</source>
          <target state="translated">포함 파일을 검색 할 추가 디렉토리를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbb86656c8694cbd43bf504ead428060b841002d" translate="yes" xml:space="preserve">
          <source>Allows the extraction part of the download step to be disabled by passing a boolean true value for this option. If this option is not given, the downloaded contents will be unpacked automatically if required. If extraction has been disabled, the full path to the downloaded file is available as &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; in subsequent steps or as the property &lt;code&gt;DOWNLOADED_FILE&lt;/code&gt; with the &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-1-command:externalproject_get_property&quot;&gt;&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 옵션에 부울 true 값을 전달하여 다운로드 단계의 추출 부분을 비활성화 할 수 있습니다. 이 옵션을 지정하지 않으면 필요한 경우 다운로드 한 내용이 자동으로 압축 해제됩니다. 추출이 비활성화 된 경우 다운로드 된 파일의 전체 경로 는 후속 단계에서 &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; 또는 &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-1-command:externalproject_get_property&quot;&gt; &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; &lt;/a&gt; 명령 을 통해 &lt;code&gt;DOWNLOADED_FILE&lt;/code&gt; 속성으로 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="a7f3b618462198231a694585e1a3cc76a53bdd55" translate="yes" xml:space="preserve">
          <source>Also defined, but not for general use are:</source>
          <target state="translated">다음과 같이 정의되었지만 일반적인 용도는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7e00681e461ac4c2a82dde6f90ab2096809df609" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;eclipse_extra_cproject_contents#prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot;&gt;&lt;code&gt;ECLIPSE_EXTRA_CPROJECT_CONTENTS&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;eclipse_extra_cproject_contents#prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_CPROJECT_CONTENTS&quot;&gt; &lt;code&gt;ECLIPSE_EXTRA_CPROJECT_CONTENTS&lt;/code&gt; &lt;/a&gt; 특성 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd04a6dbb2bddb321974f74fa55727e91fd48330" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;eclipse_extra_natures#prop_gbl:ECLIPSE_EXTRA_NATURES&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_NATURES&quot;&gt;&lt;code&gt;ECLIPSE_EXTRA_NATURES&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;eclipse_extra_natures#prop_gbl:ECLIPSE_EXTRA_NATURES&quot; id=&quot;index-0-prop_gbl:ECLIPSE_EXTRA_NATURES&quot;&gt; &lt;code&gt;ECLIPSE_EXTRA_NATURES&lt;/code&gt; &lt;/a&gt; 특성 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c914f3b6eb9c0d06cbd8a2fbe13ebe5eff0de46" translate="yes" xml:space="preserve">
          <source>Also sets the variables</source>
          <target state="translated">변수도 설정</target>
        </trans-unit>
        <trans-unit id="d0531d386f4bdb74387e5c7ad3c8e0aa92c04393" translate="yes" xml:space="preserve">
          <source>Also, change the id of the item being fixed up to its own &lt;code&gt;_EMBEDDED_ITEM&lt;/code&gt; value.</source>
          <target state="translated">또한 고정중인 항목의 ID를 자체 &lt;code&gt;_EMBEDDED_ITEM&lt;/code&gt; 값으로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="e05a6ed4a81539673cdd7f607759cc613f05c7dd" translate="yes" xml:space="preserve">
          <source>Also, prior to policy &lt;a href=&quot;cmp0113#policy:CMP0113&quot; id=&quot;index-0-policy:CMP0113&quot;&gt;&lt;code&gt;CMP0113&lt;/code&gt;&lt;/a&gt;, the step targets generated by &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; also contain all the custom commands on which their step depends. This can lead to repeated execution of those steps even in serial builds.</source>
          <target state="translated">또한 정책 &lt;a href=&quot;cmp0113#policy:CMP0113&quot; id=&quot;index-0-policy:CMP0113&quot;&gt; &lt;code&gt;CMP0113&lt;/code&gt; &lt;/a&gt; 이전 에는 &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기가&lt;/a&gt; 생성 한 단계 대상 에도 해당 단계가 종속 된 모든 사용자 정의 명령이 포함됩니다. 이로 인해 직렬 빌드에서도 이러한 단계가 반복적으로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87ea7db4a430030d90185495584807fc225cd906" translate="yes" xml:space="preserve">
          <source>Also:</source>
          <target state="translated">Also:</target>
        </trans-unit>
        <trans-unit id="678e7a8a6c8e39ee3d4867486067c25c760639d7" translate="yes" xml:space="preserve">
          <source>Alternatively one may specify the values without a toolchain file:</source>
          <target state="translated">또는 툴체인 파일없이 값을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c2b6f5ff99bf7dc0b02cf020fef0cb97488438d" translate="yes" xml:space="preserve">
          <source>Alternatively, object libraries may be linked into other targets:</source>
          <target state="translated">또는 객체 라이브러리를 다른 대상에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42f154fc6e8d784b9ae4b14acb5b3e93135aa835" translate="yes" xml:space="preserve">
          <source>Alternatively, one may use &lt;strong&gt;cmake&lt;/strong&gt; to &lt;a href=&quot;#build-a-project&quot;&gt;Build a Project&lt;/a&gt; by automatically choosing and invoking the appropriate native build tool.</source>
          <target state="translated">또는 &lt;strong&gt;cmake&lt;/strong&gt; 를 사용 하여 적절한 기본 빌드 도구를 자동으로 선택하고 호출하여 &lt;a href=&quot;#build-a-project&quot;&gt;프로젝트&lt;/a&gt; 를 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aa4c303cff67aec665f452adb125fe3d666d69e9" translate="yes" xml:space="preserve">
          <source>Alternatively, run &lt;code&gt;make package&lt;/code&gt; or right click the &lt;code&gt;Package&lt;/code&gt; target and &lt;code&gt;Build Project&lt;/code&gt; from an IDE.</source>
          <target state="translated">또는 &lt;code&gt;make package&lt;/code&gt; 를 실행 하거나 &lt;code&gt;Package&lt;/code&gt; 대상을 마우스 오른쪽 단추로 클릭하고 IDE에서 &lt;code&gt;Build Project&lt;/code&gt; 를 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">Alternatives</target>
        </trans-unit>
        <trans-unit id="e80d1e4cb9a007fb613e119495d419fcfab55639" translate="yes" xml:space="preserve">
          <source>Although all values in CMake are stored as strings, a string may be treated as a list in certain contexts, such as during evaluation of an &lt;a href=&quot;#unquoted-argument&quot;&gt;Unquoted Argument&lt;/a&gt;. In such contexts, a string is divided into list elements by splitting on &lt;code&gt;;&lt;/code&gt; characters not following an unequal number of &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; characters and not immediately preceded by a &lt;code&gt;\&lt;/code&gt;. The sequence &lt;code&gt;\;&lt;/code&gt; does not divide a value but is replaced by &lt;code&gt;;&lt;/code&gt; in the resulting element.</source>
          <target state="translated">CMake의 모든 값은 문자열로 저장되지만, &lt;a href=&quot;#unquoted-argument&quot;&gt;인용되지 않은 인수를&lt;/a&gt; 평가하는 동안과 같이 특정 컨텍스트에서 문자열이 목록으로 처리 될 수 있습니다 . 이러한 맥락에서 문자열은 &lt;code&gt;;&lt;/code&gt; 문자의 불평등 한 수 아래의하지 &lt;code&gt;[&lt;/code&gt; 및 &lt;code&gt;]&lt;/code&gt; 문자를 즉시 선행되지 &lt;code&gt;\&lt;/code&gt; . 시퀀스 &lt;code&gt;\;&lt;/code&gt; 값을 나누지 않지만로 대체됩니다 &lt;code&gt;;&lt;/code&gt; 결과 요소에서.</target>
        </trans-unit>
        <trans-unit id="3a45c0ffeffdc5eed7ce6d9fd9dbc8fb249f938a" translate="yes" xml:space="preserve">
          <source>Although never officially supported several projects in the wild found and implemented this workaround. However, the new change which officially allows the &lt;code&gt;add_test&lt;/code&gt; command to support whitespace and other special characters in test names now breaks that workaround. In order for these projects to work smoothly with newer CMake versions, this policy was introduced.</source>
          <target state="translated">공식적으로 여러 프로젝트를 공식적으로 지원하지는 않았지만이 해결 방법을 발견하고 구현했습니다. 그러나 &lt;code&gt;add_test&lt;/code&gt; 명령이 테스트 이름에서 공백 및 기타 특수 문자를 지원하도록 공식적으로 허용하는 새로운 변경 사항은 이제 해당 해결 방법을 중단합니다. 이러한 프로젝트가 최신 CMake 버전에서 원활하게 작동 할 수 있도록이 정책이 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="a12c6b453b538d84a7796a9808728f8de80dec0a" translate="yes" xml:space="preserve">
          <source>Although strongly discouraged, the batch size may be set to a value of 0 to combine all the sources for the target into a single unity file, regardless of how many sources are involved. This runs the risk of creating an excessively large unity source file and negatively impacting the build performance, so a value of 0 is not generally recommended.</source>
          <target state="translated">권장되지 않지만 배치 크기를 0 값으로 설정하여 관련된 소스 수에 관계없이 대상의 모든 소스를 단일 통합 파일로 결합 할 수 있습니다. 이는 지나치게 큰 Unity 소스 파일을 생성하고 빌드 성능에 부정적인 영향을 미칠 위험이 있으므로 0 값은 일반적으로 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30bf20f2973daee81c19db505aa6587ebe832ab5" translate="yes" xml:space="preserve">
          <source>Always deploy target &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">항상 대상 &lt;code&gt;foo&lt;/code&gt; 배포 :</target>
        </trans-unit>
        <trans-unit id="59f808c95bbe5ae75dbb9d96441ec3cb74c31e53" translate="yes" xml:space="preserve">
          <source>Always include &lt;code&gt;MathFunctions.h&lt;/code&gt;</source>
          <target state="translated">항상 &lt;code&gt;MathFunctions.h&lt;/code&gt; 포함</target>
        </trans-unit>
        <trans-unit id="99a5d92dab0e65385a650a2cc5b9d395459c496b" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;mathfunctions::sqrt&lt;/code&gt;</source>
          <target state="translated">항상 &lt;code&gt;mathfunctions::sqrt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40e39259dc16bc4390dd275c211d35af8473bf64" translate="yes" xml:space="preserve">
          <source>Always use double quotes around the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; to be sure it is treated as a single argument to this command.</source>
          <target state="translated">항상 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 주위에 큰 따옴표를 사용 하여이 명령에 대한 단일 인수로 취급되도록하십시오.</target>
        </trans-unit>
        <trans-unit id="1755d5a4c3f5e61133274d7bbdeb0dd4993812ee" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED executable target&lt;/a&gt; references an executable file located outside the project. No rules are generated to build it, and the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target property is &lt;code&gt;True&lt;/code&gt;. The target name has scope in the directory in which it is created and below, but the &lt;code&gt;GLOBAL&lt;/code&gt; option extends visibility. It may be referenced like any target built within the project. &lt;code&gt;IMPORTED&lt;/code&gt; executables are useful for convenient reference from commands like &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;. Details about the imported executable are specified by setting properties whose names begin in &lt;code&gt;IMPORTED_&lt;/code&gt;. The most important such property is &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; (and its per-configuration version &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt;) which specifies the location of the main executable file on disk. See documentation of the &lt;code&gt;IMPORTED_*&lt;/code&gt; properties for more information.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;수입은 실행 대상&lt;/a&gt; 참조 프로젝트 외부에있는 실행 파일을. 이를 빌드하기위한 규칙이 생성되지 않으며 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 특성은 &lt;code&gt;True&lt;/code&gt; 입니다. 대상 이름은 대상 디렉토리가 작성되고 그 아래에 범위가 있지만 &lt;code&gt;GLOBAL&lt;/code&gt; 옵션은 가시성을 확장합니다. 프로젝트 내에 빌드 된 대상처럼 참조 될 수 있습니다. &lt;code&gt;IMPORTED&lt;/code&gt; 실행 파일은 &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 와 같은 명령을 편리하게 참조하는 데 유용합니다 . 가져온 실행 파일에 대한 세부 사항은 이름이 &lt;code&gt;IMPORTED_&lt;/code&gt; 로 시작하는 특성을 설정하여 지정합니다 . 가장 중요한 속성은 &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; 입니다.&lt;/a&gt;(및 구성 별 버전 &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; )은 디스크에서 기본 실행 파일의 위치를 ​​지정합니다. 자세한 내용은 &lt;code&gt;IMPORTED_*&lt;/code&gt; 속성 설명서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4dfa0d037ab00ae228e9f03402c906c9d98984d3" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED library target&lt;/a&gt; references a library file located outside the project. No rules are generated to build it, and the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target property is &lt;code&gt;True&lt;/code&gt;. The target name has scope in the directory in which it is created and below, but the &lt;code&gt;GLOBAL&lt;/code&gt; option extends visibility. It may be referenced like any target built within the project. &lt;code&gt;IMPORTED&lt;/code&gt; libraries are useful for convenient reference from commands like &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. Details about the imported library are specified by setting properties whose names begin in &lt;code&gt;IMPORTED_&lt;/code&gt; and &lt;code&gt;INTERFACE_&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 라이브러리 대상&lt;/a&gt; 참조 프로젝트 외부에있는 라이브러리 파일을. 이를 빌드하기위한 규칙이 생성되지 않으며 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 특성은 &lt;code&gt;True&lt;/code&gt; 입니다. 대상 이름은 대상 디렉토리가 작성되고 그 아래에 범위가 있지만 &lt;code&gt;GLOBAL&lt;/code&gt; 옵션은 가시성을 확장합니다. 프로젝트 내에 빌드 된 대상처럼 참조 될 수 있습니다. &lt;code&gt;IMPORTED&lt;/code&gt; 라이브러리는 &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 와 같은 명령을 편리하게 참조하는 데 유용합니다 . 가져온 라이브러리에 대한 세부 사항은 이름이 &lt;code&gt;IMPORTED_&lt;/code&gt; 및 &lt;code&gt;INTERFACE_&lt;/code&gt; 로 시작하는 특성을 설정하여 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="d74e5653be71dce713a88fe0cf65c6abc84beba1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt; named &lt;code&gt;CUDA::toolkit&lt;/code&gt; is provided.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;수입 목표&lt;/a&gt; 라는 이름의 &lt;code&gt;CUDA::toolkit&lt;/code&gt; 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6d384447865dae8d74f354d10891d4f2a01603f5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target represents a pre-existing dependency. Usually such targets are defined by an upstream package and should be treated as immutable. After declaring an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-6-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target one can adjust its target properties by using the customary commands such as &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-2-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-3-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-2-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-8-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; just like with any other regular target.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상은 기존의 의존성을 나타낸다. 일반적으로 이러한 대상은 업스트림 패키지로 정의되며 변경 불가능한 것으로 취급해야합니다. &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-6-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상을 선언 한 후 다른 일반 대상 과 마찬가지로 &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-2-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-3-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-2-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-8-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 와 같은 사용자 지정 명령을 사용하여 대상 속성을 조정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f238d55af686b139369155511ec9a155732bf4eb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ALIAS&lt;/code&gt; target is a name which may be used interchangeably with a binary target name in read-only contexts. A primary use-case for &lt;code&gt;ALIAS&lt;/code&gt; targets is for example or unit test executables accompanying a library, which may be part of the same buildsystem or built separately based on user configuration.</source>
          <target state="translated">&lt;code&gt;ALIAS&lt;/code&gt; 의 목적은 판독 전용 콘텍스트에서 이진 대상 이름과 같은 의미로 사용될 수있는 이름이다. &lt;code&gt;ALIAS&lt;/code&gt; 대상 의 주요 사용 사례 는 예를 들어 라이브러리와 함께 제공되는 단위 테스트 실행 파일이며, 동일한 빌드 시스템의 일부이거나 사용자 구성에 따라 별도로 빌드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19e97a0db60279ae200c96e038183dab738d3723" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ALIAS&lt;/code&gt; to a non-&lt;code&gt;GLOBAL&lt;/code&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Target&lt;/a&gt; has scope in the directory in which the alias is created and below. The &lt;a href=&quot;../prop_tgt/alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt;&lt;code&gt;ALIAS_GLOBAL&lt;/code&gt;&lt;/a&gt; target property can be used to check if the alias is global or not.</source>
          <target state="translated">비 &lt;code&gt;GLOBAL&lt;/code&gt; &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;가져온 대상에&lt;/a&gt; 대한 &lt;code&gt;ALIAS&lt;/code&gt; 는 별칭이 생성 된 디렉터리와 그 아래에 범위를 갖습니다. &lt;a href=&quot;../prop_tgt/alias_global#prop_tgt:ALIAS_GLOBAL&quot; id=&quot;index-0-prop_tgt:ALIAS_GLOBAL&quot;&gt; &lt;code&gt;ALIAS_GLOBAL&lt;/code&gt; &lt;/a&gt; 대상 속성은 별명이 글로벌인지 아닌지 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9efd43b03ad91fe78b603b1f29b6ce41a19a8d6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTERFACE&lt;/code&gt; library target does not compile sources and does not produce a library artifact on disk, so it has no &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; 라이브러리의 대상이되지 컴파일 소스를 수행하고이 더 없다, 그래서 디스크 라이브러리 아티팩트를 생성하지 않는 &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e37e2f33067560d27f65ca94333f87f523c0005" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTERFACE&lt;/code&gt; target has no &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; and is mutable, but is otherwise similar to an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; 목표는 더없는 &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-1-prop_tgt:LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt; 와 변경 가능한, 그러나에 다른 유사하다 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-13-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상입니다.</target>
        </trans-unit>
        <trans-unit id="3ef1c7eff12c8a876b23ed779a1f7c7b10b25efb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTERFACE&lt;/code&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Target&lt;/a&gt; may also be created with this signature. An &lt;code&gt;IMPORTED&lt;/code&gt; library target references a library defined outside the project. The target name has scope in the directory in which it is created and below, but the &lt;code&gt;GLOBAL&lt;/code&gt; option extends visibility. It may be referenced like any target built within the project. &lt;code&gt;IMPORTED&lt;/code&gt; libraries are useful for convenient reference from commands like &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;수입 대상은&lt;/a&gt; 이 서명을 만들 수 있습니다. &lt;code&gt;IMPORTED&lt;/code&gt; 라이브러리 대상 참조 프로젝트 외부에서 정의 라이브러리를. 대상 이름은 대상 디렉토리가 작성되고 그 아래에 범위가 있지만 &lt;code&gt;GLOBAL&lt;/code&gt; 옵션은 가시성을 확장합니다. 프로젝트 내에 빌드 된 대상처럼 참조 될 수 있습니다. &lt;code&gt;IMPORTED&lt;/code&gt; 라이브러리는 &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 와 같은 명령을 편리하게 참조하는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="27c5bda4b6a827962a6135a05bd48e5c7fdbcdad" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UNKNOWN&lt;/code&gt; library type is typically only used in the implementation of &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;Find Modules&lt;/a&gt;. It allows the path to an imported library (often found using the &lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command) to be used without having to know what type of library it is. This is especially useful on Windows where a static library and a DLL&amp;rsquo;s import library both have the same file extension.</source>
          <target state="translated">&lt;code&gt;UNKNOWN&lt;/code&gt; 의 라이브러리 유형은 일반적으로 단지의 구현에 사용되는 &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;찾기 모듈&lt;/a&gt; . 임포트 된 라이브러리 (종종 &lt;a href=&quot;find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 찾음)에 대한 경로를 사용하여 라이브러리 유형을 알 필요없이 사용할 수 있습니다. 이것은 정적 라이브러리와 DLL의 가져 오기 라이브러리가 모두 같은 파일 확장자를 갖는 Windows에서 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="179af0f111fcd02a67d3b66c8e6c21f43ae2f9d5" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;archive&lt;/em&gt; output artifact of a buildsystem target may be:</source>
          <target state="translated">빌드 시스템 대상 의 &lt;em&gt;아카이브&lt;/em&gt; 출력 아티팩트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b888575606f9bdea2ae7ec3368a4cb853a6351f7" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;environment variable reference&lt;/em&gt; has the form &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt;. See the &lt;a href=&quot;#environment-variables&quot;&gt;Environment Variables&lt;/a&gt; section for more information.</source>
          <target state="translated">&lt;em&gt;환경 변수 참조&lt;/em&gt; 의 형식은 &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; . 자세한 정보는 &lt;a href=&quot;#environment-variables&quot;&gt;환경 변수&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e6dbb3bbea175ef4a1e5a596a66576210cd680fe" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;escape sequence&lt;/em&gt; is a &lt;code&gt;\&lt;/code&gt; followed by one character:</source>
          <target state="translated">&lt;em&gt;이스케이프 시퀀스&lt;/em&gt; A는 &lt;code&gt;\&lt;/code&gt; 한 문자 뒤에 :</target>
        </trans-unit>
        <trans-unit id="5f34c6fca355b848c36a2cdb72d3b88a6bf2887e" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;unquoted argument&lt;/em&gt; is not enclosed by any quoting syntax. It may not contain any whitespace, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, or &lt;code&gt;\&lt;/code&gt; except when escaped by a backslash:</source>
          <target state="translated">&lt;em&gt;인용 부호로 둘러싸이지 않은 인수는&lt;/em&gt; 어떤 인용 구문으로 둘러싸인되지 않습니다. 백 슬래시로 이스케이프 처리 된 경우를 제외하고 공백 &lt;code&gt;(&lt;/code&gt; , &lt;code&gt;)&lt;/code&gt; , &lt;code&gt;#&lt;/code&gt; , &lt;code&gt;&quot;&lt;/code&gt; 또는 &lt;code&gt;\&lt;/code&gt; 을 포함 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7953fec88159ac1b3e2b6d356d49c2889aaf1322" translate="yes" xml:space="preserve">
          <source>An XCTest bundle is a CFBundle with a special product-type and bundle extension. The Mac Developer Library provides more information in the &lt;a href=&quot;http://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/testing_with_xcode/&quot;&gt;Testing with Xcode&lt;/a&gt; document.</source>
          <target state="translated">XCTest 번들은 특별 제품 유형 및 번들 확장이있는 CFBundle입니다. Mac 개발자 라이브러리는 &lt;a href=&quot;http://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/testing_with_xcode/&quot;&gt;Xcode로 테스트&lt;/a&gt; 문서 에서 자세한 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b6ef97245a644f5099930438278aa0377466ce29" translate="yes" xml:space="preserve">
          <source>An adjacent &lt;code&gt;CMakeLists.txt&lt;/code&gt; may use &lt;code&gt;configure_file&lt;/code&gt; to configure the header:</source>
          <target state="translated">인접한 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 는 &lt;code&gt;configure_file&lt;/code&gt; 을 사용하여 헤더를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8143323ae4e31e705c96a6a6d01c0f249b902202" translate="yes" xml:space="preserve">
          <source>An advanced variable will not be displayed in any of the cmake GUIs unless the &lt;code&gt;show advanced&lt;/code&gt; option is on. In script mode, the advanced/non-advanced state has no effect.</source>
          <target state="translated">&lt;code&gt;show advanced&lt;/code&gt; 옵션이 설정되어 있지 않으면 cmake GUI에 고급 변수가 표시되지 않습니다 . 스크립트 모드에서는 고급 / 고급 상태가 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bcb9915ff5f0c79ea202e5d790cea20ab5780619" translate="yes" xml:space="preserve">
          <source>An algorithm that will be used to generate an additional file with the checksum of the package. The output file name will be:</source>
          <target state="translated">패키지의 체크섬으로 추가 파일을 생성하는 데 사용되는 알고리즘입니다. 출력 파일 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="adef4a69e0386dbacf4f7d7140b58ee185e6aeeb" translate="yes" xml:space="preserve">
          <source>An architecture can be suffixed by either &lt;code&gt;-real&lt;/code&gt; or &lt;code&gt;-virtual&lt;/code&gt; to specify the kind of architecture to generate code for. If no suffix is given then code is generated for both real and virtual architectures.</source>
          <target state="translated">아키텍처는 코드를 생성 할 아키텍처의 종류를 지정하기 위해 &lt;code&gt;-real&lt;/code&gt; 또는 &lt;code&gt;-virtual&lt;/code&gt; 을 접미사로 붙일 수 있습니다 . 접미사가 제공되지 않으면 실제 아키텍처와 가상 아키텍처 모두에 대한 코드가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="30c51e972f58f8c35b35e21e06cdf6c25abf8d89" translate="yes" xml:space="preserve">
          <source>An empty (or unset) value or the string &lt;code&gt;AUTO&lt;/code&gt; sets the number of threads/processes to the number of physical CPUs on the host system.</source>
          <target state="translated">비어있는 (또는 설정되지 않은) 값 또는 문자열 &lt;code&gt;AUTO&lt;/code&gt; 는 스레드 / 프로세스 수를 호스트 시스템의 물리적 CPU 수로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="cd5807e05016a5a9f66fdd76a443c1dc05334476" translate="yes" xml:space="preserve">
          <source>An example application of this feature is for building an executable on a host platform when cross-compiling. The project containing the executable may be built on the host platform and then the project that is being cross-compiled for another platform may load it.</source>
          <target state="translated">이 기능의 예제 응용 프로그램은 크로스 컴파일시 호스트 플랫폼에서 실행 파일을 빌드하는 것입니다. 실행 파일이 포함 된 프로젝트는 호스트 플랫폼에서 빌드 된 다음 다른 플랫폼 용으로 크로스 컴파일되는 프로젝트에서로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24d415c8b4006c286b744b12ca7eea5a4b420929" translate="yes" xml:space="preserve">
          <source>An executable target with &lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; enabled will be built as an application bundle on macOS. By default its &lt;code&gt;Info.plist&lt;/code&gt; file is created by configuring a template called &lt;code&gt;MacOSXBundleInfo.plist.in&lt;/code&gt; located in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;. This property specifies an alternative template file name which may be a full path.</source>
          <target state="translated">&lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; 이&lt;/a&gt; 활성화 된 실행 가능 대상 은 macOS에서 응용 프로그램 번들로 빌드됩니다. 기본적으로 자사 &lt;code&gt;Info.plist&lt;/code&gt; 파일이라고 템플릿 구성하여 만든 &lt;code&gt;MacOSXBundleInfo.plist.in&lt;/code&gt; 에 위치한 &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; 을&lt;/a&gt; . 이 특성은 전체 경로 일 수있는 대체 템플리트 파일 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b3ffd010a6866bc1edd9d6a27cfad50fc88a2420" translate="yes" xml:space="preserve">
          <source>An extension point for vendors to insert their own macros. CMake will not be able to use presets which have a &lt;code&gt;$vendor{&amp;lt;macro-name&amp;gt;}&lt;/code&gt; macro, and effectively ignores such presets. However, it will still be able to use other presets from the same file.</source>
          <target state="translated">공급 업체가 자체 매크로를 삽입 할 수있는 확장 점입니다. CMake는 &lt;code&gt;$vendor{&amp;lt;macro-name&amp;gt;}&lt;/code&gt; 매크로 가있는 사전 설정을 사용할 수 없으며 이러한 사전 설정을 효과적으로 무시합니다. 그러나 동일한 파일의 다른 사전 설정은 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="324ac1727d5c4f2df6f5e88bd55e279709c00a6a" translate="yes" xml:space="preserve">
          <source>An imported target missing its location property fails during generation.</source>
          <target state="translated">위치 속성이 누락 된 가져온 대상이 생성 중에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="eaed0e7a181d8fbc32ce1f2e981256b8f28b3855" translate="yes" xml:space="preserve">
          <source>An individual &lt;code&gt;&amp;lt;script&amp;gt;.cmake&lt;/code&gt; source file may be processed in &lt;em&gt;script mode&lt;/em&gt; by using the &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; command-line tool with the &lt;code&gt;-P&lt;/code&gt; option. Script mode simply runs the commands in the given CMake Language source file and does not generate a build system. It does not allow CMake commands that define build targets or actions.</source>
          <target state="translated">개별 &lt;code&gt;&amp;lt;script&amp;gt;.cmake&lt;/code&gt; 소스 파일은 &lt;code&gt;-P&lt;/code&gt; 옵션 과 함께 &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 명령 줄 도구를 사용하여 &lt;em&gt;스크립트 모드&lt;/em&gt; 에서 처리 될 수 있습니다 . 스크립트 모드는 주어진 CMake Language 소스 파일에서 명령을 실행하고 빌드 시스템을 생성하지 않습니다. 빌드 대상 또는 조치를 정의하는 CMake 명령을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bd28fe8d465da6c00437b3c06f6f28a8f158ac9e" translate="yes" xml:space="preserve">
          <source>An install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">&lt;code&gt;DESTINATION&lt;/code&gt; 인수 로 제공된 설치 대상 은 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29924a6d2a97f96fa61e83b398934185c3c06fd4" translate="yes" xml:space="preserve">
          <source>An install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">&lt;code&gt;DESTINATION&lt;/code&gt; 인수 로 제공된 설치 대상 은 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27312bad2639d091896cb5e6fe2c423870f1a8cb" translate="yes" xml:space="preserve">
          <source>An interface library builds no library file itself but does specify usage requirements for its consumers. The &lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; property may be set to specify a single library name to be placed on the link line in place of the interface library target name as a requirement for using the interface.</source>
          <target state="translated">인터페이스 라이브러리는 라이브러리 파일 자체를 빌드하지 않지만 소비자의 사용 요구 사항을 지정합니다. &lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; 의 속성은 인터페이스를 사용하기위한 요구 사항으로 인터페이스 라이브러리 대상 이름 대신에 링크 라인에 배치 할 수있는 단일 라이브러리 이름을 지정하도록 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d396fa85e0338db4ed1318de5d65e7d4bcead67" translate="yes" xml:space="preserve">
          <source>An interface library created with the above signature has no source files itself and is not included as a target in the generated buildsystem.</source>
          <target state="translated">위의 서명으로 생성 된 인터페이스 라이브러리에는 자체 소스 파일이 없으며 생성 된 빌드 시스템에 대상으로 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4854a03682d2d1a060d47f16630768a052eba39" translate="yes" xml:space="preserve">
          <source>An internal global property records when a particular content population request has been processed. If &lt;code&gt;FetchContent_Populate()&lt;/code&gt; is called more than once for the same content name within a configure run, the second call will halt with an error. Projects can and should check whether content population has already been processed with the &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-1-command:fetchcontent_getproperties&quot;&gt;&lt;code&gt;FetchContent_GetProperties()&lt;/code&gt;&lt;/a&gt; command before calling &lt;code&gt;FetchContent_Populate()&lt;/code&gt;.</source>
          <target state="translated">내부 글로벌 속성은 특정 콘텐츠 모집 요청이 처리 된시기를 기록합니다. 경우 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 더 구성 실행 내에서 동일한 내용 이름 번 이상이라고, 두 번째 호출이 오류와 함께 중단됩니다. 프로젝트가 및 콘텐츠 인구가 이미로 처리되었는지 여부를 확인해야 할 수 있습니다 &lt;a href=&quot;#command:fetchcontent_getproperties&quot; id=&quot;index-1-command:fetchcontent_getproperties&quot;&gt; &lt;code&gt;FetchContent_GetProperties()&lt;/code&gt; &lt;/a&gt; 호출하기 전에 명령을 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dec86b030a23e4ee4cb4f4ec3f153f6eef4292e9" translate="yes" xml:space="preserve">
          <source>An internal property used by some generators to record the name of the project or dsp file associated with this target. Note that at configure time, this property is only set for targets created by &lt;a href=&quot;../command/include_external_msproject#command:include_external_msproject&quot; id=&quot;index-0-command:include_external_msproject&quot;&gt;&lt;code&gt;include_external_msproject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일부 생성자가이 대상과 연관된 프로젝트 또는 dsp 파일의 이름을 기록하는 데 사용하는 내부 특성입니다. 구성 &lt;a href=&quot;../command/include_external_msproject#command:include_external_msproject&quot; id=&quot;index-0-command:include_external_msproject&quot;&gt; &lt;code&gt;include_external_msproject()&lt;/code&gt; &lt;/a&gt; 특성은 include_external_msproject ()로 작성된 대상에 대해서만 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="e43850e7f90ecc27d3393e36c9aa39b12e48c19d" translate="yes" xml:space="preserve">
          <source>An internal variable subject to change.</source>
          <target state="translated">내부 변수는 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c061823106cb011550b753a1097ca16ba6f6d77" translate="yes" xml:space="preserve">
          <source>An object containing a &lt;code&gt;major&lt;/code&gt; integer field and a &lt;code&gt;minor&lt;/code&gt; integer field. Currently, the only supported version is major &lt;code&gt;1&lt;/code&gt;, minor &lt;code&gt;0&lt;/code&gt;. Any other value is an error.</source>
          <target state="translated">&lt;code&gt;major&lt;/code&gt; 정수 필드와 &lt;code&gt;minor&lt;/code&gt; 정수 필드를 포함하는 개체 입니다. 현재 유일하게 지원되는 버전은 major &lt;code&gt;1&lt;/code&gt; , minor &lt;code&gt;0&lt;/code&gt; 입니다. 다른 값은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="5ca9aa73fcf8a1937d020687d0a85103c3d9335f" translate="yes" xml:space="preserve">
          <source>An opening bracket is written &lt;code&gt;[&lt;/code&gt; followed by zero or more &lt;code&gt;=&lt;/code&gt; followed by &lt;code&gt;[&lt;/code&gt;. The corresponding closing bracket is written &lt;code&gt;]&lt;/code&gt; followed by the same number of &lt;code&gt;=&lt;/code&gt; followed by &lt;code&gt;]&lt;/code&gt;. Brackets do not nest. A unique length may always be chosen for the opening and closing brackets to contain closing brackets of other lengths.</source>
          <target state="translated">개구 브래킷 기록된다 &lt;code&gt;[&lt;/code&gt; 제로이어서 이상의 &lt;code&gt;=&lt;/code&gt; 하였다 &lt;code&gt;[&lt;/code&gt; . 해당 닫는 대괄호는 &lt;code&gt;]&lt;/code&gt; 다음에 같은 수의 &lt;code&gt;=&lt;/code&gt; 다음에 &lt;code&gt;]&lt;/code&gt; 가 씁니다 . 괄호는 중첩되지 않습니다. 개폐 브래킷이 다른 길이의 폐쇄 브래킷을 포함하도록 항상 고유 한 길이를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2780e690c9cea07e635eb940badec298ddef7949" translate="yes" xml:space="preserve">
          <source>An optional argument specifying the scope of the guard may be provided. Possible values for the option are:</source>
          <target state="translated">가드의 범위를 지정하는 선택적 인수가 제공 될 수 있습니다. 옵션의 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="befef675ed8eeb59e7ab993f0b66b65aa7db69a4" translate="yes" xml:space="preserve">
          <source>An optional array of configure preset objects. Each preset may contain the following fields:</source>
          <target state="translated">구성 사전 설정 개체의 선택적 배열입니다. 각 사전 설정에는 다음 필드가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aff42627bb186d00f8b79af54a134997f79deb24" translate="yes" xml:space="preserve">
          <source>An optional array of strings representing the names of presets to inherit from. The preset will inherit all of the fields from the &lt;code&gt;inherits&lt;/code&gt; presets by default (except &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;inherits&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, and &lt;code&gt;longDescription&lt;/code&gt;), but can override them as desired. If multiple &lt;code&gt;inherits&lt;/code&gt; presets provide conflicting values for the same field, the earlier preset in the &lt;code&gt;inherits&lt;/code&gt; list will be preferred. Presets in &lt;code&gt;CMakePresets.json&lt;/code&gt; may not inherit from presets in &lt;code&gt;CMakeUserPresets.json&lt;/code&gt;.</source>
          <target state="translated">상속 할 사전 설정의 이름을 나타내는 선택적 문자열 배열입니다. 사전 설정은 기본적으로 &lt;code&gt;inherits&lt;/code&gt; 사전 설정 의 모든 필드를 상속하지만 ( &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;hidden&lt;/code&gt; , &lt;code&gt;inherits&lt;/code&gt; , &lt;code&gt;description&lt;/code&gt; 및 &lt;code&gt;longDescription&lt;/code&gt; 제외) 원하는대로 재정의 할 수 있습니다. 여러 &lt;code&gt;inherits&lt;/code&gt; 사전 설정이 동일한 필드에 대해 충돌하는 값을 제공하는 경우 &lt;code&gt;inherits&lt;/code&gt; 목록 의 이전 사전 설정 이 선호됩니다. 프리셋 &lt;code&gt;CMakePresets.json&lt;/code&gt; 는 프리셋에서 상속 할 수 없습니다 &lt;code&gt;CMakeUserPresets.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f462db79209017f3a3f868636f6d52900db07d5" translate="yes" xml:space="preserve">
          <source>An optional boolean specifying whether or not a preset should be hidden. If a preset is hidden, it cannot be used in the &lt;code&gt;--preset=&lt;/code&gt; argument, will not show up in the &lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;CMake GUI&lt;/code&gt;&lt;/a&gt;, and does not have to have a valid &lt;code&gt;generator&lt;/code&gt; or &lt;code&gt;binaryDir&lt;/code&gt;, even from inheritance. &lt;code&gt;hidden&lt;/code&gt; presets are intended to be used as a base for other presets to inherit via the &lt;code&gt;inherits&lt;/code&gt; field.</source>
          <target state="translated">사전 설정을 숨길 지 여부를 지정하는 선택적 부울입니다. 사전 설정이 숨겨진 경우 &lt;code&gt;--preset=&lt;/code&gt; 인수 에서 사용할 수 없으며 &lt;a href=&quot;cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;CMake GUI&lt;/code&gt; &lt;/a&gt; 에 표시 되지 않으며 상속에서도 유효한 &lt;code&gt;generator&lt;/code&gt; 또는 &lt;code&gt;binaryDir&lt;/code&gt; 이 필요하지 않습니다 . &lt;code&gt;hidden&lt;/code&gt; 사전 설정은 &lt;code&gt;inherits&lt;/code&gt; 필드 를 통해 상속 할 다른 사전 설정의 기반으로 사용하기위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e3a66eca6f41ca72c9e30df45630313647c90594" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Wdeprecated&lt;/code&gt; or &lt;code&gt;-Wno-deprecated&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;errors.deprecated&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">선택적 부울입니다. 명령 줄에서 &lt;code&gt;-Wdeprecated&lt;/code&gt; 또는 &lt;code&gt;-Wno-deprecated&lt;/code&gt; 를 전달하는 것과 같습니다 . &lt;code&gt;errors.deprecated&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 &lt;code&gt;false&lt;/code&gt; 로 설정되지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="50825306d24eab08ec4305fcf2c19b576850fc00" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Wdev&lt;/code&gt; or &lt;code&gt;-Wno-dev&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;errors.dev&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">선택적 부울입니다. 명령 줄에서 &lt;code&gt;-Wdev&lt;/code&gt; 또는 &lt;code&gt;-Wno-dev&lt;/code&gt; 를 전달하는 것과 같습니다 . &lt;code&gt;errors.dev&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 &lt;code&gt;false&lt;/code&gt; 로 설정되지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02386f6627f84964db5cb1afc50a1694525bdbb0" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Werror=deprecated&lt;/code&gt; or &lt;code&gt;-Wno-error=deprecated&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;warnings.deprecated&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">선택적 부울입니다. 명령 줄에서 &lt;code&gt;-Werror=deprecated&lt;/code&gt; 또는 &lt;code&gt;-Wno-error=deprecated&lt;/code&gt; 를 전달하는 것과 같습니다 . &lt;code&gt;warnings.deprecated&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정 되면 &lt;code&gt;true&lt;/code&gt; 로 설정되지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aa821ccfe3a750f7722709b843ff905373fe14c2" translate="yes" xml:space="preserve">
          <source>An optional boolean. Equivalent to passing &lt;code&gt;-Werror=dev&lt;/code&gt; or &lt;code&gt;-Wno-error=dev&lt;/code&gt; on the command line. This may not be set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;warnings.dev&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">선택적 부울입니다. 명령 줄에서 &lt;code&gt;-Werror=dev&lt;/code&gt; 또는 &lt;code&gt;-Wno-error=dev&lt;/code&gt; 를 전달하는 것과 같습니다 . &lt;code&gt;warnings.dev&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정 되면 &lt;code&gt;true&lt;/code&gt; 로 설정되지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a23e49f981eac6e5b0477a51b87ec0d19e046b3a" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;false&lt;/code&gt; is equivalent to passing &lt;code&gt;--no-warn-unused-cli&lt;/code&gt; on the command line.</source>
          <target state="translated">선택적 부울입니다. 이를 &lt;code&gt;false&lt;/code&gt; 로 설정 하는 것은 명령 줄에서 &lt;code&gt;--no-warn-unused-cli&lt;/code&gt; 를 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="bed08836cd122d6f2973a8ceab41211d8c3b2731" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--check-system-vars&lt;/code&gt; on the command line.</source>
          <target state="translated">선택적 부울입니다. 이것을 &lt;code&gt;true&lt;/code&gt; 로 설정 하는 것은 명령 줄에서 &lt;code&gt;--check-system-vars&lt;/code&gt; 를 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="771d71ada462e0512ffc45e7a0b4bef98e77f97e" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--debug-find&lt;/code&gt; on the command line.</source>
          <target state="translated">선택적 부울입니다. 이를 &lt;code&gt;true&lt;/code&gt; 로 설정 하는 것은 명령 줄에서 &lt;code&gt;--debug-find&lt;/code&gt; 를 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d5e1b82790685ed67a65239a406001a2f081f2d7" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--debug-output&lt;/code&gt; on the command line.</source>
          <target state="translated">선택적 부울입니다. 이를 &lt;code&gt;true&lt;/code&gt; 로 설정 하는 것은 명령 줄에서 &lt;code&gt;--debug-output&lt;/code&gt; 을 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="9d9287833e7e18102000d85d7c35b9f76ee16d69" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--debug-trycompile&lt;/code&gt; on the command line.</source>
          <target state="translated">선택적 부울입니다. 이것을 &lt;code&gt;true&lt;/code&gt; 로 설정 하는 것은 명령 줄에서 &lt;code&gt;--debug-trycompile&lt;/code&gt; 을 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="9610ae597837c1d4face19f39e720aa9f51ef1fa" translate="yes" xml:space="preserve">
          <source>An optional boolean. Setting this to &lt;code&gt;true&lt;/code&gt; is equivalent to passing &lt;code&gt;--warn-uninitialized&lt;/code&gt; on the command line.</source>
          <target state="translated">선택적 부울입니다. 이것을 &lt;code&gt;true&lt;/code&gt; 로 설정 하는 것은 명령 줄에서 &lt;code&gt;--warn-uninitialized&lt;/code&gt; 를 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="40a3eaa64bcd911933837c01bfc23cf09d1041b9" translate="yes" xml:space="preserve">
          <source>An optional integer representing the major version.</source>
          <target state="translated">주 버전을 나타내는 선택적 정수입니다.</target>
        </trans-unit>
        <trans-unit id="81b7a367f3f915f166457dac2bdfca22ba468540" translate="yes" xml:space="preserve">
          <source>An optional integer representing the minor version.</source>
          <target state="translated">부 버전을 나타내는 선택적 정수입니다.</target>
        </trans-unit>
        <trans-unit id="ea6d7bcad7e6d53d442ff04d46d01713e1c7c671" translate="yes" xml:space="preserve">
          <source>An optional integer representing the patch version.</source>
          <target state="translated">패치 버전을 나타내는 선택적 정수입니다.</target>
        </trans-unit>
        <trans-unit id="8fc5b4012d3f9eb7c3067367893f0c90cc874d10" translate="yes" xml:space="preserve">
          <source>An optional map containing vendor-specific information. CMake does not interpret the contents of this field except to verify that it is a map if it does exist. However, it should follow the same conventions as the root-level &lt;code&gt;vendor&lt;/code&gt; field. If vendors use their own per-preset &lt;code&gt;vendor&lt;/code&gt; field, they should implement inheritance in a sensible manner when appropriate.</source>
          <target state="translated">공급 업체별 정보가 포함 된 선택적 맵입니다. CMake는 존재하는 경우 맵인지 확인하는 것 외에는이 필드의 내용을 해석하지 않습니다. 그러나 루트 수준 &lt;code&gt;vendor&lt;/code&gt; 필드 와 동일한 규칙을 따라야합니다 . 공급 업체가 사전 설정 별 &lt;code&gt;vendor&lt;/code&gt; 필드를 사용하는 경우 적절한 경우 합리적인 방식으로 상속을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="85666abdcd5d6362603517722958802b5246a5f9" translate="yes" xml:space="preserve">
          <source>An optional map containing vendor-specific information. CMake does not interpret the contents of this field except to verify that it is a map if it does exist. However, the keys should be a vendor-specific domain name followed by a &lt;code&gt;/&lt;/code&gt;-separated path. For example, the Example IDE 1.0 could use &lt;code&gt;example.com/ExampleIDE/1.0&lt;/code&gt;. The value of each field can be anything desired by the vendor, though will typically be a map.</source>
          <target state="translated">공급 업체별 정보가 포함 된 선택적 맵입니다. CMake는 존재하는 경우 맵인지 확인하는 것 외에는이 필드의 내용을 해석하지 않습니다. 그러나 키는 공급 업체별 도메인 이름 뒤에 &lt;code&gt;/&lt;/code&gt; 로 구분 된 경로 여야합니다 . 예를 들어 Example IDE 1.0은 &lt;code&gt;example.com/ExampleIDE/1.0&lt;/code&gt; 을 사용할 수 있습니다 . 각 필드의 값은 일반적으로 맵이지만 공급 업체가 원하는 모든 값이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae0ddccfedcf69f08bb796eeb2c4cb6393ba5be3" translate="yes" xml:space="preserve">
          <source>An optional map of cache variables. The key is the variable name (which may not be an empty string), and the value is either &lt;code&gt;null&lt;/code&gt;, a boolean (which is equivalent to a value of &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; or &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt; and a type of &lt;code&gt;BOOL&lt;/code&gt;), a string representing the value of the variable (which supports macro expansion), or an object with the following fields:</source>
          <target state="translated">캐시 변수의 선택적 맵입니다. 키는 변수 이름 (빈 문자열이 아닐 수 있음)이고 값은 &lt;code&gt;null&lt;/code&gt; , 부울 ( &lt;code&gt;&quot;TRUE&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;FALSE&quot;&lt;/code&gt; 값 및 &lt;code&gt;BOOL&lt;/code&gt; 유형과 동일 ), 다음을 나타내는 문자열입니다. 변수의 값 (매크로 확장 지원) 또는 다음 필드가있는 개체 :</target>
        </trans-unit>
        <trans-unit id="cf3ac10d503268e2202ae8a75d58b7dc7dc79ff7" translate="yes" xml:space="preserve">
          <source>An optional map of environment variables. The key is the variable name (which may not be an empty string), and the value is either &lt;code&gt;null&lt;/code&gt; or a string representing the value of the variable. Each variable is set regardless of whether or not a value was given to it by the process&amp;rsquo;s environment. This field supports macro expansion, and environment variables in this map may reference each other, and may be listed in any order, as long as such references do not cause a cycle (for example, if &lt;code&gt;ENV_1&lt;/code&gt; is &lt;code&gt;$env{ENV_2}&lt;/code&gt;, &lt;code&gt;ENV_2&lt;/code&gt; may not be &lt;code&gt;$env{ENV_1}&lt;/code&gt;.)</source>
          <target state="translated">환경 변수의 선택적 맵입니다. 키는 변수 이름 (빈 문자열이 아닐 수 있음)이고 값은 &lt;code&gt;null&lt;/code&gt; 또는 변수 값을 나타내는 문자열입니다. 각 변수는 프로세스의 환경에서 값을 부여했는지 여부에 관계없이 설정됩니다. 이 필드는 매크로 확장을 지원 &lt;code&gt;ENV_1&lt;/code&gt; 맵의 환경 변수는 서로를 참조 할 수 있으며 이러한 참조가 순환을 유발하지 않는 한 임의의 순서로 나열 될 수 있습니다 (예 : ENV_1 이 &lt;code&gt;$env{ENV_2}&lt;/code&gt; 이면 &lt;code&gt;ENV_2&lt;/code&gt; 가 하지 수 &lt;code&gt;$env{ENV_1}&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="20c3bd39f9c694f0c1992672756e56f25b5810ce" translate="yes" xml:space="preserve">
          <source>An optional member present when the node is not the bottom of the call stack. The value is an unsigned integer 0-based index of another entry in the backtrace &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">노드가 호출 스택의 맨 아래에 없을 때 존재하는 선택적 멤버입니다. 값은 역 추적 &lt;code&gt;nodes&lt;/code&gt; 배열 에있는 다른 항목의 부호없는 정수 0 기반 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="d3ff5d83015830eca51daf47348f9d606138cbc2" translate="yes" xml:space="preserve">
          <source>An optional member present when the node represents a command invocation within the file. The value is an unsigned integer 0-based index into the backtrace &lt;code&gt;commands&lt;/code&gt; array.</source>
          <target state="translated">노드가 파일 내에서 명령 호출을 나타낼 때 존재하는 선택적 멤버입니다. 값은 역 추적 &lt;code&gt;commands&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="6063a4780f8ae909a90e896be79177b37b9d154d" translate="yes" xml:space="preserve">
          <source>An optional member present when the node represents a line within the file. The value is an unsigned integer 1-based line number.</source>
          <target state="translated">노드가 파일 내의 행을 나타낼 때 존재하는 선택적 멤버입니다. 값은 부호없는 정수 1 기반 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="029a65b96c4ffab34fd3832bb09473747a603465" translate="yes" xml:space="preserve">
          <source>An optional object representing the minimum version of CMake needed to build this project. This object consists of the following fields:</source>
          <target state="translated">이 프로젝트를 빌드하는 데 필요한 CMake의 최소 버전을 나타내는 선택적 개체입니다. 이 개체는 다음 필드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="128ab5f4eef3a7efad3f4ecc80090475068d7dfd" translate="yes" xml:space="preserve">
          <source>An optional object specifying debug options. The object may contain the following fields:</source>
          <target state="translated">디버그 옵션을 지정하는 선택적 개체입니다. 개체에는 다음 필드가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ecb4550d31ca16a031e939ca5218b3349dd7aed" translate="yes" xml:space="preserve">
          <source>An optional object specifying the errors to enable. The object may contain the following fields:</source>
          <target state="translated">활성화 할 오류를 지정하는 선택적 개체입니다. 개체에는 다음 필드가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b88f77bfedce2baffef418aef6e239c4e4c1a97f" translate="yes" xml:space="preserve">
          <source>An optional object specifying the warnings to enable. The object may contain the following fields:</source>
          <target state="translated">활성화 할 경고를 지정하는 선택적 개체입니다. 개체에는 다음 필드가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1ea26c53d4f4d6e3cfedda6130475ac3d96c69c" translate="yes" xml:space="preserve">
          <source>An optional string representing the generator to use for the preset. If &lt;code&gt;generator&lt;/code&gt; is not specified, it must be inherited from the &lt;code&gt;inherits&lt;/code&gt; preset (unless this preset is &lt;code&gt;hidden&lt;/code&gt;).</source>
          <target state="translated">사전 설정에 사용할 생성기를 나타내는 선택적 문자열입니다. 경우 &lt;code&gt;generator&lt;/code&gt; 지정되지 않은, 그것은로부터 상속해야 &lt;code&gt;inherits&lt;/code&gt; (이 사전 설정이되어 있지 않으면 미리 &lt;code&gt;hidden&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3dd9afbeeeb92e08dabd1d5b71e093b14869de95" translate="yes" xml:space="preserve">
          <source>An optional string representing the path to the CMake executable to use for this preset. This is reserved for use by IDEs, and is not used by CMake itself. IDEs that use this field should expand any macros in it.</source>
          <target state="translated">이 사전 설정에 사용할 CMake 실행 파일의 경로를 나타내는 선택적 문자열입니다. 이것은 IDE에서 사용하도록 예약되어 있으며 CMake 자체에서는 사용되지 않습니다. 이 필드를 사용하는 IDE는 그 안에있는 모든 매크로를 확장해야합니다.</target>
        </trans-unit>
        <trans-unit id="291063a83983155b53a8e62c06e5922c1acbe214" translate="yes" xml:space="preserve">
          <source>An optional string representing the path to the output binary directory. This field supports macro expansion. If a relative path is specified, it is calculated relative to the source directory. If &lt;code&gt;binaryDir&lt;/code&gt; is not specified, it must be inherited from the &lt;code&gt;inherits&lt;/code&gt; preset (unless this preset is &lt;code&gt;hidden&lt;/code&gt;).</source>
          <target state="translated">출력 바이너리 디렉토리의 경로를 나타내는 선택적 문자열입니다. 이 필드는 매크로 확장을 지원합니다. 상대 경로가 지정되면 소스 디렉토리를 기준으로 계산됩니다. 경우 &lt;code&gt;binaryDir&lt;/code&gt; 가 지정되지 않은, 그것은로부터 상속해야 &lt;code&gt;inherits&lt;/code&gt; (이 사전 설정이되어 있지 않으면 미리 &lt;code&gt;hidden&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="48620be0485a5770612bebe20cb2aeefab040a1a" translate="yes" xml:space="preserve">
          <source>An optional string representing the type of the variable.</source>
          <target state="translated">변수 유형을 나타내는 선택적 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="57f7b39c63841dcc120cf2f0ef17f2dd0aa69f99" translate="yes" xml:space="preserve">
          <source>An optional string representing the value.</source>
          <target state="translated">값을 나타내는 선택적 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="f9bc158597490e7946083e11e9345f45258a9111" translate="yes" xml:space="preserve">
          <source>An optional string telling CMake how to handle the &lt;code&gt;architecture&lt;/code&gt; or &lt;code&gt;toolset&lt;/code&gt; field. Valid values are:</source>
          <target state="translated">CMake에 &lt;code&gt;architecture&lt;/code&gt; 또는 &lt;code&gt;toolset&lt;/code&gt; 필드 를 처리하는 방법을 알려주는 선택적 문자열 입니다. 유효한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d3f6b0f91067f4277f3a4ba3ee496ac26501c2dd" translate="yes" xml:space="preserve">
          <source>An optional string with a human-friendly description of the preset.</source>
          <target state="translated">사람에게 친숙한 사전 설정 설명이 포함 된 선택적 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8c9b38033f670378774b9add4c7760c8de988770" translate="yes" xml:space="preserve">
          <source>An optional string with a human-friendly name of the preset.</source>
          <target state="translated">사람에게 친숙한 사전 설정 이름이 포함 된 선택적 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="bbb629d833bba36f4b56cfb6f9c1b3cfe460fb40" translate="yes" xml:space="preserve">
          <source>An optional unsigned number specifying the number of slots available on the resource. For example, this could be megabytes of RAM on a GPU, or cryptography units available on a cryptography chip. If &lt;code&gt;slots&lt;/code&gt; is not specified, a default value of &lt;code&gt;1&lt;/code&gt; is assumed.</source>
          <target state="translated">리소스에서 사용 가능한 슬롯 수를 지정하는 선택적 부호없는 숫자입니다. 예를 들어, 이는 GPU의 메가 바이트 RAM 또는 암호화 칩에서 사용 가능한 암호화 장치 일 수 있습니다. 경우 &lt;code&gt;slots&lt;/code&gt; 지정되지 않은 경우 기본값 &lt;code&gt;1&lt;/code&gt; 가정한다.</target>
        </trans-unit>
        <trans-unit id="e48042d364bbe48e15ff0c2d36dfb9840c666962" translate="yes" xml:space="preserve">
          <source>An outside project may load this file with the &lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; command and reference the &lt;code&gt;MathFunctions&lt;/code&gt; library from the installation tree as if it were built in its own tree. For example:</source>
          <target state="translated">외부 프로젝트는 &lt;a href=&quot;../../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여이 파일을로드 하고 마치 자체 트리에 빌드 된 것처럼 설치 트리에서 &lt;code&gt;MathFunctions&lt;/code&gt; 라이브러리를 참조 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="26beb32ee429927d32ad0543484e09a5fdce91c6" translate="yes" xml:space="preserve">
          <source>An underlined heading specifying the module name.</source>
          <target state="translated">모듈 이름을 지정하는 밑줄이있는 제목입니다.</target>
        </trans-unit>
        <trans-unit id="60bc57dd95e4c45d742fba962b2361d78729e78c" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the backtrace &lt;code&gt;files&lt;/code&gt; array.</source>
          <target state="translated">역 추적 &lt;code&gt;files&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스</target>
        </trans-unit>
        <trans-unit id="d28f0e2c3dc18a0cbafd5dbd9ff497e28904bb9c" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the main &lt;code&gt;directories&lt;/code&gt; array indicating the build system directory in which the target is defined.</source>
          <target state="translated">대상이 정의 된 빌드 시스템 디렉토리를 나타내는 기본 &lt;code&gt;directories&lt;/code&gt; 배열 로의 부호없는 정수 0 기반 색인 입니다.</target>
        </trans-unit>
        <trans-unit id="df58955227c77f4eba4a0cb405dea05623e0b294" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the main &lt;code&gt;projects&lt;/code&gt; array indicating the build system project in which the target is defined.</source>
          <target state="translated">대상이 정의 된 빌드 시스템 프로젝트를 나타내는 기본 &lt;code&gt;projects&lt;/code&gt; 배열 로의 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="1209b50f04eb9415e7b90b97ec2400ec5b02182d" translate="yes" xml:space="preserve">
          <source>An unsigned integer 0-based index into the main &lt;code&gt;projects&lt;/code&gt; array indicating the build system project to which the this directory belongs.</source>
          <target state="translated">이 디렉토리가 속한 빌드 시스템 프로젝트를 나타내는 기본 &lt;code&gt;projects&lt;/code&gt; 배열 로의 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="fd7e023829520b025a25ab35fc0a1e0500737138" translate="yes" xml:space="preserve">
          <source>Anaconda</source>
          <target state="translated">Anaconda</target>
        </trans-unit>
        <trans-unit id="e8062cdaa69cdf6cf935c581bc7bf09e765dec2e" translate="yes" xml:space="preserve">
          <source>Ancient CMake versions once used &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; cache entries to propagate library link dependencies. This has long been done by other means, leaving the &lt;a href=&quot;../command/export_library_dependencies#command:export_library_dependencies&quot; id=&quot;index-0-command:export_library_dependencies&quot;&gt;&lt;code&gt;export_library_dependencies()&lt;/code&gt;&lt;/a&gt; command as the only user of these values. That command has long been disallowed by policy &lt;a href=&quot;cmp0033#policy:CMP0033&quot; id=&quot;index-0-policy:CMP0033&quot;&gt;&lt;code&gt;CMP0033&lt;/code&gt;&lt;/a&gt;, but the &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; cache entries were left for compatibility with possible non-standard uses by projects.</source>
          <target state="translated">고대 CMake 버전은 한 번 &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; 캐시 항목을 사용하여 라이브러리 링크 종속성을 전파했습니다. &lt;a href=&quot;../command/export_library_dependencies#command:export_library_dependencies&quot; id=&quot;index-0-command:export_library_dependencies&quot;&gt; &lt;code&gt;export_library_dependencies()&lt;/code&gt; &lt;/a&gt; 명령을이 값의 유일한 사용자로 남겨두고 다른 방법으로 오랫동안 수행되었습니다 . 이 명령은 정책 &lt;a href=&quot;cmp0033#policy:CMP0033&quot; id=&quot;index-0-policy:CMP0033&quot;&gt; &lt;code&gt;CMP0033&lt;/code&gt; 에&lt;/a&gt; 의해 오랫동안 허용되지 않았지만 &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; 캐시 항목은 프로젝트의 비표준 사용과의 호환성을 위해 남겨졌습니다.</target>
        </trans-unit>
        <trans-unit id="e463d654e65d6be0c53dc03832e2991dcd480e78" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;sub/CMakeLists.txt&lt;/code&gt; with the following contents:</source>
          <target state="translated">그리고 다음 내용을 가진 &lt;code&gt;sub/CMakeLists.txt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a29912b4b2296e80a2a428eeb49c859faf09b7c1" translate="yes" xml:space="preserve">
          <source>And a corresponding source file &lt;code&gt;MathFunctions.cxx&lt;/code&gt;:</source>
          <target state="translated">그리고 해당 소스 파일 &lt;code&gt;MathFunctions.cxx&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="06b8f545e0d8e9d3b9202a5a7b35b4921ba38fe5" translate="yes" xml:space="preserve">
          <source>And for &lt;code&gt;SunPro&lt;/code&gt;:</source>
          <target state="translated">그리고 &lt;code&gt;SunPro&lt;/code&gt; 의 경우 :</target>
        </trans-unit>
        <trans-unit id="44d0df97788f50229a7c291b88843cb07c23301d" translate="yes" xml:space="preserve">
          <source>And here two nested string-valued expressions:</source>
          <target state="translated">그리고 여기에 두 개의 중첩 문자열 값 표현식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9cc52f9a9a79ef81b16887adbaa1d582db9f114" translate="yes" xml:space="preserve">
          <source>And here:</source>
          <target state="translated">그리고 여기:</target>
        </trans-unit>
        <trans-unit id="ba9b78ae8691e277d44722fbc5ed0d744b3890ac" translate="yes" xml:space="preserve">
          <source>And in the ABI header files:</source>
          <target state="translated">그리고 ABI 헤더 파일에서 :</target>
        </trans-unit>
        <trans-unit id="2acb0e375313b954d90d155a41a67614d5b41456" translate="yes" xml:space="preserve">
          <source>And link to the &lt;code&gt;MathFunctions&lt;/code&gt; library:</source>
          <target state="translated">&lt;code&gt;MathFunctions&lt;/code&gt; 라이브러리에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="bc8d6acfe592e508cdec55b5124b2f9a7cd36d96" translate="yes" xml:space="preserve">
          <source>And might define the following as needed</source>
          <target state="translated">그리고 필요에 따라 다음을 정의 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="223c83f504a4edbf787ca59f89863aace0d8c53d" translate="yes" xml:space="preserve">
          <source>And the &lt;a href=&quot;../../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-0-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; property on the tutorial executable:</source>
          <target state="translated">튜토리얼 실행 파일 의 &lt;a href=&quot;../../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-0-prop_tgt:DEBUG_POSTFIX&quot;&gt; &lt;code&gt;DEBUG_POSTFIX&lt;/code&gt; &lt;/a&gt; 속성 :</target>
        </trans-unit>
        <trans-unit id="cdc6819a602208b021e83657dcfb0e513aa51df3" translate="yes" xml:space="preserve">
          <source>And then in somelib:</source>
          <target state="translated">그리고 somelib에서 :</target>
        </trans-unit>
        <trans-unit id="1377ec31ff9ca3e1d9831b47a4d8af7a75ddac1c" translate="yes" xml:space="preserve">
          <source>And then reference that generated header file in actual source.</source>
          <target state="translated">그런 다음 실제 소스에서 생성 된 헤더 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4469ecde5a40cfabba4bdca2e47b79b50142d744" translate="yes" xml:space="preserve">
          <source>And then use the &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command to specify the include directories for the target:</source>
          <target state="translated">그런 다음 &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 대상에 대한 포함 디렉터리를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a949203a1f9a3c534db1e183de1e26a6f5980da3" translate="yes" xml:space="preserve">
          <source>And to search any possible ABIs:</source>
          <target state="translated">가능한 ABI를 검색하려면 :</target>
        </trans-unit>
        <trans-unit id="4fd9b80554ea615c35538b5ce2615dfd819bf2c4" translate="yes" xml:space="preserve">
          <source>And to the end of the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; we add:</source>
          <target state="translated">그리고 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 끝에 다음을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="47ebff641a14b547811f6f53762a0ac0e05b358c" translate="yes" xml:space="preserve">
          <source>Android platform has a special handling of &lt;code&gt;PIE&lt;/code&gt; so it is not required to use the &lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-1-module:CheckPIESupported&quot;&gt;&lt;code&gt;CheckPIESupported&lt;/code&gt;&lt;/a&gt; module to ensure flags are passed to the linker.</source>
          <target state="translated">Android 플랫폼에는 &lt;code&gt;PIE&lt;/code&gt; 를 특수하게 처리 하므로 &lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-1-module:CheckPIESupported&quot;&gt; &lt;code&gt;CheckPIESupported&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 플래그가 링커에 전달 되지 않아도됩니다 .</target>
        </trans-unit>
        <trans-unit id="48aa97a2a6b35741155787e6933129a13ef41664" translate="yes" xml:space="preserve">
          <source>AndroidTestUtilities</source>
          <target state="translated">AndroidTestUtilities</target>
        </trans-unit>
        <trans-unit id="263e0213c04e51cbc3cff4a70541ab9b5487eb50" translate="yes" xml:space="preserve">
          <source>Another alternative would be to create a custom target for &lt;code&gt;foobar&lt;/code&gt;&amp;rsquo;s build step and make &lt;code&gt;secretsauce&lt;/code&gt; depend on that rather than the whole &lt;code&gt;foobar&lt;/code&gt; project. This would mean &lt;code&gt;foobar&lt;/code&gt; only needs to be built, it doesn&amp;rsquo;t need to run its install or test steps before &lt;code&gt;secretsauce&lt;/code&gt; can be built. The dependency can also be defined along with the &lt;code&gt;secretsauce&lt;/code&gt; project:</source>
          <target state="translated">또 다른 대안은 &lt;code&gt;foobar&lt;/code&gt; 의 빌드 단계를 위한 커스텀 대상을 생성 하고 전체 &lt;code&gt;foobar&lt;/code&gt; 프로젝트 가 아닌 &lt;code&gt;secretsauce&lt;/code&gt; 의존 하게 만드는 것 입니다. 이것은 &lt;code&gt;foobar&lt;/code&gt; 만 빌드 하면된다는 것을 의미 하며, &lt;code&gt;secretsauce&lt;/code&gt; 를 빌드 하기 전에 설치 또는 테스트 단계를 실행할 필요가 없습니다 . &lt;code&gt;secretsauce&lt;/code&gt; 프로젝트 와 함께 종속성을 정의 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1bd3666705a037eaf87de73b2015851951a4a09" translate="yes" xml:space="preserve">
          <source>Another case to be aware of is that builds targeting Apple platforms other than macOS are handled differently to other cross compiling scenarios. Rather than relying on &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; to select the target platform, Apple device builds use &lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; to select the appropriate SDK, which indirectly determines the target platform. Furthermore, when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, developers can switch between device and simulator builds at build time rather than having a single choice at configure time, so the concept of whether the build is cross compiling or not is more complex. Therefore, the use of &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; is not recommended for projects targeting Apple devices.</source>
          <target state="translated">알아야 할 또 다른 사례는 macOS 이외의 Apple 플랫폼을 대상으로하는 빌드가 다른 교차 컴파일 시나리오와 다르게 처리된다는 것입니다. Apple 장치는 &lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt; 을 사용하여 대상 플랫폼을 선택 하는 대신 &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 를 사용 하여 대상 플랫폼을 간접적으로 결정하는 적절한 SDK를 선택합니다. 또한 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를 사용할 때 개발자는 구성 시간에 단일 선택을하지 않고 빌드 시간에 장치와 시뮬레이터 빌드간에 전환 할 수 있으므로 빌드가 크로스 컴파일되는지 아닌지에 대한 개념이 더 복잡합니다. 따라서 Apple 디바이스를 대상으로하는 프로젝트 에는 &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; 을 사용 하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9cd68bd560a5f851cd306994d952dc8df49670b9" translate="yes" xml:space="preserve">
          <source>Another case to be aware of is that builds targeting Apple platforms other than macOS are handled differently to other cross compiling scenarios. Rather than relying on &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; to select the target platform, Apple device builds use &lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; to select the appropriate SDK, which indirectly determines the target platform. Furthermore, when using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, developers can switch between device and simulator builds at build time rather than having a single choice at configure time, so the concept of whether the build is cross compiling or not is more complex. Therefore, the use of &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; is not recommended for projects targeting Apple devices.</source>
          <target state="translated">알아야 할 또 다른 경우는 macOS 이외의 Apple 플랫폼을 대상으로하는 빌드가 다른 크로스 컴파일 시나리오와 다르게 처리된다는 것입니다. &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-3-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 에 의존 하여 대상 플랫폼을 선택 하는 대신 Apple 장치 빌드는 &lt;a href=&quot;cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt; 를 사용 하여 대상 플랫폼을 간접적으로 결정하는 적절한 SDK를 선택합니다. 또한 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를 사용할 때 개발자는 구성시 단일 선택을하지 않고 빌드시 장치 빌드와 시뮬레이터 빌드간에 전환 할 수 있으므로 빌드가 크로스 컴파일인지 여부에 대한 개념이 더 복잡합니다. 따라서 &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; 의 사용은 Apple 장치를 대상으로하는 프로젝트에 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="caa322b886a730e4a6da51558313c9249f7403b2" translate="yes" xml:space="preserve">
          <source>Another difference between macros and functions is the control flow. A function is executed by transferring control from the calling statement to the function body. A macro is executed as if the macro body were pasted in place of the calling statement. This has the consequence that a &lt;a href=&quot;return#command:return&quot; id=&quot;index-0-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; in a macro body does not just terminate execution of the macro; rather, control is returned from the scope of the macro call. To avoid confusion, it is recommended to avoid &lt;a href=&quot;return#command:return&quot; id=&quot;index-1-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; in macros altogether.</source>
          <target state="translated">매크로와 함수의 또 다른 차이점은 제어 흐름입니다. 함수는 호출 명령문에서 함수 본문으로 제어를 전송하여 실행됩니다. 호출 문 대신 매크로 본문을 붙여 넣은 것처럼 매크로가 실행됩니다. 이는 매크로 본문 의 &lt;a href=&quot;return#command:return&quot; id=&quot;index-0-command:return&quot;&gt; &lt;code&gt;return()&lt;/code&gt; &lt;/a&gt; 이 매크로 실행을 종료하지는 않습니다. 오히려 매크로 호출 범위에서 제어가 리턴됩니다. 혼동을 피하기 위해 매크로에서 모두 &lt;a href=&quot;return#command:return&quot; id=&quot;index-1-command:return&quot;&gt; &lt;code&gt;return()&lt;/code&gt; &lt;/a&gt; 을 피하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="32b92bcc9b3662b45954afd478c1c88ab07f2598" translate="yes" xml:space="preserve">
          <source>Another example for the full signature:</source>
          <target state="translated">전체 서명의 다른 예 :</target>
        </trans-unit>
        <trans-unit id="f049848e60c3024bac8f111fa32909f4ed13c74f" translate="yes" xml:space="preserve">
          <source>Another use-case is to employ an entirely target-focussed design for usage requirements:</source>
          <target state="translated">또 다른 사용 사례는 사용 요구 사항에 대해 완전히 목표 중심 디자인을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e444e1926796ce28315c97ea8ce57d3bd080b107" translate="yes" xml:space="preserve">
          <source>Another way is to write debug messages to a file:</source>
          <target state="translated">다른 방법은 디버그 메시지를 파일에 쓰는 것입니다.</target>
        </trans-unit>
        <trans-unit id="16bd6b46e7c50970218fd10bce6b0b904b3dcf6d" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-0-prop_tgt:PUBLIC_HEADER&quot;&gt;&lt;code&gt;PUBLIC_HEADER&lt;/code&gt;&lt;/a&gt; files associated with a library are installed in the destination specified by the &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; argument on non-Apple platforms. Rules defined by this argument are ignored for &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; libraries on Apple platforms because the associated files are installed into the appropriate locations inside the framework folder. See &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-1-prop_tgt:PUBLIC_HEADER&quot;&gt;&lt;code&gt;PUBLIC_HEADER&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">모든 &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-0-prop_tgt:PUBLIC_HEADER&quot;&gt; &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; 의&lt;/a&gt; 라이브러리와 관련된 파일은에 의해 지정된 대상에 설치되어 &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; 의 비 애플 플랫폼에서 인수. 연관된 파일이 프레임 워크 폴더 내의 적절한 위치에 설치되므로 Apple 플랫폼의 &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 라이브러리 에서는이 인수로 정의 된 규칙이 무시됩니다 . 자세한 내용은 &lt;a href=&quot;../prop_tgt/public_header#prop_tgt:PUBLIC_HEADER&quot; id=&quot;index-1-prop_tgt:PUBLIC_HEADER&quot;&gt; &lt;code&gt;PUBLIC_HEADER&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ff5e39ee5af48a04901866949149cdc963f07870" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;COMPONENTS&lt;/code&gt; given to &lt;code&gt;find_package&lt;/code&gt; should be the names of supported target languages as provided to the LANGUAGE argument of &lt;code&gt;swig_add_library&lt;/code&gt;, such as &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;perl5&lt;/code&gt;. Language names &lt;em&gt;must&lt;/em&gt; be lowercase.</source>
          <target state="translated">&lt;code&gt;find_package&lt;/code&gt; 에 제공된 모든 &lt;code&gt;COMPONENTS&lt;/code&gt; 는 &lt;code&gt;swig_add_library&lt;/code&gt; 의 LANGUAGE 인수에 제공된 &lt;code&gt;python&lt;/code&gt; 또는 &lt;code&gt;perl5&lt;/code&gt; 와 같이 지원되는 대상 언어의 이름이어야합니다 . 언어 이름 &lt;em&gt;은&lt;/em&gt; 소문자 여야합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95e67db21a145dab206c8f339078f61e298dbd7d" translate="yes" xml:space="preserve">
          <source>Any additional (optional) arguments provided are passed along as the optional arguments to the list_prerequisites calls.</source>
          <target state="translated">제공된 추가 (선택적) 인수는 선택적 인수로 list_prerequisites 호출에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="9846ca8c8ee63e3adc4d5149a3ddd1d80a7b8789" translate="yes" xml:space="preserve">
          <source>Any command-line arguments present in &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; as a string</source>
          <target state="translated">&lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 에 문자열로 존재하는 모든 명령 줄 인수</target>
        </trans-unit>
        <trans-unit id="2f7121c7448b424c2afc771a26c4c02e576eb1b2" translate="yes" xml:space="preserve">
          <source>Any extra arguments to pass on the command line to each test case.</source>
          <target state="translated">명령 줄에서 각 테스트 사례에 전달할 추가 인수</target>
        </trans-unit>
        <trans-unit id="e9ef08561fa0e687bd21956604b4ed5d3eb0ed0a" translate="yes" xml:space="preserve">
          <source>Any file that is</source>
          <target state="translated">모든 파일</target>
        </trans-unit>
        <trans-unit id="597f9868ab32856e76b3b731a2addeb6f276e3ab" translate="yes" xml:space="preserve">
          <source>Any files in the current source directory that match the regular expression will be installed.</source>
          <target state="translated">정규식과 일치하는 현재 소스 디렉토리의 모든 파일이 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="ae21f258709eaf7f3bd0b9b6c2bc82250060fa9e" translate="yes" xml:space="preserve">
          <source>Any files listed after the &lt;code&gt;FILES&lt;/code&gt; keyword will be installed explicitly from the names given. Full paths are allowed in this form.</source>
          <target state="translated">&lt;code&gt;FILES&lt;/code&gt; 키워드 뒤에 나열된 모든 파일은 지정된 이름으로 명시 적으로 설치됩니다. 이 형식에서는 전체 경로가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="48b6dee3c34670ad5efe7a723d52014aee9caa1f" translate="yes" xml:space="preserve">
          <source>Any leading &lt;code&gt;-D&lt;/code&gt; on an item will be removed. Empty items are ignored. For example, the following are all equivalent:</source>
          <target state="translated">항목의 선행 &lt;code&gt;-D&lt;/code&gt; 가 제거됩니다. 빈 항목은 무시됩니다. 예를 들어 다음은 모두 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0550599bd2ad36bc860637ae326f4638f0ae318d" translate="yes" xml:space="preserve">
          <source>Any number of target installations may be associated with the same export name. Export names are considered global so any directory may contribute a target installation. The &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-6-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command only needs to be called once to install a file that references all targets. Below is an example of how multiple exports may be combined into a single export file, even if they are in different subdirectories of the project.</source>
          <target state="translated">여러 대상 설치가 동일한 내보내기 이름과 연관 될 수 있습니다. 내보내기 이름은 전역으로 간주되므로 모든 디렉토리가 대상 설치에 기여할 수 있습니다. &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-6-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 파일 즉 참조 모든 대상을 설치하면 명령은 호출 할 필요가있다. 다음은 프로젝트의 다른 하위 디렉토리에 있더라도 여러 내보내기를 단일 내보내기 파일로 결합 할 수있는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="929241a9723e50b878a7bf9dace2fed58fbf81fd" translate="yes" xml:space="preserve">
          <source>Any of the other &lt;code&gt;..._COMMAND&lt;/code&gt; options can have additional commands appended to them by following them with as many &lt;code&gt;COMMAND ...&lt;/code&gt; options as needed (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-8-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). For example:</source>
          <target state="translated">다른 &lt;code&gt;..._COMMAND&lt;/code&gt; 옵션은 필요한 만큼 많은 &lt;code&gt;COMMAND ...&lt;/code&gt; 옵션 과 함께 명령을 추가하여 추가 명령을 추가 할 수 있습니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-8-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6adf892b5c89a1ca556fae97595b994d3c69419a" translate="yes" xml:space="preserve">
          <source>Any of the three systems can be targeted by setting the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-6-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable to a value from the table below. By default, the latest Device SDK is chosen. As for all Apple platforms, a different SDK (e.g. a simulator) can be selected by setting the &lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt;&lt;/a&gt; variable, although this should rarely be necessary (see &lt;a href=&quot;#switching-between-device-and-simulator&quot;&gt;Switching Between Device and Simulator&lt;/a&gt; below). A list of available SDKs can be obtained by running &lt;code&gt;xcodebuild -showsdks&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-6-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 변수를 아래 표의 값 으로 설정하여 세 시스템 중 하나를 대상으로 할 수 있습니다 . 기본적으로 최신 Device SDK가 선택됩니다. 모든 Apple 플랫폼의 경우 &lt;a href=&quot;../variable/cmake_osx_sysroot#variable:CMAKE_OSX_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_OSX_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_OSX_SYSROOT&lt;/code&gt; &lt;/a&gt; 변수 를 설정하여 다른 SDK (예 : 시뮬레이터)를 선택할 수 있지만, 거의 필요하지는 않습니다 ( 아래의 &lt;a href=&quot;#switching-between-device-and-simulator&quot;&gt;장치와 시뮬레이터 간 전환&lt;/a&gt; 참조). &lt;code&gt;xcodebuild -showsdks&lt;/code&gt; 를 실행하여 사용 가능한 SDK 목록을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f60abe8bc198d1bcf9f7c4d89dfdaf0549a4d5df" translate="yes" xml:space="preserve">
          <source>Any options after &lt;code&gt;--&lt;/code&gt; are not parsed by CMake, but they are still included in the set of &lt;a href=&quot;../variable/cmake_argv0#variable:CMAKE_ARGV0&quot; id=&quot;index-0-variable:CMAKE_ARGV0&quot;&gt;&lt;code&gt;CMAKE_ARGV&amp;lt;n&amp;gt;&lt;/code&gt;&lt;/a&gt; variables passed to the script (including the &lt;code&gt;--&lt;/code&gt; itself).</source>
          <target state="translated">&lt;code&gt;--&lt;/code&gt; 이후의 모든 옵션 은 CMake에 의해 구문 분석되지 않지만 스크립트에 전달 된 &lt;a href=&quot;../variable/cmake_argv0#variable:CMAKE_ARGV0&quot; id=&quot;index-0-variable:CMAKE_ARGV0&quot;&gt; &lt;code&gt;CMAKE_ARGV&amp;lt;n&amp;gt;&lt;/code&gt; &lt;/a&gt; 변수 집합에 여전히 포함됩니다 ( &lt;code&gt;--&lt;/code&gt; 자체 포함).</target>
        </trans-unit>
        <trans-unit id="d2c334e3ce0a1178cdb62c5704d4f61ccedf4ee0" translate="yes" xml:space="preserve">
          <source>Any source file specified explicitly will be placed in group &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. Relative paths are interpreted with respect to the current source directory.</source>
          <target state="translated">명시 적으로 지정된 모든 소스 파일은 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 그룹에 배치됩니다 . 상대 경로는 현재 소스 디렉토리와 관련하여 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="343df04f6cf3378890c0588e423f5fb5d24eb126" translate="yes" xml:space="preserve">
          <source>Any source file that has a non-empty &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt;&lt;code&gt;COMPILE_FLAGS&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; source property will not be combined into a unity source.</source>
          <target state="translated">비어 있지 않은 &lt;a href=&quot;../prop_sf/compile_options#prop_sf:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_sf:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_sf/compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_sf/compile_flags#prop_sf:COMPILE_FLAGS&quot; id=&quot;index-0-prop_sf:COMPILE_FLAGS&quot;&gt; &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_sf/include_directories#prop_sf:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_sf:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 소스 속성 이있는 소스 파일 은 단일 소스로 결합되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39b47e6d391d6dc228ea745b922d22c4cb57189f" translate="yes" xml:space="preserve">
          <source>Any source file whose name matches the regular expression will be placed in group &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이름이 정규식과 일치하는 모든 소스 파일은 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 그룹에 배치됩니다 .</target>
        </trans-unit>
        <trans-unit id="d133916144926e22e46e094da5b6357a6ab7d55c" translate="yes" xml:space="preserve">
          <source>Append &amp;lt;value&amp;gt; to the list variable &amp;lt;list_var&amp;gt; only if the value is not already in the list.</source>
          <target state="translated">값이 아직 목록에없는 경우에만 목록 변수 &amp;lt;list_var&amp;gt;에 &amp;lt;value&amp;gt;를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="b5c3bc3e9c3685c2eca7809a884556f4957ebed3" translate="yes" xml:space="preserve">
          <source>Append all the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; arguments to the string.</source>
          <target state="translated">모든 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 인수를 문자열에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="002b0bb1ad5fafabdc8cc175c7f47135481ac52c" translate="yes" xml:space="preserve">
          <source>Append all the input arguments to the string.</source>
          <target state="translated">모든 입력 인수를 문자열에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="dafc92f92d193fbb4738615e0ae5828a60d6f55a" translate="yes" xml:space="preserve">
          <source>Append the &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;DEPENDS&lt;/code&gt; option values to the custom command for the first output specified. There must have already been a previous call to this command with the same output. The &lt;code&gt;COMMENT&lt;/code&gt;, &lt;code&gt;MAIN_DEPENDENCY&lt;/code&gt;, and &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; options are currently ignored when APPEND is given, but may be used in the future.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 및 &lt;code&gt;DEPENDS&lt;/code&gt; 옵션 값을 지정된 첫 번째 출력의 사용자 정의 명령에 추가하십시오 . 동일한 출력으로이 명령에 대한 이전 호출이 이미 있어야합니다. &lt;code&gt;COMMENT&lt;/code&gt; , &lt;code&gt;MAIN_DEPENDENCY&lt;/code&gt; 및 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 의 옵션은 APPEND가 주어 졌을 때 현재 무시되지만 미래에 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="9539e5136c00f8d5b12d716276e8c8f5b489cd63" translate="yes" xml:space="preserve">
          <source>Appends elements to the list.</source>
          <target state="translated">요소를 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="476432a3e85a0aa21c23f5abd2975a89b6820d63" translate="yes" xml:space="preserve">
          <source>Apple</source>
          <target state="translated">Apple</target>
        </trans-unit>
        <trans-unit id="777870f7cf74ee81a82ac678180bad46ad6a3ff7" translate="yes" xml:space="preserve">
          <source>Apple Frameworks</source>
          <target state="translated">애플 프레임 워크</target>
        </trans-unit>
        <trans-unit id="60b0245f008d01a2c20618c03bb4e8661b2b07cc" translate="yes" xml:space="preserve">
          <source>Apply IPO flags only if compiler supports it:</source>
          <target state="translated">컴파일러가 지원하는 경우에만 IPO 플래그를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="204d1b12cb1a08bafe807a1a5b78a00552d1b900" translate="yes" xml:space="preserve">
          <source>Apply IPO flags without any checks. This may lead to build errors if IPO is not supported by the compiler in the current environment. Produce an error if CMake does not know IPO flags for the current compiler:</source>
          <target state="translated">검사없이 IPO 플래그를 적용하십시오. 현재 환경에서 컴파일러가 IPO를 지원하지 않으면 빌드 오류가 발생할 수 있습니다. CMake가 현재 컴파일러의 IPO 플래그를 모르는 경우 오류를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="f3ea7706a109011557be1c51c5a4380f59676e53" translate="yes" xml:space="preserve">
          <source>Approximate C preprocessor dependency scanning.</source>
          <target state="translated">대략적인 C 전 처리기 종속성 검색</target>
        </trans-unit>
        <trans-unit id="0b4e6001189b09caa6284aedc047f083baed5d93" translate="yes" xml:space="preserve">
          <source>Archive Output Artifacts</source>
          <target state="translated">아카이브 결과 아티팩트</target>
        </trans-unit>
        <trans-unit id="6fcd7e10d5759ed0472a5db4745f0617cc7e3325" translate="yes" xml:space="preserve">
          <source>Archiver (or MSVC librarian) flags for a static library target. Targets that are shared libraries, modules, or executables need to use the &lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;link_flags#prop_tgt:LINK_FLAGS&quot; id=&quot;index-0-prop_tgt:LINK_FLAGS&quot;&gt;&lt;code&gt;LINK_FLAGS&lt;/code&gt;&lt;/a&gt; target properties.</source>
          <target state="translated">정적 라이브러리 대상에 대한 아카이버 (또는 MSVC 사서) 플래그. 공유 라이브러리, 모듈 또는 실행 파일 인 대상 은 &lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;link_flags#prop_tgt:LINK_FLAGS&quot; id=&quot;index-0-prop_tgt:LINK_FLAGS&quot;&gt; &lt;code&gt;LINK_FLAGS&lt;/code&gt; &lt;/a&gt; 대상 속성 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9c04f434f34e35befcca59243bbaac9773ef3728" translate="yes" xml:space="preserve">
          <source>Archiver (or MSVC librarian) flags for a static library target. Targets that are shared libraries, modules, or executables need to use the &lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">정적 라이브러리 대상에 대한 아카이버 (또는 MSVC 사서) 플래그. 공유 라이브러리, 모듈 또는 실행 파일 인 대상 은 &lt;a href=&quot;link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7f96b2a5646663ab9be491e5aedf702a63607fb4" translate="yes" xml:space="preserve">
          <source>Archiving</source>
          <target state="translated">Archiving</target>
        </trans-unit>
        <trans-unit id="e6825814ecadc5b7ceff9ec50ec4789eadcf6035" translate="yes" xml:space="preserve">
          <source>Argument Caveats</source>
          <target state="translated">인수주의 사항</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="ce1919c51648bd08a57c737b02b1e43525213858" translate="yes" xml:space="preserve">
          <source>Arguments after &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; are ignored. If extra arguments are found, then an author warning is issued.</source>
          <target state="translated">&lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 이후의 인수 는 무시됩니다. 추가 인수가 있으면 작성자 경고가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="60516219b3c552632e98602c767d384032c3512b" translate="yes" xml:space="preserve">
          <source>Arguments are separated by by unquoted whitespace. Both single-quote and double-quote pairs are respected. A backslash escapes the next literal character (&lt;code&gt;\&quot;&lt;/code&gt; is &lt;code&gt;&quot;&lt;/code&gt;); there are no special escapes (&lt;code&gt;\n&lt;/code&gt; is just &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">인수는 따옴표없는 공백으로 구분됩니다. 작은 따옴표와 큰 따옴표 쌍이 모두 존중됩니다. 백 슬래시는 다음 리터럴 문자를 이스케이프합니다 ( &lt;code&gt;\&quot;&lt;/code&gt; 는 &lt;code&gt;&quot;&lt;/code&gt; ). 특별한 이스케이프가 없습니다 ( &lt;code&gt;\n&lt;/code&gt; 은 단지 &lt;code&gt;n&lt;/code&gt; 입니다 ).</target>
        </trans-unit>
        <trans-unit id="301df304e1e7c5d4cacecb86e6abc38df42aa1d7" translate="yes" xml:space="preserve">
          <source>Arguments are separated by unquoted whitespace. Both single-quote and double-quote pairs are respected. A backslash escapes the next literal character (&lt;code&gt;\&quot;&lt;/code&gt; is &lt;code&gt;&quot;&lt;/code&gt;); there are no special escapes (&lt;code&gt;\n&lt;/code&gt; is just &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">인수는 인용되지 않은 공백으로 구분됩니다. 작은 따옴표와 큰 따옴표 쌍이 모두 적용됩니다. 백 슬래시는 다음 리터럴 문자를 이스케이프합니다 ( &lt;code&gt;\&quot;&lt;/code&gt; 는 &lt;code&gt;&quot;&lt;/code&gt; ). 특별한 이스케이프가 없습니다 ( &lt;code&gt;\n&lt;/code&gt; 은 &lt;code&gt;n&lt;/code&gt; 입니다 ).</target>
        </trans-unit>
        <trans-unit id="7091f53351e85563648783b2a51b7668b433c123" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;a href=&quot;#prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot; id=&quot;index-0-prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_MAKE_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot; id=&quot;index-0-prop_dir:ADDITIONAL_MAKE_CLEAN_FILES&quot;&gt; &lt;code&gt;ADDITIONAL_MAKE_CLEAN_FILES&lt;/code&gt; 에 대한&lt;/a&gt; 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8aebbc22f932f9e670c4461b575a2ad8bdd5c3cf" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;COMMAND&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;. References to target names in generator expressions imply target-level dependencies.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 . 생성기 표현식에서 대상 이름에 대한 참조는 대상 레벨 종속성을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="fd7093a9323e5a48a491ccf7c41203e34db2bf2f" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;COMMAND&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;. Use the &lt;code&gt;TARGET_FILE&lt;/code&gt; generator expression to refer to the location of a target later in the command line (i.e. as a command argument rather than as the command to execute).</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 . &lt;code&gt;TARGET_FILE&lt;/code&gt; 생성기 표현식을 사용하여 나중에 명령 줄에서 대상 위치를 참조합니다 (예 : 실행할 명령이 아닌 명령 인수로 참조).</target>
        </trans-unit>
        <trans-unit id="6259cc0dbd7db60e261933287a8c22eae04534d0" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;COMMAND&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;. References to target names in generator expressions imply target-level dependencies, but NOT file-level dependencies. List target names with the &lt;code&gt;DEPENDS&lt;/code&gt; option to add file-level dependencies.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 . 생성기 표현식에서 대상 이름에 대한 참조는 대상 레벨 종속성을 의미하지만 파일 레벨 종속성은 아닙니다. 파일 레벨 종속성을 추가 하려면 &lt;code&gt;DEPENDS&lt;/code&gt; 옵션으로 대상 이름을 나열 하십시오.</target>
        </trans-unit>
        <trans-unit id="0335569b009c00a302c2bf704bdfb7b9d6e62743" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;DEPENDS&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DEPENDS&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f983cf60553bdeb5c538abf64fa01a40abec452b" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;DEPENDS&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DEPENDS&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0be3156920565f2aea3b9dc39b79b8a26a7d145f" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="42b0d4a9afcc8d0d8ce34ae2b90b135181d2dd33" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="235ccd1a7121ae3238c469f7e421d28979b3001f" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 에 대한 인수 는 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-4-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0ba53f155c2c8d04178424534c67c967bd31427" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_compile_definitions&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;add_compile_definitions&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6ff400e33f70a45ac19710f4ae6208df5d93b810" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_compile_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;add_compile_options&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7908d771c4d8832f5d54610d644600f9047d9867" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;add_link_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;add_link_options&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ec4e3b7bdc9759ec7d95a870736b531d7546dbc" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;include_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &amp;ldquo;$&amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;include_directories&lt;/code&gt; 에 대한 인수 는&amp;ldquo;$ &amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;구문과 함께&amp;ldquo;제너레이터 표현식&amp;rdquo;을 사용할 수 있습니다. 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cc47560fa68e0bcb828e8ad148468cf5b11c54e2" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;link_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &amp;ldquo;$&amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;link_directories&lt;/code&gt; 에 대한 인수 는&amp;ldquo;$ &amp;lt;&amp;hellip;&amp;gt;&amp;rdquo;구문과 함께&amp;ldquo;제너레이터 표현식&amp;rdquo;을 사용할 수 있습니다. 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0eee2ec30db27a8b543e1d93508dcae8dc7d4e07" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_definitions&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_compile_definitions&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9feb3c19bdd1726e7ac6e27de0a88569aa21218c" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_features&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt;&lt;code&gt;cmake-compile-features(7)&lt;/code&gt;&lt;/a&gt; manual for information on compile features and a list of supported compilers.</source>
          <target state="translated">&lt;code&gt;target_compile_features&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 컴파일 기능 및 지원되는 컴파일러 목록에 대한 정보 는 &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt; &lt;code&gt;cmake-compile-features(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e49b6ba509744077a3220cf63938d28c5bd0d4da" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_compile_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_compile_options&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fbee41e7187943cd4334e5bcfe087fec8ae80b65" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_include_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_include_directories&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b6eec3145bac83e2b3d5be281339871debbf8c85" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_link_directories&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_link_directories&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9fde6fb507623a2fd88a59c5bc88fe4eec663e7e" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_link_options&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_link_options&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fe8886823f8acd1352037530a5bd8963d85f0c76" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_precompile_headers()&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. The &lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:...&amp;gt;&lt;/code&gt; generator expression is particularly useful for specifying a language-specific header to precompile for only one language (e.g. &lt;code&gt;CXX&lt;/code&gt; and not &lt;code&gt;C&lt;/code&gt;). In this case, header file names that are not explicitly in double quotes or angle brackets must be specified by absolute path. Also, when specifying angle brackets inside a generator expression, be sure to encode the closing &lt;code&gt;&amp;gt;&lt;/code&gt; as &lt;code&gt;$&amp;lt;ANGLE-R&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;target_precompile_headers()&lt;/code&gt; 인수는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;생성기 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . &lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:...&amp;gt;&lt;/code&gt; 발생기 표현은 하나의 언어 (예를 위해 미리 컴파일 언어 별 헤더를 특정하기위한 특히 유용 &lt;code&gt;CXX&lt;/code&gt; 아니라 &lt;code&gt;C&lt;/code&gt; ). 이 경우 명시 적으로 큰 따옴표 나 꺾쇠 괄호로 묶이지 않은 헤더 파일 이름은 절대 경로로 지정해야합니다. 또한 생성기 표현식 내부에 꺾쇠 괄호를 지정할 때 닫기 &lt;code&gt;&amp;gt;&lt;/code&gt; 를 &lt;code&gt;$&amp;lt;ANGLE-R&amp;gt;&lt;/code&gt; 로 인코딩해야합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="91b0dcf15481419caa9be18eadb92c8d8f56c3a1" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;target_sources&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. See the &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;cmake-buildsystem(7)&lt;/code&gt;&lt;/a&gt; manual for more on defining buildsystem properties.</source>
          <target state="translated">&lt;code&gt;target_sources&lt;/code&gt; 에 대한 인수 는 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; 구문과 함께 &quot;제너레이터 표현식&quot;을 사용할 수 있습니다 . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 . 빌드 시스템 속성 정의에 대한 자세한 내용은 &lt;a href=&quot;../manual/cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;cmake-buildsystem(7)&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c7dac8d6a816175ae0c3cc2ebf4fe407cef5b76d" translate="yes" xml:space="preserve">
          <source>Artifacts Specification</source>
          <target state="translated">아티팩트 사양</target>
        </trans-unit>
        <trans-unit id="0157baf89f84bc8a881d92ffdbd927623185bac0" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;COMMAND&lt;/code&gt; specifies an executable target name, it will automatically be replaced by the location of the executable given by the &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-2-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property above.</source>
          <target state="translated">마찬가지로 &lt;code&gt;COMMAND&lt;/code&gt; 는 실행 대상의 이름을 지정하고,이를 자동으로 주어진 실행의 위치에 의해 대체 될 것이다 &lt;a href=&quot;../../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-2-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; 의&lt;/a&gt; 상기 속성.</target>
        </trans-unit>
        <trans-unit id="766759e42f48dcd7a5888cbf1bf92446bad51881" translate="yes" xml:space="preserve">
          <source>As CMake evolves it is sometimes necessary to change existing behavior in order to fix bugs or improve implementations of existing features. The CMake Policy mechanism is designed to help keep existing projects building as new versions of CMake introduce changes in behavior. Each new policy (behavioral change) is given an identifier of the form &lt;code&gt;CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; where &lt;code&gt;&amp;lt;NNNN&amp;gt;&lt;/code&gt; is an integer index. Documentation associated with each policy describes the &lt;code&gt;OLD&lt;/code&gt; and &lt;code&gt;NEW&lt;/code&gt; behavior and the reason the policy was introduced. Projects may set each policy to select the desired behavior. When CMake needs to know which behavior to use it checks for a setting specified by the project. If no setting is available the &lt;code&gt;OLD&lt;/code&gt; behavior is assumed and a warning is produced requesting that the policy be set.</source>
          <target state="translated">CMake가 발전함에 따라 버그를 수정하거나 기존 기능의 구현을 개선하기 위해 기존 동작을 변경해야하는 경우가 있습니다. CMake Policy 메커니즘은 새로운 버전의 CMake가 동작에 변화를 가져올 때 기존 프로젝트를 계속 유지하도록 설계되었습니다. 각각의 새 정책 (행동 변경)에는 &lt;code&gt;CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; 형식의 식별자가 제공됩니다. 여기서 &lt;code&gt;&amp;lt;NNNN&amp;gt;&lt;/code&gt; 은 정수 인덱스입니다. 각 정책과 관련된 설명서에는 &lt;code&gt;OLD&lt;/code&gt; 및 &lt;code&gt;NEW&lt;/code&gt; 동작과 정책이 도입 된 이유가 설명되어 있습니다. 프로젝트는 원하는 행동을 선택하기 위해 각 정책을 설정할 수 있습니다. CMake는 사용할 동작을 알아야 할 때 프로젝트가 지정한 설정을 확인합니다. 사용 가능한 설정이 없으면 &lt;code&gt;OLD&lt;/code&gt; 동작이 가정되고 정책 설정을 요청하는 경고가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3f6d3026c1e3926b03cddef0eb4ee1561816796f" translate="yes" xml:space="preserve">
          <source>As CMake processes the listfiles in your project this variable will always be set to the directory where the listfile which is currently being processed (&lt;a href=&quot;cmake_current_list_file#variable:CMAKE_CURRENT_LIST_FILE&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_FILE&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_FILE&lt;/code&gt;&lt;/a&gt;) is located. The value has dynamic scope. When CMake starts processing commands in a source file it sets this variable to the directory where this file is located. When CMake finishes processing commands from the file it restores the previous value. Therefore the value of the variable inside a macro or function is the directory of the file invoking the bottom-most entry on the call stack, not the directory of the file containing the macro or function definition.</source>
          <target state="translated">CMake가 프로젝트에서 목록 파일을 처리 할 때이 변수는 항상 현재 처리중인 목록 파일 ( &lt;a href=&quot;cmake_current_list_file#variable:CMAKE_CURRENT_LIST_FILE&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_FILE&quot;&gt; &lt;code&gt;CMAKE_CURRENT_LIST_FILE&lt;/code&gt; &lt;/a&gt; )이 있는 디렉토리로 설정됩니다 . 값은 동적 범위를 갖습니다. CMake는 소스 파일에서 명령 처리를 시작할 때이 변수를이 파일이있는 디렉토리로 설정합니다. CMake가 파일에서 명령 처리를 마치면 이전 값을 복원합니다. 따라서 매크로 또는 함수 내부의 변수 값은 매크로 또는 함수 정의를 포함하는 파일의 디렉토리가 아니라 호출 스택에서 맨 아래 항목을 호출하는 파일의 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="c2d27420091bb6145f08720e09bec9c82142917e" translate="yes" xml:space="preserve">
          <source>As CMake processes the listfiles in your project this variable will always be set to the one currently being processed. The value has dynamic scope. When CMake starts processing commands in a source file it sets this variable to the location of the file. When CMake finishes processing commands from the file it restores the previous value. Therefore the value of the variable inside a macro or function is the file invoking the bottom-most entry on the call stack, not the file containing the macro or function definition.</source>
          <target state="translated">CMake가 프로젝트에서 목록 파일을 처리 할 때이 변수는 항상 현재 처리중인 것으로 설정됩니다. 값은 동적 범위를 갖습니다. CMake는 소스 파일에서 명령 처리를 시작할 때이 변수를 파일 위치로 설정합니다. CMake가 파일에서 명령 처리를 마치면 이전 값을 복원합니다. 따라서 매크로 또는 함수 내부의 변수 값은 매크로 또는 함수 정의를 포함하는 파일이 아니라 호출 스택에서 맨 아래 항목을 호출하는 파일입니다.</target>
        </trans-unit>
        <trans-unit id="80e0cfce4fc008add33a464909ee83c11c643e32" translate="yes" xml:space="preserve">
          <source>As a suggestion, IDEs may also ship a copy of the Ninja buildsystem alongside CMake. Ninja is highly performant and well-supported on all platforms that support CMake. IDEs that bundle Ninja should use Ninja 1.10 or later, which contains features needed to support Fortran builds.</source>
          <target state="translated">제안으로 IDE는 CMake와 함께 Ninja 빌드 시스템의 사본을 제공 할 수도 있습니다. Ninja는 CMake를 지원하는 모든 플랫폼에서 성능이 뛰어나고 잘 지원됩니다. Ninja를 번들로 제공하는 IDE는 Fortran 빌드를 지원하는 데 필요한 기능이 포함 된 Ninja 1.10 이상을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9e26abe1d2ab7c6edba4dca869aba4cf394173c7" translate="yes" xml:space="preserve">
          <source>As absolute paths are not supported by &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; installer generators, it is preferable to use relative paths throughout. In particular, there is no need to make paths absolute by prepending &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;; this prefix is used by default if the DESTINATION is a relative path.</source>
          <target state="translated">절대 경로는 &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt; 설치 프로그램 생성기에서 지원되지 않으므로 전체적으로 상대 경로를 사용하는 것이 좋습니다. 특히 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 를 앞에 추가하여 절대 경로를 만들 필요가 없습니다 . 이 접두사는 DESTINATION이 상대 경로 인 경우 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cc8768324c681fb3a1c1526d18fb3fe6c95e4a31" translate="yes" xml:space="preserve">
          <source>As an additional diagnostic, the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; generated on an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target for the install location should not contain paths in the source directory or the build directory.</source>
          <target state="translated">추가 진단으로, 설치 위치 의 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상에서 생성 된 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 는 소스 디렉토리 또는 빌드 디렉토리의 경로를 포함하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="0b1ccb1240c1f5838b4bd1dede098f007f8f427e" translate="yes" xml:space="preserve">
          <source>As an example, assume you have a static Fortran library which depends on a static C library, which in turn depends on a static Fortran library. The top-level Fortran library has optimization enabled, but the middle C library does not. If you build the top Fortran library, the bottom Fortran library will also build, but not the middle C library, since the C library does not have any side effects that are relevant for the Fortran library. However, if you build the middle C library, the bottom Fortran library will also build, even though it does not have any side effects that are relevant to the C library, since the C library does not have optimization enabled.</source>
          <target state="translated">예를 들어, 정적 Fortran 라이브러리에 의존하는 정적 C 라이브러리에 의존하는 정적 Fortran 라이브러리가 있다고 가정합니다. 최상위 Fortran 라이브러리에는 최적화가 활성화되어 있지만 중간 C 라이브러리는 활성화되지 않습니다. 상위 Fortran 라이브러리를 빌드하는 경우 C 라이브러리에는 Fortran 라이브러리와 관련된 부작용이 없기 때문에 하단 Fortran 라이브러리도 빌드되지만 중간 C 라이브러리는 빌드되지 않습니다. 그러나 중간 C 라이브러리를 빌드하면 C 라이브러리에 최적화가 활성화되어 있지 않기 때문에 C 라이브러리와 관련된 부작용이 없더라도 맨 아래 Fortran 라이브러리도 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="a6ce31a06502cb7c179c7be7a0a7a4a45b5654bd" translate="yes" xml:space="preserve">
          <source>As an optional parameter (&lt;code&gt;IGNORE_ITEM&lt;/code&gt;) a list of file names can be passed, which are then ignored (e.g. &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt;)</source>
          <target state="translated">선택적 매개 변수 ( &lt;code&gt;IGNORE_ITEM&lt;/code&gt; )로서 파일 이름 목록을 전달한 다음 무시할 수 있습니다 (예 : &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="57d1332aab01da83db51bbb6239c692437ad0733" translate="yes" xml:space="preserve">
          <source>As an optional parameter (&lt;code&gt;IGNORE_ITEM&lt;/code&gt;) a list of file names can be passed, which are then ignored (e.g. &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt;).</source>
          <target state="translated">선택적 매개 변수 ( &lt;code&gt;IGNORE_ITEM&lt;/code&gt; )로서 파일 이름 목록을 전달한 다음 무시할 수 있습니다 (예 : &lt;code&gt;IGNORE_ITEM &quot;vcredist_x86.exe;vcredist_x64.exe&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2c90f64cb0ce62819261634bfdaad18c17bb9021" translate="yes" xml:space="preserve">
          <source>As before, we&amp;rsquo;ll start with the &lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-1-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; commands in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. For this project, we&amp;rsquo;ll also specify the C++ standard.</source>
          <target state="translated">이전과 마찬가지로 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 에서 &lt;a href=&quot;../../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-1-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령으로 시작 합니다. 이 프로젝트에서는 C ++ 표준도 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cf8aa850bf0457906280908de77dc2fe5bc84065" translate="yes" xml:space="preserve">
          <source>As mentioned above, some fields support macro expansion. Macros are recognized in the form &lt;code&gt;$&amp;lt;macro-namespace&amp;gt;{&amp;lt;macro-name&amp;gt;}&lt;/code&gt;. All macros are evaluated in the context of the preset being used, even if the macro is in a field that was inherited from another preset. For example, if the &lt;code&gt;Base&lt;/code&gt; preset sets variable &lt;code&gt;PRESET_NAME&lt;/code&gt; to &lt;code&gt;${presetName}&lt;/code&gt;, and the &lt;code&gt;Derived&lt;/code&gt; preset inherits from &lt;code&gt;Base&lt;/code&gt;, &lt;code&gt;PRESET_NAME&lt;/code&gt; will be set to &lt;code&gt;Derived&lt;/code&gt;.</source>
          <target state="translated">위에서 언급했듯이 일부 필드는 매크로 확장을 지원합니다. 매크로는 &lt;code&gt;$&amp;lt;macro-namespace&amp;gt;{&amp;lt;macro-name&amp;gt;}&lt;/code&gt; 형식으로 인식됩니다 . 매크로가 다른 사전 설정에서 상속 된 필드에 있더라도 모든 매크로는 사용중인 사전 설정의 컨텍스트에서 평가됩니다. 예를 들어 &lt;code&gt;Base&lt;/code&gt; 사전 설정이 변수 &lt;code&gt;PRESET_NAME&lt;/code&gt; 을 &lt;code&gt;${presetName}&lt;/code&gt; 설정 하고 &lt;code&gt;Derived&lt;/code&gt; 사전 설정이 &lt;code&gt;Base&lt;/code&gt; 에서 상속되는 경우 &lt;code&gt;PRESET_NAME&lt;/code&gt; 은 &lt;code&gt;Derived&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d27d729a48419802710ceeb9500bb5fb1e8e1f5e" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Stats::Types&lt;/code&gt; target is a &lt;code&gt;PUBLIC&lt;/code&gt; dependency of &lt;code&gt;ClimbingStats&lt;/code&gt;, downstreams must also find the &lt;code&gt;Stats&lt;/code&gt; package and link to the &lt;code&gt;Stats::Types&lt;/code&gt; library. The &lt;code&gt;Stats&lt;/code&gt; package should be found in the &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; file to ensure this. The &lt;code&gt;find_dependency&lt;/code&gt; macro from the &lt;a href=&quot;../module/cmakefinddependencymacro#module:CMakeFindDependencyMacro&quot; id=&quot;index-0-module:CMakeFindDependencyMacro&quot;&gt;&lt;code&gt;CMakeFindDependencyMacro&lt;/code&gt;&lt;/a&gt; helps with this by propagating whether the package is &lt;code&gt;REQUIRED&lt;/code&gt;, or &lt;code&gt;QUIET&lt;/code&gt; etc. All &lt;code&gt;REQUIRED&lt;/code&gt; dependencies of a package should be found in the &lt;code&gt;Config.cmake&lt;/code&gt; file:</source>
          <target state="translated">는 AS &lt;code&gt;Stats::Types&lt;/code&gt; 대상이입니다 &lt;code&gt;PUBLIC&lt;/code&gt; 에 의 의존성 &lt;code&gt;ClimbingStats&lt;/code&gt; , downstreams도 찾아야 &lt;code&gt;Stats&lt;/code&gt; 받는 패키지와 링크를 &lt;code&gt;Stats::Types&lt;/code&gt; 라이브러리를. &lt;code&gt;Stats&lt;/code&gt; 패키지는에서 찾을 수 있어야 &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; 의 이을 보장하기 위해 파일. &lt;code&gt;find_dependency&lt;/code&gt; 의 find_dependency 매크로 는 패키지가 &lt;code&gt;REQUIRED&lt;/code&gt; 또는 &lt;code&gt;QUIET&lt;/code&gt; 등 인지 여부를 전파 하여 &lt;a href=&quot;../module/cmakefinddependencymacro#module:CMakeFindDependencyMacro&quot; id=&quot;index-0-module:CMakeFindDependencyMacro&quot;&gt; &lt;code&gt;CMakeFindDependencyMacro&lt;/code&gt; &lt;/a&gt; 지원합니다. 패키지의 모든 &lt;code&gt;REQUIRED&lt;/code&gt; 종속성은 &lt;code&gt;Config.cmake&lt;/code&gt; 파일 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68941c42b652fa36bf76fd1ce72054dcf6777535" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Stats::Types&lt;/code&gt; target is a &lt;code&gt;PUBLIC&lt;/code&gt; dependency of &lt;code&gt;MathFunctions&lt;/code&gt;, downstreams must also find the &lt;code&gt;Stats&lt;/code&gt; package and link to the &lt;code&gt;Stats::Types&lt;/code&gt; library. The &lt;code&gt;Stats&lt;/code&gt; package should be found in the configuration file to ensure this.</source>
          <target state="translated">는 AS &lt;code&gt;Stats::Types&lt;/code&gt; 대상이입니다 &lt;code&gt;PUBLIC&lt;/code&gt; 에 의 의존성 &lt;code&gt;MathFunctions&lt;/code&gt; , downstreams도 찾아야 &lt;code&gt;Stats&lt;/code&gt; 받는 패키지와 링크를 &lt;code&gt;Stats::Types&lt;/code&gt; 라이브러리를. &lt;code&gt;Stats&lt;/code&gt; 패키지는이를 보장하기 위해 구성 파일에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57cdcfd7718ff953e9d590506f26cd885f6eda33" translate="yes" xml:space="preserve">
          <source>As the Clang compiler the QNX QCC compile is inherently a cross compiler. And the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_TARGET&lt;/code&gt; can be set to pass a value to those supported compilers when compiling:</source>
          <target state="translated">Clang 컴파일러로서 QNX QCC 컴파일은 본질적으로 크로스 컴파일러입니다. 그리고 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_TARGET&lt;/code&gt; 은 컴파일 할 때 지원되는 컴파일러에 값을 전달하도록 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b98bdc02029de097bc797c3a24e97c7f78643e5" translate="yes" xml:space="preserve">
          <source>As the linker is invoked by the compiler driver, CMake needs a way to determine which compiler to use to invoke the linker. This is calculated by the &lt;a href=&quot;../prop_sf/language#prop_sf:LANGUAGE&quot; id=&quot;index-0-prop_sf:LANGUAGE&quot;&gt;&lt;code&gt;LANGUAGE&lt;/code&gt;&lt;/a&gt; of source files in the target, and in the case of static libraries, the language of the dependent libraries. The choice CMake makes may be overridden with the &lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt;&lt;code&gt;LINKER_LANGUAGE&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">링커는 컴파일러 드라이버에 의해 호출되므로 CMake는 링커를 호출하는 데 사용할 컴파일러를 결정하는 방법이 필요합니다. 이는 대상에있는 소스 파일 의 &lt;a href=&quot;../prop_sf/language#prop_sf:LANGUAGE&quot; id=&quot;index-0-prop_sf:LANGUAGE&quot;&gt; &lt;code&gt;LANGUAGE&lt;/code&gt; &lt;/a&gt; 및 정적 라이브러리의 경우 종속 라이브러리의 언어로 계산됩니다. CMake &lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt; &lt;code&gt;LINKER_LANGUAGE&lt;/code&gt; &lt;/a&gt; 선택은 LINKER_LANGUAGE 대상 속성 으로 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4bc4867696441f1ad5cd52862f4b66a100a0017" translate="yes" xml:space="preserve">
          <source>As the value of the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;exe1&lt;/code&gt; target is dependent on the linked libraries (&lt;code&gt;lib3&lt;/code&gt;), and the edge of linking &lt;code&gt;exe1&lt;/code&gt; is determined by the same &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property, the dependency graph above contains a cycle. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; issues a diagnostic in this case.</source>
          <target state="translated">&lt;code&gt;exe1&lt;/code&gt; 대상 의 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 속성 값은 연결된 라이브러리 ( &lt;code&gt;lib3&lt;/code&gt; ) 에 의존 하고 exe1 연결 의 가장자리 는 동일한 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 속성에 의해 결정 &lt;code&gt;exe1&lt;/code&gt; 위의 종속성 그래프에는주기가 포함됩니다. 이 경우 &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 는 진단을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="b8d879f00528490b89550a59154040d6e31ae582" translate="yes" xml:space="preserve">
          <source>As the value of the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;exe1&lt;/code&gt; target is dependent on the linked libraries (&lt;code&gt;lib3&lt;/code&gt;), and the edge of linking &lt;code&gt;exe1&lt;/code&gt; is determined by the same &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property, the dependency graph above contains a cycle. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; issues an error message.</source>
          <target state="translated">&lt;code&gt;exe1&lt;/code&gt; 대상 의 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-4-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 속성 값은 연결된 라이브러리 ( &lt;code&gt;lib3&lt;/code&gt; ) 에 종속되고 exe1 연결 가장자리 는 동일한 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-5-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 속성에 의해 결정 &lt;code&gt;exe1&lt;/code&gt; 위의 종속성 그래프에는주기가 포함됩니다. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 은 오류 메시지를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="7c30d053890e7194a9ce97a6cf2eae06b3ea33d9" translate="yes" xml:space="preserve">
          <source>As this allows downstreams to use the &lt;code&gt;IMPORTED&lt;/code&gt; targets. If any macros should be provided by the &lt;code&gt;ClimbingStats&lt;/code&gt; package, they should be in a separate file which is installed to the same location as the &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; file, and included from there.</source>
          <target state="translated">따라서 다운 스트림은 &lt;code&gt;IMPORTED&lt;/code&gt; 대상 을 사용할 수 있습니다 . &lt;code&gt;ClimbingStats&lt;/code&gt; 패키지에서 매크로를 제공해야하는 경우 , &lt;code&gt;ClimbingStatsConfig.cmake&lt;/code&gt; 파일과 동일한 위치에 설치되어 포함 된 별도의 파일에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ee957ef3a0929f1fa10592ec9d35b9b08c9ffe63" translate="yes" xml:space="preserve">
          <source>Ask &lt;code&gt;cmake_install.cmake&lt;/code&gt; script to error out as soon as a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">질문 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 의 절대 인 파일로 즉시 밖으로 에러 스크립트를 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="14f371041ed8e81dd8607f1cffd7e87140b21e63" translate="yes" xml:space="preserve">
          <source>Ask &lt;code&gt;cmake_install.cmake&lt;/code&gt; script to warn each time a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">절대 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 이 있는 파일이있을 때마다 경고하도록 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 스크립트를 요청 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5bdcbf8a0afbc4e875fb62ebade023913d614870" translate="yes" xml:space="preserve">
          <source>Ask CPack to error out as soon as a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">절대 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 이 있는 파일 이 발견 되는 즉시 CPack에 오류 가 발생하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="8983d7d978af41650f0c78de4db5fac561ee7f7e" translate="yes" xml:space="preserve">
          <source>Ask CPack to warn each time a file with absolute &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; is encountered.</source>
          <target state="translated">절대 &lt;code&gt;INSTALL DESTINATION&lt;/code&gt; 이 있는 파일 이 발생할 때마다 경고하도록 CPack에 요청하십시오 .</target>
        </trans-unit>
        <trans-unit id="a376d1845b2c64fc1cf9b881ab41ea400586dfdc" translate="yes" xml:space="preserve">
          <source>Assert satisfaction of an option&amp;rsquo;s required variables.</source>
          <target state="translated">옵션의 필수 변수에 대한 만족을 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="34a1a3d2bb94d087b4d68e97f3ce84ccb21a0143" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;my_install()&lt;/code&gt; has been called like this:</source>
          <target state="translated">&lt;code&gt;my_install()&lt;/code&gt; 이 다음과 같이 호출 되었다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="efa7eb903142b8b1cfeae194e145554b10ef01dd" translate="yes" xml:space="preserve">
          <source>Assume the linker looks for static libraries by default.</source>
          <target state="translated">링커가 기본적으로 정적 라이브러리를 찾는다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="e6f1f95f1c7342d047a93b96ea5b184b230b0a00" translate="yes" xml:space="preserve">
          <source>Assumed &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; is a valid number, the first entry in the list with a matching major version is taken. If no matching major version was found, an error is generated. If &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; is not a valid number, the first entry in the list is taken.</source>
          <target state="translated">&lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; 이 유효한 숫자라고 가정 하면 일치하는 주 버전이있는 목록의 첫 번째 항목이 사용됩니다. 일치하는 주 버전이 없으면 오류가 생성됩니다. &lt;code&gt;INTERFACE_QT_MAJOR_VERSION&lt;/code&gt; 이 유효한 숫자가 아닌 경우 목록의 첫 번째 항목이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f2af9ac30684959175fb0e651a73da2cfa96c871" translate="yes" xml:space="preserve">
          <source>At build time a test named &amp;ldquo;example_setup_test&amp;rdquo; will be created. Run this test on the command line with &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; to load the data onto the Android device.</source>
          <target state="translated">빌드시&amp;ldquo;example_setup_test&amp;rdquo;라는 테스트가 생성됩니다. &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 을 사용하여 명령 행에서이 테스트를 실행 하여 Android 디바이스에 데이터를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="6ea02eab6833e6753d5dc3d357ad7830e22f4fd6" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each header and source file from the target&amp;rsquo;s sources for include statements of the form</source>
          <target state="translated">빌드시 CMake는 대상의 소스에서 각 헤더 및 소스 파일을 스캔하여 형식의 include 문을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="26d4b9da04ac82da93f5976dd936911fac89000e" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each unknown or modified C++ source file from the target&amp;rsquo;s sources for</source>
          <target state="translated">빌드시 CMake는 대상의 소스에서 알 수 없거나 수정 된 C ++ 소스 파일을 각각 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="9e259ec0f6fdcaa672329d8307927023b0c4cb1b" translate="yes" xml:space="preserve">
          <source>At build time, CMake scans each unknown or modified header file from the list and searches for</source>
          <target state="translated">빌드시 CMake는 목록에서 알 수 없거나 수정 된 헤더 파일을 각각 검색하고 검색합니다.</target>
        </trans-unit>
        <trans-unit id="64e41f34cdb87706234441f4ef1b556ad6f8466b" translate="yes" xml:space="preserve">
          <source>At configuration time, a list of header files that should be scanned by &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is computed from the target&amp;rsquo;s sources.</source>
          <target state="translated">구성시 &lt;a href=&quot;#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; 에서&lt;/a&gt; 스캔해야하는 헤더 파일 목록은 대상의 소스에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="94a7e598085808a524e9ea7aafedbcf8f71d09da" translate="yes" xml:space="preserve">
          <source>At least one &lt;code&gt;&amp;lt;compiler&amp;gt;&lt;/code&gt; and one &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; must be listed. Compilers which are known to CMake, but not specified are detected and a preprocessor &lt;code&gt;#error&lt;/code&gt; is generated for them. A preprocessor macro matching &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_IS_&amp;lt;compiler&amp;gt;&lt;/code&gt; is generated for each compiler known to CMake to contain the value &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">최소한 하나의 &lt;code&gt;&amp;lt;compiler&amp;gt;&lt;/code&gt; 와 하나의 &lt;code&gt;&amp;lt;feature&amp;gt;&lt;/code&gt; 이 나열되어야합니다. CMake로 알려져 있지만 지정되지 않은 컴파일러가 감지되고 전 처리기 &lt;code&gt;#error&lt;/code&gt; 가 생성됩니다. CMake로 알려진 각 컴파일러에 대해 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 값을 포함하도록 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_COMPILER_IS_&amp;lt;compiler&amp;gt;&lt;/code&gt; 와 일치하는 전 처리기 매크로 가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f927d78216535c4ee0ba2f4a93405c2f153a616" translate="yes" xml:space="preserve">
          <source>At this point you should try and run CMake. If everything is setup properly you will see that CMake will generate an error that looks like:</source>
          <target state="translated">이 시점에서 CMake를 시도하고 실행해야합니다. 모든 것이 올바르게 설정되면 CMake가 다음과 같은 오류를 생성하는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60e0041cb8b7b03ace6b25251b1642b27dc48259" translate="yes" xml:space="preserve">
          <source>At this point, if you build everything, you may notice that linking fails as we are combining a static library without position independent code with a library that has position independent code. The solution to this is to explicitly set the &lt;a href=&quot;../../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; target property of SqrtLibrary to be True no matter the build type.</source>
          <target state="translated">이 시점에서 모든 것을 빌드하면 위치 독립적 코드가없는 정적 라이브러리를 위치 독립적 코드가있는 라이브러리와 결합하기 때문에 링크가 실패한다는 것을 알 수 있습니다. 이에 대한 해결책 은 빌드 유형에 관계없이 SqrtLibrary 의 &lt;a href=&quot;../../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 대상 속성을 True 로 명시 적으로 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="8462dd635a4a0ee9aa8b6e3e70f08a6f8c7bee2e" translate="yes" xml:space="preserve">
          <source>At this point, the &lt;code&gt;MathFunctions&lt;/code&gt; project is exporting the target information required to be used by other projects. We can make this project even easier for other projects to use by generating a configuration file so that the CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command can find our project.</source>
          <target state="translated">이 시점에서 &lt;code&gt;MathFunctions&lt;/code&gt; 프로젝트는 다른 프로젝트에서 사용하는 데 필요한 대상 정보를 내보내고 있습니다. CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령이 프로젝트를 찾을 수 있도록 구성 파일을 생성하여 다른 프로젝트에서이 프로젝트를 더 쉽게 사용할 수 있도록 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e404ef99ad456ce9bd459d315e30e5a1bb396681" translate="yes" xml:space="preserve">
          <source>At this point, we have CMake properly packaging the target information that is required but we will still need to generate a &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; so that the CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command can find our project. So let&amp;rsquo;s go ahead and add a new file to the top-level of the project called &lt;code&gt;Config.cmake.in&lt;/code&gt; with the following contents:</source>
          <target state="translated">이 시점에서 필요한 대상 정보를 CMake가 적절하게 패키징했지만 CMake &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령이 프로젝트를 찾을 수 있도록 &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; 를 생성해야합니다 . 이제 계속 해서 다음 내용으로 &lt;code&gt;Config.cmake.in&lt;/code&gt; 이라는 프로젝트의 최상위 수준에 새 파일을 추가하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="de7de524718442830b34c73b5af0075ad7ef6a96" translate="yes" xml:space="preserve">
          <source>At this point, we have generated a relocatable CMake Configuration for our project that can be used after the project has been installed or packaged. If we want our project to also be used from a build directory we only have to add the following to the bottom of the top level &lt;code&gt;CMakeLists.txt&lt;/code&gt;:</source>
          <target state="translated">이 시점에서 우리는 프로젝트를 설치하거나 패키징 한 후 사용할 수있는 재배치 가능한 CMake 구성을 생성했습니다. 프로젝트를 빌드 디렉터리에서도 사용하려면 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 맨 아래에 다음을 추가하기 만하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d5d8c318ddd117538e8245dee63f153f3239df9" translate="yes" xml:space="preserve">
          <source>At this point, we have generated a relocatable CMake configuration for our project that can be used after the project has been installed. Let&amp;rsquo;s try to build the &lt;code&gt;MathFunctions&lt;/code&gt; project:</source>
          <target state="translated">이 시점에서 우리는 프로젝트를 설치 한 후 사용할 수있는 재배치 가능한 CMake 구성을 생성했습니다. &lt;code&gt;MathFunctions&lt;/code&gt; 프로젝트 를 빌드 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="8a7a75f408fd6f6b1c00718b9954667acaeb2a4d" translate="yes" xml:space="preserve">
          <source>At this point, we have to provide a way for users of the find module to link to the library or libraries that were found. There are two approaches, as discussed in the &lt;a href=&quot;#find-modules&quot;&gt;Find Modules&lt;/a&gt; section above. The traditional variable approach looks like</source>
          <target state="translated">이제 find 모듈 사용자가 찾은 라이브러리에 링크 할 수있는 방법을 제공해야합니다. 위의 &lt;a href=&quot;#find-modules&quot;&gt;모듈 찾기&lt;/a&gt; 섹션 에서 설명한 것처럼 두 가지 접근 방식이 있습니다 . 전통적인 변수 접근 방식은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="4357188e4a8910d4732790188f6032d6df36fc45" translate="yes" xml:space="preserve">
          <source>Attach a list of files to a dashboard submission if the test fails.</source>
          <target state="translated">테스트가 실패하면 파일 목록을 대시 보드 제출에 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="a5e4e2da48c0236f76ecbb2f74e270f74e635b44" translate="yes" xml:space="preserve">
          <source>Attach a list of files to a dashboard submission.</source>
          <target state="translated">파일 목록을 대시 보드 제출에 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="152e6a623a1beede7d28a3bd19af2caf36ee6a4a" translate="yes" xml:space="preserve">
          <source>Attempt to find an MPI compiler wrapper and determine the compiler information from it.</source>
          <target state="translated">MPI 컴파일러 랩퍼를 찾아서 컴파일러 정보를 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="dd6f6292b9a47f3359654d4d707143cda57b31d9" translate="yes" xml:space="preserve">
          <source>Author: Alexander Neundorf &amp;lt;&lt;a href=&quot;mailto:neundorf%40kde.org&quot;&gt;neundorf@kde.org&lt;/a&gt;&amp;gt;</source>
          <target state="translated">저자 : Alexander Neundorf &amp;lt; &lt;a href=&quot;mailto:neundorf%40kde.org&quot;&gt;neundorf@kde.org&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="1c455e4333254f0427ebe02f9a96e130c7a15b6c" translate="yes" xml:space="preserve">
          <source>Automatic evaluation applies in the other cases whenever the above-documented condition syntax accepts &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">위에 설명 된 조건 구문이 &lt;code&gt;&amp;lt;variable|string&amp;gt;&lt;/code&gt; 허용 할 때마다 다른 경우에 자동 평가가 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0d340d30307bc3e2d0e3f27f658f5b026a7c8b93" translate="yes" xml:space="preserve">
          <source>Automatic function return type, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2541.htm&quot;&gt;N2541&lt;/a&gt;.</source>
          <target state="translated">로 정의 된 자동 함수 반환 유형 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2541.htm&quot;&gt;N2541&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab22a3e08fc7fcd62b2dd59fe1b26786d70ee179" translate="yes" xml:space="preserve">
          <source>Automatic type deduction, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1984.pdf&quot;&gt;N1984&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1984.pdf&quot;&gt;N1984에&lt;/a&gt; 정의 된 자동 유형 공제 .</target>
        </trans-unit>
        <trans-unit id="cf151d43313af800cfbe077a892969d8049096cd" translate="yes" xml:space="preserve">
          <source>Automatically add tests with CTest by querying the compiled test executable for available tests:</source>
          <target state="translated">사용 가능한 테스트에 대해 컴파일 된 테스트 실행 파일을 쿼리하여 CTest로 테스트를 자동으로 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="66eadffd409e9dce6d1c05cb4b4b4a3992afef16" translate="yes" xml:space="preserve">
          <source>Automatically add tests with CTest by scanning source code for Google Test macros:</source>
          <target state="translated">Google 테스트 매크로의 소스 코드를 스캔하여 CTest로 테스트를 자동으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="029f31eadc4ec719fc354138887a991f0adaf8c4" translate="yes" xml:space="preserve">
          <source>Automatically add the current source and build directories to the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">현재 소스 및 빌드 디렉토리를 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 대상 특성에 자동으로 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="3598d73707c4130939db16630e579a476196687b" translate="yes" xml:space="preserve">
          <source>Automatically add the current source and build directories to the include path.</source>
          <target state="translated">현재 소스 및 빌드 디렉토리를 포함 경로에 자동으로 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="77aa322fc5bd74bc4680e2722cdf4fdc465d015b" translate="yes" xml:space="preserve">
          <source>Automatically link Qt executables to &lt;code&gt;qtmain&lt;/code&gt; target on Windows.</source>
          <target state="translated">Windows에서 Qt 실행 파일을 &lt;code&gt;qtmain&lt;/code&gt; 대상에 자동으로 연결 합니다.</target>
        </trans-unit>
        <trans-unit id="5111f6d5d3ff996a3544f45236b3597a6ca1037a" translate="yes" xml:space="preserve">
          <source>Availability of Compiler Extensions</source>
          <target state="translated">컴파일러 확장의 가용성</target>
        </trans-unit>
        <trans-unit id="4273f784e436af21339018baa7c10d1b0c8f81cf" translate="yes" xml:space="preserve">
          <source>Available boolean expressions are:</source>
          <target state="translated">사용 가능한 부울 표현식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e50e71febb09b5987cf8638aa66376f53cd1901b" translate="yes" xml:space="preserve">
          <source>Available compile features (eg CXX variadic templates).</source>
          <target state="translated">사용 가능한 컴파일 기능 (예 : CXX 가변 템플릿)</target>
        </trans-unit>
        <trans-unit id="9c95fd0e969fe9a47820c9df67b2d2eb3450c9ec" translate="yes" xml:space="preserve">
          <source>Available components are: &lt;code&gt;C&lt;/code&gt;&lt;code&gt;CXX&lt;/code&gt;&lt;code&gt;Fortran&lt;/code&gt; and &lt;code&gt;HL&lt;/code&gt;. For each enabled language binding, a corresponding &lt;code&gt;HDF5_${LANG}_LIBRARIES&lt;/code&gt; variable, and potentially &lt;code&gt;HDF5_${LANG}_DEFINITIONS&lt;/code&gt;, will be defined. If the &lt;code&gt;HL&lt;/code&gt; component is enabled, then an &lt;code&gt;HDF5_${LANG}_HL_LIBRARIES&lt;/code&gt; will also be defined. With all components enabled, the following variables will be defined:</source>
          <target state="translated">사용 가능한 구성 요소는 &lt;code&gt;C&lt;/code&gt; &lt;code&gt;CXX&lt;/code&gt; &lt;code&gt;Fortran&lt;/code&gt; 및 &lt;code&gt;HL&lt;/code&gt; 입니다. 사용 가능한 각 언어 바인딩에 대해 해당 &lt;code&gt;HDF5_${LANG}_LIBRARIES&lt;/code&gt; 변수 및 잠재적으로 &lt;code&gt;HDF5_${LANG}_DEFINITIONS&lt;/code&gt; 가 정의됩니다. 는 IF &lt;code&gt;HL&lt;/code&gt; 의 구성 요소가 활성화되어, 다음 &lt;code&gt;HDF5_${LANG}_HL_LIBRARIES&lt;/code&gt; 또한 정의 될 것이다. 모든 구성 요소가 활성화되면 다음 변수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="75f4d6c6ceb2fa00fad036f514e127cc3b5a883f" translate="yes" xml:space="preserve">
          <source>Available physical memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;1&lt;/a&gt; 에서 사용 가능한 실제 메모리</target>
        </trans-unit>
        <trans-unit id="3a4d86f045228e94b2b9cd38e0938839828962a0" translate="yes" xml:space="preserve">
          <source>Available physical memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">MiB에서 사용 가능한 물리적 메모리 &lt;a href=&quot;#mebibytes&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a03fa02c4b70adc52efa0cc98ad4b3cbd3cbdae2" translate="yes" xml:space="preserve">
          <source>Available virtual memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; 에서 사용 가능한 가상 메모리</target>
        </trans-unit>
        <trans-unit id="7b49e98e802c35a6ee59820fa1e4643726b2f8b9" translate="yes" xml:space="preserve">
          <source>Available virtual memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">MiB에서 사용 가능한 가상 메모리 &lt;a href=&quot;#mebibytes&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57a6c310db4d269d8b59fcfdd10b6379f68d5247" translate="yes" xml:space="preserve">
          <source>BINARY_DIR</source>
          <target state="translated">BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="ee22b6b37c8e8fc9da5fc0c4a306c978891ec5bb" translate="yes" xml:space="preserve">
          <source>BOLD_TITLE indicates that the group title should appear in bold, to call the user&amp;rsquo;s attention to the group.</source>
          <target state="translated">BOLD_TITLE은 그룹 제목을 굵게 표시하여 그룹에 대한 사용자의주의를 환기시켜야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2f960e0dd8389e5452514853cd59e181bfb78a3b" translate="yes" xml:space="preserve">
          <source>BORLAND</source>
          <target state="translated">BORLAND</target>
        </trans-unit>
        <trans-unit id="1fcd6ace85ac947a6152f855d77ddaa4ce17d60e" translate="yes" xml:space="preserve">
          <source>BUILDSYSTEM_TARGETS</source>
          <target state="translated">BUILDSYSTEM_TARGETS</target>
        </trans-unit>
        <trans-unit id="bec25de9015184e1081eb6a779bd5c59c1d755b9" translate="yes" xml:space="preserve">
          <source>BUILD_RPATH</source>
          <target state="translated">BUILD_RPATH</target>
        </trans-unit>
        <trans-unit id="f3b35e8513fc55edb4ba2d6b2674253ee028ec13" translate="yes" xml:space="preserve">
          <source>BUILD_RPATH_USE_ORIGIN</source>
          <target state="translated">BUILD_RPATH_USE_ORIGIN</target>
        </trans-unit>
        <trans-unit id="e0453ee3cc7a259e94133ede7ab9f4f65f00eb29" translate="yes" xml:space="preserve">
          <source>BUILD_SHARED_LIBS</source>
          <target state="translated">BUILD_SHARED_LIBS</target>
        </trans-unit>
        <trans-unit id="ccbc5425dec10d6044dc8f26ff444352e9a6365a" translate="yes" xml:space="preserve">
          <source>BUILD_WITH_INSTALL_NAME_DIR</source>
          <target state="translated">BUILD_WITH_INSTALL_NAME_DIR</target>
        </trans-unit>
        <trans-unit id="8b258100b2171442ff9ce1587f38ed3b9aa44a3b" translate="yes" xml:space="preserve">
          <source>BUILD_WITH_INSTALL_RPATH</source>
          <target state="translated">BUILD_WITH_INSTALL_RPATH</target>
        </trans-unit>
        <trans-unit id="533ab199c8fd97345214211109ed1a40a9a4b84d" translate="yes" xml:space="preserve">
          <source>BUNDLE</source>
          <target state="translated">BUNDLE</target>
        </trans-unit>
        <trans-unit id="e88ba649951b4bf5612ffbb07880c6ac0c33edbc" translate="yes" xml:space="preserve">
          <source>BUNDLE_EXTENSION</source>
          <target state="translated">BUNDLE_EXTENSION</target>
        </trans-unit>
        <trans-unit id="fd4a1f65749d89056abcaeac3722a7b7a8fe75a1" translate="yes" xml:space="preserve">
          <source>Backward Compatibility</source>
          <target state="translated">하위 호환성</target>
        </trans-unit>
        <trans-unit id="4795a5f91091a7ec09c88890d691fdc5d0d0c71f" translate="yes" xml:space="preserve">
          <source>Bad variable reference syntax is an error.</source>
          <target state="translated">잘못된 변수 참조 구문은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="a25e67b1c856e8ad07e98e1f3ea3b3cd75669c00" translate="yes" xml:space="preserve">
          <source>Base name of &lt;code&gt;tgt&lt;/code&gt;, i.e. &lt;code&gt;$&amp;lt;TARGET_FILE_NAME:tgt&amp;gt;&lt;/code&gt; without prefix and suffix. For example, if the &lt;code&gt;tgt&lt;/code&gt; filename is &lt;code&gt;libbase.so&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tgt&lt;/code&gt; 의 기본 이름 , 즉 접두사와 접미사가없는 &lt;code&gt;$&amp;lt;TARGET_FILE_NAME:tgt&amp;gt;&lt;/code&gt; . 예를 들어, &lt;code&gt;tgt&lt;/code&gt; 파일 이름이 &lt;code&gt;libbase.so&lt;/code&gt; 이면 기본 이름은 &lt;code&gt;base&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3c8b3c105b290ae5ea4954176fa5927c4d25eeb9" translate="yes" xml:space="preserve">
          <source>Base name of file used to link the target &lt;code&gt;tgt&lt;/code&gt;, i.e. &lt;code&gt;$&amp;lt;TARGET_LINKER_FILE_NAME:tgt&amp;gt;&lt;/code&gt; without prefix and suffix. For example, if target file name is &lt;code&gt;libbase.a&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">대상 &lt;code&gt;tgt&lt;/code&gt; 를 연결하는 데 사용되는 파일의 기본 이름입니다 . 즉, 접두사 및 접미사가없는 &lt;code&gt;$&amp;lt;TARGET_LINKER_FILE_NAME:tgt&amp;gt;&lt;/code&gt; 입니다. 예를 들어, 대상 파일 이름이 &lt;code&gt;libbase.a&lt;/code&gt; 인 경우 기본 이름은 &lt;code&gt;base&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="656fc9d4fd3cec15a62dab83fad2f4a16e6b0362" translate="yes" xml:space="preserve">
          <source>Base name of file used to link where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">&lt;code&gt;tgt&lt;/code&gt; 를 링크하는 데 사용되는 파일의 기본 이름 는 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="505f990e3c5e0c38b473d7ca97e442ccc7d65444" translate="yes" xml:space="preserve">
          <source>Base name of main file where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">기본 파일의 기본 이름. 여기서 &lt;code&gt;tgt&lt;/code&gt; 는 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="217a4debb7a13b2ee1af9bc552275a04471af4e2" translate="yes" xml:space="preserve">
          <source>Base name of the linker generated program database file (.pdb) where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일 (.pdb)의 기본 이름. 여기서 &lt;code&gt;tgt&lt;/code&gt; 는 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8032ca6fc33f6e9b804163f05f51b0e9121534aa" translate="yes" xml:space="preserve">
          <source>Basic Signature and Module Mode</source>
          <target state="translated">기본 서명 및 모듈 모드</target>
        </trans-unit>
        <trans-unit id="e878ad69dac0fdf670d2d5020ad4cb70a0f0ccfa" translate="yes" xml:space="preserve">
          <source>Be default, all EXE and shared library (DLL) targets are marked to deploy to the target device in the generated Visual Studio solution.</source>
          <target state="translated">기본적으로 모든 EXE 및 공유 라이브러리 (DLL) 대상은 생성 된 Visual Studio 솔루션의 대상 장치에 배포되도록 표시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="aadb161b1e3212e6dc42b95cb976f1fc2346faa9" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;archive&lt;/code&gt; is a &lt;code&gt;PUBLIC&lt;/code&gt; dependency of &lt;code&gt;archiveExtras&lt;/code&gt;, the usage requirements of it are propagated to &lt;code&gt;consumer&lt;/code&gt; too. Because &lt;code&gt;serialization&lt;/code&gt; is a &lt;code&gt;PRIVATE&lt;/code&gt; dependency of &lt;code&gt;archiveExtras&lt;/code&gt;, the usage requirements of it are not propagated to &lt;code&gt;consumer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;archive&lt;/code&gt; 는 &lt;code&gt;archiveExtras&lt;/code&gt; 의 &lt;code&gt;PUBLIC&lt;/code&gt; 종속성 이므로 사용 요구 사항 도 &lt;code&gt;consumer&lt;/code&gt; 전파됩니다 . &lt;code&gt;serialization&lt;/code&gt; 는 &lt;code&gt;archiveExtras&lt;/code&gt; 의 &lt;code&gt;PRIVATE&lt;/code&gt; 종속성 이므로 사용 요구 사항이 &lt;code&gt;consumer&lt;/code&gt; 전파되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1f5c58715cc375071da0e69bf09e673da4695bc2" translate="yes" xml:space="preserve">
          <source>Because build specifications can be determined by dependencies, the lack of locality of code which creates a target and code which is responsible for setting build specifications may make the code more difficult to reason about. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; provides a debugging facility to print the origin of the contents of properties which may be determined by dependencies. The properties which can be debugged are listed in the &lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt;&lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt;&lt;/a&gt; variable documentation:</source>
          <target state="translated">빌드 사양은 의존성에 의해 결정될 수 있기 때문에, 타겟을 생성하는 코드의 지역성이 부족하고 빌드 사양을 설정하는 코드는 코드의 추론을 어렵게 만들 수 있습니다. &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 는 종속성에 의해 결정될 수있는 속성 내용의 원점을 인쇄하는 디버깅 기능을 제공합니다. 디버깅 할 수있는 특성은 &lt;a href=&quot;../variable/cmake_debug_target_properties#variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot; id=&quot;index-0-variable:CMAKE_DEBUG_TARGET_PROPERTIES&quot;&gt; &lt;code&gt;CMAKE_DEBUG_TARGET_PROPERTIES&lt;/code&gt; &lt;/a&gt; 변수 문서에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea2be228f01f1ed541e3dcb62912cf1b0d21bfdc" translate="yes" xml:space="preserve">
          <source>Because generator expressions can be used in custom commands, it is possible to define &lt;code&gt;COMMAND&lt;/code&gt; lines or whole custom commands which evaluate to empty strings for certain configurations. For &lt;strong&gt;Visual Studio 2010 (and newer)&lt;/strong&gt; generators these command lines or custom commands will be omitted for the specific configuration and no &amp;ldquo;empty-string-command&amp;rdquo; will be added.</source>
          <target state="translated">발전기 표현은 사용자 정의 명령에 사용할 수 있기 때문에 정의 할 수 있습니다 &lt;code&gt;COMMAND&lt;/code&gt; 줄 또는 특정 구성에 대한 문자열을 비워 평가 전체 사용자 정의 명령을. 들어 &lt;strong&gt;비주얼 스튜디오 2010 (및 최신)&lt;/strong&gt; 발전기 이러한 명령 줄 또는 사용자 정의 명령은 특정 구성 및 아니오 &quot;빈 문자열 명령&quot;생략한다 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="253f22c75afb768021aa075d706221cb12f78c29" translate="yes" xml:space="preserve">
          <source>Because it is common to require that the source directory and corresponding build directory are added to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;../variable/cmake_include_current_dir#variable:CMAKE_INCLUDE_CURRENT_DIR&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR&quot;&gt;&lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR&lt;/code&gt;&lt;/a&gt; variable can be enabled to conveniently add the corresponding directories to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of all targets. The variable &lt;a href=&quot;../variable/cmake_include_current_dir_in_interface#variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot;&gt;&lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt;&lt;/a&gt; can be enabled to add the corresponding directories to the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of all targets. This makes use of targets in multiple different directories convenient through use of the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 소스 디렉토리 및 해당 빌드 디렉토리가에 추가 할 것을 요구하는 것이 일반적이기 때문에 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../variable/cmake_include_current_dir#variable:CMAKE_INCLUDE_CURRENT_DIR&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR&quot;&gt; &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR&lt;/code&gt; 의&lt;/a&gt; 변수는 편리에 해당 디렉토리를 추가하는 것이 가능하게 될 수 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 모든 대상의. &lt;a href=&quot;../variable/cmake_include_current_dir_in_interface#variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot;&gt; &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt; &lt;/a&gt; 변수를 사용하여 모든 대상 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 에 해당 디렉토리를 추가 할 수 있습니다 . 이는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령 을 사용하여 여러 다른 디렉토리에서 대상을 편리하게 사용할 수있게합니다 .</target>
        </trans-unit>
        <trans-unit id="30f2006fb46a8df995d9cbafb4fd86830efbf631" translate="yes" xml:space="preserve">
          <source>Because some platforms have case-insensitive names for environment variables, the names of resource types may not clash in a case-insensitive environment. Because of this, for the sake of simplicity, all resource types must be listed in all lowercase in the &lt;a href=&quot;#ctest-resource-specification-file&quot;&gt;resource specification file&lt;/a&gt; and in the &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-4-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; property, and they are converted to all uppercase in the &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;_&amp;lt;resource-type&amp;gt;&lt;/code&gt; environment variable.</source>
          <target state="translated">일부 플랫폼에는 환경 변수에 대해 대소 문자를 구분하지 않는 이름이 있기 때문에 리소스 유형의 이름은 대소 문자를 구분하지 않는 환경에서 충돌하지 않을 수 있습니다. 이 때문에 단순성을 위해 모든 리소스 유형은 &lt;a href=&quot;#ctest-resource-specification-file&quot;&gt;리소스 사양 파일&lt;/a&gt; 및 &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-4-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt; 속성 에서 모두 소문자로 나열되어야하며 &lt;code&gt;CTEST_RESOURCE_GROUP_&amp;lt;num&amp;gt;_&amp;lt;resource-type&amp;gt;&lt;/code&gt; 환경 에서는 모두 대문자로 변환됩니다. 변하기 쉬운.</target>
        </trans-unit>
        <trans-unit id="f2e8621c420bb582fa5c055a5affa990dfb3c181" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;../prop_tgt/cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt;&lt;code&gt;CXX_EXTENSIONS&lt;/code&gt;&lt;/a&gt; target property is &lt;code&gt;ON&lt;/code&gt; by default, CMake uses extended variants of language dialects by default, such as &lt;code&gt;-std=gnu++11&lt;/code&gt; instead of &lt;code&gt;-std=c++11&lt;/code&gt;. That target property may be set to &lt;code&gt;OFF&lt;/code&gt; to use the non-extended variant of the dialect flag. Note that because most compilers enable extensions by default, this could expose cross-platform bugs in user code or in the headers of third-party dependencies.</source>
          <target state="translated">때문에 &lt;a href=&quot;../prop_tgt/cxx_extensions#prop_tgt:CXX_EXTENSIONS&quot; id=&quot;index-0-prop_tgt:CXX_EXTENSIONS&quot;&gt; &lt;code&gt;CXX_EXTENSIONS&lt;/code&gt; 이&lt;/a&gt; 속성은 타겟 &lt;code&gt;ON&lt;/code&gt; 기본적 CMake 같은 디폴트 언어의 방언 연장 변이체 사용 &lt;code&gt;-std=gnu++11&lt;/code&gt; 대신 &lt;code&gt;-std=c++11&lt;/code&gt; . 비 확장 변형 된 방언 플래그를 사용하기 위해 해당 대상 속성을 &lt;code&gt;OFF&lt;/code&gt; 로 설정할 수 있습니다 . 대부분의 컴파일러는 기본적으로 확장을 사용하므로 사용자 코드 또는 타사 종속성의 헤더에 플랫폼 간 버그가 노출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a94310858b767f4cf2e7999ef1346ec22f93b847" translate="yes" xml:space="preserve">
          <source>Because the rpath may contain &lt;code&gt;${ORIGIN}&lt;/code&gt;, which coincides with CMake syntax, the contents of &lt;code&gt;INSTALL_RPATH&lt;/code&gt; are properly escaped in the &lt;code&gt;cmake_install.cmake&lt;/code&gt; script (see policy &lt;a href=&quot;../policy/cmp0095#policy:CMP0095&quot; id=&quot;index-0-policy:CMP0095&quot;&gt;&lt;code&gt;CMP0095&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">rpath에는 CMake 구문과 일치하는 &lt;code&gt;${ORIGIN}&lt;/code&gt; 이 포함될 수 있으므로 &lt;code&gt;INSTALL_RPATH&lt;/code&gt; 의 내용은 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 스크립트 에서 적절하게 이스케이프됩니다 (정책 &lt;a href=&quot;../policy/cmp0095#policy:CMP0095&quot; id=&quot;index-0-policy:CMP0095&quot;&gt; &lt;code&gt;CMP0095&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ed2c95a5ded45a908975ff0f07b26fed419d2854" translate="yes" xml:space="preserve">
          <source>Because the source file properties of the &lt;code&gt;.Designer.cs&lt;/code&gt; file are set according to the found matches and every match sets the &lt;strong&gt;VS_CSHARP_DependentUpon&lt;/strong&gt; property, there should only be one match for each &lt;code&gt;Designer.cs&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;.Designer.cs&lt;/code&gt; 파일 의 소스 파일 속성은 찾은 일치 항목에 따라 설정되고 모든 일치 항목은 &lt;strong&gt;VS_CSHARP_DependentUpon&lt;/strong&gt; 속성을 설정하므로 각 &lt;code&gt;Designer.cs&lt;/code&gt; 파일 마다 하나의 일치 항목 만 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="09b414a5c0d01c046b465d463e0ddf5e41f80edd" translate="yes" xml:space="preserve">
          <source>Before including this CPack module in your &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, there are a variety of variables that can be set to customize the resulting installers. The most commonly-used variables are:</source>
          <target state="translated">&lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 에이 CPack 모듈을 포함시키기 전에 결과 설치 프로그램을 사용자 정의하도록 설정할 수있는 다양한 변수가 있습니다. 가장 일반적으로 사용되는 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8a7d88a313db7e4eb949477a0c23956dda377bc" translate="yes" xml:space="preserve">
          <source>Behave like CMake 3.13 and do not apply any &lt;code&gt;PIE&lt;/code&gt; flags at link stage.</source>
          <target state="translated">CMake 3.13처럼 동작 하며 링크 단계에서 &lt;code&gt;PIE&lt;/code&gt; 플래그를 적용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="601890e2e54d25ffca0d173ec72ad849201c698d" translate="yes" xml:space="preserve">
          <source>Behave like CMake 3.8 and do not apply any IPO flags except for Intel compiler on Linux:</source>
          <target state="translated">CMake 3.8처럼 작동하며 Linux의 Intel 컴파일러를 제외하고 IPO 플래그를 적용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="102ac236a62817c0a8b6694b5b492a7b8f648901" translate="yes" xml:space="preserve">
          <source>Behavior when Cross Compiling</source>
          <target state="translated">크로스 컴파일시 동작</target>
        </trans-unit>
        <trans-unit id="93dba10ecf7ac37e47fd0d80a15658d22cb72a47" translate="yes" xml:space="preserve">
          <source>Below is a detailed list of variables that FindQt4.cmake sets.</source>
          <target state="translated">다음은 FindQt4.cmake가 설정하는 변수의 자세한 목록입니다.</target>
        </trans-unit>
        <trans-unit id="8c7ad03f2a5bd784d3fce68a3164b97a9a577da3" translate="yes" xml:space="preserve">
          <source>Binary Executables</source>
          <target state="translated">이진 실행 파일</target>
        </trans-unit>
        <trans-unit id="91423715bc98ef6e2a9935692ead3f0807220d1c" translate="yes" xml:space="preserve">
          <source>Binary Library Types</source>
          <target state="translated">이진 라이브러리 유형</target>
        </trans-unit>
        <trans-unit id="12e239892ca518b98122a60052420a0eb65bec27" translate="yes" xml:space="preserve">
          <source>Binary Targets</source>
          <target state="translated">이진 목표</target>
        </trans-unit>
        <trans-unit id="3fe7c03a4ac737f03c2e482a670deea648f65c80" translate="yes" xml:space="preserve">
          <source>Binary literals, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3472.pdf&quot;&gt;N3472&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3472.pdf&quot;&gt;N3472에&lt;/a&gt; 정의 된 이진 리터럴 .</target>
        </trans-unit>
        <trans-unit id="85d8a084dcbe449a3d243dcd5ae706987451a6ee" translate="yes" xml:space="preserve">
          <source>Boolean &lt;code&gt;ON/OFF&lt;/code&gt; value. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a checkbox.</source>
          <target state="translated">부울 &lt;code&gt;ON/OFF&lt;/code&gt; 값. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 는 확인란을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b163ad8f8679c817a51e2fc319d5d54c2a6f609d" translate="yes" xml:space="preserve">
          <source>Boolean Generator Expressions</source>
          <target state="translated">부울 생성기 표현식</target>
        </trans-unit>
        <trans-unit id="f0451cc96842f113ec9087b031383570e152a928" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt;&lt;code&gt;C_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">&lt;a href=&quot;c_standard#prop_tgt:C_STANDARD&quot; id=&quot;index-0-prop_tgt:C_STANDARD&quot;&gt; &lt;code&gt;C_STANDARD&lt;/code&gt; &lt;/a&gt; 값이 필수 인지 여부를 설명하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="a9a27d29ee5dd59c3c26f5919854b5b377e226b9" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-0-prop_tgt:CUDA_STANDARD&quot;&gt;&lt;code&gt;CUDA_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">&lt;a href=&quot;cuda_standard#prop_tgt:CUDA_STANDARD&quot; id=&quot;index-0-prop_tgt:CUDA_STANDARD&quot;&gt; &lt;code&gt;CUDA_STANDARD&lt;/code&gt; &lt;/a&gt; 의 값이 필수 인지 여부를 설명하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="74f51ac366c88475af43058059115c9c918735db" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt;&lt;code&gt;CXX_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">&lt;a href=&quot;cxx_standard#prop_tgt:CXX_STANDARD&quot; id=&quot;index-0-prop_tgt:CXX_STANDARD&quot;&gt; &lt;code&gt;CXX_STANDARD&lt;/code&gt; &lt;/a&gt; 값이 필수 인지 여부를 설명하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="491e5f9b4c84e918c03547b34b3efc5bd56a4bd0" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt;&lt;code&gt;OBJC_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">&lt;a href=&quot;objc_standard#prop_tgt:OBJC_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJC_STANDARD&quot;&gt; &lt;code&gt;OBJC_STANDARD&lt;/code&gt; &lt;/a&gt; 의 값이 요구 사항 인지 여부를 설명하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="c6bc95bd60cf9d713e5eec8eeef6ee8eb9828dd9" translate="yes" xml:space="preserve">
          <source>Boolean describing whether the value of &lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt;&lt;code&gt;OBJCXX_STANDARD&lt;/code&gt;&lt;/a&gt; is a requirement.</source>
          <target state="translated">&lt;a href=&quot;objcxx_standard#prop_tgt:OBJCXX_STANDARD&quot; id=&quot;index-0-prop_tgt:OBJCXX_STANDARD&quot;&gt; &lt;code&gt;OBJCXX_STANDARD&lt;/code&gt; &lt;/a&gt; 의 값이 요구 사항 인지 여부를 설명하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="247665c1311b42a15863c86134c1e8956e5311b0" translate="yes" xml:space="preserve">
          <source>Boolean environment variable that affects how &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; command output reports overall progress. When set to &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt; or anything else that evaluates to boolean true, progress is reported by repeatedly updating the same line. This greatly reduces the overall verbosity, but is only supported when output is sent directly to a terminal. If the environment variable is not set or has a value that evaluates to false, output is reported normally with each test having its own start and end lines logged to the output.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest&lt;/code&gt; &lt;/a&gt; 명령 출력이 전체 진행 상황을보고 하는 방법에 영향을주는 부울 환경 변수입니다 . 때 세트 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;TRUE&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; 또는 평가하여 부울 true하는 것을 아무것도가 진행 반복적으로 같은 줄을 업데이트하여보고됩니다. 이는 전체적인 상세도를 크게 줄이지 만 출력이 터미널로 직접 전송 될 때만 지원됩니다. 환경 변수가 설정되지 않았거나 false로 평가되는 값이있는 경우 출력에 자체 시작 및 종료 행이 기록 된 각 테스트와 함께 출력이 정상적으로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="7acfc2a2f1340418dbd31649f5a195fe25db8055" translate="yes" xml:space="preserve">
          <source>Boolean environment variable that controls if the output should be logged for failed tests. Set the value to &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, or &lt;code&gt;ON&lt;/code&gt; to enable output on failure. See &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; for more information on controlling output of failed tests.</source>
          <target state="translated">실패한 테스트에 대해 출력을 기록해야하는지 여부를 제어하는 ​​부울 환경 변수입니다. 실패시 출력을 활성화 하려면 값을 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;True&lt;/code&gt; 또는 &lt;code&gt;ON&lt;/code&gt; 으로 설정하십시오. 실패한 테스트의 출력 제어에 대한 자세한 내용 은 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d3e5f363b6863764d2207e269f4b5a528d8f1092" translate="yes" xml:space="preserve">
          <source>Boolean expressions evaluate to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;. They are typically used to construct the condition in a &lt;a href=&quot;#conditional-generator-expressions&quot;&gt;conditional generator expression&lt;/a&gt;.</source>
          <target state="translated">부울 표현식은 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 로 평가됩니다 . 이것은 일반적으로 &lt;a href=&quot;#conditional-generator-expressions&quot;&gt;조건 생성기 표현식&lt;/a&gt; 에서 조건을 구성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2d546ec5746bc80f81b13933e8cd6ecfaff4774b" translate="yes" xml:space="preserve">
          <source>Boolean indicating if OpenMP is accessible through &lt;code&gt;omp_lib.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;omp_lib.h&lt;/code&gt; 를 통해 OpenMP에 액세스 할 수 있는지 여부를 나타내는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="9b8cf14f6c7cd16d7174debfeabc2cd113730b27" translate="yes" xml:space="preserve">
          <source>Boolean indicating if OpenMP is accessible through the &lt;code&gt;omp_lib&lt;/code&gt; Fortran module.</source>
          <target state="translated">&lt;code&gt;omp_lib&lt;/code&gt; Fortran 모듈을 통해 OpenMP에 액세스 할 수 있는지 여부를 나타내는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="a747d4ccdfa1753544b17a778ed0aae43438aee3" translate="yes" xml:space="preserve">
          <source>Boolean property to enable/disable copying of .NET hint references to output directory. The default is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">출력 디렉토리에 대한 .NET 힌트 참조 복사를 활성화 / 비활성화하는 부울 속성입니다. 기본값은 &lt;code&gt;ON&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d47eeab3bb21a0ef1754d0e7b4220917cb8e5c57" translate="yes" xml:space="preserve">
          <source>Boolean property to specify if the file should be included within a VSIX (Visual Studio Integration Extension) extension package. This is needed for development of Visual Studio extensions.</source>
          <target state="translated">파일을 VSIX (Visual Studio Integration Extension) 확장 패키지에 포함해야하는지 여부를 지정하는 부울 속성입니다. Visual Studio 확장을 개발하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1be3d4be70e78f10da289068c0b16b9a1ee03c56" translate="yes" xml:space="preserve">
          <source>Boolean specifying whether compiler specific extensions are requested.</source>
          <target state="translated">컴파일러 별 확장을 요청할지 여부를 지정하는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="76e2a1219173a447ecf5930f22803f3a05511c86" translate="yes" xml:space="preserve">
          <source>Boolean toggle to include/exclude top level directory (component case).</source>
          <target state="translated">최상위 디렉토리를 포함 / 제외하기위한 부울 토글 (컴포넌트 케이스).</target>
        </trans-unit>
        <trans-unit id="7883c8e675e15131dda3eb26c3fed8e26a3dec68" translate="yes" xml:space="preserve">
          <source>Boolean toggle to include/exclude top level directory.</source>
          <target state="translated">최상위 디렉토리를 포함 / 제외하려면 부울 토글입니다.</target>
        </trans-unit>
        <trans-unit id="15a7cfd9ee572a89b66ed27e92cf81633d084aab" translate="yes" xml:space="preserve">
          <source>Boolean toggle to make CPack use &lt;code&gt;DESTDIR&lt;/code&gt; mechanism when packaging.</source>
          <target state="translated">패키징 할 때 CPack이 &lt;code&gt;DESTDIR&lt;/code&gt; 메커니즘을 사용하도록 부울 토글 .</target>
        </trans-unit>
        <trans-unit id="3b9731004c38eef9a7ed4392fff2da812d481b37" translate="yes" xml:space="preserve">
          <source>Boolean value used by &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; to determine if the compiler pre definitions file &lt;code&gt;moc_predefs.h&lt;/code&gt; should be generated.</source>
          <target state="translated">컴파일러 사전 정의 파일 &lt;code&gt;moc_predefs.h&lt;/code&gt; 를 생성 해야하는지 여부를 판별하기 위해 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 에서 사용하는 부울 값 입니다.</target>
        </trans-unit>
        <trans-unit id="c02aeb254c3973b32394ee7b883b273d951a1a7c" translate="yes" xml:space="preserve">
          <source>Boost CMake</source>
          <target state="translated">CMake 부스트</target>
        </trans-unit>
        <trans-unit id="bee1e0ef905086a155d73c2fad8a1b54a96cdca1" translate="yes" xml:space="preserve">
          <source>Boost libraries come in many variants encoded in their file name. Users or projects may tell this module which variant to find by setting variables:</source>
          <target state="translated">부스트 라이브러리는 파일 이름으로 인코딩 된 많은 변형으로 제공됩니다. 사용자 또는 프로젝트는 변수를 설정하여 찾을 수있는 변형을이 모듈에 알려줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2fa148ecfe20b1f6b52f4ec50e4c5325af8e49b" translate="yes" xml:space="preserve">
          <source>Borland Makefiles</source>
          <target state="translated">볼랜드 메이크 파일</target>
        </trans-unit>
        <trans-unit id="65229981889da102853b497176fe296303906230" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; are counted in bytes, so care must be exercised if &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; could contain multi-byte characters.</source>
          <target state="translated">모두 &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; 과 &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; 경우주의를 기울여야한다, 그래서 바이트로 계산됩니다 &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; 멀티 바이트 문자를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="141e4a23db45f43533fe069f0929c8258e33c76e" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;HAVE_${VARIABLE}&lt;/code&gt; and &lt;code&gt;${VARIABLE}&lt;/code&gt; will be created as internal cache variables.</source>
          <target state="translated">두 &lt;code&gt;HAVE_${VARIABLE}&lt;/code&gt; 와 &lt;code&gt;${VARIABLE}&lt;/code&gt; 내부 캐시 변수로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="8fe05053567362466a5cf27f2cb391259d2faf36" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;gtest&lt;/code&gt; and &lt;code&gt;gtest_main&lt;/code&gt;</source>
          <target state="translated">두 &lt;code&gt;gtest&lt;/code&gt; 및 &lt;code&gt;gtest_main&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b67fffa58f7b9449e8d21a350cb057b8b4a11ab" translate="yes" xml:space="preserve">
          <source>Both commands are intended to replace use of &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; to register tests, and will create a separate CTest test for each Google Test test case. Note that this is in some cases less efficient, as common set-up and tear-down logic cannot be shared by multiple test cases executing in the same instance. However, it provides more fine-grained pass/fail information to CTest, which is usually considered as more beneficial. By default, the CTest test name is the same as the Google Test name (i.e. &lt;code&gt;suite.testcase&lt;/code&gt;); see also &lt;code&gt;TEST_PREFIX&lt;/code&gt; and &lt;code&gt;TEST_SUFFIX&lt;/code&gt;.</source>
          <target state="translated">두 명령 모두 &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt; 를 사용하여 테스트를 등록 하기위한 것이며 각 Google 테스트 테스트 사례마다 별도의 CTest 테스트를 만듭니다. 동일한 설정에서 실행되는 여러 테스트 사례에서 공통 설정 및 분리 로직을 공유 할 수 없으므로 일부 경우 효율성이 떨어집니다. 그러나 CTest에보다 세분화 된 통과 / 실패 정보를 제공하는데, 이는 일반적으로 더 유리한 것으로 간주됩니다. 기본적으로 &lt;code&gt;suite.testcase&lt;/code&gt; 테스트 이름은 Google 테스트 이름 (예 : suite.testcase )과 동일합니다. &lt;code&gt;TEST_PREFIX&lt;/code&gt; 및 &lt;code&gt;TEST_SUFFIX&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3b606a7c91cd33eb403accd8ac0c843785fd711" translate="yes" xml:space="preserve">
          <source>Both left and right hand arguments to &lt;code&gt;LESS&lt;/code&gt;, &lt;code&gt;GREATER&lt;/code&gt;, &lt;code&gt;EQUAL&lt;/code&gt;, &lt;code&gt;LESS_EQUAL&lt;/code&gt;, and &lt;code&gt;GREATER_EQUAL&lt;/code&gt;, are independently tested to see if they are defined variables, if so their defined values are used otherwise the original value is used.</source>
          <target state="translated">&lt;code&gt;LESS&lt;/code&gt; , &lt;code&gt;GREATER&lt;/code&gt; , &lt;code&gt;EQUAL&lt;/code&gt; , &lt;code&gt;LESS_EQUAL&lt;/code&gt; 및 &lt;code&gt;GREATER_EQUAL&lt;/code&gt; 에 대한 왼쪽 및 오른쪽 인수 는 정의 된 값이 사용되는 경우 정의 된 값이 사용되는지 여부를 확인하기 위해 독립적으로 테스트되어 원래 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="45933f17859dbf15d630b428a12b7cdcd80bff30" translate="yes" xml:space="preserve">
          <source>Both left and right hand arguments to &lt;code&gt;STRLESS&lt;/code&gt;, &lt;code&gt;STRGREATER&lt;/code&gt;, &lt;code&gt;STREQUAL&lt;/code&gt;, &lt;code&gt;STRLESS_EQUAL&lt;/code&gt;, and &lt;code&gt;STRGREATER_EQUAL&lt;/code&gt; are independently tested to see if they are defined variables, if so their defined values are used otherwise the original value is used.</source>
          <target state="translated">&lt;code&gt;STRLESS&lt;/code&gt; , &lt;code&gt;STRGREATER&lt;/code&gt; , &lt;code&gt;STREQUAL&lt;/code&gt; , &lt;code&gt;STRLESS_EQUAL&lt;/code&gt; 및 &lt;code&gt;STRGREATER_EQUAL&lt;/code&gt; 에 대한 왼쪽 및 오른쪽 인수 는 정의 된 값이 사용되는지 여부를 정의하기 위해 독립적으로 테스트되므로 정의 된 값이 사용되면 원래 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="13289cf50bf81cfa57ba8dfcb0f2a6441207ceda" translate="yes" xml:space="preserve">
          <source>Both left and right hand arguments to &lt;code&gt;VERSION_LESS&lt;/code&gt;, &lt;code&gt;VERSION_GREATER&lt;/code&gt;, &lt;code&gt;VERSION_EQUAL&lt;/code&gt;, &lt;code&gt;VERSION_LESS_EQUAL&lt;/code&gt;, and &lt;code&gt;VERSION_GREATER_EQUAL&lt;/code&gt; are independently tested to see if they are defined variables, if so their defined values are used otherwise the original value is used.</source>
          <target state="translated">&lt;code&gt;VERSION_LESS&lt;/code&gt; , &lt;code&gt;VERSION_GREATER&lt;/code&gt; , &lt;code&gt;VERSION_EQUAL&lt;/code&gt; , &lt;code&gt;VERSION_LESS_EQUAL&lt;/code&gt; 및 &lt;code&gt;VERSION_GREATER_EQUAL&lt;/code&gt; 에 대한 왼쪽 및 오른쪽 인수 는 변수가 정의되어 있는지 정의하기 위해 독립적으로 테스트되므로 정의 된 값이 사용되면 원래 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1bda07f3d2fcf504d3fa867c3f6960dad0e10769" translate="yes" xml:space="preserve">
          <source>Both signatures share most of the options. These options are the same as what you can find in the javadoc manpage. Please look at the manpage for &lt;code&gt;CLASSPATH&lt;/code&gt;, &lt;code&gt;DOCTITLE&lt;/code&gt;, &lt;code&gt;WINDOWTITLE&lt;/code&gt;, &lt;code&gt;AUTHOR&lt;/code&gt;, &lt;code&gt;USE&lt;/code&gt; and &lt;code&gt;VERSION&lt;/code&gt;.</source>
          <target state="translated">두 서명 모두 대부분의 옵션을 공유합니다. 이러한 옵션은 javadoc 맨 페이지에서 찾을 수있는 것과 동일합니다. &lt;code&gt;CLASSPATH&lt;/code&gt; , &lt;code&gt;DOCTITLE&lt;/code&gt; , &lt;code&gt;WINDOWTITLE&lt;/code&gt; , &lt;code&gt;AUTHOR&lt;/code&gt; , &lt;code&gt;USE&lt;/code&gt; 및 &lt;code&gt;VERSION&lt;/code&gt; 맨 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e359e62da23b927432dd550661256c384e73533e" translate="yes" xml:space="preserve">
          <source>Both signatures share same options.</source>
          <target state="translated">두 서명 모두 동일한 옵션을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="009f7dcd49bc101bd11fa76c957ee8f144ae839e" translate="yes" xml:space="preserve">
          <source>Both static and shared libraries marked with the &lt;code&gt;FRAMEWORK&lt;/code&gt; property are treated as &lt;code&gt;FRAMEWORK&lt;/code&gt; targets on macOS.</source>
          <target state="translated">&lt;code&gt;FRAMEWORK&lt;/code&gt; 속성으로 표시된 정적 라이브러리와 공유 라이브러리는 모두 macOS에서 &lt;code&gt;FRAMEWORK&lt;/code&gt; 대상으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="9f8871005a1216a6c8570506e3226aa33a66a168" translate="yes" xml:space="preserve">
          <source>Both the &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-0-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; properties serve similar purposes, but they are distinct and orthogonal. Resources specified by &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-1-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; do not affect &lt;code&gt;RESOURCE_LOCK&lt;/code&gt;, and vice versa. Whereas &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; is a simpler property that is used for locking one global resource, &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; is a more advanced property that allows multiple tests to simultaneously use multiple resources of the same type, specifying their requirements in a fine-grained manner.</source>
          <target state="translated">양쪽 &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-0-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; 의 속성은 비슷한 용도로 사용하지만, 그들은 별개의 직교한다. &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-1-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 에서&lt;/a&gt; 지정한 리소스 는 &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; 에 영향을주지 않으며 그 반대의 경우도 마찬가지입니다. &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; 은 하나의 전역 리소스를 잠그는 데 사용되는 더 간단한 속성 인 반면 , &lt;a href=&quot;resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-2-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt; 는 여러 테스트에서 동일한 유형의 여러 리소스를 동시에 사용하여 세부적인 방식으로 요구 사항을 지정할 수있는 고급 속성입니다.</target>
        </trans-unit>
        <trans-unit id="f9e6f17bf915d3fd23e6b4fbf3f25e965a6c8b3c" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; and &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; properties serve similar purposes, but they are distinct and orthogonal. Resources specified by &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; do not affect &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-1-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt;, and vice versa. Whereas &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-2-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; is a simpler property that is used for locking one global resource, &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; is a more advanced property that allows multiple tests to simultaneously use multiple resources of the same type, specifying their requirements in a fine-grained manner.</source>
          <target state="translated">양쪽 &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 및 &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; 의&lt;/a&gt; 속성은 비슷한 용도로 사용하지만, 그들은 별개의 직교한다. &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 에서 지정한 리소스 는 &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-1-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt; 에 영향을주지 않으며 그 반대의 경우도 마찬가지입니다. &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-2-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt; 은 하나의 전역 리소스를 잠그는 데 사용되는 더 간단한 속성 인 반면 , &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 는 여러 테스트에서 동일한 유형의 여러 리소스를 동시에 사용하여 세부적인 방식으로 요구 사항을 지정할 수있는 고급 속성입니다.</target>
        </trans-unit>
        <trans-unit id="28b8537cc51df1de2a717d05920f4b35154537dc" translate="yes" xml:space="preserve">
          <source>Both the property key and value may use generator expressions. Specific properties may apply to installed files and/or directories.</source>
          <target state="translated">속성 키와 값 모두 생성기 식을 사용할 수 있습니다. 설치된 파일 및 / 또는 디렉토리에 특정 속성이 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0355d02e6f5129ca6296de71164ac7c63b6e7734" translate="yes" xml:space="preserve">
          <source>Both the serial and parallel &lt;code&gt;HDF5&lt;/code&gt; wrappers are considered and the first directory to contain either one will be used. In the event that both appear in the same directory the serial version is preferentially selected. This behavior can be reversed by setting the variable &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">직렬 및 병렬 &lt;code&gt;HDF5&lt;/code&gt; 래퍼가 모두 고려되며 둘 중 하나를 포함하는 첫 번째 디렉토리가 사용됩니다. 둘 다 동일한 디렉토리에 나타나는 경우 직렬 버전이 우선적으로 선택됩니다. 이 동작은 &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; 변수 를 &lt;code&gt;TRUE&lt;/code&gt; 로 설정하여 되돌릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="538cd54c6a84a5f18f0a8b0559529e13971f2580" translate="yes" xml:space="preserve">
          <source>Both the serial and parallel &lt;code&gt;HDF5&lt;/code&gt; wrappers are considered and the first directory to contain either one will be used. In the event that both appear in the same directory the serial version is preferentially selected. This behavior can be reversed by setting the variable &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">직렬 및 병렬 &lt;code&gt;HDF5&lt;/code&gt; 랩퍼가 모두 고려되며 하나를 포함하는 첫 번째 디렉토리가 사용됩니다. 둘 다 동일한 디렉토리에 나타나는 경우 직렬 버전이 우선적으로 선택됩니다. 변수 &lt;code&gt;HDF5_PREFER_PARALLEL&lt;/code&gt; 을 &lt;code&gt;True&lt;/code&gt; 로 설정하면이 동작을 되돌릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="814fccb62320dd37ed00f69786c4254947403e09" translate="yes" xml:space="preserve">
          <source>Both types of packages also support specifying components of a package, either after the &lt;code&gt;REQUIRED&lt;/code&gt; keyword:</source>
          <target state="translated">두 가지 유형의 패키지 모두 &lt;code&gt;REQUIRED&lt;/code&gt; 키워드 뒤에 패키지 구성 요소 지정을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="ad017868202004d77ea0d5f6dc4182c72645f44c" translate="yes" xml:space="preserve">
          <source>Bracket Argument</source>
          <target state="translated">대괄호 인수</target>
        </trans-unit>
        <trans-unit id="fa745f19f33244f25dd511623995d319cfb497f5" translate="yes" xml:space="preserve">
          <source>Bracket Comment</source>
          <target state="translated">브라켓 코멘트</target>
        </trans-unit>
        <trans-unit id="8c91a057c537c354b9a54b38a0931c3f539a73c4" translate="yes" xml:space="preserve">
          <source>Bracket argument content consists of all text between the opening and closing brackets, except that one newline immediately following the opening bracket, if any, is ignored. No evaluation of the enclosed content, such as &lt;a href=&quot;#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; or &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt;, is performed. A bracket argument is always given to the command invocation as exactly one argument.</source>
          <target state="translated">대괄호 인수 내용은 여는 대괄호 바로 뒤에있는 하나의 줄 바꿈이있는 경우를 제외하고 여는 대괄호와 닫는 대괄호 사이의 모든 텍스트로 구성됩니다. &lt;a href=&quot;#escape-sequences&quot;&gt;이스케이프 시퀀스&lt;/a&gt; 또는 &lt;a href=&quot;#variable-references&quot;&gt;변수 참조&lt;/a&gt; 와 같은 동봉 된 컨텐츠의 평가 는 수행되지 않습니다. 대괄호 인수는 항상 정확히 하나의 인수로 명령 호출에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="32d76856a4d64e3b485903f507b2a5618064efac" translate="yes" xml:space="preserve">
          <source>Break from an enclosing foreach or while loop.</source>
          <target state="translated">둘러싸는 foreach 또는 while 루프에서 분리하십시오.</target>
        </trans-unit>
        <trans-unit id="df9d3dc6cd3f7c373dcef4790aa1b50729f2a3ab" translate="yes" xml:space="preserve">
          <source>Breaks from an enclosing &lt;a href=&quot;foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt;&lt;code&gt;foreach()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">바깥 쪽의 휴식 &lt;a href=&quot;foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt; &lt;code&gt;while()&lt;/code&gt; &lt;/a&gt; 루프.</target>
        </trans-unit>
        <trans-unit id="f0d74d62180b10045f05a96d9f6340804e8e03eb" translate="yes" xml:space="preserve">
          <source>Briefly, the module should only locate versions of the package compatible with the requested version, as described by the &lt;code&gt;Foo_FIND_VERSION&lt;/code&gt; family of variables. If &lt;code&gt;Foo_FIND_QUIETLY&lt;/code&gt; is set to true, it should avoid printing messages, including anything complaining about the package not being found. If &lt;code&gt;Foo_FIND_REQUIRED&lt;/code&gt; is set to true, the module should issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if the package cannot be found. If neither are set to true, it should print a non-fatal message if it cannot find the package.</source>
          <target state="translated">간단히 말해, 모듈은 &lt;code&gt;Foo_FIND_VERSION&lt;/code&gt; 변수 계열에 설명 된대로 요청 된 버전과 호환되는 패키지 버전 만 찾아야 합니다. 경우 &lt;code&gt;Foo_FIND_QUIETLY&lt;/code&gt; 가 true로 설정되어, 그것은 메시지를 인쇄 발견되지 패키지에 대해 불평 아무것도 포함하지 않아야합니다. 경우 &lt;code&gt;Foo_FIND_REQUIRED&lt;/code&gt; 가 true로 설정되어, 모듈은 발행한다 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 를 패키지가 발견되지 않는 경우. 둘 다 true로 설정되지 않은 경우 패키지를 찾을 수없는 경우 치명적이지 않은 메시지를 인쇄해야합니다.</target>
        </trans-unit>
        <trans-unit id="ca05e05843e7546df559bf650ba481ca33213b29" translate="yes" xml:space="preserve">
          <source>Build &lt;code&gt;&amp;lt;tgt&amp;gt;&lt;/code&gt; instead of the default target. Multiple targets may be given, separated by spaces.</source>
          <target state="translated">기본 대상 대신 &lt;code&gt;&amp;lt;tgt&amp;gt;&lt;/code&gt; 를 빌드하십시오 . 여러 대상이 공백으로 구분되어 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99b152bbd729aee68bdbb17103feb1b227bbf2c3" translate="yes" xml:space="preserve">
          <source>Build &lt;code&gt;SHARED&lt;/code&gt; or &lt;code&gt;STATIC&lt;/code&gt; library as Framework Bundle on the macOS and iOS.</source>
          <target state="translated">macOS 및 iOS에서 &lt;code&gt;SHARED&lt;/code&gt; 또는 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리를 Framework Bundle로 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="6007adf77133123fcfc95f2273d3f51cea6ff287" translate="yes" xml:space="preserve">
          <source>Build Events</source>
          <target state="translated">빌드 이벤트</target>
        </trans-unit>
        <trans-unit id="bdd8b24645854f490881dbff0f60f8d9e5b592b7" translate="yes" xml:space="preserve">
          <source>Build Specification and Usage Requirements</source>
          <target state="translated">빌드 사양 및 사용 요구 사항</target>
        </trans-unit>
        <trans-unit id="9e80f22dd8f201223d253b21cc1719a508ba0c87" translate="yes" xml:space="preserve">
          <source>Build Specification with Generator Expressions</source>
          <target state="translated">생성기 표현식으로 빌드 스펙</target>
        </trans-unit>
        <trans-unit id="f34e4f997398d27996f9ce0f9bf66e9e271a4999" translate="yes" xml:space="preserve">
          <source>Build Tree</source>
          <target state="translated">나무 만들기</target>
        </trans-unit>
        <trans-unit id="1ccafde996e3187a40eed8354b650ed15474f08c" translate="yes" xml:space="preserve">
          <source>Build a Project</source>
          <target state="translated">프로젝트 구축</target>
        </trans-unit>
        <trans-unit id="c268c9e61912c7c9f3908cfc01266868d24a8062" translate="yes" xml:space="preserve">
          <source>Build a combined (device and simulator) target when installing.</source>
          <target state="translated">설치시 결합 된 (장치 및 시뮬레이터) 대상을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="ec9687c93514967a8ab4962f910aa8ba85910f48" translate="yes" xml:space="preserve">
          <source>Build an executable as an Application Bundle on macOS or iOS.</source>
          <target state="translated">macOS 또는 iOS에서 응용 프로그램 번들로 실행 파일을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="4755cdab0911e9ab6a773c2494af903c452388ff" translate="yes" xml:space="preserve">
          <source>Build an executable with a WinMain entry point on windows.</source>
          <target state="translated">Windows에서 WinMain 진입 점을 사용하여 실행 파일을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="3857dddac02460f4e1f96ff8d51d64b0052831c0" translate="yes" xml:space="preserve">
          <source>Build and Test</source>
          <target state="translated">빌드 및 테스트</target>
        </trans-unit>
        <trans-unit id="c7bbc476685fd651db35391bfb776550ee431733" translate="yes" xml:space="preserve">
          <source>Build and Test Mode</source>
          <target state="translated">빌드 및 테스트 모드</target>
        </trans-unit>
        <trans-unit id="5493b156753364c1feeed98d1065a3c8592c5832" translate="yes" xml:space="preserve">
          <source>Build binary and source package installers</source>
          <target state="translated">바이너리 및 소스 패키지 설치 프로그램 빌드</target>
        </trans-unit>
        <trans-unit id="92c5e8cf5cf99518eeb8036a5457b2912f52c16c" translate="yes" xml:space="preserve">
          <source>Build binary and source package installers.</source>
          <target state="translated">바이너리 및 소스 패키지 설치 프로그램을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="cb045b3f994f959c395367583fc4a75f0a34330d" translate="yes" xml:space="preserve">
          <source>Build configuration used for &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; projects.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 프로젝트에 사용되는 빌드 구성 .</target>
        </trans-unit>
        <trans-unit id="d6f277fecc53bfebfb355adabda0a370cf1ea81a" translate="yes" xml:space="preserve">
          <source>Build configuration, such as &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Release&lt;/code&gt;, determining debug/optimization flags. This is only relevant for single-configuration buildsystems such as &lt;code&gt;Makefile&lt;/code&gt; and &lt;code&gt;Ninja&lt;/code&gt;. Multi-configuration buildsystems such as those for Visual Studio and Xcode ignore this setting.</source>
          <target state="translated">디버그 / 최적화 플래그를 결정하는 &lt;code&gt;Debug&lt;/code&gt; 또는 &lt;code&gt;Release&lt;/code&gt; 와 같은 빌드 구성 . 이것은 &lt;code&gt;Makefile&lt;/code&gt; 및 &lt;code&gt;Ninja&lt;/code&gt; 와 같은 단일 구성 빌드 시스템에만 관련됩니다 . Visual Studio 및 Xcode 용과 같은 다중 구성 빌드 시스템은이 설정을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="92ceff60ec7cb1e57d29ea733e0ae54c8a8431b5" translate="yes" xml:space="preserve">
          <source>Build specifications may use &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; containing content which may be conditional or known only at generate-time. For example, the calculated &amp;ldquo;compatible&amp;rdquo; value of a property may be read with the &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; expression:</source>
          <target state="translated">빌드 스펙은 조건부이거나 생성시에만 알려진 컨텐츠를 포함 하는 &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 을 사용할 수 있습니다. 예를 들어, 계산 된 속성의 &quot;호환되는&quot;값은 &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; 표현식 으로 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44a8b9a93c6c4b6494d621e26e29a8106792511c" translate="yes" xml:space="preserve">
          <source>Build specifications may use &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; containing content which may be conditional or known only at generate-time. For example, the calculated &amp;ldquo;compatible&amp;rdquo; value of a property may be read with the &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; expression:</source>
          <target state="translated">빌드 스펙은 조건부이거나 생성시에만 알려진 컨텐츠를 포함 하는 &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 을 사용할 수 있습니다. 예를 들어, 계산 된 속성의 &quot;호환&quot;값은 &lt;code&gt;TARGET_PROPERTY&lt;/code&gt; 표현식 으로 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4794aa40be4ebc808b96b20d7bbd19a9f88f3423" translate="yes" xml:space="preserve">
          <source>Build target &lt;code&gt;clean&lt;/code&gt; first, then build. (To clean only, use &lt;code&gt;--target clean&lt;/code&gt;.)</source>
          <target state="translated">먼저 대상을 &lt;code&gt;clean&lt;/code&gt; 한 다음 빌드하십시오. 청소 &lt;code&gt;--target clean&lt;/code&gt; 려면 --target clean을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="047cf790096886ea0e0b5968bb31083068f9d4e2" translate="yes" xml:space="preserve">
          <source>Build targets provided by CMake that are meant for individual interactive use, such as &lt;code&gt;install&lt;/code&gt;, are placed in the &lt;code&gt;console&lt;/code&gt; pool automatically.</source>
          <target state="translated">&lt;code&gt;install&lt;/code&gt; 과 같은 개별 대화 형 사용을위한 CMake에서 제공하는 빌드 대상 은 &lt;code&gt;console&lt;/code&gt; 풀에 자동으로 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="b41808a625b647f36e2f3a8300a850b023d8ee04" translate="yes" xml:space="preserve">
          <source>Build the &lt;code&gt;Downstream&lt;/code&gt; project and confirm that it can find and use the package components.</source>
          <target state="translated">&lt;code&gt;Downstream&lt;/code&gt; 프로젝트를 빌드하고 패키지 구성 요소를 찾아 사용할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2b5cf3517a6fef114384e2b4ec96fd9561f440f5" translate="yes" xml:space="preserve">
          <source>Build the project and store results in &lt;code&gt;Build.xml&lt;/code&gt; for submission with the &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">에서 프로젝트 저장 결과 구축 &lt;code&gt;Build.xml&lt;/code&gt; 에 제출 &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="4acec26c1875b9f451a2b8e1bb8af9d4d4e00655" translate="yes" xml:space="preserve">
          <source>Build the software by running a command in the build tree. Record the build output log and detect warnings and errors. See the &lt;a href=&quot;#ctest-build-step&quot;&gt;CTest Build Step&lt;/a&gt; section below.</source>
          <target state="translated">빌드 트리에서 명령을 실행하여 소프트웨어를 빌드하십시오. 빌드 출력 로그를 기록하고 경고 및 오류를 감지하십시오. 아래의 &lt;a href=&quot;#ctest-build-step&quot;&gt;CTest 빌드 단계&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e8a527990884cb99b2f9954d10b4ffb134e8e846" translate="yes" xml:space="preserve">
          <source>Build-time reference to per-configuration output subdirectory.</source>
          <target state="translated">구성 별 출력 서브 디렉토리에 대한 빌드 시간 참조</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="6d810dc659cfa7434721237811efed5ab1ad2430" translate="yes" xml:space="preserve">
          <source>Building an Installer (Step 7)</source>
          <target state="translated">설치 프로그램 빌드 (7 단계)</target>
        </trans-unit>
        <trans-unit id="ad73034f762914df643efe360861fd0acc2a0ae6" translate="yes" xml:space="preserve">
          <source>Building and Installing a Package</source>
          <target state="translated">패키지 빌드 및 설치</target>
        </trans-unit>
        <trans-unit id="d5f11a118da53c94e5682422cbab687420bbc491" translate="yes" xml:space="preserve">
          <source>Buildsystem</source>
          <target state="translated">Buildsystem</target>
        </trans-unit>
        <trans-unit id="983f14448f917b0a383da07460874ab97ba29aa2" translate="yes" xml:space="preserve">
          <source>Built-In Default</source>
          <target state="translated">내장 기본값</target>
        </trans-unit>
        <trans-unit id="9c90780b6a60b020a307437e7572df295daba5b4" translate="yes" xml:space="preserve">
          <source>Built-in properties matching &lt;code&gt;COMPATIBLE_INTERFACE_*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;COMPATIBLE_INTERFACE_*&lt;/code&gt; 와 일치하는 내장 특성</target>
        </trans-unit>
        <trans-unit id="84b47eebb313804a6594ac5506d62e97decf5958" translate="yes" xml:space="preserve">
          <source>BundleUtilities</source>
          <target state="translated">BundleUtilities</target>
        </trans-unit>
        <trans-unit id="654a81f2d3a7234ab3c1e3ba078dd1e95b9d8acf" translate="yes" xml:space="preserve">
          <source>Bundling</source>
          <target state="translated">Bundling</target>
        </trans-unit>
        <trans-unit id="e0ac17101159a9001dcaa5ebbac5c87aeed258d4" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt;&lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt; &lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt; &lt;/a&gt; 은 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0fb61d3fd526dce94fbbfbea39312053f569bc98" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; is initialized from &lt;a href=&quot;../variable/cmake_autogen_origin_depends#variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;CMAKE_AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; which is &lt;code&gt;ON&lt;/code&gt; by default.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; 가&lt;/a&gt; 에서 초기화 &lt;a href=&quot;../variable/cmake_autogen_origin_depends#variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;CMAKE_AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; &lt;/a&gt; 이다 &lt;code&gt;ON&lt;/code&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="ec05326761b45739f722223cc14abe2f6b22f8d6" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#prop_tgt:AUTOGEN_PARALLEL&quot; id=&quot;index-1-prop_tgt:AUTOGEN_PARALLEL&quot;&gt;&lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt;&lt;/a&gt; is initialized from &lt;a href=&quot;../variable/cmake_autogen_parallel#variable:CMAKE_AUTOGEN_PARALLEL&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_PARALLEL&quot;&gt;&lt;code&gt;CMAKE_AUTOGEN_PARALLEL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#prop_tgt:AUTOGEN_PARALLEL&quot; id=&quot;index-1-prop_tgt:AUTOGEN_PARALLEL&quot;&gt; &lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt; 은&lt;/a&gt; 에서 초기화 &lt;a href=&quot;../variable/cmake_autogen_parallel#variable:CMAKE_AUTOGEN_PARALLEL&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_PARALLEL&quot;&gt; &lt;code&gt;CMAKE_AUTOGEN_PARALLEL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e2bead878857a223fa3f90f33a5554686b42bcf" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot;&gt;&lt;code&gt;AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt;&lt;/a&gt; is initialized from &lt;a href=&quot;../variable/cmake_automoc_compiler_predefines#variable:CMAKE_AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_COMPILER_PREDEFINES&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt;&lt;/a&gt;, which is ON by default.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_COMPILER_PREDEFINES&quot;&gt; &lt;code&gt;AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;../variable/cmake_automoc_compiler_predefines#variable:CMAKE_AUTOMOC_COMPILER_PREDEFINES&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_COMPILER_PREDEFINES&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_COMPILER_PREDEFINES&lt;/code&gt; &lt;/a&gt; 에서 초기화 되며 기본적으로 ON입니다.</target>
        </trans-unit>
        <trans-unit id="010af93aceba37dd5856a61c654a3488d65ca76f" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt; is initialized from &lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;, which is empty by default.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt; 에서 초기화 되며 기본적으로 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0f7def479cb955782daa5a308ba639a1f04c3fc" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt; is initialized from &lt;a href=&quot;../variable/cmake_automoc_macro_names#variable:CMAKE_AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; 은&lt;/a&gt; 에서 초기화 &lt;a href=&quot;../variable/cmake_automoc_macro_names#variable:CMAKE_AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_MACRO_NAMES&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eaa390e6f8adda61d2dc647ad2c32ff6092019a2" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; is processed by a &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;custom command&lt;/code&gt;&lt;/a&gt;. If the &lt;code&gt;.qrc&lt;/code&gt; file is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;custom target&lt;/code&gt;&lt;/a&gt; is used instead.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;custom command&lt;/code&gt; &lt;/a&gt; 처리됩니다 . 는 IF &lt;code&gt;.qrc&lt;/code&gt; 의 파일이됩니다 &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 하는 &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;custom target&lt;/code&gt; &lt;/a&gt; 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f33f88c4c633e9a373d978c39926d51b08ab4fc8" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;CMAKE_AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;CMAKE_AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; &lt;/a&gt; 는 기본적 으로 &lt;code&gt;ON&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c95787daa2a8ecad9ff4a2a8e8b86ba05918c46a" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#variable:CMAKE_AUTOGEN_PARALLEL&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_PARALLEL&quot;&gt;&lt;code&gt;CMAKE_AUTOGEN_PARALLEL&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#variable:CMAKE_AUTOGEN_PARALLEL&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_PARALLEL&quot;&gt; &lt;code&gt;CMAKE_AUTOGEN_PARALLEL&lt;/code&gt; &lt;/a&gt; 은 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b56d9b1c018a48d9bee25593a63c9a381f27cec8" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#variable:CMAKE_AUTOGEN_VERBOSE&quot; id=&quot;index-1-variable:CMAKE_AUTOGEN_VERBOSE&quot;&gt;&lt;code&gt;CMAKE_AUTOGEN_VERBOSE&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#variable:CMAKE_AUTOGEN_VERBOSE&quot; id=&quot;index-1-variable:CMAKE_AUTOGEN_VERBOSE&quot;&gt; &lt;code&gt;CMAKE_AUTOGEN_VERBOSE&lt;/code&gt; &lt;/a&gt; 는 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0d8cd361fcea6e7b47bdc4bb596036153cde3e5f" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt; &lt;/a&gt; 은 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9a81a5b08c71a10dae29fa0a60094f6f218244c0" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-1-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-1-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt; &lt;/a&gt; 은 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c7c7d6e15ce3f7ac5d9b28f0f7c8edaa2188faeb" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-1-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-1-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt; &lt;/a&gt; 은 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9d2593dcc9f9dd872e93aac27c5987a792cf768f" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-1-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-1-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt; &lt;/a&gt; 은 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2f46567718270e79462993daa0b058d7d5fc1620" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-4-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; does not print the output from the tests. The command line argument &lt;code&gt;-V&lt;/code&gt; (or &lt;code&gt;--verbose&lt;/code&gt;) enables verbose mode to print the output from all tests. The &lt;code&gt;--output-on-failure&lt;/code&gt; option prints the test output for failing tests only. The environment variable &lt;a href=&quot;../../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt;&lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt;&lt;/a&gt; can be set to &lt;code&gt;1&lt;/code&gt; as an alternative to passing the &lt;code&gt;--output-on-failure&lt;/code&gt; option to &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-5-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-4-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 은 테스트의 출력을 인쇄하지 않습니다. 명령 줄 인수 &lt;code&gt;-V&lt;/code&gt; (또는 &lt;code&gt;--verbose&lt;/code&gt; )를 사용하면 상세 모드에서 모든 테스트의 출력을 인쇄 할 수 있습니다. &lt;code&gt;--output-on-failure&lt;/code&gt; 옵션은 테스트를 실패에 대한 테스트 출력을 인쇄합니다. &lt;code&gt;--output-on-failure&lt;/code&gt; 옵션을 &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-5-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 에 전달하는 대신 환경 변수 &lt;a href=&quot;../../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt; &lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;1&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd9a5af53c6f51224292b80dde6d9d4b31b98956" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;cmake_global_autogen_target_name#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt;&lt;/a&gt; is unset.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;cmake_global_autogen_target_name#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt; &lt;/a&gt; 은 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5e0cdee5a748a7d6f8564e5005a004bd75cc1204" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt; is initialized from &lt;a href=&quot;../variable/cmake_autogen_parallel#variable:CMAKE_AUTOGEN_PARALLEL&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_PARALLEL&quot;&gt;&lt;code&gt;CMAKE_AUTOGEN_PARALLEL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt; 은 에서 초기화 &lt;a href=&quot;../variable/cmake_autogen_parallel#variable:CMAKE_AUTOGEN_PARALLEL&quot; id=&quot;index-0-variable:CMAKE_AUTOGEN_PARALLEL&quot;&gt; &lt;code&gt;CMAKE_AUTOGEN_PARALLEL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33584888b06fc56b01597ac44bfc61963088806b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;CMAKE_DISABLE_PRECOMPILE_HEADERS&lt;/code&gt; is &lt;code&gt;OFF&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;CMAKE_DISABLE_PRECOMPILE_HEADERS&lt;/code&gt; 는 &lt;code&gt;OFF&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dd28fa41af83e1993fab10effb8aef85ff93846f" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR&lt;/code&gt; is &lt;code&gt;OFF&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR&lt;/code&gt; 은 &lt;code&gt;OFF&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="690bd7470251555100ddc3b43820f322e9dfbea2" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;GENERATE_EXPORT_HEADER()&lt;/code&gt; generates macro names in a file name determined by the name of the library. This means that in the simplest case, users of &lt;code&gt;GenerateExportHeader&lt;/code&gt; will be equivalent to:</source>
          <target state="translated">기본적으로 &lt;code&gt;GENERATE_EXPORT_HEADER()&lt;/code&gt; 는 라이브러리 이름으로 결정된 파일 이름에 매크로 이름을 생성합니다. 즉, 가장 간단한 경우 &lt;code&gt;GenerateExportHeader&lt;/code&gt; 사용자는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="472801d1934f4400ee08fb490f38bf5c5cc66b64" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;GLOB&lt;/code&gt; lists directories - directories are omitted in result if &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; is set to false.</source>
          <target state="translated">기본적으로 &lt;code&gt;GLOB&lt;/code&gt; 는 디렉토리를 나열합니다. &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; 가 false로 설정 되면 디렉토리는 결과적으로 생략됩니다 .</target>
        </trans-unit>
        <trans-unit id="a5637af6500dc5a2d0d4d1ed89a09adda9fc6978" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;GLOB_RECURSE&lt;/code&gt; omits directories from result list - setting &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; to true adds directories to result list. If &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; is given or policy &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-1-policy:CMP0009&quot;&gt;&lt;code&gt;CMP0009&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt; then &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; treats symlinks as directories.</source>
          <target state="translated">기본적으로 &lt;code&gt;GLOB_RECURSE&lt;/code&gt; 는 결과 목록에서 디렉토리를 생략합니다. &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; 를 true로 설정 하면 결과 목록에 디렉토리가 추가됩니다. 경우 &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; 이 주어진다 또는 정책 &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-1-policy:CMP0009&quot;&gt; &lt;code&gt;CMP0009&lt;/code&gt; 이&lt;/a&gt; 설정되어 있지 않습니다 &lt;code&gt;NEW&lt;/code&gt; 다음 &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; 디렉토리로 취급 심볼릭 링크.</target>
        </trans-unit>
        <trans-unit id="f234c2e5ec7ebc0325b70c03a0e20a510d861016" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;GLOB_RECURSE&lt;/code&gt; omits directories from result list - setting &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; to true adds directories to result list. If &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; is given or policy &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-1-policy:CMP0009&quot;&gt;&lt;code&gt;CMP0009&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;OLD&lt;/code&gt; then &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; treats symlinks as directories.</source>
          <target state="translated">&lt;code&gt;GLOB_RECURSE&lt;/code&gt; 는 기본적으로 결과 목록에서 디렉토리를 생략합니다. &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; 를 true로 설정 하면 디렉토리가 결과 목록에 추가됩니다. 경우 &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; 이 주어진다 또는 정책 &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-1-policy:CMP0009&quot;&gt; &lt;code&gt;CMP0009&lt;/code&gt; 이&lt;/a&gt; 설정되어 있지 않습니다 &lt;code&gt;OLD&lt;/code&gt; 다음 &lt;code&gt;LIST_DIRECTORIES&lt;/code&gt; 디렉토리로 취급 심볼릭 링크.</target>
        </trans-unit>
        <trans-unit id="7a1274509c24e16852236158d7d18f68826ff0b6" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;configure_package_config_file&lt;/code&gt; also generates two helper macros, &lt;code&gt;set_and_check()&lt;/code&gt; and &lt;code&gt;check_required_components()&lt;/code&gt; into the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file.</source>
          <target state="translated">기본적으로 &lt;code&gt;configure_package_config_file&lt;/code&gt; 은 &lt;code&gt;set_and_check()&lt;/code&gt; 및 &lt;code&gt;check_required_components()&lt;/code&gt; 라는 두 개의 도우미 매크로를 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 파일 로 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="8da668c4571472854aa5654afd8024dc0334acd6" translate="yes" xml:space="preserve">
          <source>By default CTest uses configuration options from configuration file. This option will overwrite the configuration option.</source>
          <target state="translated">기본적으로 CTest는 구성 파일의 구성 옵션을 사용합니다. 이 옵션은 구성 옵션을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="006a297aae6241b88a94a6bf26fd006b1bd6c6b7" translate="yes" xml:space="preserve">
          <source>By default CTest will run child CTest instances within the same process. If this behavior is not desired, this argument will enforce new processes for child CTest processes.</source>
          <target state="translated">기본적으로 CTest는 동일한 프로세스 내에서 하위 CTest 인스턴스를 실행합니다. 이 동작이 바람직하지 않은 경우이 인수는 하위 CTest 프로세스에 새 프로세스를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="a430c40c8425d660c537388ca9954aa0b5717f35" translate="yes" xml:space="preserve">
          <source>By default it is ON.</source>
          <target state="translated">기본적으로 ON입니다.</target>
        </trans-unit>
        <trans-unit id="55ec66148cf0c506f60e617cf9e81d5297c6f058" translate="yes" xml:space="preserve">
          <source>By default it is empty.</source>
          <target state="translated">기본적으로 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="66f37c2b17b74394e03a8d1ba1e399e0f8be29ab" translate="yes" xml:space="preserve">
          <source>By default linking to a shared library target transitively links to targets with which the library itself was linked. For an executable with exports (see the &lt;a href=&quot;enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property) no default transitive link dependencies are used. This property replaces the default transitive link dependencies with an explicit list. When the target is linked into another target using the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command, the libraries listed (and recursively their link interface libraries) will be provided to the other target also. If the list is empty then no transitive link dependencies will be incorporated when this target is linked into another target even if the default set is non-empty. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_link_interface_libraries#variable:CMAKE_LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-variable:CMAKE_LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;CMAKE_LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created. This property is ignored for &lt;code&gt;STATIC&lt;/code&gt; libraries.</source>
          <target state="translated">기본적으로 공유 라이브러리 대상에 연결하면 라이브러리 자체가 연결된 대상에 전 이적으로 연결됩니다. 내보내기가있는 실행 파일 ( &lt;a href=&quot;enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 대상 속성 참조 )의 경우 기본 전이 링크 종속성이 사용되지 않습니다. 이 특성은 기본 전이 링크 종속성을 명시 적 목록으로 대체합니다. &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 대상을 다른 대상에 연결하면 나열된 라이브러리 (및 재귀 적으로 해당 링크 인터페이스 라이브러리)가 다른 대상에도 제공됩니다. 목록이 비어 있으면 기본 세트가 비어 있지 않더라도이 대상이 다른 대상에 링크 될 때 전이 링크 종속성이 통합되지 않습니다. 이 속성은 &lt;a href=&quot;../variable/cmake_link_interface_libraries#variable:CMAKE_LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-variable:CMAKE_LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;CMAKE_LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt; 값으로 초기화됩니다.대상을 만들 때 설정된 경우 변수 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리 에서는이 특성이 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="1469bd772afd9103cfb03d258722640a2412d74c" translate="yes" xml:space="preserve">
          <source>By default on macOS, system framework is search first. In other words, OpenAL is searched in the following order:</source>
          <target state="translated">기본적으로 macOS에서는 시스템 프레임 워크가 먼저 검색됩니다. 즉, OpenAL은 다음 순서로 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="6fad2103a5f39be131aaa86922f47f0f9ab680ba" translate="yes" xml:space="preserve">
          <source>By default static library targets have this property is disabled, while shared, module, and executable targets have this property enabled.</source>
          <target state="translated">기본적으로 정적 라이브러리 대상에는이 속성이 비활성화되어 있고 공유, 모듈 및 실행 대상에는이 속성이 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="06b2ecf0ad92302b76a9ee3380f6b24d1fe33c32" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;export(PACKAGE)&lt;/code&gt; command does nothing (see policy &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-0-policy:CMP0090&quot;&gt;&lt;code&gt;CMP0090&lt;/code&gt;&lt;/a&gt;) because populating the user package registry has effects outside the source and build trees. Set the &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable to add build directories to the CMake user package registry.</source>
          <target state="translated">사용자 패키지 레지스트리를 채우는 것은 소스 및 빌드 트리 외부에 영향을주기 때문에 기본적으로 &lt;code&gt;export(PACKAGE)&lt;/code&gt; 명령은 아무 것도 수행하지 않습니다 (정책 &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-0-policy:CMP0090&quot;&gt; &lt;code&gt;CMP0090&lt;/code&gt; &lt;/a&gt; 참조 ). &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 변수를 설정하여 빌드 디렉토리를 CMake 사용자 패키지 레지스트리에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8f9c3772418ef3948e2469629d4acdc85bdf7b10" translate="yes" xml:space="preserve">
          <source>By default the directories specified are appended onto the current list of directories. This default behavior can be changed by setting &lt;a href=&quot;../variable/cmake_include_directories_before#variable:CMAKE_INCLUDE_DIRECTORIES_BEFORE&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_DIRECTORIES_BEFORE&quot;&gt;&lt;code&gt;CMAKE_INCLUDE_DIRECTORIES_BEFORE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;ON&lt;/code&gt;. By using &lt;code&gt;AFTER&lt;/code&gt; or &lt;code&gt;BEFORE&lt;/code&gt; explicitly, you can select between appending and prepending, independent of the default.</source>
          <target state="translated">기본적으로 지정된 디렉토리가 현재 디렉토리 목록에 추가됩니다. 이 기본 동작은 &lt;a href=&quot;../variable/cmake_include_directories_before#variable:CMAKE_INCLUDE_DIRECTORIES_BEFORE&quot; id=&quot;index-0-variable:CMAKE_INCLUDE_DIRECTORIES_BEFORE&quot;&gt; &lt;code&gt;CMAKE_INCLUDE_DIRECTORIES_BEFORE&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;ON&lt;/code&gt; 으로 설정하여 변경할 수 있습니다 . &lt;code&gt;AFTER&lt;/code&gt; 또는 &lt;code&gt;BEFORE&lt;/code&gt; 를 명시 적으로 사용 하면 기본값과 무관하게 추가와 추가를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83a4da9b59b99412735ce83aa4a6e4567e90793b" translate="yes" xml:space="preserve">
          <source>By default the directories specified are appended onto the current list of directories. This default behavior can be changed by setting &lt;a href=&quot;../variable/cmake_link_directories_before#variable:CMAKE_LINK_DIRECTORIES_BEFORE&quot; id=&quot;index-0-variable:CMAKE_LINK_DIRECTORIES_BEFORE&quot;&gt;&lt;code&gt;CMAKE_LINK_DIRECTORIES_BEFORE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;ON&lt;/code&gt;. By using &lt;code&gt;AFTER&lt;/code&gt; or &lt;code&gt;BEFORE&lt;/code&gt; explicitly, you can select between appending and prepending, independent of the default.</source>
          <target state="translated">기본적으로 지정된 디렉토리가 현재 디렉토리 목록에 추가됩니다. 이 기본 동작은 &lt;a href=&quot;../variable/cmake_link_directories_before#variable:CMAKE_LINK_DIRECTORIES_BEFORE&quot; id=&quot;index-0-variable:CMAKE_LINK_DIRECTORIES_BEFORE&quot;&gt; &lt;code&gt;CMAKE_LINK_DIRECTORIES_BEFORE&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;ON&lt;/code&gt; 으로 설정하여 변경할 수 있습니다 . &lt;code&gt;AFTER&lt;/code&gt; 또는 &lt;code&gt;BEFORE&lt;/code&gt; 를 명시 적으로 사용 하면 기본값과 무관하게 추가와 추가를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cdaab836a5a22d5a7c831b8d52be3510dbc80cd" translate="yes" xml:space="preserve">
          <source>By default the executable file will be created in the build tree directory corresponding to the source tree directory in which the command was invoked. See documentation of the &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; target property to change this location. See documentation of the &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt;&lt;code&gt;OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target property to change the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; part of the final file name.</source>
          <target state="translated">기본적으로 실행 파일은 명령이 호출 된 소스 트리 디렉토리에 해당하는 빌드 트리 디렉토리에 작성됩니다. 이 위치를 변경 하려면 &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 대상 특성의 문서를 참조하십시오 . 최종 파일 이름 의 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 부분 을 변경 하려면 &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt; &lt;code&gt;OUTPUT_NAME&lt;/code&gt; &lt;/a&gt; 대상 특성의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="46d7e0935bf5704b419a785dbb50893f683bea64" translate="yes" xml:space="preserve">
          <source>By default the library file will be created in the build tree directory corresponding to the source tree directory in which the command was invoked. See documentation of the &lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; target properties to change this location. See documentation of the &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt;&lt;code&gt;OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target property to change the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; part of the final file name.</source>
          <target state="translated">기본적으로 라이브러리 파일은 명령이 호출 된 소스 트리 디렉토리에 해당하는 빌드 트리 디렉토리에 작성됩니다. 이 위치를 변경 하려면 &lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 대상 특성의 문서를 참조하십시오 . 최종 파일 이름 의 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 부분 을 변경 하려면 &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt; &lt;code&gt;OUTPUT_NAME&lt;/code&gt; &lt;/a&gt; 대상 특성의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e359620c3dca073e502e22bc65a719df88529f2e" translate="yes" xml:space="preserve">
          <source>By default the value stored in the result variable will be the path at which the file is found. The &lt;a href=&quot;../variable/cmake_find_package_resolve_symlinks#variable:CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS&lt;/code&gt;&lt;/a&gt; variable may be set to &lt;code&gt;TRUE&lt;/code&gt; before calling &lt;code&gt;find_package&lt;/code&gt; in order to resolve symbolic links and store the real path to the file.</source>
          <target state="translated">기본적으로 결과 변수에 저장된 값은 파일이있는 경로입니다. &lt;a href=&quot;../variable/cmake_find_package_resolve_symlinks#variable:CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS&lt;/code&gt; 의&lt;/a&gt; 변수로 설정 될 수 있습니다 &lt;code&gt;TRUE&lt;/code&gt; 호출하기 전에 &lt;code&gt;find_package&lt;/code&gt; 을 심볼릭 링크를 해결하고 파일에 실제 경로를 저장하기 위해.</target>
        </trans-unit>
        <trans-unit id="0c4d01eec11e07b071ad4f9f2b082cf45c72a5e8" translate="yes" xml:space="preserve">
          <source>By default this contains a list of directories containing incompatible binaries for the host system. See the &lt;a href=&quot;cmake_ignore_path#variable:CMAKE_IGNORE_PATH&quot; id=&quot;index-0-variable:CMAKE_IGNORE_PATH&quot;&gt;&lt;code&gt;CMAKE_IGNORE_PATH&lt;/code&gt;&lt;/a&gt; variable that is intended to be set by the project.</source>
          <target state="translated">기본적으로 여기에는 호스트 시스템에 대해 호환되지 않는 바이너리가 들어있는 디렉토리 목록이 포함됩니다. 프로젝트에서 설정하려는 &lt;a href=&quot;cmake_ignore_path#variable:CMAKE_IGNORE_PATH&quot; id=&quot;index-0-variable:CMAKE_IGNORE_PATH&quot;&gt; &lt;code&gt;CMAKE_IGNORE_PATH&lt;/code&gt; &lt;/a&gt; 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebff344537bae0637d09322961086aa1e238657b" translate="yes" xml:space="preserve">
          <source>By default this contains the standard directories for the current system, the &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt;. The installation and staging prefixes may be excluded by setting the &lt;a href=&quot;cmake_find_no_install_prefix#variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">기본적으로 여기에는 현재 시스템의 표준 디렉토리, &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; 가 포함&lt;/a&gt; 됩니다. &lt;a href=&quot;cmake_find_no_install_prefix#variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 변수 를 설정하여 설치 및 스테이징 접 두부를 제외시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1fd067f49627af6e516f57851413b38f04439f5" translate="yes" xml:space="preserve">
          <source>By default this contains the system directories for the current system, the &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt;. The installation and staging prefixes may be excluded by setting the &lt;a href=&quot;cmake_find_no_install_prefix#variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">기본적으로이 현재 시스템의의 시스템 디렉토리 포함 &lt;a href=&quot;cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;cmake_find_no_install_prefix#variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 변수 를 설정하여 설치 및 스테이징 접두어를 제외 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="67f30c3f0656368c1c7acc1b0da58508056474c6" translate="yes" xml:space="preserve">
          <source>By default this is empty. It is intended to be set by the project.</source>
          <target state="translated">기본적으로 비어 있습니다. 프로젝트에서 설정합니다.</target>
        </trans-unit>
        <trans-unit id="680bb7974a84969ab2834ed7d6afeff13c1113ff" translate="yes" xml:space="preserve">
          <source>By default this is empty; it is intended to be set by the project. Note that &lt;code&gt;CMAKE_IGNORE_PATH&lt;/code&gt; takes a list of directory names, &lt;em&gt;not&lt;/em&gt; a list of prefixes. To ignore paths under prefixes (&lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, etc.), specify them explicitly.</source>
          <target state="translated">기본적으로 이것은 비어 있습니다. 프로젝트에 의해 설정됩니다. 참고 &lt;code&gt;CMAKE_IGNORE_PATH&lt;/code&gt; 이 디렉토리 이름의 목록이 소요 &lt;em&gt;되지&lt;/em&gt; 접두사의 목록을. 접두사 ( &lt;code&gt;bin&lt;/code&gt; , &lt;code&gt;include&lt;/code&gt; , &lt;code&gt;lib&lt;/code&gt; 등)에서 경로를 무시하려면 명시 적으로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="97b472d23cca9db4cfc4172d0bb3caba8420e49c" translate="yes" xml:space="preserve">
          <source>By default this module will search for all of the FLTK components and add them to the &lt;code&gt;FLTK_LIBRARIES&lt;/code&gt; variable. You can limit the components which get placed in &lt;code&gt;FLTK_LIBRARIES&lt;/code&gt; by defining one or more of the following three options:</source>
          <target state="translated">기본적으로이 모듈은 모든 FLTK 구성 요소를 검색하여 &lt;code&gt;FLTK_LIBRARIES&lt;/code&gt; 변수에 추가합니다 . 다음 세 가지 옵션 중 하나 이상을 정의 하여 &lt;code&gt;FLTK_LIBRARIES&lt;/code&gt; 에 배치되는 구성 요소를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c92c75b192700100e2424fe5ca17c9d5d344f0d" translate="yes" xml:space="preserve">
          <source>By default this variable is not set and the behavior will fall back to that determined by the deprecated &lt;a href=&quot;cmake_find_package_no_package_registry#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable. If that is also not set, then &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; will use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; unless the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; option is provided.</source>
          <target state="translated">기본적으로이 변수는 설정되지 않으며 동작은 더 이상 사용되지 않는 &lt;a href=&quot;cmake_find_package_no_package_registry#variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 변수에 의해 결정된 값으로 돌아갑니다 . &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 설정 되지 않은 경우, &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; 옵션이 제공 되지 않는 한 find_package () 는 &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;사용자 패키지 레지스트리를&lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ace12e8e0dc8f5f96e931ed807c317b0be5bf350" translate="yes" xml:space="preserve">
          <source>By default this variable is not set and the behavior will fall back to that determined by the deprecated &lt;a href=&quot;cmake_find_package_no_system_package_registry#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable. If that is also not set, then &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; will use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; unless the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; option is provided.</source>
          <target state="translated">기본적으로이 변수는 설정되지 않으며 동작은 더 이상 사용되지 않는 &lt;a href=&quot;cmake_find_package_no_system_package_registry#variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 변수에 의해 결정된 동작으로 돌아갑니다 . &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 설정 되지 않은 경우, &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 옵션이 제공 되지 않는 한 find_package () 는 &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;시스템 패키지 레지스트리를&lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="6737a4aa83d194db2faf33ac3bbd1f0188a0bbbf" translate="yes" xml:space="preserve">
          <source>By default this variable is not set, which is equivalent to it having a value of &lt;code&gt;TRUE&lt;/code&gt;. Explicit options given to the above commands take precedence over this variable.</source>
          <target state="translated">기본적으로이 변수는 설정되어 있지 않으며 &lt;code&gt;TRUE&lt;/code&gt; 값을 갖는 것과 동일 합니다 . 위 명령에 지정된 명시 적 옵션이이 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="dce2b06299ba766a06e662b2a505a4cd71f59cc2" translate="yes" xml:space="preserve">
          <source>By default this variable is not set. If neither &lt;a href=&quot;cmake_find_use_package_registry#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; nor &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; is set, then &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; will use the &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;User Package Registry&lt;/a&gt; unless the &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; option is provided.</source>
          <target state="translated">기본적으로이 변수는 설정되지 않습니다. 어느 경우 &lt;a href=&quot;cmake_find_use_package_registry#variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_FIND_USE_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 도 &lt;code&gt;CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY&lt;/code&gt; 가 설정되어, 다음 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 사용됩니다 &lt;a href=&quot;../manual/cmake-packages.7#user-package-registry&quot;&gt;사용자 패키지 레지스트리&lt;/a&gt; 하지 않는 &lt;code&gt;NO_CMAKE_PACKAGE_REGISTRY&lt;/code&gt; 의 옵션이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="83416bef27a887a58743e5bcc1c44bd6564a7d0c" translate="yes" xml:space="preserve">
          <source>By default this variable is not set. If neither &lt;a href=&quot;cmake_find_use_system_package_registry#variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; nor &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; is set, then &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; will use the &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;System Package Registry&lt;/a&gt; unless the &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; option is provided.</source>
          <target state="translated">기본적으로이 변수는 설정되지 않습니다. 어느 경우 &lt;a href=&quot;cmake_find_use_system_package_registry#variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 도 &lt;code&gt;CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 가 설정되어, 다음 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 사용됩니다 &lt;a href=&quot;../manual/cmake-packages.7#system-package-registry&quot;&gt;시스템 패키지 레지스트리를&lt;/a&gt; 하지 않는 &lt;code&gt;NO_CMAKE_SYSTEM_PACKAGE_REGISTRY&lt;/code&gt; 의 옵션이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e197b22c81b06feca20192b36c44910591d48eef" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; behaves exactly as described in the documentation of the &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; target property. When set to &lt;code&gt;TRUE&lt;/code&gt;, it accepts more input and tries to find the correct input file for &lt;code&gt;moc&lt;/code&gt; even if it differs from the documented behaviour. In this mode it e.g. also checks whether a header file is intended to be processed by moc when a &lt;code&gt;&quot;foo.moc&quot;&lt;/code&gt; file has been included.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 대상 등록 정보 문서에 설명 된대로 정확하게 작동 합니다. &lt;code&gt;TRUE&lt;/code&gt; 로 설정하면 더 많은 입력을 받아들이고 문서화 된 동작과 다르더라도 &lt;code&gt;moc&lt;/code&gt; 에 대한 올바른 입력 파일을 찾으려고 시도합니다 . 이 모드에서는 예를 들어 &lt;code&gt;&quot;foo.moc&quot;&lt;/code&gt; 파일이 포함 된 경우 헤더 파일이 moc에 의해 처리되도록되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="c97d903d5945e8a21d6d8e7a2ad5ba86480ce690" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;BU_COPY_FULL_FRAMEWORK_CONTENTS&lt;/code&gt; is not set. If you want full frameworks embedded in your bundles, set &lt;code&gt;BU_COPY_FULL_FRAMEWORK_CONTENTS&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; before calling fixup_bundle. By default, &lt;code&gt;COPY_RESOLVED_FRAMEWORK_INTO_BUNDLE&lt;/code&gt; copies the framework dylib itself plus the framework &lt;code&gt;Resources&lt;/code&gt; directory.</source>
          <target state="translated">기본적으로 &lt;code&gt;BU_COPY_FULL_FRAMEWORK_CONTENTS&lt;/code&gt; 는 설정되어 있지 않습니다. 번들에 전체 프레임 워크를 임베드 하려면 &lt;code&gt;BU_COPY_FULL_FRAMEWORK_CONTENTS&lt;/code&gt; 을 호출하기 전에 BU_COPY_FULL_FRAMEWORK_CONTENTS 를 &lt;code&gt;ON&lt;/code&gt; 으로 설정하십시오 . 기본적으로 &lt;code&gt;COPY_RESOLVED_FRAMEWORK_INTO_BUNDLE&lt;/code&gt; 은 프레임 워크 dylib 자체와 프레임 워크 &lt;code&gt;Resources&lt;/code&gt; 디렉토리를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="0a3586dde832f7583f3395e5ee3cffcea487808e" translate="yes" xml:space="preserve">
          <source>By default, CMake&amp;rsquo;s model is that a build directory only contains a single configuration, be it Debug, Release, MinSizeRel, or RelWithDebInfo. It is possible, however, to setup CPack to bundle multiple build directories and construct a package that contains multiple configurations of the same project.</source>
          <target state="translated">기본적으로 CMake의 모델은 빌드 디렉터리에 Debug, Release, MinSizeRel 또는 RelWithDebInfo와 같은 단일 구성 만 포함되어 있습니다. 그러나 CPack을 설정하여 여러 빌드 디렉토리를 번들로 묶고 동일한 프로젝트의 여러 구성을 포함하는 패키지를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd918133d335113ed29de94ecc6b88039da9b894" translate="yes" xml:space="preserve">
          <source>By default, all content is written directly to the &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;. The &lt;code&gt;OUTPUT_FILES_VAR&lt;/code&gt; may be specified to cause the compiler-specific content to be written to separate files. The separate files are then available in the &lt;code&gt;&amp;lt;output_files_var&amp;gt;&lt;/code&gt; and may be consumed by the caller for installation for example. The &lt;code&gt;OUTPUT_DIR&lt;/code&gt; specifies a relative path from the main &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; to the compiler-specific files. For example:</source>
          <target state="translated">기본적으로 모든 컨텐츠는 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 에 직접 작성됩니다 . &lt;code&gt;OUTPUT_FILES_VAR&lt;/code&gt; 는 별도의 파일에 기록하도록 컴파일러 관련 내용을 일으킬 지정할 수 있습니다. 그런 다음 &lt;code&gt;&amp;lt;output_files_var&amp;gt;&lt;/code&gt; 에서 별도의 파일을 사용할 수 있으며 예를 들어 설치자가 호출자에 의해 사용될 수 있습니다. &lt;code&gt;OUTPUT_DIR&lt;/code&gt; 는 주에서 상대 경로 지정 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 컴파일러 특정 파일. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="95ee2bdc5cc3c51a840a450bb4056b254759b2d6" translate="yes" xml:space="preserve">
          <source>By default, every symbols inside a MEX file defined with the command &lt;a href=&quot;#command:matlab_add_mex&quot; id=&quot;index-1-command:matlab_add_mex&quot;&gt;&lt;code&gt;matlab_add_mex()&lt;/code&gt;&lt;/a&gt; have hidden visibility, except for the entry point. This is the default behaviour of the MEX compiler, which lowers the risk of symbol collision between the libraries shipped with Matlab, and the libraries to which the MEX file is linking to. This is also the default on Windows platforms.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;#command:matlab_add_mex&quot; id=&quot;index-1-command:matlab_add_mex&quot;&gt; &lt;code&gt;matlab_add_mex()&lt;/code&gt; &lt;/a&gt; 명령으로 정의 된 MEX 파일 내부의 모든 심볼 에는 진입 점을 제외하고 숨겨진 가시성이 있습니다. 이것은 MEX 컴파일러의 기본 동작으로, Matlab과 함께 제공되는 라이브러리와 MEX 파일이 링크 된 라이브러리 간의 심볼 충돌 위험을 줄입니다. 이것은 Windows 플랫폼에서도 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="75b2357b9b46cd9876272debc040a61ed300c9c9" translate="yes" xml:space="preserve">
          <source>By default, if &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; is 3.1 or later, or if &lt;a href=&quot;#variable:PKG_CONFIG_USE_CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:PKG_CONFIG_USE_CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;PKG_CONFIG_USE_CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; is set to a boolean &lt;code&gt;True&lt;/code&gt; value, then the &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_framework_path#variable:CMAKE_FRAMEWORK_PATH&quot; id=&quot;index-0-variable:CMAKE_FRAMEWORK_PATH&quot;&gt;&lt;code&gt;CMAKE_FRAMEWORK_PATH&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../variable/cmake_appbundle_path#variable:CMAKE_APPBUNDLE_PATH&quot; id=&quot;index-0-variable:CMAKE_APPBUNDLE_PATH&quot;&gt;&lt;code&gt;CMAKE_APPBUNDLE_PATH&lt;/code&gt;&lt;/a&gt; cache and environment variables will be added to the &lt;code&gt;pkg-config&lt;/code&gt; search path. The &lt;code&gt;NO_CMAKE_PATH&lt;/code&gt; and &lt;code&gt;NO_CMAKE_ENVIRONMENT_PATH&lt;/code&gt; arguments disable this behavior for the cache variables and environment variables respectively.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt; &lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt; &lt;/a&gt; 이 3.1 이상이거나 &lt;a href=&quot;#variable:PKG_CONFIG_USE_CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:PKG_CONFIG_USE_CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;PKG_CONFIG_USE_CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 가 부울 &lt;code&gt;True&lt;/code&gt; 값으로 설정 되면 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../variable/cmake_framework_path#variable:CMAKE_FRAMEWORK_PATH&quot; id=&quot;index-0-variable:CMAKE_FRAMEWORK_PATH&quot;&gt; &lt;code&gt;CMAKE_FRAMEWORK_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../variable/cmake_appbundle_path#variable:CMAKE_APPBUNDLE_PATH&quot; id=&quot;index-0-variable:CMAKE_APPBUNDLE_PATH&quot;&gt; &lt;code&gt;CMAKE_APPBUNDLE_PATH&lt;/code&gt; &lt;/a&gt; 캐시 및 환경 변수가 &lt;code&gt;pkg-config&lt;/code&gt; 검색 경로에 추가됩니다 . &lt;code&gt;NO_CMAKE_PATH&lt;/code&gt; 및 &lt;code&gt;NO_CMAKE_ENVIRONMENT_PATH&lt;/code&gt; 인수는 각각 캐시 변수와 환경 변수에 대해이 동작을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="a92ff443a3fd4fe81e674b81f1f837056960b4c7" translate="yes" xml:space="preserve">
          <source>By default, invoking &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; without a script will read custom files from the binary directory.</source>
          <target state="translated">기본적 으로 스크립트없이 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 를 호출 하면 이진 디렉토리에서 사용자 정의 파일을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="1f110e8acbe52c21d26e256159294d0f48015a8b" translate="yes" xml:space="preserve">
          <source>By default, source file properties are only visible to targets added in the same directory (&lt;code&gt;CMakeLists.txt&lt;/code&gt;). Visibility can be set in other directory scopes using one or both of the following options:</source>
          <target state="translated">기본적으로 소스 파일 속성은 동일한 디렉터리 ( &lt;code&gt;CMakeLists.txt&lt;/code&gt; )에 추가 된 대상에만 표시됩니다 . 다음 옵션 중 하나 또는 둘 다를 사용하여 다른 디렉토리 범위에서 가시성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2378c7e19078a5e3074700038785f834c1635a32" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target name has scope in the directory in which it is created and below. We can use the &lt;code&gt;GLOBAL&lt;/code&gt; option to extended visibility so that the target is accessible globally in the build system.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-5-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 이름에는 해당 이름이 생성 된 디렉터리와 그 아래에 범위가 있습니다. &lt;code&gt;GLOBAL&lt;/code&gt; 옵션을 사용하여 가시성을 확장하여 빌드 시스템에서 대상에 전역 적으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c198751b6f0f2c19b08f1e97273058b8276c2579" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command defines a &lt;code&gt;STATIC&lt;/code&gt; library, unless a type is specified. A type may be specified when using the command:</source>
          <target state="translated">기본적으로 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령은 유형을 지정하지 않으면 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리를 정의 합니다. 명령을 사용할 때 유형을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aca9f3c2dbc19c98cdc14871904cfa6e6f4f493" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;install&lt;/code&gt; target depends on the &lt;code&gt;all&lt;/code&gt; target. This has the effect, that when &lt;code&gt;make install&lt;/code&gt; is invoked or &lt;code&gt;INSTALL&lt;/code&gt; is built, first the &lt;code&gt;all&lt;/code&gt; target is built, then the installation starts. If &lt;a href=&quot;#variable:CMAKE_SKIP_INSTALL_ALL_DEPENDENCY&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_ALL_DEPENDENCY&quot;&gt;&lt;code&gt;CMAKE_SKIP_INSTALL_ALL_DEPENDENCY&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;, this dependency is not created, so the installation process will start immediately, independent from whether the project has been completely built or not.</source>
          <target state="translated">기본적으로 &lt;code&gt;install&lt;/code&gt; 대상은 &lt;code&gt;all&lt;/code&gt; 대상 에 따라 다릅니다 . 이는 &lt;code&gt;make install&lt;/code&gt; 가 호출되거나 &lt;code&gt;INSTALL&lt;/code&gt; 이 빌드 될 때 먼저 &lt;code&gt;all&lt;/code&gt; 대상이 빌드 된 다음 설치가 시작되는 효과가 있습니다. 경우 &lt;a href=&quot;#variable:CMAKE_SKIP_INSTALL_ALL_DEPENDENCY&quot; id=&quot;index-0-variable:CMAKE_SKIP_INSTALL_ALL_DEPENDENCY&quot;&gt; &lt;code&gt;CMAKE_SKIP_INSTALL_ALL_DEPENDENCY&lt;/code&gt; 가&lt;/a&gt; 설정되어 &lt;code&gt;TRUE&lt;/code&gt; 설치 프로세스가 즉시 시작됩니다, 그래서이 종속성은 프로젝트가 완전히 구축되었는지의 여부에서, 독립적으로 만들어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2fd8144449d5156e059fd116a887c37af2b5590c" translate="yes" xml:space="preserve">
          <source>By default, the source file&amp;rsquo;s property will be read from the current source directory&amp;rsquo;s scope, but this can be overridden with one of the following sub-options:</source>
          <target state="translated">기본적으로 소스 파일의 속성은 현재 소스 디렉터리의 범위에서 읽지 만 다음 하위 옵션 중 하나로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e92a9cd6e1eaea4c52167934d6503a3018ee3c1" translate="yes" xml:space="preserve">
          <source>By default, the test source file will be given a &lt;code&gt;.F90&lt;/code&gt; file extension. The &lt;code&gt;SRC_EXT&lt;/code&gt; option can be used to override this with &lt;code&gt;.&amp;lt;extension&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">기본적으로 테스트 소스 파일의 확장자 는 &lt;code&gt;.F90&lt;/code&gt; 입니다. &lt;code&gt;SRC_EXT&lt;/code&gt; 의 옵션으로이 메소드를 오버라이드 (override) 할 수 있습니다 &lt;code&gt;.&amp;lt;extension&amp;gt;&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="13e7feea50e61ffdba51305d897236694714693a" translate="yes" xml:space="preserve">
          <source>By default, the test source file will be given a &lt;code&gt;.F&lt;/code&gt; file extension. The &lt;code&gt;SRC_EXT&lt;/code&gt; option can be used to override this with &lt;code&gt;.&amp;lt;extension&amp;gt;&lt;/code&gt; instead&amp;ndash; &lt;code&gt;.F90&lt;/code&gt; is a typical choice.</source>
          <target state="translated">기본적으로 테스트 소스 파일의 확장자 는 &lt;code&gt;.F&lt;/code&gt; 입니다. &lt;code&gt;SRC_EXT&lt;/code&gt; 의 옵션으로이 메소드를 오버라이드 (override) 할 수 있습니다 &lt;code&gt;.&amp;lt;extension&amp;gt;&lt;/code&gt; instead- &lt;code&gt;.F90&lt;/code&gt; 은 일반적인 선택입니다.</target>
        </trans-unit>
        <trans-unit id="f6e49bca81feb2a2915c039e70458011dd3bb46d" translate="yes" xml:space="preserve">
          <source>By default, the test source file will be given a file extension that matches the requested language. The &lt;code&gt;SRC_EXT&lt;/code&gt; option can be used to override this with &lt;code&gt;.&amp;lt;extension&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">기본적으로 테스트 소스 파일에는 요청 된 언어와 일치하는 파일 확장자가 지정됩니다. &lt;code&gt;SRC_EXT&lt;/code&gt; 의 옵션으로이 메소드를 오버라이드 (override) 할 수 있습니다 &lt;code&gt;.&amp;lt;extension&amp;gt;&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="d7cfb5b76705b47492ce4cd046f0732aa0147283" translate="yes" xml:space="preserve">
          <source>By default, the type index of type-parameterized tests is replaced by the actual type name in the CTest test name. If this behavior is undesirable (e.g. because the type names are unwieldy), this option will suppress this behavior.</source>
          <target state="translated">기본적으로 형식 매개 변수화 된 테스트의 형식 인덱스는 CTest 테스트 이름의 실제 형식 이름으로 바뀝니다. 이 동작이 바람직하지 않은 경우 (예 : 유형 이름이 다루기 어렵 기 때문에)이 옵션은이 동작을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="90670cc91cedea386a3125e74b4edaa46cb3a09e" translate="yes" xml:space="preserve">
          <source>By default, the value index of value-parameterized tests is replaced by the actual value in the CTest test name. If this behavior is undesirable (e.g. because the value strings are unwieldy), this option will suppress this behavior.</source>
          <target state="translated">기본적으로 값 매개 변수화 된 테스트의 값 인덱스는 CTest 테스트 이름의 실제 값으로 대체됩니다. 이 동작이 바람직하지 않은 경우 (예 : 값 문자열이 다루기 어렵 기 때문에)이 옵션은이 동작을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="466b9c00919cb420eaad30ad6021ef6aa68f82bb" translate="yes" xml:space="preserve">
          <source>By default, this module supports multiple calls in different directories of a project with different version/component requirements while providing correct and consistent results for each call. To support this behavior, &lt;code&gt;CMake&lt;/code&gt; cache is not used in the traditional way which can be problematic for interactive specification. So, to enable also interactive specification, module behavior can be controlled with the following variable:</source>
          <target state="translated">기본적으로이 모듈은 각 호출에 대해 정확하고 일관된 결과를 제공하면서 버전 / 구성 요소 요구 사항이 다른 프로젝트의 서로 다른 디렉터리에서 여러 호출을 지원합니다. 이 동작을 지원하기 위해 &lt;code&gt;CMake&lt;/code&gt; 캐시는 대화 형 사양에 문제가 될 수있는 기존 방식으로 사용되지 않습니다. 따라서 대화 형 사양도 활성화하려면 다음 변수를 사용하여 모듈 동작을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fed54136ac5183d45ec46d77499a283a92c7c69" translate="yes" xml:space="preserve">
          <source>By default, this variable is not set, which will result in unity builds being disabled.</source>
          <target state="translated">기본적으로이 변수는 설정되어 있지 않으므로 Unity 빌드가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="c7130a85d402beee06955db120eb6845a54a310c" translate="yes" xml:space="preserve">
          <source>By setting &lt;code&gt;NATURAL&lt;/code&gt; order we can select the one with the highest version number &lt;code&gt;libX-1.2.10&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NATURAL&lt;/code&gt; 순서 를 설정 하면 버전 번호가 &lt;code&gt;libX-1.2.10&lt;/code&gt; 인 항목을 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="912481ad1e04d4a242ad998f2bd5cf4e7362fed5" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;CMAKE_DISABLE_FIND_PACKAGE_&amp;lt;PackageName&amp;gt;&lt;/code&gt; variable to &lt;code&gt;TRUE&lt;/code&gt;, the &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; package will not be searched, and will always be &lt;code&gt;NOTFOUND&lt;/code&gt;.</source>
          <target state="translated">설정에 따라 &lt;code&gt;CMAKE_DISABLE_FIND_PACKAGE_&amp;lt;PackageName&amp;gt;&lt;/code&gt; 에 변수 &lt;code&gt;TRUE&lt;/code&gt; 를 의 &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 패키지가 검색되지 않고, 항상 될 것입니다 &lt;code&gt;NOTFOUND&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="487fb307b64444e0ab917ce23012a3a8b08f2ae2" translate="yes" xml:space="preserve">
          <source>By setting this property to &lt;code&gt;ON&lt;/code&gt;, you can disable compilation of the given source file, even if it should be compiled because it is part of the library&amp;rsquo;s/executable&amp;rsquo;s sources.</source>
          <target state="translated">이 특성을 &lt;code&gt;ON&lt;/code&gt; 으로 설정 하면 라이브러리 / 실행 파일의 소스이므로 컴파일해야하는 경우에도 지정된 소스 파일의 컴파일을 사용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e0312bbccd18c73c38705e9f4fc5d9a27d22fc0" translate="yes" xml:space="preserve">
          <source>By setting this target property, the target is configured to build with &lt;code&gt;C++/CLI&lt;/code&gt; support.</source>
          <target state="translated">이 대상 속성을 설정하면 대상이 &lt;code&gt;C++/CLI&lt;/code&gt; 지원 으로 빌드되도록 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="f58c661ac3ff02fd63ae734b7ccdecee1934264e" translate="yes" xml:space="preserve">
          <source>Byproducts may not be listed as outputs because their timestamps are allowed to be older than the inputs. No build tools (like &lt;code&gt;make&lt;/code&gt;) that existed when CMake was designed have a way to express byproducts. Therefore CMake versions prior to 3.2 had no way to specify them. Projects typically left byproducts undeclared in the rules that generate them. For example:</source>
          <target state="translated">타임 스탬프가 입력보다 오래되어 부산물이 출력으로 표시되지 않을 수 있습니다. CMake를 설계 할 때 존재했던 제작 도구 (예 : &lt;code&gt;make&lt;/code&gt; )는 부산물을 표현할 방법이 없습니다. 따라서 3.2 이전의 CMake 버전에서는이를 지정할 방법이 없었습니다. 프로젝트는 일반적으로 부산물을 생성하는 규칙에서 선언되지 않은 부산물로 남았습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1f8756ffb2418a7e952430dd1648cdb6c2db50ec" translate="yes" xml:space="preserve">
          <source>C header files (&lt;code&gt;include&lt;/code&gt;)</source>
          <target state="translated">C 헤더 파일 ( &lt;code&gt;include&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e8b81b0e6681b9b66eeccad01ef9aa5902d48cbe" translate="yes" xml:space="preserve">
          <source>C header files for non-gcc (&lt;code&gt;/usr/include&lt;/code&gt;)</source>
          <target state="translated">비 gcc에 대한 C 헤더 파일 ( &lt;code&gt;/usr/include&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="af80e8b4d3d002ced3eb063aa1acaac1364c1c9f" translate="yes" xml:space="preserve">
          <source>C or CXX must be enabled to use Intel MKL</source>
          <target state="translated">Intel MKL을 사용하려면 C 또는 CXX를 활성화해야합니다</target>
        </trans-unit>
        <trans-unit id="084f39c9a4dcd52a2d1e8861a764bae889fe646c" translate="yes" xml:space="preserve">
          <source>C or CXX must be enabled to use Intel Math Kernel Library (MKL)</source>
          <target state="translated">Intel Math Kernel Library (MKL)를 사용하려면 C 또는 CXX를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="a02f325f3a6f96dd4eb7f7b29f2061426e7bd5fb" translate="yes" xml:space="preserve">
          <source>C, CXX or Fortran must be enabled to detect a BLAS library. C or CXX must be enabled to use Intel Math Kernel Library (MKL).</source>
          <target state="translated">BLAS 라이브러리를 감지하려면 C, CXX 또는 Fortran을 활성화해야합니다. Intel Math Kernel Library (MKL)를 사용하려면 C 또는 CXX를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="d487a2a59b278244eea6ae18a3275b77db212af7" translate="yes" xml:space="preserve">
          <source>C, CXX or Fortran must be enabled to detect a BLAS/LAPACK library. C or CXX must be enabled to use Intel Math Kernel Library (MKL).</source>
          <target state="translated">BLAS / LAPACK 라이브러리를 감지하려면 C, CXX 또는 Fortran을 활성화해야합니다. Intel Math Kernel Library (MKL)를 사용하려면 C 또는 CXX를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="f687af47e9b8a27732e4e49ebb8979eddc34aadf" translate="yes" xml:space="preserve">
          <source>CACHE</source>
          <target state="translated">CACHE</target>
        </trans-unit>
        <trans-unit id="7321950df6d23b4ba0d69e8375f75136c5fe22c0" translate="yes" xml:space="preserve">
          <source>CACHE_VARIABLES</source>
          <target state="translated">CACHE_VARIABLES</target>
        </trans-unit>
        <trans-unit id="c5a976de7b5231fa616fbeac8a2d2805c1e84ee2" translate="yes" xml:space="preserve">
          <source>CC</source>
          <target state="translated">CC</target>
        </trans-unit>
        <trans-unit id="4abc1f1724090243ea29ea0644460fd14d9639ba" translate="yes" xml:space="preserve">
          <source>CCMAKE_COLORS</source>
          <target state="translated">CCMAKE_COLORS</target>
        </trans-unit>
        <trans-unit id="e35361ffbf40944115f423c5ebb713b17bd04186" translate="yes" xml:space="preserve">
          <source>CCMake</source>
          <target state="translated">CCMake</target>
        </trans-unit>
        <trans-unit id="aabe04d0ee1e6511da67c8f24ba2db3493a705bc" translate="yes" xml:space="preserve">
          <source>CFLAGS</source>
          <target state="translated">CFLAGS</target>
        </trans-unit>
        <trans-unit id="2a3455ba835e70da74ea93ddc76fdeae98644b62" translate="yes" xml:space="preserve">
          <source>CLEAN_NO_CUSTOM</source>
          <target state="translated">CLEAN_NO_CUSTOM</target>
        </trans-unit>
        <trans-unit id="10cb3b43a83d7837cce33de3d7cec6aa1167eddc" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;CONFIG&amp;gt;_POSTFIX</source>
          <target state="translated">CMAKE_&amp;lt;CONFIG&amp;gt;_POSTFIX</target>
        </trans-unit>
        <trans-unit id="173abf3fe93fe64b7e137ba271521fd99b0fa32e" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_ANDROID_TOOLCHAIN_MACHINE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_ANDROID_TOOLCHAIN_MACHINE</target>
        </trans-unit>
        <trans-unit id="a02fcf298c823d70ce7392111fafd5abba04dc41" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_ANDROID_TOOLCHAIN_PREFIX</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_ANDROID_TOOLCHAIN_PREFIX</target>
        </trans-unit>
        <trans-unit id="638cc7a147286081d1ed94fdf50ce4636b6e4e65" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_ANDROID_TOOLCHAIN_SUFFIX</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_ANDROID_TOOLCHAIN_SUFFIX</target>
        </trans-unit>
        <trans-unit id="86eb6bfd7bc65afa9dbfb841b8f9df4fb6c806bd" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_ARCHIVE_APPEND</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_ARCHIVE_APPEND</target>
        </trans-unit>
        <trans-unit id="568366f123cd7bbd688e82b2ce2420242edb3560" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_ARCHIVE_CREATE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_ARCHIVE_CREATE</target>
        </trans-unit>
        <trans-unit id="695d170caea263b3f78f68d147f6ac39ca82c45c" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_ARCHIVE_FINISH</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_ARCHIVE_FINISH</target>
        </trans-unit>
        <trans-unit id="4fc2547598a6f960f696035e94f9011f65b115a0" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_CLANG_TIDY</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_CLANG_TIDY</target>
        </trans-unit>
        <trans-unit id="6a51f6a0dcd5bfa2e296a1b83ef38f1c77105bbd" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER</target>
        </trans-unit>
        <trans-unit id="b9b43f7c7e9715b6d3b57f0a96bc246fcf976df4" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ABI</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ABI</target>
        </trans-unit>
        <trans-unit id="7bfd8f40b35c7b0cf16df938ef33b9098943f579" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_AR</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_AR</target>
        </trans-unit>
        <trans-unit id="baf2e3d99773f479699bd23ef751dc433a368ba2" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ARCHITECTURE_ID</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ARCHITECTURE_ID</target>
        </trans-unit>
        <trans-unit id="82e3e13e4f3a5d3f28562c5a1a4c14a82631f9fb" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_EXTERNAL_TOOLCHAIN</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_EXTERNAL_TOOLCHAIN</target>
        </trans-unit>
        <trans-unit id="f60b8d1bb94fffaf62e16aaf7f8cb5ab917c4f16" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID</target>
        </trans-unit>
        <trans-unit id="2dca0538259bf54b5b6ac894b96d9700f5ae4809" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_LAUNCHER</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_LAUNCHER</target>
        </trans-unit>
        <trans-unit id="051dfb033c5e04e71f8fdd5226124ff8d25d2082" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_LOADED</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_LOADED</target>
        </trans-unit>
        <trans-unit id="b69fa03f9ccb53b3ca733ef52ba3732a610290ee" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_PREDEFINES_COMMAND</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_PREDEFINES_COMMAND</target>
        </trans-unit>
        <trans-unit id="dd1d512b34b4050dc001ba13496cf854bd521137" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_RANLIB</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_RANLIB</target>
        </trans-unit>
        <trans-unit id="f4fbc46ba54ea34b03074874f2dfd918991afc6d" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_TARGET</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_TARGET</target>
        </trans-unit>
        <trans-unit id="faf4ea08c6e9b44a30bb9fef89a01790e1b400d0" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION</target>
        </trans-unit>
        <trans-unit id="a39b07219e9240cdb62cda5db113ffcc21c56b0e" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION_INTERNAL</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION_INTERNAL</target>
        </trans-unit>
        <trans-unit id="05accd1cb760d29da7a371d02fd9abfb80cd04f3" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_COMPILE_OBJECT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_COMPILE_OBJECT</target>
        </trans-unit>
        <trans-unit id="4a1d525a91d5a1e559de8469ccd4f0ca9708cb3b" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_CPPCHECK</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_CPPCHECK</target>
        </trans-unit>
        <trans-unit id="3e97fde61e40a2db483ccd4902b8893d0543215d" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_CPPLINT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_CPPLINT</target>
        </trans-unit>
        <trans-unit id="51e66df3d0d1a05fa79530a79b6744b2dabdfa0c" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_CREATE_SHARED_LIBRARY</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_CREATE_SHARED_LIBRARY</target>
        </trans-unit>
        <trans-unit id="9377bbfeaf92ba3bb86dff876647312717d3d09b" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_CREATE_SHARED_MODULE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_CREATE_SHARED_MODULE</target>
        </trans-unit>
        <trans-unit id="21d8472957160a8f0bc2a9b77bf8809a110ddcdb" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_CREATE_STATIC_LIBRARY</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_CREATE_STATIC_LIBRARY</target>
        </trans-unit>
        <trans-unit id="b3af8ecc5ded16b5b1ab0a492091ceac7aafda8a" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS</target>
        </trans-unit>
        <trans-unit id="fd9020cf38be57afb3a5f430672f16afc443649c" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="266d7fd835a4deb58d08f9661dba6685befe8d26" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;_INIT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;_INIT</target>
        </trans-unit>
        <trans-unit id="ebddcde1bebbee40e2c34c10fc635f425fdd042f" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG</target>
        </trans-unit>
        <trans-unit id="0dc1d3781a299bc00e7a78b33f16e8012aacfd84" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG_INIT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG_INIT</target>
        </trans-unit>
        <trans-unit id="ba1e93886d36e17adf077eabe1561edc104dd56a" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_INIT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_INIT</target>
        </trans-unit>
        <trans-unit id="1d935ae7563f6e27bbf67f3b8292dd144fa12b76" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_MINSIZEREL</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_MINSIZEREL</target>
        </trans-unit>
        <trans-unit id="66288c1c28d1a2ad2075c925a37b034518a632be" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_MINSIZEREL_INIT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_MINSIZEREL_INIT</target>
        </trans-unit>
        <trans-unit id="733ffe061bd6d408924089206fd124866d081d7e" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELEASE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELEASE</target>
        </trans-unit>
        <trans-unit id="151decb6193b167723d37c809b4c4ba7244f534c" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELEASE_INIT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELEASE_INIT</target>
        </trans-unit>
        <trans-unit id="7ca2b37a8153b974d857658b9d0e8d4a8c7b4a81" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELWITHDEBINFO</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELWITHDEBINFO</target>
        </trans-unit>
        <trans-unit id="84c3323abd9360c37ebd4babf69949c6c9018c42" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELWITHDEBINFO_INIT</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_RELWITHDEBINFO_INIT</target>
        </trans-unit>
        <trans-unit id="cef65546525227f2c5a91f76a4ee427e7ae5e37e" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_IGNORE_EXTENSIONS</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_IGNORE_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="866283c98c9b38aec31ee8238742974acf30da25" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_INCLUDE_DIRECTORIES</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_INCLUDE_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="bf7736364a927a059ed257edfbef0932179cae75" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_DIRECTORIES</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="8b38fcbf35505f72fad72124cf31bd3e63c36049" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="3232262b7c69437d3192aea5cb438c16d98a18d5" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_LIBRARIES</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_IMPLICIT_LINK_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="8ac87f9bb27fa05eecaa6b32518c0c472944dffd" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_INCLUDE_WHAT_YOU_USE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_INCLUDE_WHAT_YOU_USE</target>
        </trans-unit>
        <trans-unit id="4931e461fcbcb1a21853fefefe98243c42df996a" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LIBRARY_ARCHITECTURE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LIBRARY_ARCHITECTURE</target>
        </trans-unit>
        <trans-unit id="a44b10a68e900e5a27f8fd3c067f92bd9944114a" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE</target>
        </trans-unit>
        <trans-unit id="24db6cc846d60ba3a96eb30666e55694b40b0a32" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE_PROPAGATES</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE_PROPAGATES</target>
        </trans-unit>
        <trans-unit id="8f495dbed6dafc7314edb4e4c849487fa2a4ff68" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINKER_WRAPPER_FLAG</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINKER_WRAPPER_FLAG</target>
        </trans-unit>
        <trans-unit id="baddf8f8c805389eda4dd4e4b187510eacc56cec" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINKER_WRAPPER_FLAG_SEP</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINKER_WRAPPER_FLAG_SEP</target>
        </trans-unit>
        <trans-unit id="621fcb56668d67615fc56eb2b67b1794ac1cf4a8" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINK_EXECUTABLE</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINK_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="38a6215f3187c150309443d6b7048e329665bb03" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINK_LIBRARY_FILE_FLAG</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINK_LIBRARY_FILE_FLAG</target>
        </trans-unit>
        <trans-unit id="0ea5433c0eb4eb18bc61897dda1f23c926d803ed" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINK_LIBRARY_FLAG</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINK_LIBRARY_FLAG</target>
        </trans-unit>
        <trans-unit id="a26cc159d5b6825fd45a0c43dcf77bb5fb35808b" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_LINK_LIBRARY_SUFFIX</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_LINK_LIBRARY_SUFFIX</target>
        </trans-unit>
        <trans-unit id="71be43e230c57b1d53ebd2257d40cf2300c06f15" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_OUTPUT_EXTENSION</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_OUTPUT_EXTENSION</target>
        </trans-unit>
        <trans-unit id="0503c870c1705f533c3fa0970ad6696eac21c821" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_PLATFORM_ID</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_PLATFORM_ID</target>
        </trans-unit>
        <trans-unit id="3fa221ece7aada2b3ac95167d7bf0d5b63e3df4f" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_SIMULATE_ID</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_SIMULATE_ID</target>
        </trans-unit>
        <trans-unit id="2d0304aabb84212998ca8eb6e345d68c9bd9e153" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_SIMULATE_VERSION</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_SIMULATE_VERSION</target>
        </trans-unit>
        <trans-unit id="24dddd671278225dd604909caf717c3ba30e2ae6" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_SIZEOF_DATA_PTR</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_SIZEOF_DATA_PTR</target>
        </trans-unit>
        <trans-unit id="d1a64ec60a47090a797d572538bb3140b35b42f8" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_SOURCE_FILE_EXTENSIONS</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_SOURCE_FILE_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="3e0d65dbdb6990c231348008b6bc9151c4e70f92" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_STANDARD_INCLUDE_DIRECTORIES</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_STANDARD_INCLUDE_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="ca682ad17bf99d4ee1696b2fed4de3f806c096b6" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_STANDARD_LIBRARIES</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_STANDARD_LIBRARIES</target>
        </trans-unit>
        <trans-unit id="4b49e85768687fc1d2bf58d06645e1429d136427" translate="yes" xml:space="preserve">
          <source>CMAKE_&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET</source>
          <target state="translated">CMAKE_&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET</target>
        </trans-unit>
        <trans-unit id="03f0a5e2c7819b17ca3dc47944b9d3321d76d199" translate="yes" xml:space="preserve">
          <source>CMAKE_ABSOLUTE_DESTINATION_FILES</source>
          <target state="translated">CMAKE_ABSOLUTE_DESTINATION_FILES</target>
        </trans-unit>
        <trans-unit id="8d2018819d6a50e585f3fe926a9438580020803a" translate="yes" xml:space="preserve">
          <source>CMAKE_AIX_EXPORT_ALL_SYMBOLS</source>
          <target state="translated">CMAKE_AIX_EXPORT_ALL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="e3a3b5bede3c5eb0f0bec2b747aff9fa7af84187" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS</source>
          <target state="translated">CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS</target>
        </trans-unit>
        <trans-unit id="04828f26c1421199a31251f7a5687b62f8a629b4" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_API</source>
          <target state="translated">CMAKE_ANDROID_API</target>
        </trans-unit>
        <trans-unit id="bbb21bce02a86ff343ab4a0380688f9c9d45c251" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_API_MIN</source>
          <target state="translated">CMAKE_ANDROID_API_MIN</target>
        </trans-unit>
        <trans-unit id="d7d6f3d30d29f4994f39ac4024c1baf084a782a9" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_ARCH</source>
          <target state="translated">CMAKE_ANDROID_ARCH</target>
        </trans-unit>
        <trans-unit id="9dd957bb107c02ded2d19d51b1f4843a94ed8c8b" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_ARCH_ABI</source>
          <target state="translated">CMAKE_ANDROID_ARCH_ABI</target>
        </trans-unit>
        <trans-unit id="fa9cbc4ee8a7be249abec7869e918d05ec54ba91" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_ARM_MODE</source>
          <target state="translated">CMAKE_ANDROID_ARM_MODE</target>
        </trans-unit>
        <trans-unit id="dd48aa0e17bfd69eab89581632a379c03e3d0bb2" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_ARM_NEON</source>
          <target state="translated">CMAKE_ANDROID_ARM_NEON</target>
        </trans-unit>
        <trans-unit id="213b5a284398ce1e02af3b424c829a684f093052" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_ASSETS_DIRECTORIES</source>
          <target state="translated">CMAKE_ANDROID_ASSETS_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="1e2b71e3aa337c3620dc123c0015078415720a36" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_GUI</source>
          <target state="translated">CMAKE_ANDROID_GUI</target>
        </trans-unit>
        <trans-unit id="59ed51dd370adb4c78941c100646fe56ad880dd1" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_JAR_DEPENDENCIES</source>
          <target state="translated">CMAKE_ANDROID_JAR_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="19a275e68777eff8cfc955c7b96d54f64a5be77c" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_JAR_DIRECTORIES</source>
          <target state="translated">CMAKE_ANDROID_JAR_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="f0b1666e533b2021ae231412bc9344cf9d57bd29" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_JAVA_SOURCE_DIR</source>
          <target state="translated">CMAKE_ANDROID_JAVA_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="7fc598fcb81a6128ba348019d690162c5a8f1f83" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES</source>
          <target state="translated">CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES</target>
        </trans-unit>
        <trans-unit id="e324dfd42ea617ff1eefae8d41b3e5fd8d2431a6" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES</source>
          <target state="translated">CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="125c6e366d124c734f7b6da66071f2724f95ee64" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_NDK</source>
          <target state="translated">CMAKE_ANDROID_NDK</target>
        </trans-unit>
        <trans-unit id="a6522deffe376fc6bc19bba1ac412f4933f70f18" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_NDK_DEPRECATED_HEADERS</source>
          <target state="translated">CMAKE_ANDROID_NDK_DEPRECATED_HEADERS</target>
        </trans-unit>
        <trans-unit id="9b19706fd2bb1a651e485a96aa9a5e72e171b74f" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG</source>
          <target state="translated">CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG</target>
        </trans-unit>
        <trans-unit id="e4c569b8597105bcb9a11fdd7d7fbb5d23350ff8" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION</source>
          <target state="translated">CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION</target>
        </trans-unit>
        <trans-unit id="3647a31e7a7e4cfaca019b25583951960f367a3c" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_PROCESS_MAX</source>
          <target state="translated">CMAKE_ANDROID_PROCESS_MAX</target>
        </trans-unit>
        <trans-unit id="a7e5f2607ffd220c377dd51757022da6d1f70c19" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_PROGUARD</source>
          <target state="translated">CMAKE_ANDROID_PROGUARD</target>
        </trans-unit>
        <trans-unit id="fd661f983f1dd87e91e083e689fa5471dff502f8" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_PROGUARD_CONFIG_PATH</source>
          <target state="translated">CMAKE_ANDROID_PROGUARD_CONFIG_PATH</target>
        </trans-unit>
        <trans-unit id="5d17cc00f1667ae862db7e5bc610deae7bf186f2" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_SECURE_PROPS_PATH</source>
          <target state="translated">CMAKE_ANDROID_SECURE_PROPS_PATH</target>
        </trans-unit>
        <trans-unit id="3c34db11e6dcdb11ef372372a5a0d47e372c6688" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_SKIP_ANT_STEP</source>
          <target state="translated">CMAKE_ANDROID_SKIP_ANT_STEP</target>
        </trans-unit>
        <trans-unit id="1bf1a848e69f56385b89f15432bf2aeb8a2cfb51" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_STANDALONE_TOOLCHAIN</source>
          <target state="translated">CMAKE_ANDROID_STANDALONE_TOOLCHAIN</target>
        </trans-unit>
        <trans-unit id="440535638d8d8913383cbdfd27475db822ea34b9" translate="yes" xml:space="preserve">
          <source>CMAKE_ANDROID_STL_TYPE</source>
          <target state="translated">CMAKE_ANDROID_STL_TYPE</target>
        </trans-unit>
        <trans-unit id="189e2e078d8998e28b8a695e9a3871c47f790899" translate="yes" xml:space="preserve">
          <source>CMAKE_APPBUNDLE_PATH</source>
          <target state="translated">CMAKE_APPBUNDLE_PATH</target>
        </trans-unit>
        <trans-unit id="103d60c0656f1ad531d80f96348689601ad024ce" translate="yes" xml:space="preserve">
          <source>CMAKE_AR</source>
          <target state="translated">CMAKE_AR</target>
        </trans-unit>
        <trans-unit id="2aee0ea58bce9098bd795b7994c1033f5d05a9af" translate="yes" xml:space="preserve">
          <source>CMAKE_ARCHIVE_OUTPUT_DIRECTORY</source>
          <target state="translated">CMAKE_ARCHIVE_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="4db2dec2a1efa18fabcf60df8408da1f825c9ac5" translate="yes" xml:space="preserve">
          <source>CMAKE_ARCHIVE_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">CMAKE_ARCHIVE_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="76a1fd245b8f773fc4bcaff4a2ef795fd151c065" translate="yes" xml:space="preserve">
          <source>CMAKE_ARCHIVE_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">CMAKE_ARCHIVE_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="f47dc152004d552b2a019c4a3ec5f6a86f61e76f" translate="yes" xml:space="preserve">
          <source>CMAKE_ARGC</source>
          <target state="translated">CMAKE_ARGC</target>
        </trans-unit>
        <trans-unit id="7eb9062b106a92cd278358fa8154fd711b748100" translate="yes" xml:space="preserve">
          <source>CMAKE_ARGV0</source>
          <target state="translated">CMAKE_ARGV0</target>
        </trans-unit>
        <trans-unit id="0a15e7a580f48b6f4ccc087f90fa093785e06948" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOGEN_ORIGIN_DEPENDS</source>
          <target state="translated">CMAKE_AUTOGEN_ORIGIN_DEPENDS</target>
        </trans-unit>
        <trans-unit id="f175e784c70473c97e8c6a4577214b07d5bfd9ed" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOGEN_PARALLEL</source>
          <target state="translated">CMAKE_AUTOGEN_PARALLEL</target>
        </trans-unit>
        <trans-unit id="62da6652fb5bb4d4ae1215406f14c22681a47674" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOGEN_VERBOSE</source>
          <target state="translated">CMAKE_AUTOGEN_VERBOSE</target>
        </trans-unit>
        <trans-unit id="5378b67f77a5064aa25c6fbc37e51e47f5a29925" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOMOC</source>
          <target state="translated">CMAKE_AUTOMOC</target>
        </trans-unit>
        <trans-unit id="5013e11263d22c173375347eaebd76cc37d98f58" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOMOC_COMPILER_PREDEFINES</source>
          <target state="translated">CMAKE_AUTOMOC_COMPILER_PREDEFINES</target>
        </trans-unit>
        <trans-unit id="149be67a00638296cfd461e4871813c4340c49e9" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOMOC_DEPEND_FILTERS</source>
          <target state="translated">CMAKE_AUTOMOC_DEPEND_FILTERS</target>
        </trans-unit>
        <trans-unit id="ddba5b3344cfb21ac745dd6e88f52e8f6cc7f485" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOMOC_MACRO_NAMES</source>
          <target state="translated">CMAKE_AUTOMOC_MACRO_NAMES</target>
        </trans-unit>
        <trans-unit id="75b835fdeb5a791b9c9497cb920b340265c004d2" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOMOC_MOC_OPTIONS</source>
          <target state="translated">CMAKE_AUTOMOC_MOC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="8508b55ca7fcb5cce397055388f841d5ed6141d8" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOMOC_PATH_PREFIX</source>
          <target state="translated">CMAKE_AUTOMOC_PATH_PREFIX</target>
        </trans-unit>
        <trans-unit id="daeac0a5ea1c336c67fa3f1657985219b44aaca5" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOMOC_RELAXED_MODE</source>
          <target state="translated">CMAKE_AUTOMOC_RELAXED_MODE</target>
        </trans-unit>
        <trans-unit id="c50e9e6422e323601cd547f54ad5d969006395ef" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTORCC</source>
          <target state="translated">CMAKE_AUTORCC</target>
        </trans-unit>
        <trans-unit id="b03bb66c08521f05fc2231f314aca30f39f19a89" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTORCC_OPTIONS</source>
          <target state="translated">CMAKE_AUTORCC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="616582f4c740462958afa097db4f78dd9116cb9d" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOUIC</source>
          <target state="translated">CMAKE_AUTOUIC</target>
        </trans-unit>
        <trans-unit id="78075ac4af0c04c41352033a338b3aef1695ffc4" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOUIC_OPTIONS</source>
          <target state="translated">CMAKE_AUTOUIC_OPTIONS</target>
        </trans-unit>
        <trans-unit id="a67ed3bb20b752ca87e73fca639be67b7985f301" translate="yes" xml:space="preserve">
          <source>CMAKE_AUTOUIC_SEARCH_PATHS</source>
          <target state="translated">CMAKE_AUTOUIC_SEARCH_PATHS</target>
        </trans-unit>
        <trans-unit id="356c964b11d6331ed83806cc58ce7bdfac1a077c" translate="yes" xml:space="preserve">
          <source>CMAKE_BACKWARDS_COMPATIBILITY</source>
          <target state="translated">CMAKE_BACKWARDS_COMPATIBILITY</target>
        </trans-unit>
        <trans-unit id="c295a338ea4dceaf1e5b9f8dc48f8858e19a4221" translate="yes" xml:space="preserve">
          <source>CMAKE_BINARY_DIR</source>
          <target state="translated">CMAKE_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="54e91b00618aa7ed701d10e33f8fc56e1742be58" translate="yes" xml:space="preserve">
          <source>CMAKE_BUILD_PARALLEL_LEVEL</source>
          <target state="translated">CMAKE_BUILD_PARALLEL_LEVEL</target>
        </trans-unit>
        <trans-unit id="f5f0896a2f80be447d7f57f817225aa19097dcda" translate="yes" xml:space="preserve">
          <source>CMAKE_BUILD_RPATH</source>
          <target state="translated">CMAKE_BUILD_RPATH</target>
        </trans-unit>
        <trans-unit id="d9c337651d5c2a19bc86ede4d37a4bce14c4a11b" translate="yes" xml:space="preserve">
          <source>CMAKE_BUILD_RPATH_USE_ORIGIN</source>
          <target state="translated">CMAKE_BUILD_RPATH_USE_ORIGIN</target>
        </trans-unit>
        <trans-unit id="58d9ad1ccd9552c2104e91bd80a418ede6157c97" translate="yes" xml:space="preserve">
          <source>CMAKE_BUILD_TOOL</source>
          <target state="translated">CMAKE_BUILD_TOOL</target>
        </trans-unit>
        <trans-unit id="c4d707bcab6e51b0f55445b13368edc2edaa4b5d" translate="yes" xml:space="preserve">
          <source>CMAKE_BUILD_TYPE</source>
          <target state="translated">CMAKE_BUILD_TYPE</target>
        </trans-unit>
        <trans-unit id="9c0666d21c7f735630d2b5792785b8a044a14d8d" translate="yes" xml:space="preserve">
          <source>CMAKE_BUILD_WITH_INSTALL_NAME_DIR</source>
          <target state="translated">CMAKE_BUILD_WITH_INSTALL_NAME_DIR</target>
        </trans-unit>
        <trans-unit id="8afda4660dfeb230b7565ae0516e08235fc9b6cd" translate="yes" xml:space="preserve">
          <source>CMAKE_BUILD_WITH_INSTALL_RPATH</source>
          <target state="translated">CMAKE_BUILD_WITH_INSTALL_RPATH</target>
        </trans-unit>
        <trans-unit id="9b7a38bade95f2a7f5362a0d2ec9d44c5a36577d" translate="yes" xml:space="preserve">
          <source>CMAKE_CACHEFILE_DIR</source>
          <target state="translated">CMAKE_CACHEFILE_DIR</target>
        </trans-unit>
        <trans-unit id="1a569b2cf5fd526f8cce906481876c7b6240327d" translate="yes" xml:space="preserve">
          <source>CMAKE_CACHE_MAJOR_VERSION</source>
          <target state="translated">CMAKE_CACHE_MAJOR_VERSION</target>
        </trans-unit>
        <trans-unit id="b0656bf365ecd566d20843784bb6672c05812bbf" translate="yes" xml:space="preserve">
          <source>CMAKE_CACHE_MINOR_VERSION</source>
          <target state="translated">CMAKE_CACHE_MINOR_VERSION</target>
        </trans-unit>
        <trans-unit id="eb14585cc9e20449b7673b583cbefeeae59912d8" translate="yes" xml:space="preserve">
          <source>CMAKE_CACHE_PATCH_VERSION</source>
          <target state="translated">CMAKE_CACHE_PATCH_VERSION</target>
        </trans-unit>
        <trans-unit id="bdb84d28afddd05cd0a758e622d588349997cf31" translate="yes" xml:space="preserve">
          <source>CMAKE_CFG_INTDIR</source>
          <target state="translated">CMAKE_CFG_INTDIR</target>
        </trans-unit>
        <trans-unit id="3289d2f85b720054df73a914d639413a5d4b2051" translate="yes" xml:space="preserve">
          <source>CMAKE_CLANG_VFS_OVERLAY</source>
          <target state="translated">CMAKE_CLANG_VFS_OVERLAY</target>
        </trans-unit>
        <trans-unit id="6a86d4347a38c410d98da42a5cd39c1284d2fea8" translate="yes" xml:space="preserve">
          <source>CMAKE_CL_64</source>
          <target state="translated">CMAKE_CL_64</target>
        </trans-unit>
        <trans-unit id="bd19eaba3285aa64170ff4c72bb58da535b496a5" translate="yes" xml:space="preserve">
          <source>CMAKE_CODEBLOCKS_COMPILER_ID</source>
          <target state="translated">CMAKE_CODEBLOCKS_COMPILER_ID</target>
        </trans-unit>
        <trans-unit id="e9fd78b96b14e8b34409304e7f19f854c9304481" translate="yes" xml:space="preserve">
          <source>CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES</source>
          <target state="translated">CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES</target>
        </trans-unit>
        <trans-unit id="cd0213b42f0b8f70a1b6f505bd8328bdb7a0a652" translate="yes" xml:space="preserve">
          <source>CMAKE_CODELITE_USE_TARGETS</source>
          <target state="translated">CMAKE_CODELITE_USE_TARGETS</target>
        </trans-unit>
        <trans-unit id="397a83c38193fb6fe5feafaf3efdcc15ca41db7d" translate="yes" xml:space="preserve">
          <source>CMAKE_COLOR_MAKEFILE</source>
          <target state="translated">CMAKE_COLOR_MAKEFILE</target>
        </trans-unit>
        <trans-unit id="7f54f0560bd2bac822d66ae7e1e0c9fb42d48a8a" translate="yes" xml:space="preserve">
          <source>CMAKE_COMMAND</source>
          <target state="translated">CMAKE_COMMAND</target>
        </trans-unit>
        <trans-unit id="7482727c26bdf4829bbb0d492aada480875d8b49" translate="yes" xml:space="preserve">
          <source>CMAKE_COMPILER_2005</source>
          <target state="translated">CMAKE_COMPILER_2005</target>
        </trans-unit>
        <trans-unit id="9fd6a9166210d59a872ca4d6dbe6c253f8e4b336" translate="yes" xml:space="preserve">
          <source>CMAKE_COMPILER_IS_GNUCC</source>
          <target state="translated">CMAKE_COMPILER_IS_GNUCC</target>
        </trans-unit>
        <trans-unit id="e43fb43fe105555cf0c7b2423cb1bd81f6607098" translate="yes" xml:space="preserve">
          <source>CMAKE_COMPILER_IS_GNUCXX</source>
          <target state="translated">CMAKE_COMPILER_IS_GNUCXX</target>
        </trans-unit>
        <trans-unit id="b251024ce64fd65a3cab45f9944a5915d75f9f28" translate="yes" xml:space="preserve">
          <source>CMAKE_COMPILER_IS_GNUG77</source>
          <target state="translated">CMAKE_COMPILER_IS_GNUG77</target>
        </trans-unit>
        <trans-unit id="a460799ca2b15427b157a640501b835ff3d6f068" translate="yes" xml:space="preserve">
          <source>CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY</source>
          <target state="translated">CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="2d080829a599b331e37b10353977dea014cefe15" translate="yes" xml:space="preserve">
          <source>CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4aabd285ecdd10b4317debeadd9d7590d01f95f2" translate="yes" xml:space="preserve">
          <source>CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="7f5400f3cc18a192f1b63ff79e34e2c4afa0cf23" translate="yes" xml:space="preserve">
          <source>CMAKE_CONFIGURATION_TYPES</source>
          <target state="translated">CMAKE_CONFIGURATION_TYPES</target>
        </trans-unit>
        <trans-unit id="15a91f98fc1be6f78a8d5f027f9538f667285285" translate="yes" xml:space="preserve">
          <source>CMAKE_CONFIGURE_DEPENDS</source>
          <target state="translated">CMAKE_CONFIGURE_DEPENDS</target>
        </trans-unit>
        <trans-unit id="38a4b4fca9cd176b4703b754935d59777aa1e455" translate="yes" xml:space="preserve">
          <source>CMAKE_CONFIG_POSTFIX</source>
          <target state="translated">CMAKE_CONFIG_POSTFIX</target>
        </trans-unit>
        <trans-unit id="5582556c96750cd16feb80059094f8bb666e8623" translate="yes" xml:space="preserve">
          <source>CMAKE_CONFIG_TYPE</source>
          <target state="translated">CMAKE_CONFIG_TYPE</target>
        </trans-unit>
        <trans-unit id="8c9cb47e5a5be02283fb15f4192ecab253c6c354" translate="yes" xml:space="preserve">
          <source>CMAKE_CPACK_COMMAND</source>
          <target state="translated">CMAKE_CPACK_COMMAND</target>
        </trans-unit>
        <trans-unit id="e54838ee1c5bf4b3a440af166702a2a61ef65c45" translate="yes" xml:space="preserve">
          <source>CMAKE_CROSSCOMPILING</source>
          <target state="translated">CMAKE_CROSSCOMPILING</target>
        </trans-unit>
        <trans-unit id="9f50e6fe65ea5686ebaf522d981d153e66d57ab7" translate="yes" xml:space="preserve">
          <source>CMAKE_CROSSCOMPILING_EMULATOR</source>
          <target state="translated">CMAKE_CROSSCOMPILING_EMULATOR</target>
        </trans-unit>
        <trans-unit id="40e8a4ab662eda7496654f7dc59e8f774395f185" translate="yes" xml:space="preserve">
          <source>CMAKE_CROSS_CONFIGS</source>
          <target state="translated">CMAKE_CROSS_CONFIGS</target>
        </trans-unit>
        <trans-unit id="c1219244b16fe22c0064e2e82811fe86a942e6db" translate="yes" xml:space="preserve">
          <source>CMAKE_CTEST_ARGUMENTS</source>
          <target state="translated">CMAKE_CTEST_ARGUMENTS</target>
        </trans-unit>
        <trans-unit id="7b1c8b905297fafaa42b974073a18025b52556c5" translate="yes" xml:space="preserve">
          <source>CMAKE_CTEST_COMMAND</source>
          <target state="translated">CMAKE_CTEST_COMMAND</target>
        </trans-unit>
        <trans-unit id="7b2e2bbb90c1b7d4ae218def0e6e0e07ba0cb4eb" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_ARCHITECTURES</source>
          <target state="translated">CMAKE_CUDA_ARCHITECTURES</target>
        </trans-unit>
        <trans-unit id="35b98ed29a00ae1dde8cd77d8f3acccce41a6300" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_COMPILE_FEATURES</source>
          <target state="translated">CMAKE_CUDA_COMPILE_FEATURES</target>
        </trans-unit>
        <trans-unit id="a1b09de6a79c10aed78d16983a535f8f062c72db" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_EXTENSIONS</source>
          <target state="translated">CMAKE_CUDA_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="68eb6b098419251489cba4e92a730f2544513762" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_HOST_COMPILER</source>
          <target state="translated">CMAKE_CUDA_HOST_COMPILER</target>
        </trans-unit>
        <trans-unit id="7e1977fa51f025a23da2756f25e771cfbe301f67" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_KNOWN_FEATURES</source>
          <target state="translated">CMAKE_CUDA_KNOWN_FEATURES</target>
        </trans-unit>
        <trans-unit id="af7f8f15e8e6377e35465b49c1ee77293f4d9335" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS</source>
          <target state="translated">CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="2c0b123156a72f6705cafaac5bc0c477136c1f90" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_RUNTIME_LIBRARY</source>
          <target state="translated">CMAKE_CUDA_RUNTIME_LIBRARY</target>
        </trans-unit>
        <trans-unit id="47a9ec4d321b12d7a34d560d6744a0ec2b9c0ff7" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_SEPARABLE_COMPILATION</source>
          <target state="translated">CMAKE_CUDA_SEPARABLE_COMPILATION</target>
        </trans-unit>
        <trans-unit id="d89eb3b94bda2063449e4a27f22766f6d84b321e" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_STANDARD</source>
          <target state="translated">CMAKE_CUDA_STANDARD</target>
        </trans-unit>
        <trans-unit id="3281f17a41baef6a11eece5159bce609cf3c17de" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_STANDARD_REQUIRED</source>
          <target state="translated">CMAKE_CUDA_STANDARD_REQUIRED</target>
        </trans-unit>
        <trans-unit id="310dacd6b0b9b38d7fc0a55a4f7238ff2b20b461" translate="yes" xml:space="preserve">
          <source>CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES</source>
          <target state="translated">CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="1da1ea960add7600353429a3ad5382fa67d5e694" translate="yes" xml:space="preserve">
          <source>CMAKE_CURRENT_BINARY_DIR</source>
          <target state="translated">CMAKE_CURRENT_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="e4607dbabeec7509942d58395f637713d3f59e59" translate="yes" xml:space="preserve">
          <source>CMAKE_CURRENT_FUNCTION</source>
          <target state="translated">CMAKE_CURRENT_FUNCTION</target>
        </trans-unit>
        <trans-unit id="c2ac5055938ae0666d5ff0f70185481a61684936" translate="yes" xml:space="preserve">
          <source>CMAKE_CURRENT_FUNCTION_LIST_DIR</source>
          <target state="translated">CMAKE_CURRENT_FUNCTION_LIST_DIR</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
