<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="d492813a704a2e1ce99d0fa9ab5fc99bbcdaa528" translate="yes" xml:space="preserve">
          <source>Variables for CTest</source>
          <target state="translated">CTest 변수</target>
        </trans-unit>
        <trans-unit id="3c51cc8a5cba41192ca2582c234b3ec189c549b2" translate="yes" xml:space="preserve">
          <source>Variables for Languages</source>
          <target state="translated">언어 변수</target>
        </trans-unit>
        <trans-unit id="d74f7bcd8affe8c843dace7d1380acc66b354776" translate="yes" xml:space="preserve">
          <source>Variables for Source Package Generators</source>
          <target state="translated">소스 패키지 생성기의 변수</target>
        </trans-unit>
        <trans-unit id="95c39a1877db728b5c61ee62883e20cf6f788fff" translate="yes" xml:space="preserve">
          <source>Variables for locating MPI</source>
          <target state="translated">MPI를 찾기위한 변수</target>
        </trans-unit>
        <trans-unit id="77959bae25e13a6b5bdeddbc3e7c8072bbd71c02" translate="yes" xml:space="preserve">
          <source>Variables for locating SDL</source>
          <target state="translated">SDL을 찾기위한 변수</target>
        </trans-unit>
        <trans-unit id="59fa8aa43c075083edbec783a530dc8d64507131" translate="yes" xml:space="preserve">
          <source>Variables for using MPI</source>
          <target state="translated">MPI 사용을위한 변수</target>
        </trans-unit>
        <trans-unit id="0f601afeb6fc9dd3a292e32ca6a4d5ab1b84b8a2" translate="yes" xml:space="preserve">
          <source>Variables have dynamic scope. Each variable &amp;ldquo;set&amp;rdquo; or &amp;ldquo;unset&amp;rdquo; creates a binding in the current scope:</source>
          <target state="translated">변수에는 동적 범위가 있습니다. 각 변수 &quot;set&quot;또는 &quot;unset&quot;은 현재 범위에서 바인딩을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fd6c220b8dbfc493adb50a57791073415251c2aa" translate="yes" xml:space="preserve">
          <source>Variables may be set in the cmake-gui using the &amp;ldquo;Add Entry&amp;rdquo; button. This triggers a new dialog to set the value of the variable.</source>
          <target state="translated">변수는 &quot;항목 추가&quot;버튼을 사용하여 cmake-gui에서 설정할 수 있습니다. 그러면 변수 값을 설정하는 새 대화 상자가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="13c0ad1de2c16aabcc7ff57bb3f0ac43d44eba20" translate="yes" xml:space="preserve">
          <source>Variables meaningful to CMake, such as &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt;, are propagated automatically. The &lt;code&gt;CMAKE_TRY_COMPILE_PLATFORM_VARIABLES&lt;/code&gt; variable may be set to pass custom variables meaningful to a toolchain file. For example, a toolchain file may contain:</source>
          <target state="translated">&lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 와 같이 CMake에 중요한 변수 는 자동으로 전파됩니다. &lt;code&gt;CMAKE_TRY_COMPILE_PLATFORM_VARIABLES&lt;/code&gt; 의 변수는 툴체인 파일에 의미있는 사용자 정의 변수를 전달하도록 설정 할 수있다. 예를 들어 툴체인 파일에는 다음이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1fab95073ad9ee86fe4b5425ce4e44e674b1eab" translate="yes" xml:space="preserve">
          <source>Variables specific to the Graphviz support</source>
          <target state="translated">Graphviz 지원과 관련된 변수</target>
        </trans-unit>
        <trans-unit id="3b28539dcfda63a1cc5606bf8e889a0dd322594b" translate="yes" xml:space="preserve">
          <source>Variables specific to the graphviz support</source>
          <target state="translated">graphviz 지원에 특정한 변수</target>
        </trans-unit>
        <trans-unit id="85bed3699731e03ea47e8aa2cd80ebf8d96cec60" translate="yes" xml:space="preserve">
          <source>Variables that Change Behavior</source>
          <target state="translated">동작을 변경하는 변수</target>
        </trans-unit>
        <trans-unit id="29cb5c5ae4dcbf7a3d2b90635836ce1ce0d6f0de" translate="yes" xml:space="preserve">
          <source>Variables that Control the Build</source>
          <target state="translated">빌드를 제어하는 ​​변수</target>
        </trans-unit>
        <trans-unit id="33aee83e2e3f33308c678138237d1fe2e42b09a8" translate="yes" xml:space="preserve">
          <source>Variables that Describe the System</source>
          <target state="translated">시스템을 설명하는 변수</target>
        </trans-unit>
        <trans-unit id="edf4e615d57cc7773933c03385bb3d5cbfc6d00c" translate="yes" xml:space="preserve">
          <source>Variables that Provide Information</source>
          <target state="translated">정보를 제공하는 변수</target>
        </trans-unit>
        <trans-unit id="1d5fcd3f8804a98d2ae6fb6a051e683b9a9ebe4a" translate="yes" xml:space="preserve">
          <source>Variables that indicate if the mangling is found:</source>
          <target state="translated">맹 글링이 있는지를 나타내는 변수 :</target>
        </trans-unit>
        <trans-unit id="34749650c2faf7593537c6860dc6e2020477e50a" translate="yes" xml:space="preserve">
          <source>Variadic macros, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1653.htm&quot;&gt;N1653&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1653.htm&quot;&gt;N1653에&lt;/a&gt; 정의 된 가변 매크로 .</target>
        </trans-unit>
        <trans-unit id="9c01139808887f6744afc4108e4ecef9626575a8" translate="yes" xml:space="preserve">
          <source>Variadic macros, as defined in &lt;code&gt;ISO/IEC 9899:1999&lt;/code&gt;.</source>
          <target state="translated">에 정의 된 가변 인자 매크로, &lt;code&gt;ISO/IEC 9899:1999&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7ba1eee2a31e82a94ac8c7d0f5acb69d31922de" translate="yes" xml:space="preserve">
          <source>Variadic templates, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2242.pdf&quot;&gt;N2242&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2242.pdf&quot;&gt;N2242에&lt;/a&gt; 정의 된 다양한 템플릿 .</target>
        </trans-unit>
        <trans-unit id="346a211b0d8c903ae1938b4eb3544504c75bd473" translate="yes" xml:space="preserve">
          <source>Verifies that an application &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; appears valid based on running analysis tools on it. Calls &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message(FATAL_ERROR)&lt;/code&gt;&lt;/a&gt; if the application is not verified.</source>
          <target state="translated">&lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; 응용 프로그램이 실행중인 분석 도구를 기반으로 유효한 것으로 확인합니다. 응용 프로그램이 확인되지 않으면 &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt; &lt;code&gt;message(FATAL_ERROR)&lt;/code&gt; &lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="d015e2f74eaae69979e8423382d07d4b0c4f38ec" translate="yes" xml:space="preserve">
          <source>Verifies that any symlinks found in the &lt;code&gt;&amp;lt;bundle&amp;gt;&lt;/code&gt; bundle point to other files that are already also in the bundle&amp;hellip; Anything that points to an external file causes this function to fail the verification.</source>
          <target state="translated">&lt;code&gt;&amp;lt;bundle&amp;gt;&lt;/code&gt; 번들 에있는 모든 심볼릭 링크 가 이미 번들에있는 다른 파일을 가리키는 지 확인합니다. 외부 파일을 가리키는 것이 있으면이 기능이 확인에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="0bc85a33df019d9cd976e0dee554b43310308cd2" translate="yes" xml:space="preserve">
          <source>Verifies that the sum of all prerequisites of all files inside the bundle are contained within the bundle or are &lt;code&gt;system&lt;/code&gt; libraries, presumed to exist everywhere.</source>
          <target state="translated">번들 내에있는 모든 파일의 모든 전제 조건의 합계가 번들 내에 포함되어 있거나 &lt;code&gt;system&lt;/code&gt; 라이브러리이며 모든 곳에서 존재한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="0c3c7c5b1ccad8a4b6b83ecea9ae806d9e339851" translate="yes" xml:space="preserve">
          <source>Verify that the downloaded content hash matches the expected value, where &lt;code&gt;ALGO&lt;/code&gt; is one of the algorithms supported by &lt;code&gt;file(&amp;lt;HASH&amp;gt;)&lt;/code&gt;. If it does not match, the operation fails with an error.</source>
          <target state="translated">다운로드 한 컨텐츠 해시가 예상 값과 일치하는지 확인하십시오. 여기서 &lt;code&gt;ALGO&lt;/code&gt; 는 &lt;code&gt;file(&amp;lt;HASH&amp;gt;)&lt;/code&gt; 지원하는 알고리즘 중 하나입니다 . 일치하지 않으면 작업이 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="bdc942c0f4305e1312eef6ebe858a93bf9250f0a" translate="yes" xml:space="preserve">
          <source>Verify that the downloaded content hash matches the expected value, where &lt;code&gt;ALGO&lt;/code&gt; is one of the algorithms supported by &lt;code&gt;file(&amp;lt;HASH&amp;gt;)&lt;/code&gt;. If it does not match, the operation fails with an error. It is an error to specify this if &lt;code&gt;DOWNLOAD&lt;/code&gt; is not given a &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">다운로드 한 콘텐츠 해시가 예상 값과 일치하는지 확인합니다. 여기서 &lt;code&gt;ALGO&lt;/code&gt; 는 &lt;code&gt;file(&amp;lt;HASH&amp;gt;)&lt;/code&gt; 지원하는 알고리즘 중 하나입니다 . 일치하지 않으면 오류와 함께 작업이 실패합니다. &lt;code&gt;DOWNLOAD&lt;/code&gt; 에 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 이 지정 되지 않은 경우이를 지정하는 것은 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="a083ebe61d068ecf69f91867ac5f4fa46c862f0b" translate="yes" xml:space="preserve">
          <source>Version Selection</source>
          <target state="translated">버전 선택</target>
        </trans-unit>
        <trans-unit id="96e6de74f6e40e5cdee1a986a378f3cd97ad72b0" translate="yes" xml:space="preserve">
          <source>Version files are loaded in a nested scope so they are free to set any variables they wish as part of their computation. The find_package command wipes out the scope when the version file has completed and it has checked the output variables. When the version file claims to be an acceptable match for the requested version the find_package command sets the following variables for use by the project:</source>
          <target state="translated">버전 파일은 중첩 된 범위에로드되므로 계산의 일부로 원하는 변수를 자유롭게 설정할 수 있습니다. find_package 명령은 버전 파일이 완료되고 출력 변수를 확인할 때 범위를 지 웁니다. 버전 파일이 요청 된 버전과 일치한다고 주장하면 find_package 명령은 프로젝트에서 사용할 다음 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c260c24505b18fb64915db66112088e60b1c9eb6" translate="yes" xml:space="preserve">
          <source>Version of Xcode (&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator only).</source>
          <target state="translated">Xcode 버전 ( &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기 만 해당)</target>
        </trans-unit>
        <trans-unit id="eb406d56f6801033df1467669755015cdd766a39" translate="yes" xml:space="preserve">
          <source>Version of Xcode (&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator only).</source>
          <target state="translated">Xcode 버전 ( &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기 만 해당).</target>
        </trans-unit>
        <trans-unit id="b7daa85e2000518990fc04937cadd965d1748868" translate="yes" xml:space="preserve">
          <source>Version of a framework created using the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property (e.g. &lt;code&gt;A&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 대상 속성을 사용하여 만든 프레임 워크 버전 (예 : &lt;code&gt;A&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="364f810aa1d55aba832b0022df76cc755844390c" translate="yes" xml:space="preserve">
          <source>Version of package found.</source>
          <target state="translated">패키지 버전을 찾았습니다.</target>
        </trans-unit>
        <trans-unit id="2162d9bb564abdc0e53bae657e54653f1d3712aa" translate="yes" xml:space="preserve">
          <source>Version string of &amp;ldquo;simulated&amp;rdquo; compiler.</source>
          <target state="translated">&quot;시뮬레이션 된&quot;컴파일러의 버전 문자열.</target>
        </trans-unit>
        <trans-unit id="03aa7e5d465883d371656dea5d643bc839e1989c" translate="yes" xml:space="preserve">
          <source>Versions of Mach-O binaries may be checked with the &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">Mach-O 바이너리 버전은 &lt;code&gt;otool -L &amp;lt;binary&amp;gt;&lt;/code&gt; 명령 으로 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80a06204baf08c1fb1b0a5476595d3bc1962d728" translate="yes" xml:space="preserve">
          <source>View Help</source>
          <target state="translated">도움말보기</target>
        </trans-unit>
        <trans-unit id="ddb57faf8b9f71194fff094daeedb47ca8a6201a" translate="yes" xml:space="preserve">
          <source>View mode only.</source>
          <target state="translated">보기 모드 만.</target>
        </trans-unit>
        <trans-unit id="462f5727c9400ddaf2f3dd558dabe518a3bc8649" translate="yes" xml:space="preserve">
          <source>Virtual environments such as RVM are handled as well, by passing the argument &lt;code&gt;Ruby_FIND_VIRTUALENV&lt;/code&gt;</source>
          <target state="translated">RVM과 같은 가상 환경도 &lt;code&gt;Ruby_FIND_VIRTUALENV&lt;/code&gt; 인수를 전달하여 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="91b163a97867c591a7ecc9961dd251208ca0ce01" translate="yes" xml:space="preserve">
          <source>Visual Studio</source>
          <target state="translated">비주얼 스튜디오</target>
        </trans-unit>
        <trans-unit id="b7b160a5efc2b70d01b0b4e90c71c27dbf33c3f9" translate="yes" xml:space="preserve">
          <source>Visual Studio 10 2010</source>
          <target state="translated">Visual Studio 10 2010</target>
        </trans-unit>
        <trans-unit id="2d9f018b51ec385c52c75cc5a1e0c34704aced70" translate="yes" xml:space="preserve">
          <source>Visual Studio 11 2012</source>
          <target state="translated">Visual Studio 11 2012</target>
        </trans-unit>
        <trans-unit id="c778763e8f37f60b0211097064e67f19fc5a1d5e" translate="yes" xml:space="preserve">
          <source>Visual Studio 12 2013</source>
          <target state="translated">Visual Studio 12 2013</target>
        </trans-unit>
        <trans-unit id="6178504334d9d2f6ad4f563589c7502f805bd260" translate="yes" xml:space="preserve">
          <source>Visual Studio 14 2015</source>
          <target state="translated">Visual Studio 14 2015</target>
        </trans-unit>
        <trans-unit id="b254cb387189ea162da232349bb76371490a3826" translate="yes" xml:space="preserve">
          <source>Visual Studio 15 2017</source>
          <target state="translated">Visual Studio 15 2017</target>
        </trans-unit>
        <trans-unit id="732ade174fd543e2382bab072b96d5b26cc6515b" translate="yes" xml:space="preserve">
          <source>Visual Studio 16 2019</source>
          <target state="translated">Visual Studio 16 2019</target>
        </trans-unit>
        <trans-unit id="68cc7739a8b88415f0b9019d950dda047838796e" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 requires a target device IP address be entered for each target marked for deployment. For large numbers of targets, this can be tedious. NOTE: Visual Studio &lt;em&gt;will&lt;/em&gt; deploy all project dependencies of a project tagged for deployment to the IP address configured for that project even if those dependencies are not tagged for deployment.</source>
          <target state="translated">Visual Studio 2013에서는 배포 대상으로 표시된 각 대상에 대상 장치 IP 주소를 입력해야합니다. 많은 수의 대상의 경우 지루할 수 있습니다. 참고 : Visual Studio &lt;em&gt;는&lt;/em&gt; 배포 용으로 태그가 지정되지 않은 경우에도 배포 용으로 태그 지정된 프로젝트의 모든 프로젝트 종속성을 해당 프로젝트 용으로 구성된 IP 주소에 배포합니다.</target>
        </trans-unit>
        <trans-unit id="8f4547dc685d5e60b177ee3befdca56f4f7fba7e" translate="yes" xml:space="preserve">
          <source>Visual Studio 6</source>
          <target state="translated">비주얼 스튜디오 6</target>
        </trans-unit>
        <trans-unit id="ba12391c89c52cb5f536cde4a081f997b2268e41" translate="yes" xml:space="preserve">
          <source>Visual Studio 7</source>
          <target state="translated">비주얼 스튜디오 7</target>
        </trans-unit>
        <trans-unit id="24f92c10fa903fc4452e00b537e381e077d9cd9a" translate="yes" xml:space="preserve">
          <source>Visual Studio 7 .NET 2003</source>
          <target state="translated">Visual Studio 7 .NET 2003</target>
        </trans-unit>
        <trans-unit id="ed1f8dc947f2148f0aeb20de3d7f62c30803af26" translate="yes" xml:space="preserve">
          <source>Visual Studio 8 2005</source>
          <target state="translated">Visual Studio 8 2005</target>
        </trans-unit>
        <trans-unit id="b4d41fdac40d1777f8306f9b1a0042ce607a5fbf" translate="yes" xml:space="preserve">
          <source>Visual Studio 9 2008</source>
          <target state="translated">Visual Studio 9 2008</target>
        </trans-unit>
        <trans-unit id="a2ac8c71d47276c2aa4f662db63d45e2ca783524" translate="yes" xml:space="preserve">
          <source>Visual Studio Generators</source>
          <target state="translated">Visual Studio 생성기</target>
        </trans-unit>
        <trans-unit id="ea161bed4ce60bc03be3e16625a8f9aa9db019d6" translate="yes" xml:space="preserve">
          <source>Visual Studio Platform Selection</source>
          <target state="translated">Visual Studio 플랫폼 선택</target>
        </trans-unit>
        <trans-unit id="d43a1817b5b57e615e0aca94c736aacb3a4bf79b" translate="yes" xml:space="preserve">
          <source>Visual Studio Platform Toolset name.</source>
          <target state="translated">Visual Studio 플랫폼 도구 세트 이름</target>
        </trans-unit>
        <trans-unit id="6081679bf422851eba1f809e275115ea17f9aca0" translate="yes" xml:space="preserve">
          <source>Visual Studio Platform Toolset version.</source>
          <target state="translated">Visual Studio 플랫폼 도구 세트 버전.</target>
        </trans-unit>
        <trans-unit id="f51279c64c1eb09feed317e085a2fb119239a995" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Aux Path.</source>
          <target state="translated">Visual Studio 소스 코드 제어 보조 경로.</target>
        </trans-unit>
        <trans-unit id="3bc036a32e5bc40de7a425c761da47c54df7de06" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Local Path.</source>
          <target state="translated">Visual Studio 소스 코드 제어 로컬 경로.</target>
        </trans-unit>
        <trans-unit id="7405bcba6efd69515a3984bd5d0e0acd411bb241" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Project.</source>
          <target state="translated">Visual Studio 소스 코드 제어 프로젝트.</target>
        </trans-unit>
        <trans-unit id="93f917941ced82008c40093af7dcf40e6edf4876" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Provider.</source>
          <target state="translated">Visual Studio 소스 코드 제어 공급자.</target>
        </trans-unit>
        <trans-unit id="85e70d78bd3750259bfd0ab0a80c614bb0fedac9" translate="yes" xml:space="preserve">
          <source>Visual Studio Toolset Selection</source>
          <target state="translated">Visual Studio 툴셋 선택</target>
        </trans-unit>
        <trans-unit id="2d23825a9262f021e55ed539b996d2de1ef10313" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 Desktop Extensions Version</source>
          <target state="translated">Visual Studio Windows 10 데스크톱 확장 버전</target>
        </trans-unit>
        <trans-unit id="dddb3d7be40530ba90430cbd72736039e05f635a" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 IoT Continuous Background Task</source>
          <target state="translated">Visual Studio Windows 10 IoT 연속 백그라운드 작업</target>
        </trans-unit>
        <trans-unit id="253fb9f84828e6e90f44f0d1b9084cef47524615" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 IoT Extensions Version</source>
          <target state="translated">Visual Studio Windows 10 IoT 확장 버전</target>
        </trans-unit>
        <trans-unit id="3c53c48fe7abc10b66af55f26cfb9070433c7c2e" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 Mobile Extensions Version</source>
          <target state="translated">Visual Studio Windows 10 Mobile 확장 버전</target>
        </trans-unit>
        <trans-unit id="aa787aa8c0972ba916761253a114e08187829fc0" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows Target Platform Minimum Version</source>
          <target state="translated">Visual Studio Windows 대상 플랫폼 최소 버전</target>
        </trans-unit>
        <trans-unit id="9d25152db15781724e23212de4d38c374a3a8bbb" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows Target Platform Version.</source>
          <target state="translated">Visual Studio Windows 대상 플랫폼 버전.</target>
        </trans-unit>
        <trans-unit id="467a5e7dbe1517a4a7c99f71df9c0b88e4c64309" translate="yes" xml:space="preserve">
          <source>Visual Studio and CSharp source-file-specific configuration.</source>
          <target state="translated">Visual Studio 및 CSharp 소스 파일 특정 구성</target>
        </trans-unit>
        <trans-unit id="7318cabd31dac8aefdf8a774f93f22c81bcce67e" translate="yes" xml:space="preserve">
          <source>Visual Studio generators can target different architectures. One can specify the target architecture using the &lt;code&gt;-A&lt;/code&gt; option:</source>
          <target state="translated">Visual Studio 생성기는 다양한 아키텍처를 대상으로 할 수 있습니다. &lt;code&gt;-A&lt;/code&gt; 옵션을 사용하여 대상 아키텍처를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93b181d7335e4ef0daba463397b0f18e595bc7aa" translate="yes" xml:space="preserve">
          <source>Visual Studio managed project .NET documentation output</source>
          <target state="translated">Visual Studio 관리 프로젝트 .NET 설명서 출력</target>
        </trans-unit>
        <trans-unit id="f172a883b38decf5fbb74857ead5f250afdf3b58" translate="yes" xml:space="preserve">
          <source>Visual Studio managed project .NET reference with name &lt;code&gt;&amp;lt;refname&amp;gt;&lt;/code&gt; and hint path.</source>
          <target state="translated">이름이 &lt;code&gt;&amp;lt;refname&amp;gt;&lt;/code&gt; 이고 힌트 경로가있는 Visual Studio 관리 프로젝트 .NET 참조</target>
        </trans-unit>
        <trans-unit id="660e39b59cc5cae9b775491cf9e84cc09db73bb4" translate="yes" xml:space="preserve">
          <source>Visual Studio managed project .NET references</source>
          <target state="translated">Visual Studio 관리 프로젝트 .NET 참조</target>
        </trans-unit>
        <trans-unit id="7e1a7f0f1623f13fdefc8a7616b565eaebb0402a" translate="yes" xml:space="preserve">
          <source>Visual Studio managed project imports</source>
          <target state="translated">Visual Studio 관리 프로젝트 가져 오기</target>
        </trans-unit>
        <trans-unit id="fbff17ca01fc05b75ef536174f92b43e34526c63" translate="yes" xml:space="preserve">
          <source>Visual Studio package references for nuget.</source>
          <target state="translated">너겟에 대한 Visual Studio 패키지 참조.</target>
        </trans-unit>
        <trans-unit id="fbe0951cdfdda8f728cad28cfd93623429c39931" translate="yes" xml:space="preserve">
          <source>Visual Studio preferred tool architecture.</source>
          <target state="translated">Visual Studio 기본 도구 아키텍처</target>
        </trans-unit>
        <trans-unit id="6daaf8246019241fdf4497f1fbf55865585ec03b" translate="yes" xml:space="preserve">
          <source>Visual Studio project SDK references. Specify a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of SDK references to be added to a generated Visual Studio project, e.g. &lt;code&gt;Microsoft.AdMediatorWindows81, Version=1.0&lt;/code&gt;.</source>
          <target state="translated">Visual Studio 프로젝트 SDK 참조 생성 된 Visual Studio 프로젝트에 추가 할 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된&lt;/a&gt; SDK 참조 목록 을 지정 하십시오 ( 예 : &lt;code&gt;Microsoft.AdMediatorWindows81, Version=1.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2adb342235b0c81b9b13522373f6d9519c56bbb" translate="yes" xml:space="preserve">
          <source>Visual Studio project Windows Runtime Metadata references</source>
          <target state="translated">Visual Studio 프로젝트 Windows 런타임 메타 데이터 참조</target>
        </trans-unit>
        <trans-unit id="8d33cf32f4e0c2f2c0fc2a268aa2f7311c12520b" translate="yes" xml:space="preserve">
          <source>Visual Studio project configuration type.</source>
          <target state="translated">Visual Studio 프로젝트 구성 유형</target>
        </trans-unit>
        <trans-unit id="e664757287bcc4462f910d6a37ac5c74045e19ff" translate="yes" xml:space="preserve">
          <source>Visual Studio project keyword for VS 10 (2010) and newer.</source>
          <target state="translated">VS 10 (2010) 이상을위한 Visual Studio 프로젝트 키워드</target>
        </trans-unit>
        <trans-unit id="ab3c13cf98e551430a4fda1f3fcbdb2a854af8fe" translate="yes" xml:space="preserve">
          <source>Visual Studio project keyword for VS 9 (2008) and older.</source>
          <target state="translated">VS 9 (2008) 이상의 Visual Studio 프로젝트 키워드</target>
        </trans-unit>
        <trans-unit id="063b4ec24d4b1d6656f94c16f0007b92aa1107f0" translate="yes" xml:space="preserve">
          <source>Visual Studio project root namespace.</source>
          <target state="translated">Visual Studio 프로젝트 루트 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="95df0948c425e7c0ea203afbe4d3aa5682f345f1" translate="yes" xml:space="preserve">
          <source>Visual Studio project type(s).</source>
          <target state="translated">Visual Studio 프로젝트 유형</target>
        </trans-unit>
        <trans-unit id="d81f20619119a6d71d349aba3259a850dd7e296d" translate="yes" xml:space="preserve">
          <source>Visual Studio project-specific global variable.</source>
          <target state="translated">Visual Studio 프로젝트 별 전역 변수</target>
        </trans-unit>
        <trans-unit id="9495ee87146e970439144ea228927d459849cb05" translate="yes" xml:space="preserve">
          <source>Visual Studio ships multiple command prompts and &lt;code&gt;vcvarsall.bat&lt;/code&gt; scripts for setting up the correct environments for command line buildsystems. While not strictly necessary to use a corresponding command line environment when using a Visual Studio generator, doing so has no disadvantages.</source>
          <target state="translated">Visual Studio 는 명령 줄 빌드 시스템에 대한 올바른 환경을 설정하기위한 여러 명령 프롬프트 및 &lt;code&gt;vcvarsall.bat&lt;/code&gt; 스크립트를 제공합니다. Visual Studio 생성기를 사용할 때 해당 명령 줄 환경을 반드시 사용해야하는 것은 아니지만 그렇게하면 단점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="2376c83a78d75803bebdcc17ab5bb63e4572cfb4" translate="yes" xml:space="preserve">
          <source>Visual Studio target platform name used by the current generator.</source>
          <target state="translated">현재 생성기에서 사용하는 Visual Studio 대상 플랫폼 이름입니다.</target>
        </trans-unit>
        <trans-unit id="46e8baaab25a7968872e8196e22b6b418566e99c" translate="yes" xml:space="preserve">
          <source>WARNING: &lt;code&gt;DESTDIR&lt;/code&gt; may not be used on Windows because installation prefix usually contains a drive letter like in &lt;code&gt;C:/Program Files&lt;/code&gt; which cannot be prepended with some other prefix.</source>
          <target state="translated">경고 : 설치 접두사는 일반적으로 &lt;code&gt;C:/Program Files&lt;/code&gt; 와 같이 다른 접두사 앞에 붙일 수없는 드라이브 문자를 포함하므로 Windows에서는 &lt;code&gt;DESTDIR&lt;/code&gt; 을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="32ad4c32ce94dfda043ff719d74c084cad639f51" translate="yes" xml:space="preserve">
          <source>WILL_FAIL</source>
          <target state="translated">WILL_FAIL</target>
        </trans-unit>
        <trans-unit id="6bfeade79e554c96c5980b1640b2b6530b970f83" translate="yes" xml:space="preserve">
          <source>WIN32</source>
          <target state="translated">WIN32</target>
        </trans-unit>
        <trans-unit id="b24206695c16611762116e6093715dcd592159e1" translate="yes" xml:space="preserve">
          <source>WIN32_EXECUTABLE</source>
          <target state="translated">WIN32_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="a29007b9402fb6e6c62434f7e21b5a8f581c5016" translate="yes" xml:space="preserve">
          <source>WINCE</source>
          <target state="translated">WINCE</target>
        </trans-unit>
        <trans-unit id="9fcf4aa13bae898e604e37fe967b93eca1a0da35" translate="yes" xml:space="preserve">
          <source>WINDOWS_EXPORT_ALL_SYMBOLS</source>
          <target state="translated">WINDOWS_EXPORT_ALL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="e7a7a9e1211d22cbc212681ad8edd8642497d85f" translate="yes" xml:space="preserve">
          <source>WINDOWS_PHONE</source>
          <target state="translated">WINDOWS_PHONE</target>
        </trans-unit>
        <trans-unit id="7bd1a1067be681c533911ac785b8d669ace8f27e" translate="yes" xml:space="preserve">
          <source>WINDOWS_STORE</source>
          <target state="translated">WINDOWS_STORE</target>
        </trans-unit>
        <trans-unit id="b05688bdb9367f3cbe59460cb3d921d250d0020e" translate="yes" xml:space="preserve">
          <source>WORKING_DIRECTORY</source>
          <target state="translated">WORKING_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="f1c1c7f785be473663f6d68714550ed8b1c91028" translate="yes" xml:space="preserve">
          <source>WRAP_EXCLUDE</source>
          <target state="translated">WRAP_EXCLUDE</target>
        </trans-unit>
        <trans-unit id="b77e993de8edba5e6924c042eb6f9dd0737b56db" translate="yes" xml:space="preserve">
          <source>Warn about uninitialized values.</source>
          <target state="translated">초기화되지 않은 값에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="09ff08be0de6e9337d7fc4f867329cffece90e73" translate="yes" xml:space="preserve">
          <source>Warn about unused variables.</source>
          <target state="translated">사용하지 않는 변수에 대해 경고하십시오.</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="5e5cf3e7be1ac057ae0ea92f43ac11715a4403b7" translate="yes" xml:space="preserve">
          <source>Warning-free future-compatible code which works with CMake 2.8.7 onwards can be written by using the &lt;code&gt;LINK_PRIVATE&lt;/code&gt; and &lt;code&gt;LINK_PUBLIC&lt;/code&gt; keywords of &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CMake 2.8.7 이상에서 작동하는 경고없는 미래 호환 코드 는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;LINK_PRIVATE&lt;/code&gt; 및 &lt;code&gt;LINK_PUBLIC&lt;/code&gt; 키워드를 사용하여 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b5af252510dd4044a5b2e94f629ce2d1691b6df" translate="yes" xml:space="preserve">
          <source>Was osgDB found?</source>
          <target state="translated">osgDB를 찾았습니까?</target>
        </trans-unit>
        <trans-unit id="06dbd1c62eff470d6ba170c68f0a69f9f6a7ac6b" translate="yes" xml:space="preserve">
          <source>Watch the CMake variable for change.</source>
          <target state="translated">CMake 변수가 변경되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f2fdeec2e3ddcf903eb4f64f7fec525b2b0c8d47" translate="yes" xml:space="preserve">
          <source>Watcom WMake</source>
          <target state="translated">왓콤 WMake</target>
        </trans-unit>
        <trans-unit id="69771719de3a0cf7610d799115189f6bd744e200" translate="yes" xml:space="preserve">
          <source>We also have to add the current binary directory to the list of include directories so that &lt;code&gt;Table.h&lt;/code&gt; can be found and included by &lt;code&gt;mysqrt.cxx&lt;/code&gt;.</source>
          <target state="translated">우리는 또한 있도록 디렉토리를 포함 목록에 현재 바이너리 디렉토리를 추가해야 &lt;code&gt;Table.h&lt;/code&gt; 이 발견으로 포함 할 수있다 &lt;code&gt;mysqrt.cxx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07bc619286d938e468c6f70d711726e7247dc47d" translate="yes" xml:space="preserve">
          <source>We also need to make some changes in &lt;code&gt;tutorial.cxx&lt;/code&gt;, so that it no longer uses &lt;code&gt;USE_MYMATH&lt;/code&gt;:</source>
          <target state="translated">또한 &lt;code&gt;tutorial.cxx&lt;/code&gt; 를 약간 변경하여 더 이상 &lt;code&gt;USE_MYMATH&lt;/code&gt; 를 사용하지 않도록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3f11906db711e938b46c4aad972c17c6f6e39e19" translate="yes" xml:space="preserve">
          <source>We assume &lt;code&gt;info.json&lt;/code&gt; is a plain (not &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;) file that is listed in the target&amp;rsquo;s source. Therefore we do not need to add it to &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;info.json&lt;/code&gt; 은 대상의 소스에 나열된 일반 ( &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 아님) 파일 이라고 가정 합니다. 따라서 &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; &lt;/a&gt; 에 추가 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="84d96ba36f8bc15461da14131f31187f26100353" translate="yes" xml:space="preserve">
          <source>We can now reference this &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-9-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target just like any target built within the project. In this instance, let&amp;rsquo;s imagine that we want to use the generated source file in our project. Use the &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-10-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target in the &lt;a href=&quot;../../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">이제이 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-9-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상을 프로젝트 내에 빌드 된 모든 대상과 마찬가지로 참조 할 수 있습니다 . 이 경우 생성 된 소스 파일을 프로젝트에서 사용한다고 가정 해 보겠습니다. &lt;a href=&quot;../../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 명령 에서 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-10-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1638380f6173572b4204f82917d2fe84b27af22" translate="yes" xml:space="preserve">
          <source>We can use the &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">&lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09e378cf02fbc0b1213cb3f84c7ce8dc96297433" translate="yes" xml:space="preserve">
          <source>We do not recommend using GLOB to collect a list of source files from your source tree. If no CMakeLists.txt file changes when a source is added or removed then the generated build system cannot know when to ask CMake to regenerate. The &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; flag may not work reliably on all generators, or if a new generator is added in the future that cannot support it, projects using it will be stuck. Even if &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; works reliably, there is still a cost to perform the check on every rebuild.</source>
          <target state="translated">GLOB를 사용하여 소스 트리에서 소스 파일 목록을 수집하지 않는 것이 좋습니다. 소스를 추가하거나 제거 할 때 CMakeLists.txt 파일이 변경되지 않으면 생성 된 빌드 시스템은 CMake의 재생성시기를 알 수 없습니다. &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; 의 플래그는 모든 발전기에서 안정적으로 작동하지 않을 수 있습니다, 또는 새로운 발전기가이를 지원 할 수없는 미래에 추가되면 그것을 사용하는 프로젝트가 붙어있을 것입니다. &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; 가 안정적으로 작동 하더라도 모든 재 구축마다 검사를 수행하는 비용이 여전히 있습니다.</target>
        </trans-unit>
        <trans-unit id="3198a8376112694ef2660d90e78b994ceacc6b47" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t want to forget to install the &lt;code&gt;MathFunctions.h&lt;/code&gt; header file with the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install(FILES)&lt;/code&gt;&lt;/a&gt; command. The header file should be installed to the &lt;code&gt;include&lt;/code&gt; directory, as specified by the &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command above.</source>
          <target state="translated">&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install(FILES)&lt;/code&gt; &lt;/a&gt; 명령 을 사용하여 &lt;code&gt;MathFunctions.h&lt;/code&gt; 헤더 파일 을 설치하는 것을 잊지 마십시오 . 헤더 파일은 위 의 &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 명령에 지정된대로 &lt;code&gt;include&lt;/code&gt; 디렉토리에 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fd2ea721d4ca7dbcd15708569367c2b50c346a83" translate="yes" xml:space="preserve">
          <source>We need to tell CMake that we want to use different include directories depending on if we&amp;rsquo;re building the library or using it from an installed location. If we don&amp;rsquo;t do this, when CMake creates the export information it will export a path that is specific to the current build directory and will not be valid for other projects. We can use &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; to specify that if we&amp;rsquo;re building the library include the current source directory. Otherwise, when installed, include the &lt;code&gt;include&lt;/code&gt; directory. See the &lt;a href=&quot;#creating-relocatable-packages&quot;&gt;Creating Relocatable Packages&lt;/a&gt; section for more details.</source>
          <target state="translated">라이브러리를 빌드하는지 또는 설치된 위치에서 사용하는지에 따라 다른 include 디렉토리를 사용하고 싶다고 CMake에 알려야합니다. 이 작업을 수행하지 않으면 CMake가 내보내기 정보를 생성 할 때 현재 빌드 디렉터리에 특정한 경로를 내보내고 다른 프로젝트에는 유효하지 않습니다. &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 을 사용하여 라이브러리를 빌드하는 경우 현재 소스 디렉토리를 포함하도록 지정할 수 있습니다 . 그렇지 않으면 설치시 &lt;code&gt;include&lt;/code&gt; 디렉토리를 포함하십시오 . 자세한 내용은 &lt;a href=&quot;#creating-relocatable-packages&quot;&gt;재배치 가능한 패키지 생성&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="444bb8e0fab48ec0f1c17f84c48e4ed31df59d03" translate="yes" xml:space="preserve">
          <source>We want the &lt;code&gt;moc&lt;/code&gt; file of &lt;code&gt;complex_class.hpp&lt;/code&gt; to depend on &lt;code&gt;meta.json&lt;/code&gt;. So we add a filter to &lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-2-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;complex_class.hpp&lt;/code&gt; 의 &lt;code&gt;moc&lt;/code&gt; 파일이 &lt;code&gt;meta.json&lt;/code&gt; 에 종속 되기를 원합니다 . 따라서 &lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-2-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt; 에&lt;/a&gt; 필터를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="24b84bf0c35c7f635348e8a22d306729b6ab36ea" translate="yes" xml:space="preserve">
          <source>We will also need to create a &lt;code&gt;CTestConfig.cmake&lt;/code&gt; file in the top-level directory where we can specify the name of the project and where to submit the dashboard.</source>
          <target state="translated">또한 프로젝트의 이름과 대시 보드를 제출할 위치를 지정할 수있는 최상위 디렉터리에 &lt;code&gt;CTestConfig.cmake&lt;/code&gt; 파일 을 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e92084335ef2c7bacee1e419c8515a7d41cb00cc" translate="yes" xml:space="preserve">
          <source>We will also need to modify &lt;code&gt;mysqrt.cxx&lt;/code&gt; to include &lt;code&gt;cmath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmath&lt;/code&gt; 를 포함 하도록 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 를 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0b988ff2260c4fd8eee7b74ba65dce3fecb22337" translate="yes" xml:space="preserve">
          <source>We will also need to update &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; so &lt;code&gt;mysqrt.cxx&lt;/code&gt; knows where this file is located:</source>
          <target state="translated">또한 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 가이 파일의 위치를 ​​알 수 있도록 MathFunctions &lt;code&gt;MathFunctions/CMakeLists.txt&lt;/code&gt; 를 업데이트해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7ec5c5830735352e9a9b941d14f5e04122881195" translate="yes" xml:space="preserve">
          <source>We will describe how to create a simple find module for a library &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">라이브러리 &lt;code&gt;Foo&lt;/code&gt; 에 대한 간단한 찾기 모듈을 만드는 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="0f30267760bcd23af2b2ff397b6fb15d6ef34f7f" translate="yes" xml:space="preserve">
          <source>We will need to explicitly state in the CMake code that it should use the correct flags. The easiest way to enable support for a specific C++ standard in CMake is by using the &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt;&lt;/a&gt; variable. For this tutorial, set the &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-1-variable:CMAKE_CXX_STANDARD&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt;&lt;/a&gt; variable in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to 11 and &lt;a href=&quot;../../variable/cmake_cxx_standard_required#variable:CMAKE_CXX_STANDARD_REQUIRED&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD_REQUIRED&quot;&gt;&lt;code&gt;CMAKE_CXX_STANDARD_REQUIRED&lt;/code&gt;&lt;/a&gt; to True. Make sure to add the &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; declarations above the call to &lt;code&gt;add_executable&lt;/code&gt;.</source>
          <target state="translated">올바른 플래그를 사용해야한다고 CMake 코드에 명시 적으로 명시해야합니다. CMake에서 특정 C ++ 표준에 대한 지원을 활성화하는 가장 쉬운 방법은 &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD&quot;&gt; &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; &lt;/a&gt; 변수 를 사용하는 것 입니다. 이 자습서에서는 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 의 &lt;a href=&quot;../../variable/cmake_cxx_standard#variable:CMAKE_CXX_STANDARD&quot; id=&quot;index-1-variable:CMAKE_CXX_STANDARD&quot;&gt; &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; &lt;/a&gt; 변수 를 11로 설정하고 &lt;a href=&quot;../../variable/cmake_cxx_standard_required#variable:CMAKE_CXX_STANDARD_REQUIRED&quot; id=&quot;index-0-variable:CMAKE_CXX_STANDARD_REQUIRED&quot;&gt; &lt;code&gt;CMAKE_CXX_STANDARD_REQUIRED&lt;/code&gt; &lt;/a&gt; 를 True로 설정합니다. &lt;code&gt;add_executable&lt;/code&gt; 에 대한 호출 위에 &lt;code&gt;CMAKE_CXX_STANDARD&lt;/code&gt; 선언 을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6c9c8a5b0f470198e04152c711ba3772f76c5b31" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll need to do some setup to get started. We want to create an executable that when run creates a basic &lt;code&gt;main.cc&lt;/code&gt; file in the current directory. The details of this project are not important. Navigate to &lt;code&gt;Help/guide/importing-exporting/MyExe&lt;/code&gt;, create a build directory, run &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; and build and install the project.</source>
          <target state="translated">시작하려면 몇 가지 설정이 필요합니다. 실행시 현재 디렉터리에 기본 &lt;code&gt;main.cc&lt;/code&gt; 파일 을 만드는 실행 파일을 만들고 싶습니다 . 이 프로젝트의 세부 사항은 중요하지 않습니다. &lt;code&gt;Help/guide/importing-exporting/MyExe&lt;/code&gt; 로 이동하여 빌드 디렉토리를 만들고 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; 를&lt;/a&gt; 실행 하고 프로젝트를 빌드 및 설치합니다.</target>
        </trans-unit>
        <trans-unit id="b5d2f8a2714469d7de9c739971c41ac582ed2084" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re going to use the new defines in &lt;code&gt;TutorialConfig.h.in&lt;/code&gt;, so be sure to set them before that file is configured.</source>
          <target state="translated">&lt;code&gt;TutorialConfig.h.in&lt;/code&gt; 의 새로운 정의를 사용할 것이므로 해당 파일을 구성하기 전에 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="dae3336f51c177e35ea38732ae4fad6af7cf5d33" translate="yes" xml:space="preserve">
          <source>Welcome file to be embedded in the installer. It welcomes users to this installer. Typically used in the graphical installers on Windows and Mac OS X.</source>
          <target state="translated">설치 프로그램에 포함 할 시작 파일입니다. 이 설치 프로그램을 사용자에게 환영합니다. 일반적으로 Windows 및 Mac OS X의 그래픽 설치 프로그램에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="09fb4ca9f8afc006341e4fb3232ed6cd27f12230" translate="yes" xml:space="preserve">
          <source>Well-behaved CMake-based buildsystems do not create any output in the source directory, so typically, the user performs an out-of-source build and performs the build there. First, CMake must be instructed to generate a suitable buildsystem, then the user invokes a build tool to process that generated buildsystem. The generated buildsystem is specific to the machine used to generate it and is not redistributable. Each consumer of a provided source software package is required to use CMake to generate a buildsystem specific to their system.</source>
          <target state="translated">제대로 작동하는 CMake 기반 빌드 시스템은 소스 디렉터리에 출력을 생성하지 않으므로 일반적으로 사용자는 소스 외부 빌드를 수행하고 거기서 빌드를 수행합니다. 먼저 CMake에 적합한 빌드 시스템을 생성하도록 지시 한 다음 사용자가 빌드 도구를 호출하여 생성 된 빌드 시스템을 처리해야합니다. 생성 된 빌드 시스템은이를 생성하는 데 사용 된 머신에 따라 다르며 재배포 할 수 없습니다. 제공된 소스 소프트웨어 패키지의 각 소비자는 CMake를 사용하여 시스템에 특정한 빌드 시스템을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="a96d22124530c5707c8d4ece876e572350658ead" translate="yes" xml:space="preserve">
          <source>Were all of your specified components found?</source>
          <target state="translated">지정한 구성 요소를 모두 찾았습니까?</target>
        </trans-unit>
        <trans-unit id="968e5dce393024a58e8b6f74efab81d97daec9c4" translate="yes" xml:space="preserve">
          <source>What CMake generator should be used if the project is a CMake project. Defaults to the value of &lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt;. Few users will want to change this setting.</source>
          <target state="translated">프로젝트가 CMake 프로젝트 인 경우 사용해야하는 CMake 생성기 기본값은 &lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt; 입니다. 이 설정을 변경하려는 사용자는 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="aec8b8414065be182d282be87c51abfa1a1f390d" translate="yes" xml:space="preserve">
          <source>What CMake is trying to say is that during generating the export information it will export a path that is intrinsically tied to the current machine and will not be valid on other machines. The solution to this is to update the MathFunctions &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-2-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; to understand that it needs different &lt;code&gt;INTERFACE&lt;/code&gt; locations when being used from within the build directory and from an install / package. This means converting the &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-3-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; call for MathFunctions to look like:</source>
          <target state="translated">CMake가 말하려는 것은 내보내기 정보를 생성하는 동안 본질적으로 현재 머신에 연결된 경로를 내보내고 다른 머신에서는 유효하지 않다는 것입니다. 이에 대한 해결책은 MathFunctions &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-2-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 를 업데이트 하여 빌드 디렉토리 및 설치 / 패키지에서 사용할 때 다른 &lt;code&gt;INTERFACE&lt;/code&gt; 위치가 필요함을 이해하는 것 입니다. 이것은 MathFunctions에 대한 &lt;a href=&quot;../../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-3-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 호출을 다음과 같이 변환하는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="6be53bd7410f5e5c60c6d556a8ff49ef4cb5ec1d" translate="yes" xml:space="preserve">
          <source>What comes after the import library name.</source>
          <target state="translated">가져 오기 라이브러리 이름 뒤에 오는 내용</target>
        </trans-unit>
        <trans-unit id="b29c14cd3b665c5bf6685c33ed478e0579999208" translate="yes" xml:space="preserve">
          <source>What comes after the target name.</source>
          <target state="translated">대상 이름 뒤에 오는 것은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="d102d6db5c4d0b0e0d55c37557771ef79b7f078e" translate="yes" xml:space="preserve">
          <source>What comes before the import library name.</source>
          <target state="translated">가져 오기 라이브러리 이름 앞에 오는 내용</target>
        </trans-unit>
        <trans-unit id="062fc15a674883d530ecf519d5b2875bf1e4e20d" translate="yes" xml:space="preserve">
          <source>What comes before the library name.</source>
          <target state="translated">도서관 이름 앞에 무엇이 나오나요?</target>
        </trans-unit>
        <trans-unit id="ea8d1340708c5d52c0e58601743211a52da28028" translate="yes" xml:space="preserve">
          <source>What compatibility version number is this target for Mach-O binaries.</source>
          <target state="translated">Mach-O 바이너리의 대상이되는 호환성 버전 번호는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="46a638d0abd9d001c367f2b715c7841dbb5738d7" translate="yes" xml:space="preserve">
          <source>What current version number is this target for Mach-O binaries.</source>
          <target state="translated">Mach-O 바이너리의 현재 버전 번호는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="0ce5d33b996789615080dd294900d7ca2879bb6b" translate="yes" xml:space="preserve">
          <source>What programming language is the file.</source>
          <target state="translated">파일은 어떤 프로그래밍 언어입니까?</target>
        </trans-unit>
        <trans-unit id="0c2c49a5b4fde72c72cb6e18a12a7f17e11001cc" translate="yes" xml:space="preserve">
          <source>What to do if my project finds a different version of DCMTK?</source>
          <target state="translated">프로젝트에서 다른 버전의 DCMTK를 발견하면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="e1d15c1b66b849a8c73b7d0c8bbe32766174561e" translate="yes" xml:space="preserve">
          <source>What type of dependency has the using project on that package. Default is &lt;code&gt;OPTIONAL&lt;/code&gt;. In this case it is a package which can be used by the project when available at buildtime, but it also work without. &lt;code&gt;RECOMMENDED&lt;/code&gt; is similar to &lt;code&gt;OPTIONAL&lt;/code&gt;, i.e. the project will build if the package is not present, but the functionality of the resulting binaries will be severely limited. If a &lt;code&gt;REQUIRED&lt;/code&gt; package is not available at buildtime, the project may not even build. This can be combined with the &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; argument for &lt;code&gt;feature_summary()&lt;/code&gt;. Last, a &lt;code&gt;RUNTIME&lt;/code&gt; package is a package which is actually not used at all during the build, but which is required for actually running the resulting binaries. So if such a package is missing, the project can still be built, but it may not work later on. If &lt;code&gt;set_package_properties()&lt;/code&gt; is called multiple times for the same package with different TYPEs, the &lt;code&gt;TYPE&lt;/code&gt; is only changed to higher TYPEs (&lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt;), lower TYPEs are ignored. The &lt;code&gt;TYPE&lt;/code&gt; property is project-specific, so it cannot be set by the Find-module, but must be set in the project. Type accepted can be changed by setting the &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-3-variable:FeatureSummary_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="translated">해당 패키지에서 사용중인 프로젝트의 종속성 유형 기본값은 &lt;code&gt;OPTIONAL&lt;/code&gt; 입니다. 이 경우 빌드 타임에 사용 가능할 때 프로젝트에서 사용할 수 있지만 패키지 없이도 사용할 수있는 패키지입니다. &lt;code&gt;RECOMMENDED&lt;/code&gt; 는 &lt;code&gt;OPTIONAL&lt;/code&gt; 과 유사합니다 . 즉, 패키지가 없으면 프로젝트가 빌드되지만 결과 바이너리의 기능이 심각하게 제한됩니다. 경우 &lt;code&gt;REQUIRED&lt;/code&gt; 패키지를 빌드에 사용할 수없는 프로젝트 구축도하지 않을 수 있습니다. &lt;code&gt;feature_summary()&lt;/code&gt; 의 &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; 인수 와 결합 될 수 있습니다 . 마지막으로 &lt;code&gt;RUNTIME&lt;/code&gt; package는 실제로 빌드 중에 전혀 사용되지 않지만 결과 바이너리를 실제로 실행하는 데 필요한 패키지입니다. 따라서 이러한 패키지가 없으면 프로젝트를 계속 빌드 할 수 있지만 나중에 작동하지 않을 수 있습니다. 경우 &lt;code&gt;set_package_properties()&lt;/code&gt; 종류와 같은 패키지에 여러 번 호출의 &lt;code&gt;TYPE&lt;/code&gt; 오직 높은 유형 변경 ( &lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt; ) 하부 유형 무시된다. &lt;code&gt;TYPE&lt;/code&gt; 의 속성은이 찾기 모듈에 의해 설정 될 수는 없지만, 프로젝트 설정해야하므로, 프로젝트 별이다. &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-3-variable:FeatureSummary_PKG_TYPES&quot;&gt; &lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt; &lt;/a&gt; 전역 속성 을 설정하여 허용되는 유형을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d5078d04669c0f21db62b40171926730815cae9" translate="yes" xml:space="preserve">
          <source>What version number is this target.</source>
          <target state="translated">이 대상은 어떤 버전 번호입니까?</target>
        </trans-unit>
        <trans-unit id="59ef25128e0c551b0e7e60288982f26a3fcf4c35" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a custom target &lt;code&gt;autogen&lt;/code&gt; is generated. This target depends on all &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; generated &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; targets in the project. By building the global &lt;code&gt;autogen&lt;/code&gt; target, all &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; files in the project will be generated.</source>
          <target state="translated">때 &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt; 가&lt;/a&gt; 활성화되어, 사용자 지정 대상 &lt;code&gt;autogen&lt;/code&gt; 생성됩니다. 이 대상은 프로젝트의 모든 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 생성 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상에 따라 다릅니다 . 글로벌 &lt;code&gt;autogen&lt;/code&gt; 대상 을 빌드하면 프로젝트의 모든 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 파일이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6ac58e6f10237f7419dcc002116f2a3452c4ab39" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a custom target &lt;code&gt;autorcc&lt;/code&gt; is generated. This target depends on all &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_arcc_&amp;lt;QRC&amp;gt;&lt;/code&gt; targets in the project. By building the global &lt;code&gt;autorcc&lt;/code&gt; target, all &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; files in the project will be generated.</source>
          <target state="translated">때 &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt; 가&lt;/a&gt; 활성화되어, 사용자 지정 대상 &lt;code&gt;autorcc&lt;/code&gt; 가 생성됩니다. 이 대상은 프로젝트에서 생성 된 모든 &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_arcc_&amp;lt;QRC&amp;gt;&lt;/code&gt; 대상에 따라 다릅니다 . 글로벌 &lt;code&gt;autorcc&lt;/code&gt; 대상 을 빌드하면 프로젝트의 모든 &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 파일이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="609cda4b702cef9fc55594f0624cefef9973dbf1" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; and &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;armeabi-v7a&lt;/code&gt; set &lt;code&gt;CMAKE_ANDROID_ARM_NEON&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; to target ARM NEON devices.</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;안드로이드에 대한 크로스 컴파일&lt;/a&gt; 및 &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; 이&lt;/a&gt; 설정되어 &lt;code&gt;armeabi-v7a&lt;/code&gt; 설정 &lt;code&gt;CMAKE_ANDROID_ARM_NEON&lt;/code&gt; 에 &lt;code&gt;ON&lt;/code&gt; ARM NEON 장치를 대상으로한다.</target>
        </trans-unit>
        <trans-unit id="f3400d37f5bc1ad4d363f8bde79f30c5754a30d7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; and &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; is set to one of the &lt;code&gt;armeabi&lt;/code&gt; architectures, set &lt;code&gt;CMAKE_ANDROID_ARM_MODE&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; to target 32-bit ARM processors (&lt;code&gt;-marm&lt;/code&gt;). Otherwise, the default is to target the 16-bit Thumb processors (&lt;code&gt;-mthumb&lt;/code&gt;).</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;안드로이드에 대한 크로스 컴파일&lt;/a&gt; 및 &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; 이&lt;/a&gt; 중 하나에 설정되어 &lt;code&gt;armeabi&lt;/code&gt; 아키텍처, 설정 &lt;code&gt;CMAKE_ANDROID_ARM_MODE&lt;/code&gt; 에 &lt;code&gt;ON&lt;/code&gt; 은 32 비트 ARM 프로세서 (대상으로 &lt;code&gt;-marm&lt;/code&gt; )를. 그렇지 않으면 기본값은 16 비트 Thumb 프로세서 ( &lt;code&gt;-mthumb&lt;/code&gt; ) 를 대상으로하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="f8e8469fa8097dccbf10f318328bf633776e669a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; this variable contains the absolute path prefixing the toolchain GNU compiler and its binutils.</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;크로스 컴파일은 안드로이드에 대한&lt;/a&gt; 이 변수는 툴체인 GNU 컴파일러와 binutils의 접두어 절대 경로를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="14d2248f4ab5b17c082477fec6b28cf622fc0e4a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; this variable contains the host platform suffix of the toolchain GNU compiler and its binutils.</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;크로스 컴파일은 안드로이드에 대한&lt;/a&gt; 이 변수는 툴체인 GNU 컴파일러와 바이너리 유틸리티의 호스트 플랫폼 접미사가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="912edf3e6a48a7cc458b9c7267a4a2f85d74790d" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; this variable contains the toolchain binutils machine name (e.g. &lt;code&gt;gcc -dumpmachine&lt;/code&gt;). The binutils typically have a &lt;code&gt;&amp;lt;machine&amp;gt;-&lt;/code&gt; prefix on their name.</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;크로스 컴파일 안드로이드에 대한&lt;/a&gt; 이 변수가 툴체인의 바이너리 유틸리티 기계 이름을 포함하는 (예를 들어 &lt;code&gt;gcc -dumpmachine&lt;/code&gt; ). binutils는 일반적으로 이름에 &lt;code&gt;&amp;lt;machine&amp;gt;-&lt;/code&gt; 접두사가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc247f0561a4c147612e0bb30138b90cd8613323" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable specifies the target architecture and ABI to be used. Valid values are:</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;크로스 컴파일은 안드로이드&lt;/a&gt; ,이 변수가 타겟 아키텍처와 ABI를 지정하는 데 사용합니다. 유효한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="55da4ec3f10c2f11cf6f6e8c4bf644091983ddf7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-a-standalone-toolchain&quot;&gt;Cross Compiling for Android with a Standalone Toolchain&lt;/a&gt;, this variable holds the absolute path to the root directory of the toolchain. The specified directory must contain a &lt;code&gt;sysroot&lt;/code&gt; subdirectory.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-a-standalone-toolchain&quot;&gt;독립형 Toolchain을 사용하여 Android에서 크로스 컴파일&lt;/a&gt; 할 때이 변수는 툴체인의 루트 디렉토리에 대한 절대 경로를 보유합니다. 지정된 디렉토리는 &lt;code&gt;sysroot&lt;/code&gt; 서브 디렉토리를 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0636b5c728332ef23123a7ac768c802f3205eb58" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property sets the Android target API version (e.g. &lt;code&gt;15&lt;/code&gt;). The version number must be a positive decimal integer. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_api#variable:CMAKE_ANDROID_API&quot; id=&quot;index-0-variable:CMAKE_ANDROID_API&quot;&gt;&lt;code&gt;CMAKE_ANDROID_API&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition을 사용하여 Android에 대해 크로스 컴파일&lt;/a&gt; 할 때이 속성은 Android 대상 API 버전 (예 : &lt;code&gt;15&lt;/code&gt; )을 설정합니다. 버전 번호는 양의 십진 정수 여야합니다. 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_android_api#variable:CMAKE_ANDROID_API&quot; id=&quot;index-0-variable:CMAKE_ANDROID_API&quot;&gt; &lt;code&gt;CMAKE_ANDROID_API&lt;/code&gt; &lt;/a&gt; 변수 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4e25abdda308d913d5efff81db6503cb91c7ba08" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property sets the Android target architecture.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition을 사용하여 Android에서 크로스 컴파일&lt;/a&gt; 할 때이 속성은 Android 대상 아키텍처를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9befa485f7ebf18c2ae84092dc78fc363e0ea447" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property specifies the type of STL support for the project. This is a string property that could set to the one of the following values:</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition을 사용하여 Android에서 크로스 컴파일&lt;/a&gt; 할 때이 속성은 프로젝트에 대한 STL 지원 유형을 지정합니다. 다음 값 중 하나로 설정할 수있는 문자열 특성입니다.</target>
        </trans-unit>
        <trans-unit id="a68fb2aae894aa288773e9d32d922febd56e0d8c" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property specifies whether to build an executable as an application package on Android.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition으로 Android 용 크로스 컴파일을 수행&lt;/a&gt; 할 때이 속성은 Android에서 응용 프로그램 패키지로 실행 파일을 빌드할지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="076fda0013f852981a7815e10e3bd97af4729b96" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this variable may be set to specify the default value for the &lt;a href=&quot;../prop_tgt/android_api#prop_tgt:ANDROID_API&quot; id=&quot;index-0-prop_tgt:ANDROID_API&quot;&gt;&lt;code&gt;ANDROID_API&lt;/code&gt;&lt;/a&gt; target property. See that target property for additional information.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt; 을 사용하여 Android에 대해 크로스 컴파일 할 때이 변수는 &lt;a href=&quot;../prop_tgt/android_api#prop_tgt:ANDROID_API&quot; id=&quot;index-0-prop_tgt:ANDROID_API&quot;&gt; &lt;code&gt;ANDROID_API&lt;/code&gt; &lt;/a&gt; 대상 속성 의 기본값을 지정하도록 설정 될 수 있습니다 . 추가 정보는 해당 대상 특성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="04ebd6cfbe98d36d6b545f3853af03a0c3cd5cd7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this variable may be set to specify the default value for the &lt;a href=&quot;../prop_tgt/android_arch#prop_tgt:ANDROID_ARCH&quot; id=&quot;index-0-prop_tgt:ANDROID_ARCH&quot;&gt;&lt;code&gt;ANDROID_ARCH&lt;/code&gt;&lt;/a&gt; target property. See that target property for additional information.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt; 을 사용하여 Android에서 크로스 컴파일 할 때이 변수는 &lt;a href=&quot;../prop_tgt/android_arch#prop_tgt:ANDROID_ARCH&quot; id=&quot;index-0-prop_tgt:ANDROID_ARCH&quot;&gt; &lt;code&gt;ANDROID_ARCH&lt;/code&gt; &lt;/a&gt; 대상 속성 의 기본값을 지정하도록 설정 될 수 있습니다 . 추가 정보는 해당 대상 특성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a6592c01ed0e92fb09de0808ab36420b001b0652" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this variable may be set to specify the default value for the &lt;a href=&quot;../prop_tgt/android_stl_type#prop_tgt:ANDROID_STL_TYPE&quot; id=&quot;index-0-prop_tgt:ANDROID_STL_TYPE&quot;&gt;&lt;code&gt;ANDROID_STL_TYPE&lt;/code&gt;&lt;/a&gt; target property. See that target property for additional information.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt; 을 사용하여 Android에서 크로스 컴파일 할 때이 변수는 &lt;a href=&quot;../prop_tgt/android_stl_type#prop_tgt:ANDROID_STL_TYPE&quot; id=&quot;index-0-prop_tgt:ANDROID_STL_TYPE&quot;&gt; &lt;code&gt;ANDROID_STL_TYPE&lt;/code&gt; &lt;/a&gt; 대상 속성 의 기본값을 지정하도록 설정 될 수 있습니다 . 추가 정보는 해당 대상 특성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cfd3700294fabf996e7a6946c39cdc98958c7832" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable holds the absolute path to the root directory of the NDK. The directory must contain a &lt;code&gt;platforms&lt;/code&gt; subdirectory holding the &lt;code&gt;android-&amp;lt;api&amp;gt;&lt;/code&gt; directories.</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;크로스 컴파일은 NDK와 안드로이드&lt;/a&gt; ,이 변수는 NDK의 루트 디렉토리에 대한 절대 경로를 보유하고 있습니다. 디렉토리에는 &lt;code&gt;android-&amp;lt;api&amp;gt;&lt;/code&gt; 디렉토리를 보유 하는 &lt;code&gt;platforms&lt;/code&gt; 서브 디렉토리가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="bd1d5a53b16ad89cefd71d674672aa7668325cb7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable may be set to specify the STL variant to be used. The value may be one of:</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;크로스 컴파일은 NDK와 안드로이드&lt;/a&gt; ,이 변수가 STL의 변형을 지정하기 위해 설정 될 수있다. 값은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="075168d8e09710786f27db90e1099ce0c4492889" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable may be set to specify the version of the toolchain to be used as the compiler.</source>
          <target state="translated">때 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;크로스 컴파일은 NDK와 안드로이드&lt;/a&gt; ,이 변수가 툴체인의 버전을 지정하도록 설정 될 수 컴파일러로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b016e51dfd5e4b7c1d8a2a7c619e86fc6bd3ad0b" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable may be set to specify the version of the toolchain to be used as the compiler. The variable must be set to one of these forms:</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;NDK를 사용하여 Android에 대해 크로스 컴파일&lt;/a&gt; 할 때이 변수는 컴파일러로 사용할 도구 체인의 버전을 지정하도록 설정 될 수 있습니다. 변수는 다음 형식 중 하나로 설정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b2587023935e7a8ce42e4954eb96ee99cc390db0" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable may be set to specify whether to use the deprecated per-api-level headers instead of the unified headers.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;NDK를 사용하여 Android에서 크로스 컴파일&lt;/a&gt; 할 때이 변수는 통합 헤더 대신 더 이상 사용되지 않는 API 레벨 별 헤더를 사용할지 여부를 지정하도록 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e00e3387e9a6ffbcd0b9a6a86f9674065ce9b3ff" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable provides the NDK&amp;rsquo;s &amp;ldquo;host tag&amp;rdquo; used to construct the path to prebuilt toolchains that run on the host.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;NDK를 사용하여 Android에 대해 크로스 컴파일&lt;/a&gt; 할 때이 변수는 호스트에서 실행되는 사전 빌드 된 툴체인의 경로를 구성하는 데 사용되는 NDK의 &quot;호스트 태그&quot;를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7c9c6f9c3f95451ed03f97d7d43669a49faa8331" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a global custom target named &lt;code&gt;autogen&lt;/code&gt; is created. &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt;&lt;/a&gt; allows to set a different name for that target.</source>
          <target state="translated">&lt;a href=&quot;cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt; &lt;/a&gt; 을 사용 하면 &lt;code&gt;autogen&lt;/code&gt; 이라는 글로벌 사용자 정의 대상 이 작성됩니다. &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt; 을&lt;/a&gt; 사용하면 해당 대상에 다른 이름을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00aa00fb98a46f8e22b3398813543ce2793ac815" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a custom target &lt;code&gt;autogen&lt;/code&gt; is generated. This target depends on all &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; generated &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; targets in the project. By building the global &lt;code&gt;autogen&lt;/code&gt; target, all &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; files in the project will be generated.</source>
          <target state="translated">때 &lt;a href=&quot;cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt; 가&lt;/a&gt; 활성화되어, 사용자 지정 대상 &lt;code&gt;autogen&lt;/code&gt; 생성됩니다. 이 대상은 프로젝트에서 생성 된 모든 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상에 따라 다릅니다 . 글로벌 &lt;code&gt;autogen&lt;/code&gt; 대상 을 빌드하면 프로젝트의 모든 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 파일이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="80dfbe5f1caf20685486a25d27470557a7f1c6f5" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a global custom target named &lt;code&gt;autorcc&lt;/code&gt; is created. &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt;&lt;/a&gt; allows to set a different name for that target.</source>
          <target state="translated">때 &lt;a href=&quot;cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt; 가&lt;/a&gt; 활성화되어, 글로벌 사용자 대상의 이름 &lt;code&gt;autorcc&lt;/code&gt; 가 생성됩니다. &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt; &lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt; 을&lt;/a&gt; 사용하면 해당 대상에 다른 이름을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d03107a1a112451ecbc0116bf6271f6a3b3d91b" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-2-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt;&lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; are not given, &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-1-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-2-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; are used for the version details to be embedded in the binaries respectively. The &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-3-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt;&lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; properties only need to be given if the project needs to decouple the file and symlink naming from the version details embedded in the binaries (e.g. to match libtool conventions).</source>
          <target state="translated">때 &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-2-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt; &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; 이 제공되지 않습니다, &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-1-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-2-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; 는&lt;/a&gt; 버전 세부 사항은 각각 바이너리에 포함되어야하는 데 사용됩니다. &lt;a href=&quot;macho_current_version#prop_tgt:MACHO_CURRENT_VERSION&quot; id=&quot;index-3-prop_tgt:MACHO_CURRENT_VERSION&quot;&gt; &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; 프로젝트 요구 바이너리에 포함 된 버전 정보에서 파일과 심볼릭 링크 이름을 분리 할 경우 속성 만 부여 할 필요 (예 : libtool이 규칙과 일치합니다).</target>
        </trans-unit>
        <trans-unit id="786c4a67fa722fa624477580ca5302b5837fed80" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; is &lt;code&gt;NVIDIA&lt;/code&gt;, &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; selects the compiler executable to use when compiling host code for &lt;code&gt;CUDA&lt;/code&gt; language files. This maps to the &lt;code&gt;nvcc -ccbin&lt;/code&gt; option.</source>
          <target state="translated">때 &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; 가 있다 &lt;code&gt;NVIDIA&lt;/code&gt; 는 , &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; 을 위해 호스트 코드를 컴파일 할 때 사용하는 컴파일러 실행 파일을 선택 &lt;code&gt;CUDA&lt;/code&gt; 의 언어 파일. 이는 &lt;code&gt;nvcc -ccbin&lt;/code&gt; 옵션에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="85ded6e397c3056ef32633200059b244dc77e96a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;CMAKE_NINJA_OUTPUT_PATH_PREFIX&lt;/code&gt; is set, the project generated by CMake cannot be used as a standalone project. No default targets are specified.</source>
          <target state="translated">&lt;code&gt;CMAKE_NINJA_OUTPUT_PATH_PREFIX&lt;/code&gt; 가 설정 되면 CMake에 의해 생성 된 프로젝트를 독립형 프로젝트로 사용할 수 없습니다. 기본 대상이 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="9ac89f010e821df81f8560f5c3b9d68c0641ecc9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;GIT_TAG&lt;/code&gt; refers to a remote branch, this option can be used to specify how the update step behaves. The &lt;code&gt;&amp;lt;strategy&amp;gt;&lt;/code&gt; must be one of the following:</source>
          <target state="translated">&lt;code&gt;GIT_TAG&lt;/code&gt; 가 원격 분기를 참조 할 때이 옵션을 사용하여 업데이트 단계의 작동 방식을 지정할 수 있습니다. &lt;code&gt;&amp;lt;strategy&amp;gt;&lt;/code&gt; 다음 중 하나 여야합니다 :</target>
        </trans-unit>
        <trans-unit id="7be1454cbdf0ec04f28b27e7b8ae8d023809d43e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;IronPython&lt;/code&gt; is specified, on platforms other than &lt;code&gt;Windows&lt;/code&gt;, the &lt;code&gt;.Net&lt;/code&gt; interpreter (i.e. &lt;code&gt;mono&lt;/code&gt; command) is expected to be available through the &lt;code&gt;PATH&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;IronPython&lt;/code&gt; 이 지정 되면 &lt;code&gt;Windows&lt;/code&gt; 이외의 플랫폼 에서 &lt;code&gt;.Net&lt;/code&gt; 인터프리터 (예 : &lt;code&gt;mono&lt;/code&gt; 명령)는 &lt;code&gt;PATH&lt;/code&gt; 변수를 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="700401ba310864a3b0b3ccb78413da176cea4e3c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; and &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-2-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt;&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt;&lt;/a&gt; are not given, &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-1-prop_tgt:VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-2-prop_tgt:SOVERSION&quot;&gt;&lt;code&gt;SOVERSION&lt;/code&gt;&lt;/a&gt; are used for the version details to be embedded in the binaries respectively. The &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; and &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-3-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt;&lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt;&lt;/a&gt; properties only need to be given if the project needs to decouple the file and symlink naming from the version details embedded in the binaries (e.g. to match libtool conventions).</source>
          <target state="translated">때 &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; 및 &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-2-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt; &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; 이&lt;/a&gt; 제공되지 않습니다, &lt;a href=&quot;version#prop_tgt:VERSION&quot; id=&quot;index-1-prop_tgt:VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;soversion#prop_tgt:SOVERSION&quot; id=&quot;index-2-prop_tgt:SOVERSION&quot;&gt; &lt;code&gt;SOVERSION&lt;/code&gt; 는&lt;/a&gt; 버전 세부 사항은 각각 바이너리에 포함되어야하는 데 사용됩니다. &lt;code&gt;MACHO_CURRENT_VERSION&lt;/code&gt; 및 &lt;a href=&quot;macho_compatibility_version#prop_tgt:MACHO_COMPATIBILITY_VERSION&quot; id=&quot;index-3-prop_tgt:MACHO_COMPATIBILITY_VERSION&quot;&gt; &lt;code&gt;MACHO_COMPATIBILITY_VERSION&lt;/code&gt; &lt;/a&gt; 프로젝트 요구 바이너리에 포함 된 버전 정보에서 파일과 심볼릭 링크 이름을 분리 할 경우 속성 만 부여 할 필요 (예 : libtool이 규칙과 일치합니다).</target>
        </trans-unit>
        <trans-unit id="bf9c1bbfb43690cb35a97c9032e14608b14ea30a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;NAMELINK_ONLY&lt;/code&gt; is given, either &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; or &lt;code&gt;COMPONENT&lt;/code&gt; may be used to specify the installation component of the namelink, but &lt;code&gt;COMPONENT&lt;/code&gt; should generally be preferred.</source>
          <target state="translated">경우 &lt;code&gt;NAMELINK_ONLY&lt;/code&gt; 가 주어진 어느 &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; 또는 &lt;code&gt;COMPONENT&lt;/code&gt; namelink 설치하는 구성 요소를 지정하는데 이용 될 수 있지만, &lt;code&gt;COMPONENT&lt;/code&gt; 일반적으로 바람직 할 것이다.</target>
        </trans-unit>
        <trans-unit id="7c802f538f435c8b1a3a86f17a591f5a707b1610" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;ctest&lt;/code&gt; is run as a &lt;a href=&quot;#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt; this sets the &lt;code&gt;ResourceSpecFile&lt;/code&gt; option of the &lt;a href=&quot;#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ctest&lt;/code&gt; 가 &lt;a href=&quot;#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt; 로 실행 되면 CTest &lt;a href=&quot;#ctest-test-step&quot;&gt;테스트 단계&lt;/a&gt; 의 &lt;code&gt;ResourceSpecFile&lt;/code&gt; 옵션 이 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="ca5c8eea584a64f26e79b5e082fcaf4951ca8a56" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;ctest&lt;/code&gt; is run as a &lt;a href=&quot;#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt; this sets the &lt;code&gt;TestLoad&lt;/code&gt; option of the &lt;a href=&quot;#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;ctest&lt;/code&gt; 는 A와 실행 &lt;a href=&quot;#dashboard-client&quot;&gt;대시 보드 고객&lt;/a&gt; 이 설정합니다 &lt;code&gt;TestLoad&lt;/code&gt; 의 의 옵션 &lt;a href=&quot;#ctest-test-step&quot;&gt;CTest 시험 단계&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0be86d1fda1b309a4b30ecfa1f2d98bec4b6415e" translate="yes" xml:space="preserve">
          <source>When CMake configures this header file the values for &lt;code&gt;@Tutorial_VERSION_MAJOR@&lt;/code&gt; and &lt;code&gt;@Tutorial_VERSION_MINOR@&lt;/code&gt; will be replaced.</source>
          <target state="translated">CMake가이 헤더 파일을 구성 할 때 &lt;code&gt;@Tutorial_VERSION_MAJOR@&lt;/code&gt; 및 &lt;code&gt;@Tutorial_VERSION_MINOR@&lt;/code&gt; 값이 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="6829c0db8b7175b0bec907b36ade25e6a40a8e4a" translate="yes" xml:space="preserve">
          <source>When CMake is executed, it needs to find the locations of compilers, tools and dependencies. It also needs to be able to consistently re-generate a buildsystem to use the same compile/link flags and paths to dependencies. Such parameters are also required to be configurable by the user because they are paths and options specific to the users system.</source>
          <target state="translated">CMake가 실행되면 컴파일러, 도구 및 종속성의 위치를 ​​찾아야합니다. 또한 동일한 컴파일 / 링크 플래그 및 종속성 경로를 사용하기 위해 빌드 시스템을 일관되게 재생성 할 수 있어야합니다. 이러한 매개 변수는 사용자 시스템에 특정한 경로 및 옵션이기 때문에 사용자가 구성 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8860af8d81e79e01d4bb55aa46d4a8954068b8f1" translate="yes" xml:space="preserve">
          <source>When CMake is first run in an empty build tree, it creates a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file and populates it with customizable settings for the project. This option may be used to specify a file from which to load cache entries before the first pass through the project&amp;rsquo;s CMake listfiles. The loaded entries take priority over the project&amp;rsquo;s default values. The given file should be a CMake script containing &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; commands that use the &lt;code&gt;CACHE&lt;/code&gt; option, not a cache-format file.</source>
          <target state="translated">CMake가 빈 빌드 트리에서 처음 실행될 때 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 파일을 작성 하고 프로젝트의 사용자 정의 가능한 설정으로 파일을 채 웁니다. 이 옵션은 프로젝트의 CMake 목록 파일을 처음 통과하기 전에 캐시 항목을로드 할 파일을 지정하는 데 사용될 수 있습니다. 로드 된 항목은 프로젝트의 기본값보다 우선합니다. 제공된 파일은 캐시 형식 파일이 아니라 &lt;code&gt;CACHE&lt;/code&gt; 옵션 을 사용 하는 &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-0-command:set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt; 명령을 포함하는 CMake 스크립트 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="6b3404ccab1254d7e6e57ce8d0dca2136757381a" translate="yes" xml:space="preserve">
          <source>When CMake is first run in an empty build tree, it creates a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file and populates it with customizable settings for the project. This option may be used to specify a setting that takes priority over the project&amp;rsquo;s default value. The option may be repeated for as many &lt;code&gt;CACHE&lt;/code&gt; entries as desired.</source>
          <target state="translated">CMake가 빈 빌드 트리에서 처음 실행될 때 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 파일을 작성 하고 프로젝트의 사용자 정의 가능한 설정으로 파일을 채 웁니다. 이 옵션은 프로젝트의 기본값보다 우선하는 설정을 지정하는 데 사용될 수 있습니다. 원하는 만큼 많은 &lt;code&gt;CACHE&lt;/code&gt; 항목에 대해 옵션을 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc0587b738eafa7dc2f7944a35f8fa8aa111b74b" translate="yes" xml:space="preserve">
          <source>When CMake processes a project source tree, the entry point is a source file called &lt;code&gt;CMakeLists.txt&lt;/code&gt; in the top-level source directory. This file may contain the entire build specification or use the &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; command to add subdirectories to the build. Each subdirectory added by the command must also contain a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file as the entry point to that directory. For each source directory whose &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is processed CMake generates a corresponding directory in the build tree to act as the default working and output directory.</source>
          <target state="translated">CMake가 프로젝트 소스 트리를 처리 할 때 진입 점은 최상위 소스 디렉토리에있는 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 라는 소스 파일 입니다. 이 파일은 전체 빌드 스펙을 포함하거나 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 명령을 사용 하여 빌드에 서브 디렉토리를 추가 할 수 있습니다. 명령으로 추가 된 각 서브 디렉토리에는 해당 디렉토리의 시작점으로 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 도 포함되어야합니다 . &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일이 처리되는 각 소스 디렉토리에 대해 CMake는 빌드 트리에서 기본 작업 및 출력 디렉토리로 작동하는 해당 디렉토리를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5e9674a45c12f859fd162b77bd177884394e90b6" translate="yes" xml:space="preserve">
          <source>When CMake processes the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, it will download and unpack the tarball into &lt;code&gt;_deps/mycompany_toolchains-src&lt;/code&gt; relative to the build directory. The &lt;a href=&quot;../variable/cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable is not used until the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is reached, at which point CMake looks for the named toolchain file relative to the build directory. Because the tarball has already been downloaded and unpacked by then, the toolchain file will be in place, even the very first time that &lt;code&gt;cmake&lt;/code&gt; is run in the build directory.</source>
          <target state="translated">CMake는 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 처리 할 때 tarball을 빌드 디렉토리와 관련된 &lt;code&gt;_deps/mycompany_toolchains-src&lt;/code&gt; 에 다운로드하여 압축을 풉니 다 . &lt;a href=&quot;../variable/cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt; &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; 의&lt;/a&gt; 변수가 될 때까지 사용하지 않는 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령이되는 빌드 디렉토리에 파일의 상대 툴체인 이름에 대한 CMake의 모습 지점에 도달한다. tarball이 이미 다운로드되어 압축이 풀 렸기 때문에 &lt;code&gt;cmake&lt;/code&gt; 가 빌드 디렉토리에서 처음 실행될 때조차 툴체인 파일이 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="87f0c566bdbebb1f031e09aa21de8d5059345882" translate="yes" xml:space="preserve">
          <source>When CTest is asked to execute only a subset of tests (e.g. by the use of regular expressions or when run with the &lt;code&gt;--rerun-failed&lt;/code&gt; command line option), it will automatically add any setup or cleanup tests for fixtures required by any of the tests that are in the execution set. This behavior can be overridden with the &lt;code&gt;-FS&lt;/code&gt;, &lt;code&gt;-FC&lt;/code&gt; and &lt;code&gt;-FA&lt;/code&gt; command line options to &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; if desired.</source>
          <target state="translated">CTest에 테스트의 하위 집합 만 실행하도록 요청하면 (예 : 정규식을 사용하거나 &lt;code&gt;--rerun-failed&lt;/code&gt; 명령 줄 옵션을 사용하여 실행하는 경우 ), 테스트에 필요한 설비에 대한 설정 또는 정리 테스트를 자동으로 추가합니다. 실행 세트에있는 테스트 이 동작은 원하는 경우 &lt;code&gt;-FS&lt;/code&gt; , &lt;code&gt;-FC&lt;/code&gt; 및 &lt;code&gt;-FA&lt;/code&gt; 명령 행 옵션을 사용하여 ctest &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 로 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b85539fd6ab27fcf734f5bff6e358f0f2d2df9c6" translate="yes" xml:space="preserve">
          <source>When CTest runs a test, the resources allocated to that test are passed in the form of a set of &lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;environment variables&lt;/a&gt; as described below. Using this information to decide which resource to connect to is left to the test writer.</source>
          <target state="translated">CTest가 테스트를 실행할 때 해당 테스트에 할당 된 리소스 는 아래에 설명 된 &lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;환경 변수&lt;/a&gt; 집합의 형태로 전달 됩니다. 이 정보를 사용하여 연결할 리소스를 테스트 작성자에게 맡깁니다.</target>
        </trans-unit>
        <trans-unit id="b3c4c14ce1edf363d972b56e66b18db22c4a8653" translate="yes" xml:space="preserve">
          <source>When CTest sets the &lt;a href=&quot;../manual/ctest.1#ctest-resource-environment-variables&quot;&gt;environment variables&lt;/a&gt; for a test, it assigns a group number based on the group description, starting at 0 on the left and the number of groups minus 1 on the right. For example, in the example above, the two groups in the first description would have IDs of 0 and 1, and the single group in the second description would have an ID of 2.</source>
          <target state="translated">CTest는 테스트에 대한 &lt;a href=&quot;../manual/ctest.1#ctest-resource-environment-variables&quot;&gt;환경 변수&lt;/a&gt; 를 설정할 때 그룹 설명에 따라 그룹 번호를 할당합니다. 그룹 번호는 왼쪽에 0부터 시작하고 오른쪽에 1을 뺀 그룹 수입니다. 예를 들어, 위의 예에서 첫 번째 설명의 두 그룹은 0과 1의 ID를 가지며 두 번째 설명의 단일 그룹은 2의 ID를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="2b19eb214593d687c3d2f50181c8abfc8703ecfa" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version higher than 2.4 is specified the command implicitly invokes</source>
          <target state="translated">때 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 이상 2.4 이상의 버전 명령을 지정 내재적 원용</target>
        </trans-unit>
        <trans-unit id="f72ac0a01779d9f77ed0e9c7e1175dcb93400121" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;COMPONENT&lt;/code&gt; option is given, the listed &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; implicitly depends on all components mentioned in the export set. The exported &lt;code&gt;&amp;lt;name&amp;gt;.cmake&lt;/code&gt; file will require each of the exported components to be present in order for dependent projects to build properly. For example, a project may define components &lt;code&gt;Runtime&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt;, with shared libraries going into the &lt;code&gt;Runtime&lt;/code&gt; component and static libraries and headers going into the &lt;code&gt;Development&lt;/code&gt; component. The export set would also typically be part of the &lt;code&gt;Development&lt;/code&gt; component, but it would export targets from both the &lt;code&gt;Runtime&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt; components. Therefore, the &lt;code&gt;Runtime&lt;/code&gt; component would need to be installed if the &lt;code&gt;Development&lt;/code&gt; component was installed, but not vice versa. If the &lt;code&gt;Development&lt;/code&gt; component was installed without the &lt;code&gt;Runtime&lt;/code&gt; component, dependent projects that try to link against it would have build errors. Package managers, such as APT and RPM, typically handle this by listing the &lt;code&gt;Runtime&lt;/code&gt; component as a dependency of the &lt;code&gt;Development&lt;/code&gt; component in the package metadata, ensuring that the library is always installed if the headers and CMake export file are present.</source>
          <target state="translated">때 &lt;code&gt;COMPONENT&lt;/code&gt; 의 옵션이 주어 나열된 &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; 암시 적으로 수출 세트에서 언급 된 모든 구성 요소에 따라 달라집니다. 내 보낸 &lt;code&gt;&amp;lt;name&amp;gt;.cmake&lt;/code&gt; 파일에는 종속 프로젝트가 제대로 빌드 되려면 내 보낸 각 구성 요소가 있어야합니다. 예를 들어, 프로젝트는 공유 라이브러리가 &lt;code&gt;Runtime&lt;/code&gt; 컴포넌트 로 들어가고 정적 라이브러리 및 헤더가 &lt;code&gt;Development&lt;/code&gt; 컴포넌트 로 &lt;code&gt;Runtime&lt;/code&gt; 및 &lt;code&gt;Development&lt;/code&gt; 컴포넌트를 정의 할 수 있습니다 . 내보내기 세트는 일반적으로 &lt;code&gt;Development&lt;/code&gt; 컴포넌트의 일부 이지만 &lt;code&gt;Runtime&lt;/code&gt; 및 &lt;code&gt;Development&lt;/code&gt; 모두에서 대상을 내보내는 경우구성 요소. 따라서 &lt;code&gt;Development&lt;/code&gt; 구성 요소가 설치된 경우 &lt;code&gt;Runtime&lt;/code&gt; 구성 요소를 설치해야 하지만 그 반대의 경우는 아닙니다. &lt;code&gt;Runtime&lt;/code&gt; 구성 요소 없이 &lt;code&gt;Development&lt;/code&gt; 구성 요소를 설치 한 경우 이를 연결하려고하는 종속 프로젝트에는 빌드 오류가 발생합니다. APT 및 RPM과 같은 패키지 관리자는 일반적으로 &lt;code&gt;Runtime&lt;/code&gt; 구성 요소를 패키지 메타 데이터에 &lt;code&gt;Development&lt;/code&gt; 구성 요소 의 종속성으로 나열하여이를 처리 하여 헤더 및 CMake 내보내기 파일이있는 경우 라이브러리가 항상 설치되도록합니다.</target>
        </trans-unit>
        <trans-unit id="3fe36e642a5e8c11faae45b292d144bf5a4ea04f" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;VERSION &amp;lt;major&amp;gt;[.&amp;lt;minor&amp;gt;[.&amp;lt;patch&amp;gt;[.&amp;lt;tweak&amp;gt;]]]]&lt;/code&gt; argument is given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, it stores the version string in the &lt;code&gt;PROJECT_VERSION&lt;/code&gt; variable and stores individual integer version components in &lt;code&gt;PROJECT_VERSION_{MAJOR,MINOR,PATCH,TWEAK}&lt;/code&gt; variables (see policy &lt;a href=&quot;cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt;&lt;code&gt;CMP0048&lt;/code&gt;&lt;/a&gt;). CMake 3.15 and below dropped leading zeros from each component. CMake 3.16 and higher prefer to preserve leading zeros. This policy provides compatibility for projects that have not been updated to expect the new behavior.</source>
          <target state="translated">경우 &lt;code&gt;VERSION &amp;lt;major&amp;gt;[.&amp;lt;minor&amp;gt;[.&amp;lt;patch&amp;gt;[.&amp;lt;tweak&amp;gt;]]]]&lt;/code&gt; 인자가 부여된다 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 커맨드, 상기 버전 문자열 기억 &lt;code&gt;PROJECT_VERSION&lt;/code&gt; 의 가변 저장 개별 정수 버전 컴포넌트 에 &lt;code&gt;PROJECT_VERSION_{MAJOR,MINOR,PATCH,TWEAK}&lt;/code&gt; 변수 (정책 참조 &lt;a href=&quot;cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt; &lt;code&gt;CMP0048&lt;/code&gt; 을&lt;/a&gt; ). CMake 3.15 이하에서는 각 구성 요소에서 선행 0을 삭제했습니다. CMake 3.16 이상은 선행 0을 유지하는 것을 선호합니다. 이 정책은 새로운 동작을 예상하도록 업데이트되지 않은 프로젝트에 대한 호환성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6596a4d31d10beecbbb7f80df83983cacca7017e" translate="yes" xml:space="preserve">
          <source>When a custom fetch script fails to fetch the requested content, it must set this variable to a short one-line message describing the reason for failure.</source>
          <target state="translated">사용자 정의 페치 스크립트가 요청 된 컨텐츠를 페치하지 못하면이 변수를 실패 이유를 설명하는 짧은 한 줄 메시지로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="583e2f49cbfecaef4b19210f1f9e8a8f4813be38" translate="yes" xml:space="preserve">
          <source>When a custom fetch script is loaded, this variable is set to the full path to a file in which the script must store the fetched content. The name of the file is unspecified and should not be interpreted in any way.</source>
          <target state="translated">사용자 정의 페치 스크립트가로드되면이 변수는 스크립트가 페치 된 컨텐츠를 저장해야하는 파일의 전체 경로로 설정됩니다. 파일 이름이 지정되어 있지 않으며 어떤 식으로도 해석해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="85d7e50258c9f83a792d37602fbde8919ef3c827" translate="yes" xml:space="preserve">
          <source>When a custom fetch script is loaded, this variable is set to the location part of the URL, which will contain the substituted hash algorithm name and content hash value.</source>
          <target state="translated">사용자 정의 페치 스크립트가로드되면이 변수는 URL의 위치 부분으로 설정되며 대체 해시 알고리즘 이름 및 컨텐츠 해시 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ed6d727c38fac18f2fe0e602011c2a7a9b948b0f" translate="yes" xml:space="preserve">
          <source>When a data file must be fetched from one of the URL templates specified in the &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; variable, it is normally downloaded using the &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(DOWNLOAD)&lt;/code&gt;&lt;/a&gt; command. One may specify usage of a custom fetch script by using a URL template of the form &lt;code&gt;ExternalDataCustomScript://&amp;lt;key&amp;gt;/&amp;lt;loc&amp;gt;&lt;/code&gt;. The &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; must be a C identifier, and the &lt;code&gt;&amp;lt;loc&amp;gt;&lt;/code&gt; must contain the &lt;code&gt;%(algo)&lt;/code&gt; and &lt;code&gt;%(hash)&lt;/code&gt; placeholders. A variable corresponding to the key, &lt;code&gt;ExternalData_CUSTOM_SCRIPT_&amp;lt;key&amp;gt;&lt;/code&gt;, must be set to the full path to a &lt;code&gt;.cmake&lt;/code&gt; script file. The script will be included to perform the actual fetch, and provided with the following variables:</source>
          <target state="translated">&lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; 변수에 지정된 URL 템플릿 중 하나에서 데이터 파일을 가져와야 하는 경우 일반적으로 &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(DOWNLOAD)&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 다운로드 됩니다. &lt;code&gt;ExternalDataCustomScript://&amp;lt;key&amp;gt;/&amp;lt;loc&amp;gt;&lt;/code&gt; 형식의 URL 템플리트를 사용하여 사용자 정의 페치 스크립트의 사용법을 지정할 수 있습니다 . &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; 는 C 식별자와 반드시 &lt;code&gt;&amp;lt;loc&amp;gt;&lt;/code&gt; 포함해야 &lt;code&gt;%(algo)&lt;/code&gt; 및 &lt;code&gt;%(hash)&lt;/code&gt; 표시자를. 키 &lt;code&gt;ExternalData_CUSTOM_SCRIPT_&amp;lt;key&amp;gt;&lt;/code&gt; 에 해당하는 변수 는 &lt;code&gt;.cmake&lt;/code&gt; 의 전체 경로로 설정해야합니다.스크립트 파일. 실제 페치를 수행하기 위해 스크립트가 포함되며 다음 변수가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bb8ffbdb880f0917cf45137e1627070af5d048e3" translate="yes" xml:space="preserve">
          <source>When a device link step is involved, which is controlled by &lt;a href=&quot;../prop_tgt/cuda_separable_compilation#prop_tgt:CUDA_SEPARABLE_COMPILATION&quot; id=&quot;index-0-prop_tgt:CUDA_SEPARABLE_COMPILATION&quot;&gt;&lt;code&gt;CUDA_SEPARABLE_COMPILATION&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/cuda_resolve_device_symbols#prop_tgt:CUDA_RESOLVE_DEVICE_SYMBOLS&quot; id=&quot;index-0-prop_tgt:CUDA_RESOLVE_DEVICE_SYMBOLS&quot;&gt;&lt;code&gt;CUDA_RESOLVE_DEVICE_SYMBOLS&lt;/code&gt;&lt;/a&gt; properties and policy &lt;a href=&quot;../policy/cmp0105#policy:CMP0105&quot; id=&quot;index-0-policy:CMP0105&quot;&gt;&lt;code&gt;CMP0105&lt;/code&gt;&lt;/a&gt;, the raw options will be delivered to the host and device link steps (wrapped in &lt;code&gt;-Xcompiler&lt;/code&gt; or equivalent for device link). Options wrapped with &lt;code&gt;$&amp;lt;DEVICE_LINK:...&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; will be used only for the device link step. Options wrapped with &lt;code&gt;$&amp;lt;HOST_LINK:...&amp;gt;&lt;/code&gt;&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; will be used only for the host link step.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/cuda_separable_compilation#prop_tgt:CUDA_SEPARABLE_COMPILATION&quot; id=&quot;index-0-prop_tgt:CUDA_SEPARABLE_COMPILATION&quot;&gt; &lt;code&gt;CUDA_SEPARABLE_COMPILATION&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/cuda_resolve_device_symbols#prop_tgt:CUDA_RESOLVE_DEVICE_SYMBOLS&quot; id=&quot;index-0-prop_tgt:CUDA_RESOLVE_DEVICE_SYMBOLS&quot;&gt; &lt;code&gt;CUDA_RESOLVE_DEVICE_SYMBOLS&lt;/code&gt; &lt;/a&gt; 속성 및 정책 &lt;a href=&quot;../policy/cmp0105#policy:CMP0105&quot; id=&quot;index-0-policy:CMP0105&quot;&gt; &lt;code&gt;CMP0105&lt;/code&gt; 에&lt;/a&gt; 의해 제어되는 장치 링크 단계가 관련되면 원시 옵션이 호스트 및 장치 링크 단계에 전달됩니다 ( &lt;code&gt;-Xcompiler&lt;/code&gt; 또는 장치 링크의 경우 이에 상응하는 단계 ). &lt;code&gt;$&amp;lt;DEVICE_LINK:...&amp;gt;&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt; 래핑 된 옵션 은 장치 링크 단계에만 사용됩니다. &lt;code&gt;$&amp;lt;HOST_LINK:...&amp;gt;&lt;/code&gt; &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt; 래핑 된 옵션 은 호스트 링크 단계에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="704a0687cfb10ac8b286d9a1458d4112f3b65389" translate="yes" xml:space="preserve">
          <source>When a framework target is created its &lt;code&gt;FRAMEWORK_MULTI_CONFIG_POSTFIX_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property is initialized with the value of this variable if it is set.</source>
          <target state="translated">프레임 워크 대상이 생성 될 때 &lt;code&gt;FRAMEWORK_MULTI_CONFIG_POSTFIX_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대상 속성은 설정된 경우이 변수의 값으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="fd69f5a64d652eb8123feaec4c4d6bfcaf859473" translate="yes" xml:space="preserve">
          <source>When a generated file created as the &lt;code&gt;OUTPUT&lt;/code&gt; of an &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command is explicitly listed as a source file for any target in the same directory scope (which usually means the same &lt;code&gt;CMakeLists.txt&lt;/code&gt; file), CMake will automatically create a dependency to make sure the file is generated before building that target.</source>
          <target state="translated">생성 된 파일로 생성 할 때 &lt;code&gt;OUTPUT&lt;/code&gt; 의 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 명령을 명시 적으로 (일반적으로 같은 의미 같은 디렉토리 범위의 모든 대상에 대한 소스 파일로 표시됩니다 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 파일), CMake가 자동으로 확인하는 종속성을 생성합니다 해당 대상을 빌드하기 전에 파일이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="74599bbf09fc07f2bd8a66ebc1e5fb0ac9bfe43f" translate="yes" xml:space="preserve">
          <source>When a generated file created by an &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command is explicitly listed as a source file for any target in the same directory scope (which usually means the same &lt;code&gt;CMakeLists.txt&lt;/code&gt; file), CMake will automatically create a dependency to make sure the file is generated before building that target.</source>
          <target state="translated">&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 명령 으로 생성 된 파일 이 동일한 디렉토리 범위 (일반적으로 동일한 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일을 의미 함)에있는 대상의 소스 파일로 명시 적으로 나열 되면 CMake는 파일이 있는지 확인하기 위해 자동으로 종속성을 작성합니다. 타겟을 만들기 전에 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="20d4424d1de54a4f853967c6e91fc1f27ce6f44f" translate="yes" xml:space="preserve">
          <source>When a language is enabled, CMake finds a compiler for that language, and determines some information, such as the vendor and version of the compiler, the target architecture and bitwidth, the location of corresponding utilities etc.</source>
          <target state="translated">언어가 활성화되면 CMake는 해당 언어의 컴파일러를 찾고 컴파일러의 공급 업체 및 버전, 대상 아키텍처 및 비트 폭, 해당 유틸리티의 위치 등과 같은 일부 정보를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="615488c5ac59f20c62bf096a784ae812627de616" translate="yes" xml:space="preserve">
          <source>When a macro is invoked, the commands recorded in the macro are first modified by replacing formal parameters (&lt;code&gt;${arg1}&lt;/code&gt;, &amp;hellip;) with the arguments passed, and then invoked as normal commands.</source>
          <target state="translated">매크로가 호출되면 매크로에 기록 된 명령은 먼저 공식 매개 변수 ( &lt;code&gt;${arg1}&lt;/code&gt; ,&amp;hellip;)를 전달 된 인수 로 바꾸어 수정 한 다음 일반 명령으로 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b096ae7e59f57e66f3ad3b794300137ccd5505d5" translate="yes" xml:space="preserve">
          <source>When a non-executable target is created its &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; target property is initialized with the value of this variable if it is set.</source>
          <target state="translated">실행 불가능한 대상이 작성되면 &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; 대상 특성이 설정된 경우이 변수의 값으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="001bf972053b13b750af47d01e450d7b79932d60" translate="yes" xml:space="preserve">
          <source>When a regular expression match is used, CMake fills in &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; variables with the match contents. The &lt;a href=&quot;cmake_match_count#variable:CMAKE_MATCH_COUNT&quot; id=&quot;index-0-variable:CMAKE_MATCH_COUNT&quot;&gt;&lt;code&gt;CMAKE_MATCH_COUNT&lt;/code&gt;&lt;/a&gt; variable holds the number of match expressions when these are filled.</source>
          <target state="translated">정규식 일치가 사용되면 CMake는 &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; 변수를 일치 내용으로 채 웁니다 . &lt;a href=&quot;cmake_match_count#variable:CMAKE_MATCH_COUNT&quot; id=&quot;index-0-variable:CMAKE_MATCH_COUNT&quot;&gt; &lt;code&gt;CMAKE_MATCH_COUNT&lt;/code&gt; 의&lt;/a&gt; 이러한가 작성 될 때 변수는 일치 식의 수를 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a4859977851aa124396be13f7db16f7d724ed49" translate="yes" xml:space="preserve">
          <source>When a regular expression match is used, CMake fills in &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; variables with the match contents. The &lt;code&gt;CMAKE_MATCH_COUNT&lt;/code&gt; variable holds the number of match expressions when these are filled.</source>
          <target state="translated">정규식 일치가 사용되면 CMake는 &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; 변수를 일치 내용으로 채 웁니다 . &lt;code&gt;CMAKE_MATCH_COUNT&lt;/code&gt; 의 이러한가 작성 될 때 변수는 일치 식의 수를 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2cae39e368f0dd23ae28426b8cb286152195fc0" translate="yes" xml:space="preserve">
          <source>When a target is being installed, CMake may need to rewrite its rpath information. This occurs when the install rpath (as specified by the &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; target property) has different contents to the rpath that the target was built with. Some toolchains insert their own rpath contents into the binary as part of the build. By default, CMake will preserve those extra inserted contents in the install rpath. For those scenarios where such toolchain-inserted entries need to be discarded during install, set the &lt;code&gt;INSTALL_REMOVE_ENVIRONMENT_RPATH&lt;/code&gt; target property to true.</source>
          <target state="translated">대상이 설치 될 때 CMake는 rpath 정보를 다시 작성해야 할 수 있습니다. 이는 설치 rpath ( &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 대상 등록 정보에 지정된대로 )에 대상이 빌드 된 rpath와 다른 내용 이있을 때 발생합니다 . 일부 도구 모음은 빌드의 일부로 자체 rpath 콘텐츠를 바이너리에 삽입합니다. 기본적으로 CMake는 설치 rpath에 추가로 삽입 된 콘텐츠를 유지합니다. 이러한 도구 체인에 삽입 된 항목을 설치 중에 버려야하는 시나리오의 경우 &lt;code&gt;INSTALL_REMOVE_ENVIRONMENT_RPATH&lt;/code&gt; 대상 특성을 true로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f286b2a3d3db9e7dbb0b925f83ecae816559d603" translate="yes" xml:space="preserve">
          <source>When a third-party utility&amp;rsquo;s source is included in the distribution, this command specifies its location and name. The cache entry will not be set unless the &lt;code&gt;path_to_source&lt;/code&gt; and all listed files exist. It is assumed that the source tree of the utility will have been built before it is needed.</source>
          <target state="translated">써드 파티 유틸리티의 소스가 분배에 포함 된 경우이 명령은 해당 위치와 이름을 지정합니다. &lt;code&gt;path_to_source&lt;/code&gt; 및 나열된 모든 파일이 존재 하지 않으면 캐시 항목이 설정되지 않습니다. 유틸리티의 소스 트리가 필요하기 전에 빌드 된 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c996b844e6035eb6d8b4d9b7a9dacec7ff806a42" translate="yes" xml:space="preserve">
          <source>When a version is requested, it can be specified as a simple value or as a range. For a detailed description of version range usage and capabilities, refer to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">버전이 요청되면 단순 값 또는 범위로 지정할 수 있습니다. 버전 범위 사용 및 기능에 대한 자세한 설명은 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae212dbfbe6ce88fc8f32232e70db9d8de132828" translate="yes" xml:space="preserve">
          <source>When a version is requested, it can be specified as a simple value or as a range. For a detailed description of version range usage and capabilities, refer to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">버전이 요청되면 단순 값 또는 범위로 지정할 수 있습니다. 버전 범위 사용 및 기능에 대한 자세한 설명은 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7774cef5ded7146fde42e08b15de57582d618983" translate="yes" xml:space="preserve">
          <source>When a version range is specified, the above version variables will hold values based on the lower end of the version range. This is to preserve compatibility with packages that have not been implemented to expect version ranges. In addition, the version range will be described by the following variables:</source>
          <target state="translated">버전 범위가 지정되면 위 버전 변수는 버전 범위의 하단을 기준으로 값을 보유합니다. 이는 버전 범위를 예상하도록 구현되지 않은 패키지와의 호환성을 유지하기위한 것입니다. 또한 버전 범위는 다음 변수로 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="efef651831d0c89e0e06ee258194ca555f40cf8c" translate="yes" xml:space="preserve">
          <source>When all items on the link line have known paths CMake does not check this policy so it has no effect.</source>
          <target state="translated">링크 라인의 모든 항목에 알려진 경로가있는 경우 CMake는이 정책을 확인하지 않으므로 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="98ab4d54fe2b2e9ddabd51c2219586366209448e" translate="yes" xml:space="preserve">
          <source>When an ELF binary needs to have a different RPATH after installation than it does in the build tree, CMake uses a builtin editor to change the RPATH in the installed copy. If this variable is set to true then CMake will relink the binary before installation instead of using its builtin editor.</source>
          <target state="translated">설치 후 ELF 바이너리에 빌드 트리에서와 다른 RPATH가 필요한 경우 CMake는 내장 편집기를 사용하여 설치된 사본에서 RPATH를 변경합니다. 이 변수가 true로 설정되면 CMake는 내장 편집기를 사용하는 대신 설치 전에 바이너리를 다시 링크합니다.</target>
        </trans-unit>
        <trans-unit id="79876a6fc2fb12464bcd42639ccd07b38304013c" translate="yes" xml:space="preserve">
          <source>When an artifact is specified, all &lt;code&gt;HINTS&lt;/code&gt; will be ignored and no search will be performed for this artifact.</source>
          <target state="translated">이슈가 지정되면 모든 &lt;code&gt;HINTS&lt;/code&gt; 가 무시 되고이 이슈에 대한 검색이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98bf2bbfc9dde90c98b9aff0501f98b0d5291293" translate="yes" xml:space="preserve">
          <source>When an intermediate file generated during the build is consumed by an expensive operation or a large tree of dependents, one may reduce the work needed for an incremental rebuild by updating the file timestamp only when its content changes. With this approach the generation rule must have a separate output file that is always updated with a new timestamp that is newer than any dependencies of the rule so that the build tool re-runs the rule only when the input changes. We refer to the separate output file as a rule&amp;rsquo;s &lt;em&gt;witness&lt;/em&gt; and the generated file as a rule&amp;rsquo;s &lt;em&gt;byproduct&lt;/em&gt;.</source>
          <target state="translated">빌드 중에 생성 된 중간 파일이 값 비싼 작업이나 많은 종속 항목에 의해 소비되는 경우 내용이 변경 될 때만 파일 타임 스탬프를 업데이트하여 증분 재 빌드에 필요한 작업을 줄일 수 있습니다. 이 접근 방식을 사용하면 생성 규칙에는 입력의 변경시에만 빌드 도구가 규칙을 다시 실행할 수 있도록 규칙의 종속성보다 새로운 새 시간 소인으로 항상 업데이트되는 별도의 출력 파일이 있어야합니다. 별도의 출력 파일을 규칙의 &lt;em&gt;감시자&lt;/em&gt; 로, 생성 된 파일을 규칙의 &lt;em&gt;부산물이라고&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="96e8ac00a59aae6e597f996c82d926c8279634f2" translate="yes" xml:space="preserve">
          <source>When both &lt;code&gt;-R&lt;/code&gt; and &lt;code&gt;-I&lt;/code&gt; are specified by default the intersection of tests are run. By specifying &lt;code&gt;-U&lt;/code&gt; the union of tests is run instead.</source>
          <target state="translated">&lt;code&gt;-R&lt;/code&gt; 과 &lt;code&gt;-I&lt;/code&gt; 가 모두 기본적으로 지정 되면 테스트 교차가 실행됩니다. &lt;code&gt;-U&lt;/code&gt; 를 지정 하면 대신 테스트 통합이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="caf5ab3f43b2e5d467f95ccfef7ea0dbf101ea3b" translate="yes" xml:space="preserve">
          <source>When building the complete GNU system, the prefix will be empty and &lt;code&gt;/usr&lt;/code&gt; will be a symbolic link to &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">전체 GNU 시스템을 구축 할 때, 접두사는 비어있을 것이다 &lt;code&gt;/usr&lt;/code&gt; 에 대한 심볼릭 링크가 될 것입니다 &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce7f9e6f6104fb029845b666990e815128c927c7" translate="yes" xml:space="preserve">
          <source>When building the package, specify each &lt;code&gt;Foo_LIBRARY&lt;/code&gt; cache entry as just a library name, e.g. &lt;code&gt;-DFoo_LIBRARY=foo&lt;/code&gt;. This tells the corresponding find module to populate the &lt;code&gt;Foo_LIBRARIES&lt;/code&gt; with just &lt;code&gt;foo&lt;/code&gt; to ask the linker to search for the library instead of hard-coding a path.</source>
          <target state="translated">패키지를 빌드 할 때 각 &lt;code&gt;Foo_LIBRARY&lt;/code&gt; 캐시 항목을 라이브러리 이름으로 지정하십시오 (예 : &lt;code&gt;-DFoo_LIBRARY=foo&lt;/code&gt; ) . 이렇게하면 해당 find 모듈이 &lt;code&gt;Foo_LIBRARIES&lt;/code&gt; 를 &lt;code&gt;foo&lt;/code&gt; 로 채워서 링커가 경로를 하드 코딩하는 대신 라이브러리를 검색하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="28af2f0a0cbbb72a047bb9ee264228bc88e88601" translate="yes" xml:space="preserve">
          <source>When building with configuration &amp;lt;CONFIG&amp;gt; the value of this property is appended to the target file name built on disk. For non-executable targets, this property is initialized by the value of the variable CMAKE_&amp;lt;CONFIG&amp;gt;_POSTFIX if it is set when a target is created. This property is ignored on the Mac for Frameworks and App Bundles.</source>
          <target state="translated">구성 &amp;lt;CONFIG&amp;gt;로 빌드 할 때이 특성의 값이 디스크에 빌드 된 대상 파일 이름에 추가됩니다. 실행 불가능한 대상의 경우,이 특성은 대상을 작성할 때 설정된 경우 CMAKE_ &amp;lt;CONFIG&amp;gt; _POSTFIX 변수의 값으로 초기화됩니다. 이 속성은 Mac 용 프레임 워크 및 앱 번들에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="08b74b89a42586c443c21c66ad7a5913cdb5ec30" translate="yes" xml:space="preserve">
          <source>When building with configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; the value of this property is appended to the framework file name built on disk.</source>
          <target state="translated">&lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 구성으로 빌드 할 때이 속성의 값이 디스크에 빌드 된 프레임 워크 파일 이름에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="29a3e6c1a25e530f257cb768a4a290c20d918fe6" translate="yes" xml:space="preserve">
          <source>When choosing a Visual Studio generator, further options are available to set an architecture to generate for.</source>
          <target state="translated">Visual Studio 생성기를 선택할 때 생성 할 아키텍처를 설정하는 추가 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54bef114e22da459ee1c1edc487c08812f78b637" translate="yes" xml:space="preserve">
          <source>When compiling with MSVC, if this cache variable is set the protobuf-default VS project build locations (vsprojects/Debug and vsprojects/Release or vsprojects/x64/Debug and vsprojects/x64/Release) will be searched for libraries and binaries.</source>
          <target state="translated">MSVC로 컴파일 할 때이 캐시 변수가 설정되면 protobuf-default VS 프로젝트 빌드 위치 (vsprojects / Debug 및 vsprojects / Release 또는 vsprojects / x64 / Debug 및 vsprojects / x64 / Release)에서 라이브러리 및 바이너리를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a0115c957af95fda1678b5a5c1b3410d6b974d05" translate="yes" xml:space="preserve">
          <source>When configuring for any of the embedded platforms, one can target either real devices or the simulator. Both have their own separate SDK, but CMake only supports specifying a single SDK for the configuration phase. This means the developer must select one or the other at configuration time. When using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-2-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, this is less of a limitation because Xcode still allows you to build for either a device or a simulator, even though configuration was only performed for one of the two. From within the Xcode IDE, builds are performed for the selected &amp;ldquo;destination&amp;rdquo; platform. When building from the command line, the desired sdk can be specified directly by passing a &lt;code&gt;-sdk&lt;/code&gt; option to the underlying build tool (&lt;code&gt;xcodebuild&lt;/code&gt;). For example:</source>
          <target state="translated">임베디드 플랫폼을 구성 할 때 실제 장치 또는 시뮬레이터를 대상으로 할 수 있습니다. 둘 다 별도의 SDK를 가지고 있지만 CMake는 구성 단계에 단일 SDK 지정 만 지원합니다. 즉, 개발자는 구성시 하나 이상을 선택해야합니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-2-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를 사용하는 경우 구성이 두 가지 중 하나에 대해서만 수행 되었더라도 Xcode를 사용하여 장치 또는 시뮬레이터를 계속 빌드 할 수 있으므로 제한이 없습니다. Xcode IDE 내에서 선택된 &quot;대상&quot;플랫폼에 대한 빌드가 수행됩니다. 명령 행에서 빌드 할 때 &lt;code&gt;-sdk&lt;/code&gt; 옵션을 기본 빌드 도구 ( &lt;code&gt;xcodebuild&lt;/code&gt; ) 에 전달하여 원하는 SDK를 직접 지정할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="23de8f23245b610130d418a9ac6cb502ad1a74f9" translate="yes" xml:space="preserve">
          <source>When configuring for any of the embedded platforms, one can target either real devices or the simulator. Both have their own separate SDK, but CMake only supports specifying a single SDK for the configuration phase. This means the developer must select one or the other at configuration time. When using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-2-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, this is less of a limitation because Xcode still allows you to build for either a device or a simulator, even though configuration was only performed for one of the two. From within the Xcode IDE, builds are performed for the selected &amp;ldquo;destination&amp;rdquo; platform. When building from the command line, the desired sdk can be specified directly by passing a &lt;code&gt;-sdk&lt;/code&gt; option to the underlying build tool (&lt;code&gt;xcodebuild&lt;/code&gt;). For example:</source>
          <target state="translated">임베디드 플랫폼을 구성 할 때 실제 장치 또는 시뮬레이터를 대상으로 할 수 있습니다. 둘 다 별도의 SDK가 있지만 CMake는 구성 단계에 대해 단일 SDK 지정 만 지원합니다. 이는 개발자가 구성시 둘 중 하나를 선택해야 함을 의미합니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-2-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를 사용하는 경우 구성이 둘 중 하나에 대해서만 수행 되었음에도 불구하고 Xcode를 사용하면 여전히 장치 또는 시뮬레이터에 대해 빌드 할 수 있으므로 제한이 적습니다. Xcode IDE 내에서 선택한 &quot;대상&quot;플랫폼에 대한 빌드가 수행됩니다. 명령 줄에서 빌드 할 때 &lt;code&gt;-sdk&lt;/code&gt; 옵션을 기본 빌드 도구 ( &lt;code&gt;xcodebuild&lt;/code&gt; ) 에 전달하여 원하는 sdk를 직접 지정할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1e309a9e959792bf4010c06e442e3476f6e52eea" translate="yes" xml:space="preserve">
          <source>When connecting to the server (via named pipe or by starting it in &lt;code&gt;--debug&lt;/code&gt; mode), the server will reply with a hello message:</source>
          <target state="translated">명명 된 파이프를 통해 또는 &lt;code&gt;--debug&lt;/code&gt; 모드 에서 시작하여 서버에 연결 하면 서버는 hello 메시지로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="a046790342a34a60f08302184c44b2a951beeef9" translate="yes" xml:space="preserve">
          <source>When cross compiling CMake will print a warning if a &lt;code&gt;utility_source()&lt;/code&gt; command is executed, because in many cases it is used to build an executable which is executed later on. This doesn&amp;rsquo;t work when cross compiling, since the executable can run only on their target platform. So in this case the cache entry has to be adjusted manually so it points to an executable which is runnable on the build host.</source>
          <target state="translated">크로스 컴파일 할 때 &lt;code&gt;utility_source()&lt;/code&gt; 명령이 실행될 경우 CMake는 나중에 실행되는 실행 파일을 빌드하는 데 사용되기 때문에 경고를 인쇄합니다 . 실행 파일은 대상 플랫폼에서만 실행할 수 있으므로 크로스 컴파일시에는 작동하지 않습니다. 따라서이 경우 캐시 항목을 수동으로 조정하여 빌드 호스트에서 실행할 수있는 실행 파일을 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="2e8fc72f54949bd2a2a6b265f0c67d83138e14d8" translate="yes" xml:space="preserve">
          <source>When cross compiling for windows with clang-cl, this variable can be an absolute path pointing to a clang virtual file system yaml file, which will enable clang-cl to resolve windows header names on a case sensitive file system.</source>
          <target state="translated">clang-cl을 사용하여 Windows를 크로스 컴파일 할 때이 변수는 clang 가상 파일 시스템 yaml 파일을 가리키는 절대 경로가 될 수 있습니다. 그러면 clang-cl이 대소 문자를 구분하는 파일 시스템에서 Windows 헤더 이름을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ceec8028ab748f8ac89587b50ba389337247e708" translate="yes" xml:space="preserve">
          <source>When cross compiling, the executable compiled in the first step usually cannot be run on the build host. The &lt;code&gt;try_run&lt;/code&gt; command checks the &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable to detect whether CMake is in cross-compiling mode. If that is the case, it will still try to compile the executable, but it will not try to run the executable unless the &lt;a href=&quot;../variable/cmake_crosscompiling_emulator#variable:CMAKE_CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; variable is set. Instead it will create cache variables which must be filled by the user or by presetting them in some CMake script file to the values the executable would have produced if it had been run on its actual target platform. These cache entries are:</source>
          <target state="translated">교차 컴파일시 첫 번째 단계에서 컴파일 된 실행 파일은 일반적으로 빌드 호스트에서 실행할 수 없습니다. &lt;code&gt;try_run&lt;/code&gt; 의 커맨드 체크 &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt; &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; 의&lt;/a&gt; 변수 CMake 크로스 집계 모드에 있는지 여부를 검출한다. 이 경우 여전히 실행 파일을 컴파일하려고 시도하지만 &lt;a href=&quot;../variable/cmake_crosscompiling_emulator#variable:CMAKE_CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING_EMULATOR&quot;&gt; &lt;code&gt;CMAKE_CROSSCOMPILING_EMULATOR&lt;/code&gt; &lt;/a&gt; 변수가 설정되어 있지 않으면 실행 파일을 실행하려고 시도하지 않습니다 . 대신 캐시 변수를 생성하여 사용자가 채워야하거나 일부 CMake 스크립트 파일에서 실제 대상 플랫폼에서 실행 된 경우 실행 파일이 생성 한 값으로 미리 설정해야합니다. 이러한 캐시 항목은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1aab0cbe30d56392b49ced96f0b994944a700de0" translate="yes" xml:space="preserve">
          <source>When cross-compiling, some platforms may require environment variables to be set or may provide scripts to set the environment.</source>
          <target state="translated">크로스 컴파일시 일부 플랫폼은 환경 변수를 설정해야하거나 환경을 설정하기위한 스크립트를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2990dfd967f996e1c3c4a849c2317bb4c2120be6" translate="yes" xml:space="preserve">
          <source>When defining the interface of a target for &lt;code&gt;EXPORT&lt;/code&gt;, keep in mind that the include directories should be specified as relative paths to the &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; but should not explicitly include the &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;EXPORT&lt;/code&gt; 에 대한 대상의 인터페이스를 정의 할 때 포함 디렉터리를 &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 에 대한 상대 경로로 지정 해야하지만 명시 적으로 &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 를&lt;/a&gt; 포함해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="0bf8ce83856e4d8f29c59a7fa89a50971a9e8454" translate="yes" xml:space="preserve">
          <source>When done, &lt;code&gt;cmake_parse_arguments&lt;/code&gt; will consider for each of the keywords listed in &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; a variable composed of the given &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; followed by &lt;code&gt;&quot;_&quot;&lt;/code&gt; and the name of the respective keyword. These variables will then hold the respective value from the argument list or be undefined if the associated option could not be found. For the &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; keywords, these will always be defined, to &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;, whether the option is in the argument list or not.</source>
          <target state="translated">완료되면 &lt;code&gt;cmake_parse_arguments&lt;/code&gt; 는 &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; 에 나열된 각 키워드 에 대해 주어진 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&quot;_&quot;&lt;/code&gt; 및 각 키워드의 이름으로 구성된 변수를 고려 합니다. 이 변수는 인수 목록에서 해당 값을 보유하거나 연관된 옵션을 찾을 수없는 경우 정의되지 않습니다. 를 들어 &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; 키워드, 이들은 항상로 정의됩니다 &lt;code&gt;TRUE&lt;/code&gt; 또는 &lt;code&gt;FALSE&lt;/code&gt; 옵션이 인수 목록 여부에 있는지 여부.</target>
        </trans-unit>
        <trans-unit id="6af4a0ded55a40357c1736c39176f47f1cf523b8" translate="yes" xml:space="preserve">
          <source>When enabled by the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--log-context&lt;/code&gt; command line option or the &lt;a href=&quot;cmake_message_context_show#variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_CONTEXT_SHOW&lt;/code&gt;&lt;/a&gt; variable, the &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message()&lt;/code&gt;&lt;/a&gt; command converts the &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; list into a dot-separated string surrounded by square brackets and prepends it to each line for messages of log levels &lt;code&gt;NOTICE&lt;/code&gt; and below.</source>
          <target state="translated">에 의해 활성화되면 &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--log-context&lt;/code&gt; 명령 줄 옵션 또는 &lt;a href=&quot;cmake_message_context_show#variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_CONTEXT_SHOW&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_CONTEXT_SHOW&lt;/code&gt; 의&lt;/a&gt; 변수는 &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt; &lt;code&gt;message()&lt;/code&gt; &lt;/a&gt; 명령 변환 &lt;code&gt;CMAKE_MESSAGE_CONTEXT&lt;/code&gt; 의 점으로 구분 된 문자열로 목록 로그 레벨의 메시지를 각 라인에 대괄호 앞에 추가를에 둘러싸여 &lt;code&gt;NOTICE&lt;/code&gt; 및 이하.</target>
        </trans-unit>
        <trans-unit id="6f44852ee349e029853fcf8a70a7f133f2e8535d" translate="yes" xml:space="preserve">
          <source>When enabled, stdout and stderr will be merged for any step whose output is being logged to files.</source>
          <target state="translated">사용 가능한 경우, 출력이 파일에 로그되는 모든 단계에 대해 stdout 및 stderr이 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="97faa7a816fc322400499d72cdbc061691f07a3c" translate="yes" xml:space="preserve">
          <source>When enabled, the generated Makefiles will produce colored output. Default is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">활성화되면 생성 된 Makefile이 컬러 출력을 생성합니다. 기본값은 &lt;code&gt;ON&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b1223de0cc2b1a3def3be114be75e33bf28b8825" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the build step is logged to files.</source>
          <target state="translated">활성화되면 빌드 단계의 출력이 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="0ecc610e6d4e97b12f853b0545f51540134dc839" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the configure step is logged to files.</source>
          <target state="translated">활성화되면 구성 단계의 출력이 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="2c3b97689b37f61059e8a8cc63d0fe7973e3662e" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the download step is logged to files.</source>
          <target state="translated">활성화되면 다운로드 단계의 출력이 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="6f10d72bfb311d72d60b07963b126331c805ced9" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the install step is logged to files.</source>
          <target state="translated">사용 가능한 경우 설치 단계의 출력이 파일에 로깅됩니다.</target>
        </trans-unit>
        <trans-unit id="09d6f58b28848b18d546cafc709edf69137b55be" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the patch step is logged to files.</source>
          <target state="translated">활성화되면 패치 단계의 출력이 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="d3859f1ede5a184a7c56aad92ebaff4c60fa12dc" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the test step is logged to files.</source>
          <target state="translated">활성화되면 테스트 단계의 출력이 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="1c9a3d996e7cd9328abc1f6f4126f243ff9c7202" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the update step is logged to files.</source>
          <target state="translated">활성화되면 업데이트 단계의 출력이 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="a4e8b24ea38fb8cd17e5e40501bd401b7e05ab97" translate="yes" xml:space="preserve">
          <source>When enabled, this option causes the update step to be skipped. It does not, however, prevent the download step. The update step can still be added as a step target (see &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-0-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt;) and called manually. This is useful if you want to allow developers to build the project when disconnected from the network (the network may still be needed for the download step though).</source>
          <target state="translated">사용 가능한 경우이 옵션을 사용하면 업데이트 단계를 건너 뜁니다. 그러나 다운로드 단계를 방해하지는 않습니다. 업데이트 단계는 여전히 단계 대상으로 추가되고 ( &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-0-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; &lt;/a&gt; 참조 ) 수동으로 호출 할 수 있습니다. 이 기능은 개발자가 네트워크에서 연결을 끊었을 때 프로젝트를 빌드 할 수 있도록하려는 경우에 유용합니다 (다운로드 단계에 네트워크가 여전히 필요할 수 있음).</target>
        </trans-unit>
        <trans-unit id="a2c4303ef0ef40f582d9a84f8b638dae395fddb9" translate="yes" xml:space="preserve">
          <source>When enabled, this option excludes the external project from the default ALL target of the main build.</source>
          <target state="translated">사용 가능한 경우이 옵션은 외부 빌드를 기본 빌드의 기본 ALL 대상에서 제외합니다.</target>
        </trans-unit>
        <trans-unit id="83dbb8cc273305f6b371f2325df01474f12d3995" translate="yes" xml:space="preserve">
          <source>When enabled, this option instructs the &lt;code&gt;git clone&lt;/code&gt; operation to report its progress by passing it the &lt;code&gt;--progress&lt;/code&gt; option. Without this option, the clone step for large projects may appear to make the build stall, since nothing will be logged until the clone operation finishes. While this option can be used to provide progress to prevent the appearance of the build having stalled, it may also make the build overly noisy if lots of external projects are used.</source>
          <target state="translated">활성화되면이 옵션은 &lt;code&gt;git clone&lt;/code&gt; 작업에 &lt;code&gt;--progress&lt;/code&gt; 옵션 을 전달하여 진행률을보고 하도록 지시합니다 . 이 옵션을 사용하지 않으면 복제 작업이 완료 될 때까지 아무것도 기록되지 않으므로 대규모 프로젝트의 복제 단계에서 빌드가 중단 될 수 있습니다. 이 옵션을 사용하면 빌드가 중단 된 것처럼 보이지 않도록 진행 상황을 제공 할 수 있지만 많은 외부 프로젝트를 사용하는 경우 빌드에 소음이 심해질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f408b3a839d0804ff428697397b1f37fbc139fd" translate="yes" xml:space="preserve">
          <source>When enabled, this option specifies that the custom step should always be run (i.e. that it is always considered out of date).</source>
          <target state="translated">사용 가능한 경우이 옵션은 사용자 정의 단계가 항상 실행되도록 지정합니다 (즉, 항상 오래된 것으로 간주 됨).</target>
        </trans-unit>
        <trans-unit id="5098e5fcac72539b6e2155b8118abfd824b16c2b" translate="yes" xml:space="preserve">
          <source>When enabled, this option specifies that the external project&amp;rsquo;s main target does not depend on the custom step.</source>
          <target state="translated">사용 가능한 경우이 옵션은 외부 프로젝트의 주요 대상이 사용자 정의 단계에 의존하지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="60f31fe2f07fb54b469546e3e17a188af71d74d7" translate="yes" xml:space="preserve">
          <source>When enabled, this option specifies that the external project&amp;rsquo;s main target does not depend on the custom step. This may cause step targets to be created automatically for the steps on which this step depends. See policy &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-4-policy:CMP0114&quot;&gt;&lt;code&gt;CMP0114&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">활성화 된 경우이 옵션은 외부 프로젝트의 기본 대상이 사용자 지정 단계에 종속되지 않도록 지정합니다. 이로 인해이 단계가 종속 된 단계에 대해 단계 대상이 자동으로 생성 될 수 있습니다. 정책 &lt;a href=&quot;../policy/cmp0114#policy:CMP0114&quot; id=&quot;index-4-policy:CMP0114&quot;&gt; &lt;code&gt;CMP0114&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe0f19eac78825a117efdc7baf8db4824149cb47" translate="yes" xml:space="preserve">
          <source>When evaluating &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt;, CMake first searches the function call stack, if any, for a binding and then falls back to the binding in the current directory scope, if any. If a &amp;ldquo;set&amp;rdquo; binding is found, its value is used. If an &amp;ldquo;unset&amp;rdquo; binding is found, or no binding is found, CMake then searches for a cache entry. If a cache entry is found, its value is used. Otherwise, the variable reference evaluates to an empty string. The &lt;code&gt;$CACHE{VAR}&lt;/code&gt; syntax can be used to do direct cache entry lookups.</source>
          <target state="translated">&lt;a href=&quot;#variable-references&quot;&gt;변수 참조를&lt;/a&gt; 평가할 때 CMake는 먼저 함수 호출 스택 (있는 경우)에서 바인딩을 검색 한 다음 현재 디렉토리 범위 (있는 경우)의 바인딩으로 폴백합니다. &quot;세트&quot;바인딩이 있으면 해당 값이 사용됩니다. &quot;unset&quot;바인딩이 있거나 바인딩이 없으면 CMake는 캐시 항목을 검색합니다. 캐시 항목이 있으면 해당 값이 사용됩니다. 그렇지 않으면 변수 참조는 빈 문자열로 평가됩니다. &lt;code&gt;$CACHE{VAR}&lt;/code&gt; 구문은 직접 캐시 항목 조회를 수행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8429a2ff756cfe546a69a48beed4f520bc38a126" translate="yes" xml:space="preserve">
          <source>When evaluating &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;Variable References&lt;/a&gt; of the form &lt;code&gt;${VAR}&lt;/code&gt;, CMake first searches for a normal variable with that name, and if not found CMake will search for a cache entry with that name. The &lt;code&gt;$CACHE{VAR}&lt;/code&gt; syntax can be used to do direct cache lookup and ignore any existing normal variable.</source>
          <target state="translated">&lt;code&gt;${VAR}&lt;/code&gt; 형식의 &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;변수 참조&lt;/a&gt; 를 평가할 때 CMake는 먼저 해당 이름의 일반 변수를 검색하고, 없으면 CMake는 해당 이름의 캐시 항목을 검색합니다. &lt;code&gt;$CACHE{VAR}&lt;/code&gt; 구문은 직접 캐시 조회를하고 기존의 일반 변수를 무시하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5da251f5559f798d4e1f6d15a3d8403e9c5676d" translate="yes" xml:space="preserve">
          <source>When executing code inside a &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;, this variable contains the full directory of the listfile that defined the current function.</source>
          <target state="translated">&lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 내부에서 코드를 실행할 때이 변수는 현재 함수를 정의한 목록 파일의 전체 디렉토리를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7a6b914cdaad0f609a70f332dc62109bbfebbd85" translate="yes" xml:space="preserve">
          <source>When executing code inside a &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;, this variable contains the full path to the listfile that defined the current function.</source>
          <target state="translated">&lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 내부에서 코드를 실행할 때이 변수에는 현재 함수를 정의한 목록 파일의 전체 경로가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3a5b01fd37c85f142d09cdca1ed0cff280a703b4" translate="yes" xml:space="preserve">
          <source>When executing code inside a &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;, this variable contains the line number in the listfile where the current function was defined.</source>
          <target state="translated">&lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 내부에서 코드를 실행할 때이 변수는 현재 함수가 정의 된 목록 파일의 줄 번호를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f43f854296b89a06612af344eb5703f7a62ffd2e" translate="yes" xml:space="preserve">
          <source>When executing code inside a &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;, this variable contains the name of the current function. It can be useful for diagnostic or debug messages.</source>
          <target state="translated">&lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 내부에서 코드를 실행할 때이 변수에는 현재 함수의 이름이 포함됩니다. 진단 또는 디버그 메시지에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5262604ff6c5a06d6e6892cd85f3fb43e0165135" translate="yes" xml:space="preserve">
          <source>When generating Visual Studio project and solutions files several other options are available to use when initially running &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-5-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Visual Studio 프로젝트 및 솔루션 파일을 생성 할 때 처음 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-5-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 실행할 때 사용할 수있는 몇 가지 다른 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d01259ed7ddb1a96d04f16bc6f01cdde90b12ae" translate="yes" xml:space="preserve">
          <source>When generating for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; or greater with the Intel Fortran plugin installed, this specifies the &lt;code&gt;.vfproj&lt;/code&gt; project file format version. This is intended for internal use by CMake and should not be used by project code.</source>
          <target state="translated">Intel Fortran 플러그인이 설치된 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt; &lt;code&gt;Visual Studio 9 2008&lt;/code&gt; &lt;/a&gt; 이상을 생성 할 때 &lt;code&gt;.vfproj&lt;/code&gt; 프로젝트 파일 형식 버전을 지정합니다 . 이는 CMake에서 내부 용으로 만들어 졌으므로 프로젝트 코드에서 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c5e8d90b1b38b1218246428531cfc09269e1c58f" translate="yes" xml:space="preserve">
          <source>When generating for &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; or greater with the Intel Fortran plugin installed, this specifies the &lt;code&gt;.vfproj&lt;/code&gt; project file format version. This is intended for internal use by CMake and should not be used by project code.</source>
          <target state="translated">Intel Fortran 플러그인이 설치된 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt; &lt;code&gt;Visual Studio 9 2008&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.vfproj&lt;/code&gt; 생성 할 때 .vfproj 프로젝트 파일 형식 버전을 지정합니다 . 이것은 CMake에서 내부적으로 사용하기위한 것이며 프로젝트 코드에서 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a93b5e2c152610dc5151b4ea44d5e17c815d94d2" translate="yes" xml:space="preserve">
          <source>When in this mode CMake determines which files are grouped together. The &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; property controls the upper limit on how many sources can be combined per unity source file.</source>
          <target state="translated">이 모드에서 CMake는 함께 그룹화되는 파일을 결정합니다. &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt; 의&lt;/a&gt; 속성은 단일 소스 파일 당 결합 할 수있는 방법을 많은 소스에 상한을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="b0fd5cb0f35ab2fdc6db673885bb0194981c9920" translate="yes" xml:space="preserve">
          <source>When in this mode each target explicitly specifies how to group source files. Each source file that has the same &lt;a href=&quot;../prop_sf/unity_group#prop_sf:UNITY_GROUP&quot; id=&quot;index-0-prop_sf:UNITY_GROUP&quot;&gt;&lt;code&gt;UNITY_GROUP&lt;/code&gt;&lt;/a&gt; value will be grouped together. Any sources that don&amp;rsquo;t have this property will be compiled individually. The &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt;&lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt;&lt;/a&gt; property is ignored when using this mode.</source>
          <target state="translated">이 모드에서 각 대상은 소스 파일을 그룹화하는 방법을 명시 적으로 지정합니다. 동일한 &lt;a href=&quot;../prop_sf/unity_group#prop_sf:UNITY_GROUP&quot; id=&quot;index-0-prop_sf:UNITY_GROUP&quot;&gt; &lt;code&gt;UNITY_GROUP&lt;/code&gt; &lt;/a&gt; 값 을 가진 각 소스 파일이 함께 그룹화됩니다. 이 속성이없는 모든 소스는 개별적으로 컴파일됩니다. &lt;a href=&quot;unity_build_batch_size#prop_tgt:UNITY_BUILD_BATCH_SIZE&quot; id=&quot;index-1-prop_tgt:UNITY_BUILD_BATCH_SIZE&quot;&gt; &lt;code&gt;UNITY_BUILD_BATCH_SIZE&lt;/code&gt; 의&lt;/a&gt; 이 모드를 사용하는 경우 속성은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="33943b40e8491bf8533f537d21cd2ff7e35ddc06" translate="yes" xml:space="preserve">
          <source>When invoked, this &lt;code&gt;cmake --build&lt;/code&gt; command line will launch the underlying build system tool.</source>
          <target state="translated">이 &lt;code&gt;cmake --build&lt;/code&gt; 명령 행을 호출 하면 기본 빌드 시스템 도구가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="200a749fb8b70a55a3e1ebbe8c9bdb00afc8a339" translate="yes" xml:space="preserve">
          <source>When invoking &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; with a command line buildsystem such as &lt;code&gt;Makefiles&lt;/code&gt; or &lt;code&gt;Ninja&lt;/code&gt;, it is necessary to use the correct build environment to ensure that build tools are available. CMake must be able to find the appropriate &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;build tool&lt;/code&gt;&lt;/a&gt;, compiler, linker and other tools as needed.</source>
          <target state="translated">&lt;code&gt;Makefiles&lt;/code&gt; 또는 &lt;code&gt;Ninja&lt;/code&gt; 와 같은 명령 줄 빌드 시스템으로 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 를 호출 할 때 올바른 빌드 환경을 사용하여 빌드 도구를 사용할 수 있는지 확인해야합니다. CMake는 필요에 따라 적절한 &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;build tool&lt;/code&gt; &lt;/a&gt; , 컴파일러, 링커 및 기타 도구 를 찾을 수 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="b2f9fb09dd36c080abf4c263f61220c3902d72a2" translate="yes" xml:space="preserve">
          <source>When it is first executed, CMake generates a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file in the build directory containing key-value pairs for such artifacts. The cache file can be viewed or edited by the user by running the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-7-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-1-manual:ccmake(1)&quot;&gt;&lt;code&gt;ccmake(1)&lt;/code&gt;&lt;/a&gt; tool. The tools provide an interactive interface for re-configuring the provided software and re-generating the buildsystem, as is needed after editing cached values. Each cache entry may have an associated short help text which is displayed in the user interface tools.</source>
          <target state="translated">처음 실행될 때 CMake는 이러한 아티팩트에 대한 키-값 쌍을 포함하는 빌드 디렉터리에 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 파일을 생성합니다 . &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-7-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-1-manual:ccmake(1)&quot;&gt; &lt;code&gt;ccmake(1)&lt;/code&gt; &lt;/a&gt; 도구 를 실행하여 사용자가 캐시 파일을 보거나 편집 할 수 있습니다 . 이 도구는 캐시 된 값을 편집 한 후 필요에 따라 제공된 소프트웨어를 재구성하고 빌드 시스템을 다시 생성하기위한 대화 형 인터페이스를 제공합니다. 각 캐시 항목에는 사용자 인터페이스 도구에 표시되는 연관된 짧은 도움말 텍스트가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db429da91507a09832395971dfb640aa2dd8249a" translate="yes" xml:space="preserve">
          <source>When language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; is enabled by &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; this variable is defined to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 언어 가 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt; 로 활성화 되면 이 변수는 &lt;code&gt;1&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="3fab894ea5bccc12036d78f550dead6caddc3120" translate="yes" xml:space="preserve">
          <source>When linking a shared library or executable that exports symbols using GNU tools on Windows (MinGW/MSYS) with Visual Studio installed convert the import library (&lt;code&gt;.dll.a&lt;/code&gt;) from GNU to MS format (&lt;code&gt;.lib&lt;/code&gt;). Both import libraries will be installed by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; and exported by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; to be linked by applications with either GNU- or MS-compatible tools.</source>
          <target state="translated">Visual Studio가 설치된 Windows에서 GNU 도구 (MinGW / MSYS)를 사용하여 심볼을 내보내는 공유 라이브러리 또는 실행 파일을 링크 할 때 가져 오기 라이브러리 ( &lt;code&gt;.dll.a&lt;/code&gt; )를 GNU에서 MS 형식 ( &lt;code&gt;.lib&lt;/code&gt; ) 으로 변환하십시오 . 두 가져 오기 라이브러리는 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 의해 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 되고 install (EXPORT) 및 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 에 의해 내 보내져 GNU 또는 MS 호환 도구를 사용하는 응용 프로그램에 의해 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="f3397e53fd72d361ff0b0d6eae616787fb9f4081" translate="yes" xml:space="preserve">
          <source>When linking to a &lt;code&gt;STATIC&lt;/code&gt; library target with cyclic dependencies the linker may need to scan more than once through the archives in the strongly connected component of the dependency graph. CMake by default constructs the link line so that the linker will scan through the component at least twice. This property specifies the minimum number of scans if it is larger than the default. CMake uses the largest value specified by any target in a component.</source>
          <target state="translated">주기적 종속성이 있는 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리 대상에 링크 할 때 링커는 종속성 그래프의 강력하게 연결된 구성 요소의 아카이브를 통해 두 번 이상 스캔해야 할 수도 있습니다. CMake는 기본적으로 링커가 구성 요소를 두 번 이상 스캔 할 수 있도록 링크 라인을 구성합니다. 이 특성은 기본값보다 큰 경우 최소 스캔 수를 지정합니다. CMake는 구성 요소의 모든 대상에 지정된 가장 큰 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a6773c0c14ac5ac20cb3c38b7753ebfb64a2de00" translate="yes" xml:space="preserve">
          <source>When loading a find module or package configuration file &lt;code&gt;find_package&lt;/code&gt; defines variables to provide information about the call arguments (and restores their original state before returning):</source>
          <target state="translated">찾기 모듈 또는 패키지 구성 파일을로드 할 때 &lt;code&gt;find_package&lt;/code&gt; 는 변수를 정의하여 호출 인수에 대한 정보를 제공하고 반환하기 전에 원래 상태를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="7ba2cad2908a24cd41da5de2796aa5418fe88e09" translate="yes" xml:space="preserve">
          <source>When more than one value is given to the &lt;code&gt;NAMES&lt;/code&gt; option this command by default will consider one name at a time and search every directory for it. The &lt;code&gt;NAMES_PER_DIR&lt;/code&gt; option tells this command to consider one directory at a time and search for all names in it.</source>
          <target state="translated">&lt;code&gt;NAMES&lt;/code&gt; 옵션에 둘 이상의 값이 지정되면 기본적으로이 명령은 한 번에 하나의 이름을 고려하여 모든 디렉토리를 검색합니다. &lt;code&gt;NAMES_PER_DIR&lt;/code&gt; 의 옵션은 한 번에 하나의 디렉토리를 고려하고 그것의 모든 이름을 검색하려면이 명령을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="0fe807136cda5002959dc9c1bdca741a1c84b86b" translate="yes" xml:space="preserve">
          <source>When multiple CUDA Toolkits are installed in the default location of a system (e.g., both &lt;code&gt;/usr/local/cuda-9.0&lt;/code&gt; and &lt;code&gt;/usr/local/cuda-10.0&lt;/code&gt; exist but the &lt;code&gt;/usr/local/cuda&lt;/code&gt; symbolic link does &lt;strong&gt;not&lt;/strong&gt; exist), this package is marked as &lt;strong&gt;not&lt;/strong&gt; found.</source>
          <target state="translated">시스템의 기본 위치에 여러 CUDA 툴킷이 설치된 경우 (예 : &lt;code&gt;/usr/local/cuda-9.0&lt;/code&gt; 및 &lt;code&gt;/usr/local/cuda-10.0&lt;/code&gt; 이 모두 존재하지만 &lt;code&gt;/usr/local/cuda&lt;/code&gt; 심볼릭 링크가 존재 하지 &lt;strong&gt;않음&lt;/strong&gt; ), 이 패키지는 찾을 수 &lt;strong&gt;없음&lt;/strong&gt; 으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="740f8ac2ae75474392ae5d1685023891aea1a973" translate="yes" xml:space="preserve">
          <source>When multiple source files are included into one source file, as is done for unity builds, it can potentially lead to ODR errors. CMake provides a number of measures to help address such problems:</source>
          <target state="translated">Unity 빌드에서와 같이 여러 소스 파일이 하나의 소스 파일에 포함되면 잠재적으로 ODR 오류가 발생할 수 있습니다. CMake는 이러한 문제를 해결하는 데 도움이되는 여러 가지 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="94bac38a3472c30f80c749b870193349dc3a4c2d" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option is specified, the configure step assumes the external project has a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file at the top of its source tree (i.e. in &lt;code&gt;SOURCE_DIR&lt;/code&gt;). The &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option can be used to point to an alternative directory within the source tree to use as the top of the CMake source tree instead. This must be a relative path and it will be interpreted as being relative to &lt;code&gt;SOURCE_DIR&lt;/code&gt;. When &lt;code&gt;BUILD_IN_SOURCE 1&lt;/code&gt; is specified, the &lt;code&gt;BUILD_COMMAND&lt;/code&gt; is used to point to an alternative directory within the source tree.</source>
          <target state="translated">&lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; 옵션이 지정 되지 않은 경우, 구성 단계는 외부 프로젝트 의 소스 트리 맨 위에 (즉, &lt;code&gt;SOURCE_DIR&lt;/code&gt; 에 ) &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 이 있다고 가정합니다 . &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; 의 옵션 대신 CMake 소스 트리의 상위로 사용하기 위해 소스 트리 내에서 다른 디렉토리를 가리 키도록 할 수 있습니다. 상대 경로 여야하며 &lt;code&gt;SOURCE_DIR&lt;/code&gt; 에 상대적인 것으로 해석됩니다 . 때 &lt;code&gt;BUILD_IN_SOURCE 1&lt;/code&gt; 이 지정되면, &lt;code&gt;BUILD_COMMAND&lt;/code&gt; 는 소스 트리 내의 다른 디렉토리를 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4eddb51f31a8b68dcb58d948d2a9d661640604af" translate="yes" xml:space="preserve">
          <source>When preparing a package CPack installs the item under the so-called top level directory. The purpose of is to include (set to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;TRUE&lt;/code&gt;) the top level directory in the package or not (set to &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;).</source>
          <target state="translated">패키지를 준비 할 때 CPack은 소위 최상위 디렉토리 아래에 항목을 설치합니다. 패키지의 최상위 디렉토리 를 포함 시키거나 ( &lt;code&gt;1&lt;/code&gt; 또는 &lt;code&gt;ON&lt;/code&gt; 또는 &lt;code&gt;TRUE&lt;/code&gt; 로 ) 패키지에 최상위 디렉토리를 포함 시키거나 ( &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;OFF&lt;/code&gt; 또는 &lt;code&gt;FALSE&lt;/code&gt; 로 ) 목적으로합니다.</target>
        </trans-unit>
        <trans-unit id="3dec1df06a3840554c5ed2d8190ab881e151cce1" translate="yes" xml:space="preserve">
          <source>When provided, only the listed files will be scanned for test cases. If this option is not given, the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; property of the specified &lt;code&gt;target&lt;/code&gt; will be used to obtain the list of sources.</source>
          <target state="translated">제공된 경우 나열된 파일 만 테스트 사례를 스캔합니다. 이 옵션을 지정하지 않으면 지정된 &lt;code&gt;target&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt; &lt;code&gt;SOURCES&lt;/code&gt; &lt;/a&gt; 특성 이 소스 목록을 얻는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c149678260bd674f6161bb119d1a3e0cb53c809" translate="yes" xml:space="preserve">
          <source>When providing imported targets, these should be namespaced (hence the &lt;code&gt;Foo::&lt;/code&gt; prefix); CMake will recognize that values passed to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; that contain &lt;code&gt;::&lt;/code&gt; in their name are supposed to be imported targets (rather than just library names), and will produce appropriate diagnostic messages if that target does not exist (see policy &lt;a href=&quot;../policy/cmp0028#policy:CMP0028&quot; id=&quot;index-0-policy:CMP0028&quot;&gt;&lt;code&gt;CMP0028&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">가져온 대상을 제공 할 때는 네임 스페이스를 사용해야합니다 (따라서 &lt;code&gt;Foo::&lt;/code&gt; 접두사). CMake는 이름에 &lt;code&gt;::&lt;/code&gt; 가 포함 된 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 전달 된 값이 라이브러리 이름이 아닌 임포트 된 대상으로 간주되고 해당 대상이없는 경우 적절한 진단 메시지를 생성 함을 인식합니다 (정책 &lt;a href=&quot;../policy/cmp0028#policy:CMP0028&quot; id=&quot;index-0-policy:CMP0028&quot;&gt; &lt;code&gt;CMP0028&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f6414158e64b918bb08d6ca2d8025076ef56e517" translate="yes" xml:space="preserve">
          <source>When recording a check result, the command repeats the message from the most recently started check for which no result has yet been reported, then some separator characters and then the message text provided after the &lt;code&gt;CHECK_PASS&lt;/code&gt; or &lt;code&gt;CHECK_FAIL&lt;/code&gt; keyword. Check messages are always reported at &lt;code&gt;STATUS&lt;/code&gt; log level.</source>
          <target state="translated">검사 결과를 기록 할 때 명령은 아직 결과가보고되지 않은 가장 최근에 시작된 검사의 메시지를 반복 한 다음 일부 구분 문자와 &lt;code&gt;CHECK_PASS&lt;/code&gt; 또는 &lt;code&gt;CHECK_FAIL&lt;/code&gt; 키워드 뒤에 제공된 메시지 텍스트를 반복 합니다. 확인 메시지는 항상 &lt;code&gt;STATUS&lt;/code&gt; 로그 수준 에서보고 됩니다.</target>
        </trans-unit>
        <trans-unit id="a628aebc1e4efbbf7103d71f541fb77b12558c8b" translate="yes" xml:space="preserve">
          <source>When run in -P script mode, CMake sets the variables &lt;a href=&quot;#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="translated">-P 스크립트 모드에서 실행될 때 CMake는 &lt;a href=&quot;#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 변수 를 현재 작업 디렉토리로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="729cb5de2434a67eebdabc9d1cba03519c5e654d" translate="yes" xml:space="preserve">
          <source>When run in -P script mode, CMake sets the variables &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="translated">-P 스크립트 모드에서 실행될 때 CMake는 &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 변수 를 현재 작업 디렉토리로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c913be503151c600c0053cee6470ea8c22544e12" translate="yes" xml:space="preserve">
          <source>When run in -P script mode, CMake sets the variables &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="translated">-P 스크립트 모드에서 실행될 때 CMake는 &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 변수 를 현재 작업 디렉토리로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="15b101598df52d4e520700254d07d467bdfa6994" translate="yes" xml:space="preserve">
          <source>When run in &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-P&lt;/code&gt; script mode, CMake sets this variable to the full path of the script file. When run to configure a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, this variable is not set.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-P&lt;/code&gt; 스크립트 모드 에서 실행될 때 CMake는이 변수를 스크립트 파일의 전체 경로로 설정합니다. &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 을 구성하기 위해 실행할 때이 변수는 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b3329a89c1e52722948b6ddc53c3aa66a701b39" translate="yes" xml:space="preserve">
          <source>When run in &lt;a href=&quot;../manual/cmake.1#script-processing-mode&quot;&gt;-P&lt;/a&gt; script mode, CMake sets this variable to the first command line argument. It then also sets &lt;code&gt;CMAKE_ARGV1&lt;/code&gt;, &lt;code&gt;CMAKE_ARGV2&lt;/code&gt;, &amp;hellip; and so on, up to the number of command line arguments given. See also &lt;a href=&quot;cmake_argc#variable:CMAKE_ARGC&quot; id=&quot;index-0-variable:CMAKE_ARGC&quot;&gt;&lt;code&gt;CMAKE_ARGC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake.1#script-processing-mode&quot;&gt;-P&lt;/a&gt; 스크립트 모드 에서 실행될 때 CMake는이 변수를 첫 번째 명령 줄 인수로 설정합니다. 그런 다음 &lt;code&gt;CMAKE_ARGV1&lt;/code&gt; , &lt;code&gt;CMAKE_ARGV2&lt;/code&gt; 등을 주어진 명령 줄 인수 수까지 설정합니다. &lt;a href=&quot;cmake_argc#variable:CMAKE_ARGC&quot; id=&quot;index-0-variable:CMAKE_ARGC&quot;&gt; &lt;code&gt;CMAKE_ARGC&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc4a06a5ef4368e650619c5831833000ecd3ed38" translate="yes" xml:space="preserve">
          <source>When run in &lt;a href=&quot;../manual/cmake.1#script-processing-mode&quot;&gt;-P&lt;/a&gt; script mode, CMake sets this variable to the number of command line arguments. See also &lt;a href=&quot;cmake_argv0#variable:CMAKE_ARGV0&quot; id=&quot;index-0-variable:CMAKE_ARGV0&quot;&gt;&lt;code&gt;CMAKE_ARGV0&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; &amp;hellip;</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake.1#script-processing-mode&quot;&gt;-P&lt;/a&gt; 스크립트 모드 에서 실행될 때 CMake는이 변수를 명령 행 인수 수로 설정합니다. 참조 &lt;a href=&quot;cmake_argv0#variable:CMAKE_ARGV0&quot; id=&quot;index-0-variable:CMAKE_ARGV0&quot;&gt; &lt;code&gt;CMAKE_ARGV0&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="395dfc15ab7d0c15b90cedae2eacf9136fde2131" translate="yes" xml:space="preserve">
          <source>When run in &lt;code&gt;-P&lt;/code&gt; script mode, CMake sets the variables &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; 스크립트 모드 에서 실행할 때 CMake는 &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 변수 를 현재 작업 디렉토리로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="eea711ae8a7369a5b488b81e0d0b8913874da3b9" translate="yes" xml:space="preserve">
          <source>When running &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;, this option can be enabled with the &lt;code&gt;-Wdeprecated&lt;/code&gt; option, or disabled with the &lt;code&gt;-Wno-deprecated&lt;/code&gt; option.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 실행할 &lt;code&gt;-Wdeprecated&lt;/code&gt; 옵션 은 -Wdeprecated 옵션 으로 활성화 하거나 &lt;code&gt;-Wno-deprecated&lt;/code&gt; 옵션으로 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f6f8de8fda6cfffcd65c10a952263fe24913863" translate="yes" xml:space="preserve">
          <source>When running &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, CMake searches for the strings listed in &lt;a href=&quot;#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt; in C++ source and header files. If any of the strings is found</source>
          <target state="translated">&lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; 를&lt;/a&gt; 실행할 때 CMake 는 C ++ 소스 및 헤더 파일 에서 &lt;a href=&quot;#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; &lt;/a&gt; 에 나열된 문자열을 검색 합니다. 문자열이 발견되면</target>
        </trans-unit>
        <trans-unit id="9ccebf80715eedf5303138872096ede8f3f7a27f" translate="yes" xml:space="preserve">
          <source>When running CMake with the &lt;code&gt;--graphviz=foo.dot&lt;/code&gt; option, it produces:</source>
          <target state="translated">&lt;code&gt;--graphviz=foo.dot&lt;/code&gt; 옵션으로 CMake를 실행 하면 다음이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c45164861e10f10c84a2c8585494c027dc0994aa" translate="yes" xml:space="preserve">
          <source>When saving a failing test&amp;rsquo;s output, this is the maximum size, in bytes, that will be collected by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. Defaults to 307200 (300 KiB).</source>
          <target state="translated">실패한 테스트의 출력을 저장할 때 이는 &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령 으로 수집 할 최대 크기 (바이트 ) 입니다. 기본값은 307200 (300 KiB)입니다.</target>
        </trans-unit>
        <trans-unit id="e2e937561a13d3ba8c88d972d1f3fafeaac59cfe" translate="yes" xml:space="preserve">
          <source>When saving a passing test&amp;rsquo;s output, this is the maximum size, in bytes, that will be collected by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. Defaults to 1024 (1 KiB).</source>
          <target state="translated">통과 테스트의 출력을 저장할 때 &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령 으로 수집 할 최대 크기 (바이트 ) 입니다. 기본값은 1024 (1 KiB)입니다.</target>
        </trans-unit>
        <trans-unit id="5c80dd222b2b0afe44a389275546153ab2bbdd41" translate="yes" xml:space="preserve">
          <source>When searching for frameworks, if the file is specified as &lt;code&gt;A/b.h&lt;/code&gt;, then the framework search will look for &lt;code&gt;A.framework/Headers/b.h&lt;/code&gt;. If that is found the path will be set to the path to the framework. CMake will convert this to the correct &lt;code&gt;-F&lt;/code&gt; option to include the file.</source>
          <target state="translated">프레임 워크를 검색 할 때 파일이 &lt;code&gt;A/b.h&lt;/code&gt; 로 지정된 경우 프레임 워크 검색은 &lt;code&gt;A.framework/Headers/b.h&lt;/code&gt; 를 찾습니다 . 이것이 발견되면 경로는 프레임 워크의 경로로 설정됩니다. CMake는 파일을 포함 하기 위해 이것을 올바른 &lt;code&gt;-F&lt;/code&gt; 옵션으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="ba0e46d6a50d1f5c56de012e346edbe9b6d22aee" translate="yes" xml:space="preserve">
          <source>When set this is used instead of &lt;a href=&quot;autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; for files generated by &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">설정하면이 대신 사용됩니다 &lt;a href=&quot;autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt; 에 의해 생성 된 파일을 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="982e9a681464423f19a76e6b963f469e9e81f4d3" translate="yes" xml:space="preserve">
          <source>When set this is used instead of &lt;a href=&quot;autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; for files generated by &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">설정하면이 대신 사용됩니다 &lt;a href=&quot;autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt; &lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt; &lt;/a&gt; 에 의해 생성 된 파일을 &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c115f66314311ef67036c23c2581e4493fd8cdb" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;TRUE&lt;/code&gt; in a directory, the build system produced by the &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; is set up to only consider dependencies on source files that appear either in the source or in the binary directories. Changes to source files outside of these directories will not cause rebuilds.</source>
          <target state="translated">디렉토리에서 &lt;code&gt;TRUE&lt;/code&gt; 로 설정 하면 &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기에서&lt;/a&gt; 생성 한 빌드 시스템 은 소스 또는 바이너리 디렉토리에 나타나는 소스 파일에 대한 종속성 만 고려하도록 설정됩니다. 이러한 디렉토리 외부의 소스 파일을 변경해도 재 구축되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="18cfb0c3538b0d1cdb312f01bc868b553a56df0f" translate="yes" xml:space="preserve">
          <source>When set, this variable specifies the logging level used by the &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message()&lt;/code&gt;&lt;/a&gt; command. Valid values are the same as those for the &lt;code&gt;--log-level&lt;/code&gt; command line option of the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; program. If this variable is set and the &lt;code&gt;--log-level&lt;/code&gt; command line option is given, the command line option takes precedence.</source>
          <target state="translated">설정되면이 변수는 &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt; &lt;code&gt;message()&lt;/code&gt; &lt;/a&gt; 명령에 사용되는 로깅 레벨을 지정합니다 . 유효한 값은 &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 프로그램 의 &lt;code&gt;--log-level&lt;/code&gt; 명령 줄 옵션과 동일합니다 . 이 변수가 설정되고 &lt;code&gt;--log-level&lt;/code&gt; 명령 줄 옵션이 제공되면 명령 줄 옵션이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="2081f69af01d3088a74766a75234c1dc2cf86b6d" translate="yes" xml:space="preserve">
          <source>When source property &lt;code&gt;OUTPUT_DIR&lt;/code&gt; is defined, multiple directories can be specified as part of &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt;.</source>
          <target state="translated">소스 속성 &lt;code&gt;OUTPUT_DIR&lt;/code&gt; 이 정의되면 &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; 의 일부로 여러 디렉터리를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d32c0511e81c0d84107db4abcdd18d639623d546" translate="yes" xml:space="preserve">
          <source>When specified, arguments of the &lt;code&gt;LINKER:&lt;/code&gt; prefix will be concatenated using this value as separator.</source>
          <target state="translated">지정되면 &lt;code&gt;LINKER:&lt;/code&gt; 접 두부 의 인수가이 값을 구분 기호로 사용하여 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="96ebe6e47616a467b52988a55e1ee38b920fc052" translate="yes" xml:space="preserve">
          <source>When specifying index values, if &lt;code&gt;&amp;lt;element index&amp;gt;&lt;/code&gt; is 0 or greater, it is indexed from the beginning of the list, with 0 representing the first list element. If &lt;code&gt;&amp;lt;element index&amp;gt;&lt;/code&gt; is -1 or lesser, it is indexed from the end of the list, with -1 representing the last list element. Be careful when counting with negative indices: they do not start from 0. -0 is equivalent to 0, the first list element.</source>
          <target state="translated">인덱스 값을 지정할 때 &lt;code&gt;&amp;lt;element index&amp;gt;&lt;/code&gt; 가 0 이상이면 목록의 시작 부분부터 색인이 작성되며 0은 첫 번째 목록 요소를 나타냅니다. 경우 &lt;code&gt;&amp;lt;element index&amp;gt;&lt;/code&gt; -1 낮아, 그것으로는 -1 마지막 목록 요소를 나타내는리스트의 끝에서 인덱싱된다. 음수 인덱스로 계산할 때는주의하십시오. 0부터 시작하지 않습니다. -0은 첫 번째 목록 요소 인 0과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f7d1a5e7a143228c62e9f544a9ded60180a5427e" translate="yes" xml:space="preserve">
          <source>When target dependencies are specified using &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, CMake will read this property from all target dependencies to determine the build properties of the consumer.</source>
          <target state="translated">&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 사용하여 대상 종속성을 지정하면 CMake는 모든 대상 종속성에서이 속성을 읽어 소비자의 빌드 속성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="d097c5b6934c281cdea7601f5be524c384c0a114" translate="yes" xml:space="preserve">
          <source>When target dependencies are specified using &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, CMake will read this property from all target dependencies to determine the sources of the consumer.</source>
          <target state="translated">&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 사용하여 대상 종속성을 지정하면 CMake는 모든 대상 종속성에서이 속성을 읽어 소비자의 소스를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="b75a65b05b20258928b8651c34e10073121e7617" translate="yes" xml:space="preserve">
          <source>When target dependencies are specified using &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, CMake will read this property from all target dependencies to mark the same include directories as containing system headers.</source>
          <target state="translated">&lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 사용하여 대상 종속성을 지정하면 CMake는 모든 대상 종속성에서이 속성을 읽어 시스템 헤더를 포함하는 동일한 포함 디렉토리를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a5271b79b3cf50615ecef00ebb733d1df1363ed0" translate="yes" xml:space="preserve">
          <source>When targeting Windows 10 and above Visual Studio 2015 and above support specification of a target Windows version to select a corresponding SDK. The &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable may be set to specify a version. Otherwise CMake computes a default version based on the Windows SDK versions available. The chosen Windows target version number is provided in &lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt;. If no Windows 10 SDK is available this value will be empty.</source>
          <target state="translated">Windows 10 이상을 대상으로하는 경우 Visual Studio 2015 이상은 대상 Windows 버전의 사양을 지원하여 해당 SDK를 선택합니다. &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; 의&lt;/a&gt; 변수는 버전을 지정하도록 설정할 수 있습니다. 그렇지 않으면 CMake는 사용 가능한 Windows SDK 버전을 기반으로 기본 버전을 계산합니다. 선택한 Windows 대상 버전 번호는 &lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt; 에 제공됩니다 . 사용 가능한 Windows 10 SDK가 없으면이 값은 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="374e7d28e82b0941e81071267b4059043789bf63" translate="yes" xml:space="preserve">
          <source>When test &lt;code&gt;MyTest&lt;/code&gt; runs the &lt;code&gt;DATA{MyInput.png}&lt;/code&gt; argument will be replaced by the full path to a real instance of the data file &lt;code&gt;MyInput.png&lt;/code&gt; on disk. If the source tree contains a content link such as &lt;code&gt;MyInput.png.md5&lt;/code&gt; then the &lt;code&gt;MyData&lt;/code&gt; target creates a real &lt;code&gt;MyInput.png&lt;/code&gt; in the build tree.</source>
          <target state="translated">test &lt;code&gt;MyTest&lt;/code&gt; 가 실행되면 &lt;code&gt;DATA{MyInput.png}&lt;/code&gt; 인수는 디스크 에있는 데이터 파일 &lt;code&gt;MyInput.png&lt;/code&gt; 의 실제 인스턴스에 대한 전체 경로로 대체됩니다 . 소스 트리 같은 콘텐츠 링크가 포함 된 경우 &lt;code&gt;MyInput.png.md5&lt;/code&gt; 를 다음 &lt;code&gt;MyData&lt;/code&gt; 대상은 실제 생성 &lt;code&gt;MyInput.png&lt;/code&gt; 빌드 트리를.</target>
        </trans-unit>
        <trans-unit id="7845b4bf711121b4e262cde72e6cc7c2a99b3e96" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-8-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command finds a candidate package configuration file it looks next to it for a version file. The version file is loaded to test whether the package version is an acceptable match for the version requested. If the version file claims compatibility the configuration file is accepted. Otherwise it is ignored.</source>
          <target state="translated">때 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-8-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령이 후보 패키지 구성 파일을 발견 그것은 버전 파일 옆에 보인다. 버전 파일은 패키지 버전이 요청 된 버전과 일치하는지 테스트하기 위해로드됩니다. 버전 파일이 호환성을 요구하면 구성 파일이 승인됩니다. 그렇지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4f9971f8ee32a214acd471331a666825b8266672" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-9-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command loads a version file it first sets the following variables:</source>
          <target state="translated">때 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-9-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령로드 먼저 다음과 같은 변수를 설정하는 버전의 파일 :</target>
        </trans-unit>
        <trans-unit id="a66b80bb1bc3e2af3868d7ebe2fe319362c99ab7" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-7-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command sees a normal variable of the given name:</source>
          <target state="translated">&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-7-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt; 명령이 주어진 이름의 일반 변수를 볼 때 :</target>
        </trans-unit>
        <trans-unit id="0c55d01b8b15049254d102a8687fa43c7ab6e6b0" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../module/externalproject#command:externalproject_add&quot; id=&quot;index-8-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;UPDATE_DISCONNECTED&lt;/code&gt; or &lt;code&gt;TEST_EXCLUDE_FROM_MAIN&lt;/code&gt; option is used, or the &lt;a href=&quot;../module/externalproject#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt;&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;EXCLUDE_FROM_MAIN&lt;/code&gt; option is used for a custom step, some step targets may be created automatically. These are needed to hold the steps commonly depended upon by the primary target and the disconnected step targets.</source>
          <target state="translated">때 &lt;a href=&quot;../module/externalproject#command:externalproject_add&quot; id=&quot;index-8-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;UPDATE_DISCONNECTED&lt;/code&gt; 또는 &lt;code&gt;TEST_EXCLUDE_FROM_MAIN&lt;/code&gt; 옵션을 사용하거나 &lt;a href=&quot;../module/externalproject#command:externalproject_add_step&quot; id=&quot;index-2-command:externalproject_add_step&quot;&gt; &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;EXCLUDE_FROM_MAIN&lt;/code&gt; 의 옵션을 사용자 정의 단계에 사용되는 몇 가지 단계 대상은 자동으로 생성 할 수있다. 이는 기본 대상 및 연결 해제 된 단계 대상에서 일반적으로 의존하는 단계를 유지하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="61f98fc868046e3795f30078bcf9805cca368ab6" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../prop_test/processors#prop_test:PROCESSORS&quot; id=&quot;index-1-prop_test:PROCESSORS&quot;&gt;&lt;code&gt;PROCESSORS&lt;/code&gt;&lt;/a&gt; test property is set, CTest will display a weighted test timing result in label and subproject summaries. The time is reported with &lt;code&gt;sec*proc&lt;/code&gt; instead of just &lt;code&gt;sec&lt;/code&gt;.</source>
          <target state="translated">때 &lt;a href=&quot;../prop_test/processors#prop_test:PROCESSORS&quot; id=&quot;index-1-prop_test:PROCESSORS&quot;&gt; &lt;code&gt;PROCESSORS&lt;/code&gt; &lt;/a&gt; 시험 속성이 설정되고, CTest 라벨 및 서브 프로젝트 요약에서 가중 테스트 타이밍 결과를 표시한다. 시간은 함께보고 &lt;code&gt;sec*proc&lt;/code&gt; 대신에 단지 &lt;code&gt;sec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7f39f3be1fdf72532dbe74f94ceabe856888de0" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-6-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of an &lt;a href=&quot;#imported-targets&quot;&gt;imported target&lt;/a&gt; is consumed, the entries in the property are treated as &lt;code&gt;SYSTEM&lt;/code&gt; include directories, as if they were listed in the &lt;a href=&quot;../prop_tgt/interface_system_include_directories#prop_tgt:INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of the dependency. This can result in omission of compiler warnings for headers found in those directories. This behavior for &lt;a href=&quot;#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; may be controlled by setting the &lt;a href=&quot;../prop_tgt/no_system_from_imported#prop_tgt:NO_SYSTEM_FROM_IMPORTED&quot; id=&quot;index-0-prop_tgt:NO_SYSTEM_FROM_IMPORTED&quot;&gt;&lt;code&gt;NO_SYSTEM_FROM_IMPORTED&lt;/code&gt;&lt;/a&gt; target property on the &lt;em&gt;consumers&lt;/em&gt; of imported targets.</source>
          <target state="translated">때 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-6-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;#imported-targets&quot;&gt;수입 목표는&lt;/a&gt; 소비, 재산의 항목으로 처리됩니다 &lt;code&gt;SYSTEM&lt;/code&gt; 은 그들이에 나와있는 것처럼, 디렉토리를 포함 &lt;a href=&quot;../prop_tgt/interface_system_include_directories#prop_tgt:INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의존성. 이로 인해 해당 디렉토리에있는 헤더에 대한 컴파일러 경고가 생략 될 수 있습니다. &lt;a href=&quot;#imported-targets&quot;&gt;가져온 대상에&lt;/a&gt; 대한이 동작은 가져온 대상 &lt;em&gt;소비자&lt;/em&gt; 에서 &lt;a href=&quot;../prop_tgt/no_system_from_imported#prop_tgt:NO_SYSTEM_FROM_IMPORTED&quot; id=&quot;index-0-prop_tgt:NO_SYSTEM_FROM_IMPORTED&quot;&gt; &lt;code&gt;NO_SYSTEM_FROM_IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 속성을 설정하여 제어 할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6ad4b6542b11b88ccc55ee173173e573bc43d84" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable takes its default value then &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; is by default set to the same value as the &lt;a href=&quot;cmake_host_system_version#variable:CMAKE_HOST_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_HOST_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable so that the build targets the host system version.</source>
          <target state="translated">때 &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 의&lt;/a&gt; 변수가 다음 기본 값을 취 &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; 가 와 같은 값으로 기본 설정입니다 &lt;a href=&quot;cmake_host_system_version#variable:CMAKE_HOST_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_HOST_SYSTEM_VERSION&lt;/code&gt; 의&lt;/a&gt; 변수 때문에 빌드가 호스트 시스템 버전을 대상으로있다.</target>
        </trans-unit>
        <trans-unit id="360a6ad80f694cc8eea1eb4307ca4dc2d20c5856" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable is set explicitly to enable &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-toolchain&quot;&gt;cross compiling&lt;/a&gt; then the value of &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; must also be set explicitly to specify the target system version.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-toolchain&quot;&gt;교차 컴파일&lt;/a&gt; 을 사용 하도록 &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 변수를 명시 적으로 설정 한 경우 대상 시스템 버전을 지정하도록 &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; 값 도 명시 적으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf4066c7d99750ea647587fe47ed7c6fcff6b7ae" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--show-only=json-v1&lt;/code&gt; command line option is given, the test information is output in JSON format. Version 1.0 of the JSON object model is defined as follows:</source>
          <target state="translated">경우 &lt;code&gt;--show-only=json-v1&lt;/code&gt; JSON 형식의 커맨드 라인 옵션이 주어, 테스트 정보가 출력. JSON 객체 모델의 버전 1.0은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a3573503f3dfd7c9b96126cad4b8703c04edf050" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;CUDA&lt;/code&gt; language has been enabled, this provides a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of include directories provided by the CUDA Toolkit. The value may be useful for C++ source files to include CUDA headers.</source>
          <target state="translated">때 &lt;code&gt;CUDA&lt;/code&gt; 의 언어가 활성화되어, 이것은 제공 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론으로 구분 된 목록&lt;/a&gt; 쿠다 툴킷에서 제공하는 디렉토리를 포함의를. 이 값은 C ++ 소스 파일이 CUDA 헤더를 포함하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="706d3e585302e47bf40625d8b7035bba222b2bf0" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;QUIET&lt;/code&gt; argument is given, no status messages will be printed.</source>
          <target state="translated">때 &lt;code&gt;QUIET&lt;/code&gt; 의 인수가 주어, 상태 메시지가 인쇄되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c55753c9fb7a8b882a41af0dd923e20644b99545" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;REQUIRED&lt;/code&gt; argument is given, the command will fail with an error if module(s) could not be found.</source>
          <target state="translated">때 &lt;code&gt;REQUIRED&lt;/code&gt; 인수가 주어 모듈 (들)이 발견되지 않는 경우, 명령이 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="483f68ff3aecf47c6c3a5bed9fbf504993c80ff4" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;[version]&lt;/code&gt; argument is given Config mode will only find a version of the package that claims compatibility with the requested version (format is &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt;). If the &lt;code&gt;EXACT&lt;/code&gt; option is given only a version of the package claiming an exact match of the requested version may be found. CMake does not establish any convention for the meaning of version numbers. Package version numbers are checked by &amp;ldquo;version&amp;rdquo; files provided by the packages themselves. For a candidate package configuration file &lt;code&gt;&amp;lt;config-file&amp;gt;.cmake&lt;/code&gt; the corresponding version file is located next to it and named either &lt;code&gt;&amp;lt;config-file&amp;gt;-version.cmake&lt;/code&gt; or &lt;code&gt;&amp;lt;config-file&amp;gt;Version.cmake&lt;/code&gt;. If no such version file is available then the configuration file is assumed to not be compatible with any requested version. A basic version file containing generic version matching code can be created using the &lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt;&lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt;&lt;/a&gt; module. When a version file is found it is loaded to check the requested version number. The version file is loaded in a nested scope in which the following variables have been defined:</source>
          <target state="translated">&lt;code&gt;[version]&lt;/code&gt; 인수가 제공 되면 구성 모드는 요청 된 버전과의 호환성을 주장하는 패키지 버전 만 찾습니다 (형식은 &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt; ). 경우 &lt;code&gt;EXACT&lt;/code&gt; 옵션이 요청 된 버전의 정확한 일치를 주장하는 패키지의 버전을 주어 찾을 수 있습니다. CMake는 버전 번호의 의미에 대한 규칙을 설정하지 않습니다. 패키지 버전 번호는 패키지 자체에서 제공하는 &quot;버전&quot;파일로 확인됩니다. 후보 패키지 구성 파일 &lt;code&gt;&amp;lt;config-file&amp;gt;.cmake&lt;/code&gt; 의 경우 해당 버전 파일이 옆에 있으며 &lt;code&gt;&amp;lt;config-file&amp;gt;-version.cmake&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;config-file&amp;gt;Version.cmake&lt;/code&gt; 로 이름 지정됩니다.. 이러한 버전 파일이 없으면 구성 파일은 요청 된 버전과 호환되지 않는 것으로 간주됩니다. &lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt; &lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 일반 버전 일치 코드를 포함하는 기본 버전 파일을 작성할 수 있습니다 . 버전 파일이 발견되면 요청 된 버전 번호를 확인하기 위해로드됩니다. 버전 파일은 다음 변수가 정의 된 중첩 범위에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="3170e91714fa7b1952a6100885dedd2391d21cfd" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;[version]&lt;/code&gt; argument is given, Config mode will only find a version of the package that claims compatibility with the requested version (see &lt;a href=&quot;#find-package-version-format&quot;&gt;format specification&lt;/a&gt;). If the &lt;code&gt;EXACT&lt;/code&gt; option is given, only a version of the package claiming an exact match of the requested version may be found. CMake does not establish any convention for the meaning of version numbers. Package version numbers are checked by &amp;ldquo;version&amp;rdquo; files provided by the packages themselves. For a candidate package configuration file &lt;code&gt;&amp;lt;config-file&amp;gt;.cmake&lt;/code&gt; the corresponding version file is located next to it and named either &lt;code&gt;&amp;lt;config-file&amp;gt;-version.cmake&lt;/code&gt; or &lt;code&gt;&amp;lt;config-file&amp;gt;Version.cmake&lt;/code&gt;. If no such version file is available then the configuration file is assumed to not be compatible with any requested version. A basic version file containing generic version matching code can be created using the &lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt;&lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt;&lt;/a&gt; module. When a version file is found it is loaded to check the requested version number. The version file is loaded in a nested scope in which the following variables have been defined:</source>
          <target state="translated">때 &lt;code&gt;[version]&lt;/code&gt; 인수가 주어, 구성 모드는 요청 된 버전과 주장 호환성 (참조하는 패키지의 버전을 찾을 수 있습니다 &lt;a href=&quot;#find-package-version-format&quot;&gt;형식 사양&lt;/a&gt; ). 경우 &lt;code&gt;EXACT&lt;/code&gt; 옵션이 주어, 요청 된 버전의 정확한 일치를 주장하는 패키지의 버전을 확인할 수 있습니다. CMake는 버전 번호의 의미에 대한 규칙을 설정하지 않습니다. 패키지 버전 번호는 패키지 자체에서 제공하는 &quot;버전&quot;파일로 확인됩니다. 후보 패키지 구성 파일 &lt;code&gt;&amp;lt;config-file&amp;gt;.cmake&lt;/code&gt; 의 경우 해당 버전 파일이 그 옆에 있으며 이름이 &lt;code&gt;&amp;lt;config-file&amp;gt;-version.cmake&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;config-file&amp;gt;Version.cmake&lt;/code&gt; 입니다.. 이러한 버전 파일을 사용할 수없는 경우 구성 파일은 요청 된 버전과 호환되지 않는 것으로 간주됩니다. 일반 버전 일치 코드가 포함 된 기본 버전 파일은 &lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt; &lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 만들 수 있습니다 . 버전 파일이 발견되면 요청 된 버전 번호를 확인하기 위해로드됩니다. 버전 파일은 다음 변수가 정의 된 중첩 된 범위에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="82ef581d059d8dbf02da3783a540cdd15be891b4" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;_autogen&lt;/code&gt; target doesn&amp;rsquo;t require all the origin target&amp;rsquo;s dependencies, and &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-4-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; is disabled, it might be necessary to extend &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; to add missing dependencies.</source>
          <target state="translated">때 &lt;code&gt;_autogen&lt;/code&gt; 의 목표는 모든 원점 대상의 종속성을 필요로하지 않으며, &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-4-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; 이&lt;/a&gt; 불가능, 확장 할 필요가 있습니다 &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; 을&lt;/a&gt; 없는 종속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="247754f448317c9a39b15dd8bc98e90ceb8acf14" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cxx_static_assert&lt;/code&gt; feature is not provided by the compiler, a compatibility implementation is available via the &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT(COND)&lt;/code&gt; and &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT_MSG(COND, MSG)&lt;/code&gt; function-like macros. The macros expand to &lt;code&gt;static_assert&lt;/code&gt; where that compiler feature is available, and to a compatibility implementation otherwise. In the first form, the condition is stringified in the message field of &lt;code&gt;static_assert&lt;/code&gt;. In the second form, the message &lt;code&gt;MSG&lt;/code&gt; is passed to the message field of &lt;code&gt;static_assert&lt;/code&gt;, or ignored if using the backward compatibility implementation.</source>
          <target state="translated">컴파일러 에서 &lt;code&gt;cxx_static_assert&lt;/code&gt; 기능을 제공하지 않으면 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT(COND)&lt;/code&gt; 및 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT_MSG(COND, MSG)&lt;/code&gt; 함수 유사 매크로 를 통해 호환성 구현을 사용할 수 있습니다 . 매크로 는 해당 컴파일러 기능을 사용할 수있는 &lt;code&gt;static_assert&lt;/code&gt; 로, 그렇지 않으면 호환성 구현으로 확장됩니다. 첫 번째 양식에서 조건은 &lt;code&gt;static_assert&lt;/code&gt; 의 메시지 필드에 문자열로 표시 됩니다. 두 번째 형태에서, 메시지 &lt;code&gt;MSG&lt;/code&gt; 는 &lt;code&gt;static_assert&lt;/code&gt; 의 메시지 필드로 전달 되거나 이전 버전과의 호환성 구현을 사용하는 경우 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="17d76af17c8d67913f712b53aefe5210d866f8ab" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;project()&lt;/code&gt; command is called from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, then the URL also is stored in the variable &lt;a href=&quot;../variable/cmake_project_homepage_url#variable:CMAKE_PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:CMAKE_PROJECT_HOMEPAGE_URL&quot;&gt;&lt;code&gt;CMAKE_PROJECT_HOMEPAGE_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;project()&lt;/code&gt; 명령을 최상위에서 호출 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 다음 URL은 또한 변수에 저장됩니다 &lt;a href=&quot;../variable/cmake_project_homepage_url#variable:CMAKE_PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:CMAKE_PROJECT_HOMEPAGE_URL&quot;&gt; &lt;code&gt;CMAKE_PROJECT_HOMEPAGE_URL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19abdd15771da5fe9b1aff7b8b8edcd516ca701b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;project()&lt;/code&gt; command is called from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, then the description is also stored in the variable &lt;a href=&quot;../variable/cmake_project_description#variable:CMAKE_PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:CMAKE_PROJECT_DESCRIPTION&quot;&gt;&lt;code&gt;CMAKE_PROJECT_DESCRIPTION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;project()&lt;/code&gt; 명령은 상위 레벨에서 호출 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 다음 설명은 또한 변수에 저장 &lt;a href=&quot;../variable/cmake_project_description#variable:CMAKE_PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:CMAKE_PROJECT_DESCRIPTION&quot;&gt; &lt;code&gt;CMAKE_PROJECT_DESCRIPTION&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0af3e4f68073a1fb76871dcd4921bc68fe599d0" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;project()&lt;/code&gt; command is called from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, then the version is also stored in the variable &lt;a href=&quot;../variable/cmake_project_version#variable:CMAKE_PROJECT_VERSION&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;project()&lt;/code&gt; 명령을 최상위에서 호출 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 다음 버전은 또한 변수에 저장됩니다 &lt;a href=&quot;../variable/cmake_project_version#variable:CMAKE_PROJECT_VERSION&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f408ca58b55115680fb37ed4f65ff9104711ae72" translate="yes" xml:space="preserve">
          <source>When the build system to be launched allows build-time selection of the configuration (e.g. &lt;code&gt;Debug&lt;/code&gt;, &lt;code&gt;Release&lt;/code&gt;), this specifies the default configuration to be built when no &lt;code&gt;-C&lt;/code&gt; option is given to the &lt;code&gt;ctest&lt;/code&gt; command. The value will be substituted into the value of &lt;code&gt;MakeCommand&lt;/code&gt; to replace the literal string &lt;code&gt;${CTEST_CONFIGURATION_TYPE}&lt;/code&gt; if it appears.</source>
          <target state="translated">빌드 시스템이 시작될 때 구성의 빌드 타임 선택 (예 : &lt;code&gt;Debug&lt;/code&gt; , &lt;code&gt;Release&lt;/code&gt; ) 을 허용하면 &lt;code&gt;ctest&lt;/code&gt; 명령에 &lt;code&gt;-C&lt;/code&gt; 옵션이 제공 되지 않을 때 빌드 될 기본 구성을 지정합니다 . 리터럴 문자열 &lt;code&gt;${CTEST_CONFIGURATION_TYPE}&lt;/code&gt; 이 나타나면 이 값이 &lt;code&gt;MakeCommand&lt;/code&gt; 값 으로 대체 됩니다.</target>
        </trans-unit>
        <trans-unit id="b8c0cd55492fa497e6e4d64984323393af624c02" translate="yes" xml:space="preserve">
          <source>When the command will happen is determined by which of the following is specified:</source>
          <target state="translated">명령이 발생할시기는 다음 중 지정된 사항에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="9a140c0fd16d292c55d148459e5eeea9e83a9ff1" translate="yes" xml:space="preserve">
          <source>When the cost of a test is not defined by the project, &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; will initially use a default cost of &lt;code&gt;0&lt;/code&gt;. It computes a weighted average of the cost each time a test is run and uses that as an improved estimate of the cost for the next run. The more a test is re-run in the same build directory, the more representative the cost should become.</source>
          <target state="translated">테스트 비용이 프로젝트에 의해 정의되지 않은 경우 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest&lt;/code&gt; &lt;/a&gt; 는 처음에 기본 비용 &lt;code&gt;0&lt;/code&gt; 을 사용 합니다. 테스트가 실행될 때마다 비용의 가중 평균을 계산하여 다음 실행 비용의 개선 된 추정값으로 사용합니다. 동일한 빌드 디렉토리에서 테스트를 다시 실행할수록 비용이 더 많이 대표됩니다.</target>
        </trans-unit>
        <trans-unit id="ebd94b06691ea837d1cf593513b10e372d22462b" translate="yes" xml:space="preserve">
          <source>When the function is invoked, the recorded &lt;code&gt;&amp;lt;commands&amp;gt;&lt;/code&gt; are first modified by replacing formal parameters (&lt;code&gt;${arg1}&lt;/code&gt;, &amp;hellip;) with the arguments passed, and then invoked as normal commands.</source>
          <target state="translated">함수가 호출되면, 공식 매개 변수 ( &lt;code&gt;${arg1}&lt;/code&gt; ,&amp;hellip;)를 전달 된 인수 로 대체 하여 기록 된 &lt;code&gt;&amp;lt;commands&amp;gt;&lt;/code&gt; 를 먼저 수정 한 후 일반 명령으로 호출합니다.</target>
        </trans-unit>
        <trans-unit id="3bb14219895a26747c439b3f3ca54dc0f87ef6da" translate="yes" xml:space="preserve">
          <source>When the output of &lt;strong&gt;ctest&lt;/strong&gt; is being sent directly to a terminal, the progress through the set of tests is reported by updating the same line rather than printing start and end messages for each test on new lines. This can significantly reduce the verbosity of the test output. Test completion messages are still output on their own line for failed tests and the final test summary will also still be logged.</source>
          <target state="translated">&lt;strong&gt;ctest&lt;/strong&gt; 의 출력이 터미널로 직접 전송되는 경우 각 테스트에 대한 시작 및 종료 메시지를 새 줄에 인쇄하는 대신 동일한 줄을 업데이트하여 일련의 테스트를 통한 진행 상황이보고됩니다. 이로 인해 테스트 출력의 세부 정보가 크게 줄어들 수 있습니다. 테스트 완료 메시지는 실패한 테스트에 대해 자체 라인에 계속 출력되며 최종 테스트 요약도 계속 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="7fb33088eb6951e27b23d195778d87d7b6593781" translate="yes" xml:space="preserve">
          <source>When the resource allocation feature is used, CTest will not oversubscribe resources. For example, if a resource has 8 slots, CTest will not run tests that collectively use more than 8 slots at a time. This has the effect of limiting how many tests can run at any given time, even if a high &lt;code&gt;-j&lt;/code&gt; argument is used, if those tests all use some slots from the same resource. In addition, it means that a single test that uses more of a resource than is available on a machine will not run at all (and will be reported as &lt;code&gt;Not Run&lt;/code&gt;).</source>
          <target state="translated">리소스 할당 기능을 사용할 때 CTest는 리소스를 초과 구독하지 않습니다. 예를 들어 리소스에 8 개의 슬롯이있는 경우 CTest는 한 번에 8 개 이상의 슬롯을 집합 적으로 사용하는 테스트를 실행하지 않습니다. 이는 높은 &lt;code&gt;-j&lt;/code&gt; 인수를 사용하더라도 해당 테스트가 모두 동일한 리소스의 일부 슬롯을 사용하는 경우 지정된 시간에 실행할 수있는 테스트 수를 제한하는 효과가 있습니다. 또한 시스템에서 사용할 수있는 것보다 더 많은 리소스를 사용하는 단일 테스트가 전혀 실행되지 않고 &lt;code&gt;Not Run&lt;/code&gt; 으로보고됨을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="b7e342953fc686afe0c47a0928115def6ab9e9fd" translate="yes" xml:space="preserve">
          <source>When the second script runs &lt;code&gt;ctest_start(APPEND)&lt;/code&gt;, it will read the &lt;code&gt;Experimental&lt;/code&gt; model and &lt;code&gt;GroupExperimental&lt;/code&gt; group from the &lt;code&gt;TAG&lt;/code&gt; file generated by the first &lt;code&gt;ctest_start()&lt;/code&gt; command. Please note that if you call &lt;code&gt;ctest_start(APPEND)&lt;/code&gt; and specify a different model or group than in the first &lt;code&gt;ctest_start()&lt;/code&gt; command, a warning will be issued, and the new model and group will be used.</source>
          <target state="translated">두 번째 스크립트가 &lt;code&gt;ctest_start(APPEND)&lt;/code&gt; 실행 하면 첫 번째 &lt;code&gt;ctest_start()&lt;/code&gt; 명령에 의해 생성 된 &lt;code&gt;TAG&lt;/code&gt; 파일 에서 &lt;code&gt;Experimental&lt;/code&gt; 모델과 &lt;code&gt;GroupExperimental&lt;/code&gt; 그룹을 읽습니다 . &lt;code&gt;ctest_start(APPEND)&lt;/code&gt; 를 호출 하고 첫 번째 &lt;code&gt;ctest_start()&lt;/code&gt; 명령과 다른 모델 또는 그룹을 지정 하면 경고가 발생하고 새 모델과 그룹이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c225a9f1024da27fcee497ba763d66e0ab6f6aa6" translate="yes" xml:space="preserve">
          <source>When the second script runs &lt;code&gt;ctest_start(APPEND)&lt;/code&gt;, it will read the &lt;code&gt;Experimental&lt;/code&gt; model and &lt;code&gt;TrackExperimental&lt;/code&gt; track from the &lt;code&gt;TAG&lt;/code&gt; file generated by the first &lt;code&gt;ctest_start()&lt;/code&gt; command. Please note that if you call &lt;code&gt;ctest_start(APPEND)&lt;/code&gt; and specify a different model or track than in the first &lt;code&gt;ctest_start()&lt;/code&gt; command, a warning will be issued, and the new model and track will be used.</source>
          <target state="translated">두 번째 스크립트가 &lt;code&gt;ctest_start(APPEND)&lt;/code&gt; 실행 하면 첫 번째 &lt;code&gt;ctest_start()&lt;/code&gt; 명령으로 생성 된 &lt;code&gt;TAG&lt;/code&gt; 파일 에서 &lt;code&gt;Experimental&lt;/code&gt; 모델 및 &lt;code&gt;TrackExperimental&lt;/code&gt; 트랙을 읽습니다 . &lt;code&gt;ctest_start(APPEND)&lt;/code&gt; 를 호출 하고 첫 번째 &lt;code&gt;ctest_start()&lt;/code&gt; 명령과 다른 모델 또는 트랙을 지정 하면 경고가 발행되고 새 모델 및 트랙이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a6ca24e1c3a2d96d10d52f3563d8db381968e264" translate="yes" xml:space="preserve">
          <source>When the server is busy for a long time, it is polite to send back replies of type &amp;ldquo;progress&amp;rdquo; to the client. These will contain a &amp;ldquo;progressMessage&amp;rdquo; with a string describing the action currently taking place as well as &amp;ldquo;progressMinimum&amp;rdquo;, &amp;ldquo;progressMaximum&amp;rdquo; and &amp;ldquo;progressCurrent&amp;rdquo; with integer values describing the range of progress.</source>
          <target state="translated">서버가 오랫동안 바쁘면&amp;ldquo;progress&amp;rdquo;유형의 회신을 클라이언트에게 다시 보내는 것이 예의입니다. 여기에는 현재 진행중인 작업을 설명하는 문자열이있는 &quot;progressMessage&quot;와 진행률 범위를 나타내는 정수 값이있는 &quot;progressMinimum&quot;, &quot;progressMaximum&quot;및 &quot;progressCurrent&quot;가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6e59c383fab5c8863520a8ead39562c841cd72a2" translate="yes" xml:space="preserve">
          <source>When the special case for libraries in implicit link directories was first introduced the list of implicit link directories was simply hard-coded (e.g. &lt;code&gt;/lib&lt;/code&gt;, &lt;code&gt;/usr/lib&lt;/code&gt;, and a few others). Since that time, CMake has learned to detect the implicit link directories used by the compiler front-end. If necessary, the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command could be taught to use this information to help find libraries of the proper architecture.</source>
          <target state="translated">암시 적 링크 디렉토리의 라이브러리에 대한 특수 사례가 처음 소개되었을 때 암시 적 링크 디렉토리 목록은 하드 코딩되었습니다 (예 : &lt;code&gt;/lib&lt;/code&gt; , &lt;code&gt;/usr/lib&lt;/code&gt; 및 기타). 그 이후로 CMake는 컴파일러 프런트 엔드에서 사용하는 암시 적 링크 디렉토리를 감지하는 방법을 배웠습니다. 필요한 경우 &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령은이 정보를 사용하여 적절한 아키텍처의 라이브러리를 찾는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2929a0d0c84ec824624fbd428e14b314febb78e8" translate="yes" xml:space="preserve">
          <source>When the standalone toolchain targets ARM v7, optionally set thisto &lt;code&gt;ON&lt;/code&gt; to target ARM NEON devices. See variable documentation for details.</source>
          <target state="translated">독립형 툴체인이 ARM v7 을 대상으로하는 경우 ARM NEON 장치를 대상으로하려면 선택적으로 &lt;code&gt;ON&lt;/code&gt; 으로 설정하십시오 . 자세한 내용은 가변 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="393f3936ea8f83c6c48a63652e59b3f58125c1bc" translate="yes" xml:space="preserve">
          <source>When the standalone toolchain targets ARM, optionally set this to &lt;code&gt;ON&lt;/code&gt; to target 32-bit ARM instead of 16-bit Thumb. See variable documentation for details.</source>
          <target state="translated">독립형 툴체인이 ARM을 대상으로하는 경우 선택적 으로 16 비트 Thumb 대신 32 비트 ARM을 대상으로 하려면 &lt;code&gt;ON&lt;/code&gt; 으로 설정하십시오 . 자세한 내용은 가변 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="08090826adbbc6e28947195494aad64f8d409510" translate="yes" xml:space="preserve">
          <source>When the test outputs a line that matches &lt;code&gt;regex&lt;/code&gt; its start time is reset to the current time and its timeout duration is changed to &lt;code&gt;seconds&lt;/code&gt;. Prior to this, the timeout duration is determined by the &lt;a href=&quot;timeout#prop_test:TIMEOUT&quot; id=&quot;index-0-prop_test:TIMEOUT&quot;&gt;&lt;code&gt;TIMEOUT&lt;/code&gt;&lt;/a&gt; property or the &lt;a href=&quot;../variable/ctest_test_timeout#variable:CTEST_TEST_TIMEOUT&quot; id=&quot;index-0-variable:CTEST_TEST_TIMEOUT&quot;&gt;&lt;code&gt;CTEST_TEST_TIMEOUT&lt;/code&gt;&lt;/a&gt; variable if either of these are set. Because the test&amp;rsquo;s start time is reset, its execution time will not include any time that was spent waiting for the matching output.</source>
          <target state="translated">테스트에서 &lt;code&gt;regex&lt;/code&gt; 과 일치하는 줄을 출력하면 시작 시간이 현재 시간으로 재설정되고 시간 초과 기간이 &lt;code&gt;seconds&lt;/code&gt; 변경됩니다 . 이 전에 시간 종료 지속 기간은 &lt;a href=&quot;timeout#prop_test:TIMEOUT&quot; id=&quot;index-0-prop_test:TIMEOUT&quot;&gt; &lt;code&gt;TIMEOUT&lt;/code&gt; &lt;/a&gt; 특성 또는 &lt;a href=&quot;../variable/ctest_test_timeout#variable:CTEST_TEST_TIMEOUT&quot; id=&quot;index-0-variable:CTEST_TEST_TIMEOUT&quot;&gt; &lt;code&gt;CTEST_TEST_TIMEOUT&lt;/code&gt; &lt;/a&gt; 변수 중 하나가 설정되어 있으면 결정됩니다 . 테스트의 시작 시간이 재설정되므로 실행 시간에는 일치하는 출력을 기다리는 데 걸린 시간이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4f558810d55707bd9bfec1d650e456204cd0598" translate="yes" xml:space="preserve">
          <source>When there are multiple &lt;code&gt;.qrc&lt;/code&gt; files with the same name, CMake will generate unspecified unique output file names for &lt;code&gt;rcc&lt;/code&gt;. Therefore, if &lt;code&gt;Q_INIT_RESOURCE()&lt;/code&gt; or &lt;code&gt;Q_CLEANUP_RESOURCE()&lt;/code&gt; need to be used, the &lt;code&gt;.qrc&lt;/code&gt; file name must be unique.</source>
          <target state="translated">이름이 같은 &lt;code&gt;.qrc&lt;/code&gt; 파일 이 여러 개 있으면 CMake는 &lt;code&gt;rcc&lt;/code&gt; 에 대해 지정되지 않은 고유 한 출력 파일 이름을 생성 합니다. 따라서 &lt;code&gt;Q_INIT_RESOURCE()&lt;/code&gt; 또는 &lt;code&gt;Q_CLEANUP_RESOURCE()&lt;/code&gt; 사용해야하는 경우 &lt;code&gt;.qrc&lt;/code&gt; 파일 이름은 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4f160f6cd4402a8ef3f279abc8f3f0faa6a9cae" translate="yes" xml:space="preserve">
          <source>When this behavior is enable for generated Xcode projects, the &lt;code&gt;EFFECTIVE_PLATFORM_NAME&lt;/code&gt; variable will leak into &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;Generator expressions&lt;/code&gt;&lt;/a&gt; like &lt;code&gt;TARGET_FILE&lt;/code&gt; and will render those mostly unusable.</source>
          <target state="translated">생성 된 Xcode 프로젝트에이 동작을 사용하면 &lt;code&gt;EFFECTIVE_PLATFORM_NAME&lt;/code&gt; 변수가 &lt;code&gt;TARGET_FILE&lt;/code&gt; 과 같은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;Generator expressions&lt;/code&gt; &lt;/a&gt; 으로 누출되어 대부분 사용할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="b265194de40a1bd025c1116f2857fa7a85037150" translate="yes" xml:space="preserve">
          <source>When this option is enabled, no attempt is made to download or update any content. It is assumed that all content has already been populated in a previous run or the source directories have been pointed at existing contents the developer has provided manually (using options described further below). When the developer knows that no changes have been made to any content details, turning this option &lt;code&gt;ON&lt;/code&gt; can significantly speed up the configure stage. It is &lt;code&gt;OFF&lt;/code&gt; by default.</source>
          <target state="translated">이 옵션을 사용하면 컨텐츠를 다운로드하거나 업데이트하지 않습니다. 모든 컨텐츠가 이전 실행에서 이미 채워 졌거나 소스 디렉토리가 개발자가 수동으로 제공 한 기존 컨텐츠를 가리키고 있다고 가정합니다 (아래에 설명 된 옵션 사용). 개발자는 변경이 옵션 회전, 콘텐츠 세부 사항을하지 않은 것을 알 때 &lt;code&gt;ON&lt;/code&gt; 이 크게 구성 단계의 속도를 높일 수 있습니다. 그것은이다 &lt;code&gt;OFF&lt;/code&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="2a558dab87bffe441d3d71b976a868a56bf39336" translate="yes" xml:space="preserve">
          <source>When this option is enabled, the &lt;code&gt;git clone&lt;/code&gt; operation will be given the &lt;code&gt;--depth 1&lt;/code&gt; option. This performs a shallow clone, which avoids downloading the whole history and instead retrieves just the commit denoted by the &lt;code&gt;GIT_TAG&lt;/code&gt; option.</source>
          <target state="translated">이 옵션이 활성화되면 &lt;code&gt;git clone&lt;/code&gt; 작업에 &lt;code&gt;--depth 1&lt;/code&gt; 옵션이 제공됩니다. 얕은 복제를 수행하여 전체 히스토리를 다운로드하지 않고 대신 &lt;code&gt;GIT_TAG&lt;/code&gt; 옵션으로 표시된 커밋 만 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="1f46115136076dc5fa5edd31a38650bc7e54f845" translate="yes" xml:space="preserve">
          <source>When this option is enabled, the build will be done directly within the external project&amp;rsquo;s source tree. This should generally be avoided, the use of a separate build directory is usually preferred, but it can be useful when the external project assumes an in-source build. The &lt;code&gt;BINARY_DIR&lt;/code&gt; option should not be specified if building in-source.</source>
          <target state="translated">이 옵션이 활성화되면 빌드는 외부 프로젝트의 소스 트리 내에서 직접 수행됩니다. 일반적으로 피해야하며 별도의 빌드 디렉토리를 사용하는 것이 바람직하지만 외부 프로젝트가 소스 내 빌드를 가정 할 때 유용 할 수 있습니다. &lt;code&gt;BINARY_DIR&lt;/code&gt; 의 옵션에서 소스 빌드 경우 지정되어서는 안된다.</target>
        </trans-unit>
        <trans-unit id="ffe50bcc448fc57cb4f244598a55cd62609f45bd" translate="yes" xml:space="preserve">
          <source>When this option is enabled, the test step will be executed before the install step. The default behavior is for the test step to run after the install step.</source>
          <target state="translated">이 옵션을 사용하면 설치 단계 전에 테스트 단계가 실행됩니다. 기본 동작은 설치 단계 후에 테스트 단계를 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="58f5d348e31d6015e2cc64875492b63901093073" translate="yes" xml:space="preserve">
          <source>When this option is present, it is generally advisable to make the value a cache variable under the developer&amp;rsquo;s control rather than hard-coding it. If this option is not present, the default value is taken from the &lt;code&gt;EP_UPDATE_DISCONNECTED&lt;/code&gt; directory property. If that is also not defined, updates are performed as normal. The &lt;code&gt;EP_UPDATE_DISCONNECTED&lt;/code&gt; directory property is intended as a convenience for controlling the &lt;code&gt;UPDATE_DISCONNECTED&lt;/code&gt; behavior for an entire section of a project&amp;rsquo;s directory hierarchy and may be a more convenient method of giving developers control over whether or not to perform updates (assuming the project also provides a cache variable or some other convenient method for setting the directory property).</source>
          <target state="translated">이 옵션이 있으면 일반적으로 값을 하드 코딩하는 대신 개발자의 제어하에 캐시 변수로 설정하는 것이 좋습니다. 이 옵션이 없으면 &lt;code&gt;EP_UPDATE_DISCONNECTED&lt;/code&gt; 디렉토리 속성 에서 기본값을 가져옵니다 . 또한 정의되지 않은 경우 업데이트가 정상적으로 수행됩니다. &lt;code&gt;EP_UPDATE_DISCONNECTED&lt;/code&gt; 의 디렉토리 속성은 제어의 편의를위한 것입니다 &lt;code&gt;UPDATE_DISCONNECTED&lt;/code&gt; 의 프로젝트의 디렉토리 계층의 전체 섹션에 대한 동작을 개발자가 이상 업데이트를 수행 할 것인지 여부를 제어주는 더 편리한 방법이 될 수있다 (가정이 프로젝트는 또한 캐시 변수를 제공합니다 또는 디렉토리 속성을 설정하는 다른 편리한 방법).</target>
        </trans-unit>
        <trans-unit id="07823e51f6e3916970a11300328d9da518cd8530" translate="yes" xml:space="preserve">
          <source>When this project is built it will first build the &lt;code&gt;MakeTable&lt;/code&gt; executable. It will then run &lt;code&gt;MakeTable&lt;/code&gt; to produce &lt;code&gt;Table.h&lt;/code&gt;. Finally, it will compile &lt;code&gt;mysqrt.cxx&lt;/code&gt; which includes &lt;code&gt;Table.h&lt;/code&gt; to produce the MathFunctions library.</source>
          <target state="translated">이 프로젝트가 빌드되면 먼저 &lt;code&gt;MakeTable&lt;/code&gt; 실행 파일을 빌드합니다 . 그런 다음 &lt;code&gt;MakeTable&lt;/code&gt; 을 실행하여 Table.h 를 생성 &lt;code&gt;Table.h&lt;/code&gt; . 마지막으로 &lt;code&gt;mysqrt.cxx&lt;/code&gt; 가 포함 된 &lt;code&gt;Table.h&lt;/code&gt; 를 컴파일 하여 MathFunctions 라이브러리를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6add963b4d2cb7e29f370b05b504e4e5aac65c65" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;ON&lt;/code&gt; or if &lt;a href=&quot;../variable/cmake_ghs_no_source_group_file#variable:CMAKE_GHS_NO_SOURCE_GROUP_FILE&quot; id=&quot;index-0-variable:CMAKE_GHS_NO_SOURCE_GROUP_FILE&quot;&gt;&lt;code&gt;CMAKE_GHS_NO_SOURCE_GROUP_FILE&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;ON&lt;/code&gt; then only a single project file is generated for the target.</source>
          <target state="translated">이 특성이 &lt;code&gt;ON&lt;/code&gt; 이거나 &lt;a href=&quot;../variable/cmake_ghs_no_source_group_file#variable:CMAKE_GHS_NO_SOURCE_GROUP_FILE&quot; id=&quot;index-0-variable:CMAKE_GHS_NO_SOURCE_GROUP_FILE&quot;&gt; &lt;code&gt;CMAKE_GHS_NO_SOURCE_GROUP_FILE&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;ON&lt;/code&gt; 이면 대상에 대해 단일 프로젝트 파일 만 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="03b6cc24000e3148941d51aded130341f00a3860" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;ON&lt;/code&gt;, CMake will generate the &lt;code&gt;-p&lt;/code&gt; path prefix option for &lt;code&gt;moc&lt;/code&gt; on &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; enabled Qt targets.</source>
          <target state="translated">이 속성이 &lt;code&gt;ON&lt;/code&gt; 인 경우 CMake는 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 사용 Qt 대상 에서 &lt;code&gt;moc&lt;/code&gt; 에 대한 &lt;code&gt;-p&lt;/code&gt; 경로 접두사 옵션을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="e700f211a8aa1675dda3ad7d8aab364b8e61a270" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;ON&lt;/code&gt;, CMake will handle &lt;code&gt;.qrc&lt;/code&gt; files added as target sources at build time and invoke &lt;code&gt;rcc&lt;/code&gt; accordingly. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt;&lt;code&gt;CMAKE_AUTORCC&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">이 속성이 &lt;code&gt;ON&lt;/code&gt; 이면 CMake는 빌드시 대상 소스로 추가 된 &lt;code&gt;.qrc&lt;/code&gt; 파일 을 처리 하고 &lt;code&gt;rcc&lt;/code&gt; 따라 rcc를 호출 합니다. 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt; &lt;code&gt;CMAKE_AUTORCC&lt;/code&gt; &lt;/a&gt; 변수 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="8e84c208ef8a74623ed93426812662c44b1e4fc5" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;ON&lt;/code&gt;, CMake will scan the header and source files at build time and invoke &lt;code&gt;uic&lt;/code&gt; accordingly.</source>
          <target state="translated">이 속성이 &lt;code&gt;ON&lt;/code&gt; 이면 CMake는 빌드시 헤더 및 소스 파일을 검색하고 그에 따라 &lt;code&gt;uic&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="92aadb5cf36050d57cad48004f2160fc89ee129e" translate="yes" xml:space="preserve">
          <source>When this property is enabled, zero or more &lt;code&gt;.def&lt;/code&gt; files may also be specified as source files of the target. The exports named by these files will be merged with those detected from the object files to generate a single module definition file to be passed to the linker. This can be used to export symbols from a &lt;code&gt;.dll&lt;/code&gt; that are not in any of its object files but are added by the linker from dependencies (e.g. &lt;code&gt;msvcrt.lib&lt;/code&gt;).</source>
          <target state="translated">이 특성을 사용 하면 대상의 소스 파일로 0 개 이상의 &lt;code&gt;.def&lt;/code&gt; 파일을 지정할 수도 있습니다. 이러한 파일로 이름 지정된 내보내기는 오브젝트 파일에서 감지 된 내보내기와 병합되어 링커에 전달 될 단일 모듈 정의 파일을 생성합니다. 이것은 객체 파일에 없지만 링커가 종속성 (예 : &lt;code&gt;msvcrt.lib&lt;/code&gt; ) 에서 추가 한 &lt;code&gt;.dll&lt;/code&gt; 에서 심볼을 내보내는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1908c564c90bc5057c746fe74de078df2d76ff5" translate="yes" xml:space="preserve">
          <source>When this property is set &lt;code&gt;ON&lt;/code&gt;, CMake will scan the header and source files at build time and invoke &lt;code&gt;moc&lt;/code&gt; accordingly.</source>
          <target state="translated">이 속성이 &lt;code&gt;ON&lt;/code&gt; 으로 설정 되면 CMake는 빌드시 헤더 및 소스 파일을 스캔하고 그에 따라 &lt;code&gt;moc&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="ae5a990b71ddb173252f3e048167fc727e1e040b" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;TRUE&lt;/code&gt; the executable when built on macOS or iOS will be created as an application bundle. This makes it a GUI executable that can be launched from the Finder. See the &lt;a href=&quot;macosx_bundle_info_plist#prop_tgt:MACOSX_BUNDLE_INFO_PLIST&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE_INFO_PLIST&quot;&gt;&lt;code&gt;MACOSX_BUNDLE_INFO_PLIST&lt;/code&gt;&lt;/a&gt; target property for information about creation of the &lt;code&gt;Info.plist&lt;/code&gt; file for the application bundle. This property is initialized by the value of the variable &lt;a href=&quot;../variable/cmake_macosx_bundle#variable:CMAKE_MACOSX_BUNDLE&quot; id=&quot;index-0-variable:CMAKE_MACOSX_BUNDLE&quot;&gt;&lt;code&gt;CMAKE_MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; if it is set when a target is created.</source>
          <target state="translated">이 특성이 &lt;code&gt;TRUE&lt;/code&gt; 로 설정 되면 macOS 또는 iOS에서 빌드 될 때 실행 파일이 애플리케이션 번들로 작성됩니다. 이는 Finder에서 실행할 수있는 GUI 실행 파일입니다. 애플리케이션 번들 의 &lt;code&gt;Info.plist&lt;/code&gt; 파일 작성에 대한 정보 는 &lt;a href=&quot;macosx_bundle_info_plist#prop_tgt:MACOSX_BUNDLE_INFO_PLIST&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE_INFO_PLIST&quot;&gt; &lt;code&gt;MACOSX_BUNDLE_INFO_PLIST&lt;/code&gt; &lt;/a&gt; 대상 특성을 참조하십시오 . 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_macosx_bundle#variable:CMAKE_MACOSX_BUNDLE&quot; id=&quot;index-0-variable:CMAKE_MACOSX_BUNDLE&quot;&gt; &lt;code&gt;CMAKE_MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt; 변수의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9a61b1a9359baa70d05738d7acf46978ad60ba3" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;TRUE&lt;/code&gt;, the directory portion of the &lt;code&gt;install_name&lt;/code&gt; field of this shared library will be &lt;code&gt;@rpath&lt;/code&gt; unless overridden by &lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt;. This indicates the shared library is to be found at runtime using runtime paths (rpaths).</source>
          <target state="translated">이 특성이 &lt;code&gt;TRUE&lt;/code&gt; 로 설정되면이 공유 라이브러리 의 &lt;code&gt;install_name&lt;/code&gt; 필드의 디렉토리 부분은 &lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; 로&lt;/a&gt; 대체되지 않는 한 &lt;code&gt;@rpath&lt;/code&gt; 가됩니다 . 공유 라이브러리가 런타임 경로 (rpath)를 사용하여 런타임에 발견됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e39663c2578e8f431949c112bc9bda0e319d50c2" translate="yes" xml:space="preserve">
          <source>When this property is set to set to false (which is the default) then it will either be built with the device SDK or the simulator SDK depending on the SDK set. But if this property is set to true then the target will at install time also be built for the corresponding SDK and combined into one library.</source>
          <target state="translated">이 특성이 false (기본값)로 설정되면 SDK 세트에 따라 디바이스 SDK 또는 시뮬레이터 SDK를 사용하여 빌드됩니다. 그러나이 특성이 true로 설정되면 설치시 대상도 해당 SDK에 대해 빌드되고 하나의 라이브러리로 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="9d9387a900b2ae8bb81208920ace6e146133364a" translate="yes" xml:space="preserve">
          <source>When this property is set to true that enables the ProGuard tool to shrink, optimize, and obfuscate the code by removing unused code and renaming classes, fields, and methods with semantically obscure names. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_proguard#variable:CMAKE_ANDROID_PROGUARD&quot; id=&quot;index-0-variable:CMAKE_ANDROID_PROGUARD&quot;&gt;&lt;code&gt;CMAKE_ANDROID_PROGUARD&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">이 속성을 true로 설정하면 사용하지 않는 코드를 제거하고 의미가 모호한 이름으로 클래스, 필드 및 메서드의 이름을 바꾸어 ProGuard 도구가 코드를 축소, 최적화 및 난독 처리 할 수 ​​있습니다. 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_android_proguard#variable:CMAKE_ANDROID_PROGUARD&quot; id=&quot;index-0-variable:CMAKE_ANDROID_PROGUARD&quot;&gt; &lt;code&gt;CMAKE_ANDROID_PROGUARD&lt;/code&gt; &lt;/a&gt; 변수 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="39169c4d462b9132e80f81ee6231c8d77f95570a" translate="yes" xml:space="preserve">
          <source>When this property is set to true the executable when built for Android will be created as an application package. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_gui#variable:CMAKE_ANDROID_GUI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_GUI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_GUI&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">이 속성을 true로 설정하면 Android 용으로 빌드 할 때 실행 파일이 응용 프로그램 패키지로 생성됩니다. 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_android_gui#variable:CMAKE_ANDROID_GUI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_GUI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_GUI&lt;/code&gt; &lt;/a&gt; 변수 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="25625ffa513de3540cc16df75ed17620ca7f2809" translate="yes" xml:space="preserve">
          <source>When this property is set to true the executable when linked on Windows will be created with a WinMain() entry point instead of just main(). This makes it a GUI executable instead of a console application. See the &lt;a href=&quot;../variable/cmake_mfc_flag#variable:CMAKE_MFC_FLAG&quot; id=&quot;index-0-variable:CMAKE_MFC_FLAG&quot;&gt;&lt;code&gt;CMAKE_MFC_FLAG&lt;/code&gt;&lt;/a&gt; variable documentation to configure use of the Microsoft Foundation Classes (MFC) for WinMain executables. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_win32_executable#variable:CMAKE_WIN32_EXECUTABLE&quot; id=&quot;index-0-variable:CMAKE_WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;CMAKE_WIN32_EXECUTABLE&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">이 속성을 true로 설정하면 Windows에 링크 될 때 실행 파일이 main () 대신 WinMain () 진입 점으로 생성됩니다. 콘솔 응용 프로그램 대신 GUI 실행 파일이됩니다. WinMain 실행 파일에 대한 MFC (Microsoft Foundation Classes) 사용을 구성하려면 &lt;a href=&quot;../variable/cmake_mfc_flag#variable:CMAKE_MFC_FLAG&quot; id=&quot;index-0-variable:CMAKE_MFC_FLAG&quot;&gt; &lt;code&gt;CMAKE_MFC_FLAG&lt;/code&gt; &lt;/a&gt; 변수 설명서를 참조하십시오 . 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_win32_executable#variable:CMAKE_WIN32_EXECUTABLE&quot; id=&quot;index-0-variable:CMAKE_WIN32_EXECUTABLE&quot;&gt; &lt;code&gt;CMAKE_WIN32_EXECUTABLE&lt;/code&gt; &lt;/a&gt; 변수 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="492b62e167fa932be90149b892bd384daa455da2" translate="yes" xml:space="preserve">
          <source>When this property is set to true, some dependencies for a static or object library may be removed at generation time if they are not necessary to build the library, since static and object libraries don&amp;rsquo;t actually link against anything.</source>
          <target state="translated">이 속성을 true로 설정하면 정적 및 개체 라이브러리가 실제로 어떤 항목에도 연결되지 않기 때문에 라이브러리를 빌드하는 데 필요하지 않은 경우 정적 또는 개체 라이브러리에 대한 일부 종속성이 생성시 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="833aab8482ca7dda046c8109e4b576877e0b1c42" translate="yes" xml:space="preserve">
          <source>When this property is set to true, the precompile header compiler options will contain a compiler flag which should warn about invalid precompiled headers e.g. &lt;code&gt;-Winvalid-pch&lt;/code&gt; for GNU compiler.</source>
          <target state="translated">이 속성이 true로 설정되면 프리 컴파일 헤더 컴파일러 옵션에는 유효하지 않은 프리 컴파일 된 헤더에 대해 경고해야하는 컴파일러 플래그가 포함됩니다 (예 : GNU 컴파일러의 경우 &lt;code&gt;-Winvalid-pch&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="95613cff3d51dec36d378890e92d596b893371c6" translate="yes" xml:space="preserve">
          <source>When this property is set to true, the precompiled header compiler options will contain a flag to instantiate templates during the generation of the PCH if supported. This can significantly improve compile times. Supported in Clang since version 11.</source>
          <target state="translated">이 속성이 true로 설정되면 미리 컴파일 된 헤더 컴파일러 옵션에 지원되는 경우 PCH 생성 중에 템플릿을 인스턴스화하는 플래그가 포함됩니다. 이것은 컴파일 시간을 크게 향상시킬 수 있습니다. 버전 11부터 Clang에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="40e676f1fe51c7de749087422fd9abaca93154b0" translate="yes" xml:space="preserve">
          <source>When this property is set to true, the target source files will be combined into batches for faster compilation. This is done by creating a (set of) unity sources which &lt;code&gt;#include&lt;/code&gt; the original sources, then compiling these unity sources instead of the originals. This is known as a &lt;em&gt;Unity&lt;/em&gt; or &lt;em&gt;Jumbo&lt;/em&gt; build.</source>
          <target state="translated">이 속성을 true로 설정하면 더 빠른 컴파일을 위해 대상 소스 파일이 일괄 처리로 결합됩니다. 이는 단일 소스 A (세트)을 생성하여 수행됩니다 &lt;code&gt;#include&lt;/code&gt; 를 한 후, 원래의 소스를 대신 원본의이 단결 소스를 컴파일. 이를 &lt;em&gt;Unity&lt;/em&gt; 또는 &lt;em&gt;Jumbo&lt;/em&gt; 빌드라고합니다.</target>
        </trans-unit>
        <trans-unit id="4489849d99e0b499ec0084f1f41d233b8f62cc9d" translate="yes" xml:space="preserve">
          <source>When this sub-option of &lt;code&gt;PROGRAM&lt;/code&gt; option is specified, command-line arguments will be split as well and stored in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PROGRAM&lt;/code&gt; 옵션 의이 하위 옵션이 지정되면 명령 줄 인수도 분할되어 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="cba4157e926b92ec84e7edebe6e9ce6787ec2449" translate="yes" xml:space="preserve">
          <source>When this variable is set to a non-empty string, CTest will report the value you specified rather than using the update command to discover the current version that is checked out. Use of this variable supersedes &lt;code&gt;UpdateVersionOnly&lt;/code&gt;. Like &lt;code&gt;UpdateVersionOnly&lt;/code&gt;, using this variable tells CTest not to update the source tree to a different version.</source>
          <target state="translated">이 변수가 비어 있지 않은 문자열로 설정되면 CTest는 update 명령을 사용하여 체크 아웃 된 현재 버전을 발견하지 않고 지정한 값을보고합니다. 이 변수를 사용 &lt;code&gt;UpdateVersionOnly&lt;/code&gt; 대체 합니다. &lt;code&gt;UpdateVersionOnly&lt;/code&gt; 와 마찬가지로이 변수를 사용하면 CTest가 소스 트리를 다른 버전으로 업데이트하지 않도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="5e2fdbfc6cb9de39d2a227026fd253c407f31c0d" translate="yes" xml:space="preserve">
          <source>When unset or empty the directory &lt;code&gt;&amp;lt;dir&amp;gt;/&amp;lt;target-name&amp;gt;_autogen&lt;/code&gt; is used where &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; is &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&amp;lt;target-name&amp;gt;&lt;/code&gt; is &lt;a href=&quot;name#prop_tgt:NAME&quot; id=&quot;index-0-prop_tgt:NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">설정을 해제하거나 비우면 &lt;code&gt;&amp;lt;dir&amp;gt;/&amp;lt;target-name&amp;gt;_autogen&lt;/code&gt; 디렉토리 가 사용되며 여기서 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 은 &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 이고 &lt;code&gt;&amp;lt;target-name&amp;gt;&lt;/code&gt; 은 &lt;a href=&quot;name#prop_tgt:NAME&quot; id=&quot;index-0-prop_tgt:NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="78641c71e42a73333db9903b83fe15f94a80fea5" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, the qtmain.lib static library is automatically linked on Windows for &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;WIN32&lt;/code&gt;&lt;/a&gt; executables. To disable that globally, set the &lt;code&gt;QT4_NO_LINK_QTMAIN&lt;/code&gt; variable before finding Qt4. To disable that for a particular executable, set the &lt;code&gt;QT4_NO_LINK_QTMAIN&lt;/code&gt; target property to &lt;code&gt;TRUE&lt;/code&gt; on the executable.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상을 사용할 때 qtmain.lib 정적 라이브러리는 Windows에서 &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt; &lt;code&gt;WIN32&lt;/code&gt; &lt;/a&gt; 실행 파일 용으로 자동 링크됩니다 . 이를 전역으로 비활성화하려면 Qt4를 찾기 전에 &lt;code&gt;QT4_NO_LINK_QTMAIN&lt;/code&gt; 변수를 설정하십시오 . 특정 실행 파일에 대해이를 비활성화하려면 실행 파일에서 &lt;code&gt;QT4_NO_LINK_QTMAIN&lt;/code&gt; 대상 속성을 &lt;code&gt;TRUE&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="100ef1fda23a0848c48dd351c366546f338ff9b6" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; to execute MPI applications, you should typically use all of the &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; flags as follows:</source>
          <target state="translated">&lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; 을 사용하여 MPI 응용 프로그램을 실행할 때 일반적 으로 다음과 같이 모든 &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; 플래그를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="013a7823ffa73cae6b2a530f11693266477e6262" translate="yes" xml:space="preserve">
          <source>When using MSVC-like compilers in CMake 3.14 and below, warning flags like &lt;code&gt;/W3&lt;/code&gt; are added to &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; by default. This is problematic for projects that want to choose a different warning level programmatically. In particular, it requires string editing of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variables with knowledge of the CMake builtin defaults so they can be replaced.</source>
          <target state="translated">CMake 3.14 이하에서 MSVC 유사 컴파일러를 사용하는 경우 &lt;code&gt;/W3&lt;/code&gt; 과 같은 경고 플래그 가 기본적 으로 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 에 추가됩니다 . 프로그래밍 방식으로 다른 경고 수준을 선택하려는 프로젝트의 경우 문제가됩니다. 특히 CMake 내장 기본값을 알고 있는 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 변수 의 문자열 편집이 필요 하므로이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93692874a1a4c4415a2883a8ea035d71783e9979" translate="yes" xml:space="preserve">
          <source>When using Xcode, there can be more than one Xcode version installed. Which one to use can be selected in a number of different ways, but the most common methods are:</source>
          <target state="translated">Xcode를 사용할 때 둘 이상의 Xcode 버전이 설치 될 수 있습니다. 사용할 방법은 여러 가지 방법으로 선택할 수 있지만 가장 일반적인 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b4d36fbfa394769833437782305ec452c8e24382" translate="yes" xml:space="preserve">
          <source>When using a Visual Studio generator with the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable set to &lt;code&gt;Android&lt;/code&gt;, this variable contains the version number of the installed NVIDIA Nsight Tegra Visual Studio Edition.</source>
          <target state="translated">&lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 변수가 &lt;code&gt;Android&lt;/code&gt; 로 설정된 Visual Studio 생성기를 사용하는 경우이 변수에는 설치된 NVIDIA Nsight Tegra Visual Studio Edition의 버전 번호가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f3d4765cf01354bfb38522d0e6881a3a01d25747" translate="yes" xml:space="preserve">
          <source>When using one of the &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; with the Intel Fortran plugin installed in Visual Studio, a subdirectory named after the configuration will be appended to the path where modules are created. For example, if &lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt; is set to &lt;code&gt;C:/some/path&lt;/code&gt;, modules will end up in &lt;code&gt;C:/some/path/Debug&lt;/code&gt; (or &lt;code&gt;C:/some/path/Release&lt;/code&gt; etc.) when an Intel Fortran &lt;code&gt;.vfproj&lt;/code&gt; file is generated, and in &lt;code&gt;C:/some/path&lt;/code&gt; when any other generator is used.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio에&lt;/a&gt; 설치된 Intel Fortran 플러그인과 함께 Visual Studio 생성기 중 하나를 사용 하는 경우 구성 이름을 따서 명명 된 하위 디렉터리가 모듈이 생성되는 경로에 추가됩니다. 예를 들어 &lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt; 가 &lt;code&gt;C:/some/path&lt;/code&gt; 로 설정된 경우 Intel Fortran &lt;code&gt;.vfproj&lt;/code&gt; 파일이 생성 될 때 모듈은 &lt;code&gt;C:/some/path/Debug&lt;/code&gt; (또는 &lt;code&gt;C:/some/path/Release&lt;/code&gt; 등)에서 끝납니다. , 그리고 다른 생성기가 사용되는 경우 &lt;code&gt;C:/some/path&lt;/code&gt; 에서 .</target>
        </trans-unit>
        <trans-unit id="b68913d42910b1e9308ef02ba8f5a31cc771ce02" translate="yes" xml:space="preserve">
          <source>When using one of the &lt;a href=&quot;cmake-generators.7#command-line-build-tool-generators&quot;&gt;Command-Line Build Tool Generators&lt;/a&gt; CMake expects that the environment needed by the compiler toolchain is already configured in the shell. When using one of the &lt;a href=&quot;cmake-generators.7#ide-build-tool-generators&quot;&gt;IDE Build Tool Generators&lt;/a&gt;, no particular environment is needed.</source>
          <target state="translated">CMake는 &lt;a href=&quot;cmake-generators.7#command-line-build-tool-generators&quot;&gt;명령 줄 빌드 도구 생성기&lt;/a&gt; 중 하나를 사용할 때 컴파일러 도구 체인에 필요한 환경이 이미 셸에 구성되어있을 것으로 예상합니다. &lt;a href=&quot;cmake-generators.7#ide-build-tool-generators&quot;&gt;IDE Build Tool Generator&lt;/a&gt; 중 하나를 사용할 때 특별한 환경이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a04d6d21cf0f9411fb6f3a7774f605a1fca2c169" translate="yes" xml:space="preserve">
          <source>When using saved content details, a call to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-2-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; records information in global properties which can be queried at any time. This information includes the source and binary directories associated with the content and also whether or not the content population has been processed during the current configure run.</source>
          <target state="translated">저장된 내용 세부 정보를 사용할 때 &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-2-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate()&lt;/code&gt; &lt;/a&gt; 호출하면 언제든지 쿼리 할 수있는 전역 속성에 정보가 기록됩니다. 이 정보에는 컨텐츠와 연관된 소스 및 2 진 디렉토리 및 컨텐츠 구성이 현재 구성 실행 중에 처리되었는지 여부가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="34b323928a88e800c1478d525759f12e12dbfcfb" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-9-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; command line tool, a preset can be invoked by using the &lt;code&gt;--preset&lt;/code&gt; option. If &lt;code&gt;--preset&lt;/code&gt; is specified, the generator and build directory are not required, but can be specified to override them. For example, if you have the following &lt;code&gt;CMakePresets.json&lt;/code&gt; file:</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-9-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 명령 행 도구를 미리 설정은 사용하여 호출 할 수 &lt;code&gt;--preset&lt;/code&gt; 옵션을 선택합니다. 경우 &lt;code&gt;--preset&lt;/code&gt; 가 지정되어, 발전기 및 빌드 디렉토리는 필요하지 않지만이를 대체 할 지정할 수 있습니다. 예를 들어 다음 &lt;code&gt;CMakePresets.json&lt;/code&gt; 파일 이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="be773f8b94c2161b1637bbd7dcc7a6c0161f292c" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;Visual Studio generators&lt;/code&gt;&lt;/a&gt;, CMake generates a &lt;code&gt;PRE_BUILD&lt;/code&gt;&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;custom command&lt;/code&gt;&lt;/a&gt; instead of the &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt;&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;custom target&lt;/code&gt;&lt;/a&gt; (for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;). This isn&amp;rsquo;t always possible though and an &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt;&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-2-command:add_custom_target&quot;&gt;&lt;code&gt;custom target&lt;/code&gt;&lt;/a&gt; is used, when either</source>
          <target state="translated">&lt;a href=&quot;cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;Visual Studio generators&lt;/code&gt; &lt;/a&gt; 사용할 때 CMake 는 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;custom target&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 용&lt;/a&gt; ) 대신 &lt;code&gt;PRE_BUILD&lt;/code&gt; &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;custom command&lt;/code&gt; &lt;/a&gt; 생성합니다 . 항상 가능하지는 않으며 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-2-command:add_custom_target&quot;&gt; &lt;code&gt;custom target&lt;/code&gt; &lt;/a&gt; 이 사용되는 경우</target>
        </trans-unit>
        <trans-unit id="bd6ee75da6d7e5fa05b7f7f9d519c71899a1ae45" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, all source files are first preprocessed in order to generate module dependency information. Setting this property to &lt;code&gt;OFF&lt;/code&gt; will make &lt;code&gt;Ninja&lt;/code&gt; skip this step.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기를 사용할 때 모듈 종속성 정보를 생성하기 위해 모든 소스 파일이 먼저 전처리됩니다. 이 속성 설정 &lt;code&gt;OFF&lt;/code&gt; 하는 것 &lt;code&gt;Ninja&lt;/code&gt; 이 단계를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="deb0d16e11c25117453df8ff8c07c68093459972" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, libraries to be linked will be specified in the Xcode project file using either the &amp;ldquo;Link Binary With Libraries&amp;rdquo; build phase or directly as linker flags. The former allows Xcode to manage build paths, which may be necessary when creating Xcode archives because it may use different build paths to a regular build.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기를, 라이브러리는 &quot;링크 바이너리 라이브러리&quot;빌드 단계 또는 직접 링커 플래그로 중 하나를 사용하여 Xcode 프로젝트 파일에 지정됩니다 연결합니다. 전자를 사용하면 Xcode가 빌드 경로를 관리 할 수 ​​있습니다. 이는 일반 빌드에 대해 다른 빌드 경로를 사용할 수 있기 때문에 Xcode 아카이브를 만들 때 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11971a8c12f253769510d0d30f370f484f452e9f" translate="yes" xml:space="preserve">
          <source>When using the Eclipse project generator, CMake tries to find the Eclipse executable and detect the version of it. Depending on the version it finds, some features are enabled or disabled. If CMake doesn&amp;rsquo;t find Eclipse, it assumes the oldest supported version, Eclipse Callisto (3.2).</source>
          <target state="translated">Eclipse 프로젝트 생성기를 사용할 때 CMake는 Eclipse 실행 파일을 찾고 해당 버전을 감지합니다. 찾은 버전에 따라 일부 기능이 활성화 또는 비활성화됩니다. CMake가 Eclipse를 찾지 못하면 지원되는 가장 오래된 버전 인 Eclipse Callisto (3.2)를 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b0974f99b2861b4be86b4bcd0e7bf57e4fd66283" translate="yes" xml:space="preserve">
          <source>When using the Eclipse, CodeBlocks, CodeLite, Kate or Sublime generators, CMake generates Makefiles (&lt;a href=&quot;cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt;) and additionally project files for the respective IDE. This IDE project file generator is stored in &lt;code&gt;CMAKE_EXTRA_GENERATOR&lt;/code&gt; (e.g. &lt;code&gt;Eclipse CDT4&lt;/code&gt;).</source>
          <target state="translated">Eclipse, CodeBlocks, CodeLite, Kate 또는 Sublime 생성기를 사용할 때 CMake는 Makefile ( &lt;a href=&quot;cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt; &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; &lt;/a&gt; )을 생성 하고 각 IDE에 대한 파일을 추가로 프로젝트합니다. 이 IDE 프로젝트 파일 생성기는 &lt;code&gt;CMAKE_EXTRA_GENERATOR&lt;/code&gt; (예 : &lt;code&gt;Eclipse CDT4&lt;/code&gt; )에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="4e430c39845fdbb5af2c16ab04ad3e69fc990895" translate="yes" xml:space="preserve">
          <source>When using this to specify names with and without a version suffix, we recommend specifying the unversioned name first so that locally-built packages can be found before those provided by distributions.</source>
          <target state="translated">이를 사용하여 버전 접미사와 함께 또는 접미사없이 이름을 지정하는 경우 배포에서 제공 한 패키지보다 먼저 로컬로 작성된 패키지를 찾을 수 있도록 버전없는 이름을 먼저 지정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c3ca418c473b64bedf9db97e620a78712930e34c" translate="yes" xml:space="preserve">
          <source>Whenever CMake is re-run, by default the external project&amp;rsquo;s sources will be updated if the download method supports updates (e.g. a git repository would be checked if the &lt;code&gt;GIT_TAG&lt;/code&gt; does not refer to a specific commit).</source>
          <target state="translated">CMake가 다시 실행될 때마다 기본적으로 다운로드 메소드가 업데이트를 지원하는 경우 외부 프로젝트의 소스가 업데이트됩니다 (예 : &lt;code&gt;GIT_TAG&lt;/code&gt; 가 특정 커밋을 참조하지 않으면 git 저장소가 확인 됨 ).</target>
        </trans-unit>
        <trans-unit id="d882e70615727643a491972dac264279801da236" translate="yes" xml:space="preserve">
          <source>Whenever one of the following target based generator expressions are used as a command to execute or is mentioned in a command argument, a target-level dependency will be added automatically so that the mentioned target will be built before any target using this custom command (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">다음 대상 기반 생성기 표현식 중 하나가 실행 명령으로 사용되거나 명령 인수에 언급 될 때마다 대상 수준 종속성이 자동으로 추가되어 언급 된 대상이이 사용자 지정 명령을 사용하는 대상보다 먼저 빌드됩니다 (참조 : 정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ac5ac87736e9d46256e59f1b2107e5a6e3f18f7e" translate="yes" xml:space="preserve">
          <source>Whenever one of the following target based generator expressions are used as a command to execute or is mentioned in a command argument, a target-level dependency will be added automatically so that the mentioned target will be built before this custom target (see policy &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt;&lt;code&gt;CMP0112&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">다음 대상 기반 생성기 표현식 중 하나가 실행 명령으로 사용되거나 명령 인수에 언급 될 때마다 언급 된 대상이이 사용자 지정 대상보다 먼저 빌드되도록 대상 수준 종속성이 자동으로 추가됩니다 (정책 &lt;a href=&quot;../policy/cmp0112#policy:CMP0112&quot; id=&quot;index-0-policy:CMP0112&quot;&gt; &lt;code&gt;CMP0112&lt;/code&gt; &lt;/a&gt; 참조 ). .</target>
        </trans-unit>
        <trans-unit id="2be0520063c28d9175c137ca7b913b0e47548978" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;&lt;/code&gt; is the value of the target property &lt;a href=&quot;autogen_build_dir#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt;&lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;&lt;/code&gt; 은 대상 특성 &lt;a href=&quot;autogen_build_dir#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt; &lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt; &lt;/a&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="43b035bdb5029adb2f799a3eb9ab5115a9cb81be" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the name of an ICU component, for example &lt;code&gt;ICU::i18n&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; 는 ICU 구성 요소의 이름입니다 (예 &lt;code&gt;ICU::i18n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d8aa0fb72864a6f15f7c603361d985997a23f7f" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the name of an Ice component, for example &lt;code&gt;Ice::Glacier2&lt;/code&gt; or &lt;code&gt;Ice++11&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; 는 Ice 구성 요소의 이름입니다 (예 &lt;code&gt;Ice::Glacier2&lt;/code&gt; 또는 &lt;code&gt;Ice++11&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c4c83159b8e1899f38aba15d35ccf7a3ec99087" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;SOURCE_DIR_CHECKSUM&amp;gt;&lt;/code&gt; is a checksum computed from the relative parent directory path of the &lt;code&gt;moc&lt;/code&gt; input file. This scheme allows to have &lt;code&gt;moc&lt;/code&gt; input files with the same name in different directories.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;SOURCE_DIR_CHECKSUM&amp;gt;&lt;/code&gt; 은 &lt;code&gt;moc&lt;/code&gt; 입력 파일 의 상대 상위 디렉토리 경로에서 계산 된 체크섬 입니다. 이 체계를 사용하면 다른 디렉토리에 동일한 이름 을 가진 &lt;code&gt;moc&lt;/code&gt; 입력 파일 을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d136735660aae93bc73ea39d46f0d03a32d44c5" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; is available to the user if &lt;code&gt;&amp;lt;depends&amp;gt;&lt;/code&gt; is true. When &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; is available, the given &lt;code&gt;&amp;lt;help_text&amp;gt;&lt;/code&gt; and initial &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; are used. If the &lt;code&gt;&amp;lt;depends&amp;gt;&lt;/code&gt; condition is not true, &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; will not be presented and will always have the value given by &lt;code&gt;&amp;lt;force&amp;gt;&lt;/code&gt;. Any value set by the user is preserved for when the option is presented again. Each element in the fourth parameter is evaluated as an if-condition, so &lt;a href=&quot;../command/if#condition-syntax&quot;&gt;Condition Syntax&lt;/a&gt; can be used.</source>
          <target state="translated">어디 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 경우 사용자가 사용할 수 있습니다 &lt;code&gt;&amp;lt;depends&amp;gt;&lt;/code&gt; 사실이다. &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 을 사용할 수 있으면 주어진 &lt;code&gt;&amp;lt;help_text&amp;gt;&lt;/code&gt; 및 초기 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 가 사용됩니다. (가) 경우 &lt;code&gt;&amp;lt;depends&amp;gt;&lt;/code&gt; 조건이 사실이 아니다, &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 발표되지 않고 항상 주어진 값 것이다 &lt;code&gt;&amp;lt;force&amp;gt;&lt;/code&gt; . 옵션이 다시 표시 될 때 사용자가 설정 한 모든 값이 유지됩니다. 네 번째 매개 변수의 각 요소는 if 조건으로 평가되므로 &lt;a href=&quot;../command/if#condition-syntax&quot;&gt;조건 구문을&lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b9ce16be219bb7b212c3a80e8d4f5bad4fe727e" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;X.Y&lt;/code&gt; would be a specific version of the CUDA Toolkit, such as &lt;code&gt;/usr/local/cuda-9.0&lt;/code&gt; or &lt;code&gt;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0&lt;/code&gt;</source>
          <target state="translated">여기서 &lt;code&gt;X.Y&lt;/code&gt; 는 &lt;code&gt;/usr/local/cuda-9.0&lt;/code&gt; 또는 &lt;code&gt;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0&lt;/code&gt; 과 같은 CUDA Toolkit의 특정 버전입니다.</target>
        </trans-unit>
        <trans-unit id="318106892b0c698eb345da1d0a5d400291ddd5d9" translate="yes" xml:space="preserve">
          <source>Where a software package supplies a CMake-based buildsystem with the source of their software, the consumer of the software is required to run a CMake user interaction tool in order to build it.</source>
          <target state="translated">소프트웨어 패키지가 소프트웨어 소스와 함께 CMake 기반 빌드 시스템을 제공하는 경우 소프트웨어 소비자는이를 빌드하기 위해 CMake 사용자 상호 작용 도구를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="569eb300b22228bc2299cf146b6b3a6a774f358a" translate="yes" xml:space="preserve">
          <source>Where to find headers for using the Xxx library.</source>
          <target state="translated">Xxx 라이브러리를 사용하기위한 헤더를 찾을 수있는 곳.</target>
        </trans-unit>
        <trans-unit id="855d238181126c2bbc0bdb70802e4c2a7f6a3652" translate="yes" xml:space="preserve">
          <source>Where to find headers for using the Yy library of the Xxx system.</source>
          <target state="translated">Xxx 시스템의 Yy 라이브러리를 사용하기위한 헤더를 찾을 수있는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="383d8218cee9266001f0a6a545a369b6be1588e3" translate="yes" xml:space="preserve">
          <source>Where to find the ALSA headers.</source>
          <target state="translated">ALSA 헤더를 찾을 수있는 곳.</target>
        </trans-unit>
        <trans-unit id="5bfb340f5781dc3a6a0458d09fc927001f32a4cf" translate="yes" xml:space="preserve">
          <source>Where to find the Xxx tool.</source>
          <target state="translated">Xxx 도구를 찾을 수있는 곳</target>
        </trans-unit>
        <trans-unit id="6ef078b9a648607726cfd4eb8dbadff5481f25cd" translate="yes" xml:space="preserve">
          <source>Where to find the Yyy tool that comes with Xxx.</source>
          <target state="translated">Xxx와 함께 제공되는 Yyy 도구를 찾을 수있는 곳</target>
        </trans-unit>
        <trans-unit id="2fc77c5d76cea0f14b1c22f81c89d9853fde1ecb" translate="yes" xml:space="preserve">
          <source>Where to find the base directory of Xxx.</source>
          <target state="translated">Xxx의 기본 디렉토리를 찾을 수있는 위치</target>
        </trans-unit>
        <trans-unit id="7b8ff3d814c99f24d47cf34898c93e317cdf588e" translate="yes" xml:space="preserve">
          <source>Where to find the headers</source>
          <target state="translated">헤더를 찾을 수있는 곳</target>
        </trans-unit>
        <trans-unit id="24ecfa0e91dcb1d5de36886237af2e41721bb3a3" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files when built for a specific configuration.</source>
          <target state="translated">특정 구성을 위해 빌드 될 때 모든 &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일 을 둘 위치 입니다.</target>
        </trans-unit>
        <trans-unit id="f3fb3ffcdc2a7c85343f28a7b3b6c9508483e24b" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files when built.</source>
          <target state="translated">빌드 할 때 모든 &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일 을 넣을 위치 .</target>
        </trans-unit>
        <trans-unit id="a84191fde0e17c5cba009b43e7fc36cbe6dcb551" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files when built for a specific configuration.</source>
          <target state="translated">특정 구성을 위해 빌드 될 때 모든 &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일 을 넣을 위치 .</target>
        </trans-unit>
        <trans-unit id="f509706a93af3c1b02caa264d66fdb18c80fa4b4" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files when built.</source>
          <target state="translated">빌드 할 때 모든 &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일 을 넣을 위치 .</target>
        </trans-unit>
        <trans-unit id="e2f92c184e053416d2be5cb5c2c224792b10b9d5" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files when built for a specific configuration.</source>
          <target state="translated">특정 구성을 위해 빌드 될 때 모든 &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일 을 둘 위치 입니다.</target>
        </trans-unit>
        <trans-unit id="3e06d4ac41b2c4141f2155389a4b29ba664adaad" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files when built.</source>
          <target state="translated">빌드 할 때 모든 &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일 을 넣을 위치 입니다.</target>
        </trans-unit>
        <trans-unit id="126612b0d9d00bf67aa595419394c28849ae4e04" translate="yes" xml:space="preserve">
          <source>Whereas the &lt;code&gt;-A&lt;/code&gt; option specifies the _target_ architecture, the &lt;code&gt;-T&lt;/code&gt; option can be used to specify details of the toolchain used. For example, &lt;code&gt;-Thost=x64&lt;/code&gt; can be given to select the 64-bit version of the host tools. The following demonstrates how to use 64-bit tools and also build for a 64-bit target architecture:</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; 옵션은 _target_ 아키텍처를 지정 하지만 &lt;code&gt;-T&lt;/code&gt; 옵션은 사용되는 도구 체인의 세부 사항을 지정하는 데 사용할 수 있습니다. 예를 들어, 호스트 도구의 64 비트 버전을 선택하려면 &lt;code&gt;-Thost=x64&lt;/code&gt; 를 지정할 수 있습니다. 다음은 64 비트 도구를 사용하고 64 비트 대상 아키텍처 용으로 빌드하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3fd99d38e8051493f7673f92833a97486a8d7b7b" translate="yes" xml:space="preserve">
          <source>Whether &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; should automatically search lib64 directories.</source>
          <target state="translated">&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 가 자동으로 lib64 디렉토리를 검색 해야하는지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="198f9a597fcc2948b50d539b3bf058c615142cf5" translate="yes" xml:space="preserve">
          <source>Whether &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; should find OpenBSD-style shared libraries.</source>
          <target state="translated">&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 가 OpenBSD 스타일 공유 라이브러리를 찾아야 하는지 여부</target>
        </trans-unit>
        <trans-unit id="185a2a839890cce0958737126c3f3bcbb36ef828" translate="yes" xml:space="preserve">
          <source>Whether SWIG and any required components were found on the system.</source>
          <target state="translated">SWIG 및 필수 구성 요소가 시스템에서 발견되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="860627de20c1a30f386f94f2f94bc63d4a35825f" translate="yes" xml:space="preserve">
          <source>Whether consumers need to create a position-independent target</source>
          <target state="translated">소비자가 위치 독립적 목표를 만들어야하는지 여부</target>
        </trans-unit>
        <trans-unit id="10712c9366a5c8e2127bb605c633af61e0e4f3e7" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command should automatically search &lt;code&gt;lib32&lt;/code&gt; directories.</source>
          <target state="translated">&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령이 &lt;code&gt;lib32&lt;/code&gt; 디렉토리를 자동으로 검색 해야하는지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="a5881ce08179e3dc65ccf97ca75da6522ce6acb9" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command should automatically search &lt;code&gt;libx32&lt;/code&gt; directories.</source>
          <target state="translated">&lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 명령이 &lt;code&gt;libx32&lt;/code&gt; 디렉토리를 자동으로 검색 해야하는지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="91044746d2ffa5c4cfd8dfc84f9d600057e6995c" translate="yes" xml:space="preserve">
          <source>Whether this target on macOS or iOS is located at runtime using rpaths.</source>
          <target state="translated">macOS 또는 iOS에서이 대상이 rpath를 사용하여 런타임에 있는지 여부</target>
        </trans-unit>
        <trans-unit id="2d5e0be368ad63c13847a6edfa202115ca9dad6c" translate="yes" xml:space="preserve">
          <source>Whether to add a compile flag to hide symbols of inline functions</source>
          <target state="translated">인라인 함수의 심볼을 숨기기 위해 컴파일 플래그를 추가할지 여부</target>
        </trans-unit>
        <trans-unit id="591b257dce79daebe3d1b7dc4ba0482a74753c79" translate="yes" xml:space="preserve">
          <source>Whether to append or prepend directories by default in &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt; 에서 기본적으로 디렉토리를 추가 또는 추가할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="5b837516f9d4468d99bb6bf4f9743cd9de337ce9" translate="yes" xml:space="preserve">
          <source>Whether to append or prepend directories by default in &lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-0-command:link_directories&quot;&gt;&lt;code&gt;link_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-0-command:link_directories&quot;&gt; &lt;code&gt;link_directories()&lt;/code&gt; &lt;/a&gt; 에서 기본적으로 디렉토리를 추가 또는 추가할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="85f1fdea60d44e86bc59d0ba421a4e0ad904e325" translate="yes" xml:space="preserve">
          <source>Whether to build shared instead of static libraries for &lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; commands used without a type</source>
          <target state="translated">유형없이 사용되는 &lt;a href=&quot;../../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령에 대해 정적 라이브러리 대신 공유를 빌드할지 여부</target>
        </trans-unit>
        <trans-unit id="8ebea1ff4e0b7baa221fcf388c9c0f0eb2c5e2e0" translate="yes" xml:space="preserve">
          <source>Whether to create a position-independent target</source>
          <target state="translated">위치 독립적 타겟 생성 여부</target>
        </trans-unit>
        <trans-unit id="bd01df774803a583469e57ea27e87c19dd604ed7" translate="yes" xml:space="preserve">
          <source>Whether to debug the target as &amp;lsquo;root&amp;rsquo;.</source>
          <target state="translated">대상을 'root'로 디버그할지 여부</target>
        </trans-unit>
        <trans-unit id="3a2da3a7ad398022d525beef42e2e1e8a2e18ee0" translate="yes" xml:space="preserve">
          <source>Whether to disable generation of installation rules.</source>
          <target state="translated">설치 규칙 생성 비활성화 여부입니다.</target>
        </trans-unit>
        <trans-unit id="8dc82ecfd946d2b054ffc3908a74e214939e21a0" translate="yes" xml:space="preserve">
          <source>Whether to disable the &lt;code&gt;Main Thread Checker&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Main Thread Checker&lt;/code&gt; 를 사용하지 않을지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="931dec6e46fcc9fffadb7e41be7527f4b4151347" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Address Sanitizer&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Address Sanitizer&lt;/code&gt; 를 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="ac6b45046a0851e0bb0afc53f20de5b22c42197c" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Allow debugging when using document Versions Browser&lt;/code&gt; in the Options section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 옵션 섹션에서 &lt;code&gt;Allow debugging when using document Versions Browser&lt;/code&gt; 를 사용할 때 디버깅 허용 을 활성화할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="a223d0b083111796441e2b1ed6c00a39ed83e2b8" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Detect use of stack after return&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Detect use of stack after return&lt;/code&gt; 사용 감지를 사용 할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="a83f69c8018e0771f3d24b5222e60965ba153bb1" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Dynamic Library Loads&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Dynamic Library Loads&lt;/code&gt; 를 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="391a2a8c3d5ffe798f7946d186206b90b1a3cd70" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Dynamic Linker API usage&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Dynamic Linker API usage&lt;/code&gt; 을 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="0842ef94352b69ef9d052d5e0ec78dc75df955f1" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Guard Malloc&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Guard Malloc&lt;/code&gt; 을 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="a73429ec74aaeba8ce5ccac37fe0fb277a4db027" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Malloc Guard Edges&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Malloc Guard Edges&lt;/code&gt; 를 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="d2b7ac9f2b562e1d7d6832bca1bf66b61388b763" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Malloc Scribble&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Malloc Scribble&lt;/code&gt; 사용 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="b3c6a75f5a578642dba86a753144785448e250c0" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Malloc Stack&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Malloc Stack&lt;/code&gt; 을 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="a0db0b2e3b8525ba9263e83602ea11378abeb869" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Thread Sanitizer - Pause on issues&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에있는 &lt;code&gt;Thread Sanitizer - Pause on issues&lt;/code&gt; 에서 Thread Sanitizer-Pause 사용 여부 .</target>
        </trans-unit>
        <trans-unit id="4fe7fa75a69a74801d710a900219a580d7883925" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Thread Sanitizer&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Thread Sanitizer&lt;/code&gt; 를 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="25af21b86fc2e754c1fa660e3a5cf1294755a86f" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Undefined Behavior Sanitizer&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Undefined Behavior Sanitizer&lt;/code&gt; 사용 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="1f4ed8c9fd5cc4dea4fc4ac4dcc0fa31d4b7c6a4" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Undefined Behavior Sanitizer&lt;/code&gt; option &lt;code&gt;Pause on issues&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">&lt;code&gt;Undefined Behavior Sanitizer&lt;/code&gt; 옵션 사용 여부 생성 된 Xcode 구성표의 진단 섹션 &lt;code&gt;Pause on issues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66dd82366850214941fa5f95f9571d1b519a523d" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Zombie Objects&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">생성 된 Xcode 체계의 진단 섹션에서 &lt;code&gt;Zombie Objects&lt;/code&gt; 를 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="c83d892c83d40f150ce0a676cb5f2825c401e943" translate="yes" xml:space="preserve">
          <source>Whether to enable the &lt;code&gt;Main Thread Checker&lt;/code&gt; option &lt;code&gt;Pause on issues&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="translated">&lt;code&gt;Main Thread Checker&lt;/code&gt; 옵션 을 사용할지 여부 생성 된 Xcode 구성표의 진단 섹션 &lt;code&gt;Pause on issues&lt;/code&gt; 를 일시 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="ea56c61b5ed5859d8a0e98bbeaebfe58fdcde1fc" translate="yes" xml:space="preserve">
          <source>Whether to force prepending of project include directories.</source>
          <target state="translated">프로젝트 포함 디렉토리를 강제로 추가할지 여부.</target>
        </trans-unit>
        <trans-unit id="6f1d0248a6b88bb96995838ef304ba0ab6b29b0c" translate="yes" xml:space="preserve">
          <source>Whether to generate the &lt;code&gt;-p&lt;/code&gt; path prefix option for &lt;code&gt;moc&lt;/code&gt; on &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; enabled Qt targets.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 사용 Qt 대상 에서 &lt;code&gt;moc&lt;/code&gt; 에 대한 &lt;code&gt;-p&lt;/code&gt; 경로 접두사 옵션 을 생성할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="66a887c540793db8807305c3168e91a544fba913" translate="yes" xml:space="preserve">
          <source>Whether to handle &lt;code&gt;moc&lt;/code&gt; automatically for Qt targets.</source>
          <target state="translated">Qt 대상에 대해 &lt;code&gt;moc&lt;/code&gt; 를 자동으로 처리할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="6eaaea678d25551eda043cb5ff9f861c65804d91" translate="yes" xml:space="preserve">
          <source>Whether to handle &lt;code&gt;rcc&lt;/code&gt; automatically for Qt targets.</source>
          <target state="translated">Qt 대상에 대해 &lt;code&gt;rcc&lt;/code&gt; 를 자동으로 처리할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="8aa33190fd25e2758f83f52b2160ff30f7d5d1b9" translate="yes" xml:space="preserve">
          <source>Whether to handle &lt;code&gt;uic&lt;/code&gt; automatically for Qt targets.</source>
          <target state="translated">Qt 대상에 대해 자동으로 &lt;code&gt;uic&lt;/code&gt; 를 처리할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="2a57361a86a40b2f7888bd81b3f450c8e59d1807" translate="yes" xml:space="preserve">
          <source>Whether to issue errors for deprecated functionality.</source>
          <target state="translated">더 이상 사용되지 않는 기능에 대한 오류를 발행할지 여부</target>
        </trans-unit>
        <trans-unit id="f3f0ae351ea7169eba09893a43b4facfc1a58483" translate="yes" xml:space="preserve">
          <source>Whether to issue warnings for deprecated functionality.</source>
          <target state="translated">더 이상 사용되지 않는 기능에 대한 경고를 발행할지 여부</target>
        </trans-unit>
        <trans-unit id="90a9571de1ddc63bda9ccc87ae2a7643a2d58850" translate="yes" xml:space="preserve">
          <source>Whether to set &lt;code&gt;soname&lt;/code&gt; when linking a shared library.</source>
          <target state="translated">공유 라이브러리를 링크 할 때 &lt;code&gt;soname&lt;/code&gt; 을 설정할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="ff5abc306cab86b83e41622df9e3fcc7b6adbd89" translate="yes" xml:space="preserve">
          <source>Whether to skip link dependencies on shared library files.</source>
          <target state="translated">공유 라이브러리 파일에 대한 링크 종속성을 건너 뛸지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="a77d65329c56e85390cb3632a9c5fe5bd964f3fe" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; on targets in the build tree.</source>
          <target state="translated">빌드 트리의 대상에서 &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt; 을 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="277201881414eb6a3eae214ee757f32db11bd5d5" translate="yes" xml:space="preserve">
          <source>Whether to use relative paths for the build &lt;code&gt;RPATH&lt;/code&gt;.</source>
          <target state="translated">빌드 &lt;code&gt;RPATH&lt;/code&gt; 에 상대 경로를 사용할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="ba7840807a3925f5d1afe80a8f22f074535ec439" translate="yes" xml:space="preserve">
          <source>Whether to use rpaths on macOS and iOS.</source>
          <target state="translated">macOS 및 iOS에서 rpath를 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="cef4012b1195a9fe40e8094be15aa7810da129e0" translate="yes" xml:space="preserve">
          <source>Which function gives better results now, sqrt or mysqrt?</source>
          <target state="translated">이제 sqrt 또는 mysqrt 중 더 나은 결과를 제공하는 함수는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="de6fbf0f17aa79653d75127aca95582c0ddb1a72" translate="yes" xml:space="preserve">
          <source>Which function gives better results, sqrt or mysqrt?</source>
          <target state="translated">어떤 함수가 더 나은 결과를 제공합니까, sqrt 또는 mysqrt?</target>
        </trans-unit>
        <trans-unit id="0220dac908cfa01fa97ed3a1b6f2e970cd311f4f" translate="yes" xml:space="preserve">
          <source>Which results in the following output:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f39407c912f13b7132245804b38d10147828ee4a" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-14-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets on their own are useful, they still require that the project that imports them knows the locations of the target files on disk. The real power of &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-15-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets is when the project providing the target files also provides a CMake file to help import them. A project can be setup to produce the necessary information so that it can easily be used by other CMake projects be it from a build directory, a local install or when packaged.</source>
          <target state="translated">반면 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-14-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 자신의 목표는 유용, 그들은 여전히 프로젝트가 수입 그들 디스크에 대상 파일의 위치를 인식하고있을 필요가 있습니다. &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-15-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 의 진정한 힘은 대상 파일을 제공하는 프로젝트가 가져 오기를 돕기 위해 CMake 파일도 제공 할 때입니다. 필요한 정보를 생성하도록 프로젝트를 설정하여 빌드 디렉터리, 로컬 설치 또는 패키징 된 경우 다른 CMake 프로젝트에서 쉽게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdf939e79bf8a095175e1bb2a013d64aa3f0c826" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;projA&lt;/code&gt; defines content details for &lt;code&gt;projE&lt;/code&gt;, it does not need to explicitly call &lt;code&gt;FetchContent_MakeAvailable(projE)&lt;/code&gt; or &lt;code&gt;FetchContent_Populate(projD)&lt;/code&gt; itself. Instead, it leaves that to the child &lt;code&gt;projB&lt;/code&gt;. For higher level projects, it is often enough to just define the override content details and leave the actual population to the child projects. This saves repeating the same thing at each level of the project hierarchy unnecessarily.</source>
          <target state="translated">&lt;code&gt;projA&lt;/code&gt; 는 &lt;code&gt;projE&lt;/code&gt; 의 컨텐츠 세부 사항을 정의 하지만 &lt;code&gt;FetchContent_MakeAvailable(projE)&lt;/code&gt; 또는 &lt;code&gt;FetchContent_Populate(projD)&lt;/code&gt; 자체 를 명시 적으로 호출 할 필요는 없습니다 . 대신, 그것은 자식 &lt;code&gt;projB&lt;/code&gt; 에게 맡깁니다 . 상위 레벨 프로젝트의 경우 대체 컨텐츠 세부 사항을 정의하고 실제 모집단을 하위 프로젝트에 두는 것으로 충분합니다. 이렇게하면 프로젝트 계층의 각 수준에서 불필요하게 동일한 내용을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5e8a93216613fa698cbc7d29f8f9ae69a0fada3" translate="yes" xml:space="preserve">
          <source>While IDE vendors may be tempted to bundle different versions of CMake with their application, such practice is not recommended. CMake has strong guarantees of backwards compatibility, and there is no reason not to use a newer version of CMake than what a project requires, or indeed, the very latest version. Therefore, it is recommended that IDE vendors that bundle CMake with their application always include the very latest patch version of CMake available at the time of release.</source>
          <target state="translated">IDE 공급 업체는 애플리케이션과 함께 다양한 버전의 CMake를 번들로 묶을 수 있지만 이러한 방법은 권장되지 않습니다. CMake는 이전 버전과의 호환성을 강력하게 보장하며, 프로젝트에 필요한 것보다 최신 버전의 CMake를 사용하지 않을 이유가 없습니다. 따라서 애플리케이션과 함께 CMake를 번들로 제공하는 IDE 공급 업체는 항상 출시 당시 사용 가능한 최신 패치 버전의 CMake를 포함하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cc413a12a0749227669f28623dc5077546b1c51e" translate="yes" xml:space="preserve">
          <source>While building a project for submission to CDash, CTest scans the build output for errors and warnings and reports them with surrounding context from the build log. This generic approach works for all build tools, but does not give details about the command invocation that produced a given problem. One may get more detailed reports by setting the &lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt;&lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt;&lt;/a&gt; variable:</source>
          <target state="translated">CDash에 제출할 프로젝트를 빌드하는 동안 CTest는 빌드 출력에서 ​​오류 및 경고를 스캔하고 빌드 로그의 주변 컨텍스트와 함께보고합니다. 이 일반적인 접근 방식은 모든 빌드 도구에 적용되지만 특정 문제를 일으킨 명령 호출에 대한 세부 정보는 제공하지 않습니다. &lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt; &lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt; &lt;/a&gt; 변수 를 설정하면 더 자세한 보고서를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37dc0d4592a4eeacf6f19fb4be56cdb8947e7fd0" translate="yes" xml:space="preserve">
          <source>While features are typically specified in programming language standards, CMake provides a primary user interface based on granular handling of the features, not the language standard that introduced the feature.</source>
          <target state="translated">기능은 일반적으로 프로그래밍 언어 표준에 지정되어 있지만 CMake는 기능을 도입 한 언어 표준이 아니라 기능에 대한 세부적인 처리를 기반으로 기본 사용자 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9710c2459ccdfc70e840768bbf315e08a59492c6" translate="yes" xml:space="preserve">
          <source>While processing a CMake file loaded by &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; this variable contains the full path to the file including it. The top of the include stack is always the &lt;code&gt;CMakeLists.txt&lt;/code&gt; for the current directory. See also &lt;a href=&quot;cmake_current_list_file#variable:CMAKE_CURRENT_LIST_FILE&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_FILE&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_FILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 로드 된 CMake 파일을 처리하는 동안 이 변수에는 파일을 포함하는 파일의 전체 경로가 포함됩니다. 포함 스택의 최상위는 항상 현재 디렉토리 의 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 입니다. &lt;a href=&quot;cmake_current_list_file#variable:CMAKE_CURRENT_LIST_FILE&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_FILE&quot;&gt; &lt;code&gt;CMAKE_CURRENT_LIST_FILE&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2a187bc159d53ce02088dfef4e1736e8ad19ff6" translate="yes" xml:space="preserve">
          <source>While reading, parsing, and evaluating the contents of &lt;code&gt;CMakePresets.json&lt;/code&gt; is straightforward, it is not trivial. In addition to the documentation, IDE vendors may also wish to refer to the CMake source code and test cases for a better understanding of how to implement the format. &lt;a href=&quot;../../_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json&quot;&gt;&lt;code&gt;This file&lt;/code&gt;&lt;/a&gt; provides a machine-readable JSON schema for the &lt;code&gt;CMakePresets.json&lt;/code&gt; format that IDE vendors may find useful for validation and providing editing assistance.</source>
          <target state="translated">&lt;code&gt;CMakePresets.json&lt;/code&gt; 의 내용을 읽고, 구문 분석하고, 평가하는 것은 간단하지만 간단하지는 않습니다. 문서 외에도 IDE 공급 업체는 형식 구현 방법을 더 잘 이해하기 위해 CMake 소스 코드 및 테스트 케이스를 참조 할 수도 있습니다. &lt;a href=&quot;../../_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json&quot;&gt; &lt;code&gt;This file&lt;/code&gt; &lt;/a&gt; 은 IDE 공급 업체가 유효성 검사 및 편집 지원을 제공하는 데 유용하다고 생각할 수 있는 &lt;code&gt;CMakePresets.json&lt;/code&gt; 형식에 대해 컴퓨터에서 읽을 수있는 JSON 스키마를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b562f39a964b62b25fed3de9da08a8ef803f4d4d" translate="yes" xml:space="preserve">
          <source>While running tests in parallel (e.g. with &lt;code&gt;-j&lt;/code&gt;), try not to start tests when they may cause the CPU load to pass above a given threshold.</source>
          <target state="translated">테스트를 병렬로 실행하는 동안 (예 : &lt;code&gt;-j&lt;/code&gt; 사용 ) CPU로드가 지정된 임계 값을 초과 할 수있는 경우 테스트를 시작하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="704be1527fca6d8092aca3afa0b04066654a9156" translate="yes" xml:space="preserve">
          <source>While running tests in parallel, try not to start tests when they may cause the CPU load to pass above a given threshold. If not specified the &lt;a href=&quot;../variable/ctest_test_load#variable:CTEST_TEST_LOAD&quot; id=&quot;index-0-variable:CTEST_TEST_LOAD&quot;&gt;&lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt;&lt;/a&gt; variable will be checked, and then the &lt;code&gt;--test-load&lt;/code&gt; command-line argument to &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;. See also the &lt;code&gt;TestLoad&lt;/code&gt; setting in the &lt;a href=&quot;../manual/ctest.1#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt;.</source>
          <target state="translated">테스트를 병렬로 실행하는 동안 CPU로드가 지정된 임계 값을 초과 할 수있는 경우 테스트를 시작하지 마십시오. 지정하지 않으면 &lt;a href=&quot;../variable/ctest_test_load#variable:CTEST_TEST_LOAD&quot; id=&quot;index-0-variable:CTEST_TEST_LOAD&quot;&gt; &lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt; &lt;/a&gt; 변수가 검사 되고 ctest &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 대한 &lt;code&gt;--test-load&lt;/code&gt; 명령 줄 인수가 검사됩니다 . &lt;code&gt;TestLoad&lt;/code&gt; &lt;a href=&quot;../manual/ctest.1#ctest-test-step&quot;&gt;Test Step&lt;/a&gt; 의 TestLoad 설정 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0262ff0576cd5b733005fcdb6e42c419b0c3e3dc" translate="yes" xml:space="preserve">
          <source>While these are the standard variable names, you should provide backwards compatibility for any old names that were actually in use. Make sure you comment them as deprecated, so that no-one starts using them.</source>
          <target state="translated">이들은 표준 변수 이름이지만 실제로 사용중인 이전 이름에 대한 하위 호환성을 제공해야합니다. 더 이상 사용되지 않도록 주석 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="a46098fc833342738e2a9d8ebb9e0091f819bf17" translate="yes" xml:space="preserve">
          <source>Widget type for entry in GUIs.</source>
          <target state="translated">GUI 입력을위한 위젯 유형.</target>
        </trans-unit>
        <trans-unit id="6119dd6f86340c2de9285d4261b1dd61289a8dd4" translate="yes" xml:space="preserve">
          <source>Will loop over &lt;code&gt;a;b;c&lt;/code&gt; and not over &lt;code&gt;x;y;z&lt;/code&gt; as one might have expected. If you want true CMake variables and/or better CMake scope control you should look at the function command.</source>
          <target state="translated">예상대로 &lt;code&gt;x;y;z&lt;/code&gt; 가 아닌 &lt;code&gt;a;b;c&lt;/code&gt; 를 반복 합니다. 진정한 CMake 변수 및 / 또는 더 나은 CMake 범위 제어를 원한다면 함수 명령을 봐야합니다.</target>
        </trans-unit>
        <trans-unit id="9e58c0c3f0dd810481ddde525742f4fea2c40bbb" translate="yes" xml:space="preserve">
          <source>Will only be used by CMake on the first configuration to determine the default linker flags, after which the value for &lt;code&gt;LDFLAGS&lt;/code&gt; is stored in the cache as &lt;a href=&quot;../variable/cmake_exe_linker_flags_init#variable:CMAKE_EXE_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS_INIT&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS_INIT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_shared_linker_flags_init#variable:CMAKE_SHARED_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_SHARED_LINKER_FLAGS_INIT&quot;&gt;&lt;code&gt;CMAKE_SHARED_LINKER_FLAGS_INIT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../variable/cmake_module_linker_flags_init#variable:CMAKE_MODULE_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_MODULE_LINKER_FLAGS_INIT&quot;&gt;&lt;code&gt;CMAKE_MODULE_LINKER_FLAGS_INIT&lt;/code&gt;&lt;/a&gt;. For any configuration run (including the first), the environment variable will be ignored if the equivalent &lt;code&gt;CMAKE_&amp;lt;TYPE&amp;gt;_LINKER_FLAGS_INIT&lt;/code&gt; variable is defined.</source>
          <target state="translated">CMake는 첫 번째 구성에서만 기본 링커 플래그를 결정하고 &lt;code&gt;LDFLAGS&lt;/code&gt; 값은 &lt;a href=&quot;../variable/cmake_exe_linker_flags_init#variable:CMAKE_EXE_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS_INIT&quot;&gt; &lt;code&gt;CMAKE_EXE_LINKER_FLAGS_INIT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../variable/cmake_shared_linker_flags_init#variable:CMAKE_SHARED_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_SHARED_LINKER_FLAGS_INIT&quot;&gt; &lt;code&gt;CMAKE_SHARED_LINKER_FLAGS_INIT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../variable/cmake_module_linker_flags_init#variable:CMAKE_MODULE_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_MODULE_LINKER_FLAGS_INIT&quot;&gt; &lt;code&gt;CMAKE_MODULE_LINKER_FLAGS_INIT&lt;/code&gt; &lt;/a&gt; 로 캐시에 저장됩니다 . 구성 실행 (첫 번째 포함)에 대해 동등한 &lt;code&gt;CMAKE_&amp;lt;TYPE&amp;gt;_LINKER_FLAGS_INIT&lt;/code&gt; 변수가 정의 되면 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="7e2dbcf1fd8cbb5794599f014ae6e46fed2259aa" translate="yes" xml:space="preserve">
          <source>Windows Versions</source>
          <target state="translated">윈도우 버전</target>
        </trans-unit>
        <trans-unit id="421803741b542202483190f36e855b86c8385951" translate="yes" xml:space="preserve">
          <source>Windows platform: &lt;code&gt;CPython&lt;/code&gt;, &lt;code&gt;IronPython&lt;/code&gt;</source>
          <target state="translated">Windows 플랫폼 : &lt;code&gt;CPython&lt;/code&gt; , &lt;code&gt;IronPython&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="808a70783ddd534ffadefc687c51ddee71dc0b3f" translate="yes" xml:space="preserve">
          <source>Windows-specific Command-Line Tools</source>
          <target state="translated">Windows 관련 명령 줄 도구</target>
        </trans-unit>
        <trans-unit id="d0a162f24e233795006248e6eceb7d0912e33599" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="translated">Windows:</target>
        </trans-unit>
        <trans-unit id="9e9ae6bf80d10d6d28b76870329f9d43e270bef4" translate="yes" xml:space="preserve">
          <source>Windows: The installed versions of Matlab/MCR are retrieved from the Windows registry</source>
          <target state="translated">Windows : 설치된 Matlab / MCR 버전이 Windows 레지스트리에서 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="cdcb7ec4350a66de4adf5ba154e690ebc2116604" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to false or not set at all, the target will be brought up to date as part of doing a &lt;code&gt;make install&lt;/code&gt; or its equivalent for the CMake generator being used.</source>
          <target state="translated">함께 &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 의 모든 설정과 다르거 나하지로 설정, 목표는 수행의 일환으로 최신 상태 것이다 &lt;code&gt;make install&lt;/code&gt; 또는 CMake 발생기에 대한 동등한 사용된다.</target>
        </trans-unit>
        <trans-unit id="b44ce2007aad8cc60bb0eea8ac830740bb441f6d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to false or not set at all, the target will be brought up to date as part of doing a &lt;code&gt;make install&lt;/code&gt; or its equivalent for the CMake generator being used. If a target has &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to true, then any attempt to install that target has undefined behavior. Note that such a target can still safely be listed in an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command as long as the install components the target belongs to are not part of the set of components that anything tries to install.</source>
          <target state="translated">함께 &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 의 모든 설정과 다르거 나하지로 설정, 목표는 수행의 일환으로 최신 상태 것이다 &lt;code&gt;make install&lt;/code&gt; 또는 CMake 발생기에 대한 동등한 사용된다. 대상에 &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; 이 true로 설정된 경우 해당 대상 을 설치하려고하면 정의되지 않은 동작이 있습니다. 대상이 속한 설치 구성 요소가 설치하려고하는 구성 요소 세트의 일부가 아닌 한, 이러한 대상을 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 명령 에 안전하게 나열 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a4982a6eead7715039f79463877b9aec0ef6150" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;FORMAT&lt;/code&gt; set to &lt;code&gt;raw&lt;/code&gt; only one file will be compressed with the compression type specified by &lt;code&gt;COMPRESSION&lt;/code&gt;.</source>
          <target state="translated">로 &lt;code&gt;FORMAT&lt;/code&gt; 에 설정된 &lt;code&gt;raw&lt;/code&gt; 하나의 파일로 지정된 압축 방식으로 압축 될 것이다 &lt;code&gt;COMPRESSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="308d016a3d6d48f4acac66d449bb95817b894983" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;VERBOSE&lt;/code&gt;, the command will produce verbose output.</source>
          <target state="translated">함께 &lt;code&gt;VERBOSE&lt;/code&gt; 명령이 상세 출력을 생성한다.</target>
        </trans-unit>
        <trans-unit id="0aa8af71c4a8691d9acd30b28efe8ecaa0f36d14" translate="yes" xml:space="preserve">
          <source>With TOUCH and TOUCH_NOCREATE the contents of an existing file will not be modified.</source>
          <target state="translated">TOUCH 및 TOUCH_NOCREATE를 사용하면 기존 파일의 내용이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d907fd7ae9fca813e1cd4fe78382893e94aedcc" translate="yes" xml:space="preserve">
          <source>With all components enabled, the following targets will be defined:</source>
          <target state="translated">모든 구성 요소가 활성화되면 다음 대상이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c6cacb38ed1bf47a288d099276d237fe4b66f597" translate="yes" xml:space="preserve">
          <source>With the exception of the &lt;code&gt;ALL&lt;/code&gt; value, these values can be combined in order to customize the output. For example:</source>
          <target state="translated">&lt;code&gt;ALL&lt;/code&gt; 값을 제외 하고 출력을 사용자 정의하기 위해이 값을 결합 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5007716b54422b954e8064ef8ed52f74766b17f5" translate="yes" xml:space="preserve">
          <source>With the policy set to &lt;code&gt;NEW&lt;/code&gt; the quoted arguments will not be further dereferenced:</source>
          <target state="translated">정책을 &lt;code&gt;NEW&lt;/code&gt; 로 설정 하면 인용 된 인수가 더 이상 참조되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e98581a0c668451fa06fd0fb0ba02ea42dfc202" translate="yes" xml:space="preserve">
          <source>With the policy set to &lt;code&gt;OLD&lt;/code&gt; implicit expansion reduces this semantically to:</source>
          <target state="translated">정책을 &lt;code&gt;OLD&lt;/code&gt; 로 설정하면 암시 적 확장으로이를 의미 적으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="3fcde495bf7e87a26e1fedb9d775dec969d186b5" translate="yes" xml:space="preserve">
          <source>With this approach the package references its external dependencies only through the names of &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt;. When a consumer uses the installed package, the consumer will run the appropriate &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands (via the &lt;code&gt;find_dependency&lt;/code&gt; macro described above) to find the dependencies and populate the imported targets with appropriate paths on their own machine.</source>
          <target state="translated">이 방법을 사용하면 패키지는 &lt;a href=&quot;../../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상&lt;/a&gt; 의 이름을 통해서만 외부 종속성을 참조합니다 . 소비자가 설치된 패키지를 사용할 때 소비자는 적절한 &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 ( 위에 설명 된 &lt;code&gt;find_dependency&lt;/code&gt; 매크로 를 통해 )을 실행하여 종속성을 찾고 가져온 대상을 자신의 컴퓨터에 적절한 경로로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="2c3f223da67cd581fdcf701ca04b5615ab1c33f2" translate="yes" xml:space="preserve">
          <source>With this approach the package references its external dependencies only through the names of &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt;. When a consumer uses the installed package, the consumer will run the appropriate &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-13-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands (via the &lt;code&gt;find_dependency&lt;/code&gt; macro described above) to find the dependencies and populate the imported targets with appropriate paths on their own machine.</source>
          <target state="translated">이 방법을 사용하면 패키지는 &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상&lt;/a&gt; 의 이름을 통해서만 외부 종속성을 참조합니다 . 소비자가 설치된 패키지를 사용하는 경우 소비자는 적절한 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-13-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 ( 위에서 설명한 &lt;code&gt;find_dependency&lt;/code&gt; 매크로 를 통해 )을 실행하여 종속성을 찾고 가져온 대상을 자체 시스템의 적절한 경로로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="1fae3a15db884ad373b30023eb34cf5bf04e3c7a" translate="yes" xml:space="preserve">
          <source>With this export call we now generate a &lt;code&gt;Targets.cmake&lt;/code&gt;, allowing the configured &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; in the build directory to be used by other projects, without needing it to be installed.</source>
          <target state="translated">이 내보내기 호출을 통해 이제 &lt;code&gt;Targets.cmake&lt;/code&gt; 를 생성 하여 빌드 디렉토리에 구성된 &lt;code&gt;MathFunctionsConfig.cmake&lt;/code&gt; 를 설치하지 않고도 다른 프로젝트에서 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="cfa2a879186e45980c1b4dd8c08f6c7e24cfb812" translate="yes" xml:space="preserve">
          <source>With:</source>
          <target state="translated">With:</target>
        </trans-unit>
        <trans-unit id="230da9a853d4c946694cb20bbd0d5526aa29dd05" translate="yes" xml:space="preserve">
          <source>Within a &amp;ldquo;major&amp;rdquo; version all &amp;ldquo;minor&amp;rdquo; versions are fully backwards compatible. New &amp;ldquo;minor&amp;rdquo; versions may introduce functionality in such a way that existing clients of the same &amp;ldquo;major&amp;rdquo; version will continue to work, provided they ignore keys in the output that they do not know about.</source>
          <target state="translated">&quot;주 버전&quot;내에서 모든 &quot;주 버전&quot;은 이전 버전과 완전히 호환됩니다. 새로운 &quot;부&quot;버전은 동일한 &quot;주&quot;버전의 기존 클라이언트가 알지 못하는 출력의 키를 무시하는 한 계속 작동하는 방식으로 기능을 도입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59e0d254ea1fe4cedc897d0cf4b1c21463c12b28" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;COMPILE_LANG_AND_ID&lt;/code&gt; generator expression the same logic would be expressed as:</source>
          <target state="translated">&lt;code&gt;COMPILE_LANG_AND_ID&lt;/code&gt; 생성기 표현식이 없으면 동일한 논리가 다음과 같이 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="f54f1ae9732cd2b7cc847c4783664673b25c354c" translate="yes" xml:space="preserve">
          <source>Would be replaced with:</source>
          <target state="translated">다음으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="24a796d7af1eabb80bc4632499652cf1a3c5cc25" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;&amp;lt;content&amp;gt;&lt;/code&gt; into a file called &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;. If the file does not exist, it will be created. If the file already exists, &lt;code&gt;WRITE&lt;/code&gt; mode will overwrite it and &lt;code&gt;APPEND&lt;/code&gt; mode will append to the end. Any directories in the path specified by &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; that do not exist will be created.</source>
          <target state="translated">&lt;code&gt;&amp;lt;content&amp;gt;&lt;/code&gt; 를 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 이라는 파일에 작성 하십시오 . 파일이 존재하지 않으면 작성됩니다. 파일이 이미 존재하면 &lt;code&gt;WRITE&lt;/code&gt; 모드가 파일 을 덮어 쓰고 &lt;code&gt;APPEND&lt;/code&gt; 모드가 끝에 추가됩니다. 존재하지 않는 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 에 지정된 경로의 디렉토리 가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="1da7710098bf1906e6c6dc1a3e1b3c21879f0457" translate="yes" xml:space="preserve">
          <source>Write Windows registry value.</source>
          <target state="translated">Windows 레지스트리 값을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="e924ff299c3c69c0a54141bb74428414b3818eaf" translate="yes" xml:space="preserve">
          <source>Write a string representation of the current date and/or time to the &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">현재 날짜 및 / 또는 시간의 문자열 표현을 &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="060145118d028307069bf43d2ded049e2e9346ec" translate="yes" xml:space="preserve">
          <source>Write a string representation of the current date and/or time to the output variable.</source>
          <target state="translated">현재 날짜 및 / 또는 시간의 문자열 표현을 출력 변수에 씁니다.</target>
        </trans-unit>
        <trans-unit id="edb3151c30375e79339e7515ae52c0bffe339483" translate="yes" xml:space="preserve">
          <source>WriteBasicConfigVersionFile</source>
          <target state="translated">WriteBasicConfigVersionFile</target>
        </trans-unit>
        <trans-unit id="08671d8fc340a83e1b0925e743ebd16013deda37" translate="yes" xml:space="preserve">
          <source>WriteCompilerDetectionHeader</source>
          <target state="translated">WriteCompilerDetectionHeader</target>
        </trans-unit>
        <trans-unit id="af86716f2a1b3bc929d5f2382e960fadcd5f195e" translate="yes" xml:space="preserve">
          <source>Writes a file for use as &lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt; file to &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;. See the documentation of &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; for details on this.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt; 파일로 사용할 파일을 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 에 씁니다 . 이에 대한 자세한 내용 은 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3453a4cb1b4f3df27c35d8b7e9316cebb05cc8b2" translate="yes" xml:space="preserve">
          <source>Writes a qt.conf file with the &amp;lt;qt_conf_contents&amp;gt; into &amp;lt;qt_conf_dir&amp;gt;.</source>
          <target state="translated">&amp;lt;qt_conf_contents&amp;gt;가있는 qt.conf 파일을 &amp;lt;qt_conf_dir&amp;gt;에 씁니다.</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="14621ea99fecbc2561e38e2653805fd06f90c356" translate="yes" xml:space="preserve">
          <source>XCODE</source>
          <target state="translated">XCODE</target>
        </trans-unit>
        <trans-unit id="c3da0189d4aacf894574cd43d5fd7f9132d8a79e" translate="yes" xml:space="preserve">
          <source>XCODE_ATTRIBUTE_&amp;lt;an-attribute&amp;gt;</source>
          <target state="translated">XCODE_ATTRIBUTE_&amp;lt;an-attribute&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bb00edfecf9d57d94fd37f56e2d3ea7520e26b43" translate="yes" xml:space="preserve">
          <source>XCODE_ATTRIBUTE_an-attribute</source>
          <target state="translated">XCODE_ATTRIBUTE_an-attribute</target>
        </trans-unit>
        <trans-unit id="f0572e6a1a6c2c6cb26c1992ddf88b836f700168" translate="yes" xml:space="preserve">
          <source>XCODE_EMIT_EFFECTIVE_PLATFORM_NAME</source>
          <target state="translated">XCODE_EMIT_EFFECTIVE_PLATFORM_NAME</target>
        </trans-unit>
        <trans-unit id="b0ea10f75cd8f3e2fa31d241570132ef56738144" translate="yes" xml:space="preserve">
          <source>XCODE_EXPLICIT_FILE_TYPE</source>
          <target state="translated">XCODE_EXPLICIT_FILE_TYPE</target>
        </trans-unit>
        <trans-unit id="0c7acb857a43726191197e79f972b6483f009a5d" translate="yes" xml:space="preserve">
          <source>XCODE_FILE_ATTRIBUTES</source>
          <target state="translated">XCODE_FILE_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="9c863a7d7985d101181c96996d3d7c58bcf237d3" translate="yes" xml:space="preserve">
          <source>XCODE_GENERATE_SCHEME</source>
          <target state="translated">XCODE_GENERATE_SCHEME</target>
        </trans-unit>
        <trans-unit id="e4cff556e29bb9741334153191e79a3da521d94d" translate="yes" xml:space="preserve">
          <source>XCODE_LAST_KNOWN_FILE_TYPE</source>
          <target state="translated">XCODE_LAST_KNOWN_FILE_TYPE</target>
        </trans-unit>
        <trans-unit id="1403079354d56b1f2a996e596c12a70f76b010de" translate="yes" xml:space="preserve">
          <source>XCODE_LINK_BUILD_PHASE_MODE</source>
          <target state="translated">XCODE_LINK_BUILD_PHASE_MODE</target>
        </trans-unit>
        <trans-unit id="64b8f36369ba1bbd601ae99d8c560f5c82706b3e" translate="yes" xml:space="preserve">
          <source>XCODE_PRODUCT_TYPE</source>
          <target state="translated">XCODE_PRODUCT_TYPE</target>
        </trans-unit>
        <trans-unit id="889390df4e0984ee0d1c22234df586a703db6630" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ADDRESS_SANITIZER</source>
          <target state="translated">XCODE_SCHEME_ADDRESS_SANITIZER</target>
        </trans-unit>
        <trans-unit id="e74601be34f0ce251e28d112697e7f39ffbcc37c" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN</source>
          <target state="translated">XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN</target>
        </trans-unit>
        <trans-unit id="949bcec198cce6b60d2fcdcf63108955f1a030c9" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ARGUMENTS</source>
          <target state="translated">XCODE_SCHEME_ARGUMENTS</target>
        </trans-unit>
        <trans-unit id="b35c0a4868666fecee6cecff4b102df13b12605b" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DEBUG_AS_ROOT</source>
          <target state="translated">XCODE_SCHEME_DEBUG_AS_ROOT</target>
        </trans-unit>
        <trans-unit id="0254723872a780d56559a2229ae9e8cde9451e7d" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING</source>
          <target state="translated">XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING</target>
        </trans-unit>
        <trans-unit id="f7b5894b4e65837714aa9dce53a8a8a4e362abf7" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER</source>
          <target state="translated">XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER</target>
        </trans-unit>
        <trans-unit id="db8591de0c939ffb088b523dc5ddebd4426d2fcb" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS</source>
          <target state="translated">XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS</target>
        </trans-unit>
        <trans-unit id="e990a779c304630c2a961d5ba8e1c162fbea0497" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE</source>
          <target state="translated">XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE</target>
        </trans-unit>
        <trans-unit id="04618a7637a9756c0666a6419b57292213270b6f" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ENVIRONMENT</source>
          <target state="translated">XCODE_SCHEME_ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="7207a9faa1ff025b77b9bfd91f4e8e5e2f6a08af" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_EXECUTABLE</source>
          <target state="translated">XCODE_SCHEME_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="7fb3f1eea502ff217fd48ad63c5fbff25b1d4690" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_GUARD_MALLOC</source>
          <target state="translated">XCODE_SCHEME_GUARD_MALLOC</target>
        </trans-unit>
        <trans-unit id="1e61069ce5832fe2c740d66c414612b64595f846" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP</source>
          <target state="translated">XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP</target>
        </trans-unit>
        <trans-unit id="c68fab0c6825900576ebf4b77d129d1b324a5663" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MALLOC_GUARD_EDGES</source>
          <target state="translated">XCODE_SCHEME_MALLOC_GUARD_EDGES</target>
        </trans-unit>
        <trans-unit id="96cb563c38d8170a86658fb7081a64e044d4c61b" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MALLOC_SCRIBBLE</source>
          <target state="translated">XCODE_SCHEME_MALLOC_SCRIBBLE</target>
        </trans-unit>
        <trans-unit id="26e6e81a014e4eb96b631e85c39e82ba5c4adf59" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MALLOC_STACK</source>
          <target state="translated">XCODE_SCHEME_MALLOC_STACK</target>
        </trans-unit>
        <trans-unit id="0f312ea4bccae7bf4a487eeda31bd2b05fbc0bc7" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_THREAD_SANITIZER</source>
          <target state="translated">XCODE_SCHEME_THREAD_SANITIZER</target>
        </trans-unit>
        <trans-unit id="2f570e4dd561a376299a62d584cff78a29e9e007" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_THREAD_SANITIZER_STOP</source>
          <target state="translated">XCODE_SCHEME_THREAD_SANITIZER_STOP</target>
        </trans-unit>
        <trans-unit id="9f206283d37b0f2241461a07a2832c4b73126749" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER</source>
          <target state="translated">XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER</target>
        </trans-unit>
        <trans-unit id="d1f676d34544ecd7af78ba388bfb9e8ffee9b5cf" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP</source>
          <target state="translated">XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP</target>
        </trans-unit>
        <trans-unit id="848ffa8cef7f7c29b492947d16200d90905b8ac8" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_WORKING_DIRECTORY</source>
          <target state="translated">XCODE_SCHEME_WORKING_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="cd75bf841b9d66ba6aa49824b0ba560bac33786d" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ZOMBIE_OBJECTS</source>
          <target state="translated">XCODE_SCHEME_ZOMBIE_OBJECTS</target>
        </trans-unit>
        <trans-unit id="4310227e04990a71deab062396407855068f90e4" translate="yes" xml:space="preserve">
          <source>XCODE_VERSION</source>
          <target state="translated">XCODE_VERSION</target>
        </trans-unit>
        <trans-unit id="7ca8673e37c99db50a2870f4d7922e00fe3fc899" translate="yes" xml:space="preserve">
          <source>XCTEST</source>
          <target state="translated">XCTEST</target>
        </trans-unit>
        <trans-unit id="b35e5f7ba4a7c37d8a2ae3d634058efc3b3a617a" translate="yes" xml:space="preserve">
          <source>XCode</source>
          <target state="translated">XCode</target>
        </trans-unit>
        <trans-unit id="e4ec18b906d14514b6ea33cda3c0449410915050" translate="yes" xml:space="preserve">
          <source>XMLRPC modules may be specified as components for this find module. Modules may be listed by running &amp;ldquo;xmlrpc-c-config&amp;rdquo;. Modules include:</source>
          <target state="translated">XMLRPC 모듈은이 찾기 모듈의 구성 요소로 지정 될 수 있습니다. &amp;ldquo;xmlrpc-c-config&amp;rdquo;를 실행하여 모듈을 나열 할 수 있습니다. 모듈은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1820432a6f06824e3a9f41c5f5426eda5d6a54f5" translate="yes" xml:space="preserve">
          <source>Xalan libraries to be linked; note &lt;code&gt;XercesC_LIBRARIES&lt;/code&gt; is also required</source>
          <target state="translated">연결될 Xalan 라이브러리; 노트 &lt;code&gt;XercesC_LIBRARIES&lt;/code&gt; 는 도 필요합니다</target>
        </trans-unit>
        <trans-unit id="656953987c8764d8d3e71acc04ce7b2fc782c6cb" translate="yes" xml:space="preserve">
          <source>Xalan release version</source>
          <target state="translated">Xalan 릴리스 버전</target>
        </trans-unit>
        <trans-unit id="64d36ae69ab9210cfc1f0a43d303686988db04f8" translate="yes" xml:space="preserve">
          <source>Xcode</source>
          <target state="translated">Xcode</target>
        </trans-unit>
        <trans-unit id="48573f192a18ed984b681f742964531a94e2767c" translate="yes" xml:space="preserve">
          <source>Xcode build system selection.</source>
          <target state="translated">Xcode 빌드 시스템 선택.</target>
        </trans-unit>
        <trans-unit id="95eb061fc4e1ea5831a47f5c29035f5f44a777e4" translate="yes" xml:space="preserve">
          <source>Xcode compiler selection.</source>
          <target state="translated">Xcode 컴파일러 선택.</target>
        </trans-unit>
        <trans-unit id="5a9855407a077153887feb9105bf83af572d0a79" translate="yes" xml:space="preserve">
          <source>Xerces libraries to be linked</source>
          <target state="translated">연결될 Xerces 라이브러리</target>
        </trans-unit>
        <trans-unit id="b464a8263a55f69b033eb0b983d519ed4512f696" translate="yes" xml:space="preserve">
          <source>Xerces release version</source>
          <target state="translated">Xerces 릴리스 버전</target>
        </trans-unit>
        <trans-unit id="8fff039853f5c2bbb8a28d056b579c7dcb7d137f" translate="yes" xml:space="preserve">
          <source>YES</source>
          <target state="translated">YES</target>
        </trans-unit>
        <trans-unit id="4146fb146136318ae506d705ae1141ef9838ed52" translate="yes" xml:space="preserve">
          <source>YES (*)</source>
          <target state="translated">예 (*)</target>
        </trans-unit>
        <trans-unit id="8d2fb53f0839fbed646f08c61af49b8722da8699" translate="yes" xml:space="preserve">
          <source>You can then continue and process these variables.</source>
          <target state="translated">그런 다음이 변수를 계속 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="bcf6df7d1bf3e413719a30b576132e6cac924b5a" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to include anything or link anything to use it.</source>
          <target state="translated">사용하기 위해 아무것도 포함하거나 연결하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="232cba15a4ae1818eab977ba83dd49b74af88351" translate="yes" xml:space="preserve">
          <source>You may a list of strings to &amp;ldquo;configure&amp;rdquo; via the &amp;ldquo;cacheArguments&amp;rdquo; key. These strings will be interpreted similar to command line arguments related to cache handling that are passed to the cmake command line client.</source>
          <target state="translated">&quot;cacheArguments&quot;키를 통해 &quot;구성&quot;할 문자열 목록이있을 수 있습니다. 이 문자열은 cmake 명령 행 클라이언트에 전달되는 캐시 처리와 관련된 명령 행 인수와 유사하게 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="36f5bb403fdd11b4e202242e2e896e76eef76c55" translate="yes" xml:space="preserve">
          <source>You should add_definitions(${PNG_DEFINITIONS}) before compiling code that includes png library files.</source>
          <target state="translated">png 라이브러리 파일이 포함 된 코드를 컴파일하기 전에 add_definitions ($ {PNG_DEFINITIONS})를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="4eb6669baac721b3463d1f60c8cb32bb47483cc9" translate="yes" xml:space="preserve">
          <source>You will notice that we&amp;rsquo;re not using &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt;, even if we think they should be available. We should realize quickly that we have forgotten to include &lt;code&gt;TutorialConfig.h&lt;/code&gt; in &lt;code&gt;mysqrt.cxx&lt;/code&gt;.</source>
          <target state="translated">사용할 수 있어야한다고 생각하더라도 &lt;code&gt;log&lt;/code&gt; 및 &lt;code&gt;exp&lt;/code&gt; 를 사용하지 않는다는 것을 알 수 있습니다. 우리는 우리가 포함 잊어 버린 것을 빨리 깨달아야한다 &lt;code&gt;TutorialConfig.h&lt;/code&gt; 을 에 &lt;code&gt;mysqrt.cxx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9acd1d781555673c187a6a5f879f3b5085ce49c" translate="yes" xml:space="preserve">
          <source>[ ] DCMTKConfig</source>
          <target state="translated">[] DCMTKConfig</target>
        </trans-unit>
        <trans-unit id="db3f08b84863f8dd90c9e8f9437cd960329dcb52" translate="yes" xml:space="preserve">
          <source>[ ] DCMTKConfig ..: Means that the version of DCMTK does NOT export a DCMTKConfig.cmake file.</source>
          <target state="translated">[] DCMTKConfig .. : DCMTK 버전이 DCMTKConfig.cmake 파일을 내 보내지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="08c71e5afc287bab059cbe5262b0667972ff83bc" translate="yes" xml:space="preserve">
          <source>[CMake 2.8.10]: The CMake variable &lt;code&gt;OSG_DIR&lt;/code&gt; can now be used as well to influence detection, instead of needing to specify an environment variable.</source>
          <target state="translated">[CMake 2.8.10] : CMake 변수 &lt;code&gt;OSG_DIR&lt;/code&gt; 을 사용하여 환경 변수를 지정할 필요없이 감지에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dbcb1a4fa45566e0597a6d786e0cd5b903be7fd" translate="yes" xml:space="preserve">
          <source>[CMake 2.8.10]: The CMake variables OPENTHREADS_DIR or OSG_DIR can now be used as well to influence detection, instead of needing to specify an environment variable.</source>
          <target state="translated">[CMake 2.8.10] : CMake 변수 OPENTHREADS_DIR 또는 OSG_DIR을 사용하여 환경 변수를 지정하지 않고 감지에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b90d855d099e8412da1bf38c02af935a1b4ff857" translate="yes" xml:space="preserve">
          <source>[X] DCMTKConfig</source>
          <target state="translated">[X] DCMTKConfig</target>
        </trans-unit>
        <trans-unit id="e3d2e3cfb46e6f63e5632463053c51a04101926e" translate="yes" xml:space="preserve">
          <source>[X] DCMTKConfig ..: Means that the version of DCMTK exports a DCMTKConfig.cmake file.</source>
          <target state="translated">[X] DCMTKConfig .. : DCMTK 버전이 DCMTKConfig.cmake 파일을 내보내는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="786bb327390d1f943535627c421b4561a8f55b0d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt; to the corresponding reply file for the requested object kind and selected version.</source>
          <target state="translated">&lt;a href=&quot;#v1-reply-file-reference&quot;&gt;V1 답글 파일 참조&lt;/a&gt; 요청 된 객체의 종류 및 선택한 버전에 해당하는 응답 파일.</target>
        </trans-unit>
        <trans-unit id="d02474175932c264ef7dba446ecd70c6e7c130ea" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of header search paths to pass to the compiler.</source>
          <target state="translated">컴파일러에 전달할 헤더 검색 경로 의 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-목록&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f722ab3da4f0ec68a22e3209d2fd31017d0f833e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of libraries to add to the link command. See policy &lt;a href=&quot;../policy/cmp0075#policy:CMP0075&quot; id=&quot;index-0-policy:CMP0075&quot;&gt;&lt;code&gt;CMP0075&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 라이브러리는 링크 명령에 추가 할 수 있습니다. 정책 &lt;a href=&quot;../policy/cmp0075#policy:CMP0075&quot; id=&quot;index-0-policy:CMP0075&quot;&gt; &lt;code&gt;CMP0075&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="862f56944b90a056c3a8c16f687a731ea999119b" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of macros to define (-DFOO=bar).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;; -list&lt;/a&gt; 매크로는 (-DFOO = 바)를 정의한다.</target>
        </trans-unit>
        <trans-unit id="e03597f9707b456702258e2a554294b13241bf2c" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of options to add to the link command.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;, -list&lt;/a&gt; 옵션의 링크 명령에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cf2166e5dd75f66683bb665d60745c9bf9180f0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; non C++ file (e.g. a &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.ui&lt;/code&gt; file) or</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 이 아닌 C ++ 파일 (예 : &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.json&lt;/code&gt; 또는 &lt;code&gt;.ui&lt;/code&gt; 파일) 또는</target>
        </trans-unit>
        <trans-unit id="01675c157059c7fdd272dd7b6990f9c02a4c6869" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-2-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; C++ file that isn&amp;rsquo;t recognized by &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; because it&amp;rsquo;s skipped by &lt;a href=&quot;../prop_sf/skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt;&lt;code&gt;SKIP_AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt;&lt;code&gt;SKIP_AUTOUIC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt;&lt;code&gt;SKIP_AUTOGEN&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../policy/cmp0071#policy:CMP0071&quot; id=&quot;index-0-policy:CMP0071&quot;&gt;&lt;code&gt;CMP0071&lt;/code&gt;&lt;/a&gt; or</source>
          <target state="translated">&lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-2-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 인식되지 않는 C ++ 파일 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 그것의에 의해 생략하기 때문에 &lt;a href=&quot;../prop_sf/skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt; &lt;code&gt;SKIP_AUTOMOC&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_sf/skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt; &lt;code&gt;SKIP_AUTOUIC&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt; &lt;code&gt;SKIP_AUTOGEN&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../policy/cmp0071#policy:CMP0071&quot; id=&quot;index-0-policy:CMP0071&quot;&gt; &lt;code&gt;CMP0071&lt;/code&gt; &lt;/a&gt; 또는</target>
        </trans-unit>
        <trans-unit id="96b392f89bd8a24c07f35a807aa63dee656e0cd3" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot.&amp;lt;target&amp;gt;.dependers&lt;/code&gt; file for each target, showing which other targets depend on it</source>
          <target state="translated">&lt;code&gt;foo.dot.&amp;lt;target&amp;gt;.dependers&lt;/code&gt; 각 대상에 대한 파일을 보여주는 다른 타겟에 의존</target>
        </trans-unit>
        <trans-unit id="491d235f2bd8a701dbca605edfee1e9b0b1cb6fa" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot.&amp;lt;target&amp;gt;.dependers&lt;/code&gt; file, showing which other targets depend on the respective target</source>
          <target state="translated">&lt;code&gt;foo.dot.&amp;lt;target&amp;gt;.dependers&lt;/code&gt; 파일을 보여주는 또 다른 목표는 각각의 목표에 의존</target>
        </trans-unit>
        <trans-unit id="dc76a1dcfce74e82473dedde7f7063af6b4bd719" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot.&amp;lt;target&amp;gt;&lt;/code&gt; file for each target, file showing on which other targets the respective target depends</source>
          <target state="translated">&lt;code&gt;foo.dot.&amp;lt;target&amp;gt;&lt;/code&gt; 각 대상 파일에 대한 파일을 보여주는 또 다른 대상은 각각의 대상에 의존</target>
        </trans-unit>
        <trans-unit id="93fd49f037408f6a6370fbaae6d4a58aef4ccc93" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot.&amp;lt;target&amp;gt;&lt;/code&gt; file for each target, showing on which other targets it depends</source>
          <target state="translated">&lt;code&gt;foo.dot.&amp;lt;target&amp;gt;&lt;/code&gt; 각 대상 파일에 대한 다른 타겟이 의존하는 도시</target>
        </trans-unit>
        <trans-unit id="1c1027f40dc6bf92b9344e25d04f1963e649c1e4" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot&lt;/code&gt; file showing all dependencies in the project</source>
          <target state="translated">&lt;code&gt;foo.dot&lt;/code&gt; 의 프로젝트의 모든 종속성을 보여주는 파일</target>
        </trans-unit>
        <trans-unit id="f895978f65267ec7a3152ae865dc57b7ae60d903" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot&lt;/code&gt; file, showing all dependencies in the project</source>
          <target state="translated">&lt;code&gt;foo.dot&lt;/code&gt; 의 프로젝트의 모든 종속성을 보여주는 파일</target>
        </trans-unit>
        <trans-unit id="b1c8a7d432696d8ab724557bc3c0b84d3b380fb7" translate="yes" xml:space="preserve">
          <source>a JSON array whose elements are each one of the above.</source>
          <target state="translated">요소가 각각 위의 JSON 배열 인 JSON 배열</target>
        </trans-unit>
        <trans-unit id="61d6e78e25806010247a5e9bd9201e63b2ac6aa0" translate="yes" xml:space="preserve">
          <source>a JSON integer specifying a (non-negative) major version number, or</source>
          <target state="translated">음수가 아닌 주요 버전 번호를 지정하는 JSON 정수 또는</target>
        </trans-unit>
        <trans-unit id="68bdfc79ab8afb093f16f1d4f56ea8c64358a2ae" translate="yes" xml:space="preserve">
          <source>a JSON object containing &lt;code&gt;major&lt;/code&gt; and (optionally) &lt;code&gt;minor&lt;/code&gt; members specifying non-negative integer version components, or</source>
          <target state="translated">음이 아닌 정수 버전 구성 요소를 지정 하는 &lt;code&gt;major&lt;/code&gt; 멤버 및 선택적으로 &lt;code&gt;minor&lt;/code&gt; 멤버를 포함하는 JSON 객체 또는</target>
        </trans-unit>
        <trans-unit id="2fac5fc763fe44a71760a85d2e7ed7714b8afd29" translate="yes" xml:space="preserve">
          <source>a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message, or</source>
          <target state="translated">오류 메시지가있는 문자열을 포함 하는 단일 &lt;code&gt;error&lt;/code&gt; 멤버가 있는 JSON 오브젝트 또는</target>
        </trans-unit>
        <trans-unit id="f76a7f1ceeb6a3743e08852def3e03b43f3dfa70" translate="yes" xml:space="preserve">
          <source>a Qt macro from &lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">에서 매크로 Qt는 &lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; &lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="b31b066a5620f7c7c743d3385456d077411a9bb0" translate="yes" xml:space="preserve">
          <source>a Qt macro from &lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">에서 매크로 Qt는 &lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt; &lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt; &lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="e7160ed2e29306eba9b5878a5fb6fe8eebaf1b87" translate="yes" xml:space="preserve">
          <source>a cache entry of the specified name does not exist at all, or</source>
          <target state="translated">지정된 이름의 캐시 항목이 존재하지 않거나</target>
        </trans-unit>
        <trans-unit id="61ccd8d405cd02d1dde6af2328c713763f181baf" translate="yes" xml:space="preserve">
          <source>a cache entry of the specified name exists but has not been given a type (e.g. via &lt;code&gt;-D&amp;lt;name&amp;gt;=ON&lt;/code&gt; on the command line).</source>
          <target state="translated">지정된 이름의 캐시 항목이 존재하지만 유형이 지정되지 않았습니다 (예 : 명령 행에서 &lt;code&gt;-D&amp;lt;name&amp;gt;=ON&lt;/code&gt; 을 통해).</target>
        </trans-unit>
        <trans-unit id="a9a7faa9f70a36c21519b24f04232dd314052727" translate="yes" xml:space="preserve">
          <source>a file that isn&amp;rsquo;t in the origin target&amp;rsquo;s sources</source>
          <target state="translated">오리진 대상의 소스에없는 파일</target>
        </trans-unit>
        <trans-unit id="ef6dd84624d0a9d2efea462a1d16652bc9e5fb88" translate="yes" xml:space="preserve">
          <source>a list of additional link dependencies. The target links to &lt;code&gt;libmex&lt;/code&gt; and &lt;code&gt;libmx&lt;/code&gt; by default.</source>
          <target state="translated">추가 링크 종속성 목록. 대상 은 기본적 으로 &lt;code&gt;libmex&lt;/code&gt; 및 &lt;code&gt;libmx&lt;/code&gt; 에 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="23f4735c4599eaefe613c2d817254c12d7d4e5d8" translate="yes" xml:space="preserve">
          <source>a list of additional option in order to run Matlab from the command line. &lt;code&gt;-nosplash -nodesktop -nodisplay&lt;/code&gt; are always added.</source>
          <target state="translated">명령 행에서 Matlab을 실행하기위한 추가 옵션 목록. &lt;code&gt;-nosplash -nodesktop -nodisplay&lt;/code&gt; 가 항상 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="940585ae03cfc53a1ee1ee927d509d2cab1724e3" translate="yes" xml:space="preserve">
          <source>a list of paths to add to the Matlab path prior to running the unit test.</source>
          <target state="translated">단위 테스트를 실행하기 전에 Matlab 경로에 추가 할 경로 목록.</target>
        </trans-unit>
        <trans-unit id="d0020e65c3c5b962eabe73b98cdef010deb68602" translate="yes" xml:space="preserve">
          <source>a private header with the same base name and a &lt;code&gt;_p&lt;/code&gt; suffix (&lt;code&gt;&amp;lt;source_base&amp;gt;_p.&amp;lt;header_extention&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">기본 이름과 &lt;code&gt;_p&lt;/code&gt; 접미사 가 동일한 개인 헤더 ( &lt;code&gt;&amp;lt;source_base&amp;gt;_p.&amp;lt;header_extention&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3679c4e7e4ae3a2229a2805c3cb8ba6530fc59fb" translate="yes" xml:space="preserve">
          <source>a regular header with the same base name (&lt;code&gt;&amp;lt;source_base&amp;gt;.&amp;lt;header_extention&amp;gt;&lt;/code&gt;) and</source>
          <target state="translated">기본 이름 ( &lt;code&gt;&amp;lt;source_base&amp;gt;.&amp;lt;header_extention&amp;gt;&lt;/code&gt; ) 이 동일한 일반 헤더</target>
        </trans-unit>
        <trans-unit id="c389a05e9bf89ec35bc980bcad819fe7b726ee1b" translate="yes" xml:space="preserve">
          <source>a shared library target (&lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.dll&lt;/code&gt; but not their &lt;code&gt;.lib&lt;/code&gt; import library) created by &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 공유 라이브러리 대상 ( &lt;code&gt;.so&lt;/code&gt; , &lt;code&gt;.dll&lt;/code&gt; , &lt;code&gt;.lib&lt;/code&gt; 가져 오기 라이브러리 제외 )</target>
        </trans-unit>
        <trans-unit id="265f78dca4c06164d1ac875d9fb4ca849dbefd62" translate="yes" xml:space="preserve">
          <source>a static library target created by &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 정적 라이브러리 타겟</target>
        </trans-unit>
        <trans-unit id="51717226ed8c98ab80fd2bab212d44ceb1438b3f" translate="yes" xml:space="preserve">
          <source>absolute path to the location where the data is stored on-device</source>
          <target state="translated">장치에 데이터가 저장된 위치의 절대 경로</target>
        </trans-unit>
        <trans-unit id="cfaecb5d6854b5f1fdc6bc9886477094e366307a" translate="yes" xml:space="preserve">
          <source>absolute path to the root directory of the on-device test location</source>
          <target state="translated">온 디바이스 테스트 위치의 루트 디렉토리에 대한 절대 경로</target>
        </trans-unit>
        <trans-unit id="01683d1680a9e321039e3703b959359ddd4a8a8a" translate="yes" xml:space="preserve">
          <source>absolute path where the data files are expected to be</source>
          <target state="translated">데이터 파일이 예상되는 절대 경로</target>
        </trans-unit>
        <trans-unit id="fe2ef2826435669274dac1d91a5d7b4033658350" translate="yes" xml:space="preserve">
          <source>absolute path where the libraries are expected to be</source>
          <target state="translated">라이브러리가 예상되는 절대 경로</target>
        </trans-unit>
        <trans-unit id="01213c78479a1946f8d27956cd0abca915892382" translate="yes" xml:space="preserve">
          <source>add_compile_definitions</source>
          <target state="translated">add_compile_definitions</target>
        </trans-unit>
        <trans-unit id="032fd07275a6fa18e4fbd02ac434ae4ec122bab6" translate="yes" xml:space="preserve">
          <source>add_compile_definitions()</source>
          <target state="translated">add_compile_definitions()</target>
        </trans-unit>
        <trans-unit id="e526028417358ecedee8684cab23226755d20527" translate="yes" xml:space="preserve">
          <source>add_compile_options</source>
          <target state="translated">add_compile_options</target>
        </trans-unit>
        <trans-unit id="c67e522fc6963fe850998d446ac931ea3f0f5d37" translate="yes" xml:space="preserve">
          <source>add_compile_options()</source>
          <target state="translated">add_compile_options()</target>
        </trans-unit>
        <trans-unit id="39199f5f3a9ab60f3d01f48d8a6ba535124c29e2" translate="yes" xml:space="preserve">
          <source>add_custom_command</source>
          <target state="translated">add_custom_command</target>
        </trans-unit>
        <trans-unit id="49639d2cae441b5bc5740e898ec6ce93915eaa9e" translate="yes" xml:space="preserve">
          <source>add_custom_command()</source>
          <target state="translated">add_custom_command()</target>
        </trans-unit>
        <trans-unit id="0d796f30984bc499dde8a886268e20865d00a82d" translate="yes" xml:space="preserve">
          <source>add_custom_target</source>
          <target state="translated">add_custom_target</target>
        </trans-unit>
        <trans-unit id="6e40f9fc29641416ccc92dc534d9e5e2008038ca" translate="yes" xml:space="preserve">
          <source>add_custom_target()</source>
          <target state="translated">add_custom_target()</target>
        </trans-unit>
        <trans-unit id="acaca10b3af099b572965eee14e56699091ce646" translate="yes" xml:space="preserve">
          <source>add_definitions</source>
          <target state="translated">add_definitions</target>
        </trans-unit>
        <trans-unit id="a986e92e180384d55b8171f21b1009f1c3bb6d40" translate="yes" xml:space="preserve">
          <source>add_definitions()</source>
          <target state="translated">add_definitions()</target>
        </trans-unit>
        <trans-unit id="68571758925d73076c165034e6d63b73e1c18a0f" translate="yes" xml:space="preserve">
          <source>add_dependencies</source>
          <target state="translated">add_dependencies</target>
        </trans-unit>
        <trans-unit id="3296f5516068c4a9f88173114de082902f7e5a05" translate="yes" xml:space="preserve">
          <source>add_dependencies()</source>
          <target state="translated">add_dependencies()</target>
        </trans-unit>
        <trans-unit id="7589cceab45b96e7a1605c11f91f4a8e6b3f9c4b" translate="yes" xml:space="preserve">
          <source>add_executable</source>
          <target state="translated">add_executable</target>
        </trans-unit>
        <trans-unit id="e5368a85e38d69928a279808d596952e58e2ad8e" translate="yes" xml:space="preserve">
          <source>add_executable()</source>
          <target state="translated">add_executable()</target>
        </trans-unit>
        <trans-unit id="b5aaf26c3418e8ae7a28505a779bbbe93ca4e04d" translate="yes" xml:space="preserve">
          <source>add_library</source>
          <target state="translated">add_library</target>
        </trans-unit>
        <trans-unit id="71d86799367064b55c54776185a9fa95324d5115" translate="yes" xml:space="preserve">
          <source>add_library()</source>
          <target state="translated">add_library()</target>
        </trans-unit>
        <trans-unit id="7c62dbfb90c14a6905ec3929df7bd0eb74e65846" translate="yes" xml:space="preserve">
          <source>add_link_options</source>
          <target state="translated">add_link_options</target>
        </trans-unit>
        <trans-unit id="dc29a515d0d51b44fed9392808da3a3a324c31b2" translate="yes" xml:space="preserve">
          <source>add_link_options()</source>
          <target state="translated">add_link_options()</target>
        </trans-unit>
        <trans-unit id="698493212da1d2ea81d80d21e24c9356d31ae444" translate="yes" xml:space="preserve">
          <source>add_subdirectory</source>
          <target state="translated">add_subdirectory</target>
        </trans-unit>
        <trans-unit id="d1a4bc25ff870f9dfa35d133938b4a185109ea09" translate="yes" xml:space="preserve">
          <source>add_subdirectory()</source>
          <target state="translated">add_subdirectory()</target>
        </trans-unit>
        <trans-unit id="fdf38772a46072339beef8e533961e34fc50ce63" translate="yes" xml:space="preserve">
          <source>add_test</source>
          <target state="translated">add_test</target>
        </trans-unit>
        <trans-unit id="c651160988d08023a6f520a50fc7ff46c5a69b6a" translate="yes" xml:space="preserve">
          <source>add_test()</source>
          <target state="translated">add_test()</target>
        </trans-unit>
        <trans-unit id="c518a7b1798ece4eb32775c6eb8cda87079236b5" translate="yes" xml:space="preserve">
          <source>additional file dependencies detected by filters defined in &lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 정의 된 필터에 의해 탐지 추가 파일 종속성 &lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a31c43bbb4d0ef967a0b1e8832a86df2b84b389e" translate="yes" xml:space="preserve">
          <source>additional file dependencies detected by filters defined in &lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-1-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 정의 된 필터에 의해 탐지 추가 파일 종속성 &lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-1-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt; &lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc3d34f03a3d9fb149f10f41bd3c04c4080ee2b6" translate="yes" xml:space="preserve">
          <source>additional file dependencies from the &lt;code&gt;FILE&lt;/code&gt; argument of a &lt;code&gt;Q_PLUGIN_METADATA&lt;/code&gt; macro and</source>
          <target state="translated">&lt;code&gt;Q_PLUGIN_METADATA&lt;/code&gt; 매크로 의 &lt;code&gt;FILE&lt;/code&gt; 인수 에서 추가 파일 종속성</target>
        </trans-unit>
        <trans-unit id="08b76f6e81365aec9be17d07cb10bb060383a3d1" translate="yes" xml:space="preserve">
          <source>additional user defined dependencies from &lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; 의&lt;/a&gt; 추가 사용자 정의 종속성</target>
        </trans-unit>
        <trans-unit id="530b50cea444a13c47368290dc0327106b1a9b67" translate="yes" xml:space="preserve">
          <source>additional user defined dependencies from &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; 의&lt;/a&gt; 추가 사용자 정의 종속성</target>
        </trans-unit>
        <trans-unit id="1ffd530768aa2f0e8de0b38f86847a1afa99fef4" translate="yes" xml:space="preserve">
          <source>additional versions of Matlab for the automatic retrieval of the installed versions.</source>
          <target state="translated">설치된 버전의 자동 검색을위한 추가 버전의 Matlab.</target>
        </trans-unit>
        <trans-unit id="6cc28921af521328bd1acca2976e3a0c153f8929" translate="yes" xml:space="preserve">
          <source>adds a Matlab unit test file as a test to the project.</source>
          <target state="translated">Matlab 단위 테스트 파일을 프로젝트의 테스트로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a9bac7963ec468ad4832498742d61884014a6b7c" translate="yes" xml:space="preserve">
          <source>adds a target compiling a MEX file.</source>
          <target state="translated">MEX 파일을 컴파일하는 대상을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="44e8c9f962ca5ebee28a51f7322362bd55bbaed5" translate="yes" xml:space="preserve">
          <source>all compilers and versions listed above for C++.</source>
          <target state="translated">C ++에 대해 위에 나열된 모든 컴파일러 및 버전</target>
        </trans-unit>
        <trans-unit id="7ed1ff4f28bc9ec48dcd1a10591fc1ca58965ec6" translate="yes" xml:space="preserve">
          <source>all compilers and versions listed above with only meta-features for C++.</source>
          <target state="translated">위에 나열된 모든 컴파일러 및 버전은 C ++의 메타 기능 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ae15626f47aeb37756ba9af765b58c2d7d991c5" translate="yes" xml:space="preserve">
          <source>all other linker flags</source>
          <target state="translated">다른 모든 링커 플래그</target>
        </trans-unit>
        <trans-unit id="f1a68035d397eeae20e1c440564af0f91dfba726" translate="yes" xml:space="preserve">
          <source>all required cflags</source>
          <target state="translated">모든 필수 cflags</target>
        </trans-unit>
        <trans-unit id="92cd51fd70a40188437082ff58ea27a3ec973d3b" translate="yes" xml:space="preserve">
          <source>all required linker flags</source>
          <target state="translated">필요한 모든 링커 플래그</target>
        </trans-unit>
        <trans-unit id="2a3403d48c07444118f5e2931ffe57f990c879be" translate="yes" xml:space="preserve">
          <source>allowing the dependency to be followed.</source>
          <target state="translated">의존성을 따를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d91385b21747d29f9d3886644cd87ba92a8865b5" translate="yes" xml:space="preserve">
          <source>also defined, but not for general use are</source>
          <target state="translated">또한 정의되었지만 일반적인 용도는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ce69371c815e17d1dc6ce90b983ecdedd1640c28" translate="yes" xml:space="preserve">
          <source>also prints:</source>
          <target state="translated">또한 다음을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="05b3f40d42db02fe81bfb2693ad39ad0a07c1579" translate="yes" xml:space="preserve">
          <source>an executable target created by &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 실행 가능한 타겟</target>
        </trans-unit>
        <trans-unit id="8e1c2725633a3d391b8da6430ea8e81e4d9c0204" translate="yes" xml:space="preserve">
          <source>and adds these to the scan list.</source>
          <target state="translated">스캔리스트에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c9193c1368551663afd9de0f27d11409b88a4158" translate="yes" xml:space="preserve">
          <source>and afterwards in the target&amp;rsquo;s &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그리고 나서 대상의 &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 에서&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7360be2bf957109b50ecf494d59c9a7fb7929f6" translate="yes" xml:space="preserve">
          <source>and also the following more fine grained variables and targets:</source>
          <target state="translated">또한 다음과 같은보다 세분화 된 변수 및 대상 :</target>
        </trans-unit>
        <trans-unit id="7fa367462f9d977997a66bd4fc772d77c027b109" translate="yes" xml:space="preserve">
          <source>and is evaluated according to the &lt;code&gt;if(&amp;lt;variable&amp;gt;)&lt;/code&gt; case documented above. The result is &lt;code&gt;OFF&lt;/code&gt; which is false. However, if we remove the &lt;code&gt;${}&lt;/code&gt; from the example then the command sees</source>
          <target state="translated">위에서 설명한 &lt;code&gt;if(&amp;lt;variable&amp;gt;)&lt;/code&gt; 사례 에 따라 평가됩니다 . 결과는 &lt;code&gt;OFF&lt;/code&gt; 이며 거짓입니다. 그러나 예제에서 &lt;code&gt;${}&lt;/code&gt; 를 제거 하면 명령에</target>
        </trans-unit>
        <trans-unit id="2f3522d8409fab2c8bd7a9a935e5958b1545b923" translate="yes" xml:space="preserve">
          <source>and not</source>
          <target state="translated">그리고 아닙니다</target>
        </trans-unit>
        <trans-unit id="fbb75902f3df459c29357ba58a727b125ccd2b88" translate="yes" xml:space="preserve">
          <source>and saves search results persistently in CMake cache entries:</source>
          <target state="translated">CMake 캐시 항목에 검색 결과를 지속적으로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="4f042514a0306d806c7d2aa1069fb0ede936bdcb" translate="yes" xml:space="preserve">
          <source>and so on. However, it is strongly recommended to stay with the case chosen in the function definition. Typically functions use all-lowercase names.</source>
          <target state="translated">등등. 그러나 함수 정의에서 선택한 대소 문자를 유지하는 것이 좋습니다. 일반적으로 함수는 모두 소문자 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1ff58e8fc5ce0902272c2fd5111c69bfb6766b18" translate="yes" xml:space="preserve">
          <source>and so on. However, it is strongly recommended to stay with the case chosen in the macro definition. Typically macros use all-lowercase names.</source>
          <target state="translated">등등. 그러나 매크로 정의에서 선택한 사례를 유지하는 것이 좋습니다. 일반적으로 매크로는 모두 소문자 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d12799a13c4f9d072ae06b3c11d77d141df6ce35" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;target_link_libraries&lt;/code&gt; line from:</source>
          <target state="translated">다음의 &lt;code&gt;target_link_libraries&lt;/code&gt; 행 :</target>
        </trans-unit>
        <trans-unit id="8c9d3794fef35df6e9d6ecc4b4799298cbf7b2a4" translate="yes" xml:space="preserve">
          <source>and the corresponding package configuration file is loaded. When multiple package configuration files are available whose version files claim compatibility with the version requested it is unspecified which one is chosen: unless the variable &lt;a href=&quot;../variable/cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt;&lt;/a&gt; is set no attempt is made to choose a highest or closest version number.</source>
          <target state="translated">해당 패키지 구성 파일이로드됩니다. &lt;a href=&quot;../variable/cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt; &lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt; &lt;/a&gt; 변수 가 설정되어 있지 않은 한, 버전 파일이 요청 된 버전과의 호환성을 주장하는 여러 패키지 구성 파일을 사용할 수있는 경우 어떤 파일을 선택 했는지 지정되지 않습니다. 가장 높거나 가장 가까운 버전 번호를 선택하려고 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bf92dbe3b35cfe6fb50b587aa0d1f0cb9eb14fe9" translate="yes" xml:space="preserve">
          <source>and then it is used as an argument to &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; like any other target.</source>
          <target state="translated">그런 다음 다른 대상과 마찬가지로 &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 대한 인수로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8addf946d7b3a77247de80e0b9ee6e8bbf8ce04" translate="yes" xml:space="preserve">
          <source>and then it is used as an argument to &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; like any other target.</source>
          <target state="translated">그런 다음 다른 대상과 마찬가지로 &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 대한 인수로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b089dd2372d8afec13a095574408e30e1b34a883" translate="yes" xml:space="preserve">
          <source>and you do:</source>
          <target state="translated">그리고 당신은 :</target>
        </trans-unit>
        <trans-unit id="155e8d537e0ac2da33e6951538dd7e71f601eb81" translate="yes" xml:space="preserve">
          <source>and you run the following:</source>
          <target state="translated">그리고 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="20279e4d619af4def87a78e7b820dbcc6a05b84e" translate="yes" xml:space="preserve">
          <source>another example is the Java OEM, with: &lt;code&gt;Java_VERSION_STRING = 1.8.0-oem&lt;/code&gt; and &lt;code&gt;Java_VERSION = 1.8.0&lt;/code&gt;</source>
          <target state="translated">또 다른 예는 Java OEM이며, &lt;code&gt;Java_VERSION_STRING = 1.8.0-oem&lt;/code&gt; 및 &lt;code&gt;Java_VERSION = 1.8.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d9a056406face8727f9575e31b25ca4700efb01" translate="yes" xml:space="preserve">
          <source>appears to the if command as</source>
          <target state="translated">if 명령에 다음과 같이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="fdbe48e43c03b67ab41ce0506c0debe6e5f327a3" translate="yes" xml:space="preserve">
          <source>appletvos</source>
          <target state="translated">appletvos</target>
        </trans-unit>
        <trans-unit id="19acfe99039c1d6995c874793726a5c731f43311" translate="yes" xml:space="preserve">
          <source>appletvsimulator</source>
          <target state="translated">appletvsimulator</target>
        </trans-unit>
        <trans-unit id="50cbf829b3847caa8a2c634665f40e8463c2d3bf" translate="yes" xml:space="preserve">
          <source>are each pairs of package configuration files and corresponding package version files.</source>
          <target state="translated">각 패키지 구성 파일 쌍과 해당 패키지 버전 파일입니다.</target>
        </trans-unit>
        <trans-unit id="a70cecab9cd4818e63ae7cf4036e7b9491841ec6" translate="yes" xml:space="preserve">
          <source>as a &lt;code&gt;REG_SZ&lt;/code&gt; value, with arbitrary name, that specifies the directory containing the package configuration file.</source>
          <target state="translated">A와 &lt;code&gt;REG_SZ&lt;/code&gt; 의 패키지 구성 파일을 포함하는 디렉토리를 지정하는 임의의 이름 값.</target>
        </trans-unit>
        <trans-unit id="d36c0426a23bd6fbfe8e8abefdcbe95266f1704a" translate="yes" xml:space="preserve">
          <source>as a file, with arbitrary name, whose content specifies the directory containing the package configuration file.</source>
          <target state="translated">패키지 구성 파일이 포함 된 디렉토리를 컨텐츠로 지정하는 임의의 이름을 가진 파일로.</target>
        </trans-unit>
        <trans-unit id="d104714e2aaf5cd05b04008eae2573906bfce01a" translate="yes" xml:space="preserve">
          <source>as the first non space string after a &lt;code&gt;{&lt;/code&gt; on a new line,</source>
          <target state="translated">새 줄에서 &lt;code&gt;{&lt;/code&gt; 다음의 첫 번째 공백이 아닌 문자열로</target>
        </trans-unit>
        <trans-unit id="3731e5a8c0e58e457edbbe2472ea081a6a231e1a" translate="yes" xml:space="preserve">
          <source>as the first non space string on a new line or</source>
          <target state="translated">줄 바꿈에서 첫 번째 공백이 아닌 문자열 또는</target>
        </trans-unit>
        <trans-unit id="542381ec09bc59f66adcc80c77838511ced1d306" translate="yes" xml:space="preserve">
          <source>aux_source_directory</source>
          <target state="translated">aux_source_directory</target>
        </trans-unit>
        <trans-unit id="e14e9affb3f305c4346542771f33b48e984009e5" translate="yes" xml:space="preserve">
          <source>aux_source_directory()</source>
          <target state="translated">aux_source_directory()</target>
        </trans-unit>
        <trans-unit id="b9e2c5c9b81ab1605f269dab3ed81a8dd42016cb" translate="yes" xml:space="preserve">
          <source>bare</source>
          <target state="translated">bare</target>
        </trans-unit>
        <trans-unit id="9d09817daa855023683e74ec495c1bd49eb50eeb" translate="yes" xml:space="preserve">
          <source>before calling &lt;code&gt;find_package&lt;/code&gt;.</source>
          <target state="translated">호출하기 전에 &lt;code&gt;find_package&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="484d524b4278fba4b84ad35364f2fcc8eca0a075" translate="yes" xml:space="preserve">
          <source>before including FortranCInterface to specify manglings of the symbols &lt;code&gt;MySub&lt;/code&gt;, &lt;code&gt;My_Sub&lt;/code&gt;, &lt;code&gt;MyModule:MySub&lt;/code&gt;, and &lt;code&gt;My_Module:My_Sub&lt;/code&gt;. For example, the code:</source>
          <target state="translated">&lt;code&gt;MySub&lt;/code&gt; , &lt;code&gt;My_Sub&lt;/code&gt; , &lt;code&gt;MyModule:MySub&lt;/code&gt; 및 &lt;code&gt;My_Module:My_Sub&lt;/code&gt; 기호의 조작을 지정하기 위해 FortranCInterface를 포함시키기 전에 . 예를 들어 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6cb725bebd53c61ad5dba48a265367d152dd620b" translate="yes" xml:space="preserve">
          <source>begin with &lt;code&gt;CMAKE_&lt;/code&gt; (upper-, lower-, or mixed-case), or</source>
          <target state="translated">시작 &lt;code&gt;CMAKE_&lt;/code&gt; (저급, 대문자 또는 혼합의 경우), 또는</target>
        </trans-unit>
        <trans-unit id="aa1fb3e3163746327d2b1145396da2e855616b30" translate="yes" xml:space="preserve">
          <source>begin with &lt;code&gt;_&lt;/code&gt; followed by the name of any &lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-0-manual:cmake-commands(7)&quot;&gt;&lt;code&gt;CMake Command&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;_&lt;/code&gt; 로 시작하고 그 뒤에 &lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-0-manual:cmake-commands(7)&quot;&gt; &lt;code&gt;CMake Command&lt;/code&gt; &lt;/a&gt; 의 이름 이옵니다 .</target>
        </trans-unit>
        <trans-unit id="d157e0107590d3c07e0ae8c6bc71e537844479bd" translate="yes" xml:space="preserve">
          <source>begin with &lt;code&gt;_CMAKE_&lt;/code&gt; (upper-, lower-, or mixed-case), or</source>
          <target state="translated">시작 &lt;code&gt;_CMAKE_&lt;/code&gt; (저급, 대문자 또는 혼합의 경우), 또는</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="0ca944ad9e57dbb30f37b9c4be42d0106780af3e" translate="yes" xml:space="preserve">
          <source>break()</source>
          <target state="translated">break()</target>
        </trans-unit>
        <trans-unit id="f880f76b3de299a3f5da441376afba5af6426e4a" translate="yes" xml:space="preserve">
          <source>build_command</source>
          <target state="translated">build_command</target>
        </trans-unit>
        <trans-unit id="ad0c696a472de73e71b1f431ad8762520e5dae0b" translate="yes" xml:space="preserve">
          <source>build_command()</source>
          <target state="translated">build_command()</target>
        </trans-unit>
        <trans-unit id="6dd3929aad3cc1a1285ed8b35edd9a8da4300064" translate="yes" xml:space="preserve">
          <source>build_name</source>
          <target state="translated">build_name</target>
        </trans-unit>
        <trans-unit id="a1fcaa56e5849b0abfaa0bb8843f86f59ca1b821" translate="yes" xml:space="preserve">
          <source>build_name()</source>
          <target state="translated">build_name()</target>
        </trans-unit>
        <trans-unit id="4a27a673fc9425b01656f6740dcf4d6d694e7654" translate="yes" xml:space="preserve">
          <source>can be embedded in &lt;code&gt;top-build-dir/build.ninja&lt;/code&gt; with a directive like this:</source>
          <target state="translated">&lt;code&gt;top-build-dir/build.ninja&lt;/code&gt; 과 같은 지시문을 사용하여 top-build-dir / build.ninja에 포함시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b83f11af63893b668cbc472638ee95ecebe0507" translate="yes" xml:space="preserve">
          <source>can be invoked through any of</source>
          <target state="translated">중 하나를 통해 호출 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a2a7a6188b61386e402f148c1c5944e10ffa83ef" translate="yes" xml:space="preserve">
          <source>ccmake(1)</source>
          <target state="translated">ccmake(1)</target>
        </trans-unit>
        <trans-unit id="2496d5e68bb433206dc46044228ec7a71fe7d5d6" translate="yes" xml:space="preserve">
          <source>check if the compiler supports std:: on stl classes</source>
          <target state="translated">컴파일러가 std :: stl 클래스를 지원하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="82d5e3be9ea975d06c9defb46209141bc192d0a5" translate="yes" xml:space="preserve">
          <source>check if the compiler supports the standard ANSI iostream header (without the .h)</source>
          <target state="translated">컴파일러가 표준 ANSI iostream 헤더를 지원하는지 확인하십시오 (.h 제외).</target>
        </trans-unit>
        <trans-unit id="221974ab90aad4d170e2d7bacba91a9492cb117f" translate="yes" xml:space="preserve">
          <source>check if the compiler supports the standard ANSI sstream header</source>
          <target state="translated">컴파일러가 표준 ANSI sstream 헤더를 지원하는지 확인</target>
        </trans-unit>
        <trans-unit id="b80d692cec589b11695f8d2db65caeb1643c3798" translate="yes" xml:space="preserve">
          <source>cmake(1)</source>
          <target state="translated">cmake(1)</target>
        </trans-unit>
        <trans-unit id="4e1b4d7b28befad7351e315fdad0927e3cf66053" translate="yes" xml:space="preserve">
          <source>cmake-buildsystem(7)</source>
          <target state="translated">cmake-buildsystem(7)</target>
        </trans-unit>
        <trans-unit id="4856dba83044ed3f89dc37165c470db84e0e0086" translate="yes" xml:space="preserve">
          <source>cmake-commands(7)</source>
          <target state="translated">cmake-commands(7)</target>
        </trans-unit>
        <trans-unit id="c931c76420ea36ab1d36fa0f8bf3d07d55ea2df3" translate="yes" xml:space="preserve">
          <source>cmake-compile-features(7)</source>
          <target state="translated">cmake-compile-features(7)</target>
        </trans-unit>
        <trans-unit id="4630a7609e6efb50dd573faf020165ba0bcf4005" translate="yes" xml:space="preserve">
          <source>cmake-developer(7)</source>
          <target state="translated">cmake-developer(7)</target>
        </trans-unit>
        <trans-unit id="cf8999d4d9c266082a08c98ae6507ee1cc1bc93c" translate="yes" xml:space="preserve">
          <source>cmake-env-variables(7)</source>
          <target state="translated">cmake-env-variables(7)</target>
        </trans-unit>
        <trans-unit id="08325074e99ca860fbcfb306d33c15e9132bac43" translate="yes" xml:space="preserve">
          <source>cmake-file-api(7)</source>
          <target state="translated">cmake-file-api(7)</target>
        </trans-unit>
        <trans-unit id="efe2f37e69f8d77aa4de09d507447b9f7e3b87e8" translate="yes" xml:space="preserve">
          <source>cmake-generator-expressions(7)</source>
          <target state="translated">cmake-generator-expressions(7)</target>
        </trans-unit>
        <trans-unit id="3dcb4b3adb10a182a5486ef124ce2c116c5b9b34" translate="yes" xml:space="preserve">
          <source>cmake-generators(7)</source>
          <target state="translated">cmake-generators(7)</target>
        </trans-unit>
        <trans-unit id="3d49d1a8abaf9b9f8fdaf088b99d899c9678995d" translate="yes" xml:space="preserve">
          <source>cmake-gui tool</source>
          <target state="translated">cmake-gui 도구</target>
        </trans-unit>
        <trans-unit id="c3087f83e2ed2c9c5a7b5770c0e6c7072e32c54a" translate="yes" xml:space="preserve">
          <source>cmake-gui(1)</source>
          <target state="translated">cmake-gui(1)</target>
        </trans-unit>
        <trans-unit id="977bfffa8761d1bee86d5202d01b7c215fb0c04d" translate="yes" xml:space="preserve">
          <source>cmake-language(7)</source>
          <target state="translated">cmake-language(7)</target>
        </trans-unit>
        <trans-unit id="fece6134eb8869d4dec001d05764e3c7dd77f435" translate="yes" xml:space="preserve">
          <source>cmake-modules(7)</source>
          <target state="translated">cmake-modules(7)</target>
        </trans-unit>
        <trans-unit id="485f3de800da6490cd0b261dfd374107fd381979" translate="yes" xml:space="preserve">
          <source>cmake-packages(7)</source>
          <target state="translated">cmake-packages(7)</target>
        </trans-unit>
        <trans-unit id="a1f28a950ac3cfdd4431997323565f76792eab31" translate="yes" xml:space="preserve">
          <source>cmake-policies(7)</source>
          <target state="translated">cmake-policies(7)</target>
        </trans-unit>
        <trans-unit id="b84015ccbce02876d1f9f6cfbc1ce6c207182815" translate="yes" xml:space="preserve">
          <source>cmake-presets(7)</source>
          <target state="translated">cmake-presets(7)</target>
        </trans-unit>
        <trans-unit id="d9144c7fc3a7749a858093bd16aa5684cbdefc37" translate="yes" xml:space="preserve">
          <source>cmake-properties(7)</source>
          <target state="translated">cmake-properties(7)</target>
        </trans-unit>
        <trans-unit id="3ef79600dca574725577caf6ffd784cc389cdf7f" translate="yes" xml:space="preserve">
          <source>cmake-qt(7)</source>
          <target state="translated">cmake-qt(7)</target>
        </trans-unit>
        <trans-unit id="22c2f923cf707906b9986635239d3b04bc30bef6" translate="yes" xml:space="preserve">
          <source>cmake-server(7)</source>
          <target state="translated">cmake-server(7)</target>
        </trans-unit>
        <trans-unit id="eec0fd32832136f7fd5fb781352080b27df1266b" translate="yes" xml:space="preserve">
          <source>cmake-toolchains(7)</source>
          <target state="translated">cmake-toolchains(7)</target>
        </trans-unit>
        <trans-unit id="29030cb47a22e2d4d018770a8b16cde4e590d3dc" translate="yes" xml:space="preserve">
          <source>cmake-variables(7)</source>
          <target state="translated">cmake-variables(7)</target>
        </trans-unit>
        <trans-unit id="b0c48b8c6e019affd7b50e79f51ec57bf89f3bc2" translate="yes" xml:space="preserve">
          <source>cmake_host_system_information</source>
          <target state="translated">cmake_host_system_information</target>
        </trans-unit>
        <trans-unit id="45f75636bb8c28c311b61a36b051f04bc4f34e87" translate="yes" xml:space="preserve">
          <source>cmake_host_system_information()</source>
          <target state="translated">cmake_host_system_information()</target>
        </trans-unit>
        <trans-unit id="ed775ff05846b6e865ee0cdeb794a86b0bd60124" translate="yes" xml:space="preserve">
          <source>cmake_language</source>
          <target state="translated">cmake_language</target>
        </trans-unit>
        <trans-unit id="b3f4bbcd0f0dba572bd2dd6bb3c96ad171ab74b0" translate="yes" xml:space="preserve">
          <source>cmake_language()</source>
          <target state="translated">cmake_language()</target>
        </trans-unit>
        <trans-unit id="36c34cddce320baf5a373fb1d20884e2c81f7439" translate="yes" xml:space="preserve">
          <source>cmake_minimum_required</source>
          <target state="translated">cmake_minimum_required</target>
        </trans-unit>
        <trans-unit id="3bf1ea1dbcc7dd585e3c27e1932596620d151e15" translate="yes" xml:space="preserve">
          <source>cmake_minimum_required()</source>
          <target state="translated">cmake_minimum_required()</target>
        </trans-unit>
        <trans-unit id="21c4f82bca3e1e3734d82cac1b7dacb2efed03c5" translate="yes" xml:space="preserve">
          <source>cmake_parse_arguments</source>
          <target state="translated">cmake_parse_arguments</target>
        </trans-unit>
        <trans-unit id="9c855509760fcd81006ca253bc05ed2e7e29152c" translate="yes" xml:space="preserve">
          <source>cmake_parse_arguments()</source>
          <target state="translated">cmake_parse_arguments()</target>
        </trans-unit>
        <trans-unit id="568193347f917912a9134b072c27dca9a7fad04d" translate="yes" xml:space="preserve">
          <source>cmake_policy</source>
          <target state="translated">cmake_policy</target>
        </trans-unit>
        <trans-unit id="651854451e7c0e8823339fe616d3da605626c265" translate="yes" xml:space="preserve">
          <source>cmake_policy()</source>
          <target state="translated">cmake_policy()</target>
        </trans-unit>
        <trans-unit id="67df7070de08e064684795bc234474f2be22b856" translate="yes" xml:space="preserve">
          <source>compiler definitions required for compiling KDE software</source>
          <target state="translated">KDE 소프트웨어 컴파일에 필요한 컴파일러 정의</target>
        </trans-unit>
        <trans-unit id="59db87c4ac23db62f31dd74e8fd72646655d294e" translate="yes" xml:space="preserve">
          <source>compiles &lt;code&gt;b.c&lt;/code&gt; with &lt;code&gt;-DA -DOBJ&lt;/code&gt;, creates shared library &lt;code&gt;B&lt;/code&gt; with object files from &lt;code&gt;b.c&lt;/code&gt; and &lt;code&gt;obj.c&lt;/code&gt;, and links &lt;code&gt;B&lt;/code&gt; to &lt;code&gt;A&lt;/code&gt;. Furthermore, the code</source>
          <target state="translated">&lt;code&gt;-DA -DOBJ&lt;/code&gt; &lt;code&gt;b.c&lt;/code&gt; 를 컴파일 하고 &lt;code&gt;b.c&lt;/code&gt; 및 &lt;code&gt;obj.c&lt;/code&gt; 의 오브젝트 파일을 가진 공유 라이브러리 &lt;code&gt;B&lt;/code&gt; 를 작성 하고 &lt;code&gt;B&lt;/code&gt; 를 &lt;code&gt;A&lt;/code&gt; 에 링크 합니다. 또한 코드</target>
        </trans-unit>
        <trans-unit id="137f5f6457e6af89f06d4a6f30c913a9ddf90e75" translate="yes" xml:space="preserve">
          <source>compiles &lt;code&gt;main.c&lt;/code&gt; with &lt;code&gt;-DA -DOBJ&lt;/code&gt; and links executable &lt;code&gt;main&lt;/code&gt; to &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt;. The object library&amp;rsquo;s usage requirements are propagated transitively through &lt;code&gt;B&lt;/code&gt;, but its object files are not.</source>
          <target state="translated">&lt;code&gt;main.c&lt;/code&gt; 를 &lt;code&gt;-DA -DOBJ&lt;/code&gt; 컴파일 하고 실행 가능한 &lt;code&gt;main&lt;/code&gt; 을 &lt;code&gt;B&lt;/code&gt; 와 &lt;code&gt;A&lt;/code&gt; 에 연결 합니다. 객체 라이브러리의 사용 요구 사항은 &lt;code&gt;B&lt;/code&gt; 를 통해 전 이적으로 전파 되지만 객체 파일은 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="48f50e7af82b8c14538786dc10f2d7af8fe60a7c" translate="yes" xml:space="preserve">
          <source>compiles &lt;code&gt;obj.c&lt;/code&gt; with &lt;code&gt;-DA -DOBJ&lt;/code&gt; and establishes usage requirements for &lt;code&gt;obj&lt;/code&gt; that propagate to its dependents.</source>
          <target state="translated">&lt;code&gt;obj.c&lt;/code&gt; 로 &lt;code&gt;-DA -DOBJ&lt;/code&gt; 컴파일 하고 종속 항목으로 전파되는 &lt;code&gt;obj&lt;/code&gt; 의 사용 요구 사항을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="83b61b404c64cda7a7132cff0ffdb58fe1137121" translate="yes" xml:space="preserve">
          <source>compiles &lt;code&gt;obj2.c&lt;/code&gt; with &lt;code&gt;-DA -DOBJ&lt;/code&gt;, creates executable &lt;code&gt;main2&lt;/code&gt; with object files from &lt;code&gt;main2.c&lt;/code&gt; and &lt;code&gt;obj2.c&lt;/code&gt;, and links &lt;code&gt;main2&lt;/code&gt; to &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;obj2.c&lt;/code&gt; 를 &lt;code&gt;-DA -DOBJ&lt;/code&gt; DOBJ 로 컴파일 하고 &lt;code&gt;main2.c&lt;/code&gt; 및 &lt;code&gt;obj2.c&lt;/code&gt; 의 오브젝트 파일로 실행 가능한 &lt;code&gt;main2&lt;/code&gt; 를 작성 하고 &lt;code&gt;main2&lt;/code&gt; 를 &lt;code&gt;A&lt;/code&gt; 에 링크 합니다.</target>
        </trans-unit>
        <trans-unit id="3f44e11c6813f10841693931b037fe21feeff4e4" translate="yes" xml:space="preserve">
          <source>configure_file</source>
          <target state="translated">configure_file</target>
        </trans-unit>
        <trans-unit id="dac82313381e3610c7faffc20f77fdb36b39c78e" translate="yes" xml:space="preserve">
          <source>configure_file()</source>
          <target state="translated">configure_file()</target>
        </trans-unit>
        <trans-unit id="c600fad2ca3cbaa7347599cb0cece3ef6868ad3b" translate="yes" xml:space="preserve">
          <source>contains a list of build system target objects.</source>
          <target state="translated">빌드 시스템 대상 오브젝트 목록을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0301bbc74134aed1dd4dd5dfde22f02414ebedaa" translate="yes" xml:space="preserve">
          <source>contains a list of project objects, one for each build project.</source>
          <target state="translated">각 빌드 프로젝트마다 하나씩 프로젝트 개체 목록이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aca421f6600c1f7fadeb6eb8e8744ddc6d41489" translate="yes" xml:space="preserve">
          <source>contains a list of test objects.</source>
          <target state="translated">테스트 개체의 목록을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="95c5785d6fc979ea1e45bdbe661f9a3718672e1b" translate="yes" xml:space="preserve">
          <source>contains a list of test property objects.</source>
          <target state="translated">테스트 속성 개체 목록을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="314a2aa1a027d628013e0f6f5411d0e696f1ff6e" translate="yes" xml:space="preserve">
          <source>contains the (sub-)projects name.</source>
          <target state="translated">(하위) 프로젝트 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6f9bdbe98fa02f7e721b60c81c826dc59e6f8c0c" translate="yes" xml:space="preserve">
          <source>contains the current build directory.</source>
          <target state="translated">현재 빌드 디렉토리를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="79c4203d034853593cedf35d0ed15c3bf4609bcd" translate="yes" xml:space="preserve">
          <source>contains the current source directory</source>
          <target state="translated">현재 소스 디렉토리를 포함</target>
        </trans-unit>
        <trans-unit id="b695a5dd181313ca7a1c929eba1688cc6167d65a" translate="yes" xml:space="preserve">
          <source>contains the current source directory.</source>
          <target state="translated">현재 소스 디렉토리를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="36c10e15f0ed516099732c1ceeb420c2427a5c88" translate="yes" xml:space="preserve">
          <source>contains the full name of the build result (incl. extensions, etc.).</source>
          <target state="translated">빌드 결과의 전체 이름 (확장자 포함)을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a80efd8317742ced23ab2c9f83b4e3dbd8c0ce3f" translate="yes" xml:space="preserve">
          <source>contains the language of the linker used to produce the artifact.</source>
          <target state="translated">이슈를 생성하는 데 사용되는 링커의 언어가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9b6b134008e98dd0ea0fceada16b058d4321edf5" translate="yes" xml:space="preserve">
          <source>contains the minimum cmake version allowed for this project, null if the project doesn&amp;rsquo;t specify one.</source>
          <target state="translated">이 프로젝트에 허용 된 최소 cmake 버전을 포함합니다. 프로젝트에서 버전을 지정하지 않으면 null입니다.</target>
        </trans-unit>
        <trans-unit id="ec664152067e49c8c86cf17648bede01d2420ca8" translate="yes" xml:space="preserve">
          <source>contains the name of the configuration. The name may be empty.</source>
          <target state="translated">구성 이름을 포함합니다. 이름이 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87d6e855e8e8454dfded76b8461f094ee01e6a32" translate="yes" xml:space="preserve">
          <source>contains the name of the target.</source>
          <target state="translated">대상의 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="1c739ee21b2f3e0e9dbb3816d88160ddcd2bf340" translate="yes" xml:space="preserve">
          <source>contains the name of the test.</source>
          <target state="translated">테스트 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="d727c886f5b17160a479318d50cddbe661e1e1d1" translate="yes" xml:space="preserve">
          <source>contains the programming language used by all files in the group.</source>
          <target state="translated">그룹의 모든 파일이 사용하는 프로그래밍 언어를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="738480d85c67093157773d52ebc046a17a6bde68" translate="yes" xml:space="preserve">
          <source>contains the source files making up the target.</source>
          <target state="translated">대상을 구성하는 소스 파일을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f41ee8c485ee8f3608ab21647870dcf8a5abb125" translate="yes" xml:space="preserve">
          <source>contains the test command.</source>
          <target state="translated">테스트 명령이 들어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7ed7999bf6434560d1b9e46631838c457e73031" translate="yes" xml:space="preserve">
          <source>contains the test property key.</source>
          <target state="translated">테스트 속성 키를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="40e53458307ef04734184f00c89b12110bc6f1cf" translate="yes" xml:space="preserve">
          <source>contains the test property value.</source>
          <target state="translated">테스트 속성 값을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">continue</target>
        </trans-unit>
        <trans-unit id="126a595f6a2cd3243001f2d487ff13caf328f459" translate="yes" xml:space="preserve">
          <source>continue()</source>
          <target state="translated">continue()</target>
        </trans-unit>
        <trans-unit id="11c9f4b5197ef401f8eeaaa62d02d81ad2ce2bb9" translate="yes" xml:space="preserve">
          <source>cpack(1)</source>
          <target state="translated">cpack(1)</target>
        </trans-unit>
        <trans-unit id="25ad7615f1106edb89601845b84a2ff8d2e401e4" translate="yes" xml:space="preserve">
          <source>cpack-generators(7)</source>
          <target state="translated">cpack-generators(7)</target>
        </trans-unit>
        <trans-unit id="673dc19e9676d6e8992d0e7ba25eff10a36a2449" translate="yes" xml:space="preserve">
          <source>cpack-generators.7</source>
          <target state="translated">cpack-generators.7</target>
        </trans-unit>
        <trans-unit id="7ff1736a533760b64b6990df76fbc0cb19557f71" translate="yes" xml:space="preserve">
          <source>create_test_sourcelist</source>
          <target state="translated">create_test_sourcelist</target>
        </trans-unit>
        <trans-unit id="0f1f55966e93d13294696387b7e16763fc4340a4" translate="yes" xml:space="preserve">
          <source>create_test_sourcelist()</source>
          <target state="translated">create_test_sourcelist()</target>
        </trans-unit>
        <trans-unit id="fed90cacb4fe148b853325288e28766c67d4a591" translate="yes" xml:space="preserve">
          <source>created by a CMake &lt;code&gt;AUTOGEN&lt;/code&gt; operation such as &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 와 같은 CMake &lt;code&gt;AUTOGEN&lt;/code&gt; 작업에 의해 생성됨</target>
        </trans-unit>
        <trans-unit id="eea941156412d2de4f3eeed68f950bc1c9a780cb" translate="yes" xml:space="preserve">
          <source>created by the execution of commands such as &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GENERATE)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GENERATE)&lt;/code&gt; &lt;/a&gt; 등의 명령 실행으로 생성</target>
        </trans-unit>
        <trans-unit id="57b70b13789a7f826afd805d609b254008267a42" translate="yes" xml:space="preserve">
          <source>created. &lt;code&gt;EXECUTABLE&lt;/code&gt; may be given to create an executable instead of a library. If no type is given explicitly, the type is &lt;code&gt;SHARED&lt;/code&gt;.</source>
          <target state="translated">만들어진. 라이브러리 대신 실행 파일을 작성하기 위해 &lt;code&gt;EXECUTABLE&lt;/code&gt; 이 제공 될 수 있습니다. 유형이 명시 적으로 지정되지 않은 경우 유형은 &lt;code&gt;SHARED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1b5c2a6992e169b19652ca9ec091d311ca328fb3" translate="yes" xml:space="preserve">
          <source>creates the macro &lt;code&gt;KDE_DEPRECATED&lt;/code&gt; instead of &lt;code&gt;SOMELIB_DEPRECATED&lt;/code&gt;.</source>
          <target state="translated">매크로 생성 &lt;code&gt;KDE_DEPRECATED&lt;/code&gt; 대신 &lt;code&gt;SOMELIB_DEPRECATED&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="5c628bd50ca02ec080e6bb437d6ccaec85a4dbef" translate="yes" xml:space="preserve">
          <source>creates the macro &lt;code&gt;OTHER_NAME_EXPORT&lt;/code&gt; instead of &lt;code&gt;SOMELIB_EXPORT&lt;/code&gt;, but other macros and the generated file name is as default:</source>
          <target state="translated">&lt;code&gt;SOMELIB_EXPORT&lt;/code&gt; 대신 &lt;code&gt;OTHER_NAME_EXPORT&lt;/code&gt; 매크로를 작성 하지만 다른 매크로 및 생성 된 파일 이름은 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="082e6daeef8e123e8eeeda8cc0cd309cd1520654" translate="yes" xml:space="preserve">
          <source>ctest [-VV] -D Experimental</source>
          <target state="translated">ctest [-VV] -D 실험</target>
        </trans-unit>
        <trans-unit id="8d88fcb2426a943e1307a4b19d78d84c30e04dde" translate="yes" xml:space="preserve">
          <source>ctest(1)</source>
          <target state="translated">ctest(1)</target>
        </trans-unit>
        <trans-unit id="edfd6cf7c1c2db62f389dec494ba5f496a792cdb" translate="yes" xml:space="preserve">
          <source>ctest_build</source>
          <target state="translated">ctest_build</target>
        </trans-unit>
        <trans-unit id="ce344a96888661009113816655bc67a9524b7b82" translate="yes" xml:space="preserve">
          <source>ctest_build()</source>
          <target state="translated">ctest_build()</target>
        </trans-unit>
        <trans-unit id="ccb08fd8750437e31f235485e94922f785880595" translate="yes" xml:space="preserve">
          <source>ctest_configure</source>
          <target state="translated">ctest_configure</target>
        </trans-unit>
        <trans-unit id="83e29d9bf6f6d9d970c0737aaa9bad7292e8230c" translate="yes" xml:space="preserve">
          <source>ctest_configure()</source>
          <target state="translated">ctest_configure()</target>
        </trans-unit>
        <trans-unit id="8663e1086a1c07fac052c185a894646f4cae0435" translate="yes" xml:space="preserve">
          <source>ctest_coverage</source>
          <target state="translated">ctest_coverage</target>
        </trans-unit>
        <trans-unit id="ed20c9f07d859ad3b7b986c2fbb882fc32cc745e" translate="yes" xml:space="preserve">
          <source>ctest_coverage()</source>
          <target state="translated">ctest_coverage()</target>
        </trans-unit>
        <trans-unit id="7bdd6a51bf922f57b025ca0f7fdd5c035a7f9480" translate="yes" xml:space="preserve">
          <source>ctest_empty_binary_directory</source>
          <target state="translated">ctest_empty_binary_directory</target>
        </trans-unit>
        <trans-unit id="085f0cfea23a9c6e5ab09bcd8a3353af5c87105f" translate="yes" xml:space="preserve">
          <source>ctest_empty_binary_directory()</source>
          <target state="translated">ctest_empty_binary_directory()</target>
        </trans-unit>
        <trans-unit id="e232c83fdcb83f0e87a78621a82270d844499fdb" translate="yes" xml:space="preserve">
          <source>ctest_memcheck</source>
          <target state="translated">ctest_memcheck</target>
        </trans-unit>
        <trans-unit id="993777d8f79a8ed6333cd5cc656ed64988ee050c" translate="yes" xml:space="preserve">
          <source>ctest_memcheck()</source>
          <target state="translated">ctest_memcheck()</target>
        </trans-unit>
        <trans-unit id="8ff3960fc8be241c8a3b5b4f725094dfd592de2b" translate="yes" xml:space="preserve">
          <source>ctest_read_custom_files</source>
          <target state="translated">ctest_read_custom_files</target>
        </trans-unit>
        <trans-unit id="bcb6a1c5eb42e0c38d892350b5b6979bd4350895" translate="yes" xml:space="preserve">
          <source>ctest_read_custom_files()</source>
          <target state="translated">ctest_read_custom_files()</target>
        </trans-unit>
        <trans-unit id="2cfa83e82e59f887b57f8b6eeec989a084011aaf" translate="yes" xml:space="preserve">
          <source>ctest_run_script</source>
          <target state="translated">ctest_run_script</target>
        </trans-unit>
        <trans-unit id="c4ab4bce69b46f0264c85cfcd7e4825c95c819ad" translate="yes" xml:space="preserve">
          <source>ctest_run_script()</source>
          <target state="translated">ctest_run_script()</target>
        </trans-unit>
        <trans-unit id="5c890e760a004eead094d4c5ce5a2b4bd3e24043" translate="yes" xml:space="preserve">
          <source>ctest_sleep</source>
          <target state="translated">ctest_sleep</target>
        </trans-unit>
        <trans-unit id="cc3038832c67e898cc6763173f0320b952d10611" translate="yes" xml:space="preserve">
          <source>ctest_sleep()</source>
          <target state="translated">ctest_sleep()</target>
        </trans-unit>
        <trans-unit id="00e6cd1094f4884f9e4e633e7d14b37738c8d684" translate="yes" xml:space="preserve">
          <source>ctest_start</source>
          <target state="translated">ctest_start</target>
        </trans-unit>
        <trans-unit id="74888ebc08c06baa974828c9efb3bd046bf4b951" translate="yes" xml:space="preserve">
          <source>ctest_start()</source>
          <target state="translated">ctest_start()</target>
        </trans-unit>
        <trans-unit id="0cd4bd2fa8a9695b926e607a352ce096fc29a8ba" translate="yes" xml:space="preserve">
          <source>ctest_submit</source>
          <target state="translated">ctest_submit</target>
        </trans-unit>
        <trans-unit id="a1254b8c5a8eee62993bb6d4ffd50c4b5f6e2af1" translate="yes" xml:space="preserve">
          <source>ctest_submit()</source>
          <target state="translated">ctest_submit()</target>
        </trans-unit>
        <trans-unit id="0fd2716081bf36caf90e4a2c7cd8b4d059b82d3b" translate="yes" xml:space="preserve">
          <source>ctest_test</source>
          <target state="translated">ctest_test</target>
        </trans-unit>
        <trans-unit id="9f9bb8a6af9c863b5bb95a65529d63a4e5275a78" translate="yes" xml:space="preserve">
          <source>ctest_test()</source>
          <target state="translated">ctest_test()</target>
        </trans-unit>
        <trans-unit id="f34c7ddb992044d6f42182d6310a7faf1b96a9c1" translate="yes" xml:space="preserve">
          <source>ctest_update</source>
          <target state="translated">ctest_update</target>
        </trans-unit>
        <trans-unit id="8207eaf70d13cd9367013d2bb01f2b7ae2633513" translate="yes" xml:space="preserve">
          <source>ctest_update()</source>
          <target state="translated">ctest_update()</target>
        </trans-unit>
        <trans-unit id="bbd0dcffcbbeab06fbae59467a6aa62f6573d6b2" translate="yes" xml:space="preserve">
          <source>ctest_upload</source>
          <target state="translated">ctest_upload</target>
        </trans-unit>
        <trans-unit id="79dbb1aa3a0abaae07b25cb0d1c57bc851451a92" translate="yes" xml:space="preserve">
          <source>ctest_upload()</source>
          <target state="translated">ctest_upload()</target>
        </trans-unit>
        <trans-unit id="515e060031a50fa7b057c291bf665ec971c1d61f" translate="yes" xml:space="preserve">
          <source>cuBLAS</source>
          <target state="translated">cuBLAS</target>
        </trans-unit>
        <trans-unit id="313d12ee4f0cde0f60a19ee59c687fcd71c99781" translate="yes" xml:space="preserve">
          <source>cuFFT</source>
          <target state="translated">cuFFT</target>
        </trans-unit>
        <trans-unit id="81691bd4f50860a71513db26a143ac4142d6a167" translate="yes" xml:space="preserve">
          <source>cuLIBOS</source>
          <target state="translated">cuLIBOS</target>
        </trans-unit>
        <trans-unit id="73eacb6fd9fb604c06754b1cc5b4a6a953ec8601" translate="yes" xml:space="preserve">
          <source>cuPTI</source>
          <target state="translated">cuPTI</target>
        </trans-unit>
        <trans-unit id="27c27659b78be9f15c4a2290405380e3e31269c8" translate="yes" xml:space="preserve">
          <source>cuRAND</source>
          <target state="translated">cuRAND</target>
        </trans-unit>
        <trans-unit id="e18ee5e1556bffb210c7624a53a79e08fef244b4" translate="yes" xml:space="preserve">
          <source>cuSOLVER</source>
          <target state="translated">cuSOLVER</target>
        </trans-unit>
        <trans-unit id="fee37ecd92c68555dc3e921b42af4c5ad2890d4d" translate="yes" xml:space="preserve">
          <source>cuSPARSE</source>
          <target state="translated">cuSPARSE</target>
        </trans-unit>
        <trans-unit id="db5a8eeafcb83047eaaa640b6333096da54518af" translate="yes" xml:space="preserve">
          <source>cupti</source>
          <target state="translated">cupti</target>
        </trans-unit>
        <trans-unit id="76d51f4d0d6e7ab186c1b716204abcbd5d5070b6" translate="yes" xml:space="preserve">
          <source>define a bunch of backwards compatibility variables</source>
          <target state="translated">이전 버전과의 호환성 변수를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="9455a1185f3a593f7e32d77471583736f2c121d5" translate="yes" xml:space="preserve">
          <source>define_property</source>
          <target state="translated">define_property</target>
        </trans-unit>
        <trans-unit id="7e00756e9af5847c7559f21c05622e81876dc220" translate="yes" xml:space="preserve">
          <source>define_property()</source>
          <target state="translated">define_property()</target>
        </trans-unit>
        <trans-unit id="0a4c67bc34a97f852f67d83660724bb86aa96490" translate="yes" xml:space="preserve">
          <source>defines the type of build of the target. Possible values are &amp;ldquo;STATIC_LIBRARY&amp;rdquo;, &amp;ldquo;MODULE_LIBRARY&amp;rdquo;, &amp;ldquo;SHARED_LIBRARY&amp;rdquo;, &amp;ldquo;OBJECT_LIBRARY&amp;rdquo;, &amp;ldquo;EXECUTABLE&amp;rdquo;, &amp;ldquo;UTILITY&amp;rdquo; and &amp;ldquo;INTERFACE_LIBRARY&amp;rdquo;.</source>
          <target state="translated">대상의 빌드 유형을 정의합니다. 가능한 값은&amp;ldquo;STATIC_LIBRARY&amp;rdquo;,&amp;ldquo;MODULE_LIBRARY&amp;rdquo;,&amp;ldquo;SHARED_LIBRARY&amp;rdquo;,&amp;ldquo;OBJECT_LIBRARY&amp;rdquo;,&amp;ldquo;EXECUTABLE&amp;rdquo;,&amp;ldquo;UTILITY&amp;rdquo;및&amp;ldquo;INTERFACE_LIBRARY&amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="4e921fad6a7313ad9c943f9e82c60e5caa0d1e7f" translate="yes" xml:space="preserve">
          <source>depending on what has been found and set.</source>
          <target state="translated">무엇을 찾고 설정했는지에 따라.</target>
        </trans-unit>
        <trans-unit id="6ed8b6910700d0ae4f81a8cb59cae130b810ba13" translate="yes" xml:space="preserve">
          <source>depending on whether &lt;code&gt;VAR&lt;/code&gt; is set in CMake to any value not considered a false constant by the &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command. The &amp;ldquo;&amp;hellip;&amp;rdquo; content on the line after the variable name, if any, is processed as above. Input file lines of the form &lt;code&gt;#cmakedefine01 VAR&lt;/code&gt; will be replaced with either &lt;code&gt;#define VAR 1&lt;/code&gt; or &lt;code&gt;#define VAR 0&lt;/code&gt; similarly. The result lines (with the exception of the &lt;code&gt;#undef&lt;/code&gt; comments) can be indented using spaces and/or tabs between the &lt;code&gt;#&lt;/code&gt; character and the &lt;code&gt;cmakedefine&lt;/code&gt; or &lt;code&gt;cmakedefine01&lt;/code&gt; words. This whitespace indentation will be preserved in the output lines:</source>
          <target state="translated">&lt;code&gt;VAR&lt;/code&gt; 이 CMake에 설정되어 있는지 여부에 따라 &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 명령에 의해 거짓 상수로 간주되지 않는 값으로 . 변수 이름 다음에 나오는 줄의&amp;ldquo;&amp;hellip;&amp;rdquo;내용은 위와 같이 처리됩니다. &lt;code&gt;#cmakedefine01 VAR&lt;/code&gt; 형식의 입력 파일 행은 마찬가지로 &lt;code&gt;#define VAR 1&lt;/code&gt; 또는 &lt;code&gt;#define VAR 0&lt;/code&gt; 으로 바뀝니다 . &lt;code&gt;#&lt;/code&gt; 문자와 &lt;code&gt;cmakedefine&lt;/code&gt; 또는 &lt;code&gt;cmakedefine01&lt;/code&gt; 단어 사이의 공백 및 / 또는 탭을 사용하여 결과 행 ( &lt;code&gt;#undef&lt;/code&gt; 주석 제외 )을 들여 쓸 수 있습니다 . 이 공백 들여 쓰기는 출력 라인에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="444b2a5208f6226bf30e8f3275f2eaf80a28f42f" translate="yes" xml:space="preserve">
          <source>deprecated, this argument will be ignored.</source>
          <target state="translated">더 이상 사용되지 않으며이 인수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="aaf9cbb5bdfbf6eab61a7613c8fb73e82682a534" translate="yes" xml:space="preserve">
          <source>directories containing the Freetype headers. This is the concatenation of the variables:</source>
          <target state="translated">Freetype 헤더를 포함하는 디렉토리. 이것은 변수의 연결입니다.</target>
        </trans-unit>
        <trans-unit id="3c1c04baa6c6ec303d8fec625deb680f4737b1e9" translate="yes" xml:space="preserve">
          <source>directory holding Freetype public headers</source>
          <target state="translated">자유형 공용 헤더를 보유하는 디렉토리</target>
        </trans-unit>
        <trans-unit id="3122152734a94a9ed19ffea5f135a272da5ab9b5" translate="yes" xml:space="preserve">
          <source>directory holding the main Freetype API configuration header</source>
          <target state="translated">기본 Freetype API 구성 헤더가있는 디렉토리</target>
        </trans-unit>
        <trans-unit id="8379208f0b177bf8e71b8251f448fbb32ad1ac58" translate="yes" xml:space="preserve">
          <source>documentation root (&lt;code&gt;DATAROOTDIR/doc/PROJECT_NAME&lt;/code&gt;)</source>
          <target state="translated">문서 루트 ( &lt;code&gt;DATAROOTDIR/doc/PROJECT_NAME&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ae050f5b7fb8d383d62139276081853b47e7a03e" translate="yes" xml:space="preserve">
          <source>else</source>
          <target state="translated">else</target>
        </trans-unit>
        <trans-unit id="92425dbcfab51bcc1f3d2e5b53fd42758de22715" translate="yes" xml:space="preserve">
          <source>else()</source>
          <target state="translated">else()</target>
        </trans-unit>
        <trans-unit id="4461e48113310b6bc2a39e54a3adc33e62d5706f" translate="yes" xml:space="preserve">
          <source>elseif</source>
          <target state="translated">elseif</target>
        </trans-unit>
        <trans-unit id="be7f08dd8ae43dddd348a43f906e2b5b5d6b12ea" translate="yes" xml:space="preserve">
          <source>elseif()</source>
          <target state="translated">elseif()</target>
        </trans-unit>
        <trans-unit id="1db939c36a37a590f386a7c67fd235b425fe1363" translate="yes" xml:space="preserve">
          <source>empties the binary directory</source>
          <target state="translated">이진 디렉토리를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="007c9f7deb44b02538156553315977283fb1b0cb" translate="yes" xml:space="preserve">
          <source>enable this to build KDE testcases</source>
          <target state="translated">KDE 테스트 케이스를 빌드 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="c7513c21b33917d77f50a68bf1b16e2f2ab54276" translate="yes" xml:space="preserve">
          <source>enable_language</source>
          <target state="translated">enable_language</target>
        </trans-unit>
        <trans-unit id="4b7cbc4453c66edf3379d9dfbc7a92a8494671d8" translate="yes" xml:space="preserve">
          <source>enable_language()</source>
          <target state="translated">enable_language()</target>
        </trans-unit>
        <trans-unit id="23145f39f1f2fb0f1943e4aed6334f3a4851cbdd" translate="yes" xml:space="preserve">
          <source>enable_testing</source>
          <target state="translated">enable_testing</target>
        </trans-unit>
        <trans-unit id="628f26963ac90e1ea0ece82d522e1cef6800d653" translate="yes" xml:space="preserve">
          <source>enable_testing()</source>
          <target state="translated">enable_testing()</target>
        </trans-unit>
        <trans-unit id="65941b55e22fb7c6a5ea574735192bb49c24b8c2" translate="yes" xml:space="preserve">
          <source>endforeach</source>
          <target state="translated">endforeach</target>
        </trans-unit>
        <trans-unit id="609df97128a257d0d78b226a646992755fd47bd0" translate="yes" xml:space="preserve">
          <source>endforeach()</source>
          <target state="translated">endforeach()</target>
        </trans-unit>
        <trans-unit id="84b8f96748d40bfec16d2529c5f6582060c63d9d" translate="yes" xml:space="preserve">
          <source>endfunction</source>
          <target state="translated">endfunction</target>
        </trans-unit>
        <trans-unit id="18053c15e7c0e0329226e4d2370f43b6417670bd" translate="yes" xml:space="preserve">
          <source>endfunction()</source>
          <target state="translated">endfunction()</target>
        </trans-unit>
        <trans-unit id="b14939c06a14aae647371e8486b7582ece50f801" translate="yes" xml:space="preserve">
          <source>endif</source>
          <target state="translated">endif</target>
        </trans-unit>
        <trans-unit id="d483a8300239fe813b095a0ed4db128d4ad9e418" translate="yes" xml:space="preserve">
          <source>endif()</source>
          <target state="translated">endif()</target>
        </trans-unit>
        <trans-unit id="c19b0be4bb8c22c6be9588ead6568bd8e62c6806" translate="yes" xml:space="preserve">
          <source>endmacro</source>
          <target state="translated">endmacro</target>
        </trans-unit>
        <trans-unit id="3c43693715a4c5748093264489386aeb93851d58" translate="yes" xml:space="preserve">
          <source>endmacro()</source>
          <target state="translated">endmacro()</target>
        </trans-unit>
        <trans-unit id="320d754dcd50fbc8be676e83f0bfb5b9debc07ed" translate="yes" xml:space="preserve">
          <source>endwhile</source>
          <target state="translated">endwhile</target>
        </trans-unit>
        <trans-unit id="740e1b540e88501c130ece4febc619cfa85636c9" translate="yes" xml:space="preserve">
          <source>endwhile()</source>
          <target state="translated">endwhile()</target>
        </trans-unit>
        <trans-unit id="50725caad50efb0991be15b78cdbae6af76ee2a0" translate="yes" xml:space="preserve">
          <source>exec_program</source>
          <target state="translated">exec_program</target>
        </trans-unit>
        <trans-unit id="64e44b0a2a5bc4b91732d26d2fddb708c74a34b2" translate="yes" xml:space="preserve">
          <source>exec_program()</source>
          <target state="translated">exec_program()</target>
        </trans-unit>
        <trans-unit id="313be60e61989ecce78343f65d07de1581f7dd71" translate="yes" xml:space="preserve">
          <source>execute quietly without messages.</source>
          <target state="translated">메시지없이 조용히 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="4b97ab4ecc0a607231c9f99d63f13bab26317514" translate="yes" xml:space="preserve">
          <source>execute_process</source>
          <target state="translated">execute_process</target>
        </trans-unit>
        <trans-unit id="a4d6042dcf44369cc322f4a7d912b5be774b3c57" translate="yes" xml:space="preserve">
          <source>execute_process()</source>
          <target state="translated">execute_process()</target>
        </trans-unit>
        <trans-unit id="2311e20fe86ccd03f7fa10c9c38c2f1ee95980ee" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;/usr/include/GNU/&lt;/code&gt; or &lt;code&gt;/usr/include/Clang/&lt;/code&gt; etc, depending on the compiler identifier.</source>
          <target state="translated">컴파일러 식별자에 따라 &lt;code&gt;/usr/include/GNU/&lt;/code&gt; 또는 &lt;code&gt;/usr/include/Clang/&lt;/code&gt; 등으로 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="78b5b1e96ccf9c8efbe4320a3ed808996fdf0bd9" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;DEBUG_MODE&lt;/code&gt; when the &lt;code&gt;Debug&lt;/code&gt; configuration is used, and otherwise expands to the empty string.</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; 구성을 사용 하면 &lt;code&gt;DEBUG_MODE&lt;/code&gt; 로 확장 되고 그렇지 않으면 빈 문자열로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="369d6251c5d62c8adc9ca9048d96dedeb97f0902" translate="yes" xml:space="preserve">
          <source>expands to &lt;code&gt;OLD_COMPILER&lt;/code&gt; if the &lt;code&gt;CMAKE_CXX_COMPILER_VERSION&lt;/code&gt; is less than 4.2.0.</source>
          <target state="translated">&lt;code&gt;CMAKE_CXX_COMPILER_VERSION&lt;/code&gt; 이 4.2.0보다 작은 경우 &lt;code&gt;OLD_COMPILER&lt;/code&gt; 로 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="83c4e385f00f33b5ce0017a88a05f9dbe6157265" translate="yes" xml:space="preserve">
          <source>export()</source>
          <target state="translated">export()</target>
        </trans-unit>
        <trans-unit id="326bad2bcbb99cf335bca726d30552620f168067" translate="yes" xml:space="preserve">
          <source>export_library_dependencies</source>
          <target state="translated">export_library_dependencies</target>
        </trans-unit>
        <trans-unit id="5475c782d0381906066e1be6fb403798b35145ea" translate="yes" xml:space="preserve">
          <source>export_library_dependencies()</source>
          <target state="translated">export_library_dependencies()</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="23b2ce62d4ef91bd39b9749fca0327f154b9da3c" translate="yes" xml:space="preserve">
          <source>file format to write output in: xml or html</source>
          <target state="translated">출력을 쓸 파일 형식 : xml 또는 html</target>
        </trans-unit>
        <trans-unit id="2e34e8dd9a278c97511e90ba00103a3fdb222106" translate="yes" xml:space="preserve">
          <source>file()</source>
          <target state="translated">file()</target>
        </trans-unit>
        <trans-unit id="2c5b04ac6ffcd7870b893a7936578120f7b3a22a" translate="yes" xml:space="preserve">
          <source>filename(s) as given to to CSharp target using &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">사용 CSHARP 타겟에 주어진 바와 같이 파일명은 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edfa6969880a38359ea6e18dd2239bddb538980f" translate="yes" xml:space="preserve">
          <source>find_file</source>
          <target state="translated">find_file</target>
        </trans-unit>
        <trans-unit id="9ded8b07e706cbca27402acd80ef5e0b841b668d" translate="yes" xml:space="preserve">
          <source>find_file()</source>
          <target state="translated">find_file()</target>
        </trans-unit>
        <trans-unit id="570963fb74baece9336fd9e00263c160512468e3" translate="yes" xml:space="preserve">
          <source>find_library</source>
          <target state="translated">find_library</target>
        </trans-unit>
        <trans-unit id="f079f6da8d7c641082e4991a78c40aeab5e49da2" translate="yes" xml:space="preserve">
          <source>find_library()</source>
          <target state="translated">find_library()</target>
        </trans-unit>
        <trans-unit id="85162725c5ab48bec5ace68f3185c137321d073b" translate="yes" xml:space="preserve">
          <source>find_package</source>
          <target state="translated">find_package</target>
        </trans-unit>
        <trans-unit id="001233f2222f25c36bc66f27a70d765bbdf938e3" translate="yes" xml:space="preserve">
          <source>find_package()</source>
          <target state="translated">find_package()</target>
        </trans-unit>
        <trans-unit id="aacf7a97f1b07a83b850bc929f8976e0554d7623" translate="yes" xml:space="preserve">
          <source>find_package(wxWidgets COMPONENTS core base &amp;hellip; OPTIONAL_COMPONENTS net &amp;hellip;)</source>
          <target state="translated">find_package (wxWidgets COMPONENTS 핵심 기반 ... OPTIONAL_COMPONENTS net&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="8e600e77e0b4e04c88f9ae847a00ed0d780c30ea" translate="yes" xml:space="preserve">
          <source>find_path</source>
          <target state="translated">find_path</target>
        </trans-unit>
        <trans-unit id="9342ce790ad0389e49635805d991505be5068350" translate="yes" xml:space="preserve">
          <source>find_path()</source>
          <target state="translated">find_path()</target>
        </trans-unit>
        <trans-unit id="d81dfe2828c67559a44589f01dbfbb1cb5114cb3" translate="yes" xml:space="preserve">
          <source>find_program</source>
          <target state="translated">find_program</target>
        </trans-unit>
        <trans-unit id="4ea4877c0bbd02daa2cb28df5b65af8895fadd75" translate="yes" xml:space="preserve">
          <source>find_program()</source>
          <target state="translated">find_program()</target>
        </trans-unit>
        <trans-unit id="5f18db55a9abafd71e3fea9f50597fa7b0762084" translate="yes" xml:space="preserve">
          <source>first in the vicinity of the source file</source>
          <target state="translated">소스 파일 근처에서 첫 번째</target>
        </trans-unit>
        <trans-unit id="aba058df9bc61096736c1b12df0e352caf339f15" translate="yes" xml:space="preserve">
          <source>fltk_wrap_ui</source>
          <target state="translated">fltk_wrap_ui</target>
        </trans-unit>
        <trans-unit id="6e9f482e02e382f7f04c6fa12c17fb3b4bf40e7d" translate="yes" xml:space="preserve">
          <source>fltk_wrap_ui()</source>
          <target state="translated">fltk_wrap_ui()</target>
        </trans-unit>
        <trans-unit id="cc6844f61e3dbaea1bda517940d363d800cc43f8" translate="yes" xml:space="preserve">
          <source>for declaring Matlab unit test</source>
          <target state="translated">Matlab 단위 테스트 선언</target>
        </trans-unit>
        <trans-unit id="bb87f4c574832855b5b61fe65afeec62a192a418" translate="yes" xml:space="preserve">
          <source>for each target affected. The convenience for installed targets is an &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; component with the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">영향을받는 각 대상에 대해 설치된 대상의 편의 는 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 명령 이있는 &lt;code&gt;INCLUDES DESTINATION&lt;/code&gt; 구성 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="b460e724314a2fe2497ec952e566407e4410ab2e" translate="yes" xml:space="preserve">
          <source>for the &lt;strong&gt;.Designer.cs&lt;/strong&gt; file (if it exists):</source>
          <target state="translated">에 대한 &lt;strong&gt;.Designer.cs의&lt;/strong&gt; 파일 (있는 경우) :</target>
        </trans-unit>
        <trans-unit id="e1a0e85dd9414c59a636a48bdc11635f7b94f9d6" translate="yes" xml:space="preserve">
          <source>for the &lt;strong&gt;.cs&lt;/strong&gt; file:</source>
          <target state="translated">에 대한 &lt;strong&gt;.cs의&lt;/strong&gt; 파일 :</target>
        </trans-unit>
        <trans-unit id="14bcc8f0513252eefa7b5801de210007e055b46e" translate="yes" xml:space="preserve">
          <source>for the &lt;strong&gt;.resx&lt;/strong&gt; file (if it exists):</source>
          <target state="translated">에 대한 &lt;strong&gt;의 .resx&lt;/strong&gt; 파일 (있는 경우) :</target>
        </trans-unit>
        <trans-unit id="4d3e8614703ea126434cc11d59e3c7a70c66d624" translate="yes" xml:space="preserve">
          <source>foreach</source>
          <target state="translated">foreach</target>
        </trans-unit>
        <trans-unit id="e2eb7159cc8d936b5b5f7e8b99a0d627f5fa70f1" translate="yes" xml:space="preserve">
          <source>foreach generator, it then</source>
          <target state="translated">foreach 발생기</target>
        </trans-unit>
        <trans-unit id="9454ce9651d66b6cca067198611ee56be3fbcfd5" translate="yes" xml:space="preserve">
          <source>foreach()</source>
          <target state="translated">foreach()</target>
        </trans-unit>
        <trans-unit id="0425c3aa0539681fdfa02c1ab1caefee76a96e72" translate="yes" xml:space="preserve">
          <source>forwarded origin target dependencies (enabled by default via &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">전달 된 오리진 대상 종속성 ( &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; &lt;/a&gt; 를 통해 기본적으로 활성화 됨 )</target>
        </trans-unit>
        <trans-unit id="21669d5eded3729f9529d1ddf4f2be8fbe7294a1" translate="yes" xml:space="preserve">
          <source>forwarded origin target dependencies (enabled by default via &lt;a href=&quot;autogen_origin_depends#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">전달 된 오리진 대상 종속성 ( &lt;a href=&quot;autogen_origin_depends#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; &lt;/a&gt; 를 통해 기본적으로 활성화 됨 )</target>
        </trans-unit>
        <trans-unit id="67dd1e0eb5a2743180a1ee8ec37c75fa7bfb9ad8" translate="yes" xml:space="preserve">
          <source>full path to the destination directories defined by target install rules.</source>
          <target state="translated">대상 설치 규칙으로 정의 된 대상 디렉토리의 전체 경로</target>
        </trans-unit>
        <trans-unit id="69c1cecbfa227fed264c2750432e341f307886a2" translate="yes" xml:space="preserve">
          <source>full path to the ruby binary</source>
          <target state="translated">루비 바이너리의 전체 경로</target>
        </trans-unit>
        <trans-unit id="a292efc5db4d39f55cda29b7811e93777be501d2" translate="yes" xml:space="preserve">
          <source>full path to the ruby library</source>
          <target state="translated">루비 라이브러리의 전체 경로</target>
        </trans-unit>
        <trans-unit id="db61625dffd45219c35086c815d65a252afa5bd0" translate="yes" xml:space="preserve">
          <source>full provided version string</source>
          <target state="translated">제공된 버전 문자열</target>
        </trans-unit>
        <trans-unit id="615c2fc7ecf370231f277d830bc87b2d37856762" translate="yes" xml:space="preserve">
          <source>full requested version string</source>
          <target state="translated">전체 요청 된 버전 문자열</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="f2205b9f88ec0bdf93a0a400f0d0fdbfc7149599" translate="yes" xml:space="preserve">
          <source>function()</source>
          <target state="translated">function()</target>
        </trans-unit>
        <trans-unit id="f55ce4b375c5cce71f5fa4a0dbffb628e9ad1b72" translate="yes" xml:space="preserve">
          <source>generates a string of the entries in the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property with each entry preceded by &lt;code&gt;-I&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 대상 등록 정보에서 각 항목 앞에 &lt;code&gt;-I&lt;/code&gt; 가있는 항목 문자열을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="a3d66fceb8a969226f56670a9912e9a214e00f41" translate="yes" xml:space="preserve">
          <source>get_cmake_property</source>
          <target state="translated">get_cmake_property</target>
        </trans-unit>
        <trans-unit id="e43b809e8834ffe4cda180d5e7ef3dde9b62ddd7" translate="yes" xml:space="preserve">
          <source>get_cmake_property()</source>
          <target state="translated">get_cmake_property()</target>
        </trans-unit>
        <trans-unit id="57a7e03566729515b65723615551fb3566e06554" translate="yes" xml:space="preserve">
          <source>get_directory_property</source>
          <target state="translated">get_directory_property</target>
        </trans-unit>
        <trans-unit id="0bf9affce82fde9d890c0ff10488e3e4e6ff37d0" translate="yes" xml:space="preserve">
          <source>get_directory_property()</source>
          <target state="translated">get_directory_property()</target>
        </trans-unit>
        <trans-unit id="b1d4ca961907c291aa703790d9e8b1c74c4256c6" translate="yes" xml:space="preserve">
          <source>get_filename_component</source>
          <target state="translated">get_filename_component</target>
        </trans-unit>
        <trans-unit id="4fcda730c55d90ebaadb342bee5e64684a19b5b2" translate="yes" xml:space="preserve">
          <source>get_filename_component()</source>
          <target state="translated">get_filename_component()</target>
        </trans-unit>
        <trans-unit id="06e08a074a7682cba787e9892e9acb2df0eec7c5" translate="yes" xml:space="preserve">
          <source>get_property</source>
          <target state="translated">get_property</target>
        </trans-unit>
        <trans-unit id="f7aea0aabad5383bd10c01a0654390560d372c3e" translate="yes" xml:space="preserve">
          <source>get_property()</source>
          <target state="translated">get_property()</target>
        </trans-unit>
        <trans-unit id="10243f8b2c45cb36bb7fb14c7b67de91a223f8f4" translate="yes" xml:space="preserve">
          <source>get_source_file_property</source>
          <target state="translated">get_source_file_property</target>
        </trans-unit>
        <trans-unit id="0a55114bb0e4d8fcb9132ae14276b25d77fb9cc9" translate="yes" xml:space="preserve">
          <source>get_source_file_property()</source>
          <target state="translated">get_source_file_property()</target>
        </trans-unit>
        <trans-unit id="873b2041e08c969655568a672ab910012cb12e76" translate="yes" xml:space="preserve">
          <source>get_target_property</source>
          <target state="translated">get_target_property</target>
        </trans-unit>
        <trans-unit id="cd4b8a559bbf990e9635e153ee755d1c330b77c9" translate="yes" xml:space="preserve">
          <source>get_target_property()</source>
          <target state="translated">get_target_property()</target>
        </trans-unit>
        <trans-unit id="c94e0474c91fa015721729f02fa89d93fd899f65" translate="yes" xml:space="preserve">
          <source>get_test_property</source>
          <target state="translated">get_test_property</target>
        </trans-unit>
        <trans-unit id="03a0471dc6b22d80461dfe441f811753cf374733" translate="yes" xml:space="preserve">
          <source>get_test_property()</source>
          <target state="translated">get_test_property()</target>
        </trans-unit>
        <trans-unit id="6731e03584c392df313212c9e56e73f09409f74f" translate="yes" xml:space="preserve">
          <source>helper module to find OSX frameworks</source>
          <target state="translated">OSX 프레임 워크를 찾는 헬퍼 모듈</target>
        </trans-unit>
        <trans-unit id="6413e837d316aafcf260786cd21a849f88ae3069" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="translated">iOS</target>
        </trans-unit>
        <trans-unit id="7a13d91cda57586aea8903bb215c51ceecbc546b" translate="yes" xml:space="preserve">
          <source>ide-integration</source>
          <target state="translated">ide-integration</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="f06d002e40d6f7daedc588166065e05cb56e5a78" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;ON&lt;/code&gt; tries to find BLAS95/LAPACK95</source>
          <target state="translated">경우 &lt;code&gt;ON&lt;/code&gt; 는 BLAS95 / LAPACK95를 찾습니다</target>
        </trans-unit>
        <trans-unit id="55fb807fddcb3eb163c23e9cafa4c48423a31458" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;ON&lt;/code&gt; tries to find the BLAS95 interfaces</source>
          <target state="translated">경우 &lt;code&gt;ON&lt;/code&gt; 은 BLAS95 인터페이스를 찾습니다</target>
        </trans-unit>
        <trans-unit id="d73c49553c7ac39529c9568b2b8e583b34c3e904" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;ON&lt;/code&gt; tries to find the BLAS95/LAPACK95 interfaces</source>
          <target state="translated">&lt;code&gt;ON&lt;/code&gt; 인 경우 BLAS95 / LAPACK95 인터페이스를 찾으려고합니다.</target>
        </trans-unit>
        <trans-unit id="28611fe86ada61c9ec80b38bb48932ca3722fc81" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;ON&lt;/code&gt; use static linkage</source>
          <target state="translated">경우 &lt;code&gt;ON&lt;/code&gt; 의 사용 정적 연동</target>
        </trans-unit>
        <trans-unit id="3869c9d4eaa87b1c1257bbb3832366aa41d1d30e" translate="yes" xml:space="preserve">
          <source>if TRUE, don&amp;rsquo;t print anything</source>
          <target state="translated">참이면 아무 것도 인쇄하지 마십시오</target>
        </trans-unit>
        <trans-unit id="dea64b0cba641e1cad90ba63efbcb62a1cddc929" translate="yes" xml:space="preserve">
          <source>if UNIX is defined, then it will look for the cygwin version first</source>
          <target state="translated">UNIX가 정의 된 경우 먼저 cygwin 버전을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f76d4478b90b155543822092d16d477da60174f6" translate="yes" xml:space="preserve">
          <source>if any of the lists are shorter, the corresponding iteration variable is not defined for the current iteration.</source>
          <target state="translated">목록이 더 짧은 경우 해당 반복 변수가 현재 반복에 대해 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="36578cf0660b6548e1ce660c0e3d58cb5ed1673a" translate="yes" xml:space="preserve">
          <source>if false, do not try to link to SDL</source>
          <target state="translated">거짓이면 SDL에 연결하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f4bf7d276ad862c82fca100fa9436ba1f7ba19c7" translate="yes" xml:space="preserve">
          <source>if given, overrides the default name. The default name is the name of the target without any prefix and with &lt;code&gt;Matlab_MEX_EXTENSION&lt;/code&gt; suffix.</source>
          <target state="translated">주어진 경우 기본 이름을 대체합니다. 기본 이름은 접두사가 &lt;code&gt;Matlab_MEX_EXTENSION&lt;/code&gt; 접미사 가있는 대상의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="c535d876a2e2ea3223d7f683374fc741f4424d96" translate="yes" xml:space="preserve">
          <source>if given, the file &lt;code&gt;file.txt&lt;/code&gt; will be considered as being the documentation file for the MEX file. This file is copied into the same folder without any processing, with the same name as the final mex file, and with extension &lt;code&gt;.m&lt;/code&gt;. In that case, typing &lt;code&gt;help &amp;lt;name&amp;gt;&lt;/code&gt; in Matlab prints the documentation contained in this file.</source>
          <target state="translated">주어진 경우 &lt;code&gt;file.txt&lt;/code&gt; 파일은 MEX 파일의 문서 파일로 간주됩니다. 이 파일은 처리없이 최종 mex 파일과 이름이 같고 확장자가 &lt;code&gt;.m&lt;/code&gt; 인 동일한 폴더로 복사됩니다 . 이 경우 Matlab에 &lt;code&gt;help &amp;lt;name&amp;gt;&lt;/code&gt; 을 입력 하면 이 파일에 포함 된 설명서가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="cb90ef4430a9a251d62f3130dbab27c96c928142" translate="yes" xml:space="preserve">
          <source>if match is &lt;strong&gt;.cs&lt;/strong&gt; file:</source>
          <target state="translated">일치하는 파일 이 &lt;strong&gt;.cs&lt;/strong&gt; 파일 인 경우 :</target>
        </trans-unit>
        <trans-unit id="a3e2c4bbdb29c04e7cb28fd90b6a61ba5f76a5f3" translate="yes" xml:space="preserve">
          <source>if match is &lt;strong&gt;.resx&lt;/strong&gt; file:</source>
          <target state="translated">일치하는 것이 &lt;strong&gt;.resx&lt;/strong&gt; 파일 인 경우 :</target>
        </trans-unit>
        <trans-unit id="daf3462c4077439a3a24a64e63eefff2cc22994c" translate="yes" xml:space="preserve">
          <source>if match is &lt;strong&gt;.settings&lt;/strong&gt; file:</source>
          <target state="translated">match가 &lt;strong&gt;.settings&lt;/strong&gt; 파일 인 경우 :</target>
        </trans-unit>
        <trans-unit id="cbacbf2cd07744ecbc571495a1803f3edb204250" translate="yes" xml:space="preserve">
          <source>if multiple variable names passed, their count should match the lists variables count;</source>
          <target state="translated">여러 변수 이름이 전달 된 경우 해당 개수는 목록 변수 개수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="a170bf07a5fb292ebbfd0c9382dfcf024ea9f85e" translate="yes" xml:space="preserve">
          <source>if pkg-config executable was found</source>
          <target state="translated">pkg-config 실행 파일을 찾은 경우</target>
        </trans-unit>
        <trans-unit id="b97263d9a3842d80fcdfc65e700c51e4139ebd5d" translate="yes" xml:space="preserve">
          <source>if set &lt;code&gt;pkg-config&lt;/code&gt; will be used to search for a BLAS library first and if one is found that is preferred</source>
          <target state="translated">set &lt;code&gt;pkg-config&lt;/code&gt; 를 사용하여 BLAS 라이브러리를 먼저 검색하고 선호하는 라이브러리가있는 경우</target>
        </trans-unit>
        <trans-unit id="cdac79e64245c55223a41bcad05b483e2b78c20f" translate="yes" xml:space="preserve">
          <source>if set, then the component must always be installed. It is a equivalent of the &lt;code&gt;REQUARED&lt;/code&gt; option from the &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-2-command:cpack_add_component&quot;&gt;&lt;code&gt;cpack_add_component()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">설정된 경우 구성 요소를 항상 설치해야합니다. &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-2-command:cpack_add_component&quot;&gt; &lt;code&gt;cpack_add_component()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;REQUARED&lt;/code&gt; 옵션 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="aa02bd4f16995dffda5c7fe7637ad96f7302e993" translate="yes" xml:space="preserve">
          <source>if set, then the component must always be installed. It is a equivalent of the &lt;code&gt;REQUIRED&lt;/code&gt; option from the &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-2-command:cpack_add_component&quot;&gt;&lt;code&gt;cpack_add_component()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">설정된 경우 구성 요소를 항상 설치해야합니다. &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-2-command:cpack_add_component&quot;&gt; &lt;code&gt;cpack_add_component()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;REQUIRED&lt;/code&gt; 옵션 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="626fb562b208d24c87fc22a1ac54a70279b33a06" translate="yes" xml:space="preserve">
          <source>if set, then the component will be hidden from the installer. It is a equivalent of the &lt;code&gt;HIDDEN&lt;/code&gt; option from the &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-1-command:cpack_add_component&quot;&gt;&lt;code&gt;cpack_add_component()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">설정하면 구성 요소가 설치 관리자에서 숨겨집니다. &lt;a href=&quot;cpackcomponent#command:cpack_add_component&quot; id=&quot;index-1-command:cpack_add_component&quot;&gt; &lt;code&gt;cpack_add_component()&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;HIDDEN&lt;/code&gt; 옵션 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0d0bf811338f7f65bfb278a50a1c25b00b9eca0c" translate="yes" xml:space="preserve">
          <source>if set, then the component will be packaged and installed as part of a group to which it belongs.</source>
          <target state="translated">설정된 경우 구성 요소가 속한 그룹의 일부로 구성 요소가 패키지되고 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="b09cc9b9c8a8140739dd52968d532cdcb0828a4e" translate="yes" xml:space="preserve">
          <source>if set, then the group must always be installed.</source>
          <target state="translated">설정된 경우 그룹을 항상 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="582f0c72725b5f53b5b35fa03b47de1a040ef65e" translate="yes" xml:space="preserve">
          <source>if set, then the group will be hidden from the installer. Note that setting this on a root component does not work.</source>
          <target state="translated">설정하면 그룹이 설치 프로그램에서 숨겨집니다. 루트 구성 요소에서이를 설정하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="874c1d82d5343862d958cf4a12fb3ed73a47f61b" translate="yes" xml:space="preserve">
          <source>if set, then the package manager stays disabled until that component is updated.</source>
          <target state="translated">설정된 경우 패키지 관리자는 해당 구성 요소가 업데이트 될 때까지 비활성화 된 상태를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="a03fb366dc452258c65f55c9ab82994cdf801fa1" translate="yes" xml:space="preserve">
          <source>if set, then the repository will be disabled by default.</source>
          <target state="translated">설정하면 리포지토리가 기본적으로 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="90bcd5e5ff779a83cfdea77e17bb8145b33bd946" translate="yes" xml:space="preserve">
          <source>if specified, the given command will be executed before starting the squish test.</source>
          <target state="translated">지정된 경우 지정된 명령이 squish 테스트를 시작하기 전에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="a0780af5c386d53e3027624df274a44774e9d8ec" translate="yes" xml:space="preserve">
          <source>if specified, the given settings group will be used for executing the test. If not specified, the groupname will be &amp;ldquo;CTest_&amp;lt;username&amp;gt;&amp;rdquo;</source>
          <target state="translated">지정된 경우 지정된 설정 그룹이 테스트 실행에 사용됩니다. 지정하지 않으면 그룹 이름은 &quot;CTest_ &amp;lt;username&amp;gt;&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="89a5f948c6958c5eaf057cfb33308bfe6cafabf6" translate="yes" xml:space="preserve">
          <source>if the only &lt;code&gt;loop_var&lt;/code&gt; given, then it sets a series of &lt;code&gt;loop_var_N&lt;/code&gt; variables to the current item from the corresponding list;</source>
          <target state="translated">만약 &lt;code&gt;loop_var&lt;/code&gt; 가 주어진다면, 일련의 &lt;code&gt;loop_var_N&lt;/code&gt; 변수를 해당 목록의 현재 항목으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5860f55d016bb6fb1f814842590c1f0c54cb4c54" translate="yes" xml:space="preserve">
          <source>if()</source>
          <target state="translated">if()</target>
        </trans-unit>
        <trans-unit id="37ca62364018feb8d79ff4cf8cb8dddb0f575e3f" translate="yes" xml:space="preserve">
          <source>importing-exporting</source>
          <target state="translated">importing-exporting</target>
        </trans-unit>
        <trans-unit id="b6c9e4c982ddcaeaf3e09eb8debebcb49be3818c" translate="yes" xml:space="preserve">
          <source>in case your MEX file is using the GPU and in order to be able to run unit tests on this MEX file, the GPU resources should be properly released by Matlab. A possible solution is to make Matlab aware of the use of the GPU resources in the session, which can be performed by a command such as &lt;code&gt;D = gpuDevice()&lt;/code&gt; at the beginning of the test script (or via a fixture).</source>
          <target state="translated">MEX 파일이 GPU를 사용 중이고이 MEX 파일에서 단위 테스트를 실행할 수 있으려면 Matlab에서 GPU 리소스를 올바르게 해제해야합니다. 가능한 해결책은 Matlab이 세션에서 GPU 리소스의 사용을 인식하도록하는 것입니다. 이 테스트는 테스트 스크립트 시작시 (또는 조명기를 통해 &lt;code&gt;D = gpuDevice()&lt;/code&gt; 와 같은 명령으로 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2bf5e68494ab5ef90f8fba16f9514eb43d04589e" translate="yes" xml:space="preserve">
          <source>in order to link to library A. An analysis was performed to order multiple link directories such that the linker would find library A in the desired location, but there are cases in which this does not work. CMake versions 2.6 and above use the more reliable approach of passing the full path to libraries directly to the linker in most cases. The example code now produces something like</source>
          <target state="translated">링커가 라이브러리 A를 원하는 위치에서 찾을 수 있도록 여러 링크 디렉토리를 정렬하기위한 분석이 수행되었지만 작동하지 않는 경우가 있습니다. CMake 버전 2.6 이상은 대부분의 경우 라이브러리에 대한 전체 경로를 링커에 직접 전달하는보다 안정적인 방법을 사용합니다. 예제 코드는 이제 다음과 같은 것을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ae0d7244b1394a96a20d7ff2c477d8880b7cecf9" translate="yes" xml:space="preserve">
          <source>in the &lt;a href=&quot;autouic_search_paths#prop_tgt:AUTOUIC_SEARCH_PATHS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_SEARCH_PATHS&quot;&gt;&lt;code&gt;AUTOUIC_SEARCH_PATHS&lt;/code&gt;&lt;/a&gt; of the target.</source>
          <target state="translated">대상 의 &lt;a href=&quot;autouic_search_paths#prop_tgt:AUTOUIC_SEARCH_PATHS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_SEARCH_PATHS&quot;&gt; &lt;code&gt;AUTOUIC_SEARCH_PATHS&lt;/code&gt; &lt;/a&gt; 에서.</target>
        </trans-unit>
        <trans-unit id="7caca41ebe7d328c7f33a76fded2cde7883512a8" translate="yes" xml:space="preserve">
          <source>in the &lt;code&gt;CTestConfig.cmake&lt;/code&gt; file.</source>
          <target state="translated">에서 &lt;code&gt;CTestConfig.cmake&lt;/code&gt; 의 파일.</target>
        </trans-unit>
        <trans-unit id="3d335e25d75a91d6cca36c77b96502d21d87e372" translate="yes" xml:space="preserve">
          <source>in the context of the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">의 맥락에서 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 호출.</target>
        </trans-unit>
        <trans-unit id="175a33b635d4b3663414d76b6bc406c23053fcb0" translate="yes" xml:space="preserve">
          <source>in the vicinity of the file and</source>
          <target state="translated">파일 근처에</target>
        </trans-unit>
        <trans-unit id="c8249bccf785e20ca5010593c5ebd68db714a989" translate="yes" xml:space="preserve">
          <source>in your CMakeLists.txt &lt;em&gt;before&lt;/em&gt; you include this file.</source>
          <target state="translated">이 파일을 포함 &lt;em&gt;하기 전에&lt;/em&gt; CMakeLists.txt에</target>
        </trans-unit>
        <trans-unit id="d3ecb0d890368d7659ee54010045b835dacb8efe" translate="yes" xml:space="preserve">
          <source>include</source>
          <target state="translated">include</target>
        </trans-unit>
        <trans-unit id="615c9bddfc4038c022ae84e3231992952e901a72" translate="yes" xml:space="preserve">
          <source>include directories for GLEW</source>
          <target state="translated">GLEW 용 디렉토리 포함</target>
        </trans-unit>
        <trans-unit id="b330315c2fbb552787209f49209d9acd4535774a" translate="yes" xml:space="preserve">
          <source>include directory of the module</source>
          <target state="translated">모듈의 디렉토리를 포함</target>
        </trans-unit>
        <trans-unit id="cdf865b804b6a1fa2d3f4ae6d10ac43e8e29291e" translate="yes" xml:space="preserve">
          <source>include dirs to be used when using the ruby library</source>
          <target state="translated">루비 라이브러리를 사용할 때 사용할 dirs 포함</target>
        </trans-unit>
        <trans-unit id="ce083e38a67773d363ba46c7375315ce8e870ebd" translate="yes" xml:space="preserve">
          <source>include( ${CMAKE_MODULE_PATH}/Use_wxWindows.cmake)</source>
          <target state="translated">include ($ {CMAKE_MODULE_PATH} /Use_wxWindows.cmake)</target>
        </trans-unit>
        <trans-unit id="86c2d513f250be3984b3ac5733cf9c5b817cc800" translate="yes" xml:space="preserve">
          <source>include()</source>
          <target state="translated">include()</target>
        </trans-unit>
        <trans-unit id="a062c854ae2e5f506bd747be609e8c4983fdd024" translate="yes" xml:space="preserve">
          <source>include_directories</source>
          <target state="translated">include_directories</target>
        </trans-unit>
        <trans-unit id="30c3c688d701b97c4a4d420ac2dff9ec6f9cc3b3" translate="yes" xml:space="preserve">
          <source>include_directories()</source>
          <target state="translated">include_directories()</target>
        </trans-unit>
        <trans-unit id="35023df2b904e9ba6e259be93d5013aa6e150e30" translate="yes" xml:space="preserve">
          <source>include_external_msproject</source>
          <target state="translated">include_external_msproject</target>
        </trans-unit>
        <trans-unit id="2934e7a84b6b512b7fc39fffaa77544b6f66b6b3" translate="yes" xml:space="preserve">
          <source>include_external_msproject()</source>
          <target state="translated">include_external_msproject()</target>
        </trans-unit>
        <trans-unit id="88ff142db2f2c9266732d87457d0a058101d8f4e" translate="yes" xml:space="preserve">
          <source>include_guard</source>
          <target state="translated">include_guard</target>
        </trans-unit>
        <trans-unit id="2a5af07a7f3aefb89a16b5d9147081a9a2b4ed36" translate="yes" xml:space="preserve">
          <source>include_guard()</source>
          <target state="translated">include_guard()</target>
        </trans-unit>
        <trans-unit id="3a9df7dfa7a8f9ae11232a090e72fae012c9fcd7" translate="yes" xml:space="preserve">
          <source>include_regular_expression</source>
          <target state="translated">include_regular_expression</target>
        </trans-unit>
        <trans-unit id="a771fd85e7cfc45923ce37738f0ff2773001c6af" translate="yes" xml:space="preserve">
          <source>include_regular_expression()</source>
          <target state="translated">include_regular_expression()</target>
        </trans-unit>
        <trans-unit id="3042ea16d5813bc0cf4538a2fb1079ad32bf00d7" translate="yes" xml:space="preserve">
          <source>includes of header &lt;code&gt;moc&lt;/code&gt; files (see &lt;a href=&quot;#including-header-moc-files-in-sources&quot;&gt;Including header moc files in sources&lt;/a&gt;),</source>
          <target state="translated">헤더 &lt;code&gt;moc&lt;/code&gt; 파일 &lt;a href=&quot;#including-header-moc-files-in-sources&quot;&gt;포함&lt;/a&gt; ( sources에 헤더 moc 파일 포함 참조 )</target>
        </trans-unit>
        <trans-unit id="351fc611efb01a5c06c98f24cbd258cab8ba3eea" translate="yes" xml:space="preserve">
          <source>includes the &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-3-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-3-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt; 포함</target>
        </trans-unit>
        <trans-unit id="9e7d645fda0d5be58aa305226a08fac6c01ce6f7" translate="yes" xml:space="preserve">
          <source>includes the &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-4-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-4-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt; 포함</target>
        </trans-unit>
        <trans-unit id="167577e93996c80ac55faae8634e11ea486fe7b2" translate="yes" xml:space="preserve">
          <source>indicating that the server is ready for action.</source>
          <target state="translated">서버가 조치를 취할 준비가되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a2503fdded34f9d3916c34efb1e701a111271f12" translate="yes" xml:space="preserve">
          <source>info documentation (&lt;code&gt;DATAROOTDIR/info&lt;/code&gt;)</source>
          <target state="translated">정보 문서 ( &lt;code&gt;DATAROOTDIR/info&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="effaa279ab488ebb484cdcdedc6bb99ef3341864" translate="yes" xml:space="preserve">
          <source>insert a line containing only the string &lt;code&gt;@PACKAGE_INIT@&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@PACKAGE_INIT@&lt;/code&gt; 문자열 만 포함하는 행을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2" translate="yes" xml:space="preserve">
          <source>install</source>
          <target state="translated">install</target>
        </trans-unit>
        <trans-unit id="83ecd07bb0559dc810e60d0f97f9669255071534" translate="yes" xml:space="preserve">
          <source>install()</source>
          <target state="translated">install()</target>
        </trans-unit>
        <trans-unit id="436d8e4fdc6fd30d90600b05df6ffc269765addd" translate="yes" xml:space="preserve">
          <source>install_files</source>
          <target state="translated">install_files</target>
        </trans-unit>
        <trans-unit id="c49f5153b862d11acd5ea185ec7250121f02a7d1" translate="yes" xml:space="preserve">
          <source>install_files()</source>
          <target state="translated">install_files()</target>
        </trans-unit>
        <trans-unit id="15af85df94c95447f63691ebf3686526d3e808ac" translate="yes" xml:space="preserve">
          <source>install_programs</source>
          <target state="translated">install_programs</target>
        </trans-unit>
        <trans-unit id="e52b334ada454808b089f1a13cd098c0bb79fa57" translate="yes" xml:space="preserve">
          <source>install_programs()</source>
          <target state="translated">install_programs()</target>
        </trans-unit>
        <trans-unit id="cfe30d035c176ea097d7af9e6f16e7da2c4b8319" translate="yes" xml:space="preserve">
          <source>install_targets</source>
          <target state="translated">install_targets</target>
        </trans-unit>
        <trans-unit id="ef85099aff99137b39715ec241f9ef562c7b75fc" translate="yes" xml:space="preserve">
          <source>install_targets()</source>
          <target state="translated">install_targets()</target>
        </trans-unit>
        <trans-unit id="5751aefab0a5f673649c9f7a6a3b278a80dd6a91" translate="yes" xml:space="preserve">
          <source>instead of &lt;code&gt;set(FOO_DIR &quot;@SOME_INSTALL_DIR@&quot;)&lt;/code&gt;, use &lt;code&gt;set(FOO_DIR &quot;@PACKAGE_SOME_INSTALL_DIR@&quot;)&lt;/code&gt; (this must be after the &lt;code&gt;@PACKAGE_INIT@&lt;/code&gt; line)</source>
          <target state="translated">대신 &lt;code&gt;set(FOO_DIR &quot;@SOME_INSTALL_DIR@&quot;)&lt;/code&gt; 를 사용 &lt;code&gt;set(FOO_DIR &quot;@PACKAGE_SOME_INSTALL_DIR@&quot;)&lt;/code&gt; (이것은 이후 여야합니다 &lt;code&gt;@PACKAGE_INIT@&lt;/code&gt; 선)</target>
        </trans-unit>
        <trans-unit id="6a8393e42b00bd589ecb3106e09a96707a411856" translate="yes" xml:space="preserve">
          <source>instead of using the normal &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-1-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;configure_package_config_file()&lt;/code&gt;</source>
          <target state="translated">대신에 통상 사용 &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-1-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt; 를 사용 &lt;code&gt;configure_package_config_file()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ab887421df2a4892540de5601ad793f8ce088f2" translate="yes" xml:space="preserve">
          <source>iphoneos</source>
          <target state="translated">iphoneos</target>
        </trans-unit>
        <trans-unit id="f3deb538dd6bbac3e602c7758dab55a748f2b0b2" translate="yes" xml:space="preserve">
          <source>iphonesimulator</source>
          <target state="translated">iphonesimulator</target>
        </trans-unit>
        <trans-unit id="2807b1ff4ba7b4c991552bc44d11e3bb21186472" translate="yes" xml:space="preserve">
          <source>is a list of &amp;lt;file_path&amp;gt; (&amp;lsquo;.qm&amp;rsquo; files) representing translations to load.</source>
          <target state="translated">로드 할 번역을 나타내는 &amp;lt;file_path&amp;gt; ( '. qm'파일)의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a51e31cf238fc8bad32ccbd1155f85ab43dbd23d" translate="yes" xml:space="preserve">
          <source>is a list of &amp;lt;file_path&amp;gt; (&amp;lsquo;.ui&amp;rsquo; files) representing pages to load.</source>
          <target state="translated">로드 할 페이지를 나타내는 &amp;lt;file_path&amp;gt; ( '. ui'파일)의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="34169deb5ba8c09b777ee8f17155744c42c754ad" translate="yes" xml:space="preserve">
          <source>is a macro which should expand to &lt;code&gt;__declspec(dllexport)&lt;/code&gt; or &lt;code&gt;__declspec(dllimport)&lt;/code&gt; depending on what is being compiled.</source>
          <target state="translated">컴파일되는 내용에 따라 &lt;code&gt;__declspec(dllexport)&lt;/code&gt; 또는 &lt;code&gt;__declspec(dllimport)&lt;/code&gt; 확장해야하는 매크로입니다 .</target>
        </trans-unit>
        <trans-unit id="2f50ffb50ab709afc59c93d176f8079aae21813d" translate="yes" xml:space="preserve">
          <source>is a relative or absolute path to operations script for this component group.</source>
          <target state="translated">이 구성 요소 그룹의 조작 스크립트에 대한 상대 또는 절대 경로입니다.</target>
        </trans-unit>
        <trans-unit id="c0c00f244f8485a5894b93aeb63be07c0d8ca7b8" translate="yes" xml:space="preserve">
          <source>is a relative or absolute path to operations script for this component.</source>
          <target state="translated">이 구성 요소의 조작 스크립트에 대한 상대 또는 절대 경로입니다.</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">에 해당</target>
        </trans-unit>
        <trans-unit id="db3e35b5c83c714e857be5f77896223c44189ddb" translate="yes" xml:space="preserve">
          <source>is password to use on a protected repository.</source>
          <target state="translated">보호 된 저장소에서 사용할 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="221bcffb0950fcaf8f0667091a8713e2cbefa95e" translate="yes" xml:space="preserve">
          <source>is points to a list of available components.</source>
          <target state="translated">사용 가능한 구성 요소 목록을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="74df4d567a75ea96c9b0da4c5eefa5d7bf483295" translate="yes" xml:space="preserve">
          <source>is points to a list that will replace to.</source>
          <target state="translated">대체 할 목록을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="d0cf69a3db249c958f3abc1de931eb8e78bef465" translate="yes" xml:space="preserve">
          <source>is points to a list that will replaced.</source>
          <target state="translated">대체 할 목록을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="ed4f922dfa1ebd740971f6feddac0486f467703e" translate="yes" xml:space="preserve">
          <source>is priority of the component group in the tree. The &lt;code&gt;PRIORITY&lt;/code&gt; option is deprecated and will be removed in a future version of CMake. Please use &lt;code&gt;SORTING_PRIORITY&lt;/code&gt; option instead.</source>
          <target state="translated">트리에서 구성 요소 그룹의 우선 순위입니다. &lt;code&gt;PRIORITY&lt;/code&gt; 옵션은 더 이상 사용되지 않으며 CMake의 향후 버전에서 제거 될 예정입니다. 사용하십시오 &lt;code&gt;SORTING_PRIORITY&lt;/code&gt; 의 대신 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="828e5db43dfe52195a2822b9499b49d1c172660f" translate="yes" xml:space="preserve">
          <source>is priority of the component in the tree. The &lt;code&gt;PRIORITY&lt;/code&gt; option is deprecated and will be removed in a future version of CMake. Please use &lt;code&gt;SORTING_PRIORITY&lt;/code&gt; option instead.</source>
          <target state="translated">트리에서 구성 요소의 우선 순위입니다. &lt;code&gt;PRIORITY&lt;/code&gt; 옵션은 더 이상 사용되지 않으며 CMake의 향후 버전에서 제거 될 예정입니다. 사용하십시오 &lt;code&gt;SORTING_PRIORITY&lt;/code&gt; 의 대신 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="025a07e9a2ff8b459bf24654a6105e19494277a8" translate="yes" xml:space="preserve">
          <source>is string to display instead of the URL.</source>
          <target state="translated">URL 대신 표시 할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4b2e9049a5e3ad29c26a46df4e34b4ffbe097ff3" translate="yes" xml:space="preserve">
          <source>is used as user on a protected repository.</source>
          <target state="translated">보호 된 저장소에서 사용자로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b95b2e9af6028516fc8acf3f7756b112dc57ebbc" translate="yes" xml:space="preserve">
          <source>is used to create domain-like identification for this component group. By default used origin component group name.</source>
          <target state="translated">이 구성 요소 그룹에 대한 도메인 유사 식별을 작성하는 데 사용됩니다. 기본적으로 오리진 구성 요소 그룹 이름이 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="92e2f942620040a4b13416cc7f3e311635c903a0" translate="yes" xml:space="preserve">
          <source>is used to create domain-like identification for this component. By default used origin component name.</source>
          <target state="translated">이 구성 요소에 대한 도메인 유사 식별을 작성하는 데 사용됩니다. 기본적으로 오리진 구성 요소 이름이 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="44c49c9cb2d0d8ccd082eccfbddf7c4864439f4b" translate="yes" xml:space="preserve">
          <source>is version of component group. By default used &lt;a href=&quot;cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-1-variable:CPACK_PACKAGE_VERSION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구성 요소 그룹의 버전입니다. 기본적으로 &lt;a href=&quot;cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-1-variable:CPACK_PACKAGE_VERSION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt; 을&lt;/a&gt; 사용 했습니다 .</target>
        </trans-unit>
        <trans-unit id="7b41b7677c0854dce40020c0a29f1db54455ebcc" translate="yes" xml:space="preserve">
          <source>is version of component. By default used &lt;a href=&quot;cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구성 요소의 버전입니다. 기본적으로 &lt;a href=&quot;cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt; 을&lt;/a&gt; 사용 했습니다 .</target>
        </trans-unit>
        <trans-unit id="2bd9c42a8e1673c3c1bb10b550e5c4cf33808b28" translate="yes" xml:space="preserve">
          <source>it includes &lt;code&gt;CPackConfig.cmake&lt;/code&gt;</source>
          <target state="translated">그것은 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 를 포함 합니다</target>
        </trans-unit>
        <trans-unit id="61d105200dc51458bd78643d752c0cee6edff48d" translate="yes" xml:space="preserve">
          <source>it iterates over the generators given by the &lt;code&gt;-G&lt;/code&gt; command line option, or if no such option was specified, over the list of generators given by the &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-3-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; variable set in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; input file.</source>
          <target state="translated">&lt;code&gt;-G&lt;/code&gt; 명령 행 옵션으로 지정된 생성기를 반복 하거나, 이러한 옵션이 지정되지 않은 경우 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 입력 파일에 설정된 &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-3-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; &lt;/a&gt; 변수로 지정된 생성기 목록을 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="af2742808f432647f6f30673d655e66df04cedc8" translate="yes" xml:space="preserve">
          <source>it must added to &lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; 에&lt;/a&gt; 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d13fab59a6a71cd8c652f141cba8fa962c6696f4" translate="yes" xml:space="preserve">
          <source>it must be added to &lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-2-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; 에&lt;/a&gt; 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2683f8e22ad783f17470d2c78b589a4d38cc252b" translate="yes" xml:space="preserve">
          <source>keep empty to auto generate.</source>
          <target state="translated">자동 생성하려면 비워 두십시오.</target>
        </trans-unit>
        <trans-unit id="28aa1e77a78a7dd9d81d84f9782d9c40a4aaec1f" translate="yes" xml:space="preserve">
          <source>language for which the result will be used, i.e. C/CXX/Fortran/ASM</source>
          <target state="translated">결과가 사용될 언어, 즉 C / CXX / Fortran / ASM</target>
        </trans-unit>
        <trans-unit id="dd7eee4e4b67a89cb4d44856c8f3fa7dc296daf1" translate="yes" xml:space="preserve">
          <source>lib directory of the module</source>
          <target state="translated">모듈의 lib 디렉토리</target>
        </trans-unit>
        <trans-unit id="d522cc3bcb18fbc08b239ddee68f92dacec83c2a" translate="yes" xml:space="preserve">
          <source>libX-1.1.0</source>
          <target state="translated">libX-1.1.0</target>
        </trans-unit>
        <trans-unit id="4495a49f18f973a47cc8257eb38950e580a08cd3" translate="yes" xml:space="preserve">
          <source>libX-1.2.10</source>
          <target state="translated">libX-1.2.10</target>
        </trans-unit>
        <trans-unit id="6a16bd673a8f737f818763fe9fbf0a74e50e06fa" translate="yes" xml:space="preserve">
          <source>libX-1.2.9</source>
          <target state="translated">libX-1.2.9</target>
        </trans-unit>
        <trans-unit id="414629b6901b40c3fbc179847d99f03864d6d400" translate="yes" xml:space="preserve">
          <source>libraries needed to use ruby from C.</source>
          <target state="translated">C에서 루비를 사용하는 데 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="10b6868ec011763816be3194aa17f63f84da3e84" translate="yes" xml:space="preserve">
          <source>libraries to link against GLEW</source>
          <target state="translated">GLEW에 링크 할 라이브러리</target>
        </trans-unit>
        <trans-unit id="e08a16f271f600f7ae0e5030b3460563a82b2697" translate="yes" xml:space="preserve">
          <source>libraries to link against shared GLEW</source>
          <target state="translated">공유 GLEW에 링크 할 라이브러리</target>
        </trans-unit>
        <trans-unit id="d8ecc287c02011afb43a208584fa768ae1eef232" translate="yes" xml:space="preserve">
          <source>libraries to link against static GLEW</source>
          <target state="translated">정적 GLEW에 링크 할 라이브러리</target>
        </trans-unit>
        <trans-unit id="f9ac5e439a44881339d5168dde4322a074fc7ea6" translate="yes" xml:space="preserve">
          <source>library for mex, always available.</source>
          <target state="translated">mex 용 라이브러리로 항상 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="5d9a75b51f7e89c9e90f146cb6e54327a9d5f062" translate="yes" xml:space="preserve">
          <source>library implementing the BLAS interface is found</source>
          <target state="translated">BLAS 인터페이스를 구현하는 라이브러리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3c09584d7ceb1cec01725effde3c326b25c244a" translate="yes" xml:space="preserve">
          <source>library implementing the BLAS95 interface is found</source>
          <target state="translated">BLAS95 인터페이스를 구현하는 라이브러리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d6170812b8bebc207d1bd5c1f62ebf27e66780b" translate="yes" xml:space="preserve">
          <source>library implementing the LAPACK interface is found</source>
          <target state="translated">LAPACK 인터페이스를 구현하는 라이브러리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="28ab38a63e6a33046eb73aa904d012faaffc1ec7" translate="yes" xml:space="preserve">
          <source>library implementing the LAPACK95 interface is found</source>
          <target state="translated">LAPACK95 인터페이스를 구현하는 라이브러리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bdb58fd6fb2ceb76751d699358b11e22ab600a5" translate="yes" xml:space="preserve">
          <source>link_directories</source>
          <target state="translated">link_directories</target>
        </trans-unit>
        <trans-unit id="7ca5b4e88fb3b610bc71f2a7b04175c4a5096211" translate="yes" xml:space="preserve">
          <source>link_directories()</source>
          <target state="translated">link_directories()</target>
        </trans-unit>
        <trans-unit id="4bcc60b062e3bc0fede358120c54f5e8afa308c8" translate="yes" xml:space="preserve">
          <source>link_libraries</source>
          <target state="translated">link_libraries</target>
        </trans-unit>
        <trans-unit id="42ed64af11ea9aac53a45780d0107fd18b0e66ab" translate="yes" xml:space="preserve">
          <source>link_libraries()</source>
          <target state="translated">link_libraries()</target>
        </trans-unit>
        <trans-unit id="c0892be48b981da79196928425cb22d466ced2eb" translate="yes" xml:space="preserve">
          <source>links &lt;code&gt;main&lt;/code&gt; to &lt;code&gt;A B A B&lt;/code&gt;. While one repetition is usually sufficient, pathological object file and symbol arrangements can require more. One may handle such cases by using the &lt;a href=&quot;../prop_tgt/link_interface_multiplicity#prop_tgt:LINK_INTERFACE_MULTIPLICITY&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_MULTIPLICITY&quot;&gt;&lt;code&gt;LINK_INTERFACE_MULTIPLICITY&lt;/code&gt;&lt;/a&gt; target property or by manually repeating the component in the last &lt;code&gt;target_link_libraries&lt;/code&gt; call. However, if two archives are really so interdependent they should probably be combined into a single archive, perhaps by using &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt;.</source>
          <target state="translated">링크 &lt;code&gt;main&lt;/code&gt; 에 &lt;code&gt;A B A B&lt;/code&gt; . 한 번의 반복으로 충분하지만 병리학 적 대상 파일과 기호 배열에는 더 많은 것이 필요할 수 있습니다. &lt;a href=&quot;../prop_tgt/link_interface_multiplicity#prop_tgt:LINK_INTERFACE_MULTIPLICITY&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_MULTIPLICITY&quot;&gt; &lt;code&gt;LINK_INTERFACE_MULTIPLICITY&lt;/code&gt; &lt;/a&gt; 대상 속성을 사용하거나 마지막 &lt;code&gt;target_link_libraries&lt;/code&gt; 호출 에서 수동으로 구성 요소를 반복 하여 이러한 경우를 처리 할 수 ​​있습니다 . 그러나 두 개의 아카이브가 실제로 상호 의존적이라면 아마도 &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; 를 사용하여 단일 아카이브로 결합해야합니다 .</target>
        </trans-unit>
        <trans-unit id="38b62be4bddaa5661c7d6b8e36e28159314df5c7" translate="yes" xml:space="preserve">
          <source>list</source>
          <target state="translated">list</target>
        </trans-unit>
        <trans-unit id="f9a58b80715328306726b4feff0723948a84c246" translate="yes" xml:space="preserve">
          <source>list command no longer ignores empty elements.</source>
          <target state="translated">list 명령은 더 이상 빈 요소를 무시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cecd0e2322d5604b40c90a190ff56a9974ad28b" translate="yes" xml:space="preserve">
          <source>list of dependency component or component group identifiers in &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; style.</source>
          <target state="translated">&lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; 스타일 의 종속성 구성 요소 또는 구성 요소 그룹 ID 목록 .</target>
        </trans-unit>
        <trans-unit id="f6a9b92bf5bf42281e8f2a0b42c40b6a63b8a7fd" translate="yes" xml:space="preserve">
          <source>list of dependency component or component group identifiers in QtIFW style.</source>
          <target state="translated">QtIFW 스타일의 종속성 구성 요소 또는 구성 요소 그룹 식별자 목록.</target>
        </trans-unit>
        <trans-unit id="2e8376a2ec398260910915163a362c43265031de" translate="yes" xml:space="preserve">
          <source>list of identifiers of component or component group in &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; style that this component group has an automatic dependency on.</source>
          <target state="translated">이 컴포넌트 그룹이 자동 종속성을 갖는 &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; 스타일 의 컴포넌트 또는 컴포넌트 그룹의 식별자 목록 .</target>
        </trans-unit>
        <trans-unit id="e2df2e59562691fa18faaa7ee84b9f8be73d25be" translate="yes" xml:space="preserve">
          <source>list of identifiers of component or component group in &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; style that this component has an automatic dependency on.</source>
          <target state="translated">이 컴포넌트가 자동 종속성을 갖는 &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; 스타일 의 컴포넌트 또는 컴포넌트 그룹의 식별자 목록 .</target>
        </trans-unit>
        <trans-unit id="c30a0cf3ed4922e49be316f0c731c343da805dff" translate="yes" xml:space="preserve">
          <source>list of identifiers of component or component group in QtIFW style that this component group has an automatic dependency on.</source>
          <target state="translated">이 구성 요소 그룹이 자동 종속성을 갖는 QtIFW 스타일의 구성 요소 또는 구성 요소 그룹의 식별자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="eb30be5816bb9a69c56df07ccc7f0e3b66cf3877" translate="yes" xml:space="preserve">
          <source>list of identifiers of component or component group in QtIFW style that this component has an automatic dependency on.</source>
          <target state="translated">이 구성 요소가 자동 종속성을 갖는 QtIFW 스타일의 구성 요소 또는 구성 요소 그룹의 식별자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="112b5be21bb6e451a245dc86736e829e8dc9bad5" translate="yes" xml:space="preserve">
          <source>list of identifiers of component or component group to replace.</source>
          <target state="translated">교체 할 구성 요소 또는 구성 요소 그룹의 식별자 목록.</target>
        </trans-unit>
        <trans-unit id="37b34334d6779dec0f5e3ff1f63a5814dd05436f" translate="yes" xml:space="preserve">
          <source>list of regex strings matching the names of files that should be copied from the object store to the testing directory</source>
          <target state="translated">오브젝트 저장소에서 테스트 디렉토리로 복사해야하는 파일 이름과 일치하는 정규식 문자열 목록</target>
        </trans-unit>
        <trans-unit id="b216870f926f8b13c9331cf37c3b2b2380ac8f89" translate="yes" xml:space="preserve">
          <source>list of requested components</source>
          <target state="translated">요청 된 구성 요소 목록</target>
        </trans-unit>
        <trans-unit id="c4fa578d1c28df5ed316d14de38357a8b9e39419" translate="yes" xml:space="preserve">
          <source>list of source files.</source>
          <target state="translated">소스 파일 목록.</target>
        </trans-unit>
        <trans-unit id="8e58c5ee1738de7d773fa0b28506226124cc9d01" translate="yes" xml:space="preserve">
          <source>list of the include directories needed to use LibXml2</source>
          <target state="translated">LibXml2를 사용하는 데 필요한 포함 디렉토리 목록</target>
        </trans-unit>
        <trans-unit id="29826519243021caa3dab8cd09e80cc7f55bb99e" translate="yes" xml:space="preserve">
          <source>list()</source>
          <target state="translated">list()</target>
        </trans-unit>
        <trans-unit id="a1a1e9d3abf9662121fc1bd7e56ef352a99c89af" translate="yes" xml:space="preserve">
          <source>listed as one of the &lt;code&gt;BYPRODUCTS&lt;/code&gt; of an &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command, or</source>
          <target state="translated">중 하나로서 열거 된 &lt;code&gt;BYPRODUCTS&lt;/code&gt; 의 AN &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; 명령 또는</target>
        </trans-unit>
        <trans-unit id="b1b3861c1c2daf7d614555fe31424c45fb2910a0" translate="yes" xml:space="preserve">
          <source>load_cache</source>
          <target state="translated">load_cache</target>
        </trans-unit>
        <trans-unit id="a958f66dba7d67a2e476a44a3e8db54d7585e4d3" translate="yes" xml:space="preserve">
          <source>load_cache()</source>
          <target state="translated">load_cache()</target>
        </trans-unit>
        <trans-unit id="b1a9499acd5976e17e9b8cf66a8b92f1d29728c6" translate="yes" xml:space="preserve">
          <source>load_command</source>
          <target state="translated">load_command</target>
        </trans-unit>
        <trans-unit id="2666f38bfb827ddf3058ff6b18d6ca52e3736f14" translate="yes" xml:space="preserve">
          <source>load_command()</source>
          <target state="translated">load_command()</target>
        </trans-unit>
        <trans-unit id="c73f4edbdc51ef03c3892409306538b6cf1801d4" translate="yes" xml:space="preserve">
          <source>locale-dependent data (&lt;code&gt;DATAROOTDIR/locale&lt;/code&gt;)</source>
          <target state="translated">로케일 종속 데이터 ( &lt;code&gt;DATAROOTDIR/locale&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">macOS</target>
        </trans-unit>
        <trans-unit id="a8c4ce6ce680dbe7900181f192da847a8f7ccbf2" translate="yes" xml:space="preserve">
          <source>macOS directory name for installed targets.</source>
          <target state="translated">설치된 대상의 macOS 디렉토리 이름</target>
        </trans-unit>
        <trans-unit id="1daac57d69500f0d485fc7a2e9472f3d55d17fe4" translate="yes" xml:space="preserve">
          <source>macOS-Specific</source>
          <target state="translated">macOS-Specific</target>
        </trans-unit>
        <trans-unit id="78f3a3d9d6e4d907a7d12e475d0a751d6b7e256b" translate="yes" xml:space="preserve">
          <source>macro</source>
          <target state="translated">macro</target>
        </trans-unit>
        <trans-unit id="e40185c69b4289b657415f3925c8770fe22bcff2" translate="yes" xml:space="preserve">
          <source>macro SQUISH_ADD_TEST(testName applicationUnderTest testCase envVars testWrapper)</source>
          <target state="translated">매크로 SQUISH_ADD_TEST (testName applicationUnderTest testCase envVars testWrapper)</target>
        </trans-unit>
        <trans-unit id="b673e612c6fc406dd135e16317346e2949f4f1fd" translate="yes" xml:space="preserve">
          <source>macro()</source>
          <target state="translated">macro()</target>
        </trans-unit>
        <trans-unit id="fd796d5241039629e3b17eebcd34595d34f8f1d3" translate="yes" xml:space="preserve">
          <source>major version if provided, else 0</source>
          <target state="translated">제공되는 경우 주 버전, 그렇지 않으면 0</target>
        </trans-unit>
        <trans-unit id="09e578c73f20cb765f34e10599df5fef314b97e7" translate="yes" xml:space="preserve">
          <source>major version if requested, else 0</source>
          <target state="translated">요청이있는 경우 주 버전, 그렇지 않으면 0</target>
        </trans-unit>
        <trans-unit id="c591ebf57e1f33ce36650c65e39f65edc98adf3c" translate="yes" xml:space="preserve">
          <source>make_directory</source>
          <target state="translated">make_directory</target>
        </trans-unit>
        <trans-unit id="d1b3e22b902ce79642e920fea61af86bf7303506" translate="yes" xml:space="preserve">
          <source>make_directory()</source>
          <target state="translated">make_directory()</target>
        </trans-unit>
        <trans-unit id="57b504dbfc52c92180ac9b1ed8c53825781ae68d" translate="yes" xml:space="preserve">
          <source>man documentation (&lt;code&gt;DATAROOTDIR/man&lt;/code&gt;)</source>
          <target state="translated">man documentation ( &lt;code&gt;DATAROOTDIR/man&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d0666000583d3ed0e80e1665ee215c9841c39a3f" translate="yes" xml:space="preserve">
          <source>mark_as_advanced</source>
          <target state="translated">mark_as_advanced</target>
        </trans-unit>
        <trans-unit id="108add45e0d47c1e4bf280f44bb99dd39af52c8b" translate="yes" xml:space="preserve">
          <source>mark_as_advanced()</source>
          <target state="translated">mark_as_advanced()</target>
        </trans-unit>
        <trans-unit id="7a488390a939c4795cc1a801e51751d5f25d800d" translate="yes" xml:space="preserve">
          <source>math</source>
          <target state="translated">math</target>
        </trans-unit>
        <trans-unit id="7c5363cd3226c3f60ce7f509311bb8c28c5adfa6" translate="yes" xml:space="preserve">
          <source>math()</source>
          <target state="translated">math()</target>
        </trans-unit>
        <trans-unit id="b368a54115eb7360687f491d3c33fb03edd5b597" translate="yes" xml:space="preserve">
          <source>may appear to work for &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generators, but is not portable to IDE generators. Additionally, the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; configuration-mappings are not accounted for with code like this, so it should be avoided.</source>
          <target state="translated">&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기에서 작동하는 것처럼 보이지만 IDE 생성기로 이식 할 수는 없습니다. 또한 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 구성 매핑은 이와 같은 코드로 설명되지 않으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="caee40afd565c691cb5b9a62e0baa13a17f835bc" translate="yes" xml:space="preserve">
          <source>may appear to work for &lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generators, but is not portable to IDE generators. Additionally, the &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; configuration-mappings are not accounted for with code like this, so it should be avoided.</source>
          <target state="translated">&lt;a href=&quot;cmake-generators.7#makefile-generators&quot;&gt;Makefile 생성기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기에서 작동하는 것처럼 보일 수 있지만 IDE 생성기로 이식 할 수 없습니다. 또한 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 구성 매핑은 이와 같은 코드로 설명되지 않으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="6f9b9af3cd6e8b8a73c2cdced37fe9f59226e27d" translate="yes" xml:space="preserve">
          <source>message</source>
          <target state="translated">message</target>
        </trans-unit>
        <trans-unit id="6c7a1167101249ae232da1289bf409cb18b07f0a" translate="yes" xml:space="preserve">
          <source>message()</source>
          <target state="translated">message()</target>
        </trans-unit>
        <trans-unit id="3f9358e4202dec8099b6a39c21b0c8d1c3b242f1" translate="yes" xml:space="preserve">
          <source>minor version if provided, else 0</source>
          <target state="translated">부 버전 (제공된 경우), 그렇지 않은 경우 0</target>
        </trans-unit>
        <trans-unit id="e1943e8c66a696f6044a5ed947d4d96f0c0320c0" translate="yes" xml:space="preserve">
          <source>minor version if requested, else 0</source>
          <target state="translated">요청이있는 경우 부 버전, 그렇지 않으면 0</target>
        </trans-unit>
        <trans-unit id="1c7aff533fd0ee06ba4342bcecfab243ba551a2d" translate="yes" xml:space="preserve">
          <source>modifiable architecture-independent data (&lt;code&gt;com&lt;/code&gt;)</source>
          <target state="translated">수정 가능한 아키텍처 독립적 데이터 ( &lt;code&gt;com&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7a896a8ac4484f7dff5c608ea67db43831e2c25e" translate="yes" xml:space="preserve">
          <source>modifiable single-machine data (&lt;code&gt;var&lt;/code&gt;)</source>
          <target state="translated">수정 가능한 단일 머신 데이터 ( &lt;code&gt;var&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="647d0384f4202357a2d490d9f46a66c920a10955" translate="yes" xml:space="preserve">
          <source>mx library of Matlab (arrays), always available.</source>
          <target state="translated">Matlab의 mx 라이브러리 (배열)는 항상 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e271271745dbb6afd030e0fa232a3b12a4ed3d9c" translate="yes" xml:space="preserve">
          <source>name of the package</source>
          <target state="translated">패키지 이름</target>
        </trans-unit>
        <trans-unit id="5eecf0c240a814287abeac7d072498b0df8d4a2c" translate="yes" xml:space="preserve">
          <source>name of the target.</source>
          <target state="translated">대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fd1c84878871c95e4a3f91aebcd4ed720df2a2a5" translate="yes" xml:space="preserve">
          <source>name of the unittest in ctest.</source>
          <target state="translated">ctest에서 단위 테스트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b21883fafe12f21372102fc14688c8ec51f65765" translate="yes" xml:space="preserve">
          <source>now prefer to link the check executable to the libraries listed in the &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; variable. This policy provides compatibility with projects that have not been updated to expect this behavior.</source>
          <target state="translated">이제 check 실행 파일을 &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; 변수에 나열된 라이브러리에 연결하는 것이 좋습니다 . 이 정책은이 동작을 예상하도록 업데이트되지 않은 프로젝트와의 호환성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="316220ea252d7e3f9a3837c069030e85a82fbb58" translate="yes" xml:space="preserve">
          <source>number of version components, 0 to 4</source>
          <target state="translated">버전 구성 요소 수, 0 ~ 4</target>
        </trans-unit>
        <trans-unit id="64fd81a4dd37ccff87bae2b2c8313e6102077c57" translate="yes" xml:space="preserve">
          <source>nvBLAS</source>
          <target state="translated">nvBLAS</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
