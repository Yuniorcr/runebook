<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="3ea552cb6fc6952a09872fe876273c31faac2312" translate="yes" xml:space="preserve">
          <source>Swift_DIAGNOSTICS_FILE</source>
          <target state="translated">Swift_DIAGNOSTICS_FILE</target>
        </trans-unit>
        <trans-unit id="12aaad9cc99736cf22b15d986fb2fd7fbfab061c" translate="yes" xml:space="preserve">
          <source>Swift_LANGUAGE_VERSION</source>
          <target state="translated">Swift_LANGUAGE_VERSION</target>
        </trans-unit>
        <trans-unit id="3df5e603d9d959758c59bc0727ac2657972bcce5" translate="yes" xml:space="preserve">
          <source>Swift_MODULE_DIRECTORY</source>
          <target state="translated">Swift_MODULE_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="491ad08009286c41166ef73708f2819daf14184a" translate="yes" xml:space="preserve">
          <source>Swift_MODULE_NAME</source>
          <target state="translated">Swift_MODULE_NAME</target>
        </trans-unit>
        <trans-unit id="1235ffa32c14e429cfcca5a226faef639404fe9c" translate="yes" xml:space="preserve">
          <source>Switch between strict and relaxed automoc mode.</source>
          <target state="translated">엄격하고 완화 된 automoc 모드 사이를 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="f35983250c3b49002b3457d1fcc2e474f33a1b9c" translate="yes" xml:space="preserve">
          <source>Switch for forwarding origin target dependencies to the corresponding &lt;code&gt;_autogen&lt;/code&gt; target.</source>
          <target state="translated">오리진 대상 종속성을 해당 &lt;code&gt;_autogen&lt;/code&gt; 대상으로 전달하기 위해 전환하십시오 .</target>
        </trans-unit>
        <trans-unit id="04422e844e95811aa4a66febfc09c42e845be522" translate="yes" xml:space="preserve">
          <source>Switch for forwarding origin target dependencies to the corresponding &lt;code&gt;_autogen&lt;/code&gt; targets.</source>
          <target state="translated">오리진 대상 종속성을 해당 &lt;code&gt;_autogen&lt;/code&gt; 대상으로 전달하도록 전환하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a764747dd237c654b1063679f80a752d5842aa5" translate="yes" xml:space="preserve">
          <source>Switch to enable generation of a global &lt;code&gt;autogen&lt;/code&gt; target.</source>
          <target state="translated">글로벌 &lt;code&gt;autogen&lt;/code&gt; 생성 대상을 생성 할 수 있도록 전환하십시오 .</target>
        </trans-unit>
        <trans-unit id="46e1a319415c9fad50302f7d44955f8dbbbe3193" translate="yes" xml:space="preserve">
          <source>Switch to enable generation of a global &lt;code&gt;autorcc&lt;/code&gt; target.</source>
          <target state="translated">글로벌 &lt;code&gt;autorcc&lt;/code&gt; 대상을 생성 할 수 있도록 전환하십시오 .</target>
        </trans-unit>
        <trans-unit id="648dffebaacad78c54661d1afa4a71e0d08237ba" translate="yes" xml:space="preserve">
          <source>Switching Between Device and Simulator</source>
          <target state="translated">장치와 시뮬레이터 간 전환</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="3efdcccc1aefac7eaeb01024bd7ebaf734c72296" translate="yes" xml:space="preserve">
          <source>Symbol Macros</source>
          <target state="translated">심볼 매크로</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="795c0d12264a70e224ab87a6bfca141f9a7faf59" translate="yes" xml:space="preserve">
          <source>System Name for Cross Compiling</source>
          <target state="translated">크로스 컴파일을위한 시스템 이름</target>
        </trans-unit>
        <trans-unit id="3e1591b14b102ed0ddb5272eb260220a9863123b" translate="yes" xml:space="preserve">
          <source>System Name for Host Builds</source>
          <target state="translated">호스트 빌드의 시스템 이름</target>
        </trans-unit>
        <trans-unit id="d2d97fb03d339cdbaa36cb9f389d86af22749394" translate="yes" xml:space="preserve">
          <source>System Package Registry</source>
          <target state="translated">시스템 패키지 레지스트리</target>
        </trans-unit>
        <trans-unit id="3f9411c5e235b4a03aa25a838807c72e8b36bc40" translate="yes" xml:space="preserve">
          <source>System Version for Cross Compiling</source>
          <target state="translated">크로스 컴파일을위한 시스템 버전</target>
        </trans-unit>
        <trans-unit id="1baacc8a053ff25482d15fc6d7e3b6d05d8ed87d" translate="yes" xml:space="preserve">
          <source>System Version for Host Builds</source>
          <target state="translated">호스트 빌드를위한 시스템 버전</target>
        </trans-unit>
        <trans-unit id="f3c140ca620d5bd510972999ce3d2814112ead8e" translate="yes" xml:space="preserve">
          <source>System framework: &lt;code&gt;/System/Library/Frameworks&lt;/code&gt;, whose priority can be changed via setting the &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">시스템 프레임 워크 : &lt;code&gt;/System/Library/Frameworks&lt;/code&gt; , &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 설정을 통해 우선 순위를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c31412fdb091459092f416d86e959be910d08e7" translate="yes" xml:space="preserve">
          <source>System has gnutls</source>
          <target state="translated">시스템에 gnutls가 있음</target>
        </trans-unit>
        <trans-unit id="c74ef1ac5b70c9153993bc20249419cb4dbca084" translate="yes" xml:space="preserve">
          <source>System has the NumPy.</source>
          <target state="translated">시스템에 NumPy가 있습니다.</target>
        </trans-unit>
        <trans-unit id="986192333a5e08dd38106fcdc1428889b2aedf93" translate="yes" xml:space="preserve">
          <source>System has the OpenSSL library. If no components are requested it only requires the crypto library.</source>
          <target state="translated">시스템에는 OpenSSL 라이브러리가 있습니다. 요청 된 구성 요소가 없으면 암호화 라이브러리 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0eb2ed14dbb9b6252b5610b58512f0f929a0a4ed" translate="yes" xml:space="preserve">
          <source>System has the Python 2 compiler.</source>
          <target state="translated">시스템에는 Python 2 컴파일러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d89d274ef5cffafc39ac82b68cc136194f9484ac" translate="yes" xml:space="preserve">
          <source>System has the Python 2 development artifacts for Python embedding.</source>
          <target state="translated">시스템에는 Python 임베딩을위한 Python 2 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0217a4e2d6b9d8566626da8d477f8418a03403f7" translate="yes" xml:space="preserve">
          <source>System has the Python 2 development artifacts for Python module.</source>
          <target state="translated">시스템에는 Python 모듈 용 Python 2 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="88e118ec42fef03b1997b1394966a3c84811b92a" translate="yes" xml:space="preserve">
          <source>System has the Python 2 development artifacts.</source>
          <target state="translated">시스템에는 Python 2 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ac694b0d9116786cbda577cd663c2063f92fbbd" translate="yes" xml:space="preserve">
          <source>System has the Python 2 interpreter.</source>
          <target state="translated">시스템에는 Python 2 인터프리터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e89cc2597beafc0a3a2b262158c612af0092161" translate="yes" xml:space="preserve">
          <source>System has the Python 2 requested components.</source>
          <target state="translated">시스템에 Python 2 요청 컴포넌트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa90ec37be244e74b04592961f044fbb34144523" translate="yes" xml:space="preserve">
          <source>System has the Python 3 compiler.</source>
          <target state="translated">시스템에는 Python 3 컴파일러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb98fc177f9c029e231160981be228f9b60f152d" translate="yes" xml:space="preserve">
          <source>System has the Python 3 development artifacts for Python embedding.</source>
          <target state="translated">시스템에는 Python 임베딩을위한 Python 3 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="97e420d96ad07cd33f309e601109a8455442af4e" translate="yes" xml:space="preserve">
          <source>System has the Python 3 development artifacts for Python module.</source>
          <target state="translated">시스템에는 Python 모듈 용 Python 3 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="224954ceac3ce9f759066771870d46b3cf21cb32" translate="yes" xml:space="preserve">
          <source>System has the Python 3 development artifacts.</source>
          <target state="translated">시스템에는 Python 3 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="700894b26f3c43f39f727a2b8f100a456ee14886" translate="yes" xml:space="preserve">
          <source>System has the Python 3 interpreter.</source>
          <target state="translated">시스템에는 Python 3 인터프리터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="db3e14193b4872923f4aa3178c5541f911dbe29e" translate="yes" xml:space="preserve">
          <source>System has the Python 3 requested components.</source>
          <target state="translated">시스템에 Python 3 요청 컴포넌트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="253829967eadb0db901c05829ecd69ae4cf54b68" translate="yes" xml:space="preserve">
          <source>System has the Python compiler.</source>
          <target state="translated">시스템에는 Python 컴파일러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="487ea4db738614cdb53d79bdda5d8e0840aa740c" translate="yes" xml:space="preserve">
          <source>System has the Python development artifacts for Python embedding.</source>
          <target state="translated">시스템에는 Python 임베딩을위한 Python 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="482ecea2827987dae01750e72c798044f29b78e4" translate="yes" xml:space="preserve">
          <source>System has the Python development artifacts for Python module.</source>
          <target state="translated">시스템에는 Python 모듈 용 Python 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6c374759871c4668086591627a60c9a0dbc0fee" translate="yes" xml:space="preserve">
          <source>System has the Python development artifacts.</source>
          <target state="translated">시스템에는 Python 개발 아티팩트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6376149e988856e6294715a40f715022909d8613" translate="yes" xml:space="preserve">
          <source>System has the Python interpreter.</source>
          <target state="translated">시스템에는 Python 인터프리터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3449f3636bdcc7e8799f9ba941c031ee0b6dc97" translate="yes" xml:space="preserve">
          <source>System has the Python requested components.</source>
          <target state="translated">시스템에 Python이 요청한 구성 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a57f4f0b214e9b6ba01f1de9562405d5d2daddc" translate="yes" xml:space="preserve">
          <source>System name, defaults to the value of &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt;, except on Windows where it will be &lt;code&gt;win32&lt;/code&gt; or &lt;code&gt;win64&lt;/code&gt;.</source>
          <target state="translated">시스템 이름. 기본값은 &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 이며, Windows의 경우 &lt;code&gt;win32&lt;/code&gt; 또는 &lt;code&gt;win64&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f2b53324ad1f822a1313803306978a5bbef6e68f" translate="yes" xml:space="preserve">
          <source>System paths.</source>
          <target state="translated">시스템 경로.</target>
        </trans-unit>
        <trans-unit id="298e9ee13e57be4ad00de777f1a755fda694597b" translate="yes" xml:space="preserve">
          <source>TARGET_ARCHIVES_MAY_BE_SHARED_LIBS</source>
          <target state="translated">TARGET_ARCHIVES_MAY_BE_SHARED_LIBS</target>
        </trans-unit>
        <trans-unit id="e61c1f7c59543d90ba50a75cc48a9655647ff007" translate="yes" xml:space="preserve">
          <source>TARGET_MESSAGES</source>
          <target state="translated">TARGET_MESSAGES</target>
        </trans-unit>
        <trans-unit id="c9da51661f3bf2033a4f4b00bfdb50ea5d0150f6" translate="yes" xml:space="preserve">
          <source>TARGET_SUPPORTS_SHARED_LIBS</source>
          <target state="translated">TARGET_SUPPORTS_SHARED_LIBS</target>
        </trans-unit>
        <trans-unit id="cd7db5a5953ddd897ed242204d2ea754b2d6187a" translate="yes" xml:space="preserve">
          <source>TARGET_SUPPORTS_SHARED_LIBS is a boolean specifying whether the target platform supports shared libraries. Basically all current general general purpose OS do so, the exception are usually embedded systems with no or special OSs.</source>
          <target state="translated">TARGET_SUPPORTS_SHARED_LIBS는 대상 플랫폼이 공유 라이브러리를 지원하는지 여부를 지정하는 부울입니다. 기본적으로 현재의 모든 범용 범용 OS가 그러하지 만 예외는 일반적으로 특수 OS가 없거나 내장 된 시스템입니다.</target>
        </trans-unit>
        <trans-unit id="84ad189b260c1bb8fc55ed9fe81f0ac48f1872f4" translate="yes" xml:space="preserve">
          <source>TCL_STUB_LIBRARY_DEBUG and TK_STUB_LIBRARY_DEBUG were removed.</source>
          <target state="translated">TCL_STUB_LIBRARY_DEBUG 및 TK_STUB_LIBRARY_DEBUG가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="8a48f4ff3b57bcd488e04ed1cb10151bb53e2bba" translate="yes" xml:space="preserve">
          <source>TESTS</source>
          <target state="translated">TESTS</target>
        </trans-unit>
        <trans-unit id="95d557cd227b14decc712922a6502ad7d41f2be6" translate="yes" xml:space="preserve">
          <source>TEST_INCLUDE_FILE</source>
          <target state="translated">TEST_INCLUDE_FILE</target>
        </trans-unit>
        <trans-unit id="59eb41508a72e0454601923381f4a80653b26b62" translate="yes" xml:space="preserve">
          <source>TEST_INCLUDE_FILES</source>
          <target state="translated">TEST_INCLUDE_FILES</target>
        </trans-unit>
        <trans-unit id="e84cdbe0148c0a1634caa78db50c479e4860f77e" translate="yes" xml:space="preserve">
          <source>TIFF libraries to be linked</source>
          <target state="translated">연결할 TIFF 라이브러리</target>
        </trans-unit>
        <trans-unit id="6ec6121cd150a73105f36a36219f4e978fe2e3dc" translate="yes" xml:space="preserve">
          <source>TIMEOUT</source>
          <target state="translated">TIMEOUT</target>
        </trans-unit>
        <trans-unit id="6e3248983fc42ab0b3cc0edfef43f368667f7276" translate="yes" xml:space="preserve">
          <source>TIMEOUT_AFTER_MATCH</source>
          <target state="translated">TIMEOUT_AFTER_MATCH</target>
        </trans-unit>
        <trans-unit id="f6cc72ac81989a8f6cde43c28a4993185e882853" translate="yes" xml:space="preserve">
          <source>TK_INTERNAL_PATH was removed.</source>
          <target state="translated">TK_INTERNAL_PATH가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="68951180c414d014143c0a439e281d5b42318e89" translate="yes" xml:space="preserve">
          <source>TRUE if JNI headers and libraries were found.</source>
          <target state="translated">JNI 헤더 및 라이브러리가 발견되면 참입니다.</target>
        </trans-unit>
        <trans-unit id="dbc2c10d7928250c2cee9ea90dac58dff5596157" translate="yes" xml:space="preserve">
          <source>TRUE if found</source>
          <target state="translated">발견되면 참</target>
        </trans-unit>
        <trans-unit id="6e9816a8e9d0388eecdb52866188c04e75e4b1b3" translate="yes" xml:space="preserve">
          <source>TYPE</source>
          <target state="translated">TYPE</target>
        </trans-unit>
        <trans-unit id="3e86e3139de050e0fb8ddbf4064040b1742ed153" translate="yes" xml:space="preserve">
          <source>Tag to checkout from the CVS repository.</source>
          <target state="translated">CVS 저장소에서 체크 아웃 할 태그입니다.</target>
        </trans-unit>
        <trans-unit id="77e094e69af0c873f471d00dc9c354db1501f5b6" translate="yes" xml:space="preserve">
          <source>Take the Union of &lt;code&gt;-I&lt;/code&gt; and &lt;code&gt;-R&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-I&lt;/code&gt; 와 &lt;code&gt;-R&lt;/code&gt; 의 결합을 취하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8d5d7b5034fa846eedb6015a9fcff4f6b5ba76c" translate="yes" xml:space="preserve">
          <source>Takes a &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; argument composed of non-negative integer components, i.e. &lt;code&gt;&amp;lt;major&amp;gt;[.&amp;lt;minor&amp;gt;[.&amp;lt;patch&amp;gt;[.&amp;lt;tweak&amp;gt;]]]&lt;/code&gt;, and sets the variables</source>
          <target state="translated">얻어 &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; 은 음이 아닌 정수 부분, 즉 이루어지는 인수 &lt;code&gt;&amp;lt;major&amp;gt;[.&amp;lt;minor&amp;gt;[.&amp;lt;patch&amp;gt;[.&amp;lt;tweak&amp;gt;]]]&lt;/code&gt; , 및 집합 변수</target>
        </trans-unit>
        <trans-unit id="d19bfef24d30264190d794cde08535e96bc9f595" translate="yes" xml:space="preserve">
          <source>Takes a list of &lt;code&gt;Key=Value&lt;/code&gt; pairs. Tells the Visual Studio generator to set &lt;code&gt;Key&lt;/code&gt; to &lt;code&gt;Value&lt;/code&gt; as item metadata on all non-built files that use &lt;code&gt;&amp;lt;tool&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Key=Value&lt;/code&gt; 쌍 의 목록을 가져옵니다 . Visual Studio 생성기에 &lt;code&gt;&amp;lt;tool&amp;gt;&lt;/code&gt; 을 사용하는 빌드되지 않은 모든 파일의 항목 메타 데이터로 &lt;code&gt;Key&lt;/code&gt; 를 &lt;code&gt;Value&lt;/code&gt; 으로 설정 하도록 지시 합니다 .</target>
        </trans-unit>
        <trans-unit id="089a2d67754fa6ca0e267eebb1b0d6d78b753140" translate="yes" xml:space="preserve">
          <source>Takes a list of &lt;code&gt;Key=Value&lt;/code&gt; pairs. Tells the Visual Studio generator to set &lt;code&gt;Key&lt;/code&gt; to &lt;code&gt;Value&lt;/code&gt; as item metadata on the file.</source>
          <target state="translated">&lt;code&gt;Key=Value&lt;/code&gt; 쌍 의 목록을 가져옵니다 . 파일의 항목 메타 데이터로 &lt;code&gt;Key&lt;/code&gt; 를 &lt;code&gt;Value&lt;/code&gt; 으로 설정하도록 Visual Studio 생성기에 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="63e8a79b24c2ae53a7e5c3c8786e0c206da47dfa" translate="yes" xml:space="preserve">
          <source>Takes either a &lt;code&gt;.app&lt;/code&gt; directory name or the name of an executable nested inside a &lt;code&gt;.app&lt;/code&gt; directory and returns the path to the &lt;code&gt;.app&lt;/code&gt; directory in &lt;code&gt;&amp;lt;bundle_var&amp;gt;&lt;/code&gt; and the path to its main executable in &lt;code&gt;&amp;lt;executable_var&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">중 하나를 취 &lt;code&gt;.app&lt;/code&gt; 디렉터리 이름 또는 내부 실행 중첩의 이름 &lt;code&gt;.app&lt;/code&gt; 디렉토리 및 반환의 경로 &lt;code&gt;.app&lt;/code&gt; 에서 디렉토리 &lt;code&gt;&amp;lt;bundle_var&amp;gt;&lt;/code&gt; 과의 주요 실행 파일에 대한 경로 &lt;code&gt;&amp;lt;executable_var&amp;gt;&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="0b1db052d4b18edcc9ed63c22665966945d59d2a" translate="yes" xml:space="preserve">
          <source>Target Created:</source>
          <target state="translated">생성 된 타겟 :</target>
        </trans-unit>
        <trans-unit id="c52923f09975129bd636fe6fd699f7c680b66a60" translate="yes" xml:space="preserve">
          <source>Target Properties</source>
          <target state="translated">대상 속성</target>
        </trans-unit>
        <trans-unit id="4266916b95c35874b1b4f3c19d5cd4c513ced736" translate="yes" xml:space="preserve">
          <source>Target Type</source>
          <target state="translated">대상 유형</target>
        </trans-unit>
        <trans-unit id="1e2b75f37719d0bb5b8b642c8e9d155f1cea364a" translate="yes" xml:space="preserve">
          <source>Target architecture library directory name detected for &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; 에 대한 대상 아키텍처 라이브러리 디렉토리 이름이 발견되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ee3332bc76c87e859bad348317c6369d60b5a9d9" translate="yes" xml:space="preserve">
          <source>Target architecture library directory name, if detected.</source>
          <target state="translated">감지 된 경우 대상 아키텍처 라이브러리 디렉토리 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2df16b3d048d96dcc5d36fec643b2401f0b67b4c" translate="yes" xml:space="preserve">
          <source>Target artifacts of this kind include:</source>
          <target state="translated">이러한 종류의 대상 아티팩트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3ebb24573b2637b80bc5e4efa6ced8297769e810" translate="yes" xml:space="preserve">
          <source>Target file component generator expressions do not add target dependencies.</source>
          <target state="translated">대상 파일 구성 요소 생성기 표현식은 대상 종속성을 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60d6c662e11baa54808c127c904964f9a77e6d4d" translate="yes" xml:space="preserve">
          <source>Target for header-only dependencies. (Boost include directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3a3d5cca43d7282188458578b5caa0bead5b45" translate="yes" xml:space="preserve">
          <source>Target for specific component dependency (shared or static library); &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; name is lower-case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32620dd5e48558844009e7aa2dff85db862820c" translate="yes" xml:space="preserve">
          <source>Target for using MPI from &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 의 MPI를 사용하기위한 대상입니다 .</target>
        </trans-unit>
        <trans-unit id="f2070e0738ccf62091c040ac3935a06748061dc8" translate="yes" xml:space="preserve">
          <source>Target for using OpenACC from &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 의 OpenACC 사용 대상입니다 .</target>
        </trans-unit>
        <trans-unit id="020dea5428f6be65dc38d5b787630a1257932510" translate="yes" xml:space="preserve">
          <source>Target for using OpenMP from &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에서 OpenMP를 사용하기위한 대상입니다 .</target>
        </trans-unit>
        <trans-unit id="d3ac676025bfb8928eedca234fbf30c308e997ed" translate="yes" xml:space="preserve">
          <source>Target from which to reuse the precompiled headers build artifact.</source>
          <target state="translated">사전 컴파일 된 헤더 빌드 아티팩트를 재사용 할 대상입니다.</target>
        </trans-unit>
        <trans-unit id="4717e788c395cabf4613ef72caf0e4f7ad2bc3ee" translate="yes" xml:space="preserve">
          <source>Target installations are associated with the export &lt;code&gt;&amp;lt;export-name&amp;gt;&lt;/code&gt; using the &lt;code&gt;EXPORT&lt;/code&gt; option of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">대상 설치는 &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 명령 의 &lt;code&gt;EXPORT&lt;/code&gt; 옵션을 사용하여 내보내기 &lt;code&gt;&amp;lt;export-name&amp;gt;&lt;/code&gt; 과 연관됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b3cad6c8636951b4f87830888c1a5555ddc0b8a" translate="yes" xml:space="preserve">
          <source>Target label semantics are currently unspecified.</source>
          <target state="translated">대상 레이블 의미론은 현재 지정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f764d916ef89ba7d170bcbe560b97d9d7452e67c" translate="yes" xml:space="preserve">
          <source>Target library properties can be set to apply same configuration to all SWIG input files.</source>
          <target state="translated">모든 SWIG 입력 파일에 동일한 구성을 적용하도록 대상 라이브러리 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e3b6545b1fe34c85a321915148682de9ae65cda" translate="yes" xml:space="preserve">
          <source>Target link properties &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_link_directories#prop_tgt:INTERFACE_LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_link_depends#prop_tgt:INTERFACE_LINK_DEPENDS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_DEPENDS&quot;&gt;&lt;code&gt;INTERFACE_LINK_DEPENDS&lt;/code&gt;&lt;/a&gt; are now transitive over private dependencies of static libraries.</source>
          <target state="translated">타겟 링크 속성 &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/interface_link_directories#prop_tgt:INTERFACE_LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/interface_link_depends#prop_tgt:INTERFACE_LINK_DEPENDS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_DEPENDS&quot;&gt; &lt;code&gt;INTERFACE_LINK_DEPENDS&lt;/code&gt; &lt;/a&gt; 는 이제 정적 라이브러리의 비공개 종속성을 통해 전이됩니다.</target>
        </trans-unit>
        <trans-unit id="c425bdeb625d62168abf533e2ef77216ea030e92" translate="yes" xml:space="preserve">
          <source>Target marked with the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-1-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;bundle#prop_tgt:BUNDLE&quot; id=&quot;index-1-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt; property generate framework or application bundle (both macOS and iOS is supported) or normal shared libraries on other platforms. This property may be set to a list of files to be placed in the corresponding directory (eg. &lt;code&gt;Resources&lt;/code&gt; directory for macOS) inside the bundle. On non-Apple platforms these files may be installed using the &lt;code&gt;RESOURCE&lt;/code&gt; option to the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-1-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;bundle#prop_tgt:BUNDLE&quot; id=&quot;index-1-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; &lt;/a&gt; 특성으로 표시된 대상은 다른 플랫폼에서 프레임 워크 또는 애플리케이션 번들 (macOS 및 iOS 모두 지원됨) 또는 일반 공유 라이브러리를 생성합니다. 이 특성은 번들 내의 해당 디렉토리 (예 : macOS의 &lt;code&gt;Resources&lt;/code&gt; 디렉토리)에 배치 할 파일 목록으로 설정 될 수 있습니다 . Apple 이외의 플랫폼에서 이러한 파일은 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 명령에 대한 &lt;code&gt;RESOURCE&lt;/code&gt; 옵션을 사용하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a960d1dab4ff3008164e2e04fee1fc98ee573d9" translate="yes" xml:space="preserve">
          <source>Target names associated with optional features, such as &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;package&lt;/code&gt;, may also be reserved. CMake 3.10 and below always reserve them. CMake 3.11 and above reserve them only when the corresponding feature is enabled (e.g. by including the &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../module/cpack#module:CPack&quot; id=&quot;index-0-module:CPack&quot;&gt;&lt;code&gt;CPack&lt;/code&gt;&lt;/a&gt; modules).</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;package&lt;/code&gt; 와 같은 선택적 기능과 관련된 대상 이름 도 예약 될 수 있습니다. CMake 3.10 이하는 항상 예약합니다. CMake 3.11 이상 보호구 그들을 해당 기능이 활성화되는 경우에만 (예를 포함하여 &lt;a href=&quot;../module/ctest#module:CTest&quot; id=&quot;index-0-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../module/cpack#module:CPack&quot; id=&quot;index-0-module:CPack&quot;&gt; &lt;code&gt;CPack&lt;/code&gt; &lt;/a&gt; 모듈).</target>
        </trans-unit>
        <trans-unit id="267839fdf3aeb05bb3414c69708f66fe0d772c6e" translate="yes" xml:space="preserve">
          <source>Target names may contain upper and lower case letters, numbers, the underscore character (&lt;code&gt;_&lt;/code&gt;), dot(&lt;code&gt;.&lt;/code&gt;), plus(&lt;code&gt;+&lt;/code&gt;) and minus(&lt;code&gt;-&lt;/code&gt;). As a special case, &lt;code&gt;ALIAS&lt;/code&gt; and &lt;code&gt;IMPORTED&lt;/code&gt; targets may contain two consecutive colons.</source>
          <target state="translated">대상 이름에는 대문자, 소문자, 숫자, 밑줄 문자 ( &lt;code&gt;_&lt;/code&gt; ), 점 ( &lt;code&gt;.&lt;/code&gt; ), 더하기 ( &lt;code&gt;+&lt;/code&gt; ) 및 빼기 ( &lt;code&gt;-&lt;/code&gt; ) 가 포함될 수 있습니다 . 특별한 경우, &lt;code&gt;ALIAS&lt;/code&gt; 및 &lt;code&gt;IMPORTED&lt;/code&gt; 대상에는 두 개의 연속 콜론이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b14bbfbf9214a2d8b6243ea0eac293c3f184934d" translate="yes" xml:space="preserve">
          <source>Target names reserved by one or more CMake generators are not allowed. Among others these include &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;clean&lt;/code&gt;, &lt;code&gt;help&lt;/code&gt;, and &lt;code&gt;install&lt;/code&gt;.</source>
          <target state="translated">하나 이상의 CMake 생성기에서 예약 한 대상 이름은 허용되지 않습니다. 그 중에서도이 포함 &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;clean&lt;/code&gt; , &lt;code&gt;help&lt;/code&gt; 및 &lt;code&gt;install&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd05008007f60493838329c1408f91a39eaf97a4" translate="yes" xml:space="preserve">
          <source>Target names should not be reserved and should match a validity pattern.</source>
          <target state="translated">대상 이름은 예약되어서는 안되며 유효성 패턴과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="8d9cb18bb5964bcaf131931b1d77906405ea3c66" translate="yes" xml:space="preserve">
          <source>Target objects define individual build targets for a certain configuration.</source>
          <target state="translated">대상 객체는 특정 구성에 대한 개별 빌드 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="832b31b4b1c57f85ca5b3590984d4a1b39140fe2" translate="yes" xml:space="preserve">
          <source>Target specific architectures for macOS and iOS.</source>
          <target state="translated">macOS 및 iOS를위한 특정 아키텍처를 대상으로합니다.</target>
        </trans-unit>
        <trans-unit id="b7e69cb54c1e247d1331637b3c631c76f5d34413" translate="yes" xml:space="preserve">
          <source>Target specific architectures for macOS.</source>
          <target state="translated">macOS를위한 특정 아키텍처를 대상으로합니다.</target>
        </trans-unit>
        <trans-unit id="272b99a4c5e2434c994eb984356aa2472fe42d5f" translate="yes" xml:space="preserve">
          <source>Target-Dependent Queries</source>
          <target state="translated">타겟 종속 쿼리</target>
        </trans-unit>
        <trans-unit id="36aeded5109e355aa85b3f52b789ed8c77ee66f5" translate="yes" xml:space="preserve">
          <source>Targets Created:</source>
          <target state="translated">생성 된 타겟 :</target>
        </trans-unit>
        <trans-unit id="a8cb40bb557f780e6c502ac5157e58ccfb47aaec" translate="yes" xml:space="preserve">
          <source>Targets are aware of their dependencies, so for example it is not necessary to list &lt;code&gt;Qt4::QtCore&lt;/code&gt; if another Qt library is listed, and it is not necessary to list &lt;code&gt;Qt4::QtGui&lt;/code&gt; if &lt;code&gt;Qt4::QtDeclarative&lt;/code&gt; is listed. Targets may be tested for existence in the usual way with the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(TARGET)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">대상은 그래서 예를 들어이 나열 할 필요는 없습니다, 종속성을 알고 &lt;code&gt;Qt4::QtCore&lt;/code&gt; 다른 Qt는 라이브러리가 나열되어 있는지, 그리고 목록에 필요하지 않습니다 &lt;code&gt;Qt4::QtGui&lt;/code&gt; 경우 &lt;code&gt;Qt4::QtDeclarative&lt;/code&gt; 나열됩니다. &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if(TARGET)&lt;/code&gt; &lt;/a&gt; 명령 을 사용하여 일반적인 방식으로 대상이 존재하는지 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a84bf9e8bfa891d12dd14137c4593ab06b9bf86b" translate="yes" xml:space="preserve">
          <source>Targets can have properties that affect how they are built.</source>
          <target state="translated">대상은 작성 방법에 영향을주는 특성을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2d9a85ab25998e4fdd64733adcdd362f5304968" translate="yes" xml:space="preserve">
          <source>Targets created with the &lt;code&gt;swig_add_library&lt;/code&gt; command have the same capabilities as targets created with the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command, so those targets can be used with any command expecting a target (e.g. &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">로 작성된 표적 &lt;code&gt;swig_add_library&lt;/code&gt; 명령으로 만들어진 타겟과 동일한 기능을 가지고 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 그 대상이 타겟 기대 모든 명령과 함께 사용할 수 있도록 명령을 (예 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="97b4862b8ef86aa32e9d19d0e0cec84aa1e572b9" translate="yes" xml:space="preserve">
          <source>Targets inherit the &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; property from the directory that they are created in. When a directory is excluded, all of its targets will have &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-1-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;TRUE&lt;/code&gt;. After creating such a target you can change its &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-2-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt;&lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;FALSE&lt;/code&gt;. This will cause the target to be included in the default build target.</source>
          <target state="translated">대상 은 작성된 디렉토리에서 &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-0-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt; 특성을 상속합니다 . 디렉토리가 제외되면 모든 대상에 &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-1-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;TRUE&lt;/code&gt; 로 설정됩니다 . 이러한 대상을 작성한 후 &lt;a href=&quot;../prop_tgt/exclude_from_all#prop_tgt:EXCLUDE_FROM_ALL&quot; id=&quot;index-2-prop_tgt:EXCLUDE_FROM_ALL&quot;&gt; &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; &lt;/a&gt; 특성을 &lt;code&gt;FALSE&lt;/code&gt; 로 변경할 수 있습니다 . 그러면 타겟이 기본 빌드 타겟에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1f6021b72090452ba4593667d6c5c10674b5d7ff" translate="yes" xml:space="preserve">
          <source>Targets may not link directly to themselves.</source>
          <target state="translated">대상은 자신에게 직접 연결되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee2774ed0c28cedadba19b66ea6ea16c6b47877e" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the compile definitions required to compile against the headers for the target. The &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은 대상의 헤더에 대해 컴파일하는 데 필요한 컴파일 정의를 게시하기 위해이 속성을 채울 수 있습니다. &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e24f7638a1cce86fd7a95997930839b5abd1af2e" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the compile definitions required to compile against the headers for the target. The &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은이 속성을 채워 대상의 헤더에 대해 컴파일하는 데 필요한 컴파일 정의를 게시 할 수 있습니다. &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7b796e255c23ec35b60e57ab4d9098e291cc061" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the compile features required to compile against the headers for the target. The &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-0-command:target_compile_features&quot;&gt;&lt;code&gt;target_compile_features()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은 대상의 헤더에 대해 컴파일하는 데 필요한 컴파일 기능을 게시하기 위해이 속성을 채울 수 있습니다. &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-0-command:target_compile_features&quot;&gt; &lt;code&gt;target_compile_features()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6132ccc56d6cb97aacc33ae07a360bdffb3ed7f0" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the compile features required to compile against the headers for the target. The &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-1-command:target_compile_features&quot;&gt;&lt;code&gt;target_compile_features()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은이 속성을 채워 대상의 헤더에 대해 컴파일하는 데 필요한 컴파일 기능을 게시 할 수 있습니다. &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-1-command:target_compile_features&quot;&gt; &lt;code&gt;target_compile_features()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b98160ea4b3b90e151953cc4ab2fe6d961e5f94e" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the compile options required to compile against the headers for the target. The &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은 대상의 헤더에 대해 컴파일하는 데 필요한 컴파일 옵션을 게시하기 위해이 속성을 채울 수 있습니다. &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f29754acb762af8c136a2a83924d8675a13b5fa" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the compile options required to compile against the headers for the target. The &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은이 속성을 채워 대상의 헤더에 대해 컴파일하는 데 필요한 컴파일 옵션을 게시 할 수 있습니다. &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f6ab8dbd4ce2a190bd7318b8a67af5c9077cc3c" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the header files for consuming targets to precompile. The &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-0-command:target_precompile_headers&quot;&gt;&lt;code&gt;target_precompile_headers()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly. See the discussion in &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-1-command:target_precompile_headers&quot;&gt;&lt;code&gt;target_precompile_headers()&lt;/code&gt;&lt;/a&gt; for guidance on appropriate use of this property for installed or exported targets.</source>
          <target state="translated">대상은 사전 컴파일 할 대상을 사용하기 위해 헤더 파일을 게시하기 위해이 속성을 채울 수 있습니다. &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-0-command:target_precompile_headers&quot;&gt; &lt;code&gt;target_precompile_headers()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다. 설치되거나 내 보낸 대상에 대해이 속성을 적절하게 사용하는 방법에 대한 지침 은 &lt;a href=&quot;../command/target_precompile_headers#command:target_precompile_headers&quot; id=&quot;index-1-command:target_precompile_headers&quot;&gt; &lt;code&gt;target_precompile_headers()&lt;/code&gt; &lt;/a&gt; 의 토론을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb0590a0eb4ea47a8dd11b4c3106391bf35e2b32" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the include directories required to compile against the headers for the target. The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은 대상의 헤더에 대해 컴파일하는 데 필요한 포함 디렉터리를 게시하기 위해이 속성을 채울 수 있습니다. &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="89eac6226730278071429f61ba950ab26ac97831" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the include directories required to compile against the headers for the target. The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은이 속성을 채워 대상의 헤더에 대해 컴파일하는 데 필요한 포함 디렉토리를 게시 할 수 있습니다. &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c852eafc0dbe82fa137a6e67198df0345657548d" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the include directories which contain system headers, and therefore should not result in compiler warnings. The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories(SYSTEM)&lt;/code&gt;&lt;/a&gt; command signature populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords.</source>
          <target state="translated">대상은 시스템 헤더를 포함하는 포함 디렉토리를 공개하기 위해이 특성을 채우므로 컴파일러 경고가 발생하지 않아야합니다. &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories(SYSTEM)&lt;/code&gt; &lt;/a&gt; 명령 서명은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드.</target>
        </trans-unit>
        <trans-unit id="e100f3f44539cadb497ebb75cc478609a0ef5744" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the link directories required to compile against the headers for the target. The &lt;a href=&quot;../command/target_link_directories#command:target_link_directories&quot; id=&quot;index-0-command:target_link_directories&quot;&gt;&lt;code&gt;target_link_directories()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은 대상의 헤더에 대해 컴파일하는 데 필요한 링크 디렉토리를 게시하기 위해이 속성을 채울 수 있습니다. &lt;a href=&quot;../command/target_link_directories#command:target_link_directories&quot; id=&quot;index-0-command:target_link_directories&quot;&gt; &lt;code&gt;target_link_directories()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ddc6b90ed781dc49add9f4a37d3f01fd3021162" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the link directories required to compile against the headers for the target. The &lt;a href=&quot;../command/target_link_directories#command:target_link_directories&quot; id=&quot;index-1-command:target_link_directories&quot;&gt;&lt;code&gt;target_link_directories()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은이 속성을 채워 대상의 헤더에 대해 컴파일하는 데 필요한 링크 디렉토리를 게시 할 수 있습니다. &lt;a href=&quot;../command/target_link_directories#command:target_link_directories&quot; id=&quot;index-1-command:target_link_directories&quot;&gt; &lt;code&gt;target_link_directories()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ad15ea72de0016c71fbbaeadfd9182d63b8c0b4" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the link options required to compile against the headers for the target. The &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은 대상의 헤더에 대해 컴파일하는 데 필요한 링크 옵션을 게시하기 위해이 속성을 채울 수 있습니다. &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt; &lt;code&gt;target_link_options()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="29f87f967088a3c23b0d754fd2e651d70ed23f81" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the link options required to compile against the headers for the target. The &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-1-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은이 속성을 채워 대상의 헤더에 대해 컴파일하는 데 필요한 링크 옵션을 게시 할 수 있습니다. &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-1-command:target_link_options&quot;&gt; &lt;code&gt;target_link_options()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e607eeda29404bcd29d0e818fcf8b76714caa1a" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the options required to use when invoking &lt;code&gt;uic&lt;/code&gt;. Consuming targets can add entries to their own &lt;a href=&quot;autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; property such as &lt;code&gt;$&amp;lt;TARGET_PROPERTY:foo,INTERFACE_AUTOUIC_OPTIONS&amp;gt;&lt;/code&gt; to use the uic options specified in the interface of &lt;code&gt;foo&lt;/code&gt;. This is done automatically by the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">대상은이 속성을 채워 &lt;code&gt;uic&lt;/code&gt; 를 호출 할 때 필요한 옵션을 게시 할 수 있습니다 . 소비 대상은 자신에 항목을 추가 할 수 있습니다 &lt;a href=&quot;autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; 의&lt;/a&gt; 같은 특성 &lt;code&gt;$&amp;lt;TARGET_PROPERTY:foo,INTERFACE_AUTOUIC_OPTIONS&amp;gt;&lt;/code&gt; 의 인터페이스에 지정된 UIC 옵션을 사용하여 &lt;code&gt;foo&lt;/code&gt; 는 . 이것은 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령에 의해 자동으로 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="b37f01b82b2b9c38a190c26f265147465aa7fc8e" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the sources for consuming targets to compile. The &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="translated">대상은이 속성을 채워 컴파일 할 대상 소비 소스를 게시 할 수 있습니다. &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt; 명령은 주어진 값이 부동산 웁니다 &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드. 프로젝트는 속성을 직접 가져오고 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ba9a699a1790f8527854f8e95d31440c6d6fc79" translate="yes" xml:space="preserve">
          <source>Targets names created with &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; are logical build target names. Logical target names must be globally unique because:</source>
          <target state="translated">로 만든 대상 이름 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; 논리적 빌드 타겟 이름입니다. 논리 대상 이름은 다음과 같은 이유로 전역 적으로 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="a29d5d45336a72ee7fd70fbcf4081cc09e334c22" translate="yes" xml:space="preserve">
          <source>Targets on which the javah target depends.</source>
          <target state="translated">javah 대상이 의존하는 대상.</target>
        </trans-unit>
        <trans-unit id="7a57687093098124c4c0cac8f9636ad7a82043c6" translate="yes" xml:space="preserve">
          <source>Targets package and package_source</source>
          <target state="translated">대상 패키지 및 package_source</target>
        </trans-unit>
        <trans-unit id="7c2ef85d7f1446b826ae1c60c498775e6fa9d28e" translate="yes" xml:space="preserve">
          <source>Targets which have their &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;ON&lt;/code&gt; have a corresponding &lt;code&gt;_autogen&lt;/code&gt; target which generates &lt;code&gt;moc&lt;/code&gt; and &lt;code&gt;uic&lt;/code&gt; files. As this &lt;code&gt;_autogen&lt;/code&gt; target is created at generate-time, it is not possible to define dependencies of it using e.g. &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;. Instead the &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; target property decides whether the origin target dependencies should be forwarded to the &lt;code&gt;_autogen&lt;/code&gt; target or not.</source>
          <target state="translated">자신이 대상 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 의&lt;/a&gt; 속성은 &lt;code&gt;ON&lt;/code&gt; 대응이 &lt;code&gt;_autogen&lt;/code&gt; 의 생성 대상 &lt;code&gt;moc&lt;/code&gt; 및 &lt;code&gt;uic&lt;/code&gt; 파일을. 이 &lt;code&gt;_autogen&lt;/code&gt; 대상은 생성시 작성 &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; 사용하여 대상의 종속성을 정의 할 수 없습니다 . 대신 &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; &lt;/a&gt; 대상 속성은 오리진 대상 종속성이 &lt;code&gt;_autogen&lt;/code&gt; 대상 으로 전달되어야하는지 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="15fa27bc7e6190e73dc724dbd881c916907b3f01" translate="yes" xml:space="preserve">
          <source>Targets which have their &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;ON&lt;/code&gt; have a corresponding &lt;code&gt;_autogen&lt;/code&gt; target which generates &lt;code&gt;moc&lt;/code&gt; and &lt;code&gt;uic&lt;/code&gt; files. As this &lt;code&gt;_autogen&lt;/code&gt; target is created at generate-time, it is not possible to define dependencies of it using e.g. &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;. Instead the &lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; target property can be set to a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of additional dependencies for the &lt;code&gt;_autogen&lt;/code&gt; target. Dependencies can be target names or file names.</source>
          <target state="translated">자신이 대상 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 의&lt;/a&gt; 속성은 &lt;code&gt;ON&lt;/code&gt; 대응이 &lt;code&gt;_autogen&lt;/code&gt; 의 생성 대상 &lt;code&gt;moc&lt;/code&gt; 및 &lt;code&gt;uic&lt;/code&gt; 파일을. 이 &lt;code&gt;_autogen&lt;/code&gt; 대상은 생성시 작성 &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; 사용하여 대상의 종속성을 정의 할 수 없습니다 . 대신 &lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; 의&lt;/a&gt; 대상 속성은 설정할 수 있습니다 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;-list,&lt;/a&gt; 에 대한 추가 종속성 &lt;code&gt;_autogen&lt;/code&gt; 의 대상입니다. 종속성은 대상 이름 또는 파일 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eeb0892952f7a71ebb4c7840d5fe2b60b37ee74d" translate="yes" xml:space="preserve">
          <source>Targets with no &lt;code&gt;FOLDER&lt;/code&gt; property will appear as top level entities in IDEs like Visual Studio. Targets with the same &lt;code&gt;FOLDER&lt;/code&gt; property value will appear next to each other in a folder of that name. To nest folders, use &lt;code&gt;FOLDER&lt;/code&gt; values such as &amp;lsquo;GUI/Dialogs&amp;rsquo; with &amp;lsquo;/&amp;rsquo; characters separating folder levels.</source>
          <target state="translated">&lt;code&gt;FOLDER&lt;/code&gt; 속성이 없는 대상은 Visual Studio와 같은 IDE에서 최상위 개체로 나타납니다. 동일한 &lt;code&gt;FOLDER&lt;/code&gt; 속성 값을 가진 대상 은 해당 이름의 폴더에서 서로 옆에 나타납니다. 폴더를 중첩하려면 폴더 레벨을 구분하는 '/'문자와 함께 'GUI / Dialogs'와 같은 &lt;code&gt;FOLDER&lt;/code&gt; 값을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4c2cfc16ccc63341382b6a5dffaad2e8480e18e" translate="yes" xml:space="preserve">
          <source>Targets with no &lt;code&gt;FOLDER&lt;/code&gt; property will appear as top level entities in IDEs like Visual Studio. Targets with the same &lt;code&gt;FOLDER&lt;/code&gt; property value will appear next to each other in a folder of that name. To nest folders, use &lt;code&gt;FOLDER&lt;/code&gt; values such as 'GUI/Dialogs' with '/' characters separating folder levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f88efe526e2ca6b816ce4d91f4123e18183149" translate="yes" xml:space="preserve">
          <source>Tell &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; to try &quot;Config&quot; mode before &quot;Module&quot; mode if no mode was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8bab2e3b62d33540571855f5b2c40a3c73d64a" translate="yes" xml:space="preserve">
          <source>Tell &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; to try &amp;ldquo;Config&amp;rdquo; mode before &amp;ldquo;Module&amp;rdquo; mode if no mode was specified.</source>
          <target state="translated">모드가 지정되지 않은 경우 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 에게 &amp;ldquo;모듈&amp;rdquo;모드 전에&amp;ldquo;구성&amp;rdquo;모드를 시도하도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="4415b9f2a6c061ef88ec96c28bc56fcc835ed510" translate="yes" xml:space="preserve">
          <source>Tell &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; to warn if called without an explicit mode.</source>
          <target state="translated">말할 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명시 적 모드없이 호출하면 경고합니다.</target>
        </trans-unit>
        <trans-unit id="32181fd7f67eef799614b45bf0a4aa30c9f55550" translate="yes" xml:space="preserve">
          <source>Tell &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above that the target platform compiles as WinRT by default (compiles with &lt;code&gt;/ZW&lt;/code&gt;).</source>
          <target state="translated">에게 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기를&lt;/a&gt; VS 2010 이상이 기본적으로 WinRT으로 대상 플랫폼 컴파일 (와 컴파일 &lt;code&gt;/ZW&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="28a1ba0c6b0fc6fd3ac5445c0aa6e656175fd59f" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;bison&lt;/code&gt; to write a report file of the grammar and parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a469df40d30dc59ea509aab876df923e9e1048" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;bison&lt;/code&gt; to write a report file of the grammar and parser. If &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; is given, it specifies path the report file is copied to. &lt;code&gt;[&amp;lt;file&amp;gt;]&lt;/code&gt; is left for backward compatibility of this module. Use &lt;code&gt;VERBOSE REPORT_FILE &amp;lt;file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bison&lt;/code&gt; 에게 문법과 파서의 보고서 파일을 쓰도록 지시하십시오. 경우 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 주어,이 보고서 파일이 복사됩니다 경로를 지정합니다. 이 모듈의 이전 버전과의 호환성을 위해 &lt;code&gt;[&amp;lt;file&amp;gt;]&lt;/code&gt; 이 (가) 남아 있습니다. &lt;code&gt;VERBOSE REPORT_FILE &amp;lt;file&amp;gt;&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4e91aa3fc3b6fac02db3e83c00f3324e5d532b4" translate="yes" xml:space="preserve">
          <source>Tell CMake about additional input files to the configuration process. If any named file is modified the build system will re-run CMake to re-configure the file and generate the build system again.</source>
          <target state="translated">구성 프로세스에 대한 추가 입력 파일에 대해 CMake에 알리십시오. 명명 된 파일이 수정되면 빌드 시스템은 CMake를 다시 실행하여 파일을 재구성하고 빌드 시스템을 다시 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7fd68194f887cc8d3839c2c33b26a67d81fc3367" translate="yes" xml:space="preserve">
          <source>Tell CMake to use the &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior for a given policy. Projects depending on the old behavior of a given policy may silence a policy warning by setting the policy state to &lt;code&gt;OLD&lt;/code&gt;. Alternatively one may fix the project to work with the new behavior and set the policy state to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">CMake에게 특정 정책에 대해 &lt;code&gt;OLD&lt;/code&gt; 또는 &lt;code&gt;NEW&lt;/code&gt; 동작 을 사용하도록 지시하십시오 . 지정된 정책의 이전 동작에 따라 프로젝트는 정책 상태를 &lt;code&gt;OLD&lt;/code&gt; 로 설정하여 정책 경고를 무시할 수 있습니다. 또는 새 동작으로 작업하도록 프로젝트를 수정하고 정책 상태를 &lt;code&gt;NEW&lt;/code&gt; 로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad6286022a7c45159d56e83fad25b0ba804531e6" translate="yes" xml:space="preserve">
          <source>Tell CTest to suppress most non-error messages that it would have otherwise printed to the console. CTest will still report the new revision of the repository and any conflicting files that were found.</source>
          <target state="translated">콘솔에 인쇄되었을 것이라는 오류가 아닌 대부분의 메시지를 억제하도록 CTest에 지시하십시오. CTest는 저장소의 새로운 개정판과 발견 된 충돌 파일을 계속보고합니다.</target>
        </trans-unit>
        <trans-unit id="dd2ed1bbc6e4bfebed8ea4043e27b13890ac2272" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;../command/ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; command how to checkout or initialize the source directory in a &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; dashboard client script.</source>
          <target state="translated">에게 &lt;a href=&quot;../command/ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt; &lt;code&gt;ctest_start()&lt;/code&gt; &lt;/a&gt; 방법을 체크 아웃에 명령을하거나에서 소스 디렉토리를 초기화 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 대시 보드 클라이언트 스크립트.</target>
        </trans-unit>
        <trans-unit id="5fb0beacbfd7cd8e9bdfe0d1e7f8a9a32bd4a7ce" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;Visual Studio generators&lt;/code&gt;&lt;/a&gt; to set the source file tag &lt;code&gt;&amp;lt;tagname&amp;gt;&lt;/code&gt; to a given value in the generated Visual Studio CSharp project. Ignored on other generators and languages. This property can be used to define dependencies between source files or set any other Visual Studio specific parameters.</source>
          <target state="translated">생성 된 Visual Studio CSharp 프로젝트 에서 소스 파일 태그 &lt;code&gt;&amp;lt;tagname&amp;gt;&lt;/code&gt; 을 지정된 값 으로 설정 하도록 &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;Visual Studio generators&lt;/code&gt; &lt;/a&gt; 지시하십시오 . 다른 생성기 및 언어에서는 무시되었습니다. 이 속성은 소스 파일 간의 종속성을 정의하거나 다른 Visual Studio 특정 매개 변수를 설정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="334e2dbd549912f6b7b79ab79e2674071b44db29" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator to set &amp;lsquo;&amp;lt;an-attribute&amp;gt;&amp;rsquo; to a given value in the generated Xcode project. Ignored on other generators.</source>
          <target state="translated">생성 된 Xcode 프로젝트에서 '&amp;lt;an-attribute&amp;gt;'를 지정된 값으로 설정 하도록 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기에 지시하십시오. 다른 발전기에서는 무시되었습니다.</target>
        </trans-unit>
        <trans-unit id="0d696a9beb3cd0e0ee70ec717d57b14326292cbb" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator to set &amp;lsquo;&amp;lt;an-attribute&amp;gt;&amp;rsquo; to a given value in the generated Xcode project. Ignored on other generators.</source>
          <target state="translated">생성 된 Xcode 프로젝트에서 '&amp;lt;an-attribute&amp;gt;'를 주어진 값으로 설정 하도록 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기에 지시하십시오. 다른 생성기에서는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="79316a1d5ef6adca42e39b23aa38d70fb4bc1992" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator the relative path to use when embedding the items specified by &lt;code&gt;XCODE_EMBED_&amp;lt;type&amp;gt;&lt;/code&gt;. The path is relative to the base location of the &lt;code&gt;Embed XXX&lt;/code&gt; build phase associated with &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f42e98d5866debf2a69b5894370be7c83dbefd7" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator to embed the specified list of items into the target bundle. &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; specifies the embed build phase to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba34bcda76279894a8150e11ca224ebb60bf18e" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator to perform code signing for all the frameworks and libraries that are embedded using the &lt;code&gt;XCODE_EMBED_FRAMEWORKS&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bb008a4c01b675708604a1f63cfc0f4b1cc14d" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator to remove headers from all the frameworks that are embedded using the &lt;code&gt;XCODE_EMBED_FRAMEWORKS&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d481ae9c37c99fd72a6ea35882762702ee8b33aa" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator to set &lt;code&gt;&amp;lt;an-attribute&amp;gt;&lt;/code&gt; to a given value in the generated Xcode project. Ignored on other generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c852574a5147ce60c92ce537329b7c5b6f05b85d" translate="yes" xml:space="preserve">
          <source>Tell the Visual Studio generator to set the global variable &amp;lsquo;&amp;lt;variable&amp;gt;&amp;rsquo; to a given value in the generated Visual Studio project. Ignored on other generators. Qt integration works better if VS_GLOBAL_QtVersion is set to the version FindQt4.cmake found. For example, &amp;ldquo;4.7.3&amp;rdquo;</source>
          <target state="translated">생성 된 Visual Studio 프로젝트에서 전역 변수 '&amp;lt;variable&amp;gt;'을 지정된 값으로 설정하도록 Visual Studio 생성기에 지시하십시오. 다른 발전기에서는 무시되었습니다. VS_GLOBAL_QtVersion이 찾은 버전의 FindQt4.cmake로 설정되면 Qt 통합이 더 잘 작동합니다. 예를 들어&amp;ldquo;4.7.3&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b1d6d043dc2050454166b3a0108eca3e99e0638b" translate="yes" xml:space="preserve">
          <source>Tell the Visual Studio generator to set the global variable '&amp;lt;variable&amp;gt;' to a given value in the generated Visual Studio project. Ignored on other generators. Qt integration works better if VS_GLOBAL_QtVersion is set to the version FindQt4.cmake found. For example, &quot;4.7.3&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b0505825761edbf45f1f8e900192e216df83db" translate="yes" xml:space="preserve">
          <source>Tells the internal CMake engine that a source file is generated by an outside process such as another build step, or the execution of CMake itself. This information is then used to exempt the file from any existence or validity checks.</source>
          <target state="translated">소스 파일이 다른 빌드 단계와 같은 외부 프로세스 또는 CMake 자체 실행에 의해 생성되었음을 내부 CMake 엔진에 알립니다. 그런 다음이 정보를 사용하여 파일의 존재 또는 유효성 검사를 면제합니다.</target>
        </trans-unit>
        <trans-unit id="4edd544cc9ddbb5bf1ca63649dcad6556ddd5837" translate="yes" xml:space="preserve">
          <source>Tells the internal CMake engine that a source file is generated by an outside process such as another build step, or the execution of CMake itself. This information is then used to exempt the file from any existence or validity checks. Generated files are created by the execution of commands such as &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GENERATE)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내부 CMake 엔진에 소스 파일이 다른 빌드 단계 또는 CMake 자체의 실행과 같은 외부 프로세스에 의해 생성되었음을 알립니다. 그런 다음이 정보는 파일의 존재 또는 유효성 검사를 면제하는 데 사용됩니다. 생성 된 파일은 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GENERATE)&lt;/code&gt; &lt;/a&gt; 와 같은 명령을 실행하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="0cee3ef0596909282f9348b3645652b00941ffc2" translate="yes" xml:space="preserve">
          <source>Tells what mode the current running script is in. Could be one of several values:</source>
          <target state="translated">현재 실행중인 스크립트의 모드를 알려줍니다. 여러 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df39c5d07536983be692c4c34d2f11d53d739649" translate="yes" xml:space="preserve">
          <source>Template aliases, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2258.pdf&quot;&gt;N2258&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2258.pdf&quot;&gt;N2258에&lt;/a&gt; 정의 된 템플릿 별명 .</target>
        </trans-unit>
        <trans-unit id="7fd753e245a696f869eb19b8e51d0ab9e52f85e9" translate="yes" xml:space="preserve">
          <source>Template template parameters, as defined in &lt;code&gt;ISO/IEC 14882:1998&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ISO/IEC 14882:1998&lt;/code&gt; 에 정의 된 템플릿 템플릿 매개 변수 .</target>
        </trans-unit>
        <trans-unit id="03ecb08e7bd1ff827ef32442a6efe2409261ea43" translate="yes" xml:space="preserve">
          <source>Terminate the operation after a given total time has elapsed.</source>
          <target state="translated">주어진 총 시간이 지난 후에 작업을 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="3514477f1012a39cd1ad0bae76d69843d0321cba" translate="yes" xml:space="preserve">
          <source>Terminate the operation after a period of inactivity.</source>
          <target state="translated">일정 기간 사용하지 않으면 작동을 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="0c8761477cff9df258163aabdefdebf67bc897b3" translate="yes" xml:space="preserve">
          <source>Test Preset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecaa6e23ee8a2a6a7036215b81f41db1ebbe647c" translate="yes" xml:space="preserve">
          <source>Test for compiler support of ANSI sstream header</source>
          <target state="translated">ANSI sstream 헤더의 컴파일러 지원 테스트</target>
        </trans-unit>
        <trans-unit id="0bde996fff8f32b0ef6d64f49dbe27d1678e18e6" translate="yes" xml:space="preserve">
          <source>Test for compiler support of ANSI stream headers iostream, etc.</source>
          <target state="translated">ANSI 스트림 헤더 iostream 등의 컴파일러 지원 테스트</target>
        </trans-unit>
        <trans-unit id="1285505d64af79f694d00731307219e203105409" translate="yes" xml:space="preserve">
          <source>Test for std:: namespace support</source>
          <target state="translated">std :: 네임 스페이스 지원 테스트</target>
        </trans-unit>
        <trans-unit id="57b0a29c7687e2b1431b9462fd41ba69243eec58" translate="yes" xml:space="preserve">
          <source>Test name.</source>
          <target state="translated">테스트 이름.</target>
        </trans-unit>
        <trans-unit id="da4066c4dae4951fb938b1668b1fd73e8b316c3c" translate="yes" xml:space="preserve">
          <source>Test output is normally suppressed and only summary information is displayed. This option will show all test output.</source>
          <target state="translated">테스트 출력은 정상적으로 억제되고 요약 정보 만 표시됩니다. 이 옵션은 모든 테스트 출력을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="daba73a8837f301ae447ffefcc20564c86ce1396" translate="yes" xml:space="preserve">
          <source>Test output is normally suppressed and only summary information is displayed. This option will show even more test output.</source>
          <target state="translated">테스트 출력은 정상적으로 억제되고 요약 정보 만 표시됩니다. 이 옵션은 더 많은 테스트 출력을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b5aadacf2d255bca83abe81bf206dcbf424bc7d7" translate="yes" xml:space="preserve">
          <source>Test properties. Can contain keys for each of the supported test properties.</source>
          <target state="translated">테스트 속성. 지원되는 각 테스트 속성에 대한 키를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5e055e30dc33d3ee5bb67c917672b931fb22890" translate="yes" xml:space="preserve">
          <source>Test the software by loading a &lt;code&gt;CTestTestfile.cmake&lt;/code&gt; from the build tree and executing the defined tests. Record the output and result of each test. See the &lt;a href=&quot;#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt; section below.</source>
          <target state="translated">빌드 트리에서 &lt;code&gt;CTestTestfile.cmake&lt;/code&gt; 를 로드 하고 정의 된 테스트를 실행 하여 소프트웨어를 테스트하십시오. 각 테스트의 결과와 결과를 기록하십시오. 아래의 &lt;a href=&quot;#ctest-test-step&quot;&gt;CTest 테스트 단계&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="37db003d5c3654f03a78b369b608116ad632c2c5" translate="yes" xml:space="preserve">
          <source>TestBigEndian</source>
          <target state="translated">TestBigEndian</target>
        </trans-unit>
        <trans-unit id="e2ee93c5d0cae5fd67814b1bf734e66b551eca45" translate="yes" xml:space="preserve">
          <source>TestCXXAcceptsFlag</source>
          <target state="translated">TestCXXAcceptsFlag</target>
        </trans-unit>
        <trans-unit id="3a4bd58a2a92988389a2089b7ff6bd59c1b12e90" translate="yes" xml:space="preserve">
          <source>TestForANSIForScope</source>
          <target state="translated">TestForANSIForScope</target>
        </trans-unit>
        <trans-unit id="f6b13df3e8d899cc581cd3695d0d6eadd0612ecb" translate="yes" xml:space="preserve">
          <source>TestForANSIStreamHeaders</source>
          <target state="translated">TestForANSIStreamHeaders</target>
        </trans-unit>
        <trans-unit id="7b710d20d6652000a05d360fb95aa8eea607394f" translate="yes" xml:space="preserve">
          <source>TestForSSTREAM</source>
          <target state="translated">TestForSSTREAM</target>
        </trans-unit>
        <trans-unit id="eb5e0a0a2e9418e1cb468b04a1a1e524c74a8b78" translate="yes" xml:space="preserve">
          <source>TestForSTDNamespace</source>
          <target state="translated">TestForSTDNamespace</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="b0dc2bc21c247a5571b90bbf8d4ccf5bb44fc915" translate="yes" xml:space="preserve">
          <source>Testing Support</source>
          <target state="translated">테스트 지원</target>
        </trans-unit>
        <trans-unit id="8aeb55de6c4fd53076afa2ff8faf01720b1a13a2" translate="yes" xml:space="preserve">
          <source>Tests can be excluded by regular expression too. To run only tests without &lt;code&gt;Qt&lt;/code&gt; in their name:</source>
          <target state="translated">정규 표현식으로도 테스트를 제외 할 수 있습니다. 이름에 &lt;code&gt;Qt&lt;/code&gt; 없이 테스트 만 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="fa29277ce84210493f8316af08213c4633902fef" translate="yes" xml:space="preserve">
          <source>Tests can be run in parallel by passing &lt;code&gt;-j&lt;/code&gt; arguments to &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-3-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;-j&lt;/code&gt; 인수를 &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-3-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 에 전달하여 테스트를 병렬로 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87e1ea9cae96fea95758d9329d1e8e7940ed0029" translate="yes" xml:space="preserve">
          <source>Text to be printed when the custom step executes.</source>
          <target state="translated">사용자 정의 단계가 실행될 때 인쇄 할 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="0e2970ca827e3d578458182ec5d98fe0291600fe" translate="yes" xml:space="preserve">
          <source>That is all that is needed to create a basic local install of the tutorial.</source>
          <target state="translated">이것이 튜토리얼의 기본 로컬 설치를 만드는 데 필요한 전부입니다.</target>
        </trans-unit>
        <trans-unit id="3e9f298db8fe772558cc95043a166c8ce9c6cd69" translate="yes" xml:space="preserve">
          <source>That is all there is to it. We start by including &lt;a href=&quot;../../module/installrequiredsystemlibraries#module:InstallRequiredSystemLibraries&quot; id=&quot;index-0-module:InstallRequiredSystemLibraries&quot;&gt;&lt;code&gt;InstallRequiredSystemLibraries&lt;/code&gt;&lt;/a&gt;. This module will include any runtime libraries that are needed by the project for the current platform. Next we set some CPack variables to where we have stored the license and version information for this project. The version information was set earlier in this tutorial and the &lt;code&gt;license.txt&lt;/code&gt; has been included in the top-level source directory for this step.</source>
          <target state="translated">그게 전부입니다. 먼저 &lt;a href=&quot;../../module/installrequiredsystemlibraries#module:InstallRequiredSystemLibraries&quot; id=&quot;index-0-module:InstallRequiredSystemLibraries&quot;&gt; &lt;code&gt;InstallRequiredSystemLibraries&lt;/code&gt; &lt;/a&gt; 를 포함 합니다. 이 모듈에는 현재 플랫폼의 프로젝트에 필요한 모든 런타임 라이브러리가 포함됩니다. 다음으로이 프로젝트에 대한 라이선스 및 버전 정보를 저장 한 위치에 CPack 변수를 설정합니다. 버전 정보는이 자습서의 앞부분에서 설정 되었으며 &lt;code&gt;license.txt&lt;/code&gt; 는이 단계의 최상위 소스 디렉터리에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="268dc13c88bd507d9f9423c1e6f1e26f1e3e7a18" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! Now let&amp;rsquo;s try to build the &lt;code&gt;Downstream&lt;/code&gt; project.</source>
          <target state="translated">그게 다야! 이제 &lt;code&gt;Downstream&lt;/code&gt; 프로젝트 를 빌드 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="ef4d09bd2d41d141db3fa22a55742eb2c9e52036" translate="yes" xml:space="preserve">
          <source>That's it! Now let's try to build the &lt;code&gt;Downstream&lt;/code&gt; project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a6b5daf84bc95745b844de39b4e2cdc151969d" translate="yes" xml:space="preserve">
          <source>The &quot;Configure&quot; button triggers a new dialog to select the CMake generator to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c2cdcec9068dae359f57a3158dd7520215bc50" translate="yes" xml:space="preserve">
          <source>The &quot;linker language&quot; for executable, shared library, and module targets is the language whose compiler will invoke the linker. The &lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt;&lt;code&gt;LINKER_LANGUAGE&lt;/code&gt;&lt;/a&gt; target property sets the language explicitly. Otherwise, the linker language is that whose linker preference value is highest among languages compiled and linked into the target. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE_PROPAGATES&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7f71ed2e8ecaf2b8b8c084a8df8e4eafdd0fda" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Configure&amp;rdquo; button triggers a new dialog to select the CMake generator to use.</source>
          <target state="translated">'구성'버튼은 사용할 CMake 생성기를 선택하는 새 대화 상자를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="d3548badf92a0707a9d50956051148ec91aa3ecb" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;cache&amp;rdquo; request will list the cached configuration values.</source>
          <target state="translated">&quot;캐시&quot;요청은 캐시 된 구성 값을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="08dba4efc8926e1469b9163dbd2da3874859b20f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;cmakeInputs&amp;rdquo; requests will report files used by CMake as part of the build system itself.</source>
          <target state="translated">&quot;cmakeInputs&quot;요청은 CMake가 빌드 시스템 자체의 일부로 사용한 파일을보고합니다.</target>
        </trans-unit>
        <trans-unit id="de1f11bd310fbd90d684f725211d64c08c74983e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;codemodel&amp;rdquo; request can be used after a project was &amp;ldquo;compute&amp;rdquo;d successfully.</source>
          <target state="translated">&amp;ldquo;codemodel&amp;rdquo;요청은 프로젝트가&amp;ldquo;계산&amp;rdquo;된 후 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e94657fa2e13ebe1f1b3b4b2726a21ef765ec88" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;ctestInfo&amp;rdquo; request can be used after a project was &amp;ldquo;compute&amp;rdquo;d successfully.</source>
          <target state="translated">&quot;ctestInfo&quot;요청은 프로젝트가 &quot;계산&quot;된 후에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="283fdcd1f69715eea7d3397b891b370ca8b33102" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;dirty&amp;rdquo; signal is sent whenever the server determines that the configuration of the project is no longer up-to-date. This happens when any of the files that have an influence on the build system is changed.</source>
          <target state="translated">&amp;ldquo;더러운&amp;rdquo;신호는 서버가 프로젝트 구성이 더 이상 최신 상태가 아니라고 서버가 결정할 때마다 전송됩니다. 빌드 시스템에 영향을주는 파일이 변경 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e54b688e6b251ea1a474910717da1c5630365788" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;dirty&amp;rdquo; signal may look like this:</source>
          <target state="translated">&quot;더러운&quot;신호는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81811e88372bea0aad4c454c1bdd23f605c9dd1f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;fileChange&amp;rdquo; signal is sent whenever a watched file is changed. It contains the &amp;ldquo;path&amp;rdquo; that has changed and a list of &amp;ldquo;properties&amp;rdquo; with the kind of change that was detected. Possible changes are &amp;ldquo;change&amp;rdquo; and &amp;ldquo;rename&amp;rdquo;.</source>
          <target state="translated">감시 된 파일이 변경 될 때마다 &quot;fileChange&quot;신호가 전송됩니다. 여기에는 변경된 &quot;경로&quot;와 감지 된 변경 종류의 &quot;속성&quot;목록이 포함됩니다. 가능한 변경은&amp;ldquo;change&amp;rdquo;와&amp;ldquo;rename&amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="3acadb9dc6d6129840b360c42b052a03b5310678" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;fileChange&amp;rdquo; signal looks like this:</source>
          <target state="translated">&quot;fileChange&quot;신호는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d3fffc821295a05c55a4f2324ffbe1e6629e792e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;linker language&amp;rdquo; for executable, shared library, and module targets is the language whose compiler will invoke the linker. The &lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt;&lt;code&gt;LINKER_LANGUAGE&lt;/code&gt;&lt;/a&gt; target property sets the language explicitly. Otherwise, the linker language is that whose linker preference value is highest among languages compiled and linked into the target. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE_PROPAGATES&lt;/code&gt; variable.</source>
          <target state="translated">실행 파일, 공유 라이브러리 및 모듈 대상에 대한 &quot;링커 언어&quot;는 컴파일러에서 링커를 호출하는 언어입니다. &lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt; &lt;code&gt;LINKER_LANGUAGE&lt;/code&gt; 의&lt;/a&gt; 대상 속성은 명시 적으로 언어를 설정합니다. 그렇지 않으면, 링커 언어는 링커 환경 설정 값이 컴파일되어 대상에 링크 된 언어 중에서 가장 높은 언어입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE_PROPAGATES&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6de1911158d6a72a5c4a0400df6cce181db071d4" translate="yes" xml:space="preserve">
          <source>The (newer) &lt;a href=&quot;#command:gtest_discover_tests&quot; id=&quot;index-1-command:gtest_discover_tests&quot;&gt;&lt;code&gt;gtest_discover_tests()&lt;/code&gt;&lt;/a&gt; discovers tests by asking the compiled test executable to enumerate its tests. This is more robust and provides better handling of parameterized tests, and does not require CMake to be re-run when tests change. However, it may not work in a cross-compiling environment, and setting test properties is less convenient.</source>
          <target state="translated">(최신) &lt;a href=&quot;#command:gtest_discover_tests&quot; id=&quot;index-1-command:gtest_discover_tests&quot;&gt; &lt;code&gt;gtest_discover_tests()&lt;/code&gt; &lt;/a&gt; 는 컴파일 된 테스트 실행 파일에 테스트를 열거하도록 요청하여 테스트를 감지합니다. 이는보다 강력하고 매개 변수화 된 테스트를보다 잘 처리 할 수 ​​있으며 테스트가 변경 될 때 CMake를 다시 실행할 필요가 없습니다. 그러나 크로스 컴파일 환경에서는 작동하지 않을 수 있으며 테스트 속성을 설정하는 것이 편리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e3ef2917282b4ecddb54b99bcf849047d78fa03b" translate="yes" xml:space="preserve">
          <source>The (older) &lt;a href=&quot;#command:gtest_add_tests&quot; id=&quot;index-1-command:gtest_add_tests&quot;&gt;&lt;code&gt;gtest_add_tests()&lt;/code&gt;&lt;/a&gt; scans source files to identify tests. This is usually effective, with some caveats, including in cross-compiling environments, and makes setting additional properties on tests more convenient. However, its handling of parameterized tests is less comprehensive, and it requires re-running CMake to detect changes to the list of tests.</source>
          <target state="translated">(이전) &lt;a href=&quot;#command:gtest_add_tests&quot; id=&quot;index-1-command:gtest_add_tests&quot;&gt; &lt;code&gt;gtest_add_tests()&lt;/code&gt; &lt;/a&gt; 소스 파일을 스캔하여 테스트를 식별합니다. 이것은 일반적으로 크로스 컴파일 환경을 포함한 일부 경고와 함께 효과적이며 테스트에서 추가 속성을 설정하는 것이 더 편리합니다. 그러나 매개 변수화 된 테스트 처리는 덜 포괄적이며 테스트 목록의 변경 사항을 감지하려면 CMake를 다시 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="52400cd7d7a1334f499fc2d2a909b8972c47220e" translate="yes" xml:space="preserve">
          <source>The .netrc file is ignored. This is the default.</source>
          <target state="translated">.netrc 파일은 무시됩니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="d769fda33f4766d6f71a8368bef99b5e664732da" translate="yes" xml:space="preserve">
          <source>The .netrc file is optional, and information in the URL is preferred. The file will be scanned to find which ever information is not specified in the URL.</source>
          <target state="translated">.netrc 파일은 선택 사항이며 URL의 정보가 선호됩니다. URL에 지정되지 않은 정보를 찾기 위해 파일을 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="272e65122a75c4643238137013fb2c46623d728d" translate="yes" xml:space="preserve">
          <source>The .netrc file is required, and information in the URL is ignored.</source>
          <target state="translated">.netrc 파일이 필요하며 URL의 정보는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2a3f53385507dd6df69569638d75499d99a2c090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#command:execute_process&quot; id=&quot;index-1-command:execute_process&quot;&gt;&lt;code&gt;execute_process()&lt;/code&gt;&lt;/a&gt; command is a newer more powerful version of &lt;a href=&quot;exec_program#command:exec_program&quot; id=&quot;index-0-command:exec_program&quot;&gt;&lt;code&gt;exec_program()&lt;/code&gt;&lt;/a&gt;, but the old command has been kept for compatibility. Both commands run while CMake is processing the project prior to build system generation. Use &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; to create custom commands that run at build time.</source>
          <target state="translated">&lt;a href=&quot;#command:execute_process&quot; id=&quot;index-1-command:execute_process&quot;&gt; &lt;code&gt;execute_process()&lt;/code&gt; &lt;/a&gt; 명령의 새 더 강력한 버전 &lt;a href=&quot;exec_program#command:exec_program&quot; id=&quot;index-0-command:exec_program&quot;&gt; &lt;code&gt;exec_program()&lt;/code&gt; &lt;/a&gt; 하지만, 이전 명령의 호환성을 위해 유지되었습니다. CMake가 시스템 생성 전에 프로젝트를 처리하는 동안 두 명령이 모두 실행됩니다. 사용 &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 빌드 시간에 실행 사용자 지정 명령을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37449771c17935104109f67bbf7e3043d57b061b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctest-resource-specification-file&quot;&gt;resource specification file&lt;/a&gt;, described below, which describes the resources available on the system.</source>
          <target state="translated">시스템에서 사용할 수있는 리소스를 설명하는 아래에 설명 된 &lt;a href=&quot;#ctest-resource-specification-file&quot;&gt;리소스 사양 파일&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ecce7fab975c32281898c94b84a5b7be52ff8987" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dashboard-client-steps&quot;&gt;Dashboard Client Steps&lt;/a&gt; may be configured by named settings as documented in the following sections.</source>
          <target state="translated">&lt;a href=&quot;#dashboard-client-steps&quot;&gt;대시 보드 클라이언트 단계는&lt;/a&gt; 다음 섹션에 설명 된대로라는 이름의 설정을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acd74143d15011bea01fde762d026ced773f6722" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#install-targets&quot;&gt;install(TARGETS)&lt;/a&gt; command can also accept the following options at the top level:</source>
          <target state="translated">&lt;a href=&quot;#install-targets&quot;&gt;설치 (TARGETS)&lt;/a&gt; 명령은 상위 레벨에서 다음과 같은 옵션을 적용 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e70548ac9c82d51cc5e402b5e2432bbb8ebd8994" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; location is also used as a search prefix by the &lt;code&gt;find_*&lt;/code&gt; commands. This can be controlled by setting the &lt;a href=&quot;cmake_find_no_install_prefix#variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; 의&lt;/a&gt; 위치도에 의해 검색 접두사로 사용 &lt;code&gt;find_*&lt;/code&gt; 의 명령. &lt;a href=&quot;cmake_find_no_install_prefix#variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 변수 를 설정하여 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d1f70adb248908bf69211a5bb722e26fb3fca39" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM&quot;&gt;&lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM&lt;/code&gt;&lt;/a&gt; variable may be set to a false value (e.g. &lt;code&gt;OFF&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, or &lt;code&gt;0&lt;/code&gt;) or the SDK version to use as the maximum (e.g. &lt;code&gt;10.0.14393.0&lt;/code&gt;). If unset, the default depends on which version of Visual Studio is targeted by the current generator.</source>
          <target state="translated">&lt;a href=&quot;#variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM&quot; id=&quot;index-0-variable:CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM&quot;&gt; &lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM&lt;/code&gt; 의&lt;/a&gt; 변수는 거짓 값 (예를 들어, 설정 될 수있다 &lt;code&gt;OFF&lt;/code&gt; , &lt;code&gt;FALSE&lt;/code&gt; 또는 &lt;code&gt;0&lt;/code&gt; ) 또는 최대로 사용 (예로 SDK 버전 &lt;code&gt;10.0.14393.0&lt;/code&gt; ). 설정되지 않은 경우 기본값은 현재 생성기가 대상으로하는 Visual Studio 버전에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="fb32c9e630ef3dfbb65a66be84bf213f269eae4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; variable has different meanings in different contexts. In a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-1-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;list of generators&lt;/em&gt;: and when &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-1-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; is run with no other arguments, it will iterate over that list and produce one package for each generator. In a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-0-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-2-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;string naming a single generator&lt;/em&gt;. If you need per-cpack-generator logic to control &lt;em&gt;other&lt;/em&gt; cpack settings, then you need a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-1-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; 의&lt;/a&gt; 변수는 서로 다른 문맥에서 서로 다른 의미를 갖는다. A의 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 파일 &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-1-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; 는&lt;/a&gt; A는 &lt;em&gt;발전기의 목록&lt;/em&gt; : 때 &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-1-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; 가&lt;/a&gt; 다른 인수와 함께 실행되어, 그 목록을 반복하고 각 발전기에 대한 하나 개의 패키지를 생성합니다. A의 &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-0-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-2-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; 는&lt;/a&gt; A는 &lt;em&gt;하나의 발전기를 이름 문자열&lt;/em&gt; . &lt;em&gt;다른&lt;/em&gt; cpack 설정 을 제어하기 위해 cpack-generator 로직 이 필요한 경우 &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-1-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt; 이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="55e903b6d2f7f0abc61e6c785b5bfcc21779f067" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; variable has different meanings in different contexts. In a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-1-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;list of generators&lt;/em&gt;: and when &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-1-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; is run with no other arguments, it will iterate over that list and produce one package for each generator. In a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-0-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-2-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;string naming a single generator&lt;/em&gt;. If you need per-cpack-generator logic to control &lt;em&gt;other&lt;/em&gt; cpack settings, then you need a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-1-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;. If set, the &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-2-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt; is included automatically on a per-generator basis. It only need contain overrides.</source>
          <target state="translated">&lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; 의&lt;/a&gt; 변수는 서로 다른 문맥에서 서로 다른 의미를 갖는다. A의 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 파일 &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-1-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; 는&lt;/a&gt; A는 &lt;em&gt;발전기의 목록&lt;/em&gt; : 때 &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-1-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; 가&lt;/a&gt; 다른 인수와 함께 실행되어, 그 목록을 반복하고 각 발전기에 대한 하나 개의 패키지를 생성합니다. A의 &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-0-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-2-variable:CPACK_GENERATOR&quot;&gt; &lt;code&gt;CPACK_GENERATOR&lt;/code&gt; 는&lt;/a&gt; A는 &lt;em&gt;하나의 발전기를 이름 문자열&lt;/em&gt; . &lt;em&gt;다른&lt;/em&gt; cpack 설정 을 제어하기 위해 cpack-generator 별 로직 이 필요한 경우 &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-1-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt; 이 필요합니다 . 설정된 경우 &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-2-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; &lt;/a&gt;생성기별로 자동으로 포함됩니다. 재정의 만 포함하면됩니다.</target>
        </trans-unit>
        <trans-unit id="9a57a2bcf718a4f16402fee586af8a68db6e3bb2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-1-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt;&lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt;&lt;/a&gt; global property can be modified to change the default package type assigned when not explicitly assigned by the user.</source>
          <target state="translated">&lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-1-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt; &lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt; &lt;/a&gt; 전역 속성은 사용자가 명시 적으로 할당되지 않은 경우 할당 된 기본 패키지 유형을 변경 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cbe9329e9f2d8d5b5524775b9c79cd86163310d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variables&quot;&gt;Variables&lt;/a&gt; section documents the scope of variable names and how their values are set.</source>
          <target state="translated">&lt;a href=&quot;#variables&quot;&gt;변수&lt;/a&gt; 단원에서는 변수 이름의 범위와 그 값이 어떻게 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="69250a9f9dc8ca06645540cd394a1b1e32c96ca2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; commands work together to install both targets (a library in our case) and a CMake file designed to make it easy to import the targets into another CMake project.</source>
          <target state="translated">&lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령은 모두 목표 (우리의 경우 도서관)과 쉽게 다른 CMake 프로젝트에 대상을 가져올 수 있도록 설계된 CMake 파일을 설치하기 위해 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6c73bcfb71b6407aba47f3cbdfa1ba455dd73707" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-3-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt; can be used to obtain a list of build configurations from the build tree, and the IDE should present this list to the user to select a build configuration.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-3-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;File API&lt;/code&gt; &lt;/a&gt; 빌드 트리에서 빌드 구성 목록을 얻을 수 있습니다, 그리고 IDE는 빌드 구성을 선택하는 사용자에게이 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="2b8286f7c5f8d1bacda45a432e0db6e17e10fdba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-8-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; tool allows specifying a file to use to populate the initial cache using the &lt;code&gt;-C&lt;/code&gt; option. This can be useful to simplify commands and scripts which repeatedly require the same cache entries.</source>
          <target state="translated">&lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-8-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 도구를 사용하여 초기 캐시를 채우는 데 사용하는 파일을 지정 허용 &lt;code&gt;-C&lt;/code&gt; 옵션을 선택합니다. 이는 동일한 캐시 항목이 반복적으로 필요한 명령 및 스크립트를 단순화하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21170ae5f8037d2ab5d2ca51f102fe0dd07c49bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; tool is shipped with the CMake distribution to execute provided tests and report results. The &lt;code&gt;test&lt;/code&gt; build-target is provided to run all available tests, but the &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; tool allows granular control over which tests to run, how to run them, and how to report results. Executing &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-2-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; in the build directory is equivalent to running the &lt;code&gt;test&lt;/code&gt; target:</source>
          <target state="translated">&lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 도구가 제공 테스트 리포트 결과를 실행할 CMake 분포와 함께 제공된다. &lt;code&gt;test&lt;/code&gt; 빌드 대상은 사용 가능한 모든 테스트를 실행하기 위해 제공되지만한다 &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 도구는 보고서 결과에 대한 세부적인 테스트를 실행하는 방법, 실행하는 통제, 어떻게 할 수 있습니다. 실행 &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-2-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; 빌드 디렉토리에하면 실행하는 것과 같습니다 &lt;code&gt;test&lt;/code&gt; 목표 :</target>
        </trans-unit>
        <trans-unit id="7359af1e83eb4f52f61ec0cb67205846938d9f8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; executable will read in this file when it runs. To create a simple dashboard you can run the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-7-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; executable or the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-8-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui&lt;/code&gt;&lt;/a&gt; to configure the project, but do not build it yet. Instead, change directory to the binary tree, and then run:</source>
          <target state="translated">&lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest&lt;/code&gt; &lt;/a&gt; 실행시 실행이 파일에서 읽습니다. 간단한 대시 보드를 만들려면 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-7-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake&lt;/code&gt; &lt;/a&gt; 실행 파일 또는 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-8-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui&lt;/code&gt; &lt;/a&gt; 를 실행 하여 프로젝트를 구성 할 수 있지만 아직 빌드하지는 마십시오. 대신 디렉토리를 이진 트리로 변경 한 후 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6918ea76da39b87303f1febb1ac9223c0074f08d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-2-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; executable will build and test the project and submit the results to Kitware&amp;rsquo;s public dashboard: &lt;a href=&quot;https://my.cdash.org/index.php?project=CMakeTutorial&quot;&gt;https://my.cdash.org/index.php?project=CMakeTutorial&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-2-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest&lt;/code&gt; &lt;/a&gt; : 실행 파일은 Kitware의 공개 대시 보드에 결과 프로젝트를 빌드하고 테스트하고 제출 &lt;a href=&quot;https://my.cdash.org/index.php?project=CMakeTutorial&quot;&gt;https://my.cdash.org/index.php?project=CMakeTutorial을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1858151a5dae52cb54cec3c52a6fa7d366b6b0d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-2-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; executable will build and test the project and submit the results to Kitware's public dashboard: &lt;a href=&quot;https://my.cdash.org/index.php?project=CMakeTutorial&quot;&gt;https://my.cdash.org/index.php?project=CMakeTutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addf6fa2cfd10b46adb657b7cfafd52da7157b41" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-2-module:CMakePackageConfigHelpers&quot;&gt;&lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;../../module/cmakepackageconfighelpers#command:write_basic_package_version_file&quot; id=&quot;index-0-command:write_basic_package_version_file&quot;&gt;&lt;code&gt;write_basic_package_version_file()&lt;/code&gt;&lt;/a&gt; command for creating a simple package version file. This file is read by CMake when &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; is called to determine the compatibility with the requested version, and to set some version-specific variables such as &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION&lt;/code&gt;, &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MAJOR&lt;/code&gt;, &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MINOR&lt;/code&gt;, etc. See &lt;a href=&quot;../../manual/cmake-packages.7#manual:cmake-packages(7)&quot; id=&quot;index-0-manual:cmake-packages(7)&quot;&gt;&lt;code&gt;cmake-packages&lt;/code&gt;&lt;/a&gt; documentation for more details.</source>
          <target state="translated">&lt;a href=&quot;../../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-2-module:CMakePackageConfigHelpers&quot;&gt; &lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt; 의&lt;/a&gt; 모듈은 제공 &lt;a href=&quot;../../module/cmakepackageconfighelpers#command:write_basic_package_version_file&quot; id=&quot;index-0-command:write_basic_package_version_file&quot;&gt; &lt;code&gt;write_basic_package_version_file()&lt;/code&gt; &lt;/a&gt; 간단한 패키지 버전 파일을 생성하는 명령을. 이 파일은 요청 된 버전과의 호환성을 확인하고 &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION&lt;/code&gt; , &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MAJOR&lt;/code&gt; , &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MINOR&lt;/code&gt; 등과 같은 일부 버전 별 변수를 설정하기 위해 &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 CMake에서 읽습니다 . &lt;a href=&quot;../../manual/cmake-packages.7#manual:cmake-packages(7)&quot; id=&quot;index-0-manual:cmake-packages(7)&quot;&gt; &lt;code&gt;cmake-packages&lt;/code&gt; &lt;/a&gt; 참조하십시오. 자세한 내용은 -packages 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="50915261cbec3819df9363ef742848cf95394570" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../module/ctest#module:CTest&quot; id=&quot;index-1-module:CTest&quot;&gt;&lt;code&gt;CTest&lt;/code&gt;&lt;/a&gt; module will automatically call &lt;code&gt;enable_testing()&lt;/code&gt;, so we can remove it from our CMake files.</source>
          <target state="translated">&lt;a href=&quot;../../module/ctest#module:CTest&quot; id=&quot;index-1-module:CTest&quot;&gt; &lt;code&gt;CTest&lt;/code&gt; 의&lt;/a&gt; 모듈이 자동으로 호출 &lt;code&gt;enable_testing()&lt;/code&gt; 우리는 우리의 CMake 파일에서 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4cb55a76b5603999036c6eb2a5dec76b4f460ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable can be set in the CMake cache to specify where to install the provided software. If the provided software has install rules, specified using the &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command, they will install artifacts into that prefix. On Windows, the default installation location corresponds to the &lt;code&gt;ProgramFiles&lt;/code&gt; system directory which may be architecture specific. On Unix hosts, &lt;code&gt;/usr/local&lt;/code&gt; is the default installation location.</source>
          <target state="translated">&lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 의&lt;/a&gt; 변수는 제공된 소프트웨어를 설치할 위치를 지정 CMake 캐시에 설정할 수 있습니다. 제공된 소프트웨어에 &lt;a href=&quot;../../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 지정된 설치 규칙이있는 경우 해당 접두사에 아티팩트를 설치합니다. Windows에서 기본 설치 위치 는 아키텍처에 따라 다를 수 있는 &lt;code&gt;ProgramFiles&lt;/code&gt; 시스템 디렉토리에 해당합니다 . Unix 호스트에서 &lt;code&gt;/usr/local&lt;/code&gt; 은 기본 설치 위치입니다.</target>
        </trans-unit>
        <trans-unit id="e58cfa8caaac832f0b0bbd2448341a487438c865" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable always refers to the installation prefix on the target filesystem.</source>
          <target state="translated">&lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-2-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 의&lt;/a&gt; 변수는 항상 대상 파일 시스템에 설치 접두사를 말합니다.</target>
        </trans-unit>
        <trans-unit id="27732391c066fb39e6f4f8c622a8465b8de12842" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; variable may be &lt;a href=&quot;../user-interaction/index#setting-build-variables&quot;&gt;set when invoking CMake&lt;/a&gt;. It is treated as a list of paths to search for &lt;a href=&quot;../../manual/cmake-packages.7#config-file-packages&quot;&gt;Config-file Packages&lt;/a&gt;. A package installed in &lt;code&gt;/opt/somepackage&lt;/code&gt; will typically install config files such as &lt;code&gt;/opt/somepackage/lib/cmake/somePackage/SomePackageConfig.cmake&lt;/code&gt;. In that case, &lt;code&gt;/opt/somepackage&lt;/code&gt; should be added to &lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 변수가 될 수있다 &lt;a href=&quot;../user-interaction/index#setting-build-variables&quot;&gt;CMake를 호출하는 경우에 설정&lt;/a&gt; . &lt;a href=&quot;../../manual/cmake-packages.7#config-file-packages&quot;&gt;Config-file Packages&lt;/a&gt; 를 검색하기위한 경로 목록으로 처리됩니다 . &lt;code&gt;/opt/somepackage&lt;/code&gt; 에 설치된 패키지 는 일반적으로 &lt;code&gt;/opt/somepackage/lib/cmake/somePackage/SomePackageConfig.cmake&lt;/code&gt; 와 같은 구성 파일을 설치합니다 . 이 경우 &lt;code&gt;/opt/somepackage&lt;/code&gt; 를 &lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-1-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 에&lt;/a&gt; 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6d27b44656bee18b001ac49c03715891ce4860e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; variable provides convenience in cases where multiple prefixes need to be specified, or when multiple different package binaries are available in the same prefix. Paths to packages may also be specified by setting variables matching &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt;, such as &lt;code&gt;SomePackage_DIR&lt;/code&gt;. Note that this is not a prefix but should be a full path to a directory containing a config-style package file, such as &lt;code&gt;/opt/somepackage/lib/cmake/SomePackage/&lt;/code&gt; in the above example.</source>
          <target state="translated">&lt;a href=&quot;../../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 의&lt;/a&gt; 변수는 여러 접두사가 지정 될 필요가 경우에 편의를 제공하거나 여러 다른 패키지 바이너리가 같은 접두사에 사용할 수있는 경우. 패키지 경로 는 &lt;code&gt;SomePackage_DIR&lt;/code&gt; 과 같이 &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; 과 일치하는 변수를 설정하여 지정할 수도 있습니다 . 이것은 접두사가 아니지만 위의 예에서 &lt;code&gt;/opt/somepackage/lib/cmake/SomePackage/&lt;/code&gt; 와 같은 구성 스타일 패키지 파일을 포함하는 디렉토리의 전체 경로 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="97496d180185042c7e781db89300b6b2b9cc9e57" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command defines an executable target:</source>
          <target state="translated">&lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 명령은 실행 대상을 정의한다 :</target>
        </trans-unit>
        <trans-unit id="bd38bc0973aa0f15991d5e679dec498785a3c99f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/build_name#command:build_name&quot; id=&quot;index-0-command:build_name&quot;&gt;&lt;code&gt;build_name()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/build_name#command:build_name&quot; id=&quot;index-0-command:build_name&quot;&gt; &lt;code&gt;build_name()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="919554a845cabd4cb89904a9edd3158f2b26a579" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required()&lt;/code&gt;&lt;/a&gt; command does more than report an error if a too-old version of CMake is used to build a project. It also sets all policies introduced in that CMake version or earlier to &lt;code&gt;NEW&lt;/code&gt; behavior. To manage policies without increasing the minimum required CMake version, the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(POLICY)&lt;/code&gt;&lt;/a&gt; command may be used:</source>
          <target state="translated">&lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required()&lt;/code&gt; &lt;/a&gt; CMake의 너무 이전 버전 프로젝트를 빌드하는 데 사용되는 경우 명령은 보고서보다 더 많은 오류를한다. 또한 해당 CMake 버전 또는 이전 버전에 도입 된 모든 정책을 &lt;code&gt;NEW&lt;/code&gt; 동작으로 설정합니다. 최소 필수 CMake 버전을 늘리지 않고 정책을 관리하려면 &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if(POLICY)&lt;/code&gt; &lt;/a&gt; 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6de7171508b2a244a463aa0afbfae192fbccac5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/build_command#command:build_command&quot; id=&quot;index-0-command:build_command&quot;&gt;&lt;code&gt;build_command()&lt;/code&gt;&lt;/a&gt; commands no longer generate build commands for &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; with the &lt;code&gt;-i&lt;/code&gt; option. Previously this was done to help build as much of tested projects as possible. However, this behavior is not consistent with other generators and also causes the return code of the &lt;code&gt;make&lt;/code&gt; tool to be meaningless.</source>
          <target state="translated">&lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt; &lt;code&gt;ctest_build()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/build_command#command:build_command&quot; id=&quot;index-0-command:build_command&quot;&gt; &lt;code&gt;build_command()&lt;/code&gt; &lt;/a&gt; 더 이상에 대한 빌드 명령이 생성되지 명령 &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;메이크 발생기&lt;/a&gt; 에 &lt;code&gt;-i&lt;/code&gt; 옵션을 선택합니다. 이전에는 가능한 많은 테스트 프로젝트를 빌드하는 데 도움이되었습니다. 그러나이 동작은 다른 생성기와 일치하지 않으며 &lt;code&gt;make&lt;/code&gt; 도구 의 리턴 코드 도 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2f7730ec313b12ab1cf1f52d1df3261f3ede1d14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command can be used to enable languages after the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">&lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt; 명령이 후 언어를 가능하게하는 데 사용할 수있는 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령을 :</target>
        </trans-unit>
        <trans-unit id="66e242aea3e7112bfddef0ebd9d0006e0201551f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export(EXPORT)&lt;/code&gt;&lt;/a&gt; command creates an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-6-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets definition file which is specific to the build-tree, and is not relocatable. This can similarly be used with a suitable package configuration file and package version file to define a package for the build tree which may be used without installation. Consumers of the build tree can simply ensure that the &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; contains the build directory, or set the &lt;code&gt;ClimbingStats_DIR&lt;/code&gt; to &lt;code&gt;&amp;lt;build_dir&amp;gt;/ClimbingStats&lt;/code&gt; in the cache.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령은 생성 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-6-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 빌드 트리에 특정 목표를 정의 파일 및 재배치하지 않습니다. 이것은 설치없이 사용할 수있는 빌드 트리 용 패키지를 정의하기 위해 적절한 패키지 구성 파일 및 패키지 버전 파일과 유사하게 사용될 수 있습니다. 빌드 트리 소비자는 &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; &lt;/a&gt; 에 빌드 디렉토리가 포함되어 있는지 확인 하거나 캐시에서 &lt;code&gt;ClimbingStats_DIR&lt;/code&gt; 을 &lt;code&gt;&amp;lt;build_dir&amp;gt;/ClimbingStats&lt;/code&gt; 로 설정하면됩니다.</target>
        </trans-unit>
        <trans-unit id="e705f2d9ccc960b2600f1b3ca5041c6f018eb6ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command generates a file containing &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;, which is suitable for use from the build directory. It is not suitable for installation because it contains absolute paths to buildsystem locations, and is particular to a single build configuration.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령이 포함 된 파일 생성 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;수입 대상을&lt;/a&gt; 빌드 디렉토리에서 사용하기에 적합합니다. 빌드 시스템 위치에 대한 절대 경로가 포함되어 있으며 단일 빌드 구성에 특히 적합하므로 설치에 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2afbd7d3238ac0ed77bc47709871ed7c8acf2cf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command does nothing by default. In some cases it is desirable to write to the user package registry, so the &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; variable may be set to enable it.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 명령은 기본적으로 아무것도하지 않습니다. 경우에 따라 사용자 패키지 레지스트리에 쓰는 것이 바람직하므로 &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; 변수를 사용하도록 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="181c84f27057ca3dab37e2a604052523499abca0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command does not populate the user package registry when &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-0-policy:CMP0090&quot;&gt;&lt;code&gt;CMP0090&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt; unless the &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable explicitly enables it. When &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-1-policy:CMP0090&quot;&gt;&lt;code&gt;CMP0090&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; set to &lt;code&gt;NEW&lt;/code&gt; then &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; populates the user package registry unless the &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable explicitly disables it.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 때 명령은 사용자 패키지의 레지스트리를 채우지 않습니다 &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-0-policy:CMP0090&quot;&gt; &lt;code&gt;CMP0090&lt;/code&gt; 이&lt;/a&gt; 설정되어 &lt;code&gt;NEW&lt;/code&gt; 하지 않는 &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; 의&lt;/a&gt; 변수가 명시 적으로 할 수 있습니다. 때 &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-1-policy:CMP0090&quot;&gt; &lt;code&gt;CMP0090&lt;/code&gt; 가&lt;/a&gt; 되어 &lt;em&gt;있지&lt;/em&gt; 설정 &lt;code&gt;NEW&lt;/code&gt; 후 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 하지 않는 사용자 패키지의 레지스트리를 채 웁니다 &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; 의&lt;/a&gt; 변수가 명시 적으로 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b8605b3aa1e8c152c915154ea1be22663652a4d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-5-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command populates the user package registry with the location of a project build tree. Build trees tend to be deleted by developers and have no &quot;uninstall&quot; event that could trigger removal of their entries. In order to keep the registries clean the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-19-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command automatically removes stale entries it encounters if it has sufficient permissions. CMake provides no interface to remove an entry referencing an existing build tree once &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-6-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; has been invoked. However, if the project removes its package configuration file from the build tree then the entry referencing the location will be considered stale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92b1b020d9cfc037deae2c1c042d149c0e692fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-5-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command populates the user package registry with the location of a project build tree. Build trees tend to be deleted by developers and have no &amp;ldquo;uninstall&amp;rdquo; event that could trigger removal of their entries. In order to keep the registries clean the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-18-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command automatically removes stale entries it encounters if it has sufficient permissions. CMake provides no interface to remove an entry referencing an existing build tree once &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-6-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; has been invoked. However, if the project removes its package configuration file from the build tree then the entry referencing the location will be considered stale.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-5-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 명령은 프로젝트 빌드 트리의 위치에 사용자 패키지의 레지스트리를 채 웁니다. 빌드 트리는 개발자가 삭제하는 경향이 있으며 항목 제거를 트리거 할 수있는 &quot;제거&quot;이벤트가 없습니다. 레지스트리를 정리 상태로 유지하기 위해 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-18-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령은 충분한 권한이있는 경우 발생하는 오래된 항목을 자동으로 제거합니다. CMake는 일단 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-6-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 가 호출 되면 기존 빌드 트리를 참조하는 항목을 제거하는 인터페이스를 제공하지 않습니다 . 그러나 프로젝트가 빌드 트리에서 패키지 구성 파일을 제거하면 위치를 참조하는 항목이 오래된 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="ab986f3f1c5624f67136c08a0e07aca8a8f8aa65" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-5-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command populates the user package registry with the location of a project build tree. Build trees tend to be deleted by developers and have no &amp;ldquo;uninstall&amp;rdquo; event that could trigger removal of their entries. In order to keep the registries clean the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-19-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command automatically removes stale entries it encounters if it has sufficient permissions. CMake provides no interface to remove an entry referencing an existing build tree once &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-6-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; has been invoked. However, if the project removes its package configuration file from the build tree then the entry referencing the location will be considered stale.</source>
          <target state="translated">&lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-5-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 명령은 프로젝트 빌드 트리의 위치에 사용자 패키지의 레지스트리를 채 웁니다. 빌드 트리는 개발자가 삭제하는 경향이 있으며 항목 제거를 트리거 할 수있는 &quot;제거&quot;이벤트가 없습니다. 레지스트리를 깨끗하게 유지하기 위해 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-19-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령은 충분한 권한이있는 경우 발견되는 오래된 항목을 자동으로 제거합니다. CMake는 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-6-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 가 호출 되면 기존 빌드 트리를 참조하는 항목을 제거하는 인터페이스를 제공하지 않습니다 . 그러나 프로젝트가 빌드 트리에서 패키지 구성 파일을 제거하면 해당 위치를 참조하는 항목이 오래된 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="4b06a72e128d32f2b361c34f028c86ea10bceafc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export_library_dependencies#command:export_library_dependencies&quot; id=&quot;index-0-command:export_library_dependencies&quot;&gt;&lt;code&gt;export_library_dependencies()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/export_library_dependencies#command:export_library_dependencies&quot; id=&quot;index-0-command:export_library_dependencies&quot;&gt; &lt;code&gt;export_library_dependencies()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e3ebd3e5667a62d6f10e7768e4a5e6e73850bcd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-14-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command searches the two package registries as two of the search steps specified in its documentation. If it has sufficient permissions it also removes stale package registry entries that refer to directories that do not exist or do not contain a matching package configuration file.</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-14-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령은 문서에 지정된 검색 단계의 두 가지로이 패키지의 레지스트리를 검색합니다. 충분한 권한이 있으면 존재하지 않거나 일치하는 패키지 구성 파일이없는 디렉토리를 참조하는 오래된 패키지 레지스트리 항목도 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1432e7b773913f6fb9b4b76ee4f451cad0fc2d57" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-6-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command may be used to search for the package configuration file. This command constructs a set of installation prefixes and searches under each prefix in several locations. Given the name &lt;code&gt;Foo&lt;/code&gt;, it looks for a file called &lt;code&gt;FooConfig.cmake&lt;/code&gt; or &lt;code&gt;foo-config.cmake&lt;/code&gt;. The full set of locations is specified in the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-7-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command documentation. One place it looks is:</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-6-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령은 패키지 구성 파일을 검색 할 수 있습니다. 이 명령은 설치 접두사 세트를 구성하고 여러 위치의 각 접두사 아래에서 검색합니다. 이름이 &lt;code&gt;Foo&lt;/code&gt; 이면 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 또는 &lt;code&gt;foo-config.cmake&lt;/code&gt; 파일을 찾습니다 . 전체 위치 세트는 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-7-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 문서에 지정되어 있습니다. 보이는 곳은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dbdc821b9c82fde16cd31bd80d65878763b6e70a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt;&lt;code&gt;foreach()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt;&lt;code&gt;endforeach()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endwhile#command:endwhile&quot; id=&quot;index-0-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; commands delimit code blocks to be executed in a loop. Inside such blocks the &lt;a href=&quot;../command/break#command:break&quot; id=&quot;index-0-command:break&quot;&gt;&lt;code&gt;break()&lt;/code&gt;&lt;/a&gt; command may be used to terminate the loop early whereas the &lt;a href=&quot;../command/continue#command:continue&quot; id=&quot;index-0-command:continue&quot;&gt;&lt;code&gt;continue()&lt;/code&gt;&lt;/a&gt; command may be used to start with the next iteration immediately.</source>
          <target state="translated">&lt;a href=&quot;../command/foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../command/endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt; &lt;code&gt;endforeach()&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;../command/while#command:while&quot; id=&quot;index-0-command:while&quot;&gt; &lt;code&gt;while()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../command/endwhile#command:endwhile&quot; id=&quot;index-0-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt; 커맨드를 단락 부호 블록은 루프에서 실행된다. 이러한 블록 내에서 &lt;a href=&quot;../command/break#command:break&quot; id=&quot;index-0-command:break&quot;&gt; &lt;code&gt;break()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 루프를 일찍 종료 할 수 있으며 &lt;a href=&quot;../command/continue#command:continue&quot; id=&quot;index-0-command:continue&quot;&gt; &lt;code&gt;continue()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 다음 반복을 즉시 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7efe84b542e353123c22c1db16fc76982c5f2e2b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command has a special condition syntax that allows for variable references in the short form &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; instead of &lt;code&gt;${&amp;lt;variable&amp;gt;}&lt;/code&gt;. However, environment and cache variables always need to be referenced as &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; or &lt;code&gt;$CACHE{&amp;lt;variable&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 명령은 짧은 형태의 변수 참조를 허용하는 특별한 조건 구문은 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 대신 &lt;code&gt;${&amp;lt;variable&amp;gt;}&lt;/code&gt; . 그러나 환경 및 캐시 변수는 항상 &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; 또는 &lt;code&gt;$CACHE{&amp;lt;variable&amp;gt;}&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2c613d357008702aaea63b152753bde807997c83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-2-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/elseif#command:elseif&quot; id=&quot;index-0-command:elseif&quot;&gt;&lt;code&gt;elseif()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/else#command:else&quot; id=&quot;index-0-command:else&quot;&gt;&lt;code&gt;else()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt;&lt;code&gt;endif()&lt;/code&gt;&lt;/a&gt; commands delimit code blocks to be executed conditionally.</source>
          <target state="translated">&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-2-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../command/elseif#command:elseif&quot; id=&quot;index-0-command:elseif&quot;&gt; &lt;code&gt;elseif()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../command/else#command:else&quot; id=&quot;index-0-command:else&quot;&gt; &lt;code&gt;else()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../command/endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt; &lt;code&gt;endif()&lt;/code&gt; &lt;/a&gt; 명령어를 단락 코드 블록은 조건부 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6d983ad19d78352ab2101059724ace0c2d24e200" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; generates and installs files which contain &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;. These files are generated with relative paths (unless the user specifies absolute paths), and are designed for multi-configuration use. See &lt;a href=&quot;../manual/cmake-packages.7#creating-packages&quot;&gt;Creating Packages&lt;/a&gt; for more.</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 생성을 설치합니다 파일이있는 포함 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;수입 대상을&lt;/a&gt; . 이 파일은 상대 경로를 사용하여 생성되며 (사용자가 절대 경로를 지정하지 않는 한) 다중 구성 용도로 설계되었습니다. 자세한 내용은 &lt;a href=&quot;../manual/cmake-packages.7#creating-packages&quot;&gt;패키지 만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de0b2194a842025d1f7cbe7502c52855b8ada4b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/load_command#command:load_command&quot; id=&quot;index-0-command:load_command&quot;&gt;&lt;code&gt;load_command()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/load_command#command:load_command&quot; id=&quot;index-0-command:load_command&quot;&gt; &lt;code&gt;load_command()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c492d79997ac903e371269f33dc957ef6657d495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endmacro#command:endmacro&quot; id=&quot;index-0-command:endmacro&quot;&gt;&lt;code&gt;endmacro()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt;&lt;code&gt;endfunction()&lt;/code&gt;&lt;/a&gt; commands delimit code blocks to be recorded for later invocation as commands.</source>
          <target state="translated">&lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../command/endmacro#command:endmacro&quot; id=&quot;index-0-command:endmacro&quot;&gt; &lt;code&gt;endmacro()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../command/endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt; &lt;code&gt;endfunction()&lt;/code&gt; &lt;/a&gt; 커맨드를 단락 부호 블록은 후술 명령 호출에 대해 기록한다.</target>
        </trans-unit>
        <trans-unit id="648a118c91414c1bfee79a1a46be635e1e67876c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/mark_as_advanced#command:mark_as_advanced&quot; id=&quot;index-0-command:mark_as_advanced&quot;&gt;&lt;code&gt;mark_as_advanced()&lt;/code&gt;&lt;/a&gt; command no longer creates a cache entry if one does not already exist.</source>
          <target state="translated">&lt;a href=&quot;../command/mark_as_advanced#command:mark_as_advanced&quot; id=&quot;index-0-command:mark_as_advanced&quot;&gt; &lt;code&gt;mark_as_advanced()&lt;/code&gt; &lt;/a&gt; 명령은 더 이상이 아직 존재하지 않는 경우 캐시 엔트리를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="600994395931d95044faa9687a36871a64ef86bd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message()&lt;/code&gt;&lt;/a&gt; command joins the strings from this list and for log levels of &lt;code&gt;NOTICE&lt;/code&gt; and below, it prepends the resultant string to each line of the message.</source>
          <target state="translated">&lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt; &lt;code&gt;message()&lt;/code&gt; &lt;/a&gt; 명령이 목록에서와의 로그 수준 문자열을 결합 &lt;code&gt;NOTICE&lt;/code&gt; 아래,이 메시지의 각 행에 결과 문자열을 앞에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="367dfe3a0c9d94aba8bad2e907a9419451f1b3ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message()&lt;/code&gt;&lt;/a&gt; command will only output messages of the specified log level or higher. The default log level is &lt;code&gt;STATUS&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt; &lt;code&gt;message()&lt;/code&gt; &lt;/a&gt; 명령은 지정된 로그 레벨의 출력 메시지 이상인 것. 기본 로그 레벨은 &lt;code&gt;STATUS&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e93f57a26afa1fc508ac2e7916496288cc398184" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-1-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command is typically used to create a cache entry to allow users to set the option. However, there are cases in which a normal (non-cached) variable of the same name as the option may be defined by the project prior to calling the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-2-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command. For example, a project that embeds another project as a subdirectory may want to hard-code options of the subproject to build the way it needs.</source>
          <target state="translated">&lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-1-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt; 명령은 일반적으로 사용자가 옵션을 설정할 수 있도록 캐시 엔트리를 작성하는 데 사용됩니다. 그러나 &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-2-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt; 명령 을 호출하기 전에 프로젝트에서 옵션과 동일한 이름의 일반 (캐시되지 않은) 변수를 정의 할 수 있습니다 . 예를 들어, 다른 프로젝트를 서브 디렉토리로 임베드하는 프로젝트는 서브 프로젝트의 옵션을 하드 코딩하여 원하는 방식으로 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c2e0a7c041ca82f4ff8acb5fe67ca7bf0da861a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/output_required_files#command:output_required_files&quot; id=&quot;index-0-command:output_required_files&quot;&gt;&lt;code&gt;output_required_files()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/output_required_files#command:output_required_files&quot; id=&quot;index-0-command:output_required_files&quot;&gt; &lt;code&gt;output_required_files()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="19e8c920251ab7089f5bbb758d58f8b282c67b2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command manages &lt;code&gt;VERSION&lt;/code&gt; variables.</source>
          <target state="translated">&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령은 관리 &lt;code&gt;VERSION&lt;/code&gt; 의 변수를.</target>
        </trans-unit>
        <trans-unit id="92d6bc569916017a8f1a1f392412c599b8c12f1c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command preserves leading zeros in version components.</source>
          <target state="translated">&lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 보존 버전의 구성 요소에 0을 선도.</target>
        </trans-unit>
        <trans-unit id="f72229cc054922a34cb58f51da28701352932ad5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/subdir_depends#command:subdir_depends&quot; id=&quot;index-0-command:subdir_depends&quot;&gt;&lt;code&gt;subdir_depends()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/subdir_depends#command:subdir_depends&quot; id=&quot;index-0-command:subdir_depends&quot;&gt; &lt;code&gt;subdir_depends()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="669dcef4765cf8c49e41411c8553c48fd800c782" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-1-command:subdirs&quot;&gt;&lt;code&gt;subdirs()&lt;/code&gt;&lt;/a&gt; command does not process its arguments until after the calling directory is fully processed. Therefore looking up this property in the current directory will not see them.</source>
          <target state="translated">&lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-1-command:subdirs&quot;&gt; &lt;code&gt;subdirs()&lt;/code&gt; &lt;/a&gt; 명령은 호출 디렉토리가 완전히 처리 된 후까지 인수를 처리하지 않습니다. 따라서 현재 디렉토리에서이 특성을 찾으면 해당 특성을 볼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4520c6d46ba785696d43954a37c32101d8ecc31d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; commands specify the build specifications and the usage requirements of binary targets. The commands populate the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties respectively, and/or the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties.</source>
          <target state="translated">&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt; 빌드 사양 및 바이너리 목표의 사용 요구 사항을 지정 명령. 명령은 각각 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성 및 / 또는 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="ecef56a1bf590c6ebaf4bede4e9888a34b2f04e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-2-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; commands have an effect on only one target at a time. The commands &lt;a href=&quot;../command/add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt;&lt;code&gt;add_compile_definitions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt;&lt;code&gt;add_compile_options()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; have a similar function, but operate at directory scope instead of target scope for convenience.</source>
          <target state="translated">&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-2-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt; 명령을 한 번에 하나의 목표에 영향을 미친다. &lt;a href=&quot;../command/add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt; &lt;code&gt;add_compile_definitions()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt; &lt;code&gt;add_compile_options()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt; 명령 은 비슷한 기능을 갖지만 편의를 위해 대상 범위 대신 디렉토리 범위에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9b11bfe75649612091d00e608040d85ff0c75376" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; command converts relative paths to absolute.</source>
          <target state="translated">&lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt; 명령에 대해 절대 경로를 변환한다.</target>
        </trans-unit>
        <trans-unit id="53fb1b740211be72112e09b46bc7d928fe6f420f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command source-file signature generates a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to build the source file into an executable. In order to compile the source the same way as it might be compiled by the calling project, the generated project sets the value of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variable to that in the calling project. The value of the &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; variable may be needed in some cases too, but CMake 3.1 and lower did not set it in the generated project. CMake 3.2 and above prefer to set it so that linker flags are honored as well as compiler flags. This policy provides compatibility with the pre-3.2 behavior.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 명령 소스 파일의 서명은 생성 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 실행 파일로 소스 파일을 구축 할 파일을. 호출 프로젝트에서 컴파일 할 수있는 것과 동일한 방식으로 소스를 컴파일하기 위해 생성 된 프로젝트는 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 변수 의 값을 호출 프로젝트의 값으로 설정합니다 . 경우에 따라 &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt; &lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt; &lt;/a&gt; 변수 의 값이 필요할 수도 있지만 CMake 3.1 이하는 생성 된 프로젝트에서 설정하지 않았습니다. CMake 3.2 이상에서는 링커 플래그와 컴파일러 플래그가 적용되도록 설정하는 것을 선호합니다. 이 정책은 3.2 이전 동작과의 호환성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5d0b825dbbc46d1cbc94fbfa5c6db06d89d25547" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; source file signature is intended to allow callers to check whether they will be able to compile a given source file with the current toolchain. In order to match compiler behavior, any language standard mode should match. However, CMake 3.7 and below did not do this. CMake 3.8 and above prefer to honor the language standard settings for &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt; (C++), and &lt;code&gt;CUDA&lt;/code&gt; using the values of the variables:</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 소스 파일 서명은 발신자가 현재 툴체인으로 주어진 소스 파일을 컴파일 할 수 있는지 여부를 확인 할 수 있도록하기위한 것입니다. 컴파일러 동작을 일치 ​​시키려면 모든 언어 표준 모드가 일치해야합니다. 그러나 CMake 3.7 이하에서는이 작업을 수행하지 않았습니다. CMake 3.8 이상 은 변수 값을 사용하여 &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;CXX&lt;/code&gt; (C ++) 및 &lt;code&gt;CUDA&lt;/code&gt; 에 대한 언어 표준 설정을 따르기 를 선호 합니다.</target>
        </trans-unit>
        <trans-unit id="76211ccddc3af3f2f4428126c7ca27c027e5e1b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/use_mangled_mesa#command:use_mangled_mesa&quot; id=&quot;index-0-command:use_mangled_mesa&quot;&gt;&lt;code&gt;use_mangled_mesa()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/use_mangled_mesa#command:use_mangled_mesa&quot; id=&quot;index-0-command:use_mangled_mesa&quot;&gt; &lt;code&gt;use_mangled_mesa()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bed625154684316401a0cb012e129a27807aceea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/utility_source#command:utility_source&quot; id=&quot;index-0-command:utility_source&quot;&gt;&lt;code&gt;utility_source()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/utility_source#command:utility_source&quot; id=&quot;index-0-command:utility_source&quot;&gt; &lt;code&gt;utility_source()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f5726dc014e731a57dfe323bd61e01435c69a4c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/variable_requires#command:variable_requires&quot; id=&quot;index-0-command:variable_requires&quot;&gt;&lt;code&gt;variable_requires()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="translated">&lt;a href=&quot;../command/variable_requires#command:variable_requires&quot; id=&quot;index-0-command:variable_requires&quot;&gt; &lt;code&gt;variable_requires()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9ee5ea15f7e69effc745e7c9cb5064ef7091c237" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../envvar/cmake_build_parallel_level#envvar:CMAKE_BUILD_PARALLEL_LEVEL&quot; id=&quot;index-0-envvar:CMAKE_BUILD_PARALLEL_LEVEL&quot;&gt;&lt;code&gt;CMAKE_BUILD_PARALLEL_LEVEL&lt;/code&gt;&lt;/a&gt; environment variable, if set, specifies a default parallel level when this option is not given.</source>
          <target state="translated">&lt;a href=&quot;../envvar/cmake_build_parallel_level#envvar:CMAKE_BUILD_PARALLEL_LEVEL&quot; id=&quot;index-0-envvar:CMAKE_BUILD_PARALLEL_LEVEL&quot;&gt; &lt;code&gt;CMAKE_BUILD_PARALLEL_LEVEL&lt;/code&gt; 의&lt;/a&gt; 이 옵션이 제공되지 않을 때 환경 변수는 설정하면, 기본 병렬 수준을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="61a8d903d35568de894dabb59fc607be91e1ef84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; set this to &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gmake&lt;/code&gt;, or a generator-specific tool (e.g. &lt;code&gt;nmake&lt;/code&gt; for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;메이크 발생기는&lt;/a&gt; 이로 설정 &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;gmake&lt;/code&gt; 를 , 또는 발전기 관련 도구 (예 : &lt;code&gt;nmake&lt;/code&gt; 를 위한 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt; &lt;code&gt;NMake Makefiles&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a87588b3bdb17f2983a355e425960928ed66f1ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; set this to &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gmake&lt;/code&gt;, or a generator-specific tool (e.g. &lt;code&gt;nmake&lt;/code&gt; for &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;메이크 발생기는&lt;/a&gt; 이로 설정 &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;gmake&lt;/code&gt; 를 , 또는 발전기 관련 도구 (예 : &lt;code&gt;nmake&lt;/code&gt; 를 위한 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt; &lt;code&gt;NMake Makefiles&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8051ec11eb77c123194e3ccf8b3e1bdd97606433" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; set this to &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gmake&lt;/code&gt;, or a generator-specific tool (e.g. &lt;code&gt;nmake&lt;/code&gt; for &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c1fa31d0e6e9a80a915092f53e0a0937a9fe8a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; will remove &lt;code&gt;BYPRODUCTS&lt;/code&gt; and other &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; files during &lt;code&gt;make clean&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;메이크 발생기는&lt;/a&gt; 제거 &lt;code&gt;BYPRODUCTS&lt;/code&gt; 및 기타 &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 중 파일을 &lt;code&gt;make clean&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a89fbf072c607e5225dcfc6dc7f8bafef53ef917" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; will remove &lt;code&gt;GENERATED&lt;/code&gt; files during &lt;code&gt;make clean&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;메이크 발생기는&lt;/a&gt; 제거합니다 &lt;code&gt;GENERATED&lt;/code&gt; 중 파일을 &lt;code&gt;make clean&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ada68370062ab810e9833392a1f8d147eabd8c8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; create a &lt;code&gt;.sln&lt;/code&gt; file for each directory whose &lt;code&gt;CMakeLists.txt&lt;/code&gt; file calls the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command. Set this property in the same directory as a &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command call (e.g. in the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file) to specify the default startup project for the corresponding solution file.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기는&lt;/a&gt; 크리에이트 &lt;code&gt;.sln&lt;/code&gt; 각 디렉토리의 파일 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 파일 부르는 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령을 사용합니다. 이 속성을 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 호출 과 같은 디렉토리 (예 : 최상위 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일)에 설정하여 해당 솔루션 파일의 기본 시작 프로젝트를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="cc27ebac6ae8f8d68114c761097d6545689dc169" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above support using a CUDA toolset provided by a CUDA Toolkit. The toolset version number may be specified by a field in &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; of the form &lt;code&gt;cuda=8.0&lt;/code&gt;. If none is specified CMake will choose a default version. CMake provides the selected CUDA toolset version in this variable. The value may be empty if no CUDA Toolkit with Visual Studio integration is installed.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발전기&lt;/a&gt; VS 2010와 CUDA를 사용하여 지원 위는 CUDA Toolkit에서 제공하는 도구 세트. 도구 세트 버전 번호는 &lt;code&gt;cuda=8.0&lt;/code&gt; 형식의 &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt; 필드로 지정 될 수 있습니다 . 지정되지 않은 경우 CMake는 기본 버전을 선택합니다. CMake는이 변수에서 선택된 CUDA 툴셋 버전을 제공합니다. Visual Studio 통합 CUDA 툴킷이 설치되어 있지 않으면 값이 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aeb01cb474e55f2896328831de049fe63815e04a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above support using a CUDA toolset provided by a CUDA Toolkit. The toolset version number may be specified by a field in &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; of the form &lt;code&gt;cuda=8.0&lt;/code&gt;. Or it is automatically detected if a path to a standalone CUDA directory is specified in the form &lt;code&gt;cuda=C:\path\to\cuda&lt;/code&gt;. If none is specified CMake will choose a default version. CMake provides the selected CUDA toolset version in this variable. The value may be empty if no CUDA Toolkit with Visual Studio integration is installed.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발전기&lt;/a&gt; VS 2010와 CUDA를 사용하여 지원 위는 CUDA Toolkit에서 제공하는 도구 세트. 도구 세트 버전 번호는 &lt;code&gt;cuda=8.0&lt;/code&gt; 형식의 &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt; 에있는 필드로 지정할 수 있습니다 . 또는 독립형 CUDA 디렉토리 경로가 &lt;code&gt;cuda=C:\path\to\cuda&lt;/code&gt; 형식으로 지정되면 자동으로 감지됩니다 . 지정된 것이 없으면 CMake는 기본 버전을 선택합니다. CMake는이 변수에 선택된 CUDA 도구 세트 버전을 제공합니다. Visual Studio 통합이 포함 된 CUDA Toolkit이 설치되지 않은 경우 값이 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97398b77b11a71a9b4996a8517ce6ebcb0c6297c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above support using a standalone (non-installed) NVIDIA CUDA toolkit. The path may be specified by a field in &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; of the form &lt;code&gt;cuda=C:\path\to\cuda&lt;/code&gt;. The given directory must at least contain a folder &lt;code&gt;.\nvcc&lt;/code&gt; and must provide Visual Studio integration files in path &lt;code&gt;.\CUDAVisualStudioIntegration\extras\
visual_studio_integration\MSBuildExtensions\&lt;/code&gt;. One can create a standalone CUDA toolkit directory by either opening a installer with 7zip or copying the files that are extracted by the running installer. The value may be empty if no path to a standalone CUDA Toolkit was specified.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; (비 설치) 독립형 NVIDIA CUDA 툴킷을 사용하여 VS 2010 및 지원 위. 경로는 &lt;code&gt;cuda=C:\path\to\cuda&lt;/code&gt; 형식의 &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt; 에있는 필드로 지정할 수 있습니다 . 주어진 디렉토리는 최소한 &lt;code&gt;.\nvcc&lt;/code&gt; 폴더를 포함 해야하며 &lt;code&gt;.\CUDAVisualStudioIntegration\extras\ visual_studio_integration\MSBuildExtensions\&lt;/code&gt; 경로에 Visual Studio 통합 파일을 제공해야합니다 . 7zip으로 설치 프로그램을 열거 나 실행중인 설치 프로그램에서 추출한 파일을 복사하여 독립 실행 형 CUDA 툴킷 디렉토리를 만들 수 있습니다. 독립형 CUDA 툴킷에 대한 경로가 지정되지 않은 경우 값이 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebf2e837d95d7210df33fc0bc6a88b21b783f89e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2013 and above support using either the 32-bit or 64-bit host toolchains by specifying a &lt;code&gt;host=x86&lt;/code&gt; or &lt;code&gt;host=x64&lt;/code&gt; value in the &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; option. CMake provides the selected toolchain architecture preference in this variable (&lt;code&gt;x86&lt;/code&gt;, &lt;code&gt;x64&lt;/code&gt;, or empty).</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 지정하여 32 비트 또는 64 비트 호스트 툴 체인을 사용하여 지원 VS 2013 이상 &lt;code&gt;host=x86&lt;/code&gt; 또는 &lt;code&gt;host=x64&lt;/code&gt; 가치 &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; 의&lt;/a&gt; 옵션. CMake는이 변수에서 선택된 툴체인 아키텍처 환경 설정을 제공합니다 ( &lt;code&gt;x86&lt;/code&gt; , &lt;code&gt;x64&lt;/code&gt; 또는 비어 있음).</target>
        </trans-unit>
        <trans-unit id="730de581b7b9cbd5e7515c7bfe9eeb73ac5bd8e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2017 and above allow to select minor versions of the same toolset. The toolset version number may be specified by a field in &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; of the form &lt;code&gt;version=14.11&lt;/code&gt;. If none is specified CMake will choose a default toolset. The value may be empty if no minor version was selected and the default is used.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 위 VS 2017에 대한이 같은 도구 세트의 부 버전을 선택할 수 있습니다. 툴셋 버전 번호는 &lt;code&gt;version=14.11&lt;/code&gt; 형식의 &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt; 필드에 의해 지정 될 수 있습니다 . 지정되지 않은 경우 CMake는 기본 도구 세트를 선택합니다. 부 버전을 선택하지 않았고 기본값이 사용 된 경우 값이 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46dd54f2f09b043a43c6551c69b60522d013ddee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; set this to the full path to &lt;code&gt;MSBuild.exe&lt;/code&gt; (VS &amp;gt;= 10), &lt;code&gt;devenv.com&lt;/code&gt; (VS 7,8,9), or &lt;code&gt;VCExpress.exe&lt;/code&gt; (VS Express 8,9). (See also variables &lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_vs_devenv_command#variable:CMAKE_VS_DEVENV_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_DEVENV_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_DEVENV_COMMAND&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발전기&lt;/a&gt; 전체 경로로 설정 &lt;code&gt;MSBuild.exe&lt;/code&gt; 를 (VS&amp;gt; = 10) &lt;code&gt;devenv.com&lt;/code&gt; (VS 7,8,9), 또는 &lt;code&gt;VCExpress.exe&lt;/code&gt; (VS 익스프레스 8,9). ( &lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt; &lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cmake_vs_devenv_command#variable:CMAKE_VS_DEVENV_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_DEVENV_COMMAND&quot;&gt; &lt;code&gt;CMAKE_VS_DEVENV_COMMAND&lt;/code&gt; &lt;/a&gt; 변수도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="67e6e5b2bb24cda3f0f86bee9c819d77a47ce2fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; support toolset specification using one of these forms:</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기는&lt;/a&gt; 이러한 양식 중 하나를 사용하여 도구 세트 사양을 지원 :</target>
        </trans-unit>
        <trans-unit id="87bca720a19edaa932853c1c5b0c0c594c72fe93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt;&lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt;&lt;/a&gt; module provides a macro for creating a simple &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; file. This file sets the version of the package. It is read by CMake when &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-11-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; is called to determine the compatibility with the requested version, and to set some version-specific variables &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION&lt;/code&gt;, &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MAJOR&lt;/code&gt;, &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MINOR&lt;/code&gt; etc. The &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command is used to export the targets in the &lt;code&gt;ClimbingStatsTargets&lt;/code&gt; export-set, defined previously by the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command. This command generates the &lt;code&gt;ClimbingStatsTargets.cmake&lt;/code&gt; file to contain &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, suitable for use by downstreams and arranges to install it to &lt;code&gt;lib/cmake/ClimbingStats&lt;/code&gt;. The generated &lt;code&gt;ClimbingStatsConfigVersion.cmake&lt;/code&gt; and a &lt;code&gt;cmake/ClimbingStatsConfig.cmake&lt;/code&gt; are installed to the same location, completing the package.</source>
          <target state="translated">&lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt; &lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt; 의&lt;/a&gt; 모듈은 간단한 만들기위한 매크로를 제공 &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; 의 파일을. 이 파일은 패키지 버전을 설정합니다. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-11-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 가 호출되어 요청 된 버전과의 호환성을 확인하고 일부 버전 별 변수 &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION&lt;/code&gt; , &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MAJOR&lt;/code&gt; , &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MINOR&lt;/code&gt; 등 을 설정하기 위해 CMake가 읽습니다 . &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(TARGETS)&lt;/code&gt; &lt;/a&gt; 명령으로 이전에 정의한 &lt;code&gt;ClimbingStatsTargets&lt;/code&gt; 내보내기 세트 에서 대상을 내보내는 데 사용됩니다 . 이 명령은 &lt;code&gt;ClimbingStatsTargets.cmake&lt;/code&gt; 를 생성합니다다운 스트림에서 사용하기에 적합한 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 을 포함 하고이를 &lt;code&gt;lib/cmake/ClimbingStats&lt;/code&gt; 에 설치합니다 . 생성 된 &lt;code&gt;ClimbingStatsConfigVersion.cmake&lt;/code&gt; 및 &lt;code&gt;cmake/ClimbingStatsConfig.cmake&lt;/code&gt; 가 동일한 위치에 설치되어 패키지를 완료합니다.</target>
        </trans-unit>
        <trans-unit id="8a3924c1498b719e2e17363458e083a4d5abfac2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/documentation#module:Documentation&quot; id=&quot;index-0-module:Documentation&quot;&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/a&gt; module is removed.</source>
          <target state="translated">&lt;a href=&quot;../module/documentation#module:Documentation&quot; id=&quot;index-0-module:Documentation&quot;&gt; &lt;code&gt;Documentation&lt;/code&gt; &lt;/a&gt; 모듈이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="147128b8a50912c8020cc0dd38074ea9f8c19b04" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/documentation#module:Documentation&quot; id=&quot;index-1-module:Documentation&quot;&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/a&gt; was added as a support mechanism for the VTK project and was tuned for that project. Instead of CMake providing this module with (now old) VTK patterns for cache variables and required packages, the module is now deprecated by CMake itself.</source>
          <target state="translated">&lt;a href=&quot;../module/documentation#module:Documentation&quot; id=&quot;index-1-module:Documentation&quot;&gt; &lt;code&gt;Documentation&lt;/code&gt; &lt;/a&gt; VTK 프로젝트에 대한 지원 메커니즘으로 첨가하고 해당 프로젝트에 맞게 조정되었다. 이 모듈에 캐시 변수 및 필수 패키지에 대한 VTK 패턴을 제공하는 CMake 대신 이제 모듈이 CMake 자체에서 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ebac4c16dc7682576bb9fc1e5a679a629c69bd03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/externalproject#command:externalproject_add&quot; id=&quot;index-0-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;STEP_TARGETS&lt;/code&gt; option, and the &lt;a href=&quot;../module/externalproject#command:externalproject_add_steptargets&quot; id=&quot;index-0-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt; function, can be used to create build targets for individual steps of an external project.</source>
          <target state="translated">&lt;a href=&quot;../module/externalproject#command:externalproject_add&quot; id=&quot;index-0-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;STEP_TARGETS&lt;/code&gt; 옵션 및 &lt;a href=&quot;../module/externalproject#command:externalproject_add_steptargets&quot; id=&quot;index-0-command:externalproject_add_steptargets&quot;&gt; &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; &lt;/a&gt; 기능, 외부 프로젝트의 각 단계에 대한 빌드 타겟을 만드는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a59eeefc671323a3b379f204263104c9624e714" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/findopengl#module:FindOpenGL&quot; id=&quot;index-1-module:FindOpenGL&quot;&gt;&lt;code&gt;FindOpenGL&lt;/code&gt;&lt;/a&gt; module provides an &lt;code&gt;OpenGL::GL&lt;/code&gt; target and an &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; variable for projects to use for legacy GL interfaces. When both a legacy GL library (e.g. &lt;code&gt;libGL.so&lt;/code&gt;) and GLVND libraries for OpenGL and GLX (e.g. &lt;code&gt;libOpenGL.so&lt;/code&gt; and &lt;code&gt;libGLX.so&lt;/code&gt;) are available, the module must choose between them. It documents an &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; variable that can be used to specify an explicit preference. When no such preference is set, the module must choose a default preference.</source>
          <target state="translated">&lt;a href=&quot;../module/findopengl#module:FindOpenGL&quot; id=&quot;index-1-module:FindOpenGL&quot;&gt; &lt;code&gt;FindOpenGL&lt;/code&gt; 의&lt;/a&gt; 모듈은 제공 &lt;code&gt;OpenGL::GL&lt;/code&gt; 목표 및 &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; 의 레거시 GL 인터페이스에 사용할 프로젝트 변수. 레거시 GL 라이브러리 (예 : &lt;code&gt;libGL.so&lt;/code&gt; )와 OpenGL 및 GLX 용 GLVND 라이브러리 (예 : &lt;code&gt;libOpenGL.so&lt;/code&gt; 및 &lt;code&gt;libGLX.so&lt;/code&gt; )를 모두 사용할 수있는 경우 모듈은 이들 중에서 선택해야합니다. 명시 적 환경 설정을 지정하는 데 사용할 수 있는 &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; 변수를 문서화합니다 . 그러한 환경 설정이 설정되어 있지 않으면 모듈은 기본 환경 설정을 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="68ffa07e1a41dd78a870001f4cfb7c03d24d6c64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-0-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; module does not exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-0-module:FindQt&quot;&gt; &lt;code&gt;FindQt&lt;/code&gt; 의&lt;/a&gt; 모듈이 존재하지 않습니다 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c9fac688741565aaef6241c813880fb4776d3eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/writecompilerdetectionheader#module:WriteCompilerDetectionHeader&quot; id=&quot;index-0-module:WriteCompilerDetectionHeader&quot;&gt;&lt;code&gt;WriteCompilerDetectionHeader&lt;/code&gt;&lt;/a&gt; module is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cb4b6bd2902c2db893fefd158f70cf702fde81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global properties contain all the features known to CMake, regardless of compiler support for the feature. The &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variables contain all features CMake knows are known to the compiler, regardless of language standard or compile flags needed to use them.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 전역 속성은 모든 관계없이 기능에 대한 컴파일러 지원, CMake로 알려진 기능이 포함되어 있습니다. &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; 의&lt;/a&gt; 변수는 모든 언어에 상관없이 표준하거나 사용하는 데 필요한 컴파일 플래그, CMake 컴파일러에 알려진 알고 있습니다 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="61611f316cd043239381eeef4f7b0ee3243f78fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_gbl/cmake_cuda_known_features#prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global properties contain all the features known to CMake, regardless of compiler support for the feature. The &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; , and &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variables contain all features CMake knows are known to the compiler, regardless of language standard or compile flags needed to use them.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_gbl/cmake_cuda_known_features#prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CUDA_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 전역 속성은 모든이 기능에 관계없이 컴파일러 지원, CMake로 알려진 기능이 포함되어 있습니다. &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../variable/cmake_cuda_compile_features#variable:CMAKE_CUDA_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CUDA_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt; 의&lt;/a&gt; 변수는 모든 언어에 상관없이 표준하거나 사용하는 데 필요한 컴파일 플래그, CMake 컴파일러에 알려진 알고 있습니다 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd7d658903d60013ee69f9951ed093b2ed37ef9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_gbl/enabled_languages#prop_gbl:ENABLED_LANGUAGES&quot; id=&quot;index-0-prop_gbl:ENABLED_LANGUAGES&quot;&gt;&lt;code&gt;ENABLED_LANGUAGES&lt;/code&gt;&lt;/a&gt; global property contains the languages which are currently enabled.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/enabled_languages#prop_gbl:ENABLED_LANGUAGES&quot; id=&quot;index-0-prop_gbl:ENABLED_LANGUAGES&quot;&gt; &lt;code&gt;ENABLED_LANGUAGES&lt;/code&gt; &lt;/a&gt; 전역 속성은 현재 사용하고있는 언어가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2018d64dd7199ba82276e005402274e0f56c6b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; source file property is now visible in all directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efeac3c25a3ace97aecea4bcd1e58da87f3a11f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; source file property may be globally visible. See its documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc46a773735cb80af8c0ad16e74f8f45e485fbce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_sf/language#prop_sf:LANGUAGE&quot; id=&quot;index-1-prop_sf:LANGUAGE&quot;&gt;&lt;code&gt;LANGUAGE&lt;/code&gt;&lt;/a&gt; source file property is documented to mean that the source file is written in the specified language. In CMake 3.19 and below, setting this property causes CMake to compile the source file using the compiler for the specified language. However, it only passes an explicit flag to tell the compiler to treat the source as the specified language for MSVC-like, XL, and Embarcadero compilers for the &lt;code&gt;CXX&lt;/code&gt; language. CMake 3.20 and above prefer to also explicitly tell the compiler to use the specified language using a flag such as &lt;code&gt;-x c&lt;/code&gt; on all compilers for which such flags are known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb91de08f8df0b57290ea59cd16dcd649297a73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-0-prop_test:RESOURCE_GROUPS&quot;&gt;&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt;&lt;/a&gt; property of tests, which describes the resources required by the test.</source>
          <target state="translated">테스트에 필요한 리소스를 설명하는 테스트 의 &lt;a href=&quot;../prop_test/resource_groups#prop_test:RESOURCE_GROUPS&quot; id=&quot;index-0-prop_test:RESOURCE_GROUPS&quot;&gt; &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; &lt;/a&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="5cb3ebd7672258a024baea69cbee1d585090b43b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/archive_output_name#prop_tgt:ARCHIVE_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_NAME&quot;&gt;&lt;code&gt;ARCHIVE_OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target properties may be used to control archive output artifact locations and names in the build tree.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/archive_output_name#prop_tgt:ARCHIVE_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_NAME&quot;&gt; &lt;code&gt;ARCHIVE_OUTPUT_NAME&lt;/code&gt; &lt;/a&gt; 대상 속성은 빌드 트리에서 아카이브 출력 유물의 위치와 이름을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1274a5a2d36459ae3f924db62029542d3c2d057e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; target property controls whether &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; inspects the C++ files in the target to determine if they require &lt;code&gt;moc&lt;/code&gt; to be run, and to create rules to execute &lt;code&gt;moc&lt;/code&gt; at the appropriate time.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; 의&lt;/a&gt; 여부를 target 속성 컨트롤 &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 가 필요한 경우 확인하기 위해 대상에서 C ++ 파일을 검사 &lt;code&gt;moc&lt;/code&gt; 실행하고, 실행하는 규칙을 만들 &lt;code&gt;moc&lt;/code&gt; 적절한시기에.</target>
        </trans-unit>
        <trans-unit id="c402412cd50ddfe6a5d96852f8aedd23d213744f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; target property may be pre-set for all following targets by setting the &lt;a href=&quot;../variable/cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt;&lt;/a&gt; variable. The &lt;a href=&quot;../prop_tgt/automoc_moc_options#prop_tgt:AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MOC_OPTIONS&quot;&gt;&lt;code&gt;AUTOMOC_MOC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property may be populated to set options to pass to &lt;code&gt;moc&lt;/code&gt;. The &lt;a href=&quot;../variable/cmake_automoc_moc_options#variable:CMAKE_AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_MOC_OPTIONS&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_MOC_OPTIONS&lt;/code&gt;&lt;/a&gt; variable may be populated to pre-set the options for all following targets.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; 의&lt;/a&gt; target 속성이 설정의 다음의 모든 대상에 대해 미리 설정된 수있다 &lt;a href=&quot;../variable/cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt; 의&lt;/a&gt; 변수. &lt;a href=&quot;../prop_tgt/automoc_moc_options#prop_tgt:AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MOC_OPTIONS&quot;&gt; &lt;code&gt;AUTOMOC_MOC_OPTIONS&lt;/code&gt; 의&lt;/a&gt; 대상 속성에 전달할 옵션을 설정으로 채울 수 있습니다 &lt;code&gt;moc&lt;/code&gt; . &lt;a href=&quot;../variable/cmake_automoc_moc_options#variable:CMAKE_AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_MOC_OPTIONS&quot;&gt; &lt;code&gt;CMAKE_AUTOMOC_MOC_OPTIONS&lt;/code&gt; 의&lt;/a&gt; 변수는 다음의 모든 대상에 대한 옵션을 미리 설정되어있을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd323f7e0365077ad11c65914f912e052278a8d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; target property controls whether &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; creates rules to execute &lt;code&gt;rcc&lt;/code&gt; at the appropriate time on source files which have the suffix &lt;code&gt;.qrc&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; 의&lt;/a&gt; 여부 target 속성 제어 &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 실행하기위한 규칙을 작성 &lt;code&gt;rcc&lt;/code&gt; 접미사가 소스 파일에 적절한 시간에 &lt;code&gt;.qrc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0165b746604ffcf977e052a515c033b88cc9482d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; target property may be pre-set for all following targets by setting the &lt;a href=&quot;../variable/cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt;&lt;code&gt;CMAKE_AUTORCC&lt;/code&gt;&lt;/a&gt; variable. The &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property may be populated to set options to pass to &lt;code&gt;rcc&lt;/code&gt;. The &lt;a href=&quot;../variable/cmake_autorcc_options#variable:CMAKE_AUTORCC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;CMAKE_AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; variable may be populated to pre-set the options for all following targets. The &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; source file property may be set on the &lt;code&gt;&amp;lt;name&amp;gt;.qrc&lt;/code&gt; file to set particular options for the file. This overrides options from the &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-1-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; 의&lt;/a&gt; target 속성이 설정의 다음의 모든 대상에 대해 미리 설정된 수있다 &lt;a href=&quot;../variable/cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt; &lt;code&gt;CMAKE_AUTORCC&lt;/code&gt; 의&lt;/a&gt; 변수. &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; 의&lt;/a&gt; 대상 속성에 전달할 옵션을 설정으로되어있을 수도 있습니다 &lt;code&gt;rcc&lt;/code&gt; . &lt;a href=&quot;../variable/cmake_autorcc_options#variable:CMAKE_AUTORCC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;CMAKE_AUTORCC_OPTIONS&lt;/code&gt; 의&lt;/a&gt; 변수는 다음의 모든 대상에 대한 옵션을 미리 설정되어있을 수도 있습니다. &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt; 소스 파일의 속성은 설정 할 수있다 &lt;code&gt;&amp;lt;name&amp;gt;.qrc&lt;/code&gt; 파일에 대한 특정 옵션을 설정하는 파일입니다. 이는 &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-1-prop_tgt:AUTORCC_OPTIONS&quot;&gt; &lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성의 옵션을 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="da2903227496ba5a5bb6c2370c5034cf05121523" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; target property controls whether &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; inspects the C++ files in the target to determine if they require &lt;code&gt;uic&lt;/code&gt; to be run, and to create rules to execute &lt;code&gt;uic&lt;/code&gt; at the appropriate time.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 의&lt;/a&gt; 여부를 target 속성 컨트롤 &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 가 필요한 경우 확인하기 위해 대상에서 C ++ 파일을 검사 &lt;code&gt;uic&lt;/code&gt; 실행하고, 실행하는 규칙을 만들 &lt;code&gt;uic&lt;/code&gt; 적절한 시간에.</target>
        </trans-unit>
        <trans-unit id="cc862a8961b54f857c4ddc884bec91876b562f66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; target property may be pre-set for all following targets by setting the &lt;a href=&quot;../variable/cmake_autouic#variable:CMAKE_AUTOUIC&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC&quot;&gt;&lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt;&lt;/a&gt; variable. The &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property may be populated to set options to pass to &lt;code&gt;uic&lt;/code&gt;. The &lt;a href=&quot;../variable/cmake_autouic_options#variable:CMAKE_AUTOUIC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;CMAKE_AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; variable may be populated to pre-set the options for all following targets. The &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; source file property may be set on the &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; file to set particular options for the file. This overrides options from the &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-1-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 의&lt;/a&gt; target 속성이 설정의 다음의 모든 대상에 대해 미리 설정된 수있다 &lt;a href=&quot;../variable/cmake_autouic#variable:CMAKE_AUTOUIC&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC&quot;&gt; &lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt; 의&lt;/a&gt; 변수. &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; 의&lt;/a&gt; 대상 속성에 전달할 옵션을 설정으로되어있을 수도 있습니다 &lt;code&gt;uic&lt;/code&gt; . &lt;a href=&quot;../variable/cmake_autouic_options#variable:CMAKE_AUTOUIC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;CMAKE_AUTOUIC_OPTIONS&lt;/code&gt; 의&lt;/a&gt; 변수는 다음의 모든 대상에 대한 옵션을 미리 설정되어있을 수도 있습니다. &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; 소스 파일의 속성은 설정 할 수있다 &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; 파일에 대한 일련의 특정 옵션 파일. 이는 &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-1-prop_tgt:AUTOUIC_OPTIONS&quot;&gt; &lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성의 옵션을 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="ce7b1a686a61e4df58a4071d46f47334ac1d578d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/compatible_interface_number_max#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt;&lt;/a&gt; target property specifies that content will be evaluated numerically and the maximum number among all specified will be calculated:</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/compatible_interface_number_max#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt; 의&lt;/a&gt; 함유량 수치 계산되며 모든 지정된 중 최대 수가 계산 될 것을 목표 속성 지정</target>
        </trans-unit>
        <trans-unit id="c5c28c3d28a6592a7f05b8cadb1b1405d40772db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/library_output_name#prop_tgt:LIBRARY_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_NAME&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target properties may be used to control library output artifact locations and names in the build tree.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/library_output_name#prop_tgt:LIBRARY_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_NAME&quot;&gt; &lt;code&gt;LIBRARY_OUTPUT_NAME&lt;/code&gt; &lt;/a&gt; 대상 속성은 빌드 트리에서 라이브러리 출력 유물의 위치와 이름을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7a8ad76ac05c0590385ccf0ee6fa33ffd7fdf59" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-0-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; may also be read from an IMPORTED target, though there is rarely reason to do so. Commands such as &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-3-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; can transparently use an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-8-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../prop_tgt/type#prop_tgt:TYPE&quot; id=&quot;index-1-prop_tgt:TYPE&quot;&gt;&lt;code&gt;EXECUTABLE&lt;/code&gt;&lt;/a&gt; target as a &lt;code&gt;COMMAND&lt;/code&gt; executable.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-0-prop_tgt:LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; 은&lt;/a&gt; 그렇게 할 이유가 거의 없다하지만 또한, 수입 대상에서 읽을 수 있습니다. &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-3-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 와 같은 명령 은 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-8-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../prop_tgt/type#prop_tgt:TYPE&quot; id=&quot;index-1-prop_tgt:TYPE&quot;&gt; &lt;code&gt;EXECUTABLE&lt;/code&gt; &lt;/a&gt; 대상을 &lt;code&gt;COMMAND&lt;/code&gt; 실행 파일 로 투명하게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b92d7154289bc1df88ca0415efde52b7bbdffc51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/runtime_output_name#prop_tgt:RUNTIME_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_NAME&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target properties may be used to control runtime output artifact locations and names in the build tree.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/runtime_output_name#prop_tgt:RUNTIME_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_NAME&quot;&gt; &lt;code&gt;RUNTIME_OUTPUT_NAME&lt;/code&gt; &lt;/a&gt; 대상 속성 빌드 트리 제어 출력 런타임 아티팩트 위치 및 이름을 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="ab761ec7eba3e00b2e886071ea1c030828f2b2f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; variable may be enabled to change the behavior of &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-2-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; to build shared libraries by default.</source>
          <target state="translated">&lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt; &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; 의&lt;/a&gt; 변수의 행동을 변경하는 것이 가능하게 될 수있다 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-2-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 기본적으로 공유 라이브러리를 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="244b5404d93342ce1a1f7762923d9824de456b72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_apple_silicon_processor#variable:CMAKE_APPLE_SILICON_PROCESSOR&quot; id=&quot;index-0-variable:CMAKE_APPLE_SILICON_PROCESSOR&quot;&gt;&lt;code&gt;CMAKE_APPLE_SILICON_PROCESSOR&lt;/code&gt;&lt;/a&gt; normal variable, if set, overrides this environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77946c786e04028f64f9d372e7eeacb918bdac56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_directory_labels#variable:CMAKE_DIRECTORY_LABELS&quot; id=&quot;index-0-variable:CMAKE_DIRECTORY_LABELS&quot;&gt;&lt;code&gt;CMAKE_DIRECTORY_LABELS&lt;/code&gt;&lt;/a&gt; variable can be used to initialize this property.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_directory_labels#variable:CMAKE_DIRECTORY_LABELS&quot; id=&quot;index-0-variable:CMAKE_DIRECTORY_LABELS&quot;&gt; &lt;code&gt;CMAKE_DIRECTORY_LABELS&lt;/code&gt; 의&lt;/a&gt; 변수는이 속성을 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49ec61d93574501ebd1af6888ac91b5d9451d252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt; tells the generator which SDK to use. Further &lt;a href=&quot;../variable/cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; tells the generator what version of Windows CE to use. Currently version 8.0 (Windows Embedded Compact 2013) is supported out of the box. Other versions may require one to set &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; to the correct value.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; 는&lt;/a&gt; 사용 SDK 발전기를 알려줍니다. 또한 &lt;a href=&quot;../variable/cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt; 은 생성기에 사용할 Windows CE 버전을 알려줍니다. 현재 버전 8.0 (Windows Embedded Compact 2013)이 기본적으로 지원됩니다. 다른 버전에서는 &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt; 을 올바른 값 으로 설정 해야합니다.</target>
        </trans-unit>
        <trans-unit id="190bd04f1716ebc36a04ce23734eca8556d15d95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-1-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; may be set to select the Nsight Tegra &quot;Toolchain Version&quot; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a672a714890472828b358628717b7b92bbae7188" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-1-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; may be set to select the Nsight Tegra &amp;ldquo;Toolchain Version&amp;rdquo; value.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-1-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; 는&lt;/a&gt; Nsight 테그 라 (Tegra) &quot;툴체인 버전&quot;값을 선택할 수있다.</target>
        </trans-unit>
        <trans-unit id="dc4ef70ba394a4fe08109a73d66e7d11aa3b9ad9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; variable may also be used to determine whether to report an error on use of deprecated macros or functions.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt; &lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt; 의&lt;/a&gt; 변수는 사용되지 않는 매크로 나 기능의 사용에 대한 오류를보고할지 여부를 결정하는 데 이용 될 수있다.</target>
        </trans-unit>
        <trans-unit id="b1258511190c4ba4f0bcc98dd60c8331c74f338f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; is also optional. It may be used to specify a path on the host to install to. The &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; is always the runtime installation location, even when cross-compiling.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; 은&lt;/a&gt; 또한 선택 사항입니다. 호스트에서 설치할 경로를 지정하는 데 사용될 수 있습니다. &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 는&lt;/a&gt; 크로스 컴파일 할 경우에도, 항상 런타임 설치 위치입니다.</target>
        </trans-unit>
        <trans-unit id="6a909a6bc74cf78a7549cafd9b77b67927b3fa2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; is optional, and may be specified if a sysroot is available.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; 는&lt;/a&gt; 선택 사항이며, SYSROOT를 사용할 수있는 경우 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b81d3a9cebc945d958afb28aaa395f0d744d624" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable can also be used to specify exactly one directory to use as a prefix. Setting &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; also has other effects. See the documentation for that variable for more.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; 의&lt;/a&gt; 변수는 접두사로 사용하는 단 하나의 디렉토리를 지정하는 데 사용할 수 있습니다. &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 를 설정하면 다른 효과도 있습니다. 자세한 내용은 해당 변수의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="095e031c74d68175d3430d1271c40789f93f8c0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; is the CMake-identifier of the target platform to build for.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 을&lt;/a&gt; 위한 빌드 대상 플랫폼의 CMake - 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="574cd31898758a54e1042cde492c619cd9bcdfb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_system_processor#variable:CMAKE_SYSTEM_PROCESSOR&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PROCESSOR&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PROCESSOR&lt;/code&gt;&lt;/a&gt; is the CMake-identifier of the target architecture to build for.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_system_processor#variable:CMAKE_SYSTEM_PROCESSOR&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PROCESSOR&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PROCESSOR&lt;/code&gt; 을&lt;/a&gt; 위한 빌드 타겟 아키텍처의 CMake - 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="81f02b64dac1560ad2b0e28d421f34c7ba8d2303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt;&lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt;&lt;/a&gt; variable may be set to explicitly specify the build command line. Otherwise the build command line is computed automatically based on the options given.</source>
          <target state="translated">&lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt; &lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt; 의&lt;/a&gt; 변수는 명시 적으로 빌드 명령 줄을 지정하도록 설정할 수 있습니다. 그렇지 않으면 주어진 옵션에 따라 빌드 명령 행이 자동으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="e1db8f96e8bceed82a1a8cea6d78f3fc83b48e66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-0-manual:cmake-commands(7)&quot;&gt;&lt;code&gt;cmake-commands(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-0-manual:cmake-commands(7)&quot;&gt; &lt;code&gt;cmake-commands(7)&lt;/code&gt; &lt;/a&gt; 에 대한 수동 입력 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 사람이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="52fd413cc4b74b48262e719843c8e369e83443a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-1-manual:cmake-commands(7)&quot;&gt;&lt;code&gt;cmake-commands(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-1-manual:cmake-commands(7)&quot;&gt; &lt;code&gt;cmake-commands(7)&lt;/code&gt; &lt;/a&gt; 설명서는 인간이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="81e9a14c5f5a49f17ecdd49391e7ee821a34cca5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-env-variables.7#manual:cmake-env-variables(7)&quot; id=&quot;index-0-manual:cmake-env-variables(7)&quot;&gt;&lt;code&gt;cmake-env-variables(7)&lt;/code&gt;&lt;/a&gt; manual documents environment variables that have special meaning to CMake.</source>
          <target state="translated">&lt;a href=&quot;cmake-env-variables.7#manual:cmake-env-variables(7)&quot; id=&quot;index-0-manual:cmake-env-variables(7)&quot;&gt; &lt;code&gt;cmake-env-variables(7)&lt;/code&gt; &lt;/a&gt; CMake에 특별한 의미를 갖는 수동 문서 환경 변수.</target>
        </trans-unit>
        <trans-unit id="a64b70fb075faf4dab16d460f601018ec56c2495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-modules.7#manual:cmake-modules(7)&quot; id=&quot;index-0-manual:cmake-modules(7)&quot;&gt;&lt;code&gt;cmake-modules(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;mod&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-modules.7#manual:cmake-modules(7)&quot; id=&quot;index-0-manual:cmake-modules(7)&quot;&gt; &lt;code&gt;cmake-modules(7)&lt;/code&gt; &lt;/a&gt; 을위한 수동 입력 &lt;code&gt;&amp;lt;mod&amp;gt;&lt;/code&gt; 사람이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="4acad0ed6ac622dfe795e3acebd96961877a6de6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-modules.7#manual:cmake-modules(7)&quot; id=&quot;index-1-manual:cmake-modules(7)&quot;&gt;&lt;code&gt;cmake-modules(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-modules.7#manual:cmake-modules(7)&quot; id=&quot;index-1-manual:cmake-modules(7)&quot;&gt; &lt;code&gt;cmake-modules(7)&lt;/code&gt; &lt;/a&gt; 설명서는 인간이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="1e6a451c32d7773d468b69c76f6ab6107dc9ca66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;cmake-policies(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;cmp&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt; &lt;code&gt;cmake-policies(7)&lt;/code&gt; &lt;/a&gt; 에 대한 수동 입력 &lt;code&gt;&amp;lt;cmp&amp;gt;&lt;/code&gt; 사람이 읽을 수있는 텍스트 형식으로 인쇄됩니다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="b73b1e9d325d3bbe51f74512ab5b366fd9e31755" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-1-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;cmake-policies(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-1-manual:cmake-policies(7)&quot;&gt; &lt;code&gt;cmake-policies(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼은 사람이 읽을 수있는 텍스트 형식으로 인쇄됩니다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="c3c139b5155ddb8beac2a76dece48cff06d5c00f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-0-manual:cmake-properties(7)&quot;&gt;&lt;code&gt;cmake-properties(7)&lt;/code&gt;&lt;/a&gt; manual entries for &lt;code&gt;&amp;lt;prop&amp;gt;&lt;/code&gt; are printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-0-manual:cmake-properties(7)&quot;&gt; &lt;code&gt;cmake-properties(7)&lt;/code&gt; &lt;/a&gt; 수동 항목 &lt;code&gt;&amp;lt;prop&amp;gt;&lt;/code&gt; 사람이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="3f39d077f33b9d066b1f3261205bc301d836de39" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-1-manual:cmake-properties(7)&quot;&gt;&lt;code&gt;cmake-properties(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-1-manual:cmake-properties(7)&quot;&gt; &lt;code&gt;cmake-properties(7)&lt;/code&gt; &lt;/a&gt; 설명서는 인간이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="7de9a29dd230a928d289231edcddca134a37c5dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-0-manual:cmake-variables(7)&quot;&gt;&lt;code&gt;cmake-variables(7)&lt;/code&gt;&lt;/a&gt; manual documents the many variables that are provided by CMake or have meaning to CMake when set by project code.</source>
          <target state="translated">&lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-0-manual:cmake-variables(7)&quot;&gt; &lt;code&gt;cmake-variables(7)&lt;/code&gt; &lt;/a&gt; 수동 문서 CMake에 의해 제공됩니다 또는 프로젝트 코드로 설정할 때 CMake에 의미 한 많은 변수.</target>
        </trans-unit>
        <trans-unit id="0c85e5542acfd83e7ac13a1f4ea178fc33e83cb6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-0-manual:cmake-variables(7)&quot;&gt;&lt;code&gt;cmake-variables(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-0-manual:cmake-variables(7)&quot;&gt; &lt;code&gt;cmake-variables(7)&lt;/code&gt; &lt;/a&gt; 설명서 항목 &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; 사람이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="39364cdc02da8ebfdaf156c54ea1a78b5dc423f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-1-manual:cmake-variables(7)&quot;&gt;&lt;code&gt;cmake-variables(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="translated">&lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-1-manual:cmake-variables(7)&quot;&gt; &lt;code&gt;cmake-variables(7)&lt;/code&gt; &lt;/a&gt; 설명서는 인간이 읽을 수있는 텍스트 형식으로 출력된다. 도움말은 이름이 지정된 &amp;lt;f&amp;gt; 파일로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="3668ad7bb5f58f9e18244a978854d89a54027efa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; server mode has been removed since CMake 3.20. Clients should use the &lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;cmake-file-api(7)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bfa37cd68d5b92b2ebbcf1d7305398fa7aa80f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_apple_silicon_processor#variable:CMAKE_APPLE_SILICON_PROCESSOR&quot; id=&quot;index-0-variable:CMAKE_APPLE_SILICON_PROCESSOR&quot;&gt;&lt;code&gt;CMAKE_APPLE_SILICON_PROCESSOR&lt;/code&gt;&lt;/a&gt; variable or the &lt;a href=&quot;../envvar/cmake_apple_silicon_processor#envvar:CMAKE_APPLE_SILICON_PROCESSOR&quot; id=&quot;index-0-envvar:CMAKE_APPLE_SILICON_PROCESSOR&quot;&gt;&lt;code&gt;CMAKE_APPLE_SILICON_PROCESSOR&lt;/code&gt;&lt;/a&gt; environment variable may be set to specify the host architecture explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cfbe65e12d4d4a8589debed1c0ee3af724f5d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(CALL ...)&lt;/code&gt;&lt;/a&gt; command can also be used to invoke the function.</source>
          <target state="translated">&lt;a href=&quot;cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt; &lt;code&gt;cmake_language(CALL ...)&lt;/code&gt; &lt;/a&gt; 명령은 함수를 호출 할 수있다.</target>
        </trans-unit>
        <trans-unit id="df1e10f6589347af8496bf3bdeb8361144c54fac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt;&lt;code&gt;cmake_language(CALL ...)&lt;/code&gt;&lt;/a&gt; command can also be used to invoke the macro.</source>
          <target state="translated">&lt;a href=&quot;cmake_language#command:cmake_language&quot; id=&quot;index-0-command:cmake_language&quot;&gt; &lt;code&gt;cmake_language(CALL ...)&lt;/code&gt; &lt;/a&gt; 명령은 매크로를 호출하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9356e2fe3192317b527675d0fda0faa013cb94ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; is initialized on the first call to a &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command. Therefore one must set &lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt; before this in order to take effect. A user may set the variable as a cache entry on the command line to achieve this.</source>
          <target state="translated">&lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt; 는&lt;/a&gt; A와 첫 번째 전화에서 초기화 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt; 명령. 따라서이를 적용하려면 &lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt; 를 설정해야합니다 . 이를 위해 사용자는 변수를 명령 행에서 캐시 항목으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0559768154badc84df1c83d31c3845e3fdb2e029" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_vs_devenv_command#variable:CMAKE_VS_DEVENV_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_DEVENV_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_DEVENV_COMMAND&lt;/code&gt;&lt;/a&gt; is also provided for the non-Express editions of Visual Studio. See also the &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;cmake_vs_devenv_command#variable:CMAKE_VS_DEVENV_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_DEVENV_COMMAND&quot;&gt; &lt;code&gt;CMAKE_VS_DEVENV_COMMAND&lt;/code&gt; 는&lt;/a&gt; 또한 비주얼 스튜디오의 비 익스프레스 에디션을 위해 제공됩니다. &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0471bf1796074213fccfaf251c2c3546b69961be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt;&lt;/a&gt; is also provided for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above. See also the &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt; &lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt; 는&lt;/a&gt; 또한 제공됩니다 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt; &lt;code&gt;Visual Studio 10 2010&lt;/code&gt; &lt;/a&gt; 이상. &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60a80fe65231a5811432505b53af494f2edfe946" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt;&lt;/a&gt; is also provided for &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above. See also the &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt; &lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt; 는&lt;/a&gt; 또한 제공됩니다 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt; &lt;code&gt;Visual Studio 10 2010&lt;/code&gt; &lt;/a&gt; 이상. &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e17acb522c16930115bfd492889bdece8846a85a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt;&lt;/a&gt; is also provided for &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above. See also the &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160b7b06aa122c3b9e28a64f0e24a27cf993ae8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; module can be used if Python version does not matter for you.</source>
          <target state="translated">&lt;a href=&quot;findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt; &lt;code&gt;FindPython&lt;/code&gt; 의&lt;/a&gt; 파이썬 버전이 문제가되지 않을 경우 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46133104d1f9c3164cfc1840bef81afa077fa29e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;guide/using-dependencies/index#guide:Using%20Dependencies%20Guide&quot; id=&quot;index-0-guide:Using Dependencies Guide&quot;&gt;&lt;code&gt;Using Dependencies Guide&lt;/code&gt;&lt;/a&gt; is aimed at developers wishing to get started using a third-party library.</source>
          <target state="translated">&lt;a href=&quot;guide/using-dependencies/index#guide:Using%20Dependencies%20Guide&quot; id=&quot;index-0-guide:Using Dependencies Guide&quot;&gt; &lt;code&gt;Using Dependencies Guide&lt;/code&gt; &lt;/a&gt; 타사 라이브러리를 사용하여 시작하고자하는 개발자를 대상으로합니다.</target>
        </trans-unit>
        <trans-unit id="01c4f8c1880340718a996dd12cd0109c04f50825" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt; 발전기</target>
        </trans-unit>
        <trans-unit id="4a45292b1542b6e1e7dd31ef77d6a5a29d032ff7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator sets this to the full path to &lt;code&gt;gbuild.exe(Windows)&lt;/code&gt; or &lt;code&gt;gbuild(Linux)&lt;/code&gt; based upon the toolset being used.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt; 전체 경로에 발전기 세트이하는 &lt;code&gt;gbuild.exe(Windows)&lt;/code&gt; 또는 &lt;code&gt;gbuild(Linux)&lt;/code&gt; 도구 세트는 사용에 따라.</target>
        </trans-unit>
        <trans-unit id="8604c3fb98c53d35df445a293c8e50a8580a8251" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;ninja&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 발생기이 설정 &lt;code&gt;ninja&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ae10605ab7f680a86639ab6be010e553abef90e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator for Xcode 3.0 and above</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 엑스 코드 3.0 이상 발생기</target>
        </trans-unit>
        <trans-unit id="50298d5f622eb640a86b86c2021b9c0cea2bb53a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;xcodebuild&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기는이 설정 &lt;code&gt;xcodebuild&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6214a4a3837adc7b7d59ec170f30ddc88b3bdb46" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt; 발전기</target>
        </trans-unit>
        <trans-unit id="1085035c21bd93ff700ec1479a2257bf93888099" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator sets this to the full path to &lt;code&gt;gbuild.exe(Windows)&lt;/code&gt; or &lt;code&gt;gbuild(Linux)&lt;/code&gt; based upon the toolset being used.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt; &lt;code&gt;Green Hills MULTI&lt;/code&gt; &lt;/a&gt; 전체 경로에 발전기 세트이하는 &lt;code&gt;gbuild.exe(Windows)&lt;/code&gt; 또는 &lt;code&gt;gbuild(Linux)&lt;/code&gt; 도구 세트는 사용에 따라.</target>
        </trans-unit>
        <trans-unit id="0fc4b9b35bd4e66421ef446269d14b3bc1165ddc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator is available on all major platforms. &lt;code&gt;ninja&lt;/code&gt; is a build tool similar in use-cases to &lt;code&gt;make&lt;/code&gt;, but with a focus on performance and efficiency.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기는 모든 주요 플랫폼에서 사용할 수 있습니다. &lt;code&gt;ninja&lt;/code&gt; 에 사용 사례와 유사한 빌드 도구 &lt;code&gt;make&lt;/code&gt; ,하지만 성능과 효율성에 초점을 맞춘.</target>
        </trans-unit>
        <trans-unit id="9bc49d1fc5184bdb2dacfa7fa82156fe53637b6d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;ninja&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 발생기이 설정 &lt;code&gt;ninja&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77eb3414ea2e84e127634425334815c46509719d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator defines this variable to indicate which variant of the Xcode build system will be used. The value is the version of Xcode in which the corresponding build system first became mature enough for use by CMake. The possible values are:</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기가 사용되는 Xcode의 빌드 시스템의 변형 나타 내기 위해이 변수를 정의합니다. 값은 해당 빌드 시스템이 처음 CMake에서 사용할 수있을만큼 충분히 성숙 된 Xcode 버전입니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="053e31ff8f5a91fc53b7f8d90899d3010f970eed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator for Xcode 3.0 and above</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 엑스 코드 3.0 이상 발생기</target>
        </trans-unit>
        <trans-unit id="aa5be8d61566f1e1a0036096f9f37c7561dc4add" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;xcodebuild&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 생성기는이 설정 &lt;code&gt;xcodebuild&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a85a6b1810136629caeb2b9994316ea5c2eda128" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b21928efc9b40e35a22d5cde70be7dacbbf67e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator sets this to the full path to &lt;code&gt;gbuild.exe(Windows)&lt;/code&gt; or &lt;code&gt;gbuild(Linux)&lt;/code&gt; based upon the toolset being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62585d1960fb36e643113464853855d84057b4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator is available on all major platforms. &lt;code&gt;ninja&lt;/code&gt; is a build tool similar in use-cases to &lt;code&gt;make&lt;/code&gt;, but with a focus on performance and efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877e03b614e9d6a19f4fa5a3552a22014ccf4a68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;ninja&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e714651dcc12973000f4bbf8349250fb2b42ca48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator defines this variable to indicate which variant of the Xcode build system will be used. The value is the version of Xcode in which the corresponding build system first became mature enough for use by CMake. The possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a17a100070104b9027709dcabff9055d6b4d0a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator for Xcode 3.0 and above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e839565dc8961d232c13fd139a3295729e6832" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;xcodebuild&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e625acbe31f91779afe51a30b9825cd49e63cf28" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.nvidia.com/CUPTI&quot;&gt;NVIDIA CUDA Profiling Tools Interface&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.nvidia.com/CUPTI&quot;&gt;NVIDIA CUDA 프로파일 링 도구 인터페이스&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b816e3eada364d6c4b09e3a9f94d24b67364475" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.nvidia.com/nvidia-management-library-nvml&quot;&gt;NVIDIA Management Library&lt;/a&gt;. This is a shared library only.</source>
          <target state="translated">&lt;a href=&quot;https://developer.nvidia.com/nvidia-management-library-nvml&quot;&gt;NVIDIA 관리 라이브러리&lt;/a&gt; . 이것은 공유 라이브러리 전용입니다.</target>
        </trans-unit>
        <trans-unit id="37dc4df09e4f80903db2e19c13a7a18b7ef5c7a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.nvidia.com/opencl&quot;&gt;NVIDIA OpenCL Library&lt;/a&gt;. This is a shared library only.</source>
          <target state="translated">&lt;a href=&quot;https://developer.nvidia.com/opencl&quot;&gt;NVIDIA의 OpenCL 도서관&lt;/a&gt; . 이것은 공유 라이브러리 전용입니다.</target>
        </trans-unit>
        <trans-unit id="615e0da1740b43ba0b87a7d42dba1c8fb283c380" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/cublas/index.html&quot;&gt;cuBLAS&lt;/a&gt; library.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/cublas/index.html&quot;&gt;CUBLAS의&lt;/a&gt; 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="83490269b573a68aa0cb480d9691d634634cb698" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/cufft/index.html&quot;&gt;cuFFT&lt;/a&gt; library.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/cufft/index.html&quot;&gt;cuFFT의&lt;/a&gt; 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="8b31c863c7578c46b2c24fe0ee311c29284b74d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/curand/index.html&quot;&gt;cuRAND&lt;/a&gt; library.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/curand/index.html&quot;&gt;cuRAND의&lt;/a&gt; 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="cfb1752d67399a9bafd48222e50baa8e0bc4d21d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/cusolver/index.html&quot;&gt;cuSOLVER&lt;/a&gt; library.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/cusolver/index.html&quot;&gt;cuSOLVER의&lt;/a&gt; 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="465a275ea5fe711e82e47b7f258f2d04c6b032ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/cusparse/index.html&quot;&gt;cuSPARSE&lt;/a&gt; library.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/cusparse/index.html&quot;&gt;cuSPARSE의&lt;/a&gt; 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="feba414483139bd08f2e390239ee3436f719469b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/npp/index.html&quot;&gt;NPP&lt;/a&gt; libraries.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/npp/index.html&quot;&gt;NPP의&lt;/a&gt; 라이브러리.</target>
        </trans-unit>
        <trans-unit id="2ffd8c2b00f81bad97a35174f1eee7ca57daeff1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/nvblas/index.html&quot;&gt;nvBLAS&lt;/a&gt; libraries. This is a shared library only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/nvblas/index.html&quot;&gt;nvBLAS의&lt;/a&gt; 라이브러리. 이것은 공유 라이브러리 전용입니다.</target>
        </trans-unit>
        <trans-unit id="0784036c03316727583e2122665b24414b66e5f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/nvgraph/index.html&quot;&gt;nvGRAPH&lt;/a&gt; library. Removed starting in CUDA 11.0</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/nvgraph/index.html&quot;&gt;nvGRAPH의&lt;/a&gt; 라이브러리입니다. CUDA 11.0부터 제거됨</target>
        </trans-unit>
        <trans-unit id="8c4a84dccef5dd6033e2fb73747e431a49a54746" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/nvjpeg/index.html&quot;&gt;nvJPEG&lt;/a&gt; library. Introduced in CUDA 10.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/nvjpeg/index.html&quot;&gt;nvJPEG의&lt;/a&gt; 라이브러리입니다. CUDA 10에 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="07d64cf35a186be152fc827eb21aab687bbe3c96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/cuda/nvrtc/index.html&quot;&gt;nvRTC&lt;/a&gt; (Runtime Compilation) library. This is a shared library only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/cuda/nvrtc/index.html&quot;&gt;nvRTC&lt;/a&gt; (런타임 컴파일) 라이브러리. 이것은 공유 라이브러리 전용입니다.</target>
        </trans-unit>
        <trans-unit id="3b6f0c5577eabdf3b47645fcd8511c0c40ecf4e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.nvidia.com/gameworks/content/gameworkslibrary/nvtx/nvidia_tools_extension_library_nvtx.htm&quot;&gt;NVIDIA Tools Extension&lt;/a&gt;. This is a shared library only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.nvidia.com/gameworks/content/gameworkslibrary/nvtx/nvidia_tools_extension_library_nvtx.htm&quot;&gt;NVIDIA 도구 확장&lt;/a&gt; . 이것은 공유 라이브러리 전용입니다.</target>
        </trans-unit>
        <trans-unit id="7ea95a5067d9474e9cd6e1f01fa599bb1b40a41b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pre_install_script#prop_tgt:PRE_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:PRE_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt; properties are the old way to specify CMake scripts to run before and after installing a target. They are used only when the old &lt;code&gt;INSTALL_TARGETS&lt;/code&gt; command is used to install the target. Use the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command instead.</source>
          <target state="translated">&lt;a href=&quot;pre_install_script#prop_tgt:PRE_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:PRE_INSTALL_SCRIPT&quot;&gt; &lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt; 속성은 이전과 목표를 설치 한 후 실행에 CMake 스크립트를 지정하는 기존의 방법입니다. 이전 &lt;code&gt;INSTALL_TARGETS&lt;/code&gt; 명령을 사용하여 대상을 설치하는 경우에만 사용됩니다 . 사용 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 대신 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="745a3cddefba3797a8ec9121d95e940c2dccabc6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command should be preferred whenever possible. Library dependencies are chained automatically, so directory-wide specification of link libraries is rarely needed.</source>
          <target state="translated">&lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령은 가능하면 바람직 할 것이다. 라이브러리 종속성은 자동으로 연결되므로 링크 라이브러리의 디렉토리 전체 사양은 거의 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="310345ab91f3ee0f4d7120cd117e3bfa0fc806fe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;unity_build_code_before_include#prop_tgt:UNITY_BUILD_CODE_BEFORE_INCLUDE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_CODE_BEFORE_INCLUDE&quot;&gt;&lt;code&gt;UNITY_BUILD_CODE_BEFORE_INCLUDE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;unity_build_code_after_include#prop_tgt:UNITY_BUILD_CODE_AFTER_INCLUDE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_CODE_AFTER_INCLUDE&quot;&gt;&lt;code&gt;UNITY_BUILD_CODE_AFTER_INCLUDE&lt;/code&gt;&lt;/a&gt; target properties can be used to inject code into the unity source files before and after every &lt;code&gt;#include&lt;/code&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;unity_build_code_before_include#prop_tgt:UNITY_BUILD_CODE_BEFORE_INCLUDE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_CODE_BEFORE_INCLUDE&quot;&gt; &lt;code&gt;UNITY_BUILD_CODE_BEFORE_INCLUDE&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;unity_build_code_after_include#prop_tgt:UNITY_BUILD_CODE_AFTER_INCLUDE&quot; id=&quot;index-0-prop_tgt:UNITY_BUILD_CODE_AFTER_INCLUDE&quot;&gt; &lt;code&gt;UNITY_BUILD_CODE_AFTER_INCLUDE&lt;/code&gt; &lt;/a&gt; 대상 속성 전에 모든 후 일치 원본 파일에 분사 코드를 사용할 수 있습니다 &lt;code&gt;#include&lt;/code&gt; 문.</target>
        </trans-unit>
        <trans-unit id="006f1394aaeca385d7bf9afcf0e287e676186138" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$&amp;lt;INSTALL_PREFIX&amp;gt;&lt;/code&gt;&lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; may be used as a placeholder for the install prefix without resulting in a non-relocatable package. This is necessary if complex generator expressions are used:</source>
          <target state="translated">&lt;code&gt;$&amp;lt;INSTALL_PREFIX&amp;gt;&lt;/code&gt; &lt;a href=&quot;../../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt; 비 패키지 변동을 초래하지 않고 설치 프리픽스에 대한 자리로서 사용될 수있다. 복잡한 생성기 표현식이 사용되는 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="70c5f66d77d65ef4ad19b2a270b2f00721291dbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$&amp;lt;INSTALL_PREFIX&amp;gt;&lt;/code&gt;&lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; may be used as a placeholder for the install prefix without resulting in a non-relocatable package. This is necessary if complex generator expressions are used:</source>
          <target state="translated">&lt;code&gt;$&amp;lt;INSTALL_PREFIX&amp;gt;&lt;/code&gt; &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt; 비 패키지 변동을 초래하지 않고 설치 프리픽스에 대한 자리로서 사용될 수있다. 복잡한 생성기 표현식을 사용하는 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="738fba7d4b5c8bd5b9064f3f8b6101a8ac956d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-0-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; target properties can also be considered.</source>
          <target state="translated">&lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; 및 &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-0-prop_tgt:DEBUG_POSTFIX&quot;&gt; &lt;code&gt;DEBUG_POSTFIX&lt;/code&gt; 의&lt;/a&gt; 타겟 특성도 고려 될 수있다.</target>
        </trans-unit>
        <trans-unit id="13f8883ee34fda042e7a454c3cb318425d4fa310" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-1-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; target properties can also be considered.</source>
          <target state="translated">&lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; 및 &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-1-prop_tgt:DEBUG_POSTFIX&quot;&gt; &lt;code&gt;DEBUG_POSTFIX&lt;/code&gt; 의&lt;/a&gt; 타겟 특성도 고려 될 수있다.</target>
        </trans-unit>
        <trans-unit id="592092e7c293a786cdce19b43e9932ca54adc66b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-2-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; target properties can also be considered.</source>
          <target state="translated">&lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; 및 &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-2-prop_tgt:DEBUG_POSTFIX&quot;&gt; &lt;code&gt;DEBUG_POSTFIX&lt;/code&gt; 의&lt;/a&gt; 타겟 특성도 고려 될 수있다.</target>
        </trans-unit>
        <trans-unit id="b98be8f19b63e47ab6024a50eef97b450c8d6e75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/visibility_inlines_hidden#prop_tgt:VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-prop_tgt:VISIBILITY_INLINES_HIDDEN&quot;&gt;&lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt;&lt;/a&gt; target properties affect visibility of symbols during dynamic linking. When first introduced these properties affected compilation of sources only in shared libraries, module libraries, and executables with the &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; property set. This was sufficient for the basic use cases of shared libraries and executables with plugins. However, some sources may be compiled as part of static libraries or object libraries and then linked into a shared library later. CMake 3.3 and above prefer to honor these properties for sources compiled in all target types. This policy preserves compatibility for projects expecting the properties to work only for some target types.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET&lt;/code&gt; 및 &lt;a href=&quot;../prop_tgt/visibility_inlines_hidden#prop_tgt:VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-prop_tgt:VISIBILITY_INLINES_HIDDEN&quot;&gt; &lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt; &lt;/a&gt; 대상 속성은 동적 링크시 심볼 시인성에 영향을 미친다. 처음 소개되었을 때 이러한 속성은 &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 속성이 설정된 공유 라이브러리, 모듈 라이브러리 및 실행 파일의 소스 컴파일에만 영향을 미쳤습니다 . 이는 플러그인이있는 공유 라이브러리 및 실행 파일의 기본 사용 사례에 충분했습니다. 그러나 일부 소스는 정적 라이브러리 또는 오브젝트 라이브러리의 일부로 컴파일 된 후 나중에 공유 라이브러리에 링크 될 수 있습니다. CMake 3.3 이상은 모든 대상 유형으로 컴파일 된 소스에 대해 이러한 특성을 준수하는 것을 선호합니다. 이 정책은 속성이 일부 대상 유형에서만 작동 할 것으로 예상되는 프로젝트의 호환성을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="c9271c6c74d52aa9ee9a0742235ed6e0d3658296" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET&lt;/code&gt; property determines the value passed in a visibility related compile option, such as &lt;code&gt;-fvisibility=&lt;/code&gt; for &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;. This property affects compilation in sources of all types of targets (subject to policy &lt;a href=&quot;../policy/cmp0063#policy:CMP0063&quot; id=&quot;index-0-policy:CMP0063&quot;&gt;&lt;code&gt;CMP0063&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">(가) &lt;code&gt;&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET&lt;/code&gt; 속성과 같은 컴파일 옵션과 관련된 시야에서 전달 된 값 결정 &lt;code&gt;-fvisibility=&lt;/code&gt; 대한 &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; . 이 특성은 모든 유형의 대상 소스에서 컴파일에 영향을줍니다 (정책 &lt;a href=&quot;../policy/cmp0063#policy:CMP0063&quot; id=&quot;index-0-policy:CMP0063&quot;&gt; &lt;code&gt;CMP0063&lt;/code&gt; 에&lt;/a&gt; 따라 다름 ).</target>
        </trans-unit>
        <trans-unit id="613e6e8af3a413b4316f7b795d262a26a4b874b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; target</source>
          <target state="translated">&lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 의 타겟</target>
        </trans-unit>
        <trans-unit id="0b206716bd79fd85bc3e1784743b0c779ae56ec3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PRIVATE|PUBLIC|INTERFACE&amp;gt;&lt;/code&gt; keyword to use for internal &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; calls. The default is to use no keyword which uses the old &quot;plain&quot; form of &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. Note that is matters because whatever is used inside the &lt;code&gt;FindCUDA&lt;/code&gt; module must also be used outside - the two forms of &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; cannot be mixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd40962fcaa4d40729be39afea33e770932c8bff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b5775f60e1a63664886108ece3d276e564d2191" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; which is searched for</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 에서 검색</target>
        </trans-unit>
        <trans-unit id="a092dbe3ec4cc698ff3a17d38716cdf90bd332ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable will be set to &lt;code&gt;TRUE&lt;/code&gt; if all the variables &lt;code&gt;&amp;lt;required-var&amp;gt;...&lt;/code&gt; are valid and any optional constraints are satisfied, and &lt;code&gt;FALSE&lt;/code&gt; otherwise. A success or failure message may be displayed based on the results and on whether the &lt;code&gt;REQUIRED&lt;/code&gt; and/or &lt;code&gt;QUIET&lt;/code&gt; option was given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 변수로 설정됩니다 &lt;code&gt;TRUE&lt;/code&gt; 모든 경우 변수 &lt;code&gt;&amp;lt;required-var&amp;gt;...&lt;/code&gt; 유효하며 선택적 제약 조건을 만족하고있다 &lt;code&gt;FALSE&lt;/code&gt; 그렇지. 결과 및 &lt;code&gt;REQUIRED&lt;/code&gt; 및 / 또는 &lt;code&gt;QUIET&lt;/code&gt; 옵션이 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출 에 제공되었는지 여부에 따라 성공 또는 실패 메시지가 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e71562764a7abe02ab3e4b25f7ba31c585d635e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable will be set to &lt;code&gt;TRUE&lt;/code&gt; if all the variables &lt;code&gt;&amp;lt;required-var&amp;gt;...&lt;/code&gt; are valid and any optional constraints are satisfied, and &lt;code&gt;FALSE&lt;/code&gt; otherwise. A success or failure message may be displayed based on the results and on whether the &lt;code&gt;REQUIRED&lt;/code&gt; and/or &lt;code&gt;QUIET&lt;/code&gt; option was given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 변수로 설정됩니다 &lt;code&gt;TRUE&lt;/code&gt; 모든 경우 변수 &lt;code&gt;&amp;lt;required-var&amp;gt;...&lt;/code&gt; 유효하며 선택적 제약 조건을 만족하고있다 &lt;code&gt;FALSE&lt;/code&gt; 그렇지. 결과와 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 호출에 &lt;code&gt;REQUIRED&lt;/code&gt; 및 / 또는 &lt;code&gt;QUIET&lt;/code&gt; 옵션이 제공 되었는지 여부에 따라 성공 또는 실패 메시지가 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e98ba0ad3949592b4d7968a473e61cfaa402e134" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variable is also searched as a prefix for &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-7-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; calls using module-file packages such as &lt;code&gt;FindSomePackage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 변수도의 접두사로서 검색된다 &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-7-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 와 같은 모듈 파일 패키지으로 전화 &lt;code&gt;FindSomePackage&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="7b2e822d5c4fac2e856252ce382b5121bf66284f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; has the same syntax and is evaluated using the same logic as described at length for the &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 동일 구문 및 길이에 대한 기술과 동일한 로직을 사용하여 평가되는 &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="47d4e1abd0340ea4dfe1123ce45deaa4e75ee02e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; can be any of the download or update/patch options that the &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; command understands. The configure, build, install and test steps are explicitly disabled and therefore options related to them will be ignored. In most cases, &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; will just be a couple of options defining the download method and method-specific details like a commit tag or archive hash. For example:</source>
          <target state="translated">&lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; 다운로드 또는 해당 업데이트 / 패치 옵션 중 하나가 될 수 &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 명령을 이해합니다. 구성, 빌드, 설치 및 테스트 단계는 명시 적으로 비활성화되어 있으므로 관련된 옵션은 무시됩니다. 대부분의 경우 &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; 는 커밋 태그 또는 아카이브 해시와 같은 다운로드 방법 및 메서드 별 세부 정보를 정의하는 몇 가지 옵션 일뿐입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="69bdbd4304141980b0c7caf50d7655bbbc7a8115" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; can be any of the download or update/patch options that the &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; command understands. The configure, build, install and test steps are explicitly disabled and therefore options related to them will be ignored. The &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option is an exception, see &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-0-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; for details on how that affects behavior.</source>
          <target state="translated">&lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; 다운로드 또는 해당 업데이트 / 패치 옵션 중 하나가 될 수 &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 명령을 이해합니다. 구성, 빌드, 설치 및 테스트 단계는 명시 적으로 비활성화되어 있으므로 관련 옵션이 무시됩니다. &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; 의 옵션은 예외입니다 참조 &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-0-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt; 그 행동에 영향을 미치는 방법에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="f5f3071444e4fdc82282e618eab4f2d6ca55c15e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;docstring&amp;gt;&lt;/code&gt; must be specified as a line of text providing a quick summary of the option for presentation to &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; users.</source>
          <target state="translated">&lt;code&gt;&amp;lt;docstring&amp;gt;&lt;/code&gt; 에 프리젠 테이션을위한 옵션에 대한 요약 정보를 제공하는 텍스트 행으로 지정해야합니다 &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 사용자.</target>
        </trans-unit>
        <trans-unit id="2f0f365117477641ee20559779f58712a30fbd23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; arguments are the input and output file, the same way as in &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-2-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; 인수는 입력 및 출력 파일과 동일한 방법과 같다 &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-2-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0240b93ed3f883c43779630f50127a8d7375ba33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; and &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; variables are still returned to the caller, but since these locations are not stored as global properties when this form is used, they are only available to the calling scope and below rather than the entire project hierarchy. No &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt; variable is set in the caller&amp;rsquo;s scope with this form.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; 및 &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; 변수는 여전히 호출자에게 반환되지만이 위치는이 양식을 사용하는 글로벌 속성으로 저장되지 않기 때문에, 그들은 단지 호출 범위에서 사용할 수 아래가 아니라 전체 프로젝트의 계층 구조입니다 . 이 형식의 호출자 범위에는 &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt; 변수가 설정되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1c3278f4a0042b12deb544a18e51c6c238896e44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; and &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; variables are still returned to the caller, but since these locations are not stored as global properties when this form is used, they are only available to the calling scope and below rather than the entire project hierarchy. No &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt; variable is set in the caller's scope with this form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ba3737392dea26d97fd9ad28241055036a3de0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version of CMake given to the most recent call to the &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt; 명령 을 가장 최근에 호출 한 CMake 의 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 버전 .</target>
        </trans-unit>
        <trans-unit id="d9461ecc7b5c4565bc8a31100f2085cce3dec5ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; must be one of the above &lt;a href=&quot;#dashboard-client-modes&quot;&gt;Dashboard Client Modes&lt;/a&gt;, and each &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; must be one of the above &lt;a href=&quot;#dashboard-client-steps&quot;&gt;Dashboard Client Steps&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; 위 중 하나 여야 &lt;a href=&quot;#dashboard-client-modes&quot;&gt;대시 클라이언트 모드&lt;/a&gt; , 각 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; 상기 중 하나 여야 &lt;a href=&quot;#dashboard-client-steps&quot;&gt;대시 클라이언트 단계&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da876ad5bbb8e6b66a666f67d64cd99b913181ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; argument contains all keywords for this macro which can be followed by more than one value, like e.g. the &lt;code&gt;TARGETS&lt;/code&gt; or &lt;code&gt;FILES&lt;/code&gt; keywords of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; 인수는 하나 개 이상의 값이 그 다음이 될 수 매크로 키워드를 모두 포함 예처럼 &lt;code&gt;TARGETS&lt;/code&gt; 또는 &lt;code&gt;FILES&lt;/code&gt; 의 키워드 &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="566c1aca16e0b8836c0d2d02575b70f48d585d82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; of the group and &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; argument may contain backslashes to specify subgroups:</source>
          <target state="translated">그룹 의 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 인수는 하위 그룹을 지정하기 위해 백 슬래시를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c0097245b3106bf36dc082e3074fccd906da708" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; of the group and &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; argument may contain forward slashes or backslashes to specify subgroups. Backslashes need to be escaped appropriately:</source>
          <target state="translated">그룹 의 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 인수는 하위 그룹을 지정하기 위해 슬래시 또는 백 슬래시를 포함 할 수 있습니다. 백 슬래시는 적절하게 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf6e3b268e712a4bdab364c396f9e710f9e2f767" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; argument contains all keywords for this macro which are followed by one value, like e.g. &lt;code&gt;DESTINATION&lt;/code&gt; keyword of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; 인수는 예처럼, 하나 개의 값으로 준수이 매크로에 대한 모든 키워드를 포함 &lt;code&gt;DESTINATION&lt;/code&gt; 의 의 키워드 &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6893188bef5c6d1a51d1e8b00a44b39013381a9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; argument contains all options for the respective macro, i.e. keywords which can be used when calling the macro without any value following, like e.g. the &lt;code&gt;OPTIONAL&lt;/code&gt; keyword of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; 인수는 예처럼, 다음과 같은 값없이 매크로를 호출 할 때 사용할 수있는 각각의 매크로, 즉 키워드에 대한 모든 옵션이 포함되어 &lt;code&gt;OPTIONAL&lt;/code&gt; 의 키워드 &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3fce1e70e7de257bab4f4d31e02704bdedb3d7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; given to &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; must be the destination where the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file will be installed to. This path can either be absolute, or relative to the &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; path.</source>
          <target state="translated">&lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 에 주어진 &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; 을 하여 목적지해야합니다 &lt;code&gt;FooConfig.cmake&lt;/code&gt; 의 파일이 설치됩니다. 이 경로는 절대 경로이거나 &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; 경로를 기준으로 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf6a2e4d7df14642cbbb9e9ae663e4511cf3d2e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;replacement_expression&amp;gt;&lt;/code&gt; may refer to parenthesis-delimited subexpressions of the match using &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;\9&lt;/code&gt;. Note that two backslashes (&lt;code&gt;\\1&lt;/code&gt;) are required in CMake code to get a backslash through argument parsing.</source>
          <target state="translated">&lt;code&gt;&amp;lt;replacement_expression&amp;gt;&lt;/code&gt; 하여 일치 괄호 구분 표현식을 참조 할 수 &lt;code&gt;\1&lt;/code&gt; , &lt;code&gt;\2&lt;/code&gt; , ... &lt;code&gt;\9&lt;/code&gt; . 인수 구문 분석을 통해 백 슬래시를 얻으려면 CMake 코드에 두 개의 백 슬래시 ( &lt;code&gt;\\1&lt;/code&gt; )가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1dea32445dae504208bb75b79338f26ad1fd76fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;replacement_expression&amp;gt;&lt;/code&gt; may refer to parenthesis-delimited subexpressions of the match using &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, ..., &lt;code&gt;\9&lt;/code&gt;. Note that two backslashes (&lt;code&gt;\\1&lt;/code&gt;) are required in CMake code to get a backslash through argument parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbba624b192abc377a9e230c2f3c4f9cd0b6371f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;result&amp;gt;&lt;/code&gt; variable, if specified, receives the status of the operation. It is set to &lt;code&gt;0&lt;/code&gt; upon success or an error message otherwise. If &lt;code&gt;RESULT&lt;/code&gt; is not specified and the operation fails, a fatal error is emitted.</source>
          <target state="translated">&lt;code&gt;&amp;lt;result&amp;gt;&lt;/code&gt; 변수가 지정된 경우의 동작의 상태를 수신한다. 성공 하면 &lt;code&gt;0&lt;/code&gt; 으로 설정되고 그렇지 않으면 오류 메시지 가 설정됩니다 . 경우 &lt;code&gt;RESULT&lt;/code&gt; 지정 작업이 실패하지 않는 치명적인 오류가 방출된다.</target>
        </trans-unit>
        <trans-unit id="1526f13442c463d534258f88813e9c718a49c5d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;result-var&amp;gt;&lt;/code&gt; will hold a boolean value giving the result of the check.</source>
          <target state="translated">&lt;code&gt;&amp;lt;result-var&amp;gt;&lt;/code&gt; 검사 결과를 제공하는 부울 값을 유지한다.</target>
        </trans-unit>
        <trans-unit id="e9e6fae59e18907f2facbdfb1b3a232d9709b275" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; file must call &lt;a href=&quot;cmake-commands.7#ctest-commands&quot;&gt;CTest Commands&lt;/a&gt; commands to run testing steps explicitly as documented below. The commands obtain &lt;a href=&quot;#dashboard-client-configuration&quot;&gt;Dashboard Client Configuration&lt;/a&gt; settings from their arguments or from variables set in the script.</source>
          <target state="translated">&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 파일을 호출해야합니다 &lt;a href=&quot;cmake-commands.7#ctest-commands&quot;&gt;CTest 명령이&lt;/a&gt; 명시 적으로 아래의 문서화 된 테스트 단계를 실행하는 명령. 이 명령 은 인수 또는 스크립트에 설정된 변수에서 &lt;a href=&quot;#dashboard-client-configuration&quot;&gt;Dashboard Client 구성&lt;/a&gt; 설정을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e0b11d3b42558e9a816afeb7ae87a2a21eaffa6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; must be one of:</source>
          <target state="translated">&lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; 중 하나 여야합니다 :</target>
        </trans-unit>
        <trans-unit id="3cc7b97731df7bd602d520f68e5cdb159377ecde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; must be specified as one of:</source>
          <target state="translated">&lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; 중 하나로 지정해야합니다 :</target>
        </trans-unit>
        <trans-unit id="b9924a580ff8fd9b19a001126d3e6e158185e509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(...)*&lt;/code&gt; pattern shown above is to indicate that there can be zero or more item names, with multiple items separated by a &lt;code&gt;directory-separator&lt;/code&gt;. The &lt;code&gt;()*&lt;/code&gt; characters are not part of the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670710aea6435d9c14ea8de710f468de5f251abd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*.user.props&lt;/code&gt; files can be used for Visual Studio wide configuration which is independent from cmake.</source>
          <target state="translated">&lt;code&gt;*.user.props&lt;/code&gt; 파일 cmake에서 독립적 인 비주얼 스튜디오 전체 구성에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5fa108d1505840834c17b405ce1863e3cec9989" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--build&lt;/code&gt; flag enables a particular mode of operation for the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-10-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; tool. It invokes the &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-1-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; command associated with the &lt;a href=&quot;../../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-1-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt;, or the build tool configured by the user.</source>
          <target state="translated">&lt;code&gt;--build&lt;/code&gt; 플래그에 대한 특정 동작 모드 수 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-10-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 공구. &lt;a href=&quot;../../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-1-manual:cmake-generators(7)&quot;&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/a&gt; 또는 사용자가 구성한 빌드 도구 와 관련된 &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-1-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt; 명령을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="0820a59c74a6e9b925bf1ebb3e18ad0f1a72490e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--build&lt;/code&gt; mode also accepts a &lt;code&gt;--config&lt;/code&gt; parameter in the case of multi-config generators to specify which particular configuration to build:</source>
          <target state="translated">&lt;code&gt;--build&lt;/code&gt; 모드도 허용 &lt;code&gt;--config&lt;/code&gt; 다중 구성 발전기의 경우 파라미터는 어느 특정 구성에 빌드 지정 :</target>
        </trans-unit>
        <trans-unit id="8241456373614253b3809d43509abda3bf7bc6bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--build&lt;/code&gt; mode also accepts the parameter &lt;code&gt;--target&lt;/code&gt; to specify a particular target to build, for example a particular library, executable or custom target, or a particular special target like &lt;code&gt;install&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--build&lt;/code&gt; 모드는 매개 변수를 받아 &lt;code&gt;--target&lt;/code&gt; 예를 들어, 특정 라이브러리, 실행 또는 사용자 정의 대상, 또는 같은 특정 특별한 대상 빌드로 특정 대상을 지정하기을 &lt;code&gt;install&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="451261dd69fc7fabadc4b8fbe16d7c1eae27a08b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--build&lt;/code&gt; mode can also pass particular command line options to the underlying build tool by listing them after &lt;code&gt;--&lt;/code&gt;. This can be useful to specify options to the build tool, such as to continue the build after a failed job, where CMake does not provide a high-level user interface.</source>
          <target state="translated">&lt;code&gt;--build&lt;/code&gt; 모드는 후 나열하여 기본 빌드 도구로 특정 명령 줄 옵션을 전달할 수 있습니다 &lt;code&gt;--&lt;/code&gt; . 이는 CMake가 높은 수준의 사용자 인터페이스를 제공하지 않는 작업 실패 후 빌드를 계속하는 것과 같이 빌드 도구에 옵션을 지정하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50d40785e88bb83e9a06a370e0a9b3ca40f4113c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--config&lt;/code&gt; option has no effect if the generator generates a buildsystem specific to a configuration which is chosen when invoking cmake with the &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-2-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; 발전기가 함께 cmake를 호출 할 때 선택되는 구성에 buildsystem의 특정 옵션 생성하는 경우에는 효과가 없다 &lt;a href=&quot;../../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-2-variable:CMAKE_BUILD_TYPE&quot;&gt; &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; 의&lt;/a&gt; 변수.</target>
        </trans-unit>
        <trans-unit id="41245e1d54aa6a41ed16a7316a17356ab31bd89b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--progress&lt;/code&gt; option to &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; overrides this environment variable if both are given.</source>
          <target state="translated">&lt;code&gt;--progress&lt;/code&gt; 에 옵션 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest&lt;/code&gt; 은&lt;/a&gt; 모두가 주어진 경우이 환경 변수를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="75ed70c2b4a1d690c63c0e000efb5982a615b5a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-U&lt;/code&gt; flag may be used to unset variables on the &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-7-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; command line:</source>
          <target state="translated">&lt;code&gt;-U&lt;/code&gt; 의 플래그를 해제 변수를 사용할 수있다 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-7-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 커맨드 라인 :</target>
        </trans-unit>
        <trans-unit id="dbce27296680fdc1e7c51ec27ead2ba0fb8ca52a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.Net&lt;/code&gt; interpreter. Only used by &lt;code&gt;IronPython&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;.Net&lt;/code&gt; 인터프리터. &lt;code&gt;IronPython&lt;/code&gt; 구현 에서만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0f6011db2d399e79bb7b832f86a7c7255f904dc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.netrc&lt;/code&gt; file is ignored. This is the default.</source>
          <target state="translated">&lt;code&gt;.netrc&lt;/code&gt; 파일이 무시됩니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="e3e1f3d42915ee0cf2ac3c8d0670dee9ce96a0eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.netrc&lt;/code&gt; file is optional, and information in the URL is preferred. The file will be scanned to find which ever information is not specified in the URL.</source>
          <target state="translated">&lt;code&gt;.netrc&lt;/code&gt; 파일은 선택 사항이며, URL에 정보가 바람직하다. URL에 지정되지 않은 정보를 찾기 위해 파일을 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="104e3678d9b787caccac14f21ace849fdcdf8ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.netrc&lt;/code&gt; file is required, and information in the URL is ignored.</source>
          <target state="translated">&lt;code&gt;.netrc&lt;/code&gt; 파일이 필요하고, URL 정보는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="920a77b83c924a6d66ba5ba5cc6c6df6b34cb5a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADD_COMPILER_EXPORT_FLAGS&lt;/code&gt; function adds &lt;code&gt;-fvisibility=hidden&lt;/code&gt; to &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; if supported, and is a no-op on Windows which does not need extra compiler flags for exporting support. You may optionally pass a single argument to &lt;code&gt;ADD_COMPILER_EXPORT_FLAGS&lt;/code&gt; that will be populated with the &lt;code&gt;CXX_FLAGS&lt;/code&gt; required to enable visibility support for the compiler/architecture in use.</source>
          <target state="translated">&lt;code&gt;ADD_COMPILER_EXPORT_FLAGS&lt;/code&gt; 의 기능이 추가 &lt;code&gt;-fvisibility=hidden&lt;/code&gt; 에 &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; 지원하는 경우, 그리고 지원을 내보내기위한 추가 컴파일러 플래그를 필요로하지 않는 Windows의 어떤 조합입니다. 사용중인 컴파일러 / 아키텍처에 대한 가시성 지원을 활성화하는 데 필요한 &lt;code&gt;CXX_FLAGS&lt;/code&gt; 로 채워지는 &lt;code&gt;ADD_COMPILER_EXPORT_FLAGS&lt;/code&gt; 에 단일 인수를 선택적으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0665b8e497fbbb6660622fc4f493ea27396ccbcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Addition&lt;/code&gt; and &lt;code&gt;SquareRoot&lt;/code&gt; directories are similar. Let&amp;rsquo;s look at one of the CMakeLists files:</source>
          <target state="translated">&lt;code&gt;Addition&lt;/code&gt; 하고 &lt;code&gt;SquareRoot&lt;/code&gt; 디렉토리는 유사하다. CMakeLists 파일 중 하나를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="4bab96b1b9621656229ca4aba591a4ea4e872935" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Addition&lt;/code&gt; and &lt;code&gt;SquareRoot&lt;/code&gt; directories are similar. Let's look at one of the CMakeLists files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a53dbfa401eacb358962d8368243e32d5409bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BASE_NAME&lt;/code&gt; argument can be used to override the file name and the names used for the macros:</source>
          <target state="translated">&lt;code&gt;BASE_NAME&lt;/code&gt; 의 인수는 파일 이름과 매크로에 사용되는 이름을 대체하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e3f274629ac19637bf60bbedbb0debad292aa046" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BASE_NAME&lt;/code&gt; may be overridden by specifying other options in the function. For example:</source>
          <target state="translated">&lt;code&gt;BASE_NAME&lt;/code&gt; 는 함수에서 다른 옵션을 지정하여 오버라이드 (override) 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4b2cdddbb89616feb6bb80e1f8b0090836cb538d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BRIEF_DOCS&lt;/code&gt; and &lt;code&gt;FULL_DOCS&lt;/code&gt; options are followed by strings to be associated with the property as its brief and full documentation. Corresponding options to the &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-5-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; command will retrieve the documentation.</source>
          <target state="translated">&lt;code&gt;BRIEF_DOCS&lt;/code&gt; 및 &lt;code&gt;FULL_DOCS&lt;/code&gt; 옵션의 간단한 및 전체 문서로 재산과 연관 될 수있는 문자열 다음에 있습니다. &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-5-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt; 명령에 해당하는 옵션 은 문서를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="dec60460a54e9b15bbf177a38a35827e15d11b68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; expression wraps requirements which are only used when consumed from a target in the same buildsystem, or when consumed from a target exported to the build directory using the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression wraps requirements which are only used when consumed from a target which has been installed and exported with the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">&lt;code&gt;BUILD_INTERFACE&lt;/code&gt; 의 표현은 같은 buildsystem의 대상에서 소비 할 때, 또는 사용하여 빌드 디렉토리에 수출 대상에서 소비되는 경우에만 사용되는 요구 사항 래핑 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령을 사용합니다. &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 의 표현 설치하고 내 보낸 된 대상에서 소비되는 경우에만 사용되는 요구 사항 랩 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령을 :</target>
        </trans-unit>
        <trans-unit id="b893f8a5863fafbcdfdc3deedb2e9f5720c8d5e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BYPRODUCTS&lt;/code&gt; option is ignored on non-Ninja generators except to mark byproducts &lt;code&gt;GENERATED&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BYPRODUCTS&lt;/code&gt; 옵션은 마크 부산물을 제외하고 비 닌자 발전기 무시됩니다 &lt;code&gt;GENERATED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81560bca6e2da8b43639fc3b9c7545dec9d230a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BYPRODUCTS&lt;/code&gt; option is used by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to list byproducts among the outputs of the custom commands that generate them, and is ignored by other generators.</source>
          <target state="translated">&lt;code&gt;BYPRODUCTS&lt;/code&gt; 옵션에서 사용하는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 를 생성하는 사용자 정의 명령의 출력 중 목록 부산물로 생성 및 기타 발전기에 의해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ff9d8163dbdab8a466ce84cd1704fb168c396a62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BYPRODUCTS&lt;/code&gt; option is used by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to list byproducts among the outputs of the custom commands that generate them, and is ignored by other generators.</source>
          <target state="translated">&lt;code&gt;BYPRODUCTS&lt;/code&gt; 옵션에서 사용하는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 를 생성하는 사용자 정의 명령의 출력 중 목록 부산물로 생성 및 기타 발전기에 의해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ff22c424863d0ea085de85c8fe72f48ca14b92e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BYPRODUCTS&lt;/code&gt; option is used by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to list byproducts among the outputs of the custom commands that generate them, and is ignored by other generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26912bb8d18f85d0c12a5543205730807ca7215" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; variables may be set to full paths, or to names of compilers to search for in standard locations. For toolchains that do not support linking binaries without custom flags or scripts one may set the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable to &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; to tell CMake not to try to link executables during its checks.</source>
          <target state="translated">&lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; 변수는 전체 경로로 설정 할 수있다, 또는 컴파일러의 이름을 표준 위치에서 검색 할 수 있습니다. 사용자 정의 플래그 또는 스크립트없이 바이너리 연결을 지원하지 않는 툴체인의 경우 &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; &lt;/a&gt; 변수를 &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; 로 설정하여 CMake가 검사 중에 실행 파일을 연결하지 않도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d4b9140769e0d844974ed9d92dbe7dee9c3bf3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variables and the configuration-specific equivalents contain flags that will be added to the compile command when compiling a file of a particular language.</source>
          <target state="translated">&lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 변수와 구성 별 등가물은 특정 언어의 파일을 컴파일 할 때 컴파일 명령에 추가됩니다 플래그를 포함한다.</target>
        </trans-unit>
        <trans-unit id="aea838a1124a0afa2730db3f2a0ca4b32599c8b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; variable may be set explicitly before CUDA is first enabled by a &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command. This can be done via &lt;code&gt;-DCMAKE_CUDA_HOST_COMPILER=...&lt;/code&gt; on the command line or in a &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-toolchain&quot;&gt;toolchain file&lt;/a&gt;. Or, one may set the &lt;a href=&quot;../envvar/cudahostcxx#envvar:CUDAHOSTCXX&quot; id=&quot;index-0-envvar:CUDAHOSTCXX&quot;&gt;&lt;code&gt;CUDAHOSTCXX&lt;/code&gt;&lt;/a&gt; environment variable to provide a default value.</source>
          <target state="translated">&lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; 의 CUDA가 처음으로 사용하기 전에 변수를 명시 적으로 설정 될 수 있습니다 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt; &lt;code&gt;enable_language()&lt;/code&gt; &lt;/a&gt; 명령. 이 작업 은 명령 줄 또는 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-toolchain&quot;&gt;도구 모음 파일&lt;/a&gt; 에서 &lt;code&gt;-DCMAKE_CUDA_HOST_COMPILER=...&lt;/code&gt; 를 통해 수행 할 수 있습니다 . 또는 &lt;a href=&quot;../envvar/cudahostcxx#envvar:CUDAHOSTCXX&quot; id=&quot;index-0-envvar:CUDAHOSTCXX&quot;&gt; &lt;code&gt;CUDAHOSTCXX&lt;/code&gt; &lt;/a&gt; 환경 변수를 설정하여 기본값을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2a7d04c9f59318a51862afdff1f0aa7032586ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt; variable may be set to control which messages are printed:</source>
          <target state="translated">&lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt; 의 변수가 출력되는 메시지를 제어하기 위해 설정 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="c0460a1c73b159e250b3efdfca3e84978aabfb09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; variable is set for use by project code. The value is also used by the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--build&lt;/code&gt; and &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--build-and-test&lt;/code&gt; tools to launch the native build process.</source>
          <target state="translated">&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 의 변수는 프로젝트 코드에서 사용할 수 있도록 설정되어 있습니다. &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--build&lt;/code&gt; 및 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--build-and-test&lt;/code&gt; 도구 에서도이 값을 사용 하여 기본 빌드 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="6bbb030b4efc03eeb33eff05fe34af82ed31def3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; environment variable sets the default value for the &lt;a href=&quot;../variable/cmake_msvcide_run_path#variable:CMAKE_MSVCIDE_RUN_PATH&quot; id=&quot;index-0-variable:CMAKE_MSVCIDE_RUN_PATH&quot;&gt;&lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt;&lt;/a&gt; variable if not already explicitly set.</source>
          <target state="translated">&lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; 의 환경 변수의 기본 값을 설정 &lt;a href=&quot;../variable/cmake_msvcide_run_path#variable:CMAKE_MSVCIDE_RUN_PATH&quot; id=&quot;index-0-variable:CMAKE_MSVCIDE_RUN_PATH&quot;&gt; &lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; 에&lt;/a&gt; 이미 명시 적으로 설정되어 있지 않은 경우 변수입니다.</target>
        </trans-unit>
        <trans-unit id="33ff56ace691ad53c2292ebd232248d3a32c948a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; environment variable sets the default value for the &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; variable. See &lt;a href=&quot;../prop_tgt/osx_architectures#prop_tgt:OSX_ARCHITECTURES&quot; id=&quot;index-0-prop_tgt:OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; 의 환경 변수에 대한 기본값으로 설정 &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; 의&lt;/a&gt; 변수를. 자세한 정보는 &lt;a href=&quot;../prop_tgt/osx_architectures#prop_tgt:OSX_ARCHITECTURES&quot; id=&quot;index-0-prop_tgt:OSX_ARCHITECTURES&quot;&gt; &lt;code&gt;OSX_ARCHITECTURES&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="138740e56389b62b07e391a6ecdfff8fb20aae4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; environment variable may be set to a list of directories specifying installation &lt;em&gt;prefixes&lt;/em&gt; to be searched by the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt; commands. Each command will add appropriate subdirectories (like &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, or &lt;code&gt;include&lt;/code&gt;) as specified in its own documentation.</source>
          <target state="translated">&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 의 환경 변수를 지정 설치 디렉토리 목록으로 설정 될 수있다 &lt;em&gt;접두사&lt;/em&gt; 에 의해 검색 될 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt; &lt;code&gt;find_program()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt; &lt;code&gt;find_file()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt; &lt;code&gt;find_path()&lt;/code&gt; &lt;/a&gt; 명령. 각 명령은 자체 문서에 지정된대로 적절한 하위 디렉토리 (예 : &lt;code&gt;bin&lt;/code&gt; , &lt;code&gt;lib&lt;/code&gt; 또는 &lt;code&gt;include&lt;/code&gt; )를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="90c42310a1192ec1a68be8217e7cb74f14db0cc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; content is passed to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag, if supported. The path is also stripped from the &lt;code&gt;RPATH&lt;/code&gt;/&lt;code&gt;RUNPATH&lt;/code&gt; if necessary on installation. The &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; is also used to prefix paths searched by the &lt;code&gt;find_*&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; 의 내용은에서 컴파일러에 전달되는 &lt;code&gt;--sysroot&lt;/code&gt; 지원하는 경우, 플래그. 설치시 필요한 경우 경로는 &lt;code&gt;RPATH&lt;/code&gt; / &lt;code&gt;RUNPATH&lt;/code&gt; 에서도 제거됩니다 . &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; 은 또한으로 검색 접두사 경로에 사용되는 &lt;code&gt;find_*&lt;/code&gt; 의 명령.</target>
        </trans-unit>
        <trans-unit id="33bbfc85d048b6e36cd5eb433fca156488815441" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_VERSION&lt;/code&gt; variable is defined by CMake 2.6.3 and higher. Earlier versions defined only the individual component variables.</source>
          <target state="translated">&lt;code&gt;CMAKE_VERSION&lt;/code&gt; 의 변수 CMake 2.6.3 이상으로 정의된다. 이전 버전은 개별 구성 요소 변수 만 정의했습니다.</target>
        </trans-unit>
        <trans-unit id="967ecaaee3f7bbc4c345151b13e3e761e5c7b203" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_XCODE_BUILD_SYSTEM&lt;/code&gt; variable is informational and should not be modified by project code. See the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#xcode-build-system-selection&quot;&gt;Toolset and Build System Selection&lt;/a&gt; documentation section to select the Xcode build system.</source>
          <target state="translated">&lt;code&gt;CMAKE_XCODE_BUILD_SYSTEM&lt;/code&gt; 의 변수는 정보 제공 및 프로젝트 코드에 의해 수정할 수 없습니다. 참고 항목 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Xcode.html#xcode-build-system-selection&quot;&gt;도구 세트와 빌드 시스템 선택&lt;/a&gt; Xcode의 빌드 시스템을 선택하는 문서 섹션을.</target>
        </trans-unit>
        <trans-unit id="c19385c64a01b109b9d35b2c8f0c9dc802cd539b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_XCODE_BUILD_SYSTEM&lt;/code&gt; variable is informational and should not be modified by project code. See the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Xcode.html#xcode-build-system-selection&quot;&gt;Toolset and Build System Selection&lt;/a&gt; documentation section to select the Xcode build system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914bf5128165a4f734fa0767835c41a71701730d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; options may use &quot;generator expressions&quot; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e329b70af2d2da76e9afe6904613a275fd86a986" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; options may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 및 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 옵션은 구문으로 &quot;발전기 표현을&quot;사용할 수 있습니다 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="271e6cd1b3cee6541ca9283c64dd2318d49804e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; options may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="translated">&lt;code&gt;COMMAND&lt;/code&gt; 및 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 옵션은 구문으로 &quot;발전기 표현을&quot;사용할 수 있습니다 &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt; . 사용 가능한 표현식 은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt; &lt;/a&gt; 매뉴얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="20d318e32665db2496325e7c932bdebe220cdd73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMMENT&lt;/code&gt;, &lt;code&gt;MAIN_DEPENDENCY&lt;/code&gt;, and &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; options are currently ignored when APPEND is given, but may be used in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0971610c4096eaeaa22bc385e772c7e79c1b0a33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBILITY&lt;/code&gt; mode &lt;code&gt;AnyNewerVersion&lt;/code&gt; means that the installed package version will be considered compatible if it is newer or exactly the same as the requested version. This mode should be used for packages which are fully backward compatible, also across major versions. If &lt;code&gt;SameMajorVersion&lt;/code&gt; is used instead, then the behaviour differs from &lt;code&gt;AnyNewerVersion&lt;/code&gt; in that the major version number must be the same as requested, e.g. version 2.0 will not be considered compatible if 1.0 is requested. This mode should be used for packages which guarantee backward compatibility within the same major version. If &lt;code&gt;SameMinorVersion&lt;/code&gt; is used, the behaviour is the same as &lt;code&gt;SameMajorVersion&lt;/code&gt;, but both major and minor version must be the same as requested, e.g version 0.2 will not be compatible if 0.1 is requested. If &lt;code&gt;ExactVersion&lt;/code&gt; is used, then the package is only considered compatible if the requested version matches exactly its own version number (not considering the tweak version). For example, version 1.2.3 of a package is only considered compatible to requested version 1.2.3. This mode is for packages without compatibility guarantees. If your project has more elaborated version matching rules, you will need to write your own custom &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; file instead of using this macro.</source>
          <target state="translated">&lt;code&gt;COMPATIBILITY&lt;/code&gt; 모드 &lt;code&gt;AnyNewerVersion&lt;/code&gt; 의 요청 된 버전으로 새로운 또는 동일 경우 설치된 패키지 버전이 호환 간주된다는 것을 의미합니다. 이 모드는 주요 버전에서 이전 버전과 완전히 호환되는 패키지에 사용해야합니다. 경우 &lt;code&gt;SameMajorVersion&lt;/code&gt; 가 대신 사용됩니다에서 다음 행동 다릅니다 &lt;code&gt;AnyNewerVersion&lt;/code&gt; , 요청 1.0이 요청하는 경우 예를 들어, 버전 2.0 호환 간주되지 않으므로 점에서 주요 버전 번호가 동일해야합니다. 이 모드는 동일한 주 버전 내에서 이전 버전과의 호환성을 보장하는 패키지에 사용해야합니다. 경우 &lt;code&gt;SameMinorVersion&lt;/code&gt; 가 사용, 동작은 동일 &lt;code&gt;SameMajorVersion&lt;/code&gt; 그러나 주 버전과 부 버전은 요청 된 것과 동일해야합니다. 예를 들어 0.1이 요청되면 버전 0.2는 호환되지 않습니다. 경우 &lt;code&gt;ExactVersion&lt;/code&gt; 가 사용 요청 된 버전은 정확히 자신의 버전 번호가합니다 (팅겨 버전을 고려하지 않는다)에 일치하는 경우, 그 패키지는 호환 간주됩니다. 예를 들어, 패키지 버전 1.2.3은 요청 된 버전 1.2.3과 호환되는 것으로 간주됩니다. 이 모드는 호환성을 보장하지 않는 패키지 용입니다. 프로젝트에보다 정교한 버전 일치 규칙 이있는 경우이 매크로를 사용하는 대신 사용자 지정 &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; 파일 을 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de965d4f0204f8e0c67c759611bc772772862a3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_BOOL&lt;/code&gt; property may contain a list of properties for this target which must be consistent when evaluated as a boolean with the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property in all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies must be consistent with each other, and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender.</source>
          <target state="translated">&lt;code&gt;COMPATIBLE_INTERFACE_BOOL&lt;/code&gt; 의 속성과 부울로 평가 때 일관성이 있어야이 대상의 속성의 목록을 포함 할 수 있습니다 &lt;code&gt;INTERFACE&lt;/code&gt; 연결된 모든 의존당하는에서 속성의 변형. 예를 들어, 속성 &lt;code&gt;FOO&lt;/code&gt; 가 목록에 나타나면 각 종속 자에 대해 모든 종속성 의 &lt;code&gt;INTERFACE_FOO&lt;/code&gt; 속성 내용이 서로 일치해야하며 종속 자의 &lt;code&gt;FOO&lt;/code&gt; 속성 과 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f2cfe7f3c1ce04786fa8ab2c229690abfde4f1d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt; property may contain a list of properties for this target whose maximum value may be read at generate time when evaluated in the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property in all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies will be compared with each other and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender. When reading the &lt;code&gt;FOO&lt;/code&gt; property at generate time, the maximum value will be returned. If the property is not set, then it is ignored.</source>
          <target state="translated">&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt; 의 속성이 그 최대 값으로 평가 될 때 생성 시간에 판독 될 수있다이 대상에 대한 속성의리스트를 포함 할 수 &lt;code&gt;INTERFACE&lt;/code&gt; 연결된 모든 의존당하는의 속성의 변형. 예를 들어, 속성 &lt;code&gt;FOO&lt;/code&gt; 가 목록에 나타나면 각 종속 자에 대해 모든 종속성 의 &lt;code&gt;INTERFACE_FOO&lt;/code&gt; 속성 내용이 서로 그리고 종속 자의 &lt;code&gt;FOO&lt;/code&gt; 속성 과 비교됩니다 . 생성시 &lt;code&gt;FOO&lt;/code&gt; 속성을 읽을 때 최대 값이 반환됩니다. 속성이 설정되어 있지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e005cbd6fd4965d956652990ada5bbbda1631171" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MIN&lt;/code&gt; property may contain a list of properties for this target whose minimum value may be read at generate time when evaluated in the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property of all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies will be compared with each other and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender. When reading the &lt;code&gt;FOO&lt;/code&gt; property at generate time, the minimum value will be returned. If the property is not set, then it is ignored.</source>
          <target state="translated">&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MIN&lt;/code&gt; 의 속성이 그 최소 값으로 평가 될 때 생성 시간에 판독 될 수있다이 대상에 대한 속성의리스트를 포함 할 수 &lt;code&gt;INTERFACE&lt;/code&gt; 연결된 모든 의존당하는의 속성의 변형. 예를 들어, 속성 &lt;code&gt;FOO&lt;/code&gt; 가 목록에 나타나면 각 종속 자에 대해 모든 종속성 의 &lt;code&gt;INTERFACE_FOO&lt;/code&gt; 속성 내용이 서로 그리고 종속 자의 &lt;code&gt;FOO&lt;/code&gt; 속성 과 비교됩니다 . 생성시 &lt;code&gt;FOO&lt;/code&gt; 속성을 읽을 때 최소값이 반환됩니다. 속성이 설정되어 있지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8670aeaf24cb561e27cac819f7c8394af3fc8ab6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; property may contain a list of properties for this target which must be the same when evaluated as a string in the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies must be equal with each other, and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender. If the property is not set, then it is ignored.</source>
          <target state="translated">&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; 속성은 문자열로 평가 때 동일해야이 목표에 대한 속성의 목록을 포함 할 수 있습니다 &lt;code&gt;INTERFACE&lt;/code&gt; 속성 연결된 모든 의존당하는의 변형. 예를 들어, 속성 &lt;code&gt;FOO&lt;/code&gt; 가 목록에 표시되면 각 종속 자에 대해 모든 종속성 의 &lt;code&gt;INTERFACE_FOO&lt;/code&gt; 속성 내용이 서로 같아야하며 종속 자의 &lt;code&gt;FOO&lt;/code&gt; 속성과 같아야합니다. 속성이 설정되어 있지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="10e435913a2989f293cafcc43b206a5ac9ea5675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; property may be set to a semicolon-separated list of preprocessor definitions using the syntax &lt;code&gt;VAR&lt;/code&gt; or &lt;code&gt;VAR=value&lt;/code&gt;. Function-style definitions are not supported. CMake will automatically escape the value correctly for the native build system (note that CMake language syntax may require escapes to specify some values).</source>
          <target state="translated">&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; 의 속성 신택스 사용 처리기 정의 세미콜론으로 분리 된 목록으로 설정 될 수있다 &lt;code&gt;VAR&lt;/code&gt; 이나 &lt;code&gt;VAR=value&lt;/code&gt; . 함수 스타일 정의는 지원되지 않습니다. CMake는 기본 빌드 시스템에 대해 자동으로 값을 올바르게 이스케이프합니다 (CMake 언어 구문은 이스케이프가 필요할 수 있음)</target>
        </trans-unit>
        <trans-unit id="128b3df66062b0803363de35253be4b0eb8dbd86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; property may be set to a semicolon-separated list of preprocessor definitions using the syntax &lt;code&gt;VAR&lt;/code&gt; or &lt;code&gt;VAR=value&lt;/code&gt;. Function-style definitions are not supported. CMake will automatically escape the value correctly for the native build system (note that CMake language syntax may require escapes to specify some values). This property may be set on a per-configuration basis using the name &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; where &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is an upper-case name (ex. &lt;code&gt;COMPILE_DEFINITIONS_DEBUG&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; 의 속성 신택스 사용 처리기 정의 세미콜론으로 분리 된 목록으로 설정 될 수있다 &lt;code&gt;VAR&lt;/code&gt; 이나 &lt;code&gt;VAR=value&lt;/code&gt; . 함수 스타일 정의는 지원되지 않습니다. CMake는 기본 빌드 시스템에 대해 자동으로 값을 올바르게 이스케이프합니다 (CMake 언어 구문은 이스케이프가 필요할 수 있음) 이 특성은 &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 이름을 사용하여 구성별로 설정 될 수 있습니다. 여기서 &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 는 대문자 이름입니다 (예 : &lt;code&gt;COMPILE_DEFINITIONS_DEBUG&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1181b810363fabe788c3284d9bc8b169b8534ee5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; property sets additional compiler flags used to build sources within the target. Use &lt;a href=&quot;compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; to pass additional preprocessor definitions.</source>
          <target state="translated">&lt;code&gt;COMPILE_FLAGS&lt;/code&gt; 의 속성은 대상에서 빌드 소스에 사용되는 추가 컴파일러 플래그를 설정합니다. 추가 전 처리기 정의를 전달 하려면 &lt;a href=&quot;compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d90c07e765b1c29d53a6178ca0d73164e578376d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; property, managed as a string, sets additional compiler flags used to build source files. Use &lt;a href=&quot;compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; to pass additional preprocessor definitions.</source>
          <target state="translated">&lt;code&gt;COMPILE_FLAGS&lt;/code&gt; 의 문자열로 관리 속성은 빌드 소스 파일에 사용되는 추가 컴파일러 플래그를 설정합니다. 추가 전 처리기 정의를 전달 하려면 &lt;a href=&quot;compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f798e5c17a32cfecd6773d0da172be983c8ddd1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONFIG&lt;/code&gt; option, the synonymous &lt;code&gt;NO_MODULE&lt;/code&gt; option, or the use of options not specified in the &lt;a href=&quot;#basic-signature&quot;&gt;basic signature&lt;/a&gt; all enforce pure Config mode. In pure Config mode, the command skips Module mode search and proceeds at once with Config mode search.</source>
          <target state="translated">&lt;code&gt;CONFIG&lt;/code&gt; 옵션, 동의어 &lt;code&gt;NO_MODULE&lt;/code&gt; 의 옵션, 또는에 지정되지 않은 옵션의 사용을 &lt;a href=&quot;#basic-signature&quot;&gt;기본 서명&lt;/a&gt; 순수한 구성 모드를 적용 할 모든. 순수 구성 모드에서 명령은 모듈 모드 검색을 건너 뛰고 구성 모드 검색으로 한 번에 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="118b5d03638f26df5f41097af7616513328bffa8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONFIG&lt;/code&gt; parameter is compared case-insensitively with the configuration being built. In the presence of &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, the content of &lt;code&gt;MAP_IMPORTED_CONFIG_DEBUG&lt;/code&gt; is also accounted for by this expression.</source>
          <target state="translated">&lt;code&gt;CONFIG&lt;/code&gt; 의 구성이 건설되고와 매개 변수은 대문자와 소문자를 구별하지 않고 비교됩니다. 존재에서 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상의 콘텐츠 &lt;code&gt;MAP_IMPORTED_CONFIG_DEBUG&lt;/code&gt; 는 이 식에 의해 차지된다.</target>
        </trans-unit>
        <trans-unit id="1f94acd80db631b4f062afa489e843c9f215d768" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COPY&lt;/code&gt; signature copies files, directories, and symlinks to a destination folder. Relative input paths are evaluated with respect to the current source directory, and a relative destination is evaluated with respect to the current build directory. Copying preserves input file timestamps, and optimizes out a file if it exists at the destination with the same timestamp. Copying preserves input permissions unless explicit permissions or &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; are given (default is &lt;code&gt;USE_SOURCE_PERMISSIONS&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;COPY&lt;/code&gt; 대상 폴더에 서명 파일을 복사, 디렉토리 및 심볼릭 링크. 상대 입력 경로는 현재 소스 디렉토리와 관련하여 평가되고 상대 대상은 현재 빌드 디렉토리와 관련하여 평가됩니다. 복사는 입력 파일 타임 스탬프를 유지하고 파일이 동일한 타임 스탬프를 가진 대상에 존재하는 경우 파일을 최적화합니다. 복사는 명시 적 권한이나 &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; 가 제공 되지 않는 한 입력 권한을 유지합니다 (기본값은 &lt;code&gt;USE_SOURCE_PERMISSIONS&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="55c87c059c9e8f3641b73c1c22460f9fca9269e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; target property must be set to a non-empty value on targets that compile CUDA sources, or it is an error. See policy &lt;a href=&quot;../policy/cmp0104#policy:CMP0104&quot; id=&quot;index-0-policy:CMP0104&quot;&gt;&lt;code&gt;CMP0104&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; 의 대상 속성이 대상이 컴파일 CUDA 소스에 비어 있지 않은 값으로 설정, 또는 오류가 발생해야합니다. 정책 &lt;a href=&quot;../policy/cmp0104#policy:CMP0104&quot; id=&quot;index-0-policy:CMP0104&quot;&gt; &lt;code&gt;CMP0104&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7cbd502ecdc21f895dc888b97a1182f9f4c49322" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Cancelled Message&lt;/code&gt; is never printed because its command is cancelled. The &lt;code&gt;deferred_message&lt;/code&gt; variable reference is not evaluated until the call site, so it can be set after the deferred call is scheduled.</source>
          <target state="translated">&lt;code&gt;Cancelled Message&lt;/code&gt; 그 명령이 취소되기 때문에 인쇄되지 않습니다. &lt;code&gt;deferred_message&lt;/code&gt; 의 지연된 통화가 예약 후 설정 될 수 있도록 변수 참조가 호출 사이트까지 계산되지 않는다.</target>
        </trans-unit>
        <trans-unit id="7085c1efe403a4e68f68f256d52e06375a637064" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClimbingStats_FINAL&lt;/code&gt; macro will expand to &lt;code&gt;final&lt;/code&gt; if the compiler (and its flags) support the &lt;code&gt;cxx_final&lt;/code&gt; feature, and the &lt;code&gt;ClimbingStats_CONSTEXPR&lt;/code&gt; macro will expand to &lt;code&gt;constexpr&lt;/code&gt; if &lt;code&gt;cxx_constexpr&lt;/code&gt; is supported.</source>
          <target state="translated">&lt;code&gt;ClimbingStats_FINAL&lt;/code&gt; 매크로로 확장됩니다 &lt;code&gt;final&lt;/code&gt; 컴파일러 (및 플래그)를 지원하는 경우 &lt;code&gt;cxx_final&lt;/code&gt; 기능을하고 &lt;code&gt;ClimbingStats_CONSTEXPR&lt;/code&gt; 의 매크로로 확장됩니다 &lt;code&gt;constexpr&lt;/code&gt; 경우 &lt;code&gt;cxx_constexpr&lt;/code&gt; 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="dc34098947ea7fc85f9996618e285436ee53b9cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax can alternatively match files associated with the named file and contained in the same directory. Associated files may be specified by options using the syntax &lt;code&gt;DATA{&amp;lt;name&amp;gt;,&amp;lt;opt1&amp;gt;,&amp;lt;opt2&amp;gt;,...}&lt;/code&gt;. Each option may specify one file by name or specify a regular expression to match file names using the syntax &lt;code&gt;REGEX:&amp;lt;regex&amp;gt;&lt;/code&gt;. For example, the arguments:</source>
          <target state="translated">&lt;code&gt;DATA{}&lt;/code&gt; 구문은 양자 택일 같은 디렉토리에 지정된 파일과 관련된 및 포함 된 파일을 일치시킬 수 있습니다. &lt;code&gt;DATA{&amp;lt;name&amp;gt;,&amp;lt;opt1&amp;gt;,&amp;lt;opt2&amp;gt;,...}&lt;/code&gt; 구문을 사용하여 옵션으로 연관된 파일을 지정할 수 있습니다 . 각 옵션은 이름별로 하나의 파일을 지정하거나 &lt;code&gt;REGEX:&amp;lt;regex&amp;gt;&lt;/code&gt; 구문을 사용하여 파일 이름과 일치하는 정규식을 지정할 수 있습니다. 예를 들어, 인수 :</target>
        </trans-unit>
        <trans-unit id="4693f0022ccf3f7f55fd0046016211c1f7ce1539" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax can be told to fetch a file series using the form &lt;code&gt;DATA{&amp;lt;name&amp;gt;,:}&lt;/code&gt;, where the &lt;code&gt;:&lt;/code&gt; is literal. If the source tree contains a group of files or content links named like a series then a reference to one member adds rules to fetch all of them. Although all members of a series are fetched, only the file originally named by the &lt;code&gt;DATA{}&lt;/code&gt; argument is substituted for it. The default configuration recognizes file series names ending with &lt;code&gt;#.ext&lt;/code&gt;, &lt;code&gt;_#.ext&lt;/code&gt;, &lt;code&gt;.#.ext&lt;/code&gt;, or &lt;code&gt;-#.ext&lt;/code&gt; where &lt;code&gt;#&lt;/code&gt; is a sequence of decimal digits and &lt;code&gt;.ext&lt;/code&gt; is any single extension. Configure it with a regex that parses &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; parts from the end of &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;DATA{}&lt;/code&gt; 구문은 양식 사용하여 파일 시리즈 가져 말했다 될 수 &lt;code&gt;DATA{&amp;lt;name&amp;gt;,:}&lt;/code&gt; (가), &lt;code&gt;:&lt;/code&gt; 문자입니다. 소스 트리에 시리즈처럼 이름이 지정된 파일 또는 컨텐츠 링크가 포함 된 경우 한 멤버에 대한 참조는 규칙을 추가하여 모든 파일을 가져옵니다. 시리즈의 모든 멤버를 페치하더라도 원래 &lt;code&gt;DATA{}&lt;/code&gt; 인수로 이름 지정된 파일 만 대체됩니다. 기본 구성으로 끝나는 파일 시리즈 이름을 인식 &lt;code&gt;#.ext&lt;/code&gt; , &lt;code&gt;_#.ext&lt;/code&gt; , &lt;code&gt;.#.ext&lt;/code&gt; , 또는 &lt;code&gt;-#.ext&lt;/code&gt; &lt;code&gt;#&lt;/code&gt; 은 십진수와의 순서입니다 &lt;code&gt;.ext&lt;/code&gt; 를가단일 확장입니다. &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 끝에서 &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; 부분 을 구문 분석하는 정규식으로 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd3649af99925c91a036e0afb55cb5d7adaa9ed9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax is literal and the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is a full or relative path within the source tree. The source tree must contain either a real data file at &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; or a &quot;content link&quot; at &lt;code&gt;&amp;lt;name&amp;gt;&amp;lt;ext&amp;gt;&lt;/code&gt; containing a hash of the real file using a hash algorithm corresponding to &lt;code&gt;&amp;lt;ext&amp;gt;&lt;/code&gt;. For example, the argument &lt;code&gt;DATA{img.png}&lt;/code&gt; may be satisfied by either a real &lt;code&gt;img.png&lt;/code&gt; file in the current source directory or a &lt;code&gt;img.png.md5&lt;/code&gt; file containing its MD5 sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e187b4e0c6d7fec38141f45fa133a2ff130851e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax is literal and the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is a full or relative path within the source tree. The source tree must contain either a real data file at &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; or a &amp;ldquo;content link&amp;rdquo; at &lt;code&gt;&amp;lt;name&amp;gt;&amp;lt;ext&amp;gt;&lt;/code&gt; containing a hash of the real file using a hash algorithm corresponding to &lt;code&gt;&amp;lt;ext&amp;gt;&lt;/code&gt;. For example, the argument &lt;code&gt;DATA{img.png}&lt;/code&gt; may be satisfied by either a real &lt;code&gt;img.png&lt;/code&gt; file in the current source directory or a &lt;code&gt;img.png.md5&lt;/code&gt; file containing its MD5 sum.</source>
          <target state="translated">&lt;code&gt;DATA{}&lt;/code&gt; 구문은 문자이며, &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 소스 트리 내의 전체 또는 상대 경로입니다. 소스 나무는 실제 데이터의 파일 중 하나의 메시지 있어야합니다 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 또는에서 &quot;컨텐츠 링크&quot; &lt;code&gt;&amp;lt;name&amp;gt;&amp;lt;ext&amp;gt;&lt;/code&gt; 에 해당하는 해시 알고리즘을 사용하여 실제 파일의 해시를 포함하는 &lt;code&gt;&amp;lt;ext&amp;gt;&lt;/code&gt; . 예를 들어, &lt;code&gt;DATA{img.png}&lt;/code&gt; 인수 는 현재 소스 디렉토리 의 실제 &lt;code&gt;img.png&lt;/code&gt; 파일 또는 MD5 합계를 포함 하는 &lt;code&gt;img.png.md5&lt;/code&gt; 파일 로 충족 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e69c54dfb7cecfde600729d539a1cdee4bc054f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax may reference a directory using a trailing slash and a list of associated files. The form &lt;code&gt;DATA{&amp;lt;name&amp;gt;/,&amp;lt;opt1&amp;gt;,&amp;lt;opt2&amp;gt;,...}&lt;/code&gt; adds rules to fetch any files in the directory that match one of the associated file options. For example, the argument &lt;code&gt;DATA{MyDataDir/,REGEX:.*}&lt;/code&gt; will pass the full path to a &lt;code&gt;MyDataDir&lt;/code&gt; directory on the command line and ensure that the directory contains files corresponding to every file or content link in the &lt;code&gt;MyDataDir&lt;/code&gt; source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4c7a134530f0d9c293523dd011eb307fd2a337" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax may reference a directory using a trailing slash and a list of associated files. The form &lt;code&gt;DATA{&amp;lt;name&amp;gt;/,&amp;lt;opt1&amp;gt;,&amp;lt;opt2&amp;gt;,...}&lt;/code&gt; adds rules to fetch any files in the directory that match one of the associated file options. For example, the argument &lt;code&gt;DATA{MyDataDir/,REGEX:.*}&lt;/code&gt; will pass the full path to a &lt;code&gt;MyDataDir&lt;/code&gt; directory on the command line and ensure that the directory contains files corresponding to every file or content link in the &lt;code&gt;MyDataDir&lt;/code&gt; source directory. In order to match associated files in subdirectories, specify a &lt;code&gt;RECURSE:&lt;/code&gt; option, e.g. &lt;code&gt;DATA{MyDataDir/,RECURSE:,REGEX:.*}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DATA{}&lt;/code&gt; 구문은 후행 슬래시 및 관련 파일 목록을 사용하여 디렉토리를 참조 할 수있다. 양식 &lt;code&gt;DATA{&amp;lt;name&amp;gt;/,&amp;lt;opt1&amp;gt;,&amp;lt;opt2&amp;gt;,...}&lt;/code&gt; 디렉토리에 파일을 가져 오기 위해 규칙을 추가하는 관련 파일 옵션의 일치 하나. 예를 들어, &lt;code&gt;DATA{MyDataDir/,REGEX:.*}&lt;/code&gt; 인수 는 명령 행에서 &lt;code&gt;MyDataDir&lt;/code&gt; 디렉토리 의 전체 경로를 전달하고 디렉토리에 &lt;code&gt;MyDataDir&lt;/code&gt; 소스 디렉토리 의 모든 파일 또는 컨텐츠 링크에 해당하는 파일이 포함되어 있는지 확인하십시오 . 서브 디렉토리에서 연관된 파일을 일치 &lt;code&gt;RECURSE:&lt;/code&gt; 옵션을 지정하십시오 ( 예 : &lt;code&gt;DATA{MyDataDir/,RECURSE:,REGEX:.*}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6d7c566f8dd0591ed058187d237ba82f2b081ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DIRECTORY&lt;/code&gt; argument specifies another directory from which to retrieve the property value instead of the current directory. It may reference either a source directory, or since CMake 3.19, a binary directory. Relative paths are treated as relative to the current source directory. CMake must already know about the directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or being the top level directory.</source>
          <target state="translated">&lt;code&gt;DIRECTORY&lt;/code&gt; 의 인수는 현재 디렉토리 대신 속성 값을 검색 할 수있는 또 다른 디렉토리를 지정합니다. 소스 디렉터리 또는 CMake 3.19 이후 바이너리 디렉터리를 참조 할 수 있습니다. 상대 경로는 현재 소스 디렉토리에 상대적인 것으로 처리됩니다. CMake는 &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 호출을 통해 추가 했거나 최상위 디렉토리가 됨으로써 디렉토리에 대해 이미 알고 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e135d1706760f8d5cab7fb620f03c065c36bbcfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DIRECTORY&lt;/code&gt; argument specifies another directory from which to retrieve the property value instead of the current directory. Relative paths are treated as relative to the current source directory. CMake must already know about the directory, either by having added it through a call to &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or being the top level directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9de45edd0bd6c2d38bfa90ec234313ac61f7a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DIRECTORY&lt;/code&gt; form installs contents of one or more directories to a given destination. The directory structure is copied verbatim to the destination. The last component of each directory name is appended to the destination directory but a trailing slash may be used to avoid this because it leaves the last component empty. Directory names given as relative paths are interpreted with respect to the current source directory. If no input directory names are given the destination directory will be created but nothing will be installed into it. The &lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; and &lt;code&gt;DIRECTORY_PERMISSIONS&lt;/code&gt; options specify permissions given to files and directories in the destination. If &lt;code&gt;USE_SOURCE_PERMISSIONS&lt;/code&gt; is specified and &lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; is not, file permissions will be copied from the source directory structure. If no permissions are specified files will be given the default permissions specified in the &lt;code&gt;FILES&lt;/code&gt; form of the command, and the directories will be given the default permissions specified in the &lt;code&gt;PROGRAMS&lt;/code&gt; form of the command.</source>
          <target state="translated">&lt;code&gt;DIRECTORY&lt;/code&gt; 의 형태는 지정된 대상에 하나 이상의 디렉토리의 내용을 설치합니다. 디렉토리 구조가 목적지에 그대로 복사됩니다. 각 디렉토리 이름의 마지막 구성 요소는 대상 디렉토리에 추가되지만 마지막 구성 요소를 비워 두므로 후행 슬래시를 사용하여이를 피할 수 있습니다. 상대 경로로 제공된 디렉토리 이름은 현재 소스 디렉토리와 관련하여 해석됩니다. 입력 디렉토리 이름이 제공되지 않으면 대상 디렉토리가 작성되지만 아무 것도 설치되지 않습니다. &lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; 및 &lt;code&gt;DIRECTORY_PERMISSIONS&lt;/code&gt; 옵션은 대상에서 파일과 디렉토리에 주어진 권한을 지정합니다. &lt;code&gt;USE_SOURCE_PERMISSIONS&lt;/code&gt; 가 지정된 경우 &lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; 가 아닌 경우 파일 권한이 소스 디렉토리 구조에서 복사됩니다. 권한이 지정되지 않은 경우 파일 에는 명령 의 &lt;code&gt;FILES&lt;/code&gt; 양식에 지정된 기본 권한이 부여되고 디렉토리 에는 명령 의 &lt;code&gt;PROGRAMS&lt;/code&gt; 양식에 지정된 기본 권한이 부여됩니다 .</target>
        </trans-unit>
        <trans-unit id="e4d49083c1c9b97d1c32dadc3dfd7e004ed589ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOWNLOAD&lt;/code&gt; mode downloads the given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; to a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;. The &lt;code&gt;UPLOAD&lt;/code&gt; mode uploads a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; to a given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 모드 다운로드는 주어진 &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; 로컬에 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; . &lt;code&gt;UPLOAD&lt;/code&gt; 모드는 로컬 업로드 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 주어진에 &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b60156e726989955d0610330107fbe36f3956fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOWNLOAD&lt;/code&gt; subcommand downloads the given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; to a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; is not specified for &lt;code&gt;file(DOWNLOAD)&lt;/code&gt;, the file is not saved. This can be useful if you want to know if a file can be downloaded (for example, to check that it exists) without actually saving it anywhere. The &lt;code&gt;UPLOAD&lt;/code&gt; mode uploads a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; to a given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 하위 명령의 다운로드는 주어진 &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; 로컬에 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; . 경우 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 지정되어 있지 않은 &lt;code&gt;file(DOWNLOAD)&lt;/code&gt; , 파일이 저장되지 않습니다. 이것은 실제로 어디에도 저장하지 않고 파일을 다운로드 할 수 있는지 (예를 들어, 존재하는지 확인하기 위해) 알고 자 할 때 유용 할 수 있습니다. &lt;code&gt;UPLOAD&lt;/code&gt; 모드는 로컬 업로드 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 주어진에 &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06edc06b45ac9911a3c2b24378359943001ffe24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOWNLOAD&lt;/code&gt; subcommand downloads the given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; to a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;. The &lt;code&gt;UPLOAD&lt;/code&gt; mode uploads a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; to a given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045b35a9b858eb10920d639b2c5e1e8724dec541" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXACT&lt;/code&gt; option requests that the version be matched exactly. This option is incompatible with the specification of a version range.</source>
          <target state="translated">&lt;code&gt;EXACT&lt;/code&gt; 옵션은 버전이 정확히 일치 할 것을 요청합니다. 이 옵션은 버전 범위의 사양과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="34caa4360a510c81444366827e2c8a08b128d22f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXPORT&lt;/code&gt; form generates and installs a CMake file containing code to import targets from the installation tree into another project. Target installations are associated with the export &lt;code&gt;&amp;lt;export-name&amp;gt;&lt;/code&gt; using the &lt;code&gt;EXPORT&lt;/code&gt; option of the &lt;a href=&quot;#install-targets&quot;&gt;install(TARGETS)&lt;/a&gt; signature documented above. The &lt;code&gt;NAMESPACE&lt;/code&gt; option will prepend &lt;code&gt;&amp;lt;namespace&amp;gt;&lt;/code&gt; to the target names as they are written to the import file. By default the generated file will be called &lt;code&gt;&amp;lt;export-name&amp;gt;.cmake&lt;/code&gt; but the &lt;code&gt;FILE&lt;/code&gt; option may be used to specify a different name. The value given to the &lt;code&gt;FILE&lt;/code&gt; option must be a file name with the &lt;code&gt;.cmake&lt;/code&gt; extension. If a &lt;code&gt;CONFIGURATIONS&lt;/code&gt; option is given then the file will only be installed when one of the named configurations is installed. Additionally, the generated import file will reference only the matching target configurations. The &lt;code&gt;EXPORT_LINK_INTERFACE_LIBRARIES&lt;/code&gt; keyword, if present, causes the contents of the properties matching &lt;code&gt;(IMPORTED_)?LINK_INTERFACE_LIBRARIES(_&amp;lt;CONFIG&amp;gt;)?&lt;/code&gt; to be exported, when policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EXPORT&lt;/code&gt; 양식을 생성하고 다른 프로젝트에 설치 트리에서 수입 대상에 코드를 포함하는 CMake 파일을 설치합니다. 대상 설치는 위에 설명 된 &lt;a href=&quot;#install-targets&quot;&gt;install (TARGETS)&lt;/a&gt; 서명 의 &lt;code&gt;EXPORT&lt;/code&gt; 옵션을 사용하여 내보내기 &lt;code&gt;&amp;lt;export-name&amp;gt;&lt;/code&gt; 과 연관됩니다 . &lt;code&gt;NAMESPACE&lt;/code&gt; 옵션 것이다 앞에 추가 &lt;code&gt;&amp;lt;namespace&amp;gt;&lt;/code&gt; 가 가져 오기 파일에 기록됩니다으로 대상 이름으로. 기본적으로 생성 된 파일의 &lt;code&gt;&amp;lt;export-name&amp;gt;.cmake&lt;/code&gt; 은 &amp;lt;export-name&amp;gt; .cmake 이지만 &lt;code&gt;FILE&lt;/code&gt; 옵션을 사용하여 다른 이름을 지정할 수 있습니다. &lt;code&gt;FILE&lt;/code&gt; 옵션에 제공된 값 은 &lt;code&gt;.cmake&lt;/code&gt; 가있는 파일 이름이어야합니다.신장. 경우 &lt;code&gt;CONFIGURATIONS&lt;/code&gt; 옵션이 지정되고있는 명명 된 구성 중 하나가 설치 될 때 파일은 설치됩니다. 또한 생성 된 가져 오기 파일은 일치하는 대상 구성 만 참조합니다. &lt;code&gt;EXPORT_LINK_INTERFACE_LIBRARIES&lt;/code&gt; 가 존재하는 경우, 일치하는 등록 정보의 내용 발생 키워드 &lt;code&gt;(IMPORTED_)?LINK_INTERFACE_LIBRARIES(_&amp;lt;CONFIG&amp;gt;)?&lt;/code&gt; 정책 &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;NEW&lt;/code&gt; 인 경우 내보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5a466fd0a2c222623220c20a4669434e0ec8c47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXPORT&lt;/code&gt; form is useful to help outside projects use targets built and installed by the current project. For example, the code</source>
          <target state="translated">&lt;code&gt;EXPORT&lt;/code&gt; 형태는 외부 프로젝트가 현재 프로젝트에 의해 만들어 설치 대상을 사용하는 데 도움이 유용합니다. 예를 들어, 코드</target>
        </trans-unit>
        <trans-unit id="c69089911a8db7d3de62217214fc91215b372cef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_Add_Target&lt;/code&gt; function creates a custom target to manage local instances of data files stored externally:</source>
          <target state="translated">&lt;code&gt;ExternalData_Add_Target&lt;/code&gt; 함수 는 외부에 저장된 데이터 파일의 로컬 인스턴스를 관리하기위한 사용자 지정 대상을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a2dfdb4254ac74cfe949cfa1d86a077c80395ff1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_Add_Test&lt;/code&gt; function wraps around the CMake &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command but supports &lt;code&gt;DATA{}&lt;/code&gt; references in its arguments:</source>
          <target state="translated">&lt;code&gt;ExternalData_Add_Test&lt;/code&gt; CMake의 주변 기능 랩 &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt; 명령 만 지원 &lt;code&gt;DATA{}&lt;/code&gt; 인수에서 참조 :</target>
        </trans-unit>
        <trans-unit id="fb7571f8a4d3117b3a4443f00b513e02d3a02d96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; variable may be set to the directory to hold the real data files named by expanded &lt;code&gt;DATA{}&lt;/code&gt; references. The default is &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;. The directory layout will mirror that of content links under &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; 의 변수는 확장에 의해 명명 된 실제 데이터 파일을 보유하는 디렉토리로 설정 할 수있다 &lt;code&gt;DATA{}&lt;/code&gt; 참조. 기본값은 &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; 입니다. 디렉토리 레이아웃은 &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt; 아래의 컨텐츠 링크를 반영합니다 .</target>
        </trans-unit>
        <trans-unit id="74bb8fbdd3094a4c8aa319028751148ffbd0387a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_Expand_Arguments&lt;/code&gt; function evaluates &lt;code&gt;DATA{}&lt;/code&gt; references in its arguments and constructs a new list of arguments:</source>
          <target state="translated">&lt;code&gt;ExternalData_Expand_Arguments&lt;/code&gt; 의 기능을 평가 &lt;code&gt;DATA{}&lt;/code&gt; 인수에 대한 참조를 및 인수의 새 목록을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="b2b240a3bad5aecf05f0d0ba0b18475c5dd513a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_LINK_CONTENT&lt;/code&gt; variable may be set to the name of a supported hash algorithm to enable automatic conversion of real data files referenced by the &lt;code&gt;DATA{}&lt;/code&gt; syntax into content links. For each such &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; a content link named &lt;code&gt;&amp;lt;file&amp;gt;&amp;lt;ext&amp;gt;&lt;/code&gt; is created. The original file is renamed to the form &lt;code&gt;.ExternalData_&amp;lt;algo&amp;gt;_&amp;lt;hash&amp;gt;&lt;/code&gt; to stage it for future transmission to one of the locations in the list of URL templates (by means outside the scope of this module). The data fetch rule created for the content link will use the staged object if it cannot be found using any URL template.</source>
          <target state="translated">&lt;code&gt;ExternalData_LINK_CONTENT&lt;/code&gt; 의 변수를 참조하여 실제 데이터 파일을 자동으로 전환이 가능하도록 지원하는 해시 알고리즘의 이름으로 설정 될 수있다 &lt;code&gt;DATA{}&lt;/code&gt; 콘텐츠 링크로 구. 이러한 각 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 에 대해 &lt;code&gt;&amp;lt;file&amp;gt;&amp;lt;ext&amp;gt;&lt;/code&gt; 라는 컨텐츠 링크 가 작성됩니다. 원본 파일의 이름이 &lt;code&gt;.ExternalData_&amp;lt;algo&amp;gt;_&amp;lt;hash&amp;gt;&lt;/code&gt; 형식으로 바뀌어 향후 URL 템플릿 목록의 위치 중 하나로 전송할 수 있도록 준비합니다 (이 모듈의 범위를 벗어남). 컨텐츠 링크에 대해 작성된 데이터 페치 규칙은 URL 템플리트를 사용하여 스테이지 오브젝트를 찾을 수없는 경우 스테이징 된 오브젝트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="782788f4a9132fa41dc6f36fd7fa13a1d2bf12f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_OBJECT_STORES&lt;/code&gt; variable may be set to a list of local directories that store objects using the layout &lt;code&gt;&amp;lt;dir&amp;gt;/%(algo)/%(hash)&lt;/code&gt;. These directories will be searched first for a needed object. If the object is not available in any store then it will be fetched remotely using the URL templates and added to the first local store listed. If no stores are specified the default is a location inside the build tree.</source>
          <target state="translated">&lt;code&gt;ExternalData_OBJECT_STORES&lt;/code&gt; 의 변수가 저장 레이아웃 사용하는 객체 로컬 디렉토리리스트로 설정 될 수있다 &lt;code&gt;&amp;lt;dir&amp;gt;/%(algo)/%(hash)&lt;/code&gt; . 이러한 디렉토리는 먼저 필요한 객체를 검색합니다. 상점에서 오브젝트를 사용할 수없는 경우 URL 템플리트를 사용하여 원격으로 페치하여 나열된 첫 번째 로컬 상점에 추가됩니다. 상점이 지정되지 않은 경우 기본값은 빌드 트리 내의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="d7ae420855a351982486b8e5f5f06b75453dbb8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt; variable may be set to the highest source directory containing any path named by a &lt;code&gt;DATA{}&lt;/code&gt; reference. The default is &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;. &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt; and &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; must refer to directories within a single source distribution (e.g. they come together in one tarball).</source>
          <target state="translated">&lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt; 의 변수는 임의의 경로에 의해 명명 함유 높은 소스 디렉토리로 설정 될 수있다 &lt;code&gt;DATA{}&lt;/code&gt; 참조. 기본값은 &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; 입니다. &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt; 및 &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; 은 단일 소스 배포 내의 디렉토리를 참조해야합니다 (예 : 하나의 tarball로 함께 제공).</target>
        </trans-unit>
        <trans-unit id="fee283d531aefbe78fb8e4bd2a4939203df9dd0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_TIMEOUT_ABSOLUTE&lt;/code&gt; variable sets the download absolute timeout, in seconds, with a default of &lt;code&gt;300&lt;/code&gt; seconds. Set to &lt;code&gt;0&lt;/code&gt; to disable enforcement.</source>
          <target state="translated">&lt;code&gt;ExternalData_TIMEOUT_ABSOLUTE&lt;/code&gt; 의 변수 기본값 초 다운로드 절대 시간 제한을 설정 &lt;code&gt;300&lt;/code&gt; 초. 시행을 비활성화 하려면 &lt;code&gt;0&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4b21d88c76e025880af64beccc9f0d2d14939fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_TIMEOUT_INACTIVITY&lt;/code&gt; variable sets the download inactivity timeout, in seconds, with a default of &lt;code&gt;60&lt;/code&gt; seconds. Set to &lt;code&gt;0&lt;/code&gt; to disable enforcement.</source>
          <target state="translated">&lt;code&gt;ExternalData_TIMEOUT_INACTIVITY&lt;/code&gt; 의 변수는 기본값 초, 다운로드 비 활동 시간 제한을 설정 &lt;code&gt;60&lt;/code&gt; 초. 시행을 비활성화 하려면 &lt;code&gt;0&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="45707850c716180971aa93d51cb15df2f0fe8685" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; may be set to provide a list of URL templates using the placeholders &lt;code&gt;%(algo)&lt;/code&gt; and &lt;code&gt;%(hash)&lt;/code&gt; in each template. Data fetch rules try each URL template in order by substituting the hash algorithm name for &lt;code&gt;%(algo)&lt;/code&gt; and the hash value for &lt;code&gt;%(hash)&lt;/code&gt;. Alternatively one may use &lt;code&gt;%(algo:&amp;lt;key&amp;gt;)&lt;/code&gt; with &lt;code&gt;ExternalData_URL_ALGO_&amp;lt;algo&amp;gt;_&amp;lt;key&amp;gt;&lt;/code&gt; variables to gain more flexibility in remote URLs.</source>
          <target state="translated">&lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; 은 자리 표시를 사용하여 URL 템플릿의 목록을 제공하도록 설정 될 수 &lt;code&gt;%(algo)&lt;/code&gt; 및 &lt;code&gt;%(hash)&lt;/code&gt; 각 템플릿을. 데이터 가져 오기 규칙은 &lt;code&gt;%(algo)&lt;/code&gt; 대신 해시 알고리즘 이름을 , &lt;code&gt;%(hash)&lt;/code&gt; 를 해시 값 으로 대체하여 각 URL 템플릿을 순서대로 시도합니다 . 또는 &lt;code&gt;%(algo:&amp;lt;key&amp;gt;)&lt;/code&gt; 를 &lt;code&gt;ExternalData_URL_ALGO_&amp;lt;algo&amp;gt;_&amp;lt;key&amp;gt;&lt;/code&gt; 변수 와 함께 사용 하여 원격 URL에서 더 많은 유연성을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd051c2c74f526b166b2a8634962c54608624db7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; may be set to provide a list of of URL templates using the placeholders &lt;code&gt;%(algo)&lt;/code&gt; and &lt;code&gt;%(hash)&lt;/code&gt; in each template. Data fetch rules try each URL template in order by substituting the hash algorithm name for &lt;code&gt;%(algo)&lt;/code&gt; and the hash value for &lt;code&gt;%(hash)&lt;/code&gt;. Alternatively one may use &lt;code&gt;%(algo:&amp;lt;key&amp;gt;)&lt;/code&gt; with &lt;code&gt;ExternalData_URL_ALGO_&amp;lt;algo&amp;gt;_&amp;lt;key&amp;gt;&lt;/code&gt; variables to gain more flexibility in remote URLs.</source>
          <target state="translated">&lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; 은 자리 표시를 사용하여 URL 템플릿의 목록을 제공하도록 설정 될 수 &lt;code&gt;%(algo)&lt;/code&gt; 및 &lt;code&gt;%(hash)&lt;/code&gt; 각 템플릿을. 데이터 반입 규칙은 &lt;code&gt;%(algo)&lt;/code&gt; 의 해시 알고리즘 이름 과 &lt;code&gt;%(hash)&lt;/code&gt; 의 해시 값을 대체하여 각 URL 템플리트를 순서대로 시도합니다 . 또는 원격 URL의 유연성을 높이기 위해 &lt;code&gt;%(algo:&amp;lt;key&amp;gt;)&lt;/code&gt; 를 &lt;code&gt;ExternalData_URL_ALGO_&amp;lt;algo&amp;gt;_&amp;lt;key&amp;gt;&lt;/code&gt; 변수 와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9407ceab28775e81927bde711d736b4a8898bee2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add()&lt;/code&gt; function creates a custom target to drive download, update/patch, configure, build, install and test steps of an external project:</source>
          <target state="translated">&lt;code&gt;ExternalProject_Add()&lt;/code&gt; 함수가 드라이브 다운로드, 업데이트 / 패치, 구성, 빌드에 사용자 정의 대상을 생성, 설치 및 외부 프로젝트의 테스트 단계 :</target>
        </trans-unit>
        <trans-unit id="acaa46bdcaf50fd0f35adeead91d9e58f8d7bce6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add()&lt;/code&gt; function on its own is often sufficient for incorporating an external project into the main build. Certain scenarios require additional work to implement desired behavior, such as adding in a custom step or making steps available as manually triggerable targets. The &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; and &lt;code&gt;ExternalProject_Add_StepDependencies&lt;/code&gt; functions provide the lower level control needed to implement such step-level capabilities.</source>
          <target state="translated">&lt;code&gt;ExternalProject_Add()&lt;/code&gt; 자체 기능은 종종 주요 빌드로 외부 프로젝트를 통합 충분하다. 특정 시나리오에서는 사용자 정의 단계를 추가하거나 단계를 수동으로 트리거 가능한 대상으로 사용 가능하게하는 등 원하는 동작을 구현하기 위해 추가 작업이 필요합니다. &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; , &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 및 &lt;code&gt;ExternalProject_Add_StepDependencies&lt;/code&gt; 의 기능은 단계 레벨의 기능을 구현하는 데 필요한 낮은 레벨의 제어를 제공한다.</target>
        </trans-unit>
        <trans-unit id="2e41dbdea893053dd8772cbea8ccb4be6e185865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; function specifies an additional custom step for an external project defined by an earlier call to &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-0-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; 함수는 이전에 호에 의해 정의 된 외부 프로젝트 추가 지정 단계 지정 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-0-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ef0d91aa8e05225fb5733cfadf2e85fb68bcca36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add_StepDependencies()&lt;/code&gt; function can be used to add dependencies to a step. The dependencies added must be targets CMake already knows about (these can be ordinary executable or library targets, custom targets or even step targets of another external project):</source>
          <target state="translated">&lt;code&gt;ExternalProject_Add_StepDependencies()&lt;/code&gt; 함수에 의존하는 공정을 추가 할 수있다. 추가 된 종속성은 CMake가 이미 알고있는 대상이어야합니다 (일반 실행 파일 또는 라이브러리 대상, 사용자 지정 대상 또는 다른 외부 프로젝트의 단계 대상 일 수도 있음).</target>
        </trans-unit>
        <trans-unit id="0ee8571b0a8b47f6a9b8f07df9fa1b5aa7d49de2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; function generates targets for the steps listed. The name of each created target will be of the form &lt;code&gt;&amp;lt;name&amp;gt;-&amp;lt;step&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 함수에 제시된 단계에 대한 목표를 생성한다. 작성된 각 대상의 이름은 &lt;code&gt;&amp;lt;name&amp;gt;-&amp;lt;step&amp;gt;&lt;/code&gt; 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="a9a2f5d6aac9ac1fe84ce8e987da67d5366f6169" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; function retrieves external project target properties:</source>
          <target state="translated">&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; 함수는 외부 프로젝트 대상 속성을 검색 :</target>
        </trans-unit>
        <trans-unit id="6f848d58a95b4434b766eb8413072f586e2098d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FATAL_ERROR&lt;/code&gt; option is accepted but ignored by CMake 2.6 and higher. It should be specified so CMake versions 2.4 and lower fail with an error instead of just a warning.</source>
          <target state="translated">&lt;code&gt;FATAL_ERROR&lt;/code&gt; 의 옵션은 가능하지만, CMake 2.6 이상에 의해 무시됩니다. CMake 버전 2.4 이하가 경고 대신 오류로 실패하도록 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7a431b7f417c4b5a48c37dcf20b9e7e0d0571cab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FETCHCONTENT_FULLY_DISCONNECTED&lt;/code&gt; and &lt;code&gt;FETCHCONTENT_UPDATES_DISCONNECTED&lt;/code&gt; cache variables are ignored.</source>
          <target state="translated">&lt;code&gt;FETCHCONTENT_FULLY_DISCONNECTED&lt;/code&gt; 및 &lt;code&gt;FETCHCONTENT_UPDATES_DISCONNECTED&lt;/code&gt; 캐시 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0e2fd972a07ec91a3769e30fa0081767a170db38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FILES&lt;/code&gt; form specifies rules for installing files for a project. File names given as relative paths are interpreted with respect to the current source directory. Files installed by this form are by default given permissions &lt;code&gt;OWNER_WRITE&lt;/code&gt;, &lt;code&gt;OWNER_READ&lt;/code&gt;, &lt;code&gt;GROUP_READ&lt;/code&gt;, and &lt;code&gt;WORLD_READ&lt;/code&gt; if no &lt;code&gt;PERMISSIONS&lt;/code&gt; argument is given.</source>
          <target state="translated">&lt;code&gt;FILES&lt;/code&gt; 는 프로젝트에 대한 파일을 설치하기위한 지정 규칙을 형성한다. 상대 경로로 지정된 파일 이름은 현재 소스 디렉토리와 관련하여 해석됩니다. &lt;code&gt;PERMISSIONS&lt;/code&gt; 인수가 제공 되지 않으면 이 양식으로 설치된 파일에는 기본적으로 &lt;code&gt;OWNER_WRITE&lt;/code&gt; , &lt;code&gt;OWNER_READ&lt;/code&gt; , &lt;code&gt;GROUP_READ&lt;/code&gt; 및 &lt;code&gt;WORLD_READ&lt;/code&gt; 권한 이 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="2824114f945a538c684d373635f02ab820098b60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent&lt;/code&gt; module also supports defining and populating content in a single call, with no check for whether the content has been populated elsewhere in the project already. This is a more low level operation and would not normally be the way the module is used, but it is sometimes useful as part of implementing some higher level feature or to populate some content in CMake&amp;rsquo;s script mode.</source>
          <target state="translated">&lt;code&gt;FetchContent&lt;/code&gt; 모듈은 내용이 이미 다른 프로젝트에 채워되었는지 여부에 대한 어떤 검사로 정의하고 단일 통화의 내용을 채우는 지원합니다. 이는보다 낮은 수준의 작업이며 일반적으로 모듈이 사용되는 방식은 아니지만 일부 고급 기능을 구현하거나 CMake의 스크립트 모드에서 일부 내용을 채우는 데 유용한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c25bb15d568d573429fad0552beace7b828a9085" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent&lt;/code&gt; module also supports defining and populating content in a single call, with no check for whether the content has been populated elsewhere in the project already. This is a more low level operation and would not normally be the way the module is used, but it is sometimes useful as part of implementing some higher level feature or to populate some content in CMake's script mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7697f16b7a855f09d4189573648d1b717139d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent_Declare()&lt;/code&gt; function records the options that describe how to populate the specified content, but if such details have already been recorded earlier in this project (regardless of where in the project hierarchy), this and all later calls for the same content &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; are ignored. This &quot;first to record, wins&quot; approach is what allows hierarchical projects to have parent projects override content details of child projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be623bd2636a53764f5bf249a3801215af9817c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent_Declare()&lt;/code&gt; function records the options that describe how to populate the specified content, but if such details have already been recorded earlier in this project (regardless of where in the project hierarchy), this and all later calls for the same content &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; are ignored. This &amp;ldquo;first to record, wins&amp;rdquo; approach is what allows hierarchical projects to have parent projects override content details of child projects.</source>
          <target state="translated">&lt;code&gt;FetchContent_Declare()&lt;/code&gt; 와 같은 세부 사항이 이미 (관계없이 어디 프로젝트 계층 구조에서의), 동일한 내용이 모든 나중에 통화 이번 프로젝트에서 촬영 한 함수는 지정된 내용을 채우는 방법을 설명하는 옵션을 기록하지만 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 는 무시됩니다. 이 &quot;최초 기록, 승리&quot;방식은 계층 프로젝트에서 상위 프로젝트가 하위 프로젝트의 컨텐츠 세부 사항을 대체하도록합니다.</target>
        </trans-unit>
        <trans-unit id="b4de57c90ee3aecd0996177effd22f142656d94f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent_Populate()&lt;/code&gt; command also supports a syntax allowing the content details to be specified directly rather than using any saved details. This is more low-level and use of this form is generally to be avoided in favour of using saved content details as outlined above. Nevertheless, in certain situations it can be useful to invoke the content population as an isolated operation (typically as part of implementing some other higher level feature or when using CMake in script mode):</source>
          <target state="translated">&lt;code&gt;FetchContent_Populate()&lt;/code&gt; 명령은 내용 세부 정보가 저장된 정보를 사용하는 것보다 않고 직접 지정할 수 있도록 구문을 지원합니다. 이는 수준이 낮으므로 일반적으로 위에서 설명한대로 저장된 컨텐츠 세부 사항을 사용하기 위해이 양식을 사용하지 않는 것이 좋습니다. 그럼에도 불구하고 특정 상황에서 콘텐츠 모집단을 격리 된 작업으로 호출하는 것이 유용 할 수 있습니다 (일반적으로 다른 고급 기능 구현의 일부 또는 스크립트 모드에서 CMake 사용시).</target>
        </trans-unit>
        <trans-unit id="99a1ff650d5ace4807542e0c9b8950882391a303" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Foo&lt;/code&gt; fixture has no setup tests defined, only a single cleanup test.</source>
          <target state="translated">&lt;code&gt;Foo&lt;/code&gt; 고정은 정의 된 설정 시험, 단 하나의 정리 테스트가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce594222819e3b65117efc6db5a647eb703b99a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FortranCInterface_HEADER&lt;/code&gt; function is provided to generate a C header file containing macros to mangle symbol names:</source>
          <target state="translated">&lt;code&gt;FortranCInterface_HEADER&lt;/code&gt; 의 기능 탈수 심볼 이름 매크로를 포함하는 C 헤더 파일을 생성하기 위해 제공된다 :</target>
        </trans-unit>
        <trans-unit id="b106d542149cc540456cadc3670babc55e4398f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FortranCInterface_VERIFY&lt;/code&gt; function is provided to verify that the Fortran and C/C++ compilers work together:</source>
          <target state="translated">&lt;code&gt;FortranCInterface_VERIFY&lt;/code&gt; 의 기능 포트란과 C / C ++ 컴파일러와 함께 작동하는지 확인하기 위해 제공된다 :</target>
        </trans-unit>
        <trans-unit id="240ed41de83867b272bf87966a2b5d75c9d56d20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GENERATE_EXPORT_HEADER&lt;/code&gt; function can be used to generate a file suitable for preprocessor inclusion which contains EXPORT macros to be used in library classes:</source>
          <target state="translated">&lt;code&gt;GENERATE_EXPORT_HEADER&lt;/code&gt; 의 기능은 라이브러리 클래스에 사용되는 수출 매크로가 포함 처리기 포함에 적합한 파일을 생성하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="34aa8ebbced75a47676899d2f4c65647b37836be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GLOB_RECURSE&lt;/code&gt; mode will traverse all the subdirectories of the matched directory and match the files. Subdirectories that are symlinks are only traversed if &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; is given or policy &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-0-policy:CMP0009&quot;&gt;&lt;code&gt;CMP0009&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GLOB_RECURSE&lt;/code&gt; 의 모드는 일치하는 디렉토리의 모든 서브 디렉토리를 탐색하고 파일을 일치합니다. 심볼릭 링크 인 서브 디렉토리는 &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; 가 제공되거나 정책 &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-0-policy:CMP0009&quot;&gt; &lt;code&gt;CMP0009&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;NEW&lt;/code&gt; 로 설정되지 않은 경우에만 순회됩니다 .</target>
        </trans-unit>
        <trans-unit id="078e0c5995804244bba6aed6fb260400e835d69f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; property is allowed only on &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported&lt;/a&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt; and is rejected on targets of other types (for which the &lt;a href=&quot;imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; target property may be used).</source>
          <target state="translated">&lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; 의 속성에만 허용되는 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;수입 &lt;/a&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;인터페이스 라이브러리&lt;/a&gt; 및 다른 유형의 목표에 거부됩니다 (이에 대한 &lt;a href=&quot;imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt; &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; 의&lt;/a&gt; target 속성을 사용할 수있다).</target>
        </trans-unit>
        <trans-unit id="53449ff4823c1fc8cae3e827bf26039848e6a4d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; target property may be overridden for a given configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; by the configuration-specific &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property. Furthermore, the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property may be used to map between a project&amp;rsquo;s configurations and those of an imported target. If none of these is set then the name of any other configuration listed in the &lt;a href=&quot;imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt;&lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; target property may be selected and its &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; value used.</source>
          <target state="translated">&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; 의 target 속성은 주어진 구성에 대해 무시 될 수있다 &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 구성하여 특정 &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target 속성. 또한 &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대상 속성을 사용하여 프로젝트 구성과 가져온 대상의 구성을 매핑 할 수 있습니다. 이들 중 어느 것도 설정되지 않으면 &lt;a href=&quot;imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt; &lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt; &lt;/a&gt; 대상 등록 정보에 나열된 다른 구성의 이름을 선택하고 해당 &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d590408b219a849e1ae7ca3cd4022dec8199bbe6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; target property may be overridden for a given configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; by the configuration-specific &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property. Furthermore, the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property may be used to map between a project's configurations and those of an imported target. If none of these is set then the name of any other configuration listed in the &lt;a href=&quot;imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt;&lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; target property may be selected and its &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; value used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5c59b9787ace18e258316163fe0859a7c8468a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IMPORTED_TARGET&lt;/code&gt; argument will create an imported target named &lt;code&gt;PkgConfig::&amp;lt;prefix&amp;gt;&lt;/code&gt; that can be passed directly as an argument to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;GLOBAL&lt;/code&gt; argument will make the imported target available in global scope.</source>
          <target state="translated">&lt;code&gt;IMPORTED_TARGET&lt;/code&gt; 의 인수라는 이름의 수입 목표 만듭니다 &lt;code&gt;PkgConfig::&amp;lt;prefix&amp;gt;&lt;/code&gt; 에 인수로 직접 전달 될 수 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;GLOBAL&lt;/code&gt; 의 인수는 전역 범위에서 가져온 대상 사용할 수있게됩니다.</target>
        </trans-unit>
        <trans-unit id="05ca05cbbae2cfc154b67801bcfd28f5f2738063" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; option for &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-9-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; directory property, tells the function to call &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; internally using the &lt;code&gt;NO_DEPENDS&lt;/code&gt; option for the specified steps.</source>
          <target state="translated">&lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; 에 대한 옵션 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-9-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; , 또는 &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; 의 디렉토리 속성은 호출하는 기능을 말한다 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 내부적으로 사용 &lt;code&gt;NO_DEPENDS&lt;/code&gt; 의 지정된 단계에 대한 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="60a4e50b26800f4ee8a37786ead7a87c3e91fd33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL&lt;/code&gt; signature differs slightly from &lt;code&gt;COPY&lt;/code&gt;: it prints status messages (subject to the &lt;a href=&quot;../variable/cmake_install_message#variable:CMAKE_INSTALL_MESSAGE&quot; id=&quot;index-0-variable:CMAKE_INSTALL_MESSAGE&quot;&gt;&lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt;&lt;/a&gt; variable), and &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; is default. Installation scripts generated by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command use this signature (with some undocumented options for internal use).</source>
          <target state="translated">&lt;code&gt;INSTALL&lt;/code&gt; 약간 서명 다릅니다 &lt;code&gt;COPY&lt;/code&gt; 는 상태 메시지합니다 (대상 인쇄 : &lt;a href=&quot;../variable/cmake_install_message#variable:CMAKE_INSTALL_MESSAGE&quot; id=&quot;index-0-variable:CMAKE_INSTALL_MESSAGE&quot;&gt; &lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt; 의&lt;/a&gt; 변수), 및 &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; 은 기본값입니다. &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령으로 생성 된 설치 스크립트는 이 서명을 사용합니다 (내부 사용을 위해 문서화되지 않은 일부 옵션 포함).</target>
        </trans-unit>
        <trans-unit id="7e5391499d19a0c1e9726743d3a4232ed03d7b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL&lt;/code&gt; signature differs slightly from &lt;code&gt;COPY&lt;/code&gt;: it prints status messages (subject to the &lt;a href=&quot;../variable/cmake_install_message#variable:CMAKE_INSTALL_MESSAGE&quot; id=&quot;index-0-variable:CMAKE_INSTALL_MESSAGE&quot;&gt;&lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt;&lt;/a&gt; variable), and &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; is default. Installation scripts generated by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command use this signature (with some undocumented options for internal use).</source>
          <target state="translated">&lt;code&gt;INSTALL&lt;/code&gt; 약간 서명 다릅니다 &lt;code&gt;COPY&lt;/code&gt; 는 상태 메시지합니다 (대상 인쇄 : &lt;a href=&quot;../variable/cmake_install_message#variable:CMAKE_INSTALL_MESSAGE&quot; id=&quot;index-0-variable:CMAKE_INSTALL_MESSAGE&quot;&gt; &lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt; 의&lt;/a&gt; 변수), 및 &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; 은 기본값입니다. &lt;a href=&quot;install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령으로 생성 된 설치 스크립트는 이 서명을 사용합니다 (내부 사용을위한 문서화되지 않은 옵션 포함).</target>
        </trans-unit>
        <trans-unit id="32ceef86fbbbf4919fb9d273e626bf6d967791d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; is only suitable for specifying the required include directories for headers provided with the target itself, not those provided by the transitive dependencies listed in its &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property. Those dependencies should themselves be targets that specify their own header locations in &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 는&lt;/a&gt; 타겟 자체의 나열된 전이 의존성에 의해 제공되지 않은 구비 헤더 인클루드 필요한 디렉토리를 지정에만 적합 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 의&lt;/a&gt; target 속성. 이러한 종속성 자체는 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 에&lt;/a&gt; 자체 헤더 위치를 지정하는 대상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="17edbc53f8c388689aacacfab49f8e258ec7c266" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; is only suitable for specifying the required include directories for headers provided with the target itself, not those provided by the transitive dependencies listed in its &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property. Those dependencies should themselves be targets that specify their own header locations in &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 는&lt;/a&gt; 타겟 자체의 나열된 전이 의존성에 의해 제공되지 않은 구비 헤더 인클루드 필요한 디렉토리를 지정에만 적합 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 의&lt;/a&gt; target 속성. 이러한 종속성은 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 에&lt;/a&gt; 고유 한 헤더 위치를 지정하는 대상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="74ba09da768041d120ba7bc811a3fdec3cf6e19e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; is only suitable for specifying the required include directories for headers provided with the target itself, not those provided by the transitive dependencies listed in its &lt;a href=&quot;interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property. Those dependencies should themselves be targets that specify their own header locations in &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 의 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 는 타겟 자체의 나열된 전이 의존성에 의해 제공되지 않은 구비 헤더 인클루드 필요한 디렉토리를 지정에만 적합 &lt;a href=&quot;interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 의&lt;/a&gt; target 속성. 이러한 종속성은 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 에 고유 한 헤더 위치를 지정하는 대상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="37d15eff5d0ab177e35176d32e96ff32cc30a57b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the features. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_features#prop_tgt:COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:COMPILE_FEATURES&quot;&gt;&lt;code&gt;COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_features#prop_tgt:INTERFACE_COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_FEATURES&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 과 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 기능의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/compile_features#prop_tgt:COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:COMPILE_FEATURES&quot;&gt; &lt;code&gt;COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_compile_features#prop_tgt:INTERFACE_COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_FEATURES&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_FEATURES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;중요 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원 합니다.) 동일한 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 추가 항목에 대한 반복 된 호출 .</target>
        </trans-unit>
        <trans-unit id="f666fcade1bd07440d5ef07b27d4b3142645db1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the features. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_features#prop_tgt:COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:COMPILE_FEATURES&quot;&gt;&lt;code&gt;COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_features#prop_tgt:INTERFACE_COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_FEATURES&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc6c168e162121e10ade9cf777d3edaf69aa6a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify compile definitions. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 과 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 다음 인수의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원 합니다.) 다음 인수는 컴파일 정의를 지정합니다. 호출 된 순서대로 동일한 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 추가 항목에 대한 반복 호출 .</target>
        </trans-unit>
        <trans-unit id="721854ab21cd564914b6e7d2b2e6130fc36cf59c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. The following arguments specify compile definitions. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610f7e9e1bfc8b56b8ef780c539c10b614c8783b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify compile options. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 과 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 다음 인수의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원 합니다.) 다음 인수는 컴파일 옵션을 지정합니다. 호출 된 순서대로 동일한 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 추가 항목에 대한 반복 호출 .</target>
        </trans-unit>
        <trans-unit id="5d596ada30d38cd7dbe82842257b51c5ed115a16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. The following arguments specify compile options. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a92c3dbd89c6812e95c114fa92275d8f7c018ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify include directories.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 과 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 다음 인수의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원 합니다.) 다음 인수는 include 디렉토리를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="006d1b445ea6f0a99671efa62ac17289e6c01832" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. The following arguments specify include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e779b970eafe09dbf535874a105ceeeba73d10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-1-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify link options. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 과 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 다음 인수의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-1-prop_tgt:LINK_OPTIONS&quot;&gt; &lt;code&gt;LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;PORTPORTED 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원 합니다.) 다음 인수는 링크 옵션을 지정합니다. 호출 된 순서대로 동일한 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 추가 항목에 대한 반복 호출 .</target>
        </trans-unit>
        <trans-unit id="5dab464ce05ab38153874d66aee06ffec98526df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-1-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. The following arguments specify link options. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67b300f320d1446c1b3b6ed81f9eec126e796a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-1-prop_tgt:PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_precompile_headers#prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot; id=&quot;index-1-prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;INTERFACE_PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items). Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; will append items in the order called.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 과 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 다음 인수의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-1-prop_tgt:PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_precompile_headers#prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot; id=&quot;index-1-prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;INTERFACE_PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원함 ). 동일한 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 에 대해 반복 된 호출은 호출 된 순서대로 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ae9011eac1843659786970386ced6052d24adf7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify sources. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 과 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 다음 인수의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt; &lt;code&gt;SOURCES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt; &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;PORTPORTED 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원 합니다.) 다음 인수는 소스를 지정합니다. 호출 된 순서대로 동일한 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 추가 항목에 대한 반복 호출 .</target>
        </trans-unit>
        <trans-unit id="c58eef611c54f37ddaef63ee6370559ce89a2a4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the items following them. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, which are used when building the target itself. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, which are used when building dependents. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items because they are not build targets.) The following arguments specify sources. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드를 다음과 같은 항목의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 대상 자체를 빌드 할 때 사용되는 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt; &lt;code&gt;SOURCES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 종속 항목을 빌드 할 때 사용되는 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt; &lt;code&gt;INTERFACE_SOURCES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상&lt;/a&gt; 은 빌드 대상이 아니기 때문에 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원 합니다.) 다음 인수는 소스를 지정합니다. 같은 것에 대한 반복 호출 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 은 호출 된 순서대로 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="43970be17baea65ca0e49dc38bf01f4279627bd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the items following them. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, which are used when building the target itself. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;, which are used when building dependents. The following arguments specify sources. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called. The targets created by &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; can only have &lt;code&gt;PRIVATE&lt;/code&gt; scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5712eec44f68e8787d48f786558782602ba8e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the items that follow them. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_link_directories#prop_tgt:INTERFACE_LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items). Each item specifies a link directory and will be converted to an absolute path if necessary before adding it to the relevant property. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="translated">&lt;code&gt;INTERFACE&lt;/code&gt; , &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;PRIVATE&lt;/code&gt; 키워드는 그들을 따라 항목의 범위를 지정해야합니다. &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;PUBLIC&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 . &lt;code&gt;PUBLIC&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 항목은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/interface_link_directories#prop_tgt:INTERFACE_LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 속성을 채 웁니다 ( &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;중요 대상&lt;/a&gt; 은 &lt;code&gt;INTERFACE&lt;/code&gt; 항목 만 지원함 ). 각 항목은 링크 디렉토리를 지정하며 필요한 경우 관련 디렉토리에 추가하기 전에 절대 경로로 변환됩니다. 동일한 통화 반복 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 은 호출 된 순서대로 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="cfbbd7b06a8e169c7120b3b19d2dd17de0bc4003" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; property informs consumers of this target whether they must set their &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;ON&lt;/code&gt;. If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property on all consumers will be set to &lt;code&gt;ON&lt;/code&gt;. Similarly, if this property is set to &lt;code&gt;OFF&lt;/code&gt;, then the &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property on all consumers will be set to &lt;code&gt;OFF&lt;/code&gt;. If this property is undefined, then consumers will determine their &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property by other means. Consumers must ensure that the targets that they link to have a consistent requirement for their &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; 의 이 대상의 속성 정보 용의 소비자들은 그들의 설정해야하는지 여부를 &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; 의&lt;/a&gt; 에 재산 &lt;code&gt;ON&lt;/code&gt; 을 . 이 속성을 &lt;code&gt;ON&lt;/code&gt; 으로 설정하면 모든 소비자 의 &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 속성이 &lt;code&gt;ON&lt;/code&gt; 으로 설정됩니다 . 이 속성으로 설정되어있는 경우와 마찬가지로, &lt;code&gt;OFF&lt;/code&gt; 후 &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; 의&lt;/a&gt; 모든 소비자에 대한 속성을 설정한다 &lt;code&gt;OFF&lt;/code&gt; . 이 속성이 정의되어 있지 않으면 소비자는 &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; 를 결정합니다.&lt;/a&gt;다른 방법으로 재산. 소비자는 자신이 연결하는 대상이 &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; 속성에 대한 일관된 요구 사항을 갖도록해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f9b3c107df7647978179a6bda14c1e02c550cc28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ISPC_INSTRUCTION_SETS&lt;/code&gt; target property must be used when generating for multiple instruction sets so that CMake can track what object files will be generated.</source>
          <target state="translated">&lt;code&gt;ISPC_INSTRUCTION_SETS&lt;/code&gt; 의 그래서 CMake 파일이 생성 될 어떠한 객체 추적 할 수있는 다수의 명령어 세트의 생성시 target 속성이 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="aaf68b24177df3b03c987234057696e77e50085a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINKER:&lt;/code&gt; prefix can be specified as part of a &lt;code&gt;SHELL:&lt;/code&gt; prefix expression.</source>
          <target state="translated">&lt;code&gt;LINKER:&lt;/code&gt; 접두사는의 한 부분으로 지정할 수 있습니다 &lt;code&gt;SHELL:&lt;/code&gt; 접두사 식입니다.</target>
        </trans-unit>
        <trans-unit id="2b002de382dc5e1ad45ce735ace96a2a016d6574" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINKER:&lt;/code&gt; prefix supports, as alternate syntax, specification of arguments using &lt;code&gt;SHELL:&lt;/code&gt; prefix and space as separator. Previous example becomes &lt;code&gt;&quot;LINKER:SHELL:-z defs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LINKER:&lt;/code&gt; 프리픽스 지원 대체 문법 사용 인수의 규격 &lt;code&gt;SHELL:&lt;/code&gt; 세퍼레이터로서 접두어 공간. 이전 예제는 &lt;code&gt;&quot;LINKER:SHELL:-z defs&quot;&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="8b232a37ba9d9d22f69ecdb02a12217fcad09797" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINKER:&lt;/code&gt; prefix supports, as an alternative syntax, specification of arguments using the &lt;code&gt;SHELL:&lt;/code&gt; prefix and space as separator. The previous example then becomes &lt;code&gt;&quot;LINKER:SHELL:-z defs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LINKER:&lt;/code&gt; 프리픽스 지원 대안 구로서, 사용 인수 지정 &lt;code&gt;SHELL:&lt;/code&gt; 세퍼레이터로서 접두어 및 공간. 그러면 이전 예제는 &lt;code&gt;&quot;LINKER:SHELL:-z defs&quot;&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="b9fbd57aa986e0ede14ad199672697bc531bad38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK_FLAGS&lt;/code&gt; property, managed as a string, can be used to add extra flags to the link step of a target. &lt;code&gt;LINK_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; will add to the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;RELEASE&lt;/code&gt;, &lt;code&gt;MINSIZEREL&lt;/code&gt;, &lt;code&gt;RELWITHDEBINFO&lt;/code&gt;, &amp;hellip;</source>
          <target state="translated">&lt;code&gt;LINK_FLAGS&lt;/code&gt; 의 문자열로 관리 속성은, 대상의 링크 단계에 여분의 플래그를 추가 할 수 있습니다. &lt;code&gt;LINK_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 에 추가한다 구성 &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 예를 들면, &lt;code&gt;DEBUG&lt;/code&gt; , &lt;code&gt;RELEASE&lt;/code&gt; , &lt;code&gt;MINSIZEREL&lt;/code&gt; , &lt;code&gt;RELWITHDEBINFO&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="5a331da3f92802a6a6549e703820e1214a3390af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK_FLAGS&lt;/code&gt; property, managed as a string, can be used to add extra flags to the link step of a target. &lt;code&gt;LINK_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; will add to the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;RELEASE&lt;/code&gt;, &lt;code&gt;MINSIZEREL&lt;/code&gt;, &lt;code&gt;RELWITHDEBINFO&lt;/code&gt;, ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1df8116efcd41ff510d745a2fe958b2ba6ab7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; mode appends the libraries to the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property instead of using them for linking. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-2-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, then this mode also appends libraries to the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-3-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; and its per-configuration equivalent.</source>
          <target state="translated">&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; 의 모드에 라이브러리를 추가 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 이&lt;/a&gt; 연결을 위해 그들을 사용하는 대신 속성을 대상으로. 정책 &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-2-policy:CMP0022&quot;&gt; &lt;code&gt;CMP0022&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;NEW&lt;/code&gt; 가 아닌 경우이 모드는 라이브러리를 &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-3-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt; &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; &lt;/a&gt; 및 해당 구성 별 항목에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="82e3f274aa77a96d2531c802b86dc372b535a1bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK_PUBLIC&lt;/code&gt; and &lt;code&gt;LINK_PRIVATE&lt;/code&gt; modes can be used to specify both the link dependencies and the link interface in one command.</source>
          <target state="translated">&lt;code&gt;LINK_PUBLIC&lt;/code&gt; 및 &lt;code&gt;LINK_PRIVATE&lt;/code&gt; 모드는 링크 종속성 하나의 명령에있는 링크 인터페이스를 모두 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f5cb55aa078dd963d8f8778acab83a5cb682314" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LibXml2&lt;/code&gt; package is considered to be found if both &lt;code&gt;LIBXML2_LIBRARY&lt;/code&gt; and &lt;code&gt;LIBXML2_INCLUDE_DIR&lt;/code&gt; are valid. Then also &lt;code&gt;LibXml2_FOUND&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;. If it is not found and &lt;code&gt;REQUIRED&lt;/code&gt; was used, it fails with a &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message(FATAL_ERROR)&lt;/code&gt;&lt;/a&gt;, independent whether &lt;code&gt;QUIET&lt;/code&gt; was used or not. If it is found, success will be reported, including the content of the first &lt;code&gt;&amp;lt;required-var&amp;gt;&lt;/code&gt;. On repeated CMake runs, the same message will not be printed again.</source>
          <target state="translated">&lt;code&gt;LibXml2&lt;/code&gt; 패키지는 두 경우 발견 된 것으로 간주됩니다 &lt;code&gt;LIBXML2_LIBRARY&lt;/code&gt; 및 &lt;code&gt;LIBXML2_INCLUDE_DIR&lt;/code&gt; 이 유효합니다. 그런 다음 &lt;code&gt;LibXml2_FOUND&lt;/code&gt; 도 &lt;code&gt;TRUE&lt;/code&gt; 로 설정됩니다 . 발견되지 않고 &lt;code&gt;REQUIRED&lt;/code&gt; 가 사용 된 경우 &lt;code&gt;QUIET&lt;/code&gt; 의 사용 여부에 관계없이 &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt; &lt;code&gt;message(FATAL_ERROR)&lt;/code&gt; &lt;/a&gt; 실패합니다 . 발견되면 첫 번째 &lt;code&gt;&amp;lt;required-var&amp;gt;&lt;/code&gt; 의 내용을 포함하여 성공이보고됩니다 . CMake를 반복해서 실행하면 동일한 메시지가 다시 인쇄되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="53b1f7f7684b865d8ce4fd54008ca16e5b81786f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; environment variable sets the default value for the &lt;a href=&quot;../variable/cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt;&lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; 의 환경 변수에 대한 기본값으로 설정 &lt;a href=&quot;../variable/cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt; &lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt; 의&lt;/a&gt; 변수를.</target>
        </trans-unit>
        <trans-unit id="cd84da49955879a2805b05cc5b3c966e8ddce08a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MESSAGE_NEVER&lt;/code&gt; option disables file installation status output.</source>
          <target state="translated">&lt;code&gt;MESSAGE_NEVER&lt;/code&gt; 의 옵션 비활성화 파일 설치 상태 출력.</target>
        </trans-unit>
        <trans-unit id="b816f26e418315007652e8536893c6b84dc8e023" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NAMESPACE&lt;/code&gt; option will prepend &lt;code&gt;MathFunctions::&lt;/code&gt; to the target names as they are written to the export file. This convention of double-colons gives CMake a hint that the name is an &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-19-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; target when it is used by downstream projects. This way, CMake can issue a diagnostic message if the package providing it was not found.</source>
          <target state="translated">&lt;code&gt;NAMESPACE&lt;/code&gt; 옵션은 앞에 추가됩니다 &lt;code&gt;MathFunctions::&lt;/code&gt; 대상 이름에 그들이 내보내기 파일에 기록한다. 이 이중 콜론 규칙은 다운 스트림 프로젝트에서 사용할 때 이름이 &lt;a href=&quot;../../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-19-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 이라는 힌트를 CMake에 제공 합니다. 이렇게하면 제공하는 패키지를 찾을 수없는 경우 CMake가 진단 메시지를 발행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0f3992f1bae10041d2b1090eebf76e8b5d13be9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to do nothing when a normal variable of the same name exists. The normal variable is not removed. The cache entry is not created or updated and is ignored if it exists.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 동일한 이름의 일반 변수가 존재할 때 아무 것도하지 않는 것입니다. 정규 변수는 제거되지 않습니다. 캐시 항목은 작성 또는 업데이트되지 않으며 존재하는 경우 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2dd5ecbdd7b732a5232fa7b89e2ecc3a77b36d73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to ignore &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; whether it is modified or not and honor the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; 가 수정되었는지 여부 를 무시 하고 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 대상 속성을 준수 하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="da402cb1b708f7f3076732a464aca9832445cbad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to process &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-5-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; source files in &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-4-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; just like regular source files.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 일반 소스 파일과 마찬가지로 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-4-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-5-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 소스 파일 을 처리 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4735fd7dec7b2153dadaf9ea853abe1586576fef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to process &lt;code&gt;.hh&lt;/code&gt; header files in &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-5-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-5-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; just like other header files.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 다른 헤더 파일과 마찬가지로 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-5-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-5-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 에서 .hh 헤더 파일 을 처리하는 &lt;code&gt;.hh&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d8d83e402782fbda1041f3697ecb8e1f79857430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to honor config-specific flag variabldes like &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; 와 같은 구성 별 플래그 변수를 존중하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="bb5f687bcc1b74caa225e0f70e76ab7a072298ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to initialize &lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-3-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; when &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; is &lt;code&gt;NVIDIA&lt;/code&gt; and raise an error if &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-3-prop_tgt:CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; is empty during generation.</source>
          <target state="translated">&lt;code&gt;NEW&lt;/code&gt; 이 정책의 동작은 초기화하는 것입니다 &lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-3-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt; 을&lt;/a&gt; 때 &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; 가 있다 &lt;code&gt;NVIDIA&lt;/code&gt; 하고 오류를 발생 &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-3-prop_tgt:CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; 가&lt;/a&gt; 생성 중에 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd2a6f75609b87ced86a112fce5a607f7ce11b58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to only use the additional link flags when linking executables if the &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-3-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-3-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 대상 속성이 &lt;code&gt;True&lt;/code&gt; 로 설정된 경우 실행 파일을 연결할 때 추가 링크 플래그 만 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="1ab3b5c5ac738d6b834ff94143d744f884673c6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to prevent a target to link to itself through an &lt;code&gt;ALIAS&lt;/code&gt; target.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 대상이 &lt;code&gt;ALIAS&lt;/code&gt; 대상을 통해 자신에게 링크되는 것을 방지하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="bdf99b811fe7f3a02686fde852d5488f34b1e4b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to prevent target overwriting.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 대상 덮어 쓰기를 방지하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6ca5724ed95bdcc8972cc5f5a4e2860556d1b9c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to raise an error on second call to &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command with same &lt;code&gt;FILE&lt;/code&gt; without &lt;code&gt;APPEND&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;APPEND&lt;/code&gt; 없이 동일한 &lt;code&gt;FILE&lt;/code&gt; 을 사용 하여 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령 을 두 번째 호출 할 때 오류를 발생시키는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="085d0bba915bf64406329496def2a261bfb80b6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to report an error if an entry in the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a generator-expression conditionally linked &lt;code&gt;IMPORTED&lt;/code&gt; target does not exist.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 생성자 표현 조건부로 연결된 &lt;code&gt;IMPORTED&lt;/code&gt; 대상 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 에 항목이없는 경우 오류를보고하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="9dbad88ce239ea3b865c5fa121a76e883959e0fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to use the link options during the device link step.</source>
          <target state="translated">이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 장치 링크 단계에서 링크 옵션을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e0b5f293f7c424716f8afc847418548c3805a2f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OBJECT&lt;/code&gt; library type defines a non-archival collection of object files resulting from compiling the given source files. The object files collection may be used as source inputs to other targets by using the syntax &lt;code&gt;$&amp;lt;TARGET_OBJECTS:name&amp;gt;&lt;/code&gt;. This is a &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; that can be used to supply the &lt;code&gt;OBJECT&lt;/code&gt; library content to other targets:</source>
          <target state="translated">&lt;code&gt;OBJECT&lt;/code&gt; 의 라이브러리 유형은 주어진 소스 파일을 컴파일에서 결과 객체 파일의 비 보관 모음을 정의합니다. 오브젝트 파일 콜렉션은 &lt;code&gt;$&amp;lt;TARGET_OBJECTS:name&amp;gt;&lt;/code&gt; 구문을 사용하여 다른 대상에 대한 소스 입력으로 사용할 수 있습니다 . 이것은 &lt;code&gt;OBJECT&lt;/code&gt; 라이브러리 컨텐츠를 다른 대상 에 제공하는 데 사용할 수 있는 &lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expression&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="d86d044f8a6320563b251921fb4e8b79d0db7b8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OBJECT&lt;/code&gt; library type defines a non-archival collection of object files resulting from compiling the given source files. The object files collection may be used as source inputs to other targets:</source>
          <target state="translated">&lt;code&gt;OBJECT&lt;/code&gt; 의 라이브러리 유형은 주어진 소스 파일을 컴파일에서 결과 객체 파일의 비 보관 모음을 정의합니다. 오브젝트 파일 콜렉션은 다른 대상에 대한 소스 입력으로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09ab90ca2f00c246e509cd98b12d1aca3e108242" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command to populate the user package registry unless &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; is enabled. The &lt;code&gt;NEW&lt;/code&gt; behavior is for &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command to do nothing unless the &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt; &lt;/a&gt; 가 활성화되어 있지 않으면 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 명령이 사용자 패키지 레지스트리를 채우는 것 입니다. &lt;code&gt;NEW&lt;/code&gt; 동작을위한 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 하지 않으면 아무것도 할 명령 &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt; &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; 이&lt;/a&gt; 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="ec117d02aff50b78c042f4457c4eb267c6d7e0a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-1-module:FindBoost&quot;&gt;&lt;code&gt;FindBoost&lt;/code&gt;&lt;/a&gt; to report &lt;code&gt;Boost_VERSION&lt;/code&gt; as specified in the preprocessor definition &lt;code&gt;BOOST_VERSION&lt;/code&gt; in &lt;code&gt;boost/version.hpp&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is for &lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-2-module:FindBoost&quot;&gt;&lt;code&gt;FindBoost&lt;/code&gt;&lt;/a&gt; to report &lt;code&gt;Boost_VERSION&lt;/code&gt; in &lt;code&gt;x.y.z&lt;/code&gt; format.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;BOOST_VERSION&lt;/code&gt; 가 &lt;code&gt;boost/version.hpp&lt;/code&gt; 의 전 처리기 정의 BOOST_VERSION 에 지정된대로 &lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-1-module:FindBoost&quot;&gt; &lt;code&gt;FindBoost&lt;/code&gt; &lt;/a&gt; 을보고하는 &lt;code&gt;Boost_VERSION&lt;/code&gt; 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-2-module:FindBoost&quot;&gt; &lt;code&gt;FindBoost&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;Boost_VERSION&lt;/code&gt; 을 &lt;code&gt;x.y.z&lt;/code&gt; 형식으로 보고하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="1c070c4da1095e37fe93847f5ea445e64ac9f90c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;code&gt;BISON_TARGET&lt;/code&gt; to use the current source directory for the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; and where to generate implicit files. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to use the current binary directory for the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; and where to generate implicit files.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;BISON_TARGET&lt;/code&gt; 이 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 및 현재 파일을 생성 할 위치 의 현재 소스 디렉토리를 사용하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 에 대해 현재 이진 디렉토리를 사용하고 암시 적 파일을 생성 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="fd60c1ffdce89ec055ef04321c7daf7acb5c73e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;code&gt;FLEX_TARGET&lt;/code&gt; to use the current source directory for the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; and where to generate implicit files. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to use the current binary directory for the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; relative to which implicit files are generated unless provided as absolute path.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;FLEX_TARGET&lt;/code&gt; 이 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 에 대해 현재 소스 디렉토리를 사용하고 암시 적 파일을 생성 할 위치를 사용하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 절대 경로로 제공되지 않는 한 암시 적 파일이 생성되는 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 에 대해 현재 바이너리 디렉토리를 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="d600e3458497270cfcdb7d204bd26097b0e12ce7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; when set to an empty string to initialize and update all git submodules. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is for &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; when set to an empty string to initialize and update no git submodules.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 모든 git 하위 모듈을 초기화하고 업데이트하기 위해 빈 문자열로 설정된 경우 &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; 에 대한 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;GIT_SUBMODULES&lt;/code&gt; 를 빈 문자열로 설정하여 git 하위 모듈을 초기화하고 업데이트하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bef00edd55209dbf16a07800bd8bc6dd71b992be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;code&gt;find_program&lt;/code&gt; to require read permission but not execute permission. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is for &lt;code&gt;find_program&lt;/code&gt; to require execute permission but not read permission.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;find_program&lt;/code&gt; 에 읽기 권한이 필요하지만 실행 권한은 필요하지 않습니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;find_program&lt;/code&gt; 이 실행 권한을 요구하지만 읽기 권한은 요구하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7d65d4cdfa8153ff13314d6b82b4e6902fcf4c57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is not to link executables to &lt;code&gt;qtmain.lib&lt;/code&gt; automatically when they link to the QtCore &lt;code&gt;IMPORTED&lt;/code&gt; target. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to link executables to &lt;code&gt;qtmain.lib&lt;/code&gt; automatically when they link to QtCore &lt;code&gt;IMPORTED&lt;/code&gt; target.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 QtCore &lt;code&gt;IMPORTED&lt;/code&gt; 대상에 링크 될 때 실행 파일을 &lt;code&gt;qtmain.lib&lt;/code&gt; 에 자동으로 링크하지 않습니다 . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 QtCore &lt;code&gt;IMPORTED&lt;/code&gt; 대상에 링크 될 때 실행 파일을 &lt;code&gt;qtmain.lib&lt;/code&gt; 에 자동으로 링크하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="05c9b07991e3dc80abe60f1fe14832c1dcc37dfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is not to warn about relative paths in the &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; contains a relative path.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 대상 속성 의 상대 경로에 대해 경고하지 않습니다 . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 에 상대 경로가 포함 된 경우 FATAL_ERROR 를 발행하는 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="53409d740a4d34d5dc79c1b6fd4eb008c855fa8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is not to warn about relative paths in the &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; target property. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; contains a relative path.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 대상 특성 의 상대 경로에 대해 경고하지 않습니다 . &lt;code&gt;NEW&lt;/code&gt; 이 정책에 대한 동작은하는데 있습니다 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 을 경우 &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 상대 경로가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5891ab01bb75b1d6fe7f1d5d2880d8e87a66d61e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to add &lt;code&gt;-i&lt;/code&gt; to &lt;code&gt;make&lt;/code&gt; calls in CTest. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not add &lt;code&gt;-i&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 CTest에서 호출 하기 &lt;code&gt;make&lt;/code&gt; &lt;code&gt;-i&lt;/code&gt; 를 추가 하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;-i&lt;/code&gt; 를 추가하지 않는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="3e582f72ce0316d649f685019d0abdfb6adad86d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to add a dependency on the evaluated target for the above generator expressions. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to not add a dependency on the evaluated target for the above generator expressions.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 위의 생성기 표현식에 대해 평가 된 대상에 대한 종속성을 추가하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 위의 생성기 표현식에 대해 평가 된 대상에 대한 종속성을 추가하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b40778954f322a0b04cd68685fbe017ddb8ff994" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow &lt;a href=&quot;../command/break#command:break&quot; id=&quot;index-2-command:break&quot;&gt;&lt;code&gt;break()&lt;/code&gt;&lt;/a&gt; to be placed outside of loop contexts and ignores any arguments. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if a misplaced break or any arguments are found.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../command/break#command:break&quot; id=&quot;index-2-command:break&quot;&gt; &lt;code&gt;break()&lt;/code&gt; &lt;/a&gt; 를 루프 컨텍스트 외부에 배치하고 인수를 무시하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 잘못 놓인 나누기 또는 인수가 발견되면 오류를 발생시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8d82a2a7d0bdd588abbf2c5df8f19545ab1aade7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow a target to link to a target aliased to itself.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 대상이 자신에게 별칭이 지정된 대상에 링크 할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7696535bbb181874f2bd8ef7abd1bee86e5821ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow creating targets with reserved names or which do not match the validity pattern. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if an add_* command is used with an invalid target name.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 예약 된 이름으로 대상을 작성하거나 유효성 패턴과 일치하지 않는 대상을 작성하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 add_ * 명령이 유효하지 않은 대상 이름과 함께 사용되는 경우 오류를보고하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f7282353655f7dedf510c56ec26e1413e7edbc89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow including the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is not to allow including the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령 의 결과를 포함하는 것입니다 . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령 의 결과를 포함하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="f06858fef883a4fb0946006eb45aac0a1b262a64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow installing the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is not to allow installing the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령 결과를 설치하는 것입니다 . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt; &lt;code&gt;export()&lt;/code&gt; &lt;/a&gt; 명령 의 결과 설치를 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="93594eb0884eedd93734d3f7f6c5c63386fb13ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow keyword and plain &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; signatures to be mixed. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not to allow mixing of the keyword and plain signatures.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 키워드와 일반 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 서명을 혼합하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 키워드와 일반 서명을 혼용하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b6ef03e6dd8a4f3ee6e803a0741e7f747f628ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow reading the &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-3-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; properties from build-targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not to allow reading the &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-4-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; properties from build-targets.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 빌드 대상에서 &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-3-prop_tgt:LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt; 속성을 읽을 수 있도록 하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작 은 빌드 대상에서 &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-4-prop_tgt:LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt; 속성을 읽을 수 없도록 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="35a2089c273568f508d9f2435f4070e339c77484" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow target overwrite.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 대상 덮어 쓰기를 허용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0b091aff65c9c13fb88814081fbe98757714b37c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow the use of &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; SOURCE signatures. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if such a signature is used.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; SOURCE 서명 을 사용하는 것입니다 . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 그러한 서명을 사용하는 경우 오류를 발생시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3d16da0b8f86d503e5a3f53904d025bd988a2b58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ask the linker to search for libraries whose full paths are known to be in implicit link directories. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to link libraries by full path even if they are in implicit link directories.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 링커에게 전체 경로가 암시 적 링크 디렉토리에있는 것으로 알려진 라이브러리를 검색하도록 요청하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 라이브러리가 암시 적 링크 디렉토리에 있더라도 전체 경로로 라이브러리를 링크하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="80434789d0aa523b976d81a592f5a9a1d514c346" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to consume the content of the suffixed &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property when generating the compilation command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to ignore the content of the &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property .</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 컴파일 명령을 생성 할 때 접미사 &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대상 특성 의 컨텐츠를 사용하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대상 속성 의 내용을 무시하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="dffdaaa462035a1ae931775a04b19bc95d537be4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to create the empty cache definition. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to ignore variables which do not already exist in the cache.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 빈 캐시 정의를 만드는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 캐시에 아직없는 변수를 무시하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e3b3657f5ca4fb21666cb662d0e4fd57b974c89a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to dereference variables and interpret keywords even if they are quoted or bracketed. The &lt;code&gt;NEW&lt;/code&gt; behavior is to not dereference variables or interpret keywords that have been quoted or bracketed.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 변수를 역 참조하고 키워드를 인용하거나 괄호로 묶어도 키워드를 해석하는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작하지 변수 역 참조 또는 인용이나 괄호 된 키워드를 해석이다.</target>
        </trans-unit>
        <trans-unit id="d7742d60a213f4a46a810a5ec88705e13917be55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to duplicate custom commands in dependent targets. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to not duplicate custom commands in dependent targets.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 종속 대상에서 사용자 지정 명령을 복제하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 종속 대상에서 사용자 지정 명령을 복제하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4f66b3e357e10abb9002e5a9f654957be616c4db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to expand such variables when processing the target sources. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if such variables need to be expanded.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 대상 소스를 처리 할 때 이러한 변수를 확장하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 이러한 변수를 확장해야 할 경우 오류를 발생시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8c05a630f26293570103d455906fce6a90583d6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to export the content of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; with the source or binary directory. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if such a directory is used.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의 컨텐츠를 소스 또는 2 진 디렉토리 로 내보내는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 해당 디렉토리를 사용하는 경우 오류를 발생시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="41fb23bd0b8b5e9f1a6fbc4ffc122d7899915258" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to fall back to the &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt; if a &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt; is not given. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to produce an error if a bundle target is installed without a &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OLD&lt;/code&gt; 이 정책에 대한 동작은 다시 하락하는 &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt; 경우 &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt; 주어지지 않는다. &lt;code&gt;NEW&lt;/code&gt; 이 정책에 대한 동작은 번들 대상이없이 설치되어있는 경우 오류가 발생하는 것입니다 &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad3eb3c617e40fd8ae48f357ed5d5872c6413553" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to honor the legacy behavior for variable references and escape sequences. The &lt;code&gt;NEW&lt;/code&gt; behavior is to use the simpler variable expansion and escape sequence evaluation rules.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 변수 참조 및 이스케이프 시퀀스에 대한 레거시 동작을 존중하는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 간단한 변수 확장을 사용하여 시퀀스 평가 규칙을 탈출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d1d30f6ec38737fc4eaf121006ddc60203aed569" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-4-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; source files in &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-3-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-3-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-4-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; &lt;/a&gt; 소스 파일 을 무시하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e9bbd7b324c26a49f21027e9a6ccaf10c80aca39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 변수 를 무시하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; 변수를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="280b5142fb3aaf937c67934d3a357133ae64ba9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore &lt;code&gt;.hh&lt;/code&gt; header files in &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-4-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-4-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 의&lt;/a&gt; &lt;code&gt;.hh&lt;/code&gt; 헤더 파일 을 무시하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e3249c51e1f3fdb30fad24ab0ed10ee9ffc8ed03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; in the include file check macros. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to honor &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; in the include file check macros.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 포함 파일 검사 매크로에서 &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; 를 무시하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 포함 파일 검사 매크로에서 &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; 를 준수 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="72771179e457048bd0796a6a57f9e8ed18252a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore attempts to set the link libraries of utility targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if an attempt is made to set the link libraries of a utility target.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 유틸리티 대상의 링크 라이브러리 설정 시도를 무시하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 유틸리티 대상의 링크 라이브러리를 설정하려는 경우 오류를보고하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="485aa4d5ab39ddec6bd427df1684df6e3267d614" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore custom commands for unknown targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if the target referenced in &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; is unknown or was defined outside the current directory.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 알 수없는 대상에 대한 사용자 정의 명령을 무시하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 에서 참조 된 대상을 알 수 없거나 현재 디렉토리 외부에 정의 된 경우 오류를보고하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="67fd4076e3066c2cbfb3df4a04147f6919435b06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore relative path entries if they contain a generator expression. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if a generator expression appears in another location and the path is relative.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 생성기 표현식이 포함 된 상대 경로 항목을 무시하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 생성기 표현식이 다른 위치에 나타나고 경로가 상대적인 경우 오류를보고하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cf7ed519c8207daa59a1ed24cda7c6bc5b8016ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore targets which list themselves in their own link implementation. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if a target attempts to link to itself.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 자체 링크 구현에 자신을 나열하는 대상을 무시하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 대상이 자신에게 연결을 시도 할 경우 오류를보고하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="52645e1a5e14bd615cd9dd18cfd4c59f81073c93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property for in-build targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use the &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; property for in-build targets, and ignore the old properties matching &lt;code&gt;(IMPORTED_)?LINK_INTERFACE_LIBRARIES(_&amp;lt;CONFIG&amp;gt;)?&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 빌드중인 대상 의 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 속성 을 무시하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 빌드 대상에 &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 속성 을 사용하고 이전 속성 일치 &lt;code&gt;(IMPORTED_)?LINK_INTERFACE_LIBRARIES(_&amp;lt;CONFIG&amp;gt;)?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f076c54b6f98289adda8dc9e50a546bc1cbf1df6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property for all targets and use the modified value of &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; for &lt;code&gt;SHARED&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; libraries.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 모든 대상 의 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 속성 을 무시하고 &lt;code&gt;SHARED&lt;/code&gt; 및 &lt;code&gt;MODULE&lt;/code&gt; 라이브러리에 대해 &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; 의 수정 된 값을 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="bf2c61f46be23474295fd8df211a5f489efd3a92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the &lt;code&gt;TEST&lt;/code&gt; operator. The &lt;code&gt;NEW&lt;/code&gt; behavior is to interpret the &lt;code&gt;TEST&lt;/code&gt; operator.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;TEST&lt;/code&gt; 연산자 를 무시하는 것 입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 해석하는 것입니다 &lt;code&gt;TEST&lt;/code&gt; 연산자.</target>
        </trans-unit>
        <trans-unit id="fd43ea84e606f4c09a5d9d865e31f7c77d2871ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the IN_LIST operator. The &lt;code&gt;NEW&lt;/code&gt; behavior is to interpret the IN_LIST operator.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 IN_LIST 연산자를 무시하는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 IN_LIST 연산자를 해석하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b314462e2f23ea943d9124bc621c97e40da2901e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the link options.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 링크 옵션을 무시하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3ba29a224c1ebba67c289e9e66654af755b8bba6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the visibility properties for static libraries, object libraries, and executables without exports. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to honor the visibility properties for all target types.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 내보내기없이 정적 라이브러리, 객체 라이브러리 및 실행 파일의 가시성 속성을 무시하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 모든 대상 유형의 가시성 속성을 존중하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="08ba382eed0e1b3031d37a53facf68c3e086cdf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to implicitly append known extensions to source files if they can't be found. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to not append known extensions and require them to be explicit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997f9ef8d251e217ec65cd9c9a5a737697317882" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to implicitly dereference variables named like numbers and boolean constants. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to recognize numbers and boolean constants without dereferencing variables with such names.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 숫자 및 부울 상수와 같은 이름이 지정된 변수를 암시 적으로 역 참조하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 그러한 이름을 가진 변수를 역 참조하지 않고 숫자와 부울 상수를 인식하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7cde281f2077f07c2eff37cdd63eeb5944473dc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to interpret the &lt;code&gt;LANGUAGE &amp;lt;LANG&amp;gt;&lt;/code&gt; property using its undocumented meaning to &quot;use the &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; compiler&quot;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to interpret the &lt;code&gt;LANGUAGE &amp;lt;LANG&amp;gt;&lt;/code&gt; property using its documented meaning to &quot;compile as a &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; source&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49912b23580714d587eb0031a19d464d41b575a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to issue no warning and set the result variable to a &lt;code&gt;-NOTFOUND&lt;/code&gt; value. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if the command is called with a non-existent target.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 경고를 발행하지 않고 결과 변수를 &lt;code&gt;-NOTFOUND&lt;/code&gt; 값으로 설정하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 존재하지 않는 대상으로 명령을 호출 한 경우 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 를 발행하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="3b9ca13bd7e6531702d9427d47629c8b6b55a33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to leave &lt;code&gt;VERSION&lt;/code&gt; variables untouched. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to set &lt;code&gt;VERSION&lt;/code&gt; as documented by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-4-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;VERSION&lt;/code&gt; 변수를 그대로 두는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작 은 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-4-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령 으로 문서화 된대로 &lt;code&gt;VERSION&lt;/code&gt; 을 설정 하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="f011f3c0fbab6321b0c07d702f24de046a919a97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to never pass &lt;code&gt;-module&lt;/code&gt; option. The &lt;code&gt;NEW&lt;/code&gt; behavior is to pass &lt;code&gt;-module&lt;/code&gt; option to &lt;code&gt;SWIG&lt;/code&gt; compiler if &lt;code&gt;SWIG_MODULE_NAME&lt;/code&gt; is specified.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;-module&lt;/code&gt; 옵션을 전달하지 않는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작 전달하는 것입니다 &lt;code&gt;-module&lt;/code&gt; 에 옵션을 &lt;code&gt;SWIG&lt;/code&gt; 경우 컴파일러 &lt;code&gt;SWIG_MODULE_NAME&lt;/code&gt; 가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="87c3ca7b2625ecdb1b15b67ec9fc26fc776425c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to not honor &lt;code&gt;BEFORE&lt;/code&gt; keyword in private scope. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to honor &lt;code&gt;BEFORE&lt;/code&gt; keyword in all scopes.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 개인 범위에서 &lt;code&gt;BEFORE&lt;/code&gt; 키워드를 준수 하지 않는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 모든 범위에서 &lt;code&gt;BEFORE&lt;/code&gt; 키워드를 준수하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f631b6d201ed311ddf54ce9d18d5bc77c9b61708" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to not initialize &lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-2-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; when &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; is &lt;code&gt;NVIDIA&lt;/code&gt;. Empty &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-2-prop_tgt:CUDA_ARCHITECTURES&quot;&gt;&lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; is allowed.</source>
          <target state="translated">&lt;code&gt;OLD&lt;/code&gt; 이 정책에 대한 동작은 초기화하지 않는 것입니다 &lt;a href=&quot;../variable/cmake_cuda_architectures#variable:CMAKE_CUDA_ARCHITECTURES&quot; id=&quot;index-2-variable:CMAKE_CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_CUDA_ARCHITECTURES&lt;/code&gt; 을&lt;/a&gt; 때 &lt;code&gt;CMAKE_CUDA_COMPILER_ID&lt;/code&gt; 가 있다 &lt;code&gt;NVIDIA&lt;/code&gt; . 빈 &lt;a href=&quot;../prop_tgt/cuda_architectures#prop_tgt:CUDA_ARCHITECTURES&quot; id=&quot;index-2-prop_tgt:CUDA_ARCHITECTURES&quot;&gt; &lt;code&gt;CUDA_ARCHITECTURES&lt;/code&gt; &lt;/a&gt; 가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="0a7f49680d58c18b82b8f526f626915ca2855523" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to not manage &lt;code&gt;PIE&lt;/code&gt; link flags. The &lt;code&gt;NEW&lt;/code&gt; behavior is to add link flags if &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; is set:</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;PIE&lt;/code&gt; 링크 플래그를 관리하지 않는 것 입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 경우 링크 플래그를 추가하는 것입니다 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; 이&lt;/a&gt; 설정은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="490515761978ee3fd4e6b3ebd1b8f09f1fd380c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to not propagate interface link properties. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to propagate interface link properties.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 인터페이스 링크 특성을 전파하지 않는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 인터페이스 링크 속성을 전파하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="efd74c243309f1c4e6cb60f36956169b4d03f386" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to not set the value of the &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-1-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; variable in the generated test project. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to set the value of the &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-2-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; variable in the test project to the same as it is in the calling project.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 생성 된 테스트 프로젝트에서 &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-1-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt; &lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt; &lt;/a&gt; 변수 의 값을 설정하지 않는 것입니다 . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작 은 테스트 프로젝트 의 &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-2-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt; &lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt; &lt;/a&gt; 변수 값을 호출 프로젝트 의 값과 동일하게 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4f5580a647fda026c5205b65d9daa1946126a0bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to omit &lt;code&gt;TARGET_OBJECTS&lt;/code&gt; expressions from the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-2-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; target property. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to include &lt;code&gt;TARGET_OBJECTS&lt;/code&gt; expressions in the output.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-2-prop_tgt:SOURCES&quot;&gt; &lt;code&gt;SOURCES&lt;/code&gt; &lt;/a&gt; 대상 특성 에서 &lt;code&gt;TARGET_OBJECTS&lt;/code&gt; 표현식 을 생략 하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작 은 출력에 &lt;code&gt;TARGET_OBJECTS&lt;/code&gt; 표현식 을 포함 시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f64357d6bb73086dd60c5f888c008cc53cb49561" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to pass the &lt;code&gt;DEPFILE&lt;/code&gt; to Ninja unaltered. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to transform the &lt;code&gt;DEPFILE&lt;/code&gt; after running the custom command. The status of &lt;code&gt;CMP0116&lt;/code&gt; is recorded at the time of the custom command's creation, and you can have custom commands in the same directory with different values for &lt;code&gt;CMP0116&lt;/code&gt; by setting the policy before each custom command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b60b29de9e2123399af68616e71659f260d6a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to perform a case-insensitive comparison with the value in the &lt;code&gt;&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; expression. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to perform a case-sensitive comparison with the value in the &lt;code&gt;&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; expression.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 표현식 의 값과 대소 문자를 구분하지 않는 비교를 수행하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 식 의 값과 대 / 소문자를 구분하여 비교하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="a04a1b8fb7b01c26a36bad53de5e9954354a31eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to place MSVC runtime library flags in the default &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entries and ignore the &lt;a href=&quot;../variable/cmake_msvc_runtime_library#variable:CMAKE_MSVC_RUNTIME_LIBRARY&quot; id=&quot;index-1-variable:CMAKE_MSVC_RUNTIME_LIBRARY&quot;&gt;&lt;code&gt;CMAKE_MSVC_RUNTIME_LIBRARY&lt;/code&gt;&lt;/a&gt; abstraction. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to &lt;em&gt;not&lt;/em&gt; place MSVC runtime library flags in the default cache entries and use the abstraction instead.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 MSVC 런타임 라이브러리 플래그를 기본 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 캐시 항목에 배치하고 &lt;a href=&quot;../variable/cmake_msvc_runtime_library#variable:CMAKE_MSVC_RUNTIME_LIBRARY&quot; id=&quot;index-1-variable:CMAKE_MSVC_RUNTIME_LIBRARY&quot;&gt; &lt;code&gt;CMAKE_MSVC_RUNTIME_LIBRARY&lt;/code&gt; &lt;/a&gt; 추상화를 무시하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 MSVC 런타임 라이브러리 플래그를 기본 캐시 항목에 배치 &lt;em&gt;하지&lt;/em&gt; 않고 대신 추상화를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="348304e1360f733f0d6d302a04241d3f2f2dde68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to place MSVC warning flags in the default &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; cache entries. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to &lt;em&gt;not&lt;/em&gt; place MSVC warning flags in the default cache entries.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 MSVC 경고 플래그를 기본 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; 캐시 항목에 배치하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작 은 기본 캐시 항목에 MSVC 경고 플래그를 배치 &lt;em&gt;하지 않는&lt;/em&gt; 것입니다.</target>
        </trans-unit>
        <trans-unit id="6e5ae191fc0aa545cdb31bc35897edafb3eb4892" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to place definition values given to add_definitions directly in the generated build rules without attempting to escape anything. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to generate correct escapes for all native build tools automatically. See documentation of the &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; target property for limitations of the escaping implementation.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 어떤 것도 이스케이프하지 않고 add_definitions에 제공된 정의 값을 생성 된 빌드 규칙에 직접 배치하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 모든 기본 빌드 도구에 대해 올바른 이스케이프를 자동으로 생성하는 것입니다. 이스케이프 구현의 제한 사항은 &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; 대상 특성의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f9ef1145a48490437115a562f99595f5137e26e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to place the MSVC &lt;code&gt;/GR&lt;/code&gt; flag in the default &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; cache entry. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to &lt;em&gt;not&lt;/em&gt; place the MSVC &lt;code&gt;/GR&lt;/code&gt; flag in the default cache entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f0ec8b31b9bebc721487fade88a6f250072367" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to proceed even when a normal variable of the same name exists. If the cache entry does not already exist and have a type then it is created and/or given a type and the normal variable is removed.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 동일한 이름의 일반 변수가 존재하더라도 진행하는 것입니다. 캐시 항목이 존재하지 않고 유형이있는 경우 유형이 작성 및 / 또는 지정되고 일반 변수가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="32560d72ec9076d89eac4b4eebf562697b6ed8f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to provide the list of flags given so far to the &lt;a href=&quot;../command/add_definitions#command:add_definitions&quot; id=&quot;index-0-command:add_definitions&quot;&gt;&lt;code&gt;add_definitions()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;NEW&lt;/code&gt; behavior is to behave as a normal user-defined directory property.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 지금까지 &lt;a href=&quot;../command/add_definitions#command:add_definitions&quot; id=&quot;index-0-command:add_definitions&quot;&gt; &lt;code&gt;add_definitions()&lt;/code&gt; &lt;/a&gt; 명령에 제공된 플래그 목록을 제공하는 것 입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 일반 사용자 정의 디렉토리 속성으로 행동하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2b9dbfb6bce9ef162ddb0a8c73a6423eb9d74b8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to re-evaluate the values for strict compatibility. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to leave the values untouched.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 엄격한 호환성 값을 다시 평가하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 값을 그대로 유지하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a7d27f60ec28078179b56c2ff34989f62695be0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to run the install rules from &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-4-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; after the other install rules. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to run all install rules in the order they are declared.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 다른 설치 규칙 다음에 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-4-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 에서 설치 규칙을 실행하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 선언 된 순서대로 모든 설치 규칙을 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b60533e521ae50c6e528265844d272d7e6ba8ed7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to search for targets, then files on disk, even if the search term contains double-colons. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if a link dependency contains double-colons but is not an &lt;code&gt;IMPORTED&lt;/code&gt; target or an &lt;code&gt;ALIAS&lt;/code&gt; target.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 검색 용어에 이중 콜론이 포함되어 있어도 대상을 찾은 다음 디스크의 파일을 검색하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작 은 링크 종속성에 이중 콜론이 포함되어 있지만 &lt;code&gt;IMPORTED&lt;/code&gt; 대상 또는 &lt;code&gt;ALIAS&lt;/code&gt; 대상 이 아닌 경우 &lt;code&gt;FATAL_ERROR&lt;/code&gt; 를 발행하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c2999fb6526bcd171d90840701af0c746ec6c556" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to set &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; cache entries. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not set them.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; 캐시 항목을 설정하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 설정하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9f241c40018543a17e51b7eb84980b3ea34614be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to set &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; to &lt;code&gt;LEGACY&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to set &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; to &lt;code&gt;GLVND&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; 를 &lt;code&gt;LEGACY&lt;/code&gt; 로 설정하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; 를 &lt;code&gt;GLVND&lt;/code&gt; 로 설정 하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="1f94d6411006ba4b0379c8bb2df7e6daee91b21d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to silently ignore non-existent dependencies. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if non-existent dependencies are listed in the &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-1-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 존재하지 않는 종속성을 자동으로 무시하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 존재하지 않는 종속성이 &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-1-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; 명령에 나열된 경우 오류를보고하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="2b155382697a72e173405dc3c738cfae928e3de8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to silently remove leading and trailing whitespace. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to diagnose the existence of such whitespace as an error. The setting for this policy used when checking the library names is that in effect when the target is created by an &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 선행 및 후행 공백을 자동으로 제거하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 오류와 같은 공백의 존재를 진단하는 것입니다. 라이브러리 이름을 확인할 때 사용이 정책의 설정은 적용 대상으로가 생성 될 때이다 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="62059cb4a4e1ae2aee1a36c09e0dde889534db24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;Clang&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;AppleClang&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 컴파일러 ID &lt;code&gt;Clang&lt;/code&gt; 을 사용하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 컴파일러 ID &lt;code&gt;AppleClang&lt;/code&gt; 을 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="8b82147017da2b8d19eca37c7d4487ba8a3429f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;XL&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;XLClang&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 컴파일러 ID &lt;code&gt;XL&lt;/code&gt; 을 사용하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 컴파일러 ID &lt;code&gt;XLClang&lt;/code&gt; 을 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4597054428bc391cc3bde8fd8378eca932222c25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use the &lt;code&gt;GNU&lt;/code&gt; compiler id for the qcc and QCC compiler drivers. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use the &lt;code&gt;QCC&lt;/code&gt; compiler id for those drivers.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 qcc 및 QCC 컴파일러 드라이버에 &lt;code&gt;GNU&lt;/code&gt; 컴파일러 ID 를 사용하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작 은 해당 드라이버에 &lt;code&gt;QCC&lt;/code&gt; 컴파일러 ID를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="23785fdef39389c0a06c3c4b38b621ade65dda70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy relies on &lt;code&gt;UseSWIG_TARGET_NAME_PREFERENCE&lt;/code&gt; variable that can be used to specify an explicit preference. The value may be one of:</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작 은 명시 적 환경 설정을 지정하는 데 사용할 수있는 &lt;code&gt;UseSWIG_TARGET_NAME_PREFERENCE&lt;/code&gt; 변수에 의존합니다 . 값은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd326fbf15af7734a1e9f550b38e4b85e048fca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy set value &lt;code&gt;VERSION&lt;/code&gt; for variables &lt;code&gt;Python3_FIND_STRATEGY&lt;/code&gt;, &lt;code&gt;Python2_FIND_STRATEGY&lt;/code&gt; and &lt;code&gt;Python_FIND_STRATEGY&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 변수 &lt;code&gt;Python3_FIND_STRATEGY&lt;/code&gt; , &lt;code&gt;Python2_FIND_STRATEGY&lt;/code&gt; 및 &lt;code&gt;Python_FIND_STRATEGY&lt;/code&gt; 에 대해 &lt;code&gt;VERSION&lt;/code&gt; 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9a2c1d6d520228eca8892355c933d848e487fc06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of a policy is &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;deprecated by definition&lt;/code&gt;&lt;/a&gt; and may be removed in a future version of CMake.</source>
          <target state="translated">정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt; &lt;code&gt;deprecated by definition&lt;/code&gt; &lt;/a&gt; 향후 CMake 버전에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="170d99b8f4041fe3a8efa468f90e340b86b5e625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of a policy is &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-1-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;deprecated by definition&lt;/code&gt;&lt;/a&gt; and may be removed in a future version of CMake.</source>
          <target state="translated">정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-1-manual:cmake-policies(7)&quot;&gt; &lt;code&gt;deprecated by definition&lt;/code&gt; &lt;/a&gt; 향후 CMake 버전에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d2f127c97b55e41dab2a374d2ac79130436165e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy drops leading zeros in all components, e.g. such that version &lt;code&gt;1.07.06&lt;/code&gt; becomes &lt;code&gt;1.7.6&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy preserves the leading zeros in all components, such that version &lt;code&gt;1.07.06&lt;/code&gt; remains unchanged.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 모든 구성 요소에서 선행 0을 삭제합니다 (예 : 버전 &lt;code&gt;1.07.06&lt;/code&gt; 이 &lt;code&gt;1.7.6&lt;/code&gt; ) . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 모든 구성 요소에서 선행 0을 유지하므로 버전 &lt;code&gt;1.07.06&lt;/code&gt; 은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e6fb742be5de9c4b6c0082c7db23593cc4f29f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-6-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-7-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt; to not evaluate generator expressions. The &lt;code&gt;NEW&lt;/code&gt; behavior is to evaluate generator expressions for &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-8-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-9-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-6-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-7-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; &lt;/a&gt; 이 생성기 표현식을 평가하지 않는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작을 위해 발전기 식을 평가하는 것입니다 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-8-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-9-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97942ade68d1afe135209899b13d235ef4e3e3eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;a href=&quot;../module/documentation#module:Documentation&quot; id=&quot;index-2-module:Documentation&quot;&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/a&gt; to add cache variables and find VTK documentation dependent packages. The &lt;code&gt;NEW&lt;/code&gt; behavior is to act as an empty module.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../module/documentation#module:Documentation&quot; id=&quot;index-2-module:Documentation&quot;&gt; &lt;code&gt;Documentation&lt;/code&gt; &lt;/a&gt; 가 캐시 변수를 추가하고 VTK 문서 종속 패키지를 찾는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 빈 모듈 역할을하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e187dcf4d8c6ad3fdcda354e650a09ac7436c657" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-4-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; to exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior is to pretend that it doesn&amp;rsquo;t exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 대해 &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-4-module:FindQt&quot;&gt; &lt;code&gt;FindQt&lt;/code&gt; &lt;/a&gt; 가 존재하는 것 입니다. &lt;code&gt;NEW&lt;/code&gt; 행동은 존재하지 않는 척하는 것입니다 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b494509ab70374408f069f452daa70c533061bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-4-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; to exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior is to pretend that it doesn't exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5dd231510717e7e8c75467997d0f1bd195264c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; to always return &lt;code&gt;0&lt;/code&gt; if the first argument is empty. The &lt;code&gt;NEW&lt;/code&gt; behavior is to return &lt;code&gt;1&lt;/code&gt; if the first argument is empty and the list contains an empty item.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; 가 첫 번째 인수가 비어있는 경우 항상 &lt;code&gt;0&lt;/code&gt; 을 반환하는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 반환하는 것입니다 &lt;code&gt;1&lt;/code&gt; 첫 번째 인수가 비어 있고 목록이 비어있는 항목을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f93d9aa89d2d403dba914d1854554683e547d98b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for inclusion of the deprecated &lt;a href=&quot;../module/writecompilerdetectionheader#module:WriteCompilerDetectionHeader&quot; id=&quot;index-3-module:WriteCompilerDetectionHeader&quot;&gt;&lt;code&gt;WriteCompilerDetectionHeader&lt;/code&gt;&lt;/a&gt; module to work. The &lt;code&gt;NEW&lt;/code&gt; behavior is for inclusion of the module to fail as if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80611e54472ee34190f3067dfe2340a32825f86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to allow &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-3-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; to be included at configure time. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to disallow such inclusion.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 구성시 &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-3-module:BundleUtilities&quot;&gt; &lt;code&gt;BundleUtilities&lt;/code&gt; &lt;/a&gt; 가 포함 되도록 하는 것입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 행동은 그러한 포함을 허용하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="03f48da75d34ce9a5f9c569deab8ebb34e5be769" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to always use the additional link flags when linking executables regardless of the value of the &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-2-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-2-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 대상 속성 값에 관계없이 실행 파일을 연결할 때 항상 추가 링크 플래그를 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c7d8a6869ed740909de4e3a358beed710c41c068" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to disallow &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-5-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; calls naming targets from another directory except in the previously accidentally allowed case of using the &lt;code&gt;INTERFACE&lt;/code&gt; keyword only. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to allow all such calls but use the new scoping rules.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 이전에 실수로 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드 를 사용한 경우를 제외하고 다른 디렉토리에서 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-5-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 호출 이름 지정 대상 을 허용하지 않는 것입니다 . 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 모든 통화를 허용하지만 새로운 범위 지정 규칙을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c6511dfc909bb76262ea5fbd17483b2011257bd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to generate the location of an imported unknown, static or shared library target as &lt;code&gt;&amp;lt;TARGET_NAME&amp;gt;-NOTFOUND&lt;/code&gt; if not set. The &lt;code&gt;NEW&lt;/code&gt; behavior is to raise an error.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 가져온 알 수없는 정적 또는 공유 라이브러리 대상의 위치를 설정하지 않은 경우 &lt;code&gt;&amp;lt;TARGET_NAME&amp;gt;-NOTFOUND&lt;/code&gt; 로 생성 하는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 오류가 발생하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a6d40240abbfeed19d1cea549a8ebe31f5a8e9e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to ignore config-specific flag variables like &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; and only use CMake&amp;rsquo;s built-in defaults for the current compiler and platform.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; 와 같은 구성 별 플래그 변수를 무시 하고 현재 컴파일러 및 플랫폼에 대해 CMake의 기본 제공 기본값 만 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6679b5e68aaaf114d71f0e24e7a57ffc94d00cd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to ignore config-specific flag variables like &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; and only use CMake's built-in defaults for the current compiler and platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abe5ad8d463d7d9bc07db9d106e04bf6439bf39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to ignore language standard setting variables when generating the &lt;code&gt;try_compile&lt;/code&gt; test project. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to honor language standard setting variables.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 &lt;code&gt;try_compile&lt;/code&gt; 테스트 프로젝트를 생성 할 때 언어 표준 설정 변수를 무시하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 언어 표준 설정 변수를 존중하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0b95743c330884093cabda729e9473329dc8364d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to not escape &lt;code&gt;RPATH&lt;/code&gt; entries in the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script. The &lt;code&gt;NEW&lt;/code&gt; behavior is to properly escape coincidental CMake syntax in &lt;code&gt;RPATH&lt;/code&gt; entries when generating the intermediary &lt;code&gt;cmake_install.cmake&lt;/code&gt; script.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 중개 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 스크립트 에서 &lt;code&gt;RPATH&lt;/code&gt; 항목을 이스케이프하지 않는 것 입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 제대로 우연의 일치 CMake 구문 탈출하는 것입니다 &lt;code&gt;RPATH&lt;/code&gt; 의 중간 생성 할 때 항목 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 의 스크립트를.</target>
        </trans-unit>
        <trans-unit id="9e6e1374b195fae3bcc17acb65af686e8dcdc773" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to only allow &lt;code&gt;GENERATED&lt;/code&gt; to be visible from the directory scope for which it was set. The &lt;code&gt;NEW&lt;/code&gt; behavior on the other hand allows it to be visible from any scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6663140c881a0ec27e772cdc3e54b8dbca251171" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to report a warning if an entry in the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a generator-expression conditionally linked &lt;code&gt;IMPORTED&lt;/code&gt; target does not exist.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 생성자 표현식 조건부로 연결된 &lt;code&gt;IMPORTED&lt;/code&gt; 대상 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 에 항목이없는 경우 경고를보고하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="29eb71c19fb9a8fb5b427d1f393f05b9f9ea58dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to still prevent &lt;code&gt;add_test&lt;/code&gt; from handling whitespace and special characters properly (if not using the mentioned workaround). The &lt;code&gt;NEW&lt;/code&gt; behavior on the other hand allows names with whitespace and special characters for tests created by &lt;code&gt;add_test&lt;/code&gt;.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 여전히 &lt;code&gt;add_test&lt;/code&gt; 가 공백 및 특수 문자를 올바르게 처리 하지 못하도록 방지하는 것입니다 (언급 된 해결 방법을 사용하지 않는 경우). 반면 &lt;code&gt;NEW&lt;/code&gt; 동작은 &lt;code&gt;add_test&lt;/code&gt; 에 의해 생성 된 테스트에 공백과 특수 문자가있는 이름을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="4fca32ff537b5dbe6bd090f27a25745a71d52b35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to use the &lt;code&gt;RPATH&lt;/code&gt; settings for &lt;code&gt;install_name&lt;/code&gt; on macOS. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to ignore the &lt;code&gt;RPATH&lt;/code&gt; settings for &lt;code&gt;install_name&lt;/code&gt; on macOS.</source>
          <target state="translated">이 정책 의 &lt;code&gt;OLD&lt;/code&gt; 동작은 macOS 에서 &lt;code&gt;install_name&lt;/code&gt; 에 대한 &lt;code&gt;RPATH&lt;/code&gt; 설정 을 사용하는 것 입니다. 이 정책 의 &lt;code&gt;NEW&lt;/code&gt; 동작은 macOS 에서 &lt;code&gt;install_name&lt;/code&gt; 에 대한 &lt;code&gt;RPATH&lt;/code&gt; 설정 을 무시하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="6bb303b96777c1e7be790403c9d1b803328860e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OPTIONAL&lt;/code&gt; keyword is a placeholder for future implementation and does not currently work. Instead you can use the &lt;a href=&quot;../module/checklanguage#module:CheckLanguage&quot; id=&quot;index-0-module:CheckLanguage&quot;&gt;&lt;code&gt;CheckLanguage&lt;/code&gt;&lt;/a&gt; module to verify support before enabling.</source>
          <target state="translated">&lt;code&gt;OPTIONAL&lt;/code&gt; 키워드는 미래 구현을위한 자리이며, 현재 작동하지 않습니다. 대신 &lt;a href=&quot;../module/checklanguage#module:CheckLanguage&quot; id=&quot;index-0-module:CheckLanguage&quot;&gt; &lt;code&gt;CheckLanguage&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 활성화하기 전에 지원을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1e3c2b15771b60b266a638f0d666daab2a14e06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OSX_ARCHITECTURES&lt;/code&gt; property sets the target binary architecture for targets on macOS (&lt;code&gt;-arch&lt;/code&gt;). This property is initialized by the value of the variable &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; if it is set when a target is created. Use &lt;code&gt;OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; to set the binary architectures on a per-configuration basis, where &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is an upper-case name (e.g. &lt;code&gt;OSX_ARCHITECTURES_DEBUG&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;OSX_ARCHITECTURES&lt;/code&gt; 의 속성은 맥 OS에 대한 목표에 대한 목표 바이너리 구조를 설정 ( &lt;code&gt;-arch&lt;/code&gt; ). 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt; &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; &lt;/a&gt; 변수의 값으로 초기화됩니다 . 사용 &lt;code&gt;OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 별 설정 기준에 진 구조를 설정하는 &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대문자 이름 (예이다 &lt;code&gt;OSX_ARCHITECTURES_DEBUG&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ab6b908d2fb99f178c96fb5631aa1f21e1dddba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PARSE_ARGV&lt;/code&gt; signature is only for use in a &lt;a href=&quot;function#command:function&quot; id=&quot;index-1-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; body. In this case the arguments that are parsed come from the &lt;code&gt;ARGV#&lt;/code&gt; variables of the calling function. The parsing starts with the &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt;-th argument, where &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt; is an unsigned integer. This allows for the values to have special characters like &lt;code&gt;;&lt;/code&gt; in them.</source>
          <target state="translated">&lt;code&gt;PARSE_ARGV&lt;/code&gt; 의 서명만을 사용하기위한 &lt;a href=&quot;function#command:function&quot; id=&quot;index-1-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 체. 이 경우 구문 분석 된 인수 는 호출 함수 의 &lt;code&gt;ARGV#&lt;/code&gt; 변수에서옵니다. 구문 분석은 &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt; - 번째 인수로 시작합니다. 여기서 &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt; 은 부호없는 정수입니다. 이를 통해 값에 &lt;code&gt;;&lt;/code&gt; 과 같은 특수 문자를 사용할 수 있습니다 . 그들 안에.</target>
        </trans-unit>
        <trans-unit id="80f369facd14f59c430992fa23908cf971c53762" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; property determines whether position independent executables or shared libraries will be created. This property is &lt;code&gt;True&lt;/code&gt; by default for &lt;code&gt;SHARED&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; library targets and &lt;code&gt;False&lt;/code&gt; otherwise. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_position_independent_code#variable:CMAKE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-variable:CMAKE_POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;CMAKE_POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="translated">&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; 의 속성은 위치 독립적 실행 또는 공유 라이브러리 생성할지 여부를 결정한다. 이 속성은 &lt;code&gt;SHARED&lt;/code&gt; 및 &lt;code&gt;MODULE&lt;/code&gt; 라이브러리 대상의 경우 기본적으로 &lt;code&gt;True&lt;/code&gt; 이고, &lt;code&gt;False&lt;/code&gt; 않으면 False 입니다. 이 특성은 대상을 작성할 때 설정된 경우 &lt;a href=&quot;../variable/cmake_position_independent_code#variable:CMAKE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-variable:CMAKE_POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;CMAKE_POSITION_INDEPENDENT_CODE&lt;/code&gt; &lt;/a&gt; 변수 의 값으로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="bcb4b12ffeb8230159a16c52dae9b55df5965a77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt; and &lt;a href=&quot;post_install_script#prop_tgt:POST_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:POST_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; properties are the old way to specify CMake scripts to run before and after installing a target. They are used only when the old &lt;code&gt;INSTALL_TARGETS&lt;/code&gt; command is used to install the target. Use the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command instead.</source>
          <target state="translated">&lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt; 및 &lt;a href=&quot;post_install_script#prop_tgt:POST_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:POST_INSTALL_SCRIPT&quot;&gt; &lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt; &lt;/a&gt; 속성은 이전과 목표를 설치 한 후 실행에 CMake 스크립트를 지정하는 기존의 방법입니다. 이전 &lt;code&gt;INSTALL_TARGETS&lt;/code&gt; 명령을 사용하여 대상을 설치하는 경우에만 사용됩니다 . 사용 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 대신 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f935d21bc527050bb63c736677b2b5c7f0c17568" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PROGRAMS&lt;/code&gt; form is identical to the &lt;code&gt;FILES&lt;/code&gt; form except that the default permissions for the installed file also include &lt;code&gt;OWNER_EXECUTE&lt;/code&gt;, &lt;code&gt;GROUP_EXECUTE&lt;/code&gt;, and &lt;code&gt;WORLD_EXECUTE&lt;/code&gt;. This form is intended to install programs that are not targets, such as shell scripts. Use the &lt;code&gt;TARGETS&lt;/code&gt; form to install targets built within the project.</source>
          <target state="translated">&lt;code&gt;PROGRAMS&lt;/code&gt; 형태는 동일 &lt;code&gt;FILES&lt;/code&gt; 설치된 파일의 기본 권한도 포함한다는 점을 제외하고 형태 &lt;code&gt;OWNER_EXECUTE&lt;/code&gt; , &lt;code&gt;GROUP_EXECUTE&lt;/code&gt; 및 &lt;code&gt;WORLD_EXECUTE&lt;/code&gt; 을 . 이 양식은 쉘 스크립트와 같이 대상이 아닌 프로그램을 설치하기위한 것입니다. &lt;code&gt;TARGETS&lt;/code&gt; 양식을 사용하여 프로젝트 내에 빌드 된 대상을 설치 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9462567fa9c4ac1df3525a4aef0f3dea44ace60b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords can be used to specify both the link dependencies and the link interface in one command. Libraries and targets following &lt;code&gt;PUBLIC&lt;/code&gt; are linked to, and are made part of the link interface. Libraries and targets following &lt;code&gt;PRIVATE&lt;/code&gt; are linked to, but are not made part of the link interface. Libraries following &lt;code&gt;INTERFACE&lt;/code&gt; are appended to the link interface and are not used for linking &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PUBLIC&lt;/code&gt; 은 , &lt;code&gt;PRIVATE&lt;/code&gt; 및 &lt;code&gt;INTERFACE&lt;/code&gt; 키워드는 링크 종속성과 하나의 명령에 링크 인터페이스를 모두 지정하는 데 사용할 수 있습니다. &lt;code&gt;PUBLIC&lt;/code&gt; 다음에 오는 라이브러리 및 대상 은 링크되고 링크 인터페이스의 일부가됩니다. &lt;code&gt;PRIVATE&lt;/code&gt; 다음의 라이브러리 및 대상 은 링크되지만 링크 인터페이스의 일부는 아닙니다. &lt;code&gt;INTERFACE&lt;/code&gt; 다음의 라이브러리 는 링크 인터페이스에 추가되며 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 링크에는 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c24ea736689e1e35d26e84ba705e24b0afb6ba6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Python3_FIND_ABI&lt;/code&gt; variable is a 3-tuple specifying, in that order, &lt;code&gt;pydebug&lt;/code&gt; (&lt;code&gt;d&lt;/code&gt;), &lt;code&gt;pymalloc&lt;/code&gt; (&lt;code&gt;m&lt;/code&gt;) and &lt;code&gt;unicode&lt;/code&gt; (&lt;code&gt;u&lt;/code&gt;) flags. Each element can be set to one of the following:</source>
          <target state="translated">&lt;code&gt;Python3_FIND_ABI&lt;/code&gt; 의 변수는 그 순서에서 3 튜플 지정이다 &lt;code&gt;pydebug&lt;/code&gt; ( &lt;code&gt;d&lt;/code&gt; ) &lt;code&gt;pymalloc&lt;/code&gt; ( &lt;code&gt;m&lt;/code&gt; ) 및 &lt;code&gt;unicode&lt;/code&gt; ( &lt;code&gt;u&lt;/code&gt; ) 플래그. 각 요소는 다음 중 하나로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc52dbe7d0a8895dc6e7a3e5fb32ee4e38fd43ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Python_FIND_ABI&lt;/code&gt; variable is a 3-tuple specifying, in that order, &lt;code&gt;pydebug&lt;/code&gt; (&lt;code&gt;d&lt;/code&gt;), &lt;code&gt;pymalloc&lt;/code&gt; (&lt;code&gt;m&lt;/code&gt;) and &lt;code&gt;unicode&lt;/code&gt; (&lt;code&gt;u&lt;/code&gt;) flags. Each element can be set to one of the following:</source>
          <target state="translated">&lt;code&gt;Python_FIND_ABI&lt;/code&gt; 의 변수는 그 순서에서 3 튜플 지정이다 &lt;code&gt;pydebug&lt;/code&gt; ( &lt;code&gt;d&lt;/code&gt; ) &lt;code&gt;pymalloc&lt;/code&gt; ( &lt;code&gt;m&lt;/code&gt; ) 및 &lt;code&gt;unicode&lt;/code&gt; ( &lt;code&gt;u&lt;/code&gt; ) 플래그. 각 요소는 다음 중 하나로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d482c77fdbddea743fc51bc4817c6fe79eabbb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QUIET&lt;/code&gt; option can be given to hide the output associated with populating the specified content. If the population fails, the output will be shown regardless of whether this option was given or not so that the cause of the failure can be diagnosed. The global &lt;code&gt;FETCHCONTENT_QUIET&lt;/code&gt; cache variable has no effect on &lt;code&gt;FetchContent_Populate()&lt;/code&gt; calls where the content details are provided directly.</source>
          <target state="translated">&lt;code&gt;QUIET&lt;/code&gt; 의 옵션은 지정된 내용을 채우는과 관련된 출력을 숨길 부여 할 수 있습니다. 모집단이 실패하면 실패 원인을 진단 할 수 있도록이 옵션의 제공 여부에 관계없이 출력이 표시됩니다. 글로벌 &lt;code&gt;FETCHCONTENT_QUIET&lt;/code&gt; 캐시 변수는 컨텐츠 세부 사항이 직접 제공되는 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; 호출 에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dc902fc7ded1dc1b208ec818d97032219df6b290" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REALPATH&lt;/code&gt; and &lt;code&gt;PROGRAM&lt;/code&gt; subcommands had been superseded, respectively, by &lt;a href=&quot;file#real-path&quot;&gt;file(REAL_PATH)&lt;/a&gt; and &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt;&lt;code&gt;separate_arguments(PROGRAM)&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">&lt;code&gt;REALPATH&lt;/code&gt; 및 &lt;code&gt;PROGRAM&lt;/code&gt; 부속 명령에 의해, 각각 대체했다 &lt;a href=&quot;file#real-path&quot;&gt;파일 (REAL_PATH)&lt;/a&gt; 와 &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt; &lt;code&gt;separate_arguments(PROGRAM)&lt;/code&gt; &lt;/a&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="e957ae77ff0b62854beeeca26db20df3eafb2999" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RELEASE&lt;/code&gt; variant should be listed first in the property so that the variant is chosen if the user uses a configuration which is not an exact match for any listed &lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RELEASE&lt;/code&gt; 의 사용자가 나열된 정확히 일치하지 않는 구성을 사용하는 경우, 변이가 선택되도록 변형은 속성 먼저 표시되어야 &lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="4dcf5923e1b6770d1ea5ae422aa36a042bcc07a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; property is a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of group descriptions. Each entry consists of an optional number of groups using the description followed by a series of resource requirements for those groups. These requirements (and the number of groups) are separated by commas. The resource requirements consist of the name of a resource type, followed by a colon, followed by an unsigned integer specifying the number of slots required on one resource of the given type.</source>
          <target state="translated">&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 의 속성이있다 &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;세미콜론로 구분&lt;/a&gt; 기의 설명. 각 항목은 설명을 사용하는 선택적 그룹 수와 해당 그룹에 대한 일련의 리소스 요구 사항으로 구성됩니다. 이러한 요구 사항 (및 그룹 수)은 쉼표로 구분됩니다. 리소스 요구 사항은 리소스 유형의 이름, 그 뒤에 콜론, 주어진 유형의 한 리소스에 필요한 슬롯 수를 지정하는 부호없는 정수로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="ea9fddb757b6335be76fcb93452b4cf63c9a1a85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; property tells CTest what resources a test expects to use grouped in a way meaningful to the test. The test itself must read the &lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;environment variables&lt;/a&gt; to determine which resources have been allocated to each group. For example, each group may correspond to a process the test will spawn when executed.</source>
          <target state="translated">&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 의 속성은 테스트가 테스트에 의미있는 방식으로 그룹화 사용하려면 무엇을 기대하고 자원 CTest를 알려줍니다. 테스트 자체는 각 그룹에 할당 된 리소스를 확인하기 위해 &lt;a href=&quot;#ctest-resource-environment-variables&quot;&gt;환경 변수&lt;/a&gt; 를 읽어야합니다 . 예를 들어 각 그룹은 테스트가 실행될 때 생성되는 프로세스에 해당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dddceba0ec1e6cf8275b922fedbe169a4440586a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; property tells CTest what resources a test expects to use grouped in a way meaningful to the test. The test itself must read the &lt;a href=&quot;../manual/ctest.1#ctest-resource-environment-variables&quot;&gt;environment variables&lt;/a&gt; to determine which resources have been allocated to each group. For example, each group may correspond to a process the test will spawn when executed.</source>
          <target state="translated">&lt;code&gt;RESOURCE_GROUPS&lt;/code&gt; 의 속성은 테스트가 테스트에 의미있는 방식으로 그룹화 사용하려면 무엇을 기대하고 자원 CTest를 알려줍니다. 테스트 자체는 각 그룹에 할당 된 리소스를 확인하기 위해 &lt;a href=&quot;../manual/ctest.1#ctest-resource-environment-variables&quot;&gt;환경 변수&lt;/a&gt; 를 읽어야합니다 . 예를 들어 각 그룹은 테스트가 실행될 때 생성되는 프로세스에 해당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b2afd8af40103e93a8d8bcf03c2a393e4015f2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REUSE_FROM&lt;/code&gt; form requires the same set of compiler options, compiler flags and compiler definitions for both &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;other_target&amp;gt;&lt;/code&gt;. Some compilers (e.g. GCC) may issue a warning if the precompiled header file cannot be used (&lt;code&gt;-Winvalid-pch&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;REUSE_FROM&lt;/code&gt; 의 형태는 모두 컴파일러 옵션 컴파일러 플래그 컴파일러 정의 동일한 세트의 요구 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 과 &lt;code&gt;&amp;lt;other_target&amp;gt;&lt;/code&gt; 를 . 일부 컴파일러 (예 : GCC)는 미리 컴파일 된 헤더 파일을 사용할 수없는 경우 ( &lt;code&gt;-Winvalid-pch&lt;/code&gt; ) 경고를 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7842846fbf5362e4b72261d2ba9806e7cec218a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SCRIPT&lt;/code&gt; form will invoke the given CMake script files during installation. If the script file name is a relative path it will be interpreted with respect to the current source directory. The &lt;code&gt;CODE&lt;/code&gt; form will invoke the given CMake code during installation. Code is specified as a single argument inside a double-quoted string. For example, the code</source>
          <target state="translated">&lt;code&gt;SCRIPT&lt;/code&gt; 의 형태는 설치 중에 주어진 CMake 스크립트 파일을 호출합니다. 스크립트 파일 이름이 상대 경로 인 경우 현재 소스 디렉토리와 관련하여 해석됩니다. &lt;code&gt;CODE&lt;/code&gt; 형태는 설치 중에 주어진 CMake 코드를 호출합니다. 코드는 큰 따옴표로 묶인 문자열 안에 단일 인수로 지정됩니다. 예를 들어, 코드</target>
        </trans-unit>
        <trans-unit id="d820d94b2dde28de18ffd81724b04aa8fc3016ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SOURCE_DIR&lt;/code&gt; and &lt;code&gt;BINARY_DIR&lt;/code&gt; arguments are supported by &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;, but different default values are used by &lt;code&gt;FetchContent_Populate()&lt;/code&gt;. &lt;code&gt;SOURCE_DIR&lt;/code&gt; defaults to &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-src&lt;/code&gt; and &lt;code&gt;BINARY_DIR&lt;/code&gt; defaults to &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-build&lt;/code&gt;. If a relative path is specified, it will be interpreted as relative to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SOURCE_DIR&lt;/code&gt; 및 &lt;code&gt;BINARY_DIR&lt;/code&gt; 인수를 지원하는 &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 하지만, 다른 기본 값을 사용하는 &lt;code&gt;FetchContent_Populate()&lt;/code&gt; . &lt;code&gt;SOURCE_DIR&lt;/code&gt; 의 기본값은 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-src&lt;/code&gt; 이고 &lt;code&gt;BINARY_DIR&lt;/code&gt; 의 기본값은 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-build&lt;/code&gt; 입니다. 상대 경로가 지정되면 &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; 에&lt;/a&gt; 상대적인 경로로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="afe048d0890c7bc9370ac362318ce0511d5e7c32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SOURCE_DIR&lt;/code&gt;, &lt;code&gt;BINARY_DIR&lt;/code&gt; and &lt;code&gt;POPULATED&lt;/code&gt; options can be used to specify which properties should be retrieved. Each option accepts a value which is the name of the variable in which to store that property. Most of the time though, only &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is given, in which case the call will then set the same variables as a call to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-3-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate(name)&lt;/code&gt;&lt;/a&gt;. This allows the following canonical pattern to be used, which ensures that the relevant variables will always be defined regardless of whether or not the population has been performed elsewhere in the project already:</source>
          <target state="translated">&lt;code&gt;SOURCE_DIR&lt;/code&gt; , &lt;code&gt;BINARY_DIR&lt;/code&gt; 및 &lt;code&gt;POPULATED&lt;/code&gt; 옵션은 속성을 검색해야하는 지정할 수 있습니다. 각 옵션은 해당 특성을 저장할 변수의 이름 인 값을 승인합니다. 그러나 대부분의 경우 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 만 제공 &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-3-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate(name)&lt;/code&gt; &lt;/a&gt; 경우 호출은 FetchContent_Populate (name) 호출과 동일한 변수를 설정합니다 . 이를 통해 다음과 같은 표준 패턴을 사용할 수 있으므로, 프로젝트의 다른 곳에서 인구가 수행되었는지 여부에 관계없이 관련 변수가 항상 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="62ac0ccc672e4431dbeb1c9d2e99b55d52b7ec19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option can be given in the declared details to instruct &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; to look for a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file in a subdirectory below the top level (i.e. the same way that &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; is used by the &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; command). &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; must always be a relative path. See the next section for an example of this option.</source>
          <target state="translated">&lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; 의 옵션을 지시하는 선언 된 세부 사항에 부여 할 수 &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; A에 대한보고 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 (즉, 즉, 같은 방법으로 최고 수준 이하의 하위 디렉토리에 파일 &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; 가 에 의해 사용되는 &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 명령). &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; 은 항상 상대 경로 여야합니다. 이 옵션의 예는 다음 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="43db2e5a71863a7cefc543504d98fa0c8f555234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt; property, managed as a string, can be used to add extra flags to the link step of a static library target. &lt;code&gt;STATIC_LIBRARY_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; will add to the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;RELEASE&lt;/code&gt;, &lt;code&gt;MINSIZEREL&lt;/code&gt;, &lt;code&gt;RELWITHDEBINFO&lt;/code&gt;, &amp;hellip;</source>
          <target state="translated">&lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt; 의 문자열로 관리 속성은, 정적 라이브러리 대상의 링크 단계에 여분의 플래그를 추가 할 수 있습니다. &lt;code&gt;STATIC_LIBRARY_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 에 추가한다 구성 &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 예를 들면, &lt;code&gt;DEBUG&lt;/code&gt; , &lt;code&gt;RELEASE&lt;/code&gt; , &lt;code&gt;MINSIZEREL&lt;/code&gt; , &lt;code&gt;RELWITHDEBINFO&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="d0a74ebda05111a34d8d00887171bfd06ed72abf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt; property, managed as a string, can be used to add extra flags to the link step of a static library target. &lt;code&gt;STATIC_LIBRARY_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; will add to the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;RELEASE&lt;/code&gt;, &lt;code&gt;MINSIZEREL&lt;/code&gt;, &lt;code&gt;RELWITHDEBINFO&lt;/code&gt;, ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d161e29e991efc4072e92933c16eee92ca198c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STEP_TARGETS&lt;/code&gt; and &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; options for &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; are generally the easiest way to ensure targets are created for specific steps of interest. For custom steps, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; must be called explicitly if a target should also be created for that custom step. An alternative to these two options is to populate the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; and &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; directory properties. These act as defaults for the step target options and can save having to repeatedly specify the same set of step targets when multiple external projects are being defined.</source>
          <target state="translated">&lt;code&gt;STEP_TARGETS&lt;/code&gt; 및 &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; 옵션 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 일반적으로 대상이 관심의 특정 단계에 대해 생성되도록하는 가장 쉬운 방법입니다. 사용자 정의 단계의 경우 해당 사용자 정의 단계에 대한 대상도 작성해야하는 경우 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 를 명시 적으로 호출해야합니다. 이 두 가지 옵션의 대안은 &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; 및 &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; 디렉토리 특성 을 채우는 것 입니다. 이는 단계 목표 옵션의 기본값으로 작동하며 여러 외부 프로젝트를 정의 할 때 동일한 단계 목표 세트를 반복적으로 지정하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="f7314be0a6efc0cae2c8df50d6b2942d6a096265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STEP_TARGETS&lt;/code&gt; option for &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; is generally the easiest way to ensure targets are created for specific steps of interest. For custom steps, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; must be called explicitly if a target should also be created for that custom step. An alternative to these two options is to populate the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; directory property. It acts as a default for the step target options and can save having to repeatedly specify the same set of step targets when multiple external projects are being defined.</source>
          <target state="translated">&lt;code&gt;STEP_TARGETS&lt;/code&gt; 에 대한 옵션 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-6-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 일반적으로 대상이 관심의 특정 단계에 대해 생성되도록 할 수있는 가장 쉬운 방법입니다. 사용자 지정 단계의 경우 해당 사용자 지정 단계에 대한 대상도 만들어야하는 경우 &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; 를 명시 적으로 호출해야합니다. 이 두 옵션에 대한 대안은 &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; 디렉터리 속성 을 채우는 것 입니다. 단계 대상 옵션의 기본값으로 작동하며 여러 외부 프로젝트가 정의 될 때 동일한 단계 대상 세트를 반복적으로 지정해야하는 시간을 절약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3ed7ac43500af57c9d624a6fce9ae6e630164e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUBBUILD_DIR&lt;/code&gt; argument can be provided to change the location of the sub-build created to perform the population. The default value is &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-subbuild&lt;/code&gt; and it would be unusual to need to override this default. If a relative path is specified, it will be interpreted as relative to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SUBBUILD_DIR&lt;/code&gt; 의 인수는 채우기를 수행하기 위해 만든 하위 빌드의 위치를 변경하기 위해 제공 될 수있다. 기본값은 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-subbuild&lt;/code&gt; 기본값을 재정의해야하는 경우는 드 unusual니다. 상대 경로가 지정되면 &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; 에&lt;/a&gt; 상대적인 경로로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="b4bf9938c7c50c3e86c27f5d48a58f3e2a187ea1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUBBUILD_DIR&lt;/code&gt; argument can be provided to change the location of the sub-build created to perform the population. The default value is &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-subbuild&lt;/code&gt; and it would be unusual to need to override this default. If a relative path is specified, it will be interpreted as relative to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. This option should not be confused with the &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option which only affects the &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-4-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;SUBBUILD_DIR&lt;/code&gt; 의 인수는 채우기를 수행하기 위해 만든 하위 빌드의 위치를 변경하기 위해 제공 될 수있다. 기본값은 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-subbuild&lt;/code&gt; 기본값을 재정의해야하는 경우가 드문 경우입니다. 상대 경로가 지정되면 &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; 에&lt;/a&gt; 상대적인 것으로 해석됩니다 . 이 옵션을 &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-4-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt; 명령 에만 영향을주는 &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; 옵션 과 혼동해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f80fd5ece5d142c490f3de481a022857e858713" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TARGETS&lt;/code&gt; form specifies rules for installing targets from a project. There are several kinds of target &lt;a href=&quot;../manual/cmake-buildsystem.7#output-artifacts&quot;&gt;Output Artifacts&lt;/a&gt; that may be installed:</source>
          <target state="translated">&lt;code&gt;TARGETS&lt;/code&gt; 프로젝트에서 목표를 설치하기위한 지정 규칙을 형성한다. 설치할 수있는 여러 종류의 대상 &lt;a href=&quot;../manual/cmake-buildsystem.7#output-artifacts&quot;&gt;출력 아티팩트&lt;/a&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="faf775d4568be78aec2fb569ebf3f4ae769a87ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TARGETS&lt;/code&gt; form specifies rules for installing targets from a project. There are several kinds of target files that may be installed:</source>
          <target state="translated">&lt;code&gt;TARGETS&lt;/code&gt; 프로젝트에서 목표를 설치하기위한 지정 규칙을 형성한다. 설치 될 수있는 여러 종류의 대상 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb1087d278ae5c1e3bc065a5adadbc646b322a2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TEST&lt;/code&gt; operator was added to the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command to determine if a given test name was created by the &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;TEST&lt;/code&gt; 오퍼레이터가 첨가 된 &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 는 주어진 시험 이름에 의해 생성되었는지 결정하기 위해 명령 &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="81e4014736b48c189698ca29c696ec1ca249da29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TO_CMAKE_PATH&lt;/code&gt; mode converts a native &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; into a cmake-style path with forward-slashes (&lt;code&gt;/&lt;/code&gt;). The input can be a single path or a system search path like &lt;code&gt;$ENV{PATH}&lt;/code&gt;. A search path will be converted to a cmake-style list separated by &lt;code&gt;;&lt;/code&gt; characters.</source>
          <target state="translated">&lt;code&gt;TO_CMAKE_PATH&lt;/code&gt; 의 모드는 기본 변환 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 앞으로 슬래시 (와 cmake 스타일의 경로로 &lt;code&gt;/&lt;/code&gt; ). 입력은 단일 경로이거나 &lt;code&gt;$ENV{PATH}&lt;/code&gt; 와 같은 시스템 검색 경로 일 수 있습니다 . 검색 경로는 &lt;code&gt;;&lt;/code&gt; 로 구분 된 cmake 스타일 목록으로 변환됩니다 . 문자.</target>
        </trans-unit>
        <trans-unit id="ffdbb0dce6f025f19a243c204ec5b8cc5d0bce61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TO_NATIVE_PATH&lt;/code&gt; mode converts a cmake-style &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; into a native path with platform-specific slashes (&lt;code&gt;\&lt;/code&gt; on Windows and &lt;code&gt;/&lt;/code&gt; elsewhere).</source>
          <target state="translated">&lt;code&gt;TO_NATIVE_PATH&lt;/code&gt; 의 모드는 cmake 스타일로 변환 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; (플랫폼 별 슬래시와 기본 경로에 &lt;code&gt;\&lt;/code&gt; Windows 및에 &lt;code&gt;/&lt;/code&gt; 다른 곳에서).</target>
        </trans-unit>
        <trans-unit id="c4f5b3ea84ab135082109eda1f5b584d8de2fa5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TRANSFORM&lt;/code&gt; sub-command does not change the number of elements in the list. If a &lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt; is specified, only some elements will be changed, the other ones will remain the same as before the transformation.</source>
          <target state="translated">&lt;code&gt;TRANSFORM&lt;/code&gt; 하위 명령은리스트 내에있는 요소의 수를 변경하지 않습니다. 경우 &lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt; 가 지정되는 일부 요소는 다른 것들의 변화 이전과 동일하게 유지되며, 변경 될 것이다.</target>
        </trans-unit>
        <trans-unit id="169931c11b8db4cc0937da76b63ed15da4a0e95b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VERBOSE&lt;/code&gt; option enables verbose output for the archive operation.</source>
          <target state="translated">&lt;code&gt;VERBOSE&lt;/code&gt; 의 옵션은 아카이브 작업의 출력 자세한 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7d25ce2504aa363b6c3f9f01866f3b05dca91f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt; property determines whether a flag for hiding symbols for inline functions, such as &lt;code&gt;-fvisibility-inlines-hidden&lt;/code&gt;, should be used when invoking the compiler. This property affects compilation in sources of all types of targets (subject to policy &lt;a href=&quot;../policy/cmp0063#policy:CMP0063&quot; id=&quot;index-0-policy:CMP0063&quot;&gt;&lt;code&gt;CMP0063&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt; 의 속성과 같은 인라인 함수에 대한 기호 은폐 여부를 판단하는 플래그 &lt;code&gt;-fvisibility-inlines-hidden&lt;/code&gt; 컴파일러를 호출 할 때 사용되어야한다. 이 특성은 모든 유형의 대상 소스에서 컴파일에 영향을줍니다 (정책 &lt;a href=&quot;../policy/cmp0063#policy:CMP0063&quot; id=&quot;index-0-policy:CMP0063&quot;&gt; &lt;code&gt;CMP0063&lt;/code&gt; 에&lt;/a&gt; 따라 다름 ).</target>
        </trans-unit>
        <trans-unit id="bf78bfb05c2747ca550a11dc61fff816a7a2f0d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VULKAN_SDK&lt;/code&gt; environment variable optionally specifies the location of the Vulkan SDK root directory for the given architecture. It is typically set by sourcing the toplevel &lt;code&gt;setup-env.sh&lt;/code&gt; script of the Vulkan SDK directory into the shell environment.</source>
          <target state="translated">&lt;code&gt;VULKAN_SDK&lt;/code&gt; 의 환경 변수는 선택적으로 주어진 아키텍처의 VULKAN SDK 루트 디렉토리의 위치를 지정합니다. 일반적으로 Vulkan SDK 디렉토리 의 최상위 &lt;code&gt;setup-env.sh&lt;/code&gt; 스크립트를 셸 환경 으로 소싱하여 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="8788569718b4b2bd06266906cf188bc8823b3aac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHAT&lt;/code&gt; option is the only mandatory option. Here you specify what information will be printed:</source>
          <target state="translated">&lt;code&gt;WHAT&lt;/code&gt; 옵션은 유일한 필수 옵션입니다. 인쇄 할 정보를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9f191be0e8772bf219ad0c712acb7aee3d9e7a08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[version]&lt;/code&gt; argument requests a version with which the package found should be compatible (format is &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt;). The &lt;code&gt;EXACT&lt;/code&gt; option requests that the version be matched exactly. If no &lt;code&gt;[version]&lt;/code&gt; and/or component list is given to a recursive invocation inside a find-module, the corresponding arguments are forwarded automatically from the outer call (including the &lt;code&gt;EXACT&lt;/code&gt; flag for &lt;code&gt;[version]&lt;/code&gt;). Version support is currently provided only on a package-by-package basis (see the &lt;a href=&quot;#version-selection&quot;&gt;Version Selection&lt;/a&gt; section below).</source>
          <target state="translated">&lt;code&gt;[version]&lt;/code&gt; 인수는 패키지 (형식은 호환되어야 발견되는 버전 요청 &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt; ). &lt;code&gt;EXACT&lt;/code&gt; 옵션은 버전이 정확히 일치 할 것을 요청합니다. find-module 내에서 재귀 호출에 &lt;code&gt;[version]&lt;/code&gt; 및 / 또는 컴포넌트 목록이 제공 되지 않으면 해당 인수가 외부 호출 ( &lt;code&gt;[version]&lt;/code&gt; 에 대한 &lt;code&gt;EXACT&lt;/code&gt; 플래그 포함)에서 자동으로 전달됩니다 . 버전 지원은 현재 패키지별로 제공됩니다 ( 아래 &lt;a href=&quot;#version-selection&quot;&gt;버전 선택&lt;/a&gt; 섹션 참조).</target>
        </trans-unit>
        <trans-unit id="e8049cfeb50c71a2f9438efc6875d1095e0d7473" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[version]&lt;/code&gt; argument requests a version with which the package found should be compatible. There are two possible forms in which it may be specified:</source>
          <target state="translated">&lt;code&gt;[version]&lt;/code&gt; 인수는 패키지 FOUND가 호환되어야되는 버전을 요청합니다. 지정 될 수있는 두 가지 가능한 형식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b50d89baa21dfb074c44f4bf8c2ac5423945b298" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add_jar()&lt;/code&gt; function sets the following target properties on &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;add_jar()&lt;/code&gt; 함수는 다음에 대상 속성 설정 &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0452be53e192e365fe2cd3f0e50706936744e889" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;android_add_test_data&lt;/code&gt; function is used to copy files and libraries needed to run project-specific tests. On the host operating system, this is done at build time. For on-device testing, the files are loaded onto the device by the manufactured test at run time.</source>
          <target state="translated">&lt;code&gt;android_add_test_data&lt;/code&gt; 기능이 실행 프로젝트 별 시험에 필요한 파일 및 라이브러리를 복사하는 데 사용됩니다. 호스트 운영 체제에서는 빌드시 수행됩니다. 온 디바이스 테스트의 경우 파일은 런타임에 제조 된 테스트에 의해 장치에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="efa81d51d5b9d9a92c8eda49af59d3c749158c22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto-regeneration&lt;/code&gt; rule in &lt;code&gt;top-build-dir/build.ninja&lt;/code&gt; must have an order-only dependency on &lt;code&gt;sub/build.ninja&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;top-build-dir/build.ninja&lt;/code&gt; 의 &lt;code&gt;auto-regeneration&lt;/code&gt; 규칙은 &lt;code&gt;sub/build.ninja&lt;/code&gt; 에 순서 전용 종속성이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e332723db30344f017b0a894e3d1325a8560004a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache&lt;/code&gt; object kind lists cache entries. These are the &lt;a href=&quot;cmake-language.7#cmake-language-variables&quot;&gt;Variables&lt;/a&gt; stored in the persistent cache (&lt;code&gt;CMakeCache.txt&lt;/code&gt;) for the build tree.</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; 개체 종류 목록 항목을 캐시합니다. 이들은입니다 &lt;a href=&quot;cmake-language.7#cmake-language-variables&quot;&gt;변수&lt;/a&gt; 영구 캐시 (저장 &lt;code&gt;CMakeCache.txt&lt;/code&gt; 빌드 트리).</target>
        </trans-unit>
        <trans-unit id="7251a1a19f56a89a9e8eeaf65a343435d9698cae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check_required_components&lt;/code&gt; helper macro ensures that all requested, non-optional components have been found by checking the &lt;code&gt;&amp;lt;Package&amp;gt;_&amp;lt;Component&amp;gt;_FOUND&lt;/code&gt; variables for all required components. This macro should be called at the end of the package configuration file even if the package does not have any components. This way, CMake can make sure that the downstream project hasn&amp;rsquo;t specified any non-existent components. If &lt;code&gt;check_required_components&lt;/code&gt; fails, the &lt;code&gt;&amp;lt;Package&amp;gt;_FOUND&lt;/code&gt; variable is set to FALSE, and the package is considered to be not found.</source>
          <target state="translated">&lt;code&gt;check_required_components&lt;/code&gt; 가 요청 된 모든 비 선택적 구성 요소가 검사하여 발견 된 것을 매크로 보장하지만 도우미 &lt;code&gt;&amp;lt;Package&amp;gt;_&amp;lt;Component&amp;gt;_FOUND&lt;/code&gt; 필요한 모든 구성 요소에 대한 변수. 이 매크로는 패키지에 구성 요소가없는 경우에도 패키지 구성 파일의 끝에서 호출되어야합니다. 이러한 방식으로 CMake는 다운 스트림 프로젝트가 존재하지 않는 구성 요소를 지정하지 않았는지 확인할 수 있습니다. 경우 &lt;code&gt;check_required_components&lt;/code&gt; 이 실패의 &lt;code&gt;&amp;lt;Package&amp;gt;_FOUND&lt;/code&gt; 변수가 FALSE로 설정하고, 패키지를 찾을 수 없습니다 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="f18aa7b66912b19e27fdf23409bfb5eba8a49f62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check_required_components&lt;/code&gt; helper macro ensures that all requested, non-optional components have been found by checking the &lt;code&gt;&amp;lt;Package&amp;gt;_&amp;lt;Component&amp;gt;_FOUND&lt;/code&gt; variables for all required components. This macro should be called at the end of the package configuration file even if the package does not have any components. This way, CMake can make sure that the downstream project hasn't specified any non-existent components. If &lt;code&gt;check_required_components&lt;/code&gt; fails, the &lt;code&gt;&amp;lt;Package&amp;gt;_FOUND&lt;/code&gt; variable is set to FALSE, and the package is considered to be not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c263a3c7a2a980f0a747494763c274cd528ff47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmakeFiles&lt;/code&gt; object kind lists files used by CMake while configuring and generating the build system. These include the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files as well as included &lt;code&gt;.cmake&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;cmakeFiles&lt;/code&gt; 는 구성 및 빌드 시스템을 생성하는 동안 CMake에서 사용하는 종류의리스트 파일 객체. 이들은 포함 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 의 뿐만 아니라 포함으로 파일을 &lt;code&gt;.cmake&lt;/code&gt; 파일.</target>
        </trans-unit>
        <trans-unit id="a33660a5902c89ca53f09c28756f2c676be129b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmake_add_fortran_subdirectory&lt;/code&gt; function adds a subdirectory to a project that contains a fortran-only subproject. The module will check the current compiler and see if it can support fortran. If no fortran compiler is found and the compiler is MSVC, then this module will find the MinGW gfortran. It will then use an external project to build with the MinGW tools. It will also create imported targets for the libraries created. This will only work if the fortran code is built into a dll, so &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; is turned on in the project. In addition the &lt;a href=&quot;../variable/cmake_gnutoms#variable:CMAKE_GNUtoMS&quot; id=&quot;index-0-variable:CMAKE_GNUtoMS&quot;&gt;&lt;code&gt;CMAKE_GNUtoMS&lt;/code&gt;&lt;/a&gt; option is set to on, so that Microsoft &lt;code&gt;.lib&lt;/code&gt; files are created. Usage is as follows:</source>
          <target state="translated">&lt;code&gt;cmake_add_fortran_subdirectory&lt;/code&gt; 함수는 포트란 전용 하위 프로젝트를 포함하는 프로젝트에 하위 디렉토리를 추가합니다. 모듈은 현재 컴파일러를 확인하고 포트란을 지원할 수 있는지 확인합니다. 포트란 컴파일러가없고 컴파일러가 MSVC 인 경우이 모듈은 MinGW gfortran을 찾습니다. 그런 다음 외부 프로젝트를 사용하여 MinGW 도구로 빌드합니다. 또한 작성된 라이브러리에 대해 가져온 대상을 작성합니다. 포트란 코드가 dll에 내장 된 경우에만 작동하므로 프로젝트에서 &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt; &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; &lt;/a&gt; 가 설정되어 있습니다. 또한 &lt;a href=&quot;../variable/cmake_gnutoms#variable:CMAKE_GNUtoMS&quot; id=&quot;index-0-variable:CMAKE_GNUtoMS&quot;&gt; &lt;code&gt;CMAKE_GNUtoMS&lt;/code&gt; &lt;/a&gt; 옵션이 on으로 설정되어 Microsoft &lt;code&gt;.lib&lt;/code&gt; 파일이 작성됩니다. 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f25722d9bd1bb87c2094d8a1b8fadf17b0a6230d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; command implicitly invokes the &lt;a href=&quot;cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy(VERSION)&lt;/code&gt;&lt;/a&gt; command to specify that the current project code is written for the given range of CMake versions. All policies known to the running version of CMake and introduced in the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt;, if specified) version or earlier will be set to use &lt;code&gt;NEW&lt;/code&gt; behavior. All policies introduced in later versions will be unset. This effectively requests behavior preferred as of a given CMake version and tells newer CMake versions to warn about their new policies.</source>
          <target state="translated">&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; 명령은 암시 적으로 호출 &lt;a href=&quot;cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; &lt;/a&gt; 현재 프로젝트 코드가 CMake 버전의 지정된 범위를 대상으로 지정하는 명령을 사용합니다. CMake의 실행 버전에 알려지고 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; (또는 지정된 경우 &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt; ) 또는 이전 버전에 도입 된 모든 정책 은 &lt;code&gt;NEW&lt;/code&gt; 동작 을 사용하도록 설정됩니다 . 이후 버전에서 도입 된 모든 정책은 설정 해제됩니다. 이것은 주어진 CMake 버전에서 선호되는 동작을 효과적으로 요청하고 새로운 CMake 버전에 새로운 정책에 대해 경고하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="3a9d8795198ae36119fad92eaaaee6c3f4c35728" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmake_path&lt;/code&gt; command handles paths in the format of the build system (i.e. the host platform), not the target system. When cross-compiling, if the path contains elements that are not representable on the host platform (e.g. a drive letter when the host is not Windows), the results will be unpredictable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e63904bcddca948b98c5df624d3cfa435d975df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmake_policy&lt;/code&gt; command is used to set policies to &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior. While setting policies individually is supported, we encourage projects to set policies based on CMake versions:</source>
          <target state="translated">&lt;code&gt;cmake_policy&lt;/code&gt; 의 명령으로 설정 정책에 사용되는 &lt;code&gt;OLD&lt;/code&gt; 또는 &lt;code&gt;NEW&lt;/code&gt; 행동. 정책을 개별적으로 설정하는 것이 지원되지만 프로젝트가 CMake 버전을 기반으로 정책을 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="aa065d250695faafc522db8fe7548f8513be45ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;codemodel&lt;/code&gt; object kind describes the build system structure as modeled by CMake.</source>
          <target state="translated">&lt;code&gt;codemodel&lt;/code&gt; 의 객체 종류 CMake에 의해 모델로 빌드 시스템의 구조를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c6eaccc18f5ebb7deab4d327aea01b18394b21f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, and &lt;code&gt;install&lt;/code&gt; steps are not.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; , &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;install&lt;/code&gt; 단계는 아니다.</target>
        </trans-unit>
        <trans-unit id="6d6319a725b665bf9ec48dfec77db348f4e7c9c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;continue&lt;/code&gt; command allows a cmake script to abort the rest of a block in a &lt;a href=&quot;foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt;&lt;code&gt;foreach()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt; loop, and start at the top of the next iteration.</source>
          <target state="translated">은 &lt;code&gt;continue&lt;/code&gt; 명령은 cmake 스크립트가에 블록의 나머지 부분을 취소 할 수 있습니다 &lt;a href=&quot;foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt; &lt;code&gt;while()&lt;/code&gt; &lt;/a&gt; 루프, 그리고 다음 반복의 상단에서 시작합니다.</target>
        </trans-unit>
        <trans-unit id="267d2d57f8ac8fcf6789ef8641cef166f6f4faf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_javadoc()&lt;/code&gt; command can be used to create java documentation based on files or packages. For more details please read the javadoc manpage.</source>
          <target state="translated">&lt;code&gt;create_javadoc()&lt;/code&gt; 명령은 파일이나 패키지를 기반으로 자바 문서를 만들 수 있습니다. 자세한 내용은 javadoc 맨 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="531d46941ee91f20393c30f8081b9c8a4c7622bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cxx_alignas&lt;/code&gt; feature provides a macro definition &lt;code&gt;&amp;lt;PREFIX&amp;gt;_ALIGNAS&lt;/code&gt; which expands to either the standard &lt;code&gt;alignas&lt;/code&gt; decorator or a compiler-specific decorator such as &lt;code&gt;__attribute__ ((__aligned__))&lt;/code&gt; used by GNU compilers.</source>
          <target state="translated">&lt;code&gt;cxx_alignas&lt;/code&gt; 의 기능 매크로 정의를 제공 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_ALIGNAS&lt;/code&gt; 표준 중 하나를 확장하는 &lt;code&gt;alignas&lt;/code&gt; 의 같은 장식 또는 컴파일러 - 특정 장식 &lt;code&gt;__attribute__ ((__aligned__))&lt;/code&gt; GNU 컴파일러에 의해 사용된다.</target>
        </trans-unit>
        <trans-unit id="99e8d5d436ef37fb8d98b0124912b05e2671a87e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cxx_alignof&lt;/code&gt; feature provides a macro definition &lt;code&gt;&amp;lt;PREFIX&amp;gt;_ALIGNOF&lt;/code&gt; which expands to either the standard &lt;code&gt;alignof&lt;/code&gt; decorator or a compiler-specific decorator such as &lt;code&gt;__alignof__&lt;/code&gt; used by GNU compilers.</source>
          <target state="translated">&lt;code&gt;cxx_alignof&lt;/code&gt; 의 기능 매크로 정의 제공 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_ALIGNOF&lt;/code&gt; 표준 중 하나를 확장하는 &lt;code&gt;alignof&lt;/code&gt; 의 같은 장식 또는 컴파일러 - 특정 장식 &lt;code&gt;__alignof__&lt;/code&gt; GNU 컴파일러에 의해 사용한다.</target>
        </trans-unit>
        <trans-unit id="9634625a49995c6ab631973cd290d82d8f3f8348" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cxx_attribute_deprecated&lt;/code&gt; feature provides a macro definition &lt;code&gt;&amp;lt;PREFIX&amp;gt;_DEPRECATED&lt;/code&gt;, which expands to either the standard &lt;code&gt;[[deprecated]]&lt;/code&gt; attribute or a compiler-specific decorator such as &lt;code&gt;__attribute__((__deprecated__))&lt;/code&gt; used by GNU compilers.</source>
          <target state="translated">&lt;code&gt;cxx_attribute_deprecated&lt;/code&gt; 기능 매크로 정의 제공 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_DEPRECATED&lt;/code&gt; 표준으로 확장하거나, &lt;code&gt;[[deprecated]]&lt;/code&gt; 등의 특성 또는 컴파일러 - 특정 데코 &lt;code&gt;__attribute__((__deprecated__))&lt;/code&gt; GNU 컴파일러에 의해 사용된다.</target>
        </trans-unit>
        <trans-unit id="75aec388067de00d55c3758a9d9a2158d63ce28a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;patch&lt;/code&gt; steps are independent.</source>
          <target state="translated">&lt;code&gt;download&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; 및 &lt;code&gt;patch&lt;/code&gt; 단계는 독립적이다.</target>
        </trans-unit>
        <trans-unit id="b658ab25aa7e00b94b913c2bbebcc48811c26f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exe1&lt;/code&gt; executable will be compiled with &lt;code&gt;-DLIB1_WITH_EXE&lt;/code&gt;, while the &lt;code&gt;shared_lib&lt;/code&gt; shared library will be compiled with &lt;code&gt;-DLIB1_WITH_SHARED_LIB&lt;/code&gt; and &lt;code&gt;-DCONSUMER_CMP0041_NEW&lt;/code&gt;, because policy &lt;a href=&quot;../policy/cmp0041#policy:CMP0041&quot; id=&quot;index-0-policy:CMP0041&quot;&gt;&lt;code&gt;CMP0041&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;NEW&lt;/code&gt; at the point where the &lt;code&gt;shared_lib&lt;/code&gt; target is created.</source>
          <target state="translated">&lt;code&gt;exe1&lt;/code&gt; 의 실행 파일로 컴파일됩니다 &lt;code&gt;-DLIB1_WITH_EXE&lt;/code&gt; 그동안, &lt;code&gt;shared_lib&lt;/code&gt; 공유 라이브러리로 컴파일됩니다 &lt;code&gt;-DLIB1_WITH_SHARED_LIB&lt;/code&gt; 및 &lt;code&gt;-DCONSUMER_CMP0041_NEW&lt;/code&gt; 정책 때문에, &lt;a href=&quot;../policy/cmp0041#policy:CMP0041&quot; id=&quot;index-0-policy:CMP0041&quot;&gt; &lt;code&gt;CMP0041&lt;/code&gt; 가&lt;/a&gt; 있다 &lt;code&gt;NEW&lt;/code&gt; 는 상기 시점에서 &lt;code&gt;shared_lib&lt;/code&gt; 의 대상이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="8c357a996007ce930d93e7cf3c2e1d7b5c287b4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;feature_summary()&lt;/code&gt; macro can be used to print information about enabled or disabled packages or features of a project. By default, only the names of the features/packages will be printed and their required version when one was specified. Use &lt;code&gt;set_package_properties()&lt;/code&gt; to add more useful information, like e.g. a download URL for the respective package or their purpose in the project.</source>
          <target state="translated">&lt;code&gt;feature_summary()&lt;/code&gt; 매크로를 사용하거나 사용하지 않도록 패키지 또는 프로젝트의 기능에 대한 정보를 인쇄 할 수 있습니다. 기본적으로 기능 / 패키지 이름과 지정된 버전 만 인쇄됩니다. &lt;code&gt;set_package_properties()&lt;/code&gt; 를 사용 하여 각 패키지의 다운로드 URL 또는 프로젝트에서의 목적과 같은 유용한 정보를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="78c5fc9d483723076e0c0c230b982c7ed61a6707" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_dependency()&lt;/code&gt; macro wraps a &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call for a package dependency:</source>
          <target state="translated">&lt;code&gt;find_dependency()&lt;/code&gt; 매크로는 랩 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 패키지 의존성에 대한 전화 :</target>
        </trans-unit>
        <trans-unit id="59c1259f11a945a9e0e1ff6ad05650ba73f1b3df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_dependency&lt;/code&gt; macro also sets &lt;code&gt;ClimbingStats_FOUND&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; if the dependency is not found, along with a diagnostic that the &lt;code&gt;ClimbingStats&lt;/code&gt; package can not be used without the &lt;code&gt;Stats&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;find_dependency&lt;/code&gt; 의 매크로는 설정 &lt;code&gt;ClimbingStats_FOUND&lt;/code&gt; 을 에 &lt;code&gt;False&lt;/code&gt; 종속성이 있다는 진단과 함께 발견되지 않는 경우 &lt;code&gt;ClimbingStats&lt;/code&gt; 의 패키지가없이 사용 할 수없는 &lt;code&gt;Stats&lt;/code&gt; 패키지.</target>
        </trans-unit>
        <trans-unit id="05b2b304caff248a47dab3ae5476e9f72cc1b608" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_dependency&lt;/code&gt; macro from the &lt;a href=&quot;../../module/cmakefinddependencymacro#module:CMakeFindDependencyMacro&quot; id=&quot;index-0-module:CMakeFindDependencyMacro&quot;&gt;&lt;code&gt;CMakeFindDependencyMacro&lt;/code&gt;&lt;/a&gt; module helps by propagating whether the package is &lt;code&gt;REQUIRED&lt;/code&gt;, or &lt;code&gt;QUIET&lt;/code&gt;, etc. The &lt;code&gt;find_dependency&lt;/code&gt; macro also sets &lt;code&gt;MathFunctions_FOUND&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; if the dependency is not found, along with a diagnostic that the &lt;code&gt;MathFunctions&lt;/code&gt; package cannot be used without the &lt;code&gt;Stats&lt;/code&gt; package.</source>
          <target state="translated">&lt;a href=&quot;../../module/cmakefinddependencymacro#module:CMakeFindDependencyMacro&quot; id=&quot;index-0-module:CMakeFindDependencyMacro&quot;&gt; &lt;code&gt;CMakeFindDependencyMacro&lt;/code&gt; &lt;/a&gt; 모듈 의 &lt;code&gt;find_dependency&lt;/code&gt; 매크로 는 패키지가 &lt;code&gt;REQUIRED&lt;/code&gt; 인지 &lt;code&gt;QUIET&lt;/code&gt; 인지 등을 전파함으로써 도움이됩니다 . &lt;code&gt;find_dependency&lt;/code&gt; 매크로는 또한 &lt;code&gt;MathFunctions&lt;/code&gt; 패키지를 &lt;code&gt;Stats&lt;/code&gt; 없이 사용할 수 없다는 진단과 함께 종속성이없는 경우 &lt;code&gt;MathFunctions_FOUND&lt;/code&gt; 를 &lt;code&gt;False&lt;/code&gt; 로 설정합니다. 꾸러미.</target>
        </trans-unit>
        <trans-unit id="1b0bdd0707bc904b356d6ee820fd031175efd998" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;giflib&lt;/code&gt; library, if found.</source>
          <target state="translated">&lt;code&gt;giflib&lt;/code&gt; 의 라이브러리는 경우가 발견했다.</target>
        </trans-unit>
        <trans-unit id="850c6e9176d893a5aca586003cbbf2d59689a036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; URL of the dashboard server to send the submission to.</source>
          <target state="translated">제출을 보낼 대시 보드 서버 의 &lt;code&gt;http&lt;/code&gt; 또는 &lt;code&gt;https&lt;/code&gt; URL입니다.</target>
        </trans-unit>
        <trans-unit id="2b4ade2186fdb76b5db5ec239e965d0631b90d06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; URL of the dashboard server to send the submission to. If not given, the &lt;a href=&quot;../variable/ctest_submit_url#variable:CTEST_SUBMIT_URL&quot; id=&quot;index-0-variable:CTEST_SUBMIT_URL&quot;&gt;&lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt;&lt;/a&gt; variable is used.</source>
          <target state="translated">제출을 보낼 대시 보드 서버 의 &lt;code&gt;http&lt;/code&gt; 또는 &lt;code&gt;https&lt;/code&gt; URL입니다. 지정하지 않으면 &lt;a href=&quot;../variable/ctest_submit_url#variable:CTEST_SUBMIT_URL&quot; id=&quot;index-0-variable:CTEST_SUBMIT_URL&quot;&gt; &lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt; &lt;/a&gt; 변수가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="eee33fd9265ec282a88d999c83f25584059e755b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;install()&lt;/code&gt; command generates a file, &lt;code&gt;cmake_install.cmake&lt;/code&gt;, inside the build directory, which is used internally by the generated install target and by CPack. You can also invoke this script manually with &lt;code&gt;cmake -P&lt;/code&gt;. This script accepts several variables:</source>
          <target state="translated">&lt;code&gt;install()&lt;/code&gt; 명령은 파일 생성 &lt;code&gt;cmake_install.cmake&lt;/code&gt; 을 설치 생성 타겟으로하고 CPack에 의해 내부적으로 사용되는 빌드 디렉토리, 내부. &lt;code&gt;cmake -P&lt;/code&gt; 를 사용 하여이 스크립트를 수동으로 호출 할 수도 있습니다 . 이 스크립트는 여러 변수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="d93867dc3cc122a9aabeffa4f4015aa65a88281f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;install_jar()&lt;/code&gt; function sets the &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; target property on jars so installed. This property holds the &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; as described above, and is used by &lt;code&gt;install_jar_exports()&lt;/code&gt;. You can get this information with &lt;a href=&quot;../command/get_property#command:get_property&quot; id=&quot;index-0-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; property key.</source>
          <target state="translated">&lt;code&gt;install_jar()&lt;/code&gt; 함수를 설정한다 &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; 된 항아리 target 속성 때문에 설치. 이 특성은 위에서 설명한대로 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 을 보유하며 &lt;code&gt;install_jar_exports()&lt;/code&gt; 의해 사용됩니다 . &lt;a href=&quot;../command/get_property#command:get_property&quot; id=&quot;index-0-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; 특성 키를 사용 하여이 정보를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b37a77cf2e00f90483da29f7624848629f6931b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jom&lt;/code&gt; tool is capable of reading makefiles of the &lt;code&gt;NMake&lt;/code&gt; flavor and building in parallel, while the &lt;code&gt;nmake&lt;/code&gt; tool always builds serially. After generating with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-1-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt; generator a user can run &lt;code&gt;jom&lt;/code&gt; instead of &lt;code&gt;nmake&lt;/code&gt;. The &lt;code&gt;--build&lt;/code&gt; mode would also use &lt;code&gt;jom&lt;/code&gt; if the &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-3-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; was set to &lt;code&gt;jom&lt;/code&gt; while using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-2-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt; generator, and as a convenience, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles%20JOM.html#generator:NMake%20Makefiles%20JOM&quot; id=&quot;index-0-generator:NMake Makefiles JOM&quot;&gt;&lt;code&gt;NMake Makefiles JOM&lt;/code&gt;&lt;/a&gt; generator is provided to find &lt;code&gt;jom&lt;/code&gt; in the normal way and use it as the &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-4-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt;. For completeness, &lt;code&gt;nmake&lt;/code&gt; is an alternative tool which can process the output of the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles%20JOM.html#generator:NMake%20Makefiles%20JOM&quot; id=&quot;index-1-generator:NMake Makefiles JOM&quot;&gt;&lt;code&gt;NMake Makefiles JOM&lt;/code&gt;&lt;/a&gt; generator, but doing so would be a pessimisation.</source>
          <target state="translated">&lt;code&gt;jom&lt;/code&gt; 도구의 메이크 판독 가능한 &lt;code&gt;NMake&lt;/code&gt; 그동안, 맛과 평행 구축 &lt;code&gt;nmake&lt;/code&gt; 도구가 항상 순차적으로 만든다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-1-generator:NMake Makefiles&quot;&gt; &lt;code&gt;NMake Makefiles&lt;/code&gt; &lt;/a&gt; 생성기로 생성 한 후 사용자는 &lt;code&gt;nmake&lt;/code&gt; 대신 &lt;code&gt;jom&lt;/code&gt; 을 실행할 수 있습니다 . &lt;code&gt;--build&lt;/code&gt; 모드는 사용하는 것이 &lt;code&gt;jom&lt;/code&gt; 경우 &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-3-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; 가&lt;/a&gt; 로 설정 &lt;code&gt;jom&lt;/code&gt; 사용하는 동안 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-2-generator:NMake Makefiles&quot;&gt; &lt;code&gt;NMake Makefiles&lt;/code&gt; &lt;/a&gt; 생성, 그리고 편의대로 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles%20JOM.html#generator:NMake%20Makefiles%20JOM&quot; id=&quot;index-0-generator:NMake Makefiles JOM&quot;&gt; &lt;code&gt;NMake Makefiles JOM&lt;/code&gt; &lt;/a&gt; 발생기는 찾을 제공 &lt;code&gt;jom&lt;/code&gt; 일반적인 방법과로 사용 &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-4-variable:CMAKE_MAKE_PROGRAM&quot;&gt; &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; &lt;/a&gt;. 완전성을 위해 &lt;code&gt;nmake&lt;/code&gt; 는 &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/NMake%20Makefiles%20JOM.html#generator:NMake%20Makefiles%20JOM&quot; id=&quot;index-1-generator:NMake Makefiles JOM&quot;&gt; &lt;code&gt;NMake Makefiles JOM&lt;/code&gt; &lt;/a&gt; 생성기 의 출력을 처리 할 수있는 대체 도구 이지만 그렇게하는 것은 비관적입니다.</target>
        </trans-unit>
        <trans-unit id="39b8c9a8a739bbb949b6e2139aeb7ef85af81839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jom&lt;/code&gt; tool is capable of reading makefiles of the &lt;code&gt;NMake&lt;/code&gt; flavor and building in parallel, while the &lt;code&gt;nmake&lt;/code&gt; tool always builds serially. After generating with the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-1-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt; generator a user can run &lt;code&gt;jom&lt;/code&gt; instead of &lt;code&gt;nmake&lt;/code&gt;. The &lt;code&gt;--build&lt;/code&gt; mode would also use &lt;code&gt;jom&lt;/code&gt; if the &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-3-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; was set to &lt;code&gt;jom&lt;/code&gt; while using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-2-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt; generator, and as a convenience, the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/NMake%20Makefiles%20JOM.html#generator:NMake%20Makefiles%20JOM&quot; id=&quot;index-0-generator:NMake Makefiles JOM&quot;&gt;&lt;code&gt;NMake Makefiles JOM&lt;/code&gt;&lt;/a&gt; generator is provided to find &lt;code&gt;jom&lt;/code&gt; in the normal way and use it as the &lt;a href=&quot;../../variable/cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-4-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt;. For completeness, &lt;code&gt;nmake&lt;/code&gt; is an alternative tool which can process the output of the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/NMake%20Makefiles%20JOM.html#generator:NMake%20Makefiles%20JOM&quot; id=&quot;index-1-generator:NMake Makefiles JOM&quot;&gt;&lt;code&gt;NMake Makefiles JOM&lt;/code&gt;&lt;/a&gt; generator, but doing so would be a pessimisation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6813583088a3ea492f8dee9c422fadf2aa60ee5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key=value&lt;/code&gt; pairs form a comma-separated list of options to specify generator-specific details of the toolset selection. Supported pairs are:</source>
          <target state="translated">&lt;code&gt;key=value&lt;/code&gt; 쌍은 툴 세트 선택 생성기 특정 세부 사항을 지정하는 옵션 쉼표로 구분을 형성한다. 지원되는 쌍은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6bb506a918e44a6c61476500ed45e416b876c48c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kind&lt;/code&gt; member is a string specifying the object kind name. The &lt;code&gt;version&lt;/code&gt; member is a JSON object with &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; members specifying integer components of the object kind&amp;rsquo;s version. Additional top-level members are specific to each object kind.</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; 멤버는 객체 종류의 이름을 지정하는 문자열입니다. &lt;code&gt;version&lt;/code&gt; 멤버와 JSON 객체입니다 &lt;code&gt;major&lt;/code&gt; 와 &lt;code&gt;minor&lt;/code&gt; 회원 객체 종류의 버전의 구성 요소의 정수를 지정. 추가 최상위 멤버는 각 개체 종류에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d9dfddcea8787927874f14f55552c79f0e015914" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kind&lt;/code&gt; member is a string specifying the object kind name. The &lt;code&gt;version&lt;/code&gt; member is a JSON object with &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; members specifying integer components of the object kind's version. Additional top-level members are specific to each object kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf253d20513ad92d7109575b4044a58587dac8a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib/cmake/&amp;lt;PackageName&amp;gt;&lt;/code&gt; directory will contain a file which is either named &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; or &lt;code&gt;&amp;lt;PackageName&amp;gt;-config.cmake&lt;/code&gt;. This is the entry point to the package for CMake. A separate optional file named &lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt; may also exist in the directory. This file is used by CMake to determine whether the version of the third party package satisfies uses of the &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command which specify version constraints. It is optional to specify a version when using &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, even if a &lt;code&gt;ConfigVersion&lt;/code&gt; file is present.</source>
          <target state="translated">&lt;code&gt;lib/cmake/&amp;lt;PackageName&amp;gt;&lt;/code&gt; 디렉토리 중 하나라는 파일이 포함됩니다 &lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;PackageName&amp;gt;-config.cmake&lt;/code&gt; . 이것은 CMake 용 패키지의 진입 점입니다. &lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt; 라는 별도의 선택적 파일 이 디렉터리에있을 수도 있습니다. 이 파일은 CMake에서 타사 패키지의 버전이 버전 제약 조건을 지정 하는 &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 의 사용을 충족하는지 확인하는 데 사용됩니다 . &lt;code&gt;ConfigVersion&lt;/code&gt; 파일이 있더라도 &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 사용할 때 버전을 지정하는 것은 선택 사항 입니다.</target>
        </trans-unit>
        <trans-unit id="afa60b7b985119462c78116c893b93ea5877b894" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib1&lt;/code&gt; and &lt;code&gt;lib2&lt;/code&gt; requirements are not &quot;compatible&quot;. One of them requires that consumers are built as position-independent-code, while the other requires that consumers are not built as position-independent-code. Because &lt;code&gt;exe2&lt;/code&gt; links to both and they are in conflict, a CMake error message is issued:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67d6d50e04df4a1667218bbd2495e8cbcf35e29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib1&lt;/code&gt; and &lt;code&gt;lib2&lt;/code&gt; requirements are not &amp;ldquo;compatible&amp;rdquo;. One of them requires that consumers are built as position-independent-code, while the other requires that consumers are not built as position-independent-code. Because &lt;code&gt;exe2&lt;/code&gt; links to both and they are in conflict, a CMake error message is issued:</source>
          <target state="translated">&lt;code&gt;lib1&lt;/code&gt; 및 &lt;code&gt;lib2&lt;/code&gt; 요구 사항은 &quot;호환&quot;되지 않습니다. 그중 하나는 소비자가 위치 독립적 인 코드로 구축되어야하고 다른 하나는 소비자가 위치 독립적 인 코드로 구축되지 않도록 요구합니다. &lt;code&gt;exe2&lt;/code&gt; 는 둘 다에 연결되고 충돌 하기 때문에 CMake 오류 메시지가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="7c034b42f76dc6ccf18dbd4ea994396dc49ef595" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib1&lt;/code&gt; and &lt;code&gt;lib2&lt;/code&gt; requirements are not &amp;ldquo;compatible&amp;rdquo;. One of them requires that consumers are built as position-independent-code, while the other requires that consumers are not built as position-independent-code. Because &lt;code&gt;exe2&lt;/code&gt; links to both and they are in conflict, a diagnostic is issued.</source>
          <target state="translated">&lt;code&gt;lib1&lt;/code&gt; 및 &lt;code&gt;lib2&lt;/code&gt; 요구 사항은 &quot;호환&quot;되지 않습니다. 그 중 하나는 소비자가 위치 독립적 인 코드로 구축되어야하고 다른 하나는 소비자가 위치 독립적 인 코드로 구축되지 않아야합니다. &lt;code&gt;exe2&lt;/code&gt; 가 둘 다에 링크되고 충돌 하기 때문에 진단이 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="b0ef3fe8ff9b7e89de00e517b61c1b47839fc699" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib1&lt;/code&gt; requirement &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; is not &quot;compatible&quot; with the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;exe1&lt;/code&gt; target. The library requires that consumers are built as position-independent-code, while the executable specifies to not built as position-independent-code, so a diagnostic is issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e427d9d5ababcba6191ffcaafe5aeabb42f702" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib1&lt;/code&gt; requirement &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; is not &amp;ldquo;compatible&amp;rdquo; with the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;exe1&lt;/code&gt; target. The library requires that consumers are built as position-independent-code, while the executable specifies to not built as position-independent-code, so a diagnostic is issued.</source>
          <target state="translated">&lt;code&gt;lib1&lt;/code&gt; 요구 사항 &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; 은 와 &quot;호환&quot;되지 &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt; &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; 의&lt;/a&gt; 의 특성 &lt;code&gt;exe1&lt;/code&gt; 의 대상입니다. 라이브러리는 소비자가 위치 독립적 코드로 빌드되어야하고 실행 파일이 위치 독립적 코드로 빌드되지 않도록 지정하므로 진단이 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="9cbf422c5dc21fe4cb7cd8db9b1b46c6aded3496" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib&lt;/code&gt; path is always searched.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 디렉토리의 경로는 항상 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="af4faaba2c226f06c0077f4081bb84d8a8ee9de6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macro&lt;/code&gt; command is very similar to the &lt;a href=&quot;function#command:function&quot; id=&quot;index-1-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; command. Nonetheless, there are a few important differences.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 명령은 매우 유사하다 &lt;a href=&quot;function#command:function&quot; id=&quot;index-1-command:function&quot;&gt; &lt;code&gt;function()&lt;/code&gt; &lt;/a&gt; 명령. 그럼에도 불구하고 몇 가지 중요한 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e4f20b7922e855adc130c7cbae40dc6dfce1770" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc&lt;/code&gt; and &lt;code&gt;uic&lt;/code&gt; tools are executed as part of a synthesized &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt;&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;custom target&lt;/code&gt;&lt;/a&gt; generated by CMake. By default that &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; target inherits the dependencies of the &lt;code&gt;&amp;lt;ORIGIN&amp;gt;&lt;/code&gt; target (see &lt;a href=&quot;../prop_tgt/autogen_origin_depends#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt;). Target dependencies may be added to the &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; target by adding them to the &lt;a href=&quot;../prop_tgt/autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 및 &lt;code&gt;uic&lt;/code&gt; 도구 합성의 일부로서 실행된다 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 의&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt; &lt;code&gt;custom target&lt;/code&gt; &lt;/a&gt; CMake 의해 생성. 기본적으로 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상은 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;&lt;/code&gt; 대상 의 종속성을 상속합니다 ( &lt;a href=&quot;../prop_tgt/autogen_origin_depends#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt; &lt;/a&gt; 참조 ). &lt;a href=&quot;../prop_tgt/autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt; &lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt; &lt;/a&gt; 대상 속성에 대상 종속성을 추가하여 &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; 대상에 대상 종속성을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="273443d7ec911d356807774dd12fdc5fca0f46fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc&lt;/code&gt; command line will consume the &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target properties from the target it is being invoked for, and for the appropriate build configuration.</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 명령 줄을 소모합니다 &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 가에 대해 호출되는 대상에서 대상 속성을 적절한 빌드 구성합니다.</target>
        </trans-unit>
        <trans-unit id="e8fa621fd6732b7d2b2d00a8e2ae52bf0c58b1fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc_predefs.h&lt;/code&gt; file, which is generated in &lt;a href=&quot;autogen_build_dir#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt;&lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt;&lt;/a&gt;, is passed to &lt;code&gt;moc&lt;/code&gt; as the argument to the &lt;code&gt;--include&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;moc_predefs.h&lt;/code&gt; 에서 생성되는 파일, &lt;a href=&quot;autogen_build_dir#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt; &lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt; 은&lt;/a&gt; ,에 전달되는 &lt;code&gt;moc&lt;/code&gt; 받는 인수로 &lt;code&gt;--include&lt;/code&gt; 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="e949dad3104f83b2a8bfaf09736f3554fb93caf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protobuf_generate_cpp&lt;/code&gt; and &lt;code&gt;protobuf_generate_python&lt;/code&gt; functions and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; calls only work properly within the same directory.</source>
          <target state="translated">&lt;code&gt;protobuf_generate_cpp&lt;/code&gt; 및 &lt;code&gt;protobuf_generate_python&lt;/code&gt; 기능과 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 는 같은 디렉토리 내에서 제대로 작동 호출합니다.</target>
        </trans-unit>
        <trans-unit id="02d650d9548032f8fda43e9223acad04aa0945f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_and_check()&lt;/code&gt; macro should be used in configuration files instead of the normal &lt;code&gt;set()&lt;/code&gt; command for setting directories and file locations. If a referenced file or directory does not exist, the macro will fail.</source>
          <target state="translated">&lt;code&gt;set_and_check()&lt;/code&gt; 매크로 설정 파일 대신 정상적인 사용되어야한다 &lt;code&gt;set()&lt;/code&gt; 디렉토리와 파일 위치를 설정하는 명령. 참조 된 파일이나 디렉터리가 없으면 매크로가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="0d374ff78e9322c2c8ea19366a9e1f625e1c84a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;soname&lt;/code&gt; of an &lt;code&gt;IMPORTED&lt;/code&gt; target of shared library type.</source>
          <target state="translated">&lt;code&gt;soname&lt;/code&gt; 의 &lt;code&gt;IMPORTED&lt;/code&gt; 공유 라이브러리 유형의 대상입니다.</target>
        </trans-unit>
        <trans-unit id="07cd53f2705ed13c760b4b27906b026969807f02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;string(FIND)&lt;/code&gt; subcommand treats all strings as ASCII-only characters. The index stored in &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; will also be counted in bytes, so strings containing multi-byte characters may lead to unexpected results.</source>
          <target state="translated">&lt;code&gt;string(FIND)&lt;/code&gt; 취급을 ASCII 전용 문자로 모든 문자열을 부속 명령. &lt;code&gt;&amp;lt;output_variable&amp;gt;&lt;/code&gt; 에 저장된 인덱스 도 바이트 단위로 계산되므로 다중 바이트 문자를 포함하는 문자열은 예기치 않은 결과를 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c50f5b4267bc4b0398edaa339e204dcee151179" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tgt&lt;/code&gt; filename.</source>
          <target state="translated">&lt;code&gt;tgt&lt;/code&gt; 파일 이름.</target>
        </trans-unit>
        <trans-unit id="3f7765c78dcd5cd2b8d28f7d75f66a5c5b1545f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toolchains&lt;/code&gt; object kind lists properties of the toolchains used during the build. These include the language, compiler path, ID, and version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc19872790d7f42737bd267a20f15e388ec2bd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toolset&lt;/code&gt; specifies the toolset name. The selected toolset name is provided in the &lt;a href=&quot;cmake_vs_platform_toolset#variable:CMAKE_VS_PLATFORM_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_VS_PLATFORM_TOOLSET&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;toolset&lt;/code&gt; 도구 세트의 이름을 지정합니다. 선택된 도구 세트 이름은 &lt;a href=&quot;cmake_vs_platform_toolset#variable:CMAKE_VS_PLATFORM_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_VS_PLATFORM_TOOLSET&lt;/code&gt; &lt;/a&gt; 변수에 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="1a954b5e7970bd8d446af50e43c3903a3122490d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write_compiler_detection_header&lt;/code&gt; function also creates compatibility code for other features which have standard equivalents. For example, the &lt;code&gt;cxx_static_assert&lt;/code&gt; feature is emulated with a template and abstracted via the &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT&lt;/code&gt; and &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT_MSG&lt;/code&gt; function-macros.</source>
          <target state="translated">&lt;code&gt;write_compiler_detection_header&lt;/code&gt; 의 기능은 표준 등가물이 다른 기능에 대한 호환성 코드를 생성합니다. 예를 들어 &lt;code&gt;cxx_static_assert&lt;/code&gt; 기능은 템플릿으로 에뮬레이션되고 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT&lt;/code&gt; 및 &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT_MSG&lt;/code&gt; 함수 매크로 를 통해 추상화됩니다 .</target>
        </trans-unit>
        <trans-unit id="18e080c2e76d0b93956c0250a63553eeec91e817" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;xctest_add_bundle&lt;/code&gt; function creates a XCTest bundle named &amp;lt;target&amp;gt; which will test the target &amp;lt;testee&amp;gt;. Supported target types for testee are Frameworks and App Bundles:</source>
          <target state="translated">&lt;code&gt;xctest_add_bundle&lt;/code&gt; 함수 대상 &amp;lt;피험자&amp;gt;을 테스트 &amp;lt;목표&amp;gt;라는 XCTest 번들을 생성한다. testee에 지원되는 대상 유형은 프레임 워크 및 앱 번들입니다.</target>
        </trans-unit>
        <trans-unit id="f5faef50ebf2bf7885ada7f295a7ce8ff30a1523" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;xctest_add_test&lt;/code&gt; function adds an XCTest bundle to the project to be run by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;. The test will be named &amp;lt;name&amp;gt; and tests &amp;lt;bundle&amp;gt;:</source>
          <target state="translated">&lt;code&gt;xctest_add_test&lt;/code&gt; 기능은 프로젝트에 XCTest 번들에 의해 실행되는 추가 &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt; &lt;code&gt;ctest(1)&lt;/code&gt; &lt;/a&gt; . 테스트 이름은 &amp;lt;name&amp;gt;이고 테스트는 &amp;lt;bundle&amp;gt;입니다.</target>
        </trans-unit>
        <trans-unit id="dc06406792ac3f465e3757a7b9c7ab8b24086e8f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stem&lt;/em&gt; is the part of the &lt;code&gt;filename&lt;/code&gt; before the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04042168b753afde55b4bcfc575787430f4c7d32" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;uncovered&lt;/em&gt; directory holds any uncovered files found by &lt;a href=&quot;../variable/ctest_extra_coverage_glob#variable:CTEST_EXTRA_COVERAGE_GLOB&quot; id=&quot;index-0-variable:CTEST_EXTRA_COVERAGE_GLOB&quot;&gt;&lt;code&gt;CTEST_EXTRA_COVERAGE_GLOB&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;노출 된&lt;/em&gt; 디렉토리에 의해 발견 된 노출 된 파일을 보유하고 &lt;a href=&quot;../variable/ctest_extra_coverage_glob#variable:CTEST_EXTRA_COVERAGE_GLOB&quot; id=&quot;index-0-variable:CTEST_EXTRA_COVERAGE_GLOB&quot;&gt; &lt;code&gt;CTEST_EXTRA_COVERAGE_GLOB&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c7172b1c79f1723b67e0975c1be9580d9300a17" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ccmake&lt;/strong&gt; executable is the CMake curses interface. Project configuration settings may be specified interactively through this GUI. Brief instructions are provided at the bottom of the terminal when the program is running.</source>
          <target state="translated">&lt;strong&gt;ccmake의&lt;/strong&gt; 실행 파일은 CMake의 저주 인터페이스입니다. 이 GUI를 통해 프로젝트 구성 설정을 대화식으로 지정할 수 있습니다. 프로그램이 실행될 때 터미널 하단에 간단한 지침이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e18fd66065e7a8373849ad46d2879f8ed90e89f6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cmake-gui&lt;/strong&gt; executable is the CMake GUI. Project configuration settings may be specified interactively. Brief instructions are provided at the bottom of the window when the program is running.</source>
          <target state="translated">&lt;strong&gt;cmake-GUI의&lt;/strong&gt; 실행 파일은 CMake GUI입니다. 프로젝트 구성 설정은 대화식으로 지정할 수 있습니다. 프로그램이 실행될 때 창 하단에 간단한 지침이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="ab3fae4559052c3e0e6e1d2706fb192aa25fbef7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cmake&lt;/strong&gt; executable is the command-line interface of the cross-platform buildsystem generator CMake. The above &lt;a href=&quot;#synopsis&quot;&gt;Synopsis&lt;/a&gt; lists various actions the tool can perform as described in sections below.</source>
          <target state="translated">&lt;strong&gt;cmake의&lt;/strong&gt; 실행 파일은 크로스 플랫폼 buildsystem 발생기 CMake의 명령 줄 인터페이스입니다. 위의 &lt;a href=&quot;#synopsis&quot;&gt;개요&lt;/a&gt; 에는 아래 섹션에 설명 된대로 도구가 수행 할 수있는 다양한 작업이 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b77372854ab645ba8cf4dfca3ba05ad8a6c30b04" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cpack&lt;/strong&gt; executable is the CMake packaging program. It generates installers and source packages in a variety of formats.</source>
          <target state="translated">&lt;strong&gt;cpack의&lt;/strong&gt; 실행 파일은 CMake 포장 프로그램입니다. 설치 프로그램과 소스 패키지를 다양한 형식으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7fbd187881a3cde03ffbf81d402b5eb49e52e515" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cpack&lt;/strong&gt; program is steered by a configuration file written in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt;&lt;code&gt;CMake language&lt;/code&gt;&lt;/a&gt;. Unless chosen differently through the command-line option &lt;code&gt;--config&lt;/code&gt;, the file &lt;code&gt;CPackConfig.cmake&lt;/code&gt; in the current directory is used.</source>
          <target state="translated">&lt;strong&gt;cpack의&lt;/strong&gt; 프로그램은 작성된 구성 파일에 의해 조종되는 &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt; &lt;code&gt;CMake language&lt;/code&gt; &lt;/a&gt; . 명령 줄 옵션 &lt;code&gt;--config&lt;/code&gt; 를 통해 다르게 선택하지 않으면 현재 디렉토리의 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 파일 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="537989053739abd06c23b2859a95556877f9bdaa" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ctest&lt;/strong&gt; executable is the CMake test driver program. CMake-generated build trees created for projects that use the &lt;a href=&quot;../command/enable_testing#command:enable_testing&quot; id=&quot;index-0-command:enable_testing&quot;&gt;&lt;code&gt;enable_testing()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; commands have testing support. This program will run the tests and report results.</source>
          <target state="translated">&lt;strong&gt;ctest&lt;/strong&gt; 실행 파일은 CMake 테스트 드라이버 프로그램입니다. &lt;a href=&quot;../command/enable_testing#command:enable_testing&quot; id=&quot;index-0-command:enable_testing&quot;&gt; &lt;code&gt;enable_testing()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt; &lt;code&gt;add_test()&lt;/code&gt; &lt;/a&gt; 명령 을 사용하는 프로젝트 용으로 작성된 CMake 생성 빌드 트리는 테스트 지원을 제공합니다. 이 프로그램은 테스트를 실행하고 결과를보고합니다.</target>
        </trans-unit>
        <trans-unit id="e787bb7330483b6248545973dc08dcd06e71acd1" translate="yes" xml:space="preserve">
          <source>The ALL flag indicates that all components be downloaded. Otherwise, only those components explicitly marked as DOWNLOADED or that have a specified ARCHIVE_FILE will be downloaded. Additionally, the ALL option implies ADD_REMOVE (unless NO_ADD_REMOVE is specified).</source>
          <target state="translated">ALL 플래그는 모든 구성 요소가 다운로드되었음을 나타냅니다. 그렇지 않으면 명시 적으로 DOWNLOADED로 표시되었거나 지정된 ARCHIVE_FILE이있는 구성 요소 만 다운로드됩니다. 또한 ALL 옵션은 ADD_REMOVE를 의미합니다 (NO_ADD_REMOVE가 지정되지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="a357d92a07d6ffa9aa2604af8ea90d1941c5c932" translate="yes" xml:space="preserve">
          <source>The Android ABI detected from the standalone toolchain.</source>
          <target state="translated">독립형 툴체인에서 Android ABI가 감지되었습니다.</target>
        </trans-unit>
        <trans-unit id="dd38c65367fa169103ca2cb5235cebbc0c1dc101" translate="yes" xml:space="preserve">
          <source>The Android API level detected from the standalone toolchain.</source>
          <target state="translated">독립형 툴체인에서 Android API 레벨이 감지되었습니다.</target>
        </trans-unit>
        <trans-unit id="10fc3c2f7e3991d15314cebabe10d8bf04968553" translate="yes" xml:space="preserve">
          <source>The BUILD_TESTING option is created by the Dart module to determine whether testing support should be enabled. The default is ON.</source>
          <target state="translated">BUILD_TESTING 옵션은 테스트 지원을 사용할지 여부를 결정하기 위해 Dart 모듈에 의해 작성됩니다. 기본값은 ON입니다.</target>
        </trans-unit>
        <trans-unit id="1df00cecd629f11743fb13e2b10a091015ac11c2" translate="yes" xml:space="preserve">
          <source>The C standard whose features are requested to build this target.</source>
          <target state="translated">이 대상을 빌드하기 위해 기능이 요청 된 C 표준입니다.</target>
        </trans-unit>
        <trans-unit id="280280e2ee6488af9626c009bb578e5ca7be6c34" translate="yes" xml:space="preserve">
          <source>The C++ standard whose features are requested to build this target.</source>
          <target state="translated">이 대상을 빌드하기 위해 기능이 요청 된 C ++ 표준입니다.</target>
        </trans-unit>
        <trans-unit id="46a658650fa708a833cf4394d255bdb821469819" translate="yes" xml:space="preserve">
          <source>The C++ wrapper libtiffxx, if requested by the &lt;code&gt;COMPONENTS CXX&lt;/code&gt; option, if the compiler is not MSVC (which includes the C++ wrapper in libtiff), and if found.</source>
          <target state="translated">C ++ 래퍼 libtiffxx ( &lt;code&gt;COMPONENTS CXX&lt;/code&gt; 옵션에 의해 요청 된 경우), 컴파일러가 MSVC (libtiff에 C ++ 래퍼 포함)가 아닌 경우 및 발견 된 경우.</target>
        </trans-unit>
        <trans-unit id="1c29ace7ed3e6dfb5f52c1ad6edbfdc69f3c8baa" translate="yes" xml:space="preserve">
          <source>The CMake Cache</source>
          <target state="translated">CMake 캐시</target>
        </trans-unit>
        <trans-unit id="a800bb771ba86d3ac7e773d1c10750686c9937a3" translate="yes" xml:space="preserve">
          <source>The CMake command-line tool displays &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages on stdout with the message preceded by two hyphens and a space. All other message types are sent to stderr and are not prefixed with hyphens. The &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;CMake GUI&lt;/code&gt;&lt;/a&gt; displays all messages in its log area. The &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;curses interface&lt;/code&gt;&lt;/a&gt; shows &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages one at a time on a status line and other messages in an interactive pop-up box. The &lt;code&gt;--log-level&lt;/code&gt; command-line option to each of these tools can be used to control which messages will be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49de4f330d74916070440dadc7ae222235fd1fe3" translate="yes" xml:space="preserve">
          <source>The CMake command-line tool displays &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages on stdout with the message preceded by two hyphens and a space. All other message types are sent to stderr and are not prefixed with hyphens. The &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;CMake GUI&lt;/code&gt;&lt;/a&gt; displays all messages in its log area. The &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;curses interface&lt;/code&gt;&lt;/a&gt; shows &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages one at a time on a status line and other messages in an interactive pop-up box. The &lt;code&gt;--log-level&lt;/code&gt; command-line option to each of these tools can be used to control which messages will be shown. To make a log level persist between CMake runs, the &lt;a href=&quot;../variable/cmake_message_log_level#variable:CMAKE_MESSAGE_LOG_LEVEL&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_LOG_LEVEL&quot;&gt;&lt;code&gt;CMAKE_MESSAGE_LOG_LEVEL&lt;/code&gt;&lt;/a&gt; variable can be set instead. Note that the command line option takes precedence over the cache variable.</source>
          <target state="translated">CMake 명령 줄 도구는 두 개의 하이픈과 공백이 앞에 오는 메시지와 함께 stdout의 &lt;code&gt;TRACE&lt;/code&gt; 메시지에 &lt;code&gt;STATUS&lt;/code&gt; 를 표시 합니다. 다른 모든 메시지 유형은 stderr로 전송되며 하이픈 접 두부가 없습니다. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;CMake GUI&lt;/code&gt; 는&lt;/a&gt; 로그 영역의 모든 메시지를 표시합니다. &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;curses interface&lt;/code&gt; &lt;/a&gt; 쇼의 &lt;code&gt;STATUS&lt;/code&gt; 에 &lt;code&gt;TRACE&lt;/code&gt; 의 인터랙티브 팝업 상자에 상태 표시 줄 및 다른 메시지에서 한 번에 메시지를. 이러한 각 도구에 대한 &lt;code&gt;--log-level&lt;/code&gt; 명령 줄 옵션을 사용하여 표시 할 메시지를 제어 할 수 있습니다. CMake 실행간에 로그 수준을 유지하려면 &lt;a href=&quot;../variable/cmake_message_log_level#variable:CMAKE_MESSAGE_LOG_LEVEL&quot; id=&quot;index-0-variable:CMAKE_MESSAGE_LOG_LEVEL&quot;&gt; &lt;code&gt;CMAKE_MESSAGE_LOG_LEVEL&lt;/code&gt; &lt;/a&gt;대신 변수를 설정할 수 있습니다. 명령 줄 옵션이 캐시 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="08a594ae24421123ca53a585614de16ce7af7748" translate="yes" xml:space="preserve">
          <source>The CMake command-line tool displays &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages on stdout with the message preceded by two hyphens and a space. All other message types are sent to stderr and are not prefixed with hyphens. The &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;CMake GUI&lt;/code&gt;&lt;/a&gt; displays all messages in its log area. The &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;curses interface&lt;/code&gt;&lt;/a&gt; shows &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages one at a time on a status line and other messages in an interactive pop-up box. The &lt;code&gt;--loglevel&lt;/code&gt; command-line option to each of these tools can be used to control which messages will be shown.</source>
          <target state="translated">CMake 명령 줄 도구는 stdout에서 &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; 메시지를 앞에 두 개의 하이픈과 공백으로 표시합니다. 다른 모든 메시지 유형은 stderr로 전송되며 접두사가 붙지 않습니다. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;CMake GUI&lt;/code&gt; 는&lt;/a&gt; 로그 영역의 모든 메시지를 표시합니다. &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt; &lt;code&gt;curses interface&lt;/code&gt; &lt;/a&gt; 쇼의 &lt;code&gt;STATUS&lt;/code&gt; 에 &lt;code&gt;TRACE&lt;/code&gt; 의 인터랙티브 팝업 상자에 상태 표시 줄 및 다른 메시지에서 한 번에 메시지를. 이러한 각 도구에 대한 &lt;code&gt;--loglevel&lt;/code&gt; 명령 줄 옵션을 사용하여 표시 할 메시지를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c35c5b5b7b35f198d5b8a18cd92602a8c99ccb0" translate="yes" xml:space="preserve">
          <source>The CMake file-based API reports semantic information about the build system using the following kinds of JSON objects. Each kind of object is versioned independently using semantic versioning with major and minor components. Every kind of object has the form:</source>
          <target state="translated">CMake 파일 기반 API는 다음과 같은 종류의 JSON 객체를 사용하여 빌드 시스템에 대한 의미 정보를보고합니다. 각 종류의 객체는 주요 구성 요소와 부 구성 요소의 의미 버전 관리를 사용하여 독립적으로 버전이 지정됩니다. 모든 종류의 객체는 다음과 같은 형식을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="715fe6905f223841f1f26da3edbc5c80c333ec0f" translate="yes" xml:space="preserve">
          <source>The CMake files shipped with a software package may also define boolean toggle options using the &lt;a href=&quot;../../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command. The command creates a cache entry which has a help text and a default value. Such cache entries are typically specific to the provided software and affect the configuration of the build, such as whether tests and examples are built, whether to build with exceptions enabled etc.</source>
          <target state="translated">소프트웨어 패키지와 함께 제공되는 CMake 파일은 &lt;a href=&quot;../../command/option#command:option&quot; id=&quot;index-0-command:option&quot;&gt; &lt;code&gt;option()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 부울 토글 옵션을 정의 할 수도 있습니다 . 이 명령은 도움말 텍스트와 기본값이있는 캐시 항목을 만듭니다. 이러한 캐시 항목은 일반적으로 제공된 소프트웨어에 따라 다르며 테스트 및 예제 빌드 여부, 예외 활성화 여부 등과 같은 빌드 구성에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="d7ae0ca3d238c0e062f2bf3e599d34e855312212" translate="yes" xml:space="preserve">
          <source>The CMake fragment will generate a file in the &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}&lt;/code&gt; called &lt;code&gt;somelib_export.h&lt;/code&gt; containing the macros &lt;code&gt;SOMELIB_EXPORT&lt;/code&gt;, &lt;code&gt;SOMELIB_NO_EXPORT&lt;/code&gt;, &lt;code&gt;SOMELIB_DEPRECATED&lt;/code&gt;, &lt;code&gt;SOMELIB_DEPRECATED_EXPORT&lt;/code&gt; and &lt;code&gt;SOMELIB_DEPRECATED_NO_EXPORT&lt;/code&gt;. They will be followed by content taken from the variable specified by the &lt;code&gt;CUSTOM_CONTENT_FROM_VARIABLE&lt;/code&gt; option, if any. The resulting file should be installed with other headers in the library.</source>
          <target state="translated">CMake 조각은 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}&lt;/code&gt; 파일에 매크로 &lt;code&gt;SOMELIB_EXPORT&lt;/code&gt; , &lt;code&gt;SOMELIB_NO_EXPORT&lt;/code&gt; , &lt;code&gt;SOMELIB_DEPRECATED&lt;/code&gt; , &lt;code&gt;SOMELIB_DEPRECATED_EXPORT&lt;/code&gt; 및 &lt;code&gt;SOMELIB_DEPRECATED_NO_EXPORT&lt;/code&gt; 매크로를 포함하는 &lt;code&gt;somelib_export.h&lt;/code&gt; 라는 파일을 $ {CMAKE_CURRENT_BINARY_DIR} 에 생성합니다 . &lt;code&gt;CUSTOM_CONTENT_FROM_VARIABLE&lt;/code&gt; 옵션에 의해 지정된 변수 (있는 경우)에서 가져온 컨텐츠가 뒤 따릅니다 . 결과 파일은 라이브러리에 다른 헤더와 함께 설치되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c2b1962719177ee0eb09763f22fc1f35e2c1bb88" translate="yes" xml:space="preserve">
          <source>The CMake source tree itself contains a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-2-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;. See the top level file &lt;code&gt;CMakeCPackOptions.cmake.in&lt;/code&gt; for an example.</source>
          <target state="translated">CMake 소스 트리 자체에는 &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-2-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt; &lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt; 이&lt;/a&gt; 포함 됩니다 . 예제는 최상위 파일 &lt;code&gt;CMakeCPackOptions.cmake.in&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1d5f6d4103d5e4a9f05cc570af2a275059b178a" translate="yes" xml:space="preserve">
          <source>The CMake tooling may report errors to the user when processing provided CMake files, such as reporting that the compiler is not supported, or the compiler does not support a required compile option, or a dependency can not be found. These errors must be resolved by the user by choosing a different compiler, &lt;a href=&quot;../using-dependencies/index#guide:Using%20Dependencies%20Guide&quot; id=&quot;index-0-guide:Using Dependencies Guide&quot;&gt;&lt;code&gt;installing dependencies&lt;/code&gt;&lt;/a&gt;, or instructing CMake where to find them, etc.</source>
          <target state="translated">CMake 도구는 제공된 CMake 파일을 처리 할 때 컴파일러가 지원되지 않거나 컴파일러가 필수 컴파일 옵션을 지원하지 않거나 종속성을 찾을 수 없다는보고와 같은 오류를 사용자에게보고 할 수 있습니다. 이러한 오류는 다른 컴파일러를 선택 하거나 &lt;a href=&quot;../using-dependencies/index#guide:Using%20Dependencies%20Guide&quot; id=&quot;index-0-guide:Using Dependencies Guide&quot;&gt; &lt;code&gt;installing dependencies&lt;/code&gt; &lt;/a&gt; 하거나 CMake에 오류를 찾을 위치를 지시 하는 등의 방법으로 사용자가 해결해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e57d0d743d53047bd677b06761070a793cf4fa67" translate="yes" xml:space="preserve">
          <source>The CMake tooling may report warnings which are intended for the provider of the software, not intended for the consumer of the software. Such warnings end with &quot;This warning is for project developers&quot;. Users may disable such warnings by passing the &lt;code&gt;-Wno-dev&lt;/code&gt; flag to &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9069ba46cb21399e51b42d093bb182a8f62246d4" translate="yes" xml:space="preserve">
          <source>The CMake tooling may report warnings which are intended for the provider of the software, not intended for the consumer of the software. Such warnings end with &amp;ldquo;This warning is for project developers&amp;rdquo;. Users may disable such warnings by passing the &lt;code&gt;-Wno-dev&lt;/code&gt; flag to &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CMake 도구는 소프트웨어 소비자를위한 것이 아니라 소프트웨어 공급자를위한 경고를보고 할 수 있습니다. 이러한 경고는 &quot;이 경고는 프로젝트 개발자를위한 것입니다&quot;로 끝납니다. 사용자는 &lt;code&gt;-Wno-dev&lt;/code&gt; 플래그를 &lt;a href=&quot;../../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 에 전달하여 이러한 경고를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a559874e3f1c728cbad94821391f6b1f425bbdf" translate="yes" xml:space="preserve">
          <source>The CMake tutorial provides a step-by-step guide that covers common build system issues that CMake helps address. Seeing how various topics all work together in an example project can be very helpful. The tutorial documentation and source code for examples can be found in the &lt;code&gt;Help/guide/tutorial&lt;/code&gt; directory of the CMake source code tree. Each step has its own subdirectory containing code that may be used as a starting point. The tutorial examples are progressive so that each step provides the complete solution for the previous step.</source>
          <target state="translated">CMake 자습서는 CMake가 해결하는 데 도움이되는 일반적인 빌드 시스템 문제를 다루는 단계별 가이드를 제공합니다. 예제 프로젝트에서 다양한 주제가 모두 어떻게 함께 작동하는지 보는 것은 매우 도움이 될 수 있습니다. 예제에 대한 자습서 문서 및 소스 코드 는 CMake 소스 코드 트리 의 &lt;code&gt;Help/guide/tutorial&lt;/code&gt; 디렉터리 에서 찾을 수 있습니다 . 각 단계에는 시작점으로 사용할 수있는 코드가 포함 된 자체 하위 디렉토리가 있습니다. 튜토리얼 예제는 점진적이므로 각 단계는 이전 단계에 대한 완전한 솔루션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fdde8d447bc9031f3da111e2e7d32024a508f259" translate="yes" xml:space="preserve">
          <source>The CMake variable &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; is used to determine the root of where the files will be installed. If using the &lt;code&gt;cmake --install&lt;/code&gt; command, the installation prefix can be overridden via the &lt;code&gt;--prefix&lt;/code&gt; argument. For example:</source>
          <target state="translated">CMake 변수 &lt;a href=&quot;../../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 는 파일이 설치 될 루트를 결정하는 데 사용됩니다. &lt;code&gt;cmake --install&lt;/code&gt; 명령을 사용하는 경우 &lt;code&gt;--prefix&lt;/code&gt; 인수 를 통해 설치 접두사를 재정의 할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="8913f2616e92b33ed4622584abc6b1d9513cf228" translate="yes" xml:space="preserve">
          <source>The CMake variable &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; specifies one or more directories to be prepended to all other search directories. This effectively &quot;re-roots&quot; the entire search under given locations. Paths which are descendants of the &lt;a href=&quot;../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; are excluded from this re-rooting, because that variable is always a path on the host system. By default the &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30294840db63aca6f029648aeabbd4f17d393df" translate="yes" xml:space="preserve">
          <source>The CMake variable &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; specifies one or more directories to be prepended to all other search directories. This effectively &amp;ldquo;re-roots&amp;rdquo; the entire search under given locations. Paths which are descendants of the &lt;a href=&quot;../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; are excluded from this re-rooting, because that variable is always a path on the host system. By default the &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="translated">CMake 변수 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; 는&lt;/a&gt; 다른 모든 검색 디렉토리 앞에 하나 이상의 디렉토리를 지정합니다. 이것은 주어진 위치에서 전체 검색을 효과적으로&amp;ldquo;다시 뿌리 뽑는다&amp;rdquo;. &lt;a href=&quot;../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt; &lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt; 의&lt;/a&gt; 자손 인 경로는 해당 변수가 항상 호스트 시스템의 경로이기 때문에이 루트에서 제외됩니다. 기본적으로 &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt; &lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt; &lt;/a&gt; 는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dc2283d69c82ef265d4481b1c31704205d85251" translate="yes" xml:space="preserve">
          <source>The CMake version string as three non-negative integer components separated by &lt;code&gt;.&lt;/code&gt; and possibly followed by &lt;code&gt;-&lt;/code&gt; and other information. The first two components represent the feature level and the third component represents either a bug-fix level or development date.</source>
          <target state="translated">로 구분 된 3 개의 음이 아닌 정수 구성 요소 인 CMake 버전 문자열 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; 및 기타 정보가 이어질 수 있습니다 . 처음 두 구성 요소는 기능 수준을 나타내고 세 번째 구성 요소는 버그 수정 수준 또는 개발 날짜를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="96ed2f373816fba2246913a4dbbb4b190a4c7af9" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the C compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 C 컴파일러의 CMake의 컴파일러 ID입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="15b104fe689b2c174400a35f5e1048c0b0209fb6" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the CUDA compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 CUDA 컴파일러의 CMake의 컴파일러 ID입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52279f92b995859d9fe00c99025ba495dfcd9a0d" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the CXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 CXX 컴파일러의 CMake의 컴파일러 ID입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e41952a88d004d92cd2c0f35d746adcd4564994" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the Fortran compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 Fortran 컴파일러의 CMake의 컴파일러 ID입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba7adb3007503ba372227f41aed2803f53a82a3f" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the ISPC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 ISPC 컴파일러의 CMake 컴파일러 ID입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57f6097b64eaa53cda4d147e83903ef2ac76d1c9" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the OBJC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 OBJC 컴파일러의 CMake 컴파일러 ID입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8794682c97876836fce3e996e2a756b3fce81e9a" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the OBJCXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="translated">사용 된 OBJCXX 컴파일러의 CMake 컴파일러 ID입니다. &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="708bf69ede6e917a3fe04b5808bdd07bdad048bf" translate="yes" xml:space="preserve">
          <source>The CMake's compiler id of the C compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33549079dcc3a167af9d08144b2f07b04d266be8" translate="yes" xml:space="preserve">
          <source>The CMake's compiler id of the CUDA compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4166b5e139606df2fcaad2cb0fcfcc65fa767534" translate="yes" xml:space="preserve">
          <source>The CMake's compiler id of the CXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d9bc718b15052bf8c306dadfe12d2881ab4ef9" translate="yes" xml:space="preserve">
          <source>The CMake's compiler id of the Fortran compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52780e0ca68b7132b7a8f3f57e786eb8959cc2f" translate="yes" xml:space="preserve">
          <source>The CMake's compiler id of the ISPC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d714acadcc610082a3614e679156803582c386" translate="yes" xml:space="preserve">
          <source>The CMake's compiler id of the OBJC compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89cd362ab16f57594ac14edd0d9faecd63fc0c3" translate="yes" xml:space="preserve">
          <source>The CMake's compiler id of the OBJCXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b561fe14234e6d9b70a14b5cdd3a04543a7721c4" translate="yes" xml:space="preserve">
          <source>The CPack module generates a file &lt;code&gt;CPackConfig.cmake&lt;/code&gt; intended for use in a subsequent run of the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; program where it steers the generation of installers or/and source packages.</source>
          <target state="translated">CPack 모듈 은 &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt; 프로그램 의 후속 실행에 사용하기위한 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 파일을 생성하여 설치 프로그램 또는 소스 패키지 생성을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="65ebaba6d59141fa830da1112b73adafb5d9c769" translate="yes" xml:space="preserve">
          <source>The CPack module generates the configuration files &lt;code&gt;CPackConfig.cmake&lt;/code&gt; and &lt;code&gt;CPackSourceConfig.cmake&lt;/code&gt;. They are intended for use in a subsequent run of the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; program where they steer the generation of installers or/and source packages.</source>
          <target state="translated">CPack 모듈은 구성 파일 &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 및 &lt;code&gt;CPackSourceConfig.cmake&lt;/code&gt; 를 생성합니다 . 이들은 설치 프로그램 또는 / 및 소스 패키지의 생성을 조정하는 &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt; &lt;code&gt;cpack&lt;/code&gt; &lt;/a&gt; 프로그램 의 후속 실행에 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="9d6ace0fe62f85283d4e5d362502751ae2b252cd" translate="yes" xml:space="preserve">
          <source>The CPackComponent module is the module which handles the component part of CPack. See CPack module for general information about CPack.</source>
          <target state="translated">CPackComponent 모듈은 CPack의 구성 요소를 처리하는 모듈입니다. CPack에 대한 일반 정보는 CPack 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c5c0f20af328a922fc9264346e6f780c0444c9d7" translate="yes" xml:space="preserve">
          <source>The CTest resource allocation feature consists of two inputs:</source>
          <target state="translated">CTest 리소스 할당 기능은 두 가지 입력으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e62ec6998dfba7cbf181bb69be8aabd3c590942c" translate="yes" xml:space="preserve">
          <source>The CUDA Driver library (cuda) are used by applications that use calls such as &lt;code&gt;cuMemAlloc&lt;/code&gt;, and &lt;code&gt;cuMemFree&lt;/code&gt;. This is generally used by advanced</source>
          <target state="translated">CUDA 드라이버 라이브러리 (cuda)는 &lt;code&gt;cuMemAlloc&lt;/code&gt; 및 &lt;code&gt;cuMemFree&lt;/code&gt; 와 같은 호출을 사용하는 애플리케이션에서 사용 됩니다. 이것은 일반적으로 고급에 의해 사용됩니다</target>
        </trans-unit>
        <trans-unit id="9e24b5770f1375f93dd95e41f95548e1a8201ad9" translate="yes" xml:space="preserve">
          <source>The CUDA Runtime library (cudart) are what most applications will typically need to link against to make any calls such as &lt;code&gt;cudaMalloc&lt;/code&gt;, and &lt;code&gt;cudaFree&lt;/code&gt;.</source>
          <target state="translated">CUDA 런타임 라이브러리 (cudart)는 대부분의 애플리케이션이 일반적으로 &lt;code&gt;cudaMalloc&lt;/code&gt; 및 &lt;code&gt;cudaFree&lt;/code&gt; 와 같은 호출을 수행하기 위해 연결 해야하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="eb0d8ccb35fb4eaee29fd98729ae0a35a562132e" translate="yes" xml:space="preserve">
          <source>The CUDA Toolkit search behavior uses the following order:</source>
          <target state="translated">CUDA 툴킷 검색 동작은 다음 순서를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="aaf51b930f4094ff782e2d3fe3e38159cfd8f5c2" translate="yes" xml:space="preserve">
          <source>The CUDA/C++ standard whose features are requested to build this target.</source>
          <target state="translated">이 타겟을 빌드하기 위해 기능이 요청 된 CUDA / C ++ 표준.</target>
        </trans-unit>
        <trans-unit id="7a2e6f0127177bb6735680380ffecaab44564493" translate="yes" xml:space="preserve">
          <source>The Cobertura Coverage parser expects to read the coverage data from a single XML file which contains the coverage data for all modules. Cobertura has a program with the ability to merge given &lt;code&gt;cobertura.ser&lt;/code&gt; files and then another program to generate a combined XML file from the previous merged file. For command line testing, this can be done by hand prior to CTest looking for the coverage files. For script builds, set the &lt;code&gt;CTEST_COVERAGE_COMMAND&lt;/code&gt; variable to point to a file which will perform these same steps, such as a &lt;code&gt;.sh&lt;/code&gt; or &lt;code&gt;.bat&lt;/code&gt; file.</source>
          <target state="translated">Cobertura Coverage 파서는 모든 모듈의 커버리지 데이터를 포함하는 단일 XML 파일에서 커버리지 데이터를 읽을 것으로 예상합니다. Cobertura는 주어진 &lt;code&gt;cobertura.ser&lt;/code&gt; 파일 을 병합 하고 이전에 병합 된 파일에서 결합 된 XML 파일을 생성하는 또 다른 프로그램을 가진 프로그램을 가지고 있습니다. 커맨드 라인 테스트의 경우 CTest가 커버리지 파일을 찾기 전에 수동으로 수행 할 수 있습니다. 스크립트 빌드의 경우 &lt;code&gt;CTEST_COVERAGE_COMMAND&lt;/code&gt; 변수가 &lt;code&gt;.sh&lt;/code&gt; 또는 &lt;code&gt;.bat&lt;/code&gt; 파일 과 같은 동일한 단계를 수행하는 파일을 가리 키도록 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="e514dd9a9ef12461e7928325d29609e68bda0717" translate="yes" xml:space="preserve">
          <source>The Compiler (eg, MSVC, GCC, Clang) and compiler version.</source>
          <target state="translated">컴파일러 (예 : MSVC, GCC, Clang) 및 컴파일러 버전.</target>
        </trans-unit>
        <trans-unit id="3e098f8b2e4181af0a868670242775d7c166d71e" translate="yes" xml:space="preserve">
          <source>The Discourse Forum hosts discussion and questions about CMake.</source>
          <target state="translated">Discourse Forum은 CMake에 대한 토론과 질문을 주최합니다.</target>
        </trans-unit>
        <trans-unit id="b49e372a0a60b7a4dbe7634d53d53fb6ce7d7c07" translate="yes" xml:space="preserve">
          <source>The Eclipse project generator generates so-called linked resources e.g. to the subproject root dirs in the source tree or to the source files of targets. This can be disabled by setting this variable to FALSE.</source>
          <target state="translated">Eclipse 프로젝트 생성기는 소스 트리의 하위 프로젝트 루트 디렉토리 또는 대상의 소스 파일과 같은 소위 링크 된 자원을 생성합니다. 이 변수를 FALSE로 설정하면 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="964c98f0649faafefc07d2038e62d90ecad61392" translate="yes" xml:space="preserve">
          <source>The Expat &lt;code&gt;expat&lt;/code&gt; library, if found.</source>
          <target state="translated">Expat &lt;code&gt;expat&lt;/code&gt; 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="d5ee6f15bcc01719b56184c36895b1f42837a3b2" translate="yes" xml:space="preserve">
          <source>The FLTK Forms library (debug)</source>
          <target state="translated">FLTK 양식 라이브러리 (디버그)</target>
        </trans-unit>
        <trans-unit id="ac717db462c1a69074a6055ddfc971b87b36168a" translate="yes" xml:space="preserve">
          <source>The FLTK Forms library (optimized)</source>
          <target state="translated">FLTK 양식 라이브러리 (최적화)</target>
        </trans-unit>
        <trans-unit id="d829c55de3c96b6b98daccec130f85edbd549fcc" translate="yes" xml:space="preserve">
          <source>The FLTK GL library (debug)</source>
          <target state="translated">FLTK GL 라이브러리 (디버그)</target>
        </trans-unit>
        <trans-unit id="2feb1051f7b1d2303d40026e89cdba5270c6eea3" translate="yes" xml:space="preserve">
          <source>The FLTK GL library (optimized)</source>
          <target state="translated">FLTK GL 라이브러리 (최적화)</target>
        </trans-unit>
        <trans-unit id="ad11c625eaefa0bd132aee676e34cc0667050cf0" translate="yes" xml:space="preserve">
          <source>The FLTK Images library (debug)</source>
          <target state="translated">FLTK 이미지 라이브러리 (디버그)</target>
        </trans-unit>
        <trans-unit id="eb359fcff4c568bc05990924426869896b012a77" translate="yes" xml:space="preserve">
          <source>The FLTK Images protobuf library (optimized)</source>
          <target state="translated">FLTK Images protobuf 라이브러리 (최적화)</target>
        </trans-unit>
        <trans-unit id="0c36c40d8514d6b4abb13684e8017392d51b6ca0" translate="yes" xml:space="preserve">
          <source>The FLTK base library (debug)</source>
          <target state="translated">FLTK 기본 라이브러리 (디버그)</target>
        </trans-unit>
        <trans-unit id="f16381ba0701fd8ef7ad356ecda5c7ac5c797df7" translate="yes" xml:space="preserve">
          <source>The FLTK base library (optimized)</source>
          <target state="translated">FLTK 기본 라이브러리 (최적화)</target>
        </trans-unit>
        <trans-unit id="66c0d5fa42c040dbdcab8965d586c8855032f197" translate="yes" xml:space="preserve">
          <source>The Fontconfig library, if found.</source>
          <target state="translated">Fontconfig 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="09f440cde8c4a4e34b400eea0e40dc2c6e68656c" translate="yes" xml:space="preserve">
          <source>The Freetype &lt;code&gt;freetype&lt;/code&gt; library, if found</source>
          <target state="translated">발견 된 경우 자유 형식 &lt;code&gt;freetype&lt;/code&gt; 라이브러리</target>
        </trans-unit>
        <trans-unit id="2b3b503abea6a1ca7c1819d25ed63348832fa245" translate="yes" xml:space="preserve">
          <source>The GLEW shared library.</source>
          <target state="translated">GLEW 공유 라이브러리</target>
        </trans-unit>
        <trans-unit id="72fcb654b6536a0f4fe5b1ea26069d40748671b7" translate="yes" xml:space="preserve">
          <source>The GLEW static library, if &lt;code&gt;GLEW_USE_STATIC_LIBS&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GLEW_USE_STATIC_LIBS&lt;/code&gt; 가 &lt;code&gt;TRUE&lt;/code&gt; 로 설정된 경우 GLEW 정적 라이브러리 .</target>
        </trans-unit>
        <trans-unit id="59a97c0f2aacd9de3b6da954abdffc054b51de02" translate="yes" xml:space="preserve">
          <source>The GNU Scientific Library (GSL) is a numerical library for C and C++ programmers. It is free software under the GNU General Public License.</source>
          <target state="translated">GNU Scientific Library (GSL)는 C 및 C ++ 프로그래머를위한 숫자 라이브러리입니다. GNU 일반 공중 사용 허가서에 따라 무료 소프트웨어입니다.</target>
        </trans-unit>
        <trans-unit id="9828afceb44e5f4025bac54903c487076dfaa880" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest&lt;/code&gt; library, if found; adds Thread::Thread automatically</source>
          <target state="translated">Google 테스트 &lt;code&gt;gtest&lt;/code&gt; 라이브러리 (있는 경우) Thread :: Thread를 자동으로 추가합니다</target>
        </trans-unit>
        <trans-unit id="9fa5ad8b4b429c62849710ee9e035026df9b68c2" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest&lt;/code&gt; library; note it also requires linking with an appropriate thread library</source>
          <target state="translated">Google Test &lt;code&gt;gtest&lt;/code&gt; 라이브러리; 또한 적절한 스레드 라이브러리와 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="8bba4fe489a3e96409de3c7b2eed8701681e5038" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest_main&lt;/code&gt; library</source>
          <target state="translated">Google 테스트 &lt;code&gt;gtest_main&lt;/code&gt; 라이브러리</target>
        </trans-unit>
        <trans-unit id="bcc17762129a2269fe9fef482eb69eb62dcd21e3" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest_main&lt;/code&gt; library, if found</source>
          <target state="translated">Google Test &lt;code&gt;gtest_main&lt;/code&gt; 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="5b1f9b3477f07c95688fdd14fe585a060e274421" translate="yes" xml:space="preserve">
          <source>The JNI symlink which should be installed. This is used by &lt;code&gt;install_jni_symlink()&lt;/code&gt;.</source>
          <target state="translated">설치해야 할 JNI symlink &lt;code&gt;install_jni_symlink()&lt;/code&gt; 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3cd1b7be24bbf9dbd38b05f1c30d81ad95b4a4bc" translate="yes" xml:space="preserve">
          <source>The JPEG library, if found.</source>
          <target state="translated">JPEG 라이브러리가있는 경우</target>
        </trans-unit>
        <trans-unit id="dc81decbfa486804a9bf488e4f5dfdd604a067ea" translate="yes" xml:space="preserve">
          <source>The LTTng-UST include directories</source>
          <target state="translated">LTTng-UST 포함 디렉토리</target>
        </trans-unit>
        <trans-unit id="d53c42a38763dbca1f81b614dd1b70939778d138" translate="yes" xml:space="preserve">
          <source>The LTTng-UST library, if found</source>
          <target state="translated">발견 된 경우 LTTng-UST 라이브러리</target>
        </trans-unit>
        <trans-unit id="231199e2e3cbe087a5a057e23355b8688a8871ef" translate="yes" xml:space="preserve">
          <source>The LTTng-UST version</source>
          <target state="translated">LTTng-UST 버전</target>
        </trans-unit>
        <trans-unit id="9c7eb8fdd0c0261a8b911ce5f1d7985f43404fc0" translate="yes" xml:space="preserve">
          <source>The Message Passing Interface (MPI) is a library used to write high-performance distributed-memory parallel applications, and is typically deployed on a cluster. MPI is a standard interface (defined by the MPI forum) for which many implementations are available.</source>
          <target state="translated">MPI (Message Passing Interface)는 고성능 분산 메모리 병렬 응용 프로그램을 작성하는 데 사용되는 라이브러리이며 일반적으로 클러스터에 배포됩니다. MPI는 많은 구현을 사용할 수있는 표준 인터페이스 (MPI 포럼에서 정의)입니다.</target>
        </trans-unit>
        <trans-unit id="135c4255b19155ca85fe889d816a0d538b5b9bab" translate="yes" xml:space="preserve">
          <source>The NumPy include directories.</source>
          <target state="translated">NumPy는 디렉토리를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4ded50fdabf5b7bd714c523ed3b25df3283dbef5" translate="yes" xml:space="preserve">
          <source>The NumPy include directries.</source>
          <target state="translated">NumPy에는 디렉토리가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8d17976d5ac379730a3119214a15da5f567df173" translate="yes" xml:space="preserve">
          <source>The NumPy version.</source>
          <target state="translated">NumPy 버전입니다.</target>
        </trans-unit>
        <trans-unit id="a116099cb5477bdb47bd189f169cedf70c1f8642" translate="yes" xml:space="preserve">
          <source>The OBJC standard whose features are requested to build this target.</source>
          <target state="translated">이 타겟을 구축하기 위해 기능이 요청 된 OBJC 표준입니다.</target>
        </trans-unit>
        <trans-unit id="8c263480deab5b12602587a57fb6f026edc5059f" translate="yes" xml:space="preserve">
          <source>The OS build ID</source>
          <target state="translated">OS 빌드 ID</target>
        </trans-unit>
        <trans-unit id="f8cb4f9c0a58cbbc281e2beaf0526a74200dbc03" translate="yes" xml:space="preserve">
          <source>The OS sub-type e.g. on Windows &lt;code&gt;Professional&lt;/code&gt;</source>
          <target state="translated">OS 하위 유형 (예 : Windows &lt;code&gt;Professional&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6a35e5e119e848dfcab5cddfa7884079b9a1f29d" translate="yes" xml:space="preserve">
          <source>The OS version CMake is running on.</source>
          <target state="translated">OS 버전 CMake가 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="917c45b12b333c018ec14640e74a8dfda1f7fc2f" translate="yes" xml:space="preserve">
          <source>The ObjC++ standard whose features are requested to build this target.</source>
          <target state="translated">이 대상을 빌드하기 위해 기능이 요청 된 ObjC ++ 표준입니다.</target>
        </trans-unit>
        <trans-unit id="b9e14ec8dda2b864fdb1aada3ce38fbcb08e04ee" translate="yes" xml:space="preserve">
          <source>The OpenSSL &lt;code&gt;applink&lt;/code&gt; components that might be need to be compiled into projects under MSVC. This target is available only if found OpenSSL version is not less than 0.9.8. By linking this target the above OpenSSL targets can be linked even if the project has different MSVC runtime configurations with the above OpenSSL targets. This target has no effect on platforms other than MSVC.</source>
          <target state="translated">MSVC에서 프로젝트로 컴파일해야 할 수있는 OpenSSL &lt;code&gt;applink&lt;/code&gt; 구성 요소입니다. 이 대상은 OpenSSL 버전이 0.9.8 이상인 경우에만 사용할 수 있습니다. 이 대상을 연결하면 프로젝트에 위의 OpenSSL 대상과 다른 MSVC 런타임 구성이있는 경우에도 위의 OpenSSL 대상을 연결할 수 있습니다. 이 대상은 MSVC 이외의 플랫폼에는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="857bed4fee6d452f5af4ac8e0eeb8bd66177017e" translate="yes" xml:space="preserve">
          <source>The OpenSSL &lt;code&gt;crypto&lt;/code&gt; library, if found.</source>
          <target state="translated">발견 된 경우 OpenSSL &lt;code&gt;crypto&lt;/code&gt; 라이브러리.</target>
        </trans-unit>
        <trans-unit id="3ea15862862d4c1872a736b205de561e36c55e44" translate="yes" xml:space="preserve">
          <source>The OpenSSL &lt;code&gt;ssl&lt;/code&gt; library, if found.</source>
          <target state="translated">발견 된 경우 OpenSSL &lt;code&gt;ssl&lt;/code&gt; 라이브러리.</target>
        </trans-unit>
        <trans-unit id="c8b3d3844214485d1ed607d38118d1a5918f6315" translate="yes" xml:space="preserve">
          <source>The OpenSSL SSL library and its dependencies.</source>
          <target state="translated">OpenSSL SSL 라이브러리 및 해당 종속성.</target>
        </trans-unit>
        <trans-unit id="dc1b08adb82d669febb6687187ac4f74a941a085" translate="yes" xml:space="preserve">
          <source>The OpenSSL SSL library.</source>
          <target state="translated">OpenSSL SSL 라이브러리</target>
        </trans-unit>
        <trans-unit id="2a11bef41d6c1955a40eca83ec6feb4bd018f8eb" translate="yes" xml:space="preserve">
          <source>The OpenSSL crypto library and its dependencies.</source>
          <target state="translated">OpenSSL 암호화 라이브러리 및 해당 종속성.</target>
        </trans-unit>
        <trans-unit id="591c97a27b6489d6aa81c43282b70409d6291b33" translate="yes" xml:space="preserve">
          <source>The OpenSSL crypto library.</source>
          <target state="translated">OpenSSL 암호화 라이브러리.</target>
        </trans-unit>
        <trans-unit id="4aeb7095772e0407e2d04b5e2c20f1d4c519b24c" translate="yes" xml:space="preserve">
          <source>The OpenSSL include directory.</source>
          <target state="translated">OpenSSL 포함 디렉토리.</target>
        </trans-unit>
        <trans-unit id="85faecb45dcef4cdc334ee265690264f61097d94" translate="yes" xml:space="preserve">
          <source>The Platform (eg, Windows, APPLE, Linux).</source>
          <target state="translated">플랫폼 (예 : Windows, APPLE, Linux).</target>
        </trans-unit>
        <trans-unit id="b25f2d99bda4b384a66bf893b2d3a6d663904ee7" translate="yes" xml:space="preserve">
          <source>The Python 2 include directories.</source>
          <target state="translated">파이썬 2는 디렉토리를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c274c795ff03a03e0d01987909b24eb652884af3" translate="yes" xml:space="preserve">
          <source>The Python 2 libraries.</source>
          <target state="translated">파이썬 2 라이브러리.</target>
        </trans-unit>
        <trans-unit id="f89dd0dd0b8a737358c28e07d5af0bc1c2e79360" translate="yes" xml:space="preserve">
          <source>The Python 2 library directories.</source>
          <target state="translated">Python 2 라이브러리 디렉토리</target>
        </trans-unit>
        <trans-unit id="3f0c9eac9f8c926f095d2e0e9a2f227108c4eaab" translate="yes" xml:space="preserve">
          <source>The Python 2 link options. Some configurations require specific link options for a correct build and execution.</source>
          <target state="translated">Python 2 링크 옵션. 일부 구성에는 올바른 빌드 및 실행을 위해 특정 링크 옵션이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9d6f5ababe52280651ae353ae8cd3b661965197c" translate="yes" xml:space="preserve">
          <source>The Python 2 runtime library directories.</source>
          <target state="translated">Python 2 런타임 라이브러리 디렉토리.</target>
        </trans-unit>
        <trans-unit id="520164a74796d97610f2cc257bdac157f65bfe80" translate="yes" xml:space="preserve">
          <source>The Python 3 include directories.</source>
          <target state="translated">Python 3에는 디렉토리가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ebf03bbbca6c7bd2a8ff2a1a97a45bd84ba1862" translate="yes" xml:space="preserve">
          <source>The Python 3 libraries.</source>
          <target state="translated">파이썬 3 라이브러리.</target>
        </trans-unit>
        <trans-unit id="621bb58fd1d586c9fd083f126df4cafa00a1f3e0" translate="yes" xml:space="preserve">
          <source>The Python 3 library directories.</source>
          <target state="translated">Python 3 라이브러리 디렉토리</target>
        </trans-unit>
        <trans-unit id="c86ec0bb7469d0a06f7e5e098ddab853913cf46e" translate="yes" xml:space="preserve">
          <source>The Python 3 link options. Some configurations require specific link options for a correct build and execution.</source>
          <target state="translated">Python 3 링크 옵션. 일부 구성에는 올바른 빌드 및 실행을 위해 특정 링크 옵션이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d17d050a728a0a902fd2e2ab97866aab584b5f63" translate="yes" xml:space="preserve">
          <source>The Python 3 runtime library directories.</source>
          <target state="translated">Python 3 런타임 라이브러리 디렉토리.</target>
        </trans-unit>
        <trans-unit id="4b7e0f0f46bc89f8b0ba0687275b2db4968b998a" translate="yes" xml:space="preserve">
          <source>The Python include directories.</source>
          <target state="translated">파이썬은 디렉토리를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b10ba58cd01e24d6941f2029fa750723f0e8f421" translate="yes" xml:space="preserve">
          <source>The Python libraries.</source>
          <target state="translated">파이썬 라이브러리.</target>
        </trans-unit>
        <trans-unit id="868b0c82e5b1d74d436fe1dd18e89d8d43f5ee7b" translate="yes" xml:space="preserve">
          <source>The Python library directories.</source>
          <target state="translated">파이썬 라이브러리 디렉토리.</target>
        </trans-unit>
        <trans-unit id="671dc70f0716d4373a2a992175341dfba3bf07b1" translate="yes" xml:space="preserve">
          <source>The Python link options. Some configurations require specific link options for a correct build and execution.</source>
          <target state="translated">Python 링크 옵션. 일부 구성에는 올바른 빌드 및 실행을 위해 특정 링크 옵션이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="77b3947e8d53b28a46c842b4ad09186f3d3a4e38" translate="yes" xml:space="preserve">
          <source>The Python runtime library directories.</source>
          <target state="translated">Python 런타임 라이브러리 디렉토리.</target>
        </trans-unit>
        <trans-unit id="2e00e126f2094afa03674bd8afd9fc7cd1ce6feb" translate="yes" xml:space="preserve">
          <source>The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of version numbers that should be taken into account when searching for Python. You need to set this variable before calling find_package(PythonInterp).</source>
          <target state="translated">Python_ADDITIONAL_VERSIONS 변수는 Python을 검색 할 때 고려해야하는 버전 번호 목록을 지정하는 데 사용할 수 있습니다. find_package (PythonInterp)를 호출하기 전에이 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5bfc0e02d98eab78087305fd918055aec4608a8c" translate="yes" xml:space="preserve">
          <source>The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of version numbers that should be taken into account when searching for Python. You need to set this variable before calling find_package(PythonLibs).</source>
          <target state="translated">Python_ADDITIONAL_VERSIONS 변수는 Python을 검색 할 때 고려해야하는 버전 번호 목록을 지정하는 데 사용할 수 있습니다. find_package (PythonLibs)를 호출하기 전에이 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c271340774715ae0f19da0dca933c71373124718" translate="yes" xml:space="preserve">
          <source>The QAxContainer target (Windows only)</source>
          <target state="translated">QAxContainer 대상 (Windows 만 해당)</target>
        </trans-unit>
        <trans-unit id="884f20996f7794ee8682476635ac7107a6c54f56" translate="yes" xml:space="preserve">
          <source>The QAxServer target (Windows only)</source>
          <target state="translated">QAxServer 대상 (Windows 만 해당)</target>
        </trans-unit>
        <trans-unit id="2f75a3f6cae1c11f167678eb1fe192513bcd1827" translate="yes" xml:space="preserve">
          <source>The Qt 4 and 5 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets for the QtGui libraries specify that the qtmain.lib static library shipped with Qt will be linked by all dependent executables which have the &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt;&lt;/a&gt; enabled.</source>
          <target state="translated">QtGui 라이브러리에 대한 Qt 4 및 5 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상은 Qt와 함께 제공된 qtmain.lib 정적 라이브러리가 &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt; &lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt; 이&lt;/a&gt; 활성화 된 모든 종속 실행 파일에 의해 링크되도록 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="2240f53f1370db3929c0ecb0dee10c89d2fff70f" translate="yes" xml:space="preserve">
          <source>The Qt toolkit may contain both debug and release libraries. &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; will choose the appropriate version based on the build configuration.</source>
          <target state="translated">Qt 툴킷에는 디버그 및 릴리스 라이브러리가 모두 포함될 수 있습니다. &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 는 빌드 구성에 따라 적절한 버전을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="cd9169647844f256f984f333b89d5dfd6dc8962f" translate="yes" xml:space="preserve">
          <source>The Qt3Support target</source>
          <target state="translated">Qt3Support 대상</target>
        </trans-unit>
        <trans-unit id="31931791e27652347b5b374725d57c46ef6e7265" translate="yes" xml:space="preserve">
          <source>The QtAssistant target</source>
          <target state="translated">QtAssistant 대상</target>
        </trans-unit>
        <trans-unit id="530564c11eb98a7255eb0397b9163a3d46d51018" translate="yes" xml:space="preserve">
          <source>The QtAssistantClient target</source>
          <target state="translated">QtAssistantClient 대상</target>
        </trans-unit>
        <trans-unit id="ff8948e52d31782c1b370a75b1de4ecfdcf58664" translate="yes" xml:space="preserve">
          <source>The QtCore target</source>
          <target state="translated">QtCore 대상</target>
        </trans-unit>
        <trans-unit id="7ea00482e75ca181a1694ff888bf4034e1aac63d" translate="yes" xml:space="preserve">
          <source>The QtDBus target</source>
          <target state="translated">QtDBus 대상</target>
        </trans-unit>
        <trans-unit id="209eaecacfc446ce8cd8f33eb6aad38c257c387b" translate="yes" xml:space="preserve">
          <source>The QtDeclarative target</source>
          <target state="translated">QtDeclarative 대상</target>
        </trans-unit>
        <trans-unit id="fc9bd71da6cdd16ce56915057f7df66e118018b2" translate="yes" xml:space="preserve">
          <source>The QtDesigner target</source>
          <target state="translated">QtDesigner 대상</target>
        </trans-unit>
        <trans-unit id="64a052b8aee53febe9f04cd17782d0143ac0de65" translate="yes" xml:space="preserve">
          <source>The QtDesignerComponents target</source>
          <target state="translated">QtDesignerComponents 대상</target>
        </trans-unit>
        <trans-unit id="687095bd03db1f3fb4bfc8a0da740a15ac48589f" translate="yes" xml:space="preserve">
          <source>The QtGui target</source>
          <target state="translated">QtGui 대상</target>
        </trans-unit>
        <trans-unit id="3c423522327b2285107a73042fd104b14d0abde8" translate="yes" xml:space="preserve">
          <source>The QtHelp target</source>
          <target state="translated">QtHelp 대상</target>
        </trans-unit>
        <trans-unit id="2f0b52830f04d326abf44b60cea65d688235491a" translate="yes" xml:space="preserve">
          <source>The QtMotif target</source>
          <target state="translated">QtMotif 대상</target>
        </trans-unit>
        <trans-unit id="1be87f9e3dc14554af331967cc24429b079b9cbe" translate="yes" xml:space="preserve">
          <source>The QtMultimedia target</source>
          <target state="translated">QtMultimedia 대상</target>
        </trans-unit>
        <trans-unit id="2bb09b4e8685123841b8a97b4fcc4a49bdd29f3b" translate="yes" xml:space="preserve">
          <source>The QtNetwork target</source>
          <target state="translated">QtNetwork 대상</target>
        </trans-unit>
        <trans-unit id="254cad18c47a2047aaa4b7773522a64800a7ec7c" translate="yes" xml:space="preserve">
          <source>The QtNsPLugin target</source>
          <target state="translated">QtNsPLugin 대상</target>
        </trans-unit>
        <trans-unit id="80e8074e226280475f6112e40366174a148d177c" translate="yes" xml:space="preserve">
          <source>The QtOpenGL target</source>
          <target state="translated">QtOpenGL 대상</target>
        </trans-unit>
        <trans-unit id="6069e4baa66016bc15f1224d8a662e4a7c6291b7" translate="yes" xml:space="preserve">
          <source>The QtScript target</source>
          <target state="translated">QtScript 대상</target>
        </trans-unit>
        <trans-unit id="269b1479bfd7a42720416422ab3504b5e06e916c" translate="yes" xml:space="preserve">
          <source>The QtScriptTools target</source>
          <target state="translated">QtScriptTools 대상</target>
        </trans-unit>
        <trans-unit id="d82a9a643a1b1fdc4f6d25cff70179e94e37802c" translate="yes" xml:space="preserve">
          <source>The QtSql target</source>
          <target state="translated">QtSql 대상</target>
        </trans-unit>
        <trans-unit id="19d5c04bceac8ea15c8efdf42707ce4fe1482d0a" translate="yes" xml:space="preserve">
          <source>The QtSvg target</source>
          <target state="translated">QtSvg 대상</target>
        </trans-unit>
        <trans-unit id="f3e0bc0ebbf5532763df4aafac5d14ee311d769e" translate="yes" xml:space="preserve">
          <source>The QtTest target</source>
          <target state="translated">QtTest 대상</target>
        </trans-unit>
        <trans-unit id="a63d5ec2bbc5f54d7cb932949fa03c7ffe152463" translate="yes" xml:space="preserve">
          <source>The QtUiTools target</source>
          <target state="translated">QtUiTools 대상</target>
        </trans-unit>
        <trans-unit id="3167cf31eb4179d9d46b5d5896e18d2a13358030" translate="yes" xml:space="preserve">
          <source>The QtWebKit target</source>
          <target state="translated">QtWebKit 대상</target>
        </trans-unit>
        <trans-unit id="dbf377078b3336eb8b8ccda7cad637b1d07692c2" translate="yes" xml:space="preserve">
          <source>The QtXml target</source>
          <target state="translated">QtXml 대상</target>
        </trans-unit>
        <trans-unit id="6f3c3bd9cd98fd8a9a0e569b166cc3028cf4f780" translate="yes" xml:space="preserve">
          <source>The QtXmlPatterns target</source>
          <target state="translated">QtXmlPatterns 대상</target>
        </trans-unit>
        <trans-unit id="a8e55a11940bfd11087cb137a003d09640f79891" translate="yes" xml:space="preserve">
          <source>The SDL library, if found</source>
          <target state="translated">SDL 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="ac340259ad081f32bbeedfaae2f44a41a2453fc5" translate="yes" xml:space="preserve">
          <source>The System Package Registry is stored in a system-wide location. CMake currently provides no interface to add to the system package registry. Installers must be manually taught to register their packages if desired.</source>
          <target state="translated">시스템 패키지 레지스트리는 시스템 전체 위치에 저장됩니다. CMake는 현재 시스템 패키지 레지스트리에 추가 할 인터페이스를 제공하지 않습니다. 원하는 경우 설치자에게 패키지를 등록하도록 수동으로 가르쳐야합니다.</target>
        </trans-unit>
        <trans-unit id="7da8dd991bf2a3dec341fed0d83528c90eec1bcc" translate="yes" xml:space="preserve">
          <source>The TIFF library, if found.</source>
          <target state="translated">TIFF 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="e648deb79f1df16c1cc8b031367cf30bbb3dc691" translate="yes" xml:space="preserve">
          <source>The User Package Registry is stored in a per-user location. The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command may be used to register a project build tree in the user package registry. CMake currently provides no interface to add install trees to the user package registry. Installers must be manually taught to register their packages if desired.</source>
          <target state="translated">사용자 패키지 레지스트리는 사용자 별 위치에 저장됩니다. &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt; &lt;code&gt;export(PACKAGE)&lt;/code&gt; &lt;/a&gt; 명령은 사용자 패키지 레지스트리에서 프로젝트 빌드 트리를 등록하는 데 사용할 수 있습니다. CMake는 현재 사용자 패키지 레지스트리에 설치 트리를 추가하기위한 인터페이스를 제공하지 않습니다. 원하는 경우 설치자에게 패키지를 등록하도록 수동으로 가르쳐야합니다.</target>
        </trans-unit>
        <trans-unit id="171cc3db680534cc5c22aedd7eb81767c14118e8" translate="yes" xml:space="preserve">
          <source>The Visual Studio generator defines the &lt;code&gt;clr&lt;/code&gt; parameter depending on the value of &lt;code&gt;COMMON_LANGUAGE_RUNTIME&lt;/code&gt;:</source>
          <target state="translated">Visual Studio 생성기는 &lt;code&gt;COMMON_LANGUAGE_RUNTIME&lt;/code&gt; 값에 따라 &lt;code&gt;clr&lt;/code&gt; 매개 변수를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="919e6b70e9a0646fcd2a78d3e90e8be88dd2c6c6" translate="yes" xml:space="preserve">
          <source>The Visual Studio toolset can be specified with the &lt;code&gt;-T&lt;/code&gt; option:</source>
          <target state="translated">Visual Studio 도구 집합은 &lt;code&gt;-T&lt;/code&gt; 옵션 으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="76789ca3f1f2e0289c7afd2055ee1b4ae9bafc9d" translate="yes" xml:space="preserve">
          <source>The Xalan-C++ &lt;code&gt;xalan-c&lt;/code&gt; library, if found.</source>
          <target state="translated">Xalan-C ++ &lt;code&gt;xalan-c&lt;/code&gt; 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="e2de8080232b81a3e31cdf8549084537ed3a1f78" translate="yes" xml:space="preserve">
          <source>The Xcode &quot;new build system&quot; introduced by Xcode 10. It became mature enough for use by CMake in Xcode 12. This is the default when using Xcode 12.x or above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bde38caeb7b2453f1687fcdb06d97f4a79c15c2" translate="yes" xml:space="preserve">
          <source>The Xcode &amp;ldquo;new build system&amp;rdquo; introduced by Xcode 10. It became mature enough for use by CMake in Xcode 12. This is the default when using Xcode 12.x or above.</source>
          <target state="translated">Xcode 10에서 도입 한 Xcode &quot;새 빌드 시스템&quot;. Xcode 12에서 CMake에서 사용할 수있을만큼 성숙해졌습니다. Xcode 12.x 이상을 사용할 때 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="ffd2662c3e0df8ed6cdc9adea2cac9489a950bf3" translate="yes" xml:space="preserve">
          <source>The Xerces-C++ &lt;code&gt;xerces-c&lt;/code&gt; library, if found.</source>
          <target state="translated">Xerces-C ++ &lt;code&gt;xerces-c&lt;/code&gt; 라이브러리 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="a57cb494cb5d35c902cab1772c6d1b984242f146" translate="yes" xml:space="preserve">
          <source>The above &quot;unquoted_legacy&quot; production represents such arguments. We do not recommend using legacy unquoted arguments in new code. Instead use a &lt;a href=&quot;#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt; or a &lt;a href=&quot;#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; to represent the content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea2110693b974942eb53358f5147113c7801f3a" translate="yes" xml:space="preserve">
          <source>The above &amp;ldquo;unquoted_legacy&amp;rdquo; production represents such arguments. We do not recommend using legacy unquoted arguments in new code. Instead use a &lt;a href=&quot;#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt; or a &lt;a href=&quot;#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; to represent the content.</source>
          <target state="translated">위의 &quot;unquoted_legacy&quot;프로덕션은 이러한 인수를 나타냅니다. 새 코드에서 인용되지 않은 레거시 인수를 사용하지 않는 것이 좋습니다. 대신 &lt;a href=&quot;#quoted-argument&quot;&gt;인용 된 인수&lt;/a&gt; 또는 &lt;a href=&quot;#bracket-argument&quot;&gt;대괄호 인수&lt;/a&gt; 를 사용하여 컨텐츠를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c2240a128da330bbad2348293554ca385212a40a" translate="yes" xml:space="preserve">
          <source>The above command not only populates the content, it also adds it to the main build (if possible) so that the main build can use the populated project&amp;rsquo;s targets, etc. In some cases, the main project may need to have more precise control over the population or may be required to explicitly define the population steps (e.g. if CMake versions earlier than 3.14 need to be supported). The typical pattern of such custom steps looks like this:</source>
          <target state="translated">위의 명령은 컨텐츠를 채울뿐만 아니라 메인 빌드 (가능한 경우)에 추가하여 메인 빌드가 채워진 프로젝트의 대상 등을 사용할 수 있도록합니다. 경우에 따라 메인 프로젝트는보다 정밀한 제어가 필요할 수 있습니다. 인구 집단 또는 인구 집단 단계를 명시 적으로 정의해야 할 수 있습니다 (예 : 3.14 이전의 CMake 버전을 지원해야하는 경우). 이러한 사용자 정의 단계의 일반적인 패턴은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b21ffce33e1df329ee355488ae4fec83be356723" translate="yes" xml:space="preserve">
          <source>The above command not only populates the content, it also adds it to the main build (if possible) so that the main build can use the populated project's targets, etc. In some cases, the main project may need to have more precise control over the population or may be required to explicitly define the population steps (e.g. if CMake versions earlier than 3.14 need to be supported). The typical pattern of such custom steps looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c625552406a1d70558a92683a536a4f91f78cc" translate="yes" xml:space="preserve">
          <source>The above example demonstrates how &lt;code&gt;REQUIRED_FILES&lt;/code&gt; works, but it is not the most robust way to implement test ordering with failure detection. For that, test fixtures are a better alternative (see &lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-0-prop_test:FIXTURES_REQUIRED&quot;&gt;&lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">위의 예는 &lt;code&gt;REQUIRED_FILES&lt;/code&gt; 의 작동 방식을 보여 주지만 실패 감지와 함께 테스트 순서를 구현하는 가장 강력한 방법은 아닙니다. 이를 위해 테스트 픽스처가 더 나은 대안입니다 ( &lt;a href=&quot;fixtures_required#prop_test:FIXTURES_REQUIRED&quot; id=&quot;index-0-prop_test:FIXTURES_REQUIRED&quot;&gt; &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e5540b0edb9239b7d50ccb9546a76f8d5fa67c2b" translate="yes" xml:space="preserve">
          <source>The above is such a common pattern that, where no custom steps are needed between the calls to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-1-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;, equivalent logic can be obtained by calling &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-1-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; instead (and should be preferred where it meets the needs of the project).</source>
          <target state="translated">위의 일반적인 패턴은 &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-1-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 호출 사이에 사용자 정의 단계가 필요하지 않은 경우 대신 &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-1-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt; 을 호출하여 동등한 논리를 얻을 수 있다는 것입니다. 계획).</target>
        </trans-unit>
        <trans-unit id="f5503daf99827291d41e52bdfd664af6d9284f64" translate="yes" xml:space="preserve">
          <source>The above is such a common pattern that, where no custom steps are needed between the calls to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-1-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;, equivalent logic can be obtained by calling &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-2-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; instead. Where it meets the needs of the project, &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-3-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; should be preferred, as it is simpler and provides additional features over the pattern above.</source>
          <target state="translated">위는 &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-1-command:fetchcontent_populate&quot;&gt; &lt;code&gt;FetchContent_Populate()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 대한 호출 사이에 사용자 지정 단계가 필요하지 않은 일반적인 패턴입니다 . 대신 &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-2-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt; 을 호출하여 동등한 논리를 얻을 수 있습니다 . 프로젝트의 요구 사항을 충족하는 경우 &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-3-command:fetchcontent_makeavailable&quot;&gt; &lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt; &lt;/a&gt; 이 더 간단하고 위의 패턴에 대한 추가 기능을 제공하므로 선호되어야합니다.</target>
        </trans-unit>
        <trans-unit id="bd81462a423d0b317ded059f1919fbe83bcd3196" translate="yes" xml:space="preserve">
          <source>The above pattern allows other parts of the overall project hierarchy to re-use the same content and ensure that it is only populated once.</source>
          <target state="translated">위의 패턴을 사용하면 전체 프로젝트 계층의 다른 부분에서 동일한 내용을 재사용하고 한 번만 채워질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dde12d6aa67a541a30305365f13c1e091f0670e6" translate="yes" xml:space="preserve">
          <source>The absolute path generated from the corresponding &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; value. If the value is not already an absolute path, an absolute path is constructed typically by prepending the value of the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable. However, there are some &lt;a href=&quot;#special-cases&quot;&gt;special cases&lt;/a&gt; as documented below.</source>
          <target state="translated">해당 &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; 값 에서 생성 된 절대 경로 입니다. 값이 아직 절대 경로가 아닌 경우, 절대 경로는 일반적으로 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; &lt;/a&gt; 변수 의 값 앞에 추가하여 구성됩니다 . 그러나 아래에 설명 된 &lt;a href=&quot;#special-cases&quot;&gt;특별한 경우&lt;/a&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2eb5b247dea0d36df3ea9fea81d7dd162b83ad24" translate="yes" xml:space="preserve">
          <source>The absolute path prefix to the &lt;code&gt;binutils&lt;/code&gt; in the standalone toolchain.</source>
          <target state="translated">독립형 툴체인에서 &lt;code&gt;binutils&lt;/code&gt; 의 절대 경로 접두사 .</target>
        </trans-unit>
        <trans-unit id="d8e45b50e32ed17d478926356dbf7b3a3505b7ac" translate="yes" xml:space="preserve">
          <source>The absolute path prefix to the binutils in the NDK toolchain.</source>
          <target state="translated">NDK 툴체인에서 binutils의 절대 경로 접두사.</target>
        </trans-unit>
        <trans-unit id="55a1278ca91c210cf70ef40c10b5e6905ddf73da" translate="yes" xml:space="preserve">
          <source>The allowed case insensitive values are:</source>
          <target state="translated">허용되는 대소 문자를 구분하지 않는 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd3788421c7ea60194ff0b67a68304eebb16c4a2" translate="yes" xml:space="preserve">
          <source>The allowed values are:</source>
          <target state="translated">허용되는 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="71999eee0f268b75eb0505841e5a92207a8ba94b" translate="yes" xml:space="preserve">
          <source>The approach follows that taken for the &lt;code&gt;autoconf&lt;/code&gt; macro file, &lt;code&gt;acx_blas.m4&lt;/code&gt; (distributed at &lt;a href=&quot;http://ac-archive.sourceforge.net/ac-archive/acx_blas.html&quot;&gt;http://ac-archive.sourceforge.net/ac-archive/acx_blas.html&lt;/a&gt;).</source>
          <target state="translated">접근 방식은 &lt;code&gt;autoconf&lt;/code&gt; 매크로 파일 인 &lt;code&gt;acx_blas.m4&lt;/code&gt; ( &lt;a href=&quot;http://ac-archive.sourceforge.net/ac-archive/acx_blas.html&quot;&gt;http://ac-archive.sourceforge.net/ac-archive/acx_blas.html에&lt;/a&gt; 배포 됨)에 대해 취한 방식을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="f215a32c6d43afc2aa088bf258799132b34faa45" translate="yes" xml:space="preserve">
          <source>The approach follows that taken for the &lt;code&gt;autoconf&lt;/code&gt; macro file, &lt;code&gt;acx_lapack.m4&lt;/code&gt; (distributed at &lt;a href=&quot;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&quot;&gt;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&lt;/a&gt;).</source>
          <target state="translated">접근 방식은 &lt;code&gt;autoconf&lt;/code&gt; 매크로 파일 인 &lt;code&gt;acx_lapack.m4&lt;/code&gt; ( &lt;a href=&quot;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&quot;&gt;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html에&lt;/a&gt; 배포 됨)에 대해 취한 방식을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="3c02a5206104c236bc90a4f37b8a910801dac64b" translate="yes" xml:space="preserve">
          <source>The approach follows that taken for the autoconf macro file, &lt;code&gt;acx_lapack.m4&lt;/code&gt; (distributed at &lt;a href=&quot;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&quot;&gt;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&lt;/a&gt;).</source>
          <target state="translated">autoconf 매크로 파일 인 &lt;code&gt;acx_lapack.m4&lt;/code&gt; ( &lt;a href=&quot;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&quot;&gt;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html에&lt;/a&gt; 배포)에 대한 접근 방식이 이어집니다 .</target>
        </trans-unit>
        <trans-unit id="d592ebdf0fdcb356d56b50d0b34d3d4e7a6390d8" translate="yes" xml:space="preserve">
          <source>The arguments are as follows:</source>
          <target state="translated">인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="629bfd4051da2fa1a32d9993713c3423b906b41a" translate="yes" xml:space="preserve">
          <source>The arguments are:</source>
          <target state="translated">인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6587826fbec09fd721bbad3a5d1cfbac68bef72f" translate="yes" xml:space="preserve">
          <source>The arguments have the following meaning:</source>
          <target state="translated">인수는 다음과 같은 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="781caab9761f563454dc999d1265f762427f44aa" translate="yes" xml:space="preserve">
          <source>The arguments passed in after &lt;code&gt;OPTIONS&lt;/code&gt; are extra command line options to give to nvcc. You can also specify per configuration options by specifying the name of the configuration followed by the options. General options must precede configuration specific options. Not all configurations need to be specified, only the ones provided will be used. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb56cf5337823dd2c8c18539e338a1fcb701d5f0" translate="yes" xml:space="preserve">
          <source>The availability of a &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt; file does not indicate the availability of the binaries themselves.</source>
          <target state="translated">a의 가용성 &lt;code&gt;Find&amp;lt;PackageName&amp;gt;.cmake&lt;/code&gt; 파일은 바이너리 자체의 가용성을 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2cd31442d81b945b2c89344efd2ade561b1c562a" translate="yes" xml:space="preserve">
          <source>The base name corresponds to the target PDB file name (see &lt;code&gt;$&amp;lt;TARGET_PDB_FILE_NAME:tgt&amp;gt;&lt;/code&gt;) without prefix and suffix. For example, if target file name is &lt;code&gt;base.pdb&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">기본 이름은 접 두부 및 접미 부가없는 대상 PDB 파일 이름 ( &lt;code&gt;$&amp;lt;TARGET_PDB_FILE_NAME:tgt&amp;gt;&lt;/code&gt; )에 해당합니다. 예를 들어, 대상 파일 이름이 &lt;code&gt;base.pdb&lt;/code&gt; 인 경우 기본 이름은 &lt;code&gt;base&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="64e4559cf56fc80c30104d79a441c438447d8c16" translate="yes" xml:space="preserve">
          <source>The base name corresponds to the target file name (see &lt;code&gt;$&amp;lt;TARGET_FILE_NAME:tgt&amp;gt;&lt;/code&gt;) without prefix and suffix. For example, if target file name is &lt;code&gt;libbase.so&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">기본 이름은 접두사와 접미사가없는 대상 파일 이름 ( &lt;code&gt;$&amp;lt;TARGET_FILE_NAME:tgt&amp;gt;&lt;/code&gt; )에 해당합니다. 예를 들어, 대상 파일 이름이 &lt;code&gt;libbase.so&lt;/code&gt; 인 경우 기본 이름은 &lt;code&gt;base&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8b70756bf566982d976d9d6ba026479ae9a78b0d" translate="yes" xml:space="preserve">
          <source>The base name corresponds to the target linker file name (see &lt;code&gt;$&amp;lt;TARGET_LINKER_FILE_NAME:tgt&amp;gt;&lt;/code&gt;) without prefix and suffix. For example, if target file name is &lt;code&gt;libbase.a&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">기본 이름은 접두사와 접미사가없는 대상 링커 파일 이름 ( &lt;code&gt;$&amp;lt;TARGET_LINKER_FILE_NAME:tgt&amp;gt;&lt;/code&gt; )에 해당합니다. 예를 들어, 대상 파일 이름이 &lt;code&gt;libbase.a&lt;/code&gt; 인 경우 기본 이름은 &lt;code&gt;base&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d229c1c585ee46a9ba1630353d25b35726a888d9" translate="yes" xml:space="preserve">
          <source>The batch size needs to be selected carefully. If set too high, the size of the combined source files could result in the compiler using excessive memory or hitting other similar limits. In extreme cases, this can even result in build failure. On the other hand, if the batch size is too low, there will be little gain in build performance.</source>
          <target state="translated">배치 크기는 신중하게 선택해야합니다. 너무 높게 설정하면 결합 된 소스 파일의 크기로 인해 컴파일러가 과도한 메모리를 사용하거나 다른 유사한 제한에 도달 할 수 있습니다. 극단적 인 경우 빌드 실패가 발생할 수도 있습니다. 반면에 배치 크기가 너무 작 으면 빌드 성능이 거의 향상되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b7e574a92db0658f60e75cf344ad399d6d53cc0" translate="yes" xml:space="preserve">
          <source>The behavior is to check &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; and present it to the user. The &lt;code&gt;NEW&lt;/code&gt; behavior is to ignore CMAKE_BACKWARDS_COMPATIBILITY completely.</source>
          <target state="translated">동작은 &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; 를 확인 하여 사용자에게 제시하는 것입니다. &lt;code&gt;NEW&lt;/code&gt; 동작은 완전히 CMAKE_BACKWARDS_COMPATIBILITY을 무시하는 것이다.</target>
        </trans-unit>
        <trans-unit id="a17702f794d5306d5ceaf08b456c536585eab5ed" translate="yes" xml:space="preserve">
          <source>The behavior of this command is the same as &lt;a href=&quot;#command:pkg_check_modules&quot; id=&quot;index-1-command:pkg_check_modules&quot;&gt;&lt;code&gt;pkg_check_modules()&lt;/code&gt;&lt;/a&gt;, except that rather than checking for all the specified modules, it searches for just the first successful match.</source>
          <target state="translated">이 명령의 동작은 &lt;a href=&quot;#command:pkg_check_modules&quot; id=&quot;index-1-command:pkg_check_modules&quot;&gt; &lt;code&gt;pkg_check_modules()&lt;/code&gt; &lt;/a&gt; 와 동일합니다. 단, 지정된 모든 모듈을 확인하는 대신 첫 번째 성공적인 일치 만 검색한다는 점이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="891c50aa7877ed7d124cc90761528a1a00962377" translate="yes" xml:space="preserve">
          <source>The boolean value of this property is &lt;code&gt;TRUE&lt;/code&gt; for aliases to &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; created with the &lt;code&gt;GLOBAL&lt;/code&gt; options to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;FALSE&lt;/code&gt; otherwise. It is undefined for targets built within the project.</source>
          <target state="translated">이 속성의 부울 값은 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 대한 &lt;code&gt;GLOBAL&lt;/code&gt; 옵션으로 생성 된 &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED 대상에&lt;/a&gt; 대한 별칭의 경우 &lt;code&gt;TRUE&lt;/code&gt; 이고 , 그렇지 않으면 &lt;code&gt;FALSE&lt;/code&gt; 입니다. 프로젝트 내에서 빌드 된 대상에 대해서는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d52517ff9d3e3ef5658e226bad6a5da37481d95c" translate="yes" xml:space="preserve">
          <source>The boolean value of this property is &lt;code&gt;True&lt;/code&gt; for targets created with the &lt;code&gt;IMPORTED&lt;/code&gt; option to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;. It is &lt;code&gt;False&lt;/code&gt; for targets built within the project.</source>
          <target state="translated">이 속성의 부울 값이 &lt;code&gt;True&lt;/code&gt; 로 만든 대상에 대해 &lt;code&gt;IMPORTED&lt;/code&gt; 에 옵션 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; . 프로젝트 내에 빌드 된 대상에 대해서는 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7583c75b11d3859ac5c66491ea7d0b6a7181dce" translate="yes" xml:space="preserve">
          <source>The boolean value of this property is True for targets created with the &lt;code&gt;IMPORTED&lt;/code&gt;&lt;code&gt;GLOBAL&lt;/code&gt; options to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;. It is always False for targets built within the project.</source>
          <target state="translated">이 속성의 부울 값이 만들어 타겟 True 인 &lt;code&gt;IMPORTED&lt;/code&gt; &lt;code&gt;GLOBAL&lt;/code&gt; 에 옵션 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; . 프로젝트 내에 빌드 된 대상의 경우 항상 False입니다.</target>
        </trans-unit>
        <trans-unit id="d7bdb8af486b07fcd9694ded1df6d2e944ac342f" translate="yes" xml:space="preserve">
          <source>The build configuration (eg, Debug, Release, Coverage).</source>
          <target state="translated">빌드 구성 (예 : 디버그, 릴리스, 적용 범위).</target>
        </trans-unit>
        <trans-unit id="375236c4a5827ae3e52e15ee848174f3f98dd3e3" translate="yes" xml:space="preserve">
          <source>The buildsystem targets created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-3-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-2-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; commands create rules to create binary outputs. The exact output location of the binaries can only be determined at generate-time because it can depend on the build-configuration and the link-language of linked dependencies etc. &lt;code&gt;TARGET_FILE&lt;/code&gt;, &lt;code&gt;TARGET_LINKER_FILE&lt;/code&gt; and related expressions can be used to access the name and location of generated binaries. These expressions do not work for &lt;code&gt;OBJECT&lt;/code&gt; libraries however, as there is no single file generated by such libraries which is relevant to the expressions.</source>
          <target state="translated">&lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-3-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 및 add_ executable &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-2-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 빌드 시스템 대상은 2 진 출력을 작성하는 규칙을 작성합니다. 바이너리의 정확한 출력 위치는 빌드 구성 및 링크 된 종속성의 링크 언어 등에 따라 달라질 수 있기 때문에 생성시에만 판별 할 수 있습니다. &lt;code&gt;TARGET_FILE&lt;/code&gt; , &lt;code&gt;TARGET_LINKER_FILE&lt;/code&gt; 및 관련 표현식을 사용하여 이름 및 위치에 액세스 할 수 있습니다. 생성 된 바이너리. 그러나 이러한 표현식은 표현식 과 관련된 해당 라이브러리에 의해 생성 된 단일 파일이 없으므로 &lt;code&gt;OBJECT&lt;/code&gt; 라이브러리에서는 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dc383691b955d69d62cdaf96b466a3f932824fab" translate="yes" xml:space="preserve">
          <source>The builtin Graphviz support of CMake.</source>
          <target state="translated">CMake의 내장 Graphviz 지원.</target>
        </trans-unit>
        <trans-unit id="b474d07ddb1d2773594d2652d1c45bc229dc8977" translate="yes" xml:space="preserve">
          <source>The builtin graphviz support of CMake.</source>
          <target state="translated">CMake의 내장 graphviz 지원.</target>
        </trans-unit>
        <trans-unit id="fd85af0e65cf06f17955a82c322fc17ae8e013dc" translate="yes" xml:space="preserve">
          <source>The cache entries may also have a type to signify how it should be presented in the user interface. For example, a cache entry of type &lt;code&gt;BOOL&lt;/code&gt; can be edited by a checkbox in a user interface, a &lt;code&gt;STRING&lt;/code&gt; can be edited in a text field, and a &lt;code&gt;FILEPATH&lt;/code&gt; while similar to a &lt;code&gt;STRING&lt;/code&gt; should also provide a way to locate filesystem paths using a file dialog. An entry of type &lt;code&gt;STRING&lt;/code&gt; may provide a restricted list of allowed values which are then provided in a drop-down menu in the &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-8-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; user interface (see the &lt;a href=&quot;../../prop_cache/strings#prop_cache:STRINGS&quot; id=&quot;index-0-prop_cache:STRINGS&quot;&gt;&lt;code&gt;STRINGS&lt;/code&gt;&lt;/a&gt; cache property).</source>
          <target state="translated">캐시 항목에는 사용자 인터페이스에 표시되는 방법을 나타내는 유형이있을 수도 있습니다. 예를 들어 &lt;code&gt;BOOL&lt;/code&gt; 유형의 캐시 항목은 사용자 인터페이스의 확인란 으로 편집 할 수 있고 &lt;code&gt;STRING&lt;/code&gt; 은 텍스트 필드에서 편집 할 수 있으며 &lt;code&gt;FILEPATH&lt;/code&gt; 는 &lt;code&gt;STRING&lt;/code&gt; 과 유사하지만 파일을 사용하여 파일 시스템 경로를 찾는 방법을 제공해야합니다. 대화. &lt;code&gt;STRING&lt;/code&gt; 유형의 항목은 &lt;a href=&quot;../../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-8-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 사용자 인터페이스 의 드롭 다운 메뉴에 제공되는 제한된 허용 값 목록을 제공 할 수 있습니다 ( &lt;a href=&quot;../../prop_cache/strings#prop_cache:STRINGS&quot; id=&quot;index-0-prop_cache:STRINGS&quot;&gt; &lt;code&gt;STRINGS&lt;/code&gt; &lt;/a&gt; 캐시 속성 참조 ).</target>
        </trans-unit>
        <trans-unit id="a71327c3fa10b4328fc5fb6abfa6393125a0789d" translate="yes" xml:space="preserve">
          <source>The call to &lt;a href=&quot;../command/return#command:return&quot; id=&quot;index-1-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; makes this macro unsuitable to call from &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;Find Modules&lt;/a&gt;.</source>
          <target state="translated">에 대한 호출 &lt;a href=&quot;../command/return#command:return&quot; id=&quot;index-1-command:return&quot;&gt; &lt;code&gt;return()&lt;/code&gt; &lt;/a&gt; 에서 호출이 매크로 적합하게 &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;찾기 모듈&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8bfe85589b1c9ab8c678baa74a858e4977169942" translate="yes" xml:space="preserve">
          <source>The case for a global symbol with an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="translated">밑줄이있는 글로벌 기호의 경우 &lt;code&gt;UPPER&lt;/code&gt; 또는 &lt;code&gt;LOWER&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="22f1a4856af4f913441176939ee6a7b1370c2d76" translate="yes" xml:space="preserve">
          <source>The case for a global symbol without an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="translated">밑줄이없는 전역 기호의 경우 &lt;code&gt;UPPER&lt;/code&gt; 또는 &lt;code&gt;LOWER&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5765888348e288000ebf16af7039052a7d0e3e08" translate="yes" xml:space="preserve">
          <source>The case for a module symbol with an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="translated">밑줄이있는 모듈 기호의 경우 &lt;code&gt;UPPER&lt;/code&gt; 또는 &lt;code&gt;LOWER&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="400ed6502151ea040f4e6f1e4a5036ea3a7485bd" translate="yes" xml:space="preserve">
          <source>The case for a module symbol without an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="translated">밑줄이없는 모듈 기호의 경우 &lt;code&gt;UPPER&lt;/code&gt; 또는 &lt;code&gt;LOWER&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4ba522c288be892b627f9565120aa74fcfba7734" translate="yes" xml:space="preserve">
          <source>The check is only performed once, with the result cached in the variable named by &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt;. Every subsequent CMake run will re-use this cached value rather than performing the check again, even if the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; changes. In order to force the check to be re-evaluated, the variable named by &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; must be manually removed from the cache.</source>
          <target state="translated">검사는 한 번만 수행되며 결과는 &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; 로 명명 된 변수에 캐시됩니다 . 이후의 모든 CMake 실행은 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 가 변경 되더라도 다시 검사를 수행하지 않고이 캐시 된 값을 재사용 합니다. 검사를 다시 평가하려면 &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; 로 명명 된 변수를 캐시에서 수동으로 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="16de8b33db3f845ca927858f50166796a80ce03c" translate="yes" xml:space="preserve">
          <source>The cmake server may sent signals with the following names:</source>
          <target state="translated">cmake 서버는 다음 이름으로 신호를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fadf6a16d1f695281c424c273a862161064229e3" translate="yes" xml:space="preserve">
          <source>The cmake version suffix string.</source>
          <target state="translated">cmake 버전 접미사 문자열.</target>
        </trans-unit>
        <trans-unit id="b44565daf2fbbce319a22d8de63a56724dd0c138" translate="yes" xml:space="preserve">
          <source>The cmake_add_component command describes an installation component, which the user can opt to install or remove as part of the graphical installation process. compname is the name of the component, as provided to the COMPONENT argument of one or more CMake INSTALL commands.</source>
          <target state="translated">cmake_add_component 명령은 설치 구성 요소를 설명하며, 사용자는 그래픽 설치 프로세스의 일부로 설치 또는 제거하도록 선택할 수 있습니다. compname은 하나 이상의 CMake INSTALL 명령의 COMPONENT 인수에 제공된 구성 요소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="81e7ac32fdd25587ff25613c66203e03483f1d56" translate="yes" xml:space="preserve">
          <source>The combined &lt;code&gt;coberturamerge.ser&lt;/code&gt; file is then used to generate the XML report using the &lt;code&gt;cobertura-report&lt;/code&gt; program. The call to the cobertura-report program requires some named arguments.</source>
          <target state="translated">그런 다음 결합 된 &lt;code&gt;coberturamerge.ser&lt;/code&gt; 파일을 사용하여 &lt;code&gt;cobertura-report&lt;/code&gt; 프로그램을 사용하여 XML 보고서를 생성합니다 . cobertura-report 프로그램을 호출하려면 일부 명명 된 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8c011ea0fbb4ce5de358393c8893a5f253b013a1" translate="yes" xml:space="preserve">
          <source>The command &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; operates without an explicit mode when the reduced signature is used without the &lt;code&gt;MODULE&lt;/code&gt; option. In this case, by default, CMake first tries Module mode by searching for a &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; module. If it fails, CMake then searches for the package using Config mode.</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 은 축소 된 서명이 &lt;code&gt;MODULE&lt;/code&gt; 옵션 없이 사용될 때 명시 적 모드없이 작동합니다 . 이 경우 기본적으로 CMake는 먼저 &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; 모듈 을 검색하여 모듈 모드를 시도 합니다. 실패하면 CMake는 구성 모드를 사용하여 패키지를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="4e67666e6320da121546878de2adba2c1db2f1e6" translate="yes" xml:space="preserve">
          <source>The command &lt;a href=&quot;target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; adds target-specific options.</source>
          <target state="translated">&lt;a href=&quot;target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt; &lt;code&gt;target_compile_options()&lt;/code&gt; &lt;/a&gt; 명령은 대상별 옵션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b8fc3f0ba73afff9daeb4d42d5f47e3a27d7c13c" translate="yes" xml:space="preserve">
          <source>The command adds header files to the &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;../prop_tgt/interface_precompile_headers#prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot;&gt;&lt;code&gt;INTERFACE_PRECOMPILE_HEADERS&lt;/code&gt;&lt;/a&gt; target properties of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. The named &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;.</source>
          <target state="translated">이 명령 은 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;../prop_tgt/precompile_headers#prop_tgt:PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;../prop_tgt/interface_precompile_headers#prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot; id=&quot;index-0-prop_tgt:INTERFACE_PRECOMPILE_HEADERS&quot;&gt; &lt;code&gt;INTERFACE_PRECOMPILE_HEADERS&lt;/code&gt; &lt;/a&gt; 대상 속성에 헤더 파일을 추가합니다 . 명명 된 &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; 은 &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 와 같은 명령으로 생성 되어야하며 &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target이&lt;/a&gt; 아니어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d01f21dafe2e09253edf745bfca0ba0b02a54f5" translate="yes" xml:space="preserve">
          <source>The command also supports a second signature which can be used to specify that one target re-uses a precompiled header file artifact from another target instead of generating its own:</source>
          <target state="translated">이 명령은 또한 하나의 대상이 자체를 생성하는 대신 다른 대상에서 미리 컴파일 된 헤더 파일 아티팩트를 재사용하도록 지정하는 데 사용할 수있는 두 번째 서명을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="53f1e52f2ecf491a63ffb6847e03946df6149614" translate="yes" xml:space="preserve">
          <source>The command and arguments are optional and if not specified an empty target will be created.</source>
          <target state="translated">명령과 인수는 선택 사항이며 지정하지 않으면 빈 대상이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6a044b6acf59b83d6bda50ada31802c6d18f0356" translate="yes" xml:space="preserve">
          <source>The command being run will be echo&amp;rsquo;ed to &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; being set to one of &lt;code&gt;STDERR&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;. See the &lt;a href=&quot;../variable/cmake_execute_process_command_echo#variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot; id=&quot;index-0-variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot;&gt;&lt;code&gt;CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&lt;/code&gt;&lt;/a&gt; variable for a way to control the default behavior when this option is not present.</source>
          <target state="translated">명령 존재 실행이에 echo'ed됩니다 &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; 중 하나로 설정되는 &lt;code&gt;STDERR&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; 또는 &lt;code&gt;NONE&lt;/code&gt; . 이 옵션이 없을 때 기본 동작을 제어하는 ​​방법 은 &lt;a href=&quot;../variable/cmake_execute_process_command_echo#variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot; id=&quot;index-0-variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot;&gt; &lt;code&gt;CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&lt;/code&gt; &lt;/a&gt; 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a44e5fe32602545a5b1b501b609302bd008d2e3d" translate="yes" xml:space="preserve">
          <source>The command being run will be echo'ed to &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; being set to one of &lt;code&gt;STDERR&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;. See the &lt;a href=&quot;../variable/cmake_execute_process_command_echo#variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot; id=&quot;index-0-variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot;&gt;&lt;code&gt;CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&lt;/code&gt;&lt;/a&gt; variable for a way to control the default behavior when this option is not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01a6cdd91c6d9612ceb8b79d292cfc0749de7ae" translate="yes" xml:space="preserve">
          <source>The command has two modes by which it searches for packages: &quot;Module&quot; mode and &quot;Config&quot; mode. The above signature selects Module mode. If no module is found the command falls back to Config mode, described below. This fall back is disabled if the &lt;code&gt;MODULE&lt;/code&gt; option is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f684c20e57db9848582a4c3cc3a0affd8ceb33a4" translate="yes" xml:space="preserve">
          <source>The command has two modes by which it searches for packages: &amp;ldquo;Module&amp;rdquo; mode and &amp;ldquo;Config&amp;rdquo; mode. The above signature selects Module mode. If no module is found the command falls back to Config mode, described below. This fall back is disabled if the &lt;code&gt;MODULE&lt;/code&gt; option is given.</source>
          <target state="translated">이 명령에는 패키지를 검색하는 두 가지 모드 인 &quot;모듈&quot;모드와 &quot;구성&quot;모드가 있습니다. 위의 서명은 모듈 모드를 선택합니다. 모듈을 찾지 못하면 명령이 아래 설명 된대로 구성 모드로 돌아갑니다. &lt;code&gt;MODULE&lt;/code&gt; 옵션이 제공 되면이 폴 백이 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e19e0be928415f6eed8279cc93859b810cdb21d7" translate="yes" xml:space="preserve">
          <source>The command line to be executed by this custom step (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-9-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). This option can be repeated multiple times to specify multiple commands to be executed in order.</source>
          <target state="translated">이 사용자 정의 단계에서 실행할 명령 행 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-9-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 이 옵션은 여러 번 반복하여 실행할 여러 명령을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b89d0b7eb5c72c00c1f84e2ecab193c7fd730a50" translate="yes" xml:space="preserve">
          <source>The command line, comment, working directory and byproducts of every standard and custom step are processed to replace the tokens &lt;code&gt;&amp;lt;SOURCE_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;SOURCE_SUBDIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;BINARY_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;TMP_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;DOWNLOAD_DIR&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; with their corresponding property values defined in the original call to &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 표준 및 사용자 정의 단계의 명령 행, 주석, 작업 디렉토리 및 부산물은 토큰 &lt;code&gt;&amp;lt;SOURCE_DIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;SOURCE_SUBDIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;BINARY_DIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;TMP_DIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;DOWNLOAD_DIR&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; 을 토큰으로 대체하도록 처리됩니다. 원래 호에 정의 된 속성 값에 대응 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63f7c16171bc7027632278e7acdd64a0417f3b1e" translate="yes" xml:space="preserve">
          <source>The command line, comment, working directory and byproducts of every standard and custom step are processed to replace the tokens &lt;code&gt;&amp;lt;SOURCE_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;SOURCE_SUBDIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;BINARY_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;TMP_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;DOWNLOAD_DIR&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; with their corresponding property values defined in the original call to &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명령 행, 주석, 작업 디렉토리 및 모든 표준 및 사용자 정의 단계의 부산물은 토큰 교체 처리되는 &lt;code&gt;&amp;lt;SOURCE_DIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;SOURCE_SUBDIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;BINARY_DIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;TMP_DIR&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;DOWNLOAD_DIR&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; 을 자신의 &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt; &lt;code&gt;ExternalProject_Add()&lt;/code&gt; &lt;/a&gt; 에 대한 원래 호출에서 정의 된 해당 속성 값 .</target>
        </trans-unit>
        <trans-unit id="106ba29012a42c83bbce04a2a925e18d413efed7" translate="yes" xml:space="preserve">
          <source>The command to run as the test step with the &lt;code&gt;--build-and-test&lt;/code&gt; option. All arguments following this keyword will be assumed to be part of the test command line, so it must be the last option given.</source>
          <target state="translated">&lt;code&gt;--build-and-test&lt;/code&gt; 옵션 을 사용하여 테스트 단계로 실행할 명령 입니다. 이 키워드 다음에 나오는 모든 인수는 테스트 명령 줄의 일부인 것으로 가정되므로 마지막으로 주어진 옵션이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c2b1d2cf3eea55cc1a0bc4e923737f2adf25c2f9" translate="yes" xml:space="preserve">
          <source>The command will apply only to targets created after it is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca2739db5c0f27f5c697364e71107c1e9de68b1" translate="yes" xml:space="preserve">
          <source>The command will be given direct access to the terminal if possible. With the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, this places the command in the &lt;code&gt;console&lt;/code&gt;&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-2-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;pool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명령은 가능한 경우 터미널에 직접 액세스 할 수 있습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기를 사용하면 명령이 &lt;code&gt;console&lt;/code&gt; &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-2-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;pool&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="3911f9f1077c2f435bab1b76e57f2c5aa4584835" translate="yes" xml:space="preserve">
          <source>The command will be given direct access to the terminal if possible. With the &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, this places the command in the &lt;code&gt;console&lt;/code&gt;&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-2-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;pool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명령은 가능한 경우 터미널에 직접 액세스 할 수 있습니다. &lt;a href=&quot;https://cmake.org/cmake/help/v3.19/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt; &lt;code&gt;Ninja&lt;/code&gt; &lt;/a&gt; 생성기를 사용하면 &lt;code&gt;console&lt;/code&gt; &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-2-prop_gbl:JOB_POOLS&quot;&gt; &lt;code&gt;pool&lt;/code&gt; &lt;/a&gt; 명령이 배치 됩니다 .</target>
        </trans-unit>
        <trans-unit id="2ea8d740cf56285dd4917fb423a99bfffa468de2" translate="yes" xml:space="preserve">
          <source>The command will be given direct access to the terminal if possible. With the &lt;a href=&quot;https://cmake.org/cmake/help/v3.20/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, this places the command in the &lt;code&gt;console&lt;/code&gt;&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-2-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;pool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17038206e0e462cfb36a5866860938c1d3414f3" translate="yes" xml:space="preserve">
          <source>The command will be used to run &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; generated executables, which avoids manual population of the &lt;code&gt;TryRunResults.cmake&lt;/code&gt; file.</source>
          <target state="translated">이 명령은 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 생성 실행 파일 을 실행하는 데 사용되며 &lt;code&gt;TryRunResults.cmake&lt;/code&gt; 파일 의 수동 채우기를 피 합니다.</target>
        </trans-unit>
        <trans-unit id="1d32dc7628de59a311c57fd3bcacb4eef43479c9" translate="yes" xml:space="preserve">
          <source>The command-line executable.</source>
          <target state="translated">명령 줄 실행 파일</target>
        </trans-unit>
        <trans-unit id="1e8fea870371cb5a59369079bc90a4bbdf19545a" translate="yes" xml:space="preserve">
          <source>The commands &lt;a href=&quot;break#command:break&quot; id=&quot;index-0-command:break&quot;&gt;&lt;code&gt;break()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;continue#command:continue&quot; id=&quot;index-0-command:continue&quot;&gt;&lt;code&gt;continue()&lt;/code&gt;&lt;/a&gt; provide means to escape from the normal control flow.</source>
          <target state="translated">&lt;a href=&quot;break#command:break&quot; id=&quot;index-0-command:break&quot;&gt; &lt;code&gt;break()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;continue#command:continue&quot; id=&quot;index-0-command:continue&quot;&gt; &lt;code&gt;continue()&lt;/code&gt; &lt;/a&gt; 명령 은 정상적인 제어 흐름에서 벗어날 수있는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b3c8d8632067c2a9deb1338b4d7ad8f13cae2d1f" translate="yes" xml:space="preserve">
          <source>The commands:</source>
          <target state="translated">명령 :</target>
        </trans-unit>
        <trans-unit id="6697c980cde77e16328361b7f5845f7aa980ed23" translate="yes" xml:space="preserve">
          <source>The compile definitions to use when compiling code that uses the module. This really shouldn't include options such as &lt;code&gt;-DHAS_JPEG&lt;/code&gt; that a client source-code file uses to decide whether to &lt;code&gt;#include &amp;lt;jpeg.h&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b18422b9a23fc09d9dda026321511a15f4979bc" translate="yes" xml:space="preserve">
          <source>The compile language of source files when evaluating compile options. See &lt;a href=&quot;#boolean-compile-language-generator-expression&quot;&gt;the related boolean expression&lt;/a&gt;&lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:language&amp;gt;&lt;/code&gt; for notes about the portability of this generator expression.</source>
          <target state="translated">컴파일 옵션을 평가할 때 소스 파일의 컴파일 언어입니다. 이 생성기 표현식의 이식성에 대한 참고 사항은 &lt;a href=&quot;#boolean-compile-language-generator-expression&quot;&gt;관련 부울 표현식 &lt;/a&gt; &lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:language&amp;gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e1e4df0fe20d819a076737bab898f4b6c8410e0" translate="yes" xml:space="preserve">
          <source>The compiler flag can only be used with the imported target. Use of both the imported target as well as this switch is highly recommended for new code.</source>
          <target state="translated">컴파일러 플래그는 가져온 대상에서만 사용할 수 있습니다. 가져온 코드와이 스위치를 모두 사용하여 새 코드를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4167aa3c1e68340ac9712d3296db8c476d158c73" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;a href=&quot;pdb_name#prop_tgt:PDB_NAME&quot; id=&quot;index-0-prop_tgt:PDB_NAME&quot;&gt;&lt;code&gt;PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">컴파일러 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그에 의해 지정되며 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그에 지정된 링커 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 후자를 지정 하려면 &lt;a href=&quot;pdb_name#prop_tgt:PDB_NAME&quot; id=&quot;index-0-prop_tgt:PDB_NAME&quot;&gt; &lt;code&gt;PDB_NAME&lt;/code&gt; &lt;/a&gt; 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="41b2375139b5cb1ebd70b280b4ce317f58ae3a99" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;a href=&quot;pdb_name#prop_tgt:PDB_NAME&quot; id=&quot;index-1-prop_tgt:PDB_NAME&quot;&gt;&lt;code&gt;PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">컴파일러 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정되며 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정된 링커 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;a href=&quot;pdb_name#prop_tgt:PDB_NAME&quot; id=&quot;index-1-prop_tgt:PDB_NAME&quot;&gt; &lt;code&gt;PDB_NAME&lt;/code&gt; 의&lt;/a&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="d4d5a4271f58c2be08b002af9ed0c1c1799cd4f8" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;a href=&quot;pdb_output_directory#prop_tgt:PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">컴파일러 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그에 의해 지정되며 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그에 지정된 링커 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 후자를 지정 하려면 &lt;a href=&quot;pdb_output_directory#prop_tgt:PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:PDB_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;PDB_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e99113a252108f7d737d3b7340ebe198b3c3f6b9" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;a href=&quot;pdb_output_directory#prop_tgt:PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="translated">컴파일러 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정되며 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정된 링커 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;a href=&quot;pdb_output_directory#prop_tgt:PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:PDB_OUTPUT_DIRECTORY&quot;&gt; &lt;code&gt;PDB_OUTPUT_DIRECTORY&lt;/code&gt; &lt;/a&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="6ec571dc7a527a79653c5d2bcd5f14a671c291df" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;code&gt;PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="translated">컴파일러 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정되며 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정된 링커 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;code&gt;PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="489bf4a32a616709760cfb71b4c7db10c5872bc2" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;code&gt;PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="translated">컴파일러 생성 프로그램 데이터베이스 파일은 &lt;code&gt;/Fd&lt;/code&gt; 컴파일러 플래그로 지정되며 &lt;code&gt;/pdb&lt;/code&gt; 링커 플래그로 지정된 링커 생성 프로그램 데이터베이스 파일과 동일하지 않습니다 . 사용 &lt;code&gt;PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 후자를 지정하는 속성을.</target>
        </trans-unit>
        <trans-unit id="974fa72f1937fb36d8dd51c18298747a76aeb217" translate="yes" xml:space="preserve">
          <source>The complete Config mode command signature is</source>
          <target state="translated">전체 구성 모드 명령 서명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c49a1372f9c4566b7d9ccadcb56c151e14a7d308" translate="yes" xml:space="preserve">
          <source>The compression level can be specified with the &lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; option. The &lt;code&gt;&amp;lt;compression-level&amp;gt;&lt;/code&gt; should be between 0-9, with the default being 0. The &lt;code&gt;COMPRESSION&lt;/code&gt; option must be present when &lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; is given.</source>
          <target state="translated">압축 수준은 &lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; 옵션 으로 지정할 수 있습니다 . &lt;code&gt;&amp;lt;compression-level&amp;gt;&lt;/code&gt; 0으로되는 기본값은 0-9 사이 여야 &lt;code&gt;COMPRESSION&lt;/code&gt; 시 있어야 옵션 &lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; 이 주어진다.</target>
        </trans-unit>
        <trans-unit id="89ebfbbcbb63a4576a087f00f4e95b9c9a98c12c" translate="yes" xml:space="preserve">
          <source>The concept of a fixture is different to that of a resource specified by &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt;, but they may be used together. A fixture defines a set of tests which share setup and cleanup requirements, whereas a resource lock has the effect of ensuring a particular set of tests do not run in parallel. Some situations may need both, such as setting up a database, serialising test access to that database and deleting the database again at the end. For such cases, tests would populate both &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; and &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-1-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; to combine the two behaviours. Names used for &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-2-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; have no relationship with names of fixtures, so note that a resource lock does not imply a fixture and vice versa.</source>
          <target state="translated">조명기의 개념은 &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt; 에 의해 지정된 리소스의 개념과 다르지만 함께 사용될 수 있습니다. 고정 기는 설정 및 정리 요구 사항을 공유하는 테스트 세트를 정의하는 반면, 자원 잠금은 특정 테스트 세트가 병렬로 실행되지 않도록하는 효과가 있습니다. 데이터베이스 설정, 해당 데이터베이스에 대한 테스트 액세스 직렬화 및 마지막에 데이터베이스를 다시 삭제하는 등의 상황이 모두 필요할 수 있습니다. 이러한 경우 테스트는 &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; 및 &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-1-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; &lt;/a&gt; 을 모두 채우고 두 동작을 결합합니다. &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-2-prop_test:RESOURCE_LOCK&quot;&gt; &lt;code&gt;RESOURCE_LOCK&lt;/code&gt; 에&lt;/a&gt; 사용 된 이름은 조명기 이름과 관련 이 없으므로 리소스 잠금은 조명기를 의미하지 않으며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="74d061907d39cf85b2677689a058f63660365ed8" translate="yes" xml:space="preserve">
          <source>The conditions inside the parenthesis are evaluated first and then the remaining condition is evaluated as in the other examples. Where there are nested parenthesis the innermost are evaluated as part of evaluating the condition that contains them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ca85a34c431bb395f814244cfe7696751f12c2" translate="yes" xml:space="preserve">
          <source>The conditions inside the parenthesis are evaluated first and then the remaining condition is evaluated as in the previous examples. Where there are nested parenthesis the innermost are evaluated as part of evaluating the condition that contains them.</source>
          <target state="translated">괄호 안의 조건을 먼저 평가 한 다음 나머지 조건을 이전 예와 같이 평가합니다. 중첩 된 괄호가있는 경우 가장 안쪽에 괄호가 포함 된 조건을 평가하는 과정에서 가장 안쪽에 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="2285b0dd53ffc126576fa3aecb13b04a0e39e90b" translate="yes" xml:space="preserve">
          <source>The config files can usually be found in a directory whose name matches the pattern &lt;code&gt;lib/cmake/&amp;lt;PackageName&amp;gt;&lt;/code&gt;, though they may be in other locations instead. The &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; corresponds to use in CMake code with the &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command such as &lt;code&gt;find_package(PackageName REQUIRED)&lt;/code&gt;.</source>
          <target state="translated">구성 파일은 일반적으로 이름이 &lt;code&gt;lib/cmake/&amp;lt;PackageName&amp;gt;&lt;/code&gt; 패턴과 일치하는 디렉토리에서 찾을 수 있지만 대신 다른 위치에있을 수 있습니다. &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 상당으로 CMake 코드에서 사용할 &lt;a href=&quot;../../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 과 같은 명령 &lt;code&gt;find_package(PackageName REQUIRED)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cd9da076442032efff634d1221e290ae606bd20" translate="yes" xml:space="preserve">
          <source>The configure and test steps are optional. The arguments to this command line are the source and binary directories. The &lt;code&gt;--build-generator&lt;/code&gt; option &lt;em&gt;must&lt;/em&gt; be provided to use &lt;code&gt;--build-and-test&lt;/code&gt;. If &lt;code&gt;--test-command&lt;/code&gt; is specified then that will be run after the build is complete. Other options that affect this mode include:</source>
          <target state="translated">구성 및 테스트 단계는 선택 사항입니다. 이 명령 행의 인수는 소스 및 2 진 디렉토리입니다. &lt;code&gt;--build-generator&lt;/code&gt; 옵션이 &lt;em&gt;있어야&lt;/em&gt; 사용하기 위해 제공 될 수 &lt;code&gt;--build-and-test&lt;/code&gt; . 경우 &lt;code&gt;--test-command&lt;/code&gt; 실행됩니다 다음 지정된 빌드가 완료된 후. 이 모드에 영향을주는 다른 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dee116751300e5f72ebdc8e1eaf0b7d36ed6774e" translate="yes" xml:space="preserve">
          <source>The configure step is run after the download and update steps. By default, the external project is assumed to be a CMake project, but this can be overridden if required.</source>
          <target state="translated">구성 단계는 다운로드 및 업데이트 단계 후에 실행됩니다. 기본적으로 외부 프로젝트는 CMake 프로젝트 인 것으로 가정되지만 필요한 경우이를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7781442d9f02a390873828cb9a421626d0a5fb3" translate="yes" xml:space="preserve">
          <source>The content &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; can be any string without spaces, but good practice would be to use only letters, numbers and underscores. The name will be treated case-insensitively and it should be obvious for the content it represents, often being the name of the child project or the value given to its top level &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command (if it is a CMake project). For well-known public projects, the name should generally be the official name of the project. Choosing an unusual name makes it unlikely that other projects needing that same content will use the same name, leading to the content being populated multiple times.</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 컨텐츠 는 공백이없는 문자열 일 수 있지만 문자, 숫자 및 밑줄 만 사용하는 것이 좋습니다. 이름은 대소 문자를 구분하지 않고 처리되며, 하위 프로젝트의 이름이거나 최상위 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령에 지정된 값 (CMake 프로젝트 인 경우 ) 인 컨텐츠가 명확해야합니다 . 잘 알려진 공개 프로젝트의 경우 이름은 일반적으로 프로젝트의 공식 이름이어야합니다. 특이한 이름을 선택하면 동일한 컨텐츠를 필요로하는 다른 프로젝트가 동일한 이름을 사용하여 컨텐츠가 여러 번 채워질 가능성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="80f182a22bf3a56b07aa921fb6413e1ebc663932" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;out&lt;/code&gt; will be: &lt;code&gt;/path/to/cc;-c;main.c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; 의 내용 은 다음과 같습니다. &lt;code&gt;/path/to/cc;-c;main.c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1636bf8ae4772b3fbbbae5db019e2e6b49e7078" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-2-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties are used appropriately when compiling the source files of a binary target.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-2-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 대상 특성 의 컨텐츠 는 2 진 대상의 소스 파일을 컴파일 할 때 적절하게 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0e85f6faebdd3d135fa5bdc48c7b2f5f1169d4e6" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties are &lt;em&gt;Usage Requirements&lt;/em&gt; &amp;ndash; they specify content which consumers must use to correctly compile and link with the target they appear on. For any binary target, the contents of each &lt;code&gt;INTERFACE_&lt;/code&gt; property on each target specified in a &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command is consumed:</source>
          <target state="translated">의 내용 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt; &lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt; 는&lt;/a&gt; 속성이 대상 &lt;em&gt;사용 요구 사항&lt;/em&gt; - 그들은 소비자가 제대로 그들이에 나타나는 대상으로 컴파일하고 링크하는 데 사용해야하는 내용을 지정합니다. 이진 대상의 경우 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령에 지정된 각 대상 의 각 &lt;code&gt;INTERFACE_&lt;/code&gt; 속성 내용 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c02d5d3e46a236b15faa21c498ae30010d7ee5e5" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties are &lt;em&gt;Usage Requirements&lt;/em&gt; -- they specify content which consumers must use to correctly compile and link with the target they appear on. For any binary target, the contents of each &lt;code&gt;INTERFACE_&lt;/code&gt; property on each target specified in a &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command is consumed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14ab16c03e3d454c0ab39aeeaea9d0c5ed590a7" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property of imported targets are treated as &lt;code&gt;SYSTEM&lt;/code&gt; includes by default. If this property is enabled on a target, compilation of sources in that target will not treat the contents of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; of consumed imported targets as system includes.</source>
          <target state="translated">가져온 대상 의 &lt;a href=&quot;interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 대상 특성의 컨텐츠는 기본적 으로 &lt;code&gt;SYSTEM&lt;/code&gt; 포함으로 처리됩니다 . 대상에서이 특성을 사용하는 경우 해당 대상에서 소스를 컴파일하면 소비 된 임포트 된 대상 의 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 의 컨텐츠가 시스템에 포함 된대로 처리되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f2440a924458aa6c3c714b651cc84bce3eaed19c" translate="yes" xml:space="preserve">
          <source>The contents of the generated &lt;code&gt;Doxyfile&lt;/code&gt; can be customized by setting CMake variables before calling &lt;code&gt;doxygen_add_docs()&lt;/code&gt;. Any variable with a name of the form &lt;code&gt;DOXYGEN_&amp;lt;tag&amp;gt;&lt;/code&gt; will have its value substituted for the corresponding &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; configuration option in the &lt;code&gt;Doxyfile&lt;/code&gt;. See the &lt;a href=&quot;http://www.doxygen.org/manual/config.html&quot;&gt;Doxygen documentation&lt;/a&gt; for the full list of supported configuration options.</source>
          <target state="translated">생성 된 &lt;code&gt;Doxyfile&lt;/code&gt; 의 내용은 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 를 호출하기 전에 CMake 변수를 설정하여 사용자 정의 할 수 있습니다 . &lt;code&gt;DOXYGEN_&amp;lt;tag&amp;gt;&lt;/code&gt; 형식의 이름을 가진 모든 변수 는 &lt;code&gt;Doxyfile&lt;/code&gt; 의 해당 &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; 구성 옵션으로 값을 대체합니다 . 지원되는 구성 옵션의 전체 목록은 &lt;a href=&quot;http://www.doxygen.org/manual/config.html&quot;&gt;Doxygen 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff4101743d99295c4af0757b17951225a87e2e4a" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property may be set to specify per-configuration definitions. Generator expressions should be preferred instead of setting the alternative property.</source>
          <target state="translated">해당 &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 속성은 구성 별 정의를 지정하도록 설정 될 수 있습니다. 대체 특성을 설정하는 대신 생성기 표현식을 선호해야합니다.</target>
        </trans-unit>
        <trans-unit id="76a4fddbb6e12286f92f214340b70b1daea18de7" translate="yes" xml:space="preserve">
          <source>The corresponding changes to the source code are fairly straightforward. First, in &lt;code&gt;tutorial.cxx&lt;/code&gt;, include the &lt;code&gt;MathFunctions.h&lt;/code&gt; header if we need it:</source>
          <target state="translated">소스 코드에 대한 해당 변경 사항은 매우 간단합니다. 먼저 &lt;code&gt;tutorial.cxx&lt;/code&gt; 에 필요한 경우 &lt;code&gt;MathFunctions.h&lt;/code&gt; 헤더를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="810543d7411dc5041bcec865d1562e185945c53f" translate="yes" xml:space="preserve">
          <source>The cpack_add_component_group describes a group of installation components, which will be placed together within the listing of options. Typically, component groups allow the user to select/deselect all of the components within a single group via a single group-level option. Use component groups to reduce the complexity of installers with many options. groupname is an arbitrary name used to identify the group in the GROUP argument of the cpack_add_component command, which is used to place a component in a group. The name of the group must not conflict with the name of any component.</source>
          <target state="translated">cpack_add_component_group은 설치 구성 요소 그룹을 설명하며 옵션 구성 요소 내에 함께 배치됩니다. 일반적으로 구성 요소 그룹을 통해 사용자는 단일 그룹 수준 옵션을 통해 단일 그룹 내의 모든 구성 요소를 선택 / 선택 해제 할 수 있습니다. 구성 요소 그룹을 사용하면 다양한 옵션으로 설치 프로그램의 복잡성을 줄일 수 있습니다. groupname은 cpack_add_component 명령의 GROUP 인수에서 그룹을 식별하는 데 사용되는 임의의 이름으로, 그룹에 구성 요소를 배치하는 데 사용됩니다. 그룹 이름은 구성 요소 이름과 충돌하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="eaea45f424c72e1846c9bf7f49075eac10bfc78b" translate="yes" xml:space="preserve">
          <source>The cpack_add_install_type command identifies a set of preselected components that represents a common use case for an application. For example, a &quot;Developer&quot; install type might include an application along with its header and library files, while an &quot;End user&quot; install type might just include the application's executable. Each component identifies itself with one or more install types via the INSTALL_TYPES argument to cpack_add_component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59d3ef1e7d7cf5895b7b8110db3a50f08e59523" translate="yes" xml:space="preserve">
          <source>The cpack_add_install_type command identifies a set of preselected components that represents a common use case for an application. For example, a &amp;ldquo;Developer&amp;rdquo; install type might include an application along with its header and library files, while an &amp;ldquo;End user&amp;rdquo; install type might just include the application&amp;rsquo;s executable. Each component identifies itself with one or more install types via the INSTALL_TYPES argument to cpack_add_component.</source>
          <target state="translated">cpack_add_install_type 명령은 응용 프로그램의 일반적인 사용 사례를 나타내는 사전 선택된 구성 요소 세트를 식별합니다. 예를 들어, &quot;개발자&quot;설치 유형에는 헤더 및 라이브러리 파일과 함께 응용 프로그램이 포함될 수 있으며 &quot;최종 사용자&quot;설치 유형에는 응용 프로그램의 실행 파일 만 포함될 수 있습니다. 각 구성 요소는 INSTALL_TYPES 인수를 통해 cpack_add_component에 대한 하나 이상의 설치 유형으로 자체를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="2ff7ebc8d79fa169f29443de617aad3f1dd6a246" translate="yes" xml:space="preserve">
          <source>The cpack_configure_downloads command configures installation-time downloads of selected components. For each downloadable component, CPack will create an archive containing the contents of that component, which should be uploaded to the given site. When the user selects that component for installation, the installer will download and extract the component in place. This feature is useful for creating small installers that only download the requested components, saving bandwidth. Additionally, the installers are small enough that they will be installed as part of the normal installation process, and the &quot;Change&quot; button in Windows Add/Remove Programs control panel will allow one to add or remove parts of the application after the original installation. On Windows, the downloaded-components functionality requires the ZipDLL plug-in for NSIS, available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b693fddfa731eab3034ab3102c99e5a73cf43a4" translate="yes" xml:space="preserve">
          <source>The cpack_configure_downloads command configures installation-time downloads of selected components. For each downloadable component, CPack will create an archive containing the contents of that component, which should be uploaded to the given site. When the user selects that component for installation, the installer will download and extract the component in place. This feature is useful for creating small installers that only download the requested components, saving bandwidth. Additionally, the installers are small enough that they will be installed as part of the normal installation process, and the &amp;ldquo;Change&amp;rdquo; button in Windows Add/Remove Programs control panel will allow one to add or remove parts of the application after the original installation. On Windows, the downloaded-components functionality requires the ZipDLL plug-in for NSIS, available at:</source>
          <target state="translated">cpack_configure_downloads 명령은 선택한 구성 요소의 설치 시간 다운로드를 구성합니다. 다운로드 가능한 각 구성 요소에 대해 CPack은 해당 구성 요소의 컨텐츠를 포함하는 아카이브를 작성하며 지정된 사이트에 업로드해야합니다. 사용자가 설치를 위해 해당 구성 요소를 선택하면 설치 프로그램이 구성 요소를 다운로드하여 압축을 해제합니다. 이 기능은 요청 된 구성 요소 만 다운로드하여 대역폭을 절약하는 소규모 설치 관리자를 만드는 데 유용합니다. 또한 설치 프로그램은 일반 설치 프로세스의 일부로 설치 될만큼 작으며 Windows 프로그램 추가 / 제거 제어판의 &quot;변경&quot;버튼을 사용하면 원래 설치 후 응용 프로그램의 일부를 추가하거나 제거 할 수 있습니다. Windows에서 다운로드 한 구성 요소 기능을 사용하려면 NSIS 용 ZipDLL 플러그인이 필요합니다.이용 가능 :</target>
        </trans-unit>
        <trans-unit id="ba074c06c7acb426dde27055fc3edf4712282341" translate="yes" xml:space="preserve">
          <source>The cproject file defines the CDT specific information. Some third party IDE&amp;rsquo;s are based on Eclipse with the addition of other information specific to that IDE. Through this property, it is possible to add this additional contents to the generated project. It is expected to contain valid XML.</source>
          <target state="translated">cproject 파일은 CDT 특정 정보를 정의합니다. 일부 타사 IDE는 Eclipse를 기반으로하며 해당 IDE에 고유 한 다른 정보가 추가됩니다. 이 속성을 통해 생성 된 프로젝트에이 추가 컨텐츠를 추가 할 수 있습니다. 유효한 XML이 포함되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b62c5a3e28797ae9ad3f195075bf5e3211a7d8c7" translate="yes" xml:space="preserve">
          <source>The cproject file defines the CDT specific information. Some third party IDE's are based on Eclipse with the addition of other information specific to that IDE. Through this property, it is possible to add this additional contents to the generated project. It is expected to contain valid XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71d9906c1e96d1335c26c50281d2a3fb9b4fb70" translate="yes" xml:space="preserve">
          <source>The cuLIBOS library is a backend thread abstraction layer library which is static only. The &lt;code&gt;CUDA::cublas_static&lt;/code&gt;, &lt;code&gt;CUDA::cusparse_static&lt;/code&gt;, &lt;code&gt;CUDA::cufft_static&lt;/code&gt;, &lt;code&gt;CUDA::curand_static&lt;/code&gt;, and (when implemented) NPP libraries all automatically have this dependency linked.</source>
          <target state="translated">cuLIBOS 라이브러리는 정적 전용 백엔드 스레드 추상화 계층 라이브러리입니다. &lt;code&gt;CUDA::cublas_static&lt;/code&gt; , &lt;code&gt;CUDA::cusparse_static&lt;/code&gt; , &lt;code&gt;CUDA::cufft_static&lt;/code&gt; , &lt;code&gt;CUDA::curand_static&lt;/code&gt; 하고, (실행시) NPP 도서관 모두 자동으로 의존성이 연결되어있다.</target>
        </trans-unit>
        <trans-unit id="e947d98facd5ad810ae184587e6b6803dee9cdba" translate="yes" xml:space="preserve">
          <source>The current settings of &lt;a href=&quot;../policy/cmp0065#policy:CMP0065&quot; id=&quot;index-0-policy:CMP0065&quot;&gt;&lt;code&gt;CMP0065&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-1-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; are propagated through to the generated test project.</source>
          <target state="translated">&lt;a href=&quot;../policy/cmp0065#policy:CMP0065&quot; id=&quot;index-0-policy:CMP0065&quot;&gt; &lt;code&gt;CMP0065&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-1-policy:CMP0083&quot;&gt; &lt;code&gt;CMP0083&lt;/code&gt; &lt;/a&gt; 의 현재 설정이 생성 된 테스트 프로젝트로 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="cdaeaa2284a492e71ec20c90b4a15163b9b6a2fe" translate="yes" xml:space="preserve">
          <source>The current stack of listfiles being processed.</source>
          <target state="translated">처리중인 목록 파일의 현재 스택</target>
        </trans-unit>
        <trans-unit id="7cf57c2820a19152cf1abae55b0995334801c541" translate="yes" xml:space="preserve">
          <source>The current system&amp;rsquo;s CMake platform id. See also the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">현재 시스템의 CMake 플랫폼 ID &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e755a37f8c468793daf53afa5898bc88db8a1ce" translate="yes" xml:space="preserve">
          <source>The current system's CMake platform id. See also the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daee56280bb4c68306a1948c5907459ada17b0d" translate="yes" xml:space="preserve">
          <source>The currently scheduled list of deferred calls may be retrieved:</source>
          <target state="translated">현재 예약 된 지연된 통화 목록을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8840fdfcf9ee833136503d8c3f0249a2dc770e5" translate="yes" xml:space="preserve">
          <source>The custom &lt;code&gt;&amp;lt;origin&amp;gt;_autogen&lt;/code&gt; target starts a number of threads of which each one parses a source file and on demand starts a &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; process. &lt;a href=&quot;#prop_tgt:AUTOGEN_PARALLEL&quot; id=&quot;index-0-prop_tgt:AUTOGEN_PARALLEL&quot;&gt;&lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt;&lt;/a&gt; controls how many parallel threads (and therefore &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes) are started.</source>
          <target state="translated">사용자 정의 &lt;code&gt;&amp;lt;origin&amp;gt;_autogen&lt;/code&gt; 대상은 각 스레드가 소스 파일을 구문 분석하고 요청시 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스를 시작하는 여러 스레드를 시작합니다 . &lt;a href=&quot;#prop_tgt:AUTOGEN_PARALLEL&quot; id=&quot;index-0-prop_tgt:AUTOGEN_PARALLEL&quot;&gt; &lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt; &lt;/a&gt; 은 시작되는 병렬 스레드 (따라서 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스) 수를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="ab708f5a67fd933e91b1fd0f4a9e87ed7a758989" translate="yes" xml:space="preserve">
          <source>The custom &lt;code&gt;&amp;lt;origin&amp;gt;_autogen&lt;/code&gt; target starts a number of threads of which each one parses a source file and on demand starts a &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; process. &lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt; controls how many parallel threads (and therefore &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes) are started.</source>
          <target state="translated">사용자 정의 &lt;code&gt;&amp;lt;origin&amp;gt;_autogen&lt;/code&gt; 대상은 각 스레드가 소스 파일을 구문 분석하고 요청시 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스를 시작하는 여러 스레드를 시작합니다 . &lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt; 은 시작되는 병렬 스레드 (따라서 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스) 수를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="0cdb6f7e1cdc6ca6447719bc551213d32c61b949" translate="yes" xml:space="preserve">
          <source>The custom fetch script is expected to store fetched content in the file or set a variable:</source>
          <target state="translated">사용자 정의 페치 스크립트는 페치 된 컨텐츠를 파일에 저장하거나 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="48c4429ce3af208c96d8ef3d0d5454e1137bc4d1" translate="yes" xml:space="preserve">
          <source>The custom step could then be triggered from the main build like so:</source>
          <target state="translated">그런 다음 사용자 정의 단계를 다음과 같이 기본 빌드에서 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17a77f522268d3182deff3287a887a8bd3aba4e2" translate="yes" xml:space="preserve">
          <source>The debug object supports the &amp;ldquo;showStats&amp;rdquo; key, which takes a boolean and makes the server mode return a &amp;ldquo;zzzDebug&amp;rdquo; object with stats as part of its response. &amp;ldquo;dumpToFile&amp;rdquo; takes a string value and will cause the cmake server to copy the response into the given filename.</source>
          <target state="translated">디버그 객체는 &quot;showStats&quot;키를 지원합니다.이 키는 부울을 취하고 서버 모드가 응답의 일부로 통계와 함께 &quot;zzzDebug&quot;객체를 반환하도록합니다. &amp;ldquo;dumpToFile&amp;rdquo;은 문자열 값을 취하며 cmake 서버가 응답을 주어진 파일 이름으로 복사하게합니다.</target>
        </trans-unit>
        <trans-unit id="90db2f41dc4566713ae0651e4a357bd3dc39f14d" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;OUTPUT_DIR&lt;/code&gt; can also be changed by setting the variable &lt;code&gt;CMAKE_JAVA_TARGET_OUTPUT_DIR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CMAKE_JAVA_TARGET_OUTPUT_DIR&lt;/code&gt; 변수를 설정하여 기본 &lt;code&gt;OUTPUT_DIR&lt;/code&gt; 을 변경할 수도 있습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
