<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="594c28f3b974ef5d10b68c8736fbf45fb7ff3dff" translate="yes" xml:space="preserve">
          <source>PyArray_Type and PyArrayObject</source>
          <target state="translated">PyArray_Type Î∞è PyArrayObject</target>
        </trans-unit>
        <trans-unit id="36a69f517d4111b4df0157ff1ba5783bb525b08c" translate="yes" xml:space="preserve">
          <source>PyArray_TypeObjectFromType (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7800f6ba21ad97e2ff704f3dcf89c96e3b541a00" translate="yes" xml:space="preserve">
          <source>PyArray_TypeObjectFromType()</source>
          <target state="translated">PyArray_TypeObjectFromType()</target>
        </trans-unit>
        <trans-unit id="e11185306452cb975a15a90906f3369c0b28f1fc" translate="yes" xml:space="preserve">
          <source>PyArray_TypestrConvert (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d48df8dbf7854fe7636d194389eb0fcb3ef952" translate="yes" xml:space="preserve">
          <source>PyArray_TypestrConvert()</source>
          <target state="translated">PyArray_TypestrConvert()</target>
        </trans-unit>
        <trans-unit id="720d4d5007a8a9087fb606c0ddfda47359b27820" translate="yes" xml:space="preserve">
          <source>PyArray_UpdateFlags (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d3339c8597727c89987e1552ede6ccdc091995" translate="yes" xml:space="preserve">
          <source>PyArray_UpdateFlags()</source>
          <target state="translated">PyArray_UpdateFlags()</target>
        </trans-unit>
        <trans-unit id="eb5fb8399238838cbf3bd77a6c7b431967090545" translate="yes" xml:space="preserve">
          <source>PyArray_ValidType (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f44e4ab98a8dfc9a292719ee7b3ddbff84a0795" translate="yes" xml:space="preserve">
          <source>PyArray_ValidType()</source>
          <target state="translated">PyArray_ValidType()</target>
        </trans-unit>
        <trans-unit id="4780188ea1d5673b41b2d0fb140d62a016b7b163" translate="yes" xml:space="preserve">
          <source>PyArray_View (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b697ca234be900f04a6559fff4a796fc601502" translate="yes" xml:space="preserve">
          <source>PyArray_View()</source>
          <target state="translated">PyArray_View()</target>
        </trans-unit>
        <trans-unit id="6b1b5390efd0c631308ee8c36a3db508b6fd8767" translate="yes" xml:space="preserve">
          <source>PyArray_Where (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65605d097d419368e49dc7706d253259edb2db42" translate="yes" xml:space="preserve">
          <source>PyArray_Where()</source>
          <target state="translated">PyArray_Where()</target>
        </trans-unit>
        <trans-unit id="99710a2bcf099a2bcf746ed8cc5b799066e295dc" translate="yes" xml:space="preserve">
          <source>PyArray_XDECREF (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c5e63294bc626ec01da4ee338082826003abc2" translate="yes" xml:space="preserve">
          <source>PyArray_XDECREF()</source>
          <target state="translated">PyArray_XDECREF()</target>
        </trans-unit>
        <trans-unit id="f5513c9afd4a11db35449fb845626478284aa5fc" translate="yes" xml:space="preserve">
          <source>PyArray_XDECREF_ERR (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b856d11f32ba1b072678cfd1ff91b44d780a2b73" translate="yes" xml:space="preserve">
          <source>PyArray_XDECREF_ERR()</source>
          <target state="translated">PyArray_XDECREF_ERR()</target>
        </trans-unit>
        <trans-unit id="7efd0839428c089da635f119fe4c9d9dc3df77be" translate="yes" xml:space="preserve">
          <source>PyArray_ZEROS (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2894f8fadfb805f65543188a32ab03014f8b5b60" translate="yes" xml:space="preserve">
          <source>PyArray_ZEROS()</source>
          <target state="translated">PyArray_ZEROS()</target>
        </trans-unit>
        <trans-unit id="09eeb51498337f72835506cf52289e2614770fb4" translate="yes" xml:space="preserve">
          <source>PyArray_Zero (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4a016f9d5ca6c1cef2838c51e2c1ea3c518e99" translate="yes" xml:space="preserve">
          <source>PyArray_Zero()</source>
          <target state="translated">PyArray_Zero()</target>
        </trans-unit>
        <trans-unit id="db1e90215904a21899f7d9c0cc940a1a8c07a842" translate="yes" xml:space="preserve">
          <source>PyArray_Zeros (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dd347312b36dd08113a061584cfa2fde8ac1ac" translate="yes" xml:space="preserve">
          <source>PyArray_Zeros()</source>
          <target state="translated">PyArray_Zeros()</target>
        </trans-unit>
        <trans-unit id="070e3c497b61189eef8e7c9a865d861e5a227d4f" translate="yes" xml:space="preserve">
          <source>PyArray_free (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec2ce3543b3248a23c79307482634c0645a0beb" translate="yes" xml:space="preserve">
          <source>PyArray_free()</source>
          <target state="translated">PyArray_free()</target>
        </trans-unit>
        <trans-unit id="ffd421f5d3ed4f9ec50e6991f9779d0d24d7bde3" translate="yes" xml:space="preserve">
          <source>PyArray_malloc (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1912edcf41db630d12bc1246d6f18b5c2fb5cc29" translate="yes" xml:space="preserve">
          <source>PyArray_malloc()</source>
          <target state="translated">PyArray_malloc()</target>
        </trans-unit>
        <trans-unit id="0fc9c47982edeaf360698bdf5a4351153117c53f" translate="yes" xml:space="preserve">
          <source>PyArray_realloc (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e04119f59c87caaf06b6ae76da66454e27aafab" translate="yes" xml:space="preserve">
          <source>PyArray_realloc()</source>
          <target state="translated">PyArray_realloc()</target>
        </trans-unit>
        <trans-unit id="051891e6613623bd5700c12f5d4f2bd173f62487" translate="yes" xml:space="preserve">
          <source>PyDataMem_FREE (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a34e3eba7e2fb202fcfdb99f66148b4eb1daf4e" translate="yes" xml:space="preserve">
          <source>PyDataMem_FREE()</source>
          <target state="translated">PyDataMem_FREE()</target>
        </trans-unit>
        <trans-unit id="6be820335d12de8750fbbfa5f559c6a284cd8956" translate="yes" xml:space="preserve">
          <source>PyDataMem_NEW (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4372ab3dea7c798e099aba93862a49a66a3a24cf" translate="yes" xml:space="preserve">
          <source>PyDataMem_RENEW (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa015ca9d1b36f64b21ab5c9051270db4ab7f99" translate="yes" xml:space="preserve">
          <source>PyDataMem_RENEW()</source>
          <target state="translated">PyDataMem_RENEW()</target>
        </trans-unit>
        <trans-unit id="3069a94b80f5ef8857e694030cfc3ae98b1b9013" translate="yes" xml:space="preserve">
          <source>PyDataType_FLAGCHK (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f589a7cd640c3cb2df2c7d0a6b3b7a986c7a91ea" translate="yes" xml:space="preserve">
          <source>PyDataType_FLAGCHK()</source>
          <target state="translated">PyDataType_FLAGCHK()</target>
        </trans-unit>
        <trans-unit id="5ff48dd454b22fdde0049ac7edd770ce4f2af61d" translate="yes" xml:space="preserve">
          <source>PyDataType_HASFIELDS (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd44018931e1571bc3a10a760cca375b5e4823e7" translate="yes" xml:space="preserve">
          <source>PyDataType_HASFIELDS()</source>
          <target state="translated">PyDataType_HASFIELDS()</target>
        </trans-unit>
        <trans-unit id="f50af5f5b4152e6929312a2be21825d6fa7866be" translate="yes" xml:space="preserve">
          <source>PyDataType_ISBOOL (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc17f04f14ccdd0cf539dee4821d44a7d6425cb3" translate="yes" xml:space="preserve">
          <source>PyDataType_ISBOOL()</source>
          <target state="translated">PyDataType_ISBOOL()</target>
        </trans-unit>
        <trans-unit id="c963fe8d4d7e905483aaa2116d9c476519b87785" translate="yes" xml:space="preserve">
          <source>PyDataType_ISCOMPLEX (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558d9679d47969de6b6fa1104f6947543d390a6a" translate="yes" xml:space="preserve">
          <source>PyDataType_ISCOMPLEX()</source>
          <target state="translated">PyDataType_ISCOMPLEX()</target>
        </trans-unit>
        <trans-unit id="e5ac5dba7ed3dbabaa52c7db0b6d40502cb7cf64" translate="yes" xml:space="preserve">
          <source>PyDataType_ISEXTENDED (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4b235e7cd8c97ae06ff7e0c9f6f1f3c69ffae2" translate="yes" xml:space="preserve">
          <source>PyDataType_ISEXTENDED()</source>
          <target state="translated">PyDataType_ISEXTENDED()</target>
        </trans-unit>
        <trans-unit id="ee303e12fa4b092e2f38a29cbe3d8d081f436c7e" translate="yes" xml:space="preserve">
          <source>PyDataType_ISFLEXIBLE (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db22dd0e0ca0cb8a51f979d196fc1628f63fc44" translate="yes" xml:space="preserve">
          <source>PyDataType_ISFLEXIBLE()</source>
          <target state="translated">PyDataType_ISFLEXIBLE()</target>
        </trans-unit>
        <trans-unit id="d177802f56267395d4f249d8fee5c6118a507123" translate="yes" xml:space="preserve">
          <source>PyDataType_ISFLOAT (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301396572c9c0d414f7959359346cdf1e15a9d88" translate="yes" xml:space="preserve">
          <source>PyDataType_ISFLOAT()</source>
          <target state="translated">PyDataType_ISFLOAT()</target>
        </trans-unit>
        <trans-unit id="a7e47fabe51af628cfd948856802bddbddd89f74" translate="yes" xml:space="preserve">
          <source>PyDataType_ISINTEGER (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84d2ccec31c19dc1085dae09bb150c6e4a8eeba" translate="yes" xml:space="preserve">
          <source>PyDataType_ISINTEGER()</source>
          <target state="translated">PyDataType_ISINTEGER()</target>
        </trans-unit>
        <trans-unit id="7457b9bcd8b7914f3a0e0c1458d98d090b6c4467" translate="yes" xml:space="preserve">
          <source>PyDataType_ISNUMBER (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d0b4b38e14df1a99fd960eae0ce1a1942089e5" translate="yes" xml:space="preserve">
          <source>PyDataType_ISNUMBER()</source>
          <target state="translated">PyDataType_ISNUMBER()</target>
        </trans-unit>
        <trans-unit id="6c520eed4c8a91f02502b7fb6baf91a921b93792" translate="yes" xml:space="preserve">
          <source>PyDataType_ISOBJECT (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb376c9d4739b9ea2eb6a505918bfadb62c7b2ab" translate="yes" xml:space="preserve">
          <source>PyDataType_ISOBJECT()</source>
          <target state="translated">PyDataType_ISOBJECT()</target>
        </trans-unit>
        <trans-unit id="0e25e133281f93338c7c4ddb1abe74d8d1024ddf" translate="yes" xml:space="preserve">
          <source>PyDataType_ISPYTHON (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4d1b2d8e758513bb70ad18eb530ec372c45b5b" translate="yes" xml:space="preserve">
          <source>PyDataType_ISPYTHON()</source>
          <target state="translated">PyDataType_ISPYTHON()</target>
        </trans-unit>
        <trans-unit id="33562734e5f2934565127224b62a398a10a8ccff" translate="yes" xml:space="preserve">
          <source>PyDataType_ISSIGNED (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321602d1c72f986de72f5a6d935a30fdc6719d34" translate="yes" xml:space="preserve">
          <source>PyDataType_ISSIGNED()</source>
          <target state="translated">PyDataType_ISSIGNED()</target>
        </trans-unit>
        <trans-unit id="32e57363ca57be50510381486487cc572e729835" translate="yes" xml:space="preserve">
          <source>PyDataType_ISSTRING (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a92f831c69a6ebffa7102c47f357586fd5e627" translate="yes" xml:space="preserve">
          <source>PyDataType_ISSTRING()</source>
          <target state="translated">PyDataType_ISSTRING()</target>
        </trans-unit>
        <trans-unit id="83b49999042c92d77cdcf5e11178e69cdc35db53" translate="yes" xml:space="preserve">
          <source>PyDataType_ISUNSIGNED (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef50f9a25bb6d6c09d83efda06e7999595bbe116" translate="yes" xml:space="preserve">
          <source>PyDataType_ISUNSIGNED()</source>
          <target state="translated">PyDataType_ISUNSIGNED()</target>
        </trans-unit>
        <trans-unit id="74b6db3180667c981b163c771da3d9d8b36580bc" translate="yes" xml:space="preserve">
          <source>PyDataType_ISUSERDEF (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493c826fdd279377c0d125b0a423d6cdea567b06" translate="yes" xml:space="preserve">
          <source>PyDataType_ISUSERDEF()</source>
          <target state="translated">PyDataType_ISUSERDEF()</target>
        </trans-unit>
        <trans-unit id="006e31f976a651b10f64e75865d3f49ed661d2ec" translate="yes" xml:space="preserve">
          <source>PyDataType_REFCHK (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29011562997e4c9e893d29aec1c01dd9ec18c06d" translate="yes" xml:space="preserve">
          <source>PyDataType_REFCHK()</source>
          <target state="translated">PyDataType_REFCHK()</target>
        </trans-unit>
        <trans-unit id="080acbc4209e42a1a14ec1cf04553e98c77b510b" translate="yes" xml:space="preserve">
          <source>PyDimMem_FREE (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600039974e2a07f5b2016f633ee6b4e486b0562c" translate="yes" xml:space="preserve">
          <source>PyDimMem_FREE()</source>
          <target state="translated">PyDimMem_FREE()</target>
        </trans-unit>
        <trans-unit id="3d52615d45e8453e8e1fc0f55bd08af26126c292" translate="yes" xml:space="preserve">
          <source>PyDimMem_NEW (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051fecc6152e5f03015a9de4e01d5c5c86c4d81d" translate="yes" xml:space="preserve">
          <source>PyDimMem_NEW()</source>
          <target state="translated">PyDimMem_NEW()</target>
        </trans-unit>
        <trans-unit id="2cb6fd5859efcda737ca0d217b443a2b48b51f30" translate="yes" xml:space="preserve">
          <source>PyDimMem_RENEW (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc217aee7def4bd463a2f3b4633e44d7c73b15b3" translate="yes" xml:space="preserve">
          <source>PyDimMem_RENEW()</source>
          <target state="translated">PyDimMem_RENEW()</target>
        </trans-unit>
        <trans-unit id="e0f951e6e53261d9dc6c97d6e71ee0bd94e98e13" translate="yes" xml:space="preserve">
          <source>PyFort</source>
          <target state="translated">PyFort</target>
        </trans-unit>
        <trans-unit id="c22439811b73ec28f6fa5172d56b4428e505f1a0" translate="yes" xml:space="preserve">
          <source>PyFort is a nice tool for wrapping Fortran and Fortran-like C-code into Python with support for Numeric arrays. It was written by Paul Dubois, a distinguished computer scientist and the very first maintainer of Numeric (now retired). It is worth mentioning in the hopes that somebody will update PyFort to work with NumPy arrays as well which now support either Fortran or C-style contiguous arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d9092071ce37caf8bbdd2b65b677759da2b808" translate="yes" xml:space="preserve">
          <source>PyModule_AddIntConstant (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c146a17b0391d67bb5a8aa780b8857701731f537" translate="yes" xml:space="preserve">
          <source>PyModule_AddObject (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3d5cc3b555342ebaeb1b18c6eda61a5136a3bf" translate="yes" xml:space="preserve">
          <source>PyModule_AddStringConstant (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faf331f269f0270b7c128d3fe5b0effb610138d" translate="yes" xml:space="preserve">
          <source>PyPy compatible alternative to &lt;code&gt;UPDATEIFCOPY&lt;/code&gt; arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae4ac82db59237398f13df4b48310c8fbe57e84" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISBOOL (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0779dcb12025850b3949722fe75eb211e4369779" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISBOOL()</source>
          <target state="translated">PyTypeNum_ISBOOL()</target>
        </trans-unit>
        <trans-unit id="2f3c46c221f18b5e1439749ad8d62d314505deff" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISCOMPLEX (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cea6e58aa672043afe4c01e0d427f7339bb4e6" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISCOMPLEX()</source>
          <target state="translated">PyTypeNum_ISCOMPLEX()</target>
        </trans-unit>
        <trans-unit id="e679bf9c205c30c30a07d591997c9666a7984e65" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISEXTENDED (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e262e36afde185251d3f58bf8d8cd060a5f973fd" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISEXTENDED()</source>
          <target state="translated">PyTypeNum_ISEXTENDED()</target>
        </trans-unit>
        <trans-unit id="95817c42eb0c414274846e57712bdf46af1242e2" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISFLEXIBLE (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b389a31508f56c3da145bd4ffe4bfc690e3012ac" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISFLEXIBLE()</source>
          <target state="translated">PyTypeNum_ISFLEXIBLE()</target>
        </trans-unit>
        <trans-unit id="861a840c64b1ea64be82673283a327c67d6c7593" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISFLOAT (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabf2f2ecdbcabc01c367b1b59828d2881615e75" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISFLOAT()</source>
          <target state="translated">PyTypeNum_ISFLOAT()</target>
        </trans-unit>
        <trans-unit id="88775e39360cd96f03239c59c13eea317213f5fa" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISINTEGER (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b97d9fdf436f8518504cca27ad89895cd5a93c0" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISINTEGER()</source>
          <target state="translated">PyTypeNum_ISINTEGER()</target>
        </trans-unit>
        <trans-unit id="c70c3601fcbc260d15e8df3ad97fca11df68e356" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISNUMBER (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cd946706b38d0cdd591c958573166d9e4142c2" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISNUMBER()</source>
          <target state="translated">PyTypeNum_ISNUMBER()</target>
        </trans-unit>
        <trans-unit id="31b95d4ac38899c7bc54224683045ce816b6d724" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISOBJECT (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee2047622a365a58de7a7153da0dc48ed54656a" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISOBJECT()</source>
          <target state="translated">PyTypeNum_ISOBJECT()</target>
        </trans-unit>
        <trans-unit id="b1c88a156442b152d1874659bd1bccce5b8716f7" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISPYTHON (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f630374c4eb98477fc753f2b90d3d1a609554782" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISPYTHON()</source>
          <target state="translated">PyTypeNum_ISPYTHON()</target>
        </trans-unit>
        <trans-unit id="461a9016ecd3c88b8df5a476ac6104b26a12cfce" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISSIGNED (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa9ca6301525c6800794751b18c078aef17454e" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISSIGNED()</source>
          <target state="translated">PyTypeNum_ISSIGNED()</target>
        </trans-unit>
        <trans-unit id="b9a59444494439ea450846ebd6d6b77c0a452a3a" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISSTRING (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7b2d688f9e076f918a8e424a54d6c2e439134d" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISSTRING()</source>
          <target state="translated">PyTypeNum_ISSTRING()</target>
        </trans-unit>
        <trans-unit id="7016382a2281206e8b0d907923ef46b59e8357d0" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISUNSIGNED (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45aa3bde1fdc7c609031fa9156b91594e6bea8af" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISUSERDEF (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10abc0e22cb74a4c01cf1d39df907747a05fd0b0" translate="yes" xml:space="preserve">
          <source>PyTypeNum_ISUSERDEF()</source>
          <target state="translated">PyTypeNum_ISUSERDEF()</target>
        </trans-unit>
        <trans-unit id="1dee57fcbb33afd8c174532ffe13e1d886bf9f7d" translate="yes" xml:space="preserve">
          <source>PyUFuncLoopObject (C type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf51d78973152cdc0125743aa1585dd1a6ac680d" translate="yes" xml:space="preserve">
          <source>PyUFuncObject</source>
          <target state="translated">PyUFuncObject</target>
        </trans-unit>
        <trans-unit id="e4700de333e03fdb59cdef5aad5b5c764492d74c" translate="yes" xml:space="preserve">
          <source>PyUFuncObject (C type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc03874ef0d956622c3d2be7a74dfa63ab92e5b" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_dim_flags (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604739c6c5197513b84bdd530ea4d0a2e86ca98c" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_dim_ixs (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9948f60dfb1295bd513cd23534d319c927fb2c6" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_dim_sizes (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060799d9d9cfbce4a455b437194a01c7b6fe9705" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_enabled (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f393df021a5a55b5314973312e73f927cec278a8" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_num_dim_ix (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9a8550d1248d8e824c0592779648dacb3df9f6" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_num_dims (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8636308f3b8514258cf95528f37282c74c92afbc" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_offsets (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3126212a03fd75feb772934639ba22589049db14" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.core_signature (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8545c94226120ddd778822717b5bfa4d1fff0a" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.data (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d12dc8cf469c3fe8f125d9c4272150229a65552" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.doc (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e25140c8b5fac0144b13e31622c907cb93de6a" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.functions (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aba841c0140f0877b94b562329618811a23db60" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.identity (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58515fee3f1f79cab8680e10740bd3e39c5ec0d5" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.iter_flags (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13f1c12489b98b64baae41b93f5770f8bf0753f" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.legacy_inner_loop_selector (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03798972102374b4a8c4b54eb30eb84012b5a19" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.masked_inner_loop_selector (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293312e39f8015ee8d5b397146c8aa952f358ca0" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.name (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a83baccd9422a7472eba36b2045107d2e2088b" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.nargs (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38252f7292912953ffecda4cdea7195be8ee97e" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.nin (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c70e8da287692ba1cb24d1ab8e580fbc1ea34de" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.nout (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50fd4434cd16666a16da58cc860077429f68a4b" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.ntypes (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dbb20e81bc8bf84146c7eeaa54d4fef99bee1f" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.obj (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c12b30e9b70d67a24410b7ad657e17a5a670ee" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.op_flags (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fa8346e6290d86d1de7232a50327c6483d7e5c" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.ptr (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767aac8320b9386dcc5bcf84ec1468fa51d00f83" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.reserved1 (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f4e7bc68ecfdaf11b07f5c97c1b6703acf7428" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.reserved2 (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fa2a9cbdf866077c58cd6f74757c931454f394" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.type_resolver (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d059bd58d86cbf787e15772b8e32ba20da027ec0" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.types (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ed377da12c18f8f0617808ec0e8021250cda93" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.PyUFuncObject.userloops (C member)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2e0399cafda58881cacd67f4456c04943a4daa" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_dim_flags</source>
          <target state="translated">PyUFuncObject.core_dim_flags</target>
        </trans-unit>
        <trans-unit id="75702a991a6166c813af252efa22f3e3cd78b274" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_dim_ixs</source>
          <target state="translated">PyUFuncObject.core_dim_ixs</target>
        </trans-unit>
        <trans-unit id="dfa68bb0c0e659e0f8e519009749ffdbd8d0260d" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_dim_sizes</source>
          <target state="translated">PyUFuncObject.core_dim_sizes</target>
        </trans-unit>
        <trans-unit id="5c77bb85f3e2ff363a89f13fa6df42a957bda7a0" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_enabled</source>
          <target state="translated">PyUFuncObject.core_enabled</target>
        </trans-unit>
        <trans-unit id="26b77524c1545038334d4331518f77e9144e740c" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_num_dim_ix</source>
          <target state="translated">PyUFuncObject.core_num_dim_ix</target>
        </trans-unit>
        <trans-unit id="8b89911b585a13cc3ff0673e1a63eb8e56d191fd" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_num_dims</source>
          <target state="translated">PyUFuncObject.core_num_dims</target>
        </trans-unit>
        <trans-unit id="eef445e128415788a6ea33a53616333b41a1e856" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_offsets</source>
          <target state="translated">PyUFuncObject.core_offsets</target>
        </trans-unit>
        <trans-unit id="89f0b937cc7596200bf918f95b189b57c0de1a45" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.core_signature</source>
          <target state="translated">PyUFuncObject.core_signature</target>
        </trans-unit>
        <trans-unit id="7dfb14036f13179222e6da9a5bca8360d4ab5a65" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.data</source>
          <target state="translated">PyUFuncObject.data</target>
        </trans-unit>
        <trans-unit id="d08ea39560b853c9555b1a3a223397b9703e528f" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.doc</source>
          <target state="translated">PyUFuncObject.doc</target>
        </trans-unit>
        <trans-unit id="9333eb6592dfbb46b9198a41ff7e959ba1da5503" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.functions()</source>
          <target state="translated">PyUFuncObject.functions()</target>
        </trans-unit>
        <trans-unit id="909721e731f7e30cc7d204f46c87fd010de56342" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.identity</source>
          <target state="translated">PyUFuncObject.identity</target>
        </trans-unit>
        <trans-unit id="ec4a7e5f8f0e564fc41da74ad7b10d239d7dbd9c" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.iter_flags</source>
          <target state="translated">PyUFuncObject.iter_flags</target>
        </trans-unit>
        <trans-unit id="1a04c6b87dea4250127a971de7f2a12594f3bf64" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.legacy_inner_loop_selector</source>
          <target state="translated">PyUFuncObject.legacy_inner_loop_selector</target>
        </trans-unit>
        <trans-unit id="336966fc92a00d2e1f4ea6d3d98e0126008c55bb" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.masked_inner_loop_selector</source>
          <target state="translated">PyUFuncObject.masked_inner_loop_selector</target>
        </trans-unit>
        <trans-unit id="65196fe815f403b3ae38206cb703a362253a5b09" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.name</source>
          <target state="translated">PyUFuncObject.name</target>
        </trans-unit>
        <trans-unit id="0ee10f6a5b2475569ddaf774dc04653a4f4de66c" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.nargs</source>
          <target state="translated">PyUFuncObject.nargs</target>
        </trans-unit>
        <trans-unit id="3cec83aa27d6eff49d4c82b6553eda975670f353" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.nout</source>
          <target state="translated">PyUFuncObject.nout</target>
        </trans-unit>
        <trans-unit id="c6f5912f528a5d7c0e0972c0e88dec798fe5a52d" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.ntypes</source>
          <target state="translated">PyUFuncObject.ntypes</target>
        </trans-unit>
        <trans-unit id="d90594b85fd4614482d14799c6d118752a5975aa" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.obj</source>
          <target state="translated">PyUFuncObject.obj</target>
        </trans-unit>
        <trans-unit id="1fce17f51d07f9d90031acf5c37ed0cd0a3257a8" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.op_flags</source>
          <target state="translated">PyUFuncObject.op_flags</target>
        </trans-unit>
        <trans-unit id="d4d0fe4864266d8ed71406556b896e35b32f4003" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.ptr</source>
          <target state="translated">PyUFuncObject.ptr</target>
        </trans-unit>
        <trans-unit id="906b2acab8bb8bbde8a874a81a0ab29ca75b3489" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.reserved1</source>
          <target state="translated">PyUFuncObject.reserved1</target>
        </trans-unit>
        <trans-unit id="d200a67b548b1c100cbd6b82f05fa1f9655be355" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.reserved2</source>
          <target state="translated">PyUFuncObject.reserved2</target>
        </trans-unit>
        <trans-unit id="83ea01718b92eb287afe8014606e0b2cc2a1421b" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.type_resolver</source>
          <target state="translated">PyUFuncObject.type_resolver</target>
        </trans-unit>
        <trans-unit id="c1b1cc2185fc49b8cc62d45dde4f003014dab425" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.types</source>
          <target state="translated">PyUFuncObject.types</target>
        </trans-unit>
        <trans-unit id="1923ac0740c25a4b8b4aac9ee5b3a580af8e58eb" translate="yes" xml:space="preserve">
          <source>PyUFuncObject.userloops</source>
          <target state="translated">PyUFuncObject.userloops</target>
        </trans-unit>
        <trans-unit id="13e211ebbeb9836d70bdc863eb10b5e2ddfd228c" translate="yes" xml:space="preserve">
          <source>PyUFuncReduceObject</source>
          <target state="translated">PyUFuncReduceObject</target>
        </trans-unit>
        <trans-unit id="b3016f76975cc845b4470d0b2069dc449808256c" translate="yes" xml:space="preserve">
          <source>PyUFuncReduceObject (C type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1af54f993aec2185e023628a3a480243b30c00" translate="yes" xml:space="preserve">
          <source>PyUFunc_DD_D (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b09e68f944ff820f420ae2f7c44e2575dfd2a5" translate="yes" xml:space="preserve">
          <source>PyUFunc_DD_D()</source>
          <target state="translated">PyUFunc_DD_D()</target>
        </trans-unit>
        <trans-unit id="06796536262997db9481081814cd6799375de9f9" translate="yes" xml:space="preserve">
          <source>PyUFunc_D_D (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736aa48d4fd7cbe96067d6fc2a01f4a2871fad1a" translate="yes" xml:space="preserve">
          <source>PyUFunc_D_D()</source>
          <target state="translated">PyUFunc_D_D()</target>
        </trans-unit>
        <trans-unit id="fa8c0c17d00b19651d5fbf34efddcc1034520dd2" translate="yes" xml:space="preserve">
          <source>PyUFunc_FF_F (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ef9a956d1ff48c5c44694037d82e977028bcc2" translate="yes" xml:space="preserve">
          <source>PyUFunc_FF_F()</source>
          <target state="translated">PyUFunc_FF_F()</target>
        </trans-unit>
        <trans-unit id="28c2d938a0a56c4a2a1bd909758737d070845754" translate="yes" xml:space="preserve">
          <source>PyUFunc_FF_F_As_DD_D (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6718fb9b057edaa55e4dcda41fcbfd7589a583" translate="yes" xml:space="preserve">
          <source>PyUFunc_FF_F_As_DD_D()</source>
          <target state="translated">PyUFunc_FF_F_As_DD_D()</target>
        </trans-unit>
        <trans-unit id="c57aada1dc19e0c2ac3ba5302a68a60e41d77b94" translate="yes" xml:space="preserve">
          <source>PyUFunc_F_F (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695527397930a6f95493f22ca3bc6d494eab6d3e" translate="yes" xml:space="preserve">
          <source>PyUFunc_F_F()</source>
          <target state="translated">PyUFunc_F_F()</target>
        </trans-unit>
        <trans-unit id="2beb668a46301ca6e178dbf11b20afe7cda30635" translate="yes" xml:space="preserve">
          <source>PyUFunc_F_F_As_D_D (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e281b4a00f57ad418631b202586491ad3f5a88" translate="yes" xml:space="preserve">
          <source>PyUFunc_F_F_As_D_D()</source>
          <target state="translated">PyUFunc_F_F_As_D_D()</target>
        </trans-unit>
        <trans-unit id="e801f15268b94b48bfa11df777e1ccb8b94f38da" translate="yes" xml:space="preserve">
          <source>PyUFunc_FromFuncAndData (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fdf4370b744ea2dce89946e6236fbc7e40728c" translate="yes" xml:space="preserve">
          <source>PyUFunc_FromFuncAndDataAndSignature (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c1087503b4134fc5c7d2c10bd9ec9b3fc8df72" translate="yes" xml:space="preserve">
          <source>PyUFunc_FromFuncAndDataAndSignature()</source>
          <target state="translated">PyUFunc_FromFuncAndDataAndSignature()</target>
        </trans-unit>
        <trans-unit id="413a6588a6493639eeaa9c9a0541e77bde445c96" translate="yes" xml:space="preserve">
          <source>PyUFunc_FromFuncAndDataAndSignatureAndIdentity (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ad2d347d02f1a46c700f2d219e5329984ae4d3" translate="yes" xml:space="preserve">
          <source>PyUFunc_GG_G (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085f1a1451aade3d9e6cbbc99953d08d9e4e4231" translate="yes" xml:space="preserve">
          <source>PyUFunc_GG_G()</source>
          <target state="translated">PyUFunc_GG_G()</target>
        </trans-unit>
        <trans-unit id="5abd9adfd05dc5e26e0b634ec424594729a47ded" translate="yes" xml:space="preserve">
          <source>PyUFunc_G_G (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0f6909e84d471e302dc1c6f272e447ae13bbd2" translate="yes" xml:space="preserve">
          <source>PyUFunc_G_G()</source>
          <target state="translated">PyUFunc_G_G()</target>
        </trans-unit>
        <trans-unit id="0dd68ab2cc15d575bfd8b4a28919f37f9ae1eca5" translate="yes" xml:space="preserve">
          <source>PyUFunc_GenericFunction (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d41d188f6fd772d21b81dd16990452a86187ba7" translate="yes" xml:space="preserve">
          <source>PyUFunc_GenericFunction()</source>
          <target state="translated">PyUFunc_GenericFunction()</target>
        </trans-unit>
        <trans-unit id="4e5210bd5e6ce9c1eb1ddd07cfcb9ee31642e9ca" translate="yes" xml:space="preserve">
          <source>PyUFunc_GetPyValues (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d396509cce573da2307c4b36ca48b8a4e7466b" translate="yes" xml:space="preserve">
          <source>PyUFunc_GetPyValues()</source>
          <target state="translated">PyUFunc_GetPyValues()</target>
        </trans-unit>
        <trans-unit id="93d0e95abed2bbbe03a1e68eb7209cd4e2e8fa8c" translate="yes" xml:space="preserve">
          <source>PyUFunc_IdentityValue (C variable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec2f42fca7067d6b9bca719c31cc21cfb9bf538" translate="yes" xml:space="preserve">
          <source>PyUFunc_Loop1d</source>
          <target state="translated">PyUFunc_Loop1d</target>
        </trans-unit>
        <trans-unit id="afeaff0972ceb9ac49d93b9148ad7171fc60aeea" translate="yes" xml:space="preserve">
          <source>PyUFunc_Loop1d (C type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac26e9681603ac12412c48964757d8cea46bac25" translate="yes" xml:space="preserve">
          <source>PyUFunc_MinusOne (C variable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3f12195c601ee198d563ba123162156ea449a4" translate="yes" xml:space="preserve">
          <source>PyUFunc_None (C variable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f5da19b89423b8c5807dbff67e781e1568c282" translate="yes" xml:space="preserve">
          <source>PyUFunc_OO_O (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bc0f94717cfd5865e9ab3cab03b2e8e280cabf" translate="yes" xml:space="preserve">
          <source>PyUFunc_OO_O()</source>
          <target state="translated">PyUFunc_OO_O()</target>
        </trans-unit>
        <trans-unit id="f68eb43366fbfc4bf65d58e2a21b8505fe76f809" translate="yes" xml:space="preserve">
          <source>PyUFunc_OO_O_method (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cebe29c224de361501f2435f3ecf8f37227532d" translate="yes" xml:space="preserve">
          <source>PyUFunc_OO_O_method()</source>
          <target state="translated">PyUFunc_OO_O_method()</target>
        </trans-unit>
        <trans-unit id="8955a1366e0a7009a2182bd0de30b09e13d19be3" translate="yes" xml:space="preserve">
          <source>PyUFunc_O_O (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4cf3784b3d41e180e4ea8e8bc4bbe307a4a1ca" translate="yes" xml:space="preserve">
          <source>PyUFunc_O_O()</source>
          <target state="translated">PyUFunc_O_O()</target>
        </trans-unit>
        <trans-unit id="2e1ac58313778bc6c50cc86e655fe37f288fda6f" translate="yes" xml:space="preserve">
          <source>PyUFunc_O_O_method (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023a56c1282e32cd104f6083932d2d67eeb5bf61" translate="yes" xml:space="preserve">
          <source>PyUFunc_O_O_method()</source>
          <target state="translated">PyUFunc_O_O_method()</target>
        </trans-unit>
        <trans-unit id="c83785fcb2c3062676e1041ca2256944aeda4ccd" translate="yes" xml:space="preserve">
          <source>PyUFunc_On_Om (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd58bb1d2149609dbe931fccaee6f6c48ecd504" translate="yes" xml:space="preserve">
          <source>PyUFunc_On_Om()</source>
          <target state="translated">PyUFunc_On_Om()</target>
        </trans-unit>
        <trans-unit id="3ead4e89bee0290f1a7260c14bb90717d6fd1974" translate="yes" xml:space="preserve">
          <source>PyUFunc_One (C variable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f00e44351bb7e60ed4590bb485ad645b32884b0" translate="yes" xml:space="preserve">
          <source>PyUFunc_PyFuncData (C type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17fb926604248cdac77066602caa963d7ef26a6" translate="yes" xml:space="preserve">
          <source>PyUFunc_RegisterLoopForDescr (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bbb127a23ddd5167053334ceb8d9deab020d00" translate="yes" xml:space="preserve">
          <source>PyUFunc_RegisterLoopForDescr()</source>
          <target state="translated">PyUFunc_RegisterLoopForDescr()</target>
        </trans-unit>
        <trans-unit id="270a7652988a4a60a2b49094fc8033dd35a0e66a" translate="yes" xml:space="preserve">
          <source>PyUFunc_RegisterLoopForType (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea41213e5cc62cac2c444601ba3cc173b72cab0" translate="yes" xml:space="preserve">
          <source>PyUFunc_RegisterLoopForType()</source>
          <target state="translated">PyUFunc_RegisterLoopForType()</target>
        </trans-unit>
        <trans-unit id="02ecf1c3bcb9dda3b3e8b11e9ab5e49e985e179c" translate="yes" xml:space="preserve">
          <source>PyUFunc_ReorderableNone (C variable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b41129a02ba5741830fce1669177e1a29a84703" translate="yes" xml:space="preserve">
          <source>PyUFunc_ReplaceLoopBySignature (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d7f72d33dbe3c53175177bf8b33d99d101301f" translate="yes" xml:space="preserve">
          <source>PyUFunc_ReplaceLoopBySignature()</source>
          <target state="translated">PyUFunc_ReplaceLoopBySignature()</target>
        </trans-unit>
        <trans-unit id="301f74d5486da96204e9df6ec594dba292f71ad0" translate="yes" xml:space="preserve">
          <source>PyUFunc_Type (C variable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467c7010bd37d3badc9fd9dfa73b5b254ea8f7fb" translate="yes" xml:space="preserve">
          <source>PyUFunc_Type and PyUFuncObject</source>
          <target state="translated">PyUFunc_Type Î∞è PyUFuncObject</target>
        </trans-unit>
        <trans-unit id="16c6d3c651a655f27164e42a7090cdbc9229a678" translate="yes" xml:space="preserve">
          <source>PyUFunc_Zero (C variable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0f4443836bc6ab615efc55439bcd7668431d22" translate="yes" xml:space="preserve">
          <source>PyUFunc_checkfperr (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8005a3cf6c4aa7b550e14683331a9ed6d2a18c" translate="yes" xml:space="preserve">
          <source>PyUFunc_checkfperr()</source>
          <target state="translated">PyUFunc_checkfperr()</target>
        </trans-unit>
        <trans-unit id="f16dfc2a37ea75900b5e833a7d5f03b176e5d914" translate="yes" xml:space="preserve">
          <source>PyUFunc_clearfperr (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb6b1e460926f0a09f9f9a72a493c5977d95454" translate="yes" xml:space="preserve">
          <source>PyUFunc_clearfperr()</source>
          <target state="translated">PyUFunc_clearfperr()</target>
        </trans-unit>
        <trans-unit id="f15a3ed17cb36d95696b7a09e4ee56efba43cc86" translate="yes" xml:space="preserve">
          <source>PyUFunc_d_d (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b4d2ce83b2383403a1cc4bdedf012fb356e641" translate="yes" xml:space="preserve">
          <source>PyUFunc_d_d()</source>
          <target state="translated">PyUFunc_d_d()</target>
        </trans-unit>
        <trans-unit id="9c378b8ddb131a1a17cbef19fe2da3f50c2645a0" translate="yes" xml:space="preserve">
          <source>PyUFunc_dd_d (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c540695f855ecba9d86960742ec2b8a0b8bde54" translate="yes" xml:space="preserve">
          <source>PyUFunc_dd_d()</source>
          <target state="translated">PyUFunc_dd_d()</target>
        </trans-unit>
        <trans-unit id="c9ed3911f663d366811654ff43776b337e94529a" translate="yes" xml:space="preserve">
          <source>PyUFunc_e_e (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2b2cc628995a0b6493c742ad8973ab292fedc5" translate="yes" xml:space="preserve">
          <source>PyUFunc_e_e()</source>
          <target state="translated">PyUFunc_e_e()</target>
        </trans-unit>
        <trans-unit id="f74ce3a53e34c90b6d679a974e6ac86be4cffeae" translate="yes" xml:space="preserve">
          <source>PyUFunc_e_e_As_d_d (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d107246aca7d6928a73824a3681c10ecf1b77f" translate="yes" xml:space="preserve">
          <source>PyUFunc_e_e_As_d_d()</source>
          <target state="translated">PyUFunc_e_e_As_d_d()</target>
        </trans-unit>
        <trans-unit id="8a5209da495d6592c2d26028beb01076e855b7f2" translate="yes" xml:space="preserve">
          <source>PyUFunc_e_e_As_f_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea21298d9d8e808ea678e6cfb44e7af40663977" translate="yes" xml:space="preserve">
          <source>PyUFunc_e_e_As_f_f()</source>
          <target state="translated">PyUFunc_e_e_As_f_f()</target>
        </trans-unit>
        <trans-unit id="624a7dbb5d64c604d4239a41dbf805e0eb2d0381" translate="yes" xml:space="preserve">
          <source>PyUFunc_ee_e (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a117654700bd2fb142b30a8f1060b2e670bb1ac5" translate="yes" xml:space="preserve">
          <source>PyUFunc_ee_e()</source>
          <target state="translated">PyUFunc_ee_e()</target>
        </trans-unit>
        <trans-unit id="ff7ab6b5b2b0dc33bf9fed175169611f4a21b7f8" translate="yes" xml:space="preserve">
          <source>PyUFunc_ee_e_As_dd_d (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a1651e1d466a5f3e3fe4481956b9ad57a2e735" translate="yes" xml:space="preserve">
          <source>PyUFunc_ee_e_As_dd_d()</source>
          <target state="translated">PyUFunc_ee_e_As_dd_d()</target>
        </trans-unit>
        <trans-unit id="ecd373234902b5161046aec099b95504ac7641e5" translate="yes" xml:space="preserve">
          <source>PyUFunc_ee_e_As_ff_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb64aa76a11a354cf112c80d048dcb5120cbc2f0" translate="yes" xml:space="preserve">
          <source>PyUFunc_ee_e_As_ff_f()</source>
          <target state="translated">PyUFunc_ee_e_As_ff_f()</target>
        </trans-unit>
        <trans-unit id="2d57ba54413b5ac26406615f2285e57004ca11ca" translate="yes" xml:space="preserve">
          <source>PyUFunc_f_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4482724a41218a67fa0f71a607ce6db013937bb5" translate="yes" xml:space="preserve">
          <source>PyUFunc_f_f()</source>
          <target state="translated">PyUFunc_f_f()</target>
        </trans-unit>
        <trans-unit id="6d22ab6a30ce74868a16945629c27bdc8bb84ab0" translate="yes" xml:space="preserve">
          <source>PyUFunc_f_f_As_d_d (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5827de0d647b1b9bbe66bd1171470822404bd0a7" translate="yes" xml:space="preserve">
          <source>PyUFunc_ff_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f210a705cbe34a9d0502f3395d30bd59fe1fc513" translate="yes" xml:space="preserve">
          <source>PyUFunc_ff_f()</source>
          <target state="translated">PyUFunc_ff_f()</target>
        </trans-unit>
        <trans-unit id="6e0e89a08b59ace1af9f94b17c99089255dcc4c5" translate="yes" xml:space="preserve">
          <source>PyUFunc_ff_f_As_dd_d (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4e0d787918fef79c7768d4800d40edc0b74da3" translate="yes" xml:space="preserve">
          <source>PyUFunc_ff_f_As_dd_d()</source>
          <target state="translated">PyUFunc_ff_f_As_dd_d()</target>
        </trans-unit>
        <trans-unit id="07c07131a6cba0cadbb693a45533173522e2a1fe" translate="yes" xml:space="preserve">
          <source>PyUFunc_g_g (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800dc5fe9d98d85b22b304a0f2940c43add76196" translate="yes" xml:space="preserve">
          <source>PyUFunc_g_g()</source>
          <target state="translated">PyUFunc_g_g()</target>
        </trans-unit>
        <trans-unit id="c2e31aa984c57c1209ceae25bd1dff83163cd6d7" translate="yes" xml:space="preserve">
          <source>PyUFunc_gg_g (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5e6a2e697f933504b5ddbe7d7cfbaf9d496910" translate="yes" xml:space="preserve">
          <source>PyUFunc_gg_g()</source>
          <target state="translated">PyUFunc_gg_g()</target>
        </trans-unit>
        <trans-unit id="871db2cab08565c149c950b7631d99d3e958c6cd" translate="yes" xml:space="preserve">
          <source>Py_intptr_t (an integer that is the size of a pointer on the platform).</source>
          <target state="translated">Py_intptr_t (ÌîåÎû´ÌèºÏùò Ìè¨Ïù∏ÌÑ∞ ÌÅ¨Í∏∞ Ïù∏ Ï†ïÏàò).</target>
        </trans-unit>
        <trans-unit id="2184ea57cf2dfc3882893176c9ac4d2b24431922" translate="yes" xml:space="preserve">
          <source>Pyarray_DescrAlignConverter (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674f7dd25f85b83faee4a4958f56ecac79ddb09e" translate="yes" xml:space="preserve">
          <source>Pyarray_DescrAlignConverter()</source>
          <target state="translated">Pyarray_DescrAlignConverter()</target>
        </trans-unit>
        <trans-unit id="2a32de660fce384559335fc3fa98110f7b431535" translate="yes" xml:space="preserve">
          <source>Pyarray_DescrAlignConverter2 (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e543e61be9c0f8b44dffb11c98955a8355bf44d" translate="yes" xml:space="preserve">
          <source>Pyarray_DescrAlignConverter2()</source>
          <target state="translated">Pyarray_DescrAlignConverter2()</target>
        </trans-unit>
        <trans-unit id="d10b4bf82876f5c9f27f82011f0a7df5432acac3" translate="yes" xml:space="preserve">
          <source>Pyfort is an older alternative, but not supported any longer. Fwrap is a newer project that looked promising but isn&amp;rsquo;t being developed any longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f639929c2d078853018504eba37b8a18b802a2" translate="yes" xml:space="preserve">
          <source>Pyrex support was removed from &lt;code&gt;numpy.distutils&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3416703d1ef2ffc9529879aeca38c5eb8f190c4" translate="yes" xml:space="preserve">
          <source>Python 2.6 support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2431de93f24c1ad855f499d76fa43f94221067f" translate="yes" xml:space="preserve">
          <source>Python 3 compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41503f02492c100a480fed9e2b05002f0b8abdbe" translate="yes" xml:space="preserve">
          <source>Python 3.6.x or newer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5721a187083db6928ac88ec2070a34ed1619ddf7" translate="yes" xml:space="preserve">
          <source>Python 3.7&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/dev/library/math.html#math.remainder&quot;&gt;&lt;code&gt;math.remainder&lt;/code&gt;&lt;/a&gt; and C&amp;rsquo;s &lt;code&gt;remainder&lt;/code&gt;, which computes the IEEE remainder, which are the complement to &lt;code&gt;round(x1 / x2)&lt;/code&gt;.</source>
          <target state="translated">Python 3.7Ïùò &lt;a href=&quot;https://docs.python.org/dev/library/math.html#math.remainder&quot;&gt; &lt;code&gt;math.remainder&lt;/code&gt; &lt;/a&gt; Î∞è CÏùò &lt;code&gt;remainder&lt;/code&gt; Îäî &lt;code&gt;round(x1 / x2)&lt;/code&gt; Ïùò Î≥¥ÏôÑ Ïù∏ IEEE ÎÇòÎ®∏ÏßÄÎ•º Í≥ÑÏÇ∞Ìï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="5c0fe7048a1f174a874182b509c0239dc3a8e648" translate="yes" xml:space="preserve">
          <source>Python Enhancement Proposals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4a533e8727bd1460e4fab154ecfc44e80f3dad" translate="yes" xml:space="preserve">
          <source>Python Types and C-Structures</source>
          <target state="translated">ÌååÏù¥Ïç¨ ÌÉÄÏûÖÍ≥º C Íµ¨Ï°∞</target>
        </trans-unit>
        <trans-unit id="d9918e60c7561b1d242d43444f0f2c694aab739d" translate="yes" xml:space="preserve">
          <source>Python buffer object pointing to the start of the array&amp;rsquo;s data.</source>
          <target state="translated">Î∞∞Ïó¥ Îç∞Ïù¥ÌÑ∞Ïùò ÏãúÏûëÏùÑ Í∞ÄÎ¶¨ÌÇ§Îäî ÌååÏù¥Ïç¨ Î≤ÑÌçº Í∞ùÏ≤¥.</target>
        </trans-unit>
        <trans-unit id="107d9fec3291fe3925ccde87b1bad232cebecd1d" translate="yes" xml:space="preserve">
          <source>Python bytes exhibiting a copy of &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s raw data.</source>
          <target state="translated">ÌååÏù¥Ïç¨Ïùò ÏÇ¨Î≥∏ Ï†ÑÏãú Î∞îÏù¥Ìä∏ Ïùò ÏõêÏãú Îç∞Ïù¥ÌÑ∞Î•º. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71c1712b30a57351dbb2644643e9a18f158dd80a" translate="yes" xml:space="preserve">
          <source>Python defines only one type of a particular data class (there is only one integer type, one floating-point type, etc.). This can be convenient in applications that don&amp;rsquo;t need to be concerned with all the ways data can be represented in a computer. For scientific computing, however, more control is often needed.</source>
          <target state="translated">PythonÏùÄ ÌäπÏ†ï Îç∞Ïù¥ÌÑ∞ ÌÅ¥ÎûòÏä§Ïùò Ìïú Í∞ÄÏßÄ Ïú†Ìòï Îßå Ï†ïÏùòÌï©ÎãàÎã§ (Ï†ïÏàò Ïú†Ìòï, Î∂ÄÎèô ÏÜåÏàòÏ†ê Ïú†Ìòï Îì±). Ïù¥Í≤ÉÏùÄ Ïª¥Ìì®ÌÑ∞ÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º ÌëúÌòÑÌï† ÏàòÏûàÎäî Î™®Îì† Î∞©Î≤ïÏóê Ïã†Í≤Ω Ïì∏ ÌïÑÏöîÍ∞ÄÏóÜÎäî ÏùëÏö© ÌîÑÎ°úÍ∑∏Îû®ÏóêÏÑú Ìé∏Î¶¨ Ìï† Ïàò ‚Äã‚ÄãÏûàÏäµÎãàÎã§. Í∑∏Îü¨ÎÇò Í≥ºÌïô Ïª¥Ìì®ÌåÖÏùò Í≤ΩÏö∞ Îçî ÎßéÏùÄ Ï†úÏñ¥Í∞Ä ÌïÑÏöîÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5d5210661a1d172ff288fde48cef27d0dc81ddc5" translate="yes" xml:space="preserve">
          <source>Python extensions are especially straightforward to understand because they all have a very similar structure. Admittedly, NumPy is not a trivial extension to Python, and may take a little more snooping to grasp. This is especially true because of the code-generation techniques, which simplify maintenance of very similar code, but can make the code a little less readable to beginners. Still, with a little persistence, the code can be opened to your understanding. It is my hope, that this guide to the C-API can assist in the process of becoming familiar with the compiled-level work that can be done with NumPy in order to squeeze that last bit of necessary speed out of your code.</source>
          <target state="translated">ÌååÏù¥Ïç¨ ÌôïÏû•ÏùÄ Î™®Îëê Îß§Ïö∞ Ïú†ÏÇ¨Ìïú Íµ¨Ï°∞Î•º Í∞ÄÏßÄÍ≥† ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê Ïù¥Ìï¥ÌïòÍ∏∞ ÏâΩÏäµÎãàÎã§. Î∂ÑÎ™ÖÌûà NumPyÎäî ÌååÏù¥Ïç¨Ïóê ÎåÄÌïú ÏÇ¨ÏÜåÌïú ÌôïÏû•Ïù¥ ÏïÑÎãàÎ©∞ ÌååÏïÖÌïòÍ∏∞ ÏúÑÌï¥ ÏïΩÍ∞ÑÏùò Ïä§ÎàÑÌïëÏù¥ ÌïÑÏöîÌï† Ïàò ÏûàÏäµÎãàÎã§. Ïù¥Îäî Îß§Ïö∞ Ïú†ÏÇ¨Ìïú ÏΩîÎìúÏùò Ïú†ÏßÄ Í¥ÄÎ¶¨Î•º Îã®ÏàúÌôîÌïòÎäî ÏΩîÎìú ÏÉùÏÑ± Í∏∞Ïà† ÎçïÎ∂ÑÏóê ÌäπÌûà Í∑∏Î†áÏäµÎãàÎã§. Í∑∏ÎûòÎèÑ ÏïΩÍ∞ÑÏùò ÎÅàÍ∏∞Í∞Ä ÏûàÏúºÎ©¥ Ïù¥Ìï¥ÌïòÍ∏∞ ÏâΩÍ≤å ÏΩîÎìúÎ•º Ïó¥ Ïàò ÏûàÏäµÎãàÎã§. C-APIÏóê ÎåÄÌïúÏù¥ ÏïàÎÇ¥ÏÑúÍ∞Ä ÏΩîÎìúÏóêÏÑú ÌïÑÏöîÌïú ÎßàÏßÄÎßâ ÏÜçÎèÑÎ•º ÏßúÎÇ¥Í∏∞ ÏúÑÌï¥ NumPyÎ°ú ÏàòÌñâ Ìï† ÏàòÏûàÎäî Ïª¥ÌååÏùº Îêú ÏàòÏ§ÄÏùò ÏûëÏóÖÏóê ÏùµÏàôÌï¥ÏßÄÎäî Í≥ºÏ†ïÏùÑ ÎèÑÏö∏ Ïàò ÏûàÍ∏∞Î•º Î∞îÎûçÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="22627658b7ded82b8a5fd93722f885e3a35eb47e" translate="yes" xml:space="preserve">
          <source>Python ints/longs, strings, and unicode objects are automatically converted as needed to equivalent ctypes arguments The None object is also converted automatically to a NULL pointer. All other Python objects must be converted to ctypes-specific types. There are two ways around this restriction that allow ctypes to integrate with other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5818460aa41dfaaedd01b52a8acaa96bdc50eeb9" translate="yes" xml:space="preserve">
          <source>Python is a high-level (highly abstracted, or English-like) language. This abstraction comes at a price in execution speed, and sometimes it becomes necessary to use lower level languages to do fast computations. A wrapper is code that provides a bridge between high and the low level languages, allowing, e.g., Python to execute code written in C or Fortran.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcede00088af7275e2dc81570e516d63c70c6b0" translate="yes" xml:space="preserve">
          <source>Python module &lt;code&gt;numpy.f2py&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d39e303575ab2dbc8626769db1e05510b7aa6db" translate="yes" xml:space="preserve">
          <source>Python module block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a7546c220aa89bee3ba5c29162c354b20bdba2" translate="yes" xml:space="preserve">
          <source>Python passes mutable objects as references, so function calls make no copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3946a4bfa3a519fc2d6f4efca0a7f6845a419b" translate="yes" xml:space="preserve">
          <source>Python session:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8510c21a51607b9b82e11a933bd95004753d4078" translate="yes" xml:space="preserve">
          <source>Python side</source>
          <target state="translated">ÌååÏù¥Ïç¨ Ï∏°</target>
        </trans-unit>
        <trans-unit id="ec9208ec8a1374d317862c9da7f1b3f2fa465040" translate="yes" xml:space="preserve">
          <source>Python tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1dc5f1ae8c29d72145e3040337d1c666fd7fb1" translate="yes" xml:space="preserve">
          <source>Python types are the functional equivalent in C of classes in Python. By constructing a new Python type you make available a new object for Python. The ndarray object is an example of a new type defined in C. New types are defined in C by two basic steps:</source>
          <target state="translated">ÌååÏù¥Ïç¨ ÌÉÄÏûÖÏùÄ ÌååÏù¥Ïç¨ÏóêÏÑú ÌÅ¥ÎûòÏä§ CÏùò Í∏∞Îä•Í≥º ÎèôÏùºÌï©ÎãàÎã§. ÏÉàÎ°úÏö¥ ÌååÏù¥Ïç¨ ÌÉÄÏûÖÏùÑ ÎßåÎì§Î©¥ ÌååÏù¥Ïç¨ÏùÑÏúÑÌïú ÏÉàÎ°úÏö¥ Í∞ùÏ≤¥Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§. ndarray Í∞ùÏ≤¥Îäî CÎ°ú Ï†ïÏùò Îêú ÏÉàÎ°úÏö¥ Ïú†ÌòïÏùò ÏòàÏûÖÎãàÎã§. ÏÉàÎ°úÏö¥ Ïú†ÌòïÏùÄ CÏóêÏÑú Îëê Í∞ÄÏßÄ Í∏∞Î≥∏ Îã®Í≥ÑÎ°ú Ï†ïÏùòÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a7622004c4e2ccdfe489e6bf287396818884a310" translate="yes" xml:space="preserve">
          <source>Python uses 0 (zero) based indexing. The initial element of a sequence is found using a[0].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715cae7fd226560086dae94ad144273420976abb" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s built-in binary representation generator of an integer.</source>
          <target state="translated">ÌååÏù¥Ïç¨ ÎÇ¥Ïû• Ï†ïÏàò Ïù¥ÏßÑ ÌëúÌòÑ ÏÉùÏÑ±Í∏∞.</target>
        </trans-unit>
        <trans-unit id="e22c9744f3a2a672e4ea24b21b1729f0453a66e7" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s floating-point numbers are usually 64-bit floating-point numbers, nearly equivalent to &lt;code&gt;np.float64&lt;/code&gt;. In some unusual situations it may be useful to use floating-point numbers with more precision. Whether this is possible in numpy depends on the hardware and on the development environment: specifically, x86 machines provide hardware floating-point with 80-bit precision, and while most C compilers provide this as their &lt;code&gt;long double&lt;/code&gt; type, MSVC (standard for Windows builds) makes &lt;code&gt;long double&lt;/code&gt; identical to &lt;code&gt;double&lt;/code&gt; (64 bits). NumPy makes the compiler&amp;rsquo;s &lt;code&gt;long double&lt;/code&gt; available as &lt;code&gt;np.longdouble&lt;/code&gt; (and &lt;code&gt;np.clongdouble&lt;/code&gt; for the complex numbers). You can find out what your numpy provides with &lt;code&gt;np.finfo(np.longdouble)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6ec83e8a42d4aa8fa0ce5362bc10d19b145c5b" translate="yes" xml:space="preserve">
          <source>Python(s) from &lt;a href=&quot;https://python.org&quot;&gt;python.org&lt;/a&gt; or linux distro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f45cff7b86d765154bd14092545b47b7c3dd96" translate="yes" xml:space="preserve">
          <source>Python-side of the array interface</source>
          <target state="translated">Î∞∞Ïó¥ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Ïùò ÌååÏù¥Ïç¨ Ï∏°</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="b36ca948406251b905c161d2bc4df7edc60ee525" translate="yes" xml:space="preserve">
          <source>QR decomposition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f07dadd16bca01495aa54ac0a3947dc7700c6e6" translate="yes" xml:space="preserve">
          <source>Quadrature</source>
          <target state="translated">Quadrature</target>
        </trans-unit>
        <trans-unit id="b4ca896ab6430bf088f7a160db48b5828697c323" translate="yes" xml:space="preserve">
          <source>Quansight (Ralf Gommers, Hameer Abbasi, Melissa Weber Mendon&amp;ccedil;a, Mars Lee, Matti Picus)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be19305c9a1d0f25c04fa229c87c646353945ad4" translate="yes" xml:space="preserve">
          <source>Quantile or sequence of quantiles to compute, which must be between 0 and 1 inclusive.</source>
          <target state="translated">Í≥ÑÏÇ∞Ìï† Quantile ÎòêÎäî Quantile ÏãúÌÄÄÏä§ (0Í≥º 1 ÏÇ¨Ïù¥ Ïó¨Ïïº Ìï®).</target>
        </trans-unit>
        <trans-unit id="11c93e99f707ede79832686e563a953712781337" translate="yes" xml:space="preserve">
          <source>Quarteroni A., Sacco R., Saleri F. (2007) Numerical Mathematics (Texts in Applied Mathematics). New York: Springer.</source>
          <target state="translated">Quarteroni A., Sacco R., Saleri F. (2007) ÏàòÏπò ÏàòÌïô (ÏùëÏö© ÏàòÌïôÏùò ÌÖçÏä§Ìä∏). Îâ¥Ïöï : Ïä§ÌîÑÎßÅÍ±∞.</target>
        </trans-unit>
        <trans-unit id="9a1fc1731f624d1f9dbca42b781ff8a60a6594e1" translate="yes" xml:space="preserve">
          <source>Questions</source>
          <target state="translated">Questions</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">Îπ†Î•∏ ÏãúÏûë</target>
        </trans-unit>
        <trans-unit id="d1f2fbad266ea6fa84903378852c12081041ede4" translate="yes" xml:space="preserve">
          <source>Quick comparison of legacy &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/random/legacy&quot;&gt;mtrand&lt;/a&gt; to the new &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Î†àÍ±∞Ïãú &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/random/legacy&quot;&gt;mtrand&lt;/a&gt; ÏôÄ ÏÉàÎ°úÏö¥ &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt; Ïùò Îπ†Î•∏ ÎπÑÍµê</target>
        </trans-unit>
        <trans-unit id="7d58f6c89eeab4eb904111c83185f1f96dd91c4e" translate="yes" xml:space="preserve">
          <source>Quick comparison of legacy &lt;a href=&quot;https://numpy.org/doc/1.19/reference/random/legacy&quot;&gt;mtrand&lt;/a&gt; to the new &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dc47a605c19f74107aba0ff721a07067a35347" translate="yes" xml:space="preserve">
          <source>Quick, inline access to the element at the given coordinates in the ndarray, &lt;em&gt;obj&lt;/em&gt;, which must have respectively 1, 2, 3, or 4 dimensions (this is not checked). The corresponding &lt;em&gt;i&lt;/em&gt;, &lt;em&gt;j&lt;/em&gt;, &lt;em&gt;k&lt;/em&gt;, and &lt;em&gt;l&lt;/em&gt; coordinates can be any integer but will be interpreted as &lt;code&gt;npy_intp&lt;/code&gt;. You may want to typecast the returned pointer to the data type of the ndarray.</source>
          <target state="translated">ndarray &lt;em&gt;obj&lt;/em&gt; Ïùò Ï£ºÏñ¥ÏßÑ Ï¢åÌëúÏóêÏÑú ÏöîÏÜåÏóê ÎåÄÌïú Îπ†Î•∏ Ïù∏ÎùºÏù∏ Ïï°ÏÑ∏Ïä§. Í∞ÅÍ∞Å 1, 2, 3 ÎòêÎäî 4 ÏπòÏàòÎ•º Í∞ÄÏ†∏ÏïºÌï©ÎãàÎã§ (Ï≤¥ÌÅ¨ÎêòÏßÄ ÏïäÏùå). Ìï¥Îãπ &lt;em&gt;i&lt;/em&gt; , &lt;em&gt;j&lt;/em&gt; , &lt;em&gt;k&lt;/em&gt; Î∞è &lt;em&gt;l&lt;/em&gt; Ï¢åÌëúÎäî ÏûÑÏùòÏùò Ï†ïÏàòÏùº Ïàò ÏûàÏßÄÎßå &lt;code&gt;npy_intp&lt;/code&gt; Î°ú Ìï¥ÏÑùÎê©ÎãàÎã§ . Î¶¨ÌÑ¥ Îêú Ìè¨Ïù∏ÌÑ∞Î•º ndarrayÏùò Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏóê ÎåÄÌï¥ Ïú†Ìòï Ï∫êÏä§Ìä∏ ‚Äã‚ÄãÌï† Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="15a9938d250402dce230cd796ffc690728ee0bb3" translate="yes" xml:space="preserve">
          <source>Quickstart Tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2eb7ad914b9fac241ecb579529ee12e85916cc" translate="yes" xml:space="preserve">
          <source>Quickstart tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46cdbd2c3682e28b5f00ade089e61170e5ccaf3" translate="yes" xml:space="preserve">
          <source>Quite often, a single character marks the separation between columns. For example, comma-separated files (CSV) use a comma (&lt;code&gt;,&lt;/code&gt;) or a semicolon (&lt;code&gt;;&lt;/code&gt;) as delimiter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a3c007723a673f3d3a3b81bf06d79d91d55ba5" translate="yes" xml:space="preserve">
          <source>Quite often, new arrays must be created from within extension-module code. Perhaps an output array is needed and you don&amp;rsquo;t want the caller to have to supply it. Perhaps only a temporary array is needed to hold an intermediate calculation. Whatever the need there are simple ways to get an ndarray object of whatever data-type is needed. The most general function for doing this is &lt;a href=&quot;../reference/c-api/array#c.PyArray_NewFromDescr&quot;&gt;&lt;code&gt;PyArray_NewFromDescr&lt;/code&gt;&lt;/a&gt;. All array creation functions go through this heavily re-used code. Because of its flexibility, it can be somewhat confusing to use. As a result, simpler forms exist that are easier to use. These forms are part of the &lt;a href=&quot;../reference/c-api/array#c.PyArray_SimpleNew&quot;&gt;&lt;code&gt;PyArray_SimpleNew&lt;/code&gt;&lt;/a&gt; family of functions, which simplify the interface by providing default values for common use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="d2b4790aa17c559e7d49a02300f66e5acc09c7cc" translate="yes" xml:space="preserve">
          <source>R&amp;rsquo;s default method, only accounts for data size. Only optimal for gaussian data and underestimates number of bins for large non-gaussian datasets.</source>
          <target state="translated">RÏùò Í∏∞Î≥∏ Î∞©Î≤ïÏùÄ Îç∞Ïù¥ÌÑ∞ ÌÅ¨Í∏∞ Îßå ÏÑ§Î™ÖÌï©ÎãàÎã§. Í∞ÄÏö∞ÏãúÏïà Îç∞Ïù¥ÌÑ∞ÏóêÎßå ÏµúÏ†ÅÏù¥Î©∞ ÎπÑ Í∞ÄÏö∞ÏãúÏïà Îç∞Ïù¥ÌÑ∞ ÏÑ∏Ìä∏Ïùò Îπà ÏàòÎ•º Í≥ºÏÜå ÌèâÍ∞ÄÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e466c180b85dc9031af2b5a4c5651b82eb9bc974" translate="yes" xml:space="preserve">
          <source>R. A. Horn &amp;amp; C. R. Johnson, &lt;em&gt;Matrix Analysis&lt;/em&gt;. Cambridge, UK: Cambridge University Press, 1999, pp. 146-7.</source>
          <target state="translated">RA Horn &amp;amp; CR Johnson, &lt;em&gt;Îß§Ìä∏Î¶≠Ïä§ Î∂ÑÏÑù&lt;/em&gt; . ÏòÅÍµ≠ ÏºÄÏûÑÎ∏åÎ¶¨ÏßÄ : Cambridge University Press, 1999, 146-7 Ï™Ω.</target>
        </trans-unit>
        <trans-unit id="1f0b90e934e6d467ca649dfa3f62c4e10ef88561" translate="yes" xml:space="preserve">
          <source>RNG advanced delta steps</source>
          <target state="translated">RNG Í≥†Í∏â Îç∏ÌÉÄ Îã®Í≥Ñ</target>
        </trans-unit>
        <trans-unit id="6545a50315a74fecf9e90f28c368f4752be2bd37" translate="yes" xml:space="preserve">
          <source>Radix in which numbers are represented.</source>
          <target state="translated">Ïà´ÏûêÎ•º ÎÇòÌÉÄÎÇ¥Îäî Í∏∞Ïàò.</target>
        </trans-unit>
        <trans-unit id="8b6b8b03eba324c38b16026469fc914b0b26f4a1" translate="yes" xml:space="preserve">
          <source>Raise a Chebyshev series to a power.</source>
          <target state="translated">Ï≤¥ÎπÑ ÏáºÌîÑ ÏãúÎ¶¨Ï¶àÎ•º Í∞ïÌôîÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="1433c91546e5b544c9112df5c69ea4b5d4bbc794" translate="yes" xml:space="preserve">
          <source>Raise a Hermite series to a power.</source>
          <target state="translated">Hermite ÏãúÎ¶¨Ï¶àÎ•º Í∞ïÌôîÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="830e9c594b1dd5342a4860749a769faf749549fb" translate="yes" xml:space="preserve">
          <source>Raise a Laguerre series to a power.</source>
          <target state="translated">Laguerre ÏãúÎ¶¨Ï¶àÎ•º Í∞ïÌôîÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="d4f4ef6bf7525ff49b10c9a028f44177eac9984c" translate="yes" xml:space="preserve">
          <source>Raise a Legendre series to a power.</source>
          <target state="translated">Legendre ÏãúÎ¶¨Ï¶àÎ•º Í∞ïÌôîÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="22ff1ebc98b580f0a868022ecc4bb583803a0e8d" translate="yes" xml:space="preserve">
          <source>Raise a polynomial to a power.</source>
          <target state="translated">Îã§Ìï≠ÏãùÏùÑ Í±∞Îì≠ Ï†úÍ≥±Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="598e74a434aa280ccb5a0d4397d1af3198e03b9c" translate="yes" xml:space="preserve">
          <source>Raise a square matrix to the (integer) power &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">Ï†ú (Ï†ïÏàò)Ïóê Ï†ÑÏõê Ï†ïÎ∞© ÌñâÎ†¨ Ï¶ùÏï° &lt;code&gt;n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bf84ebc042ea6ba8bccb29d049c9e9df161075d" translate="yes" xml:space="preserve">
          <source>Raise each base in &lt;code&gt;x1&lt;/code&gt; to the positionally-corresponding power in &lt;code&gt;x2&lt;/code&gt;. &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; must be broadcastable to the same shape. Note that an integer type raised to a negative integer power will raise a ValueError.</source>
          <target state="translated">Í∞ÅÎ≤†Ïù¥Ïä§ Ïò¨Î¶¨Í≥† &lt;code&gt;x1&lt;/code&gt; Ïóê ÏúÑÏπò Ï†ÅÏúºÎ°ú ÎåÄÏùëÌïòÎäî Ï†ÑÎ†•- &lt;code&gt;x2&lt;/code&gt; . &lt;code&gt;x1&lt;/code&gt; Í≥º &lt;code&gt;x2&lt;/code&gt; Îäî Í∞ôÏùÄ Î™®ÏñëÏúºÎ°ú Î∏åÎ°úÎìú Ï∫êÏä§Ìä∏ Ìï† Ïàò ÏûàÏñ¥ÏïºÌï©ÎãàÎã§. ÏùåÏùò Ï†ïÏàò Ï†úÍ≥±ÏúºÎ°ú Ï¶ùÍ∞Ä Îêú Ï†ïÏàò Ïú†ÌòïÏùÄ ValueErrorÎ•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d8cf32ba694b044c00f0cb66b55afd29db6e38fc" translate="yes" xml:space="preserve">
          <source>Raise each base in &lt;code&gt;x1&lt;/code&gt; to the positionally-corresponding power in &lt;code&gt;x2&lt;/code&gt;. &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; must be broadcastable to the same shape. This differs from the power function in that integers, float16, and float32 are promoted to floats with a minimum precision of float64 so that the result is always inexact. The intent is that the function will return a usable result for negative powers and seldom overflow for positive powers.</source>
          <target state="translated">Í∞ÅÎ≤†Ïù¥Ïä§ Ïò¨Î¶¨Í≥† &lt;code&gt;x1&lt;/code&gt; Ïóê ÏúÑÏπò Ï†ÅÏúºÎ°ú ÎåÄÏùëÌïòÎäî Ï†ÑÎ†•- &lt;code&gt;x2&lt;/code&gt; . &lt;code&gt;x1&lt;/code&gt; Í≥º &lt;code&gt;x2&lt;/code&gt; Îäî Í∞ôÏùÄ Î™®ÏñëÏúºÎ°ú Î∏åÎ°úÎìú Ï∫êÏä§Ìä∏ Ìï† Ïàò ÏûàÏñ¥ÏïºÌï©ÎãàÎã§. Ïù¥Í≤ÉÏùÄ Ï†ïÏàò, float16 Î∞è float32Í∞Ä float64Ïùò ÏµúÏÜå Ï†ïÎ∞ÄÎèÑÎ°ú floatÎ°ú ÏäπÍ≤©ÎêòÏñ¥ Í≤∞Í≥ºÍ∞Ä Ìï≠ÏÉÅ Ï†ïÌôïÌïòÏßÄ ÏïäÎã§Îäî Ï†êÏóêÏÑú power Ìï®ÏàòÏôÄ Îã§Î¶ÖÎãàÎã§. ÏùòÎèÑÎäî Ìï®ÏàòÍ∞Ä ÎßàÏù¥ÎÑàÏä§ ÌååÏõåÏóê ÎåÄÌï¥ Ïú†Ïö©Ìïú Í≤∞Í≥ºÎ•º Î∞òÌôòÌïòÍ≥† Ìè¨ÏßÄÌã∞Î∏å ÌååÏõåÏóê ÎåÄÌï¥ÏÑúÎäî Í±∞Ïùò Ïò§Î≤ÑÌîåÎ°úÌïòÏßÄ ÏïäÎäî Í≤ÉÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="fe0d5b5d189c7a09dcbd6dbfc47657c8961224d1" translate="yes" xml:space="preserve">
          <source>Raise other to the power self, masking the potential NaNs/Infs</source>
          <target state="translated">Ïû†Ïû¨Ï†Å Ïù∏ NaN / InfsÎ•º Í∞ÄÎ¶¨Î©¥ÏÑú Îã§Î•∏ ÌûòÏùÑ Ïä§Ïä§Î°ú ÎÅåÏñ¥ Ïò¨Î¶¨Ïã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="a148c04bf6e6f56f5f6132becf78d9ad2242edd0" translate="yes" xml:space="preserve">
          <source>Raise self to the power other, in place.</source>
          <target state="translated">Ï†úÏûêÎ¶¨Ïóê Îã§Î•∏ ÌûòÏùÑ Í∏∞Î•¥Ïã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="9583ffb7f4b9306704e69d3a8957555d2004a941" translate="yes" xml:space="preserve">
          <source>Raise self to the power other, masking the potential NaNs/Infs</source>
          <target state="translated">Ïû†Ïû¨Ï†Å Ïù∏ NaN / InfsÎ•º Í∞ÄÎ¶¨Î©¥ÏÑú Îã§Î•∏ ÌûòÏúºÎ°ú ÏûêÍ∏∞Î•º ÌÇ§Ïö∞Ïã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="4bdc396d61629b1fa9fb440d595ae01de00998e3" translate="yes" xml:space="preserve">
          <source>Raise the bases to different exponents.</source>
          <target state="translated">Î∞ëÏùÑ Îã§Î•∏ ÏßÄÏàòÎ°ú Ïò¨Î¶ΩÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="946c9881117f4769309ccb4f4753b1c6ab104379" translate="yes" xml:space="preserve">
          <source>Raised if some values are missing and &lt;code&gt;allow_masked&lt;/code&gt; is False.</source>
          <target state="translated">ÏùºÎ∂Ä Í∞íÏù¥ ÎàÑÎùΩÎêòÍ≥† &lt;code&gt;allow_masked&lt;/code&gt; Í∞Ä False Ïù¥Î©¥ Î∞úÏÉù Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3df850d5a3f4aea85bfff38777ca987935cf40c9" translate="yes" xml:space="preserve">
          <source>Raised if the matrix in the least-squares fit is rank deficient. The warning is only raised if &lt;code&gt;full&lt;/code&gt; == False. The warnings can be turned off by:</source>
          <target state="translated">ÏµúÏÜå Ï†úÍ≥± ÌîºÌåÖÏùò ÌñâÎ†¨Ïóê ÏàúÏúÑÍ∞Ä Î∂ÄÏ°±ÌïòÎ©¥ Î∞úÏÉùÌï©ÎãàÎã§. &lt;code&gt;full&lt;/code&gt; == False Ïù∏ Í≤ΩÏö∞ÏóêÎßå Í≤ΩÍ≥†Í∞Ä Î∞úÏÉùÌï©ÎãàÎã§ . Îã§ÏùåÍ≥º Í∞ôÏùÄ Î∞©Î≤ïÏúºÎ°ú Í≤ΩÍ≥†Î•º ÎÅå Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1da00b35a6bd8df92262b33514de89f40ea4bb4a" translate="yes" xml:space="preserve">
          <source>Raised when &lt;a href=&quot;#numpy.polynomial.polyutils.as_series&quot;&gt;&lt;code&gt;as_series&lt;/code&gt;&lt;/a&gt; cannot convert its input to 1-d arrays, or at least one of the resulting arrays is empty.</source>
          <target state="translated">Í≤ΩÏö∞Ïóê Î∞úÏÉù &lt;a href=&quot;#numpy.polynomial.polyutils.as_series&quot;&gt; &lt;code&gt;as_series&lt;/code&gt; Ïù¥&lt;/a&gt; 1-D Ïñ¥Î†àÏù¥Î°ú ÏûÖÎ†•ÏùÑ Î≥ÄÌôò Ìï† Ïàò ÏûàÍ≥†, ÎòêÎäî ÏÉùÏÑ± Îêú Î∞∞Ïó¥ Ï§ë Ï†ÅÏñ¥ÎèÑ ÌïòÎÇòÎäî ÎπÑÏñ¥ÏûàÎã§.</target>
        </trans-unit>
        <trans-unit id="c36d9458e0d1baae7403b5ce642a78b09e4acc7f" translate="yes" xml:space="preserve">
          <source>Raises</source>
          <target state="translated">Raises</target>
        </trans-unit>
        <trans-unit id="d538ecf7534e2a4aee04c86789066cbbbbb7fd36" translate="yes" xml:space="preserve">
          <source>Raises RuntimeError if the command fails.</source>
          <target state="translated">Î™ÖÎ†πÏù¥ Ïã§Ìå®ÌïòÎ©¥ RuntimeErrorÍ∞Ä Î∞úÏÉùÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0af06132783a2cdeb7f5589b89eb9795871b0985" translate="yes" xml:space="preserve">
          <source>Raises ValueError if &lt;code&gt;a&lt;/code&gt; contains NaN (Not a Number) or Inf (Infinity).</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; Ïóê NaN (Ïà´ÏûêÍ∞Ä ÏïÑÎãò) ÎòêÎäî Inf (Î¨¥ÌïúÎåÄ) Í∞Ä Ìè¨Ìï® Îêú Í≤ΩÏö∞ ValueErrorÍ∞Ä Î∞úÏÉù Ìï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="3b0d8fd28b2334fc68f49585d60f498c5a36d167" translate="yes" xml:space="preserve">
          <source>Raises ValueError if array_like contains Nans or Infs.</source>
          <target state="translated">array_likeÏóê Nans ÎòêÎäî InfsÍ∞Ä Ìè¨Ìï® Îêú Í≤ΩÏö∞ ValueErrorÍ∞Ä Î∞úÏÉùÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5838177ddf4176063a6650d7806535d5e216dfdd" translate="yes" xml:space="preserve">
          <source>Raises a TypeError if the &lt;code&gt;casting&lt;/code&gt; rule is violated, and if &lt;a href=&quot;numpy.where#numpy.where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; is provided, it selects which elements to copy.</source>
          <target state="translated">Í≤ΩÏö∞ ÌòïÏãù Ïò§Î•òÎ•º Î∞úÏÉù &lt;code&gt;casting&lt;/code&gt; Í∑úÏπôÏùÑ ÏúÑÎ∞ò Ìïú Í≤ΩÏö∞ &lt;a href=&quot;numpy.where#numpy.where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt; , Í∑∏ ÏÑ†ÌÉùÏùÑ Ï†úÍ≥µÌïòÎäî ÏöîÏÜå Î≥µÏÇ¨.</target>
        </trans-unit>
        <trans-unit id="10d5a8fe7dd0c1df476c20449c53be56b0ebef4a" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if two array_like objects are not equal.</source>
          <target state="translated">Îëê array_like Í∞ùÏ≤¥Í∞Ä Í∞ôÏßÄ ÏïäÏúºÎ©¥ AssertionErrorÎ•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b56e528b14cd860cf45fa7404007589e1fc25f66" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if two array_like objects are not ordered by less than.</source>
          <target state="translated">Îëê Í∞úÏùò array_like Í∞ùÏ≤¥Î•º ÏàúÏÑúÎåÄÎ°ú Ï†ïÎ†¨ÌïòÏßÄ ÏïäÏúºÎ©¥ AssertionErrorÍ∞Ä Î∞úÏÉùÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="63509722f9e035f7aa2150ce097ddf7f3f74dfee" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if two items are not equal up to desired precision.</source>
          <target state="translated">Îëê Ìï≠Î™©Ïù¥ ÏõêÌïòÎäî Ï†ïÎ∞ÄÎèÑÍπåÏßÄ Í∞ôÏßÄ ÏïäÏúºÎ©¥ AssertionErrorÎ•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5050121b028d8c3f8f110816f192ec4646e9c08b" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if two items are not equal up to significant digits.</source>
          <target state="translated">Îëê Ìï≠Î™©Ïù¥ Ïú†Ìö® Ïà´Ïûê Ïù¥ÌïòÏù∏ Í≤ΩÏö∞ AssertionErrorÎ•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c18d49ef44903f9889dad409de993b3d2359c8f7" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if two objects are not equal up to desired precision.</source>
          <target state="translated">Îëê Í∞úÏ≤¥Í∞Ä ÏõêÌïòÎäî Ï†ïÎ∞ÄÎèÑÍπåÏßÄ Í∞ôÏßÄ ÏïäÏúºÎ©¥ AssertionErrorÎ•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1eec8aca4574ea8e79992164980d49f12a5bd41b" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if two objects are not equal up to desired tolerance.</source>
          <target state="translated">Îëê Í∞ùÏ≤¥Í∞Ä ÏõêÌïòÎäî Í≥µÏ∞® Ïù¥ÌïòÍ∞ÄÎêòÎ©¥ AssertionErrorÎ•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="cb74da1adf4a923cc1aa84dbeef31b75ab9ca5a4" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if two objects are not equal.</source>
          <target state="translated">Îëê Í∞ùÏ≤¥Í∞Ä Í∞ôÏßÄ ÏïäÏúºÎ©¥ AssertionErrorÎ•º Î∞úÏÉùÏãúÌÇµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="49944c1faf44693532affaf2d717c3b6c5cd852b" translate="yes" xml:space="preserve">
          <source>Ralf Gommers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58c0eec05bcdb93f360c94ce4a7ad4931479f70" translate="yes" xml:space="preserve">
          <source>Random Generator</source>
          <target state="translated">ÎûúÎç§ ÏÉùÏÑ±Í∏∞</target>
        </trans-unit>
        <trans-unit id="0c3cac68f3a4ab1ee988754cad76285139565d20" translate="yes" xml:space="preserve">
          <source>Random integer generation on a closed interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e042c5d9a23f8d9c9643afa65f1ad35dc89aebb2" translate="yes" xml:space="preserve">
          <source>Random integers of type &lt;code&gt;np.int_&lt;/code&gt; between &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt;, inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ee7d5a782883cac7905ed8a5a7dfb0448b48c7" translate="yes" xml:space="preserve">
          <source>Random integers of type np.int between &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt;, inclusive.</source>
          <target state="translated">&lt;code&gt;low&lt;/code&gt; ÏôÄ &lt;code&gt;high&lt;/code&gt; ÏÇ¨Ïù¥Ïùò np.int Ïú†ÌòïÏùò ÏûÑÏùòÏùò Ï†ïÏàò .</target>
        </trans-unit>
        <trans-unit id="51a1c73d428dbce5f27258fec7079935feb69893" translate="yes" xml:space="preserve">
          <source>Random number generator in the &lt;code&gt;testing&lt;/code&gt; namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedcea91bbd64d179e04e09799d9cf9271d320c0" translate="yes" xml:space="preserve">
          <source>Random sampling</source>
          <target state="translated">Î¨¥ÏûëÏúÑ ÏÉòÌîåÎßÅ</target>
        </trans-unit>
        <trans-unit id="8019ea86d533243c05f28cf21472c16f3cb2fc40" translate="yes" xml:space="preserve">
          <source>Random sampling (&lt;code&gt;numpy.random&lt;/code&gt;)</source>
          <target state="translated">Î¨¥ÏûëÏúÑ ÏÉòÌîåÎßÅ ( &lt;code&gt;numpy.random&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2418a38e32562622d550e558d2e9dc0452ea8269" translate="yes" xml:space="preserve">
          <source>Random sampling (numpy.random)</source>
          <target state="translated">Î¨¥ÏûëÏúÑ ÏÉòÌîåÎßÅ (numpy.random)</target>
        </trans-unit>
        <trans-unit id="edf0a300edcb779eacb87411c8aa29531a457eb0" translate="yes" xml:space="preserve">
          <source>Random seed enforced to be a 32 bit unsigned integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39fb2d156cd5f94ddf1b4788fa2b0750d030bb8" translate="yes" xml:space="preserve">
          <source>Random seed used to initialize the pseudo-random number generator or an instantized BitGenerator. If an integer or array, used as a seed for the MT19937 BitGenerator. Values can be any integer between 0 and 2**32 - 1 inclusive, an array (or other sequence) of such integers, or &lt;code&gt;None&lt;/code&gt; (the default). If &lt;a href=&quot;generated/numpy.random.mtrand.randomstate.seed#numpy.random.mtrand.RandomState.seed&quot;&gt;&lt;code&gt;seed&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, then the &lt;code&gt;MT19937&lt;/code&gt; BitGenerator is initialized by reading data from &lt;code&gt;/dev/urandom&lt;/code&gt; (or the Windows analogue) if available or seed from the clock otherwise.</source>
          <target state="translated">ÏùòÏÇ¨ ÎÇúÏàò ÏÉùÏÑ±Í∏∞ ÎòêÎäî Ïù∏Ïä§ÌÑ¥Ïä§Ìôî Îêú BitGeneratorÎ•º Ï¥àÍ∏∞ÌôîÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêòÎäî ÏûÑÏùò ÏãúÎìú. Ï†ïÏàò ÎòêÎäî Î∞∞Ïó¥ Ïù∏ Í≤ΩÏö∞ MT19937 BitGeneratorÏùò ÏãúÎìúÎ°ú ÏÇ¨Ïö©Îê©ÎãàÎã§. Í∞íÏùÄ 0Í≥º 2 ** 32-1 ÏÇ¨Ïù¥Ïùò Ï†ïÏàò, Ïù¥Îü¨Ìïú Ï†ïÏàòÏùò Î∞∞Ïó¥ (ÎòêÎäî Í∏∞ÌÉÄ ÏãúÌÄÄÏä§) ÎòêÎäî &lt;code&gt;None&lt;/code&gt; (Í∏∞Î≥∏Í∞í) Ïùº Ïàò ÏûàÏäµÎãàÎã§. Í≤ΩÏö∞ &lt;a href=&quot;generated/numpy.random.mtrand.randomstate.seed#numpy.random.mtrand.RandomState.seed&quot;&gt; &lt;code&gt;seed&lt;/code&gt; &lt;/a&gt; ÏóÜÎäî &lt;code&gt;None&lt;/code&gt; , Îã§Ïùå &lt;code&gt;MT19937&lt;/code&gt; BitGeneratorÏùÄ Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏñ¥ Ï¥àÍ∏∞Ìôî &lt;code&gt;/dev/urandom&lt;/code&gt; (ÎòêÎäî ÏúàÎèÑÏö∞ ÏïÑÎÇ†Î°úÍ∑∏) Í∞ÄÎä•Ìïú Í≤ΩÏö∞ ÎòêÎäî Ïî®Ïïó Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ ÏãúÍ≥ÑÏóêÏÑú.</target>
        </trans-unit>
        <trans-unit id="24a8dcbd04d257679e6f160379615dc9286b5f72" translate="yes" xml:space="preserve">
          <source>Random seed used to initialize the pseudo-random number generator or an instantized BitGenerator. If an integer or array, used as a seed for the MT19937 BitGenerator. Values can be any integer between 0 and 2**32 - 1 inclusive, an array (or other sequence) of such integers, or &lt;code&gt;None&lt;/code&gt; (the default). If &lt;a href=&quot;generated/numpy.random.seed#numpy.random.seed&quot;&gt;&lt;code&gt;seed&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, then the &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; BitGenerator is initialized by reading data from &lt;code&gt;/dev/urandom&lt;/code&gt; (or the Windows analogue) if available or seed from the clock otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d22a70cdea35b31da003cddbde57b86c810e22e" translate="yes" xml:space="preserve">
          <source>Random values in a given shape.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î™®ÏñëÏùò ÏûÑÏùòÏùò Í∞í.</target>
        </trans-unit>
        <trans-unit id="369338c930fa5a03047b8e593e9d57e7c4df9574" translate="yes" xml:space="preserve">
          <source>Random values.</source>
          <target state="translated">ÏûÑÏùòÏùò Í∞í.</target>
        </trans-unit>
        <trans-unit id="fe91084f9d7c58980cd791bb2c03f445f4027255" translate="yes" xml:space="preserve">
          <source>RandomState</source>
          <target state="translated">RandomState</target>
        </trans-unit>
        <trans-unit id="d5569a0cff9045c83713aeec76f5e382fa18cf36" translate="yes" xml:space="preserve">
          <source>RandomState (class in numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abfe5b30869a44fa80ace33a57a4dea540d9c99" translate="yes" xml:space="preserve">
          <source>RandomState.beta()</source>
          <target state="translated">RandomState.beta()</target>
        </trans-unit>
        <trans-unit id="117bbe1ad097b169318a184cf916d8bda21ad045" translate="yes" xml:space="preserve">
          <source>RandomState.binomial()</source>
          <target state="translated">RandomState.binomial()</target>
        </trans-unit>
        <trans-unit id="e7688addfb058dd9c8bc6e7f0f652074d7e0da40" translate="yes" xml:space="preserve">
          <source>RandomState.bytes()</source>
          <target state="translated">RandomState.bytes()</target>
        </trans-unit>
        <trans-unit id="82d807d100f1d2c078c3c4253dae51a58a84c725" translate="yes" xml:space="preserve">
          <source>RandomState.chisquare()</source>
          <target state="translated">RandomState.chisquare()</target>
        </trans-unit>
        <trans-unit id="48a8fa22fa591f0ac2812b6beccffbc081a8ced9" translate="yes" xml:space="preserve">
          <source>RandomState.choice()</source>
          <target state="translated">RandomState.choice()</target>
        </trans-unit>
        <trans-unit id="cca5326e42f24c901e5134a0c095ddfd8e987557" translate="yes" xml:space="preserve">
          <source>RandomState.dirichlet()</source>
          <target state="translated">RandomState.dirichlet()</target>
        </trans-unit>
        <trans-unit id="171c35300193fd242db5a609175de4e42464b605" translate="yes" xml:space="preserve">
          <source>RandomState.exponential()</source>
          <target state="translated">RandomState.exponential()</target>
        </trans-unit>
        <trans-unit id="b2a4d7b7c01aa82b660113e83c3a72985f6e27c5" translate="yes" xml:space="preserve">
          <source>RandomState.f()</source>
          <target state="translated">RandomState.f()</target>
        </trans-unit>
        <trans-unit id="d42925444a2ec80c48c1f18252c6161f41ab5886" translate="yes" xml:space="preserve">
          <source>RandomState.gamma()</source>
          <target state="translated">RandomState.gamma()</target>
        </trans-unit>
        <trans-unit id="d6018a1baff27a9708d5584fb9cbb206b1685c2f" translate="yes" xml:space="preserve">
          <source>RandomState.geometric()</source>
          <target state="translated">RandomState.geometric()</target>
        </trans-unit>
        <trans-unit id="d05b37915f049416037034af2b422f51d76fc256" translate="yes" xml:space="preserve">
          <source>RandomState.get_state()</source>
          <target state="translated">RandomState.get_state()</target>
        </trans-unit>
        <trans-unit id="7475ddf3fd1008f6e5b7593284403fe2835bd476" translate="yes" xml:space="preserve">
          <source>RandomState.gumbel()</source>
          <target state="translated">RandomState.gumbel()</target>
        </trans-unit>
        <trans-unit id="40909effe287310315dae74d2602a7f322f6e73d" translate="yes" xml:space="preserve">
          <source>RandomState.hypergeometric()</source>
          <target state="translated">RandomState.hypergeometric()</target>
        </trans-unit>
        <trans-unit id="68bba1cd6ece88545bfc8dbc08714e80f22e7cdd" translate="yes" xml:space="preserve">
          <source>RandomState.laplace()</source>
          <target state="translated">RandomState.laplace()</target>
        </trans-unit>
        <trans-unit id="1dd8f116a0b956f305dcdb1b41d9260319ec7bd6" translate="yes" xml:space="preserve">
          <source>RandomState.logistic()</source>
          <target state="translated">RandomState.logistic()</target>
        </trans-unit>
        <trans-unit id="fe1e1ea0161b7064840f436c5f84019388b9b7dc" translate="yes" xml:space="preserve">
          <source>RandomState.lognormal()</source>
          <target state="translated">RandomState.lognormal()</target>
        </trans-unit>
        <trans-unit id="f224c663a40ba7265626084f8cd12a33fd8568e9" translate="yes" xml:space="preserve">
          <source>RandomState.logseries()</source>
          <target state="translated">RandomState.logseries()</target>
        </trans-unit>
        <trans-unit id="988b27397e7854ef35df1d0c12826a5ccc94bd34" translate="yes" xml:space="preserve">
          <source>RandomState.multinomial()</source>
          <target state="translated">RandomState.multinomial()</target>
        </trans-unit>
        <trans-unit id="769a9ccf0f666dbfccaf0f4af7d45521f9392cae" translate="yes" xml:space="preserve">
          <source>RandomState.multivariate_normal()</source>
          <target state="translated">RandomState.multivariate_normal()</target>
        </trans-unit>
        <trans-unit id="77b3092e2cedc489b3877c56df33a7e90dfd450f" translate="yes" xml:space="preserve">
          <source>RandomState.negative_binomial()</source>
          <target state="translated">RandomState.negative_binomial()</target>
        </trans-unit>
        <trans-unit id="508f85e2459cf4a4183832b94d93d83a1c064cf0" translate="yes" xml:space="preserve">
          <source>RandomState.noncentral_chisquare()</source>
          <target state="translated">RandomState.noncentral_chisquare()</target>
        </trans-unit>
        <trans-unit id="f6d36da4eda40e0fca9b4e45d8b6d2895907d231" translate="yes" xml:space="preserve">
          <source>RandomState.noncentral_f()</source>
          <target state="translated">RandomState.noncentral_f()</target>
        </trans-unit>
        <trans-unit id="7af26d3b8a3ab88380bb8fefafa6e3ca3b422e32" translate="yes" xml:space="preserve">
          <source>RandomState.normal()</source>
          <target state="translated">RandomState.normal()</target>
        </trans-unit>
        <trans-unit id="2fd120fe46cefd3ac55e078d86b937f9ece900d3" translate="yes" xml:space="preserve">
          <source>RandomState.pareto()</source>
          <target state="translated">RandomState.pareto()</target>
        </trans-unit>
        <trans-unit id="80733382a116d845775cbeb2e9d5d64b32ccf6e1" translate="yes" xml:space="preserve">
          <source>RandomState.permutation()</source>
          <target state="translated">RandomState.permutation()</target>
        </trans-unit>
        <trans-unit id="85315ea19abeca7e80e9d82abaad760636c725b1" translate="yes" xml:space="preserve">
          <source>RandomState.poisson()</source>
          <target state="translated">RandomState.poisson()</target>
        </trans-unit>
        <trans-unit id="c006e82fdd89cb4c8db2432157c80a62193a2a7b" translate="yes" xml:space="preserve">
          <source>RandomState.power()</source>
          <target state="translated">RandomState.power()</target>
        </trans-unit>
        <trans-unit id="9865287ef22fce91629c4b2b8232b69b5b28df38" translate="yes" xml:space="preserve">
          <source>RandomState.rand()</source>
          <target state="translated">RandomState.rand()</target>
        </trans-unit>
        <trans-unit id="51329c918acfc931a5fb899c24b774cb871f39bc" translate="yes" xml:space="preserve">
          <source>RandomState.randint()</source>
          <target state="translated">RandomState.randint()</target>
        </trans-unit>
        <trans-unit id="494b50cf7893ce1ce93248bfc6f4199f99bededd" translate="yes" xml:space="preserve">
          <source>RandomState.randn()</source>
          <target state="translated">RandomState.randn()</target>
        </trans-unit>
        <trans-unit id="1113329217565317a00d089412f90ae856753c06" translate="yes" xml:space="preserve">
          <source>RandomState.random_integers()</source>
          <target state="translated">RandomState.random_integers()</target>
        </trans-unit>
        <trans-unit id="bba610994fd27ef5c197ad8b1300cd958ee2a665" translate="yes" xml:space="preserve">
          <source>RandomState.random_sample()</source>
          <target state="translated">RandomState.random_sample()</target>
        </trans-unit>
        <trans-unit id="aa51e600210bbc45fea02f29afa5092add96d37c" translate="yes" xml:space="preserve">
          <source>RandomState.rayleigh()</source>
          <target state="translated">RandomState.rayleigh()</target>
        </trans-unit>
        <trans-unit id="5114ae5445053301631d549b7ff7a4a9d904a588" translate="yes" xml:space="preserve">
          <source>RandomState.seed()</source>
          <target state="translated">RandomState.seed()</target>
        </trans-unit>
        <trans-unit id="58759d27c958d2601c144cb64d09680c6804bc94" translate="yes" xml:space="preserve">
          <source>RandomState.set_state()</source>
          <target state="translated">RandomState.set_state()</target>
        </trans-unit>
        <trans-unit id="f2cc5f02060a215b80f771eb231e0a9a893edd21" translate="yes" xml:space="preserve">
          <source>RandomState.shuffle()</source>
          <target state="translated">RandomState.shuffle()</target>
        </trans-unit>
        <trans-unit id="6ea04e88185589f30a9e21cf62ef7dd79ddb3d14" translate="yes" xml:space="preserve">
          <source>RandomState.standard_cauchy()</source>
          <target state="translated">RandomState.standard_cauchy()</target>
        </trans-unit>
        <trans-unit id="31462b22aa59395f2d79bc4b50eceffeb3a9eb0c" translate="yes" xml:space="preserve">
          <source>RandomState.standard_exponential()</source>
          <target state="translated">RandomState.standard_exponential()</target>
        </trans-unit>
        <trans-unit id="9a24bf06ea58bce33a5af1a5c126f0ee1f8025e1" translate="yes" xml:space="preserve">
          <source>RandomState.standard_gamma()</source>
          <target state="translated">RandomState.standard_gamma()</target>
        </trans-unit>
        <trans-unit id="3c35aebe764834e8404b41e305b1c2bdba81ebdd" translate="yes" xml:space="preserve">
          <source>RandomState.standard_normal()</source>
          <target state="translated">RandomState.standard_normal()</target>
        </trans-unit>
        <trans-unit id="18b083d9e6747bcde501e4678494db914871e70d" translate="yes" xml:space="preserve">
          <source>RandomState.standard_t()</source>
          <target state="translated">RandomState.standard_t()</target>
        </trans-unit>
        <trans-unit id="9b3380e1b312af02ac89689bae2bb6088168223a" translate="yes" xml:space="preserve">
          <source>RandomState.triangular()</source>
          <target state="translated">RandomState.triangular()</target>
        </trans-unit>
        <trans-unit id="1143ee94f68c92354c17829b798d6cc61e45bf47" translate="yes" xml:space="preserve">
          <source>RandomState.uniform()</source>
          <target state="translated">RandomState.uniform()</target>
        </trans-unit>
        <trans-unit id="1fe3836c67c860d7724f8bafc1259729b6ded377" translate="yes" xml:space="preserve">
          <source>RandomState.vonmises()</source>
          <target state="translated">RandomState.vonmises()</target>
        </trans-unit>
        <trans-unit id="1d4f5bbc134c386db78d0c089acb120512909293" translate="yes" xml:space="preserve">
          <source>RandomState.wald()</source>
          <target state="translated">RandomState.wald()</target>
        </trans-unit>
        <trans-unit id="b85bee6448fb71192f478db49619fa74c6205c64" translate="yes" xml:space="preserve">
          <source>RandomState.weibull()</source>
          <target state="translated">RandomState.weibull()</target>
        </trans-unit>
        <trans-unit id="dd6d01e0322dc4f43ff3387ee948254b54315337" translate="yes" xml:space="preserve">
          <source>RandomState.zipf()</source>
          <target state="translated">RandomState.zipf()</target>
        </trans-unit>
        <trans-unit id="4cb6aff915e8a822868796528663cb7b4ac76735" translate="yes" xml:space="preserve">
          <source>Randomly permute a sequence, or return a permuted range.</source>
          <target state="translated">ÏãúÌÄÄÏä§Î•º Î¨¥ÏûëÏúÑÎ°ú ÏπòÌôòÌïòÍ±∞ÎÇò ÏπòÌôò Îêú Î≤îÏúÑÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0794175b1e2c4f055f2ad52201bb8eb9b1378c74" translate="yes" xml:space="preserve">
          <source>Range of values (maximum - minimum) along an axis.</source>
          <target state="translated">Ï∂ïÏùÑ Îî∞Î•∏ Í∞íÏùò Î≤îÏúÑ (ÏµúÎåÄ-ÏµúÏÜå).</target>
        </trans-unit>
        <trans-unit id="feec534742e6180bc6f13dfd13d717993840b899" translate="yes" xml:space="preserve">
          <source>Rank 1 array of values from &lt;code&gt;arr&lt;/code&gt; where &lt;code&gt;condition&lt;/code&gt; is True.</source>
          <target state="translated">Ïùò Í∞íÏùò ÏàúÏúÑ 1 Í∞ú Ïñ¥Î†àÏù¥ &lt;code&gt;arr&lt;/code&gt; &lt;code&gt;condition&lt;/code&gt; Ï∞∏Ïù¥Îã§.</target>
        </trans-unit>
        <trans-unit id="cbd7f56f262035bd5e958bc2b9266c571bfa88a4" translate="yes" xml:space="preserve">
          <source>Rank of M.</source>
          <target state="translated">MÏùò ÏàúÏúÑ</target>
        </trans-unit>
        <trans-unit id="cc92a2b8205da3a2012aa3e6853a0cd476fe05ee" translate="yes" xml:space="preserve">
          <source>Rank of matrix &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">ÌñâÎ†¨ &lt;code&gt;a&lt;/code&gt; ÏàúÏúÑ a .</target>
        </trans-unit>
        <trans-unit id="ed7144bb73f838f438a5e11fa3d98d000acb0f17" translate="yes" xml:space="preserve">
          <source>Rank of the array is the number of singular values of the array that are greater than &lt;code&gt;tol&lt;/code&gt;.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò ÏàúÏúÑÎäî &lt;code&gt;tol&lt;/code&gt; Î≥¥Îã§ ÌÅ∞ Î∞∞Ïó¥Ïùò ÌäπÏù¥ Í∞í ÏàòÏûÖÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="83a0c5cbfc5ad561b302b5c560c203ddf2c7bf6b" translate="yes" xml:space="preserve">
          <source>Rank-1 array of polynomial coefficients.</source>
          <target state="translated">Îã§Ìï≠Ïãù Í≥ÑÏàòÏùò ÏàúÏúÑ -1 Î∞∞Ïó¥.</target>
        </trans-unit>
        <trans-unit id="4cac88a0b6d837ba26b5c2f809827e29f94af828" translate="yes" xml:space="preserve">
          <source>Raspberry Pi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e1d8ef64d36f788a59d6164ff0298b7a7047c1" translate="yes" xml:space="preserve">
          <source>Rate of interest (per period)</source>
          <target state="translated">Ïù¥ÏûêÏú® (Í∏∞Í∞Ñ Îãπ)</target>
        </trans-unit>
        <trans-unit id="ef8aa32f5c51e05514476bf761910b88e4024839" translate="yes" xml:space="preserve">
          <source>Rate of interest as decimal (not per cent) per period</source>
          <target state="translated">Í∏∞Í∞Ñ Îãπ 10 ÏßÑÏàò (ÌçºÏÑºÌä∏Í∞Ä ÏïÑÎãò)Ïùò Ïù¥ÏûêÏú®</target>
        </trans-unit>
        <trans-unit id="d9ddbadc84af23ec234e421450fa00c92ddecaaa" translate="yes" xml:space="preserve">
          <source>Rather than building your project in &lt;code&gt;DEBUG&lt;/code&gt; mode on windows, try building in &lt;code&gt;RELEASE&lt;/code&gt; mode with debug symbols and no optimization. Full &lt;code&gt;DEBUG&lt;/code&gt; mode on windows changes the names of the DLLs python expects to find, so if you wish to truly work in &lt;code&gt;DEBUG&lt;/code&gt; mode you will need to recompile the entire stack of python modules you work with including NumPy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adaf8c89741b32243adb83fb6b9be867b96b099" translate="yes" xml:space="preserve">
          <source>Rather than keeping the code and the tests in the same directory, we put all the tests for a given subpackage in a &lt;code&gt;tests/&lt;/code&gt; subdirectory. For our example, if it doesn&amp;rsquo;t already exist you will need to create a &lt;code&gt;tests/&lt;/code&gt; directory in &lt;code&gt;scipy/xxx/&lt;/code&gt;. So the path for &lt;code&gt;test_yyy.py&lt;/code&gt; is &lt;code&gt;scipy/xxx/tests/test_yyy.py&lt;/code&gt;.</source>
          <target state="translated">ÏΩîÎìúÏôÄ ÌÖåÏä§Ìä∏Î•º ÎèôÏùºÌïú ÎîîÎ†âÌÜ†Î¶¨Ïóê Ïú†ÏßÄÌïòÍ∏∞Î≥¥Îã§Îäî Ï£ºÏñ¥ÏßÑ ÏÑúÎ∏å Ìå®ÌÇ§ÏßÄÏóê ÎåÄÌïú Î™®Îì† ÌÖåÏä§Ìä∏Î•º &lt;code&gt;tests/&lt;/code&gt; ÏÑúÎ∏å ÎîîÎ†âÌÜ†Î¶¨Ïóê ÎÑ£ÏäµÎãàÎã§ . Ïù¥ ÏòàÏ†úÏóêÏÑúÎäî Ï°¥Ïû¨ÌïòÏßÄ ÏïäÎäî Í≤ΩÏö∞ &lt;code&gt;scipy/xxx/&lt;/code&gt; Ïóê &lt;code&gt;tests/&lt;/code&gt; ÎîîÎ†âÌÜ†Î¶¨ Î•º ÏûëÏÑ±Ìï¥ÏïºÌï©ÎãàÎã§ . Îî∞ÎùºÏÑú &lt;code&gt;test_yyy.py&lt;/code&gt; Ïùò Í≤ΩÎ°ú Îäî &lt;code&gt;scipy/xxx/tests/test_yyy.py&lt;/code&gt; ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f09252db0f08958d1124c0c0ec83e5fbbce9daed" translate="yes" xml:space="preserve">
          <source>Rational routines</source>
          <target state="translated">Ìï©Î¶¨Ï†ÅÏù∏ Î£®Ìã¥</target>
        </trans-unit>
        <trans-unit id="98365abf7a35b55e3b549f20aa17daee9fe3c995" translate="yes" xml:space="preserve">
          <source>Rationale</source>
          <target state="translated">Rationale</target>
        </trans-unit>
        <trans-unit id="3804fd84cc4a91cdd7d78ef87d2bbbda2c97d1f4" translate="yes" xml:space="preserve">
          <source>Raw binary files</source>
          <target state="translated">ÏõêÏãú Î∞îÏù¥ÎÑàÎ¶¨ ÌååÏùº</target>
        </trans-unit>
        <trans-unit id="097c4f8ffd09ccfa9969a4bc05a320c254e89164" translate="yes" xml:space="preserve">
          <source>Re-pack the fields of a structured array or dtype in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51edee93cd9862d17771b5ac5e5130d8486f2b82" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;max_rows&lt;/code&gt; lines of content after &lt;code&gt;skiprows&lt;/code&gt; lines. The default is to read all the lines.</source>
          <target state="translated">&lt;code&gt;skiprows&lt;/code&gt; Ï§Ñ Îã§ÏùåÏóê &lt;code&gt;max_rows&lt;/code&gt; Ï§ÑÏùÑ ÏùΩÏäµÎãàÎã§ . Í∏∞Î≥∏Í∞íÏùÄ Î™®Îì† Ï§ÑÏùÑ ÏùΩÎäî Í≤ÉÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="93d895fd833731cd91934c31c1d295d35fff066e" translate="yes" xml:space="preserve">
          <source>Read entropy from the system cryptographic provider</source>
          <target state="translated">ÏãúÏä§ÌÖú ÏïîÌò∏Ìôî Í≥µÍ∏âÏûêÎ°úÎ∂ÄÌÑ∞ ÏóîÌä∏Î°úÌîº ÏùΩÍ∏∞</target>
        </trans-unit>
        <trans-unit id="7d8db064845e4594dd5f4fd809755dddb73a385a" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;../reference/arrays.ndarray#array-ndarray-methods&quot;&gt;array methods here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e215e85e120c85716c7aacb661b55dd7dc2f33" translate="yes" xml:space="preserve">
          <source>Read more about &lt;code&gt;flatten&lt;/code&gt; at &lt;a href=&quot;../reference/generated/numpy.ndarray.flatten#numpy.ndarray.flatten&quot;&gt;&lt;code&gt;ndarray.flatten&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;ravel&lt;/code&gt; at &lt;a href=&quot;../reference/generated/numpy.ravel#numpy.ravel&quot;&gt;&lt;code&gt;ravel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f92ffb4328699cd039288f66102979051863e83" translate="yes" xml:space="preserve">
          <source>Read more about creating arrays, filled with &lt;code&gt;0&lt;/code&gt;&amp;rsquo;s, &lt;code&gt;1&lt;/code&gt;&amp;rsquo;s, other values or uninitialized, at &lt;a href=&quot;../reference/routines.array-creation#routines-array-creation&quot;&gt;array creation routines&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538ce246fc454dd268848eb51dc8e0e41a556b34" translate="yes" xml:space="preserve">
          <source>Read more about reversing arrays at &lt;a href=&quot;../reference/generated/numpy.flip#numpy.flip&quot;&gt;&lt;code&gt;flip&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefd814e2c5e91ea3aa4341adf1072e6f04c09ee" translate="yes" xml:space="preserve">
          <source>Read more about using the nonzero function at: &lt;a href=&quot;../reference/generated/numpy.nonzero#numpy.nonzero&quot;&gt;&lt;code&gt;nonzero&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d979c06850d2683fe9b1c876d71b5624ad5492" translate="yes" xml:space="preserve">
          <source>Read the elements of &lt;code&gt;a&lt;/code&gt; using this index order, and place the elements into the reshaped array using this index order. &amp;lsquo;C&amp;rsquo; means to read / write the elements using C-like index order, with the last axis index changing fastest, back to the first axis index changing slowest. &amp;lsquo;F&amp;rsquo; means to read / write the elements using Fortran-like index order, with the first index changing fastest, and the last index changing slowest. Note that the &amp;lsquo;C&amp;rsquo; and &amp;lsquo;F&amp;rsquo; options take no account of the memory layout of the underlying array, and only refer to the order of indexing. &amp;lsquo;A&amp;rsquo; means to read / write the elements in Fortran-like index order if &lt;code&gt;a&lt;/code&gt; is Fortran &lt;em&gt;contiguous&lt;/em&gt; in memory, C-like order otherwise.</source>
          <target state="translated">ÏöîÏÜå ÏùΩÍ∏∞ Ïù¥ Ïù∏Îç±Ïä§ ÏàúÏÑúÎ•º ÏÇ¨Ïö©ÌïòÏó¨,Ïù¥ Ïù∏Îç±Ïä§ ÏàúÏÑúÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Ïû¨ ÌòïÏÑ±Îêú Î∞∞Ïó¥Ïùò ÏöîÏÜåÎ•º Î∞∞ÏπòÌñàÎã§. 'C'Îäî ÎßàÏßÄÎßâ Ï∂ï Ïù∏Îç±Ïä§Í∞Ä Í∞ÄÏû• Îπ†Î•¥Í≤å Î≥ÄÍ≤ΩÎêòÍ≥† Ï≤´ Î≤àÏß∏ Ï∂ï Ïù∏Îç±Ïä§Í∞Ä Í∞ÄÏû• ÎäêÎ¶¨Í≤å Î≥ÄÍ≤ΩÎêòÎäî CÏôÄ Í∞ôÏùÄ Ïù∏Îç±Ïä§ ÏàúÏÑúÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÏöîÏÜåÎ•º ÏùΩÍ≥† Ïì∞Îäî Í≤ÉÏùÑ ÏùòÎØ∏Ìï©ÎãàÎã§. 'F'Îäî FortranÍ≥º Í∞ôÏùÄ ÏÉâÏù∏ ÏàúÏÑúÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÏöîÏÜåÎ•º ÏùΩÍ≥† Ïì∞Îäî Í≤ÉÏùÑ ÏùòÎØ∏ÌïòÎ©∞ Ï≤´ Î≤àÏß∏ ÏÉâÏù∏ÏùÄ Í∞ÄÏû• Îπ†Î•¥Í≤å Î≥ÄÍ≤ΩÎêòÍ≥† ÎßàÏßÄÎßâ ÏÉâÏù∏ÏùÄ Í∞ÄÏû• ÎäêÎ¶¨Í≤å Î≥ÄÍ≤ΩÎê©ÎãàÎã§. 'C'Î∞è 'F'ÏòµÏÖòÏùÄ Í∏∞Î≥∏ Î∞∞Ïó¥Ïùò Î©îÎ™®Î¶¨ Î†àÏù¥ÏïÑÏõÉÏùÑ Í≥†Î†§ÌïòÏßÄ ÏïäÏúºÎ©∞ Ïù∏Îç±Ïã± ÏàúÏÑú Îßå Ï∞∏Ï°∞Ìï©ÎãàÎã§. 'A'Îäî ÏùΩÍ∏∞ / Í≤ΩÏö∞ Ìè¨Ìä∏ÎûÄÍ≥º Í∞ôÏùÄ Ïù∏Îç±Ïä§ ÏàúÏÑúÎ°ú ÏöîÏÜåÎ•º Ïì∏ &lt;code&gt;a&lt;/code&gt; Ìè¨Ìä∏ÎûÄ Ïù∏ &lt;em&gt;Ïó∞ÏÜç&lt;/em&gt; Í∑∏Î†áÏßÄ ÏúÑÌï¥ C Ìòï, Î©îÎ™®Î¶¨. &lt;code&gt;a&lt;/code&gt; &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b29d40e8d4dd2d512588c53efd334e247e7e23aa" translate="yes" xml:space="preserve">
          <source>Read the raw data from disk:</source>
          <target state="translated">ÎîîÏä§ÌÅ¨ÏóêÏÑú ÏõêÏãú Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c2d4558c1993f1b29279c7a9f130025b7da7b20a" translate="yes" xml:space="preserve">
          <source>Read this number of &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; elements from the data. If this is negative (the default), the count will be determined from the length of the data.</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞ÏóêÏÑúÏù¥ Í∞úÏàòÏùò &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; ÏöîÏÜåÎ•º ÏùΩÏäµÎãàÎã§ . Ïù¥ Í∞íÏù¥ ÏùåÏàòÏù¥Î©¥ (Í∏∞Î≥∏Í∞í), Îç∞Ïù¥ÌÑ∞ Í∏∏Ïù¥ÏóêÏÑú Ïπ¥Ïö¥Ìä∏Í∞Ä Í≤∞Ï†ïÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="83cc822fd824db6dc3c5e8c1b3292b5536dfc41c" translate="yes" xml:space="preserve">
          <source>Read-only memmap:</source>
          <target state="translated">ÏùΩÍ∏∞ Ï†ÑÏö© memmap :</target>
        </trans-unit>
        <trans-unit id="65834d39c25553d999be0e64fb8eacebfad56291" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">Read-only.</target>
        </trans-unit>
        <trans-unit id="f3500860f4edebc408f4c4e278f2b6bd25e4283d" translate="yes" xml:space="preserve">
          <source>Reading Arrays From Disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b28bf49c27362ed14d88a3625c2715f6618ec6f" translate="yes" xml:space="preserve">
          <source>Reading NumPy arrays from files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3336dfc766f437346d42527f2bb08bf580fcb5" translate="yes" xml:space="preserve">
          <source>Reading System Entropy</source>
          <target state="translated">ÌåêÎèÖ ÏãúÏä§ÌÖú ÏóîÌä∏Î°úÌîº</target>
        </trans-unit>
        <trans-unit id="ca9112e53814083d7461fc882cec2d031590c1c3" translate="yes" xml:space="preserve">
          <source>Reading arrays from disk, either from standard or custom formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e740e8695f3cfe57590a89e1807bd2071f5af760" translate="yes" xml:space="preserve">
          <source>Reading extra flags from site.cfg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3f000cd2d7e0bbdf99b156ed745746ae0757e4" translate="yes" xml:space="preserve">
          <source>Reading help</source>
          <target state="translated">ÏùΩÍ∏∞ ÎèÑÏõÄÎßê</target>
        </trans-unit>
        <trans-unit id="a18fd39b7e48bb790bfca7c48ff424e135aab6b5" translate="yes" xml:space="preserve">
          <source>Reading the example code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00daacda1f774e8ef3b529d385313b9fab92249" translate="yes" xml:space="preserve">
          <source>Real FFTs</source>
          <target state="translated">Ïã§Ï†ú FFT</target>
        </trans-unit>
        <trans-unit id="a043af6f91ffeca4e98ebd09648e0d02ca4f4cb9" translate="yes" xml:space="preserve">
          <source>Real and Hermitian transforms</source>
          <target state="translated">Ïã§Ï†úÏôÄ ÏùÄÏûê Î≥ÄÌôò</target>
        </trans-unit>
        <trans-unit id="94ab8d27f935ef31b6984ab54d0a6f5e05b4ec7c" translate="yes" xml:space="preserve">
          <source>Real matrix possessing complex e-values and e-vectors; note that the e-values are complex conjugates of each other.</source>
          <target state="translated">Î≥µÏû°Ìïú e- Í∞íÍ≥º e- Î≤°ÌÑ∞Î•º Í∞ÄÏßÑ Ïã§Ï†ú ÌñâÎ†¨; e- Í∞íÏùÄ ÏÑúÎ°ú Î≥µÏû°Ìïú Í≥µÏï°ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e1b776a7f6c2384d7b3b73263bccb6080fef0bf1" translate="yes" xml:space="preserve">
          <source>Real: [R, nan]</source>
          <target state="translated">Ïã§Ï†ú : [R, nan]</target>
        </trans-unit>
        <trans-unit id="a61a961728bcbe16c0ce754be8a27e780315994b" translate="yes" xml:space="preserve">
          <source>Rearranges the elements in the array in such a way that the value of the element in kth position is in the position it would be in a sorted array.</source>
          <target state="translated">k Î≤àÏß∏ ÏúÑÏπòÏùò ÏöîÏÜå Í∞íÏù¥ Ï†ïÎ†¨ Îêú Î∞∞Ïó¥Ïùò ÏúÑÏπòÏóê ÏûàÎèÑÎ°ù Î∞∞Ïó¥Ïùò ÏöîÏÜåÎ•º Ïû¨ Î∞∞Ïó¥Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="884f57aabc1de0b840a536e3520bd5b5883edcd3" translate="yes" xml:space="preserve">
          <source>Rearranges the elements in the array in such a way that the value of the element in kth position is in the position it would be in a sorted array. All elements smaller than the kth element are moved before this element and all equal or greater are moved behind it. The ordering of the elements in the two partitions is undefined.</source>
          <target state="translated">k Î≤àÏß∏ ÏúÑÏπòÏùò ÏöîÏÜå Í∞íÏù¥ Ï†ïÎ†¨ Îêú Î∞∞Ïó¥Ïùò ÏúÑÏπòÏóê ÏûàÎèÑÎ°ù Î∞∞Ïó¥Ïùò ÏöîÏÜåÎ•º Ïû¨ Î∞∞Ïó¥Ìï©ÎãàÎã§. k Î≤àÏß∏ ÏöîÏÜåÎ≥¥Îã§ ÏûëÏùÄ Î™®Îì† ÏöîÏÜåÎäîÏù¥ ÏöîÏÜåÎ≥¥Îã§ Î®ºÏ†Ä Ïù¥ÎèôÌïòÍ≥† Í∞ôÍ±∞ÎÇò ÌÅ∞ ÏöîÏÜåÎäî Í∑∏ Îí§Î°ú Ïù¥ÎèôÌï©ÎãàÎã§. Îëê ÌååÌã∞ÏÖòÏùò ÏöîÏÜå ÏàúÏÑúÎäî Ï†ïÏùòÎêòÏñ¥ ÏûàÏßÄ ÏïäÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="216b49ee0aedfb3aedf77086e09a1b94f1f7c963" translate="yes" xml:space="preserve">
          <source>Rearranging elements</source>
          <target state="translated">Ïû¨ Î∞∞Ïó¥ ÏöîÏÜå</target>
        </trans-unit>
        <trans-unit id="1b1e09e1eb08c1c8a17d6d6802dacc147bedb124" translate="yes" xml:space="preserve">
          <source>Reason for deprecation if this is useful information (e.g., object is superseded, duplicates functionality found elsewhere, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff2c6b6cc8bcf202d1a65d49506a18a951f07c3" translate="yes" xml:space="preserve">
          <source>Rebasing on master</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152f90115110d731742b441bc33d41996fc5ed24" translate="yes" xml:space="preserve">
          <source>Rebasing on master is preferred over merging upstream back to your branch. Using &lt;code&gt;git merge&lt;/code&gt; and &lt;code&gt;git pull&lt;/code&gt; is discouraged when working on feature branches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1aef8c82d48240e18dc28b8e425430df58ab48" translate="yes" xml:space="preserve">
          <source>Rebuilding &amp;amp; cleaning the workspace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe32c7c65544278c20d153cd2390724c86365f64" translate="yes" xml:space="preserve">
          <source>Rebuilding NumPy after making changes to compiled code can be done with the same build command as you used previously - only the changed files will be re-built. Doing a full build, which sometimes is necessary, requires cleaning the workspace first. The standard way of doing this is (&lt;em&gt;note: deletes any uncommitted files!&lt;/em&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743cf4148aa27f9df1a59d0b870d775d4774e993" translate="yes" xml:space="preserve">
          <source>Recall that all of these functions work element-by-element over an array, returning an array output. The description details only a single operation.</source>
          <target state="translated">Ïù¥Îü¨Ìïú Ìï®ÏàòÎäî Î™®Îëê Î∞∞Ïó¥ÏóêÏÑú ÏöîÏÜåÎ≥ÑÎ°ú ÏûëÎèôÌïòÏó¨ Î∞∞Ïó¥ Ï∂úÎ†•ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. ÏÑ§Î™ÖÏóêÎäî Îã®Ïùº ÏûëÏóÖ Îßå ÏûêÏÑ∏Ìûà ÏÑ§Î™ÖÎêòÏñ¥ ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="dc4178266088da93730148f2c6c6a01298ad6824" translate="yes" xml:space="preserve">
          <source>Recall that each ufunc operates element-by-element. Therefore, each scalar ufunc will be described as if acting on a set of scalar inputs to return a set of scalar outputs.</source>
          <target state="translated">Í∞Å ufuncÎäî ÏöîÏÜåÎ≥ÑÎ°ú ÏûëÎèôÌï©ÎãàÎã§. Îî∞ÎùºÏÑú, Í∞Å Ïä§ÏπºÎùº ufuncÎäî Ïä§ÏπºÎùº ÏûÖÎ†• ÏÑ∏Ìä∏Ïóê ÏûëÏö©ÌïòÏó¨ Ïä§ÏπºÎùº Ï∂úÎ†• ÏÑ∏Ìä∏Î•º Î¶¨ÌÑ¥ÌïòÎäî Í≤ÉÏ≤òÎüº ÏÑ§Î™ÖÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="980dc0df7cdb73496964620d15698c2f0428ced4" translate="yes" xml:space="preserve">
          <source>Recall that what is actually in the ndarray memory representing the Python object is the memory address of that object (a pointer). Special handling may be required, and this attribute is useful for distinguishing data types that may contain arbitrary Python objects and data-types that won&amp;rsquo;t.</source>
          <target state="translated">Ïã§Ï†úÎ°ú ÌååÏù¥Ïç¨ Í∞ùÏ≤¥Î•º ÎÇòÌÉÄÎÇ¥Îäî ndarray Î©îÎ™®Î¶¨ÏóêÏûàÎäî Í≤ÉÏùÄ Ìï¥Îãπ Í∞ùÏ≤¥Ïùò Î©îÎ™®Î¶¨ Ï£ºÏÜå (Ìè¨Ïù∏ÌÑ∞)ÏûÖÎãàÎã§. ÌäπÏàò Ï≤òÎ¶¨Í∞Ä ÌïÑÏöîÌï† Ïàò ÏûàÏúºÎ©∞Ïù¥ ÏÜçÏÑ±ÏùÄ ÏûÑÏùòÏùò Python Í∞ùÏ≤¥ÏôÄ Ìè¨Ìï®ÎêòÏßÄ ÏïäÎäî Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏùÑ Ìè¨Ìï® Ìï† ÏàòÏûàÎäî Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏùÑ Íµ¨Î≥ÑÌïòÎäî Îç∞ Ïú†Ïö©Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="cba1dc979543e1b22e67d676ff191f19f1d7fb86" translate="yes" xml:space="preserve">
          <source>Recarray Helper Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270061a099ffc135feb6362b346db359376e04d2" translate="yes" xml:space="preserve">
          <source>Recently, the NumPy community approved a &lt;em&gt;NumPy Enhancement Proposal (NEP)&lt;/em&gt; about documentation, &lt;a href=&quot;https://www.numpy.org/neps/nep-0044-restructuring-numpy-docs&quot;&gt;NEP 44 - Restructuring the NumPy Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a66d47be53ca22fc5a34314e82490e949d4fe7" translate="yes" xml:space="preserve">
          <source>Reciprocal of pi (</source>
          <target state="translated">ÌååÏù¥Ïùò Ïó≠Ïàò</target>
        </trans-unit>
        <trans-unit id="609b58c5db9ee7a3dcbcdac814681dd2f3093bce" translate="yes" xml:space="preserve">
          <source>Recognized file types are text files and archives. Currently, the function recognizes &lt;code&gt;gzip&lt;/code&gt; and &lt;code&gt;bz2&lt;/code&gt; (&lt;code&gt;bzip2&lt;/code&gt;) archives. The type of the archive is determined from the extension of the file: if the filename ends with &lt;code&gt;'.gz'&lt;/code&gt;, a &lt;code&gt;gzip&lt;/code&gt; archive is expected; if it ends with &lt;code&gt;'bz2'&lt;/code&gt;, a &lt;code&gt;bzip2&lt;/code&gt; archive is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6422fcc967f452634a501ffeeec039bbb50d3cbc" translate="yes" xml:space="preserve">
          <source>Recommendation</source>
          <target state="translated">Recommendation</target>
        </trans-unit>
        <trans-unit id="7ea4439882887c213c7ecb48fa62ede62e03097c" translate="yes" xml:space="preserve">
          <source>Recommended constructor for &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; Ïùò&lt;/a&gt; Í∂åÏû• ÏÉùÏÑ±ÏûêÏûÖÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="e2f4dd410483b214b7113be8295724b4baf45804" translate="yes" xml:space="preserve">
          <source>Recommended development setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d0cdeb4a32cff1ddff345090b62a580d3c3a7c" translate="yes" xml:space="preserve">
          <source>Reconstruct the input array from the unique values:</source>
          <target state="translated">Í≥†Ïú† Í∞íÏóêÏÑú ÏûÖÎ†• Î∞∞Ïó¥ÏùÑ Ïû¨Íµ¨ÏÑ±ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="491da7994f572bc7f9afd090d6016edd42393999" translate="yes" xml:space="preserve">
          <source>Reconstruction based on full SVD, 2D case:</source>
          <target state="translated">ÏôÑÏ†ÑÌïú SVD, 2D ÏÇ¨Î°ÄÎ•º Í∏∞Î∞òÏúºÎ°ú Ìïú Ïû¨Íµ¨ÏÑ± :</target>
        </trans-unit>
        <trans-unit id="79cdac481f2983ecaa3b30e7e594c24fcec60695" translate="yes" xml:space="preserve">
          <source>Reconstruction based on full SVD, 4D case:</source>
          <target state="translated">ÏôÑÏ†ÑÌïú SVD, 4D ÏÇ¨Î°ÄÎ•º Í∏∞Î∞òÏúºÎ°ú Ìïú Ïû¨Íµ¨ÏÑ± :</target>
        </trans-unit>
        <trans-unit id="d06c10b4a18c98f0fc7fe7b3cc3dcff2d3ae9caf" translate="yes" xml:space="preserve">
          <source>Reconstruction based on reduced SVD, 2D case:</source>
          <target state="translated">Í∞êÏÜå Îêú SVD, 2D ÏÇ¨Î°ÄÎ•º Í∏∞Î∞òÏúºÎ°ú Ìïú Ïû¨Íµ¨ÏÑ± :</target>
        </trans-unit>
        <trans-unit id="91c930a24dbd33722c39241e13c6c2f20f8cc3d6" translate="yes" xml:space="preserve">
          <source>Reconstruction based on reduced SVD, 4D case:</source>
          <target state="translated">SVD Í∞êÏÜå, 4D ÏÇ¨Î°ÄÎ•º Í∏∞Î∞òÏúºÎ°ú Ìïú Ïû¨Íµ¨ÏÑ± :</target>
        </trans-unit>
        <trans-unit id="ca394b50642b57dbd84f04534b9044ff64fe65e3" translate="yes" xml:space="preserve">
          <source>Record Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474b589152049c808f9bb7320be24ed50ea6c8dd" translate="yes" xml:space="preserve">
          <source>Record array consisting of given arrayList columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea0875104eb1609c7eafce2370c09aac4ba6fee" translate="yes" xml:space="preserve">
          <source>Record array fields accessed by index or by attribute are returned as a record array if the field has a structured type but as a plain ndarray otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8292bfb527da0d8d027787bcd0d063a97f49862c" translate="yes" xml:space="preserve">
          <source>Record array view into the data in datastring. This will be readonly if &lt;code&gt;datastring&lt;/code&gt; is readonly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294f5d99cb2ed6671c3855e9edd67a04dae494d0" translate="yes" xml:space="preserve">
          <source>Record arrays (&lt;code&gt;numpy.rec&lt;/code&gt;)</source>
          <target state="translated">Î†àÏΩîÎìú Î∞∞Ïó¥ ( &lt;code&gt;numpy.rec&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="736721a7119dd6bfd6ea43d8c39aa4be74a70dc1" translate="yes" xml:space="preserve">
          <source>Recovering from mess-ups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ed172808a779dcbda53216460f117741bfc335" translate="yes" xml:space="preserve">
          <source>Rectangular</source>
          <target state="translated">Rectangular</target>
        </trans-unit>
        <trans-unit id="5f37e89ccd8ccfdcb177990c914d24ef1b039af6" translate="yes" xml:space="preserve">
          <source>Recursively add files under data_path to data_files list.</source>
          <target state="translated">data_path ÏïÑÎûòÏùò ÌååÏùºÏùÑ data_files Î™©Î°ùÏóê Î∞òÎ≥µÏ†ÅÏúºÎ°ú Ï∂îÍ∞ÄÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="b1a4e79690668403704442ace81e98a32d6a2e19" translate="yes" xml:space="preserve">
          <source>Recursively add files under data_path to the list of data_files to be installed (and distributed). The data_path can be either a relative path-name, or an absolute path-name, or a 2-tuple where the first argument shows where in the install directory the data directory should be installed to.</source>
          <target state="translated">data_path ÏïÑÎûòÏùò ÌååÏùºÏùÑ ÏÑ§Ïπò Î∞è Î∞∞Ìè¨ Ìï† data_file Î™©Î°ùÏóê Ïû¨Í∑Ä Ï†ÅÏúºÎ°ú Ï∂îÍ∞ÄÌïòÏã≠ÏãúÏò§. data_pathÎäî ÏÉÅÎåÄ Í≤ΩÎ°ú Ïù¥Î¶Ñ ÎòêÎäî Ï†àÎåÄ Í≤ΩÎ°ú Ïù¥Î¶ÑÏù¥Í±∞ÎÇò Ï≤´ Î≤àÏß∏ Ïù∏ÏàòÍ∞Ä ÏÑ§Ïπò ÎîîÎ†âÌÜ†Î¶¨ÏóêÏÑú Îç∞Ïù¥ÌÑ∞ ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÑ§ÏπòÌï¥ÏïºÌïòÎäî ÏúÑÏπòÎ•º ÌëúÏãúÌïòÎäî 2- ÌäúÌîå Ïùº Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a4026384e86db1d0db45b2ae656d5b4a36b00854" translate="yes" xml:space="preserve">
          <source>Red Hat 9 Linux, Python 2.1.3, 2.2.2, 2.3.2</source>
          <target state="translated">Red Hat 9 Linux, Python 2.1.3, 2.2.2, 2.3.2</target>
        </trans-unit>
        <trans-unit id="c20bb0f7c4d78b01fa838319a2981e9b417f1f05" translate="yes" xml:space="preserve">
          <source>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ec4bae787e02e75ae9439f5fbfc851c887f70f" translate="yes" xml:space="preserve">
          <source>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7338b5245c44e48d0d288fd4ec6f22445873f8e" translate="yes" xml:space="preserve">
          <source>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f62a19eebe00dd0d30914b3390d1fb624f823b3" translate="yes" xml:space="preserve">
          <source>Reduce</source>
          <target state="translated">Reduce</target>
        </trans-unit>
        <trans-unit id="3d3e64f3984a8edfe88f799af15fac3fcfd7cb8b" translate="yes" xml:space="preserve">
          <source>Reduce a mask to nomask when possible.</source>
          <target state="translated">Í∞ÄÎä•ÌïòÎ©¥ ÎßàÏä§ÌÅ¨Î•º ÎßàÏä§ÌÅ¨Î°ú Ï∂ïÏÜåÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="dcff1f4fa90545b42b9840306dd69fbde0260e4c" translate="yes" xml:space="preserve">
          <source>Reduce the degree of the series to &lt;code&gt;deg&lt;/code&gt; by discarding the high order terms. If &lt;code&gt;deg&lt;/code&gt; is greater than the current degree a copy of the current series is returned. This can be useful in least squares where the coefficients of the high degree terms may be very small.</source>
          <target state="translated">Ïùò ÏùºÎ†®Ïùò Ï†ïÎèÑ Í∞êÏÜå &lt;code&gt;deg&lt;/code&gt; Í≥† Ï∞®Ìï≠ÏùÑ Î≤ÑÎ¶¨Í≥†. Í≤ΩÏö∞ &lt;code&gt;deg&lt;/code&gt; ÌòÑÏû¨ ÏùºÎ†®Ïùò Î≥µÏÇ¨Í∞Ä Î¶¨ÌÑ¥ Ï†ÑÎ•ò Ï†ïÎèÑÎ≥¥Îã§ ÌÅ¨Îã§. Ïù¥Í≤ÉÏùÄ ÎÜíÏùÄ Ìï≠Ïùò Í≥ÑÏàòÍ∞Ä Îß§Ïö∞ ÏûëÏùÄ ÏµúÏÜå Ï†úÍ≥±ÏóêÏÑú Ïú†Ïö© Ìï† Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="060d2daa3132056c1d8c668ddf6a28bae2fd667a" translate="yes" xml:space="preserve">
          <source>Reduce the series to length &lt;code&gt;size&lt;/code&gt; by discarding the high degree terms. The value of &lt;code&gt;size&lt;/code&gt; must be a positive integer. This can be useful in least squares where the coefficients of the high degree terms may be very small.</source>
          <target state="translated">ÎÜíÏùÄ ÏàòÏ§ÄÏùò Ïö©Ïñ¥Î•º ÏÇ≠Ï†ú ÌïòÏó¨ Í≥ÑÏó¥ÏùÑ Í∏∏Ïù¥ &lt;code&gt;size&lt;/code&gt; Î°ú Ï§Ñ ÏûÖÎãàÎã§. &lt;code&gt;size&lt;/code&gt; Í∞íÏùÄ ÏñëÏùò Ï†ïÏàò Ïó¨ÏïºÌï©ÎãàÎã§. Ïù¥Í≤ÉÏùÄ ÎÜíÏùÄ Ìï≠Ïùò Í≥ÑÏàòÍ∞Ä Îß§Ïö∞ ÏûëÏùÄ ÏµúÏÜå Ï†úÍ≥±ÏóêÏÑú Ïú†Ïö© Ìï† Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4d2dbef2bd3f0f7a180ca5aa3e172bc1585d701e" translate="yes" xml:space="preserve">
          <source>Reduceat</source>
          <target state="translated">Reduceat</target>
        </trans-unit>
        <trans-unit id="a722cbafbfb6bf3e18c9f2f286abf78920fc64c5" translate="yes" xml:space="preserve">
          <source>Reduced memory usage of &lt;code&gt;np.loadtxt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eee03f058f237d3f3d358449c6d0b29e023090" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s dimension by one, by applying ufunc along one axis.</source>
          <target state="translated">Í∞êÏÜå ÌïòÎÇò Í∞úÏùò Ï∂ïÏùÑ Îî∞Îùº ufunc Ï†ÅÏö©ÌïòÏó¨, ÌïòÎÇòÏùò Ï∞®ÏõêÏùÑ. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c1108278c2fa794141e5f8e9a0528527267dffb" translate="yes" xml:space="preserve">
          <source>Reduction Iteration</source>
          <target state="translated">Í∞êÏÜå Î∞òÎ≥µ</target>
        </trans-unit>
        <trans-unit id="fcde4a81ab8d536d30d616f06d254802f3bf441d" translate="yes" xml:space="preserve">
          <source>Reduction UFuncs Generalize axis= Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c75ea61e9ecc2879fc26652e944f06e8728ad7" translate="yes" xml:space="preserve">
          <source>Reduction UFuncs New keepdims= Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee715ffdde579240ff023f4855c8b8d6155ee4f" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.all#numpy.all&quot;&gt;&lt;code&gt;numpy.all&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.all#numpy.all&quot;&gt; &lt;code&gt;numpy.all&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="6587b92b542fdbb4a5baff56f6177ab573ecd7d3" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.amax#numpy.amax&quot;&gt;&lt;code&gt;numpy.amax&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.amax#numpy.amax&quot;&gt; &lt;code&gt;numpy.amax&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="45b6d4dec5f70c0caab2509c6100745193391a46" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.amin#numpy.amin&quot;&gt;&lt;code&gt;numpy.amin&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.amin#numpy.amin&quot;&gt; &lt;code&gt;numpy.amin&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="918fb7a367ac7d5d4169e9e4b82eb726b27f5cfa" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.any#numpy.any&quot;&gt;&lt;code&gt;numpy.any&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.any#numpy.any&quot;&gt; &lt;code&gt;numpy.any&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="3c764781ecd32ed5a74be2fd1be8e60131c72834" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.argmax#numpy.argmax&quot;&gt;&lt;code&gt;numpy.argmax&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.argmax#numpy.argmax&quot;&gt; &lt;code&gt;numpy.argmax&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="9356232f82cd1e512f768e5c93fccf615e650fb2" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.argmin#numpy.argmin&quot;&gt;&lt;code&gt;numpy.argmin&lt;/code&gt;&lt;/a&gt; for detailed documentation.</source>
          <target state="translated">ÏûêÏÑ∏Ìïú ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.argmin#numpy.argmin&quot;&gt; &lt;code&gt;numpy.argmin&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="f184257371f6cea08975ef0b761e6642a44ccaec" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.argpartition#numpy.argpartition&quot;&gt;&lt;code&gt;numpy.argpartition&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.argpartition#numpy.argpartition&quot;&gt; &lt;code&gt;numpy.argpartition&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="1432b93ab73b96155d745e69e77ca463bf6be416" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;numpy.argsort&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;numpy.argsort&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="beb4f53a14e59238d248398047b4ff3204cffe05" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.around#numpy.around&quot;&gt;&lt;code&gt;numpy.around&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.around#numpy.around&quot;&gt; &lt;code&gt;numpy.around&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="edc41dd41e10d2920b7ee810c276e5e38612c315" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.choose#numpy.choose&quot;&gt;&lt;code&gt;numpy.choose&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.choose#numpy.choose&quot;&gt; &lt;code&gt;numpy.choose&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="44e9fb69d7b0e7310cd14c2976b9696534490507" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.clip#numpy.clip&quot;&gt;&lt;code&gt;numpy.clip&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.clip#numpy.clip&quot;&gt; &lt;code&gt;numpy.clip&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="44b9bd379ffd948410aadd60426ca4104c098a5a" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.compress#numpy.compress&quot;&gt;&lt;code&gt;numpy.compress&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.compress#numpy.compress&quot;&gt; &lt;code&gt;numpy.compress&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="bd6a07d456831003d04fcdc6522f9078ba64965f" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.conjugate#numpy.conjugate&quot;&gt;&lt;code&gt;numpy.conjugate&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ Î¨∏ÏÑú Îäî &lt;a href=&quot;numpy.conjugate#numpy.conjugate&quot;&gt; &lt;code&gt;numpy.conjugate&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="ff5e731505e2f0671af44fb7f7d9bbcb09b6ecc1" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.cumprod#numpy.cumprod&quot;&gt;&lt;code&gt;numpy.cumprod&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.cumprod#numpy.cumprod&quot;&gt; &lt;code&gt;numpy.cumprod&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="9545bf4fb39c4beeb5bc20851f26bf128953bfdd" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.cumsum#numpy.cumsum&quot;&gt;&lt;code&gt;numpy.cumsum&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.cumsum#numpy.cumsum&quot;&gt; &lt;code&gt;numpy.cumsum&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="427e6feb1b8e37ef3c25f942fc43b7db666c8df3" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.diagonal#numpy.diagonal&quot;&gt;&lt;code&gt;numpy.diagonal&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ Î¨∏ÏÑú Îäî &lt;a href=&quot;numpy.diagonal#numpy.diagonal&quot;&gt; &lt;code&gt;numpy.diagonal&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="d8d7934f1e11ac9e5139550583972749b01c1828" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt;&lt;code&gt;numpy.dot&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt; &lt;code&gt;numpy.dot&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="c091085769dffc189899264667f0c8a177a86cfb" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.ma.maskedarray.reshape#numpy.ma.MaskedArray.reshape&quot;&gt;&lt;code&gt;MaskedArray.reshape&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.ma.maskedarray.reshape#numpy.ma.MaskedArray.reshape&quot;&gt; &lt;code&gt;MaskedArray.reshape&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="86a5641bf53ea8057597c5fb66b3691aecd5170c" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.mean#numpy.mean&quot;&gt;&lt;code&gt;numpy.mean&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.mean#numpy.mean&quot;&gt; &lt;code&gt;numpy.mean&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="6319f304f3f96bc433b8f67df52fbc6aaf508b1c" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.nonzero#numpy.nonzero&quot;&gt;&lt;code&gt;numpy.nonzero&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.nonzero#numpy.nonzero&quot;&gt; &lt;code&gt;numpy.nonzero&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="d81e6ecf40d12e84db2d904a19c373a674035f6b" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.polyder#numpy.polyder&quot;&gt;&lt;code&gt;polyder&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ Î¨∏ÏÑú Îäî &lt;a href=&quot;numpy.polyder#numpy.polyder&quot;&gt; &lt;code&gt;polyder&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="fa7b3b5999853643086c583dcb8aed9ef1bcdd33" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.polyint#numpy.polyint&quot;&gt;&lt;code&gt;polyint&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.polyint#numpy.polyint&quot;&gt; &lt;code&gt;polyint&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="15b5eacd297ce85d813bc1561624fe4a69d72ff9" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.prod#numpy.prod&quot;&gt;&lt;code&gt;numpy.prod&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.prod#numpy.prod&quot;&gt; &lt;code&gt;numpy.prod&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="b44d00efea2f39f7beb835577b5929890343cd64" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.prod#numpy.prod&quot;&gt;&lt;code&gt;prod&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ Î¨∏ÏÑú Îäî &lt;a href=&quot;numpy.prod#numpy.prod&quot;&gt; &lt;code&gt;prod&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="ace68dad5a51dc07901dd7e1e1e8a772c538d586" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.ptp#numpy.ptp&quot;&gt;&lt;code&gt;numpy.ptp&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.ptp#numpy.ptp&quot;&gt; &lt;code&gt;numpy.ptp&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="11c5a1f323273353bc38bc9465c5df6337f5f109" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.put#numpy.put&quot;&gt;&lt;code&gt;numpy.put&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ Î¨∏ÏÑú Îäî &lt;a href=&quot;numpy.put#numpy.put&quot;&gt; &lt;code&gt;numpy.put&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="2594925a3eb75b8ce851bff48d11a8b6006bc1e8" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.ravel#numpy.ravel&quot;&gt;&lt;code&gt;numpy.ravel&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.ravel#numpy.ravel&quot;&gt; &lt;code&gt;numpy.ravel&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="499184cd72df6b91a11b82f7d74ac301cde10e53" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.ravel#numpy.ravel&quot;&gt;&lt;code&gt;numpy.ravel&lt;/code&gt;&lt;/a&gt; for more documentation.</source>
          <target state="translated">ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÄ &lt;a href=&quot;numpy.ravel#numpy.ravel&quot;&gt; &lt;code&gt;numpy.ravel&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="cef541feb8d474f942d13a94aa89940188f4a804" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.repeat#numpy.repeat&quot;&gt;&lt;code&gt;numpy.repeat&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.repeat#numpy.repeat&quot;&gt; &lt;code&gt;numpy.repeat&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="f907913bd4c8ccc10b9a13d0193775c55cc6ff7d" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt;&lt;code&gt;numpy.reshape&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt; &lt;code&gt;numpy.reshape&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="a24f4759b4d9b9199b3239774120b13bcea55aaf" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.squeeze#numpy.squeeze&quot;&gt;&lt;code&gt;numpy.squeeze&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.squeeze#numpy.squeeze&quot;&gt; &lt;code&gt;numpy.squeeze&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="b51bcbb07b70b12d36653c7e9ef76d265208746c" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.squeeze#numpy.squeeze&quot;&gt;&lt;code&gt;numpy.squeeze&lt;/code&gt;&lt;/a&gt; for more documentation.</source>
          <target state="translated">ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÄ &lt;a href=&quot;numpy.squeeze#numpy.squeeze&quot;&gt; &lt;code&gt;numpy.squeeze&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="e04f65cfd29719dc36a01fdc76e322696284404a" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.std#numpy.std&quot;&gt;&lt;code&gt;numpy.std&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.std#numpy.std&quot;&gt; &lt;code&gt;numpy.std&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="36a10ec3c40044f36f315a0fa63eaf5ae029bc53" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.sum#numpy.sum&quot;&gt;&lt;code&gt;numpy.sum&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.sum#numpy.sum&quot;&gt; &lt;code&gt;numpy.sum&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="84b70d05da30fb3940c04fa729e1ae62d5d48983" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.swapaxes#numpy.swapaxes&quot;&gt;&lt;code&gt;numpy.swapaxes&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.swapaxes#numpy.swapaxes&quot;&gt; &lt;code&gt;numpy.swapaxes&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="71066e2045c3ab6ea36d4654e54228d16ca14ccb" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.take#numpy.take&quot;&gt;&lt;code&gt;numpy.take&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ Î¨∏ÏÑú Îäî &lt;a href=&quot;numpy.take#numpy.take&quot;&gt; &lt;code&gt;numpy.take&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="a7e15b9ca7b28dfec95eef1590fe0662ca2e6c41" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.trace#numpy.trace&quot;&gt;&lt;code&gt;numpy.trace&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.trace#numpy.trace&quot;&gt; &lt;code&gt;numpy.trace&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="544c58f3cd44bb3da554079fc3bed1688548f02e" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;numpy.var#numpy.var&quot;&gt;&lt;code&gt;numpy.var&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">Ï†ÑÏ≤¥ ÏÑ§Î™ÖÏÑú Îäî &lt;a href=&quot;numpy.var#numpy.var&quot;&gt; &lt;code&gt;numpy.var&lt;/code&gt; &lt;/a&gt; ÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="0f44d060ec8431f3527a301a0b70bdace5edf335" translate="yes" xml:space="preserve">
          <source>Refer to &lt;code&gt;MaskedArray.sort&lt;/code&gt; for the full documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643674156aa47cf48c3d75faf019b892abd86a43" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;https://github.com/dask/dask&quot;&gt;dask source code&lt;/a&gt; and &lt;a href=&quot;https://github.com/cupy/cupy&quot;&gt;cupy source code&lt;/a&gt; for more fully-worked examples of custom array containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6879a5bf758b9e8e660dc546380f5ac35aa2db85" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;numpy.convolve#numpy.convolve&quot;&gt;&lt;code&gt;convolve&lt;/code&gt;&lt;/a&gt; docstring. Note that the default is &amp;lsquo;valid&amp;rsquo;, unlike &lt;a href=&quot;numpy.convolve#numpy.convolve&quot;&gt;&lt;code&gt;convolve&lt;/code&gt;&lt;/a&gt;, which uses &amp;lsquo;full&amp;rsquo;.</source>
          <target state="translated">&lt;a href=&quot;numpy.convolve#numpy.convolve&quot;&gt; &lt;code&gt;convolve&lt;/code&gt; &lt;/a&gt; docstringÏùÑ Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ . 'full'ÏùÑ ÏÇ¨Ïö©ÌïòÎäî &lt;a href=&quot;numpy.convolve#numpy.convolve&quot;&gt; &lt;code&gt;convolve&lt;/code&gt; &lt;/a&gt; ÏôÄ Îã¨Î¶¨ Í∏∞Î≥∏Í∞íÏùÄ 'valid 'ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a5eb23bd9deb27b65779b8daef8f7784ba1c9f27" translate="yes" xml:space="preserve">
          <source>Reference counting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c90e3609a4d8b99611a2200896e0e20d4552cd" translate="yes" xml:space="preserve">
          <source>Reference counting often difficult to get right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="8163a33003f057af409246ecbd995b9701253f55" translate="yes" xml:space="preserve">
          <source>References cited in the &lt;strong&gt;notes&lt;/strong&gt; section may be listed here, e.g. if you cited the article below using the text &lt;code&gt;[1]_&lt;/code&gt;, include it as in the list as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263a6234208be5ef3d59a0890356284e292ca294" translate="yes" xml:space="preserve">
          <source>Referencing an array prevents resizing&amp;hellip;</source>
          <target state="translated">Î∞∞Ïó¥ÏùÑ Ï∞∏Ï°∞ÌïòÎ©¥ ÌÅ¨Í∏∞Í∞Ä Ï°∞Ï†ïÎêòÏßÄ ÏïäÏäµÎãàÎã§&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="51c9223f69be5b02f4475343346ee3868c40dbb6" translate="yes" xml:space="preserve">
          <source>Referencing sources of a temporary nature, like web pages, is discouraged. References are meant to augment the docstring, but should not be required to understand it. References are numbered, starting from one, in the order in which they are cited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b5a2fbd1fbbde5fa65d36dc1f0cb04a536718f" translate="yes" xml:space="preserve">
          <source>Regarding the code, two things are of note: firstly, it is impossible to return a memory view to Python. Instead, a NumPy array &lt;code&gt;out&lt;/code&gt; is first created, and then a view &lt;code&gt;b&lt;/code&gt; onto this array is used for the computation. Secondly, the view &lt;code&gt;b&lt;/code&gt; is typed &lt;code&gt;double[:, ::1]&lt;/code&gt;. This means 2-d array with contiguous rows, i.e., C matrix order. Specifying the order explicitly can speed up some algorithms since they can skip stride computations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba13303e49009a23f584664b434e2957594a3528" translate="yes" xml:space="preserve">
          <source>Register a data-type as a new user-defined data type for arrays. The type must have most of its entries filled in. This is not always checked and errors can produce segfaults. In particular, the typeobj member of the &lt;code&gt;dtype&lt;/code&gt; structure must be filled with a Python type that has a fixed-size element-size that corresponds to the elsize member of &lt;em&gt;dtype&lt;/em&gt;. Also the &lt;code&gt;f&lt;/code&gt; member must have the required functions: nonzero, copyswap, copyswapn, getitem, setitem, and cast (some of the cast functions may be &lt;code&gt;NULL&lt;/code&gt; if no support is desired). To avoid confusion, you should choose a unique character typecode but this is not enforced and not relied on internally.</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏùÑ Î∞∞Ïó¥Ïóê ÎåÄÌïú ÏÉàÎ°úÏö¥ ÏÇ¨Ïö©Ïûê Ï†ïÏùò Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏúºÎ°ú Îì±Î°ùÌïòÏã≠ÏãúÏò§. Ïú†ÌòïÏóê ÎåÄÎ∂ÄÎ∂ÑÏùò Ìï≠Î™©Ïù¥ Ï±ÑÏõåÏ†∏ ÏûàÏñ¥ÏïºÌï©ÎãàÎã§. Ïù¥Í≤ÉÏùÄ Ìï≠ÏÉÅ Ï†êÍ≤ÄÎêòÏßÄÎäî ÏïäÏúºÎ©∞ Ïò§Î•òÍ∞Ä segfaultÎ•º ÏÉùÏÑ± Ìï† Ïàò ÏûàÏäµÎãàÎã§. ÌäπÌûà, &lt;code&gt;dtype&lt;/code&gt; Íµ¨Ï°∞Ï≤¥Ïùò typeobj Î©§Î≤ÑÎäî &lt;em&gt;dtype&lt;/em&gt; Ïùò elsize Î©§Î≤ÑÏóê Ìï¥ÎãπÌïòÎäî Í≥†Ï†ï ÌÅ¨Í∏∞ ÏöîÏÜå ÌÅ¨Í∏∞Î•º Í∞ÄÏßÑ Python Ïú†ÌòïÏúºÎ°ú Ï±ÑÏõå &lt;em&gt;Ï†∏Ïïº&lt;/em&gt; Ìï©ÎãàÎã§. ÎòêÌïú &lt;code&gt;f&lt;/code&gt; Î©§Î≤ÑÏóêÎäî 0Ïù¥ ÏïÑÎãå Ìï®Ïàò, copyswap, copyswapn, getitem, setitem Î∞è cast ( ÏßÄÏõêÏù¥ ÌïÑÏöîÌïòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ ÏùºÎ∂Ä Ï∫êÏä§Ìä∏ Ìï®ÏàòÎäî &lt;code&gt;NULL&lt;/code&gt; Ïùº Ïàò ÏûàÏùå)Í∞Ä ÏûàÏñ¥Ïïº Ìï©ÎãàÎã§ . ÌòºÎèôÏùÑ ÌîºÌïòÍ∏∞ ÏúÑÌï¥ Í≥†Ïú† Ìïú Î¨∏Ïûê Ïú†Ìòï ÏΩîÎìúÎ•º ÏÑ†ÌÉùÌï¥ÏïºÌïòÏßÄÎßå ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú Ï†ÅÏö©ÎêòÏßÄÎäî ÏïäÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f6cfdbad5b80296572c0d3d59be04e6b4e33bf26" translate="yes" xml:space="preserve">
          <source>Register a low-level casting function, &lt;em&gt;castfunc&lt;/em&gt;, to convert from the data-type, &lt;em&gt;descr&lt;/em&gt;, to the given data-type number, &lt;em&gt;totype&lt;/em&gt;. Any old casting function is over-written. A &lt;code&gt;0&lt;/code&gt; is returned on success or a &lt;code&gt;-1&lt;/code&gt; on failure.</source>
          <target state="translated">ÎÇÆÏùÄ ÏàòÏ§ÄÏùò Ï£ºÏ°∞ Í∏∞Îä•, Îì±Î°ù &lt;em&gt;castfuncÏùÑ&lt;/em&gt; Îç∞Ïù¥ÌÑ∞ ÌòïÏãùÏóêÏÑú Î≥ÄÌôò, &lt;em&gt;DESCR&lt;/em&gt; Ï£ºÏñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞ Ï¢ÖÎ•ò Î≤àÌò∏Î°ú, &lt;em&gt;totype&lt;/em&gt; . Ïù¥Ï†Ñ Ï∫êÏä§ÌåÖ Í∏∞Îä•ÏùÑ ÎçÆÏñ¥ ÏîÅÎãàÎã§. &lt;code&gt;0&lt;/code&gt; ÏÑ±Í≥µ Î∞òÌôò ÎòêÎäîÎê©ÎãàÎã§ &lt;code&gt;-1&lt;/code&gt; Ïã§Ìå®.</target>
        </trans-unit>
        <trans-unit id="b454308622363bcd0d5ff18509cc1265c021619a" translate="yes" xml:space="preserve">
          <source>Register the data-type number, &lt;em&gt;totype&lt;/em&gt;, as castable from data-type object, &lt;em&gt;descr&lt;/em&gt;, of the given &lt;em&gt;scalar&lt;/em&gt; kind. Use &lt;em&gt;scalar&lt;/em&gt; = &lt;a href=&quot;#c.NPY_NOSCALAR&quot;&gt;&lt;code&gt;NPY_NOSCALAR&lt;/code&gt;&lt;/a&gt; to register that an array of data-type &lt;em&gt;descr&lt;/em&gt; can be cast safely to a data-type whose type_number is &lt;em&gt;totype&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ff906dee6928d7009768009956a73876cc7cb8" translate="yes" xml:space="preserve">
          <source>Register the data-type number, &lt;em&gt;totype&lt;/em&gt;, as castable from data-type object, &lt;em&gt;descr&lt;/em&gt;, of the given &lt;em&gt;scalar&lt;/em&gt; kind. Use &lt;em&gt;scalar&lt;/em&gt; = &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; to register that an array of data-type &lt;em&gt;descr&lt;/em&gt; can be cast safely to a data-type whose type_number is &lt;em&gt;totype&lt;/em&gt;.</source>
          <target state="translated">ÏßÄÏ†ïÎêú &lt;em&gt;Ïä§ÏπºÎùº&lt;/em&gt; Ï¢ÖÎ•ò Ïùò Îç∞Ïù¥ÌÑ∞ Ïú†Ìòï Í∞ùÏ≤¥ &lt;em&gt;descr&lt;/em&gt; ÏóêÏÑú &lt;em&gt;Ï∫êÏä§Ìä∏&lt;/em&gt; Í∞ÄÎä•Ìïú Îç∞Ïù¥ÌÑ∞ Ïú†Ìòï Î≤àÌò∏ &lt;em&gt;totypeÏùÑ&lt;/em&gt; Îì±Î°ùÌïòÏã≠ÏãúÏò§ . ÏÇ¨Ïö© &lt;em&gt;Ïä§ÏπºÎùº&lt;/em&gt; = &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; ÏùÄ Îç∞Ïù¥ÌÑ∞ ÌÉÄÏûÖÏùò Î∞∞Ïó¥ Í≤ÉÏùÑ Îì±Î°ù &lt;em&gt;DESCRÍ∞Ä&lt;/em&gt; Í∑∏ type_numberÎêòÎäî Îç∞Ïù¥ÌÑ∞ ÌÉÄÏûÖÏóê ÏïàÏ†ÑÌïòÍ≤å Ï†ÑÏÜ°Ìï† Ïàò &lt;em&gt;totype&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41bc4638e440c354fcdcb00125afed6a0d1d3f58" translate="yes" xml:space="preserve">
          <source>Registering a casting function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93aaaa377b8a216f8186849f878227c76cd3e8c" translate="yes" xml:space="preserve">
          <source>Registering a ufunc loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d45f12b2bdbb60f6f88453fa9e2ddb67813dfd" translate="yes" xml:space="preserve">
          <source>Registering coercion rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4185de5dd74b4ec7dc6bb27c3efce24889bed33f" translate="yes" xml:space="preserve">
          <source>Regular expression matching the warning message.</source>
          <target state="translated">Í≤ΩÍ≥† Î©îÏãúÏßÄÏôÄ ÏùºÏπòÌïòÎäî Ï†ïÍ∑úÏãù.</target>
        </trans-unit>
        <trans-unit id="aa175fea9fa468197f9e1e8718965f84abd10585" translate="yes" xml:space="preserve">
          <source>Regular expression used to parse the file. Groups in the regular expression correspond to fields in the dtype.</source>
          <target state="translated">ÌååÏùºÏùÑ Íµ¨Î¨∏ Î∂ÑÏÑùÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêòÎäî Ï†ïÍ∑úÏãù. Ï†ïÍ∑úÏãùÏùò Í∑∏Î£πÏùÄ dtypeÏùò ÌïÑÎìúÏóê Ìï¥ÎãπÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="da6727b9b992a5091102e015f5469b72c67eeab6" translate="yes" xml:space="preserve">
          <source>Reiss, R.-D. and Thomas M. (2001), &amp;ldquo;Statistical Analysis of Extreme Values, from Insurance, Finance, Hydrology and Other Fields,&amp;rdquo; Birkhauser Verlag, Basel, pp 132-133.</source>
          <target state="translated">ÎùºÏù¥Ïä§, R.-D. Î∞è Thomas M. (2001),&amp;ldquo;Î≥¥Ìóò, Í∏àÏúµ, Ïàò Î¨∏Ìïô Î∞è Í∏∞ÌÉÄ Î∂ÑÏïºÏùò Í∑πÎã® Í∞í ÌÜµÍ≥Ñ Î∂ÑÏÑù&amp;rdquo;, Birkhauser Verlag, Basel, pp-132-133.</target>
        </trans-unit>
        <trans-unit id="6336c0c76e04197d244be3f3bc01fde02af864f7" translate="yes" xml:space="preserve">
          <source>Reiss, R.-D. and Thomas, M., &amp;ldquo;Statistical Analysis of Extreme Values from Insurance, Finance, Hydrology and Other Fields,&amp;rdquo; Basel: Birkhauser Verlag, 2001.</source>
          <target state="translated">ÎùºÏù¥Ïä§, R.-D. Thomas, M.,&amp;ldquo;Î≥¥Ìóò, Í∏àÏúµ, Ïàò Î¨∏Ìïô Î∞è Í∏∞ÌÉÄ Î∂ÑÏïºÏùò Í∑πÎã® Í∞í ÌÜµÍ≥Ñ Î∂ÑÏÑù&amp;rdquo;, Basel : Birkhauser Verlag, 2001.</target>
        </trans-unit>
        <trans-unit id="0545e38146369d589702536ced10cb991667e999" translate="yes" xml:space="preserve">
          <source>Reiss, R.D. and Thomas, M., &amp;ldquo;Statistical Analysis of Extreme Values,&amp;rdquo; Basel: Birkhauser Verlag, 2001, pp. 31-32.</source>
          <target state="translated">Reiss, RD Î∞è Thomas, M.,&amp;ldquo;Í∑πÎã® Í∞íÏùò ÌÜµÍ≥Ñ Î∂ÑÏÑù&amp;rdquo;, Basel : Birkhauser Verlag, 2001, 31-32 ÌéòÏù¥ÏßÄ.</target>
        </trans-unit>
        <trans-unit id="0d625778c721b24ab67599b6846f999ed9f8fc44" translate="yes" xml:space="preserve">
          <source>Reiss, R.D., Thomas, M.(2001), Statistical Analysis of Extreme Values, Birkhauser Verlag, Basel, pp 23-30.</source>
          <target state="translated">Reiss, RD, Thomas, M. (2001), Í∑πÎã® Í∞íÏùò ÌÜµÍ≥Ñ Î∂ÑÏÑù, Birkhauser Verlag, Basel, pp 23-30.</target>
        </trans-unit>
        <trans-unit id="0d98ab0e5da5a01661e4b5891b0a823090d6c4d7" translate="yes" xml:space="preserve">
          <source>Related Python type</source>
          <target state="translated">Í¥ÄÎ†® ÌååÏù¥Ïç¨ ÌÉÄÏûÖ</target>
        </trans-unit>
        <trans-unit id="bd227b452bba2e3dbda8182774e2e5f65f366855" translate="yes" xml:space="preserve">
          <source>Relationship (optional), which could be fairly long, in which case the line wraps here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb391aae01b88adb090577d7bbabd2e4f289877e" translate="yes" xml:space="preserve">
          <source>Relationship of view casting and new-from-template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0de42e3284e900c945db8ef5cc72983d751b45b" translate="yes" xml:space="preserve">
          <source>Relative condition number of the fit. Singular values smaller than &lt;code&gt;rcond&lt;/code&gt;, relative to the largest singular value, will be ignored. The default value is &lt;code&gt;len(x)*eps&lt;/code&gt;, where &lt;code&gt;eps&lt;/code&gt; is the relative precision of the platform&amp;rsquo;s float type, about 2e-16 in most cases.</source>
          <target state="translated">Ï†ÅÌï©Ïùò ÏÉÅÎåÄ Ï°∞Í±¥ Î≤àÌò∏ÏûÖÎãàÎã§. Í∞ÄÏû• ÌÅ∞ ÌäπÏù¥ Í∞íÏóê ÎπÑÌï¥ &lt;code&gt;rcond&lt;/code&gt; Î≥¥Îã§ ÏûëÏùÄ ÌäπÏù¥ Í∞íÏùÄ Î¨¥ÏãúÎê©ÎãàÎã§. Í∏∞Î≥∏Í∞íÏùÄ &lt;code&gt;len(x)*eps&lt;/code&gt; . Ïó¨Í∏∞ÏÑú &lt;code&gt;eps&lt;/code&gt; Îäî ÌîåÎû´Ìèº ÌîåÎ°úÌä∏ Ïú†ÌòïÏùò ÏÉÅÎåÄ Ï†ïÎ∞ÄÎèÑÏù¥Î©∞ ÎåÄÎ∂ÄÎ∂ÑÏùò Í≤ΩÏö∞ ÏïΩ 2e-16ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ddc8c29d9e44d151818ff32bcfb6059b90a506b3" translate="yes" xml:space="preserve">
          <source>Relative condition number of the fit. Singular values smaller than this relative to the largest singular value will be ignored. The default value is len(x)*eps, where eps is the relative precision of the float type, about 2e-16 in most cases.</source>
          <target state="translated">Ï†ÅÌï©Ïùò ÏÉÅÎåÄ Ï°∞Í±¥ Î≤àÌò∏ÏûÖÎãàÎã§. Í∞ÄÏû• ÌÅ∞ ÌäπÏù¥ Í∞íÏóê ÎπÑÌï¥ Ïù¥Î≥¥Îã§ ÏûëÏùÄ ÌäπÏù¥ Í∞íÏùÄ Î¨¥ÏãúÎê©ÎãàÎã§. Í∏∞Î≥∏Í∞íÏùÄ len (x) * epsÏûÖÎãàÎã§. Ïó¨Í∏∞ÏÑú epsÎäî Î∂ÄÎèô Ïú†ÌòïÏùò ÏÉÅÎåÄ Ï†ïÎ∞ÄÎèÑÏù¥Î©∞ ÎåÄÎ∂ÄÎ∂ÑÏùò Í≤ΩÏö∞ ÏïΩ 2e-16ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="150f549109a3258102c45788bb4ad19927962624" translate="yes" xml:space="preserve">
          <source>Relative tolerance.</source>
          <target state="translated">ÏÉÅÎåÄ Í≥µÏ∞®.</target>
        </trans-unit>
        <trans-unit id="bf0083288cb66e576241f8201330a9d610d509d9" translate="yes" xml:space="preserve">
          <source>Relative tolerance. The relative difference is equal to &lt;code&gt;rtol * b&lt;/code&gt;. Default is 1e-5.</source>
          <target state="translated">ÏÉÅÎåÄ Í≥µÏ∞®. ÏÉÅÎåÄÏ†ÅÏù∏ Ï∞®Ïù¥Îäî &lt;code&gt;rtol * b&lt;/code&gt; . Í∏∞Î≥∏Í∞íÏùÄ 1e-5ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1e0c0ca99b9b386e431a4a06b2595bd0963e1640" translate="yes" xml:space="preserve">
          <source>Relaxed Strides Checking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7b188c77c335a3a1f58363f5ffc7db260c359a" translate="yes" xml:space="preserve">
          <source>Relaxed stride checking is no longer the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2672ace56d906ed2b7d29f0a6555576b2df5dfb7" translate="yes" xml:space="preserve">
          <source>Relaxed stride checking is the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41f56cea1ac933d25c57aebc6522e2b6c58eb87" translate="yes" xml:space="preserve">
          <source>Release</source>
          <target state="translated">Release</target>
        </trans-unit>
        <trans-unit id="0ea4af908fe06688dd3fc02035189b08293c5074" translate="yes" xml:space="preserve">
          <source>Release Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240627b29c1ad7a5c166c70dfda3106e2d367da6" translate="yes" xml:space="preserve">
          <source>Release Scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2dcd300a70dba15a1a1ab229f4d0a3767e125a6" translate="yes" xml:space="preserve">
          <source>Release Walkthrough</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eba15cf7a2e5875dfc14e4f85540324e5089ec" translate="yes" xml:space="preserve">
          <source>Release candidates: &amp;lsquo;1.8.0rc1&amp;rsquo;, &amp;lsquo;1.8.0rc2&amp;rsquo;, etc.</source>
          <target state="translated">Î¶¥Î¶¨Ïä§ ÌõÑÎ≥¥ : '1.8.0rc1', '1.8.0rc2'Îì±</target>
        </trans-unit>
        <trans-unit id="71873ea939a55e98368935e2f95d7f4ef0bbca8a" translate="yes" xml:space="preserve">
          <source>Release process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c720e6812094b3cb5d66f21f2988ede6f99f9ae4" translate="yes" xml:space="preserve">
          <source>Release:</source>
          <target state="translated">Release:</target>
        </trans-unit>
        <trans-unit id="a1d2a5024fdb35f54ca228db871e078e54e65f81" translate="yes" xml:space="preserve">
          <source>Released version: &amp;lsquo;1.8.0&amp;rsquo;, &amp;lsquo;1.8.1&amp;rsquo;, etc.</source>
          <target state="translated">Ï∂úÏãú Îêú Î≤ÑÏ†Ñ : '1.8.0', '1.8.1'Îì±</target>
        </trans-unit>
        <trans-unit id="ceed478333f4102451d2bbdcd9186010ecb933d5" translate="yes" xml:space="preserve">
          <source>Releasing a Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b8a9d38cd6170258663204bb46b62892a43e1c" translate="yes" xml:space="preserve">
          <source>Relevance is determined only roughly, by checking if the keywords occur in the function name, at the start of a docstring, etc.</source>
          <target state="translated">Í¥ÄÎ†®ÏÑ±ÏùÄ ÌÇ§ÏõåÎìúÍ∞Ä Ìï®Ïàò Ïù¥Î¶Ñ, Î¨∏ÏÑú Î¨∏ÏûêÏó¥ ÏãúÏûë Îì±ÏóêÏÑú ÎÇòÌÉÄÎÇòÎäîÏßÄ ÌôïÏù∏ÌïòÏó¨ ÎåÄÎûµÏ†ÅÏúºÎ°ú Îßå Í≤∞Ï†ïÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a882655de6da131c223642dbb3b9eede2f89eecc" translate="yes" xml:space="preserve">
          <source>Remainder complementary to floor_divide.</source>
          <target state="translated">floor_divideÎ•º Î≥¥ÏôÑÌïòÎäî ÎÇòÎ®∏ÏßÄ.</target>
        </trans-unit>
        <trans-unit id="c888806803890c62ed8644b70e2cebae811a3ce7" translate="yes" xml:space="preserve">
          <source>Remainder:</source>
          <target state="translated">Remainder:</target>
        </trans-unit>
        <trans-unit id="f6f760e6f150e4436f8dafb786626409dd9028c1" translate="yes" xml:space="preserve">
          <source>Remaining &lt;code&gt;Configuration&lt;/code&gt; arguments are all keyword arguments that will be used to initialize attributes of &lt;code&gt;Configuration&lt;/code&gt; instance. Usually, these keywords are the same as the ones that &lt;code&gt;setup(..)&lt;/code&gt; function would expect, for example, &lt;code&gt;packages&lt;/code&gt;, &lt;code&gt;ext_modules&lt;/code&gt;, &lt;code&gt;data_files&lt;/code&gt;, &lt;code&gt;include_dirs&lt;/code&gt;, &lt;code&gt;libraries&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;scripts&lt;/code&gt;, &lt;code&gt;package_dir&lt;/code&gt;, etc. However, the direct specification of these keywords is not recommended as the content of these keyword arguments will not be processed or checked for the consistency of SciPy building system.</source>
          <target state="translated">ÎÇòÎ®∏ÏßÄ &lt;code&gt;Configuration&lt;/code&gt; Ïù∏ÏàòÎäî &lt;code&gt;Configuration&lt;/code&gt; Ïù∏Ïä§ÌÑ¥Ïä§Ïùò ÏÜçÏÑ±ÏùÑ Ï¥àÍ∏∞ÌôîÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêòÎäî Î™®Îì† ÌÇ§ÏõåÎìú Ïù∏ÏàòÏûÖÎãàÎã§ . ÏùºÎ∞òÏ†ÅÏúºÎ°ú Ïù¥Îü¨Ìïú ÌÇ§ÏõåÎìúÎäî &lt;code&gt;setup(..)&lt;/code&gt; Ìï®ÏàòÍ∞Ä ÏòàÏÉÅ ÌïòÎäî Í≤ÉÍ≥º ÎèôÏùºÌï©ÎãàÎã§ ( Ïòà : &lt;code&gt;packages&lt;/code&gt; , &lt;code&gt;ext_modules&lt;/code&gt; , &lt;code&gt;data_files&lt;/code&gt; , &lt;code&gt;include_dirs&lt;/code&gt; , &lt;code&gt;libraries&lt;/code&gt; , &lt;code&gt;headers&lt;/code&gt; , &lt;code&gt;scripts&lt;/code&gt; , &lt;code&gt;package_dir&lt;/code&gt; Îì±). Í∑∏Îü¨ÎÇòÏù¥ ÌÇ§ÏõåÎìúÏùò ÏßÅÏ†ëÏ†ÅÏù∏ ÏÇ¨ÏñëÏùÄ Ïù¥Îü¨Ìïú ÌÇ§ÏõåÎìú Ïù∏ÏàòÏùò ÎÇ¥Ïö©ÏùÄ SciPy ÎπåÎî© ÏãúÏä§ÌÖúÏùò ÏùºÍ¥ÄÏÑ±ÏùÑ ÏúÑÌï¥ Ï≤òÎ¶¨ÎêòÍ±∞ÎÇò Í≤ÄÏÇ¨ÎêòÏßÄ ÏïäÏúºÎØÄÎ°ú Í∂åÏû•ÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d7020f448aaf8aacc8b4d63537e375e865fff9d8" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Remarks</target>
        </trans-unit>
        <trans-unit id="5f0b3467e4d0594b9e456ae527adc8fe85578977" translate="yes" xml:space="preserve">
          <source>Remember that a slicing tuple can always be constructed as &lt;em&gt;obj&lt;/em&gt; and used in the &lt;code&gt;x[obj]&lt;/code&gt; notation. Slice objects can be used in the construction in place of the &lt;code&gt;[start:stop:step]&lt;/code&gt; notation. For example, &lt;code&gt;x[1:10:5,::-1]&lt;/code&gt; can also be implemented as &lt;code&gt;obj = (slice(1,10,5), slice(None,None,-1)); x[obj]&lt;/code&gt; . This can be useful for constructing generic code that works on arrays of arbitrary dimension.</source>
          <target state="translated">Ïä¨ÎùºÏù¥Ïã± ÌäúÌîåÏùÄ Ìï≠ÏÉÅ &lt;em&gt;obj&lt;/em&gt; Î°ú Íµ¨ÏÑ±ÎêòÏñ¥ &lt;code&gt;x[obj]&lt;/code&gt; ÌëúÍ∏∞Î≤ï ÏóêÏÑú ÏÇ¨Ïö©Îê† Ïàò ÏûàÏäµÎãàÎã§ . &lt;code&gt;[start:stop:step]&lt;/code&gt; ÌëúÍ∏∞Î≤ï ÎåÄÏã† Ïä¨ÎùºÏù¥Ïä§ Í∞ùÏ≤¥Î•º Íµ¨ÏÑ±Ïóê ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§ . ÏòàÎ•º Îì§Ïñ¥, &lt;code&gt;x[1:10:5,::-1]&lt;/code&gt; ÏùÄ &lt;code&gt;obj = (slice(1,10,5), slice(None,None,-1)); x[obj]&lt;/code&gt; . Ïù¥Í≤ÉÏùÄ ÏûÑÏùòÏùò Ï∞®ÏõêÏùò Î∞∞Ïó¥ÏóêÏÑú ÏûëÎèôÌïòÎäî ÏùºÎ∞ò ÏΩîÎìúÎ•º Íµ¨ÏÑ±ÌïòÎäî Îç∞ Ïú†Ïö© Ìï† Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8d3ec88ebbca1f79d6d1ca20d94e9cb6a62d6522" translate="yes" xml:space="preserve">
          <source>Remember that all tests of NumPy should pass before committing your changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2709d9011ac4de11aaed1ee0b69fe7f9f5b3e476" translate="yes" xml:space="preserve">
          <source>Remember that links starting with &lt;code&gt;git@&lt;/code&gt; use the ssh protocol and are read-write; links starting with &lt;code&gt;git://&lt;/code&gt; are read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f557f46caec4abcd143edbbb0781f7c90e0cf7c0" translate="yes" xml:space="preserve">
          <source>Remember that subclass instances can come about in these three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7595604494d26f26f3a8a2fcdd4059cf438be442" translate="yes" xml:space="preserve">
          <source>Remind publicly, and point out that some behavior/actions/language have been judged inappropriate and why in the current context, or can but hurtful to some people, requesting the community to self-adjust.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17cc087461f5ff09ff60623667d9b82e6ef0b25" translate="yes" xml:space="preserve">
          <source>Remove &amp;ldquo;small&amp;rdquo; &amp;ldquo;trailing&amp;rdquo; coefficients from a polynomial.</source>
          <target state="translated">Îã§Ìï≠ÏãùÏóêÏÑú &quot;ÏûëÏùÄ&quot; &quot;Ìä∏Î†àÏùº ÎßÅ&quot;Í≥ÑÏàòÎ•º Ï†úÍ±∞Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7ad5e675e0b6c35c01bb3c891a9ec104e62cabde" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;numpy.random.entropy&lt;/code&gt; without a deprecation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95444bd33326286c0cc8338380c63e6536c3e976" translate="yes" xml:space="preserve">
          <source>Remove handling of extra argument to &lt;code&gt;__array__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb37e47b91d0eaaf68529647ece6ef29da40112b" translate="yes" xml:space="preserve">
          <source>Remove large jumps in angle by wrapping.</source>
          <target state="translated">Îû©ÌïëÌïòÏó¨ ÌÅ∞ Í∞ÅÎèÑÎ°ú Ï†êÌîÑÎ•º Ï†úÍ±∞Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ab267f7ccd4d54c990d5a9b4faf95c66dfc424f5" translate="yes" xml:space="preserve">
          <source>Remove single-dimensional entries from the shape of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Î™®ÏñëÏóêÏÑú 1 Ï∞®Ïõê Ìï≠Î™©ÏùÑ Ï†úÍ±∞ &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="178d549ab751bd0409fce46f2c4c10321cf852af" translate="yes" xml:space="preserve">
          <source>Remove single-dimensional entries from the shape of an array.</source>
          <target state="translated">Î∞∞Ïó¥ Î™®ÏñëÏóêÏÑú 1 Ï∞®Ïõê Ìï≠Î™©ÏùÑ Ï†úÍ±∞ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="72dd102c7fe56fdcb5c1b1369100b159cda98b0f" translate="yes" xml:space="preserve">
          <source>Remove small Poly series coefficients.</source>
          <target state="translated">ÏûëÏùÄ Ìè¥Î¶¨ ÏãúÎ¶¨Ï¶à Í≥ÑÏàòÎ•º Ï†úÍ±∞ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="ab57e15c3e2608f787c6675d92389afb5c71bce2" translate="yes" xml:space="preserve">
          <source>Remove trailing coefficients</source>
          <target state="translated">ÌõÑÌñâ Í≥ÑÏàò Ï†úÍ±∞</target>
        </trans-unit>
        <trans-unit id="66ea3c2af216a48c6c93b6370c0db0e13b1ddcb8" translate="yes" xml:space="preserve">
          <source>Remove trailing coefficients until a coefficient is reached whose absolute value greater than &lt;code&gt;tol&lt;/code&gt; or the beginning of the series is reached. If all the coefficients would be removed the series is set to &lt;code&gt;[0]&lt;/code&gt;. A new series instance is returned with the new coefficients. The current instance remains unchanged.</source>
          <target state="translated">Ï†àÎåÄ Í∞íÏù¥ &lt;code&gt;tol&lt;/code&gt; Î≥¥Îã§ ÌÅ∞ Í≥ÑÏàòÏóê ÎèÑÎã¨ ÌïòÍ±∞ÎÇò Í≥ÑÏó¥Ïùò ÏãúÏûëÏóê ÎèÑÎã¨ Ìï† ÎïåÍπåÏßÄ ÌõÑÌñâ Í≥ÑÏàòÎ•º Ï†úÍ±∞ÌïòÏã≠ÏãúÏò§ . Î™®Îì† Í≥ÑÏàòÍ∞Ä Ï†úÍ±∞ÎêòÎ©¥ Í≥ÑÏó¥ÏùÄ &lt;code&gt;[0]&lt;/code&gt; ÏúºÎ°ú ÏÑ§Ï†ïÎê©ÎãàÎã§ . ÏÉàÎ°úÏö¥ Í≥ÑÏàòÏôÄ Ìï®Íªò ÏÉàÎ°úÏö¥ ÏãúÎ¶¨Ï¶à Ïù∏Ïä§ÌÑ¥Ïä§Í∞Ä Î∞òÌôòÎê©ÎãàÎã§. ÌòÑÏû¨ Ïù∏Ïä§ÌÑ¥Ïä§Îäî Î≥ÄÍ≤ΩÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="37fb3ec2033ed068c3dc414d9ce67f12b5950e8e" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;multiarray.int_asbuffer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2b8c36a992cb782bf9b719ffcacdc1994f25af" translate="yes" xml:space="preserve">
          <source>Removed features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97614711300d3559a70979f5944161ea7806fdd9" translate="yes" xml:space="preserve">
          <source>Removes an axis from iteration. This requires that &lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt;&lt;/a&gt; was set for iterator creation, and does not work if buffering is enabled or an index is being tracked. This function also resets the iterator to its initial state.</source>
          <target state="translated">Î∞òÎ≥µÏóêÏÑú Ï∂ïÏùÑ Ï†úÍ±∞Ìï©ÎãàÎã§. Ïù¥Î•º ÏúÑÌï¥ÏÑúÎäî &lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt; &lt;/a&gt; Í∞Ä Î∞òÎ≥µÏûê ÏûëÏÑ±ÏùÑ ÏúÑÌï¥ ÏÑ§Ï†ïÎêòÏñ¥ ÏûàÏñ¥ÏïºÌïòÎ©∞ Î≤ÑÌçºÎßÅÏù¥ ÏÇ¨Ïö© Í∞ÄÎä•ÌïòÍ±∞ÎÇò ÏÉâÏù∏Ïù¥ Ï∂îÏ†ÅÎêòÎäî Í≤ΩÏö∞ ÏûëÎèôÌïòÏßÄ ÏïäÏäµÎãàÎã§. Ïù¥ Í∏∞Îä•ÏùÄ Î∞òÎ≥µÍ∏∞Î•º Ï¥àÍ∏∞ ÏÉÅÌÉúÎ°ú Ïû¨ÏÑ§Ï†ïÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="05df733174e150e42797da4f7348831bce3b423d" translate="yes" xml:space="preserve">
          <source>Removes axis &lt;code&gt;i&lt;/code&gt; from the iterator.</source>
          <target state="translated">Î∞òÎ≥µÍ∏∞ÏóêÏÑú Ï∂ï &lt;code&gt;i&lt;/code&gt; Î•º Ï†úÍ±∞ Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="20c721251db4bf4c660e103a8238872011781b6c" translate="yes" xml:space="preserve">
          <source>Removes axis &lt;code&gt;i&lt;/code&gt; from the iterator. Requires that the flag &amp;ldquo;multi_index&amp;rdquo; be enabled.</source>
          <target state="translated">Î∞òÎ≥µÍ∏∞ÏóêÏÑú Ï∂ï &lt;code&gt;i&lt;/code&gt; Î•º Ï†úÍ±∞ Ìï©ÎãàÎã§. &amp;ldquo;multi_index&amp;rdquo;ÌîåÎûòÍ∑∏Î•º ÌôúÏÑ±ÌôîÌï¥ÏïºÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="12194b3d1eaa6c4d4593ff330e7491e2d0823b07" translate="yes" xml:space="preserve">
          <source>Rename the fields from a flexible-datatype ndarray or recarray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d845398b195161ef377a73c078f4e05379e0aefa" translate="yes" xml:space="preserve">
          <source>Renamed first parameter of &lt;code&gt;can_cast&lt;/code&gt; from &lt;code&gt;from&lt;/code&gt; to &lt;code&gt;from_&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f49cae3beb4164314b79a381a8eee0522cac55" translate="yes" xml:space="preserve">
          <source>Repeat a 0-D to 2-D array or matrix MxN times.</source>
          <target state="translated">0-DÏóêÏÑú 2D Î∞∞Ïó¥ ÎòêÎäî ÌñâÎ†¨ MxNÏùÑ Î∞òÎ≥µÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7da8a346b5eb3de793d5ca85c842fb180f455420" translate="yes" xml:space="preserve">
          <source>Repeat elements of an array.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò ÏöîÏÜåÎ•º Î∞òÎ≥µÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="f6f56ea268441b2bcc2484ff58fd2e5304510fbb" translate="yes" xml:space="preserve">
          <source>Repeated harassment of others. In general, if someone asks you to stop, then stop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9744110adf5f854bb30812ac4edb042c578fb178" translate="yes" xml:space="preserve">
          <source>Replace F2PY generated call statement to Fortran/C function with &lt;code&gt;&amp;lt;C-expr|multi-line block&amp;gt;&lt;/code&gt;. The wrapped Fortran/C function is available as &lt;code&gt;(*f2py_func)&lt;/code&gt;. To raise an exception, set &lt;code&gt;f2py_success = 0&lt;/code&gt; in &lt;code&gt;&amp;lt;C-expr|multi-line block&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7e0a40833f5ee86086c63dc4f61d4fb6c93d4d" translate="yes" xml:space="preserve">
          <source>Replace NaN with zero and infinity with large finite numbers (default behaviour) or with the numbers defined by the user using the &lt;a href=&quot;../constants#numpy.nan&quot;&gt;&lt;code&gt;nan&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;posinf&lt;/code&gt; and/or &lt;code&gt;neginf&lt;/code&gt; keywords.</source>
          <target state="translated">NaNÏùÑ 0ÏúºÎ°ú, Î¨¥ÌïúÎåÄÎ°ú ÌÅ∞ Ïú†Ìïú Ïàò (Í∏∞Î≥∏ ÎèôÏûë) ÎòêÎäî &lt;a href=&quot;../constants#numpy.nan&quot;&gt; &lt;code&gt;nan&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;posinf&lt;/code&gt; Î∞è / ÎòêÎäî &lt;code&gt;neginf&lt;/code&gt; ÌÇ§ÏõåÎìúÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÏÇ¨Ïö©ÏûêÍ∞Ä Ï†ïÏùòÌïú Ïà´ÏûêÎ°ú Î∞îÍøâÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="7e6f360c4b9d09951ba6f209bc15a37b95fa3e42" translate="yes" xml:space="preserve">
          <source>Replace NaN with zero and infinity with large finite numbers (default behaviour) or with the numbers defined by the user using the &lt;a href=&quot;constants#numpy.nan&quot;&gt;&lt;code&gt;nan&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;posinf&lt;/code&gt; and/or &lt;code&gt;neginf&lt;/code&gt; keywords.</source>
          <target state="translated">NaNÏùÑ 0ÏúºÎ°ú, Î¨¥ÌïúÎåÄÎ°ú ÌÅ∞ Ïú†Ìïú Ïàò (Í∏∞Î≥∏ ÎèôÏûë) ÎòêÎäî &lt;a href=&quot;constants#numpy.nan&quot;&gt; &lt;code&gt;nan&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;posinf&lt;/code&gt; Î∞è / ÎòêÎäî &lt;code&gt;neginf&lt;/code&gt; ÌÇ§ÏõåÎìúÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÏÇ¨Ïö©ÏûêÍ∞Ä Ï†ïÏùòÌïú Ïà´ÏûêÎ°ú Î∞îÍøâÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="7254cbaff84040dcc9368f8cd26114efc5140f68" translate="yes" xml:space="preserve">
          <source>Replace a 1-d loop matching the given &lt;em&gt;signature&lt;/em&gt; in the already-created &lt;em&gt;ufunc&lt;/em&gt; with the new 1-d loop newfunc. Return the old 1-d loop function in &lt;em&gt;oldfunc&lt;/em&gt;. Return 0 on success and -1 on failure. This function works only with built-in types (use &lt;a href=&quot;#c.PyUFunc_RegisterLoopForType&quot;&gt;&lt;code&gt;PyUFunc_RegisterLoopForType&lt;/code&gt;&lt;/a&gt; for user-defined types). A signature is an array of data-type numbers indicating the inputs followed by the outputs assumed by the 1-d loop.</source>
          <target state="translated">Ïù¥ÎØ∏ ÏûëÏÑ±Îêú &lt;em&gt;ufunc&lt;/em&gt; ÏóêÏÑú Ï£ºÏñ¥ÏßÑ &lt;em&gt;ÏÑúÎ™Ö&lt;/em&gt; Í≥º ÏùºÏπòÌïòÎäî 1-d Î£®ÌîÑÎ•º ÏÉàÎ°úÏö¥ 1-d Î£®ÌîÑ newfuncÎ°ú ÍµêÏ≤¥ÌïòÏã≠ÏãúÏò§. &lt;em&gt;oldfunc&lt;/em&gt; ÏóêÏÑú Ïù¥Ï†Ñ 1-d Î£®ÌîÑ Ìï®ÏàòÎ•º &lt;em&gt;Î∞òÌôò&lt;/em&gt; Ìï©ÎãàÎã§. ÏÑ±Í≥µÌïòÎ©¥ 0ÏùÑ, Ïã§Ìå®ÌïòÎ©¥ -1ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. Ïù¥ Ìï®ÏàòÎäî ÎÇ¥Ïû• Ïú†ÌòïÏóêÏÑúÎßå ÏûëÎèôÌï©ÎãàÎã§ ( ÏÇ¨Ïö©Ïûê Ï†ïÏùò Ïú†Ìòï ÏóêÎäî &lt;a href=&quot;#c.PyUFunc_RegisterLoopForType&quot;&gt; &lt;code&gt;PyUFunc_RegisterLoopForType&lt;/code&gt; &lt;/a&gt; ÏÇ¨Ïö© ). ÏÑúÎ™ÖÏùÄ 1-d Î£®ÌîÑÏóê ÏùòÌï¥ Í∞ÄÏ†ï Îêú ÏûÖÎ†•Í≥º Ï∂úÎ†•ÏùÑ ÎÇòÌÉÄÎÇ¥Îäî Îç∞Ïù¥ÌÑ∞ Ïú†Ìòï Î≤àÌò∏Ïùò Î∞∞Ïó¥ÏûÖÎãàÎã§.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4b4fe3ae134c18fa9855727458e2adefb3a31912" translate="yes" xml:space="preserve">
          <source>Replace tabs with &lt;code&gt;tabsize&lt;/code&gt; number of spaces. If not given defaults to 8 spaces.</source>
          <target state="translated">Î°ú ÌÉ≠ÏùÑ ÍµêÏ≤¥ &lt;code&gt;tabsize&lt;/code&gt; ÏûêÎ¶¨Ïùò Ïàò. ÏßÄÏ†ïÌïòÏßÄ ÏïäÏúºÎ©¥ Í∏∞Î≥∏Í∞íÏùÄ 8 Ïπ∏ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ef2ab87e4cd276f56ce1a58f6eda8a8b07195443" translate="yes" xml:space="preserve">
          <source>Replace the return name with &lt;code&gt;&amp;lt;new name&amp;gt;&lt;/code&gt; in the &lt;code&gt;__doc__&lt;/code&gt; string of a wrapper function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f701afaff1621d2ebc617120f5080cb1c2711d18" translate="yes" xml:space="preserve">
          <source>Replacement functions in &lt;a href=&quot;#module-numpy.matlib&quot;&gt;&lt;code&gt;matlib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#module-numpy.matlib&quot;&gt; &lt;code&gt;matlib&lt;/code&gt; Ïùò&lt;/a&gt; ÍµêÏ≤¥ Í∏∞Îä•</target>
        </trans-unit>
        <trans-unit id="d77fe37c174f22b0bf88e06a2c42e84c2656f8f9" translate="yes" xml:space="preserve">
          <source>Replacement of the fftpack based &lt;code&gt;fft&lt;/code&gt; module by the pocketfft library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c296794a183bed35c3c17be57c4da03a4014694d" translate="yes" xml:space="preserve">
          <source>Replaces specified elements of an array with given values.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò ÏßÄÏ†ïÎêú ÏöîÏÜåÎ•º Ï£ºÏñ¥ÏßÑ Í∞íÏúºÎ°ú Î∞îÍøâÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5c4a8ddc6e501a53b3b376bd6286f7c96aac0df5" translate="yes" xml:space="preserve">
          <source>Reply to the reporter that their report has been received and that the originator has been disconnected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5fc968c16f91e5405febbfba417ff9c737ce33" translate="yes" xml:space="preserve">
          <source>Report bugs to the appropriate GitHub project (there is one for NumPy and a different one for SciPy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e05b3e18be78c2b3a9484caba08fcc352d6b69a" translate="yes" xml:space="preserve">
          <source>Report handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5caf90b10da6bfcb10b22b67e14f3fc1fcf5409c" translate="yes" xml:space="preserve">
          <source>Reporting Guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da402275b11a467df24029cc41a475356773c185" translate="yes" xml:space="preserve">
          <source>Reporting bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0810b570c409ef57a61dd7f13e7a9513771224b7" translate="yes" xml:space="preserve">
          <source>Represent numbers &amp;ldquo;very close&amp;rdquo; to zero as zero; default is False. Very close is defined by precision: if the precision is 8, e.g., numbers smaller (in absolute value) than 5e-9 are represented as zero. Defaults to &lt;code&gt;numpy.get_printoptions()['suppress']&lt;/code&gt;.</source>
          <target state="translated">&quot;Îß§Ïö∞ Í∞ÄÍπåÏö¥&quot;Ïà´ÏûêÎ•º 0ÏúºÎ°ú ÎÇòÌÉÄÎÇ¥Î©∞ Í∏∞Î≥∏Í∞íÏùÄ FalseÏûÖÎãàÎã§. Ï†ïÎ∞ÄÎèÑÍ∞Ä 8Ïóê Í∞ÄÍπåÏö∞Î©¥ Ï†ïÎ∞ÄÎèÑÍ∞Ä Ï†ïÏùòÎê©ÎãàÎã§. ÏòàÎ•º Îì§Ïñ¥ Ï†ïÎ∞ÄÎèÑÍ∞Ä 8Ïù¥Î©¥ 5e-9Î≥¥Îã§ ÏûëÏùÄ (Ï†àÎåÄ Í∞íÏúºÎ°ú) Ïà´ÏûêÎäî 0ÏúºÎ°ú ÌëúÏãúÎê©ÎãàÎã§. Í∏∞Î≥∏Í∞íÏùÄ &lt;code&gt;numpy.get_printoptions()['suppress']&lt;/code&gt; ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="360bc539904b3901915f57b0aead8cb40373f0de" translate="yes" xml:space="preserve">
          <source>Representation</source>
          <target state="translated">Representation</target>
        </trans-unit>
        <trans-unit id="22bdfaf483c0a74b51fdd19ece034b39c338067a" translate="yes" xml:space="preserve">
          <source>Represents the data in its native binary form.</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞Î•º Í∏∞Î≥∏ Ïù¥ÏßÑ ÌòïÏãùÏúºÎ°ú ÎÇòÌÉÄÎÉÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3e109635830067e2be7432585a937e2c5ae0f9bf" translate="yes" xml:space="preserve">
          <source>Require &lt;code&gt;ary&lt;/code&gt; to have a specified number of dimensions. If the array has the specified number of dimensions, return 1. Otherwise, set a Python error and return 0.</source>
          <target state="translated">ÌïÑÏöî &lt;code&gt;ary&lt;/code&gt; Ï∞®ÏõêÏùò ÏßÄÏ†ïÎêú Î≤àÌò∏Î•º Í∞ÄÏßÄÍ≥† Ìï† Ïàò ÏûàÏäµÎãàÎã§. Î∞∞Ïó¥Ïóê ÏßÄÏ†ïÎêú ÏàòÏùò Ï∞®ÏõêÏù¥ ÏûàÏúºÎ©¥ 1ÏùÑ Î∞òÌôòÌïòÍ≥†, Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ Python Ïò§Î•òÎ•º ÏÑ§Ï†ïÌïòÍ≥† 0ÏùÑ Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="2aaf8d707a1cdbeea0b98c9afdbb9b06a67f53ab" translate="yes" xml:space="preserve">
          <source>Require &lt;code&gt;ary&lt;/code&gt; to have a specified shape. If the array has the specified shape, return 1. Otherwise, set the Python error string and return 0.</source>
          <target state="translated">ÌïÑÏöî &lt;code&gt;ary&lt;/code&gt; ÏßÄÏ†ïÎêú ÌòïÌÉúÎ•º Í∞ÄÏßà Ïàò ÏûàÏäµÎãàÎã§. Î∞∞Ïó¥Ïóê ÏßÄÏ†ïÎêú Î™®ÏñëÏù¥ ÏûàÏúºÎ©¥ 1ÏùÑ Î∞òÌôòÌïòÍ≥†, Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ Python Ïò§Î•ò Î¨∏ÏûêÏó¥ÏùÑ ÏÑ§Ï†ïÌïòÍ≥† 0ÏùÑ Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="2843d4f2dd954291c9e0b30c50c2076357177f8b" translate="yes" xml:space="preserve">
          <source>Require &lt;code&gt;ary&lt;/code&gt; to have one of a list of specified number of dimensions. If the array has one of the specified number of dimensions, return 1. Otherwise, set the Python error string and return 0.</source>
          <target state="translated">ÌïÑÏöî &lt;code&gt;ary&lt;/code&gt; Ï∞®ÏõêÏùò ÏßÄÏ†ïÎêú Ïà´ÏûêÏùò Î™©Î°ù Ï§ë ÌïòÎÇòÎ•º Í∞ÄÏßà Ïàò ÏûàÏäµÎãàÎã§. Î∞∞Ïó¥Ïóê ÏßÄÏ†ïÎêú Ï∞®Ïõê Ïàò Ï§ë ÌïòÎÇòÍ∞Ä ÏûàÏúºÎ©¥ 1ÏùÑ Î∞òÌôòÌïòÍ≥† Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ Python Ïò§Î•ò Î¨∏ÏûêÏó¥ÏùÑ ÏÑ§Ï†ïÌïòÍ≥† 0ÏùÑ Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="be6c6ab9808318c6dfbeb3cd32bd5fa9595db086" translate="yes" xml:space="preserve">
          <source>Require that &lt;code&gt;ary&lt;/code&gt; is not byte-swapped. If the array is not byte-swapped, return 1. Otherwise, set a Python error and return 0.</source>
          <target state="translated">Í∑∏ ÌïÑÏöî &lt;code&gt;ary&lt;/code&gt; Î∞îÏù¥Ìä∏ Ïä§ÏôëÌïòÏßÄ ÏïäÏäµÎãàÎã§. Î∞∞Ïó¥Ïù¥ Î∞îÏù¥Ìä∏ Ïä§ÏôëÎêòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ 1ÏùÑ Î∞òÌôòÌïòÍ≥†, Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ Python Ïò§Î•òÎ•º ÏÑ§Ï†ïÌïòÍ≥† 0ÏùÑ Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="a9621414160d5366f21cf056c150fb07e957f1b1" translate="yes" xml:space="preserve">
          <source>Require the given &lt;code&gt;PyArrayObject&lt;/code&gt; to to be Fortran ordered. If the &lt;code&gt;PyArrayObject&lt;/code&gt; is already Fortran ordered, do nothing. Else, set the Fortran ordering flag and recompute the strides.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ &lt;code&gt;PyArrayObject&lt;/code&gt; Î•º Ìè¨Ìä∏ÎûÄ ÏàúÏÑúÎ°ú Ï£ºÎ¨∏Ìï¥ÏïºÌï©ÎãàÎã§. Îäî IF &lt;code&gt;PyArrayObject&lt;/code&gt; Í∞Ä Ïù¥ÎØ∏ Ìè¨Ìä∏ÎûÄ Ï£ºÎ¨∏ ÏïäÏùÄ Í≤ΩÏö∞ ÏïÑÎ¨¥ ÏûëÏóÖÎèÑÌïòÏßÄ ÏïäÏäµÎãàÎã§. Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ Fortran Ï£ºÎ¨∏ ÌîåÎûòÍ∑∏Î•º ÏÑ§Ï†ïÌïòÍ≥† Î≥¥Ìè≠ÏùÑ Îã§Ïãú Í≥ÑÏÇ∞ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="5d445103548d07964963e1a0714e74bb15db84c6" translate="yes" xml:space="preserve">
          <source>Required subroutine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec9eba4a4aabbb75c7a771c3cb16f091f6c1a0b" translate="yes" xml:space="preserve">
          <source>Required tolerance for the solution, default 1e-6</source>
          <target state="translated">ÏÜîÎ£®ÏÖòÏóê ÌïÑÏöîÌïú Í≥µÏ∞®, Í∏∞Î≥∏ 1e-6</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="5557b8c7a4078474bd9420a5e046cd6c5cfcc8d8" translate="yes" xml:space="preserve">
          <source>Requirements for SciPy packages</source>
          <target state="translated">SciPy Ìå®ÌÇ§ÏßÄ ÏöîÍµ¨ ÏÇ¨Ìï≠</target>
        </trans-unit>
        <trans-unit id="41487c917b07553e0c89fe1e8da0790f733063c8" translate="yes" xml:space="preserve">
          <source>Requires: Python 2.x</source>
          <target state="translated">ÏöîÍµ¨ ÏÇ¨Ìï≠ : Python 2.x</target>
        </trans-unit>
        <trans-unit id="4675af44afd83a37bb665a5f55186d4fa182682f" translate="yes" xml:space="preserve">
          <source>Reseed a legacy MT19937 BitGenerator</source>
          <target state="translated">Î†àÍ±∞Ïãú MT19937 BitGenerator Î¶¨ ÏãúÎìú</target>
        </trans-unit>
        <trans-unit id="aaaab76a035300782b298c63a075b763e153b3fb" translate="yes" xml:space="preserve">
          <source>Resembling a language dictionary, which provides a mapping between words and descriptions thereof, a Python dictionary is a mapping between two objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb432682e6e174d3fa345c0a29c1663268cfb43" translate="yes" xml:space="preserve">
          <source>Reset all the iterators to the beginning in a multi-iterator object, &lt;em&gt;multi&lt;/em&gt;.</source>
          <target state="translated">Îã§Ï§ë Î∞òÎ≥µÏûê Í∞ùÏ≤¥ÏóêÏÑú Ï≤òÏùåÏúºÎ°ú Î™®Îì† Î∞òÎ≥µÏûêÎ•º Ïû¨ÏÑ§Ï†ï &lt;em&gt;Îã§&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="348a1269b5edd90c644547fa67df603e71329c4c" translate="yes" xml:space="preserve">
          <source>Reset an &lt;em&gt;iterator&lt;/em&gt; to the beginning of the array.</source>
          <target state="translated">&lt;em&gt;Î∞òÎ≥µÏûê&lt;/em&gt; Î•º Î∞∞Ïó¥Ïùò ÏãúÏûë Î∂ÄÎ∂ÑÏúºÎ°ú Ïû¨ÏÑ§Ï†ï ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="3ddca2f08a4b84c36d2712fea6cd440a0e598418" translate="yes" xml:space="preserve">
          <source>Reset the broadcasted result&amp;rsquo;s iterator(s).</source>
          <target state="translated">Î∏åÎ°úÎìú Ï∫êÏä§Ìä∏ Îêú Í≤∞Í≥ºÏùò Î∞òÎ≥µÏûêÎ•º Ïû¨ÏÑ§Ï†ïÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="74a7f05b5509f243e0b123ec92781745f9cbc59f" translate="yes" xml:space="preserve">
          <source>Reset the iterator position to the first point of the neighborhood. This should be called whenever the iter argument given at PyArray_NeighborhoodIterObject is changed (see example)</source>
          <target state="translated">Î∞òÎ≥µÍ∏∞ ÏúÑÏπòÎ•º Ïù¥ÏõÉÏùò Ï≤´ Î≤àÏß∏ ÏßÄÏ†êÏúºÎ°ú Ïû¨ÏÑ§Ï†ïÌïòÏã≠ÏãúÏò§. PyArray_NeighborhoodIterObjectÏóê Ï£ºÏñ¥ÏßÑ iter Ïù∏ÏàòÍ∞Ä Î≥ÄÍ≤Ω Îê† ÎïåÎßàÎã§ Ìò∏Ï∂úÎêòÏñ¥ÏïºÌï©ÎãàÎã§ (Ïòà Ï∞∏Ï°∞).</target>
        </trans-unit>
        <trans-unit id="157eb05bc1063737defb3aaa3d37e8a937aa6169" translate="yes" xml:space="preserve">
          <source>Reset the iterator to its initial state.</source>
          <target state="translated">Î∞òÎ≥µÏûêÎ•º Ï¥àÍ∏∞ ÏÉÅÌÉúÎ°ú Ïû¨ÏÑ§Ï†ïÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="7035ac25598eaa31ceee0d9ac1f16a387dc9e39e" translate="yes" xml:space="preserve">
          <source>Reset the maintenance branch into a development state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c8fba1cc962c4cb501911e267969446b1035d2" translate="yes" xml:space="preserve">
          <source>Reset to default:</source>
          <target state="translated">Í∏∞Î≥∏Í∞íÏúºÎ°ú Ïû¨ÏÑ§Ï†ï :</target>
        </trans-unit>
        <trans-unit id="4f9d34e9b8d5c18e7758a43e87feb292bfce95bf" translate="yes" xml:space="preserve">
          <source>Resets the iterator and restricts it to the &lt;code&gt;iterindex&lt;/code&gt; range &lt;code&gt;[istart, iend)&lt;/code&gt;. See &lt;a href=&quot;#c.NpyIter_Copy&quot;&gt;&lt;code&gt;NpyIter_Copy&lt;/code&gt;&lt;/a&gt; for an explanation of how to use this for multi-threaded iteration. This requires that the flag &lt;a href=&quot;#c.NPY_ITER_RANGED&quot;&gt;&lt;code&gt;NPY_ITER_RANGED&lt;/code&gt;&lt;/a&gt; was passed to the iterator constructor.</source>
          <target state="translated">Î∞òÎ≥µÏûêÎ•º Ïû¨ÏÑ§Ï†ïÌïòÍ≥† &lt;code&gt;iterindex&lt;/code&gt; Î≤îÏúÑ &lt;code&gt;[istart, iend)&lt;/code&gt; Ï†úÌïúÌï©ÎãàÎã§ . Îã§Ï§ë Ïä§Î†àÎìú Î∞òÎ≥µÏóêÏù¥Î•º ÏÇ¨Ïö©ÌïòÎäî Î∞©Î≤ïÏóê ÎåÄÌïú ÏÑ§Î™ÖÏùÄ &lt;a href=&quot;#c.NpyIter_Copy&quot;&gt; &lt;code&gt;NpyIter_Copy&lt;/code&gt; &lt;/a&gt; Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§ . Ïù¥Î•º ÏúÑÌï¥ÏÑúÎäî &lt;a href=&quot;#c.NPY_ITER_RANGED&quot;&gt; &lt;code&gt;NPY_ITER_RANGED&lt;/code&gt; &lt;/a&gt; ÌîåÎûòÍ∑∏ Í∞Ä Î∞òÎ≥µÏûê ÏÉùÏÑ±ÏûêÎ°ú Ï†ÑÎã¨ÎêòÏñ¥ÏïºÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="eff24a673089be816e4c40398dead3af513af774" translate="yes" xml:space="preserve">
          <source>Resets the iterator back to its initial state, at the beginning of the iteration range.</source>
          <target state="translated">Î∞òÎ≥µ Î≤îÏúÑÏùò ÏãúÏûë Î∂ÄÎ∂ÑÏóêÏÑú Î∞òÎ≥µÏûêÎ•º Ï¥àÍ∏∞ ÏÉÅÌÉúÎ°ú Îã§Ïãú ÏÑ§Ï†ïÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1b583188eb4151f14030389235fe3f76d32fe0f1" translate="yes" xml:space="preserve">
          <source>Resets the iterator back to its initial state, but using the values in &lt;code&gt;baseptrs&lt;/code&gt; for the data instead of the pointers from the arrays being iterated. This functions is intended to be used, together with the &lt;code&gt;op_axes&lt;/code&gt; parameter, by nested iteration code with two or more iterators.</source>
          <target state="translated">Î∞òÎ≥µÏûêÎ•º Ï¥àÍ∏∞ ÏÉÅÌÉúÎ°ú Îã§Ïãú ÏÑ§Ï†ïÌïòÏßÄÎßå Î∞òÎ≥µÎêòÎäî Î∞∞Ïó¥Ïùò Ìè¨Ïù∏ÌÑ∞ ÎåÄÏã† Îç∞Ïù¥ÌÑ∞Ïóê ÎåÄÌï¥ &lt;code&gt;baseptrs&lt;/code&gt; Ïùò Í∞íÏùÑ ÏÇ¨Ïö©Ìï©ÎãàÎã§ . Ïù¥ Ìï®ÏàòÎäî &lt;code&gt;op_axes&lt;/code&gt; Îß§Í∞ú Î≥ÄÏàòÏôÄ Ìï®Íªò Îëò Ïù¥ÏÉÅÏùò Î∞òÎ≥µÏûêÍ∞Ä Ìè¨Ìï® Îêú Ï§ëÏ≤© Î∞òÎ≥µ ÏΩîÎìúÏóê ÏùòÌï¥ ÏÇ¨Ïö©Îê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f317c5925f54e5831f0ad28ef469c2d00756338e" translate="yes" xml:space="preserve">
          <source>Reshaping and flattening multidimensional arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcc7177c9fef13effce7dbcc4912c738cfd89a8" translate="yes" xml:space="preserve">
          <source>Resolutions</source>
          <target state="translated">Resolutions</target>
        </trans-unit>
        <trans-unit id="1ed960abb43ff91406bb488b1ab9e14396960648" translate="yes" xml:space="preserve">
          <source>Resolve  and &amp;lsquo;.&amp;rsquo; from path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b9e5063e5042c78dcfc2599d9423480ff19e4d" translate="yes" xml:space="preserve">
          <source>Resolve all writeback semantics in writeable operands.</source>
          <target state="translated">Ïì∞Í∏∞ Í∞ÄÎä•Ìïú ÌîºÏó∞ÏÇ∞ÏûêÏùò Î™®Îì† Ïì∞Í∏∞ Ï†ÄÏû• ÏùòÎØ∏Î•º Ìï¥Í≤∞ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="4e21749018768e4b2c789b17bfbc04bad1b17528" translate="yes" xml:space="preserve">
          <source>Resolving arguments to call-back functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d850abfb4a9180a2bf655c8eceee0708525fbf34" translate="yes" xml:space="preserve">
          <source>Restore the internal state of the masked array, for pickling purposes.</source>
          <target state="translated">ÏÇ∞ÏÑ∏ Î™©Ï†ÅÏúºÎ°ú ÎßàÏä§ÌÅ¨ Îêú Ïñ¥Î†àÏù¥Ïùò ÎÇ¥Î∂Ä ÏÉÅÌÉúÎ•º Î≥µÏõêÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="dc369eacf1c95507d27a4023881b6510384a2a36" translate="yes" xml:space="preserve">
          <source>Restore the internal state of the masked array, for pickling purposes. &lt;code&gt;state&lt;/code&gt; is typically the output of the &lt;code&gt;__getstate__&lt;/code&gt; output, and is a 5-tuple:</source>
          <target state="translated">ÏÇ∞ÏÑ∏ Î™©Ï†ÅÏúºÎ°ú ÎßàÏä§ÌÅ¨ Îêú Ïñ¥Î†àÏù¥Ïùò ÎÇ¥Î∂Ä ÏÉÅÌÉúÎ•º Î≥µÏõêÌï©ÎãàÎã§. &lt;code&gt;state&lt;/code&gt; Îäî ÏùºÎ∞òÏ†ÅÏúºÎ°ú &lt;code&gt;__getstate__&lt;/code&gt; Ï∂úÎ†•Ïùò Ï∂úÎ†•Ïù¥Î©∞ 5 Í∞úÏùò ÌäúÌîåÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="f15f7b92cccbc5b7c9047b23fb081a5c542db4d8" translate="yes" xml:space="preserve">
          <source>Result of the recution operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc05e8f97c35dafd6a93108b86ba1537b49f1d0d" translate="yes" xml:space="preserve">
          <source>Result when mask == &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">mask == &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; Ïù∏&lt;/a&gt; Í≤ΩÏö∞ Í≤∞Í≥º</target>
        </trans-unit>
        <trans-unit id="fc88521d4f82f61ebd70be11b092c5c62f24434a" translate="yes" xml:space="preserve">
          <source>Result when mask == &lt;code&gt;nomask&lt;/code&gt;</source>
          <target state="translated">mask == &lt;code&gt;nomask&lt;/code&gt; Ïù∏ Í≤ΩÏö∞ Í≤∞Í≥º</target>
        </trans-unit>
        <trans-unit id="588b3d01b506bfab38a1e1a80e0afd09d837fc20" translate="yes" xml:space="preserve">
          <source>Result will be a new array (pointing to the same memory location as &lt;em&gt;self&lt;/em&gt; if possible), but having a shape given by &lt;em&gt;newshape&lt;/em&gt;. If the new shape is not compatible with the strides of &lt;em&gt;self&lt;/em&gt;, then a copy of the array with the new specified shape will be returned.</source>
          <target state="translated">Í≤∞Í≥ºÎäî ÏÉàÎ°úÏö¥ Î∞∞Ïó¥ ( Í∞ÄÎä•Ìïú Í≤ΩÏö∞ &lt;em&gt;self&lt;/em&gt; ÏôÄ ÎèôÏùºÌïú Î©îÎ™®Î¶¨ ÏúÑÏπòÎ•º Í∞ÄÎ¶¨ÌÇ¥ )Ïù¥ÏßÄÎßå &lt;em&gt;newshapeÏóê&lt;/em&gt; ÏùòÌï¥ Ï£ºÏñ¥ÏßÑ Î™®ÏñëÏùÑ &lt;em&gt;Í∞ñÏäµÎãàÎã§&lt;/em&gt; . ÏÉà Î™®ÏñëÏù¥ &lt;em&gt;self&lt;/em&gt; Ïùò Î≥¥Ìè≠Í≥º Ìò∏ÌôòÎêòÏßÄ ÏïäÏúºÎ©¥ ÏßÄÏ†ïÎêú ÏÉà Î™®ÏñëÏùÑ Í∞ÄÏßÑ Î∞∞Ïó¥Ïùò Î≥µÏÇ¨Î≥∏Ïù¥ Î∞òÌôòÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2073abfa2583feee725813a0aa7b4d4a00652b5b" translate="yes" xml:space="preserve">
          <source>Result. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">Í≤∞Í≥º. &lt;code&gt;x&lt;/code&gt; Í∞Ä Ïä§ÏπºÎùº Ïù∏ Í≤ΩÏö∞ Ïä§ÏπºÎùºÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="bacbf4188ea173ea64cbcfc6c1a2ebe9c7368253" translate="yes" xml:space="preserve">
          <source>Result. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">Í≤∞Í≥º. &lt;code&gt;x1&lt;/code&gt; Í≥º &lt;code&gt;x2&lt;/code&gt; Í∞Ä Î™®Îëê Ïä§ÏπºÎùº Ïù∏ Í≤ΩÏö∞ Ïä§ÏπºÎùºÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b704a49ea0f270aaeb2fa062a86d4a208d4bdeee" translate="yes" xml:space="preserve">
          <source>Results are from the &amp;ldquo;continuous uniform&amp;rdquo; distribution over the stated interval. To sample</source>
          <target state="translated">Í≤∞Í≥ºÎäî Î™ÖÏãúÎêú Íµ¨Í∞ÑÏóê ÎåÄÌïú &quot;Ïó∞ÏÜç Í∑†Ïùº Ìïú&quot;Î∂ÑÌè¨ÏóêÏÑú ÎπÑÎ°ØÎê©ÎãàÎã§. ÏÉòÌîå</target>
        </trans-unit>
        <trans-unit id="6c568ccd2504e9c8367afdab82be525b80fc3483" translate="yes" xml:space="preserve">
          <source>Retrieves the array parameters for viewing/converting an arbitrary PyObject* to a NumPy array. This allows the &amp;ldquo;innate type and shape&amp;rdquo; of Python list-of-lists to be discovered without actually converting to an array. PyArray_FromAny calls this function to analyze its input.</source>
          <target state="translated">ÏûÑÏùòÏùò PyObject *Î•º NumPy Î∞∞Ïó¥Î°ú Î≥¥Í±∞ÎÇò Î≥ÄÌôòÌïòÍ∏∞ÏúÑÌïú Î∞∞Ïó¥ Îß§Í∞ú Î≥ÄÏàòÎ•º Í≤ÄÏÉâÌï©ÎãàÎã§. Ïù¥Î•º ÌÜµÌï¥ Ïã§Ï†úÎ°ú Î∞∞Ïó¥Î°ú Î≥ÄÌôòÌïòÏßÄ ÏïäÍ≥†ÎèÑ Python Î™©Î°ù Î™©Î°ùÏùò &quot;Í≥† Ïú†ÌòïÍ≥º Î™®Ïñë&quot;ÏùÑ Î∞úÍ≤¨ Ìï† Ïàò ÏûàÏäµÎãàÎã§. PyArray_FromAnyÎäîÏù¥ Ìï®ÏàòÎ•º Ìò∏Ï∂úÌïòÏó¨ ÏûÖÎ†•ÏùÑ Î∂ÑÏÑùÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f7dede7b0df13e15703c59a7fa59a74b87cccb97" translate="yes" xml:space="preserve">
          <source>Return (a % i), that is pre-Python 2.6 string formatting (interpolation), element-wise for a pair of array_likes of str or unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea648a3db0e0b4553bd9dd2a7829fa7481157b81" translate="yes" xml:space="preserve">
          <source>Return (a % i), that is pre-Python 2.6 string formatting (iterpolation), element-wise for a pair of array_likes of str or unicode.</source>
          <target state="translated">str ÎòêÎäî unicodeÏùò array_likes ÏåçÏóê ÎåÄÌï¥ ÏöîÏÜåÎ≥ÑÎ°ú ÌååÏù¥Ïç¨ Ïù¥Ï†ÑÏùò 2.6 Î¨∏ÏûêÏó¥ ÌòïÏãùÌôî (iterpolation) Ïù∏ (a % i)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="9a3020c036840e53c7e8d167bddbad0cd1c405b6" translate="yes" xml:space="preserve">
          <source>Return (a * i), that is string multiple concatenation, element-wise.</source>
          <target state="translated">Î∞òÌôò (a * i), Ï¶â ÏöîÏÜå Î≥Ñ Î¨∏ÏûêÏó¥ Îã§Ï§ë Ïó∞Í≤∞ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3da4ff192d7465e38103ce9c749286f7d9de247f" translate="yes" xml:space="preserve">
          <source>Return (maximum - minimum) along the given dimension (i.e.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ ÏπòÏàòÎ•º Îî∞Îùº Î∞òÌôò (ÏµúÎåÄ-ÏµúÏÜå)</target>
        </trans-unit>
        <trans-unit id="84ef75f410be308b93316d3b21f0eb6407eb40cd" translate="yes" xml:space="preserve">
          <source>Return (maximum - minimum) along the given dimension (i.e. peak-to-peak value).</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∞®Ïõê (Ï¶â, ÌîºÌÅ¨ ÎåÄ ÌîºÌÅ¨ Í∞í)ÏùÑ Îî∞Îùº Î∞òÌôòÌï©ÎãàÎã§ (ÏµúÎåÄ Í∞í-ÏµúÏÜåÍ∞í).</target>
        </trans-unit>
        <trans-unit id="3adeafcc70b23e232235895bcdf55e36a646b3e4" translate="yes" xml:space="preserve">
          <source>Return (status,output) of executed command.</source>
          <target state="translated">Ïã§Ìñâ Îêú Î™ÖÎ†πÏùò Î∞òÌôò (ÏÉÅÌÉú, Ï∂úÎ†•)</target>
        </trans-unit>
        <trans-unit id="c49c4d9d3908bcdddb32c5857584b4580f75831d" translate="yes" xml:space="preserve">
          <source>Return (x1 != x2) element-wise.</source>
          <target state="translated">ÏöîÏÜå Îã®ÏúÑÎ°ú (x1! = x2)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b675dee05c47dba27162bfc7bff609a478fa7a33" translate="yes" xml:space="preserve">
          <source>Return (x1 &amp;gt; x2) element-wise.</source>
          <target state="translated">ÏöîÏÜå Îã®ÏúÑÎ°ú (x1&amp;gt; x2)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3cc2feb612a398c1ca0bc0648d58947256e06fda" translate="yes" xml:space="preserve">
          <source>Return (x1 &amp;gt;= x2) element-wise.</source>
          <target state="translated">ÏöîÏÜå Îã®ÏúÑÎ°ú (x1&amp;gt; = x2)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="93ad5d947f96d7f059a3dad859c9742b804b0aec" translate="yes" xml:space="preserve">
          <source>Return (x1 &amp;lt; x2) element-wise.</source>
          <target state="translated">ÏöîÏÜå Îã®ÏúÑÎ°ú (x1 &amp;lt;x2)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="51f09d6c97e69f835ef6dc53afec7d3aa725f2ad" translate="yes" xml:space="preserve">
          <source>Return (x1 &amp;lt;= x2) element-wise.</source>
          <target state="translated">ÏöîÏÜå Îã®ÏúÑÎ°ú (x1 &amp;lt;= x2)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ed29abc94e32e786d4a38106b1e3fd1909b5b3ec" translate="yes" xml:space="preserve">
          <source>Return (x1 == x2) element-wise.</source>
          <target state="translated">ÏöîÏÜå Îã®ÏúÑÎ°ú (x1 == x2)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="6c7dd7eb58972995af93ce5d8c32d5580c5b4edd" translate="yes" xml:space="preserve">
          <source>Return (y1, y2) from &lt;code&gt;x = y1 * 2**y2&lt;/code&gt;, inverse to &lt;a href=&quot;#numpy.ldexp&quot;&gt;&lt;code&gt;ldexp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;x = y1 * 2**y2&lt;/code&gt; ÏóêÏÑú (y1, y2) Î•º &lt;a href=&quot;#numpy.ldexp&quot;&gt; &lt;code&gt;ldexp&lt;/code&gt; &lt;/a&gt; ÏôÄ Î∞òÎåÄÎ°ú Î∞òÌôò Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="28ef3463bcf3827b20880b37a94902671ef30382" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;a1&lt;/em&gt; and &lt;em&gt;a2&lt;/em&gt; are arrays with equivalent types for this platform.</source>
          <target state="translated">&lt;em&gt;a1&lt;/em&gt; Í≥º &lt;em&gt;a2&lt;/em&gt; Í∞ÄÏù¥ ÌîåÎû´ÌèºÍ≥º ÎèôÎì±Ìïú Ïú†ÌòïÏùÑ Í∞ÄÏßÑ Î∞∞Ïó¥ Ïù¥Î©¥ &lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; Î•º&lt;/a&gt; Î∞òÌôò Ìï©ÎãàÎã§.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3ab398a886f5a338c4bcd391e63b7966b0ceee4" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;type1&lt;/em&gt; and &lt;em&gt;type2&lt;/em&gt; actually represent equivalent types for this platform (the fortran member of each type is ignored). For example, on 32-bit platforms, &lt;a href=&quot;c-api.dtype#c.NPY_LONG&quot;&gt;&lt;code&gt;NPY_LONG&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;c-api.dtype#c.NPY_INT&quot;&gt;&lt;code&gt;NPY_INT&lt;/code&gt;&lt;/a&gt; are equivalent. Otherwise return &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;type1&lt;/em&gt; Í≥º &lt;em&gt;type2Í∞Ä&lt;/em&gt; Ïã§Ï†úÎ°úÏù¥ ÌîåÎû´ÌèºÏóêÏÑú ÎèôÎì±Ìïú Ïú†ÌòïÏùÑ ÎÇòÌÉÄÎÇ¥Îäî Í≤ΩÏö∞ &lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; Î•º&lt;/a&gt; Î¶¨ÌÑ¥ ÌïòÏã≠ÏãúÏò§ (Í∞Å Ïú†ÌòïÏùò Ìè¨Ìä∏ÎûÄ Íµ¨ÏÑ±ÏõêÏùÄ Î¨¥Ïãú Îê®). ÏòàÎ•º Îì§Ïñ¥, 32 ÎπÑÌä∏ ÌîåÎû´ÌèºÏóêÏÑú &lt;a href=&quot;c-api.dtype#c.NPY_LONG&quot;&gt; &lt;code&gt;NPY_LONG&lt;/code&gt; &lt;/a&gt; Î∞è &lt;a href=&quot;c-api.dtype#c.NPY_INT&quot;&gt; &lt;code&gt;NPY_INT&lt;/code&gt; &lt;/a&gt; Îäî ÎèôÏùºÌï©ÎãàÎã§. Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ &lt;a href=&quot;#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; Î•º&lt;/a&gt; Î∞òÌôò Ìï©ÎãàÎã§ .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f44ad9fdd1e212335237f18abefc0a9820da9236" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;type1&lt;/em&gt; and &lt;em&gt;type2&lt;/em&gt; actually represent equivalent types for this platform (the fortran member of each type is ignored). For example, on 32-bit platforms, &lt;a href=&quot;dtype#c.NPY_LONG&quot;&gt;&lt;code&gt;NPY_LONG&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dtype#c.NPY_INT&quot;&gt;&lt;code&gt;NPY_INT&lt;/code&gt;&lt;/a&gt; are equivalent. Otherwise return &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdb3259d10c008137e983f5b3c17ebd6e49650d" translate="yes" xml:space="preserve">
          <source>Return &lt;a href=&quot;mailto:self%40value&quot;&gt;self@value&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mailto:self%40value&quot;&gt;self @ valueÎ•º&lt;/a&gt; Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="22ed1ce818375b334e64310c8c59e8fe95503a9d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a&lt;/code&gt; as an array masked where &lt;code&gt;condition&lt;/code&gt; is True. Any masked values of &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;condition&lt;/code&gt; are also masked in the output.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; Ïù¥ Ï∞∏Ïù∏ ÎßàÏä§ÌÅ¨ Îêú Î∞∞Ïó¥ Î°ú &lt;code&gt;a&lt;/code&gt; Î•º Î∞òÌôò Ìï©ÎãàÎã§ . ÏûÑÏùòÏùò ÎßàÏä§ÌÅ¨ Í∞í ÎòêÎäî &lt;code&gt;condition&lt;/code&gt; Í≥º Í∞ôÏùÄ Ï∂úÎ†•ÏúºÎ°ú ÎßàÏä§ÌÅ¨ÎêúÎã§. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b510555c4321a24851694576ead415921116512" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a&lt;/code&gt; where condition is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">where Ï°∞Í±¥Ïù¥ &lt;code&gt;True&lt;/code&gt; Ïù∏ Í≥≥ÏùÑ Î∞òÌôò &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b70610621d36f74b8521944d039f57cdf33d34f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a&lt;/code&gt; with each element rounded to the given number of decimals.</source>
          <target state="translated">Í∞Å ÏöîÏÜåÎ•º Ï£ºÏñ¥ÏßÑ ÏÜåÏàò ÏûêÎ¶øÏàòÎ°ú Î∞òÏò¨Î¶ºÌïòÏó¨ &lt;code&gt;a&lt;/code&gt; Î•º Î∞òÌôò Ìï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="02a18485439b35916dc5f997e5963d33a7e35452" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;m&lt;/code&gt; as a boolean mask, creating a copy if necessary or requested. The function can accept any sequence that is convertible to integers, or &lt;code&gt;nomask&lt;/code&gt;. Does not require that contents must be 0s and 1s, values of 0 are interepreted as False, everything else as True.</source>
          <target state="translated">ÌïÑÏöîÌïòÍ±∞ÎÇò ÏöîÏ≤≠ÌïòÎ©¥ &lt;code&gt;m&lt;/code&gt; ÏùÑ Î∂ÄÏö∏ ÎßàÏä§ÌÅ¨Î°ú Î¶¨ÌÑ¥ ÌïòÏó¨ ÏÇ¨Î≥∏ÏùÑ ÏûëÏÑ±ÌïòÏã≠ÏãúÏò§. Ïù¥ Ìï®ÏàòÎäî Ï†ïÏàò ÎòêÎäî &lt;code&gt;nomask&lt;/code&gt; Î°ú Î≥ÄÌôò Í∞ÄÎä•Ìïú Î™®Îì† ÏãúÌÄÄÏä§Î•º ÌóàÏö© Ìï† Ïàò ÏûàÏäµÎãàÎã§ . ÎÇ¥Ïö©Ïù¥ 0Í≥º 1Ïù¥Ïñ¥Ïïº Ìï† ÌïÑÏöîÎäî ÏóÜÏúºÎ©∞, 0Ïùò Í∞íÏùÄ FalseÎ°ú Ìï¥ÏÑùÎêòÍ≥† Îã§Î•∏ Î™®Îì† Í≤ÉÏùÄ TrueÎ°ú Ìï¥ÏÑùÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d3f5c1ff5b2197f6cf1b75044e938ac07c06fa32" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;m&lt;/code&gt; as a boolean mask, creating a copy if necessary or requested. The function can accept any sequence that is convertible to integers, or &lt;code&gt;nomask&lt;/code&gt;. Does not require that contents must be 0s and 1s, values of 0 are interpreted as False, everything else as True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec101325a56d61d51870105ee9260d907655bf98" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;self&lt;/code&gt; as a flattened &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ÎÇ©ÏûëÌïú &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; Î°ú &lt;code&gt;self&lt;/code&gt; ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="929e1c6e3be4a54fa787f22fa084aac1ba626ae2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;self&lt;/code&gt; as an &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; Î•º &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; Í∞ùÏ≤¥ Î°ú Î∞òÌôòÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="be20763c874efd67eb290e3ad06aad0e90938c68" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;self&lt;/code&gt; as an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; Î•º &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; Í∞ùÏ≤¥ Î°ú Î∞òÌôòÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="0797a064673cc5729ee06640138925df0a0b635c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x1&lt;/code&gt; with bits shifted &lt;code&gt;x2&lt;/code&gt; times to the left. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">ÎπÑÌä∏Í∞Ä &lt;code&gt;x2&lt;/code&gt; Î∞∞ ÏôºÏ™Ω ÏúºÎ°ú ÏãúÌîÑÌä∏ Îêú &lt;code&gt;x1&lt;/code&gt; ÏùÑ Î∞òÌôò Ìï©ÎãàÎã§. &lt;code&gt;x1&lt;/code&gt; Í≥º &lt;code&gt;x2&lt;/code&gt; Í∞Ä Î™®Îëê Ïä§ÏπºÎùº Ïù∏ Í≤ΩÏö∞ Ïä§ÏπºÎùºÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="453ab7b6038fdf951e9754315ab9e83d8f83e77d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x1&lt;/code&gt; with bits shifted &lt;code&gt;x2&lt;/code&gt; times to the right. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">&lt;code&gt;x2&lt;/code&gt; Î•º Ïò§Î•∏Ï™Ω ÏúºÎ°ú x2 Î≤à ÏãúÌîÑÌä∏ Ìïú &lt;code&gt;x1&lt;/code&gt; ÏùÑ Î∞òÌôò Ìï©ÎãàÎã§. &lt;code&gt;x1&lt;/code&gt; Í≥º &lt;code&gt;x2&lt;/code&gt; Í∞Ä Î™®Îëê Ïä§ÏπºÎùº Ïù∏ Í≤ΩÏö∞ Ïä§ÏπºÎùºÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="65b5709a87c4768c8b3232bfe9f788eb6643e507" translate="yes" xml:space="preserve">
          <source>Return NULL on failure (in which case the reference count of iter is not changed)</source>
          <target state="translated">Ïã§Ìå®Ïãú NULL Î∞òÌôò (Ïù¥ Í≤ΩÏö∞ Î∞òÎ≥µÏûêÏùò Ï∞∏Ï°∞ ÌöüÏàòÍ∞Ä Î≥ÄÍ≤ΩÎêòÏßÄ ÏïäÏùå)</target>
        </trans-unit>
        <trans-unit id="607783436b747557c4014e3eeaa7e2d4377ee410" translate="yes" xml:space="preserve">
          <source>Return Pearson product-moment correlation coefficients.</source>
          <target state="translated">Pearson Í≥±-Î™®Î©òÌä∏ ÏÉÅÍ¥Ä Í≥ÑÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2626f3f02e48b03ddf27a0104abeda6947755186" translate="yes" xml:space="preserve">
          <source>Return True if all elements of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal subject to given tolerances.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; ÏôÄ &lt;code&gt;b&lt;/code&gt; Ïùò Î™®Îì† ÏöîÏÜå Í∞Ä Ï£ºÏñ¥ÏßÑ Í≥µÏ∞®Ïóê Ï¢ÖÏÜçÎêòÎäî Í≤ΩÏö∞ TrueÎ•º Î∞òÌôò Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="01e28d221e0f25c7a98fe78a1e454144dabc4eec" translate="yes" xml:space="preserve">
          <source>Return True if all entries of a and b are equal, using fill_value as a truth value where either or both are masked.</source>
          <target state="translated">fill_valueÎ•º ÏßÑÎ¶¨ Í∞íÏúºÎ°ú ÏÇ¨Ïö©ÌïòÏó¨ aÏôÄ bÏùò Î™®Îì† Ìï≠Î™©Ïù¥ ÎèôÏùºÌïú Í≤ΩÏö∞ TrueÎ•º Î¶¨ÌÑ¥Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="02e3af57a92c7bcc5752912e21eb8a42fbc6b70e" translate="yes" xml:space="preserve">
          <source>Return True if all items in lst are string objects.</source>
          <target state="translated">lstÏùò Î™®Îì† Ìï≠Î™©Ïù¥ Î¨∏ÏûêÏó¥ Í∞ùÏ≤¥Ïù¥Î©¥ TrueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="9fdbb15645f2cb7ccd7a3b7ac81b64530429ab6d" translate="yes" xml:space="preserve">
          <source>Return True if m is a valid, standard mask.</source>
          <target state="translated">mÏù¥ Ïú†Ìö®Ìïú ÌëúÏ§Ä ÎßàÏä§ÌÅ¨Ïù¥Î©¥ TrueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="34d2f9317679838302e7f7267a6f84e8db1ad24a" translate="yes" xml:space="preserve">
          <source>Return True if sources contains C++ files</source>
          <target state="translated">ÏÜåÏä§Ïóê C ++ ÌååÏùºÏù¥ Ìè¨Ìï®ÎêòÏñ¥ ÏûàÏúºÎ©¥ TrueÎ•º Î∞òÌôò</target>
        </trans-unit>
        <trans-unit id="c3802a4a5b8659cfe2e5fc13fa239e1795042f9b" translate="yes" xml:space="preserve">
          <source>Return True if sources contains Fortran files</source>
          <target state="translated">ÏÜåÏä§Ïóê Ìè¨Ìä∏ÎûÄ ÌååÏùºÏù¥ Ìè¨Ìï® Îêú Í≤ΩÏö∞ TrueÎ•º Î∞òÌôò</target>
        </trans-unit>
        <trans-unit id="41e78d089ac3d88820c882d46d8143de7c68e18b" translate="yes" xml:space="preserve">
          <source>Return True if x is a complex type or an array of complex numbers.</source>
          <target state="translated">xÍ∞Ä Î≥µÏÜåÏàò ÌòïÏãùÏù¥Í±∞ÎÇò Î≥µÏÜåÏàò Î∞∞Ïó¥Ïù¥Î©¥ TrueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="daa94ce7eb99f882612387971d94f98f2249e10a" translate="yes" xml:space="preserve">
          <source>Return True if x is a not complex type or an array of complex numbers.</source>
          <target state="translated">xÍ∞Ä Î≥µÏÜåÏàò ÌòïÏãùÏù¥ ÏïÑÎãàÍ±∞ÎÇò Î≥µÏÜåÏàò Î∞∞Ïó¥Ïù¥Î©¥ TrueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="949586ac8687fefdaada25290c949ae12be49d65" translate="yes" xml:space="preserve">
          <source>Return True if x is not a complex type.</source>
          <target state="translated">xÍ∞Ä Î≥µÌï© Ïú†ÌòïÏù¥ ÏïÑÎãå Í≤ΩÏö∞ TrueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="8ff4baa0675de7fc24bd7cacdcde0d347af2ba21" translate="yes" xml:space="preserve">
          <source>Return a 0-dimensional array of type determined by &lt;em&gt;outcode&lt;/em&gt; from &lt;em&gt;scalar&lt;/em&gt; which should be an array-scalar object. If &lt;em&gt;outcode&lt;/em&gt; is NULL, then the type is determined from &lt;em&gt;scalar&lt;/em&gt;.</source>
          <target state="translated">Î∞∞Ïó¥ Ïä§ÏπºÎùº Í∞ùÏ≤¥ Ïó¨ÏïºÌïòÎäî &lt;em&gt;Ïä§ÏπºÎùºÏùò &lt;/em&gt;&lt;em&gt;Ï∂úÎ†•&lt;/em&gt; ÏúºÎ°ú Í≤∞Ï†ïÎêú 0 Ï∞®Ïõê ÌòïÏãùÏùò Î∞∞Ïó¥ÏùÑ Î∞òÌôò Ìï©ÎãàÎã§. Í≤ΩÏö∞ &lt;em&gt;OUTCODEÍ∞Ä&lt;/em&gt; nullÏùò Í≤ΩÏö∞, Îã§Ïùå Ïú†ÌòïÏù¥ Í≤∞Ï†ïÎê©ÎãàÎã§ &lt;em&gt;Ïä§ÏπºÎùº&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d52ef40bd717923edba3b2673120d5aafcb4ed62" translate="yes" xml:space="preserve">
          <source>Return a 1-D array containing the elements of the input array.</source>
          <target state="translated">ÏûÖÎ†• Î∞∞Ïó¥Ïùò ÏöîÏÜåÎ•º Ìè¨Ìï®ÌïòÎäî 1 Ï∞®Ïõê Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c4bdfe648209432914da520e37e737b85aa14cf4" translate="yes" xml:space="preserve">
          <source>Return a 2-D array with ones on the diagonal and zeros elsewhere.</source>
          <target state="translated">ÎåÄÍ∞ÅÏÑ†Ïóê 1Ïù¥ ÏûàÍ≥† Îã§Î•∏ Í≥≥Ïóê 0Ïù¥ÏûàÎäî 2 Ï∞®Ïõê Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="91517544536a7c5b8d2ff9c7e78afdfb3aef44df" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple for pickling a MaskedArray.</source>
          <target state="translated">MaskedArrayÎ•º ÏÇ∞ÏÑ∏ÌïòÍ∏∞ÏúÑÌïú 3 Í∞úÏùò ÌäúÌîåÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="62e53c37d6b77aaad4ef67ffa0933d21c98e80b4" translate="yes" xml:space="preserve">
          <source>Return a MaskedArray, masked where the data in array &lt;code&gt;x&lt;/code&gt; are approximately equal to &lt;code&gt;value&lt;/code&gt;, determined using &lt;code&gt;isclose&lt;/code&gt;. The default tolerances for &lt;a href=&quot;#numpy.ma.masked_values&quot;&gt;&lt;code&gt;masked_values&lt;/code&gt;&lt;/a&gt; are the same as those for &lt;code&gt;isclose&lt;/code&gt;.</source>
          <target state="translated">Ïñ¥Î†àÏù¥Ïùò Îç∞Ïù¥ÌÑ∞ ÎßàÏä§ÌÇπ MaskedArray Î∞òÌôò &lt;code&gt;x&lt;/code&gt; ÎèôÏùº ÏïΩÎêòÎäî &lt;code&gt;value&lt;/code&gt; ÏÇ¨Ïö©ÌïòÏó¨ Í≤∞Ï†ï &lt;code&gt;isclose&lt;/code&gt; Î•º . Ïùò Í∏∞Î≥∏ Í≥µÏ∞® &lt;a href=&quot;#numpy.ma.masked_values&quot;&gt; &lt;code&gt;masked_values&lt;/code&gt; ÏùÄ&lt;/a&gt; Í≥º ÎèôÏùº &lt;code&gt;isclose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3673193517a6493ea6d7bd92c412ba5e0c3a5f81" translate="yes" xml:space="preserve">
          <source>Return a Python dictionary containing the callable Python objects stored in the internal arithmetic operation table. The keys of this dictionary are given in the explanation for &lt;a href=&quot;#c.PyArray_SetNumericOps&quot;&gt;&lt;code&gt;PyArray_SetNumericOps&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ÎÇ¥Î∂Ä ÏÇ∞Ïà† Ïó∞ÏÇ∞ ÌÖåÏù¥Î∏îÏóê Ï†ÄÏû•Îêú Ìò∏Ï∂ú Í∞ÄÎä•Ìïú Python Í∞ùÏ≤¥Í∞Ä Ìè¨Ìï® Îêú Python ÏÇ¨Ï†ÑÏùÑ Î∞òÌôòÌï©ÎãàÎã§. Ïù¥ ÏÇ¨Ï†ÑÏùò ÌÇ§Îäî &lt;a href=&quot;#c.PyArray_SetNumericOps&quot;&gt; &lt;code&gt;PyArray_SetNumericOps&lt;/code&gt; &lt;/a&gt; Ïóê ÎåÄÌïú ÏÑ§Î™ÖÏóê Ï†úÍ≥µ Îê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="dc69ad6044ff027feb0d3fdc25e8b39058d6eeac" translate="yes" xml:space="preserve">
          <source>Return a boolean indicating whether the data is contiguous.</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞Í∞Ä Ïó∞ÏÜçÏ†ÅÏù∏ÏßÄ Ïó¨Î∂ÄÎ•º ÎÇòÌÉÄÎÇ¥Îäî Î∂ÄÏö∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0f696ef239486981e576e48f6564e9101d37ba6c" translate="yes" xml:space="preserve">
          <source>Return a boolean mask of the given shape, filled with False.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î™®ÏñëÏùò Î∂ÄÏö∏ ÎßàÏä§ÌÅ¨Î•º FalseÎ°ú Ï±Ñ ÏõÅÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0f0a29804cc12400fe788b90da479d165fd1144c" translate="yes" xml:space="preserve">
          <source>Return a configuration dictionary for usage in configuration() function defined in file setup_&amp;lt;name&amp;gt;.py.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664bb9fa387ff0eede3291e4637ec9237e7d4003" translate="yes" xml:space="preserve">
          <source>Return a contiguous array (ndim &amp;gt;= 1) in memory (C order).</source>
          <target state="translated">Î©îÎ™®Î¶¨Ïóê Ïó∞ÏÜç Î∞∞Ïó¥ (ndim&amp;gt; = 1)ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ (C ÏàúÏÑú).</target>
        </trans-unit>
        <trans-unit id="33728b7601018ae71bcefebae8379558c9171ab5" translate="yes" xml:space="preserve">
          <source>Return a contiguous flattened array.</source>
          <target state="translated">Ïó∞ÏÜç Îêú ÌèâÌèâÌïú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4cbef29fca8fa327d15bdd98bf55a361ea5eb16e" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;a&lt;/code&gt; with its elements centered in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">Í∏∏Ïù¥Í∞Ä &lt;code&gt;width&lt;/code&gt; Ïù∏ Î¨∏ÏûêÏó¥Ïùò Í∞ÄÏö¥Îç∞Ïóê ÏöîÏÜå Í∞Ä &lt;code&gt;a&lt;/code&gt; Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="88886d32c956bee86995b83b237737283cb8bbf9" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;a&lt;/code&gt; with only the first character of each element capitalized.</source>
          <target state="translated">Ïùò ÏÇ¨Î≥∏ ÎèåÏïÑ &lt;code&gt;a&lt;/code&gt; ÎåÄÎ¨∏ÏûêÎ°ú Í∞Å ÏöîÏÜåÏùò Ï≤´ Î≤àÏß∏ Î¨∏Ïûê.</target>
        </trans-unit>
        <trans-unit id="4ee4a0359cfd047d98426439400c84f4ab97b34d" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;self&lt;/code&gt; with its elements centered in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b70b9fdd7b9aba90fd1b5ae02b11f525568b88" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;self&lt;/code&gt; with only the first character of each element capitalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16a99a7cd41ef9815eca635cb6782a3736ff419" translate="yes" xml:space="preserve">
          <source>Return a copy of a matrix with the elements below the &lt;code&gt;k&lt;/code&gt;-th diagonal zeroed.</source>
          <target state="translated">&lt;code&gt;k&lt;/code&gt; Î≤àÏß∏ ÎåÄÍ∞ÅÏÑ† ÏïÑÎûòÏùò ÏöîÏÜåÍ∞Ä 0 Ïù∏ ÌñâÎ†¨Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="4e3e289b93725eae0153b5a7f0f809573e71ee4c" translate="yes" xml:space="preserve">
          <source>Return a copy of a, rounded to &amp;lsquo;decimals&amp;rsquo; places.</source>
          <target state="translated">'ÏÜåÏàòÏ†ê'ÏúºÎ°ú Î∞òÏò¨Î¶º Îêú ÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="11aab5ac7cb1261dfee6a4476c63cfa6e7ff4886" translate="yes" xml:space="preserve">
          <source>Return a copy of an array sorted along the first axis.</source>
          <target state="translated">Ï≤´ Î≤àÏß∏ Ï∂ïÏùÑ Îî∞Îùº Ï†ïÎ†¨ Îêú Î∞∞Ïó¥Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8e543cd4880dededfe90bdf87a6349661e52f24a" translate="yes" xml:space="preserve">
          <source>Return a copy of an array with elements above the &lt;code&gt;k&lt;/code&gt;-th diagonal zeroed.</source>
          <target state="translated">&lt;code&gt;k&lt;/code&gt; Î≤àÏß∏ ÎåÄÍ∞ÅÏÑ†Ïù¥ 0 Î≥¥Îã§ ÌÅ∞ ÏöîÏÜåÍ∞ÄÏûàÎäî Î∞∞Ïó¥Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="5eb09f908f4d8842be8d810a5dda78cfde408ef2" translate="yes" xml:space="preserve">
          <source>Return a copy of each string element where all tab characters are replaced by one or more spaces, depending on the current column and the given &lt;code&gt;tabsize&lt;/code&gt;. The column number is reset to zero after each newline occurring in the string. This doesn&amp;rsquo;t understand other non-printing characters or escape sequences.</source>
          <target state="translated">ÌòÑÏû¨ Ïó¥Í≥º ÏßÄÏ†ïÎêú &lt;code&gt;tabsize&lt;/code&gt; Ïóê Îî∞Îùº Î™®Îì† ÌÉ≠ Î¨∏ÏûêÍ∞Ä ÌïòÎÇò Ïù¥ÏÉÅÏùò Í≥µÎ∞±ÏúºÎ°ú ÎåÄÏ≤¥ Îêú Í∞Å Î¨∏ÏûêÏó¥ ÏöîÏÜåÏùò ÏÇ¨Î≥∏ÏùÑ Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§ . Î¨∏ÏûêÏó¥ÏóêÏÑú Í∞Å Ï§Ñ Î∞îÍøàÏù¥ Î∞úÏÉùÌïòÎ©¥ Ïó¥ Î≤àÌò∏Í∞Ä 0ÏúºÎ°ú Ïû¨ÏÑ§Ï†ïÎê©ÎãàÎã§. Ïù∏ÏáÑÎêòÏßÄ ÏïäÎäî Îã§Î•∏ Î¨∏Ïûê ÎÇò Ïù¥Ïä§ÏºÄÏù¥ÌîÑ ÏãúÌÄÄÏä§Î•º Ïù¥Ìï¥ÌïòÏßÄ Î™ªÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a52d1817faa0489d41a2297f6a44b1321dd17b7b" translate="yes" xml:space="preserve">
          <source>Return a copy of each string element where all tab characters are replaced by one or more spaces.</source>
          <target state="translated">Î™®Îì† ÌÉ≠ Î¨∏ÏûêÍ∞Ä ÌïòÎÇò Ïù¥ÏÉÅÏùò Í≥µÎ∞±ÏúºÎ°ú ÎåÄÏ≤¥ Îêú Í∞Å Î¨∏ÏûêÏó¥ ÏöîÏÜåÏùò ÏÇ¨Î≥∏ÏùÑ Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="adee7741b5feb572ad64b5aafa747a23667c6d0b" translate="yes" xml:space="preserve">
          <source>Return a copy of self, with masked values filled with a given value.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Í∞íÏúºÎ°ú Ï±ÑÏõåÏßÑ ÎßàÏä§ÌÇπ Îêú Í∞íÏúºÎ°ú selfÏùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="96e11419b302195588d9f7c41a94e599bf78c841" translate="yes" xml:space="preserve">
          <source>Return a copy of self, with masked values filled with a given value. &lt;strong&gt;However&lt;/strong&gt;, if there are no masked values to fill, self will be returned instead as an ndarray.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Í∞íÏúºÎ°ú Ï±ÑÏõåÏßÑ ÎßàÏä§ÌÇπ Îêú Í∞íÏúºÎ°ú selfÏùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. &lt;strong&gt;Í∑∏Îü¨ÎÇò&lt;/strong&gt; Ï±ÑÏö∏ ÎßàÏä§ÌÅ¨ Í∞íÏù¥ ÏóÜÏúºÎ©¥ ÎåÄÏã† ndarrayÎ°ú selfÍ∞Ä Î∞òÌôòÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e65c034c766c929fc8e8515317122d09c8f553f4" translate="yes" xml:space="preserve">
          <source>Return a copy of the array collapsed into one dimension.</source>
          <target state="translated">Ï∂ïÏÜå Îêú Î∞∞Ïó¥Ïùò ÏÇ¨Î≥∏ÏùÑ 1 Ï∞®ÏõêÏúºÎ°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0ad9094be8eea9eed0b8caa7aaa709dd8a78a556" translate="yes" xml:space="preserve">
          <source>Return a copy of the array data as a (nested) Python list. Data items are converted to the nearest compatible builtin Python type, via the &lt;a href=&quot;numpy.ndarray.item#numpy.ndarray.item&quot;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Î∞∞Ïó¥ Îç∞Ïù¥ÌÑ∞Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ (Ï§ëÏ≤© Îêú) ÌååÏù¥Ïç¨ Î™©Î°ùÏúºÎ°ú Î∞òÌôòÌï©ÎãàÎã§. Îç∞Ïù¥ÌÑ∞ ÏïÑÏù¥ÌÖúÏùÄ &lt;a href=&quot;numpy.ndarray.item#numpy.ndarray.item&quot;&gt; &lt;code&gt;item&lt;/code&gt; &lt;/a&gt; Ìï®Ïàò Î•º ÌÜµÌï¥ Í∞ÄÏû• Í∞ÄÍπåÏö¥ Ìò∏Ìôò Í∞ÄÎä•Ìïú ÎÇ¥Ïû• ÌååÏù¥Ïç¨ ÌÉÄÏûÖÏúºÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="b980439b8813bd7e38e164ed9f2e0c99f8274be6" translate="yes" xml:space="preserve">
          <source>Return a copy of the array.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="df8bbe6743ef8941b2ffe79a35b3a694572a1ef4" translate="yes" xml:space="preserve">
          <source>Return a copy.</source>
          <target state="translated">ÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="4acbc21966cb7a2646dcaa4b438f4b9a27e30965" translate="yes" xml:space="preserve">
          <source>Return a data-type object from an array-scalar object. No checking is done to be sure that &lt;em&gt;scalar&lt;/em&gt; is an array scalar. If no suitable data-type can be determined, then a data-type of &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; is returned by default.</source>
          <target state="translated">Î∞∞Ïó¥ Ïä§ÏπºÎùº Í∞ùÏ≤¥ÏóêÏÑú Îç∞Ïù¥ÌÑ∞ Ïú†Ìòï Í∞ùÏ≤¥Î•º Î∞òÌôòÌï©ÎãàÎã§. &lt;em&gt;Ïä§ÏπºÎùº&lt;/em&gt; Í∞Ä Î∞∞Ïó¥ Ïä§ÏπºÎùº Ïù∏ÏßÄ ÌôïÏù∏ÌïòÍ∏∞ÏúÑÌïú Ï†êÍ≤ÄÏùÄ ÏàòÌñâÎêòÏßÄ ÏïäÏäµÎãàÎã§ . Ï†ÅÌï©Ìïú Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏùÑ ÌåêÎ≥Ñ Ìï† ÏàòÏóÜÎäî Í≤ΩÏö∞ &lt;a href=&quot;c-api.dtype#c.NPY_OBJECT&quot;&gt; &lt;code&gt;NPY_OBJECT&lt;/code&gt; &lt;/a&gt; Ïùò Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏù¥ Í∏∞Î≥∏Ï†Å ÏúºÎ°ú Î¶¨ÌÑ¥Îê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f3c921ed54d0f1033ad99b40f500e67b85c791e6" translate="yes" xml:space="preserve">
          <source>Return a data-type object from an array-scalar object. No checking is done to be sure that &lt;em&gt;scalar&lt;/em&gt; is an array scalar. If no suitable data-type can be determined, then a data-type of &lt;a href=&quot;dtype#c.NPY_OBJECT&quot;&gt;&lt;code&gt;NPY_OBJECT&lt;/code&gt;&lt;/a&gt; is returned by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd50dfbb3184486913583c1c389ba169493af8a" translate="yes" xml:space="preserve">
          <source>Return a derivative of this polynomial.</source>
          <target state="translated">Ïù¥ Îã§Ìï≠ÏãùÏùò ÎèÑÌï®ÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d5aea1a7b00cc07d1e68b875078581401387e6dc" translate="yes" xml:space="preserve">
          <source>Return a description for the given data type code.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞ ÌÉÄÏûÖ ÏΩîÎìúÏóê ÎåÄÌïú ÏÑ§Î™ÖÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="6117a29a298384179c86a605d9141ecafb1e0fd5" translate="yes" xml:space="preserve">
          <source>Return a diagonal, &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt;&lt;code&gt;numpy.diag&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ÎåÄÍ∞ÅÏÑ† &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt; &lt;code&gt;numpy.diag&lt;/code&gt; Î•º&lt;/a&gt; Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="adde3b917fd9c1390d394a53053e18ebd28924e5" translate="yes" xml:space="preserve">
          <source>Return a dictionary compatible with the keyword arguments of distutils setup function.</source>
          <target state="translated">distutils ÏÑ§Ï†ï Ìï®ÏàòÏùò ÌÇ§ÏõåÎìú Ïù∏ÏàòÏôÄ Ìò∏ÌôòÎêòÎäî ÏÇ¨Ï†ÑÏùÑ Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="88749f378ab59c1c779adb2ce5fc812a248de10a" translate="yes" xml:space="preserve">
          <source>Return a domain suitable for given abscissae.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Í∞ÄÎ°ú Ï¢åÌëúÏóê Ï†ÅÌï©Ìïú ÎèÑÎ©îÏù∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ec9b3f3ddec09d4e9ab3746bc0635f9681a4420a" translate="yes" xml:space="preserve">
          <source>Return a flat iterator over an array.</source>
          <target state="translated">Î∞∞Ïó¥Ïóê Ìé∏ÌèâÌïú Î∞òÎ≥µÏûêÎ•º ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="95b5368028869f26406aac8d009ad5ad9272f8f3" translate="yes" xml:space="preserve">
          <source>Return a flat iterator, or set a flattened version of self to value.</source>
          <target state="translated">ÌîåÎû´ Î∞òÎ≥µÏûêÎ•º Î∞òÌôòÌïòÍ±∞ÎÇò ÌîåÎû´ Ìôî Îêú Î≤ÑÏ†ÑÏùò selfÎ•º Í∞íÏúºÎ°ú ÏÑ§Ï†ïÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="3c92497175e0afbe05534b4dc205f173e44dcae6" translate="yes" xml:space="preserve">
          <source>Return a flattened array.</source>
          <target state="translated">ÌèâÌÉÑÌôî Îêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="dfef0460a1c33d4ce0b30bb4d74507ce7b18060b" translate="yes" xml:space="preserve">
          <source>Return a flattened copy of the matrix.</source>
          <target state="translated">ÌèâÌÉÑÌôî Îêú ÌñâÎ†¨Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4f0c08169386efecd6dbb5c99513b8608e8ee355" translate="yes" xml:space="preserve">
          <source>Return a flattened matrix.</source>
          <target state="translated">ÌèâÌÉÑÌôî Îêú ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="775091a441a9fe6c509e6eac8914147738ae0ebd" translate="yes" xml:space="preserve">
          <source>Return a full array with the same shape and type as a given array.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î∞∞Ïó¥Í≥º Î™®ÏñëÍ≥º Ïú†ÌòïÏù¥ Í∞ôÏùÄ Ï†ÑÏ≤¥ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="94a89b43bf21a827410094352cafcbd70b7b093d" translate="yes" xml:space="preserve">
          <source>Return a masked array with elements from &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt;, depending on condition.</source>
          <target state="translated">Ï°∞Í±¥Ïóê Îî∞Îùº &lt;code&gt;x&lt;/code&gt; ÎòêÎäî &lt;code&gt;y&lt;/code&gt; Ïùò ÏöîÏÜåÍ∞Ä Ìè¨Ìï® Îêú ÎßàÏä§ÌÅ¨ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="e9c3441a078f53e98541ad04f4f000bc26e30fb2" translate="yes" xml:space="preserve">
          <source>Return a matrix of given shape and type, filled with ones.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î™®ÏñëÍ≥º ÌÉÄÏûÖÏúºÎ°ú Ï±ÑÏõåÏßÑ ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3215bbd81fea624d6a34b40bd33eda825ba5a0ec" translate="yes" xml:space="preserve">
          <source>Return a matrix of given shape and type, filled with zeros.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î™®ÏñëÍ≥º Ïú†ÌòïÏùò ÌñâÎ†¨ÏùÑ 0ÏúºÎ°ú Ï±Ñ ÏõÅÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1939220966d050fe46ef32a5756b8c3e9b93fe43" translate="yes" xml:space="preserve">
          <source>Return a matrix of ones.</source>
          <target state="translated">1Ïùò ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="69829526a35cf00c4aab1bc57f23d18bda709816" translate="yes" xml:space="preserve">
          <source>Return a matrix of random values with given shape.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Î™®ÏñëÏùò ÏûÑÏùòÏùò Í∞íÏúºÎ°ú Íµ¨ÏÑ±Îêú ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ffa52769fade88f165e1e6b19c6fefe4b078b4e1" translate="yes" xml:space="preserve">
          <source>Return a matrix with ones on the diagonal and zeros elsewhere.</source>
          <target state="translated">ÎåÄÍ∞ÅÏÑ†Ïóê 1Ïù¥ ÏûàÍ≥† Îã§Î•∏ Í≥≥Ïóê 0Ïù¥ÏûàÎäî ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2ec9f1c6f41ab360a84892cc5eb8e1bfb3a26629" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; with a different byte order.</source>
          <target state="translated">Î∞îÏù¥Ìä∏ ÏàúÏÑúÍ∞Ä Îã§Î•∏ ÏÉàÎ°úÏö¥ &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="b2c7f217c6b5aa8cc331a8f4762d6fdecd8612c1" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;numpy.ma.masktype.dtype#numpy.ma.MaskType.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; with a different byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e308003e0daa1b669914ea3640892334366132e" translate="yes" xml:space="preserve">
          <source>Return a new array of given shape and type, filled with &lt;code&gt;fill_value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fill_value&lt;/code&gt; Î°ú Ï±ÑÏõåÏßÑ ÏßÄÏ†ïÎêú Î™®ÏñëÍ≥º Ïú†ÌòïÏùò ÏÉà Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="3e6e5f2e8abf7154aa290d36d300ec998dd78ac5" translate="yes" xml:space="preserve">
          <source>Return a new array of given shape and type, filled with ones.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î™®ÏñëÍ≥º Ïú†ÌòïÏúºÎ°ú Ï±ÑÏõåÏßÑ ÏÉàÎ°úÏö¥ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a8e2632cca8d1d734350311ac3c7c0fdbb818975" translate="yes" xml:space="preserve">
          <source>Return a new array of given shape and type, filled with zeros.</source>
          <target state="translated">0ÏúºÎ°ú Ï±ÑÏõåÏßÑ ÏßÄÏ†ïÎêú Î™®ÏñëÍ≥º Ïú†ÌòïÏùò ÏÉà Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="14f023e998d4498716e267f981d56b70c1849604" translate="yes" xml:space="preserve">
          <source>Return a new array of given shape and type, without initializing entries.</source>
          <target state="translated">Ìï≠Î™©ÏùÑ Ï¥àÍ∏∞ÌôîÌïòÏßÄ ÏïäÍ≥† ÏßÄÏ†ïÎêú Î™®ÏñëÍ≥º Ïú†ÌòïÏùò ÏÉà Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1ec022809e1e8df1391835bc6104b62ff64b0e4a" translate="yes" xml:space="preserve">
          <source>Return a new array of given shape filled with value.</source>
          <target state="translated">Í∞íÏúºÎ°ú Ï±ÑÏõåÏßÑ ÏßÄÏ†ïÎêú Î™®ÏñëÏùò ÏÉà Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7889ee95d708e619f9f136620743f75253306560" translate="yes" xml:space="preserve">
          <source>Return a new array of the &lt;em&gt;type&lt;/em&gt; specified, casting the elements of &lt;em&gt;arr&lt;/em&gt; as appropriate. The fortran argument specifies the ordering of the output array.</source>
          <target state="translated">ÏßÄÏ†ïÎêú &lt;em&gt;ÌòïÌÉú&lt;/em&gt; Ïùò ÏÉàÎ°úÏö¥ Î∞∞Ïó¥ÏùÑ ÎèåÎ†§, &lt;em&gt;arr&lt;/em&gt; ÏöîÏÜå Î•º Ï†ÅÏ†àÌïòÍ≤å Ï∫êÏä§Ìä∏Ìï©ÎãàÎã§ . fortran Ïù∏ÏàòÎäî Ï∂úÎ†• Î∞∞Ïó¥Ïùò ÏàúÏÑúÎ•º ÏßÄÏ†ïÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="70e7adce468f032b241e6f3f4d863e7cc0a9aea6" translate="yes" xml:space="preserve">
          <source>Return a new array setting values to one.</source>
          <target state="translated">ÏÉàÎ°úÏö¥ Î∞∞Ïó¥ ÏÑ§Ï†ï Í∞íÏùÑ 1Î°ú ÎêòÎèåÎ¶ΩÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4ef2024f4e382c1f0d34374cb0a551fe920f2f40" translate="yes" xml:space="preserve">
          <source>Return a new array setting values to zero.</source>
          <target state="translated">ÏÉà Î∞∞Ïó¥ ÏÑ§Ï†ï Í∞íÏùÑ 0ÏúºÎ°ú ÎêòÎèåÎ¶ΩÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="70e3f2c91249481b5bea36fc686d64fa38f051c1" translate="yes" xml:space="preserve">
          <source>Return a new array with fields in &lt;code&gt;drop_names&lt;/code&gt; dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0a6cb3468a356aea15ba59cf8a26ba7feb2fde" translate="yes" xml:space="preserve">
          <source>Return a new array with shape of input filled with value.</source>
          <target state="translated">ÏûÖÎ†• Í∞íÏù¥ Í∞íÏúºÎ°ú Ï±ÑÏõåÏßÑ ÏÉà Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e58bf55dd74db8cdb131211206ed655cd79c5312" translate="yes" xml:space="preserve">
          <source>Return a new array with sub-arrays along an axis deleted.</source>
          <target state="translated">Ï∂ïÏùÑ Îî∞Îùº ÌïòÏúÑ Î∞∞Ïó¥Ïù¥ÏûàÎäî ÏÉà Î∞∞Ïó¥ÏùÑ ÏÇ≠Ï†úÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="6283c52c5dd7532b6acc7c4858235c6c9dcf2f1f" translate="yes" xml:space="preserve">
          <source>Return a new array with sub-arrays along an axis deleted. For a one dimensional array, this returns those entries not returned by &lt;code&gt;arr[obj]&lt;/code&gt;.</source>
          <target state="translated">Ï∂ïÏùÑ Îî∞Îùº ÌïòÏúÑ Î∞∞Ïó¥Ïù¥ÏûàÎäî ÏÉà Î∞∞Ïó¥ÏùÑ ÏÇ≠Ï†úÌï©ÎãàÎã§. 1 Ï∞®Ïõê Î∞∞Ïó¥Ïùò Í≤ΩÏö∞ &lt;code&gt;arr[obj]&lt;/code&gt; Î∞òÌôòÌïòÏßÄ ÏïäÏùÄ Ìï≠Î™©ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="f24c92c86cceb929ca5a57450467b3018e9ca6d2" translate="yes" xml:space="preserve">
          <source>Return a new array with the same shape and type as a given array.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î∞∞Ïó¥Í≥º Î™®ÏñëÍ≥º Ïú†ÌòïÏù¥ Í∞ôÏùÄ ÏÉà Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="888468a67b158752120bf7aad0907d225286b96f" translate="yes" xml:space="preserve">
          <source>Return a new array with the specified shape.</source>
          <target state="translated">ÏßÄÏ†ïÎêú ÌòïÌÉúÏùò ÏÉàÎ°úÏö¥ Î∞∞Ïó¥ÏùÑ ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7a2bdb72b5ea4cc88bd3af8bed8c594a3e8ad281" translate="yes" xml:space="preserve">
          <source>Return a new data-type object copied from &lt;em&gt;obj&lt;/em&gt; (the fields reference is just updated so that the new object points to the same fields dictionary if any).</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt; ÏóêÏÑú Î≥µÏÇ¨ Ìïú ÏÉà Îç∞Ïù¥ÌÑ∞ ÌòïÏãù Í∞úÏ≤¥Î•º Î∞òÌôòÌï©ÎãàÎã§ (ÏÉà Í∞úÏ≤¥Í∞ÄÏûàÎäî Í≤ΩÏö∞ ÎèôÏùºÌïú Í∞úÏ≤¥ ÏÇ¨Ï†ÑÏùÑ Í∞ÄÎ¶¨ ÌÇ§ÎèÑÎ°ù ÌïÑÎìú Ï∞∏Ï°∞Í∞Ä ÏóÖÎç∞Ïù¥Ìä∏ Îê®).</target>
        </trans-unit>
        <trans-unit id="d00c4497cb20249180f5cc002a7f870062fa7d9c" translate="yes" xml:space="preserve">
          <source>Return a new dtype with a different byte order.</source>
          <target state="translated">Î∞îÏù¥Ìä∏ ÏàúÏÑúÍ∞Ä Îã§Î•∏ ÏÉàÎ°úÏö¥ dtypeÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="99f0b2192ea788359b82b9940bfc8ce53ba36765" translate="yes" xml:space="preserve">
          <source>Return a new masked array with the specified size and shape.</source>
          <target state="translated">ÏßÄÏ†ïÎêú ÌÅ¨Í∏∞ÏôÄ Î™®ÏñëÏùÑ Í∞ÄÏßÑ ÏÉàÎ°úÏö¥ ÎßàÏä§ÌÅ¨ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8b97c7cdd0c52df929f85c56c9008ae403f5119c" translate="yes" xml:space="preserve">
          <source>Return a new matrix of given shape and type, without initializing entries.</source>
          <target state="translated">Ìï≠Î™©ÏùÑ Ï¥àÍ∏∞ÌôîÌïòÏßÄ ÏïäÍ≥† ÏßÄÏ†ïÎêú Î™®ÏñëÍ≥º Ïú†ÌòïÏùò ÏÉà ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a4a5e1c9ff27f882a4c11f29f7940f25047ce131" translate="yes" xml:space="preserve">
          <source>Return a new uninitialized array.</source>
          <target state="translated">Ï¥àÍ∏∞ÌôîÎêòÏßÄ ÏïäÏùÄ ÏÉàÎ°úÏö¥ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="145459239b266df133889e07ea0d4280854c1000" translate="yes" xml:space="preserve">
          <source>Return a parititioned copy of an array.</source>
          <target state="translated">Ï†ïÎ†¨ Îêú Î∞∞Ïó¥Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a065725c5133d0cbe64183a0ffd5cb73c5839c49" translate="yes" xml:space="preserve">
          <source>Return a partitioned copy of an array.</source>
          <target state="translated">Î∂ÑÌï† Îêú Î∞∞Ïó¥Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d2c8d86e1b061dfb280c405f0466ad8e650740b7" translate="yes" xml:space="preserve">
          <source>Return a path to a temporary directory where temporary files should be placed.</source>
          <target state="translated">ÏûÑÏãú ÌååÏùºÏùÑ Ï†ÄÏû•Ìï¥ÏïºÌïòÎäî ÏûÑÏãú ÎîîÎ†âÌÜ†Î¶¨Ïùò Í≤ΩÎ°úÎ•º Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="a1f80ab216d72e2c78c4fa0b6bd848f067d2fc48" translate="yes" xml:space="preserve">
          <source>Return a pointer to the data of the ndarray, &lt;em&gt;aobj&lt;/em&gt;, at the N-dimensional index given by the c-array, &lt;em&gt;ind&lt;/em&gt;, (which must be at least &lt;em&gt;aobj&lt;/em&gt; -&amp;gt;nd in size). You may want to typecast the returned pointer to the data type of the ndarray.</source>
          <target state="translated">ndarrayÏùò Îç∞Ïù¥ÌÑ∞Ïóê ÎåÄÌïú Ìè¨Ïù∏ÌÑ∞Î•º Î¶¨ÌÑ¥ &lt;em&gt;aobj&lt;/em&gt; ÏÉÅÍ∏∞ C Ïñ¥Î†àÏù¥Ïóê ÏùòÌï¥ Ï£ºÏñ¥ÏßÑ N Ï∞®Ïõê Ïù∏Îç±Ïä§, &lt;em&gt;IND&lt;/em&gt; (Ìï† Ïàò ÏûàÏñ¥Ïïº Ï†ÅÏñ¥ÎèÑ &lt;em&gt;aobj&lt;/em&gt; -&amp;gt; ND ÌÅ¨Í∏∞). Î¶¨ÌÑ¥ Îêú Ìè¨Ïù∏ÌÑ∞Î•º ndarrayÏùò Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏóê ÎåÄÌï¥ Ïú†Ìòï Ï∫êÏä§Ìä∏ ‚Äã‚ÄãÌï† Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2b7f61b11971c1ad8e737004571a4f0870667828" translate="yes" xml:space="preserve">
          <source>Return a possibly reshaped matrix.</source>
          <target state="translated">Ïû¨ ÌòïÏÑ±Îêú ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0ff40c73d765733f44f99e1b3a2d920d2b654808" translate="yes" xml:space="preserve">
          <source>Return a random matrix with data from the &amp;ldquo;standard normal&amp;rdquo; distribution.</source>
          <target state="translated">&quot;ÌëúÏ§Ä Ï†ïÍ∑ú&quot;Î∂ÑÌè¨Ïùò Îç∞Ïù¥ÌÑ∞Í∞Ä Ìè¨Ìï® Îêú ÎûúÎç§ ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5ae7033f1a0e744826d269ec0ba2f40bd5fd3daa" translate="yes" xml:space="preserve">
          <source>Return a sample (or samples) from the &amp;ldquo;standard normal&amp;rdquo; distribution.</source>
          <target state="translated">&quot;ÌëúÏ§Ä Ï†ïÍ∑ú&quot;Î∂ÑÌè¨ÏóêÏÑú ÌëúÎ≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d13f9f203f3c17efcbcef4c841e8c9704bc7ebca" translate="yes" xml:space="preserve">
          <source>Return a scalar type which is common to the input arrays.</source>
          <target state="translated">ÏûÖÎ†• Î∞∞Ïó¥Ïóê Í≥µÌÜµÏ†Å Ïù∏ Ïä§ÏπºÎùº ÌòïÏãùÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a63a1b287ca4888daabd9a1edcfb9f1e609e071b" translate="yes" xml:space="preserve">
          <source>Return a series instance of that is the derivative of the current series.</source>
          <target state="translated">ÌòÑÏû¨ ÏãúÎ¶¨Ï¶àÏùò ÌååÏÉùÎ¨º Ïù∏ ÏãúÎ¶¨Ï¶à Ïù∏Ïä§ÌÑ¥Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3be3bab3c7ce2a4fdde876c5655404aa0047a549" translate="yes" xml:space="preserve">
          <source>Return a series instance that is the definite integral of the current series.</source>
          <target state="translated">ÌòÑÏû¨ Í≥ÑÏó¥Ïùò Î™ÖÌôïÌïú Ï†ïÏàòÏù∏ Í≥ÑÏó¥ Ïù∏Ïä§ÌÑ¥Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e9b225efd4dfce58c9a38bffe5147a1a4e3c84ce" translate="yes" xml:space="preserve">
          <source>Return a series instance that is the least squares fit to the data &lt;code&gt;y&lt;/code&gt; sampled at &lt;code&gt;x&lt;/code&gt;. The domain of the returned instance can be specified and this will often result in a superior fit with less chance of ill conditioning.</source>
          <target state="translated">ÏµúÏÜå Ï†úÍ≥±Ïù¥ Îç∞Ïù¥ÌÑ∞Ïóê Ï†ÅÌï© ÏùºÎ†® Ïù∏Ïä§ÌÑ¥Ïä§ ÎèåÏïÑ &lt;code&gt;y&lt;/code&gt; ÏÉòÌîåÎßÅ &lt;code&gt;x&lt;/code&gt; . Î¶¨ÌÑ¥ Îêú Ïù∏Ïä§ÌÑ¥Ïä§Ïùò ÎèÑÎ©îÏù∏ÏùÑ ÏßÄÏ†ïÌï† Ïàò ÏûàÏúºÎ©∞, Ïù¥Îäî Ï¢ÖÏ¢Ö Ïª®ÎîîÏÖîÎãù Í∞ÄÎä•ÏÑ±Ïù¥ Ï†ÅÏùÄ Ïö∞ÏàòÌïú ÌîºÌåÖÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="830d7f320c53ee48889eed091d514fe0214f98ef" translate="yes" xml:space="preserve">
          <source>Return a sorted copy of an array.</source>
          <target state="translated">Ï†ïÎ†¨ Îêú Î∞∞Ïó¥Ïùò Î≥µÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="16f7503abc87317e158f45ed8dfc16a2f629b87a" translate="yes" xml:space="preserve">
          <source>Return a sorted copy of the masked array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab607a136d6ba12da14d48cc8dc2c6b1289be81" translate="yes" xml:space="preserve">
          <source>Return a sparse representation of the grid instead of a dense representation. Default is False.</source>
          <target state="translated">Î∞ÄÏßëÎêú ÌëúÌòÑ ÎåÄÏã† Í≤©ÏûêÏùò Ìù¨ÏÜå ÌëúÌòÑÏùÑ Î∞òÌôòÌï©ÎãàÎã§. Í∏∞Î≥∏Í∞íÏùÄ Í±∞ÏßìÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="05923109da0a7ddb7038e93693ea541efa00c398" translate="yes" xml:space="preserve">
          <source>Return a string corresponding to the pickling of a masked array.</source>
          <target state="translated">ÎßàÏä§ÌÅ¨ Î∞∞Ïó¥Ïùò ÏÇ∞ ÏÑ∏Ï≤ôÏóê Ìï¥ÎãπÌïòÎäî Î¨∏ÏûêÏó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="74dcb41a777b2df955ae96f395f746a7b8f2c2c3" translate="yes" xml:space="preserve">
          <source>Return a string describing the type corresponding to the NumPy &lt;code&gt;typecode&lt;/code&gt;.</source>
          <target state="translated">NumPy ÌòïÏãù &lt;code&gt;typecode&lt;/code&gt; Ìï¥ÎãπÌïòÎäî ÌòïÏãùÏùÑ ÏÑ§Î™ÖÌïòÎäî Î¨∏ÏûêÏó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="e0619e1062515cc88487d581e0a56d9acfa92127" translate="yes" xml:space="preserve">
          <source>Return a string describing the type of &lt;code&gt;py_obj&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;py_obj&lt;/code&gt; Ïú†ÌòïÏùÑ ÏÑ§Î™ÖÌïòÎäî Î¨∏ÏûêÏó¥ÏùÑ Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§ .</target>
        </trans-unit>
        <trans-unit id="170f36e7a1533323378ac01975fc88b830ac9237" translate="yes" xml:space="preserve">
          <source>Return a string representation of a number in the given base system.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Í∏∞Î≥∏ ÏãúÏä§ÌÖúÏóêÏÑú Ïà´ÏûêÏùò Î¨∏ÏûêÏó¥ ÌëúÌòÑÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="80fd41eb410f441568a30c3fa1655d8162a3d9ec" translate="yes" xml:space="preserve">
          <source>Return a string representation of an array.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò Î¨∏ÏûêÏó¥ ÌëúÌòÑÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e8610c5f439d32a176e13634197d79c0564315a7" translate="yes" xml:space="preserve">
          <source>Return a string representation of the data in an array.</source>
          <target state="translated">Î∞∞Ïó¥ÏóêÏÑú Îç∞Ïù¥ÌÑ∞Ïùò Î¨∏ÏûêÏó¥ ÌëúÌòÑÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="df00559c5c5cc5cc5fd466d621ac52faa8be2fea" translate="yes" xml:space="preserve">
          <source>Return a string which is the concatenation of the strings in the sequence &lt;code&gt;seq&lt;/code&gt;.</source>
          <target state="translated">ÏãúÌÄÄÏä§ &lt;code&gt;seq&lt;/code&gt; ÏóêÏÑú Î¨∏ÏûêÏó¥Ïù¥ Ïó∞Í≤∞Îêú Î¨∏ÏûêÏó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="879fbd3d4645c43c568195d4cb56b98d1c438c1b" translate="yes" xml:space="preserve">
          <source>Return a tuple representing the internal state of the generator.</source>
          <target state="translated">ÏÉùÏÑ±Í∏∞Ïùò ÎÇ¥Î∂Ä ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌäúÌîåÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="181d2af75ba3f44bd05085994fdbae10de3fb98d" translate="yes" xml:space="preserve">
          <source>Return a version string of the current package or None if the version information could not be detected.</source>
          <target state="translated">ÌòÑÏû¨ Ìå®ÌÇ§ÏßÄÏùò Î≤ÑÏ†Ñ Î¨∏ÏûêÏó¥ÏùÑ Î∞òÌôòÌïòÍ±∞ÎÇò Î≤ÑÏ†Ñ Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏúºÎ©¥ ÏóÜÏùåÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="294f14aa7eac377922122fd16848cf7d655d6fa0" translate="yes" xml:space="preserve">
          <source>Return a view of the MaskedArray data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3660600aef853f94a98106c6764985ecaf0527d9" translate="yes" xml:space="preserve">
          <source>Return a view of the array with &lt;code&gt;axis1&lt;/code&gt; and &lt;code&gt;axis2&lt;/code&gt; interchanged.</source>
          <target state="translated">&lt;code&gt;axis1&lt;/code&gt; Í≥º &lt;code&gt;axis2&lt;/code&gt; Í∞Ä ÍµêÌôò Îêú Î∞∞Ïó¥Ïùò Î∑∞Î•º Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="fc073acf13e62fa61ea36092d502a1616860a186" translate="yes" xml:space="preserve">
          <source>Return absolute path of file in the DataSource directory.</source>
          <target state="translated">DataSource ÎîîÎ†âÌÜ†Î¶¨Ïóê ÌååÏùºÏùò Ï†àÎåÄ Í≤ΩÎ°úÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="38e7ff73ee52b8b861dd79f5b9cb1eb541060c75" translate="yes" xml:space="preserve">
          <source>Return all the non-masked data as a 1-D array.</source>
          <target state="translated">ÎßàÏä§ÌÅ¨ÎêòÏßÄ ÏïäÏùÄ Î™®Îì† Îç∞Ïù¥ÌÑ∞Î•º 1 Ï∞®Ïõê Î∞∞Ïó¥Î°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f6f767ff856d792720f8ab5dc126531696bc9c21" translate="yes" xml:space="preserve">
          <source>Return an aligned and in native-byteorder array from any nested sequence or array-interface exporting object, op, of a type given by the enumerated typenum. The minimum number of dimensions the array can have is given by min_depth while the maximum is max_depth. This is equivalent to a call to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; with requirements set to BEHAVED.</source>
          <target state="translated">Ïó¥Í±∞ Îêú typenumÏóê ÏùòÌï¥ ÏßÄÏ†ïÎêú Ïú†ÌòïÏùò Ï§ëÏ≤© ÏãúÌÄÄÏä§ ÎòêÎäî Î∞∞Ïó¥ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ ÎÇ¥Î≥¥ÎÇ¥Í∏∞ Í∞ùÏ≤¥ opÏóêÏÑú Ï†ïÎ†¨ Îêú Í∏∞Î≥∏ Î∞îÏù¥Ìä∏ ÏàúÏÑú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. Î∞∞Ïó¥Ïù¥ Í∞ÄÏßà ÏàòÏûàÎäî ÏµúÏÜå Ï∞®Ïõê ÏàòÎäî min_depthÎ°ú Ï†úÍ≥µÎêòÎäî Î∞òÎ©¥ ÏµúÎåÄ Í∞íÏùÄ max_depthÏûÖÎãàÎã§. ÏöîÍµ¨ ÏÇ¨Ìï≠ Ïù¥ &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; Î°ú ÏÑ§Ï†ïÎêú PyArray_FromAny Î•º Ìò∏Ï∂úÌïòÎäî Í≤ÉÍ≥º Í∞ôÏäµÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="c66279e2d53118bd68e050fae27493d00d8d8e96" translate="yes" xml:space="preserve">
          <source>Return an antiderivative (indefinite integral) of a polynomial.</source>
          <target state="translated">Îã§Ìï≠ÏãùÏùò Ïó≠ Ï∂îÏ†Å (Î¨¥Ìïú Î∂Ñ)ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="cbfc9e1a86b3fc8a3522f688b2f10859a2eee985" translate="yes" xml:space="preserve">
          <source>Return an antiderivative (indefinite integral) of this polynomial.</source>
          <target state="translated">Ïù¥ Îã§Ìï≠ÏãùÏùò Ïó≠ Ï∂îÏ†Å (Î¨¥Ìïú Î∂Ñ)ÏùÑ ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5117c8b82d7c28967c4a7bd7f57699969ebb235a" translate="yes" xml:space="preserve">
          <source>Return an array (ndim &amp;gt;= 1) laid out in Fortran order in memory.</source>
          <target state="translated">Î©îÎ™®Î¶¨ÏóêÏÑú Ìè¨Ìä∏ÎûÄ ÏàúÏÑúÎ°ú Î∞∞Ïó¥ Îêú Î∞∞Ïó¥ (ndim&amp;gt; = 1)ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ef4afbdf67931d9476f269bff0e3f090d3a9d2c8" translate="yes" xml:space="preserve">
          <source>Return an array converted to a float type.</source>
          <target state="translated">float ÌòïÏãùÏúºÎ°ú Î≥ÄÌôò Îêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d017e1d1615664dabeba2d574ee7b74d5acc9b20" translate="yes" xml:space="preserve">
          <source>Return an array copy of the given object.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Í∞ùÏ≤¥Ïùò Î∞∞Ïó¥ ÏÇ¨Î≥∏ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="170e5dca8042aeabefb47af0e960f0b599a7de9a" translate="yes" xml:space="preserve">
          <source>Return an array drawn from elements in choicelist, depending on conditions.</source>
          <target state="translated">Ï°∞Í±¥Ïóê Îî∞Îùº ÏÑ†ÌÉù Î™©Î°ùÏùò ÏöîÏÜåÏóêÏÑú Í∞ÄÏ†∏Ïò® Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0af786f00e24a9329539eb423a718fa8f5fc3469" translate="yes" xml:space="preserve">
          <source>Return an array formed from the elements of &lt;code&gt;a&lt;/code&gt; at the given indices.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ ÏÉâÏù∏ÏóêÏÑú &lt;code&gt;a&lt;/code&gt; Ïùò ÏöîÏÜåÎ°ú Íµ¨ÏÑ±Îêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="f0d5e16ee6e20869b410e5b872f9359fdc357cdd" translate="yes" xml:space="preserve">
          <source>Return an array iterator object from the array, &lt;em&gt;arr&lt;/em&gt;. This is equivalent to &lt;em&gt;arr&lt;/em&gt;. &lt;strong&gt;flat&lt;/strong&gt;. The array iterator object makes it easy to loop over an N-dimensional non-contiguous array in C-style contiguous fashion.</source>
          <target state="translated">Î∞∞Ïó¥ &lt;em&gt;arr&lt;/em&gt; ÏóêÏÑú Î∞∞Ïó¥ Î∞òÎ≥µÏûê Í∞ùÏ≤¥Î•º Î∞òÌôòÌï©ÎãàÎã§ . Ïù¥Í≤ÉÏùÄ &lt;em&gt;arr&lt;/em&gt; Í≥º Í∞ôÏäµÎãàÎã§ . &lt;strong&gt;ÌîåÎû´&lt;/strong&gt; . Î∞∞Ïó¥ Î∞òÎ≥µÏûê Í∞ùÏ≤¥Î•º ÏÇ¨Ïö©ÌïòÎ©¥ C Ïä§ÌÉÄÏùºÏùò Ïó∞ÏÜçÏ†ÅÏù∏ Î∞©ÏãùÏúºÎ°ú N Ï∞®Ïõê ÎπÑ Ïó∞ÏÜç Î∞∞Ïó¥ÏùÑ ÏâΩÍ≤å Î∞òÎ≥µ Ìï† Ïàò ÏûàÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="77506242fd4ae97ca7ccbff9f520fe9fbb4835f1" translate="yes" xml:space="preserve">
          <source>Return an array iterator that is broadcast to iterate as an array of the shape provided by &lt;em&gt;dimensions&lt;/em&gt; and &lt;em&gt;nd&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;dimension&lt;/em&gt; Î∞è &lt;em&gt;ndÍ∞Ä&lt;/em&gt; Ï†úÍ≥µÌïòÎäî ÌòïÌÉúÏùò Î∞∞Ïó¥Î°ú Î∞òÎ≥µÌïòÍ∏∞ ÏúÑÌï¥ Î∏åÎ°úÎìú Ï∫êÏä§ÌåÖÎêòÎäî Î∞∞Ïó¥ Î∞òÎ≥µÏûêÎ•º Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="00434db0950175f84a37dd2cb42bb1827e4a4ef1" translate="yes" xml:space="preserve">
          <source>Return an array iterator that will iterate over all axes but the one provided in &lt;em&gt;*axis&lt;/em&gt;. The returned iterator cannot be used with &lt;a href=&quot;#c.PyArray_ITER_GOTO1D&quot;&gt;&lt;code&gt;PyArray_ITER_GOTO1D&lt;/code&gt;&lt;/a&gt;. This iterator could be used to write something similar to what ufuncs do wherein the loop over the largest axis is done by a separate sub-routine. If &lt;em&gt;*axis&lt;/em&gt; is negative then &lt;em&gt;*axis&lt;/em&gt; will be set to the axis having the smallest stride and that axis will be used.</source>
          <target state="translated">&lt;em&gt;* axisÏóê&lt;/em&gt; Ï†úÍ≥µÎêú Ï∂ïÏùÑ Ï†úÏô∏Ìïú Î™®Îì† Ï∂ïÏùÑ Î∞òÎ≥µÌïòÎäî Î∞∞Ïó¥ Î∞òÎ≥µÏûêÎ•º Î∞òÌôòÌï©ÎãàÎã§ . Î¶¨ÌÑ¥ Îêú Î∞òÎ≥µÏûêÎ•º &lt;a href=&quot;#c.PyArray_ITER_GOTO1D&quot;&gt; &lt;code&gt;PyArray_ITER_GOTO1D&lt;/code&gt; &lt;/a&gt; ÏôÄ Ìï®Íªò ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§ . Ïù¥ Î∞òÎ≥µÏûêÎäî Í∞ÄÏû• ÌÅ∞ Ï∂ïÏóê ÎåÄÌïú Î£®ÌîÑÍ∞Ä Î≥ÑÎèÑÏùò ÏÑúÎ∏å Î£®Ìã¥Ïóê ÏùòÌï¥ ÏàòÌñâÎêòÎäî ufuncÏôÄ ÎπÑÏä∑Ìïú Í≤ÉÏùÑ ÏûëÏÑ±ÌïòÎäî Îç∞ ÏÇ¨Ïö©Îê† Ïàò ÏûàÏäµÎãàÎã§. Í≤ΩÏö∞ &lt;em&gt;* Ï∂ïÏù¥&lt;/em&gt; ÎßàÏù¥ÎÑàÏä§ Ïù∏ Îã§Ïùå &lt;em&gt;* Ï∂ïÏù¥&lt;/em&gt; ÏûëÏùÄ Î≥¥Ìè≠ÏùÑ Í∞ñÎäî Ï∂ïÏúºÎ°ú ÏÑ§Ï†ïÎêòÎ©∞, Í∑∏ Ï∂ïÏù¥ ÏÇ¨Ïö©ÎêúÎã§.</target>
        </trans-unit>
        <trans-unit id="8066cd7632ba39c67d1a98283f2a29b24a505220" translate="yes" xml:space="preserve">
          <source>Return an array of ones with shape and type of input.</source>
          <target state="translated">Î™®ÏñëÍ≥º Ïú†ÌòïÏù¥ ÏûÖÎ†• Îêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a1e04cba6b3d0a722a761046137f33e8343a544f" translate="yes" xml:space="preserve">
          <source>Return an array of ones with the same shape and type as a given array.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î∞∞Ïó¥Í≥º Î™®ÏñëÍ≥º Ïú†ÌòïÏù¥ Í∞ôÏùÄ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="6344adc68aba46044eb292608cf8837556104b5a" translate="yes" xml:space="preserve">
          <source>Return an array of zeros with shape and type of input.</source>
          <target state="translated">Î™®ÏñëÍ≥º ÏûÖÎ†• Ïú†ÌòïÏù¥ 0 Ïù∏ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="28d75443385d040d8c8d874ee2340e5551d0c701" translate="yes" xml:space="preserve">
          <source>Return an array of zeros with the same shape and type as a given array.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Î∞∞Ïó¥Í≥º Í∞ôÏùÄ ÌòïÌÉúÏôÄ ÌòïÌÉúÎ•º Í∞ÄÏßÄÎäî Ï†úÎ°úÏùò Î∞∞Ïó¥ÏùÑ ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e2d9ff53081358660342429c958079def9b00591" translate="yes" xml:space="preserve">
          <source>Return an array representing the indices of a grid.</source>
          <target state="translated">Í≤©ÏûêÏùò Ïù∏Îç±Ïä§Î•º ÎÇòÌÉÄÎÇ¥Îäî Î∞∞Ïó¥ÏùÑ ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1dbb54e923e9a6d04f0c7fcaa662d1dd67c5e43a" translate="yes" xml:space="preserve">
          <source>Return an array scalar object of the given enumerated &lt;em&gt;typenum&lt;/em&gt; and &lt;em&gt;itemsize&lt;/em&gt; by &lt;strong&gt;copying&lt;/strong&gt; from memory pointed to by &lt;em&gt;data&lt;/em&gt; . If &lt;em&gt;swap&lt;/em&gt; is nonzero then this function will byteswap the data if appropriate to the data-type because array scalars are always in correct machine-byte order.</source>
          <target state="translated">Î∞∞Ïó¥ Ïä§ÏπºÎùº ÏßÄÏ†ïÎêú Ïó¥Í±∞Ïùò ÎåÄÏÉÅ ÎèåÏïÑ &lt;em&gt;typenum&lt;/em&gt; Î∞è &lt;em&gt;itemsizeÏùÑ&lt;/em&gt; ÌïòÏó¨ &lt;strong&gt;Î≥µÏÇ¨&lt;/strong&gt; Í∞Ä Í∞ÄÎ¶¨ÌÇ§Îäî Î©îÎ™®Î¶¨Î°úÎ∂ÄÌÑ∞ &lt;em&gt;Îç∞Ïù¥ÌÑ∞&lt;/em&gt; . Í≤ΩÏö∞ &lt;em&gt;ÍµêÏ≤¥Í∞Ä&lt;/em&gt; Ï†úÎ°úÍ∞ÄÎêòÎäî Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏóê Ï†ÅÏ†àÌïú Î∞∞Ïó¥Ïù¥ Ï†ïÌôïÌïúÏßÄ Ïä§ÏπºÎùº Î®∏Ïã† Î∞îÏù¥Ìä∏ ÏàúÏÑúÏóê Ìï≠ÏÉÅ ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê Í≤ΩÏö∞,Ïù¥ Í∏∞Îä•ÏùÄ Îç∞Ïù¥ÌÑ∞Î•º byteswap Í≤ÉÏù¥Îã§.</target>
        </trans-unit>
        <trans-unit id="399d4e635ec1adbd5dfbf3230db78e0c12779cd3" translate="yes" xml:space="preserve">
          <source>Return an array scalar object of the type and itemsize indicated by the array object &lt;em&gt;arr&lt;/em&gt; copied from the memory pointed to by &lt;em&gt;data&lt;/em&gt; and swapping if the data in &lt;em&gt;arr&lt;/em&gt; is not in machine byte-order.</source>
          <target state="translated">Ïú†ÌòïÏùò Î∞∞Ïó¥ Ïä§ÏπºÎùº Í∞ùÏ≤¥Î•º Î¶¨ÌÑ¥ÌïòÍ≥† itemsize Î∞∞Ïó¥ Í∞ùÏ≤¥Î°ú ÎÇòÌÉÄÎÇ¥Îäî &lt;em&gt;ÎèÑÏ∞©&lt;/em&gt; Î©îÎ™®Î¶¨Í∞ÄÍ∞Ä Í∞ÄÎ¶¨ÌÇ§Îäî Î≥µÏÇ¨ &lt;em&gt;Îêú Îç∞Ïù¥ÌÑ∞&lt;/em&gt; ÏôÄ ÍµêÌôòÌïòÎäî Í≤ΩÏö∞Ïóê Îç∞Ïù¥ÌÑ∞ &lt;em&gt;ÎèÑÏ∞©Ïù¥&lt;/em&gt; Í∏∞Í≥Ñ Î∞îÏù¥Ìä∏ ÏàúÏÑú ÏïÑÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1f1190f74ad965959fb48a3dc80fe92f2c3f3103" translate="yes" xml:space="preserve">
          <source>Return an array whose values are limited to &lt;code&gt;[min, max]&lt;/code&gt;.</source>
          <target state="translated">Í∞íÏù¥ &lt;code&gt;[min, max]&lt;/code&gt; Î°ú Ï†úÌïúÎêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="bb2154a6a6b19b3b662ec1a206d44e31ac573cf8" translate="yes" xml:space="preserve">
          <source>Return an array whose values are limited to &lt;code&gt;[min, max]&lt;/code&gt;. One of max or min must be given.</source>
          <target state="translated">Í∞íÏù¥ &lt;code&gt;[min, max]&lt;/code&gt; Î°ú Ï†úÌïúÎêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ . ÏµúÎåÄ ÎòêÎäî ÏµúÏÜå Ï§ë ÌïòÎÇòÎ•º Ï†úÍ≥µÌï¥ÏïºÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="86785ec02149d694e5087521991c50fb5ad7ba3b" translate="yes" xml:space="preserve">
          <source>Return an array with the elements converted to lowercase.</source>
          <target state="translated">ÏöîÏÜåÍ∞Ä ÏÜåÎ¨∏ÏûêÎ°ú Î≥ÄÌôò Îêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0a28776d4d2ac4783194393ab802545c72661b7f" translate="yes" xml:space="preserve">
          <source>Return an array with the elements converted to uppercase.</source>
          <target state="translated">ÏöîÏÜåÎ•º ÎåÄÎ¨∏ÏûêÎ°ú Î≥ÄÌôò Ìïú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d9696cce12133fb07b1d5edefab2a3bd33019311" translate="yes" xml:space="preserve">
          <source>Return an array with the elements of &lt;code&gt;a&lt;/code&gt; left-justified in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">ÏöîÏÜåÏùò Î∞∞Ïó¥ÏùÑ Î∞òÌôò Í∏∏Ïù¥Ïùò Î¨∏ÏûêÏó¥ÏóêÏÑú ÏôºÏ™Ω Ï†ïÎ†¨ &lt;code&gt;width&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c23a149ac47d3848455a8aee8eeca7f1196fb3b" translate="yes" xml:space="preserve">
          <source>Return an array with the elements of &lt;code&gt;a&lt;/code&gt; right-justified in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">Ïùò ÏöîÏÜå Î∞∞Ïó¥ ÎèåÏïÑ Í∏∏Ïù¥Ïùò Î¨∏ÏûêÏó¥ Ïò§Î•∏Ï™Ω Ï†ïÎ†¨ &lt;code&gt;width&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84d6531878f0685fceadebe2f43cdb40b13d704c" translate="yes" xml:space="preserve">
          <source>Return an array with the elements of &lt;code&gt;self&lt;/code&gt; converted to lowercase.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; ÏöîÏÜå Í∞Ä ÏÜåÎ¨∏ÏûêÎ°ú Î≥ÄÌôò Îêú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="93cf6418e3495dbc819b81c691cc00f776e49dc6" translate="yes" xml:space="preserve">
          <source>Return an array with the elements of &lt;code&gt;self&lt;/code&gt; converted to uppercase.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; ÏöîÏÜå Î•º ÎåÄÎ¨∏ÏûêÎ°ú Î≥ÄÌôò Ìïú Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="4ecf7d11b05471a8c237ab086fb40fe8490ee8c7" translate="yes" xml:space="preserve">
          <source>Return an array with the elements of &lt;code&gt;self&lt;/code&gt; left-justified in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">length &lt;code&gt;width&lt;/code&gt; Ïùò Î¨∏ÏûêÏó¥ÏóêÏÑú &lt;code&gt;self&lt;/code&gt; ÏôºÏ™Ω Ï†ïÎ†¨ Îêú ÏöîÏÜåÍ∞ÄÏûàÎäî Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="1b5ccddcb7e4de21f973f75aa06355164cc00ded" translate="yes" xml:space="preserve">
          <source>Return an array with the elements of &lt;code&gt;self&lt;/code&gt; right-justified in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">Ïùò ÏöîÏÜåÏôÄ Î∞∞Ïó¥ÏùÑ ÎèåÎ†§ &lt;code&gt;self&lt;/code&gt; Í∏∏Ïù¥Ïùò Î¨∏ÏûêÏó¥ÏùÑ ÎßàÏö∞Ïä§ Ïò§Î•∏Ï™Ω Î≤ÑÌäºÏúºÎ°ú Ï†ïÎãπÌôî &lt;code&gt;width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef32cb089162ebbc8e52b7e2dd930d6fb4a7e4e4" translate="yes" xml:space="preserve">
          <source>Return an empty array with shape and type of input.</source>
          <target state="translated">Î™®ÏñëÍ≥º Ïú†ÌòïÏùò ÏûÖÎ†•ÏùÑ Í∞ÄÏßÑ Îπà Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2e2b4921b83bb1b13bd60e474a88f58755588214" translate="yes" xml:space="preserve">
          <source>Return an empty masked array of the given shape and dtype, where all the data are masked.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Î™®ÏñëÍ≥º dtypeÏùò Îπà ÎßàÏä§ÌÅ¨ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. Î™®Îì† Îç∞Ïù¥ÌÑ∞Í∞Ä ÎßàÏä§ÌÅ¨Îê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e767ab3a7aae5ce7ffe9d2df07fade983f9e9244" translate="yes" xml:space="preserve">
          <source>Return an empty masked array of the same shape and dtype as the array &lt;code&gt;arr&lt;/code&gt;, where all the data are masked.</source>
          <target state="translated">Î™®Îì† Îç∞Ïù¥ÌÑ∞Í∞Ä ÎßàÏä§ÌÇπÎêòÎäî Î∞∞Ïó¥ &lt;code&gt;arr&lt;/code&gt; Í≥º ÎèôÏùºÌïú Î™®Ïñë Î∞è dtypeÏùò Îπà ÎßàÏä§ÌÅ¨ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="5efc0eea9323d8d0449864521b2efa6728ea19b5" translate="yes" xml:space="preserve">
          <source>Return an info dict for a given C library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad0f08f99be9b044f2ed4322537f71b7c843b63" translate="yes" xml:space="preserve">
          <source>Return an iterator yielding pairs of array coordinates and values.</source>
          <target state="translated">Î∞∞Ïó¥ Ï¢åÌëúÏôÄ Í∞í ÏåçÏùÑ ÏÉùÏÑ±ÌïòÎäî Î∞òÎ≥µÏûêÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1770a03d4bbf0e64e099661e56a9c6adc86e15c6" translate="yes" xml:space="preserve">
          <source>Return an ndarray from any Python object, &lt;em&gt;obj&lt;/em&gt;, that can be converted to an array. The number of dimensions in the returned array is determined by the object. The desired data-type of the returned array is provided in &lt;em&gt;typenum&lt;/em&gt; which should be one of the enumerated types. The &lt;em&gt;requirements&lt;/em&gt; for the returned array can be any combination of standard array flags. Each of these arguments is explained in more detail below. You receive a new reference to the array on success. On failure, &lt;code&gt;NULL&lt;/code&gt; is returned and an exception is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233bac229e2854de006ec6e122e69812750540ae" translate="yes" xml:space="preserve">
          <source>Return an ndarray object from a Python object that exposes the &lt;a href=&quot;../arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;../arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method can take 0, or 1 argument &lt;code&gt;([dtype])&lt;/code&gt;. &lt;code&gt;context&lt;/code&gt; is unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c59378e179c2432aba52e141f97ebf90abae57a" translate="yes" xml:space="preserve">
          <source>Return an ndarray object from a Python object that exposes the &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method can take 0, 1, or 2 arguments ([dtype, context]) where &lt;em&gt;context&lt;/em&gt; is used to pass information about where the &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method is being called from (currently only used in ufuncs).</source>
          <target state="translated">&lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; &lt;/a&gt; Î©îÏÜåÎìú Î•º ÎÖ∏Ï∂úÏãúÌÇ§Îäî Python Í∞ùÏ≤¥ÏóêÏÑú ndarray Í∞ùÏ≤¥Î•º Î∞òÌôòÌï©ÎãàÎã§ . &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; Ïùò&lt;/a&gt; Î∞©Î≤ïÏùÄ Ïñ¥Îîî ([DTYPE Ïª®ÌÖçÏä§Ìä∏])Îäî 0, 1 ÎòêÎäî 2 Ïù∏ÏûêÎ•º Ï∑®Ìï† Ïàò &lt;em&gt;ÏΩòÌÖçÏä§Ìä∏&lt;/em&gt; Î•º Where ÎåÄÌïú Ï†ïÎ≥¥ Ï†ÑÎã¨ÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêúÎã§ &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; Ïùò&lt;/a&gt; Î©îÏÜåÎìúÍ∞Ä Ìò∏Ï∂úÎêòÍ≥†ÎêúÎã§ (ÌòÑÏû¨Îäî ufuncsÏóêÏÑú ÏÇ¨Ïö©).</target>
        </trans-unit>
        <trans-unit id="6664aaaa0641f0ccc95d3d4eb54350eccb532a51" translate="yes" xml:space="preserve">
          <source>Return an ndarray of indices that sort the array along the specified axis.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Ï∂ïÏùÑ Îî∞Îùº Î∞∞Ïó¥ÏùÑ Ï†ïÎ†¨ÌïòÎäî Ïù∏Îç±Ïä§Ïùò ndarrayÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="85d17e0398a169a53ba50c2c1b319d33e0140ffa" translate="yes" xml:space="preserve">
          <source>Return an ndarray of indices that sort the array along the specified axis. Masked values are filled beforehand to &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Ï∂ïÏùÑ Îî∞Îùº Î∞∞Ïó¥ÏùÑ Ï†ïÎ†¨ÌïòÎäî Ïù∏Îç±Ïä§Ïùò ndarrayÎ•º Î∞òÌôòÌï©ÎãàÎã§. ÎßàÏä§ÌÅ¨ Îêú Í∞íÏùÄ &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; Ïóê&lt;/a&gt; ÎØ∏Î¶¨ Ï±ÑÏõåÏßëÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="720717e876d997a6d7b9a253503dee11699d2472" translate="yes" xml:space="preserve">
          <source>Return an ndarray of indices that sort the array along the specified axis. Masked values are filled beforehand to &lt;a href=&quot;numpy.ma.masked_array.fill_value#numpy.ma.masked_array.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ffb60c0b3a0efc23fb632fe354e482e35cd7a6" translate="yes" xml:space="preserve">
          <source>Return an ndarray of indices that sort the array along the specified axis. Masked values are filled beforehand to &lt;code&gt;fill_value&lt;/code&gt;.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Ï∂ïÏùÑ Îî∞Îùº Î∞∞Ïó¥ÏùÑ Ï†ïÎ†¨ÌïòÎäî Ïù∏Îç±Ïä§Ïùò ndarrayÎ•º Î∞òÌôòÌï©ÎãàÎã§. ÎßàÏä§ÌÅ¨ Îêú Í∞íÏùÄ &lt;code&gt;fill_value&lt;/code&gt; Ïóê ÎØ∏Î¶¨ Ï±ÑÏõåÏßëÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="a3fbf8220103ddb9c53170063536b30474a33647" translate="yes" xml:space="preserve">
          <source>Return an ndarray of the provided type that satisfies requirements.</source>
          <target state="translated">ÏöîÍµ¨ ÏÇ¨Ìï≠ÏùÑ Ï∂©Ï°±ÌïòÎäî Ï†úÍ≥µÎêú Ïú†ÌòïÏùò ndarrayÎ•º Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="66ada08d8047b8df4503fc4522bfcc89c1a25638" translate="yes" xml:space="preserve">
          <source>Return an ndarray that satisfies requirements.</source>
          <target state="translated">ÏöîÍµ¨ ÏÇ¨Ìï≠ÏùÑ Ï∂©Ï°±ÌïòÎäî ndarrayÎ•º Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="65e1a9c5253a377f8506194fde1a0366a56d0452" translate="yes" xml:space="preserve">
          <source>Return angle in degrees if True, radians if False (default).</source>
          <target state="translated">TrueÏù¥Î©¥ Í∞ÅÎèÑÎ•ºÎèÑ Îã®ÏúÑÎ°ú, FalseÏù¥Î©¥ ÎùºÎîîÏïà (Í∏∞Î≥∏Í∞í)ÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4bc97163bbaf810ad94899db6b407050a1d72893" translate="yes" xml:space="preserve">
          <source>Return argument as a list of 1-d arrays.</source>
          <target state="translated">1 Ï∞®Ïõê Î∞∞Ïó¥Ïùò Î™©Î°ùÏúºÎ°ú Ïù∏ÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b65e8de3edca7d51a52dbb7e866b657f80db9fc9" translate="yes" xml:space="preserve">
          <source>Return array of indices to the minimum values along the given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº Ïù∏Îç±Ïä§ Î∞∞Ïó¥ÏùÑ ÏµúÏÜåÍ∞íÏúºÎ°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="98152078b349ec5d519e8a6a71c6e66c4d29e3fe" translate="yes" xml:space="preserve">
          <source>Return array. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. &lt;code&gt;x&lt;/code&gt; Í∞Ä Ïä§ÏπºÎùº Ïù∏ Í≤ΩÏö∞ Ïä§ÏπºÎùºÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0661c214d2d0844b0d359a1af55f448de09a3656" translate="yes" xml:space="preserve">
          <source>Return arrays with the results of &lt;code&gt;pyfunc&lt;/code&gt; broadcast (vectorized) over &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kwargs&lt;/code&gt; not in &lt;code&gt;excluded&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;excluded&lt;/code&gt; ÎêòÏßÄ ÏïäÏùÄ &lt;code&gt;args&lt;/code&gt; Î∞è &lt;code&gt;kwargs&lt;/code&gt; Ïóê ÎåÄÌï¥ &lt;code&gt;pyfunc&lt;/code&gt; Î∏åÎ°úÎìú Ï∫êÏä§Ìä∏ (Î≤°ÌÑ∞Ìôî) Í≤∞Í≥ºÍ∞ÄÏûàÎäî Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="8facb6efd40f602254e1008e4fd6d9ba9e8914d9" translate="yes" xml:space="preserve">
          <source>Return compiler version, or None if compiler is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5fb9eeccde5c9c7236050ce7125538aa893324" translate="yes" xml:space="preserve">
          <source>Return coordinate matrices from coordinate vectors.</source>
          <target state="translated">Ï¢åÌëú Î≤°ÌÑ∞ÏóêÏÑú Ï¢åÌëú ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="de8ee345f22c13090cbd2835276652e43114d963" translate="yes" xml:space="preserve">
          <source>Return current fill value.</source>
          <target state="translated">ÌòÑÏû¨ Ï±ÑÏö∞Í∏∞ Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a6f729ca85d8f9d1b1461590bf5883214f95a308" translate="yes" xml:space="preserve">
          <source>Return divmod(self, value).</source>
          <target state="translated">divmod (self, value)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8629cc0f96b954806ed6ee5e1df4b14918dc93c4" translate="yes" xml:space="preserve">
          <source>Return divmod(value, self).</source>
          <target state="translated">divmod (value, self)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="128825b3bf2b3ea4df47587be0de36fcbc688dc5" translate="yes" xml:space="preserve">
          <source>Return each element rounded to the given number of decimals.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ ÏÜåÏàò ÏûêÎ¶øÏàòÎ°ú Î∞òÏò¨Î¶º Îêú Í∞Å ÏöîÏÜåÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="eef351dc645829077720b3431460e8268f0837b2" translate="yes" xml:space="preserve">
          <source>Return element-wise a copy of the string with uppercase characters converted to lowercase and vice versa.</source>
          <target state="translated">ÎåÄÎ¨∏ÏûêÎ•º ÏÜåÎ¨∏ÏûêÎ°ú Î≥ÄÌôòÌïòÍ±∞ÎÇò Í∑∏ Î∞òÎåÄÎ°ú Î¨∏ÏûêÏó¥ÏùÑ Î≥µÏÇ¨ÌïòÏó¨ ÏöîÏÜåÎ≥ÑÎ°ú Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="4d896070c4728289c4f19df6b7db496a522962e7" translate="yes" xml:space="preserve">
          <source>Return element-wise quotient and remainder simultaneously.</source>
          <target state="translated">ÏöîÏÜå Î≥Ñ Î™´Í≥º ÎÇòÎ®∏ÏßÄÎ•º ÎèôÏãúÏóê Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ca204fd37a7a4a3b46282b6ed19dffe665cc94ce" translate="yes" xml:space="preserve">
          <source>Return element-wise remainder of division.</source>
          <target state="translated">ÏöîÏÜå Î≥Ñ ÎÇòÎàóÏÖàÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="9ea3f02c278fe4b6a68bfe9759fdc49bc980bd7a" translate="yes" xml:space="preserve">
          <source>Return element-wise string concatenation for two arrays of str or unicode.</source>
          <target state="translated">str ÎòêÎäî unicodeÏùò Îëê Î∞∞Ïó¥Ïóê ÎåÄÌïú ÏöîÏÜå Î≥Ñ Î¨∏ÏûêÏó¥ Ïó∞Í≤∞ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="87347b80d55d5b4b95e9de495b5ee0615cc35270" translate="yes" xml:space="preserve">
          <source>Return element-wise title cased version of string or unicode.</source>
          <target state="translated">Î¨∏ÏûêÏó¥ ÎòêÎäî Ïú†Îãà ÏΩîÎìúÏùò ÏöîÏÜå Î≥Ñ Ï†úÎ™© ÎåÄÏÜå Î¨∏Ïûê Î≤ÑÏ†ÑÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2d3de68e1002d9cc42fa2e59eabedd905c8452ed" translate="yes" xml:space="preserve">
          <source>Return elements chosen from &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; depending on &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; Ïóê Îî∞Îùº &lt;code&gt;x&lt;/code&gt; ÎòêÎäî &lt;code&gt;y&lt;/code&gt; ÏóêÏÑú ÏÑ†ÌÉùÌïú ÏöîÏÜåÎ•º Î∞òÌôò Ìï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="0ff1c0935b9d253793c15c707adff4cd22ea5eb3" translate="yes" xml:space="preserve">
          <source>Return elements from one of two arrays depending on condition.</source>
          <target state="translated">Ï°∞Í±¥Ïóê Îî∞Îùº Îëê Î∞∞Ïó¥ Ï§ë ÌïòÎÇòÏóêÏÑú ÏöîÏÜåÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f8455e3b64d335f63bd00c06673ed005bca48e50" translate="yes" xml:space="preserve">
          <source>Return evenly spaced numbers over a specified interval.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Í∞ÑÍ≤© ÎèôÏïà Í∑†Ïùº Ìïú Í∞ÑÍ≤©Ïùò Ïà´ÏûêÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f4c30939f37a827553c0024d78babd3f4ad2fa87" translate="yes" xml:space="preserve">
          <source>Return evenly spaced values within a given interval.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Í∞ÑÍ≤© ÎÇ¥ÏóêÏÑú Í∑†Ïùº Ìïú Í∞ÑÍ≤©Ïùò Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="99394c77c90b30de96d7c974f4a4b1fd264d4481" translate="yes" xml:space="preserve">
          <source>Return four lists of filenames containing C, C++, Fortran, and Fortran 90 module sources, respectively.</source>
          <target state="translated">C, C ++, Fortran Î∞è Fortran 90 Î™®Îìà ÏÜåÏä§Î•º Ìè¨Ìï®ÌïòÎäî ÎÑ§ Í∞úÏùò ÌååÏùº Ïù¥Î¶Ñ Î™©Î°ùÏùÑ Í∞ÅÍ∞Å Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="70aa596f75375846f02b625e3ab3f794fdece7ff" translate="yes" xml:space="preserve">
          <source>Return frame object from call stack with given level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7387b418d9f6dfd808d5a006f1821b54a6eec51" translate="yes" xml:space="preserve">
          <source>Return full path of a executable or None.</source>
          <target state="translated">Ïã§Ìñâ ÌååÏùºÏùò Ï†ÑÏ≤¥ Í≤ΩÎ°úÎ•º Î∞òÌôòÌïòÍ±∞ÎÇò ÏóÜÏùåÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ce1bd17605fa0487f34d589570003ec49fbd2285" translate="yes" xml:space="preserve">
          <source>Return in &lt;em&gt;ctypeptr&lt;/em&gt; a pointer to the actual value in an array scalar. There is no error checking so &lt;em&gt;scalar&lt;/em&gt; must be an array-scalar object, and ctypeptr must have enough space to hold the correct type. For flexible-sized types, a pointer to the data is copied into the memory of &lt;em&gt;ctypeptr&lt;/em&gt;, for all other types, the actual data is copied into the address pointed to by &lt;em&gt;ctypeptr&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;ctypeptr&lt;/em&gt; Ïóê Î∞∞Ïó¥ Ïä§ÏπºÎùºÏùò Ïã§Ï†ú Í∞íÏóê ÎåÄÌïú Ìè¨Ïù∏ÌÑ∞Î•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§ . Ïò§Î•ò Í≤ÄÏÇ¨Í∞Ä ÏóÜÏúºÎØÄÎ°ú &lt;em&gt;Ïä§ÏπºÎùº&lt;/em&gt; Îäî Î∞∞Ïó¥ Ïä§ÏπºÎùº Í∞ùÏ≤¥ Ïó¨ÏïºÌïòÎ©∞ ctypeptrÏùÄ Ïò¨Î∞îÎ•∏ Ïú†ÌòïÏùÑ Î≥¥Ïú†ÌïòÍ∏∞Ïóê Ï∂©Î∂ÑÌïú Í≥µÍ∞ÑÏù¥ ÏûàÏñ¥ÏïºÌï©ÎãàÎã§. Í∞ÄÎ≥Ä ÌÅ¨Í∏∞ Ïú†ÌòïÏùò Í≤ΩÏö∞ Îç∞Ïù¥ÌÑ∞Ïóê ÎåÄÌïú Ìè¨Ïù∏ÌÑ∞Í∞Ä &lt;em&gt;ctypeptr&lt;/em&gt; Ïùò Î©îÎ™®Î¶¨Ïóê Î≥µÏÇ¨ÎêòÍ≥† Îã§Î•∏ Î™®Îì† Ïú†ÌòïÏùò Í≤ΩÏö∞ Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Îäî &lt;em&gt;ctypeptrÏù¥&lt;/em&gt; Í∞ÄÎ¶¨ÌÇ§Îäî Ï£ºÏÜåÎ°ú Î≥µÏÇ¨Îê©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="873e597a31c34fe96c973365624c44fe45d0d7d7" translate="yes" xml:space="preserve">
          <source>Return indices of the maximum values along the given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº ÏµúÎåÄ Í∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="041af7ad25cd95d6f6f1b8938190424428178ec5" translate="yes" xml:space="preserve">
          <source>Return indices of the minimum values along the given axis of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; Ïùò Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº ÏµúÏÜåÍ∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôò Ìï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="bcd29e51aaf57b191eecd4fc9b13a04ba5fa2e91" translate="yes" xml:space="preserve">
          <source>Return indices that are non-zero in the flattened version of a.</source>
          <target state="translated">Î≥ëÌï© Îêú Î≤ÑÏ†ÑÏùò aÏóêÏÑú 0Ïù¥ ÏïÑÎãå Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0c16b5d89e590cb6d8c1a867eabb703f3eb14a31" translate="yes" xml:space="preserve">
          <source>Return indices that are non-zero in the flattened version of the input array.</source>
          <target state="translated">Î≥ëÌï© Îêú ÏûÖÎ†• Î∞∞Ïó¥ Î≤ÑÏ†ÑÏóêÏÑú 0Ïù¥ ÏïÑÎãå Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1860e4004449695d790cbba55c6224f09b2baf87" translate="yes" xml:space="preserve">
          <source>Return information (from system_info.get_info) for all of the names in the argument list in a single dictionary.</source>
          <target state="translated">Îã®Ïùº ÏÇ¨Ï†ÑÏóêÏÑú Ïù∏Ïàò Î™©Î°ùÏùò Î™®Îì† Ïù¥Î¶ÑÏóê ÎåÄÌïú Ï†ïÎ≥¥ (system_info.get_infoÏóêÏÑú)Î•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="47e1bc4a156b6f026125ee65f12de5a3128e7409" translate="yes" xml:space="preserve">
          <source>Return input as an array with masked data replaced by a fill value.</source>
          <target state="translated">ÎßàÏä§ÌÅ¨ Îêú Îç∞Ïù¥ÌÑ∞Í∞Ä Ï±ÑÏö∞Í∏∞ Í∞íÏúºÎ°ú ÎåÄÏ≤¥ Îêú Î∞∞Ïó¥Î°ú ÏûÖÎ†•ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="9744e747f2b1f674d9941b1a1e3d9abcfe1fb035" translate="yes" xml:space="preserve">
          <source>Return input with invalid data masked and replaced by a fill value.</source>
          <target state="translated">Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Îç∞Ïù¥ÌÑ∞Í∞Ä ÎßàÏä§ÌÇπÎêòÍ≥† Ï±ÑÏö∞Í∏∞ Í∞íÏúºÎ°ú ÎåÄÏ≤¥ Îêú ÏûÖÎ†•ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b653cdf8611cf1f0478e2d3c0735b2921b794baa" translate="yes" xml:space="preserve">
          <source>Return key in self.</source>
          <target state="translated">ÏûêÏ≤¥Ï†ÅÏúºÎ°ú ÌÇ§Î•º Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="ba1de5f0bace36216d6e256f4c76393c8e600e13" translate="yes" xml:space="preserve">
          <source>Return len(a) element-wise.</source>
          <target state="translated">len (a)Î•º ÏöîÏÜå Îã®ÏúÑÎ°ú Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="d576870585f90e333487220c512c1a51875cb0dd" translate="yes" xml:space="preserve">
          <source>Return len(self).</source>
          <target state="translated">len (self)ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="55a7069ff2b445f6daae9cea7812a1bb91275ad4" translate="yes" xml:space="preserve">
          <source>Return library info for the given package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4887f31ac3d6334741d7265aeea8144ca7014c7" translate="yes" xml:space="preserve">
          <source>Return list of slices corresponding to the unmasked clumps of a 1-D array.</source>
          <target state="translated">1 Ï∞®Ïõê Î∞∞Ïó¥Ïùò ÎßàÏä§ÌÅ¨ÎêòÏßÄ ÏïäÏùÄ Îç©Ïñ¥Î¶¨Ïóê Ìï¥ÎãπÌïòÎäî Ïä¨ÎùºÏù¥Ïä§ Î™©Î°ùÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5f2d4afd33f706ab53730aff1eea4d1bf0613dd0" translate="yes" xml:space="preserve">
          <source>Return list of slices corresponding to the unmasked clumps of a 1-D array. (A &amp;ldquo;clump&amp;rdquo; is defined as a contiguous region of the array).</source>
          <target state="translated">1 Ï∞®Ïõê Î∞∞Ïó¥Ïùò ÎßàÏä§ÌÅ¨ÎêòÏßÄ ÏïäÏùÄ Îç©Ïñ¥Î¶¨Ïóê Ìï¥ÎãπÌïòÎäî Ïä¨ÎùºÏù¥Ïä§ Î™©Î°ùÏùÑ Î∞òÌôòÌï©ÎãàÎã§. &quot;ÌÅ¥ÎüºÌîÑ&quot;Îäî Ïñ¥Î†àÏù¥Ïùò Ïó∞ÏÜç ÏòÅÏó≠ÏúºÎ°ú Ï†ïÏùòÎê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7a0a807d3796d53139734276e3195436111aa0de" translate="yes" xml:space="preserve">
          <source>Return list of subpackage configurations.</source>
          <target state="translated">ÏÑúÎ∏å Ìå®ÌÇ§ÏßÄ Íµ¨ÏÑ±Ïùò Î¶¨ÌÑ¥ Î™©Î°ù.</target>
        </trans-unit>
        <trans-unit id="2a0f64fe1c28c681e7e2a55e51d7b9b858cadecf" translate="yes" xml:space="preserve">
          <source>Return matrix rank of array using SVD method</source>
          <target state="translated">SVD Î∞©Î≤ïÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ Î∞∞Ïó¥Ïùò ÌñâÎ†¨ ÏàúÏúÑ Î∞òÌôò</target>
        </trans-unit>
        <trans-unit id="832874161951d5b4d63e9c73341b8dc2a238dea2" translate="yes" xml:space="preserve">
          <source>Return minimum of an array or minimum along an axis, ignoring any NaNs.</source>
          <target state="translated">NaNÏùÑ Î¨¥ÏãúÌïòÍ≥† Î∞∞Ïó¥Ïùò ÏµúÏÜåÍ∞í ÎòêÎäî Ï∂ïÏùÑ Îî∞Îùº ÏµúÏÜåÍ∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="93145b3b4eb9c25f250f22bfae16e4311d2c06c9" translate="yes" xml:space="preserve">
          <source>Return minimum of an array or minimum along an axis, ignoring any NaNs. When all-NaN slices are encountered a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised and Nan is returned for that slice.</source>
          <target state="translated">NaNÏùÑ Î¨¥ÏãúÌïòÍ≥† Î∞∞Ïó¥Ïùò ÏµúÏÜåÍ∞í ÎòêÎäî Ï∂ïÏùÑ Îî∞Îùº ÏµúÏÜåÍ∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§. Î™®Îì† NaN Ïä¨ÎùºÏù¥Ïä§Í∞Ä Î∞úÍ≤¨ÎêòÎ©¥ &lt;code&gt;RuntimeWarning&lt;/code&gt; Ïù¥ Î∞úÏÉùÌïòÍ≥† Ìï¥Îãπ Ïä¨ÎùºÏù¥Ïä§Ïóê ÎåÄÌï¥ NanÏù¥ Î¶¨ÌÑ¥Îê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="80737688b70b41c1ef4edcf9d7deb5e1618fb0ca" translate="yes" xml:space="preserve">
          <source>Return numbers spaced evenly on a log scale (a geometric progression).</source>
          <target state="translated">Î°úÍ∑∏ Ïä§ÏºÄÏùºÏóêÏÑú ÏùºÏ†ïÌïú Í∞ÑÍ≤©ÏúºÎ°ú Ïà´ÏûêÎ•º Î∞òÌôòÌï©ÎãàÎã§ (Í∏∞ÌïòÌïôÏ†Å ÏßÑÌñâ).</target>
        </trans-unit>
        <trans-unit id="11808e9c937b1321f4e999a48d25c13ad47453a3" translate="yes" xml:space="preserve">
          <source>Return numbers spaced evenly on a log scale.</source>
          <target state="translated">Î°úÍ∑∏ Ïä§ÏºÄÏùºÏóêÏÑú Í∑†Îì± Ìïú Í∞ÑÍ≤©ÏúºÎ°ú Ïà´ÏûêÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0e27e01e89b5a3d1aa3d0371caeb283721d935e2" translate="yes" xml:space="preserve">
          <source>Return pow(self, value, mod).</source>
          <target state="translated">pow (self, value, mod)Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="81e8c597196da7c65ddf89579e6fe597cb85e4ff" translate="yes" xml:space="preserve">
          <source>Return random bytes.</source>
          <target state="translated">ÏûÑÏùòÏùò Î∞îÏù¥Ìä∏Î•º ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="58a683fb570e10edeb9cc13b12a726fe2dd30255" translate="yes" xml:space="preserve">
          <source>Return random floats in the half-open interval [0.0, 1.0).</source>
          <target state="translated">Î∞ò Í∞úÎ∞© Í∞ÑÍ≤© [0.0, 1.0)ÏóêÏÑú ÏûÑÏùòÏùò Î∂ÄÎèô ÏÜåÏàòÏ†êÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="fc48702feb5e749cd32f2b8255dfbaae7f2b4b7b" translate="yes" xml:space="preserve">
          <source>Return random floats in the half-open interval [0.0, 1.0). Alias for &lt;a href=&quot;numpy.random.random_sample#numpy.random.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt; to ease forward-porting to the new random API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b09dab43b6c7bb7380f85506b73fd770e8ca3a" translate="yes" xml:space="preserve">
          <source>Return random integers from &lt;code&gt;low&lt;/code&gt; (inclusive) to &lt;code&gt;high&lt;/code&gt; (exclusive), or if endpoint=True, &lt;code&gt;low&lt;/code&gt; (inclusive) to &lt;code&gt;high&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;low&lt;/code&gt; (Ìè¨Ìï®)ÏóêÏÑú &lt;code&gt;high&lt;/code&gt; (Ï†úÏô∏)Î°ú ÎòêÎäî endpoint = True, &lt;code&gt;low&lt;/code&gt; (Ìè¨Ìï®)ÏóêÏÑú &lt;code&gt;high&lt;/code&gt; (Ìè¨Ìï®) Î°ú ÏûÑÏùòÏùò Ï†ïÏàòÎ•º Î∞òÌôò Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1fc0537cac56cec5a51dbf49d9dddccfa3978d72" translate="yes" xml:space="preserve">
          <source>Return random integers from &lt;code&gt;low&lt;/code&gt; (inclusive) to &lt;code&gt;high&lt;/code&gt; (exclusive), or if endpoint=True, &lt;code&gt;low&lt;/code&gt; (inclusive) to &lt;code&gt;high&lt;/code&gt; (inclusive). Replaces &lt;a href=&quot;numpy.random.randomstate.randint#numpy.random.RandomState.randint&quot;&gt;&lt;code&gt;RandomState.randint&lt;/code&gt;&lt;/a&gt; (with endpoint=False) and &lt;a href=&quot;numpy.random.randomstate.random_integers#numpy.random.RandomState.random_integers&quot;&gt;&lt;code&gt;RandomState.random_integers&lt;/code&gt;&lt;/a&gt; (with endpoint=True)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796677177cbd9c9dc8ce4db8cf18e41fbff19804" translate="yes" xml:space="preserve">
          <source>Return random integers from &lt;code&gt;low&lt;/code&gt; (inclusive) to &lt;code&gt;high&lt;/code&gt; (exclusive), or if endpoint=True, &lt;code&gt;low&lt;/code&gt; (inclusive) to &lt;code&gt;high&lt;/code&gt; (inclusive). Replaces &lt;code&gt;RandomState.randint&lt;/code&gt; (with endpoint=False) and &lt;code&gt;RandomState.random_integers&lt;/code&gt; (with endpoint=True)</source>
          <target state="translated">&lt;code&gt;low&lt;/code&gt; (Ìè¨Ìï®)ÏóêÏÑú &lt;code&gt;high&lt;/code&gt; (Ï†úÏô∏)Î°ú ÎòêÎäî endpoint = True, &lt;code&gt;low&lt;/code&gt; (Ìè¨Ìï®)ÏóêÏÑú &lt;code&gt;high&lt;/code&gt; (Ìè¨Ìï®) Î°ú ÏûÑÏùòÏùò Ï†ïÏàòÎ•º Î∞òÌôò Ìï©ÎãàÎã§. &lt;code&gt;RandomState.randint&lt;/code&gt; (endpoint = FalseÎ°ú) Î∞è &lt;code&gt;RandomState.random_integers&lt;/code&gt; (endpoint = TrueÎ°ú)Î•º Î∞îÍøâÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c2b6c986d9a15a5e07319436d1e8beebf1515839" translate="yes" xml:space="preserve">
          <source>Return random integers from &lt;code&gt;low&lt;/code&gt; (inclusive) to &lt;code&gt;high&lt;/code&gt; (exclusive).</source>
          <target state="translated">ÏûÑÏùòÏùò Ï†ïÏàòÎ•º &lt;code&gt;low&lt;/code&gt; (Ìè¨Ìï®)ÏóêÏÑú &lt;code&gt;high&lt;/code&gt; (ÎèÖÏ†ê)ÏúºÎ°ú Î∞òÌôò Ìï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="6c338afb5862bc6062e9cdc1e51e0d790a4b8136" translate="yes" xml:space="preserve">
          <source>Return random integers from the &amp;ldquo;discrete uniform&amp;rdquo; distribution of the specified dtype in the &amp;ldquo;half-open&amp;rdquo; interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;). If &lt;code&gt;high&lt;/code&gt; is None (the default), then results are from [0, &lt;code&gt;low&lt;/code&gt;).</source>
          <target state="translated">&quot;Î∞ò-Í∞úÎ∞©&quot;Í∞ÑÍ≤© [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; ] ÏóêÏÑú ÏßÄÏ†ïÎêú dtypeÏùò &quot;Ïù¥ÏÇ∞ Í∑†Ïùº Ìïú&quot;Î∂ÑÌè¨ÏóêÏÑú ÎÇúÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§ . Í≤ΩÏö∞ &lt;code&gt;high&lt;/code&gt; ÏóÜÏùå (ÎîîÌè¥Ìä∏)Í∞ÄÏóÜÍ≥†, Îã§ÏùåÏùò Í≤∞Í≥ºÎäî [0, Ï∂úÏã† &lt;code&gt;low&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c4929b70c69998becf7685a33d2d9a9f3015377f" translate="yes" xml:space="preserve">
          <source>Return random integers from the &amp;ldquo;discrete uniform&amp;rdquo; distribution of the specified dtype. If &lt;code&gt;high&lt;/code&gt; is None (the default), then results are from 0 to &lt;code&gt;low&lt;/code&gt;.</source>
          <target state="translated">ÏßÄÏ†ïÎêú dtypeÏùò &quot;Ïù¥ÏÇ∞ Í∑†Ïùº Ìïú&quot;Î∂ÑÌè¨ÏóêÏÑú ÎÇúÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§. Í≤ΩÏö∞ &lt;code&gt;high&lt;/code&gt; ÏóÜÏùå (Í∏∞Î≥∏Í∞í)ÏûÖÎãàÎã§, Îã§Ïùå Í≤∞Í≥ºÎäî 0ÏóêÏûàÎäî &lt;code&gt;low&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="571202a4756e1dd2cde11733de6d9ff88049b383" translate="yes" xml:space="preserve">
          <source>Return random integers of type &lt;code&gt;np.int_&lt;/code&gt; from the &amp;ldquo;discrete uniform&amp;rdquo; distribution in the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;]. If &lt;code&gt;high&lt;/code&gt; is None (the default), then results are from [1, &lt;code&gt;low&lt;/code&gt;]. The &lt;code&gt;np.int_&lt;/code&gt; type translates to the C long integer type and its precision is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ea3812dd860d28929c4d807dcde0771c5d9986" translate="yes" xml:space="preserve">
          <source>Return random integers of type np.int from the &amp;ldquo;discrete uniform&amp;rdquo; distribution in the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;]. If &lt;code&gt;high&lt;/code&gt; is None (the default), then results are from [1, &lt;code&gt;low&lt;/code&gt;]. The np.int type translates to the C long integer type and its precision is platform dependent.</source>
          <target state="translated">Îã´Ìûå Í∞ÑÍ≤© [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; ] ÏóêÏÑú &quot;discrete uniform&quot;Î∂ÑÌè¨ÏóêÏÑú np.int Ïú†ÌòïÏùò ÎÇúÏàòÎ•º Î∞òÌôò Ìï©ÎãàÎã§. Í≤ΩÏö∞ &lt;code&gt;high&lt;/code&gt; ÏóÜÏùå (ÎîîÌè¥Ìä∏)Í∞ÄÏóÜÍ≥†, Îã§ÏùåÏùò Í≤∞Í≥ºÍ∞Ä [1, Ï∂úÏã† &lt;code&gt;low&lt;/code&gt; ]. np.int Ïú†ÌòïÏùÄ C long Ï†ïÏàò Ïú†ÌòïÏúºÎ°ú Î≥ÄÌôòÎêòÎ©∞ Ï†ïÎ∞ÄÎèÑÎäî ÌîåÎû´ÌèºÏóê Îî∞Îùº Îã§Î¶ÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5c8f9fe066dbf62430e4d42a4ec499b3573bf7df" translate="yes" xml:space="preserve">
          <source>Return randoms as generated by the underlying BitGenerator</source>
          <target state="translated">Í∏∞Î≥∏ BitGeneratorÏóê ÏùòÌï¥ ÏÉùÏÑ± ÎêúÎåÄÎ°ú Î¨¥ÏûëÏúÑÎ•º Î∞òÌôò</target>
        </trans-unit>
        <trans-unit id="ec37cb57da1f255e6c2d2d2e17028f5b1d8bb8cd" translate="yes" xml:space="preserve">
          <source>Return repr(self).</source>
          <target state="translated">repr (self)ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="6383d5a6c17ca0abcefc02690bba60e0561864c8" translate="yes" xml:space="preserve">
          <source>Return selected slices of an array along given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº ÏÑ†ÌÉùÎêú Î∞∞Ïó¥ Ï°∞Í∞ÅÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1e0fd0a8f2343addeb1c68ba36e2e05acf3b6d39" translate="yes" xml:space="preserve">
          <source>Return selected slices of this array along given axis.</source>
          <target state="translated">Ïù¥ Ï∂ïÏùò ÏÑ†ÌÉùÎêú Ïä¨ÎùºÏù¥Ïä§Î•º ÏßÄÏ†ïÎêú Ï∂ïÏúºÎ°ú ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="fc27ba337413347f79be0b609647582c1f22e13e" translate="yes" xml:space="preserve">
          <source>Return self!=value.</source>
          <target state="translated">self! = valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="2a1c5be61e3dd597bada50bbfa8e6dd4fb7c2392" translate="yes" xml:space="preserve">
          <source>Return self%=value.</source>
          <target state="translated">self % = valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="7787a077c80e8349350de9abbe606e3523165c78" translate="yes" xml:space="preserve">
          <source>Return self%value.</source>
          <target state="translated">self % valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="c8f0714c5fc9115159e11d3fd89439f75dfa3286" translate="yes" xml:space="preserve">
          <source>Return self&amp;amp;=value.</source>
          <target state="translated">self &amp;amp; = valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="237de3324c92c285797fedb96a68e2d6640ed3c9" translate="yes" xml:space="preserve">
          <source>Return self&amp;amp;value.</source>
          <target state="translated">ÏûêÍ∏∞ Í∞ÄÏπòÎ•º ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="44827376552b2a842128319ca3318e39ae34bd2e" translate="yes" xml:space="preserve">
          <source>Return self&amp;gt;&amp;gt;=value.</source>
          <target state="translated">self &amp;gt;&amp;gt; = valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="011150f6388f658d9e3d21942fee57cc14a79639" translate="yes" xml:space="preserve">
          <source>Return self&amp;gt;&amp;gt;value.</source>
          <target state="translated">ÏûêÏ≤¥ &amp;gt;&amp;gt; Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8baa4a5325ec11bc689bd0db62f117abf8da901a" translate="yes" xml:space="preserve">
          <source>Return self&amp;gt;=value.</source>
          <target state="translated">self&amp;gt; = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7394ebaac6c7494522d67297bedddf0478e1ba44" translate="yes" xml:space="preserve">
          <source>Return self&amp;gt;value.</source>
          <target state="translated">self&amp;gt; valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="a698376c94178010fa87711e3457d502de173543" translate="yes" xml:space="preserve">
          <source>Return self&amp;lt;&amp;lt;=value.</source>
          <target state="translated">self &amp;lt;&amp;lt; = valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="4723f2f576660db58b4b2f9339ea62652e38455a" translate="yes" xml:space="preserve">
          <source>Return self&amp;lt;&amp;lt;value.</source>
          <target state="translated">self &amp;lt;&amp;lt; Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5100132214d61bf45b79a5b20e0340140a23d289" translate="yes" xml:space="preserve">
          <source>Return self&amp;lt;=value.</source>
          <target state="translated">self &amp;lt;= valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="cc86df02efdb82e554a4bbb7a1a182ae6e5d07cf" translate="yes" xml:space="preserve">
          <source>Return self&amp;lt;value.</source>
          <target state="translated">self &amp;lt;valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="44547f5740a99bd8ecfb49927c153b3a9c1b220e" translate="yes" xml:space="preserve">
          <source>Return self**=value.</source>
          <target state="translated">self ** = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="0ce082d316f4a4afe7869689f71546081e449dd0" translate="yes" xml:space="preserve">
          <source>Return self*=value.</source>
          <target state="translated">self * = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5bd808afc929c9a5a43900e5ca4727123df36d77" translate="yes" xml:space="preserve">
          <source>Return self*value.</source>
          <target state="translated">self * valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7e0fbec6801cc4f6d2711624032f93782157348d" translate="yes" xml:space="preserve">
          <source>Return self+=value.</source>
          <target state="translated">self + = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2f2d46c8ac67bc610dd228e7d6aa84df21988375" translate="yes" xml:space="preserve">
          <source>Return self+value.</source>
          <target state="translated">self + valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ad77198cfe01947089734297020a2c0a56bb6d04" translate="yes" xml:space="preserve">
          <source>Return self-=value.</source>
          <target state="translated">self- = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="886ded690781d661dde797edc5633d180e8dfb26" translate="yes" xml:space="preserve">
          <source>Return self-value.</source>
          <target state="translated">ÏûêÍ∏∞ Í∞ÄÏπòÎ•º ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="685d93c4c91a1240b76ac1f18de095c6ce750923" translate="yes" xml:space="preserve">
          <source>Return self//=value.</source>
          <target state="translated">self // = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="71abc6977b1b5fb4223886b50331f0c4fdb800a7" translate="yes" xml:space="preserve">
          <source>Return self//value.</source>
          <target state="translated">ÏûêÍ∏∞ // Í∞ÄÏπòÎ•º ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b9787285f95825a002f6f95f38f467599e6c68b9" translate="yes" xml:space="preserve">
          <source>Return self/=value.</source>
          <target state="translated">self / = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d87ab5115ec630a67c531dc071bb80cdc3a2bd97" translate="yes" xml:space="preserve">
          <source>Return self/value.</source>
          <target state="translated">ÏûêÍ∏∞ / Í∞ÄÏπòÎ•º ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4fb74c996b266a0aa0ae21f7bf70d6f69e0020c3" translate="yes" xml:space="preserve">
          <source>Return self==value.</source>
          <target state="translated">self == valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="bb93dff1e98693906538a3f98f35374d9a2bd867" translate="yes" xml:space="preserve">
          <source>Return self[key].</source>
          <target state="translated">self [key]Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8c93325f57b48591aa97bd53f5c63a2ec39bd657" translate="yes" xml:space="preserve">
          <source>Return self^=value.</source>
          <target state="translated">self ^ = valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d3126659c6526e28bb7153cfcfd03ff4ab8dd800" translate="yes" xml:space="preserve">
          <source>Return self^value.</source>
          <target state="translated">self ^ valueÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8094eb3d3da8ab9a45f38819941cdef743cb1fca" translate="yes" xml:space="preserve">
          <source>Return self|=value.</source>
          <target state="translated">self | = valueÎ•º Î¶¨ÌÑ¥ÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="da260362ecb1b626c0014c65867009eccbc0858f" translate="yes" xml:space="preserve">
          <source>Return self|value.</source>
          <target state="translated">ÏûêÍ∏∞ Í∞íÏùÑ ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="9121393e642e36bf30a2c9b84acaca405edc4339" translate="yes" xml:space="preserve">
          <source>Return series instance that has the specified roots.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Î£®Ìä∏Î•º Í∞ÄÏßÑ ÏãúÎ¶¨Ï¶à Ïù∏Ïä§ÌÑ¥Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1bb647ff4a80853ce579365ffd9d52a8b38c5c6d" translate="yes" xml:space="preserve">
          <source>Return specified diagonals.</source>
          <target state="translated">ÏßÄÏ†ïÎêú ÎåÄÍ∞ÅÏÑ†ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="1b365ab7b1e29bf26c41c3af8df7860485113ba4" translate="yes" xml:space="preserve">
          <source>Return specified diagonals. In NumPy 1.9 the returned array is a read-only view instead of a copy as in previous NumPy versions. In a future version the read-only restriction will be removed.</source>
          <target state="translated">ÏßÄÏ†ïÎêú ÎåÄÍ∞ÅÏÑ†ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. NumPy 1.9ÏóêÏÑú Î∞òÌôò Îêú Î∞∞Ïó¥ÏùÄ Ïù¥Ï†Ñ NumPy Î≤ÑÏ†ÑÏóêÏÑúÏôÄ Í∞ôÏù¥ Î≥µÏÇ¨Î≥∏ ÎåÄÏã† ÏùΩÍ∏∞ Ï†ÑÏö©Î≥¥Í∏∞ÏûÖÎãàÎã§. Ïù¥ÌõÑ Î≤ÑÏ†ÑÏóêÏÑúÎäî ÏùΩÍ∏∞ Ï†ÑÏö© Ï†úÌïúÏù¥ Ï†úÍ±∞Îê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ee1cb29405b1bc906272c1067dd4d35540e32cc8" translate="yes" xml:space="preserve">
          <source>Return str(self).</source>
          <target state="translated">str (self)ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a4a7c66114e74f59de33226d45065de420080980" translate="yes" xml:space="preserve">
          <source>Return the (builtin) typenumber for the elements of this array.</source>
          <target state="translated">Ïù¥ Î∞∞Ïó¥Ïùò ÏöîÏÜåÏóê ÎåÄÌïú (ÎÇ¥Ïû•) Ïú†Ìòï Î≤àÌò∏Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c3870fe0f2416470fc51e20becfdf5e8631cbc28" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;../arrays.classes#numpy.class.__array_priority__&quot;&gt;&lt;code&gt;__array_priority__&lt;/code&gt;&lt;/a&gt; attribute (converted to a double) of &lt;em&gt;obj&lt;/em&gt; or &lt;em&gt;def&lt;/em&gt; if no attribute of that name exists. Fast returns that avoid the attribute lookup are provided for objects of type &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c12644e0c8484eda0b2cff1b78a348369bc182" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;arrays.classes#numpy.class.__array_priority__&quot;&gt;&lt;code&gt;__array_priority__&lt;/code&gt;&lt;/a&gt; attribute (converted to a double) of &lt;em&gt;obj&lt;/em&gt; or &lt;em&gt;def&lt;/em&gt; if no attribute of that name exists. Fast returns that avoid the attribute lookup are provided for objects of type &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ìï¥Îãπ Ïù¥Î¶ÑÏùò ÏÜçÏÑ±Ïù¥ÏóÜÎäî Í≤ΩÏö∞ &lt;em&gt;obj&lt;/em&gt; ÎòêÎäî &lt;em&gt;def&lt;/em&gt; Ïùò &lt;a href=&quot;arrays.classes#numpy.class.__array_priority__&quot;&gt; &lt;code&gt;__array_priority__&lt;/code&gt; &lt;/a&gt; ÏÜçÏÑ± (doubleÎ°ú Î≥ÄÌôò Îê®)ÏùÑ Î∞òÌôò Ìï©ÎãàÎã§. ÏÜçÏÑ± Ï°∞ÌöåÎ•º ÌîºÌïòÎäî Îπ†Î•∏ Î¶¨ÌÑ¥ÏùÄ &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt; Ïú†ÌòïÏùò Ïò§Î∏åÏ†ùÌä∏Ïóê Ï†úÍ≥µÎê©ÎãàÎã§ .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59dbba03c62f10cf91c2ce18678cc1627e0baff0" translate="yes" xml:space="preserve">
          <source>Return the Bartlett window.</source>
          <target state="translated">Bartlett Ï∞ΩÏùÑ Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="e90e381dab188e19738d44cb26ddfd57d3e899f4" translate="yes" xml:space="preserve">
          <source>Return the Blackman window.</source>
          <target state="translated">Blackman Ï∞ΩÏùÑ Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="7939d4a56b1c4c39760446947432b0409035d96f" translate="yes" xml:space="preserve">
          <source>Return the C++ compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0a3b52c2d763b51d798212daeb185cf250f12c" translate="yes" xml:space="preserve">
          <source>Return the Cholesky decomposition, &lt;code&gt;L * L.H&lt;/code&gt;, of the square matrix &lt;code&gt;a&lt;/code&gt;, where &lt;code&gt;L&lt;/code&gt; is lower-triangular and .H is the conjugate transpose operator (which is the ordinary transpose if &lt;code&gt;a&lt;/code&gt; is real-valued). &lt;code&gt;a&lt;/code&gt; must be Hermitian (symmetric if real-valued) and positive-definite. No checking is performed to verify whether &lt;code&gt;a&lt;/code&gt; is Hermitian or not. In addition, only the lower-triangular and diagonal elements of &lt;code&gt;a&lt;/code&gt; are used. Only &lt;code&gt;L&lt;/code&gt; is actually returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2700804f46d3f323c9b4fbb9565dd810df413854" translate="yes" xml:space="preserve">
          <source>Return the Cholesky decomposition, &lt;code&gt;L * L.H&lt;/code&gt;, of the square matrix &lt;code&gt;a&lt;/code&gt;, where &lt;code&gt;L&lt;/code&gt; is lower-triangular and .H is the conjugate transpose operator (which is the ordinary transpose if &lt;code&gt;a&lt;/code&gt; is real-valued). &lt;code&gt;a&lt;/code&gt; must be Hermitian (symmetric if real-valued) and positive-definite. Only &lt;code&gt;L&lt;/code&gt; is actually returned.</source>
          <target state="translated">ÏÉÅÍ∏∞ Ï¥êÎ†à Ïä§ÌÇ§ Î∂ÑÌï¥Î•º ÎèåÎ†§ &lt;code&gt;L * L.H&lt;/code&gt; ÏÉÅÍ∏∞ Ï†ïÎ∞© ÌñâÎ†¨Ïùò , &lt;code&gt;L&lt;/code&gt; ÏùÄ ÌïòÎ∂Ä ÏÇºÍ∞ÅÌòïÏù¥Î©∞ .HÍ∞Ä (ÌÜµÏÉÅÏùò Í≤ΩÏö∞ Ï†ÑÏπò Í≥µÏï° Ï†ÑÏπò Ïó∞ÏÇ∞Ïûê &lt;code&gt;a&lt;/code&gt; Îäî Ïã§ÏàòÏù¥Îã§). (ÎåÄÏπ≠ Í≤ΩÏö∞ ÌèâÍ∞Ä - Ïã§Ï†ú) Î∞è Ìè¨ÏßÄÌã∞Î∏å Î™ÖÌôïÌïú ÏóêÎ•¥ ÎØ∏Ìä∏Ìï¥ÏïºÌï©ÎãàÎã§. Ïã§Ï†úÎ°úÎäî &lt;code&gt;L&lt;/code&gt; Îßå Î∞òÌôòÎê©ÎãàÎã§. &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eeb653cad78e245bd3dc2eae6f945e424681f60a" translate="yes" xml:space="preserve">
          <source>Return the Discrete Fourier Transform sample frequencies (for usage with rfft, irfft).</source>
          <target state="translated">Ïù¥ÏÇ∞ Ìë∏Î¶¨Ïóê Î≥ÄÌôò ÏÉòÌîå Ï£ºÌååÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§ (rfft, irfftÏôÄ Ìï®Íªò ÏÇ¨Ïö©).</target>
        </trans-unit>
        <trans-unit id="f5f23a84d36ce116942c9dbcc705845b92af4584" translate="yes" xml:space="preserve">
          <source>Return the Discrete Fourier Transform sample frequencies.</source>
          <target state="translated">Ïù¥ÏÇ∞ Ìë∏Î¶¨Ïóê Î≥ÄÌôò ÏÉòÌîå Ï£ºÌååÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3de1c8285514e46dfcf3db584fc0a16543254ff4" translate="yes" xml:space="preserve">
          <source>Return the Hamming window.</source>
          <target state="translated">Ìï¥Î∞ç Ï∞ΩÏúºÎ°ú ÎèåÏïÑÍ∞ëÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="5bd9a7b19984d105be88f0145dd5ba76d2bea242" translate="yes" xml:space="preserve">
          <source>Return the Hanning window.</source>
          <target state="translated">Hanning Ï∞ΩÏúºÎ°ú ÎèåÏïÑÍ∞ëÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="bf6e388ba3a92b5c9858c571d028c38b2e3e32af" translate="yes" xml:space="preserve">
          <source>Return the Internal Rate of Return (IRR).</source>
          <target state="translated">ÎÇ¥Î∂Ä ÏàòÏùµÎ•† (IRR)ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="433ed9faa69d98de5c16e688b54637a716ec1b02" translate="yes" xml:space="preserve">
          <source>Return the Kaiser window.</source>
          <target state="translated">Ïπ¥Ïù¥Ï†Ä Ï∞ΩÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3c7b39f3bd64db2f5d32902451538d280a0de460" translate="yes" xml:space="preserve">
          <source>Return the MATHLIB line from numpyconfig.h</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2044f5632f8f78806cde4cd166e8562f85969ce9" translate="yes" xml:space="preserve">
          <source>Return the addresses of the data and mask areas.</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞ Î∞è ÎßàÏä§ÌÅ¨ ÏòÅÏó≠Ïùò Ï£ºÏÜåÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4f07c1ed328647d449fbd1991ebde85eb9513ae2" translate="yes" xml:space="preserve">
          <source>Return the angle of the complex argument.</source>
          <target state="translated">Î≥µÏÜåÏàò Ïù∏ÏàòÏùò Í∞ÅÎèÑÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e47d1f137c577e571514929a713330c5a1f2709f" translate="yes" xml:space="preserve">
          <source>Return the array as an &lt;code&gt;a.ndim&lt;/code&gt;-levels deep nested list of Python scalars.</source>
          <target state="translated">Î∞∞Ïó¥ ÏùÑ ÌååÏù¥Ïç¨ Ïä§ÏπºÎùº Ïùò &lt;code&gt;a.ndim&lt;/code&gt; - levels ÍπäÍ≥† Ï§ëÏ≤© Îêú Î™©Î°ù ÏúºÎ°ú Î∞òÌôòÌï©ÎãàÎã§ .</target>
        </trans-unit>
        <trans-unit id="4c134ee0d8cd3c61d0996edfc1615333223652f2" translate="yes" xml:space="preserve">
          <source>Return the array data as a string containing the raw bytes in the array.</source>
          <target state="translated">Î∞∞Ïó¥ Îç∞Ïù¥ÌÑ∞Î•º Î∞∞Ïó¥Ïùò ÏõêÏãú Î∞îÏù¥Ìä∏Î•º Ìè¨Ìï®ÌïòÎäî Î¨∏ÏûêÏó¥Î°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c68b9fa6dbd6e4a4f85770c3444fb377015a943e" translate="yes" xml:space="preserve">
          <source>Return the array minimum along the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01347bb67c2eed84d3df8676a79ed41fc3ab703" translate="yes" xml:space="preserve">
          <source>Return the array with the same data viewed with a different byte order.</source>
          <target state="translated">Îã§Î•∏ Î∞îÏù¥Ìä∏ ÏàúÏÑúÎ°ú Î≥∏ ÎèôÏùºÌïú Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏßÑ Î∞∞Ïó¥ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b819e213aad8225d8bab5fee13aeddd95a04b37b" translate="yes" xml:space="preserve">
          <source>Return the average along the specified axis. When &lt;code&gt;returned&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, return a tuple with the average as the first element and the sum of the weights as the second element. &lt;code&gt;sum_of_weights&lt;/code&gt; is of the same type as &lt;code&gt;retval&lt;/code&gt;. The result dtype follows a genereal pattern. If &lt;code&gt;weights&lt;/code&gt; is None, the result dtype will be that of &lt;code&gt;a&lt;/code&gt; , or &lt;code&gt;float64&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; is integral. Otherwise, if &lt;code&gt;weights&lt;/code&gt; is not None and &lt;code&gt;a&lt;/code&gt; is non- integral, the result type will be the type of lowest precision capable of representing values of both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;weights&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; happens to be integral, the previous rules still applies but the result dtype will at least be &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Ï∂ïÏùÑ Îî∞Îùº ÌèâÍ∑†ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. Í≤ΩÏö∞ &lt;code&gt;returned&lt;/code&gt; Ïù∏ &lt;code&gt;True&lt;/code&gt; , Ï†ú 1 ÏóòÎ¶¨Î®ºÌä∏ÏôÄ Ï†ú 2 ÏóòÎ¶¨Î®ºÌä∏ÏôÄ Í∞ÄÏ§ëÏπòÏùò Ìï©ÏúºÎ°úÏÑú ÌèâÍ∑† ÌäúÌîåÏùÑ Î∞òÌôòÌïúÎã§. &lt;code&gt;sum_of_weights&lt;/code&gt; Îäî &lt;code&gt;retval&lt;/code&gt; Í≥º ÎèôÏùºÌïú Ïú†Ìòï ÏûÖÎãàÎã§. Í≤∞Í≥º dtypeÏùÄ ÏùºÎ∞òÏ†ÅÏù∏ Ìå®ÌÑ¥ÏùÑ Îî∞Î¶ÖÎãàÎã§. Í≤ΩÏö∞ &lt;code&gt;weights&lt;/code&gt; ÏóÜÏùåÏù¥ ÏóÜÎã§, Í≤∞Í≥º DTYPEÏùÄÏùò Í≤É , ÎòêÎäî &lt;code&gt;float64&lt;/code&gt; ÏùÑ ÌïòÎäî Í≤ΩÏö∞ &lt;code&gt;a&lt;/code&gt; ÌïÑÏàòÏûÖÎãàÎã§. Í∑∏Î†áÏßÄ ÏïäÏúºÎ©¥ &lt;code&gt;weights&lt;/code&gt; Í∞Ä ÏóÜÏùåÏù¥ ÏïÑÎãàÍ≥† &lt;code&gt;a&lt;/code&gt; Í∞Ä Ï†ïÏàòÍ∞Ä ÏïÑÎãå Í≤ΩÏö∞ Í≤∞Í≥º Ïú†ÌòïÏùÄ &lt;code&gt;a&lt;/code&gt; ÏôÄ &lt;code&gt;weights&lt;/code&gt; Ïùò Í∞íÏùÑ Î™®Îëê ÎÇòÌÉÄÎÇº ÏàòÏûàÎäî Í∞ÄÏû• ÎÇÆÏùÄ Ï†ïÎ∞ÄÎèÑ Ïú†ÌòïÏù¥ Îê©ÎãàÎã§. ÎßåÏïΩ &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; Ï†ïÏàòÍ∞Ä ÎêòÎçîÎùºÎèÑ Ïù¥Ï†Ñ Í∑úÏπôÏùÄ Ïó¨Ï†ÑÌûà ‚Äã‚ÄãÏ†ÅÏö©ÎêòÏßÄÎßå Í≤∞Í≥º dtypeÏùÄ Ï†ÅÏñ¥ÎèÑ &lt;code&gt;float64&lt;/code&gt; Í∞Ä Îê©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="9e790c341833768703ae28277a828488dbb4ccc5" translate="yes" xml:space="preserve">
          <source>Return the base 10 logarithm of the input array, element-wise.</source>
          <target state="translated">ÏûÖÎ†• Î∞∞Ïó¥Ïùò Î∞ëÏù¥ 10 Ïù∏ Î°úÍ∑∏Î•º ÏöîÏÜå Îã®ÏúÑÎ°ú ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="85c91544626a93e259a7d328b7c8e9e3bc61e0b9" translate="yes" xml:space="preserve">
          <source>Return the bin edges &lt;code&gt;(length(hist)+1)&lt;/code&gt;.</source>
          <target state="translated">Îπà Í∞ÄÏû•ÏûêÎ¶¨Î•º Î∞òÌôòÌï©ÎãàÎã§ &lt;code&gt;(length(hist)+1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="717c38f150702f547fff8f470de20526485be865" translate="yes" xml:space="preserve">
          <source>Return the binary representation of the input number as a string.</source>
          <target state="translated">ÏûÖÎ†• Ïà´ÏûêÏùò Ïù¥ÏßÑ ÌëúÌòÑÏùÑ Î¨∏ÏûêÏó¥Î°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="08cb7a9021f6ebef49b3beaaf080fae07e8bb3b3" translate="yes" xml:space="preserve">
          <source>Return the ceiling of the input, element-wise.</source>
          <target state="translated">ÏûÖÎ†•Ïùò Ï≤úÏû•ÏùÑ ÏöîÏÜå Îã®ÏúÑÎ°ú Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="69e815c127df4fa978cfa8313340cadcea3f4ca5" translate="yes" xml:space="preserve">
          <source>Return the character for the minimum-size type to which given types can be safely cast.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ïú†ÌòïÏùÑ ÏïàÏ†ÑÌïòÍ≤å Ï∫êÏä§ÌåÖ Ìï† ÏàòÏûàÎäî ÏµúÏÜå ÌÅ¨Í∏∞ Ïú†ÌòïÏùò Î¨∏ÏûêÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d81bc03212c90c5cc5ec033f587ea9e84258f174" translate="yes" xml:space="preserve">
          <source>Return the coefficients of a Chebyshev series of degree &lt;code&gt;deg&lt;/code&gt; that is the least squares fit to the data values &lt;code&gt;y&lt;/code&gt; given at points &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;y&lt;/code&gt; is 1-D the returned coefficients will also be 1-D. If &lt;code&gt;y&lt;/code&gt; is 2-D multiple fits are done, one for each column of &lt;code&gt;y&lt;/code&gt;, and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form</source>
          <target state="translated">Ï†ê &lt;code&gt;x&lt;/code&gt; Ïóê Ï£ºÏñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞ Í∞í &lt;code&gt;y&lt;/code&gt; Ïóê Í∞ÄÏû• ÏûëÏùÄ Ï†úÍ≥±Ïóê ÎßûÎäî Ï≤¥ÎπÑ ÏáºÌîÑ ÏùºÎ†®Ïùò Ï∞®Ïàò &lt;code&gt;deg&lt;/code&gt; Ïùò Í≥ÑÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§ . Í≤ΩÏö∞ &lt;code&gt;y&lt;/code&gt; Îäî 1-D Îêú Î≥µÍ∑Ä Í≥ÑÏàòÎäî 1-D Í≤ÉÏù¥Îã§. &lt;code&gt;y&lt;/code&gt; Í∞Ä 2 Ï∞®Ïõê Ïù¥Î©¥ Îã§Ï§ë ÌîºÌåÖÏù¥ ÏàòÌñâÎêòÍ≥†, &lt;code&gt;y&lt;/code&gt; Ïùò Í∞Å Ïó¥Ïóê ÎåÄÌï¥ ÌïòÎÇòÏî© , Í≤∞Í≥º Í≥ÑÏàòÎäî 2 Ï∞®Ïõê Î¶¨ÌÑ¥Ïùò Ìï¥Îãπ Ïó¥Ïóê Ï†ÄÏû•Îê©ÎãàÎã§. Ï†ÅÌï© Îã§Ìï≠ÏãùÏùÄ ÌòïÌÉúÏûÖÎãàÎã§</target>
        </trans-unit>
        <trans-unit id="094f7e83e63a84ae3298249f2c0f4dd3300b102b" translate="yes" xml:space="preserve">
          <source>Return the coefficients of a Hermite series of degree &lt;code&gt;deg&lt;/code&gt; that is the least squares fit to the data values &lt;code&gt;y&lt;/code&gt; given at points &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;y&lt;/code&gt; is 1-D the returned coefficients will also be 1-D. If &lt;code&gt;y&lt;/code&gt; is 2-D multiple fits are done, one for each column of &lt;code&gt;y&lt;/code&gt;, and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form</source>
          <target state="translated">Ìè¨Ïù∏Ìä∏ &lt;code&gt;x&lt;/code&gt; Ïóê Ï£ºÏñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞ Í∞í &lt;code&gt;y&lt;/code&gt; Ïóê Í∞ÄÏû• ÏûëÏùÄ Ï†úÍ≥±Ïóê Ìï¥Îãπ ÌïòÎäî Hermite ÏãúÎ¶¨Ï¶àÎèÑ &lt;code&gt;deg&lt;/code&gt; Ïùò Í≥ÑÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§ . Í≤ΩÏö∞ &lt;code&gt;y&lt;/code&gt; Îäî 1-D Îêú Î≥µÍ∑Ä Í≥ÑÏàòÎäî 1-D Í≤ÉÏù¥Îã§. &lt;code&gt;y&lt;/code&gt; Í∞Ä 2 Ï∞®Ïõê Ïù¥Î©¥ Îã§Ï§ë ÌîºÌåÖÏù¥ ÏàòÌñâÎêòÍ≥†, &lt;code&gt;y&lt;/code&gt; Ïùò Í∞Å Ïó¥Ïóê ÎåÄÌï¥ ÌïòÎÇòÏî© , Í≤∞Í≥º Í≥ÑÏàòÎäî 2 Ï∞®Ïõê Î¶¨ÌÑ¥Ïùò Ìï¥Îãπ Ïó¥Ïóê Ï†ÄÏû•Îê©ÎãàÎã§. Ï†ÅÌï© Îã§Ìï≠ÏãùÏùÄ ÌòïÌÉúÏûÖÎãàÎã§</target>
        </trans-unit>
        <trans-unit id="d43df7b715d9b7ca42399203d1d775f575da8188" translate="yes" xml:space="preserve">
          <source>Return the coefficients of a HermiteE series of degree &lt;code&gt;deg&lt;/code&gt; that is the least squares fit to the data values &lt;code&gt;y&lt;/code&gt; given at points &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;y&lt;/code&gt; is 1-D the returned coefficients will also be 1-D. If &lt;code&gt;y&lt;/code&gt; is 2-D multiple fits are done, one for each column of &lt;code&gt;y&lt;/code&gt;, and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form</source>
          <target state="translated">Ï†ê &lt;code&gt;x&lt;/code&gt; Ïóê Ï£ºÏñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞ Í∞í &lt;code&gt;y&lt;/code&gt; Ïóê Í∞ÄÏû• ÏûëÏùÄ Ï†úÍ≥±Ïóê Ìï¥Îãπ ÌïòÎäî HermiteE ÏãúÎ¶¨Ï¶àÎèÑ &lt;code&gt;deg&lt;/code&gt; Ïùò Í≥ÑÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§ . Í≤ΩÏö∞ &lt;code&gt;y&lt;/code&gt; Îäî 1-D Îêú Î≥µÍ∑Ä Í≥ÑÏàòÎäî 1-D Í≤ÉÏù¥Îã§. &lt;code&gt;y&lt;/code&gt; Í∞Ä 2 Ï∞®Ïõê Ïù¥Î©¥ Îã§Ï§ë ÌîºÌåÖÏù¥ ÏàòÌñâÎêòÍ≥†, &lt;code&gt;y&lt;/code&gt; Ïùò Í∞Å Ïó¥Ïóê ÎåÄÌï¥ ÌïòÎÇòÏî© , Í≤∞Í≥º Í≥ÑÏàòÎäî 2 Ï∞®Ïõê Î¶¨ÌÑ¥Ïùò Ìï¥Îãπ Ïó¥Ïóê Ï†ÄÏû•Îê©ÎãàÎã§. Ï†ÅÌï© Îã§Ìï≠ÏãùÏùÄ ÌòïÌÉúÏûÖÎãàÎã§</target>
        </trans-unit>
        <trans-unit id="2f0ef637c2bd4a1996cc5ab306e09c25ffc96afa" translate="yes" xml:space="preserve">
          <source>Return the coefficients of a Laguerre series of degree &lt;code&gt;deg&lt;/code&gt; that is the least squares fit to the data values &lt;code&gt;y&lt;/code&gt; given at points &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;y&lt;/code&gt; is 1-D the returned coefficients will also be 1-D. If &lt;code&gt;y&lt;/code&gt; is 2-D multiple fits are done, one for each column of &lt;code&gt;y&lt;/code&gt;, and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form</source>
          <target state="translated">Ï†ê &lt;code&gt;x&lt;/code&gt; Ïóê Ï£ºÏñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞ Í∞í &lt;code&gt;y&lt;/code&gt; Ïóê Í∞ÄÏû• ÏûëÏùÄ Ï†úÍ≥±Ïóê ÎßûÎäî Laguerre Í≥ÑÏó¥Ïùò Ï∞®Ïàò &lt;code&gt;deg&lt;/code&gt; Ïùò Í≥ÑÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§ . Í≤ΩÏö∞ &lt;code&gt;y&lt;/code&gt; Îäî 1-D Îêú Î≥µÍ∑Ä Í≥ÑÏàòÎäî 1-D Í≤ÉÏù¥Îã§. &lt;code&gt;y&lt;/code&gt; Í∞Ä 2 Ï∞®Ïõê Ïù¥Î©¥ Îã§Ï§ë ÌîºÌåÖÏù¥ ÏàòÌñâÎêòÍ≥†, &lt;code&gt;y&lt;/code&gt; Ïùò Í∞Å Ïó¥Ïóê ÎåÄÌï¥ ÌïòÎÇòÏî© , Í≤∞Í≥º Í≥ÑÏàòÎäî 2 Ï∞®Ïõê Î¶¨ÌÑ¥Ïùò Ìï¥Îãπ Ïó¥Ïóê Ï†ÄÏû•Îê©ÎãàÎã§. Ï†ÅÌï© Îã§Ìï≠ÏãùÏùÄ ÌòïÌÉúÏûÖÎãàÎã§</target>
        </trans-unit>
        <trans-unit id="0ea852724b637a7c74620ec4a4272acff0201dd3" translate="yes" xml:space="preserve">
          <source>Return the coefficients of a Legendre series of degree &lt;code&gt;deg&lt;/code&gt; that is the least squares fit to the data values &lt;code&gt;y&lt;/code&gt; given at points &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;y&lt;/code&gt; is 1-D the returned coefficients will also be 1-D. If &lt;code&gt;y&lt;/code&gt; is 2-D multiple fits are done, one for each column of &lt;code&gt;y&lt;/code&gt;, and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; Ï†êÏóê Ï£ºÏñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞ Í∞í &lt;code&gt;y&lt;/code&gt; Ïóê Í∞ÄÏû• ÏûëÏùÄ Ï†úÍ≥±Ïóê Ìï¥Îãπ ÌïòÎäî Legendre ÏãúÎ¶¨Ï¶àÎèÑ &lt;code&gt;deg&lt;/code&gt; Ïùò Í≥ÑÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§ . Í≤ΩÏö∞ &lt;code&gt;y&lt;/code&gt; Îäî 1-D Îêú Î≥µÍ∑Ä Í≥ÑÏàòÎäî 1-D Í≤ÉÏù¥Îã§. &lt;code&gt;y&lt;/code&gt; Í∞Ä 2 Ï∞®Ïõê Ïù¥Î©¥ Îã§Ï§ë ÌîºÌåÖÏù¥ ÏàòÌñâÎêòÍ≥†, &lt;code&gt;y&lt;/code&gt; Ïùò Í∞Å Ïó¥Ïóê ÎåÄÌï¥ ÌïòÎÇòÏî© , Í≤∞Í≥º Í≥ÑÏàòÎäî 2 Ï∞®Ïõê Î¶¨ÌÑ¥Ïùò Ìï¥Îãπ Ïó¥Ïóê Ï†ÄÏû•Îê©ÎãàÎã§. Ï†ÅÌï© Îã§Ìï≠ÏãùÏùÄ ÌòïÌÉúÏûÖÎãàÎã§</target>
        </trans-unit>
        <trans-unit id="d23771e05270d3342052ca7018e78be7f695d586" translate="yes" xml:space="preserve">
          <source>Return the coefficients of a polynomial of degree &lt;code&gt;deg&lt;/code&gt; that is the least squares fit to the data values &lt;code&gt;y&lt;/code&gt; given at points &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;y&lt;/code&gt; is 1-D the returned coefficients will also be 1-D. If &lt;code&gt;y&lt;/code&gt; is 2-D multiple fits are done, one for each column of &lt;code&gt;y&lt;/code&gt;, and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form</source>
          <target state="translated">Ï†ïÎèÑÏùò Îã§Ìï≠ÏãùÏùò Í≥ÑÏàò ÎèåÏïÑ &lt;code&gt;deg&lt;/code&gt; ÏµúÏÜå Ï†úÍ≥± Îç∞Ïù¥ÌÑ∞ Í∞íÏóê Ï†ÅÌï© &lt;code&gt;y&lt;/code&gt; Ï†êÏóêÏÑú Ï£ºÏñ¥ÏßÑ &lt;code&gt;x&lt;/code&gt; . Í≤ΩÏö∞ &lt;code&gt;y&lt;/code&gt; Îäî 1-D Îêú Î≥µÍ∑Ä Í≥ÑÏàòÎäî 1-D Í≤ÉÏù¥Îã§. &lt;code&gt;y&lt;/code&gt; Í∞Ä 2 Ï∞®Ïõê Ïù¥Î©¥ Îã§Ï§ë ÌîºÌåÖÏù¥ ÏàòÌñâÎêòÍ≥†, &lt;code&gt;y&lt;/code&gt; Ïùò Í∞Å Ïó¥Ïóê ÎåÄÌï¥ ÌïòÎÇòÏî© , Í≤∞Í≥º Í≥ÑÏàòÎäî 2 Ï∞®Ïõê Î¶¨ÌÑ¥Ïùò Ìï¥Îãπ Ïó¥Ïóê Ï†ÄÏû•Îê©ÎãàÎã§. Ï†ÅÌï© Îã§Ìï≠ÏãùÏùÄ ÌòïÌÉúÏûÖÎãàÎã§</target>
        </trans-unit>
        <trans-unit id="c278519486b71d5dea961e7975bb299a52877d0a" translate="yes" xml:space="preserve">
          <source>Return the coefficients of the polynomial</source>
          <target state="translated">Îã§Ìï≠ÏãùÏùò Í≥ÑÏàòÎ•º Î∞òÌôò</target>
        </trans-unit>
        <trans-unit id="a37ae5d3086166bb430af87ece0e6c96cfcc5ddf" translate="yes" xml:space="preserve">
          <source>Return the common filling value of two masked arrays, if any.</source>
          <target state="translated">ÎßàÏä§ÌÅ¨ Îêú Îëê Î∞∞Ïó¥Ïùò Í≥µÌÜµ Ï±ÑÏö∞Í∏∞ Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§ (ÏûàÎäî Í≤ΩÏö∞).</target>
        </trans-unit>
        <trans-unit id="5d88442f098e1e70bbdfacf473df16f0911dec8d" translate="yes" xml:space="preserve">
          <source>Return the companion matrix of c.</source>
          <target state="translated">cÏùò Ïª¥Ìå®ÎãàÏñ∏ ÌñâÎ†¨ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="50bff30508a6452c14f550f9ae13e224f526c8fd" translate="yes" xml:space="preserve">
          <source>Return the complex conjugate, element-wise.</source>
          <target state="translated">Î≥µÌï© Ïª®Ï•¨ Í≤åÏù¥Ìä∏Î•º ÏöîÏÜå Îã®ÏúÑÎ°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="35011452a751eebc1f3bc4539ecd7fac117d869c" translate="yes" xml:space="preserve">
          <source>Return the coordinates of all the non-zero values.</source>
          <target state="translated">0Ïù¥ ÏïÑÎãå Î™®Îì† Í∞íÏùò Ï¢åÌëúÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="92ae1c4ca2f088dedf5b85d158674c005d0552c4" translate="yes" xml:space="preserve">
          <source>Return the cross product of two (arrays of) vectors.</source>
          <target state="translated">Îëê (Î∞∞Ïó¥) Î≤°ÌÑ∞Ïùò ÍµêÏ∞® Í≥±ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="06365e1fb95e9f5a0bfa329aea19daceaf90abbb" translate="yes" xml:space="preserve">
          <source>Return the cube-root of an array, element-wise.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò ÌÅêÎ∏å Î£®Ìä∏Î•º ÏöîÏÜå Îã®ÏúÑÎ°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="83e0604ea188e2232bd3de741c76b0df5bd6a733" translate="yes" xml:space="preserve">
          <source>Return the cumulative product of array elements over a given axis treating Not a Numbers (NaNs) as one.</source>
          <target state="translated">NaN (Not a Numbers)ÏùÑ ÌïòÎÇòÎ°ú Ï∑®Í∏âÌïòÏó¨ Ï£ºÏñ¥ÏßÑ Ï∂ïÏóêÏÑú Î∞∞Ïó¥ ÏöîÏÜåÏùò ÎàÑÏ†Å Í≥±ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="709034b99b655358d670908fb89adaaa6caabb86" translate="yes" xml:space="preserve">
          <source>Return the cumulative product of array elements over a given axis treating Not a Numbers (NaNs) as one. The cumulative product does not change when NaNs are encountered and leading NaNs are replaced by ones.</source>
          <target state="translated">NaN (Not a Numbers)ÏùÑ ÌïòÎÇòÎ°ú Ï∑®Í∏âÌïòÏó¨ Ï£ºÏñ¥ÏßÑ Ï∂ïÏóêÏÑú Î∞∞Ïó¥ ÏöîÏÜåÏùò ÎàÑÏ†Å Í≥±ÏùÑ Î∞òÌôòÌï©ÎãàÎã§. NaNÏù¥ Î∞úÏÉùÌïòÍ≥† ÏÑ†Ìñâ NaNÏù¥ ÌïòÎÇòÎ°ú ÎåÄÏ≤¥ÎêòÎ©¥ ÎàÑÏ†Å Í≥±ÏùÄ Î≥ÄÍ≤ΩÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f05783c27257d0e912c3de75930f37a7d6949eee" translate="yes" xml:space="preserve">
          <source>Return the cumulative product of elements along a given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº ÎàÑÏ†Å Îêú ÏöîÏÜå Í≥±ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="42ba67c8490d62e8e8b1330c312d453f9b10f10b" translate="yes" xml:space="preserve">
          <source>Return the cumulative product of the array elements over the given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏóê ÎåÄÌï¥ Î∞∞Ïó¥ ÏöîÏÜåÏùò ÎàÑÏ†Å Í≥±ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a749224838b735e2ef4f586e1b995ce99a7c6a13" translate="yes" xml:space="preserve">
          <source>Return the cumulative product of the elements along the given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº ÏöîÏÜåÏùò ÎàÑÏ†Å Í≥±ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="fe0aae9bb479e789cd29928067bcf95116970ccb" translate="yes" xml:space="preserve">
          <source>Return the cumulative sum of array elements over a given axis treating Not a Numbers (NaNs) as zero.</source>
          <target state="translated">NaN (Not a Numbers)ÏùÑ 0ÏúºÎ°ú Ï≤òÎ¶¨ÌïòÏó¨ ÏßÄÏ†ïÎêú Ï∂ïÏóê ÎåÄÌï¥ Î∞∞Ïó¥ ÏöîÏÜåÏùò ÎàÑÏ†Å Ìï©Í≥ÑÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ed7dc08579a55d77ab24e46b6b65ebc38e611553" translate="yes" xml:space="preserve">
          <source>Return the cumulative sum of array elements over a given axis treating Not a Numbers (NaNs) as zero. The cumulative sum does not change when NaNs are encountered and leading NaNs are replaced by zeros.</source>
          <target state="translated">NaN (Not a Numbers)ÏùÑ 0ÏúºÎ°ú Ï≤òÎ¶¨ÌïòÏó¨ ÏßÄÏ†ïÎêú Ï∂ïÏóê ÎåÄÌï¥ Î∞∞Ïó¥ ÏöîÏÜåÏùò ÎàÑÏ†Å Ìï©Í≥ÑÎ•º Î∞òÌôòÌï©ÎãàÎã§. NaNÏù¥ Î∞úÏÉùÌïòÍ≥† ÏÑ†Ìñâ NaNÏù¥ 0ÏúºÎ°ú Î∞îÎÄåÎ©¥ ÎàÑÏ†Å Ìï©Í≥ÑÎäî Î≥ÄÍ≤ΩÎêòÏßÄ ÏïäÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="db82feb043b5b4ca001ec7ecdddbd7cf17da3a70" translate="yes" xml:space="preserve">
          <source>Return the cumulative sum of the array elements over the given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏóêÏÑú Î∞∞Ïó¥ ÏöîÏÜåÏùò ÎàÑÏ†Å Ìï©Í≥ÑÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="90bed9aa0e529150f58fd1656c1ec9a7c9cdb48d" translate="yes" xml:space="preserve">
          <source>Return the cumulative sum of the elements along a given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº ÏöîÏÜåÏùò ÎàÑÏ†Å Ìï©Í≥ÑÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8f46eef6061a556e56e15414baaf486af827b3bb" translate="yes" xml:space="preserve">
          <source>Return the cumulative sum of the elements along the given axis.</source>
          <target state="translated">Ï£ºÏñ¥ÏßÑ Ï∂ïÏùÑ Îî∞Îùº ÏöîÏÜåÏùò ÎàÑÏ†Å Ìï©Í≥ÑÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7fdfff21a271ffd8fb3b48dfe12e050df2fd9051" translate="yes" xml:space="preserve">
          <source>Return the current callback function used on floating-point errors.</source>
          <target state="translated">Î∂ÄÎèô ÏÜåÏàòÏ†ê Ïò§Î•òÏóê ÏÇ¨Ïö© Îêú ÌòÑÏû¨ ÏΩúÎ∞± Ìï®ÏàòÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="7a234b663607d5d6e00b725f2f14860803912b28" translate="yes" xml:space="preserve">
          <source>Return the current object that defines floating-point error handling.</source>
          <target state="translated">Î∂ÄÎèô ÏÜåÏàòÏ†ê Ïò§Î•ò Ï≤òÎ¶¨Î•º Ï†ïÏùòÌïòÎäî ÌòÑÏû¨ Í∞ùÏ≤¥Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="fe1dcd0f19b5235844d8c635c6083a03f7def8d1" translate="yes" xml:space="preserve">
          <source>Return the current print options.</source>
          <target state="translated">ÌòÑÏû¨ Ïù∏ÏáÑ ÏòµÏÖòÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3de1a99f2ef7d479abd7d40b61acaef7dacc730c" translate="yes" xml:space="preserve">
          <source>Return the data (cast to the data type indicated by &lt;em&gt;outcode&lt;/em&gt;) from the array-scalar, &lt;em&gt;scalar&lt;/em&gt;, into the memory pointed to by &lt;em&gt;ctypeptr&lt;/em&gt; (which must be large enough to handle the incoming memory).</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞ ÎèåÎ†§Ï§çÎãàÎã§ (Îç∞Ïù¥ÌÑ∞ Ïú†ÌòïÏóê Ï∫êÏä§Ìä∏Î°ú ÌëúÏãú &lt;em&gt;OUTCODE&lt;/em&gt; , Î∞∞Ïó¥ Ïä§ÏπºÎùºÏóêÏÑú) &lt;em&gt;Ïä§ÏπºÎùº&lt;/em&gt; Î©îÎ™®Î¶¨Í∞Ä Í∞ÄÎ¶¨ÌÇ§ÎäîÏúºÎ°ú, &lt;em&gt;ctypeptr&lt;/em&gt; (ÏàòÏã† Î©îÎ™®Î¶¨Î•º Ï≤òÎ¶¨ Ìï† ÏàòÏûàÎäî Ï∂©Î∂ÑÌïúÌï¥ÏïºÌï©ÎãàÎã§).</target>
        </trans-unit>
        <trans-unit id="18a2cd7bf0ae041396085181eacf84b53acec016" translate="yes" xml:space="preserve">
          <source>Return the data of &lt;code&gt;a&lt;/code&gt; (if any) as an ndarray if &lt;code&gt;a&lt;/code&gt; is a &lt;code&gt;MaskedArray&lt;/code&gt;, else return &lt;code&gt;a&lt;/code&gt; as a ndarray or subclass (depending on &lt;code&gt;subok&lt;/code&gt;) if not.</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞Ïùò Î∞òÌôò &lt;code&gt;a&lt;/code&gt; Í≤ΩÏö∞ ndarrayÎ°ú (ÏûàÎäî Í≤ΩÏö∞) &lt;code&gt;a&lt;/code&gt; AÎäî &lt;code&gt;MaskedArray&lt;/code&gt; Îã§Î•∏ Î∞òÌôò &lt;code&gt;a&lt;/code&gt; ndarray ÎòêÎäî ÏÑúÎ∏å ÌÅ¥ÎûòÏä§ (Ïóê Îî∞Îùº Í∞ôÏù¥ &lt;code&gt;subok&lt;/code&gt; ) ÏïÑÎãàÎùºÎ©¥.</target>
        </trans-unit>
        <trans-unit id="8000545072516ea887097e2a6ae1bbd77994ae0c" translate="yes" xml:space="preserve">
          <source>Return the data of a masked array as an ndarray.</source>
          <target state="translated">ÎßàÏä§ÌÅ¨ Îêú Î∞∞Ïó¥Ïùò Îç∞Ïù¥ÌÑ∞Î•º ndarrayÎ°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="8d0eef55456acfbe20b4e2320e5bb8cec5baabf6" translate="yes" xml:space="preserve">
          <source>Return the data pointer cast to a particular c-types object. For example, calling &lt;code&gt;self._as_parameter_&lt;/code&gt; is equivalent to &lt;code&gt;self.data_as(ctypes.c_void_p)&lt;/code&gt;. Perhaps you want to use the data as a pointer to a ctypes array of floating-point data: &lt;code&gt;self.data_as(ctypes.POINTER(ctypes.c_double))&lt;/code&gt;.</source>
          <target state="translated">ÌäπÏ†ï c-types Í∞ùÏ≤¥Ïóê Ï∫êÏä§Ìä∏ Îêú Îç∞Ïù¥ÌÑ∞ Ìè¨Ïù∏ÌÑ∞Î•º Î∞òÌôòÌï©ÎãàÎã§. ÏòàÎ•º Îì§Ïñ¥, &lt;code&gt;self._as_parameter_&lt;/code&gt; Ìò∏Ï∂ú ÏùÄ &lt;code&gt;self.data_as(ctypes.c_void_p)&lt;/code&gt; ÏôÄ Í∞ôÏäµÎãàÎã§ . ÏïÑÎßàÎèÑ Îç∞Ïù¥ÌÑ∞Î•º Î∂ÄÎèô ÏÜåÏàòÏ†ê Îç∞Ïù¥ÌÑ∞Ïùò ctypes Î∞∞Ïó¥Ïóê ÎåÄÌïú Ìè¨Ïù∏ÌÑ∞Î°ú ÏÇ¨Ïö©ÌïòÎ†§Í≥† Ìï† Ïàò ÏûàÏäµÎãàÎã§. &lt;code&gt;self.data_as(ctypes.POINTER(ctypes.c_double))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32991c4433156b35ff43a42eac0d317f9e1dfe58" translate="yes" xml:space="preserve">
          <source>Return the data portion of the masked array as a hierarchical Python list.</source>
          <target state="translated">ÎßàÏä§ÌÅ¨ Î∞∞Ïó¥Ïùò Îç∞Ïù¥ÌÑ∞ Î∂ÄÎ∂ÑÏùÑ Í≥ÑÏ∏µ Ï†Å ÌååÏù¥Ïç¨ Î™©Î°ùÏúºÎ°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="d8ac23894ebb372f51c1be150ee43e1761806afc" translate="yes" xml:space="preserve">
          <source>Return the data-pointer of the &lt;em&gt;i&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;i&lt;/em&gt; Ïùò Îç∞Ïù¥ÌÑ∞ Ìè¨Ïù∏ÌÑ∞Î•º Î∞òÌôò&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98a879a9abd2e3616b32ddc30c41652a8cfdfada" translate="yes" xml:space="preserve">
          <source>Return the default fill value for a dtype.</source>
          <target state="translated">dtypeÏùò Í∏∞Î≥∏ Ï±ÑÏö∞Í∏∞ Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a9640c8aa3fff69daa178e0f74506ff5a2781f8b" translate="yes" xml:space="preserve">
          <source>Return the default fill value for the argument object.</source>
          <target state="translated">Ïù∏Ïàò Í∞ùÏ≤¥Ïùò Í∏∞Î≥∏ Ï±ÑÏö∞Í∏∞ Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="91cf20ac348478ebe8124e75066b89e138df17b8" translate="yes" xml:space="preserve">
          <source>Return the derivative of the specified order of a polynomial.</source>
          <target state="translated">Îã§Ìï≠ÏãùÏùò ÏßÄÏ†ïÎêú Ï∞®ÏàòÏùò ÎØ∏Î∂Ñ Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4f49ab8e8f7bca5c10c5ccbb73131ec961d6e9d0" translate="yes" xml:space="preserve">
          <source>Return the directory that contains the NumPy *.h header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c808e4b18f9235d62d361045a9d5ab1e558f3b" translate="yes" xml:space="preserve">
          <source>Return the distance between x and the nearest adjacent number.</source>
          <target state="translated">xÏôÄ Í∞ÄÏû• Í∞ÄÍπåÏö¥ Ïù∏Ï†ë Ïà´Ïûê ÏÇ¨Ïù¥Ïùò Í±∞Î¶¨Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3003640086f7fa3be93691c586509dfb3ef9aa89" translate="yes" xml:space="preserve">
          <source>Return the distutils distribution object for self.</source>
          <target state="translated">ÏûêÏ≤¥Ï†ÅÏúºÎ°ú distutils Î∞∞Ìè¨ Í∞ùÏ≤¥Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="cfef9abed9be013b165cad3b58841220c6b069b4" translate="yes" xml:space="preserve">
          <source>Return the dot product of two arrays.</source>
          <target state="translated">Îëê Î∞∞Ïó¥Ïùò ÎÇ¥Ï†ÅÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c184d6b947d06315a2d153cb6b6a65c9d0d8dabf" translate="yes" xml:space="preserve">
          <source>Return the dot product of two vectors.</source>
          <target state="translated">Îëê Î≤°ÌÑ∞Ïùò ÎÇ¥Ï†ÅÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b8aec29562b12d28a48061980edb7e9ad8409ab8" translate="yes" xml:space="preserve">
          <source>Return the dot product without using the complex conjugate of the first argument.</source>
          <target state="translated">Ï≤´ Î≤àÏß∏ Ïù∏ÏàòÏùò Ïº§Î†à Î≥µÏÜåÏàòÎ•º ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÍ≥† ÎÇ¥Ï†ÅÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="58a8f7d6cc689c4ee04b9f9af9cce72e3092351c" translate="yes" xml:space="preserve">
          <source>Return the eigenvalues and eigenvectors of a complex Hermitian (conjugate symmetric) or a real symmetric matrix.</source>
          <target state="translated">Î≥µÏû°Ìïú Hermitian (Í≥µÏï° ÎåÄÏπ≠) ÎòêÎäî Ïã§Ï†ú ÎåÄÏπ≠ ÌñâÎ†¨Ïùò Í≥†Ïú† Í∞íÍ≥º Í≥†Ïú† Î≤°ÌÑ∞Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e82a01897b25aecd0a2bac345fb19171c1c47989" translate="yes" xml:space="preserve">
          <source>Return the element-wise remainder of division.</source>
          <target state="translated">ÏöîÏÜå Î≥Ñ ÎÇòÎàóÏÖàÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="15abca1b02af816fc2c7d92271c0ec14598e4aae" translate="yes" xml:space="preserve">
          <source>Return the element-wise square of the input.</source>
          <target state="translated">ÏûÖÎ†•Ïùò ÏöîÏÜå Î≥Ñ Ï†úÍ≥±ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b37cb7f4a8edbd4aaea1fdec4d291555569d0666" translate="yes" xml:space="preserve">
          <source>Return the elements of an array that satisfy some condition.</source>
          <target state="translated">Ïñ¥Îñ§ Ï°∞Í±¥ÏùÑ ÎßåÏ°±ÌïòÎäî Î∞∞Ïó¥Ïùò ÏöîÏÜåÎ•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="da4396b363749a7262ae6166356ce90b433945f5" translate="yes" xml:space="preserve">
          <source>Return the floor of the input, element-wise.</source>
          <target state="translated">ÏûÖÎ†•Ïùò Î∞îÎã•ÏùÑ ÏöîÏÜå Îã®ÏúÑÎ°ú Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="59525a02671ff78d902574c688c5db8c02befbc0" translate="yes" xml:space="preserve">
          <source>Return the fractional and integral parts of an array, element-wise.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò ÏÜåÏàò Î∂ÄÎ∂ÑÍ≥º Ï†ïÏàò Î∂ÄÎ∂ÑÏùÑ ÏöîÏÜå Îã®ÏúÑÎ°ú Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="515f47b4abb1dce9e97ea49d8204403e4611929e" translate="yes" xml:space="preserve">
          <source>Return the gradient of an N-dimensional array.</source>
          <target state="translated">N Ï∞®Ïõê Î∞∞Ïó¥Ïùò Í∏∞Ïö∏Í∏∞Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="54965ed70981b14b23ce26ba30cb8a61bb8dbfa1" translate="yes" xml:space="preserve">
          <source>Return the identity array.</source>
          <target state="translated">Ìï≠Îì± Î∞∞Ïó¥ÏùÑ ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="27e04984c1484e1e4dcf34d9dc6f11aff682b763" translate="yes" xml:space="preserve">
          <source>Return the imaginary part of the complex argument.</source>
          <target state="translated">Î≥µÏÜåÏàò Ïù∏ÏàòÏùò ÌóàÏàò Î∂ÄÎ∂ÑÏùÑ ÎèåÎ†§Ï§çÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="f32e7563dc1251e29d97c223a7b05292bf504e42" translate="yes" xml:space="preserve">
          <source>Return the indexes of the first occurrences of the maximum values along the specified axis. If axis is None, the index is for the flattened matrix.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Ï∂ïÏùÑ Îî∞Îùº ÏµúÎåÄ Í∞íÏù¥ Ï≤òÏùå ÎÇòÌÉÄÎÇòÎäî Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§. Ï∂ïÏù¥ ÏóÜÏùå Ïù∏ Í≤ΩÏö∞ Ïù∏Îç±Ïä§Îäî Ï†ÑÍ∞ú Îêú ÌñâÎ†¨Ïóê ÎåÄÌïú Í≤ÉÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="ef1228d8108fbf8d52c529bcc94d32966a7e5b27" translate="yes" xml:space="preserve">
          <source>Return the indexes of the first occurrences of the minimum values along the specified axis. If axis is None, the index is for the flattened matrix.</source>
          <target state="translated">ÏßÄÏ†ïÎêú Ï∂ïÏùÑ Îî∞Îùº ÏµúÏÜåÍ∞íÏù¥ Ï≤òÏùå ÎÇòÌÉÄÎÇòÎäî Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§. Ï∂ïÏù¥ ÏóÜÏùå Ïù∏ Í≤ΩÏö∞ Ïù∏Îç±Ïä§Îäî Ï†ÑÍ∞ú Îêú ÌñâÎ†¨Ïóê ÎåÄÌïú Í≤ÉÏûÖÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b5d360522b4f2a96bea2ce9398f71c49e37722bf" translate="yes" xml:space="preserve">
          <source>Return the indices for the lower-triangle of an (n, m) array.</source>
          <target state="translated">(n, m) Î∞∞Ïó¥Ïùò ÌïòÏúÑ ÏÇºÍ∞ÅÌòïÏóê ÎåÄÌïú Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="c1322e5a732eed85297de913acf0b27628cd9452" translate="yes" xml:space="preserve">
          <source>Return the indices for the lower-triangle of arr.</source>
          <target state="translated">arrÏùò Ìïò ÏÇºÍ∞ÅÏóê ÎåÄÌïú Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="44902a69b78de07a74336b790e1c31eddccc5838" translate="yes" xml:space="preserve">
          <source>Return the indices for the upper-triangle of an (n, m) array.</source>
          <target state="translated">(n, m) Î∞∞Ïó¥Ïùò ÏÉÅÎã® ÏÇºÍ∞ÅÌòïÏóê ÎåÄÌïú Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="08d7b25641bd326be0f5a2a4cfc7452db33961b0" translate="yes" xml:space="preserve">
          <source>Return the indices for the upper-triangle of arr.</source>
          <target state="translated">arrÏùò ÏÉÅÏúÑ ÏÇºÍ∞ÅÏóê ÎåÄÌïú Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b29dadabf708bcad650ad81ab36fa832a296c27d" translate="yes" xml:space="preserve">
          <source>Return the indices of the bins to which each value in input array belongs.</source>
          <target state="translated">ÏûÖÎ†• Î∞∞Ïó¥Ïùò Í∞Å Í∞íÏù¥ ÏÜçÌïòÎäî Íµ¨Í∞ÑÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="57114216c9d3e42a32857164a24535225ac0a426" translate="yes" xml:space="preserve">
          <source>Return the indices of the elements that are non-zero.</source>
          <target state="translated">0Ïù¥ ÏïÑÎãå ÏöîÏÜåÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="e17c758bfa538562da0c345226481fc6238a17c0" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values in the specified axis ignoring NaNs.</source>
          <target state="translated">NaNÏùÑ Î¨¥ÏãúÌïòÍ≥† ÏßÄÏ†ïÎêú Ï∂ïÏóêÏÑú ÏµúÎåÄ Í∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="2a20a6f54b6e3e86de467c01b7e0887a181f4546" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values in the specified axis ignoring NaNs. For all-NaN slices &lt;code&gt;ValueError&lt;/code&gt; is raised. Warning: the results cannot be trusted if a slice contains only NaNs and -Infs.</source>
          <target state="translated">NaNÏùÑ Î¨¥ÏãúÌïòÍ≥† ÏßÄÏ†ïÎêú Ï∂ïÏóêÏÑú ÏµúÎåÄ Í∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§. Î™®Îì† NaN Ïä¨ÎùºÏù¥Ïä§Ïùò Í≤ΩÏö∞ &lt;code&gt;ValueError&lt;/code&gt; Í∞Ä Î∞úÏÉùÌï©ÎãàÎã§. Í≤ΩÍ≥† : Ïä¨ÎùºÏù¥Ïä§Ïóê NaN Î∞è -Infs Îßå Ìè¨Ìï® Îêú Í≤ΩÏö∞ Í≤∞Í≥ºÎ•º Ïã†Î¢∞Ìï† Ïàò ÏóÜÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="45e4ea1c0f2fa42d3f6e2a5a187509f3f6638f38" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values.</source>
          <target state="translated">ÏµúÎåÄ Í∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="286dea54db15d8e84b11e2db5daed487563abbe3" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values in the specified axis ignoring NaNs.</source>
          <target state="translated">NaNÏùÑ Î¨¥ÏãúÌïòÍ≥† ÏßÄÏ†ïÎêú Ï∂ïÏóêÏÑú ÏµúÏÜåÍ∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4cb0c04e85bf537fe60e46b11458237f129ab9ca" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values in the specified axis ignoring NaNs. For all-NaN slices &lt;code&gt;ValueError&lt;/code&gt; is raised. Warning: the results cannot be trusted if a slice contains only NaNs and Infs.</source>
          <target state="translated">NaNÏùÑ Î¨¥ÏãúÌïòÍ≥† ÏßÄÏ†ïÎêú Ï∂ïÏóêÏÑú ÏµúÏÜåÍ∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§. Î™®Îì† NaN Ïä¨ÎùºÏù¥Ïä§Ïùò Í≤ΩÏö∞ &lt;code&gt;ValueError&lt;/code&gt; Í∞Ä Î∞úÏÉùÌï©ÎãàÎã§. Í≤ΩÍ≥† : Ïä¨ÎùºÏù¥Ïä§Ïóê NaN Î∞è Infs Îßå Ìè¨Ìï® Îêú Í≤ΩÏö∞ Í≤∞Í≥ºÎ•º Ïã†Î¢∞Ìï† Ïàò ÏóÜÏäµÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="191234538d4cd09da1e38080198d78f2b517790d" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values.</source>
          <target state="translated">ÏµúÏÜåÍ∞íÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="a8395f2b6b23337ed22750523af7576e4add042f" translate="yes" xml:space="preserve">
          <source>Return the indices of the non-zero elements of the input array.</source>
          <target state="translated">ÏûÖÎ†• Î∞∞Ïó¥ÏóêÏÑú 0Ïù¥ ÏïÑÎãå ÏöîÏÜåÏùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="b018b42e7dddbc80c723a674ff56f4709807d4ff" translate="yes" xml:space="preserve">
          <source>Return the indices of the original array that give the unique values:</source>
          <target state="translated">Í≥†Ïú† Í∞íÏùÑ Ï†úÍ≥µÌïòÎäî ÏõêÎûò Î∞∞Ïó¥Ïùò Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="4c353b46419aea81b7f823e72abae74eb21131eb" translate="yes" xml:space="preserve">
          <source>Return the indices of unmasked elements that are not zero.</source>
          <target state="translated">ÎßàÏä§ÌÅ¨ÎêòÏßÄ ÏïäÏùÄ ÏöîÏÜåÏùò Ïù∏Îç±Ïä§Í∞Ä 0Ïù¥ ÏïÑÎãå Í∞íÏùÑ Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="30e853c289f0a4c50584b3abf98ba2751b3843b3" translate="yes" xml:space="preserve">
          <source>Return the indices to access (n, n) arrays, given a masking function.</source>
          <target state="translated">ÎßàÏä§ÌÇπ Ìï®ÏàòÍ∞Ä Ï£ºÏñ¥ÏßÄÎ©¥ (n, n) Î∞∞Ïó¥Ïóê Ïï°ÏÑ∏Ïä§ÌïòÍ∏∞ ÏúÑÌï¥ Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌïòÏã≠ÏãúÏò§.</target>
        </trans-unit>
        <trans-unit id="07776a93c8082aece145909bfa76971f4d685e04" translate="yes" xml:space="preserve">
          <source>Return the indices to access the main diagonal of an array.</source>
          <target state="translated">Î∞∞Ïó¥Ïùò Ï£º ÎåÄÍ∞ÅÏÑ†Ïóê Ïï°ÏÑ∏Ïä§ÌïòÍ∏∞ ÏúÑÌï¥ Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
        <trans-unit id="3f740ddbb458c4878ea93f81c268f2934b93fc0e" translate="yes" xml:space="preserve">
          <source>Return the indices to access the main diagonal of an n-dimensional array.</source>
          <target state="translated">n Ï∞®Ïõê Î∞∞Ïó¥Ïùò Ï£º ÎåÄÍ∞ÅÏÑ†Ïóê Ïï°ÏÑ∏Ïä§ÌïòÍ∏∞ ÏúÑÌï¥ Ïù∏Îç±Ïä§Î•º Î∞òÌôòÌï©ÎãàÎã§.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
