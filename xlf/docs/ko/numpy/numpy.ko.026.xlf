<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="dd460618c23b006e03ad9f5131aa99bd51791802" translate="yes" xml:space="preserve">
          <source>chebpts2() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebpts2 () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="d38de44aa771c6146e43805d5853d4424068b2c1" translate="yes" xml:space="preserve">
          <source>chebroots() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebroots () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="a0c01b52d2cbe29ca28f8a88e38995a0c1cb155e" translate="yes" xml:space="preserve">
          <source>chebsub() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebsub () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="2f94425a411f389b1fa3da4a26f73a28e33c0f21" translate="yes" xml:space="preserve">
          <source>chebtrim() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebtrim () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="c3927d2869ede880e07f8e6f071739f6126deafc" translate="yes" xml:space="preserve">
          <source>chebval() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebval () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="96fec6b49c504bf3c9f74ba4be73ec1109cdb7b7" translate="yes" xml:space="preserve">
          <source>chebval2d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebval2d () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="c07f1735f0466640ec395edaa4e4c9bf5e5abc72" translate="yes" xml:space="preserve">
          <source>chebval3d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebval3d () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="581d237793418e7825fbb3d3bbcb2a5f24639726" translate="yes" xml:space="preserve">
          <source>chebvander() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebvander () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="ab08f8ba1290c177c53c2a563af4993f5449130b" translate="yes" xml:space="preserve">
          <source>chebvander2d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebvander2d () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="ea27096e22cc1705d8eaf5cc079ae3cb97692dbf" translate="yes" xml:space="preserve">
          <source>chebvander3d() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebvander3d () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="12d9eea401e68ac65378b871ad9ae2c5e7740c9e" translate="yes" xml:space="preserve">
          <source>chebweight() (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebweight () (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="5a3501e090867e009d827f2a3da6e00ec2b69ff6" translate="yes" xml:space="preserve">
          <source>chebx (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebx (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="7e4ce919c0dac120ad1d2d62e6ee0dcfba734df2" translate="yes" xml:space="preserve">
          <source>chebzero (in module numpy.polynomial.chebyshev)</source>
          <target state="translated">chebzero (numpy.polynomial.chebyshev 모듈)</target>
        </trans-unit>
        <trans-unit id="d7290533351d45636f24653403e55f494f934e81" translate="yes" xml:space="preserve">
          <source>chisquare() (in module numpy.random)</source>
          <target state="translated">chisquare () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="8ec3f8e8ee8f2bbeaad479e8cc4886ea011c6119" translate="yes" xml:space="preserve">
          <source>choice() (in module numpy.random)</source>
          <target state="translated">choice () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="9882ebdaffea81f72b5fe1cb9ffd3c121dbe727c" translate="yes" xml:space="preserve">
          <source>choice(a, size=None, replace=True, p=None, axis=0):</source>
          <target state="translated">선택 (a, size = None, replace = True, p = None, axis = 0) :</target>
        </trans-unit>
        <trans-unit id="b1e472e94afd0fe53768d1436d0bd203f18ffb0d" translate="yes" xml:space="preserve">
          <source>cholesky factorization of a matrix (&lt;code&gt;chol(a)&lt;/code&gt; in matlab returns an upper triangular matrix, but &lt;code&gt;linalg.cholesky(a)&lt;/code&gt; returns a lower triangular matrix)</source>
          <target state="translated">행렬의 cholesky 분해 ( matlab의 &lt;code&gt;chol(a)&lt;/code&gt; 는 상위 삼각 행렬을 반환하지만 &lt;code&gt;linalg.cholesky(a)&lt;/code&gt; 는 하위 삼각 행렬을 반환)</target>
        </trans-unit>
        <trans-unit id="715db4d07e163c133ba15c71bbee61c3f9fe49ed" translate="yes" xml:space="preserve">
          <source>cholesky() (in module numpy.linalg)</source>
          <target state="translated">cholesky () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="40f02258628b3f0bad711db6f6079f750a06de5f" translate="yes" xml:space="preserve">
          <source>choose() (in module numpy)</source>
          <target state="translated">choose () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="d76c34c79cf00add93e463054fe4592f63967161" translate="yes" xml:space="preserve">
          <source>class name</source>
          <target state="translated">수업 명</target>
        </trans-unit>
        <trans-unit id="a814a60721cb9d1368e5877060ee79bf1e966c6d" translate="yes" xml:space="preserve">
          <source>class of &lt;a href=&quot;#numpy.ogrid&quot;&gt;&lt;code&gt;ogrid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.mgrid#numpy.mgrid&quot;&gt;&lt;code&gt;mgrid&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;#numpy.ogrid&quot;&gt; &lt;code&gt;ogrid&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;numpy.mgrid#numpy.mgrid&quot;&gt; &lt;code&gt;mgrid&lt;/code&gt; &lt;/a&gt; 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="75531da240318b7fed636eec1882b36203273a71" translate="yes" xml:space="preserve">
          <source>class of &lt;a href=&quot;numpy.ogrid#numpy.ogrid&quot;&gt;&lt;code&gt;ogrid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numpy.mgrid&quot;&gt;&lt;code&gt;mgrid&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;numpy.ogrid#numpy.ogrid&quot;&gt; &lt;code&gt;ogrid&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#numpy.mgrid&quot;&gt; &lt;code&gt;mgrid&lt;/code&gt; &lt;/a&gt; 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="3def21de649e07bec6074edc1295c1dbf2cdb389" translate="yes" xml:space="preserve">
          <source>class.__array__()</source>
          <target state="translated">class.__array__()</target>
        </trans-unit>
        <trans-unit id="d8b8983057658ed3f6bdc85449803b72b3eaf62c" translate="yes" xml:space="preserve">
          <source>class.__array_finalize__()</source>
          <target state="translated">class.__array_finalize__()</target>
        </trans-unit>
        <trans-unit id="9eddbb2718caf79e115c786ba385877dcd11082b" translate="yes" xml:space="preserve">
          <source>class.__array_function__()</source>
          <target state="translated">class.__array_function__()</target>
        </trans-unit>
        <trans-unit id="5661d1a56502e8ac304b8cfb9310c81795c37acb" translate="yes" xml:space="preserve">
          <source>class.__array_prepare__()</source>
          <target state="translated">class.__array_prepare__()</target>
        </trans-unit>
        <trans-unit id="131c845b35b1d855c6e0a8648a35d2a20e71fb72" translate="yes" xml:space="preserve">
          <source>class.__array_priority__</source>
          <target state="translated">class.__array_priority__</target>
        </trans-unit>
        <trans-unit id="1a99c0e2e81c7dc5265f365bd9f859898939f7f3" translate="yes" xml:space="preserve">
          <source>class.__array_ufunc__()</source>
          <target state="translated">class.__array_ufunc__()</target>
        </trans-unit>
        <trans-unit id="a1d6fef3822241e04ca21da9bf9dcd3e7a0e96e0" translate="yes" xml:space="preserve">
          <source>class.__array_wrap__()</source>
          <target state="translated">class.__array_wrap__()</target>
        </trans-unit>
        <trans-unit id="7ed97478eca204c1f821d1fae79c1deea507a835" translate="yes" xml:space="preserve">
          <source>clean separation of C code from Python code</source>
          <target state="translated">Python 코드에서 C 코드를 깔끔하게 분리</target>
        </trans-unit>
        <trans-unit id="9cbc9887757a8ca1dde87ae0ace22133564ffce6" translate="yes" xml:space="preserve">
          <source>clip() (in module numpy)</source>
          <target state="translated">clip () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="680d2a09594daf12a1069779369ffb2e1cea1b49" translate="yes" xml:space="preserve">
          <source>close() (numpy.nditer method)</source>
          <target state="translated">close () (numpy.nditer 메서드)</target>
        </trans-unit>
        <trans-unit id="dea690f0fa5f30339f0fce6a0df780f955bddb62" translate="yes" xml:space="preserve">
          <source>clump_masked() (in module numpy.ma)</source>
          <target state="translated">clump_masked () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="5a3dc284504dcbfd6d3cdf2f10e5cd49810a71f9" translate="yes" xml:space="preserve">
          <source>clump_unmasked() (in module numpy.ma)</source>
          <target state="translated">clump_unmasked () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="ca957dc587e9b2990f27289d4476b100c53685b9" translate="yes" xml:space="preserve">
          <source>code generation</source>
          <target state="translated">코드 생성</target>
        </trans-unit>
        <trans-unit id="df58f74ab84d9fefcf0c7ccbd8033048f6bd78b7" translate="yes" xml:space="preserve">
          <source>coef() (numpy.poly1d property)</source>
          <target state="translated">coef () (numpy.poly1d 속성)</target>
        </trans-unit>
        <trans-unit id="eb61425ed72fb3da82763549e26c5a9eebf618c2" translate="yes" xml:space="preserve">
          <source>coefficients() (numpy.poly1d property)</source>
          <target state="translated">coefficients () (numpy.poly1d 속성)</target>
        </trans-unit>
        <trans-unit id="92ee54333e25bf863df2ae9faa5cbe5d7918b520" translate="yes" xml:space="preserve">
          <source>coeffs() (numpy.poly1d property)</source>
          <target state="translated">coeffs () (numpy.poly1d 속성)</target>
        </trans-unit>
        <trans-unit id="eaa53207ce05aebcca0109285580c37ac1e3becf" translate="yes" xml:space="preserve">
          <source>column_stack (in module numpy.ma)</source>
          <target state="translated">column_stack (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="5181b8cc99ce5a4fc3774b9c56e8f4cd408132ad" translate="yes" xml:space="preserve">
          <source>column_stack() (in module numpy)</source>
          <target state="translated">column_stack () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="9c2a143c1a523e8c38ebec39b270288313b71c4b" translate="yes" xml:space="preserve">
          <source>combination of the four above</source>
          <target state="translated">위의 네 가지 조합</target>
        </trans-unit>
        <trans-unit id="80b4b70218887135ccb0de632724a0b15a98de82" translate="yes" xml:space="preserve">
          <source>comment a line of code with the text &lt;code&gt;comment&lt;/code&gt;</source>
          <target state="translated">텍스트 &lt;code&gt;comment&lt;/code&gt; 으로 코드 줄에 주석 달기</target>
        </trans-unit>
        <trans-unit id="5b17a6c606a82dafd93db84a19945afe2d559ed4" translate="yes" xml:space="preserve">
          <source>comments</source>
          <target state="translated">comments</target>
        </trans-unit>
        <trans-unit id="ff51a47a2e8bd4a0e12b2a4ed15def10b2d33eda" translate="yes" xml:space="preserve">
          <source>common usage</source>
          <target state="translated">일반적인 사용법</target>
        </trans-unit>
        <trans-unit id="5fb74f66daf091e7dd1ecb8bbcc70002005933a1" translate="yes" xml:space="preserve">
          <source>common_fill_value() (in module numpy.ma)</source>
          <target state="translated">common_fill_value () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="ee1112f12f38b67ae14011999ef5ec696959118c" translate="yes" xml:space="preserve">
          <source>common_type() (in module numpy)</source>
          <target state="translated">common_type () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="26f60a5cce0c6d5b2e57e18b2d35ae1e36416abf" translate="yes" xml:space="preserve">
          <source>compare()</source>
          <target state="translated">compare()</target>
        </trans-unit>
        <trans-unit id="97b0d35bb30049a5d45e02b1831278b4eda22f51" translate="yes" xml:space="preserve">
          <source>compare_chararrays() (in module numpy.char)</source>
          <target state="translated">compare_chararrays () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="2dbfe4ebcd8fee7857b685ad78e3ed0d7adacd5d" translate="yes" xml:space="preserve">
          <source>compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; element-wise, and returns the maximum value from each pair</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 를 요소별로 비교 하고 각 쌍에서 최대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0bc6bb94a5841680eac8b24c50f7f203bddf6efb" translate="yes" xml:space="preserve">
          <source>comparison operators automatically remove whitespace from the end when comparing values</source>
          <target state="translated">비교 연산자는 값을 비교할 때 끝에서 공백을 자동으로 제거합니다</target>
        </trans-unit>
        <trans-unit id="5dc263fe5becfea01b176b6f2c59c47f5c9e30d7" translate="yes" xml:space="preserve">
          <source>compatible: C char</source>
          <target state="translated">호환 가능 : C char</target>
        </trans-unit>
        <trans-unit id="b6f3616403b91bcca29c6d66deaa259fca1c71c2" translate="yes" xml:space="preserve">
          <source>compatible: C double</source>
          <target state="translated">호환 가능 : C double</target>
        </trans-unit>
        <trans-unit id="3a60ffd6205d40bc856a671fa4e08cfcd110cecb" translate="yes" xml:space="preserve">
          <source>compatible: C float</source>
          <target state="translated">호환 가능 : C float</target>
        </trans-unit>
        <trans-unit id="f073b6de757df35ba247c55c3964d7d52b773758" translate="yes" xml:space="preserve">
          <source>compatible: C int</source>
          <target state="translated">호환 가능 : C int</target>
        </trans-unit>
        <trans-unit id="40b7f03aa1b19106a86c56ba50e037d5206c806b" translate="yes" xml:space="preserve">
          <source>compatible: C long float</source>
          <target state="translated">호환 가능 : C long float</target>
        </trans-unit>
        <trans-unit id="cb723e2b32584378f30a8735a6ef6e7629ebbc6b" translate="yes" xml:space="preserve">
          <source>compatible: C long long</source>
          <target state="translated">호환 가능 : C long long</target>
        </trans-unit>
        <trans-unit id="ecc77366a9b31571ae5448cf05363adc208831d1" translate="yes" xml:space="preserve">
          <source>compatible: C short</source>
          <target state="translated">호환 가능 : C short</target>
        </trans-unit>
        <trans-unit id="ed63752e426201568429c1b5c39a77e7730a00ec" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned char</source>
          <target state="translated">호환 가능 : C unsigned char</target>
        </trans-unit>
        <trans-unit id="6131bdfb33c7d418305b9d2cdc92ae85a5af9f2a" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned int</source>
          <target state="translated">호환 가능 : C unsigned int</target>
        </trans-unit>
        <trans-unit id="74f429a2c27a0294f21da19c5c441c9749998f2d" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned short</source>
          <target state="translated">호환 가능 : C unsigned short</target>
        </trans-unit>
        <trans-unit id="b6ba6a32bed64cf5a9232cd7c9d35670d71a6b95" translate="yes" xml:space="preserve">
          <source>compatible: Python bool</source>
          <target state="translated">호환 가능 : Python bool</target>
        </trans-unit>
        <trans-unit id="3a7c3ba21e5c9b98ff9493b3a2332bc01da2acf9" translate="yes" xml:space="preserve">
          <source>compatible: Python bytes</source>
          <target state="translated">호환 가능 : Python bytes</target>
        </trans-unit>
        <trans-unit id="ac5c35fe3ca1ebc8ca06a8c3de46cf6805f05c2e" translate="yes" xml:space="preserve">
          <source>compatible: Python complex</source>
          <target state="translated">호환 가능 : Python complex</target>
        </trans-unit>
        <trans-unit id="ccfe9ea4157b60f68bc564e103bab4c8e62c3310" translate="yes" xml:space="preserve">
          <source>compatible: Python float</source>
          <target state="translated">호환 가능 : Python float</target>
        </trans-unit>
        <trans-unit id="deaa9d9b419b938f9c813fe1389b8e5d682c08bc" translate="yes" xml:space="preserve">
          <source>compatible: Python int</source>
          <target state="translated">호환 가능 : Python int</target>
        </trans-unit>
        <trans-unit id="bb789842b4f097658b4d0daf408c1bf46047807e" translate="yes" xml:space="preserve">
          <source>compatible: Python unicode/str</source>
          <target state="translated">호환 가능 : Python 유니 코드 / str</target>
        </trans-unit>
        <trans-unit id="cf1f717d197fc8e5974b4f9084d38a7f517dbc38" translate="yes" xml:space="preserve">
          <source>compile it as &lt;code&gt;f2py -c var.pyf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f2py -c var.pyf&lt;/code&gt; 로 컴파일하십시오 .</target>
        </trans-unit>
        <trans-unit id="e94672708cbf9704f4ee27f82bcad62b6b2d70a6" translate="yes" xml:space="preserve">
          <source>compile() (in module numpy.f2py)</source>
          <target state="translated">compile () (numpy.f2py 모듈)</target>
        </trans-unit>
        <trans-unit id="6ff16b36dc77810e63bda254427a1d6965fa127a" translate="yes" xml:space="preserve">
          <source>complex</source>
          <target state="translated">complex</target>
        </trans-unit>
        <trans-unit id="b0943e701cd3bb43f80ab8d923713de62beda111" translate="yes" xml:space="preserve">
          <source>complex conjugate transpose of &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 복잡한 켤레 전치</target>
        </trans-unit>
        <trans-unit id="ad5f2438020ae87682ba05a117c31fb76179fa10" translate="yes" xml:space="preserve">
          <source>complex floating-point</source>
          <target state="translated">복잡한 부동 소수점</target>
        </trans-unit>
        <trans-unit id="5f1552bfeef0596a1536bf57e8099cc0fec3442d" translate="yes" xml:space="preserve">
          <source>complex numbers</source>
          <target state="translated">복소수</target>
        </trans-unit>
        <trans-unit id="1300290fac80e64e65c897cc636825b3bf98727c" translate="yes" xml:space="preserve">
          <source>complex types are structures with &lt;strong&gt;.real&lt;/strong&gt; and &lt;strong&gt;.imag&lt;/strong&gt; members (in that order).</source>
          <target state="translated">복합 유형은 &lt;strong&gt;.real&lt;/strong&gt; 및 &lt;strong&gt;.imag&lt;/strong&gt; 멤버 가있는 구조입니다 (순서대로).</target>
        </trans-unit>
        <trans-unit id="37255ef72b3305625faa9cc04c3ca5048e18518f" translate="yes" xml:space="preserve">
          <source>complex(nan, 0) is returned for complex nan inputs.</source>
          <target state="translated">복잡한 nan 입력에 대해 complex (nan, 0)이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="83690a45e3eae803665f74f69eb799f7d70796de" translate="yes" xml:space="preserve">
          <source>complex-floating point</source>
          <target state="translated">복잡한 부동 소수점</target>
        </trans-unit>
        <trans-unit id="0b13cc5b0f5953c11cf1d66539462d9bcb70e018" translate="yes" xml:space="preserve">
          <source>complex64/128 alignment has changed</source>
          <target state="translated">complex64 / 128 정렬이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="a8ecd550185cdfbf4b5cafbacdff1b27a0b87521" translate="yes" xml:space="preserve">
          <source>compress() (in module numpy)</source>
          <target state="translated">compress () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="218780efbde5d9204ce60293a68ff078433666cc" translate="yes" xml:space="preserve">
          <source>compress_cols() (in module numpy.ma)</source>
          <target state="translated">compress_cols () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="0af94334dfdba15883b4e7bc82db6d65c835e9d7" translate="yes" xml:space="preserve">
          <source>compress_rowcols() (in module numpy.ma)</source>
          <target state="translated">compress_rowcols () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="fd181a95d3d7769923d4e132bc11e1ea445d7321" translate="yes" xml:space="preserve">
          <source>compress_rows() (in module numpy.ma)</source>
          <target state="translated">compress_rows () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="79d85deb7083b40b36a44b1a9e2315ffc8586953" translate="yes" xml:space="preserve">
          <source>compressed() (in module numpy.ma)</source>
          <target state="translated">압축 () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="fb0e376fc8d7e393fd9b910442739652e0dd4ba2" translate="yes" xml:space="preserve">
          <source>concatenate columns of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 열 연결</target>
        </trans-unit>
        <trans-unit id="15705caf5a52fa95cd0f7e6c8e82601d5e667bc7" translate="yes" xml:space="preserve">
          <source>concatenate rows of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 행 연결</target>
        </trans-unit>
        <trans-unit id="f91ae2afd16f23d8ea3d65e147dd86e528e568dc" translate="yes" xml:space="preserve">
          <source>concatenate() (in module numpy)</source>
          <target state="translated">concatenate () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="fc716d4ba7af72a71b964ea7b0fa92e460cbfb88" translate="yes" xml:space="preserve">
          <source>cond() (in module numpy.linalg)</source>
          <target state="translated">cond () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="2fd4587e9b05a828702a43458bd940605bda98e3" translate="yes" xml:space="preserve">
          <source>config.add_library(&amp;lsquo;library&amp;rsquo;,</source>
          <target state="translated">config.add_library(&amp;lsquo;library&amp;rsquo;,</target>
        </trans-unit>
        <trans-unit id="dd5850fedeefdc811cc0e445479ded0a6afde62b" translate="yes" xml:space="preserve">
          <source>config.add_library()</source>
          <target state="translated">config.add_library()</target>
        </trans-unit>
        <trans-unit id="331bf2074c9d970b8ebe6d7d8e2ba60e3c0d9866" translate="yes" xml:space="preserve">
          <source>config[&amp;lsquo;py_modules&amp;rsquo;].append((packagename, &amp;lsquo;__config__&amp;rsquo;,generate_config_py))</source>
          <target state="translated">config [ 'py_modules']. append ((패키지 이름, '__config __', generate_config_py))</target>
        </trans-unit>
        <trans-unit id="e7d221bc608c207651cb22ffcbfb4f98d40bfefe" translate="yes" xml:space="preserve">
          <source>conj (in module numpy)</source>
          <target state="translated">conj (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="88b2d853129bb96da374c264dda50b4a2bf96df3" translate="yes" xml:space="preserve">
          <source>conj() (numpy.char.chararray method)</source>
          <target state="translated">conj () (numpy.char.chararray의 메서드)</target>
        </trans-unit>
        <trans-unit id="b542e61b6615b008eb010688839358da2c33cf6b" translate="yes" xml:space="preserve">
          <source>conjugate (in module numpy)</source>
          <target state="translated">켤레 (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="09458903a66f4f5ddf09614672302dc4447ff56f" translate="yes" xml:space="preserve">
          <source>conjugate transpose of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">의 공액 전치 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7fe5a4e2ecb76563c81a9572f8e828cb60f7005" translate="yes" xml:space="preserve">
          <source>conjugate() (numpy.char.chararray method)</source>
          <target state="translated">conjugate () (numpy.char.chararray의 메서드)</target>
        </trans-unit>
        <trans-unit id="b99126cb52e0ea3c508cec2b545109557b209042" translate="yes" xml:space="preserve">
          <source>construct a matrix from blocks &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, and &lt;code&gt;d&lt;/code&gt;</source>
          <target state="translated">블록 &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;c&lt;/code&gt; , &lt;code&gt;d&lt;/code&gt; 에서 행렬 생성</target>
        </trans-unit>
        <trans-unit id="535ae678fd33caa22f33566744706724ad7aa74c" translate="yes" xml:space="preserve">
          <source>construction</source>
          <target state="translated">construction</target>
        </trans-unit>
        <trans-unit id="aec35663cc08bdfda3337cd75b03461267a7d043" translate="yes" xml:space="preserve">
          <source>construction from None</source>
          <target state="translated">없음에서 건설</target>
        </trans-unit>
        <trans-unit id="619db471a0cc5d1c0f349ad38fad5c7e6ba9e0f7" translate="yes" xml:space="preserve">
          <source>construction from dict</source>
          <target state="translated">dict에서 건설</target>
        </trans-unit>
        <trans-unit id="061c0ead9fabb1afe0c755f8366b03529737c520" translate="yes" xml:space="preserve">
          <source>construction from dtype</source>
          <target state="translated">dtype에서 생성</target>
        </trans-unit>
        <trans-unit id="bf3f3709ecc8a88566bd68e6f49e96490f9d45f4" translate="yes" xml:space="preserve">
          <source>construction from list</source>
          <target state="translated">목록에서 건설</target>
        </trans-unit>
        <trans-unit id="ed53fb7a389bc8af6889decf80c45711a8378acf" translate="yes" xml:space="preserve">
          <source>construction from string</source>
          <target state="translated">문자열에서 구성</target>
        </trans-unit>
        <trans-unit id="ee0f4cf7c24d0a7489f0e61bcbdf105b79c8cc1a" translate="yes" xml:space="preserve">
          <source>construction from tuple</source>
          <target state="translated">튜플에서 생성</target>
        </trans-unit>
        <trans-unit id="94306437aee7a7084e7a3c861e9cd25b7f24b88b" translate="yes" xml:space="preserve">
          <source>construction from type</source>
          <target state="translated">유형에서 건설</target>
        </trans-unit>
        <trans-unit id="27be7169704392d4362795301a4837999e54a9dd" translate="yes" xml:space="preserve">
          <source>container (class in numpy.lib.user_array)</source>
          <target state="translated">컨테이너 (numpy.lib.user_array의 클래스)</target>
        </trans-unit>
        <trans-unit id="e1f0fc60613e7adfd585ec813dd3608c9a83a720" translate="yes" xml:space="preserve">
          <source>container class</source>
          <target state="translated">컨테이너 클래스</target>
        </trans-unit>
        <trans-unit id="3e424f4b706c2b2fa77351a6eefa4c650e2a096c" translate="yes" xml:space="preserve">
          <source>contiguous</source>
          <target state="translated">contiguous</target>
        </trans-unit>
        <trans-unit id="7b918272e30440e5c56aa0161da73b18f0b209c6" translate="yes" xml:space="preserve">
          <source>control how NumPy reports contiguity for arrays. The default that it is enabled and the debug mode is disabled. This setting should always be enabled. Setting the debug option can be interesting for testing code written in C which iterates through arrays that may or may not be contiguous in memory. Most users will have no reason to change these, for details please see the &lt;a href=&quot;https://numpy.org/doc/1.19/reference/memory-layout&quot;&gt;memory layout&lt;/a&gt; documentation.</source>
          <target state="translated">NumPy가 배열에 대한 연속성을보고하는 방법을 제어합니다. 기본값은 활성화되고 디버그 모드는 비활성화됩니다. 이 설정은 항상 활성화되어야합니다. 디버그 옵션을 설정하는 것은 메모리에서 연속적 일 수도 있고 아닐 수도있는 배열을 반복하는 C로 작성된 코드를 테스트 할 때 흥미로울 수 있습니다. 대부분의 사용자는이를 변경할 이유가 없습니다. 자세한 내용은 &lt;a href=&quot;https://numpy.org/doc/1.19/reference/memory-layout&quot;&gt;메모리 레이아웃&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0294d5d123645f2a4309e9b25a53e6ad6e6bcf6b" translate="yes" xml:space="preserve">
          <source>control how NumPy reports contiguity for arrays. The default that it is enabled and the debug mode is disabled. This setting should always be enabled. Setting the debug option can be interesting for testing code written in C which iterates through arrays that may or may not be contiguous in memory. Most users will have no reason to change these; for details see the &lt;a href=&quot;arrays.ndarray#memory-layout&quot;&gt;memory layout&lt;/a&gt; documentation.</source>
          <target state="translated">NumPy가 배열에 대한 연속성을보고하는 방법을 제어합니다. 기본값은 활성화되고 디버그 모드는 비활성화됩니다. 이 설정은 항상 활성화되어야합니다. 디버그 옵션을 설정하는 것은 메모리에서 연속적 일 수도 있고 아닐 수도있는 배열을 반복하는 C로 작성된 코드를 테스트 할 때 흥미로울 수 있습니다. 대부분의 사용자는이를 변경할 이유가 없습니다. 자세한 내용은 &lt;a href=&quot;arrays.ndarray#memory-layout&quot;&gt;메모리 레이아웃&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="861b5e7fd92cf98d6d3545cff1ed489ad723f192" translate="yes" xml:space="preserve">
          <source>convert single-element &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt;&lt;code&gt;ctypes.Union&lt;/code&gt;&lt;/a&gt;s into single-element &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt;&lt;code&gt;ctypes.Structure&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="translated">단일 요소로 변환 &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt; &lt;code&gt;ctypes.Union&lt;/code&gt; 는&lt;/a&gt; 단일 요소로이야 &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt; &lt;code&gt;ctypes.Structure&lt;/code&gt; &lt;/a&gt; 들</target>
        </trans-unit>
        <trans-unit id="b6531a385cf45309a968877a5b25982769948f9d" translate="yes" xml:space="preserve">
          <source>convert() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">convert () (numpy.polynomial.chebyshev.Chebyshev의 메서드)</target>
        </trans-unit>
        <trans-unit id="803f2e67aba54c292351bfae281e163242c28125" translate="yes" xml:space="preserve">
          <source>convolve() (in module numpy)</source>
          <target state="translated">convolve () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="0f424b5cb8f1c3681591bbe06573826adce5581a" translate="yes" xml:space="preserve">
          <source>coordinate of the outgoing ray&amp;rsquo;s intersection with the unit circle is the sine of that angle. It ranges from -1 for</source>
          <target state="translated">나가는 광선의 단위 원과의 교점 좌표는 해당 각도의 사인입니다. 범위는 -1입니다.</target>
        </trans-unit>
        <trans-unit id="e3b8af52da659b911061b76c9fab2709d9a1ace6" translate="yes" xml:space="preserve">
          <source>coords (numpy.flatiter attribute)</source>
          <target state="translated">coords (numpy.flatiter의 속성)</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="64128964e651ff8647e51e7e28a126f42d2615dc" translate="yes" xml:space="preserve">
          <source>copy (in module numpy.ma)</source>
          <target state="translated">복사 (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="8b7a5a6dab2979b222e8a439e53e4872290cef05" translate="yes" xml:space="preserve">
          <source>copy() (in module numpy)</source>
          <target state="translated">copy () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="fcec9ff1e5dc61093d99a831d658eac3035f5527" translate="yes" xml:space="preserve">
          <source>copy/in-place</source>
          <target state="translated">copy/in-place</target>
        </trans-unit>
        <trans-unit id="6545e8d6dcdd2eb58c6821c24f89d1f32babb595" translate="yes" xml:space="preserve">
          <source>copy=True</source>
          <target state="translated">copy=True</target>
        </trans-unit>
        <trans-unit id="25f60c889e8ea8c0e2ade969ec8faf5052c61227" translate="yes" xml:space="preserve">
          <source>copying and possibly casting data for any inputs or outputs for which buffers are necessary.</source>
          <target state="translated">버퍼가 필요한 입력 또는 출력에 대한 데이터 복사 및 캐스팅</target>
        </trans-unit>
        <trans-unit id="7887079595c277c87f68e757745e208bf0eaf3f5" translate="yes" xml:space="preserve">
          <source>copysign (in module numpy)</source>
          <target state="translated">copysign (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="45a0dabeeb29109bc2d28ed0ebf2023e137ec5fa" translate="yes" xml:space="preserve">
          <source>copyswap()</source>
          <target state="translated">copyswap()</target>
        </trans-unit>
        <trans-unit id="876097f4459c7470d6688d9ce159e4a8ccab704e" translate="yes" xml:space="preserve">
          <source>copyswapn()</source>
          <target state="translated">copyswapn()</target>
        </trans-unit>
        <trans-unit id="554d0ebac3e6a8e42c4fb3edf33badce9b18867d" translate="yes" xml:space="preserve">
          <source>copyto() (in module numpy)</source>
          <target state="translated">copyto () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b69afa0cf7141ebe0769d69668ad22a513252d4a" translate="yes" xml:space="preserve">
          <source>corrcoef() (in module numpy)</source>
          <target state="translated">corrcoef () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="3ef9f14d827f119ffa999ccc18cc855663164c0d" translate="yes" xml:space="preserve">
          <source>correlate</source>
          <target state="translated">correlate</target>
        </trans-unit>
        <trans-unit id="0819b5cb17864456f838a7fe51d62f185b23f8f6" translate="yes" xml:space="preserve">
          <source>correlate() (in module numpy)</source>
          <target state="translated">correlate () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="d2aed0bd06b228213d0a27ddb7443f7f45243234" translate="yes" xml:space="preserve">
          <source>corresponding function for ndarrays</source>
          <target state="translated">ndarray에 해당하는 기능</target>
        </trans-unit>
        <trans-unit id="0e637d88d91207fbb6f4c83b59c00afe528d0db4" translate="yes" xml:space="preserve">
          <source>corresponds to the offset (in bytes):</source>
          <target state="translated">오프셋 (바이트)에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="d8cf3ac7dca60449e1a426216ec4b31a8ff3319b" translate="yes" xml:space="preserve">
          <source>cos (in module numpy)</source>
          <target state="translated">cos (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="fd5f600b0fd36d468bcf8ff06532f55c661bb273" translate="yes" xml:space="preserve">
          <source>cosh (in module numpy)</source>
          <target state="translated">cosh (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="e4899ed91ff28b42a34bdd8392418d83db4fbcae" translate="yes" xml:space="preserve">
          <source>count (in module numpy.ma)</source>
          <target state="translated">count (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="74e3384425df18d7c6074da119ee809e26d021cb" translate="yes" xml:space="preserve">
          <source>count() (in module numpy.char)</source>
          <target state="translated">count () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="b5d6b9e022b20667b3a5157c9095d113489b0094" translate="yes" xml:space="preserve">
          <source>count_masked() (in module numpy.ma)</source>
          <target state="translated">count_masked () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="8b0c36250408d33c1092f36bec343df0b811acf1" translate="yes" xml:space="preserve">
          <source>count_nonzero() (in module numpy)</source>
          <target state="translated">count_nonzero () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="55610ff1e73080b27b25157ecb3ac05a69d9949f" translate="yes" xml:space="preserve">
          <source>cov has new &lt;code&gt;fweights&lt;/code&gt; and &lt;code&gt;aweights&lt;/code&gt; arguments</source>
          <target state="translated">cov에는 새로운 &lt;code&gt;fweights&lt;/code&gt; 및 &lt;code&gt;aweights&lt;/code&gt; 인수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c924f51f0e3833a81d6586f90143113d99b7c253" translate="yes" xml:space="preserve">
          <source>cov() (in module numpy)</source>
          <target state="translated">cov () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="25f153565c312fd00c39eaba2a67c74150b8be62" translate="yes" xml:space="preserve">
          <source>cpu (in module numpy.distutils.cpuinfo)</source>
          <target state="translated">cpu (numpy.distutils.cpuinfo 모듈)</target>
        </trans-unit>
        <trans-unit id="46be831c51c8e766d2aebaf7fe6dbef35f54919c" translate="yes" xml:space="preserve">
          <source>create a (read-only) record array from binary data contained in a string</source>
          <target state="translated">문자열에 포함 된 이진 데이터에서 (읽기 전용) 레코드 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="96928416e78912a094542c866c95adc9aadf5052" translate="yes" xml:space="preserve">
          <source>create a column vector</source>
          <target state="translated">열 벡터 생성</target>
        </trans-unit>
        <trans-unit id="28244d98521e9496fe84466a769190fe12dd1c67" translate="yes" xml:space="preserve">
          <source>create a recarray from a list of records in text form</source>
          <target state="translated">텍스트 형식의 레코드 목록에서 recarray를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="9767e68c8095efd4a9ea33ce259a6b88dbcf7a7a" translate="yes" xml:space="preserve">
          <source>create a record array from a (flat) list of arrays</source>
          <target state="translated">(플랫) 배열 목록에서 레코드 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2943117877140bf031e56f01dff8451549870d83" translate="yes" xml:space="preserve">
          <source>create an if-else statement to check if &lt;code&gt;a&lt;/code&gt; is 4 or 5 and print result</source>
          <target state="translated">if-else 문을 만들어 &lt;code&gt;a&lt;/code&gt; 가 4인지 5 인지 확인 하고 결과를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="face545fd1960961b918d9a8a47eb4713dc21cfe" translate="yes" xml:space="preserve">
          <source>create an increasing vector (see note &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;RANGES&lt;/a&gt;)</source>
          <target state="translated">증가하는 벡터 만들기 ( &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;RANGES&lt;/a&gt; 참고 )</target>
        </trans-unit>
        <trans-unit id="22cae5779e25221a7188951fbd20226638b98aab" translate="yes" xml:space="preserve">
          <source>create m by n copies of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">n 개의 복사본으로 m을 생성 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f8915bde7fef5934e28dee4ffea11584d399bef" translate="yes" xml:space="preserve">
          <source>creating a C-structure (usually named &lt;code&gt;Py{Name}Object&lt;/code&gt;) that is binary- compatible with the &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure itself but holds the additional information needed for that particular object;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt; 구조 자체 와 이진 호환 가능 하지만 해당 특정 오브젝트에 필요한 추가 정보를 보유 하는 C 구조 (일반적으로 &lt;code&gt;Py{Name}Object&lt;/code&gt; )를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="e6ad82f0e649e82403b39a772f1294f3512a9ac1" translate="yes" xml:space="preserve">
          <source>cross product where the last dimension is frozen and must be 3</source>
          <target state="translated">마지막 치수가 동결되어 3이어야하는 교차 곱</target>
        </trans-unit>
        <trans-unit id="c2d24a8a1de91728a57aa001330acdd6d624c5f0" translate="yes" xml:space="preserve">
          <source>cross() (in module numpy)</source>
          <target state="translated">cross () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="50f38d1083792f074814a156b3c79ea8aa55d751" translate="yes" xml:space="preserve">
          <source>cross1d</source>
          <target state="translated">cross1d</target>
        </trans-unit>
        <trans-unit id="13138fe488f51b39e09a3c9dc4862a176fedbacc" translate="yes" xml:space="preserve">
          <source>ctype</source>
          <target state="translated">ctype</target>
        </trans-unit>
        <trans-unit id="0d8768fe8ed5b3b50f265d1b36511b5e36a8af83" translate="yes" xml:space="preserve">
          <source>ctypes</source>
          <target state="translated">ctypes</target>
        </trans-unit>
        <trans-unit id="2f90aad65618261442aaa7b81c1ca6286bc79806" translate="yes" xml:space="preserve">
          <source>ctypes interface</source>
          <target state="translated">ctypes 인터페이스</target>
        </trans-unit>
        <trans-unit id="7c233d6bf43eb8eb1a3399298814ad44729dd73b" translate="yes" xml:space="preserve">
          <source>ctypes_load_library() (in module numpy.ctypeslib)</source>
          <target state="translated">ctypes_load_library () (numpy.ctypeslib 모듈)</target>
        </trans-unit>
        <trans-unit id="2f4fb557e103b7c59a646b4d99dd1afeb342195f" translate="yes" xml:space="preserve">
          <source>cumprod (in module numpy.ma)</source>
          <target state="translated">cumprod (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="0c4fa9d9d661e7bef173fe528cb68b0cf53de4d2" translate="yes" xml:space="preserve">
          <source>cumprod() (in module numpy)</source>
          <target state="translated">cumprod () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="2ed10f79103330788aa67575f6aa78092c158c66" translate="yes" xml:space="preserve">
          <source>cumsum (in module numpy.ma)</source>
          <target state="translated">cumsum (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="f866c480db2f514a1660097cf32c8431936583bf" translate="yes" xml:space="preserve">
          <source>cumsum() (in module numpy)</source>
          <target state="translated">cumsum () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="1d459f0c1fe5f3263aa5ba320fbfa6f7fbe6b0d4" translate="yes" xml:space="preserve">
          <source>current index in broadcasted result</source>
          <target state="translated">방송 결과의 현재 색인</target>
        </trans-unit>
        <trans-unit id="9bc6d7f5cdc982a5b5c64e1cdc1dd46448191ac1" translate="yes" xml:space="preserve">
          <source>cutdeg() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">cutdeg () (numpy.polynomial.chebyshev.Chebyshev의 메서드)</target>
        </trans-unit>
        <trans-unit id="58e50bc9c0407076689ad3679715778c25d47a4a" translate="yes" xml:space="preserve">
          <source>cyan_text() (in module numpy.distutils.misc_util)</source>
          <target state="translated">cyan_text () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="b84307c339632db39e0ce17c36ea17f79f71aa21" translate="yes" xml:space="preserve">
          <source>cyg2win32() (in module numpy.distutils.misc_util)</source>
          <target state="translated">cyg2win32 () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="b798d5ed9f6178d7bd39c0cc2eebe6889dd57698" translate="yes" xml:space="preserve">
          <source>cygwin</source>
          <target state="translated">cygwin</target>
        </trans-unit>
        <trans-unit id="f523ad3731da084ec2bff871d3db747f1c8312ae" translate="yes" xml:space="preserve">
          <source>cython (pip)</source>
          <target state="translated">cython (pip)</target>
        </trans-unit>
        <trans-unit id="34dc8e1804c0a14aeb717e91af443219be617042" translate="yes" xml:space="preserve">
          <source>darwin</source>
          <target state="translated">darwin</target>
        </trans-unit>
        <trans-unit id="42e30f210e53327143149ff57680b735bb58bd12" translate="yes" xml:space="preserve">
          <source>data (numpy.char.chararray attribute)</source>
          <target state="translated">데이터 (numpy.char.chararray 속성)</target>
        </trans-unit>
        <trans-unit id="06f89efb403077b8873b790bff97f657cfbcca59" translate="yes" xml:space="preserve">
          <source>data in the same field may be heterogeneous - they will be promoted to the highest data type.</source>
          <target state="translated">동일한 필드의 데이터는이기 종일 수 있으며 가장 높은 데이터 유형으로 승격됩니다.</target>
        </trans-unit>
        <trans-unit id="514b6c186c35fc54539a61efdeaf6a526df3d22d" translate="yes" xml:space="preserve">
          <source>data() (numpy.ma.masked_array property)</source>
          <target state="translated">data () (numpy.ma.masked_array 속성)</target>
        </trans-unit>
        <trans-unit id="0698e178c43f5ca032d10e380d5ce7d033ef4d81" translate="yes" xml:space="preserve">
          <source>datatype</source>
          <target state="translated">datatype</target>
        </trans-unit>
        <trans-unit id="78c2bf962c7ff4a2ba578da59e1c6984d83fdf48" translate="yes" xml:space="preserve">
          <source>datatype for output array</source>
          <target state="translated">출력 배열의 데이터 유형</target>
        </trans-unit>
        <trans-unit id="89ffad089c042f31dcc81269da38bef3ca44ab1f" translate="yes" xml:space="preserve">
          <source>datetime</source>
          <target state="translated">datetime</target>
        </trans-unit>
        <trans-unit id="f4c5786955a445c0963519000260e83ec90369c0" translate="yes" xml:space="preserve">
          <source>datetime64 changes</source>
          <target state="translated">datetime64 변경</target>
        </trans-unit>
        <trans-unit id="adc91338119543bcb36b467b5bdc026e4c377893" translate="yes" xml:space="preserve">
          <source>datetime_as_string() (in module numpy)</source>
          <target state="translated">datetime_as_string () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="bf0a49bdb65081ff86949c61b690c41007f12456" translate="yes" xml:space="preserve">
          <source>datetime_data() (in module numpy)</source>
          <target state="translated">datetime_data () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="a2620cbc10f5198dd03e3f5a1569eb5dcf9a6a87" translate="yes" xml:space="preserve">
          <source>day</source>
          <target state="translated">day</target>
        </trans-unit>
        <trans-unit id="a6cdce3593be9ec2a29961e2959ec8706e35990b" translate="yes" xml:space="preserve">
          <source>debug_print() (numpy.nditer method)</source>
          <target state="translated">debug_print () (numpy.nditer의 메서드)</target>
        </trans-unit>
        <trans-unit id="8f613003a3dc4ce3c0aa2ed1706a981b4a8efb7e" translate="yes" xml:space="preserve">
          <source>deciding whether or not to use buffers on the input and output data (mis-aligned and/or wrong data-type)</source>
          <target state="translated">입력 및 출력 데이터에 버퍼를 사용할지 여부 결정 (미스 정렬 및 / 또는 잘못된 데이터 유형)</target>
        </trans-unit>
        <trans-unit id="54f474fba3feafcf251e509610cb8602d9dc5a00" translate="yes" xml:space="preserve">
          <source>decode() (in module numpy.char)</source>
          <target state="translated">decode () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="75d994b7d1398cf793a6568add61044b6dc8996b" translate="yes" xml:space="preserve">
          <source>decorate_methods() (in module numpy.testing)</source>
          <target state="translated">decorate_methods () (numpy.testing 모듈)</target>
        </trans-unit>
        <trans-unit id="52d03a285acbd7b1cb4c0af2f80e9e9db926c0c9" translate="yes" xml:space="preserve">
          <source>decreases. The covariance matrix shows this clearly:</source>
          <target state="translated">감소합니다. 공분산 행렬은이를 명확하게 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="107500c863824eeac2f4fdc0078c651f143cb594" translate="yes" xml:space="preserve">
          <source>decreasing</source>
          <target state="translated">decreasing</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="5af8b24e6660e5b09f43329b07dade58389bf5d1" translate="yes" xml:space="preserve">
          <source>default_config_dict() (in module numpy.distutils.misc_util)</source>
          <target state="translated">default_config_dict () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="30be42fd575d90a8a1f735dc861100439e9bf428" translate="yes" xml:space="preserve">
          <source>default_fill_value() (in module numpy.ma)</source>
          <target state="translated">default_fill_value () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="739887860d6f7e3bce7e67a673f401c907c33d62" translate="yes" xml:space="preserve">
          <source>default_rng() (in module numpy.random)</source>
          <target state="translated">default_rng () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="4e8b15f70fa610729e4d1147c05a1c0fd4c0417d" translate="yes" xml:space="preserve">
          <source>define a 2x3 2D array</source>
          <target state="translated">2x3 2D 배열 정의</target>
        </trans-unit>
        <trans-unit id="6db774abb0c25975b61f6aa91c052ddf0e296ad2" translate="yes" xml:space="preserve">
          <source>deg2rad (in module numpy)</source>
          <target state="translated">deg2rad (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="7accea69b7734c0c2b18d5e687964c7c1ffe4437" translate="yes" xml:space="preserve">
          <source>degree() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">degree () (numpy.polynomial.chebyshev.Chebyshev의 메서드)</target>
        </trans-unit>
        <trans-unit id="454cc71cfccab4ce788458f6f97499557ea2a1ab" translate="yes" xml:space="preserve">
          <source>degrees (in module numpy)</source>
          <target state="translated">도 (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="0faeac4cdc5db6015136032d25c2e8590f786ad5" translate="yes" xml:space="preserve">
          <source>delete() (in module numpy)</source>
          <target state="translated">delete () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="47447d88f3f3309c863bfbcdeedb644af73f6345" translate="yes" xml:space="preserve">
          <source>delocate (pip)</source>
          <target state="translated">delocate (pip)</target>
        </trans-unit>
        <trans-unit id="5c0ec4c984cc2ae2eeaa723f06ebd1937df5e588" translate="yes" xml:space="preserve">
          <source>depends</source>
          <target state="translated">depends</target>
        </trans-unit>
        <trans-unit id="851a320e62543d474e18f6b5c2e5af2289800d1f" translate="yes" xml:space="preserve">
          <source>deprecate() (in module numpy)</source>
          <target state="translated">deprecate () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="dcb9f70c195028c2d85a67e91040b240613488ca" translate="yes" xml:space="preserve">
          <source>deprecate_with_doc() (in module numpy)</source>
          <target state="translated">deprecate_with_doc () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="56b0a13637baa92a244b091eea3d262238f94f2f" translate="yes" xml:space="preserve">
          <source>deprecated and removed features</source>
          <target state="translated">더 이상 사용되지 않고 제거 된 기능</target>
        </trans-unit>
        <trans-unit id="9ae976c3c0d316d843524434d94d2e9020a3d2c6" translate="yes" xml:space="preserve">
          <source>deprecated() (in module numpy.testing.dec)</source>
          <target state="translated">deprecated () (numpy.testing.dec 모듈)</target>
        </trans-unit>
        <trans-unit id="9deaad8e848c8a74deed6f2e84ae1d6efe134727" translate="yes" xml:space="preserve">
          <source>deriv() (numpy.poly1d method)</source>
          <target state="translated">deriv () (numpy.poly1d의 메서드)</target>
        </trans-unit>
        <trans-unit id="bddb160f8427059ace03b13012a6cdcafcdb690f" translate="yes" xml:space="preserve">
          <source>derivative of a polynomial</source>
          <target state="translated">다항식의 파생</target>
        </trans-unit>
        <trans-unit id="f62d7584e9b1d09a6e5bf09ee14b092d7c6ef992" translate="yes" xml:space="preserve">
          <source>descr (numpy.dtype attribute)</source>
          <target state="translated">descr (numpy.dtype 속성)</target>
        </trans-unit>
        <trans-unit id="63df73b031f4d587816621dedd13df2f4f9e81ee" translate="yes" xml:space="preserve">
          <source>describes the probability of</source>
          <target state="translated">확률을 설명</target>
        </trans-unit>
        <trans-unit id="1ad78bff8f556c8aead44f520b1070ea02bbee01" translate="yes" xml:space="preserve">
          <source>det() (in module numpy.linalg)</source>
          <target state="translated">det () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="d4e6e3c01fac8a2d031ca58cc4de7fe5906dc8df" translate="yes" xml:space="preserve">
          <source>determine a data-type from formats, names, titles.</source>
          <target state="translated">형식, 이름, 제목에서 데이터 유형을 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="d1e88d5d8c5a5ef55ff37e23074e335855f4b83e" translate="yes" xml:space="preserve">
          <source>diag() (in module numpy)</source>
          <target state="translated">diag () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="2d73149578affe290c5b827d7329105c5e2d9268" translate="yes" xml:space="preserve">
          <source>diag_indices() (in module numpy)</source>
          <target state="translated">diag_indices () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="9f7d32e921f1db641fd428954cb8421d63deac7c" translate="yes" xml:space="preserve">
          <source>diag_indices_from() (in module numpy)</source>
          <target state="translated">diag_indices_from () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="381ce62e558c0b0171ba55b71c3fa5c89a9ed0cb" translate="yes" xml:space="preserve">
          <source>diagflat() (in module numpy)</source>
          <target state="translated">diagflat () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b3b8d9663e32a5a6835c5d75b18e60b7e06176ac" translate="yes" xml:space="preserve">
          <source>diagonal 2-D array from a 1-D array specified by the user.</source>
          <target state="translated">사용자가 지정한 1 차원 배열의 대각선 2 차원 배열.</target>
        </trans-unit>
        <trans-unit id="1a7489d7507ae9b4ab35a6e875d77cffdde56bad" translate="yes" xml:space="preserve">
          <source>diagonal() (in module numpy)</source>
          <target state="translated">대각선 () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="c3aff8b3352ae4e5762d729395050e4c8c2d165d" translate="yes" xml:space="preserve">
          <source>dict or list of dict of keywords to be appended to keywords.</source>
          <target state="translated">키워드에 추가 할 키워드의 dict 또는 dict 목록.</target>
        </trans-unit>
        <trans-unit id="81b9e3a36870077b605d0d27515b92425c2b85fd" translate="yes" xml:space="preserve">
          <source>dict_append() (in module numpy.distutils.misc_util)</source>
          <target state="translated">dict_append () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="aad1af87e892ceb09bbeb99ee884890585bb0f3a" translate="yes" xml:space="preserve">
          <source>diff() (in module numpy)</source>
          <target state="translated">diff () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="5b7dcedc53b850c418147bf57c20afb93f4e6a5c" translate="yes" xml:space="preserve">
          <source>digit so that negative &lt;em&gt;decimals&lt;/em&gt; cause rounding to the nearest 10&amp;rsquo;s, 100&amp;rsquo;s, etc. If out is &lt;code&gt;NULL&lt;/code&gt;, then the output array is created, otherwise the output is placed in &lt;em&gt;out&lt;/em&gt; which must be the correct size and type.</source>
          <target state="translated">디지트 그래서 마이너스의 &lt;em&gt;소수&lt;/em&gt; 가까운 10의 100 개의 등에 라운딩 원인 아웃이면 &lt;code&gt;NULL&lt;/code&gt; 후 출력 배열이 생성되고, 그렇지 않다면 출력이 배치되어 &lt;em&gt;밖으로&lt;/em&gt; 정확한 크기 및 형태이어야한다.</target>
        </trans-unit>
        <trans-unit id="8e9a864e42514122e2addf6438f0b4a859e55b83" translate="yes" xml:space="preserve">
          <source>digitize() (in module numpy)</source>
          <target state="translated">digitize () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="47c51ca3143a5014455bedb536ca110a69960b1b" translate="yes" xml:space="preserve">
          <source>dimension or stride input arguments are now passed by &lt;code&gt;npy_intp const*&lt;/code&gt;</source>
          <target state="translated">dimension 또는 stride 입력 인수는 이제 &lt;code&gt;npy_intp const*&lt;/code&gt; 의해 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="770ead4b281a69b87ba814ae4b8562f19f32d83e" translate="yes" xml:space="preserve">
          <source>dimension.</source>
          <target state="translated">dimension.</target>
        </trans-unit>
        <trans-unit id="1e24bf4d3a658b06aab2a246837548270b36e18d" translate="yes" xml:space="preserve">
          <source>dimension. If dim is negative, then the dimension with the largest axis is found and used.</source>
          <target state="translated">치수. dim이 음수이면 축이 가장 큰 치수를 찾아 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3e61d25cc9eb0d69f33b6a8518b99e9e1980400e" translate="yes" xml:space="preserve">
          <source>dimensions of array</source>
          <target state="translated">배열의 차원</target>
        </trans-unit>
        <trans-unit id="b34287d3d8d0e7f58de46824d7fc6802d8a63b6d" translate="yes" xml:space="preserve">
          <source>dirichlet() (in module numpy.random)</source>
          <target state="translated">dirichlet () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="65af0351bcffcd198b7a8e7072a7a52674156c38" translate="yes" xml:space="preserve">
          <source>discard field titles</source>
          <target state="translated">필드 제목 삭제</target>
        </trans-unit>
        <trans-unit id="5d196e9b488404692df582fc83d89cd86c1de7d2" translate="yes" xml:space="preserve">
          <source>discard the class names of &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt;&lt;code&gt;ctypes.Structure&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt;&lt;code&gt;ctypes.Union&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt; &lt;code&gt;ctypes.Structure&lt;/code&gt; &lt;/a&gt; 의 클래스 이름을 버립니다 .Structure s and &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt; &lt;code&gt;ctypes.Union&lt;/code&gt; &lt;/a&gt; s</target>
        </trans-unit>
        <trans-unit id="efdc42df013315243fe9c974d7c2ce715499cdbb" translate="yes" xml:space="preserve">
          <source>disp() (in module numpy)</source>
          <target state="translated">disp () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="866ca3152fe58aab8fea8f1f36dcef620b6854ec" translate="yes" xml:space="preserve">
          <source>distribution is a generalization of the</source>
          <target state="translated">분포는</target>
        </trans-unit>
        <trans-unit id="82e943d406bbded98c104127488b1c684b96ea19" translate="yes" xml:space="preserve">
          <source>distribution.</source>
          <target state="translated">distribution.</target>
        </trans-unit>
        <trans-unit id="9d5c61b50b1fb9f50174dc923990e3b1afb8515b" translate="yes" xml:space="preserve">
          <source>distutils</source>
          <target state="translated">distutils</target>
        </trans-unit>
        <trans-unit id="2f77ebbb3a69cfc4c27845ee54925ad5ce6e475f" translate="yes" xml:space="preserve">
          <source>distutils.misc_util</source>
          <target state="translated">distutils.misc_util</target>
        </trans-unit>
        <trans-unit id="7a8df13a7cbf2465e1047ade0c4269ebc193d217" translate="yes" xml:space="preserve">
          <source>divide (in module numpy)</source>
          <target state="translated">나누기 (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="1f0fd2d43d9087e688e8de6afa22244319c890f3" translate="yes" xml:space="preserve">
          <source>divide : divide by zero (for integers as well!)</source>
          <target state="translated">나누기 : 0으로 나누기 (정수도 마찬가지입니다!)</target>
        </trans-unit>
        <trans-unit id="f6019054f02ac7a53244c4cd2c825272a147f164" translate="yes" xml:space="preserve">
          <source>divmod (in module numpy)</source>
          <target state="translated">divmod (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="cc9c31f3e79aa90255a8e8b22a1531b34440c436" translate="yes" xml:space="preserve">
          <source>divmod operation is now supported for two &lt;code&gt;timedelta64&lt;/code&gt; operands</source>
          <target state="translated">divmod 동작을위한 두 개의지지 &lt;code&gt;timedelta64&lt;/code&gt; 피연산자</target>
        </trans-unit>
        <trans-unit id="eadcd9bd2a09c75aef04954e6799e50278ee124a" translate="yes" xml:space="preserve">
          <source>do</source>
          <target state="translated">do</target>
        </trans-unit>
        <trans-unit id="4d05566dfc6bae47522d03d4262d6037630ed367" translate="yes" xml:space="preserve">
          <source>do_something()</source>
          <target state="translated">do_something()</target>
        </trans-unit>
        <trans-unit id="991df3b771771a539ddbf4310717613161e94259" translate="yes" xml:space="preserve">
          <source>doc.example (module)</source>
          <target state="translated">doc.example (모듈)</target>
        </trans-unit>
        <trans-unit id="3c7b7fd96947e7594c39c70a91a4b40c25881137" translate="yes" xml:space="preserve">
          <source>does what the earlier examples do, at near-C speeds, but with the code simplicity we expect from something based on Python. Indeed, the NumPy idiom is even simpler! This last example illustrates two of NumPy&amp;rsquo;s features which are the basis of much of its power: vectorization and broadcasting.</source>
          <target state="translated">C에 가까운 속도로 앞의 예제가 수행하는 작업을 수행하지만 코드 단순성으로 Python 기반에서 기대할 수 있습니다. 실제로 NumPy 관용구는 훨씬 더 간단합니다! 이 마지막 예제는 NumPy의 두 가지 기능, 즉 벡터화와 브로드 캐스팅의 기본 기능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8e374fbd1d241649219180e3f6556cdeb17929db" translate="yes" xml:space="preserve">
          <source>doesn&amp;rsquo;t change the original polynomial. However, all the multiplications and divisions will be done using Chebyshev series, hence the type of the result.</source>
          <target state="translated">원래 다항식을 변경하지 않습니다. 그러나 모든 곱셈과 나눗셈은 Chebyshev 시리즈를 사용하여 수행되므로 결과 유형입니다.</target>
        </trans-unit>
        <trans-unit id="88460b8925ad3b640cad87cdeca3a8f709d70d55" translate="yes" xml:space="preserve">
          <source>doesn&amp;rsquo;t necessarily avoid reference counting issues or needing to know API&amp;rsquo;s</source>
          <target state="translated">참조 계산 문제를 피하거나 API를 알아야하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="78fd1ae73a82b3a1b74caf412f9cd41abd1c3f97" translate="yes" xml:space="preserve">
          <source>domain (numpy.polynomial.chebyshev.Chebyshev attribute)</source>
          <target state="translated">도메인 (numpy.polynomial.chebyshev.Chebyshev의 속성)</target>
        </trans-unit>
        <trans-unit id="694d71d18774cd67340868fe72907c4b8e10c5cb" translate="yes" xml:space="preserve">
          <source>dot multiplication with two arguments.</source>
          <target state="translated">두 개의 인수로 점을 곱합니다.</target>
        </trans-unit>
        <trans-unit id="bc61afb2131286a2f026f864fdaa30af6e04a4bf" translate="yes" xml:space="preserve">
          <source>dot() (in module numpy)</source>
          <target state="translated">dot () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="9b68c564ce64db4710625469c36ad6b6c4888b72" translate="yes" xml:space="preserve">
          <source>dot_join() (in module numpy.distutils.misc_util)</source>
          <target state="translated">dot_join () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="d4c79ad04666f7fdb248656ac475c39c49d8eae1" translate="yes" xml:space="preserve">
          <source>dotblas functionality moved to multiarray</source>
          <target state="translated">dotblas 기능이 다중 어레이로 이동</target>
        </trans-unit>
        <trans-unit id="0e073e29338a1d41aba509d862c98767df169d86" translate="yes" xml:space="preserve">
          <source>dotfunc()</source>
          <target state="translated">dotfunc()</target>
        </trans-unit>
        <trans-unit id="620690cac5cb35ce8ef5eef5355ab35430f046f6" translate="yes" xml:space="preserve">
          <source>downsample with low-pass filtering</source>
          <target state="translated">저역 통과 필터링으로 다운 샘플링</target>
        </trans-unit>
        <trans-unit id="d2b995548c5e5ffd240554fb3e401782a157795a" translate="yes" xml:space="preserve">
          <source>draws have been made.</source>
          <target state="translated">추첨되었습니다.</target>
        </trans-unit>
        <trans-unit id="ba8ee1309c7446f271e55d3b58e36be787703cd9" translate="yes" xml:space="preserve">
          <source>drop_fields() (in module numpy.lib.recfunctions)</source>
          <target state="translated">drop_fields () (numpy.lib.recfunctions 모듈)</target>
        </trans-unit>
        <trans-unit id="e462e437ceb399e1208498f9d04c8391ac075db8" translate="yes" xml:space="preserve">
          <source>dsplit() (in module numpy)</source>
          <target state="translated">dsplit () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="3dfe7c786a0e64ffb8680d0571767f40916a49b4" translate="yes" xml:space="preserve">
          <source>dstack (in module numpy.ma)</source>
          <target state="translated">dstack (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="1908a4729f9c65fe9efd32f81786f7e4c28dcf6c" translate="yes" xml:space="preserve">
          <source>dstack() (in module numpy)</source>
          <target state="translated">dstack () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="63eb44aa9dfe2c9c81d4ede5c878a887b7f21327" translate="yes" xml:space="preserve">
          <source>dtype</source>
          <target state="translated">dtype</target>
        </trans-unit>
        <trans-unit id="38e6963e36b6a80a1c283bbc18ebe1a631261bae" translate="yes" xml:space="preserve">
          <source>dtype (class in numpy)</source>
          <target state="translated">dtype (numpy의 클래스)</target>
        </trans-unit>
        <trans-unit id="ac15f31cedeb9dc5577ec7e82aa97d89f820198c" translate="yes" xml:space="preserve">
          <source>dtype construction</source>
          <target state="translated">dtype 건설</target>
        </trans-unit>
        <trans-unit id="7d65447cf0f257af28849b8c6264dfb6d0f3cc3d" translate="yes" xml:space="preserve">
          <source>dtype object</source>
          <target state="translated">dtype 객체</target>
        </trans-unit>
        <trans-unit id="74f8b3e860a54f6ce7dfe64c37a38c6972a5c4ae" translate="yes" xml:space="preserve">
          <source>dtype objects also contain information about the type, such as its bit-width and its byte-order. The data type can also be used indirectly to query properties of the type, such as whether it is an integer:</source>
          <target state="translated">dtype 객체는 또한 비트 너비 및 바이트 순서와 같은 유형에 대한 정보를 포함합니다. 데이터 유형은 정수인지 여부와 같은 유형의 속성을 쿼리하는 데 간접적으로 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="928c656d6649516e98f229b8253aaf1d477c41b3" translate="yes" xml:space="preserve">
          <source>dtype or string representing a typecode.</source>
          <target state="translated">형식 코드를 나타내는 dtype 또는 문자열</target>
        </trans-unit>
        <trans-unit id="017bf752e596afc3d59b1da2acd4589bebab639d" translate="yes" xml:space="preserve">
          <source>dtype string representation changes</source>
          <target state="translated">dtype 문자열 표현 변경</target>
        </trans-unit>
        <trans-unit id="299bb8f66c98350ba3ea303ebe2eaa7a7a6b6698" translate="yes" xml:space="preserve">
          <source>dtype() (numpy.ma.masked_array property)</source>
          <target state="translated">dtype () (numpy.ma.masked_array 속성)</target>
        </trans-unit>
        <trans-unit id="332d69f959baeae98fab56a711f69c32c706efd6" translate="yes" xml:space="preserve">
          <source>dtype.__reduce__()</source>
          <target state="translated">dtype.__reduce__()</target>
        </trans-unit>
        <trans-unit id="730100d67fecfbd742c4f9c469301f51b1b99a56" translate="yes" xml:space="preserve">
          <source>dtype.__setstate__()</source>
          <target state="translated">dtype.__setstate__()</target>
        </trans-unit>
        <trans-unit id="e38718f6be450ebc34e5ddd2f1ad0af5be3a7136" translate="yes" xml:space="preserve">
          <source>dtype.alignment</source>
          <target state="translated">dtype.alignment</target>
        </trans-unit>
        <trans-unit id="db374eeb23adc6aee82545b34274ced73d22212c" translate="yes" xml:space="preserve">
          <source>dtype.base</source>
          <target state="translated">dtype.base</target>
        </trans-unit>
        <trans-unit id="b09b9918657426384fd293dc6c6dc3138d0f2199" translate="yes" xml:space="preserve">
          <source>dtype.byteorder</source>
          <target state="translated">dtype.byteorder</target>
        </trans-unit>
        <trans-unit id="92e0b0adaca929ce598d180d2eb305740982944d" translate="yes" xml:space="preserve">
          <source>dtype.char</source>
          <target state="translated">dtype.char</target>
        </trans-unit>
        <trans-unit id="deaff1f53e2ad4294b50ed2584b4636da61e8a5f" translate="yes" xml:space="preserve">
          <source>dtype.descr</source>
          <target state="translated">dtype.descr</target>
        </trans-unit>
        <trans-unit id="643c69696910fadd237a5b95224cd74870e072e1" translate="yes" xml:space="preserve">
          <source>dtype.fields</source>
          <target state="translated">dtype.fields</target>
        </trans-unit>
        <trans-unit id="3f0b3f86ae682e1188442eac207435a6f6dfd661" translate="yes" xml:space="preserve">
          <source>dtype.flags</source>
          <target state="translated">dtype.flags</target>
        </trans-unit>
        <trans-unit id="3fed29e361a9273c69431a619bf5089d888c355a" translate="yes" xml:space="preserve">
          <source>dtype.hasobject</source>
          <target state="translated">dtype.hasobject</target>
        </trans-unit>
        <trans-unit id="c993883c28f77d4fb4d9b9c7653c1c4053229c55" translate="yes" xml:space="preserve">
          <source>dtype.isalignedstruct</source>
          <target state="translated">dtype.isalignedstruct</target>
        </trans-unit>
        <trans-unit id="7404613141c76d96e843ccb003e901d11543f22b" translate="yes" xml:space="preserve">
          <source>dtype.isbuiltin</source>
          <target state="translated">dtype.isbuiltin</target>
        </trans-unit>
        <trans-unit id="40b005199a12bf495f9a9137b1e5d144d31a1398" translate="yes" xml:space="preserve">
          <source>dtype.isnative</source>
          <target state="translated">dtype.isnative</target>
        </trans-unit>
        <trans-unit id="67359b4731b252c0f6883cede588730e199d3828" translate="yes" xml:space="preserve">
          <source>dtype.itemsize</source>
          <target state="translated">dtype.itemsize</target>
        </trans-unit>
        <trans-unit id="7543bba29383632be32e1442fd17bf7baa1ca84e" translate="yes" xml:space="preserve">
          <source>dtype.kind</source>
          <target state="translated">dtype.kind</target>
        </trans-unit>
        <trans-unit id="132f511321791fccd55a21c80c94c2898b01d243" translate="yes" xml:space="preserve">
          <source>dtype.name</source>
          <target state="translated">dtype.name</target>
        </trans-unit>
        <trans-unit id="cd275094e503879b7398282e3495fec0708742a1" translate="yes" xml:space="preserve">
          <source>dtype.names</source>
          <target state="translated">dtype.names</target>
        </trans-unit>
        <trans-unit id="c587add7d7facce43a2ca773e3aba5630a3a13e3" translate="yes" xml:space="preserve">
          <source>dtype.ndim</source>
          <target state="translated">dtype.ndim</target>
        </trans-unit>
        <trans-unit id="e490c70d05e0843a2cb7f13b9081b6602a69fd04" translate="yes" xml:space="preserve">
          <source>dtype.newbyteorder()</source>
          <target state="translated">dtype.newbyteorder()</target>
        </trans-unit>
        <trans-unit id="9c151fb6198c46a7ca390ed7d96ccbfe4430ade1" translate="yes" xml:space="preserve">
          <source>dtype.num</source>
          <target state="translated">dtype.num</target>
        </trans-unit>
        <trans-unit id="325767462c26252bfff6926a88c21090ac111b72" translate="yes" xml:space="preserve">
          <source>dtype.shape</source>
          <target state="translated">dtype.shape</target>
        </trans-unit>
        <trans-unit id="0c91b0d5ab49b865064b0e437439035e7770aaf9" translate="yes" xml:space="preserve">
          <source>dtype.str</source>
          <target state="translated">dtype.str</target>
        </trans-unit>
        <trans-unit id="b804dc21220d6a81028d91158c7cdd7ef40b7d4b" translate="yes" xml:space="preserve">
          <source>dtype.subdtype</source>
          <target state="translated">dtype.subdtype</target>
        </trans-unit>
        <trans-unit id="29fe59ccc900093aa58b075484e1268349083728" translate="yes" xml:space="preserve">
          <source>dtype.type</source>
          <target state="translated">dtype.type</target>
        </trans-unit>
        <trans-unit id="058dcaff860d97a2bc6092edd26991f94472f233" translate="yes" xml:space="preserve">
          <source>dtypes (numpy.nditer attribute)</source>
          <target state="translated">dtypes (numpy.nditer 속성)</target>
        </trans-unit>
        <trans-unit id="33a0060b013379e2a0ddb1ff4fbacff62c7041fc" translate="yes" xml:space="preserve">
          <source>dtypes are now always true</source>
          <target state="translated">dtypes는 이제 항상 true입니다.</target>
        </trans-unit>
        <trans-unit id="80c62840b8faa70fb875cd42f090f0b6dfa17fdb" translate="yes" xml:space="preserve">
          <source>dump() (numpy.char.chararray method)</source>
          <target state="translated">dump () (numpy.char.chararray 메서드)</target>
        </trans-unit>
        <trans-unit id="a2e539266138dfe64d07c3d727d722d79efa6f37" translate="yes" xml:space="preserve">
          <source>dumps() (numpy.char.chararray method)</source>
          <target state="translated">dumps () (numpy.char.chararray 메서드)</target>
        </trans-unit>
        <trans-unit id="be4c2066d589acdc5a48edc2af530fc606035666" translate="yes" xml:space="preserve">
          <source>dynamic compiling and loading of generated C code</source>
          <target state="translated">생성 된 C 코드의 동적 컴파일 및로드</target>
        </trans-unit>
        <trans-unit id="85ccb9825dcdf406c557d9b08fe54b1e6132fced" translate="yes" xml:space="preserve">
          <source>e (in module numpy)</source>
          <target state="translated">e (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="d9abdff51e41712d497fb29b3ae9b0ea47034cb5" translate="yes" xml:space="preserve">
          <source>easy integration with NumPy through the ctypes attribute</source>
          <target state="translated">ctypes 속성을 통해 NumPy와 쉽게 통합</target>
        </trans-unit>
        <trans-unit id="9822786b415970fef7d2f7ac592cf1e09ff699a6" translate="yes" xml:space="preserve">
          <source>edgeitems : int</source>
          <target state="translated">edgeitems : int</target>
        </trans-unit>
        <trans-unit id="102e74e5d178a1ac90b1c96427e5d4de66e8f284" translate="yes" xml:space="preserve">
          <source>ediff1d() (in module numpy)</source>
          <target state="translated">ediff1d () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="8fccc85c272c540bc6a9ce3323f24dca5d95fb9e" translate="yes" xml:space="preserve">
          <source>eig() (in module numpy.linalg)</source>
          <target state="translated">eig () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="766f9fd09270216a651bfccb1ad6f0d19826494a" translate="yes" xml:space="preserve">
          <source>eigenvalues</source>
          <target state="translated">eigenvalues</target>
        </trans-unit>
        <trans-unit id="8e31d23407944ef257e18d0ac61fbbb56d9b4d36" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">고유 값 및 고유 벡터 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="604731e081ef9c2b0c693bab2858a824aef871f8" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; 의 고유 값과 고유 벡터</target>
        </trans-unit>
        <trans-unit id="8b8569df0972f74f25a93d295b37f82f8e9895ca" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of a real symmetric or complex Hermitian (conjugate symmetric) array.</source>
          <target state="translated">실제 대칭 또는 복소수 형 (공액 대칭) 배열의 고유 값과 고유 벡터.</target>
        </trans-unit>
        <trans-unit id="d74e977a44b66ffc1ce5ca067f3dcfcdb78fd65f" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of real symmetric or complex Hermitian (conjugate symmetric) arrays.</source>
          <target state="translated">실제 대칭 또는 복합 허미 티아 (공액 대칭) 배열의 고유 값과 고유 벡터.</target>
        </trans-unit>
        <trans-unit id="e24f362802624e65e988826294b76a57949106bb" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors for non-symmetric arrays.</source>
          <target state="translated">비대칭 배열의 고유 값과 올바른 고유 벡터</target>
        </trans-unit>
        <trans-unit id="3c11c77ba59e77db21d0c9051a06daa958f0973d" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors of general arrays</source>
          <target state="translated">일반 배열의 고유 값과 오른쪽 고유 벡터</target>
        </trans-unit>
        <trans-unit id="707ce0ac898709f67312be24165684fc84a8ae39" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors of general real or complex arrays.</source>
          <target state="translated">일반 실수 또는 복소수 배열의 고유 값과 오른쪽 고유 벡터.</target>
        </trans-unit>
        <trans-unit id="6b7c5bb27d21683dfaf6730db73e2b017e68dc33" translate="yes" xml:space="preserve">
          <source>eigenvalues of a non-symmetric array.</source>
          <target state="translated">비대칭 배열의 고유 값.</target>
        </trans-unit>
        <trans-unit id="ff63c2b33f1bf013fd7f73542f95a531334c4a3f" translate="yes" xml:space="preserve">
          <source>eigenvalues of a real symmetric or complex Hermitian (conjugate symmetric) array.</source>
          <target state="translated">실제 대칭 또는 복합 Hermitian (공액 대칭) 배열의 고유 값.</target>
        </trans-unit>
        <trans-unit id="69cf2a431c5864fe825349c3441fac497875c6b6" translate="yes" xml:space="preserve">
          <source>eigenvalues of general real or complex arrays.</source>
          <target state="translated">일반적인 실수 또는 복잡한 배열의 고유 값.</target>
        </trans-unit>
        <trans-unit id="a726573c83e56de369454207866153eb1d530393" translate="yes" xml:space="preserve">
          <source>eigenvalues of non-symmetric arrays.</source>
          <target state="translated">비대칭 배열의 고유 값.</target>
        </trans-unit>
        <trans-unit id="ebed1a1bd106374a4bbf615436b802d28e5a9fbc" translate="yes" xml:space="preserve">
          <source>eigenvalues of real symmetric or complex Hermitian (conjugate symmetric) arrays.</source>
          <target state="translated">실제 대칭 또는 복합 Hermitian (공액 대칭) 배열의 고유 값.</target>
        </trans-unit>
        <trans-unit id="0f50061babaec71959181b1e41f0e4098eeb7931" translate="yes" xml:space="preserve">
          <source>eigh() (in module numpy.linalg)</source>
          <target state="translated">eigh () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="c516c69b3dae3436cb28d6fb29c0f3afa699bcc8" translate="yes" xml:space="preserve">
          <source>eigvals() (in module numpy.linalg)</source>
          <target state="translated">eigvals () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="335455afe9ce2d17f279da6cae49b7e2968d1f1f" translate="yes" xml:space="preserve">
          <source>eigvalsh() (in module numpy.linalg)</source>
          <target state="translated">eigvalsh () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="c5a2f7e1cd2f3a148a44dad907e59efc12a07547" translate="yes" xml:space="preserve">
          <source>einsum() (in module numpy)</source>
          <target state="translated">einsum () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="79b8718f1020c5591183af9efc058e5ba31beeb8" translate="yes" xml:space="preserve">
          <source>einsum_path() (in module numpy)</source>
          <target state="translated">einsum_path () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="19d9bd654cc36fe459534bc83c4e672927ba2380" translate="yes" xml:space="preserve">
          <source>either (use &amp;lsquo;out&amp;rsquo; for in-place)</source>
          <target state="translated">둘 중 하나 (제자리에 'out'사용)</target>
        </trans-unit>
        <trans-unit id="764dfff4f99f1cba19be9b7bb87af681bbd73d32" translate="yes" xml:space="preserve">
          <source>element of</source>
          <target state="translated">의 요소</target>
        </trans-unit>
        <trans-unit id="b2139d4795963823f99b289e755ce8832883453f" translate="yes" xml:space="preserve">
          <source>element-by-element AND operator (NumPy ufunc) &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;See note LOGICOPS&lt;/a&gt;</source>
          <target state="translated">요소 별 AND 연산자 (NumPy ufunc) &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;참고 LOGICOPS 참조&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c7f2d7fb3f25882abfb7a810ad19360d6295967" translate="yes" xml:space="preserve">
          <source>element-by-element OR operator (NumPy ufunc) &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;See note LOGICOPS&lt;/a&gt;</source>
          <target state="translated">요소 별 OR 연산자 (NumPy ufunc) &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;참고 LOGICOPS 참조&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1d340e84ab391df39e876c58a014225247209b4" translate="yes" xml:space="preserve">
          <source>element-wise divide</source>
          <target state="translated">요소 별 나누기</target>
        </trans-unit>
        <trans-unit id="369aed3f90143b6273cec5d9d51bfddb6a033e6b" translate="yes" xml:space="preserve">
          <source>element-wise exponentiation</source>
          <target state="translated">요소 별 지수</target>
        </trans-unit>
        <trans-unit id="efe74a7ab762aa894b06b73a92fbe2deab383df4" translate="yes" xml:space="preserve">
          <source>element-wise multiply</source>
          <target state="translated">요소 별 곱하기</target>
        </trans-unit>
        <trans-unit id="f9dae9ec9db0e08ea99f4e05fd27891607a15765" translate="yes" xml:space="preserve">
          <source>elements when the shape in the selected axis is</source>
          <target state="translated">선택한 축의 모양이</target>
        </trans-unit>
        <trans-unit id="900198081b75108f6b121e67b33afd480337f02e" translate="yes" xml:space="preserve">
          <source>ellipsis</source>
          <target state="translated">ellipsis</target>
        </trans-unit>
        <trans-unit id="45d1376f728c4117afac7b8a5ba8098e1c1926d4" translate="yes" xml:space="preserve">
          <source>empty (in module numpy.ma)</source>
          <target state="translated">비어 있음 (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="c92b5d5b3d6585c8ee0c6746334e3922b6456cc9" translate="yes" xml:space="preserve">
          <source>empty() (in module numpy)</source>
          <target state="translated">empty () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b99389bbe00cc75c6fdedfdd92578f3ba8a38969" translate="yes" xml:space="preserve">
          <source>empty_like (in module numpy.ma)</source>
          <target state="translated">empty_like (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="a36a084a654e57268a36586bf62610a3a8c86f98" translate="yes" xml:space="preserve">
          <source>empty_like() (in module numpy)</source>
          <target state="translated">empty_like () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="e3a4b13abee5b4be00f5721b91a7d0878f784f6d" translate="yes" xml:space="preserve">
          <source>enable_external_loop() (numpy.nditer method)</source>
          <target state="translated">enable_external_loop () (numpy.nditer 메서드)</target>
        </trans-unit>
        <trans-unit id="4527096d6ffe48114355af2a695881ddcdfbc4ef" translate="yes" xml:space="preserve">
          <source>encode() (in module numpy.char)</source>
          <target state="translated">encode () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="78000dbc67facb8b0e8fa6e573192bc21de91a1c" translate="yes" xml:space="preserve">
          <source>endswith() (in module numpy.char)</source>
          <target state="translated">endswith () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="dc751783ce1248d4c57bfc1816da162546f2eb66" translate="yes" xml:space="preserve">
          <source>enforcement via transparent decision (see &lt;a href=&quot;report_handling_manual#coc-resolutions&quot;&gt;Resolutions&lt;/a&gt;) by the Code of Conduct Committee</source>
          <target state="translated">행동 강령위원회의 투명한 결정 ( &lt;a href=&quot;report_handling_manual#coc-resolutions&quot;&gt;결의안&lt;/a&gt; 참조 )을 통한 집행</target>
        </trans-unit>
        <trans-unit id="964763c3d00197be5d9f78deaecac83e62525be3" translate="yes" xml:space="preserve">
          <source>entire second row of 2D array &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">2D 배열 &lt;code&gt;a&lt;/code&gt; 전체 두 번째 행 a</target>
        </trans-unit>
        <trans-unit id="dc589cf870a667d65121c2d57280a2e54906415b" translate="yes" xml:space="preserve">
          <source>entire second row of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">전체 행의 제 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee2c074c5998ad8b1d0dc4c4c1367daa199a6a38" translate="yes" xml:space="preserve">
          <source>entropy (numpy.random.SeedSequence attribute)</source>
          <target state="translated">엔트로피 (numpy.random.SeedSequence 속성)</target>
        </trans-unit>
        <trans-unit id="46bf91fd3ebb0765cf0ca98b0e1ce3489c226464" translate="yes" xml:space="preserve">
          <source>equal (in module numpy)</source>
          <target state="translated">같음 (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="90ee6eda70e3acb362d8fda756dac6bdb5cbce7d" translate="yes" xml:space="preserve">
          <source>equal() (in module numpy.char)</source>
          <target state="translated">equal () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="ea1956830a633e72f92d87c2591365245e60e4c2" translate="yes" xml:space="preserve">
          <source>equivalent function</source>
          <target state="translated">동등한 기능</target>
        </trans-unit>
        <trans-unit id="db7c5989d3e7ec2ebb716cd0bee069b5f5178b0a" translate="yes" xml:space="preserve">
          <source>equivalent function when no data is missing.</source>
          <target state="translated">데이터가없는 경우 동등한 기능.</target>
        </trans-unit>
        <trans-unit id="624afe8ff81b138fbd886600e6d6138f83556f21" translate="yes" xml:space="preserve">
          <source>equivalent function; see for details.</source>
          <target state="translated">동등한 기능; 자세한 내용은 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1306883bced448604a8275a21bbf3cd6574a170d" translate="yes" xml:space="preserve">
          <source>equivalent method</source>
          <target state="translated">동등한 방법</target>
        </trans-unit>
        <trans-unit id="8006f608472f1bc24c0343e0f95d801801d506a3" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;nanpercentile(..., 50)&lt;/code&gt;</source>
          <target state="translated">등가 &lt;code&gt;nanpercentile(..., 50)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="016bcc0bb764e09458cabfaee03f3afd16405a35" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;nanquantile(..., 0.5)&lt;/code&gt;</source>
          <target state="translated">등가 &lt;code&gt;nanquantile(..., 0.5)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7735e981ef85e6afa72b957b018c92c8f163374b" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;percentile(..., 50)&lt;/code&gt;</source>
          <target state="translated">당량 &lt;code&gt;percentile(..., 50)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="116888ce0e584314fd11f62fe6e73c9386fdc3bd" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;quantile(..., 0.5)&lt;/code&gt;</source>
          <target state="translated">당량 &lt;code&gt;quantile(..., 0.5)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30faa2a9bff49f64b3fd07b91143a28f6ee9aef3" translate="yes" xml:space="preserve">
          <source>equivalent to nanpercentile, but with q in the range [0, 1].</source>
          <target state="translated">백분위 수에 해당하지만 q가 [0, 1] 범위에 있습니다.</target>
        </trans-unit>
        <trans-unit id="539494e85474bd22686dd584a10af20706cc33df" translate="yes" xml:space="preserve">
          <source>equivalent to percentile, except with q in the range [0, 1].</source>
          <target state="translated">[0, 1] 범위의 q를 제외하고 백분위 수와 같습니다.</target>
        </trans-unit>
        <trans-unit id="417b72406b46b2c5fcf5b9fcbcc60479d4142c68" translate="yes" xml:space="preserve">
          <source>equivalent to quantile, but with q in the range [0, 100].</source>
          <target state="translated">Quantile과 동일하지만 [0, 100] 범위의 q를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="f0a7a174240ced7d03adf452fe55943f3ef7b914" translate="yes" xml:space="preserve">
          <source>error handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="6fc6b4cdfc7444409a5ddd580841415db4178dd8" translate="yes" xml:space="preserve">
          <source>errstate (class in numpy)</source>
          <target state="translated">errstate (numpy의 클래스)</target>
        </trans-unit>
        <trans-unit id="c6f76fe76735d8e29b77a77d9d1e5cc572df7c46" translate="yes" xml:space="preserve">
          <source>errstate.__call__()</source>
          <target state="translated">errstate.__call__()</target>
        </trans-unit>
        <trans-unit id="6b942e2831f972c22e2b0292ea3a8176ab41cd3b" translate="yes" xml:space="preserve">
          <source>etc</source>
          <target state="translated">etc</target>
        </trans-unit>
        <trans-unit id="9f1ae7469b79e149e684fc56f162b516748b71f5" translate="yes" xml:space="preserve">
          <source>euler_gamma (in module numpy)</source>
          <target state="translated">euler_gamma (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="514e4425ab04e470a8365c9452d2149db06f58e5" translate="yes" xml:space="preserve">
          <source>evaluates pyfunc over input arrays using broadcasting rules of numpy</source>
          <target state="translated">numpy의 브로드 캐스트 규칙을 사용하여 입력 배열에 대한 pyfunc 평가</target>
        </trans-unit>
        <trans-unit id="26dcea074c0bd78db2feb7209b5d00e1e4b7d6f2" translate="yes" xml:space="preserve">
          <source>even if this would print more or fewer digits than necessary to specify the value uniquely.</source>
          <target state="translated">값을 고유하게 지정하는 데 필요한 것보다 많거나 적은 자릿수를 인쇄하더라도.</target>
        </trans-unit>
        <trans-unit id="5b57b830c94000da1160929bf7283ab86f49f3c2" translate="yes" xml:space="preserve">
          <source>even: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2) == a&lt;/code&gt;, within roundoff error,</source>
          <target state="translated">짝수 : &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2) == a&lt;/code&gt; , 반올림 오류 내에서,</target>
        </trans-unit>
        <trans-unit id="989fbbc4488f162d1512836c0d3a033b755440f4" translate="yes" xml:space="preserve">
          <source>even: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2)) == a&lt;/code&gt;, within roundoff error,</source>
          <target state="translated">짝수 : &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2)) == a&lt;/code&gt; , 반올림 오차 내에서,</target>
        </trans-unit>
        <trans-unit id="ce1488c0654de9ef5fb411e5e89d3ca5a3240457" translate="yes" xml:space="preserve">
          <source>events occurring within the observed interval</source>
          <target state="translated">관찰 된 간격 내에서 발생하는 이벤트</target>
        </trans-unit>
        <trans-unit id="0144f12663267b408b2f7925d3242c176b68f212" translate="yes" xml:space="preserve">
          <source>every other row of &lt;code&gt;a&lt;/code&gt;, starting with the first</source>
          <target state="translated">다른 모든 행 처음부터 시작하여 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55bef032effdd81931a148eaa732db622466a0e9" translate="yes" xml:space="preserve">
          <source>every other row of &lt;code&gt;a&lt;/code&gt;, starting with the third and going to the twenty-first</source>
          <target state="translated">세 번째부터 시작하여 21 번째 행으로 이어지는 &lt;code&gt;a&lt;/code&gt; 의 다른 모든 행</target>
        </trans-unit>
        <trans-unit id="725b04ae9d29ff5a599d418622d6dda1334b6e8e" translate="yes" xml:space="preserve">
          <source>exec_command</source>
          <target state="translated">exec_command</target>
        </trans-unit>
        <trans-unit id="df9559563b12462d8514749042e2ca31bec0c2dd" translate="yes" xml:space="preserve">
          <source>exec_command &amp;mdash; execute command in a specified directory and</source>
          <target state="translated">exec_command &amp;mdash; 지정된 디렉토리에서 명령을 실행하고</target>
        </trans-unit>
        <trans-unit id="73f62035aeb16abb834d936f3a217f95c3f72c2d" translate="yes" xml:space="preserve">
          <source>exists() (numpy.DataSource method)</source>
          <target state="translated">exist () (numpy.DataSource 메서드)</target>
        </trans-unit>
        <trans-unit id="ec8fbc156969365df62003e6b565ed514c0ff4ac" translate="yes" xml:space="preserve">
          <source>exp (in module numpy)</source>
          <target state="translated">exp (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="6b3605cab140409fb4bb5b1ed87cf372111d3254" translate="yes" xml:space="preserve">
          <source>exp : Exponential function log : Natural logarithm</source>
          <target state="translated">exp : 지수 함수 로그 : 자연 로그</target>
        </trans-unit>
        <trans-unit id="a16bad9a53c6f7c471be49458a89a3842eaafb4a" translate="yes" xml:space="preserve">
          <source>exp2 (in module numpy)</source>
          <target state="translated">exp2 (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="48b7ce12ec0288bbc44d493661658a0484e7b8af" translate="yes" xml:space="preserve">
          <source>expand_dims() (in module numpy)</source>
          <target state="translated">expand_dims () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="7aed5543baadcb85c77221780bbc427aa0d22b5b" translate="yes" xml:space="preserve">
          <source>expandtabs() (in module numpy.char)</source>
          <target state="translated">expandtabs () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="69a225569fccbfb8c3231cb324cc54c05e93c1b7" translate="yes" xml:space="preserve">
          <source>explicit constructor call (&lt;code&gt;obj = MySubClass(params)&lt;/code&gt;). This will call the usual sequence of &lt;code&gt;MySubClass.__new__&lt;/code&gt; then (if it exists) &lt;code&gt;MySubClass.__init__&lt;/code&gt;.</source>
          <target state="translated">명시 적 생성자 호출 ( &lt;code&gt;obj = MySubClass(params)&lt;/code&gt; ). 이것은 &lt;code&gt;MySubClass.__new__&lt;/code&gt; 의 일반적인 시퀀스를 호출하고 (존재하는 경우) &lt;code&gt;MySubClass.__init__&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3ccfbba11770830ba9441f215dee566c97fbb41e" translate="yes" xml:space="preserve">
          <source>expm1 (in module numpy)</source>
          <target state="translated">expm1 (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="2b5fe7c59e022c82975be9b329317cd1f232f91d" translate="yes" xml:space="preserve">
          <source>exponential() (in module numpy.random)</source>
          <target state="translated">exponential () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="4fa23bb0bb55db65982a50570e153f19001dd653" translate="yes" xml:space="preserve">
          <source>extending.pyx</source>
          <target state="translated">extending.pyx</target>
        </trans-unit>
        <trans-unit id="f6d5488c231d0315c936dd74c2a7e77ca42c6b81" translate="yes" xml:space="preserve">
          <source>extending_distributions.pyx</source>
          <target state="translated">extending_distributions.pyx</target>
        </trans-unit>
        <trans-unit id="92a3b0835ee4bb7e12eb176472deca3e6e14d755" translate="yes" xml:space="preserve">
          <source>extra_compiler_args</source>
          <target state="translated">extra_compiler_args</target>
        </trans-unit>
        <trans-unit id="f0bd321ffaea11e583890596abe8de7b908001cc" translate="yes" xml:space="preserve">
          <source>extra_f77_compile_args</source>
          <target state="translated">extra_f77_compile_args</target>
        </trans-unit>
        <trans-unit id="7c71ee0b5da58da5daab5fef2e127b9f275b5412" translate="yes" xml:space="preserve">
          <source>extra_f90_compile_args</source>
          <target state="translated">extra_f90_compile_args</target>
        </trans-unit>
        <trans-unit id="b8a26c3bbc1729a0a97dcd0efa43c381380cf5e7" translate="yes" xml:space="preserve">
          <source>extract the columms of &lt;code&gt;a&lt;/code&gt; where column vector v &amp;gt; 0.5</source>
          <target state="translated">columms의 추출 여기서 열 벡터 V&amp;gt; 0.5 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb32a335cb30ce5b736be5553097f25fb734c76e" translate="yes" xml:space="preserve">
          <source>extract the columms of &lt;code&gt;a&lt;/code&gt; where vector v &amp;gt; 0.5</source>
          <target state="translated">벡터 v&amp;gt; 0.5 인 &lt;code&gt;a&lt;/code&gt; 의 열을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="95bd73247d465bbb181c2a8e93978501a15e9bf8" translate="yes" xml:space="preserve">
          <source>extract() (in module numpy)</source>
          <target state="translated">extract () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="ee05ca9c5db63b176e79807ea64031c752546bc6" translate="yes" xml:space="preserve">
          <source>eye() (in module numpy)</source>
          <target state="translated">eye () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="bf96aecf558d13e47f6c0965b98e254906af5a17" translate="yes" xml:space="preserve">
          <source>f() (in module numpy.random)</source>
          <target state="translated">f () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="30abc3767275c9e9694ddaa0aa3a89c5570e0097" translate="yes" xml:space="preserve">
          <source>f2py</source>
          <target state="translated">f2py</target>
        </trans-unit>
        <trans-unit id="3c8ab99eb6d830dbc733e3cb618dbd9aeb6a11d2" translate="yes" xml:space="preserve">
          <source>f2py generated code may return unicode instead of byte strings</source>
          <target state="translated">f2py 생성 코드는 바이트 문자열 대신 유니 코드를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="327e22a8a02aed833a08c9f4d1d2dfe737445ffb" translate="yes" xml:space="preserve">
          <source>f2py script on Windows</source>
          <target state="translated">Windows의 f2py 스크립트</target>
        </trans-unit>
        <trans-unit id="34740c66e9bde6f63ede1c737388b71a9e995e98" translate="yes" xml:space="preserve">
          <source>f2py_options</source>
          <target state="translated">f2py_options</target>
        </trans-unit>
        <trans-unit id="97388acdc4bbf551fc080c0fdbe232a9f5ea522f" translate="yes" xml:space="preserve">
          <source>fabs (in module numpy)</source>
          <target state="translated">fabs (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="e9d740b92682a14a3d6b17e4d6fbc565d1c1241f" translate="yes" xml:space="preserve">
          <source>fast indexing support for arrays</source>
          <target state="translated">배열에 대한 빠른 인덱싱 지원</target>
        </trans-unit>
        <trans-unit id="713e3b0d003a0a96a88e01e6e325e3b1f3d0c4df" translate="yes" xml:space="preserve">
          <source>fastclip()</source>
          <target state="translated">fastclip()</target>
        </trans-unit>
        <trans-unit id="dfa68c18bac4cb0c07243b7b2a65d4a2ee78cd35" translate="yes" xml:space="preserve">
          <source>fastputmask()</source>
          <target state="translated">fastputmask()</target>
        </trans-unit>
        <trans-unit id="0caf8ed2e2c39d94bf72741f2ae9123e539fd8a3" translate="yes" xml:space="preserve">
          <source>fasttake()</source>
          <target state="translated">fasttake()</target>
        </trans-unit>
        <trans-unit id="c941609ac1d104a01c42e9b206912fdac5cc65e7" translate="yes" xml:space="preserve">
          <source>femtosecond</source>
          <target state="translated">femtosecond</target>
        </trans-unit>
        <trans-unit id="caf3162430104eb1135efc665aa1d1e4312952a4" translate="yes" xml:space="preserve">
          <source>fewer lines of code generally means fewer bugs</source>
          <target state="translated">코드 줄이 적다는 것은 일반적으로 버그가 적다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="714e10823230eb4fb73ec7052ea81023e7310a6f" translate="yes" xml:space="preserve">
          <source>fft() (in module numpy.fft)</source>
          <target state="translated">fft () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="7196aee88d4c325ab306ab93b6117c9d336ce285" translate="yes" xml:space="preserve">
          <source>fft2() (in module numpy.fft)</source>
          <target state="translated">fft2 () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="58069c78df0a9a40ce1487003fead6e577325b84" translate="yes" xml:space="preserve">
          <source>fftfreq() (in module numpy.fft)</source>
          <target state="translated">fftfreq () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="93963698a27187f9f37871d5825a0b1d6d1ca8cb" translate="yes" xml:space="preserve">
          <source>fftn() (in module numpy.fft)</source>
          <target state="translated">fftn () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="9329758eb6e2239ffcf4f3afebe4c3e9a5fe38e1" translate="yes" xml:space="preserve">
          <source>fftshift() (in module numpy.fft)</source>
          <target state="translated">fftshift () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="2da0b68df8841752bb747a76780679bcd87c6215" translate="yes" xml:space="preserve">
          <source>field</source>
          <target state="translated">field</target>
        </trans-unit>
        <trans-unit id="c4e6ecedb04033a6879435a60964c87b41b52d09" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f0&lt;/code&gt; containing a 3-character string</source>
          <target state="translated">3 자 문자열을 포함하는 &lt;code&gt;f0&lt;/code&gt; 이라는 필드</target>
        </trans-unit>
        <trans-unit id="55eb7ee3704413e2136f2f7ecb0a3f0bd2da893a" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f0&lt;/code&gt; containing a 32-bit integer</source>
          <target state="translated">32 비트 정수를 포함하는 &lt;code&gt;f0&lt;/code&gt; 이라는 필드</target>
        </trans-unit>
        <trans-unit id="f2dd8c98eeacb3a0454ce0d1e0c2cc24e9f0f733" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f1&lt;/code&gt; containing a 2 x 3 sub-array of 64-bit floating-point numbers</source>
          <target state="translated">64 비트 부동 소수점 숫자의 2 x 3 서브 어레이를 포함하는 &lt;code&gt;f1&lt;/code&gt; 이라는 필드</target>
        </trans-unit>
        <trans-unit id="a22cf569168c52ca030187440d4a10ddbfbfd8a9" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f1&lt;/code&gt; containing a sub-array of shape (3,) containing 64-bit unsigned integers</source>
          <target state="translated">64 비트 부호없는 정수를 포함하는 모양의 하위 배열 (3)을 포함하는 &lt;code&gt;f1&lt;/code&gt; 이라는 필드</target>
        </trans-unit>
        <trans-unit id="d08ab054c7e9d7d4ba38f5e4e61011a0066a55ea" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f2&lt;/code&gt; containing a 3 x 4 sub-array containing 10-character strings</source>
          <target state="translated">10 자 문자열을 포함하는 3 x 4 서브 어레이를 포함하는 &lt;code&gt;f2&lt;/code&gt; 라는 필드</target>
        </trans-unit>
        <trans-unit id="9891de86c73491b5ad58363d1eee27c1a869f365" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f2&lt;/code&gt; containing a 32-bit floating-point number</source>
          <target state="translated">32 비트 부동 소수점 숫자를 포함하는 &lt;code&gt;f2&lt;/code&gt; 라는 필드</target>
        </trans-unit>
        <trans-unit id="9b37ac716d049c8dc3c78c15b0d35e03ede7acca" translate="yes" xml:space="preserve">
          <source>field() (numpy.recarray method)</source>
          <target state="translated">field () (numpy.recarray의 메서드)</target>
        </trans-unit>
        <trans-unit id="bbc373999b12266580ba5d832060d096e74a4676" translate="yes" xml:space="preserve">
          <source>fields (numpy.dtype attribute)</source>
          <target state="translated">필드 (numpy.dtype 속성)</target>
        </trans-unit>
        <trans-unit id="8d8989cf616d19904ae3a5ff4c4a0ba319468b63" translate="yes" xml:space="preserve">
          <source>file.txt -&amp;gt; (., file.txt)-&amp;gt; parent/file.txt</source>
          <target state="translated">file.txt-&amp;gt; (., file.txt)-&amp;gt; parent / file.txt</target>
        </trans-unit>
        <trans-unit id="b10ef848ebbad89fe9348318d14a018b5aa082fb" translate="yes" xml:space="preserve">
          <source>fill()</source>
          <target state="translated">fill()</target>
        </trans-unit>
        <trans-unit id="87082ebf5eb734605c061a742d123a5e98f628f6" translate="yes" xml:space="preserve">
          <source>fill() (numpy.char.chararray method)</source>
          <target state="translated">fill () (numpy.char.chararray의 메서드)</target>
        </trans-unit>
        <trans-unit id="52586b62d4bd21b87b7665b4a445b3b186479b53" translate="yes" xml:space="preserve">
          <source>fill_diagonal() (in module numpy)</source>
          <target state="translated">fill_diagonal () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="fc86255e0c7aa14b8933d56328b22d406541614c" translate="yes" xml:space="preserve">
          <source>fill_value (numpy.ma.MaskedArray attribute)</source>
          <target state="translated">fill_value (numpy.ma.MaskedArray의 속성)</target>
        </trans-unit>
        <trans-unit id="9a5feb63525709f31c717f1870ec680d7c8ef5cc" translate="yes" xml:space="preserve">
          <source>fill_value() (numpy.ma.masked_array property)</source>
          <target state="translated">fill_value () (numpy.ma.masked_array 속성)</target>
        </trans-unit>
        <trans-unit id="323b1eef35f59fd8f0a786c091fb55003c809484" translate="yes" xml:space="preserve">
          <source>filled() (in module numpy.ma)</source>
          <target state="translated">filled () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="3bf985a9cbe36e6b54f12e53cbb84da9549bc938" translate="yes" xml:space="preserve">
          <source>fillwithscalar()</source>
          <target state="translated">fillwithscalar()</target>
        </trans-unit>
        <trans-unit id="3373018b9e0197e690a7e5f713648287ca160d36" translate="yes" xml:space="preserve">
          <source>filter() (numpy.testing.suppress_warnings method)</source>
          <target state="translated">filter () (numpy.testing.suppress_warnings 메서드)</target>
        </trans-unit>
        <trans-unit id="52457a8fc60c9f3405c9e086de9f858e97e1138d" translate="yes" xml:space="preserve">
          <source>filter_sources() (in module numpy.distutils.misc_util)</source>
          <target state="translated">filter_sources () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="0ec1328d8f8ed7f55ff95da7457864006f835a19" translate="yes" xml:space="preserve">
          <source>filtering functions in &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/ndimage.html#module-scipy.ndimage&quot;&gt;&lt;code&gt;scipy.ndimage&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/ndimage.html#module-scipy.ndimage&quot;&gt; &lt;code&gt;scipy.ndimage&lt;/code&gt; 의&lt;/a&gt; 필터링 함수</target>
        </trans-unit>
        <trans-unit id="39bc06b87e284271de70137b1e676bb4093be162" translate="yes" xml:space="preserve">
          <source>find out where &lt;em&gt;func&lt;/em&gt; is defined</source>
          <target state="translated">&lt;em&gt;func&lt;/em&gt; 가 정의 된 위치 알아보기</target>
        </trans-unit>
        <trans-unit id="8af3cb5d8e52f697d3e13d7e2c4ac9837e89821f" translate="yes" xml:space="preserve">
          <source>find the &lt;code&gt;k&lt;/code&gt; largest eigenvalues and eigenvectors of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">a의 &lt;code&gt;k&lt;/code&gt; 개의 가장 큰 고유 값과 고유 벡터를 찾으십시오 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1fff8b8b156b7da9cb42bc7af9589912a5b890a9" translate="yes" xml:space="preserve">
          <source>find the &lt;code&gt;k=3&lt;/code&gt; largest eigenvalues and eigenvectors of 2D array, &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">2D 배열 의 &lt;code&gt;k=3&lt;/code&gt; 가장 큰 고유 값과 고유 벡터를 찾으십시오 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8819141187b47187cb7702601f5207277e548a1" translate="yes" xml:space="preserve">
          <source>find the indices where (&lt;code&gt;a&lt;/code&gt; &amp;gt; 0.5)</source>
          <target state="translated">( &lt;code&gt;a&lt;/code&gt; &amp;gt; 0.5) 인덱스를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="a19f4f3111e3f2da24f14b73dc7c956219a65bbe" translate="yes" xml:space="preserve">
          <source>find() (in module numpy.char)</source>
          <target state="translated">find () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="78ca34b36cdc542cbf9ce4c090eb82a4dc64d20d" translate="yes" xml:space="preserve">
          <source>find_common_type() (in module numpy)</source>
          <target state="translated">find_common_type () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="8b83c87c3416026b076b7f78b91237887831d897" translate="yes" xml:space="preserve">
          <source>find_duplicates() (in module numpy.lib.recfunctions)</source>
          <target state="translated">find_duplicates () (numpy.lib.recfunctions 모듈)</target>
        </trans-unit>
        <trans-unit id="34c563a47a7ec77153f984f51d54ab4ee9f00244" translate="yes" xml:space="preserve">
          <source>find_executable &amp;mdash; locate a command using info from environment</source>
          <target state="translated">find_ executable &amp;mdash; 환경 정보를 사용하여 명령을 찾습니다</target>
        </trans-unit>
        <trans-unit id="ef51befcc1e02e58a2e0d5d1deeddd798df08f4f" translate="yes" xml:space="preserve">
          <source>finfo (class in numpy)</source>
          <target state="translated">finfo (numpy의 클래스)</target>
        </trans-unit>
        <trans-unit id="206bb07570d244e8d01269aec441b56c880c1eac" translate="yes" xml:space="preserve">
          <source>finished (numpy.nditer attribute)</source>
          <target state="translated">완료 됨 (numpy.nditer 속성)</target>
        </trans-unit>
        <trans-unit id="90a300b71a53c69d71d8cb7f827014a99c28a97c" translate="yes" xml:space="preserve">
          <source>first 5 rows of 2D array &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">2D 배열 &lt;code&gt;a&lt;/code&gt; 의 처음 5 개 행</target>
        </trans-unit>
        <trans-unit id="44491eab6ec3cd9e85ac367a87e79463bdd5e585" translate="yes" xml:space="preserve">
          <source>fit() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">fit () (numpy.polynomial.chebyshev.Chebyshev 클래스 메서드)</target>
        </trans-unit>
        <trans-unit id="5d459b462f5e28a84a0aa6c34c7d16f7aedb6b3d" translate="yes" xml:space="preserve">
          <source>fix() (in module numpy)</source>
          <target state="translated">fix () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="68d67d0f6e5021c7862c5e9a6654045fa465fb73" translate="yes" xml:space="preserve">
          <source>fix_invalid() (in module numpy.ma)</source>
          <target state="translated">fix_invalid () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="08e8fbbf851437ec84f288c35c369fb2524070bb" translate="yes" xml:space="preserve">
          <source>flags (numpy.char.chararray attribute)</source>
          <target state="translated">플래그 (numpy.char.chararray 속성)</target>
        </trans-unit>
        <trans-unit id="649adc91552d9200989ef4536551bac064614ef7" translate="yes" xml:space="preserve">
          <source>flags:</source>
          <target state="translated">flags:</target>
        </trans-unit>
        <trans-unit id="8f27e4f0b0e1fabc56425bc40b6e79fabb64c9af" translate="yes" xml:space="preserve">
          <source>flake8</source>
          <target state="translated">flake8</target>
        </trans-unit>
        <trans-unit id="189b2a7c6546f7add7185b89effd64888a9adf74" translate="yes" xml:space="preserve">
          <source>flat (numpy.char.chararray attribute)</source>
          <target state="translated">flat (numpy.char.chararray 속성)</target>
        </trans-unit>
        <trans-unit id="e61540f087503c1f760ac7a7eb2d4d7261a060da" translate="yes" xml:space="preserve">
          <source>flat() (numpy.lib.Arrayterator property)</source>
          <target state="translated">flat () (numpy.lib.Arrayterator 속성)</target>
        </trans-unit>
        <trans-unit id="2709c73dd56d611ecc8fa09799ffbe4bc3f993f1" translate="yes" xml:space="preserve">
          <source>flatiter (class in numpy)</source>
          <target state="translated">flatiter (numpy의 클래스)</target>
        </trans-unit>
        <trans-unit id="9eda71accad55a82028c98ee54aab74d7d1d8e1e" translate="yes" xml:space="preserve">
          <source>flatiter.base</source>
          <target state="translated">flatiter.base</target>
        </trans-unit>
        <trans-unit id="e63e8acf5e5b985c9ef39d6d2e5bca40431592cf" translate="yes" xml:space="preserve">
          <source>flatiter.coords</source>
          <target state="translated">flatiter.coords</target>
        </trans-unit>
        <trans-unit id="71980daa41701f7dd66e3122ef6c46e253e371e0" translate="yes" xml:space="preserve">
          <source>flatiter.copy()</source>
          <target state="translated">flatiter.copy()</target>
        </trans-unit>
        <trans-unit id="111d72b58214fd5edc49ae5bd99efcae33b94e7c" translate="yes" xml:space="preserve">
          <source>flatiter.index</source>
          <target state="translated">flatiter.index</target>
        </trans-unit>
        <trans-unit id="78870306a27cc2f96878d65528776b08b14377ea" translate="yes" xml:space="preserve">
          <source>flatnonzero() (in module numpy)</source>
          <target state="translated">flatnonzero () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="cfd8000071ae6c15bf310c8bee0f2532397bc5c8" translate="yes" xml:space="preserve">
          <source>flatnotmasked_contiguous() (in module numpy.ma)</source>
          <target state="translated">flatnotmasked_contiguous () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="dfcc4abe24f28a526eec67e8496cc25a7b5c8e4d" translate="yes" xml:space="preserve">
          <source>flatnotmasked_edges() (in module numpy.ma)</source>
          <target state="translated">flatnotmasked_edges () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="314a58b2686e027cc887ea8b9d331e73cfb86f21" translate="yes" xml:space="preserve">
          <source>flatten() (numpy.char.chararray method)</source>
          <target state="translated">flatten () (numpy.char.chararray의 메서드)</target>
        </trans-unit>
        <trans-unit id="5886850896adbe693e4648245035fb0de7dd11ef" translate="yes" xml:space="preserve">
          <source>flatten_descr() (in module numpy.lib.recfunctions)</source>
          <target state="translated">flatten_descr () (numpy.lib.recfunctions 모듈)</target>
        </trans-unit>
        <trans-unit id="ac6636e36f5e2f037ea735a4e0d0630255d15f1f" translate="yes" xml:space="preserve">
          <source>flexible</source>
          <target state="translated">flexible</target>
        </trans-unit>
        <trans-unit id="1aeb3ece66a667978f3aaf736d31b8f00a413261" translate="yes" xml:space="preserve">
          <source>flip() (in module numpy)</source>
          <target state="translated">flip () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="7c8f92d99ba7855465faeb61d3da7c7d16021c75" translate="yes" xml:space="preserve">
          <source>flip(m) corresponds to &lt;code&gt;m[::-1,::-1,...,::-1]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at all positions.</source>
          <target state="translated">플립 (m)에 대응 &lt;code&gt;m[::-1,::-1,...,::-1]&lt;/code&gt; 과 &lt;code&gt;::-1&lt;/code&gt; 모든 위치에서.</target>
        </trans-unit>
        <trans-unit id="06a8719f83f8ee20f4a5eda0096a85dbf966db8b" translate="yes" xml:space="preserve">
          <source>flip(m, (0, 1)) corresponds to &lt;code&gt;m[::-1,::-1,...]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at position 0 and position 1.</source>
          <target state="translated">flip (m, (0, 1)) 은 위치 0에 위치 1과 위치 1에 &lt;code&gt;::-1&lt;/code&gt; 이 있는 &lt;code&gt;m[::-1,::-1,...]&lt;/code&gt; 에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="7b1b52175a077136da59a35cf9a58cfe4d7c569e" translate="yes" xml:space="preserve">
          <source>flip(m, 0) is equivalent to flipud(m).</source>
          <target state="translated">flip (m, 0)은 flipud (m)와 같습니다.</target>
        </trans-unit>
        <trans-unit id="baa1935b7e3f0e41dfa49a231f8b3cbe0667b373" translate="yes" xml:space="preserve">
          <source>flip(m, 1) is equivalent to fliplr(m).</source>
          <target state="translated">flip (m, 1)은 fliplr (m)과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a868dfd7e4c2dd932bb00349ea3d224b34bd402c" translate="yes" xml:space="preserve">
          <source>flip(m, n) corresponds to &lt;code&gt;m[...,::-1,...]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at position n.</source>
          <target state="translated">flip (m, n) 은 위치 n에 &lt;code&gt;::-1&lt;/code&gt; 이 있는 &lt;code&gt;m[...,::-1,...]&lt;/code&gt; 에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="0ccbc9b3b70e34d66bd6a8b375c5827d853854b0" translate="yes" xml:space="preserve">
          <source>fliplr() (in module numpy)</source>
          <target state="translated">fliplr () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b7213bad9c966b51cdd19312a9fe058a21b516fd" translate="yes" xml:space="preserve">
          <source>flipud() (in module numpy)</source>
          <target state="translated">flipud () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="9f25035ded8071d3e0237fffb8b3e2ccdd4179eb" translate="yes" xml:space="preserve">
          <source>float128 values now print correctly on ppc systems</source>
          <target state="translated">이제 float128 값이 ppc 시스템에서 올바르게 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="622be6eba8adcf08630e037f6582791064e40963" translate="yes" xml:space="preserve">
          <source>float_power (in module numpy)</source>
          <target state="translated">float_power (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b093abee54a9fde98b4eb34f8a1f370eea716fab" translate="yes" xml:space="preserve">
          <source>floating-point</source>
          <target state="translated">floating-point</target>
        </trans-unit>
        <trans-unit id="95f6168b24eeb31a8d6fc82fac33485bfd0297ae" translate="yes" xml:space="preserve">
          <source>floor (in module numpy)</source>
          <target state="translated">floor (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="f1d4d15e23194d92c9a1b98f0e2fcd88bea778ea" translate="yes" xml:space="preserve">
          <source>floor_divide (in module numpy)</source>
          <target state="translated">floor_divide (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="ba4460382c5b9073386c7a0014f9147181379c3e" translate="yes" xml:space="preserve">
          <source>flush() (numpy.memmap method)</source>
          <target state="translated">flush () (numpy.memmap의 메서드)</target>
        </trans-unit>
        <trans-unit id="614abe062892098112cd7e75a4e19dc3ee08d602" translate="yes" xml:space="preserve">
          <source>fmax (in module numpy)</source>
          <target state="translated">fmax (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="76ef6b3f5487646abbb7958bf60dbeb4dd313cd3" translate="yes" xml:space="preserve">
          <source>fmin (in module numpy)</source>
          <target state="translated">fmin (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="c756fde722f7b443fe3fca0c2c6d211575fb2bd9" translate="yes" xml:space="preserve">
          <source>fmod (in module numpy)</source>
          <target state="translated">fmod (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="e0913290570412a6300e5cf8040bac1fa137b796" translate="yes" xml:space="preserve">
          <source>foo() (in module doc.example)</source>
          <target state="translated">foo () (doc.example 모듈)</target>
        </trans-unit>
        <trans-unit id="12b8d7939cd264eecdb244e9a94f3079d47d15bf" translate="yes" xml:space="preserve">
          <source>foo/&lt;code&gt;*&lt;/code&gt;.txt`` -&amp;gt; parent/foo/a.txt, parent/foo/b.txt</source>
          <target state="translated">foo / &lt;code&gt;*&lt;/code&gt; .txt ''-&amp;gt; parent / foo / a.txt, parent / foo / b.txt</target>
        </trans-unit>
        <trans-unit id="833ea48d42ae7901c509d4b894d199b92cdabbc8" translate="yes" xml:space="preserve">
          <source>foo/file.txt -&amp;gt; (foo, foo/file.txt) -&amp;gt; parent/foo/file.txt</source>
          <target state="translated">foo / file.txt-&amp;gt; (foo, foo / file.txt)-&amp;gt; parent / foo / file.txt</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="507d778eee60076496a3254a83432c83ecd323ab" translate="yes" xml:space="preserve">
          <source>for &lt;a href=&quot;#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;, which is then returned.</source>
          <target state="translated">대한 &lt;a href=&quot;#numpy.pv&quot;&gt; &lt;code&gt;pv&lt;/code&gt; &lt;/a&gt; , 후 반환된다.</target>
        </trans-unit>
        <trans-unit id="4c85b1033cb05ead376e57c9c2abdb237426dc49" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;pmt&lt;/code&gt;.</source>
          <target state="translated">대한 &lt;code&gt;pmt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75f5bf14a755ac1d35f667b483875d227ec687b8" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;rate&lt;/code&gt;.</source>
          <target state="translated">에 대한 &lt;code&gt;rate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="641bb69e72489381cd39638cd090b0b13192fc14" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and 0 elsewhere.</source>
          <target state="translated">대한 &lt;code&gt;x &amp;gt; 0&lt;/code&gt; 0 곳.</target>
        </trans-unit>
        <trans-unit id="6f23394f1b08a704d28df11c3d83d02417d48588" translate="yes" xml:space="preserve">
          <source>for P(x) the probability of &lt;code&gt;x&lt;/code&gt; good results in the drawn sample, g = &lt;code&gt;ngood&lt;/code&gt;, b = &lt;code&gt;nbad&lt;/code&gt;, and n = &lt;code&gt;nsample&lt;/code&gt;.</source>
          <target state="translated">P (x)의 경우 &lt;code&gt;x&lt;/code&gt; good 확률은 추출 된 샘플, g = &lt;code&gt;ngood&lt;/code&gt; , b = &lt;code&gt;nbad&lt;/code&gt; 및 n = &lt;code&gt;nsample&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="179ef9d820f49da9bd41e05c05743fd4c38c8387" translate="yes" xml:space="preserve">
          <source>for SciPy, supported NumPy version(s)</source>
          <target state="translated">SciPy의 경우 지원되는 NumPy 버전</target>
        </trans-unit>
        <trans-unit id="c59644f8c38524a802838e9b8763976ea96db31b" translate="yes" xml:space="preserve">
          <source>for definition of the DFT and conventions used.</source>
          <target state="translated">사용 된 DFT 및 규칙의 정의</target>
        </trans-unit>
        <trans-unit id="8a0c03f6d6ff423e672049e7ead64d00eba0178b" translate="yes" xml:space="preserve">
          <source>for instance.</source>
          <target state="translated">예를 들어.</target>
        </trans-unit>
        <trans-unit id="2eccc35166ccc0fe84164ed3f8705715de695948" translate="yes" xml:space="preserve">
          <source>for-loops.</source>
          <target state="translated">for-loops.</target>
        </trans-unit>
        <trans-unit id="bf06383e6c52e1d0e21e07daf1320beee1e277d7" translate="yes" xml:space="preserve">
          <source>format_float_positional() (in module numpy)</source>
          <target state="translated">format_float_positional () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="d316f6a073b07a2b8786611c0ada34cf396c1c6e" translate="yes" xml:space="preserve">
          <source>format_float_scientific() (in module numpy)</source>
          <target state="translated">format_float_scientific () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="889d10aad85da4573470f1d5d4221e456124a62c" translate="yes" xml:space="preserve">
          <source>format_parser (class in numpy)</source>
          <target state="translated">format_parser (numpy의 클래스)</target>
        </trans-unit>
        <trans-unit id="d9944c746c536ce904925b517e008347a60c708a" translate="yes" xml:space="preserve">
          <source>formatter : dict of callables</source>
          <target state="translated">포맷터 : 콜 러블의 dict</target>
        </trans-unit>
        <trans-unit id="10ed514c3b8115e81d1e5dd1eb905b6a54376a35" translate="yes" xml:space="preserve">
          <source>frexp (in module numpy)</source>
          <target state="translated">frexp (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="ed8e521212a12ac7e4d0fb093513b06d504d46cb" translate="yes" xml:space="preserve">
          <source>from None</source>
          <target state="translated">없음에서</target>
        </trans-unit>
        <trans-unit id="fc06fa909803b087f74192b7ada1cbdf105f1b91" translate="yes" xml:space="preserve">
          <source>from None, dtype</source>
          <target state="translated">None, dtype에서</target>
        </trans-unit>
        <trans-unit id="c1806a800a22f9b5349fc86e1a1a7aea3cf619e7" translate="yes" xml:space="preserve">
          <source>from Python.</source>
          <target state="translated">파이썬에서.</target>
        </trans-unit>
        <trans-unit id="4fd7ad719be1fd8671ddcef389110aa45f112d40" translate="yes" xml:space="preserve">
          <source>from an interpreter will run all the test routine in &amp;lsquo;test_matlib.py&amp;rsquo;.</source>
          <target state="translated">통역사는 'test_matlib.py'의 모든 테스트 루틴을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="a56f0017f9e13b83ce1ddc76e01935de92ecce4b" translate="yes" xml:space="preserve">
          <source>from dict</source>
          <target state="translated">dict에서</target>
        </trans-unit>
        <trans-unit id="d0f2eed171b0cd9a8467a7d257d0f15fe21881b9" translate="yes" xml:space="preserve">
          <source>from dict, dtype</source>
          <target state="translated">dict, dtype에서</target>
        </trans-unit>
        <trans-unit id="edfc8631157375950c7cd8c4401ac6a84a89056d" translate="yes" xml:space="preserve">
          <source>from dtype</source>
          <target state="translated">dtype에서</target>
        </trans-unit>
        <trans-unit id="6185c25d0a8fba6f7fd5d33f922700e43be5ca10" translate="yes" xml:space="preserve">
          <source>from dtype, dtype</source>
          <target state="translated">dtype, dtype에서</target>
        </trans-unit>
        <trans-unit id="f78ceeae52e6af41dcda4b7bfeca58204b20b672" translate="yes" xml:space="preserve">
          <source>from list</source>
          <target state="translated">목록에서</target>
        </trans-unit>
        <trans-unit id="d0648e58f30367c8b278cda4a29b97ba3dd42be8" translate="yes" xml:space="preserve">
          <source>from list, dtype</source>
          <target state="translated">목록에서, dtype</target>
        </trans-unit>
        <trans-unit id="314e62e8a3f0d6f865ca4af18b8a3a1a95ebf8fb" translate="yes" xml:space="preserve">
          <source>from string</source>
          <target state="translated">문자열에서</target>
        </trans-unit>
        <trans-unit id="fcdf6423c0a7b962f1552e1176ec9969b53c230d" translate="yes" xml:space="preserve">
          <source>from string, dtype</source>
          <target state="translated">문자열에서, dtype</target>
        </trans-unit>
        <trans-unit id="a912e777fc698825555dca9b36374034e4f369f3" translate="yes" xml:space="preserve">
          <source>from the array. This can be a useful construct for defining recursive algorithms. To loop over the entire array requires</source>
          <target state="translated">배열에서. 이것은 재귀 알고리즘을 정의하는 데 유용한 구성이 될 수 있습니다. 전체 배열을 반복하려면</target>
        </trans-unit>
        <trans-unit id="7df586a54524690164fa949416cc1a0867d8bd2c" translate="yes" xml:space="preserve">
          <source>from the beginning of the memory block associated with the array. Here,</source>
          <target state="translated">어레이와 관련된 메모리 블록의 시작부터. 여기,</target>
        </trans-unit>
        <trans-unit id="4c6f4f49023eabbf0f0689d39ae7144629a6d391" translate="yes" xml:space="preserve">
          <source>from tuple</source>
          <target state="translated">튜플에서</target>
        </trans-unit>
        <trans-unit id="c6eb47329d29746a741df04a74229729e407b7cb" translate="yes" xml:space="preserve">
          <source>from tuple, dtype</source>
          <target state="translated">튜플에서, dtype</target>
        </trans-unit>
        <trans-unit id="655862a48e73381de75028468ee5f8fb6a691a34" translate="yes" xml:space="preserve">
          <source>from type</source>
          <target state="translated">유형에서</target>
        </trans-unit>
        <trans-unit id="cc4923cad27bcf958e36d6d176e1026b95823fe1" translate="yes" xml:space="preserve">
          <source>from type, dtype</source>
          <target state="translated">유형, dtype에서</target>
        </trans-unit>
        <trans-unit id="9de2673c94ba7aa5130ddde8b22c977a39f59c4a" translate="yes" xml:space="preserve">
          <source>fromarrays() (in module numpy.core.records)</source>
          <target state="translated">fromarrays () (numpy.core.records 모듈)</target>
        </trans-unit>
        <trans-unit id="998666c78448b2e201fcc2721a55b998fd264ad0" translate="yes" xml:space="preserve">
          <source>frombuffer (in module numpy.ma)</source>
          <target state="translated">frombuffer (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="a09a2291b073194a9e4e4c3261e6402d5c7c9fb1" translate="yes" xml:space="preserve">
          <source>frombuffer() (in module numpy)</source>
          <target state="translated">frombuffer () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="54b8eed4383b240b888c4c4b126b05239024fac9" translate="yes" xml:space="preserve">
          <source>fromfile() (in module numpy)</source>
          <target state="translated">fromfile () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="67dd76eb4e751d30b184ed8f7dba17226884f25d" translate="yes" xml:space="preserve">
          <source>fromfunction (in module numpy.ma)</source>
          <target state="translated">fromfunction (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="2609e777c8615535022385ce5ffafa842795552b" translate="yes" xml:space="preserve">
          <source>fromfunction() (in module numpy)</source>
          <target state="translated">fromfunction () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="4770c5ed74ab3d34a97e7f5559cac811a39495c2" translate="yes" xml:space="preserve">
          <source>fromiter() (in module numpy)</source>
          <target state="translated">fromiter () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="4f87ea787c8abff4a1a4e4f422bb623b114fefab" translate="yes" xml:space="preserve">
          <source>frompyfunc() (in module numpy)</source>
          <target state="translated">frompyfunc () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="9444ce2e5b53ed223de48ff6c48284b72123e227" translate="yes" xml:space="preserve">
          <source>fromrecords() (in module numpy.core.records)</source>
          <target state="translated">fromrecords () (numpy.core.records 모듈)</target>
        </trans-unit>
        <trans-unit id="13e198bde8dd4e26ac454374e66741e7ad295ade" translate="yes" xml:space="preserve">
          <source>fromregex() (in module numpy)</source>
          <target state="translated">fromregex () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="303ae899e76061c12cc3a7090cadfe537bded678" translate="yes" xml:space="preserve">
          <source>fromroots() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">fromroots () (numpy.polynomial.chebyshev.Chebyshev 클래스 메서드)</target>
        </trans-unit>
        <trans-unit id="74c6af61b2599e033d6cc1b285fc0b4341444fa1" translate="yes" xml:space="preserve">
          <source>fromstr()</source>
          <target state="translated">fromstr()</target>
        </trans-unit>
        <trans-unit id="e9e25948480a7ad1e60c9767cf2fab17d67767eb" translate="yes" xml:space="preserve">
          <source>fromstring() (in module numpy)</source>
          <target state="translated">fromstring () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="3f4bb586f04a0c1d93eadab9363a8a3183b4860c" translate="yes" xml:space="preserve">
          <source>fs</source>
          <target state="translated">fs</target>
        </trans-unit>
        <trans-unit id="a545f65bd5294b57a20112743a8e6b26a298f3c8" translate="yes" xml:space="preserve">
          <source>full argument checking with the ndpointer class factory</source>
          <target state="translated">ndpointer 클래스 팩토리로 전체 인수 확인</target>
        </trans-unit>
        <trans-unit id="2781ad7d1943401e771b2621b8e44a60d2e64be7" translate="yes" xml:space="preserve">
          <source>full() (in module numpy)</source>
          <target state="translated">full () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="78d290a9ba5ea8c6d5d95171c5ac5b002b71fc50" translate="yes" xml:space="preserve">
          <source>full_like() (in module numpy)</source>
          <target state="translated">full_like () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="1d82b3fc2b22ef96ec69ef6060d2d90838b01fd5" translate="yes" xml:space="preserve">
          <source>functionality in shared libraries written for other purposes can be obtained with a simple Python wrapper and search for the library.</source>
          <target state="translated">다른 목적으로 작성된 공유 라이브러리의 기능은 간단한 Python 래퍼로 얻고 라이브러리를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab08261bc4509d2b5826c6574778bc8e4f6a0a95" translate="yes" xml:space="preserve">
          <source>functions from &lt;code&gt;math.h&lt;/code&gt; and &lt;code&gt;Python.h&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;math.h&lt;/code&gt; 및 &lt;code&gt;Python.h&lt;/code&gt; 의 함수 ;</target>
        </trans-unit>
        <trans-unit id="46783935fb4a913842ef46305db884e5043b31a7" translate="yes" xml:space="preserve">
          <source>fundamental data-type for &lt;a href=&quot;#numpy.recarray&quot;&gt;&lt;code&gt;recarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.recarray&quot;&gt; &lt;code&gt;recarray&lt;/code&gt; 의&lt;/a&gt; 기본 데이터 유형 .</target>
        </trans-unit>
        <trans-unit id="742723b2f5462c6767afd9285e399ab3fc59669d" translate="yes" xml:space="preserve">
          <source>fv() (in module numpy)</source>
          <target state="translated">fv () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="4031b9277aa37fe0db235d5989cd3d5b7e94d2c9" translate="yes" xml:space="preserve">
          <source>gamma() (in module numpy.random)</source>
          <target state="translated">gamma () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="80c3de47324331b86c68ea883a171372d2422d31" translate="yes" xml:space="preserve">
          <source>gcd (in module numpy)</source>
          <target state="translated">gcd (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="6358e17f38d2f523ed17ab53eb2f57e75763a671" translate="yes" xml:space="preserve">
          <source>generate a random 3x4 array with default random number generator and seed = 42</source>
          <target state="translated">기본 난수 생성기 및 시드 = 42를 사용하여 임의의 3x4 배열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="da3a8dce208eef7611be290fa58858f569b06296" translate="yes" xml:space="preserve">
          <source>generate_config_py() (in module numpy.distutils.misc_util)</source>
          <target state="translated">generate_config_py () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="a38ce329971e1af94e2eaf8f8a5ff413f119201f" translate="yes" xml:space="preserve">
          <source>generate_state() (numpy.random.SeedSequence method)</source>
          <target state="translated">generate_state () (numpy.random.SeedSequence의 메서드)</target>
        </trans-unit>
        <trans-unit id="7241e14eb8a5a304085461fcfa4c6fa244e68205" translate="yes" xml:space="preserve">
          <source>generates lots of code between Python and the C code</source>
          <target state="translated">Python과 C 코드 사이에 많은 코드를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2e0b50817f2723205647a06ed11c1ead60b6316f" translate="yes" xml:space="preserve">
          <source>generic (class in numpy)</source>
          <target state="translated">일반 (numpy의 클래스)</target>
        </trans-unit>
        <trans-unit id="2809e8161e133b999963df8f39908b398f79dee3" translate="yes" xml:space="preserve">
          <source>generic function accepting an arbitrary mask function.</source>
          <target state="translated">임의의 마스크 함수를 허용하는 일반 함수</target>
        </trans-unit>
        <trans-unit id="b469a86408c4935b23d7b64b9baf36215b529912" translate="yes" xml:space="preserve">
          <source>generic.T</source>
          <target state="translated">generic.T</target>
        </trans-unit>
        <trans-unit id="52258fbec818a1911b91c41ed1eb7ef5d72ba150" translate="yes" xml:space="preserve">
          <source>generic.__array__()</source>
          <target state="translated">generic.__array__()</target>
        </trans-unit>
        <trans-unit id="a5611c1449f7f8c63d58765a700c44e9db832dd1" translate="yes" xml:space="preserve">
          <source>generic.__array_interface__</source>
          <target state="translated">generic.__array_interface__</target>
        </trans-unit>
        <trans-unit id="4434bc2887cd41c0218bd1488cf0349ac5c6458f" translate="yes" xml:space="preserve">
          <source>generic.__array_priority__</source>
          <target state="translated">generic.__array_priority__</target>
        </trans-unit>
        <trans-unit id="e7fff2a413db4d581cabcf75076300fef64e33fe" translate="yes" xml:space="preserve">
          <source>generic.__array_struct__</source>
          <target state="translated">generic.__array_struct__</target>
        </trans-unit>
        <trans-unit id="a2dc55b18a066c90cd39d05ccc7b01e1c7a6ff35" translate="yes" xml:space="preserve">
          <source>generic.__array_wrap__()</source>
          <target state="translated">generic.__array_wrap__()</target>
        </trans-unit>
        <trans-unit id="19a6a00b128e761d4b407c44f9f3bb65666ba8a8" translate="yes" xml:space="preserve">
          <source>generic.__reduce__()</source>
          <target state="translated">generic.__reduce__()</target>
        </trans-unit>
        <trans-unit id="389d5b5bb216a10ee340bfd5d3308727977062f4" translate="yes" xml:space="preserve">
          <source>generic.__setstate__()</source>
          <target state="translated">generic.__setstate__()</target>
        </trans-unit>
        <trans-unit id="e45d1c433f1fda11f60eb85497acc3ba000bbf39" translate="yes" xml:space="preserve">
          <source>generic.all()</source>
          <target state="translated">generic.all()</target>
        </trans-unit>
        <trans-unit id="64801abe861da5837f771263359a2bab8cae2f10" translate="yes" xml:space="preserve">
          <source>generic.any()</source>
          <target state="translated">generic.any()</target>
        </trans-unit>
        <trans-unit id="efa2b5577e861f03c3a391c5e8f94f14a10b29de" translate="yes" xml:space="preserve">
          <source>generic.argmax()</source>
          <target state="translated">generic.argmax()</target>
        </trans-unit>
        <trans-unit id="e79046323116d58903e84d783131070cac83127d" translate="yes" xml:space="preserve">
          <source>generic.argmin()</source>
          <target state="translated">generic.argmin()</target>
        </trans-unit>
        <trans-unit id="0bd818f73b366356b240dd8375f1631f96bc9233" translate="yes" xml:space="preserve">
          <source>generic.argsort()</source>
          <target state="translated">generic.argsort()</target>
        </trans-unit>
        <trans-unit id="ce4b14f4138c8bb1ac8ae2f950b82286f5f23259" translate="yes" xml:space="preserve">
          <source>generic.astype()</source>
          <target state="translated">generic.astype()</target>
        </trans-unit>
        <trans-unit id="7adc226216b1b6addb2c6f9f2ac4e51c6361384b" translate="yes" xml:space="preserve">
          <source>generic.base</source>
          <target state="translated">generic.base</target>
        </trans-unit>
        <trans-unit id="28026df0591c6f05f04fe89a5670ad060fcd04d7" translate="yes" xml:space="preserve">
          <source>generic.byteswap()</source>
          <target state="translated">generic.byteswap()</target>
        </trans-unit>
        <trans-unit id="2754b64b74be6824e0ad92f2effe6e1bc91a9323" translate="yes" xml:space="preserve">
          <source>generic.choose()</source>
          <target state="translated">generic.choose()</target>
        </trans-unit>
        <trans-unit id="2c299bc311d2ef268efe9f6599ec42f61dce43d7" translate="yes" xml:space="preserve">
          <source>generic.clip()</source>
          <target state="translated">generic.clip()</target>
        </trans-unit>
        <trans-unit id="0ca223c87753b3c5a460ce0e31ad8739e41570bd" translate="yes" xml:space="preserve">
          <source>generic.compress()</source>
          <target state="translated">generic.compress()</target>
        </trans-unit>
        <trans-unit id="091975e701b656dcc9d1df46df930af0c00bbe41" translate="yes" xml:space="preserve">
          <source>generic.conjugate()</source>
          <target state="translated">generic.conjugate()</target>
        </trans-unit>
        <trans-unit id="bc342944c16e13fe598f18002179579fab7c0dd7" translate="yes" xml:space="preserve">
          <source>generic.copy()</source>
          <target state="translated">generic.copy()</target>
        </trans-unit>
        <trans-unit id="276dff436e45e6127b18680dfeee02e36027f17f" translate="yes" xml:space="preserve">
          <source>generic.cumprod()</source>
          <target state="translated">generic.cumprod()</target>
        </trans-unit>
        <trans-unit id="bfaa5bd91164dfe1e61a883a875791bbfb80d851" translate="yes" xml:space="preserve">
          <source>generic.cumsum()</source>
          <target state="translated">generic.cumsum()</target>
        </trans-unit>
        <trans-unit id="7ff4df79724617f014ff5fa97abe80623c872833" translate="yes" xml:space="preserve">
          <source>generic.data</source>
          <target state="translated">generic.data</target>
        </trans-unit>
        <trans-unit id="2ad46928a853f66cb7ae5970e206881627f413d6" translate="yes" xml:space="preserve">
          <source>generic.diagonal()</source>
          <target state="translated">generic.diagonal()</target>
        </trans-unit>
        <trans-unit id="84a0e5576b79dfe2a653a7eea785bcce74cd97f2" translate="yes" xml:space="preserve">
          <source>generic.dtype</source>
          <target state="translated">generic.dtype</target>
        </trans-unit>
        <trans-unit id="783b525ea62c9bd4d64d31dcbfe3036d2f60214b" translate="yes" xml:space="preserve">
          <source>generic.dump()</source>
          <target state="translated">generic.dump()</target>
        </trans-unit>
        <trans-unit id="8a3ca0ecbb76902f7f48db4d346f67da46851bc7" translate="yes" xml:space="preserve">
          <source>generic.dumps()</source>
          <target state="translated">generic.dumps()</target>
        </trans-unit>
        <trans-unit id="47d45d75d5179896a47b4d91f372eaccfaa9cfde" translate="yes" xml:space="preserve">
          <source>generic.fill()</source>
          <target state="translated">generic.fill()</target>
        </trans-unit>
        <trans-unit id="ef0e932a9f0acf3d185857f24726f4f9233a71fd" translate="yes" xml:space="preserve">
          <source>generic.flags</source>
          <target state="translated">generic.flags</target>
        </trans-unit>
        <trans-unit id="2020599513a2fa26a6c54427d9d1f65f1671b03c" translate="yes" xml:space="preserve">
          <source>generic.flat</source>
          <target state="translated">generic.flat</target>
        </trans-unit>
        <trans-unit id="c2ef4fd8b55c86f6d1efe75aaadd1a6f8f893515" translate="yes" xml:space="preserve">
          <source>generic.flatten()</source>
          <target state="translated">generic.flatten()</target>
        </trans-unit>
        <trans-unit id="138bd20652e17a61c33f6adf78139d4c31eecaa1" translate="yes" xml:space="preserve">
          <source>generic.getfield()</source>
          <target state="translated">generic.getfield()</target>
        </trans-unit>
        <trans-unit id="0a5e7d64f7d42d0695b5d23d7a52eed831c5f0f9" translate="yes" xml:space="preserve">
          <source>generic.imag</source>
          <target state="translated">generic.imag</target>
        </trans-unit>
        <trans-unit id="1bd42fcc426df74ccd590279d4c90ed5dd81da7e" translate="yes" xml:space="preserve">
          <source>generic.item()</source>
          <target state="translated">generic.item()</target>
        </trans-unit>
        <trans-unit id="33817c1ed5fec31510a967559ace3a3d6d9afda1" translate="yes" xml:space="preserve">
          <source>generic.itemset()</source>
          <target state="translated">generic.itemset()</target>
        </trans-unit>
        <trans-unit id="fb302b41445c21a9df1b716673db0eaca166893f" translate="yes" xml:space="preserve">
          <source>generic.itemsize</source>
          <target state="translated">generic.itemsize</target>
        </trans-unit>
        <trans-unit id="d91b8bb2b1eeebdbbf979093ad955442849f6cc4" translate="yes" xml:space="preserve">
          <source>generic.max()</source>
          <target state="translated">generic.max()</target>
        </trans-unit>
        <trans-unit id="2e5bce83027d5f4131019a3a04e7766a706207d6" translate="yes" xml:space="preserve">
          <source>generic.mean()</source>
          <target state="translated">generic.mean()</target>
        </trans-unit>
        <trans-unit id="4be3b366226fe2bf7d5fff4b7d53f6d7e2275939" translate="yes" xml:space="preserve">
          <source>generic.min()</source>
          <target state="translated">generic.min()</target>
        </trans-unit>
        <trans-unit id="add5710e5ce19bccc38a6dae2abf75d0e6324fb7" translate="yes" xml:space="preserve">
          <source>generic.nbytes</source>
          <target state="translated">generic.nbytes</target>
        </trans-unit>
        <trans-unit id="e99c0102749d701556ccf6b8ddf87c1c98b18a6d" translate="yes" xml:space="preserve">
          <source>generic.ndim</source>
          <target state="translated">generic.ndim</target>
        </trans-unit>
        <trans-unit id="c1660dd6670e607a1e66cf2cb0ab2571665bf51b" translate="yes" xml:space="preserve">
          <source>generic.newbyteorder()</source>
          <target state="translated">generic.newbyteorder()</target>
        </trans-unit>
        <trans-unit id="44d7b0cfda72b4e20f5756e4102f8f8754ac9537" translate="yes" xml:space="preserve">
          <source>generic.nonzero()</source>
          <target state="translated">generic.nonzero()</target>
        </trans-unit>
        <trans-unit id="4a32babeb2a2ccf41bbe5180f77ee3ba1623abd2" translate="yes" xml:space="preserve">
          <source>generic.prod()</source>
          <target state="translated">generic.prod()</target>
        </trans-unit>
        <trans-unit id="87522ec89addeb6d404762869cdddd2b39cd056d" translate="yes" xml:space="preserve">
          <source>generic.ptp()</source>
          <target state="translated">generic.ptp()</target>
        </trans-unit>
        <trans-unit id="590499edd932463ceeed1fbbebec5d3d71a70c50" translate="yes" xml:space="preserve">
          <source>generic.put()</source>
          <target state="translated">generic.put()</target>
        </trans-unit>
        <trans-unit id="51a080ab2a704c1983a785d7c67e7b5a0e6334ff" translate="yes" xml:space="preserve">
          <source>generic.ravel()</source>
          <target state="translated">generic.ravel()</target>
        </trans-unit>
        <trans-unit id="0663f1e7a6bb0ae91f3a9052f114680011ce023d" translate="yes" xml:space="preserve">
          <source>generic.real</source>
          <target state="translated">generic.real</target>
        </trans-unit>
        <trans-unit id="5d833eca4393b3f25b2ac09c00008fbc288e0783" translate="yes" xml:space="preserve">
          <source>generic.repeat()</source>
          <target state="translated">generic.repeat()</target>
        </trans-unit>
        <trans-unit id="0f80a4e04b8d6798b9f9c24956ea632fd52bb98a" translate="yes" xml:space="preserve">
          <source>generic.reshape()</source>
          <target state="translated">generic.reshape()</target>
        </trans-unit>
        <trans-unit id="fb7112ffd7f108e99759425319f7ca81e6fff7ce" translate="yes" xml:space="preserve">
          <source>generic.resize()</source>
          <target state="translated">generic.resize()</target>
        </trans-unit>
        <trans-unit id="db1186d7513cd8a4340b725202a1769916e25379" translate="yes" xml:space="preserve">
          <source>generic.round()</source>
          <target state="translated">generic.round()</target>
        </trans-unit>
        <trans-unit id="1cced9c43ce19de4251617cfbe2e88dd8e3ef17b" translate="yes" xml:space="preserve">
          <source>generic.searchsorted()</source>
          <target state="translated">generic.searchsorted()</target>
        </trans-unit>
        <trans-unit id="74f61f0f343974a473d68e8ff5536a791b7c8197" translate="yes" xml:space="preserve">
          <source>generic.setfield()</source>
          <target state="translated">generic.setfield()</target>
        </trans-unit>
        <trans-unit id="564e1331e20ad0d61cacd0fc7a26a9b8c3d1c3ac" translate="yes" xml:space="preserve">
          <source>generic.setflags()</source>
          <target state="translated">generic.setflags()</target>
        </trans-unit>
        <trans-unit id="c6513f91115123ee95d4923113c42d0941c19973" translate="yes" xml:space="preserve">
          <source>generic.shape</source>
          <target state="translated">generic.shape</target>
        </trans-unit>
        <trans-unit id="efafe2f79217a1fb31a43927da248fe5439d3328" translate="yes" xml:space="preserve">
          <source>generic.size</source>
          <target state="translated">generic.size</target>
        </trans-unit>
        <trans-unit id="a81b5a7b74210778abaed8d2c920e6e583500c3e" translate="yes" xml:space="preserve">
          <source>generic.sort()</source>
          <target state="translated">generic.sort()</target>
        </trans-unit>
        <trans-unit id="ccd76d17a158f7ca25e6e875bae60466516cb782" translate="yes" xml:space="preserve">
          <source>generic.squeeze()</source>
          <target state="translated">generic.squeeze()</target>
        </trans-unit>
        <trans-unit id="a98c9a5da6154d2ba440d083b05fab8ae3abfd2c" translate="yes" xml:space="preserve">
          <source>generic.std()</source>
          <target state="translated">generic.std()</target>
        </trans-unit>
        <trans-unit id="d0c34cf0161e1c4ff3cc16b2cc77fe89c96c801a" translate="yes" xml:space="preserve">
          <source>generic.strides</source>
          <target state="translated">generic.strides</target>
        </trans-unit>
        <trans-unit id="8cc4a97852323265636110d0fd398ad7e1583a0d" translate="yes" xml:space="preserve">
          <source>generic.sum()</source>
          <target state="translated">generic.sum()</target>
        </trans-unit>
        <trans-unit id="919486a3094724bbd0596312ca1abea7be750b06" translate="yes" xml:space="preserve">
          <source>generic.swapaxes()</source>
          <target state="translated">generic.swapaxes()</target>
        </trans-unit>
        <trans-unit id="b3f9aa6c777fefdeb4558e5913fd15baa6c6d6fc" translate="yes" xml:space="preserve">
          <source>generic.take()</source>
          <target state="translated">generic.take()</target>
        </trans-unit>
        <trans-unit id="b41560a7a0a5c2ab695ea14d1cebb53f9e8ba9e9" translate="yes" xml:space="preserve">
          <source>generic.tofile()</source>
          <target state="translated">generic.tofile()</target>
        </trans-unit>
        <trans-unit id="d97f285381580906167dbff1130fd028fd6737c8" translate="yes" xml:space="preserve">
          <source>generic.tolist()</source>
          <target state="translated">generic.tolist()</target>
        </trans-unit>
        <trans-unit id="4a44c607e1625ba45e062820140c135cfd08f40b" translate="yes" xml:space="preserve">
          <source>generic.tostring()</source>
          <target state="translated">generic.tostring()</target>
        </trans-unit>
        <trans-unit id="54e486f6387d16d16fd4dac18193bb5dfc820aa3" translate="yes" xml:space="preserve">
          <source>generic.trace()</source>
          <target state="translated">generic.trace()</target>
        </trans-unit>
        <trans-unit id="a63350a8c6db5c5b1d0312b9d06bdd2f93cd6da8" translate="yes" xml:space="preserve">
          <source>generic.transpose()</source>
          <target state="translated">generic.transpose()</target>
        </trans-unit>
        <trans-unit id="ae87e6947409bb706fd9a40e6e5714867778b2c4" translate="yes" xml:space="preserve">
          <source>generic.var()</source>
          <target state="translated">generic.var()</target>
        </trans-unit>
        <trans-unit id="5163ece05c539db28359365a29cc9718bdd7e68c" translate="yes" xml:space="preserve">
          <source>generic.view()</source>
          <target state="translated">generic.view()</target>
        </trans-unit>
        <trans-unit id="5855a5ff5f9726870899484fd3af1a139a0d876e" translate="yes" xml:space="preserve">
          <source>genfromtxt has a new &lt;code&gt;max_rows&lt;/code&gt; argument</source>
          <target state="translated">genfromtxt에 새로운 &lt;code&gt;max_rows&lt;/code&gt; 인수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef4f119820e462e111f15779218aa1663dabcb9f" translate="yes" xml:space="preserve">
          <source>genfromtxt() (in module numpy)</source>
          <target state="translated">genfromtxt () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="92d823f98fc4d4fb26e63a8b46502eea8c540b12" translate="yes" xml:space="preserve">
          <source>geometric() (in module numpy.random)</source>
          <target state="translated">geometric () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="978334fab31c74777ab8557170edf8bd9d16074c" translate="yes" xml:space="preserve">
          <source>geomspace() (in module numpy)</source>
          <target state="translated">geomspace () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="c2c3a784af20a2e5307fc8bddced1ceb90f4ea70" translate="yes" xml:space="preserve">
          <source>get array data-descriptor</source>
          <target state="translated">배열 데이터 디스크립터 가져 오기</target>
        </trans-unit>
        <trans-unit id="cbe9fa11cb0b30fb8c3eef53c573e2b5a49916a6" translate="yes" xml:space="preserve">
          <source>get help on the function &lt;em&gt;func&lt;/em&gt;</source>
          <target state="translated">함수 &lt;em&gt;func&lt;/em&gt; 에 대한 도움말보기&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="83c2332e4ccdcff85ccd432530e995a0a6e3aea5" translate="yes" xml:space="preserve">
          <source>get local copy of the git repository from &lt;a href=&quot;https://github.com/numpy&quot;&gt;Github&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/numpy&quot;&gt;Github&lt;/a&gt; 에서 git 저장소의 로컬 사본을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8fe30a2cdc38f294df228ac1653ec294324d6ba8" translate="yes" xml:space="preserve">
          <source>get the &amp;ldquo;size&amp;rdquo; of the matrix</source>
          <target state="translated">행렬의 &quot;크기&quot;를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="9c78faa101f889f126bc81005a77b063a786c92b" translate="yes" xml:space="preserve">
          <source>get the number of dimensions of an array</source>
          <target state="translated">배열의 차원 수 얻기</target>
        </trans-unit>
        <trans-unit id="a9c2dfe135feb2b9825cb24e22b815c4abed6751" translate="yes" xml:space="preserve">
          <source>get the number of elements of an array</source>
          <target state="translated">배열의 요소 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="239804251e23a89f866770f6c938764b0e3e6128" translate="yes" xml:space="preserve">
          <source>get the number of elements of the n-th dimension of array &lt;code&gt;a&lt;/code&gt;. (Note that MATLAB uses 1 based indexing while Python uses 0 based indexing, See note &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;INDEXING&lt;/a&gt;)</source>
          <target state="translated">배열 &lt;code&gt;a&lt;/code&gt; 의 n 차원 요소 수를 가져옵니다 . (MATLAB은 1 기반 인덱싱을 사용하고 Python은 0 기반 인덱싱을 사용합니다. 참고 &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;INDEXING&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="7a9c53d00b216bc6d218bf98387969ead92f20f0" translate="yes" xml:space="preserve">
          <source>get the number of elements of the n-th dimension of array &lt;code&gt;a&lt;/code&gt;. (Note that MATLAB&amp;reg; uses 1 based indexing while Python uses 0 based indexing, See note &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;INDEXING&lt;/a&gt;)</source>
          <target state="translated">배열 &lt;code&gt;a&lt;/code&gt; 의 n 차원 요소 수를 가져옵니다 . (MATLAB&amp;reg;은 1 기반 인덱싱을 사용하고 Python은 0 기반 인덱싱을 사용합니다. 참고 &lt;a href=&quot;#numpy-for-matlab-users-notes&quot;&gt;INDEXING&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="b41f28ddf70b3c7a5031176c193dc4e779e014dc" translate="yes" xml:space="preserve">
          <source>getA() (numpy.matrix method)</source>
          <target state="translated">getA () (numpy.matrix 메서드)</target>
        </trans-unit>
        <trans-unit id="4cb425bdbdf733edaad5be6d3785c8a33c840681" translate="yes" xml:space="preserve">
          <source>getA1() (numpy.matrix method)</source>
          <target state="translated">getA1 () (numpy.matrix 메서드)</target>
        </trans-unit>
        <trans-unit id="f9bffac1a530afc2fd771d9d35b800e61d7d77a0" translate="yes" xml:space="preserve">
          <source>getH() (numpy.matrix method)</source>
          <target state="translated">getH () (numpy.matrix 메서드)</target>
        </trans-unit>
        <trans-unit id="ae8f0a03a96dfc7b689ba8b64141971b060ad2aa" translate="yes" xml:space="preserve">
          <source>getI() (numpy.matrix method)</source>
          <target state="translated">getI () (numpy.matrix 메서드)</target>
        </trans-unit>
        <trans-unit id="592e5de3c7c045ed24dd92b72ac298a5a07af63b" translate="yes" xml:space="preserve">
          <source>getT() (numpy.matrix method)</source>
          <target state="translated">getT () (numpy.matrix 메서드)</target>
        </trans-unit>
        <trans-unit id="52cae362180cf9905f8b4e00c9a60b400ca7302b" translate="yes" xml:space="preserve">
          <source>get_build_architecture() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_build_architecture () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="b27582dbef4cfa6462e09b04e12a67858c55da4b" translate="yes" xml:space="preserve">
          <source>get_build_temp_dir()</source>
          <target state="translated">get_build_temp_dir()</target>
        </trans-unit>
        <trans-unit id="233a9d1312c1183b3dbf9db258541e12592069fc" translate="yes" xml:space="preserve">
          <source>get_build_temp_dir() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">get_build_temp_dir () (numpy.distutils.misc_util.Configuration 메서드)</target>
        </trans-unit>
        <trans-unit id="90ee2269db198d7c4a597253c865fca732b757cf" translate="yes" xml:space="preserve">
          <source>get_cmd() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_cmd () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="837557c1f5e315cfc045d05f0429dd0f63a0780c" translate="yes" xml:space="preserve">
          <source>get_config_cmd()</source>
          <target state="translated">get_config_cmd()</target>
        </trans-unit>
        <trans-unit id="d74ea1012dc6012cd54a662722a8f75e93beff50" translate="yes" xml:space="preserve">
          <source>get_config_cmd() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">get_config_cmd () (numpy.distutils.misc_util.Configuration 메서드)</target>
        </trans-unit>
        <trans-unit id="70280809e8a9e3d0e927017ce0ddd7e08ea18f7e" translate="yes" xml:space="preserve">
          <source>get_data_files() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_data_files () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="18966932d6fe9d27ad5d32c044d9d66e9357d078" translate="yes" xml:space="preserve">
          <source>get_dependencies() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_dependencies () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="52e4b581efe94506b55c874100a5732e4ae7c785" translate="yes" xml:space="preserve">
          <source>get_distribution()</source>
          <target state="translated">get_distribution()</target>
        </trans-unit>
        <trans-unit id="82213d50d9c199b55d1b5588b5911338a7e7c14b" translate="yes" xml:space="preserve">
          <source>get_distribution() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">get_distribution () (numpy.distutils.misc_util.Configuration 메서드)</target>
        </trans-unit>
        <trans-unit id="843ee25c298fe05c4701150902e2ff7ff1a84dba" translate="yes" xml:space="preserve">
          <source>get_ext_source_files() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_ext_source_files () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="5f43dcd40135708238a4bfaff110a9fe080d6474" translate="yes" xml:space="preserve">
          <source>get_fieldstructure() (in module numpy.lib.recfunctions)</source>
          <target state="translated">get_fieldstructure () (numpy.lib.recfunctions 모듈)</target>
        </trans-unit>
        <trans-unit id="e48932cf052b30e08ba625f7e4d9c9643cd61ad7" translate="yes" xml:space="preserve">
          <source>get_fill_value() (numpy.ma.masked_array method)</source>
          <target state="translated">get_fill_value () (numpy.ma.masked_array 메서드)</target>
        </trans-unit>
        <trans-unit id="17516cb22096ecb249e8664c4ad38a75207995fd" translate="yes" xml:space="preserve">
          <source>get_frame() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_frame () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="e3cbd2492457febb8bc4656305b984d7b49f465d" translate="yes" xml:space="preserve">
          <source>get_imag() (numpy.ma.masked_array method)</source>
          <target state="translated">get_imag () (numpy.ma.masked_array 메서드)</target>
        </trans-unit>
        <trans-unit id="d9c29f20b74c21fbd9e96d9651340dc568c15a23" translate="yes" xml:space="preserve">
          <source>get_include() (in module numpy)</source>
          <target state="translated">get_include () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="297dc5a8409850ef4b5874d28826a6f07326ffe5" translate="yes" xml:space="preserve">
          <source>get_info()</source>
          <target state="translated">get_info()</target>
        </trans-unit>
        <trans-unit id="0e0f50e85093bef0538222ea4d05cc520c0622ea" translate="yes" xml:space="preserve">
          <source>get_info() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_info () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="1e6e14dc743d6a6bac6aae58fe454316dd77366d" translate="yes" xml:space="preserve">
          <source>get_language() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_language () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="a4da75800074afb1e202bb133a557a311b4a23e8" translate="yes" xml:space="preserve">
          <source>get_lib_source_files() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_lib_source_files () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="5408ad72be21bd75176a76654039d023e5e49259" translate="yes" xml:space="preserve">
          <source>get_mathlibs() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_mathlibs () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="d92f2e34863c298f950941b9e2cf3e745ed64bd2" translate="yes" xml:space="preserve">
          <source>get_names() (in module numpy.lib.recfunctions)</source>
          <target state="translated">get_names () (numpy.lib.recfunctions 모듈)</target>
        </trans-unit>
        <trans-unit id="f3cfc64ed82ed4bdb48b192f97e9debdcee09bde" translate="yes" xml:space="preserve">
          <source>get_names_flat() (in module numpy.lib.recfunctions)</source>
          <target state="translated">get_names_flat () (numpy.lib.recfunctions 모듈)</target>
        </trans-unit>
        <trans-unit id="2f78189bb7a2a62a1b8ac8830a9a4083f47828c6" translate="yes" xml:space="preserve">
          <source>get_num_build_jobs() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_num_build_jobs () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="fb396682121b978adafad1b303983834ae45fcc0" translate="yes" xml:space="preserve">
          <source>get_numpy_include_dirs() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_numpy_include_dirs () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="dde2c2bdb177653fb268364112c0ac8bc67e66a0" translate="yes" xml:space="preserve">
          <source>get_pkg_info() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_pkg_info () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="365edc942589c506b0e15690a0154711ba3f7a58" translate="yes" xml:space="preserve">
          <source>get_printoptions() (in module numpy)</source>
          <target state="translated">get_printoptions () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b8228eae1be369b09a594b203c171ce380bfaa0f" translate="yes" xml:space="preserve">
          <source>get_real() (numpy.ma.masked_array method)</source>
          <target state="translated">get_real () (numpy.ma.masked_array의 메서드)</target>
        </trans-unit>
        <trans-unit id="fd6cf889b86f30bbb21fcfb03cedea6bf388f0c5" translate="yes" xml:space="preserve">
          <source>get_script_files() (in module numpy.distutils.misc_util)</source>
          <target state="translated">get_script_files () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="b0639ae6b8fdef78feaf42c66ddc49d5f3380563" translate="yes" xml:space="preserve">
          <source>get_standard_file() (in module numpy.distutils.system_info)</source>
          <target state="translated">get_standard_file () (numpy.distutils.system_info 모듈)</target>
        </trans-unit>
        <trans-unit id="99935869ba0cf662b9928e191a2f4037a3df6fd4" translate="yes" xml:space="preserve">
          <source>get_state() (in module numpy.random)</source>
          <target state="translated">get_state () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="1282556a2e25ec335c9734f5f36b0e45c226c413" translate="yes" xml:space="preserve">
          <source>get_subpackage()</source>
          <target state="translated">get_subpackage()</target>
        </trans-unit>
        <trans-unit id="f8d150de30f7c0b82e5c330312c82909102d1144" translate="yes" xml:space="preserve">
          <source>get_subpackage() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">get_subpackage () (numpy.distutils.misc_util.Configuration 메서드)</target>
        </trans-unit>
        <trans-unit id="b49442d151321987cc104b80932241c855853622" translate="yes" xml:space="preserve">
          <source>get_version()</source>
          <target state="translated">get_version()</target>
        </trans-unit>
        <trans-unit id="4a6d51ca685825e6a06466ec17b496364e91fd69" translate="yes" xml:space="preserve">
          <source>get_version() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">get_version () (numpy.distutils.misc_util.Configuration 메서드)</target>
        </trans-unit>
        <trans-unit id="88b5b13337b6c08674fb0b2d38a8e1814ca89d9a" translate="yes" xml:space="preserve">
          <source>getbufsize() (in module numpy)</source>
          <target state="translated">getbufsize () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="cdc59e340bdcb2a9fe0693a4b86787430e75aa92" translate="yes" xml:space="preserve">
          <source>getdata() (in module numpy.ma)</source>
          <target state="translated">getdata () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="6621323b0dc44298518d29bbf6e9f0f45cd4cec7" translate="yes" xml:space="preserve">
          <source>getdomain() (in module numpy.polynomial.polyutils)</source>
          <target state="translated">getdomain () (numpy.polynomial.polyutils 모듈)</target>
        </trans-unit>
        <trans-unit id="d3e7b4dfbbb6bd342fc279ada50d191e023b626c" translate="yes" xml:space="preserve">
          <source>geterr() (in module numpy)</source>
          <target state="translated">geterr () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="6856890e7f2b4029e7fd04e01d5e876c173a3c41" translate="yes" xml:space="preserve">
          <source>geterrcall() (in module numpy)</source>
          <target state="translated">geterrcall () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="6085bb95466f94b56bc29b89a0676ad2a8d402ee" translate="yes" xml:space="preserve">
          <source>geterrobj() (in module numpy)</source>
          <target state="translated">geterrobj () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="d64de9b497f5596964fb5fba7ecd466be736a5de" translate="yes" xml:space="preserve">
          <source>getfield() (numpy.char.chararray method)</source>
          <target state="translated">getfield () (numpy.char.chararray 메서드)</target>
        </trans-unit>
        <trans-unit id="4660e0b64a6fde22a2585bae18ec4157116c5e0e" translate="yes" xml:space="preserve">
          <source>getitem</source>
          <target state="translated">getitem</target>
        </trans-unit>
        <trans-unit id="63d7f53e03522d9ebfce2a3fc004f97adbb82988" translate="yes" xml:space="preserve">
          <source>getitem()</source>
          <target state="translated">getitem()</target>
        </trans-unit>
        <trans-unit id="7bb504e4909235821bed680e71807030d2002b5c" translate="yes" xml:space="preserve">
          <source>getitem, ndarray</source>
          <target state="translated">getitem, ndarray</target>
        </trans-unit>
        <trans-unit id="d50226189312c8da1e393fa7b8e0ebc8e68e8865" translate="yes" xml:space="preserve">
          <source>getmask() (in module numpy.ma)</source>
          <target state="translated">getmask () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="1c4fe53fbc924936a886d75207d3fd31e2f488f1" translate="yes" xml:space="preserve">
          <source>getmaskarray() (in module numpy.ma)</source>
          <target state="translated">getmaskarray () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="0df0bf36c6cb1fc1c8bb8cc8e28f6f69fdb9bf9f" translate="yes" xml:space="preserve">
          <source>getting it wrong leads to memory leaks, and worse, segfaults</source>
          <target state="translated">잘못하면 메모리 누수가 발생하고 더 심하게는 segfaults가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f4d2ef740bd6aff842ae26a2e002c8342e69c02f" translate="yes" xml:space="preserve">
          <source>gfortran support on windows</source>
          <target state="translated">Windows에서 gfortran 지원</target>
        </trans-unit>
        <trans-unit id="84d20a21b4d0ddce218ad7c73b3cd55f875524fe" translate="yes" xml:space="preserve">
          <source>git add</source>
          <target state="translated">자식 추가</target>
        </trans-unit>
        <trans-unit id="844a30721d219ca64f182132b851a218fe0621fd" translate="yes" xml:space="preserve">
          <source>git branch</source>
          <target state="translated">자식 브랜치</target>
        </trans-unit>
        <trans-unit id="3ef3d527c298c039b60a34eb059beb6c3c5680dc" translate="yes" xml:space="preserve">
          <source>git checkout</source>
          <target state="translated">git checkout</target>
        </trans-unit>
        <trans-unit id="13232f086b1187b5d169650212189b5a9ada6100" translate="yes" xml:space="preserve">
          <source>git clone</source>
          <target state="translated">자식 클론</target>
        </trans-unit>
        <trans-unit id="d8432fdd431bb5425a8f79353784c8c3a96abc36" translate="yes" xml:space="preserve">
          <source>git co 1b2e1d63ff # gives warning about detached head</source>
          <target state="translated">git co 1b2e1d63ff # 분리 된 헤드에 대한 경고를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d76620ae96c7ca431e1db5376c1cfcf85d087916" translate="yes" xml:space="preserve">
          <source>git commit</source>
          <target state="translated">자식 커밋</target>
        </trans-unit>
        <trans-unit id="59187892ed35a43d8562c0c6a7823ca9a9c2af80" translate="yes" xml:space="preserve">
          <source>git commit -s -m &amp;ldquo;REL: Release.&amp;rdquo; setup.py git tag -s &amp;lt;version&amp;gt;</source>
          <target state="translated">git commit -s -m&amp;ldquo;REL : Release.&amp;rdquo; setup.py git tag -s &amp;lt;버전&amp;gt;</target>
        </trans-unit>
        <trans-unit id="184f1349c629066adc220e9f77edf5fb39fa4df4" translate="yes" xml:space="preserve">
          <source>git config</source>
          <target state="translated">자식 구성</target>
        </trans-unit>
        <trans-unit id="a9781b8ff8ef96f1c5f652d57bf7b49b92d1a4cb" translate="yes" xml:space="preserve">
          <source>git diff</source>
          <target state="translated">git diff</target>
        </trans-unit>
        <trans-unit id="80d247a061c81f059475d422fc4169fdac43d774" translate="yes" xml:space="preserve">
          <source>git installed on your machine</source>
          <target state="translated">컴퓨터에 설치된 git</target>
        </trans-unit>
        <trans-unit id="0e32f1d354b73f82cb8a863c579dffc49ee9356a" translate="yes" xml:space="preserve">
          <source>git log</source>
          <target state="translated">자식 로그</target>
        </trans-unit>
        <trans-unit id="d065adf8851333810ea91f5f69a1ea63158b8826" translate="yes" xml:space="preserve">
          <source>git pull</source>
          <target state="translated">git pull</target>
        </trans-unit>
        <trans-unit id="8f6e64c9d6b67023d7b0979414fa32aa30e76ffe" translate="yes" xml:space="preserve">
          <source>git push</source>
          <target state="translated">git push</target>
        </trans-unit>
        <trans-unit id="685f093ff205efb3fb3959e65700ddc934b49902" translate="yes" xml:space="preserve">
          <source>git remote</source>
          <target state="translated">자식 원격</target>
        </trans-unit>
        <trans-unit id="f2a29f2b358f8a8bc56896bdca251ef93927330b" translate="yes" xml:space="preserve">
          <source>git status</source>
          <target state="translated">자식 상태</target>
        </trans-unit>
        <trans-unit id="55589cf8b6c207c09115f1718a695fbbd15e4dc8" translate="yes" xml:space="preserve">
          <source>gitpython (pip)</source>
          <target state="translated">gitpython (pip)</target>
        </trans-unit>
        <trans-unit id="d2178513f0507ddb4b1f23538554ddcb32ef7077" translate="yes" xml:space="preserve">
          <source>goes with the basis function of degree i.</source>
          <target state="translated">학위 i의 기본 기능과 함께합니다.</target>
        </trans-unit>
        <trans-unit id="17a10b1aaf5e6cc8532e34ee1fb2ec3bb2dc7597" translate="yes" xml:space="preserve">
          <source>good for interfacing to existing sharable libraries, particularly Windows DLLs</source>
          <target state="translated">기존 공유 가능한 라이브러리, 특히 Windows DLL과의 인터페이스에 적합</target>
        </trans-unit>
        <trans-unit id="76d61ecab92d6b89206aac3934eec8bd6bdaf22c" translate="yes" xml:space="preserve">
          <source>good numpy support: arrays have all these in their ctypes attribute:</source>
          <target state="translated">좋은 numpy 지원 : 배열에는 ctypes 속성에 다음이 모두 있습니다.</target>
        </trans-unit>
        <trans-unit id="61ac11b436e6ba71d849adbfaa58413d81845c99" translate="yes" xml:space="preserve">
          <source>gpaths() (in module numpy.distutils.misc_util)</source>
          <target state="translated">gpaths () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="459a44ee7958bba83fffd99069046d0e6f87f48f" translate="yes" xml:space="preserve">
          <source>gradient() (in module numpy)</source>
          <target state="translated">gradient () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="a3269d87a891e0286826d27c958fbf87734c658f" translate="yes" xml:space="preserve">
          <source>greater (in module numpy)</source>
          <target state="translated">더 큼 (numpy 모듈에서)</target>
        </trans-unit>
        <trans-unit id="f07b76e0fbbaefd98a2361c9f6ae9b612331a6aa" translate="yes" xml:space="preserve">
          <source>greater() (in module numpy.char)</source>
          <target state="translated">greater () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="1a6029e0e5e075e1179f4aca588c27e3520728fe" translate="yes" xml:space="preserve">
          <source>greater_equal (in module numpy)</source>
          <target state="translated">greater_equal (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b7ba1c4dce6dc4310e02c8e3c67a6fa727051040" translate="yes" xml:space="preserve">
          <source>greater_equal() (in module numpy.char)</source>
          <target state="translated">greater_equal () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="cceb55b1f2cbc3eb730a3a021a436d082c12fe62" translate="yes" xml:space="preserve">
          <source>green_text() (in module numpy.distutils.misc_util)</source>
          <target state="translated">green_text () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="ddff88402824fe8935401252ee5d4c69dc7b9b27" translate="yes" xml:space="preserve">
          <source>gumbel() (in module numpy.random)</source>
          <target state="translated">gumbel () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="8ceb629a2006287faa090ade5bb7e21649a93b45" translate="yes" xml:space="preserve">
          <source>hamming() (in module numpy)</source>
          <target state="translated">hamming () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="ce14fd35e4bf76c0dd8e4d062869f18d237a1845" translate="yes" xml:space="preserve">
          <source>hanning() (in module numpy)</source>
          <target state="translated">hanning () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="5693fe539d4dc48a302ee4cbe521a21fb9d35b59" translate="yes" xml:space="preserve">
          <source>harden_mask (in module numpy.ma)</source>
          <target state="translated">harden_mask (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="f234067e19b8c14207313942d042c9cbae696e1c" translate="yes" xml:space="preserve">
          <source>harden_mask() (numpy.ma.masked_array method)</source>
          <target state="translated">harden_mask () (numpy.ma.masked_array의 메서드)</target>
        </trans-unit>
        <trans-unit id="40c14a4cb1068d6185b45a193eeac2bce21b9822" translate="yes" xml:space="preserve">
          <source>hardmask (numpy.ma.MaskedArray attribute)</source>
          <target state="translated">하드 마스크 (numpy.ma.MaskedArray의 속성)</target>
        </trans-unit>
        <trans-unit id="be98382fe6c6f6ada081d6c5aebb23a7d8f4196a" translate="yes" xml:space="preserve">
          <source>hardmask() (numpy.ma.masked_array property)</source>
          <target state="translated">hardmask () (numpy.ma.masked_array 속성)</target>
        </trans-unit>
        <trans-unit id="0b411530db4f7f50ad0d157be284dcc0c1ac3e3f" translate="yes" xml:space="preserve">
          <source>has at least 3 continuous derivatives) and let</source>
          <target state="translated">최소 3 개의 연속 도함수를 가짐)</target>
        </trans-unit>
        <trans-unit id="9d12da3edcf84da85701f4ab6e85d6d86fcb7832" translate="yes" xml:space="preserve">
          <source>has become the de-facto standard within the scientific Python community</source>
          <target state="translated">과학적 Python 커뮤니티에서 사실상의 표준이되었습니다.</target>
        </trans-unit>
        <trans-unit id="e8ffeb97cf815fdd02fb1f1f45ef24aad6f8c5ba" translate="yes" xml:space="preserve">
          <source>has_cxx_sources() (in module numpy.distutils.misc_util)</source>
          <target state="translated">has_cxx_sources () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="10aef15bb3ead084271285d45d05a4f172ac0709" translate="yes" xml:space="preserve">
          <source>has_delayed_bufalloc (numpy.nditer attribute)</source>
          <target state="translated">has_delayed_bufalloc (numpy.nditer의 속성)</target>
        </trans-unit>
        <trans-unit id="294fb5b74f7a7fcc77b51d3b2a13e83bcfa6a107" translate="yes" xml:space="preserve">
          <source>has_f2py_sources() (numpy.distutils.core.Extension method)</source>
          <target state="translated">has_f2py_sources () (numpy.distutils.core.Extension 메서드)</target>
        </trans-unit>
        <trans-unit id="3b6f8362c45eb0a6f525a70ade60dd3036a6b06a" translate="yes" xml:space="preserve">
          <source>has_f_sources() (in module numpy.distutils.misc_util)</source>
          <target state="translated">has_f_sources () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="0900b73711c8bdf6e7baf6a30af1988674a41ef3" translate="yes" xml:space="preserve">
          <source>has_index (numpy.nditer attribute)</source>
          <target state="translated">has_index (numpy.nditer 속성)</target>
        </trans-unit>
        <trans-unit id="3cdc658e2c917d1142f7cdcec9ab6427980836d4" translate="yes" xml:space="preserve">
          <source>has_multi_index (numpy.nditer attribute)</source>
          <target state="translated">has_multi_index (numpy.nditer의 속성)</target>
        </trans-unit>
        <trans-unit id="14a9f06693c79b16741defa6f7c35ae74aadf285" translate="yes" xml:space="preserve">
          <source>has_samecoef() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">has_samecoef () (numpy.polynomial.chebyshev.Chebyshev 메서드)</target>
        </trans-unit>
        <trans-unit id="a478a6956ef02be7f9a7ce66d58653b8a1dc7b5a" translate="yes" xml:space="preserve">
          <source>has_samedomain() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">has_samedomain () (numpy.polynomial.chebyshev.Chebyshev의 메서드)</target>
        </trans-unit>
        <trans-unit id="cc88687d2678c246930f24a6dd821170af4e557c" translate="yes" xml:space="preserve">
          <source>has_sametype() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">has_sametype () (numpy.polynomial.chebyshev.Chebyshev의 메서드)</target>
        </trans-unit>
        <trans-unit id="f666783ccdb2cdea7e9323e4be92da5cc378049e" translate="yes" xml:space="preserve">
          <source>has_samewindow() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="translated">has_samewindow () (numpy.polynomial.chebyshev.Chebyshev 메서드)</target>
        </trans-unit>
        <trans-unit id="a1f5ce9b510c78ac51ce2aa438f57ee582124754" translate="yes" xml:space="preserve">
          <source>hasobject (numpy.dtype attribute)</source>
          <target state="translated">hasobject (numpy.dtype 속성)</target>
        </trans-unit>
        <trans-unit id="dc48c8b49f024c2a321941a4f33bec451b625741" translate="yes" xml:space="preserve">
          <source>have the same output because they were compiled in a programming language other than Python.</source>
          <target state="translated">Python 이외의 프로그래밍 언어로 컴파일 되었기 때문에 동일한 출력을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e51bc56321a9a622b2581fb480f3e4712f27fc44" translate="yes" xml:space="preserve">
          <source>have_f77c()</source>
          <target state="translated">have_f77c()</target>
        </trans-unit>
        <trans-unit id="43c9b6e5f97bbe942bb9d9aa07d301aa1e230b9f" translate="yes" xml:space="preserve">
          <source>have_f77c() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">have_f77c () (numpy.distutils.misc_util.Configuration 메서드)</target>
        </trans-unit>
        <trans-unit id="997a5c168ae32eef7c32532119717161f2f7af22" translate="yes" xml:space="preserve">
          <source>have_f90c()</source>
          <target state="translated">have_f90c()</target>
        </trans-unit>
        <trans-unit id="e15d6a6d60610f1309fe6a4d9693e7f0b09da802" translate="yes" xml:space="preserve">
          <source>have_f90c() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="translated">have_f90c () (numpy.distutils.misc_util.Configuration 메서드)</target>
        </trans-unit>
        <trans-unit id="322f9dd2eb3fb95c8df949050f72fc0c1b70c1da" translate="yes" xml:space="preserve">
          <source>heaviside (in module numpy)</source>
          <target state="translated">heaviside (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="3dad1188c941bb1d39ca274fc1ee13d188f0cae8" translate="yes" xml:space="preserve">
          <source>herm2poly() (in module numpy.polynomial.hermite)</source>
          <target state="translated">herm2poly () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="95ad3d5b4c33c41f728d8eab5ee227761781dc5e" translate="yes" xml:space="preserve">
          <source>hermadd() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermadd () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="df7d14ec694112fe53b5d64d7dd1a4529d7e6942" translate="yes" xml:space="preserve">
          <source>hermcompanion() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermcompanion () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="0773e68f69e38a3c35ae88a85fbea578beef3318" translate="yes" xml:space="preserve">
          <source>hermder() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermder () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="2c8a0507269f1ea42dcd879bef3f357accad555e" translate="yes" xml:space="preserve">
          <source>hermdiv() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermdiv () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="72221beaa6fe2b11776f092f8651eb08a76bf1bf" translate="yes" xml:space="preserve">
          <source>hermdomain (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermdomain (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="01bb5d4f1b5cf0e318e9ccce31e2c6d2547b4183" translate="yes" xml:space="preserve">
          <source>herme2poly() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">herme2poly () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="06378c58b42828396d32f90d67f99e143ddccc2a" translate="yes" xml:space="preserve">
          <source>hermeadd() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeadd () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="6abe2fb5c48663e5bb40441db7f822f701401de6" translate="yes" xml:space="preserve">
          <source>hermecompanion() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermecompanion () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="35159a5efd6502235a799e6ecdf9bb9a4692dcd0" translate="yes" xml:space="preserve">
          <source>hermeder() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeder () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="b7f952bde189703d2ffdca519941821c6f11506d" translate="yes" xml:space="preserve">
          <source>hermediv() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermediv () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="7d215b433fc5f44d38a54e58acbe4d765312f6f4" translate="yes" xml:space="preserve">
          <source>hermedomain (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermedomain (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="234942f78aadf08708c498e1ddd09cba60271fe9" translate="yes" xml:space="preserve">
          <source>hermefit() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermefit () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="8aacdb689756d2fc960efedea53d5348c9f2980b" translate="yes" xml:space="preserve">
          <source>hermefromroots() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermefromroots () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="f60a2c48301d2111be4e5c534041f15fc8d87ae3" translate="yes" xml:space="preserve">
          <source>hermegauss() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermegauss () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="404afc993ead6b21b2b2d1f7973887deb1c6642a" translate="yes" xml:space="preserve">
          <source>hermegrid2d() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermegrid2d () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="fc80169e91e26bf23d70d8c7b35d43f22818ae41" translate="yes" xml:space="preserve">
          <source>hermegrid3d() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermegrid3d () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="7851e4f1602bd60ee6b9ee21bcb431e3d372e55d" translate="yes" xml:space="preserve">
          <source>hermeint() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeint () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="92d92fe9b2c0292d79274d8929098b7c827ba6cc" translate="yes" xml:space="preserve">
          <source>hermeline() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeline () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="b1104339ad7340813e13ea96065334fd0659e2af" translate="yes" xml:space="preserve">
          <source>hermemul() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermemul () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="ebac669946ff634747f71eccb97430a6c8f43d11" translate="yes" xml:space="preserve">
          <source>hermemulx() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermemulx () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="b779172035b8e847f3066091d199913f03a79b7e" translate="yes" xml:space="preserve">
          <source>hermeone (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeone (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="daaad7f842961b03ddc090c9f9239a60e2784117" translate="yes" xml:space="preserve">
          <source>hermepow() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermepow () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="f5f022429f51f63a0a27cee9fbe10979981702f6" translate="yes" xml:space="preserve">
          <source>hermeroots() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeroots () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="864734159b72aca39774b09f3649c2b23f1c3bf7" translate="yes" xml:space="preserve">
          <source>hermesub() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermesub () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="0114849a4c2abd6b8e404f9e0223e7bace05a225" translate="yes" xml:space="preserve">
          <source>hermetrim() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermetrim () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="e6d3575245a975b3b2f7c3e29a2d82144a764d28" translate="yes" xml:space="preserve">
          <source>hermeval() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeval () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="87947fb5ae63b457ef659406bff23e742d44fc19" translate="yes" xml:space="preserve">
          <source>hermeval2d() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeval2d () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="3f88ae61b7098f91be0cd61b7d2c2275b567f37d" translate="yes" xml:space="preserve">
          <source>hermeval3d() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeval3d () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="39ebdf5e2be0801c98ddc0f45d4e8df299e88b02" translate="yes" xml:space="preserve">
          <source>hermevander() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermevander () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="93d9bb50ca5939bfab18d3ceca010138745d7727" translate="yes" xml:space="preserve">
          <source>hermevander2d() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermevander2d () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="418a61ce3db4cb2937bd9eab3ec94b977c124d9f" translate="yes" xml:space="preserve">
          <source>hermevander3d() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermevander3d () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="17e17520dadcdc7498d6ddd7b8d9cb67d4d41b92" translate="yes" xml:space="preserve">
          <source>hermeweight() (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermeweight () (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="18ebaafde8f82ba7cf00597548d8e5bab3c4e585" translate="yes" xml:space="preserve">
          <source>hermex (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermex (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="419b958780fed16414db5a7153fa270f6bff2445" translate="yes" xml:space="preserve">
          <source>hermezero (in module numpy.polynomial.hermite_e)</source>
          <target state="translated">hermezero (numpy.polynomial.hermite_e 모듈)</target>
        </trans-unit>
        <trans-unit id="6e20d7b6dbe720a619b387919dbf01c7d3817253" translate="yes" xml:space="preserve">
          <source>hermfit() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermfit () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="e05f8d9f542bba82314a3002a584828f41b78bf1" translate="yes" xml:space="preserve">
          <source>hermfromroots() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermfromroots () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="c0086424b816dc16bbc6f72ca45026f009575f23" translate="yes" xml:space="preserve">
          <source>hermgauss() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermgauss () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="1f9ea036c7138f5ecb578424a0680a94b4987460" translate="yes" xml:space="preserve">
          <source>hermgrid2d() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermgrid2d () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="8556ce126442043980274c4255277521db706443" translate="yes" xml:space="preserve">
          <source>hermgrid3d() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermgrid3d () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="662631f8b8e37cea8a9ae9ec7bd5d47a47deef93" translate="yes" xml:space="preserve">
          <source>hermint() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermint () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="c1b6df715f5d729e86206f649e32da595a93637b" translate="yes" xml:space="preserve">
          <source>hermline() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermline () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="9b00eac83317e37a519135388b9e7964c3fc9eba" translate="yes" xml:space="preserve">
          <source>hermmul() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermmul () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="ceb8adca67b8b4fb9a0ae599423aaabdd858f09b" translate="yes" xml:space="preserve">
          <source>hermmulx() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermmulx () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="2efdc2634799481c53c7505fa102394b0b7fb274" translate="yes" xml:space="preserve">
          <source>hermone (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermone (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="56a71379b9381edb0b7119f2f2ea6a726a727068" translate="yes" xml:space="preserve">
          <source>hermpow() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermpow () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="1eee8ceef03d6dcbeb79a50c7f615deb605e0dae" translate="yes" xml:space="preserve">
          <source>hermroots() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermroots () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="1d1c37bf04748db91b3a3cdadaa5763002021f08" translate="yes" xml:space="preserve">
          <source>hermsub() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermsub () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="d87ec52ac7f31feeb7c83dea47d33f3452320890" translate="yes" xml:space="preserve">
          <source>hermtrim() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermtrim () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="857d5c48b31f62bc2a13387f7e770b871fc92c12" translate="yes" xml:space="preserve">
          <source>hermval() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermval () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="88fb317567a143f890d676cde96d283ed4db9bd5" translate="yes" xml:space="preserve">
          <source>hermval2d() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermval2d () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="6296eaf5bcfcc38caf0cb407666d1ad9c2bc25b8" translate="yes" xml:space="preserve">
          <source>hermval3d() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermval3d () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="a925c822145fc7565af119ca59512d6d732b7744" translate="yes" xml:space="preserve">
          <source>hermvander() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermvander () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="bb822f077fee5653b17bfffd80d280a0699372da" translate="yes" xml:space="preserve">
          <source>hermvander2d() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermvander2d () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="1b06826a3896d8f2a4debb462ece3bf8c707f8ad" translate="yes" xml:space="preserve">
          <source>hermvander3d() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermvander3d () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="9d5aaacb363f186fde329c6d9b7449239b43c77d" translate="yes" xml:space="preserve">
          <source>hermweight() (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermweight () (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="a8b034a09a58ba3d6ba672328c165f9e3383b101" translate="yes" xml:space="preserve">
          <source>hermx (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermx (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="18c907dd88964a18e9cd501e60cde94dc2507ed4" translate="yes" xml:space="preserve">
          <source>hermzero (in module numpy.polynomial.hermite)</source>
          <target state="translated">hermzero (numpy.polynomial.hermite 모듈)</target>
        </trans-unit>
        <trans-unit id="d96d8163c03a8fea5409db4e360360d38e27a017" translate="yes" xml:space="preserve">
          <source>hfft() (in module numpy.fft)</source>
          <target state="translated">hfft () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="4dc3bdccbbcdc2af4ef75daa7cd1bb13b8ca5b1a" translate="yes" xml:space="preserve">
          <source>higher: &lt;code&gt;j&lt;/code&gt;.</source>
          <target state="translated">더 높은 : &lt;code&gt;j&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b48e30383041229a2ec4802e49afebe0a624474d" translate="yes" xml:space="preserve">
          <source>histogram</source>
          <target state="translated">histogram</target>
        </trans-unit>
        <trans-unit id="e2d707ee5eeec56ac7daeaae9fc65deaa03fe83c" translate="yes" xml:space="preserve">
          <source>histogram() (in module numpy)</source>
          <target state="translated">histogram () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="7d3b358490abea5d2639cd5b2df238199f8f0606" translate="yes" xml:space="preserve">
          <source>histogram2d() (in module numpy)</source>
          <target state="translated">histogram2d () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="fb87d447f627beb3e7b41c36f965f26049ff67e5" translate="yes" xml:space="preserve">
          <source>histogram_bin_edges() (in module numpy)</source>
          <target state="translated">histogram_bin_edges () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="bec2696ab1dc95c06e0d2b5f47da8cfeab87c74e" translate="yes" xml:space="preserve">
          <source>histogramdd() (in module numpy)</source>
          <target state="translated">histogramdd () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="a11efb101940441e37000d7b86f6358c03d62e73" translate="yes" xml:space="preserve">
          <source>holidays (numpy.busdaycalendar attribute)</source>
          <target state="translated">휴일 (numpy.busdaycalendar 속성)</target>
        </trans-unit>
        <trans-unit id="52ab86a87214a453d9f82538264f190854915247" translate="yes" xml:space="preserve">
          <source>hour</source>
          <target state="translated">hour</target>
        </trans-unit>
        <trans-unit id="c381a4971de042d1634490e98f1c25ce6ec5b40d" translate="yes" xml:space="preserve">
          <source>how you installed NumPy</source>
          <target state="translated">NumPy 설치 방법</target>
        </trans-unit>
        <trans-unit id="59f0b6bb0bcfcf15cf6ca0b81b7b0b9b9a8c9698" translate="yes" xml:space="preserve">
          <source>how you installed Python</source>
          <target state="translated">Python을 설치 한 방법</target>
        </trans-unit>
        <trans-unit id="cd8bea210925cc4747b613f02168fe3a5b757cbf" translate="yes" xml:space="preserve">
          <source>hsplit (in module numpy.ma)</source>
          <target state="translated">hsplit (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="4ec2827bf2bda4a706a18e654fa357c924c26d36" translate="yes" xml:space="preserve">
          <source>hsplit() (in module numpy)</source>
          <target state="translated">hsplit () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b7d1229a9b0ccc14d1b2f76e985743487e3387c9" translate="yes" xml:space="preserve">
          <source>hstack (in module numpy.ma)</source>
          <target state="translated">hstack (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="51f6c003765bb89261abb4dbe621116aa80a2890" translate="yes" xml:space="preserve">
          <source>hstack() (in module numpy)</source>
          <target state="translated">hstack () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="87cafd2c99d195dc504237f298c88ee352bceb14" translate="yes" xml:space="preserve">
          <source>hypergeometric() (in module numpy.random)</source>
          <target state="translated">hypergeometric () (numpy.random 모듈)</target>
        </trans-unit>
        <trans-unit id="07ec552b1c1c8803e1875dfaedce1135075790cc" translate="yes" xml:space="preserve">
          <source>hypot (in module numpy)</source>
          <target state="translated">hypot (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="eac1132899a4308e49c2dfee5318e22c4241a84f" translate="yes" xml:space="preserve">
          <source>i0() (in module numpy)</source>
          <target state="translated">i0 () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="7ed69aede8f0ec5d05fbcbba33222ddfe34443d4" translate="yes" xml:space="preserve">
          <source>identity (in module numpy.ma)</source>
          <target state="translated">신원 (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="a427f86e38dfbaface1d90f1d0f61d8980f6cd92" translate="yes" xml:space="preserve">
          <source>identity() (in module numpy)</source>
          <target state="translated">identity () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="cf9db0a2b1836549deb6840922c2242d15ce4a17" translate="yes" xml:space="preserve">
          <source>ids() (numpy.ma.masked_array method)</source>
          <target state="translated">ids () (numpy.ma.masked_array의 메서드)</target>
        </trans-unit>
        <trans-unit id="e84014fe8c4f5e59182611501e1abf41de6eb5d5" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;axes&lt;/code&gt; is larger than the last axis of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;axes&lt;/code&gt; 마지막 축보다 큰 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2b3c5466134b54602fa974d9df78c970c567730" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;indices[i] &amp;gt;= indices[i + 1]&lt;/code&gt;, the i-th generalized &amp;ldquo;row&amp;rdquo; is simply &lt;code&gt;a[indices[i]]&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;indices[i] &amp;gt;= indices[i + 1]&lt;/code&gt; , i 번째의 일반화 된 &quot;행&quot;은 단순히 &lt;code&gt;a[indices[i]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f67479341e179a89a7895de0674857f88124ebab" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;indices[i] &amp;gt;= indices[i + 1]&lt;/code&gt;, the i-th generalized &amp;ldquo;row&amp;rdquo; is simply &lt;code&gt;array[indices[i]]&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;indices[i] &amp;gt;= indices[i + 1]&lt;/code&gt; , i 번째의 일반화 된 &quot;행&quot;은 단순히 &lt;code&gt;array[indices[i]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5863fb7c227bd68a4feada36091aed6b10e62ceb" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;indices[i] &amp;gt;= len(a)&lt;/code&gt; or &lt;code&gt;indices[i] &amp;lt; 0&lt;/code&gt;, an error is raised.</source>
          <target state="translated">만약 &lt;code&gt;indices[i] &amp;gt;= len(a)&lt;/code&gt; 또는 &lt;code&gt;indices[i] &amp;lt; 0&lt;/code&gt; , 에러가 발생된다.</target>
        </trans-unit>
        <trans-unit id="2ba3c8ede725d0131562ab5a61a251af41340771" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;indices[i] &amp;gt;= len(array)&lt;/code&gt; or &lt;code&gt;indices[i] &amp;lt; 0&lt;/code&gt;, an error is raised.</source>
          <target state="translated">만약 &lt;code&gt;indices[i] &amp;gt;= len(array)&lt;/code&gt; 나 &lt;code&gt;indices[i] &amp;lt; 0&lt;/code&gt; , 에러가 발생된다.</target>
        </trans-unit>
        <trans-unit id="176ac281ce3e81ad34a162ee049969b1790e321c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;mode=clip&lt;/code&gt;, values in &lt;code&gt;a&lt;/code&gt; (and thus &lt;code&gt;Ba&lt;/code&gt;) may be any (signed) integer; negative integers are mapped to 0; values greater than &lt;code&gt;n-1&lt;/code&gt; are mapped to &lt;code&gt;n-1&lt;/code&gt;; and then the new array is constructed as above.</source>
          <target state="translated">만약 &lt;code&gt;mode=clip&lt;/code&gt; 에서, 값 (따라서 &lt;code&gt;Ba&lt;/code&gt; ) 상관 (부호)의 정수일 수있다; 음의 정수는 0에 매핑됩니다. 보다 큰 값을 &lt;code&gt;n-1&lt;/code&gt; 로 매핑되고 &lt;code&gt;n-1&lt;/code&gt; ; 그런 다음 새 배열이 위와 같이 구성됩니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ec422e835fc875842e3710356064f0aede84e06" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;mode=raise&lt;/code&gt; (the default), then, first of all, each element of &lt;code&gt;a&lt;/code&gt; (and thus &lt;code&gt;Ba&lt;/code&gt;) must be in the range &lt;code&gt;[0, n-1]&lt;/code&gt;; now, suppose that &lt;code&gt;i&lt;/code&gt; (in that range) is the value at the &lt;code&gt;(j0, j1, &amp;hellip;, jm)&lt;/code&gt; position in &lt;code&gt;Ba&lt;/code&gt; - then the value at the same position in the new array is the value in &lt;code&gt;Bchoices[i]&lt;/code&gt; at that same position;</source>
          <target state="translated">만약 &lt;code&gt;mode=raise&lt;/code&gt; (디폴트), 그리고, 우선, 각 소자 (및 &lt;code&gt;Ba&lt;/code&gt; ) 사이에 있어야 &lt;code&gt;[0, n-1]&lt;/code&gt; ; 이제 &lt;code&gt;i&lt;/code&gt; (해당 범위 내)가 &lt;code&gt;Ba&lt;/code&gt; 의 &lt;code&gt;(j0, j1, &amp;hellip;, jm)&lt;/code&gt; 위치에 있는 값 이라고 가정합니다. 그러면 새 배열에서 동일한 위치에있는 값은 동일한 &lt;code&gt;Bchoices[i]&lt;/code&gt; 에 있는 값입니다 위치; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f7cd17f30786f8aa167ef38c22ae01cad0d1440" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;mode=wrap&lt;/code&gt;, values in &lt;code&gt;a&lt;/code&gt; (and thus &lt;code&gt;Ba&lt;/code&gt;) may be any (signed) integer; modular arithmetic is used to map integers outside the range &lt;code&gt;[0, n-1]&lt;/code&gt; back into that range; and then the new array is constructed as above;</source>
          <target state="translated">만약 &lt;code&gt;mode=wrap&lt;/code&gt; 에서 값 (따라서 &lt;code&gt;Ba&lt;/code&gt; ) 상관 (부호)의 정수일 수있다; 모듈 식 산술은 &lt;code&gt;[0, n-1]&lt;/code&gt; 범위 밖의 정수를 다시 해당 범위 로 매핑하는 데 사용됩니다 . 그런 다음 새 배열이 위와 같이 구성됩니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02e3e65bdf8759c28afd61658b928b4e76e32b09" translate="yes" xml:space="preserve">
          <source>if False no optimization is taken</source>
          <target state="translated">False가 최적화를 수행하지 않으면</target>
        </trans-unit>
        <trans-unit id="4dc70f7d66e4fa79e2c552ae73dfd3a8dbed77a0" translate="yes" xml:space="preserve">
          <source>if True defaults to the &amp;lsquo;greedy&amp;rsquo; algorithm</source>
          <target state="translated">True가 'greedy'알고리즘으로 기본 설정된 경우</target>
        </trans-unit>
        <trans-unit id="0dd9c714e66d26c173a47a08730c68e6575a82d6" translate="yes" xml:space="preserve">
          <source>if a callable in &lt;a href=&quot;https://docs.python.org/dev/library/formatter.html#module-formatter&quot;&gt;&lt;code&gt;formatter&lt;/code&gt;&lt;/a&gt; does not return a string.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/formatter.html#module-formatter&quot;&gt; &lt;code&gt;formatter&lt;/code&gt; &lt;/a&gt; 에서 호출 가능 문자열을 반환하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="fc2a9b34e3488fc1f9ae3197c917198094f5920f" translate="yes" xml:space="preserve">
          <source>if a callable in &lt;code&gt;formatter&lt;/code&gt; does not return a string.</source>
          <target state="translated">&lt;code&gt;formatter&lt;/code&gt; 의 콜 러블 이 문자열을 반환하지 않는 경우 .</target>
        </trans-unit>
        <trans-unit id="f34f1086d253f1e0f26fa44bb0ce9a74280f23f8" translate="yes" xml:space="preserve">
          <source>if a list is given that starts with &lt;code&gt;einsum_path&lt;/code&gt;, uses this as the contraction path</source>
          <target state="translated">&lt;code&gt;einsum_path&lt;/code&gt; 로 시작하는 목록이 제공되면 이를 수축 경로로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="18fd0bda86a9a295a91fbc4836d24ffc66e9365e" translate="yes" xml:space="preserve">
          <source>if given, the subpackage path such as the subpackage is in subpackage_path / subpackage_name. If None,the subpackage is assumed to be located in the local path / subpackage_name.</source>
          <target state="translated">지정된 경우 서브 패키지와 같은 서브 패키지 경로는 subpackage_path / subpackage_name에 있습니다. None 인 경우 하위 패키지는 로컬 경로 / subpackage_name에 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c4a8beb1c694a8e0ecef2e059d49ff9f6968bf07" translate="yes" xml:space="preserve">
          <source>if the dim name ends in &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">희미한 이름이 &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faa1523b5e871cd5864c2c03fcdef7ab2b25b535" translate="yes" xml:space="preserve">
          <source>if the dim size will be determined from the operands and not from a &lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;frozen&lt;/a&gt; signature</source>
          <target state="translated">희미한 크기가 &lt;a href=&quot;generalized-ufuncs#frozen&quot;&gt;고정 된&lt;/a&gt; 서명이 아닌 피연산자에서 결정되는 경우</target>
        </trans-unit>
        <trans-unit id="d51ea59620d00af142c3361b9f5154c60f8d9d48" translate="yes" xml:space="preserve">
          <source>if the dtype is for a user-defined numpy type A user-defined type uses the numpy C-API machinery to extend numpy to handle a new array type. See &lt;a href=&quot;../../user/c-info.beyond-basics#user-user-defined-data-types&quot;&gt;User-defined data-types&lt;/a&gt; in the NumPy manual.</source>
          <target state="translated">dtype이 사용자 정의 numpy 유형 인 경우 사용자 정의 유형은 numpy C-API 기계를 사용하여 numpy를 확장하여 새 배열 유형을 처리합니다. NumPy 매뉴얼의 &lt;a href=&quot;../../user/c-info.beyond-basics#user-user-defined-data-types&quot;&gt;사용자 정의 데이터 유형&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0893f52022703300517974a92c9a37361f838819" translate="yes" xml:space="preserve">
          <source>if the dtype is for a user-defined numpy type A user-defined type uses the numpy C-API machinery to extend numpy to handle a new array type. See &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/c-info.beyond-basics.html#user-user-defined-data-types&quot;&gt;User-defined data-types&lt;/a&gt; in the NumPy manual.</source>
          <target state="translated">dtype이 사용자 정의 numpy 유형 용인 경우 사용자 정의 유형은 numpy C-API 기계를 사용하여 numpy를 확장하여 새 배열 유형을 처리합니다. NumPy 매뉴얼의 &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/c-info.beyond-basics.html#user-user-defined-data-types&quot;&gt;사용자 정의 데이터 유형&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b5c6cb7fa204af4c195cda1fbcdb8b73efd0368" translate="yes" xml:space="preserve">
          <source>if the matter has been resolved publicly while the committee was considering responses.</source>
          <target state="translated">위원회가 응답을 고려하는 동안 문제가 공개적으로 해결 된 경우.</target>
        </trans-unit>
        <trans-unit id="d19221ded7a06c92b21669bf3dbea28bf510c16c" translate="yes" xml:space="preserve">
          <source>if this is a dtype compiled into numpy (such as ints, floats etc)</source>
          <target state="translated">이것이 numpy로 컴파일 된 dtype 인 경우 (예 : ints, floats 등)</target>
        </trans-unit>
        <trans-unit id="4ace133787885500296098d0109815e8f9978c74" translate="yes" xml:space="preserve">
          <source>if this is a structured array type, with fields</source>
          <target state="translated">이것이 필드가있는 구조화 된 배열 유형 인 경우</target>
        </trans-unit>
        <trans-unit id="bac302eb15f54ba1f129f7a28e5f9c308684b495" translate="yes" xml:space="preserve">
          <source>if we determine no violations have occurred.</source>
          <target state="translated">위반이 발생하지 않았다고 판단하는 경우.</target>
        </trans-unit>
        <trans-unit id="41c4c7fbf44f009722556927ce7d6529096f2062" translate="yes" xml:space="preserve">
          <source>if you built from source, your compiler versions and ideally a build log</source>
          <target state="translated">소스, 컴파일러 버전 및 이상적으로는 빌드 로그에서 빌드 한 경우</target>
        </trans-unit>
        <trans-unit id="2fc008accb74936a3e6693ccb2eb2fb02899550e" translate="yes" xml:space="preserve">
          <source>ifft() (in module numpy.fft)</source>
          <target state="translated">ifft () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="7d7e91743f772c2c18ff5df62bf0a5ee55bc435c" translate="yes" xml:space="preserve">
          <source>ifft2() (in module numpy.fft)</source>
          <target state="translated">ifft2 () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="ce1ae71a2999bb89f4f47e58ff3eca24b84e5dd2" translate="yes" xml:space="preserve">
          <source>ifftn() (in module numpy.fft)</source>
          <target state="translated">ifftn () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="abd0e9c3e002bf9bb3c606c8fa951dc1254476a9" translate="yes" xml:space="preserve">
          <source>ifftshift() (in module numpy.fft)</source>
          <target state="translated">ifftshift () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="8bfcc155a32c7a1ffbfee95ee7446e18d5c70bd8" translate="yes" xml:space="preserve">
          <source>ignore: Take no action when the exception occurs.</source>
          <target state="translated">무시 : 예외가 발생하면 조치를 취하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c8605fbc5644445741a8e842c2274861d5af6877" translate="yes" xml:space="preserve">
          <source>ihfft() (in module numpy.fft)</source>
          <target state="translated">ihfft () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="589c1ac62485160e1892bd3359163ba2a53ba7e9" translate="yes" xml:space="preserve">
          <source>iinfo (class in numpy)</source>
          <target state="translated">iinfo (numpy의 클래스)</target>
        </trans-unit>
        <trans-unit id="713b5616d1746935c926d6cf853b3d738f789232" translate="yes" xml:space="preserve">
          <source>iinfo.max</source>
          <target state="translated">iinfo.max</target>
        </trans-unit>
        <trans-unit id="427f6dcd40fe9d1a2f4fd755e78cce480b94e8d7" translate="yes" xml:space="preserve">
          <source>iinfo.min</source>
          <target state="translated">iinfo.min</target>
        </trans-unit>
        <trans-unit id="9d94601a5ff8b459aef8e15b499f0b04623065d7" translate="yes" xml:space="preserve">
          <source>imag (numpy.char.chararray attribute)</source>
          <target state="translated">imag (numpy.char.chararray 속성)</target>
        </trans-unit>
        <trans-unit id="2666645ac2b5c182472cbcae92858161ba0afba0" translate="yes" xml:space="preserve">
          <source>imag() (in module numpy)</source>
          <target state="translated">imag () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="60a1155a25d515f6a2c314c1f0bc91793994ab19" translate="yes" xml:space="preserve">
          <source>imaginary part of scalar</source>
          <target state="translated">스칼라의 허수 부</target>
        </trans-unit>
        <trans-unit id="2812a2f47839aaabc0d4910394a0192d90152b8f" translate="yes" xml:space="preserve">
          <source>import_array (C function)</source>
          <target state="translated">import_array (C 함수)</target>
        </trans-unit>
        <trans-unit id="65d93dbdf90a568057a272fc7a584fbea1e07e3c" translate="yes" xml:space="preserve">
          <source>import_ufunc (C function)</source>
          <target state="translated">import_ufunc (C 함수)</target>
        </trans-unit>
        <trans-unit id="1781f0d06ab5889476231b5d1247bf4cd2261b73" translate="yes" xml:space="preserve">
          <source>import_ufunc()</source>
          <target state="translated">import_ufunc()</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="0e4a509e1b8d618b4a2515a8d2988067b84969f1" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;__user__&lt;/code&gt; module block,</source>
          <target state="translated">에 &lt;code&gt;__user__&lt;/code&gt; 모듈 블록</target>
        </trans-unit>
        <trans-unit id="6b54fcccf43a57a2df6ceb629833326b8efd131b" translate="yes" xml:space="preserve">
          <source>in Chebyshev form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt;. If a zero has multiplicity n, then it must appear in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">체비 쇼프 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 입니다. 0이 다중도 n을 갖는 경우, &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; n 번 나타나야합니다 . 예를 들어, 2가 다중도 3의 근이고 3이 다중도 2의 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 이면 근 은 [2, 2, 2, 3, 3]과 비슷합니다. 뿌리는 임의의 순서로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="655d579d8f603fc86c783a69394281c8f08fddf4" translate="yes" xml:space="preserve">
          <source>in Chebyshev form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">체비 쇼프 형식에서, &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;code&gt;roots&lt;/code&gt; 입니다. 0에 다중도 n이 있으면 &lt;code&gt;roots&lt;/code&gt; n에 n을 표시해야합니다 . 예를 들어,이 경우 다양성 세와 3의 루트 다양성이의 루트입니다, 다음 &lt;code&gt;roots&lt;/code&gt; 처럼 보이는 뭔가 [2, 2, 2, 3, 3]. 뿌리는 어떤 순서로도 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32ebb50906635cc69b915ff8c0cfdf623f7f69f9" translate="yes" xml:space="preserve">
          <source>in Hermite form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt;. If a zero has multiplicity n, then it must appear in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">Hermite 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 입니다. 0이 다중도 n을 갖는 경우, &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; n 번 나타나야합니다 . 예를 들어, 2가 다중도 3의 근이고 3이 다중도 2의 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 이면 근 은 [2, 2, 2, 3, 3]과 비슷합니다. 뿌리는 임의의 순서로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f05b768379157e3e9f5c4073d657e0d1e73ef60a" translate="yes" xml:space="preserve">
          <source>in Hermite form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">Hermite 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;code&gt;roots&lt;/code&gt; 입니다. 0에 다중도 n이 있으면 &lt;code&gt;roots&lt;/code&gt; n에 n을 표시해야합니다 . 예를 들어,이 경우 다양성 세와 3의 루트 다양성이의 루트입니다, 다음 &lt;code&gt;roots&lt;/code&gt; 처럼 보이는 뭔가 [2, 2, 2, 3, 3]. 뿌리는 어떤 순서로도 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cbcc65cd203ab44b71eace47be45409d1b19956" translate="yes" xml:space="preserve">
          <source>in HermiteE form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt;. If a zero has multiplicity n, then it must appear in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">HermiteE 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 입니다. 0이 다중도 n을 갖는 경우, &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; n 번 나타나야합니다 . 예를 들어, 2가 다중도 3의 근이고 3이 다중도 2의 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 이면 근 은 [2, 2, 2, 3, 3]과 비슷합니다. 뿌리는 임의의 순서로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a1b8d470c587297f3a0a10df5ad71ba0ff844c3" translate="yes" xml:space="preserve">
          <source>in HermiteE form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">HermiteE 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;code&gt;roots&lt;/code&gt; 입니다. 0에 다중도 n이 있으면 &lt;code&gt;roots&lt;/code&gt; n에 n을 표시해야합니다 . 예를 들어,이 경우 다양성 세와 3의 루트 다양성이의 루트입니다, 다음 &lt;code&gt;roots&lt;/code&gt; 처럼 보이는 뭔가 [2, 2, 2, 3, 3]. 뿌리는 어떤 순서로도 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6cc0e94beca61aa6fd609bfa0de14530581199f" translate="yes" xml:space="preserve">
          <source>in Laguerre form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt;. If a zero has multiplicity n, then it must appear in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">Laguerre 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 입니다. 0이 다중도 n을 갖는 경우, &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; n 번 나타나야합니다 . 예를 들어, 2가 다중도 3의 근이고 3이 다중도 2의 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 이면 근 은 [2, 2, 2, 3, 3]과 비슷합니다. 뿌리는 임의의 순서로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3022bcbad1088df9c33f13a961cca43ee740dce3" translate="yes" xml:space="preserve">
          <source>in Laguerre form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">Laguerre 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;code&gt;roots&lt;/code&gt; 입니다. 0이 다중도 n을 갖는 경우, &lt;code&gt;roots&lt;/code&gt; n 번 나타나야합니다 . 예를 들어, 2가 다중도 3의 근이고 3이 다중도 2의 &lt;code&gt;roots&lt;/code&gt; 이면 근 은 [2, 2, 2, 3, 3]과 비슷합니다. 뿌리는 임의의 순서로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d58c2624763897a8035334cc25b4b8d32672d58f" translate="yes" xml:space="preserve">
          <source>in Legendre form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt;. If a zero has multiplicity n, then it must appear in &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt;&lt;code&gt;roots&lt;/code&gt;&lt;/a&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">르장 드르 형식으로, 여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 입니다. 0이 다중도 n을 갖는 경우, &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; n 번 나타나야합니다 . 예를 들어, 2가 다중도 3의 근이고 3이 다중도 2의 &lt;a href=&quot;numpy.roots#numpy.roots&quot;&gt; &lt;code&gt;roots&lt;/code&gt; &lt;/a&gt; 이면 근 은 [2, 2, 2, 3, 3]과 비슷합니다. 뿌리는 임의의 순서로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="316c762c5a87e5a5c6abced8887f1b87e58a3d41" translate="yes" xml:space="preserve">
          <source>in Legendre form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">Legendre 형식에서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;code&gt;roots&lt;/code&gt; 입니다. 0에 다중도 n이 있으면 &lt;code&gt;roots&lt;/code&gt; n 번 나타나야합니다 . 예를 들어,이 경우 다양성 세와 3의 루트 다양성이의 루트입니다, 다음 &lt;code&gt;roots&lt;/code&gt; 처럼 보이는 뭔가 [2, 2, 2, 3, 3]. 뿌리는 어떤 순서로도 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e76e2124991cd5fe979df7d74abbc4b3fd295462" translate="yes" xml:space="preserve">
          <source>in an integral relative to &lt;code&gt;x&lt;/code&gt;. Then</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 에 대해 적분 입니다. 그때</target>
        </trans-unit>
        <trans-unit id="38d9cf69868e2daf8ff97d02741bfa4bdab68220" translate="yes" xml:space="preserve">
          <source>in several different formats.</source>
          <target state="translated">여러 다른 형식으로.</target>
        </trans-unit>
        <trans-unit id="4cde133370ea9e41cc65cd83a7e7757ac4bd3ca4" translate="yes" xml:space="preserve">
          <source>in the &lt;code&gt;doc/&lt;/code&gt; directory. If all goes well, this will generate a &lt;code&gt;build/html&lt;/code&gt; subdirectory containing the built documentation. If you get a message about &lt;code&gt;installed numpy != current repo git version&lt;/code&gt;, you must either override the check by setting &lt;code&gt;GITVER&lt;/code&gt; or re-install NumPy.</source>
          <target state="translated">에서 &lt;code&gt;doc/&lt;/code&gt; 디렉토리. 모든 것이 잘되면 &lt;code&gt;build/html&lt;/code&gt; 된 문서를 포함 하는 build / html 하위 디렉토리 가 생성됩니다 . &lt;code&gt;installed numpy != current repo git version&lt;/code&gt; 에 대한 메시지가 표시되면 &lt;code&gt;GITVER&lt;/code&gt; 를 설정하여 검사를 무시 하거나 NumPy를 다시 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f636db17bcb2bd246524398e2652265163785824" translate="yes" xml:space="preserve">
          <source>in the Fourier domain, after appropriate padding (padding is necessary to prevent circular convolution). Since multiplication is more efficient (faster) than convolution, the function &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve&quot;&gt;&lt;code&gt;scipy.signal.fftconvolve&lt;/code&gt;&lt;/a&gt; exploits the FFT to calculate the convolution of large data-sets.</source>
          <target state="translated">푸리에 영역에서, 적절한 패딩 후 (원형 컨벌루션을 방지하기 위해 패딩이 필요함). 곱셈은 ​​컨볼 루션보다 효율적 (빠름)이기 때문에 &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve&quot;&gt; &lt;code&gt;scipy.signal.fftconvolve&lt;/code&gt; &lt;/a&gt; 함수 는 FFT를 활용하여 큰 데이터 세트의 컨볼 루션을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="8b273d4149a90717a323e732751d7404646e1978" translate="yes" xml:space="preserve">
          <source>in the equations:</source>
          <target state="translated">방정식에서 :</target>
        </trans-unit>
        <trans-unit id="e072e2d5f94c068c73d607c9d66c573dea79ad03" translate="yes" xml:space="preserve">
          <source>in the first 20 lines of the source and use the &lt;code&gt;f77flags&lt;/code&gt; for specified type of the fcompiler (the first character &lt;code&gt;C&lt;/code&gt; is optional).</source>
          <target state="translated">소스의 처음 20 줄에 지정된 &lt;code&gt;f77flags&lt;/code&gt; 유형에 대해 f77flags를 사용하십시오 (첫 번째 문자 &lt;code&gt;C&lt;/code&gt; 는 선택 사항 임).</target>
        </trans-unit>
        <trans-unit id="1afee4b2afdccff044d7dfd3d5977fa906fb425f" translate="yes" xml:space="preserve">
          <source>in the modified environment.</source>
          <target state="translated">수정 된 환경에서.</target>
        </trans-unit>
        <trans-unit id="ebcd846998b846dfebc5baf9f968661968d6464c" translate="yes" xml:space="preserve">
          <source>in time/space is equivalent to the multiplication</source>
          <target state="translated">시간 / 공간의 곱셈은 곱셈과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a82d04fe5e9668a80e126d02bd2c72a4cd4a2e81" translate="yes" xml:space="preserve">
          <source>in your &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file.</source>
          <target state="translated">당신의 &lt;a href=&quot;http://www.swig.org&quot;&gt;꿀꺽 꿀꺽&lt;/a&gt; 인터페이스 파일.</target>
        </trans-unit>
        <trans-unit id="1c76bb2e45eafdfa85622ad4323e244adec69144" translate="yes" xml:space="preserve">
          <source>in-place</source>
          <target state="translated">in-place</target>
        </trans-unit>
        <trans-unit id="cde5738d706c9397f16484448bbb6cbef4f81537" translate="yes" xml:space="preserve">
          <source>in1d() (in module numpy)</source>
          <target state="translated">in1d () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="41227da441b1bc2260a07e682205a2c90ce2d560" translate="yes" xml:space="preserve">
          <source>include_dirs</source>
          <target state="translated">include_dirs</target>
        </trans-unit>
        <trans-unit id="01ff2840aef7bfc3913c3b4552a25015278a7141" translate="yes" xml:space="preserve">
          <source>increases while</source>
          <target state="translated">동안 증가</target>
        </trans-unit>
        <trans-unit id="907f71f2de9430e340acca9f6257169509f3cf76" translate="yes" xml:space="preserve">
          <source>increasing</source>
          <target state="translated">increasing</target>
        </trans-unit>
        <trans-unit id="faadd9e3a6599c489e78c0b38118f8b5ab44ec82" translate="yes" xml:space="preserve">
          <source>index (numpy.broadcast attribute)</source>
          <target state="translated">index (numpy.broadcast 속성)</target>
        </trans-unit>
        <trans-unit id="571d10022cfb91c2d1f65e25953fb1cb8f60ea7e" translate="yes" xml:space="preserve">
          <source>index() (in module numpy.char)</source>
          <target state="translated">index () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="e96755b751398af1f6710586457530c5268f70ec" translate="yes" xml:space="preserve">
          <source>indicates that the axis will be reordered such that the final shape of the transposed array will be reordered according to the indices &lt;code&gt;(i, j, k)&lt;/code&gt;.</source>
          <target state="translated">전치 배열의 최종 모양이 인덱스 &lt;code&gt;(i, j, k)&lt;/code&gt; 에 따라 재정렬되도록 축이 재정렬됨을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6b6b3d6f29ad48c29df29561f2e5e877f5756672" translate="yes" xml:space="preserve">
          <source>indices() (in module numpy)</source>
          <target state="translated">indices () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="bfec6d5c011e09d5f4789d14e9c68b08aae4fa84" translate="yes" xml:space="preserve">
          <source>indices() will create a set of arrays (stacked as a one-higher dimensioned array), one per dimension with each representing variation in that dimension. An example illustrates much better than a verbal description:</source>
          <target state="translated">indices ()는 각 차원의 변형을 나타내는 차원 당 하나씩 배열 집합 (1 차원이 더 높은 배열로 쌓여 있음)을 만듭니다. 예는 구두 설명보다 훨씬 더 잘 설명합니다.</target>
        </trans-unit>
        <trans-unit id="aa3dfef42e0c22b5d2e5e3638c1b61b47bbb10da" translate="yes" xml:space="preserve">
          <source>inf</source>
          <target state="translated">inf</target>
        </trans-unit>
        <trans-unit id="9b35e8a556e245e38530f9bfae7b90aa5205aafb" translate="yes" xml:space="preserve">
          <source>inf (in module numpy)</source>
          <target state="translated">inf (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="4b3f811fe08257d868c53f8012210b317edd7dbb" translate="yes" xml:space="preserve">
          <source>inf means the numpy.inf object, and the Frobenius norm is the root-of-sum-of-squares norm.</source>
          <target state="translated">inf는 numpy.inf 개체를 의미하며 Frobenius 표준은 제곱근 표준입니다.</target>
        </trans-unit>
        <trans-unit id="eab7e187a49d96cf391ca9e69c116f95c75cc44f" translate="yes" xml:space="preserve">
          <source>info() (in module numpy)</source>
          <target state="translated">info () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="76338eea4944a1a91dd93b9dd7db8ce37752cdc8" translate="yes" xml:space="preserve">
          <source>infstr : str</source>
          <target state="translated">infstr : str</target>
        </trans-unit>
        <trans-unit id="886504dcf761c587884e7a237999d3d8cca614bd" translate="yes" xml:space="preserve">
          <source>infty (in module numpy)</source>
          <target state="translated">infty (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="af1c4d0f4ded1b5170c6392e423dd5cab17d043e" translate="yes" xml:space="preserve">
          <source>inline.</source>
          <target state="translated">inline.</target>
        </trans-unit>
        <trans-unit id="72d7a2460765054b54f336a9427f7fbfe87adf92" translate="yes" xml:space="preserve">
          <source>inner over the last dimension, outer over the second to last, and loop/broadcast over the rest.</source>
          <target state="translated">마지막 차원의 내부, 두 번째 끝의 외부, 나머지는 루프 / 브로드 캐스트</target>
        </trans-unit>
        <trans-unit id="5f123346bdbb363d444d47bdb9c28465468b8839" translate="yes" xml:space="preserve">
          <source>inner() (in module numpy)</source>
          <target state="translated">inner () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="e2a6659d9b0b57e374a9d29c8af19b89e8ee53ba" translate="yes" xml:space="preserve">
          <source>inner1d</source>
          <target state="translated">inner1d</target>
        </trans-unit>
        <trans-unit id="4b8cd9023924a9c5c68453ecaf2ed0132bb87b0f" translate="yes" xml:space="preserve">
          <source>innerproduct() (in module numpy.ma)</source>
          <target state="translated">innerproduct () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="e2bed20d43796bb396f8b024234177c69c68ae16" translate="yes" xml:space="preserve">
          <source>inputs and produce</source>
          <target state="translated">입력 및 생산</target>
        </trans-unit>
        <trans-unit id="c7277204bffc57e9b88bc7b12607dd0477be687c" translate="yes" xml:space="preserve">
          <source>insert padding fields</source>
          <target state="translated">패딩 필드 삽입</target>
        </trans-unit>
        <trans-unit id="6aed61b2ff13be9cc8cee906e5fee4ba20e3f1a0" translate="yes" xml:space="preserve">
          <source>insert() (in module numpy)</source>
          <target state="translated">insert () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="translated">대신에:</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="f83af7ec415f72d6fec1af2b7f05f151760b4aa2" translate="yes" xml:space="preserve">
          <source>int PyArray_NDIM()</source>
          <target state="translated">int PyArray_NDIM ()</target>
        </trans-unit>
        <trans-unit id="36a55c6ce46c45f83f23bd73f06a9f6fd4cac8c9" translate="yes" xml:space="preserve">
          <source>int_type: this argument is interpreted as a flat index into the array, specifying which element to copy and return.</source>
          <target state="translated">int_type :이 인수는 배열에 대한 평면 인덱스로 해석되어 복사 및 반환 할 요소를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7185a5e3c2af5c755974978f8242fc4a6dda74af" translate="yes" xml:space="preserve">
          <source>integ() (numpy.poly1d method)</source>
          <target state="translated">integ () (numpy.poly1d의 메서드)</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="ba2fc02d86ca927ed7d6ffc1eb03af692ef73831" translate="yes" xml:space="preserve">
          <source>integer arrays/array-likes (fancy)</source>
          <target state="translated">정수 배열 / 배열 유사 (팬시)</target>
        </trans-unit>
        <trans-unit id="36e73186b12205a39c51ebf67d8fb8413a4952a1" translate="yes" xml:space="preserve">
          <source>integer value of flags</source>
          <target state="translated">플래그의 정수 값</target>
        </trans-unit>
        <trans-unit id="a95a3d37700d8583bc9ca47feb1faea9fdd9fdb3" translate="yes" xml:space="preserve">
          <source>integer_like If an int N, sum over the last N axes of &lt;code&gt;a&lt;/code&gt; and the first N axes of &lt;code&gt;b&lt;/code&gt; in order. The sizes of the corresponding axes must match.</source>
          <target state="translated">integer_like int N 인 경우 &lt;code&gt;a&lt;/code&gt; 의 마지막 N 축 과 &lt;code&gt;b&lt;/code&gt; 의 첫 번째 N 축을 순서대로 합합니다. 해당 축의 크기가 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="7d37d8f52822505808803d3438d996424a35d98a" translate="yes" xml:space="preserve">
          <source>integers() (numpy.random.Generator method)</source>
          <target state="translated">integers () (numpy.random.Generator의 메서드)</target>
        </trans-unit>
        <trans-unit id="5236584e57f49047e6531f682906a1786657ed23" translate="yes" xml:space="preserve">
          <source>integrate an ODE with BDF method</source>
          <target state="translated">ODE를 BDF 방법과 통합</target>
        </trans-unit>
        <trans-unit id="57d0ef135a59632e83bf1295e5907966e8cd6add" translate="yes" xml:space="preserve">
          <source>integrate an ODE with Runge-Kutta 4,5</source>
          <target state="translated">Runge-Kutta 4,5와 ODE 통합</target>
        </trans-unit>
        <trans-unit id="5ea2d81a89e0cdc89baf7cd1ff38cdfefa33ba78" translate="yes" xml:space="preserve">
          <source>interface</source>
          <target state="translated">interface</target>
        </trans-unit>
        <trans-unit id="5ba6b3454a4ea9bc79fa5849f9d52134c84899e4" translate="yes" xml:space="preserve">
          <source>interface files can be hard to write</source>
          <target state="translated">인터페이스 파일은 쓰기가 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="392d2577713336d9dfa4698083430e37c60570f3" translate="yes" xml:space="preserve">
          <source>interp() (in module numpy)</source>
          <target state="translated">interp () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="545ef1aad8ae6f08b042ac98c23028560af2a628" translate="yes" xml:space="preserve">
          <source>interpolate() (numpy.polynomial.chebyshev.Chebyshev class method)</source>
          <target state="translated">interpolate () (numpy.polynomial.chebyshev.Chebyshev 클래스 메서드)</target>
        </trans-unit>
        <trans-unit id="fd4d768bfdc637f5f84e0b9e9c9171d1eb9f4fe6" translate="yes" xml:space="preserve">
          <source>intersect1d() (in module numpy)</source>
          <target state="translated">intersect1d () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="2036f471e0106d75c0242b2369d573e9a5904fab" translate="yes" xml:space="preserve">
          <source>inv() (in module numpy.linalg)</source>
          <target state="translated">inv () (numpy.linalg 모듈)</target>
        </trans-unit>
        <trans-unit id="530580d8bfa6ee2dedb4162faedb89cd2f9e6ea9" translate="yes" xml:space="preserve">
          <source>invalid : when NaNs are generated</source>
          <target state="translated">invalid : NaN이 생성 된 경우</target>
        </trans-unit>
        <trans-unit id="9ebe23e748280467830ccd843bf0aea78baa3ac7" translate="yes" xml:space="preserve">
          <source>inverse Fourier transform of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">역 푸리에 변환 처리 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d31ab99d87892e40ecdabed1cf1207030f0a71f5" translate="yes" xml:space="preserve">
          <source>inverse of square 2D array &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">정사각형 2D 배열 &lt;code&gt;a&lt;/code&gt; 의 역</target>
        </trans-unit>
        <trans-unit id="0ba53de2a56213b9fac8272d244d21b3f3f20d1e" translate="yes" xml:space="preserve">
          <source>inverse of square matrix &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">정사각형 행렬 &lt;code&gt;a&lt;/code&gt; 의 역</target>
        </trans-unit>
        <trans-unit id="a8e90c540f96c39a94326bad414676cb54b7dbce" translate="yes" xml:space="preserve">
          <source>invert (in module numpy)</source>
          <target state="translated">반전 (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="f18c21d04925b7d8f4389c398e6fb08f84e7b6ff" translate="yes" xml:space="preserve">
          <source>ipmt() (in module numpy)</source>
          <target state="translated">ipmt () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="9071e182d2c5daf6c3b2ea1181836661de387d8b" translate="yes" xml:space="preserve">
          <source>irfft() (in module numpy.fft)</source>
          <target state="translated">irfft () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="fe79b8af0a5a909af8006785bdfacfe6e90ed2dd" translate="yes" xml:space="preserve">
          <source>irfft2() (in module numpy.fft)</source>
          <target state="translated">irfft2 () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="d805b3c634a62df4d15d35916d3f0175961190a0" translate="yes" xml:space="preserve">
          <source>irfftn() (in module numpy.fft)</source>
          <target state="translated">irfftn () (numpy.fft 모듈)</target>
        </trans-unit>
        <trans-unit id="f14608d98afbd206c72a0f93e3e5ae7decad8e48" translate="yes" xml:space="preserve">
          <source>irr() (in module numpy)</source>
          <target state="translated">irr () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="c8f394d3679ebaaaa9dceec09d655ab6a39f101d" translate="yes" xml:space="preserve">
          <source>is Dirichlet-distributed</source>
          <target state="translated">Dirichlet-distributed입니다</target>
        </trans-unit>
        <trans-unit id="bf5ce588118c293e887dbe4937c8c511653ae105" translate="yes" xml:space="preserve">
          <source>is a &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file that defines a python module &lt;code&gt;Vector&lt;/code&gt; that wraps the functions in &lt;code&gt;Vector.h&lt;/code&gt; while utilizing the typemaps in &lt;code&gt;numpy.i&lt;/code&gt; to correctly handle the C arrays.</source>
          <target state="translated">C 배열을 올바르게 처리하기 위해 &lt;code&gt;numpy.i&lt;/code&gt; 의 유형 맵을 사용하면서 &lt;code&gt;Vector.h&lt;/code&gt; 의 함수를 래핑 하는 파이썬 모듈 &lt;code&gt;Vector&lt;/code&gt; 를 정의 하는 &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; 인터페이스 파일입니다 .</target>
        </trans-unit>
        <trans-unit id="59f688724e843f7558a3d9788b8154a82fbf6b0e" translate="yes" xml:space="preserve">
          <source>is a constant independent of</source>
          <target state="translated">~에 독립적 인 상수</target>
        </trans-unit>
        <trans-unit id="892edb54cbd62ef7ec977ce414dc0b90c2ec37b1" translate="yes" xml:space="preserve">
          <source>is a diagonal matrix and contains the &lt;a href=&quot;https://en.wikipedia.org/wiki/Singular_value&quot;&gt;singular values&lt;/a&gt; of</source>
          <target state="translated">대각 행렬이며 다음의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Singular_value&quot;&gt;특이 값&lt;/a&gt; 을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="ec6eb3ae1ef7cfabfea3af43d447ce20b31f158e" translate="yes" xml:space="preserve">
          <source>is a diagonal matrix consisting of A&amp;rsquo;s so-called singular values, (followed, typically, by zeros), and then</source>
          <target state="translated">A의 소위 특이 값으로 구성되는 대각 행렬 (일반적으로 0)</target>
        </trans-unit>
        <trans-unit id="f54eb805174d044426c666805519511c1354b734" translate="yes" xml:space="preserve">
          <source>is a vector containing the positive concentration parameters.</source>
          <target state="translated">는 양의 농도 매개 변수를 포함하는 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="649810debdfaba754dab0f0f0b24fd7a3436ba63" translate="yes" xml:space="preserve">
          <source>is a vector perpendicular to both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are arrays of vectors, the vectors are defined by the last axis of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; by default, and these axes can have dimensions 2 or 3. Where the dimension of either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; is 2, the third component of the input vector is assumed to be zero and the cross product calculated accordingly. In cases where both input vectors have dimension 2, the z-component of the cross product is returned.</source>
          <target state="translated">양쪽 벡터 직교 및 &lt;code&gt;b&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 벡터의 배열 인 경우 기본적으로 벡터는 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 마지막 축으로 정의 되며이 축의 크기는 2 또는 3 일 수 있습니다. &lt;code&gt;a&lt;/code&gt; 또는 &lt;code&gt;b&lt;/code&gt; 의 치수 가 2 인 경우 입력 벡터는 0으로 가정되고 그에 따라 교차 곱이 계산됩니다. 두 입력 벡터 모두 차원이 2 인 경우 교차 곱의 z 성분이 반환됩니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04cf89208d030a31d4e7bc71dfcddee88d16b6ea" translate="yes" xml:space="preserve">
          <source>is an integer,</source>
          <target state="translated">정수입니다.</target>
        </trans-unit>
        <trans-unit id="8d39e8726604a8f0ec5d0016ca064a0576f8bced" translate="yes" xml:space="preserve">
          <source>is asymptotically optimal, which is why it appears in most estimators. These are simply plug-in methods that give good starting points for number of bins. In the equations below,</source>
          <target state="translated">는 점진적으로 최적이므로 대부분의 견적 자에 표시됩니다. 이것들은 단순히 빈 수에 대한 좋은 시작점을 제공하는 플러그인 방법입니다. 아래 방정식에서</target>
        </trans-unit>
        <trans-unit id="83e222cdaaa77fb44a565fff768db44dd0a3e4a7" translate="yes" xml:space="preserve">
          <source>is chi-square distributed, denoted</source>
          <target state="translated">카이-제곱 분포이며</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">에 해당</target>
        </trans-unit>
        <trans-unit id="02a969a20819e82ac1522deae133266e4b187c43" translate="yes" xml:space="preserve">
          <source>is equivalent to &lt;code&gt;numpy.arange(n,dtype=float)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;numpy.arange(n,dtype=float)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="c9f929b053eb7304b51c9f3bdd85885354fbf926" translate="yes" xml:space="preserve">
          <source>is just</source>
          <target state="translated">그냥</target>
        </trans-unit>
        <trans-unit id="47b4fff64c5ca2ab27f33c602d1be543983c16c9" translate="yes" xml:space="preserve">
          <source>is not legal C/C++ syntax. Therefore, we cannot provide typemaps of the form:</source>
          <target state="translated">유효한 C / C ++ 구문이 아닙니다. 따라서 다음 형식의 유형 맵을 제공 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ab5458a9478d5141488cfb1fec9a7be5cafa5416" translate="yes" xml:space="preserve">
          <source>is proportional to</source>
          <target state="translated">에 비례</target>
        </trans-unit>
        <trans-unit id="6f70b49013963e6d375d200240e1ca4ac44b28ea" translate="yes" xml:space="preserve">
          <source>is provided by a user, and in addition,</source>
          <target state="translated">사용자가 제공하며</target>
        </trans-unit>
        <trans-unit id="9f3606c1cc9ff43432c0b31877e0646e27caa59a" translate="yes" xml:space="preserve">
          <source>is replaced with</source>
          <target state="translated">다음으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="99b6ce4ad36c4bd681c26084c98f8ed7b0e1c6ea" translate="yes" xml:space="preserve">
          <source>is represented by a complex exponential</source>
          <target state="translated">복소수 지수로 표현</target>
        </trans-unit>
        <trans-unit id="f64812ecc34370a99a39ab1d670ed9361b92b46c" translate="yes" xml:space="preserve">
          <source>is represented in the column-major order as:</source>
          <target state="translated">열 주요 순서로 다음과 같이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="91bb5656fc08e061d8d765ea035001ad9ae85943" translate="yes" xml:space="preserve">
          <source>is represented in the row-major order as:</source>
          <target state="translated">행 주요 순서로 다음과 같이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="62bce82718f573737027b7bca53b98ce084fc8ca" translate="yes" xml:space="preserve">
          <source>is said solution, then</source>
          <target state="translated">그 해결책은</target>
        </trans-unit>
        <trans-unit id="e72bb9b597bdaaf1e8996cccac792af2076b2e95" translate="yes" xml:space="preserve">
          <source>is simply the diagonal matrix consisting of the reciprocals of A&amp;rsquo;s singular values (again, followed by zeros). &lt;a href=&quot;#rec505eafac9d-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">는 단순히 A의 특이 값의 역수로 구성된 대각 행렬입니다 (다시 0이 뒤 따름). &lt;a href=&quot;#rec505eafac9d-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa3bd232771f2bce19cd7e615abbc27f68743a58" translate="yes" xml:space="preserve">
          <source>is that matrix such that</source>
          <target state="translated">그 행렬은</target>
        </trans-unit>
        <trans-unit id="f1bfc0ef0123f6da95d764fd626c229ba9123b4a" translate="yes" xml:space="preserve">
          <source>is the</source>
          <target state="translated">입니다</target>
        </trans-unit>
        <trans-unit id="0b0bbfbe80a1d7c643a9a53c6ba70db87950d163" translate="yes" xml:space="preserve">
          <source>is the &lt;em&gt;i&lt;/em&gt;-th element of the shape of the array. Negative indices are interpreted as counting from the end of the array (&lt;em&gt;i.e.&lt;/em&gt;, if</source>
          <target state="translated">는 IS &lt;em&gt;나&lt;/em&gt; 어레이 모양의 번째 요소. 음의 인덱스는 배열 (의 끝에서 계산으로 해석됩니다 &lt;em&gt;즉&lt;/em&gt; 경우,</target>
        </trans-unit>
        <trans-unit id="e8197e9e3e7801bbed379064ffade5e6c8772399" translate="yes" xml:space="preserve">
          <source>is the Chi-square with q degrees of freedom.</source>
          <target state="translated">자유도가 q 인 카이 제곱입니다.</target>
        </trans-unit>
        <trans-unit id="e2d1a89245b61df6a2b4e3ef50ec21c4d5ca28c4" translate="yes" xml:space="preserve">
          <source>is the Gamma function.</source>
          <target state="translated">감마 함수입니다.</target>
        </trans-unit>
        <trans-unit id="15b07c20629d4240894e01ea59ca707736d4a506" translate="yes" xml:space="preserve">
          <source>is the Riemann Zeta function.</source>
          <target state="translated">Riemann Zeta 함수입니다.</target>
        </trans-unit>
        <trans-unit id="870de148d3f1824ea91ed08c51fc20c2a23b1261" translate="yes" xml:space="preserve">
          <source>is the array representing the grayscale image, and</source>
          <target state="translated">회색조 이미지를 나타내는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="2f10eb2838acc88427325f95231f78cc9eae027a" translate="yes" xml:space="preserve">
          <source>is the binwidth and</source>
          <target state="translated">binwidth이고</target>
        </trans-unit>
        <trans-unit id="babd9b36c907c9628bde0ab1296acb9d6145b5de" translate="yes" xml:space="preserve">
          <source>is the complex conjugate of the component at frequency</source>
          <target state="translated">주파수에서 구성 요소의 복소 공액입니다.</target>
        </trans-unit>
        <trans-unit id="c146247a023415bf0fb19381193572296bcd4a7d" translate="yes" xml:space="preserve">
          <source>is the covariance of</source>
          <target state="translated">공분산입니다</target>
        </trans-unit>
        <trans-unit id="7dee470dedb23faec9c2b494d21fd11fc576b9cb" translate="yes" xml:space="preserve">
          <source>is the following:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aab0928e78b29128ec6aab8484e295558c0ebecc" translate="yes" xml:space="preserve">
          <source>is the gamma function,</source>
          <target state="translated">감마 함수입니다.</target>
        </trans-unit>
        <trans-unit id="a239f5e048ffeee86cc4aa0108f9b5aa2a2a1b5c" translate="yes" xml:space="preserve">
          <source>is the gamma function. When</source>
          <target state="translated">감마 함수입니다. 언제</target>
        </trans-unit>
        <trans-unit id="362312c60be8472cc2706f930a91683abb5a69e5" translate="yes" xml:space="preserve">
          <source>is the golden ratio. As the jumps wrap around the period, the actual distances between neighboring streams will slowly grow smaller than the jump size, but using the golden ratio this way is a classic method of constructing a low-discrepancy sequence that spreads out the states around the period optimally. You will not be able to jump enough to make those distances small enough to overlap in your lifetime.</source>
          <target state="translated">황금비입니다. 점프가주기를 감싸면서 인접한 스트림 사이의 실제 거리는 점프 크기보다 천천히 커지지 만,이 방법으로 황금 비율을 사용하면주기에 따라 상태를 최적으로 분산시키는 낮은 불일치 시퀀스를 구성하는 고전적인 방법입니다. . 당신은 평생 겹치도록 그 거리를 작게 만들 정도로 충분히 뛰어 내릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a4e4eac64c0432f57c6d78076fd682be87aa7d72" translate="yes" xml:space="preserve">
          <source>is the k&amp;rsquo;th root of</source>
          <target state="translated">의 k 번째 루트입니다</target>
        </trans-unit>
        <trans-unit id="2bb07f768c66331db52f97eab1472a022bd0e6b5" translate="yes" xml:space="preserve">
          <source>is the mean and</source>
          <target state="translated">평균이며</target>
        </trans-unit>
        <trans-unit id="3ee5d48736dde92a7e977919b5cbce7a02a0e228" translate="yes" xml:space="preserve">
          <source>is the mode and</source>
          <target state="translated">모드이며</target>
        </trans-unit>
        <trans-unit id="7ffb2f7e6adf689c3264360ea7cf9c928e3b1eb8" translate="yes" xml:space="preserve">
          <source>is the mode, a location parameter, and</source>
          <target state="translated">모드, 위치 매개 변수 및</target>
        </trans-unit>
        <trans-unit id="192dc3a5ad7cfc300527dc0b7f2eb912bfd6c1c3" translate="yes" xml:space="preserve">
          <source>is the modified Bessel function of order 0.</source>
          <target state="translated">차수 0의 수정 된 베셀 함수입니다.</target>
        </trans-unit>
        <trans-unit id="a1daf25b67e594550b924cb47e4b3924578fdabb" translate="yes" xml:space="preserve">
          <source>is the modified zeroth-order Bessel function.</source>
          <target state="translated">수정 된 0 차 베셀 함수입니다.</target>
        </trans-unit>
        <trans-unit id="e9860cb9d8fa48b8f96296d82cba525ac397225a" translate="yes" xml:space="preserve">
          <source>is the number of bins. All estimators that compute bin counts are recast to bin width using the &lt;a href=&quot;numpy.ptp#numpy.ptp&quot;&gt;&lt;code&gt;ptp&lt;/code&gt;&lt;/a&gt; of the data. The final bin count is obtained from &lt;code&gt;np.round(np.ceil(range / h))&lt;/code&gt;.</source>
          <target state="translated">구간 수입니다. 구간 수를 계산하는 모든 추정기 는 데이터 의 &lt;a href=&quot;numpy.ptp#numpy.ptp&quot;&gt; &lt;code&gt;ptp&lt;/code&gt; &lt;/a&gt; 를 사용하여 구간 폭으로 다시 캐스팅됩니다 . 최종 빈 개수는 &lt;code&gt;np.round(np.ceil(range / h))&lt;/code&gt; 에서 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="117e453d7cd2ca8c7b5272f542a1736f91ee53d1" translate="yes" xml:space="preserve">
          <source>is the number of dimensions in the broadcasted array.</source>
          <target state="translated">브로드 캐스트 된 배열의 차원 수입니다.</target>
        </trans-unit>
        <trans-unit id="f6eec8863959ccd34d440e83bf2ed67e4d59ef3d" translate="yes" xml:space="preserve">
          <source>is the number of dimensions in the underlying array.</source>
          <target state="translated">기본 배열의 차원 수입니다.</target>
        </trans-unit>
        <trans-unit id="df10defeffa2bbd51b3bedc9f232c644460393a5" translate="yes" xml:space="preserve">
          <source>is the number of elements in the input,</source>
          <target state="translated">입력의 요소 수입니다.</target>
        </trans-unit>
        <trans-unit id="f6f3d71cf6e37e5acc5b895cd3d257965c625aa2" translate="yes" xml:space="preserve">
          <source>is the number of successes,</source>
          <target state="translated">성공의 수입니다.</target>
        </trans-unit>
        <trans-unit id="35aaf38eb0aca33a707bc008f5480790753d5b79" translate="yes" xml:space="preserve">
          <source>is the number of successes.</source>
          <target state="translated">성공 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="cc20222b37f32686dabcbf54a6755c1be3614eb1" translate="yes" xml:space="preserve">
          <source>is the number of trials,</source>
          <target state="translated">시행 횟수,</target>
        </trans-unit>
        <trans-unit id="421663ffd33bddfda2d5e648090f45d32c8b6302" translate="yes" xml:space="preserve">
          <source>is the number of trials, and</source>
          <target state="translated">시행 횟수이고</target>
        </trans-unit>
        <trans-unit id="3fcb58cdfb0993cc653a15c6ef63dd6d9fa61ff9" translate="yes" xml:space="preserve">
          <source>is the output, and</source>
          <target state="translated">출력이며</target>
        </trans-unit>
        <trans-unit id="2061536259128ad9b5f84ca0aedff66806d55059" translate="yes" xml:space="preserve">
          <source>is the probability of success,</source>
          <target state="translated">성공 확률입니다</target>
        </trans-unit>
        <trans-unit id="c42d4f6a6e83f7fb0926909f8611357388937e8b" translate="yes" xml:space="preserve">
          <source>is the probability of success, and</source>
          <target state="translated">성공 확률이며</target>
        </trans-unit>
        <trans-unit id="99184f4bb7d5cca4bb415ed9493c7e32c84991c0" translate="yes" xml:space="preserve">
          <source>is the same size as</source>
          <target state="translated">같은 크기입니다</target>
        </trans-unit>
        <trans-unit id="fdb379cc402264383f6c2497862f6a5943982c35" translate="yes" xml:space="preserve">
          <source>is the sampling interval.</source>
          <target state="translated">샘플링 간격입니다.</target>
        </trans-unit>
        <trans-unit id="20c41dec1ccc2341bec1d757fd7963a9ed0b5fda" translate="yes" xml:space="preserve">
          <source>is the scale parameter, which is the inverse of the rate parameter</source>
          <target state="translated">비율 매개 변수이며 비율 매개 변수의 역수입니다.</target>
        </trans-unit>
        <trans-unit id="c6a63a35975751c040b4fca4892408d08314c203" translate="yes" xml:space="preserve">
          <source>is the scale parameter.</source>
          <target state="translated">스케일 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="9a102cab87ca2e1f4adf003574ac9bf463a9dab2" translate="yes" xml:space="preserve">
          <source>is the shape and</source>
          <target state="translated">모양이고</target>
        </trans-unit>
        <trans-unit id="d273d6cf5b56fa01adb1e344a138f92994c83dec" translate="yes" xml:space="preserve">
          <source>is the singular value decomposition of A, then</source>
          <target state="translated">A의 특이 값 분해입니다.</target>
        </trans-unit>
        <trans-unit id="6ea459a57ad089bf11d5aeb92b9183fa1eb03c37" translate="yes" xml:space="preserve">
          <source>is the standard deviation of the normally distributed logarithm of the variable. A log-normal distribution results if a random variable is the &lt;em&gt;product&lt;/em&gt; of a large number of independent, identically-distributed variables in the same way that a normal distribution results if the variable is the &lt;em&gt;sum&lt;/em&gt; of a large number of independent, identically-distributed variables.</source>
          <target state="translated">변수의 정규 분포 로그의 표준 편차입니다. 랜덤 변수가 인 경우 로그 정규 분포 결과 &lt;em&gt;생성물&lt;/em&gt; 변수가 정규 분포 결과 경우 것과 같은 방식으로 독립적으로 동일하게 분포 변수들의 다수의 &lt;em&gt;합&lt;/em&gt; 독립 동일하게 분포 변수의 다수의이 .</target>
        </trans-unit>
        <trans-unit id="30f9440ac2ba91a821bd2d85d567117cb489d8ce" translate="yes" xml:space="preserve">
          <source>is the variance of</source>
          <target state="translated">의 분산입니다</target>
        </trans-unit>
        <trans-unit id="fce39bf6b6bc580be42f4497ecaca049190d6f60" translate="yes" xml:space="preserve">
          <source>is used, then the following rules are applied when a Fortran or C function calls the call-back argument &lt;code&gt;gun&lt;/code&gt;:</source>
          <target state="translated">사용 된 경우 Fortran 또는 C 함수가 콜백 인수 &lt;code&gt;gun&lt;/code&gt; 을 호출 할 때 다음 규칙이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a0b1b4dbc6b3692bb1a5884b7951871a06ba8f7" translate="yes" xml:space="preserve">
          <source>is valid NumPy code which will create a 0-dimensional object array. Type checkers will complain about the above example when using the NumPy types however. If you really intended to do the above, then you can either use a &lt;code&gt;# type: ignore&lt;/code&gt; comment:</source>
          <target state="translated">0 차원 개체 배열을 만드는 유효한 NumPy 코드입니다. 그러나 유형 검사기는 NumPy 유형을 사용할 때 위의 예에 대해 불평합니다. 위의 작업을 실제로 수행하려는 경우 &lt;code&gt;# type: ignore&lt;/code&gt; 사용할 수 있습니다 . 주석 무시 :</target>
        </trans-unit>
        <trans-unit id="392140062909b5bb864c995eab01cae4c3b8e31f" translate="yes" xml:space="preserve">
          <source>is:</source>
          <target state="translated">is:</target>
        </trans-unit>
        <trans-unit id="a30177c181647da939839d9b0459ac0f69d9284b" translate="yes" xml:space="preserve">
          <source>is_array()</source>
          <target state="translated">is_array()</target>
        </trans-unit>
        <trans-unit id="2117352bf2e987a5b768b1542772e67b0a597696" translate="yes" xml:space="preserve">
          <source>is_busday() (in module numpy)</source>
          <target state="translated">is_busday () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="b425fd5daababda3ebd87058c9b1293e40e58473" translate="yes" xml:space="preserve">
          <source>is_local_src_dir() (in module numpy.distutils.misc_util)</source>
          <target state="translated">is_local_src_dir () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="535595479e8d05fc3ca19f5820217e9387a7c2f1" translate="yes" xml:space="preserve">
          <source>is_mask() (in module numpy.ma)</source>
          <target state="translated">is_mask () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="79e0343638edb083804cc9d74141961569b184d7" translate="yes" xml:space="preserve">
          <source>is_masked() (in module numpy.ma)</source>
          <target state="translated">is_masked () (numpy.ma 모듈)</target>
        </trans-unit>
        <trans-unit id="693c89faca305520f2baa637ffe571b5afb0e27a" translate="yes" xml:space="preserve">
          <source>is_sequence() (in module numpy.distutils.misc_util)</source>
          <target state="translated">is_sequence () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="4b9db0bfd6fc6353f7fcc6bad1a8bfc63e8f0c99" translate="yes" xml:space="preserve">
          <source>is_string() (in module numpy.distutils.misc_util)</source>
          <target state="translated">is_string () (numpy.distutils.misc_util 모듈)</target>
        </trans-unit>
        <trans-unit id="59ae340e2ed65d453fb5db9d1d1df7489691cc88" translate="yes" xml:space="preserve">
          <source>isalignedstruct (numpy.dtype attribute)</source>
          <target state="translated">isalignedstruct (numpy.dtype 속성)</target>
        </trans-unit>
        <trans-unit id="b56b8ee33a0b7b1f0810794fa912511a898ea313" translate="yes" xml:space="preserve">
          <source>isalnum() (in module numpy.char)</source>
          <target state="translated">isalnum () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="953b987e4cd851984f890999980ab190c9391f54" translate="yes" xml:space="preserve">
          <source>isalpha() (in module numpy.char)</source>
          <target state="translated">isalpha () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="8b312894f0e048986595f371bda133d513fe7bcc" translate="yes" xml:space="preserve">
          <source>isbuiltin (numpy.dtype attribute)</source>
          <target state="translated">isbuiltin (numpy.dtype 속성)</target>
        </trans-unit>
        <trans-unit id="04551df0be68e08a8dd7857feec62083e849ed4d" translate="yes" xml:space="preserve">
          <source>isclose() (in module numpy)</source>
          <target state="translated">isclose () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="385a5b3c0d2081f52ff806b0464ed2bdfd037104" translate="yes" xml:space="preserve">
          <source>iscomplex() (in module numpy)</source>
          <target state="translated">iscomplex () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="1ddfe4218ad3bfc529b7a0f3fb858d9272401493" translate="yes" xml:space="preserve">
          <source>iscomplexobj() (in module numpy)</source>
          <target state="translated">iscomplexobj () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="543db06c023ca387940297345cf9076b49816b26" translate="yes" xml:space="preserve">
          <source>iscontiguous() (numpy.ma.masked_array method)</source>
          <target state="translated">iscontiguous () (numpy.ma.masked_array의 메서드)</target>
        </trans-unit>
        <trans-unit id="470350121783f126cc60999f9b63106d9d9fb28c" translate="yes" xml:space="preserve">
          <source>isdecimal() (in module numpy.char)</source>
          <target state="translated">isdecimal () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="370c1f7ee4746683e152ecde90442202b87cbf07" translate="yes" xml:space="preserve">
          <source>isdigit() (in module numpy.char)</source>
          <target state="translated">isdigit () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="b6792fb43f204312854fae64bc52637eb5922ec0" translate="yes" xml:space="preserve">
          <source>isfinite (in module numpy)</source>
          <target state="translated">isfinite (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="40cc65dfc5b18046d55cbd6251c7ab4b7eb6a1ed" translate="yes" xml:space="preserve">
          <source>isfinite : Shows which elements are finite (not one of Not a Number, positive infinity and negative infinity)</source>
          <target state="translated">isfinite : 유한 한 요소를 표시합니다 (숫자가 아님, 양의 무한대 및 음의 무한대 중 하나가 아님).</target>
        </trans-unit>
        <trans-unit id="bbdd6a0609dff476d83325bfb325072a3058cec9" translate="yes" xml:space="preserve">
          <source>isfortran() (in module numpy)</source>
          <target state="translated">isfortran () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="716990e128fdef822af11333daf9d7e95aa903ba" translate="yes" xml:space="preserve">
          <source>isin() (in module numpy)</source>
          <target state="translated">isin () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="68d13af36ab60d72f61f7dac8fff25bb434925e2" translate="yes" xml:space="preserve">
          <source>isinf (in module numpy)</source>
          <target state="translated">isinf (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="8e1993bf7366fdcedb851409b06bea3388411544" translate="yes" xml:space="preserve">
          <source>isinf : Shows which elements are positive or negative infinity</source>
          <target state="translated">isinf : 양수 또는 음의 무한대 인 요소를 표시합니다</target>
        </trans-unit>
        <trans-unit id="3814a782f11016f1be500ea4d8221fdfcbae1d81" translate="yes" xml:space="preserve">
          <source>isinf : Shows which elements are positive or negative infinity.</source>
          <target state="translated">isinf : 양수 또는 음수 무한대 인 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="debd00e78386284aafe4208e04d21190e7102e6c" translate="yes" xml:space="preserve">
          <source>islower() (in module numpy.char)</source>
          <target state="translated">islower () (numpy.char 모듈)</target>
        </trans-unit>
        <trans-unit id="3c980474be202d337bce841928899c559a01194d" translate="yes" xml:space="preserve">
          <source>isnan (in module numpy)</source>
          <target state="translated">isnan (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="a277b686adbee820c409bb60d3ec6bac6f0a20d5" translate="yes" xml:space="preserve">
          <source>isnan : Shows which elements are Not a Number</source>
          <target state="translated">isnan : 숫자가 아닌 요소를 표시합니다</target>
        </trans-unit>
        <trans-unit id="ea5e79b77913a2ada20fa10fa74e59a40cd345f5" translate="yes" xml:space="preserve">
          <source>isnan : Shows which elements are Not a Number.</source>
          <target state="translated">isnan : 숫자가 아닌 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="17e016425dc7bdfcfba52851dcf0c3566add2931" translate="yes" xml:space="preserve">
          <source>isnat (in module numpy)</source>
          <target state="translated">isnat (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="2324744e0d874d9db39a41097de486e2b4570cc9" translate="yes" xml:space="preserve">
          <source>isnative (numpy.dtype attribute)</source>
          <target state="translated">isnative (numpy.dtype 속성)</target>
        </trans-unit>
        <trans-unit id="f9e0d0c8f8b48aada984da8021ea670d6932bd45" translate="yes" xml:space="preserve">
          <source>isneginf : Shows which elements are negative infinity</source>
          <target state="translated">isneginf : 음의 무한대 인 요소를 표시합니다</target>
        </trans-unit>
        <trans-unit id="9fb97eaa35ad1273588d39af477dabcd60367485" translate="yes" xml:space="preserve">
          <source>isneginf : Shows which elements are negative infinity.</source>
          <target state="translated">isneginf : 음의 무한대 인 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b3657f2c5a2e3d3e1004c095001284e3dbe35d1b" translate="yes" xml:space="preserve">
          <source>isneginf() (in module numpy)</source>
          <target state="translated">isneginf () (numpy 모듈)</target>
        </trans-unit>
        <trans-unit id="5357a6193dd51ebd029b974f7cfbad1748a17dbd" translate="yes" xml:space="preserve">
          <source>isnumeric() (in module numpy.char)</source>
          <target state="translated">isnumeric () (numpy.char 모듈)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
