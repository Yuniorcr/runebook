<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="515f47b4abb1dce9e97ea49d8204403e4611929e" translate="yes" xml:space="preserve">
          <source>Return the gradient of an N-dimensional array.</source>
          <target state="translated">N 차원 배열의 기울기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="54965ed70981b14b23ce26ba30cb8a61bb8dbfa1" translate="yes" xml:space="preserve">
          <source>Return the identity array.</source>
          <target state="translated">항등 배열을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="27e04984c1484e1e4dcf34d9dc6f11aff682b763" translate="yes" xml:space="preserve">
          <source>Return the imaginary part of the complex argument.</source>
          <target state="translated">복소수 인수의 허수 부분을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="f32e7563dc1251e29d97c223a7b05292bf504e42" translate="yes" xml:space="preserve">
          <source>Return the indexes of the first occurrences of the maximum values along the specified axis. If axis is None, the index is for the flattened matrix.</source>
          <target state="translated">지정된 축을 따라 최대 값이 처음 나타나는 인덱스를 반환합니다. 축이 없음 인 경우 인덱스는 전개 된 행렬에 대한 것입니다.</target>
        </trans-unit>
        <trans-unit id="ef1228d8108fbf8d52c529bcc94d32966a7e5b27" translate="yes" xml:space="preserve">
          <source>Return the indexes of the first occurrences of the minimum values along the specified axis. If axis is None, the index is for the flattened matrix.</source>
          <target state="translated">지정된 축을 따라 최소값이 처음 나타나는 인덱스를 반환합니다. 축이 없음 인 경우 인덱스는 전개 된 행렬에 대한 것입니다.</target>
        </trans-unit>
        <trans-unit id="b5d360522b4f2a96bea2ce9398f71c49e37722bf" translate="yes" xml:space="preserve">
          <source>Return the indices for the lower-triangle of an (n, m) array.</source>
          <target state="translated">(n, m) 배열의 하위 삼각형에 대한 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c1322e5a732eed85297de913acf0b27628cd9452" translate="yes" xml:space="preserve">
          <source>Return the indices for the lower-triangle of arr.</source>
          <target state="translated">arr의 하 삼각에 대한 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44902a69b78de07a74336b790e1c31eddccc5838" translate="yes" xml:space="preserve">
          <source>Return the indices for the upper-triangle of an (n, m) array.</source>
          <target state="translated">(n, m) 배열의 상단 삼각형에 대한 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08d7b25641bd326be0f5a2a4cfc7452db33961b0" translate="yes" xml:space="preserve">
          <source>Return the indices for the upper-triangle of arr.</source>
          <target state="translated">arr의 상위 삼각에 대한 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b29dadabf708bcad650ad81ab36fa832a296c27d" translate="yes" xml:space="preserve">
          <source>Return the indices of the bins to which each value in input array belongs.</source>
          <target state="translated">입력 배열의 각 값이 속하는 구간의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57114216c9d3e42a32857164a24535225ac0a426" translate="yes" xml:space="preserve">
          <source>Return the indices of the elements that are non-zero.</source>
          <target state="translated">0이 아닌 요소의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e17c758bfa538562da0c345226481fc6238a17c0" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values in the specified axis ignoring NaNs.</source>
          <target state="translated">NaN을 무시하고 지정된 축에서 최대 값의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a20a6f54b6e3e86de467c01b7e0887a181f4546" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values in the specified axis ignoring NaNs. For all-NaN slices &lt;code&gt;ValueError&lt;/code&gt; is raised. Warning: the results cannot be trusted if a slice contains only NaNs and -Infs.</source>
          <target state="translated">NaN을 무시하고 지정된 축에서 최대 값의 인덱스를 반환합니다. 모든 NaN 슬라이스의 경우 &lt;code&gt;ValueError&lt;/code&gt; 가 발생합니다. 경고 : 슬라이스에 NaN 및 -Infs 만 포함 된 경우 결과를 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="45e4ea1c0f2fa42d3f6e2a5a187509f3f6638f38" translate="yes" xml:space="preserve">
          <source>Return the indices of the maximum values.</source>
          <target state="translated">최대 값의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="286dea54db15d8e84b11e2db5daed487563abbe3" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values in the specified axis ignoring NaNs.</source>
          <target state="translated">NaN을 무시하고 지정된 축에서 최소값의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4cb0c04e85bf537fe60e46b11458237f129ab9ca" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values in the specified axis ignoring NaNs. For all-NaN slices &lt;code&gt;ValueError&lt;/code&gt; is raised. Warning: the results cannot be trusted if a slice contains only NaNs and Infs.</source>
          <target state="translated">NaN을 무시하고 지정된 축에서 최소값의 인덱스를 반환합니다. 모든 NaN 슬라이스의 경우 &lt;code&gt;ValueError&lt;/code&gt; 가 발생합니다. 경고 : 슬라이스에 NaN 및 Infs 만 포함 된 경우 결과를 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="191234538d4cd09da1e38080198d78f2b517790d" translate="yes" xml:space="preserve">
          <source>Return the indices of the minimum values.</source>
          <target state="translated">최소값의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a8395f2b6b23337ed22750523af7576e4add042f" translate="yes" xml:space="preserve">
          <source>Return the indices of the non-zero elements of the input array.</source>
          <target state="translated">입력 배열에서 0이 아닌 요소의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b018b42e7dddbc80c723a674ff56f4709807d4ff" translate="yes" xml:space="preserve">
          <source>Return the indices of the original array that give the unique values:</source>
          <target state="translated">고유 값을 제공하는 원래 배열의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4c353b46419aea81b7f823e72abae74eb21131eb" translate="yes" xml:space="preserve">
          <source>Return the indices of unmasked elements that are not zero.</source>
          <target state="translated">마스크되지 않은 요소의 인덱스가 0이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30e853c289f0a4c50584b3abf98ba2751b3843b3" translate="yes" xml:space="preserve">
          <source>Return the indices to access (n, n) arrays, given a masking function.</source>
          <target state="translated">마스킹 함수가 주어지면 (n, n) 배열에 액세스하기 위해 인덱스를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="07776a93c8082aece145909bfa76971f4d685e04" translate="yes" xml:space="preserve">
          <source>Return the indices to access the main diagonal of an array.</source>
          <target state="translated">배열의 주 대각선에 액세스하기 위해 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3f740ddbb458c4878ea93f81c268f2934b93fc0e" translate="yes" xml:space="preserve">
          <source>Return the indices to access the main diagonal of an n-dimensional array.</source>
          <target state="translated">n 차원 배열의 주 대각선에 액세스하기 위해 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2648e5d3aaac410fe82ad287374403b4dc999e46" translate="yes" xml:space="preserve">
          <source>Return the internal state of the masked array, for pickling purposes.</source>
          <target state="translated">산세 목적으로 마스크 된 어레이의 내부 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f8aec3a9964d351d08e5a7f9d6708ffcf5e1fb12" translate="yes" xml:space="preserve">
          <source>Return the item described by i, as a masked array.</source>
          <target state="translated">i로 설명 된 항목을 마스크 배열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="04156679d18e2b0323f8d67cbef4542e3e2f0bde" translate="yes" xml:space="preserve">
          <source>Return the itemsize for the elements of this array.</source>
          <target state="translated">이 배열의 요소의 아이템 사이즈를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="9c7c395532b726e5918581b8d18b88f82606a53d" translate="yes" xml:space="preserve">
          <source>Return the kind of scalar represented by &lt;em&gt;typenum&lt;/em&gt; and the array in &lt;em&gt;*arr&lt;/em&gt; (if &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; ). The array is assumed to be rank-0 and only used if &lt;em&gt;typenum&lt;/em&gt; represents a signed integer. If &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; and the first element is negative then &lt;a href=&quot;#c.NPY_INTNEG_SCALAR&quot;&gt;&lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt;&lt;/a&gt; is returned, otherwise &lt;a href=&quot;#c.NPY_INTPOS_SCALAR&quot;&gt;&lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt;&lt;/a&gt; is returned. The possible return values are the enumerated values in &lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt;&lt;code&gt;NPY_SCALARKIND&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;typenum으로&lt;/em&gt; 표시되는 스칼라의 종류 와 &lt;em&gt;* arr&lt;/em&gt; 의 배열을 반환합니다 ( &lt;em&gt;arr&lt;/em&gt; 이 &lt;code&gt;NULL&lt;/code&gt; 이 아닌 경우 ). 배열은 순위 0으로 간주되며 &lt;em&gt;typenum&lt;/em&gt; 이 부호있는 정수를 나타내는 경우에만 사용됩니다 . 경우 &lt;em&gt;편곡이&lt;/em&gt; 아닌 &lt;code&gt;NULL&lt;/code&gt; 하고 첫 번째 요소는 다음 음수 &lt;a href=&quot;#c.NPY_INTNEG_SCALAR&quot;&gt; &lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt; 가&lt;/a&gt; 반환되고, 그렇지 않으면 &lt;a href=&quot;#c.NPY_INTPOS_SCALAR&quot;&gt; &lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt; 가&lt;/a&gt; 반환됩니다. 가능한 반환 값은 &lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt; &lt;code&gt;NPY_SCALARKIND&lt;/code&gt; 에&lt;/a&gt; 열거 된 값입니다 .</target>
        </trans-unit>
        <trans-unit id="6c2a699f4de6609dceba5d0d4948f589e35b0463" translate="yes" xml:space="preserve">
          <source>Return the kind of scalar represented by &lt;em&gt;typenum&lt;/em&gt; and the array in &lt;em&gt;*arr&lt;/em&gt; (if &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; ). The array is assumed to be rank-0 and only used if &lt;em&gt;typenum&lt;/em&gt; represents a signed integer. If &lt;em&gt;arr&lt;/em&gt; is not &lt;code&gt;NULL&lt;/code&gt; and the first element is negative then &lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt; is returned, otherwise &lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt; is returned. The possible return values are &lt;code&gt;NPY_{kind}_SCALAR&lt;/code&gt; where &lt;code&gt;{kind}&lt;/code&gt; can be &lt;strong&gt;INTPOS&lt;/strong&gt;, &lt;strong&gt;INTNEG&lt;/strong&gt;, &lt;strong&gt;FLOAT&lt;/strong&gt;, &lt;strong&gt;COMPLEX&lt;/strong&gt;, &lt;strong&gt;BOOL&lt;/strong&gt;, or &lt;strong&gt;OBJECT&lt;/strong&gt;. &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; is also an enumerated value &lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt;&lt;code&gt;NPY_SCALARKIND&lt;/code&gt;&lt;/a&gt; variables can take on.</source>
          <target state="translated">&lt;em&gt;typenum으로&lt;/em&gt; 표시되는 스칼라 종류 와 &lt;em&gt;* arr&lt;/em&gt; 배열을 리턴합니다 ( &lt;em&gt;arr&lt;/em&gt; 이 &lt;code&gt;NULL&lt;/code&gt; 이 아닌 경우 ). 배열은 순위 0으로 가정되며 &lt;em&gt;typenum&lt;/em&gt; 이 부호있는 정수를 나타내는 경우에만 사용됩니다 . 경우 &lt;em&gt;편곡이&lt;/em&gt; 아닌 &lt;code&gt;NULL&lt;/code&gt; 하고 첫 번째 요소는 다음 음수 &lt;code&gt;NPY_INTNEG_SCALAR&lt;/code&gt; 가 반환되고, 그렇지 않으면 &lt;code&gt;NPY_INTPOS_SCALAR&lt;/code&gt; 가 반환됩니다. 가능한 리턴 값은 &lt;code&gt;NPY_{kind}_SCALAR&lt;/code&gt; 입니다. 여기서 &lt;code&gt;{kind}&lt;/code&gt; 는 &lt;strong&gt;INTPOS&lt;/strong&gt; , &lt;strong&gt;INTNEG&lt;/strong&gt; , &lt;strong&gt;FLOAT&lt;/strong&gt; , &lt;strong&gt;COMPLEX&lt;/strong&gt; , &lt;strong&gt;BOOL&lt;/strong&gt; 또는&lt;strong&gt;목표&lt;/strong&gt; . &lt;code&gt;NPY_NOSCALAR&lt;/code&gt; 는 &lt;a href=&quot;#c.NPY_SCALARKIND&quot;&gt; &lt;code&gt;NPY_SCALARKIND&lt;/code&gt; &lt;/a&gt; 변수가 취할 수 있는 열거 된 값 입니다.</target>
        </trans-unit>
        <trans-unit id="789567c68dcbd08ff14776ed4411a09c33e2a312" translate="yes" xml:space="preserve">
          <source>Return the largest integer smaller or equal to the division of the inputs.</source>
          <target state="translated">입력의 나눗셈과 같거나 작은 가장 큰 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c517411957215d985fac612bc1905d101f0cfaab" translate="yes" xml:space="preserve">
          <source>Return the largest integer smaller or equal to the division of the inputs. It is equivalent to the Python &lt;code&gt;//&lt;/code&gt; operator and pairs with the Python &lt;code&gt;%&lt;/code&gt; (&lt;a href=&quot;numpy.remainder#numpy.remainder&quot;&gt;&lt;code&gt;remainder&lt;/code&gt;&lt;/a&gt;), function so that &lt;code&gt;a = a % b + b * (a // b)&lt;/code&gt; up to roundoff.</source>
          <target state="translated">입력의 나눗셈과 같거나 작은 가장 큰 정수를 반환합니다. 이것은 파이썬 &lt;code&gt;//&lt;/code&gt; 연산자와 동일 하며 파이썬 &lt;code&gt;%&lt;/code&gt; ( &lt;a href=&quot;numpy.remainder#numpy.remainder&quot;&gt; &lt;code&gt;remainder&lt;/code&gt; &lt;/a&gt; ) 와 짝을 이루어 &lt;code&gt;a = a % b + b * (a // b)&lt;/code&gt; 까지 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="528461915ba0f1c1489223d3271632c604ed396c" translate="yes" xml:space="preserve">
          <source>Return the least-squares solution to a linear matrix equation.</source>
          <target state="translated">최소 제곱 해를 선형 행렬 방정식으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7505ab931d94494348d1865877183d42e29298d" translate="yes" xml:space="preserve">
          <source>Return the low-level casting function to cast from the given descriptor to the builtin type number. If no casting function exists return &lt;code&gt;NULL&lt;/code&gt; and set an error. Using this function instead of direct access to &lt;em&gt;from&lt;/em&gt; -&amp;gt;f-&amp;gt;cast will allow support of any user-defined casting functions added to a descriptors casting dictionary.</source>
          <target state="translated">주어진 디스크립터에서 내장 유형 번호로 캐스트 할 저수준 캐스트 함수를 리턴하십시오. 캐스팅 기능이 없으면 &lt;code&gt;NULL&lt;/code&gt; 을 반환 하고 오류를 설정하십시오. 이 기능 대신에 직접 액세스 사용 &lt;em&gt;에서&lt;/em&gt; &amp;gt; F-&amp;gt; 캐스팅 사전을 주조 기술자에 추가 된 사용자 정의 캐스트 기능을 지원 수를 -.</target>
        </trans-unit>
        <trans-unit id="05b8aee9c2e9a85e6d1b50a6c864af491ed5470a" translate="yes" xml:space="preserve">
          <source>Return the magic string for the given file format version.</source>
          <target state="translated">주어진 파일 형식 버전에 대한 매직 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45b9fb8d90e52afdcdeab93b462fbf6e6a689ebb" translate="yes" xml:space="preserve">
          <source>Return the mapping parameters.</source>
          <target state="translated">맵핑 매개 변수를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="dff3942feb9dba326e808546dfb88526a0e9d175" translate="yes" xml:space="preserve">
          <source>Return the mask of &lt;code&gt;a&lt;/code&gt; as an ndarray if &lt;code&gt;a&lt;/code&gt; is a &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; and the mask is not &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;, else return &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;. To guarantee a full array of booleans of the same shape as a, use &lt;a href=&quot;numpy.ma.getmaskarray#numpy.ma.getmaskarray&quot;&gt;&lt;code&gt;getmaskarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 마스크 돌아 &lt;code&gt;a&lt;/code&gt; 경우 ndarray로 &lt;code&gt;a&lt;/code&gt; A는 &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt; 마스크가 아닌 &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt; 다른 반환, &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt; . a와 같은 모양의 전체 부울 배열을 보장하려면 &lt;a href=&quot;numpy.ma.getmaskarray#numpy.ma.getmaskarray&quot;&gt; &lt;code&gt;getmaskarray&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b73278202e52f0b0978a45563c250eb1da46dd3" translate="yes" xml:space="preserve">
          <source>Return the mask of &lt;code&gt;arr&lt;/code&gt; as an ndarray if &lt;code&gt;arr&lt;/code&gt; is a &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; and the mask is not &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;, else return a full boolean array of False of the same shape as &lt;code&gt;arr&lt;/code&gt;.</source>
          <target state="translated">의 마스크 돌아 &lt;code&gt;arr&lt;/code&gt; 경우 ndarray로 &lt;code&gt;arr&lt;/code&gt; A는 &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt; 마스크가 아닌 &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt; 다른, 같은 모양의 거짓의 전체 부울 배열 반환 &lt;code&gt;arr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65ffa512217eecf2cc4d2d9e1aa59071a56f7fb4" translate="yes" xml:space="preserve">
          <source>Return the mask of a masked array, or full array of False.</source>
          <target state="translated">마스크 배열의 마스크 또는 False의 전체 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f7ab0f436b4820908a4b89bd8836b70b97a073a" translate="yes" xml:space="preserve">
          <source>Return the mask of a masked array, or full boolean array of False.</source>
          <target state="translated">마스크 배열의 마스크 또는 False의 전체 부울 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="241cb3cf7384faa4c4ba57264752a9aa6b9e8f43" translate="yes" xml:space="preserve">
          <source>Return the mask of a masked array, or nomask.</source>
          <target state="translated">마스크 된 배열의 마스크를 반환하거나 마스크를 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0198943da3b2ac1cb3042b4991d279273cca5974" translate="yes" xml:space="preserve">
          <source>Return the matrix as a (possibly nested) list.</source>
          <target state="translated">행렬을 (중첩 된) 목록으로 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="b75e38b4a3b223b45cf14c221c144c99d0ffaeed" translate="yes" xml:space="preserve">
          <source>Return the matrix flattened to shape &lt;code&gt;(1, N)&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the number of elements in the original matrix. A copy is made only if necessary.</source>
          <target state="translated">모양 &lt;code&gt;(1, N)&lt;/code&gt; 평평하게 된 행렬을 반환합니다. 여기서 &lt;code&gt;N&lt;/code&gt; 은 원래 행렬의 요소 수입니다. 필요한 경우에만 사본이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="c4ac3cfce9665c3cd02b10ff7990e423188fc733" translate="yes" xml:space="preserve">
          <source>Return the maximum along a given axis.</source>
          <target state="translated">주어진 축을 따라 최대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f0a0cfedf661c554e6b13ad2a3f76cce3aa97b9e" translate="yes" xml:space="preserve">
          <source>Return the maximum of an array or maximum along an axis, ignoring any NaNs.</source>
          <target state="translated">NaN을 무시하고 배열의 최대 값 또는 축을 따라 최대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c64eaf9042035c98bae94065193fe6421fc65c1" translate="yes" xml:space="preserve">
          <source>Return the maximum of an array or maximum along an axis, ignoring any NaNs. When all-NaN slices are encountered a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised and NaN is returned for that slice.</source>
          <target state="translated">NaN을 무시하고 배열의 최대 값 또는 축을 따라 최대 값을 반환합니다. 모든 NaN 슬라이스가 발견되면 &lt;code&gt;RuntimeWarning&lt;/code&gt; 이 발생하고 해당 슬라이스에 대해 NaN이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6fad07ed00988f48334295989ff3e32f4254aee0" translate="yes" xml:space="preserve">
          <source>Return the maximum of an array or maximum along an axis.</source>
          <target state="translated">배열의 최대 값 또는 축의 최대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="851ea9260a5c21c8b727a2f6b44099b7b71e7056" translate="yes" xml:space="preserve">
          <source>Return the maximum value along an axis.</source>
          <target state="translated">축을 따라 최대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0d6be0f5a172d08a7c0e7f3e97010d8909b42d03" translate="yes" xml:space="preserve">
          <source>Return the maximum value that can be represented by the dtype of an object.</source>
          <target state="translated">객체의 dtype으로 나타낼 수있는 최대 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d4844e2555ec3f77d41a2101fd364ed4802fa533" translate="yes" xml:space="preserve">
          <source>Return the minimum along a given axis.</source>
          <target state="translated">주어진 축을 따라 최소값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0cf1f8e7f200d22e79de4a554dee2f449cbc594f" translate="yes" xml:space="preserve">
          <source>Return the minimum of an array or minimum along an axis.</source>
          <target state="translated">배열의 최소값 또는 축의 최소값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bb55176d6f2b7693402f506634ef43a5e1cf03e9" translate="yes" xml:space="preserve">
          <source>Return the minimum value along an axis.</source>
          <target state="translated">축을 따라 최소값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b621e1221b1b7a270f0bbc888c5ba071f9536129" translate="yes" xml:space="preserve">
          <source>Return the minimum value that can be represented by the dtype of an object.</source>
          <target state="translated">객체의 dtype으로 나타낼 수있는 최소값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f8d656a0fd986950d5ce85bd0732475dd0554e11" translate="yes" xml:space="preserve">
          <source>Return the name of the object files for the given source files.</source>
          <target state="translated">주어진 소스 파일에 대한 개체 파일의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1886a1a2095a1e33aaa9aebfe4fcb46744940ce5" translate="yes" xml:space="preserve">
          <source>Return the natural logarithm of one plus the input array, element-wise.</source>
          <target state="translated">1과 입력 배열의 자연 로그를 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f96c6a38d1c3f4e2d6d5ff607c908ce46c30ea7" translate="yes" xml:space="preserve">
          <source>Return the next floating-point value after x1 towards x2, element-wise.</source>
          <target state="translated">x1 이후 x2의 다음 부동 소수점 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5cd9047e81a2cc3ba4d8daca4480b9f6b8dd9ac8" translate="yes" xml:space="preserve">
          <source>Return the non-negative square-root of an array, element-wise.</source>
          <target state="translated">배열의 음이 아닌 제곱근을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dee32837188ce040da06492863db27352b060204" translate="yes" xml:space="preserve">
          <source>Return the normalized sinc function.</source>
          <target state="translated">정규화 된 sinc 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45827f2b29e4e9a1d268845f6d8bb0e2a53735eb" translate="yes" xml:space="preserve">
          <source>Return the number of elements along a given axis.</source>
          <target state="translated">주어진 축을 따라 요소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="407a2ca0094d9ee1b81e339bb0d79c3fcf85fc89" translate="yes" xml:space="preserve">
          <source>Return the numeric string left-filled with zeros</source>
          <target state="translated">왼쪽으로 채워진 숫자 문자열을 0으로 반환</target>
        </trans-unit>
        <trans-unit id="9544acb9157f395e427dd8e0d80feef13e818eae" translate="yes" xml:space="preserve">
          <source>Return the numeric string left-filled with zeros in a string of length &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">length &lt;code&gt;width&lt;/code&gt; 의 문자열에서 0으로 채워진 숫자 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ad6a849467932edbb809fc9db124421d14bf2efd" translate="yes" xml:space="preserve">
          <source>Return the parameters of the linear map &lt;code&gt;offset + scale*x&lt;/code&gt; that maps &lt;code&gt;old&lt;/code&gt; to &lt;code&gt;new&lt;/code&gt; such that &lt;code&gt;old[i] -&amp;gt; new[i]&lt;/code&gt;, &lt;code&gt;i = 0, 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;old[i] -&amp;gt; new[i]&lt;/code&gt; , &lt;code&gt;i = 0, 1&lt;/code&gt; 과 같이 &lt;code&gt;old&lt;/code&gt; 를 &lt;code&gt;new&lt;/code&gt; 로 매핑 하는 선형 맵 &lt;code&gt;offset + scale*x&lt;/code&gt; 의 매개 변수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="17c1365ff2854ce55ab4f1f5872cdf1b41dbce0d" translate="yes" xml:space="preserve">
          <source>Return the product of array elements over a given axis treating Not a Numbers (NaNs) as ones.</source>
          <target state="translated">NaN (숫자가 아님)을 1로 취급하여 지정된 축에서 배열 요소의 곱을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9562cc8c04f37c48df649c5316be9c38535c7c22" translate="yes" xml:space="preserve">
          <source>Return the product of array elements over a given axis.</source>
          <target state="translated">주어진 축에서 배열 요소의 곱을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="066647f3f555c31df8e132b65d8e8b6c769a5401" translate="yes" xml:space="preserve">
          <source>Return the product of the array elements over the given axis</source>
          <target state="translated">주어진 축에서 배열 요소의 곱을 반환</target>
        </trans-unit>
        <trans-unit id="ae507ac3212bace881909d4291099e9b4046c87c" translate="yes" xml:space="preserve">
          <source>Return the product of the array elements over the given axis.</source>
          <target state="translated">주어진 축에서 배열 요소의 곱을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="50aba3722f13757177ea008511d3ee09acd52904" translate="yes" xml:space="preserve">
          <source>Return the real part of the complex argument.</source>
          <target state="translated">복잡한 인수의 실제 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f21463a9997e5c8887cb6a085d642583ab5f63e" translate="yes" xml:space="preserve">
          <source>Return the reciprocal of the argument, element-wise.</source>
          <target state="translated">인수의 역수를 요소 단위로 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="3b2bb28ab4eb150d26fcb11a8d3977b832d53e55" translate="yes" xml:space="preserve">
          <source>Return the requested number of words for PRNG seeding.</source>
          <target state="translated">PRNG 시딩을 위해 요청 된 단어 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="919518dfceb075aabef35d7360930e2226924a20" translate="yes" xml:space="preserve">
          <source>Return the roots (a.k.a. &amp;ldquo;zeros&amp;rdquo;) of the polynomial</source>
          <target state="translated">다항식의 근 (일명&amp;ldquo;제로&amp;rdquo;)을 반환합니다</target>
        </trans-unit>
        <trans-unit id="a470e7003e669496edea1faf7c2d56ae8dffe15f" translate="yes" xml:space="preserve">
          <source>Return the roots of a polynomial with coefficients given in p.</source>
          <target state="translated">p에 주어진 계수로 다항식의 근을 구합니다.</target>
        </trans-unit>
        <trans-unit id="f4b88d6413411ad58520ea8ce29927c55bdae3f1" translate="yes" xml:space="preserve">
          <source>Return the roots of a polynomial.</source>
          <target state="translated">다항식의 근을 구합니다.</target>
        </trans-unit>
        <trans-unit id="4a03d4dd8ba5afdabef0640c41b07be54872cd19" translate="yes" xml:space="preserve">
          <source>Return the roots of the series polynomial.</source>
          <target state="translated">다항식의 근을 구합니다.</target>
        </trans-unit>
        <trans-unit id="d3e97b43cd32c17446d70eb26c0286035be48eb1" translate="yes" xml:space="preserve">
          <source>Return the scalar dtype or NumPy equivalent of Python type of an object.</source>
          <target state="translated">객체의 Python 유형과 동등한 스칼라 dtype 또는 NumPy를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a73158c5b52af48040bdb4fee91974f5540fc8d" translate="yes" xml:space="preserve">
          <source>Return the scalar type of highest precision of the same kind as the input.</source>
          <target state="translated">입력과 같은 종류의 최고 정밀도의 스칼라 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cb3c5f80b5d93fb6b55e59c93265b18fd4268c77" translate="yes" xml:space="preserve">
          <source>Return the scaled companion matrix of c.</source>
          <target state="translated">c의 스케일 된 컴패니언 행렬을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99bcd2523cffabebe7c604503f7c790947eb2094" translate="yes" xml:space="preserve">
          <source>Return the shape in the &lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt; 의 모양을 반환&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63fe0040824229eb5bbff9e6f6994f8f512d5882" translate="yes" xml:space="preserve">
          <source>Return the shape of an array.</source>
          <target state="translated">배열의 형태를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="e37b8e166f6b9e20972a03eec6e6411b0f7ce3b1" translate="yes" xml:space="preserve">
          <source>Return the shape tuple as an array of some other c-types type. For example: &lt;code&gt;self.shape_as(ctypes.c_short)&lt;/code&gt;.</source>
          <target state="translated">셰이프 튜플을 다른 c 유형 유형의 배열로 반환합니다. 예를 들어, &lt;code&gt;self.shape_as(ctypes.c_short)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="baaab661a54b51d6a154d38d3a1c30a2d216053d" translate="yes" xml:space="preserve">
          <source>Return the sinc function.</source>
          <target state="translated">sinc 함수를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="c459ccc30062a19eb1e782165048d90a682d1c59" translate="yes" xml:space="preserve">
          <source>Return the size of the buffer used in ufuncs.</source>
          <target state="translated">ufunc에 사용 된 버퍼의 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="66b2664823259b33b12cf47409b310d349cab197" translate="yes" xml:space="preserve">
          <source>Return the sorted, unique values that are in both of the input arrays.</source>
          <target state="translated">두 입력 배열에있는 정렬 된 고유 한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d48a3dd22ad0eedf4c3e43152db4039e70f6f623" translate="yes" xml:space="preserve">
          <source>Return the sorted, unique values that are in only one (not both) of the input arrays.</source>
          <target state="translated">입력 배열 중 하나에 만있는 정렬 된 고유 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b211bbd5ccdf8b8125d11c8a542bcd2849733a96" translate="yes" xml:space="preserve">
          <source>Return the standard deviation of the array elements along the given axis.</source>
          <target state="translated">주어진 축을 따라 배열 요소의 표준 편차를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="292e6e2cd5f2e85caa1a63e76e83e33760a06771" translate="yes" xml:space="preserve">
          <source>Return the stride in the &lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;n에&lt;/em&gt; 보폭을 반환&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8829f8c9f0d1186a68b848fd0d4166204ee8ce93" translate="yes" xml:space="preserve">
          <source>Return the strides tuple as an array of some other c-types type. For example: &lt;code&gt;self.strides_as(ctypes.c_longlong)&lt;/code&gt;.</source>
          <target state="translated">strides 튜플을 다른 c 유형 유형의 배열로 반환합니다. 예를 들어, &lt;code&gt;self.strides_as(ctypes.c_longlong)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="741a2da88e9a6a4388a1806db634c3c49732d30a" translate="yes" xml:space="preserve">
          <source>Return the string representation of a scalar dtype.</source>
          <target state="translated">스칼라 dtype의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="32f8ea013e9775d66642865ae77d3cc344db4829" translate="yes" xml:space="preserve">
          <source>Return the string representation of an array.</source>
          <target state="translated">배열의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a263364698df4237186fc32cc479614a10bc1c81" translate="yes" xml:space="preserve">
          <source>Return the sum along diagonals of the array.</source>
          <target state="translated">배열의 대각선을 따라 합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="504fc3d79cf94aad87b10aa92ba8d6b1ce2cf5fa" translate="yes" xml:space="preserve">
          <source>Return the sum of array elements over a given axis treating Not a Numbers (NaNs) as zero.</source>
          <target state="translated">NaN (Not a Numbers)을 0으로 처리하여 지정된 축에 대한 배열 요소의 합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c1ee1b9bb46d4f9f9b79d3a5ce24a42b62ed6ebc" translate="yes" xml:space="preserve">
          <source>Return the sum of the array elements over the given axis.</source>
          <target state="translated">주어진 축에 대한 배열 요소의 합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b19b066cb142b245e290decb6be06e605f0bf088" translate="yes" xml:space="preserve">
          <source>Return the truncated value of the input, element-wise.</source>
          <target state="translated">입력의 잘린 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2599b6cc3a4c38afe543a65ffcabe345fb26585d" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;gt; x2) element-wise.</source>
          <target state="translated">(x1&amp;gt; x2)의 진리 값을 요소 단위로 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="7752788b070df597322f38ebb4dc9213f3c683fd" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;gt;= x2) element-wise.</source>
          <target state="translated">(x1&amp;gt; = x2)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eb4fbaf3562e8cca96ecf9eebd0e2bd0cecc0427" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;lt; x2) element-wise.</source>
          <target state="translated">(x1 &amp;lt;x2)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="58e15c2bf6c8b494c895f54890efb2d25831802d" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 &amp;lt;= x2) element-wise.</source>
          <target state="translated">요소별로 (x1 &amp;lt;= x2)의 진리 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4856478cbd72d0f4f1146167eba942296e3b8143" translate="yes" xml:space="preserve">
          <source>Return the truth value of (x1 =&amp;lt; x2) element-wise.</source>
          <target state="translated">(x1 = &amp;lt;x2)의 진리 값을 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="11ac86217f7990ab6baeea71048d9c94fc9a1d88" translate="yes" xml:space="preserve">
          <source>Return the unique rows of a 2D array</source>
          <target state="translated">2D 배열의 고유 한 행을 반환</target>
        </trans-unit>
        <trans-unit id="c469ebfe7cb33b937f591d4fa3a929ff9a01dfd2" translate="yes" xml:space="preserve">
          <source>Return the unique values in &lt;code&gt;ar1&lt;/code&gt; that are not in &lt;code&gt;ar2&lt;/code&gt;.</source>
          <target state="translated">의 고유 값 반환 &lt;code&gt;ar1&lt;/code&gt; 에없는 &lt;code&gt;ar2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2998311b7b1c99551e770cbe5d2291b619d2a6ce" translate="yes" xml:space="preserve">
          <source>Return the unique, sorted array of values that are in either of the two input arrays.</source>
          <target state="translated">두 입력 배열 중 하나에있는 고유 한 정렬 된 값 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1b05d0baa4de012c3a57f18d2544332f4e706037" translate="yes" xml:space="preserve">
          <source>Return the weighted average of array over the given axis.</source>
          <target state="translated">주어진 축에서 배열의 가중 평균을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8d25e4b98f01704ffd521078e96e2665bea656da" translate="yes" xml:space="preserve">
          <source>Return true if all the given flags are set for the data-type object.</source>
          <target state="translated">지정된 플래그가 모두 데이터 형 객체에 설정되어있는 경우에 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5430635a01a4925fc9263c96d90c0babbb45a914" translate="yes" xml:space="preserve">
          <source>Return true if directory is local directory.</source>
          <target state="translated">디렉토리가 로컬 디렉토리 인 경우 true를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="3ce0b8f6b4991f5effe35f466f710b21164c8929" translate="yes" xml:space="preserve">
          <source>Return true when using mingw32 environment.</source>
          <target state="translated">mingw32 환경을 사용하는 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9aebabfeb629269cee4178e22c4a40b3331dc0d0" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;PyArrayObject*&lt;/code&gt;</source>
          <target state="translated">반환 유형 : &lt;code&gt;PyArrayObject*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58c4caf11ea89b10e3e07372602e19b9d3f5d7b2" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;const char*&lt;/code&gt;</source>
          <target state="translated">반환 유형 : &lt;code&gt;const char*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccd2aef4e4644db8d3572d2b60b5474addd70554" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">반환 유형 : &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4359385fde24967ca356ab6b8c59a0bf57309beb" translate="yes" xml:space="preserve">
          <source>Return value of &lt;code&gt;iternext&lt;/code&gt; function pointer</source>
          <target state="translated">&lt;code&gt;iternext&lt;/code&gt; 함수 포인터 의 반환 값</target>
        </trans-unit>
        <trans-unit id="af845a82cc2614607d54a7161ad36a9bc37ba532" translate="yes" xml:space="preserve">
          <source>Return value%self.</source>
          <target state="translated">반환 값 % self.</target>
        </trans-unit>
        <trans-unit id="31dfafa17646a229170f1ade518e458663718971" translate="yes" xml:space="preserve">
          <source>Return value&amp;amp;self.</source>
          <target state="translated">반환 값 및 자체.</target>
        </trans-unit>
        <trans-unit id="d90daf8d5aa851317dd3679efcafdf465a0633b6" translate="yes" xml:space="preserve">
          <source>Return value&amp;gt;&amp;gt;self.</source>
          <target state="translated">반환 값 &amp;gt;&amp;gt; 자기.</target>
        </trans-unit>
        <trans-unit id="e1ba43664eef558139c9b1acfa23030565253845" translate="yes" xml:space="preserve">
          <source>Return value&amp;lt;&amp;lt;self.</source>
          <target state="translated">반환 값 &amp;lt;&amp;lt; self.</target>
        </trans-unit>
        <trans-unit id="7c5902a10e0a47ff68bb91e658fc910d52a6c8ad" translate="yes" xml:space="preserve">
          <source>Return value^self.</source>
          <target state="translated">반환 값 ^ self.</target>
        </trans-unit>
        <trans-unit id="a6f98dcf7fb0e963db3dbe8a24f301986499e81e" translate="yes" xml:space="preserve">
          <source>Return value|self.</source>
          <target state="translated">반환 값 | 자기.</target>
        </trans-unit>
        <trans-unit id="c94d9d62ccd04b6089fc9a5b8ebc6df23d66c48e" translate="yes" xml:space="preserve">
          <source>Return x to the power p, (x**p).</source>
          <target state="translated">x를 p (x ** p)의 거듭 제곱으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c62839b2e419eef7cee01f90ad40701ed5235ed3" translate="yes" xml:space="preserve">
          <source>Return x, y values at equally spaced points in domain.</source>
          <target state="translated">도메인에서 같은 간격으로 점에서 x, y 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9d2d96565dc06a866465216373028dc31bfc11ee" translate="yes" xml:space="preserve">
          <source>Return:</source>
          <target state="translated">Return:</target>
        </trans-unit>
        <trans-unit id="03e7c173de43cc7d4a2d20753b6d48002de600f4" translate="yes" xml:space="preserve">
          <source>Returned array or scalar: &lt;code&gt;y = +x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">반환 된 배열 또는 스칼라 : &lt;code&gt;y = +x&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 가 스칼라 인 경우 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="16e872913f7fb85827ecd897f9a8c7b8381fbcd6" translate="yes" xml:space="preserve">
          <source>Returned array or scalar: &lt;code&gt;y = -x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">반환 된 배열 또는 스칼라 : &lt;code&gt;y = -x&lt;/code&gt; . &lt;code&gt;x&lt;/code&gt; 가 스칼라 인 경우 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="364281f9080178b7af85e558e099c5ed42bbaef3" translate="yes" xml:space="preserve">
          <source>Returning to our &lt;code&gt;big_end_arr&lt;/code&gt; - in this case our underlying data is big-endian (data endianness) and we&amp;rsquo;ve set the dtype to match (the dtype is also big-endian). However, sometimes you need to flip these around.</source>
          <target state="translated">&lt;code&gt;big_end_arr&lt;/code&gt; 로 돌아가서 -이 경우 기본 데이터는 big-endian (데이터 엔디안)이고 dtype을 일치하도록 설정했습니다 (dtype도 big-endian 임). 그러나 때로는 이것을 뒤집을 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="967676e6b10999300a584227863a4ba1b08da2c2" translate="yes" xml:space="preserve">
          <source>Returns &amp;lsquo;None&amp;rsquo; on success.</source>
          <target state="translated">성공하면 '없음'을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ef550a083a055e3895f6cf01cc83cd5990cce1b" translate="yes" xml:space="preserve">
          <source>Returns &amp;lsquo;None&amp;rsquo;.</source>
          <target state="translated">'없음'을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02e55f850228e3cf85705b30b246127c963cc1f3" translate="yes" xml:space="preserve">
          <source>Returns (&lt;code&gt;mantissa&lt;/code&gt;, &lt;code&gt;exponent&lt;/code&gt;), where &lt;code&gt;x = mantissa * 2**exponent`&lt;/code&gt;. The mantissa is lies in the open interval(-1, 1), while the twos exponent is a signed integer.</source>
          <target state="translated">&lt;code&gt;x = mantissa * 2**exponent`&lt;/code&gt; ( &lt;code&gt;mantissa&lt;/code&gt; , &lt;code&gt;exponent&lt;/code&gt; )를 반환 합니다 . 가수는 열린 간격 (-1, 1)에 있으며 두 지수는 부호있는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="26cbce73ac835ade8c7506537810d6d87510af85" translate="yes" xml:space="preserve">
          <source>Returns 0 for success, -1 for failure.</source>
          <target state="translated">성공하면 0을, 실패하면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="115737b79c1838ec68c9067bcc9e58a706c69cf2" translate="yes" xml:space="preserve">
          <source>Returns 0 if &lt;em&gt;obj&lt;/em&gt; is not a sub-class of ndarray. Otherwise, returns the total number of elements in the array. Safer version of &lt;a href=&quot;#c.PyArray_SIZE&quot;&gt;&lt;code&gt;PyArray_SIZE&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;obj&lt;/em&gt;).</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt; 가 ndarray의 하위 클래스가 아닌 경우 0을 반환 합니다. 그렇지 않으면 배열의 총 요소 수를 반환합니다. 보다 안전한 &lt;a href=&quot;#c.PyArray_SIZE&quot;&gt; &lt;code&gt;PyArray_SIZE&lt;/code&gt; &lt;/a&gt; 버전 ( &lt;em&gt;obj&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="9eeaaadff86a0865cb617b460306672621245e72" translate="yes" xml:space="preserve">
          <source>Returns 0 if nothing was done, -1 on error, and 1 if action was taken.</source>
          <target state="translated">아무 것도 수행하지 않으면 0을, 오류에 -1을, 조치를 취하면 1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6712a5e3dc71d74ee825d5e63bac86197f6e5c9c" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, -1 on error.</source>
          <target state="translated">성공하면 0을, 에러이면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc2b7dfb346d75cdc21e598dc1d034d91960f26f" translate="yes" xml:space="preserve">
          <source>Returns 0 when &lt;code&gt;x2&lt;/code&gt; is 0 and both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are (arrays of) integers. &lt;code&gt;mod&lt;/code&gt; is an alias of &lt;code&gt;remainder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x2&lt;/code&gt; 가 0이고 &lt;code&gt;x1&lt;/code&gt; 과 &lt;code&gt;x2&lt;/code&gt; 가 모두 정수인 경우 0을 반환 합니다. &lt;code&gt;mod&lt;/code&gt; 는 &lt;code&gt;remainder&lt;/code&gt; 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="02125e071c8b94170ef70aa1eddcf2caa5d6d226" translate="yes" xml:space="preserve">
          <source>Returns 1 if the caller needs to handle the inner-most 1-dimensional loop, or 0 if the iterator handles all looping. This is controlled by the constructor flag &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NpyIter_EnableExternalLoop&quot;&gt;&lt;code&gt;NpyIter_EnableExternalLoop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">호출자가 가장 안쪽의 1 차원 루프를 처리해야하는 경우 1을, 반복자가 모든 루프를 처리하는 경우 0을 반환합니다. 이는 생성자 플래그 &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#c.NpyIter_EnableExternalLoop&quot;&gt; &lt;code&gt;NpyIter_EnableExternalLoop&lt;/code&gt; 에&lt;/a&gt; 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="c3e040ea16828a7af098812246ada10b737a3018" translate="yes" xml:space="preserve">
          <source>Returns 1 if the flag &lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt;&lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt;&lt;/a&gt; was passed to the iterator constructor, and no call to one of the Reset functions has been done yet, 0 otherwise.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt; &lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt; &lt;/a&gt; 플래그 가 반복자 생성자에 전달되었고 Reset 함수 중 하나에 대한 호출이 아직 수행되지 않은 경우 1을 리턴 하고 그렇지 않으면 0을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="a0eabf7ad3fd7b74468203994ab254ca9f092705" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator requires buffering, which occurs when an operand needs conversion or alignment and so cannot be used directly.</source>
          <target state="translated">반복자에 버퍼링이 필요한 경우 피연산자가 변환 또는 정렬이 필요하므로 직접 사용할 수없는 경우 발생하는 1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="07efa4c5ad0c190a842da7877da8f8a7ecc05afc" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_BUFFERED&quot;&gt;&lt;code&gt;NPY_ITER_BUFFERED&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITER_BUFFERED&quot;&gt; &lt;code&gt;NPY_ITER_BUFFERED&lt;/code&gt; &lt;/a&gt; 플래그로 반복자가 작성된 경우 1을 리턴하고 그렇지 않으면 0을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="7fe75eb194456195b6d1b8d969b6406be6143f07" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt; &lt;/a&gt; 플래그를 사용하여 반복자가 작성된 경우 1을 리턴하고 그렇지 않으면 0을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="38631735810573a469f961bd65c472da0a8230c7" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_GROWINNER&quot;&gt;&lt;code&gt;NPY_ITER_GROWINNER&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITER_GROWINNER&quot;&gt; &lt;code&gt;NPY_ITER_GROWINNER&lt;/code&gt; &lt;/a&gt; 플래그를 사용하여 반복자가 작성된 경우 1을 리턴하고 그렇지 않으면 0을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="b8d1389e5f77607a3b12ae5b77c6639df8690f30" translate="yes" xml:space="preserve">
          <source>Returns 1 if the iterator was created with the &lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt;&lt;/a&gt; flag, 0 otherwise.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt; &lt;/a&gt; 플래그로 반복자가 작성된 경우 1을 리턴하고 그렇지 않으면 0을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d3326607915053b072db3754b1468eb7f280b7fd" translate="yes" xml:space="preserve">
          <source>Returns 1 is h is negative, 0 otherwise.</source>
          <target state="translated">1은 h가 음수이고 그렇지 않으면 0입니다.</target>
        </trans-unit>
        <trans-unit id="c7e3a4672660c3fef2c4d418a19dc79d3aa04f9c" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;typenum&lt;/em&gt; represents a valid type-number (builtin or user-defined or character code). Otherwise, this function returns &lt;a href=&quot;#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt; 이 유효한 유형 번호 (내장 또는 사용자 정의 또는 문자 코드)를 나타내는 경우 &lt;em&gt;NPY_TRUE를&lt;/em&gt; 리턴 합니다. 그렇지 않으면이 함수는 &lt;a href=&quot;#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="403725e5bd16147bddc5c00206db6d225b14ec1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NPY_SUCCEED&lt;/code&gt; or &lt;code&gt;NPY_FAIL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NPY_SUCCEED&lt;/code&gt; 또는 &lt;code&gt;NPY_FAIL&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b2ee97c7d4d45cc3feedc9a8d0d04c663fbfdb87" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NPY_SUCCEED&lt;/code&gt; or &lt;code&gt;NPY_FAIL&lt;/code&gt;. If errmsg is non-NULL, no Python exception is set when &lt;code&gt;NPY_FAIL&lt;/code&gt; is returned. Instead, *errmsg is set to an error message. When errmsg is non-NULL, the function may be safely called without holding the Python GIL.</source>
          <target state="translated">&lt;code&gt;NPY_SUCCEED&lt;/code&gt; 또는 &lt;code&gt;NPY_FAIL&lt;/code&gt; 을 반환합니다 . errmsg가 NULL이 아닌 경우 &lt;code&gt;NPY_FAIL&lt;/code&gt; 이 리턴 될 때 Python 예외가 설정되지 않습니다 . 대신 * errmsg는 오류 메시지로 설정됩니다. errmsg가 NULL이 아닌 경우, 함수는 Python GIL을 유지하지 않고 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47389ff75ac1dac4fc9061aae7ecb422b035bc40" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on error.</source>
          <target state="translated">오류가 발생 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="434e6107888cc3fe5eea38850e0297bb0baa2361" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;num&lt;/code&gt; evenly spaced samples, calculated over the interval [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;].</source>
          <target state="translated">반환 &lt;code&gt;num&lt;/code&gt; 구간 [위에 계산 균등 샘플 &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;stop&lt;/code&gt; ].</target>
        </trans-unit>
        <trans-unit id="ed514510f3b537bea9e9077fa3f766a0eb88a65f" translate="yes" xml:space="preserve">
          <source>Returns NULL if there is an error, otherwise returns the allocated iterator.</source>
          <target state="translated">오류가 있으면 NULL을 반환하고, 그렇지 않으면 할당 된 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0cd5102c0c0283a9bb6087aae24006067b8fa0ad" translate="yes" xml:space="preserve">
          <source>Returns NULL if there is an error. If errmsg is non-NULL, no Python exception is set when &lt;code&gt;NPY_FAIL&lt;/code&gt; is returned. Instead, *errmsg is set to an error message. When errmsg is non-NULL, the function may be safely called without holding the Python GIL.</source>
          <target state="translated">오류가 있으면 NULL을 반환합니다. errmsg가 NULL이 아닌 경우 &lt;code&gt;NPY_FAIL&lt;/code&gt; 이 리턴 될 때 Python 예외가 설정되지 않습니다 . 대신 * errmsg는 오류 메시지로 설정됩니다. errmsg가 NULL이 아닌 경우, 함수는 Python GIL을 유지하지 않고 안전하게 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e51e8551ebfe6fca028ffaed0b3dcc12d1cfd551" translate="yes" xml:space="preserve">
          <source>Returns True if all elements evaluate to True.</source>
          <target state="translated">모든 요소가 True로 평가되면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="808f8cc1023b8b8b461233c324cdae40c59f8861" translate="yes" xml:space="preserve">
          <source>Returns True if any of the elements of &lt;code&gt;a&lt;/code&gt; evaluate to True.</source>
          <target state="translated">평가 요소 중 &lt;code&gt;a&lt;/code&gt; 라도 True이면 True를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1e09465575f73a123f17dab8ca49ad32c13ae007" translate="yes" xml:space="preserve">
          <source>Returns True if cast between data types can occur according to the casting rule.</source>
          <target state="translated">캐스팅 규칙에 따라 데이터 형식간에 캐스팅이 발생할 수 있으면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26515f3430c1beb03327c19aea3c862cf87e2819" translate="yes" xml:space="preserve">
          <source>Returns True if cast between data types can occur according to the casting rule. If from is a scalar or array scalar, also returns True if the scalar value can be cast without overflow or truncation to an integer.</source>
          <target state="translated">캐스팅 규칙에 따라 데이터 형식간에 캐스팅이 발생할 수 있으면 True를 반환합니다. from이 스칼라 또는 배열 스칼라 인 경우 스칼라 값을 오버플로 또는 잘라 내기없이 정수로 캐스트 할 수있는 경우 True도 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6ca8bde0449dc63fab8f1009f5405759a6a25b60" translate="yes" xml:space="preserve">
          <source>Returns True if first argument is a typecode lower/equal in type hierarchy.</source>
          <target state="translated">첫 번째 인수가 유형 계층에서 유형 코드 하한 / 동일 경우 True를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b22a5e45572f21d466de38f8cf1f9bde8fa5c7c6" translate="yes" xml:space="preserve">
          <source>Returns True if input arrays are shape consistent and all elements equal.</source>
          <target state="translated">입력 배열의 모양이 일관되고 모든 요소가 같으면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="79c716dae7ce9527ef33b5eba4a0f55958f2b185" translate="yes" xml:space="preserve">
          <source>Returns True if running the benchmarks works, False if an error occurred.</source>
          <target state="translated">벤치 마크 실행이 작동하면 True를 반환하고 오류가 발생하면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a811e0e866b438205e75d605f3c9be1e70ce941c" translate="yes" xml:space="preserve">
          <source>Returns True if the array is Fortran contiguous but &lt;em&gt;not&lt;/em&gt; C contiguous.</source>
          <target state="translated">배열이 Fortran 인접하지만 C 인접 &lt;em&gt;하지 않은&lt;/em&gt; 경우 True를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b3e3425ff31e0cbaa9952242fc3d0c4e5347e2df" translate="yes" xml:space="preserve">
          <source>Returns True if the arrays are equal.</source>
          <target state="translated">배열이 같으면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="657502feb806168cc5b8212642e98def4223ed9a" translate="yes" xml:space="preserve">
          <source>Returns True if the two arrays are equal within the given tolerance, False otherwise. If either array contains NaN, then False is returned.</source>
          <target state="translated">주어진 공차 내에서 두 배열이 동일한 경우 True를, 그렇지 않으면 False를 반환합니다. 두 배열 중 하나에 NaN이 포함되어 있으면 False가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3960bd971c0cba3eb94501357090736485e6a466" translate="yes" xml:space="preserve">
          <source>Returns True if the two arrays are equal within the given tolerance; False otherwise.</source>
          <target state="translated">주어진 공차 내에서 두 배열이 동일한 경우 True를 반환합니다. 그렇지 않으면 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="1f496acf00678c60acead22834064d093f50edbf" translate="yes" xml:space="preserve">
          <source>Returns True if the type of &lt;code&gt;element&lt;/code&gt; is a scalar type.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 유형이 스칼라 유형 이면 True를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="29cc2cb62c0b5499b9399d976d2df9b55d8de11d" translate="yes" xml:space="preserve">
          <source>Returns True if the type of &lt;code&gt;num&lt;/code&gt; is a scalar type.</source>
          <target state="translated">&lt;code&gt;num&lt;/code&gt; 유형이 스칼라 유형 인 경우 True를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="3ea4ca820c758a490715c100d25b4440eef8f8a1" translate="yes" xml:space="preserve">
          <source>Returns True if two arrays are element-wise equal within a tolerance.</source>
          <target state="translated">두 배열이 공차 내에서 요소별로 동일한 경우 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3c624ab991c8dcb608801a88a5aa060b39bad3f6" translate="yes" xml:space="preserve">
          <source>Returns a 1D version of self, as a view.</source>
          <target state="translated">1D 버전의 self를 뷰로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26557217ee751540d08e486aa9eef727e5531028" translate="yes" xml:space="preserve">
          <source>Returns a NumPy universal function (&lt;code&gt;ufunc&lt;/code&gt;) object.</source>
          <target state="translated">NumPy 범용 함수 ( &lt;code&gt;ufunc&lt;/code&gt; ) 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6e407833134eebbc319885c05c271c5a57ef5854" translate="yes" xml:space="preserve">
          <source>Returns a bitmask with following possible flags:</source>
          <target state="translated">다음과 같은 플래그로 비트 마스크를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="91b109ae0c5c39185976689bba7a552fbf29fc0e" translate="yes" xml:space="preserve">
          <source>Returns a bool array, where True if input element is complex.</source>
          <target state="translated">입력 요소가 복잡한 경우 True 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dabfcb617950873e8b96e392c7720c623c079877" translate="yes" xml:space="preserve">
          <source>Returns a bool array, where True if input element is real.</source>
          <target state="translated">입력 요소가 실수 인 경우 True 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82ea7c5e7a626408c091c717ccb87ff9842c5dab" translate="yes" xml:space="preserve">
          <source>Returns a boolean array indicating valid days.</source>
          <target state="translated">유효한 일을 나타내는 부울 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5a798bd13b7830305d14f0afef753c930fa84ef" translate="yes" xml:space="preserve">
          <source>Returns a boolean array of the same shape as &lt;code&gt;x&lt;/code&gt;, True where &lt;code&gt;x ==
+/-inf&lt;/code&gt;, otherwise False.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 와 동일한 모양의 부울 배열을 반환합니다. 여기서 &lt;code&gt;x == +/-inf&lt;/code&gt; 이고, 그렇지 않으면 False입니다.</target>
        </trans-unit>
        <trans-unit id="d9ce4c56a2d469c6e69d1b58412023cf9af003eb" translate="yes" xml:space="preserve">
          <source>Returns a boolean array of where &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal within the given tolerance. If both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are scalars, returns a single boolean value.</source>
          <target state="translated">주어진 공차 내 에서 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 동일한 부울 배열을 반환합니다 . 두 경우 와 &lt;code&gt;b&lt;/code&gt; 는 스칼라 있으며, 하나의 부울 값을 반환합니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83ee034b20cdef524b1b56d45efc976fcf29daf9" translate="yes" xml:space="preserve">
          <source>Returns a boolean array the same length as &lt;code&gt;ar1&lt;/code&gt; that is True where an element of &lt;code&gt;ar1&lt;/code&gt; is in &lt;code&gt;ar2&lt;/code&gt; and False otherwise.</source>
          <target state="translated">반환 부울 배열과 같은 길이 &lt;code&gt;ar1&lt;/code&gt; 의 요소 곳 True입니다 &lt;code&gt;ar1&lt;/code&gt; 에 &lt;code&gt;ar2&lt;/code&gt; , 그렇지 않으면 False를.</target>
        </trans-unit>
        <trans-unit id="9137a4dac459c56407a0eff3e78727c7563c0934" translate="yes" xml:space="preserve">
          <source>Returns a boolean array where two arrays are element-wise equal within a tolerance.</source>
          <target state="translated">공차 내에서 두 배열이 요소 단위로 동일한 부울 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f39e7df99fe1f81eb255ab72edb28ea68c868dfa" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;a&lt;/code&gt; ends with &lt;code&gt;suffix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">문자열 요소의 &lt;code&gt;suffix&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; 끝나는 &lt;code&gt;True&lt;/code&gt; 인 부울 배열을 반환하고 , 그렇지 않으면 &lt;code&gt;False&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a334fe58c8a986c427834f6fe9b5cd8d9fb82c01" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;a&lt;/code&gt; starts with &lt;code&gt;prefix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">문자열 요소 &lt;code&gt;a&lt;/code&gt; 시작 부분이 &lt;code&gt;prefix&lt;/code&gt; 로 시작하고 그렇지 않으면 &lt;code&gt;False&lt;/code&gt; 인 &lt;code&gt;True&lt;/code&gt; 인 부울 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8bd38d9a8e9f8c407e8e3f280919c951e2d0c907" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;self&lt;/code&gt; ends with &lt;code&gt;suffix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 문자열 요소 가 &lt;code&gt;suffix&lt;/code&gt; 끝나는 &lt;code&gt;True&lt;/code&gt; 인 부울 배열을 반환하고 , 그렇지 않으면 &lt;code&gt;False&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2033519e4602085304e1e9678984a15d9cc301af" translate="yes" xml:space="preserve">
          <source>Returns a boolean array which is &lt;code&gt;True&lt;/code&gt; where the string element in &lt;code&gt;self&lt;/code&gt; starts with &lt;code&gt;prefix&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 문자열 요소 가 &lt;code&gt;prefix&lt;/code&gt; 로 시작하고 그렇지 않으면 &lt;code&gt;False&lt;/code&gt; 인 &lt;code&gt;True&lt;/code&gt; 인 부울 배열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f84ecb9e671fe5a62ffff4868951710fc18cbbe4" translate="yes" xml:space="preserve">
          <source>Returns a borrowed reference to the dtype property (&lt;code&gt;PyArray_Descr*&lt;/code&gt;) of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">반환 DTYPE 속성 (에게 빌려 참조 &lt;code&gt;PyArray_Descr*&lt;/code&gt; 의) 가정하면, &lt;code&gt;a&lt;/code&gt; (A)에 전송할 수있다 &lt;code&gt;PyArrayObject*&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d93d22ee0a05554fc3e02d3abc3080d943e7a932" translate="yes" xml:space="preserve">
          <source>Returns a borrowed reference to the dtype property of the array.</source>
          <target state="translated">배열의 dtype 속성에 대한 빌린 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45a9d16c849ee627a07de34d3c7c60fb103ea46a" translate="yes" xml:space="preserve">
          <source>Returns a data-type object corresponding to &lt;em&gt;typenum&lt;/em&gt;. The &lt;em&gt;typenum&lt;/em&gt; can be one of the enumerated types, a character code for one of the enumerated types, or a user-defined type. If you want to use a flexible size array, then you need to &lt;code&gt;flexible typenum&lt;/code&gt; and set the results &lt;code&gt;elsize&lt;/code&gt; parameter to the desired size. The typenum is one of the &lt;a href=&quot;c-api.dtype#c.NPY_TYPES&quot;&gt;&lt;code&gt;NPY_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;typenum에&lt;/em&gt; 해당하는 데이터 유형 객체를 반환합니다 . &lt;em&gt;typenum는&lt;/em&gt; 열거 된 유형 중 하나의 열거 된 종류의 하나 또는 사용자 정의 형식에 대한 문자 코드 일 수있다. 가변 크기 배열을 사용하려면 &lt;code&gt;flexible typenum&lt;/code&gt; 을 유연하게 하고 결과 &lt;code&gt;elsize&lt;/code&gt; 매개 변수를 원하는 크기로 설정 해야합니다 . typenum는 중 하나입니다 &lt;a href=&quot;c-api.dtype#c.NPY_TYPES&quot;&gt; &lt;code&gt;NPY_TYPES&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f146681841c85aace0a34a120762a5f8b4dcd71" translate="yes" xml:space="preserve">
          <source>Returns a data-type object corresponding to &lt;em&gt;typenum&lt;/em&gt;. The &lt;em&gt;typenum&lt;/em&gt; can be one of the enumerated types, a character code for one of the enumerated types, or a user-defined type. If you want to use a flexible size array, then you need to &lt;code&gt;flexible typenum&lt;/code&gt; and set the results &lt;code&gt;elsize&lt;/code&gt; parameter to the desired size. The typenum is one of the &lt;a href=&quot;dtype#c.NPY_TYPES&quot;&gt;&lt;code&gt;NPY_TYPES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;typenum에&lt;/em&gt; 해당하는 데이터 유형 객체를 반환합니다 . &lt;em&gt;typenum는&lt;/em&gt; 열거 된 유형 중 하나의 열거 된 종류의 하나 또는 사용자 정의 형식에 대한 문자 코드 일 수있다. 유연한 크기 배열을 사용하려면 &lt;code&gt;flexible typenum&lt;/code&gt; 을 사용하고 결과 &lt;code&gt;elsize&lt;/code&gt; 매개 변수를 원하는 크기로 설정 해야합니다 . typenum는 중 하나입니다 &lt;a href=&quot;dtype#c.NPY_TYPES&quot;&gt; &lt;code&gt;NPY_TYPES&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15b9f3d70ca5443f34eb49cbaf7c94ae04e8a130" translate="yes" xml:space="preserve">
          <source>Returns a dictionary with fields indexing lists of their parent fields.</source>
          <target state="translated">상위 필드의 목록을 인덱싱하는 필드가있는 사전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a578a246fffa06028202e1279c889ee7312aef8" translate="yes" xml:space="preserve">
          <source>Returns a dtype based off the given description.</source>
          <target state="translated">주어진 설명을 기반으로 dtype을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5795a0049817d205be48c9819c929b8acc52949f" translate="yes" xml:space="preserve">
          <source>Returns a field of the given array as a certain type.</source>
          <target state="translated">주어진 배열의 필드를 특정 유형으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0ed85eacf19d11d52b6d79ef57328eaa6ff1884e" translate="yes" xml:space="preserve">
          <source>Returns a flattened copy of an array.</source>
          <target state="translated">병합 된 배열의 복사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dd3cb09fe46e6a87a1feae1dc5ef282345db3f60" translate="yes" xml:space="preserve">
          <source>Returns a function pointer for getting the current multi-index of the iterator. Returns NULL if the iterator is not tracking a multi-index. It is recommended that this function pointer be cached in a local variable before the iteration loop.</source>
          <target state="translated">반복자의 현재 다중 색인을 가져 오기위한 함수 포인터를 리턴합니다. 반복자가 다중 색인을 추적하지 않는 경우 NULL을 리턴합니다. 이 함수 포인터는 반복 루프 전에 로컬 변수에 캐시하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cac0b6f2ec24de0c744fa0d16cddbbf8b9be417a" translate="yes" xml:space="preserve">
          <source>Returns a function pointer for iteration. A specialized version of the function pointer may be calculated by this function instead of being stored in the iterator structure. Thus, to get good performance, it is required that the function pointer be saved in a variable rather than retrieved for each loop iteration.</source>
          <target state="translated">반복을위한 함수 포인터를 반환합니다. 함수 포인터의 특수 버전은 이터레이터 구조에 저장되는 대신이 함수에 의해 계산 될 수 있습니다. 따라서 좋은 성능을 얻으려면 각 루프 반복마다 검색되지 않고 변수에 함수 포인터를 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="a10c17be31eedd0bba6a40970571d6f7ad579178" translate="yes" xml:space="preserve">
          <source>Returns a list of files named &amp;lsquo;fname&amp;rsquo; from 1) System-wide directory (directory-location of this module) 2) Users HOME directory (os.environ[&amp;lsquo;HOME&amp;rsquo;]) 3) Local directory</source>
          <target state="translated">1) 시스템 전체 디렉토리 (이 모듈의 디렉토리 위치)에서 'fname'이라는 파일 목록을 리턴합니다. 2) 사용자 HOME 디렉토리 (os.environ [ 'HOME']) 3) 로컬 디렉토리</target>
        </trans-unit>
        <trans-unit id="470736429ce15047825d29117adb4e0e0bcf7e7b" translate="yes" xml:space="preserve">
          <source>Returns a list of slices corresponding to the masked clumps of a 1-D array.</source>
          <target state="translated">1 차원 배열의 마스크 된 덩어리에 해당하는 슬라이스 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff03f876a6e223e8fd0b7dd5a3bf0d6a33a4de9f" translate="yes" xml:space="preserve">
          <source>Returns a list of slices corresponding to the masked clumps of a 1-D array. (A &amp;ldquo;clump&amp;rdquo; is defined as a contiguous region of the array).</source>
          <target state="translated">1 차원 배열의 마스크 된 덩어리에 해당하는 슬라이스 목록을 반환합니다. &quot;클럼프&quot;는 어레이의 연속 영역으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c21fca56f91f1c5a4d143b1ee3460eb700de0353" translate="yes" xml:space="preserve">
          <source>Returns a list with types grouped input-&amp;gt;output.</source>
          <target state="translated">그룹화 된 입력-&amp;gt; 출력 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c0272a490b459b53e6a460ee6dccbcaf9058f37a" translate="yes" xml:space="preserve">
          <source>Returns a masked array containing the same data, but with a new shape. The result is a view on the original array; if this is not possible, a ValueError is raised.</source>
          <target state="translated">동일한 데이터를 포함하지만 새로운 모양을 가진 마스크 ​​된 배열을 반환합니다. 결과는 원래 배열에 대한 뷰입니다. 이것이 가능하지 않으면 ValueError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5e5cf56c302519782e893744ba414d38c09a1f71" translate="yes" xml:space="preserve">
          <source>Returns a matrix from an array-like object, or from a string of data. A matrix is a specialized 2-D array that retains its 2-D nature through operations. It has certain special operators, such as &lt;code&gt;*&lt;/code&gt; (matrix multiplication) and &lt;code&gt;**&lt;/code&gt; (matrix power).</source>
          <target state="translated">배열과 같은 객체 또는 데이터 문자열에서 행렬을 반환합니다. 행렬은 연산을 통해 2 차원 특성을 유지하는 특수한 2 차원 배열입니다. &lt;code&gt;*&lt;/code&gt; (행렬 곱셈) 및 &lt;code&gt;**&lt;/code&gt; (행렬 거듭 제곱) 와 같은 특정 특수 연산자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="318e63603ad5502f105445287c0a8e45500fc3d7" translate="yes" xml:space="preserve">
          <source>Returns a matrix object, which is a specialized 2-D array.</source>
          <target state="translated">특수한 2 차원 배열 인 행렬 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c56c7bf918f34dbbdfaab7d29a7d2d783ce5ea93" translate="yes" xml:space="preserve">
          <source>Returns a new bit generator with the state jumped</source>
          <target state="translated">상태가 점프 한 새로운 비트 생성기를 반환</target>
        </trans-unit>
        <trans-unit id="c5151209d098f68dae7578cd8812927e8535ffd5" translate="yes" xml:space="preserve">
          <source>Returns a new bit generator with the state jumped.</source>
          <target state="translated">상태가 점프 한 새 비트 생성기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9993ad4416ff33a234df99302634d35edd192413" translate="yes" xml:space="preserve">
          <source>Returns a new dtype object, with the type of all fields in &lt;code&gt;ndtype&lt;/code&gt; to a boolean type. Field names are not altered.</source>
          <target state="translated">모든 필드의 종류에 따라, 새로운 DTYPE 오브젝트를 돌려줍니다 &lt;code&gt;ndtype&lt;/code&gt; 부울 입력합니다. 필드 이름은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="036b93da87acf0f9009061895003203f40272ee2" translate="yes" xml:space="preserve">
          <source>Returns a new numpy.recarray with fields in &lt;code&gt;drop_names&lt;/code&gt; dropped.</source>
          <target state="translated">필드와 새로운 numpy.recarray 반환 &lt;code&gt;drop_names&lt;/code&gt; 떨어졌다.</target>
        </trans-unit>
        <trans-unit id="223e1f5bba425e5a7dd6c215bc7f90e351b648a8" translate="yes" xml:space="preserve">
          <source>Returns a pointer to an array of the &lt;code&gt;nop&lt;/code&gt; strides, one for each iterated object, to be used by the inner loop.</source>
          <target state="translated">내부 루프에서 사용할 &lt;code&gt;nop&lt;/code&gt; strides 의 배열 ( 각 반복 된 객체마다 하나씩)에 대한 포인터를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="838538d04561d6a9d16bd3bb4e63fec4b29ad727" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the dimensions/shape of the array. The number of elements matches the number of dimensions of the array. Can return &lt;code&gt;NULL&lt;/code&gt; for 0-dimensional arrays.</source>
          <target state="translated">배열의 크기 / 모양에 대한 포인터를 반환합니다. 요소 수는 배열의 차원 수와 일치합니다. 0 차원 배열에 대해 &lt;code&gt;NULL&lt;/code&gt; 을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a46e48e23c89e64929900374a373bb27be1a34b2" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the number of iterations the inner loop should execute.</source>
          <target state="translated">내부 루프가 실행해야하는 반복 횟수에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="808286411c5d2579f73d07bbb321d374dc0eccdc" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the strides of the array. The number of elements matches the number of dimensions of the array.</source>
          <target state="translated">배열의 보폭에 대한 포인터를 반환합니다. 요소 수는 배열의 차원 수와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="b83c4a09f9ed920ca4753bed9ece5a39f0600246" translate="yes" xml:space="preserve">
          <source>Returns a scalar type-object from a type-number, &lt;em&gt;type&lt;/em&gt; . Equivalent to &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt;&lt;code&gt;PyArray_DescrFromType&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;type&lt;/em&gt;)-&amp;gt;typeobj except for reference counting and error-checking. Returns a new reference to the typeobject on success or &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">형식 번호에서 스칼라 타입의 객체를 돌려줍니다 &lt;em&gt;유형을&lt;/em&gt; . 참조 횟수 및 오류 검사를 제외하고 &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt; &lt;code&gt;PyArray_DescrFromType&lt;/code&gt; &lt;/a&gt; ( &lt;em&gt;type&lt;/em&gt; )-&amp;gt; typeobj 와 같습니다 . 성공하면 typeobject에 대한 새로운 참조를, 실패 &lt;code&gt;NULL&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a902c79dd4c838787c681b0d4416e4369385827a" translate="yes" xml:space="preserve">
          <source>Returns a series representing the product &lt;code&gt;(x - r[0])*(x - r[1])*...*(x - r[n-1])&lt;/code&gt;, where &lt;code&gt;r&lt;/code&gt; is a list of roots.</source>
          <target state="translated">곱 &lt;code&gt;(x - r[0])*(x - r[1])*...*(x - r[n-1])&lt;/code&gt; 나타내는 계열을 반환합니다 . 여기서 &lt;code&gt;r&lt;/code&gt; 은 근본 목록입니다.</target>
        </trans-unit>
        <trans-unit id="be0aa23a8d558edba28782ba899073b3f7ca7aa8" translate="yes" xml:space="preserve">
          <source>Returns a single bool if &lt;code&gt;axis&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;; otherwise, returns &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 인 경우 단일 부울을 반환합니다 . 그렇지 않으면 &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="be30276c7d2a4f123cd76fd21583eae64e4c3d58" translate="yes" xml:space="preserve">
          <source>Returns a standard &lt;a href=&quot;../reference/generated/numpy.recarray#numpy.recarray&quot;&gt;&lt;code&gt;numpy.recarray&lt;/code&gt;&lt;/a&gt; (if &lt;code&gt;usemask=False&lt;/code&gt;) or a &lt;code&gt;MaskedRecords&lt;/code&gt; array (if &lt;code&gt;usemaske=True&lt;/code&gt;). The default dtype is &lt;code&gt;dtype=None&lt;/code&gt;, meaning that the types of each column will be automatically determined.</source>
          <target state="translated">표준 &lt;a href=&quot;../reference/generated/numpy.recarray#numpy.recarray&quot;&gt; &lt;code&gt;numpy.recarray&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;usemask=False&lt;/code&gt; 인 경우 ) 또는 &lt;code&gt;MaskedRecords&lt;/code&gt; 배열 ( &lt;code&gt;usemaske=True&lt;/code&gt; 인 경우)을 반환 합니다. 기본 dtype은 &lt;code&gt;dtype=None&lt;/code&gt; 입니다 . 즉, 각 열의 유형이 자동으로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="fcabb281b53f9ab6610007c6f4cc947d93898ab5" translate="yes" xml:space="preserve">
          <source>Returns a true division of the inputs, element-wise.</source>
          <target state="translated">입력을 요소 단위로 실제로 나눈 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="859cc83c125a67c9e1d2ef23db058a23816a9fa1" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the indices of the current iteration.</source>
          <target state="translated">현재 반복의 인덱스를 포함하는 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="52830cbf09e3acc294145e0b75c673b00250e3be" translate="yes" xml:space="preserve">
          <source>Returns a tuple of &lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt;&lt;code&gt;numpy.flatiter&lt;/code&gt;&lt;/a&gt; objects, one for each &amp;ldquo;component&amp;rdquo; of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 &amp;ldquo;component&amp;rdquo;마다 하나씩 &lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt; &lt;code&gt;numpy.flatiter&lt;/code&gt; &lt;/a&gt; 객체 의 튜플을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="15d14b7c215283230bbde4fde3fbe238d5e3e4d1" translate="yes" xml:space="preserve">
          <source>Returns a tuple of arrays, one for each dimension of &lt;code&gt;a&lt;/code&gt;, containing the indices of the non-zero elements in that dimension. The values in &lt;code&gt;a&lt;/code&gt; are always tested and returned in row-major, C-style order.</source>
          <target state="translated">반환 배열 튜플의 각 차원에 대해 하나 그 치수의 비 - 제로 엘리먼트의 인덱스를 포함한. 의 값 &lt;code&gt;a&lt;/code&gt; 는 항상 테스트 행 주요, C 스타일의 순서로 반환됩니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb24f4887cf31f7b0741a4e6974577466201ed4d" translate="yes" xml:space="preserve">
          <source>Returns a tuple of arrays, one for each dimension, containing the indices of the non-zero elements in that dimension. The corresponding non-zero values can be obtained with:</source>
          <target state="translated">해당 차원에서 0이 아닌 요소의 인덱스를 포함하는 각 차원마다 하나씩 배열의 튜플을 반환합니다. 해당하는 0이 아닌 값은 다음을 사용하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="399659d2ce9197e3f68969e3461f22fc719d209a" translate="yes" xml:space="preserve">
          <source>Returns a tuple of arrays, with &lt;code&gt;grid[i].shape = (1, ..., 1, dimensions[i], 1, ..., 1)&lt;/code&gt; with dimensions[i] in the ith place</source>
          <target state="translated">&lt;code&gt;grid[i].shape = (1, ..., 1, dimensions[i], 1, ..., 1)&lt;/code&gt; 번째 장소에서 grid [i] .shape = (1, ..., 1, 치수 [i], 1, ..., 1)을 가진 배열의 튜플을 반환합니다</target>
        </trans-unit>
        <trans-unit id="30d2e5ef20dc9f641259b52e69f8f4329425a2a3" translate="yes" xml:space="preserve">
          <source>Returns a view of the array with axes transposed.</source>
          <target state="translated">축이 바뀐 배열의 뷰를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="27391d004074faca53b46e3996c6c3c219480d2d" translate="yes" xml:space="preserve">
          <source>Returns an array containing the same data with a new shape.</source>
          <target state="translated">새로운 형태의 동일한 데이터를 포함하는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5aeea1524bbb4b99f1bdbceae7089113e87b36b9" translate="yes" xml:space="preserve">
          <source>Returns an array of anomalies, with the same shape as the input and where the arithmetic mean is computed along the given axis.</source>
          <target state="translated">입력과 모양이 같고 주어진 축을 따라 산술 평균이 계산되는 예외 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a0f58d6dddf5cd41797684629530254cf6a8c8a" translate="yes" xml:space="preserve">
          <source>Returns an array representing a linear polynomial.</source>
          <target state="translated">선형 다항식을 나타내는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f94de1f6c7639ea5d7ce403286395619048ad47d" translate="yes" xml:space="preserve">
          <source>Returns an array with the number of non-overlapping occurrences of substring &lt;code&gt;sub&lt;/code&gt; in the range [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;].</source>
          <target state="translated">[ &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; ] 범위에서 하위 문자열 &lt;code&gt;sub&lt;/code&gt; 의 겹치지 않는 발생 횟수를 가진 배열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="45a88ec2bccba0b1c19ca07ff9136eb845b66f52" translate="yes" xml:space="preserve">
          <source>Returns an element-wise indication of the sign of a number.</source>
          <target state="translated">숫자 부호의 요소 별 표시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="de96e095414d689252b03aefa6d51a16cbfc3b50" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the &lt;a href=&quot;#array-flags&quot;&gt;array-flags&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#array-flags&quot;&gt;array-flags를&lt;/a&gt; 나타내는 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9635b520b34813723c2f4f44400040e004496303" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the flags of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">반환의 플래그를 나타내는 정수 &lt;code&gt;a&lt;/code&gt; , 가정 A와 수 있습니다 캐스트 &lt;code&gt;PyArrayObject*&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fffc645b65d4cb0b478c983fa888d91f9d5e6474" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;../arrays.interface#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute following the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">배열 인터페이스 프로토콜에 따라 &lt;a href=&quot;../arrays.interface#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt; 속성 을 노출하는 Python 객체에서 ndarray 객체를 반환 합니다. 객체에이 속성이 &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt; 대한 차용 된 참조 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5ba2d31cc4b0e639b95456209cc1de19e6149cfd" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;../arrays.interface#object.__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute following the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">배열 인터페이스 프로토콜에 따라 &lt;a href=&quot;../arrays.interface#object.__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt; 속성 을 노출하는 Python 객체에서 ndarray 객체를 반환 합니다. 객체에이 속성이 &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt; 대한 차용 된 참조 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5fb7cb9cdabb794c59312979d79f2f454b931d00" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;../arrays.interface#object.__array_struct__&quot;&gt;&lt;code&gt;__array_struct__&lt;/code&gt;&lt;/a&gt; attribute and follows the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;a href=&quot;../arrays.interface#object.__array_struct__&quot;&gt; &lt;code&gt;__array_struct__&lt;/code&gt; &lt;/a&gt; 속성 을 노출 하고 배열 인터페이스 프로토콜을 따르는 Python 객체에서 ndarray 객체를 반환 합니다. 객체에이 속성이 &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; &lt;/a&gt; 대한 차용 된 참조 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a8e486ab7595a742e750c6b5fb68a5e7723e7b7d" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;a href=&quot;arrays.interface#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute following the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">배열 인터페이스 프로토콜에 따라 &lt;a href=&quot;arrays.interface#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt; 속성 을 노출하는 Python 객체에서 ndarray 객체를 반환 합니다. 객체가이 속성을 포함하지 않으면 &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; 에&lt;/a&gt; 대한 빌린 참조 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="defd61a16e8456c3662e0bbcd8b6e4544c88f9f5" translate="yes" xml:space="preserve">
          <source>Returns an ndarray object from a Python object that exposes the &lt;code&gt;__array_struct__&lt;/code&gt; attribute and follows the array interface protocol. If the object does not contain this attribute then a borrowed reference to &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt;&lt;code&gt;Py_NotImplemented&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;code&gt;__array_struct__&lt;/code&gt; 속성 을 노출 하고 배열 인터페이스 프로토콜을 따르는 Python 객체에서 ndarray 객체를 반환 합니다. 객체가이 속성을 포함하지 않으면 &lt;a href=&quot;https://docs.python.org/dev/c-api/object.html#c.Py_NotImplemented&quot;&gt; &lt;code&gt;Py_NotImplemented&lt;/code&gt; 에&lt;/a&gt; 대한 빌린 참조 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e68745ac983845b9eb541855dfdd4c1cfa0ba166" translate="yes" xml:space="preserve">
          <source>Returns array of indices of the maximum values along the given axis.</source>
          <target state="translated">주어진 축을 따라 최대 값의 인덱스 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a71dcc827b5e07f838075d3a5caff5e6a8e138b7" translate="yes" xml:space="preserve">
          <source>Returns array of indices of the maximum values along the given axis. Masked values are treated as if they had the value fill_value.</source>
          <target state="translated">주어진 축을 따라 최대 값의 인덱스 배열을 반환합니다. 마스크 된 값은 fill_value 값을 갖는 것처럼 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="3272962658178566710f9691c655f62f6f462ac4" translate="yes" xml:space="preserve">
          <source>Returns dtype for the base element of the subarrays, regardless of their dimension or shape.</source>
          <target state="translated">차원 또는 모양에 관계없이 하위 배열의 기본 요소에 대한 dtype을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb3c5a765826dbc160b2629b990fe6fbc4be3cdb" translate="yes" xml:space="preserve">
          <source>Returns either a new reference to self if dtype is not given or a new array of provided data type if dtype is different from the current dtype of the array.</source>
          <target state="translated">dtype이 제공되지 않은 경우 self에 대한 새로운 참조 또는 dtype이 배열의 현재 dtype과 다른 경우 제공된 데이터 유형의 새 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bf9f415a99f80c456ba9880f70ef07188c8051bb" translate="yes" xml:space="preserve">
          <source>Returns element-wise True where signbit is set (less than zero).</source>
          <target state="translated">부호 비트가 설정된 (0보다 작은) 요소 별 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f338a78b0e40859071dbd16839fbebae883403c5" translate="yes" xml:space="preserve">
          <source>Returns element-wise base array raised to power from second array.</source>
          <target state="translated">두 번째 배열에서 거듭 제곱 된 요소 별 기본 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8019b995da064a9519ce144fc0391726fe3412ea" translate="yes" xml:space="preserve">
          <source>Returns non-zero if &lt;em&gt;arr&lt;/em&gt; can be cast to &lt;em&gt;totype&lt;/em&gt; according to the casting rule given in &lt;em&gt;casting&lt;/em&gt;. If &lt;em&gt;arr&lt;/em&gt; is an array scalar, its value is taken into account, and non-zero is also returned when the value will not overflow or be truncated to an integer when converting to a smaller type.</source>
          <target state="translated">반환 zero가 아니라면 &lt;em&gt;편곡이&lt;/em&gt; 캐스팅 될 수 &lt;em&gt;totype&lt;/em&gt; 에 주어진 주조 규칙에 따라 &lt;em&gt;주조&lt;/em&gt; . &lt;em&gt;arr&lt;/em&gt; 이 배열 스칼라 인 경우 값이 고려되며 더 작은 유형으로 변환 할 때 값이 오버 플로우되지 않거나 정수로 잘릴 때 0이 아닌 값도 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="578c25be3a47f3925ec3d30b6194822d36f3b53b" translate="yes" xml:space="preserve">
          <source>Returns non-zero if an array of data type &lt;em&gt;fromtype&lt;/em&gt; (which can include flexible types) can be cast safely to an array of data type &lt;em&gt;totype&lt;/em&gt; (which can include flexible types) according to the casting rule &lt;em&gt;casting&lt;/em&gt;. For simple types with &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt;&lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt;&lt;/a&gt;, this is basically a wrapper around &lt;a href=&quot;#c.PyArray_CanCastSafely&quot;&gt;&lt;code&gt;PyArray_CanCastSafely&lt;/code&gt;&lt;/a&gt;, but for flexible types such as strings or unicode, it produces results taking into account their sizes. Integer and float types can only be cast to a string or unicode type using &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt;&lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt;&lt;/a&gt; if the string or unicode type is big enough to hold the max value of the integer/float type being cast from.</source>
          <target state="translated">데이터 타입의 배열 경우 반환 비제 &lt;em&gt;fromtype&lt;/em&gt; (가요 유형을 포함 할 수있다) 데이터 형식의 배열로 안전하게 전송할 수 &lt;em&gt;totype&lt;/em&gt; 주조 룰에 따라 (가요 유형을 포함 할 수있다) &lt;em&gt;주조&lt;/em&gt; . &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt; &lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt; &lt;/a&gt; 인 단순 유형의 경우 기본적으로 &lt;a href=&quot;#c.PyArray_CanCastSafely&quot;&gt; &lt;code&gt;PyArray_CanCastSafely&lt;/code&gt; 에&lt;/a&gt; 대한 랩퍼 이지만 문자열 또는 유니 코드와 같은 유연한 유형의 경우 크기를 고려하여 결과를 생성합니다. 정수 또는 부동 유형은 문자열 또는 유니 코드 유형이 캐스트되는 정수 / 부동 유형의 최대 값을 보유하기에 충분히 큰 경우 &lt;a href=&quot;#c.NPY_SAFE_CASTING&quot;&gt; &lt;code&gt;NPY_SAFE_CASTING&lt;/code&gt; 을&lt;/a&gt; 사용하여 문자열 또는 유니 코드 유형으로 만 캐스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce6b8f0c4ec83a1402de56c2e34413bf75b42ffd" translate="yes" xml:space="preserve">
          <source>Returns non-zero if an array of data type &lt;em&gt;fromtype&lt;/em&gt; can be cast to an array of data type &lt;em&gt;totype&lt;/em&gt; without losing information. An exception is that 64-bit integers are allowed to be cast to 64-bit floating point values even though this can lose precision on large integers so as not to proliferate the use of long doubles without explicit requests. Flexible array types are not checked according to their lengths with this function.</source>
          <target state="translated">데이터 유형의 배열 경우 반환이 아닌 제로 &lt;em&gt;fromtype이&lt;/em&gt; 데이터 유형의 배열에 캐스트 할 수 &lt;em&gt;totype&lt;/em&gt; 정보를 잃지 않고. 예외적으로 64 비트 정수는 64 비트 부동 소수점 값으로 캐스트 될 수 있지만 명시적인 요청없이 long double의 사용이 급증하지 않도록 큰 정수에서 정밀도를 잃을 수 있습니다. 이 기능으로 유연한 어레이 유형을 길이에 따라 점검하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="009a9310deb92537b808ab91212710a189e4451a" translate="yes" xml:space="preserve">
          <source>Returns one array of grid indices, &lt;code&gt;grid.shape = (len(dimensions),) + tuple(dimensions)&lt;/code&gt;.</source>
          <target state="translated">하나의 그리드 인덱스 배열 &lt;code&gt;grid.shape = (len(dimensions),) + tuple(dimensions)&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="52c2273cd80979ab77c8d77556b8041d5809ac4d" translate="yes" xml:space="preserve">
          <source>Returns pointers to the end-points of an array.</source>
          <target state="translated">배열의 끝점에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b8b929aa0e64f62d714c79c20bb2ed4cff9005cd" translate="yes" xml:space="preserve">
          <source>Returns single boolean unless &lt;code&gt;axis&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 이 &lt;code&gt;None&lt;/code&gt; 이 아닌 한 단일 부울을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="85f124d396a8cca8daf0b6150db2c3baa3bbed2f" translate="yes" xml:space="preserve">
          <source>Returns the (complex) conjugate transpose of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 (복합) 켤레 전치를 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="fd94f46441fb0a066c178a4c64f1a6085b905a48" translate="yes" xml:space="preserve">
          <source>Returns the (multiplicative) inverse of invertible &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">invertible &lt;code&gt;self&lt;/code&gt; 의 (곱셈) 역을 구합니다 .</target>
        </trans-unit>
        <trans-unit id="27a38d55a488439e220541b994a0c10a2c5296e5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt;-th dimension of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">배열 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 번째 차원을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e17b1f28b2d0326d95a4ac69d5a18555cadbe967" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2.&lt;/code&gt;</source>
          <target state="translated">체비 쇼프 시리즈 &lt;code&gt;c&lt;/code&gt; 를 &lt;code&gt;pow&lt;/code&gt; 로 올립니다 . 인수 &lt;code&gt;c&lt;/code&gt; 는 낮은 순서에서 높은 순서로 계수의 순서입니다. 즉, [1,2,3]은 시리즈 &lt;code&gt;T_0 + 2*T_1 + 3*T_2.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c19ff72c5e7b4b33394346a0b149ffa3dd267dc3" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*T_0 + 2*T_1 + 3*T_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) +
2*T_0(x)*T_1(y) + 2*T_1(x)*T_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">반환 체비 세프 시리즈 계수를 &lt;code&gt;c&lt;/code&gt; 차별화 &lt;code&gt;m&lt;/code&gt; 에 따라 시간 &lt;code&gt;axis&lt;/code&gt; . 반복 할 때마다 결과에 &lt;code&gt;scl&lt;/code&gt; 이 곱해집니다 (스케일링 계수는 변수의 선형 변경에 사용됩니다). 인수 &lt;code&gt;c&lt;/code&gt; 는 각 축을 따라 낮은 각도에서 높은 각도로 계수의 배열입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;1*T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 나타내며 [[1,2], [1 , 2]]는 &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) + 2*T_0(x)*T_1(y) + 2*T_1(x)*T_1(y)&lt;/code&gt; 축 = 0 인 경우 &lt;code&gt;x&lt;/code&gt; 및 축 = 1이고 &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51c140591b74a0d1fee97f09b426cb62c831fe6c" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) + 2*T_0(x)*T_1(y) +
2*T_1(x)*T_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">반환 체비 셰프 시리즈 계수 &lt;code&gt;c&lt;/code&gt; 집적 &lt;code&gt;m&lt;/code&gt; 의 시간 &lt;code&gt;lbnd&lt;/code&gt; 따라 &lt;code&gt;axis&lt;/code&gt; . 각 반복에서 결과 계열 에 &lt;code&gt;scl&lt;/code&gt; 이 &lt;strong&gt;곱해&lt;/strong&gt; 지고 적분 상수 &lt;code&gt;k&lt;/code&gt; 가 추가됩니다. 스케일링 계수는 변수의 선형 변경에 사용됩니다. ( &quot;구매자주의&quot;:하고있는 일에 따라 &lt;code&gt;scl&lt;/code&gt; 이 기대할 수있는 것에 대한 역수를 원할 수 있습니다. 자세한 내용은 아래의 참고 섹션을 참조하십시오.) 인수 &lt;code&gt;c&lt;/code&gt; 는 다음의 계수 배열입니다. 예를 들어, [1,2,3]은 시리즈 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 나타냅니다.[[1,2], [1,2]]는 &lt;code&gt;1*T_0(x)*T_0(y) + 1*T_1(x)*T_0(y) + 2*T_0(x)*T_1(y) + 2*T_1(x)*T_1(y)&lt;/code&gt; axis = 0이 &lt;code&gt;x&lt;/code&gt; 이고 axis = 1이 &lt;code&gt;y&lt;/code&gt; 인 경우 2 * T_1 (x) * T_1 (y) 입니다.</target>
        </trans-unit>
        <trans-unit id="8fcb4ff6f7c6a3d9ef93e2dcfc52e8f8796319fa" translate="yes" xml:space="preserve">
          <source>Returns the Chebyshev series that interpolates &lt;code&gt;func&lt;/code&gt; at the Chebyshev points of the first kind in the interval [-1, 1]. The interpolating series tends to a minmax approximation to &lt;code&gt;func&lt;/code&gt; with increasing &lt;code&gt;deg&lt;/code&gt; if the function is continuous in the interval.</source>
          <target state="translated">구간 [-1, 1]에서 첫 번째 종류의 체비 쇼프 점에서 &lt;code&gt;func&lt;/code&gt; 를 보간하는 체비 쇼프 시리즈를 반환합니다 . 보간 계열은 함수가 구간에서 연속적인 경우 &lt;code&gt;deg&lt;/code&gt; 가 증가함에 따라 &lt;code&gt;func&lt;/code&gt; 에 대한 최소 근사값이되는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b07ebc531340b87673abfd1f024bdc89d45d7007" translate="yes" xml:space="preserve">
          <source>Returns the Hermite series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</source>
          <target state="translated">Hermite 시리즈 &lt;code&gt;c&lt;/code&gt; 를 power &lt;code&gt;pow&lt;/code&gt; 로 올립니다 . 인수 &lt;code&gt;c&lt;/code&gt; 는 낮은 순서에서 높은 순서로 계수의 순서입니다. 즉, [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt; 시리즈 입니다.</target>
        </trans-unit>
        <trans-unit id="38bb43fa9b0cd1cba2d7e700e138a1ce808ed498" translate="yes" xml:space="preserve">
          <source>Returns the Hermite series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*H_0 + 2*H_1 + 3*H_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) +
2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 따라 &lt;code&gt;m&lt;/code&gt; 차분 된 Hermite 시리즈 계수 &lt;code&gt;c&lt;/code&gt; 를 반환합니다 . 반복 할 때마다 결과에 &lt;code&gt;scl&lt;/code&gt; 이 곱해집니다 (스케일링 계수는 변수의 선형 변경에 사용됩니다). 논쟁 거리 &lt;code&gt;c&lt;/code&gt; 는 각 축을 따라 낮은 각도에서 높은 각도로 계수의 배열입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;1*H_0 + 2*H_1 + 3*H_2&lt;/code&gt; 나타내며 [[1,2], [1 , 2]]는 &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; 축 = 0 인 경우 &lt;code&gt;x&lt;/code&gt; 및 축 = 1이고 &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fdd479f3684cd6fab81a5f0c83cd2978f6db6a0" translate="yes" xml:space="preserve">
          <source>Returns the Hermite series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) +
2*H_1(x)*H_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">반환 미트 일련의 계수를 &lt;code&gt;c&lt;/code&gt; 집적 &lt;code&gt;m&lt;/code&gt; 의 시간 &lt;code&gt;lbnd&lt;/code&gt; 따라 &lt;code&gt;axis&lt;/code&gt; . 각 반복에서 결과 시리즈가 &lt;strong&gt;곱해집니다&lt;/strong&gt; 에 &lt;code&gt;scl&lt;/code&gt; 지고 적분 상수 &lt;code&gt;k&lt;/code&gt; 가 추가됩니다. 스케일링 계수는 변수의 선형 변경에 사용됩니다. ( &quot;구매자주의&quot;:하고있는 일에 따라 &lt;code&gt;scl&lt;/code&gt; 이 기대할 수있는 것의 역수 가되기를 원할 수 있습니다. 자세한 내용은 아래의 참고 섹션을 참조하십시오.) 인수 &lt;code&gt;c&lt;/code&gt; 는의 계수 배열입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; 나타냅니다.[[1,2], [1,2]]는 &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; 나타냅니다. axis = 0이 &lt;code&gt;x&lt;/code&gt; 이고 axis = 1이 &lt;code&gt;y&lt;/code&gt; 인 경우 + 2 * H_1 (x) * H_1 (y) 입니다.</target>
        </trans-unit>
        <trans-unit id="0e03d85b7cb766e37b49f36881ce04d9561050c0" translate="yes" xml:space="preserve">
          <source>Returns the Hermite_e series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) +
2*H_1(x)*H_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 따라 &lt;code&gt;lbnd&lt;/code&gt; 에서 &lt;code&gt;m&lt;/code&gt; 적분 된 Hermite_e 시리즈 계수 &lt;code&gt;c&lt;/code&gt; 를 반환합니다 . 각 반복에서 결과 계열 에 &lt;code&gt;scl&lt;/code&gt; 이 &lt;strong&gt;곱해&lt;/strong&gt; 지고 적분 상수 &lt;code&gt;k&lt;/code&gt; 가 추가됩니다. 스케일링 계수는 변수의 선형 변경에 사용됩니다. ( &quot;구매자주의&quot;:하고있는 일에 따라 &lt;code&gt;scl&lt;/code&gt; 이 기대할 수있는 것의 역수 가되기를 원할 수 있습니다. 자세한 내용은 아래의 참고 섹션을 참조하십시오.) 인수 &lt;code&gt;c&lt;/code&gt; 는의 계수 배열입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;H_0 + 2*H_1 + 3*H_2&lt;/code&gt; 나타냅니다.&lt;strong&gt;&lt;/strong&gt; [[1,2], [1,2]]는 &lt;code&gt;1*H_0(x)*H_0(y) + 1*H_1(x)*H_0(y) + 2*H_0(x)*H_1(y) + 2*H_1(x)*H_1(y)&lt;/code&gt; 나타냅니다. 축이 0 인 경우 (y) + 2 * H_0 (x) * H_1 (y) + 2 * H_1 (x) * H_1 (y) &lt;code&gt;x&lt;/code&gt; 이고 axis = 1이 &lt;code&gt;y&lt;/code&gt; 인 입니다.</target>
        </trans-unit>
        <trans-unit id="f994c1c77662952de13b72ec1cb9b59a30088124" translate="yes" xml:space="preserve">
          <source>Returns the Laguerre series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</source>
          <target state="translated">Laguerre 시리즈 &lt;code&gt;c&lt;/code&gt; 를 power &lt;code&gt;pow&lt;/code&gt; 로 올립니다 . 논쟁 거리 &lt;code&gt;c&lt;/code&gt; 는 낮은 순서에서 높은 순서로 계수의 순서입니다. 즉, [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt; 시리즈 입니다.</target>
        </trans-unit>
        <trans-unit id="dd67bccd89dec7b84a0f263cadef9ef3b8b2abf4" translate="yes" xml:space="preserve">
          <source>Returns the Laguerre series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) +
2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">반환 Laguerre 시리즈 계수를 &lt;code&gt;c&lt;/code&gt; 차별화 &lt;code&gt;m&lt;/code&gt; 에 따라 시간 &lt;code&gt;axis&lt;/code&gt; . 반복 할 때마다 결과에 &lt;code&gt;scl&lt;/code&gt; 이 곱해집니다 (스케일링 계수는 변수의 선형 변경에 사용됩니다). 인수 &lt;code&gt;c&lt;/code&gt; 는 각 축을 따라 낮은 각도에서 높은 각도로 계수의 배열입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; 나타내며 [[1,2], [1 , 2]]는 &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; 축 = 0 인 경우 &lt;code&gt;x&lt;/code&gt; 및 축 = 1이고 &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a36104a44d4c73e587b5267fdc3125d9e9962c93" translate="yes" xml:space="preserve">
          <source>Returns the Laguerre series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) +
2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">반환 Laguerre 일련의 계수를 &lt;code&gt;c&lt;/code&gt; 집적 &lt;code&gt;m&lt;/code&gt; 의 시간 &lt;code&gt;lbnd&lt;/code&gt; 따라 &lt;code&gt;axis&lt;/code&gt; . 각 반복에서 결과 계열 에 &lt;code&gt;scl&lt;/code&gt; 이 &lt;strong&gt;곱해&lt;/strong&gt; 지고 적분 상수 &lt;code&gt;k&lt;/code&gt; 가 추가됩니다. 스케일링 계수는 변수의 선형 변경에 사용됩니다. ( &quot;구매자주의&quot;:하고있는 일에 따라 [[1,2], [1,2]]가 &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; 축이 &lt;code&gt;x&lt;/code&gt; 이고 x 축이 1 인 경우 x) * L_0 (y) + 2 * L_0 (x) * L_1 (y) + 2 * L_1 (x) * L_1 (y) &lt;code&gt;scl&lt;/code&gt; 이 기대할 수있는 것의 역수 수 있습니다. 자세한 내용은 아래의 참고 섹션을 참조하십시오.) 인수 &lt;code&gt;c&lt;/code&gt; 는의 계수 배열입니다. 예를 들어 [1,2,3]은 &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; 시리즈를 나타냅니다. &lt;code&gt;y&lt;/code&gt; 인 입니다.</target>
        </trans-unit>
        <trans-unit id="c884d7d7bbacfa0d8c4f0d11afe877e72a8762a9" translate="yes" xml:space="preserve">
          <source>Returns the Legendre series &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt;</source>
          <target state="translated">Legendre 시리즈 &lt;code&gt;c&lt;/code&gt; 를 power &lt;code&gt;pow&lt;/code&gt; 로 올립니다 . 인수 &lt;code&gt;c&lt;/code&gt; 는 낮은 순서에서 높은 순서로 계수의 순서입니다. 즉, [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2.&lt;/code&gt; 시리즈 입니다.</target>
        </trans-unit>
        <trans-unit id="9aec3f7374402168612096c12626ad1ed5c82577" translate="yes" xml:space="preserve">
          <source>Returns the Legendre series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) +
2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">반환 르장 드르 시리즈 계수를 &lt;code&gt;c&lt;/code&gt; 차별화 &lt;code&gt;m&lt;/code&gt; 에 따라 시간 &lt;code&gt;axis&lt;/code&gt; . 반복 할 때마다 결과에 &lt;code&gt;scl&lt;/code&gt; 이 곱해집니다 (스케일링 계수는 변수의 선형 변경에 사용됩니다). 인수 &lt;code&gt;c&lt;/code&gt; 는 각 축을 따라 낮은 각도에서 높은 각도로 계수의 배열입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;1*L_0 + 2*L_1 + 3*L_2&lt;/code&gt; 나타내며 [[1,2], [1 , 2]]는 &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; 축 = 0 인 경우 &lt;code&gt;x&lt;/code&gt; 및 축 = 1이고 &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a51274546bf924dd416ea8425edac23e0abc587" translate="yes" xml:space="preserve">
          <source>Returns the Legendre series coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) +
2*L_1(x)*L_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">반환 르장 시리즈 계수 &lt;code&gt;c&lt;/code&gt; 집적 &lt;code&gt;m&lt;/code&gt; 의 시간 &lt;code&gt;lbnd&lt;/code&gt; 따라 &lt;code&gt;axis&lt;/code&gt; . 각 반복에서 결과 계열 에 &lt;code&gt;scl&lt;/code&gt; 이 &lt;strong&gt;곱해&lt;/strong&gt; 지고 적분 상수 &lt;code&gt;k&lt;/code&gt; 가 추가됩니다. 스케일링 계수는 변수의 선형 변경에 사용됩니다. ( &quot;구매자주의&quot;:하고있는 일에 따라 &lt;code&gt;scl&lt;/code&gt; 이 기대할 수있는 것의 역수 가되기를 원할 수 있습니다. 자세한 내용은 아래의 참고 섹션을 참조하십시오.) 인수 &lt;code&gt;c&lt;/code&gt; 는의 계수 배열입니다. 예를 들어 [1,2,3]은 &lt;code&gt;L_0 + 2*L_1 + 3*L_2&lt;/code&gt; 시리즈를 나타냅니다.[[1,2], [1,2]]는 &lt;code&gt;1*L_0(x)*L_0(y) + 1*L_1(x)*L_0(y) + 2*L_0(x)*L_1(y) + 2*L_1(x)*L_1(y)&lt;/code&gt; axis = 0이 &lt;code&gt;x&lt;/code&gt; 이고 axis = 1이 &lt;code&gt;y&lt;/code&gt; 인 경우 2 * L_1 (x) * L_1 (y) 입니다.</target>
        </trans-unit>
        <trans-unit id="22d64806d0f573e6aae1d9ab8498480317b34be4" translate="yes" xml:space="preserve">
          <source>Returns the NPV (Net Present Value) of a cash flow series.</source>
          <target state="translated">현금 흐름 시리즈의 NPV (순 현재 가치)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3c137d6ab752a1a419551450441663ea9713ac92" translate="yes" xml:space="preserve">
          <source>Returns the Vandermonde matrix of degree &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;x&lt;/code&gt;. The Vandermonde matrix is defined by</source>
          <target state="translated">도 &lt;code&gt;deg&lt;/code&gt; 및 샘플 점 &lt;code&gt;x&lt;/code&gt; 의 Vandermonde 행렬을 반환합니다 . Vandermonde 매트릭스는</target>
        </trans-unit>
        <trans-unit id="5bfc8cf62cfe82f2c9a3492a2538db7f55bfc867" translate="yes" xml:space="preserve">
          <source>Returns the average of the array elements along given axis.</source>
          <target state="translated">주어진 축을 따라 배열 요소의 평균을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="65f19b2033d6e804190b09f246af9a1f84be8335" translate="yes" xml:space="preserve">
          <source>Returns the average of the array elements. The average is taken over the flattened array by default, otherwise over the specified axis. &lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt;&lt;code&gt;float64&lt;/code&gt;&lt;/a&gt; intermediate and return values are used for integer inputs.</source>
          <target state="translated">배열 요소의 평균을 반환합니다. 평균은 기본적으로 평면화 된 배열을 사용하고 그렇지 않으면 지정된 축을 사용합니다. &lt;a href=&quot;../arrays.scalars#numpy.float64&quot;&gt; &lt;code&gt;float64&lt;/code&gt; &lt;/a&gt; 중간 및 반환 값은 정수 입력에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9a7a0a83f8ee3f88fa0c20189c0d4ac30a4fefe0" translate="yes" xml:space="preserve">
          <source>Returns the average of the array elements. The average is taken over the flattened array by default, otherwise over the specified axis. &lt;code&gt;float64&lt;/code&gt; intermediate and return values are used for integer inputs.</source>
          <target state="translated">배열 요소의 평균을 반환합니다. 평균은 기본적으로 병합 된 배열에, 그렇지 않으면 지정된 축에 적용됩니다. &lt;code&gt;float64&lt;/code&gt; 중간 및 반환 값은 정수 입력에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="da94c213a46beb19d86e10459dc3048a91bbf7b6" translate="yes" xml:space="preserve">
          <source>Returns the average of the matrix elements along the given axis.</source>
          <target state="translated">주어진 축을 따라 행렬 요소의 평균을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0068e75a5ec4a982069a5c11ee5893dfa3f6ee69" translate="yes" xml:space="preserve">
          <source>Returns the broadcast shape of the iterator in &lt;code&gt;outshape&lt;/code&gt;. This can only be called on an iterator which is tracking a multi-index.</source>
          <target state="translated">의 반복자의 방송 형태를 돌려줍니다 &lt;code&gt;outshape&lt;/code&gt; 을 . 다중 인덱스를 추적하는 반복자에서만 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59cb40edade0a60821e9c8728c90ce4019cc7711" translate="yes" xml:space="preserve">
          <source>Returns the coefficients of the polynomial whose leading coefficient is one for the given sequence of zeros (multiple roots must be included in the sequence as many times as their multiplicity; see Examples). A square matrix (or array, which will be treated as a matrix) can also be given, in which case the coefficients of the characteristic polynomial of the matrix are returned.</source>
          <target state="translated">선행 계수가 주어진 0 시퀀스에 대해 1 인 다항식의 계수를 반환합니다 (다수의 루트는 다중도의 수만큼 시퀀스에 포함되어야합니다 (예 참조)). 정사각 행렬 (또는 행렬로 처리 될 배열)도 제공 될 수 있으며,이 경우 행렬의 특성 다항식의 계수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9a3ee119768a6a76dde85f3db63eca898fd52187" translate="yes" xml:space="preserve">
          <source>Returns the data type with the smallest size and smallest scalar kind to which both &lt;code&gt;type1&lt;/code&gt; and &lt;code&gt;type2&lt;/code&gt; may be safely cast.</source>
          <target state="translated">&lt;code&gt;type1&lt;/code&gt; 과 &lt;code&gt;type2&lt;/code&gt; 가 안전하게 캐스팅 될 수 있는 가장 작은 크기와 가장 작은 스칼라 종류의 데이터 형식을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e4339e8090b0a422018db91db164d57c296f3de6" translate="yes" xml:space="preserve">
          <source>Returns the data type with the smallest size and smallest scalar kind to which both &lt;code&gt;type1&lt;/code&gt; and &lt;code&gt;type2&lt;/code&gt; may be safely cast. The returned data type is always in native byte order.</source>
          <target state="translated">&lt;code&gt;type1&lt;/code&gt; 과 &lt;code&gt;type2&lt;/code&gt; 가 모두 가장 작은 스칼라 종류와 가장 작은 데이터 형식을 반환합니다. 가 안전하게 캐스팅 될 수 . 반환 된 데이터 형식은 항상 기본 바이트 순서입니다.</target>
        </trans-unit>
        <trans-unit id="652ac6762e24a3418b146937904fd1f674c2224b" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">두 Chebyshev 계열 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; 의 차이를 반환합니다 . 계수의 시퀀스는 가장 낮은 항에서 가장 높은 항으로, 즉 [1,2,3]은 시리즈 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="810185597496d8c0a086bcfb1d063b53f5bfeb16" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Hermite series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 Hermite 계열 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; 의 차이를 반환합니다 . 계수의 시퀀스는 가장 낮은 항에서 가장 높은 항으로, 즉 [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="208a2d78d3f934b924e6ee9dc9fe7f3d628be890" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Laguerre series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Laguerre 계열 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; 의 차이를 반환합니다 . 계수의 시퀀스는 가장 낮은 항에서 가장 높은 항으로, 즉 [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="be0457d2a096b03dacb16ec4b9b3e6226803db10" translate="yes" xml:space="preserve">
          <source>Returns the difference of two Legendre series &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The sequences of coefficients are from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 Legendre 시리즈 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; 의 차이를 반환합니다 . 계수의 시퀀스는 가장 낮은 항에서 가장 높은 항으로, 즉 [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d084870c51f5e13c851d15b086b19fb99d050125" translate="yes" xml:space="preserve">
          <source>Returns the difference of two polynomials &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order term to highest, i.e., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt;.</source>
          <target state="translated">두 다항식 &lt;code&gt;c1&lt;/code&gt; - &lt;code&gt;c2&lt;/code&gt; 의 차이를 반환합니다 . 인수는 최하위 항에서 최고에 이르는 계수의 시퀀스입니다. 즉, [1,2,3]은 다항식 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="9f1d8ee5cd294f79f1c399414296222f25d00036" translate="yes" xml:space="preserve">
          <source>Returns the directory containing NumPy C header files.</source>
          <target state="translated">NumPy C 헤더 파일이 포함 된 디렉토리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0189ccd9f65586480cc5f3ba179ed30ed4323e1" translate="yes" xml:space="preserve">
          <source>Returns the discrete, linear convolution of two one-dimensional sequences.</source>
          <target state="translated">두 개의 1 차원 시퀀스의 불연속 선형 컨벌루션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af372a1a4631fac47072f3f87c81329981478748" translate="yes" xml:space="preserve">
          <source>Returns the dot product of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are both scalars or both 1-D arrays then a scalar is returned; otherwise an array is returned. If &lt;code&gt;out&lt;/code&gt; is given, then it is returned.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 내적을 반환합니다 . 경우 및 &lt;code&gt;b&lt;/code&gt; 둘 또는 둘 스칼라 1-D 어레이이어서 스칼라 반환이다; 그렇지 않으면 배열이 반환됩니다. 경우 &lt;code&gt;out&lt;/code&gt; 주어진, 다음이 반환됩니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b48088bf8a056601fc331a8831fcde05c38bc2a" translate="yes" xml:space="preserve">
          <source>Returns the dot product of the supplied arrays.</source>
          <target state="translated">제공된 배열의 내적을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae6f7a436d9c5b853f5258dd3e837dbb130aafbb" translate="yes" xml:space="preserve">
          <source>Returns the endianness of the current platform. One of &lt;a href=&quot;#c.NPY_CPU_BIG&quot;&gt;&lt;code&gt;NPY_CPU_BIG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_CPU_LITTLE&quot;&gt;&lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#c.NPY_CPU_UNKNOWN_ENDIAN&quot;&gt;&lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 플랫폼의 엔디안을 반환합니다. &lt;a href=&quot;#c.NPY_CPU_BIG&quot;&gt; &lt;code&gt;NPY_CPU_BIG&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_CPU_LITTLE&quot;&gt; &lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#c.NPY_CPU_UNKNOWN_ENDIAN&quot;&gt; &lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt; &lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="db092eb9af5a3e3a76fb82a7afe5490aa2ddcea7" translate="yes" xml:space="preserve">
          <source>Returns the endianness of the current platform. One of &lt;code&gt;NPY_CPU_BIG&lt;/code&gt;, &lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt;, or &lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt;.</source>
          <target state="translated">현재 플랫폼의 엔디안을 반환합니다. &lt;code&gt;NPY_CPU_BIG&lt;/code&gt; , &lt;code&gt;NPY_CPU_LITTLE&lt;/code&gt; 또는 &lt;code&gt;NPY_CPU_UNKNOWN_ENDIAN&lt;/code&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="67a4cfc6d13e64ee8c7f0e5e3ea5f0dc0aae5be7" translate="yes" xml:space="preserve">
          <source>Returns the field names of the input datatype as a tuple.</source>
          <target state="translated">입력 데이터 유형의 필드 이름을 튜플로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c30830e3906b13a9b106787cd034def7c923cee0" translate="yes" xml:space="preserve">
          <source>Returns the field names of the input datatype as a tuple. Nested structure are flattened beforehand.</source>
          <target state="translated">입력 데이터 유형의 필드 이름을 튜플로 반환합니다. 중첩 된 구조는 미리 평면화됩니다.</target>
        </trans-unit>
        <trans-unit id="0f0c2322eb3e3266616e01e73e5e13553faba179" translate="yes" xml:space="preserve">
          <source>Returns the greatest common divisor of &lt;code&gt;|x1|&lt;/code&gt; and &lt;code&gt;|x2|&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;|x1|&lt;/code&gt; 최대 공약수를 반환합니다. 및 &lt;code&gt;|x2|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96e5cd14b263d3f1d7e13bd1da219d8e84004c5d" translate="yes" xml:space="preserve">
          <source>Returns the indices of the maximum values along an axis.</source>
          <target state="translated">축을 따라 최대 값의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6fd0ce4f3a8a5599013e0e8bf8afc094b6c66089" translate="yes" xml:space="preserve">
          <source>Returns the indices of the minimum values along an axis.</source>
          <target state="translated">축을 따라 최소값의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac39c0a6c8eb391ea93991374f33f2d985224b6b" translate="yes" xml:space="preserve">
          <source>Returns the indices that would partition this array.</source>
          <target state="translated">이 배열을 분할 할 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="066f0bc1f78b8495c8fc78fba6ab6dd35e66306d" translate="yes" xml:space="preserve">
          <source>Returns the indices that would sort an array.</source>
          <target state="translated">배열을 정렬 할 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f1537d0d9b6c521d0eaec523829a299d0b0d35b3" translate="yes" xml:space="preserve">
          <source>Returns the indices that would sort this array.</source>
          <target state="translated">이 배열을 정렬 할 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="edccc0a948e4da449b67cb64212a52312b7ed741" translate="yes" xml:space="preserve">
          <source>Returns the length of a string &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="57334d6b355fa0ec4f557d153030a58219d7f8fc" translate="yes" xml:space="preserve">
          <source>Returns the length of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">배열 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 길이를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44599c6fb1f0a7514d2bd99b73cb153b26fa2f4a" translate="yes" xml:space="preserve">
          <source>Returns the lowest common multiple of &lt;code&gt;|x1|&lt;/code&gt; and &lt;code&gt;|x2|&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;|x1|&lt;/code&gt; 의 최소 ​​공배수를 반환합니다 및 &lt;code&gt;|x2|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35cac07fcea754e8297dd0565e7202c4a107b869" translate="yes" xml:space="preserve">
          <source>Returns the maximum filling value for a given datatype.</source>
          <target state="translated">주어진 데이터 유형에 대한 최대 채우기 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4457ed798c0061e3ce7961eee7f4387c54e6d803" translate="yes" xml:space="preserve">
          <source>Returns the maximum of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If (&lt;em&gt;a&lt;/em&gt;) or (&lt;em&gt;b&lt;/em&gt;) are expressions they are evaluated twice.</source>
          <target state="translated">최대 &lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b를&lt;/em&gt; 반환합니다 . ( &lt;em&gt;a&lt;/em&gt; ) 또는 ( &lt;em&gt;b&lt;/em&gt; )가 표현식 인 경우 두 번 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="d834b35582d6f8df6f939a50065823f0b5b2cafc" translate="yes" xml:space="preserve">
          <source>Returns the median of the array elements.</source>
          <target state="translated">배열 요소의 중앙값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c62ef342a59cb61c6779dde6629cd016952c832b" translate="yes" xml:space="preserve">
          <source>Returns the minimum filling value for a given datatype.</source>
          <target state="translated">주어진 데이터 유형에 대한 최소 채움 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a8e83436c0220effd776390ac8f193176b9b632" translate="yes" xml:space="preserve">
          <source>Returns the minimum of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If (&lt;em&gt;a&lt;/em&gt;) or (&lt;em&gt;b&lt;/em&gt;) are expressions they are evaluated twice.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt; 와 &lt;em&gt;b&lt;/em&gt; 의 최소값을 반환합니다 . ( &lt;em&gt;a&lt;/em&gt; ) 또는 ( &lt;em&gt;b&lt;/em&gt; )가 표현식 인 경우 두 번 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="f9ada65f8805ea4046c6d097e360ca3e3c9ff5d1" translate="yes" xml:space="preserve">
          <source>Returns the number of dimensions being iterated. If a multi-index was not requested in the iterator constructor, this value may be smaller than the number of dimensions in the original objects.</source>
          <target state="translated">반복되는 차원 수를 반환합니다. 반복자 생성자에서 다중 색인이 요청되지 않은 경우이 값은 원래 객체의 차원 수보다 작을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72b2edcfbc5eb4395e5fb93768ca15e6ea15c51e" translate="yes" xml:space="preserve">
          <source>Returns the number of elements being iterated. This is the product of all the dimensions in the shape. When a multi index is being tracked (and &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; may be called) the size may be &lt;code&gt;-1&lt;/code&gt; to indicate an iterator is too large. Such an iterator is invalid, but may become valid after &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; is called. It is not necessary to check for this case.</source>
          <target state="translated">반복되는 요소 수를 반환합니다. 이것은 모양의 모든 치수의 곱입니다. 다중 인덱스를 추적 할 때 ( &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; 가 호출 될 수 있음) 크기가 &lt;code&gt;-1&lt;/code&gt; 일 수 있으므로 반복기가 너무 큽니다. 이러한 반복자는 유효하지 않지만 &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; 가 호출 된 후에 유효해질 수 있습니다 . 이 경우를 확인할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="81a1b267bdc9613fdc34f48e560867b69e9bf01b" translate="yes" xml:space="preserve">
          <source>Returns the number of operands in the iterator.</source>
          <target state="translated">반복자의 피연산자 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="104ede44e50eab53cdc70c000280ef712803aebb" translate="yes" xml:space="preserve">
          <source>Returns the numpy.distutils config command instance.</source>
          <target state="translated">numpy.distutils 구성 명령 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c979c27368e89d132692f0e48b3260c993e96e6f" translate="yes" xml:space="preserve">
          <source>Returns the one-dimensional piecewise linear interpolant to a function with given discrete data points (&lt;code&gt;xp&lt;/code&gt;, &lt;code&gt;fp&lt;/code&gt;), evaluated at &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 에서 평가 된 주어진 이산 데이터 포인트 ( &lt;code&gt;xp&lt;/code&gt; , &lt;code&gt;fp&lt;/code&gt; ) 가있는 함수에 대한 1 차원 조각 별 선형 보간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="af6d974e97dff6b874b62e637b76121df7cd3fd0" translate="yes" xml:space="preserve">
          <source>Returns the pickle of the array as a string.</source>
          <target state="translated">배열의 피클을 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7f3d2ea9cca86da6ee47a885279507f66b7426dc" translate="yes" xml:space="preserve">
          <source>Returns the pickle of the array as a string. pickle.loads or numpy.loads will convert the string back to an array.</source>
          <target state="translated">배열의 피클을 문자열로 반환합니다. pickle.loads 또는 numpy.loads는 문자열을 다시 배열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="668f0eb9cb2aecc346de205aa45b54c97c370a13" translate="yes" xml:space="preserve">
          <source>Returns the polynomial &lt;code&gt;c&lt;/code&gt; raised to the power &lt;code&gt;pow&lt;/code&gt;. The argument &lt;code&gt;c&lt;/code&gt; is a sequence of coefficients ordered from low to high. i.e., [1,2,3] is the series &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt;</source>
          <target state="translated">다항식 &lt;code&gt;c&lt;/code&gt; 를 거듭 제곱 &lt;code&gt;pow&lt;/code&gt; 로 올립니다 . 인수 &lt;code&gt;c&lt;/code&gt; 는 낮은 순서에서 높은 순서로 계수의 순서입니다. 즉, [1,2,3]은 &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt; 시리즈 입니다.</target>
        </trans-unit>
        <trans-unit id="98788735767277cb3a2812c6f467184b53c81177" translate="yes" xml:space="preserve">
          <source>Returns the polynomial coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 따라 &lt;code&gt;m&lt;/code&gt; 차분 된 다항식 계수 &lt;code&gt;c&lt;/code&gt; 를 반환합니다 . 반복 할 때마다 결과에 &lt;code&gt;scl&lt;/code&gt; 이 곱해집니다 (스케일링 계수는 변수의 선형 변경에 사용됩니다). 인수 &lt;code&gt;c&lt;/code&gt; 는 각 축을 따라 낮은 각도에서 높은 각도로 계수의 배열입니다. 예를 들어 [1,2,3]은 다항식 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 나타내며 [[1,2], [ axis = 0이 &lt;code&gt;x&lt;/code&gt; 이고 axis = 1이 &lt;code&gt;y&lt;/code&gt; 인 경우 1,2]]는 &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="812803e3d789955f6635617a019a448f8a912cff" translate="yes" xml:space="preserve">
          <source>Returns the polynomial coefficients &lt;code&gt;c&lt;/code&gt; integrated &lt;code&gt;m&lt;/code&gt; times from &lt;code&gt;lbnd&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;. At each iteration the resulting series is &lt;strong&gt;multiplied&lt;/strong&gt; by &lt;code&gt;scl&lt;/code&gt; and an integration constant, &lt;code&gt;k&lt;/code&gt;, is added. The scaling factor is for use in a linear change of variable. (&amp;ldquo;Buyer beware&amp;rdquo;: note that, depending on what one is doing, one may want &lt;code&gt;scl&lt;/code&gt; to be the reciprocal of what one might expect; for more information, see the Notes section below.) The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients, from low to high degree along each axis, e.g., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 따라 &lt;code&gt;lbnd&lt;/code&gt; 에서 &lt;code&gt;m&lt;/code&gt; 적분 &lt;code&gt;c&lt;/code&gt; 다항식 계수를 반환합니다 . 각 반복에서 결과 계열 에 &lt;code&gt;scl&lt;/code&gt; 이 &lt;strong&gt;곱해&lt;/strong&gt; 지고 적분 상수 &lt;code&gt;k&lt;/code&gt; 가 추가됩니다. 스케일링 계수는 변수의 선형 변경에 사용됩니다. ( &quot;구매자주의&quot;:하고있는 일에 따라 &lt;code&gt;scl&lt;/code&gt; 이 기대할 수있는 것의 역수 가 되길 원할 수 있습니다. 자세한 내용은 아래의 참고 부분을 참조하십시오.) 인수 &lt;code&gt;c&lt;/code&gt; 는 계수의 배열입니다. 예를 들어 [1,2,3]은 다항식 나타내며 다축을&lt;strong&gt;&lt;/strong&gt; &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; [[1,2], [1,2]]는 &lt;code&gt;1 + 1*x + 2*y + 2*x*y&lt;/code&gt; axis = 0이 &lt;code&gt;x&lt;/code&gt; 이고 axis = 1이 &lt;code&gt;y&lt;/code&gt; 인 경우 1 + 1 * x + 2 * y + 2 * x * y 입니다.</target>
        </trans-unit>
        <trans-unit id="034f18e1309d3af00dcecfcccba40ebc63a2dfc0" translate="yes" xml:space="preserve">
          <source>Returns the polynomial resulting from the sum of two input polynomials. Each input must be either a poly1d object or a 1D sequence of polynomial coefficients, from highest to lowest degree.</source>
          <target state="translated">두 입력 다항식의 합으로 인한 다항식을 반환합니다. 각 입력은 poly1d 객체이거나 다항식 계수의 1D 시퀀스 (최고도에서 최저도) 여야합니다.</target>
        </trans-unit>
        <trans-unit id="45d74340cddf0d729cebcaf8b2e4de65ebcd90b5" translate="yes" xml:space="preserve">
          <source>Returns the product of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">두 Chebyshev 계열 &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; 의 곱을 반환합니다 . 인수는 가장 낮은 차수 &quot;term&quot;에서 가장 높은 계수까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="90407e92cc9ae107c5141f61cdb115c9772b8d39" translate="yes" xml:space="preserve">
          <source>Returns the product of two Hermite series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">Hermite 시리즈 &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; 의 곱을 반환합니다 . 인수는 가장 낮은 차수 &quot;term&quot;에서 가장 높은 계수까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="55b4851756e2216b22eca249f48dd9a0645c91af" translate="yes" xml:space="preserve">
          <source>Returns the product of two Laguerre series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Laguerre 계열 &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; 의 곱을 반환합니다 . 인수는 가장 낮은 차수 &quot;term&quot;에서 가장 높은 계수까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ed3d1969be746bdc953ad6a50b9f5f53423cb887" translate="yes" xml:space="preserve">
          <source>Returns the product of two Legendre series &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Legendre 시리즈 &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; 의 곱을 반환합니다 . 인수는 가장 낮은 차수 &quot;term&quot;에서 가장 높은 계수까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="2f47f44fd535dccc1d40014124d8bffd47f6c24e" translate="yes" xml:space="preserve">
          <source>Returns the product of two polynomials &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order term to highest, e.g., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt;</source>
          <target state="translated">두 다항식 &lt;code&gt;c1&lt;/code&gt; * &lt;code&gt;c2&lt;/code&gt; 의 곱을 반환합니다 . 인수는 최소 차수부터 최고까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 다항식 &lt;code&gt;1 + 2*x + 3*x**2.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fca0e8567184e99925ad16f6cb0ea2e6f81257a6" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degree &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;x&lt;/code&gt;. The pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">도 &lt;code&gt;deg&lt;/code&gt; 및 샘플 포인트 &lt;code&gt;x&lt;/code&gt; 의 의사 Vandermonde 행렬을 반환합니다 . 의사-반더 몬드 행렬은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3ba4324de2b007c57da9981c59bca1e95d6295d5" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degrees &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;(x, y)&lt;/code&gt;. The pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">도 &lt;code&gt;deg&lt;/code&gt; 및 샘플 포인트 &lt;code&gt;(x, y)&lt;/code&gt; 의 의사-반더 몬드 행렬을 반환합니다 . 의사-반더 몬드 행렬은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0505a85f1546cf212b05a18cdbfac51ab8f0edab" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degrees &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;(x, y, z)&lt;/code&gt;. If &lt;code&gt;l, m, n&lt;/code&gt; are the given degrees in &lt;code&gt;x, y, z&lt;/code&gt;, then Hehe pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">도 &lt;code&gt;deg&lt;/code&gt; 및 샘플 포인트 &lt;code&gt;(x, y, z)&lt;/code&gt; 의 의사-반더 몬드 행렬을 반환합니다 . 경우 &lt;code&gt;l, m, n&lt;/code&gt; 의 주어진도되고 &lt;code&gt;x, y, z&lt;/code&gt; 다음 도니 의사 반데 몬드 행렬에 의해 정의된다</target>
        </trans-unit>
        <trans-unit id="dcba6a788557e27d1600c939b7e0e6bcee3df211" translate="yes" xml:space="preserve">
          <source>Returns the pseudo-Vandermonde matrix of degrees &lt;code&gt;deg&lt;/code&gt; and sample points &lt;code&gt;(x, y, z)&lt;/code&gt;. If &lt;code&gt;l, m, n&lt;/code&gt; are the given degrees in &lt;code&gt;x, y, z&lt;/code&gt;, then The pseudo-Vandermonde matrix is defined by</source>
          <target state="translated">도 &lt;code&gt;deg&lt;/code&gt; 및 샘플 포인트 &lt;code&gt;(x, y, z)&lt;/code&gt; 의 의사-반더 몬드 행렬을 반환합니다 . 경우 &lt;code&gt;l, m, n&lt;/code&gt; 의 주어진도되고 &lt;code&gt;x, y, z&lt;/code&gt; 다음 의사 반데 몬드 행렬에 의해 정의된다</target>
        </trans-unit>
        <trans-unit id="a0dfe6f7c95bdb4b62f68b53ef4ef0355bd56e7e" translate="yes" xml:space="preserve">
          <source>Returns the q-th percentile(s) of the array elements.</source>
          <target state="translated">배열 요소의 q 번째 백분위 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03c4335c3eca743136a785e996958b7d4dd32720" translate="yes" xml:space="preserve">
          <source>Returns the qth percentile(s) of the array elements.</source>
          <target state="translated">배열 요소의 q 번째 백분위 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b71204c4bcdfc548b2d775b43fa93febb5cb5c86" translate="yes" xml:space="preserve">
          <source>Returns the quotient and remainder of polynomial division.</source>
          <target state="translated">다항식 나눗셈의 몫과 나머지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5539394ed1f9159fbcd5498b07cf3011c1c6013c" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">두 Chebyshev 계열 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; 의 나머지를 가진 몫을 반환합니다 . 인수는 최저 차수 &quot;term&quot;에서 최고까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="3c9b32eb3913036ab4848efb8a09e03a2b485c78" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Hermite series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 Hermite 시리즈 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; 의 나머지를 가진 몫을 반환합니다 . 인수는 최저 차수 &quot;term&quot;에서 최고까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="1cfe346de71f03469f33afec6b946010bed57838" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Laguerre series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Laguerre 계열 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; 의 나머지를 가진 몫을 반환합니다 . 인수는 최저 차수 &quot;term&quot;에서 최고까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="3fb4329aa6f46cc7b9b33ece62fbf989fb8a3eff" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two Legendre series &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order &amp;ldquo;term&amp;rdquo; to highest, e.g., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Legendre 시리즈 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; 의 나머지를 가진 몫을 반환합니다 . 인수는 최저 차수 &quot;term&quot;에서 최고까지의 계수 시퀀스입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="a3689b38a43f155518ee2dc202a48e26e60d74e0" translate="yes" xml:space="preserve">
          <source>Returns the quotient-with-remainder of two polynomials &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients, from lowest order term to highest, e.g., [1,2,3] represents &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt;.</source>
          <target state="translated">두 다항식 &lt;code&gt;c1&lt;/code&gt; / &lt;code&gt;c2&lt;/code&gt; 의 나머지를 가진 몫을 반환합니다 . 인수는 최소 차수부터 최고까지의 계수 시퀀스이며, 예를 들어 [1,2,3]은 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="31d7cd04614c66cfb2662662ac7b45a0813921ba" translate="yes" xml:space="preserve">
          <source>Returns the rank of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">배열 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 순위를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9c102b720ec8b29fab2892f9d407b1e75bc2dddf" translate="yes" xml:space="preserve">
          <source>Returns the real valued &lt;code&gt;n&lt;/code&gt;-point inverse discrete Fourier transform of &lt;code&gt;a&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; contains the non-negative frequency terms of a Hermitian-symmetric sequence. &lt;code&gt;n&lt;/code&gt; is the length of the result, not the input.</source>
          <target state="translated">반환 실제 값 &lt;code&gt;n&lt;/code&gt; N'- 포인트 역 이산 푸리에 변환 처리 여기서, &lt;code&gt;a&lt;/code&gt; 에르 미트 대칭 시퀀스의 비 - 음의 주파수 조건을 포함한다. &lt;code&gt;n&lt;/code&gt; 은 입력이 아닌 결과의 길이입니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14414e7247ed656c7f8ecc2881b9ef6b21189dbd" translate="yes" xml:space="preserve">
          <source>Returns the reference count of any Python object.</source>
          <target state="translated">파이썬 객체의 참조 카운트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="35861d05afccf11b14d65be82364638d5da5f22b" translate="yes" xml:space="preserve">
          <source>Returns the result of running the tests as a &lt;code&gt;nose.result.TextTestResult&lt;/code&gt; object.</source>
          <target state="translated">테스트를 실행 한 결과를 &lt;code&gt;nose.result.TextTestResult&lt;/code&gt; 개체 로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="753ce26de906bfa5b9b21f679e32ea77e8a28bf0" translate="yes" xml:space="preserve">
          <source>Returns the result of: &lt;a href=&quot;#r3b2e08cf0480-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">다음의 결과를 반환합니다. &lt;a href=&quot;#r3b2e08cf0480-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbfd044511fa063c6d57e2098157507a22a9cd2d" translate="yes" xml:space="preserve">
          <source>Returns the result of: &lt;a href=&quot;#r3b2e08cf0480-g&quot; id=&quot;id1&quot;&gt;[G]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#r3b2e08cf0480-g&quot; id=&quot;id1&quot;&gt;[G]&lt;/a&gt; 의 결과를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9dc97b6ac9048eac7422cd909b32da73491e7ee0" translate="yes" xml:space="preserve">
          <source>Returns the series coefficients &lt;code&gt;c&lt;/code&gt; differentiated &lt;code&gt;m&lt;/code&gt; times along &lt;code&gt;axis&lt;/code&gt;. At each iteration the result is multiplied by &lt;code&gt;scl&lt;/code&gt; (the scaling factor is for use in a linear change of variable). The argument &lt;code&gt;c&lt;/code&gt; is an array of coefficients from low to high degree along each axis, e.g., [1,2,3] represents the series &lt;code&gt;1*He_0 + 2*He_1 + 3*He_2&lt;/code&gt; while [[1,2],[1,2]] represents &lt;code&gt;1*He_0(x)*He_0(y) + 1*He_1(x)*He_0(y)
+ 2*He_0(x)*He_1(y) + 2*He_1(x)*He_1(y)&lt;/code&gt; if axis=0 is &lt;code&gt;x&lt;/code&gt; and axis=1 is &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; 따라 &lt;code&gt;m&lt;/code&gt; 차분 된 시리즈 계수 &lt;code&gt;c&lt;/code&gt; 를 반환합니다 . 반복 할 때마다 결과에 &lt;code&gt;scl&lt;/code&gt; 이 곱해집니다 (스케일링 계수는 변수의 선형 변경에 사용됩니다). 인수 &lt;code&gt;c&lt;/code&gt; 는 각 축을 따라 낮은 각도에서 높은 각도로 계수의 배열입니다. 예를 들어 [1,2,3]은 시리즈 &lt;code&gt;1*He_0 + 2*He_1 + 3*He_2&lt;/code&gt; 나타내며 [[1,2], [1 , 2]]는 &lt;code&gt;1*He_0(x)*He_0(y) + 1*He_1(x)*He_0(y) + 2*He_0(x)*He_1(y) + 2*He_1(x)*He_1(y)&lt;/code&gt; 축 = 0 인 경우 &lt;code&gt;x&lt;/code&gt; 및 축 = 1이고 &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33c79d5bd1b828fe56fff7ab34262c86ebedb4db" translate="yes" xml:space="preserve">
          <source>Returns the series representing the basis polynomial of degree &lt;code&gt;deg&lt;/code&gt;.</source>
          <target state="translated">도 &lt;code&gt;deg&lt;/code&gt; 의 기본 다항식을 나타내는 계열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1d1459d65cb63a34507944e05e2b25e7a7d6d497" translate="yes" xml:space="preserve">
          <source>Returns the series that interpolates &lt;code&gt;func&lt;/code&gt; at the Chebyshev points of the first kind scaled and shifted to the &lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt;. The resulting series tends to a minmax approximation of &lt;code&gt;func&lt;/code&gt; when the function is continuous in the domain.</source>
          <target state="translated">크기가 조정되고 &lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt; 으로 이동 된 첫 번째 종류의 체비 쇼프 점에서 &lt;code&gt;func&lt;/code&gt; 를 보간하는 계열을 반환 합니다 . 생성 된 일련의 MINMAX 접근 경향 &lt;code&gt;func&lt;/code&gt; 함수 도메인에서 연속적 일 때.</target>
        </trans-unit>
        <trans-unit id="243274d38f80f8996cef60e40896c01773cf5d58" translate="yes" xml:space="preserve">
          <source>Returns the size of an array &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">배열 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 크기를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="889a78eaaf95eb1635de57e9289a6f27c0493f50" translate="yes" xml:space="preserve">
          <source>Returns the sorted unique elements of an array. There are three optional outputs in addition to the unique elements:</source>
          <target state="translated">정렬 된 배열의 고유 한 요소를 반환합니다. 고유 한 요소 외에 세 가지 선택적 출력이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1328cab3aac8e2dbdd547945290ba74e96f6f7e8" translate="yes" xml:space="preserve">
          <source>Returns the square identity matrix of given size.</source>
          <target state="translated">주어진 크기의 제곱 항등 행렬을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="861999a4d2797ac1402d6d7712689a58393d7d9b" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation of the array elements along given axis.</source>
          <target state="translated">주어진 축을 따라 배열 요소의 표준 편차를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cf3992f1b6b548da7f78877dbf11faaf6ecdfed3" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation, a measure of the spread of a distribution, of the array elements. The standard deviation is computed for the flattened array by default, otherwise over the specified axis.</source>
          <target state="translated">배열 요소의 분포 산포 척도 인 표준 편차를 반환합니다. 표준 편차는 기본적으로 평탄화 된 배열에 대해 계산되며, 그렇지 않으면 지정된 축에 대해 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="63aef6e94d92ea777f2481ab542787c8497e5843" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation, a measure of the spread of a distribution, of the non-NaN array elements. The standard deviation is computed for the flattened array by default, otherwise over the specified axis.</source>
          <target state="translated">NaN이 아닌 배열 요소의 분포 확산을 측정 한 표준 편차를 반환합니다. 표준 편차는 기본적으로 평탄화 된 배열에 대해 계산되며, 그렇지 않으면 지정된 축에 대해 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="a8a9d452b0a14e574110fec9c963939343b0a696" translate="yes" xml:space="preserve">
          <source>Returns the sum of the matrix elements, along the given axis.</source>
          <target state="translated">주어진 축을 따라 행렬 요소의 합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="56df12876e3ef3c2d6402f1711e1dd9e201b9d47" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Chebyshev series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt;.</source>
          <target state="translated">두 Chebyshev 계열 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; 의 합을 반환합니다 . 인수는 최저 차수 항에서 최고 차수까지의 계수 순서이며, 즉 [1,2,3]은 시리즈 &lt;code&gt;T_0 + 2*T_1 + 3*T_2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="9f8d90e8f5058c85c858181fdd853bb681b639b1" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Hermite series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Hermite 계열 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; 의 합을 반환합니다 . 인수는 최하위 항에서 최고 순으로 정렬 된 계수 시퀀스입니다. 즉, [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e343afc4ec403ddb4a07a175db27c8b934548217" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Laguerre series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Laguerre 계열 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; 의 합을 반환합니다 . 인수는 최하위 항에서 최고 순으로 정렬 된 계수 시퀀스입니다. 즉, [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="08ebba99b5e682337f429d0518b0a4b4683cc9ba" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Legendre series &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients ordered from lowest order term to highest, i.e., [1,2,3] represents the series &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt;.</source>
          <target state="translated">두 개의 Legendre 시리즈 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; 의 합을 반환합니다 . 인수는 최하위 항에서 최고 순으로 정렬 된 계수 시퀀스입니다. 즉, [1,2,3]은 &lt;code&gt;P_0 + 2*P_1 + 3*P_2&lt;/code&gt; 시리즈를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e4d3aa31dd6cc24bc5142adf29bfe7ab68a96cdb" translate="yes" xml:space="preserve">
          <source>Returns the sum of two polynomials &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt;. The arguments are sequences of coefficients from lowest order term to highest, i.e., [1,2,3] represents the polynomial &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt;.</source>
          <target state="translated">두 다항식 &lt;code&gt;c1&lt;/code&gt; + &lt;code&gt;c2&lt;/code&gt; 의 합을 반환합니다 . 인수는 최하위 항에서 최고에 이르는 계수의 시퀀스입니다. 즉, [1,2,3]은 다항식 &lt;code&gt;1 + 2*x + 3*x**2&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="555517df976270d26d220b5abd37ae3b29e81e02" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes consumed by the array.</source>
          <target state="translated">배열에서 소비 한 총 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08a3eedbbc4447295f4b3ab0817e2c8e44d52e17" translate="yes" xml:space="preserve">
          <source>Returns the total size (in number of elements) of the array.</source>
          <target state="translated">배열의 총 크기 (요소 수)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c0122f2e064e120539e47c2e76d79dd0769a6974" translate="yes" xml:space="preserve">
          <source>Returns the transpose of the matrix.</source>
          <target state="translated">행렬의 조옮김을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8103951f3b101ed891e0245214697d04e8671403" translate="yes" xml:space="preserve">
          <source>Returns the type that results from applying the NumPy type promotion rules to the arguments.</source>
          <target state="translated">NumPy 유형 승격 규칙을 인수에 적용한 결과 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8fdf7db87570a7f6c52908fc3ad9fbec4db3a6e1" translate="yes" xml:space="preserve">
          <source>Returns the type that results from applying the numpy type promotion rules to the arguments.</source>
          <target state="translated">numpy 유형 승격 규칙을 인수에 적용한 결과 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9fcb970733afa5b097af33d9de77b7cbac4cb640" translate="yes" xml:space="preserve">
          <source>Returns the underlying data, as a view of the masked array.</source>
          <target state="translated">마스크 된 배열의 뷰로 기본 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fed561673c346b9f16c4ec4d4ff08b3f280f244d" translate="yes" xml:space="preserve">
          <source>Returns the value of x with the sign bit copied from y. Works for any value, including Inf and NaN.</source>
          <target state="translated">y에서 복사 한 부호 비트와 함께 x 값을 반환합니다. Inf 및 NaN을 포함한 모든 가치에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="16099bcc078e16d07a4ae75c8b6b654b6332317e" translate="yes" xml:space="preserve">
          <source>Returns the variance of the array elements, a measure of the spread of a distribution. The variance is computed for the flattened array by default, otherwise over the specified axis.</source>
          <target state="translated">분포의 확산을 측정 한 배열 요소의 분산을 반환합니다. 분산은 기본적으로 전개 된 배열에 대해 계산되며, 그렇지 않으면 지정된 축에 대해 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="cb18ae95c5e35204046cc09e398511056be63bc4" translate="yes" xml:space="preserve">
          <source>Returns the variance of the array elements, along given axis.</source>
          <target state="translated">주어진 축을 따라 배열 요소의 분산을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c3e9acb4bd3a02b91f54dfa17e1b2f763becd3b7" translate="yes" xml:space="preserve">
          <source>Returns the variance of the matrix elements, along the given axis.</source>
          <target state="translated">주어진 축을 따라 행렬 요소의 분산을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9b884a60c7fe7f37e25842c08ff53b680b391dc" translate="yes" xml:space="preserve">
          <source>Returns the x, y values at &lt;code&gt;n&lt;/code&gt; linearly spaced points across the domain. Here y is the value of the polynomial at the points x. By default the domain is the same as that of the series instance. This method is intended mostly as a plotting aid.</source>
          <target state="translated">도메인 에서 &lt;code&gt;n&lt;/code&gt; 개의 선형 간격 포인트 에서 x, y 값을 반환 합니다. 여기서 y는 점 x에서 다항식의 값입니다. 기본적으로 도메인은 시리즈 인스턴스의 도메인과 동일합니다. 이 방법은 주로 플로팅 보조 도구로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="50c294f4eec79060386173bdf27e8490ba02b492" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all cased characters in the string are lowercase and there is at least one cased character, false otherwise.</source>
          <target state="translated">문자열의 모든 대소 문자가 문자이고 하나 이상의 대소 문자가있는 경우 각 요소에 대해 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="753528b5ab5f175f46668650b8bacacaa16504ef" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all cased characters in the string are uppercase and there is at least one character, false otherwise.</source>
          <target state="translated">문자열의 모든 대소 문자가 대문자이고 하나 이상의 문자가 있으면 각 요소에 대해 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4bfbeb6b6c0b416ee8e5cf4faf5b53f0aadf96a8" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all characters in the string are alphabetic and there is at least one character, false otherwise.</source>
          <target state="translated">문자열의 모든 문자가 알파벳이고 하나 이상의 문자가 있으면 각 요소에 대해 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cf7fa053bb092cbadbd2af9aae8682af88372ecd" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all characters in the string are alphanumeric and there is at least one character, false otherwise.</source>
          <target state="translated">문자열의 모든 문자가 영숫자이고 하나 이상의 문자가 있으면 각 요소에 대해 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9557a4d0e93669375c528934eeb8740504713415" translate="yes" xml:space="preserve">
          <source>Returns true for each element if all characters in the string are digits and there is at least one character, false otherwise.</source>
          <target state="translated">문자열의 모든 문자가 숫자이고 하나 이상의 문자가 있으면 각 요소에 대해 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="66cb6901402641740a602c53764c017cb120ceda" translate="yes" xml:space="preserve">
          <source>Returns true for each element if the element is a titlecased string and there is at least one character, false otherwise.</source>
          <target state="translated">요소가 제목이 포함 된 문자열이고 하나 이상의 문자가 있으면 각 요소에 대해 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e9518f21664e4afe6128d00ac71f7d1491d8fae5" translate="yes" xml:space="preserve">
          <source>Returns true for each element if there are only whitespace characters in the string and there is at least one character, false otherwise.</source>
          <target state="translated">문자열에 공백 문자 만 있고 하나 이상의 문자가 있으면 각 요소에 대해 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc23eaf8decd7d27362fe8a53e892bd8e30c837d" translate="yes" xml:space="preserve">
          <source>Returns two objects, a 1-D array containing the eigenvalues of &lt;code&gt;a&lt;/code&gt;, and a 2-D square array or matrix (depending on the input type) of the corresponding eigenvectors (in columns).</source>
          <target state="translated">반환 두 개체의 고유 함유하는 1-D 어레이 &lt;code&gt;a&lt;/code&gt; 하고 (열)에 대응하는 고유 벡터들의 2-D 어레이 또는 정사각형 행렬 (입력 유형에 따라).</target>
        </trans-unit>
        <trans-unit id="8df936a304bc9cb4981c0751ad709ae03295d24c" translate="yes" xml:space="preserve">
          <source>Returns x1 * 2**x2, element-wise.</source>
          <target state="translated">x1 * 2 ** x2를 요소 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="0de06e6a3f0a0e4f05c1785f0626100e3a7e7650" translate="yes" xml:space="preserve">
          <source>Reusing a C library from another package</source>
          <target state="translated">다른 패키지에서 C 라이브러리 재사용</target>
        </trans-unit>
        <trans-unit id="23561a6432b472e5926c67bf018fd70d987f97d0" translate="yes" xml:space="preserve">
          <source>Reusing npymath</source>
          <target state="translated">npymath 재사용</target>
        </trans-unit>
        <trans-unit id="6af530c175f99c7b69fc2fd9cfe2f192506a1f94" translate="yes" xml:space="preserve">
          <source>Reverse or permute the axes of an array; returns the modified array.</source>
          <target state="translated">배열의 축을 뒤집거나 바꾸십시오. 수정 된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="231aa4b8807deb9df59f688eef9ddc9a775ad8bb" translate="yes" xml:space="preserve">
          <source>Reverse the order of elements in an array along the given axis.</source>
          <target state="translated">주어진 축을 따라 배열의 요소 순서를 반대로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="8d2b78e53e90814f69a7d711d93f1d0ac0ff8bbf" translate="yes" xml:space="preserve">
          <source>Reversing along axis 0 (the row axis) yields</source>
          <target state="translated">축 0 (행 축)을 따라 반전하면</target>
        </trans-unit>
        <trans-unit id="05845515ff13c14616adf9a6a234f41d7f1cb563" translate="yes" xml:space="preserve">
          <source>Review process:</source>
          <target state="translated">검토 과정 :</target>
        </trans-unit>
        <trans-unit id="9a2c8a9684a510457d0b13d88ff56372c650e6ee" translate="yes" xml:space="preserve">
          <source>Reviewer Checklist</source>
          <target state="translated">검토 자 체크리스트</target>
        </trans-unit>
        <trans-unit id="fcf1f2d05ab28c4583dc42c5672beb7010342235" translate="yes" xml:space="preserve">
          <source>Reviewer Guidelines</source>
          <target state="translated">검토 자 지침</target>
        </trans-unit>
        <trans-unit id="44c08f9ef9427cfe7adf2cb2e727c85659041264" translate="yes" xml:space="preserve">
          <source>Reviewers (the other developers and interested community members) will write inline and/or general comments on your Pull Request (PR) to help you improve its implementation, documentation and style. Every single developer working on the project has their code reviewed, and we&amp;rsquo;ve come to see it as friendly conversation from which we all learn and the overall code quality benefits. Therefore, please don&amp;rsquo;t let the review discourage you from contributing: its only aim is to improve the quality of project, not to criticize (we are, after all, very grateful for the time you&amp;rsquo;re donating!).</source>
          <target state="translated">검토 자 (다른 개발자 및 관심있는 커뮤니티 회원)는 귀하의 Pull Request (PR)에 대한 인라인 및 / 또는 일반 의견을 작성하여 구현, 문서 및 스타일을 개선하는 데 도움을 줄 것입니다. 프로젝트에서 작업하는 모든 개발자는 자신의 코드를 검토하고, 우리 모두가 배우는 친근한 대화와 전반적인 코드 품질 이점을 알게되었습니다. 따라서 리뷰가 귀하의 기여를 낙담하게하지 마십시오. 유일한 목적은 프로젝트의 품질을 향상시키는 것이지 비판하는 것이 아닙니다 (결국 귀하가 기부하는 시간에 대해 매우 감사합니다!).</target>
        </trans-unit>
        <trans-unit id="c2a014ce96177152b88c54c05c7877b3c332f568" translate="yes" xml:space="preserve">
          <source>Reviewers (the other developers and interested community members) will write inline and/or general comments on your Pull Request (PR) to help you improve its implementation, documentation and style. Every single developer working on the project has their code reviewed, and we&amp;rsquo;ve come to see it as friendly conversation from which we all learn and the overall code quality benefits. Therefore, please don&amp;rsquo;t let the review discourage you from contributing: its only aim is to improve the quality of project, not to criticize (we are, after all, very grateful for the time you&amp;rsquo;re donating!). See our &lt;a href=&quot;reviewer_guidelines#reviewer-guidelines&quot;&gt;Reviewer Guidelines&lt;/a&gt; for more information.</source>
          <target state="translated">검토 자 (다른 개발자 및 관심있는 커뮤니티 회원)는 귀하의 Pull Request (PR)에 대한 인라인 및 / 또는 일반 의견을 작성하여 구현, 문서 및 스타일을 개선하는 데 도움을 줄 것입니다. 프로젝트에서 작업하는 모든 개발자는 자신의 코드를 검토하고, 우리 모두가 배우는 친근한 대화와 전반적인 코드 품질 이점을 알게되었습니다. 따라서 리뷰가 귀하의 기여를 낙담하게하지 마십시오. 유일한 목적은 프로젝트의 품질을 향상시키는 것이지 비판하는 것이 아닙니다 (결국 귀하가 기부하는 시간에 대해 매우 감사합니다!). 자세한 내용은 &lt;a href=&quot;reviewer_guidelines#reviewer-guidelines&quot;&gt;검토 자 지침&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b1944a28683cb8c67a1213a25a8b7ed2746e566c" translate="yes" xml:space="preserve">
          <source>Reviewing open pull requests (PRs) helps move the project forward. We encourage people outside the project to get involved as well; it&amp;rsquo;s a great way to get familiar with the codebase.</source>
          <target state="translated">공개 풀 요청 (PR)을 검토하면 프로젝트를 진행하는 데 도움이됩니다. 우리는 프로젝트 외부의 사람들도 참여하도록 권장합니다. 코드베이스에 익숙해지는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="12f0b8976280b3a478cdfcfdf420378ad0d6ee0d" translate="yes" xml:space="preserve">
          <source>Reviews can come from outside the NumPy team &amp;ndash; we welcome contributions from domain experts (for instance, &lt;code&gt;linalg&lt;/code&gt; or &lt;code&gt;fft&lt;/code&gt;) or maintainers of other projects. You do not need to be a NumPy maintainer (a NumPy team member with permission to merge a PR) to review.</source>
          <target state="translated">리뷰는 NumPy 팀 외부에서 올 수 있습니다. 도메인 전문가 (예 : &lt;code&gt;linalg&lt;/code&gt; 또는 &lt;code&gt;fft&lt;/code&gt; ) 또는 다른 프로젝트의 관리자의 기여를 환영 합니다. 검토를 위해 NumPy 관리자 (PR 병합 권한이있는 NumPy 팀 구성원) 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="56e5177db6b61a0abc1a51eb3847bdae69e9cec0" translate="yes" xml:space="preserve">
          <source>Rewrite the commit message for &lt;code&gt;13d7934&lt;/code&gt; to something more sensible.</source>
          <target state="translated">&lt;code&gt;13d7934&lt;/code&gt; 에 대한 커밋 메시지를 더 합리적인 것으로 다시 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a9995163dd5d79353d40fc664acd71a2d21ad21" translate="yes" xml:space="preserve">
          <source>Rewriting commit history</source>
          <target state="translated">커밋 기록 다시 쓰기</target>
        </trans-unit>
        <trans-unit id="e98e658c19c9f301dd9e3485679871cb4ee5e57f" translate="yes" xml:space="preserve">
          <source>Right-hand tensor, which can be of any shape.</source>
          <target state="translated">오른쪽 텐서로 어떤 모양이든 가능합니다.</target>
        </trans-unit>
        <trans-unit id="ed6a870cf722e4c806fc7839a0d6357be9862122" translate="yes" xml:space="preserve">
          <source>Right-most separator to split each element in array.</source>
          <target state="translated">배열에서 각 요소를 분할하는 가장 오른쪽 구분 기호입니다.</target>
        </trans-unit>
        <trans-unit id="7220212e40671919000e3bf88fe1b3c9fdb58d86" translate="yes" xml:space="preserve">
          <source>Robust (resilient to outliers) estimator that takes into account data variability and data size.</source>
          <target state="translated">데이터 변동성과 데이터 크기를 고려한 강력한 (이상치에 대한 탄력성) 추정기.</target>
        </trans-unit>
        <trans-unit id="632fe7c40d78f157a979c1254b96d791cf9757c5" translate="yes" xml:space="preserve">
          <source>Roll array elements along a given axis.</source>
          <target state="translated">주어진 축을 따라 배열 요소를 굴립니다.</target>
        </trans-unit>
        <trans-unit id="f3f0226b8f652356fa69f1458fcf0dac541d2f26" translate="yes" xml:space="preserve">
          <source>Roll the elements of an array by a number of positions along a given axis.</source>
          <target state="translated">주어진 축을 따라 여러 위치로 배열의 요소를 굴립니다.</target>
        </trans-unit>
        <trans-unit id="e111e906c0921c62bf2e9cb93a9ad178fda871c0" translate="yes" xml:space="preserve">
          <source>Roll the specified axis backwards, until it lies in a given position.</source>
          <target state="translated">지정된 위치에 놓일 때까지 지정된 축을 뒤로 굴립니다.</target>
        </trans-unit>
        <trans-unit id="d98b0ca605945d95c50600bf91067a279fbd44fc" translate="yes" xml:space="preserve">
          <source>Roll two six sided dice 1000 times and sum the results:</source>
          <target state="translated">6면 주사위 2 개를 1000 번 굴려 결과를 합산합니다.</target>
        </trans-unit>
        <trans-unit id="5fcb398cc910717cb25001dcf54232455707365a" translate="yes" xml:space="preserve">
          <source>Roots:</source>
          <target state="translated">Roots:</target>
        </trans-unit>
        <trans-unit id="bb153005d9e21d383a2c6e3be0c44b1fe3a63a2d" translate="yes" xml:space="preserve">
          <source>Rotate an array by 90 degrees in the plane specified by axes.</source>
          <target state="translated">축으로 지정된 평면에서 배열을 90도 회전합니다.</target>
        </trans-unit>
        <trans-unit id="85a259a41b2e5b39d4b06f8e1a5fe18db3ab0c4b" translate="yes" xml:space="preserve">
          <source>Rotate array counterclockwise.</source>
          <target state="translated">배열을 시계 반대 방향으로 회전합니다.</target>
        </trans-unit>
        <trans-unit id="b7ab8ec584238c82a5212e48cb3759a55758f2a7" translate="yes" xml:space="preserve">
          <source>Rotation direction is from the first towards the second axis.</source>
          <target state="translated">회전 방향은 첫 번째 축에서 두 번째 축을 향합니다.</target>
        </trans-unit>
        <trans-unit id="88de8f5e18fe62876391bb0651faeb2b2013dd11" translate="yes" xml:space="preserve">
          <source>Rough equivalents</source>
          <target state="translated">대략적인 등가물</target>
        </trans-unit>
        <trans-unit id="6ef6710278af843c63eb4804971e9e7223129ff9" translate="yes" xml:space="preserve">
          <source>Round a number to the nearest integer toward infinity.</source>
          <target state="translated">무한대에 가장 가까운 정수로 숫자를 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="c3e06589436e268833d1881f2f6462dd9a4c08f4" translate="yes" xml:space="preserve">
          <source>Round a number to the nearest integer toward minus infinity.</source>
          <target state="translated">빼기 무한대로 가장 가까운 정수로 숫자를 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="8bbd6fdca0872074d7ea10498d4f4539891707a4" translate="yes" xml:space="preserve">
          <source>Round an array of floats element-wise to nearest integer towards zero. The rounded values are returned as floats.</source>
          <target state="translated">부동 소수 배열을 요소별로 0을 향한 가장 가까운 정수로 반올림합니다. 반올림 된 값은 float로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="00de80754bba4d0e8ba276a85eb44caf0893d44b" translate="yes" xml:space="preserve">
          <source>Round an array to the given number of decimals.</source>
          <target state="translated">주어진 소수 자릿수로 배열을 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="0073184d9bc88d5eb76d1886770536810e5e88c8" translate="yes" xml:space="preserve">
          <source>Round elements of the array to the nearest integer.</source>
          <target state="translated">배열의 요소를 가장 가까운 정수로 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="b1202882c35083babeaf5c44663b51b79c7528ec" translate="yes" xml:space="preserve">
          <source>Round to given number of decimals</source>
          <target state="translated">주어진 소수 자릿수로 반올림</target>
        </trans-unit>
        <trans-unit id="0435f2a63e7a6f18b43a28bac8f5340822cb081f" translate="yes" xml:space="preserve">
          <source>Round to nearest integer towards zero.</source>
          <target state="translated">0쪽으로 가장 가까운 정수로 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="905cc3792492961c10eb158788a7c9f956d57aa5" translate="yes" xml:space="preserve">
          <source>Rounding</source>
          <target state="translated">Rounding</target>
        </trans-unit>
        <trans-unit id="d42a838433b7238b0c5468d86dbc71bcd8216faf" translate="yes" xml:space="preserve">
          <source>Routine listings are encouraged, especially for large modules, for which it is hard to get a good overview of all functionality provided by looking at the source file(s) or the &lt;code&gt;__all__&lt;/code&gt; dict.</source>
          <target state="translated">특히 소스 파일이나 &lt;code&gt;__all__&lt;/code&gt; dict 를 살펴봄으로써 제공되는 모든 기능에 대한 좋은 개요를 얻기 어려운 대형 모듈의 경우 일상적인 목록이 권장됩니다 .</target>
        </trans-unit>
        <trans-unit id="a445e5ad1fb1907481f4ddbc262ce7d8458bf4fe" translate="yes" xml:space="preserve">
          <source>Routines</source>
          <target state="translated">Routines</target>
        </trans-unit>
        <trans-unit id="f5a0442e12c879ca82d9a4ff475b0a52a67d183e" translate="yes" xml:space="preserve">
          <source>Row-major (C-style) or column-major (Fortran-style) order.</source>
          <target state="translated">행 메이저 (C 스타일) 또는 열 메이저 (포트란 스타일) 순서.</target>
        </trans-unit>
        <trans-unit id="dd584b0a0a8ac0a882725b96e0c08de6a716af77" translate="yes" xml:space="preserve">
          <source>Row-major order is also known as the C order, as the C programming language uses it. New NumPy arrays are by default in row-major order.</source>
          <target state="translated">행 주요 순서는 C 프로그래밍 언어에서 사용하므로 C 순서라고도합니다. 새로운 NumPy 배열은 기본적으로 행 우선 순서입니다.</target>
        </trans-unit>
        <trans-unit id="5b10de0c605d74957808597fe0048296ee8e401f" translate="yes" xml:space="preserve">
          <source>Rules for installation paths:</source>
          <target state="translated">설치 경로에 대한 규칙 :</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="482c3d9df82671ce896fb7bde9617c5b2fb25b36" translate="yes" xml:space="preserve">
          <source>Run a test module.</source>
          <target state="translated">테스트 모듈을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a722234cd0b3244f81dfee69fb25192819893e0d" translate="yes" xml:space="preserve">
          <source>Run benchmarks for module using nose.</source>
          <target state="translated">nose를 사용하여 모듈에 대한 벤치 마크를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="23cad5152fa9dd89c0311e56531d8eb651e932a8" translate="yes" xml:space="preserve">
          <source>Run doctests found in the given file.</source>
          <target state="translated">주어진 파일에서 찾은 doctest를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="92ffa8360edea62a8d2eb5d776625e93bb4952d5" translate="yes" xml:space="preserve">
          <source>Run quietly.</source>
          <target state="translated">조용히 달려라.</target>
        </trans-unit>
        <trans-unit id="e2f2755270e260e0a70ee7806aac91bcec7c313d" translate="yes" xml:space="preserve">
          <source>Run tests for module using nose.</source>
          <target state="translated">코를 사용하여 모듈에 대한 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="b37fc50cfbc9d483e70aabf60864a7a850765478" translate="yes" xml:space="preserve">
          <source>Run tests using your favourite IDE such as &lt;a href=&quot;https://code.visualstudio.com/docs/python/testing#_enable-a-test-framework&quot;&gt;vscode&lt;/a&gt; or &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/testing-your-first-python-application.html&quot;&gt;pycharm&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://code.visualstudio.com/docs/python/testing#_enable-a-test-framework&quot;&gt;vscode&lt;/a&gt; 또는 &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/testing-your-first-python-application.html&quot;&gt;pycharm&lt;/a&gt; 과 같이 선호하는 IDE를 사용하여 테스트 실행</target>
        </trans-unit>
        <trans-unit id="ffc431fc4dffd990bd1413637f46fc51335f2c8e" translate="yes" xml:space="preserve">
          <source>Run with extra verbosity.</source>
          <target state="translated">더 자세하게 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="73989d9c59264da08a15dba21c7d58237a91f08f" translate="yes" xml:space="preserve">
          <source>Running</source>
          <target state="translated">Running</target>
        </trans-unit>
        <trans-unit id="9fccbe4ad7980d64490ede8305d6b72049acf328" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;np.shares_memory(x1, x2)&lt;/code&gt; without &lt;code&gt;max_work&lt;/code&gt; set takes around 1 minute for this case. It is possible to find problems that take still significantly longer.</source>
          <target state="translated">이 경우 &lt;code&gt;max_work&lt;/code&gt; 를 설정 하지 않고 &lt;code&gt;np.shares_memory(x1, x2)&lt;/code&gt; 를 실행하는 데 약 1 분이 걸립니다. 훨씬 더 오래 걸리는 문제를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1544c03a8ffbebbc0c6a506abc957a597a1c13ce" translate="yes" xml:space="preserve">
          <source>Running NumPy&amp;rsquo;s test suite locally requires some additional packages, such as &lt;code&gt;pytest&lt;/code&gt; and &lt;code&gt;hypothesis&lt;/code&gt;. The additional testing dependencies are listed in &lt;code&gt;test_requirements.txt&lt;/code&gt; in the top-level directory, and can conveniently be installed with:</source>
          <target state="translated">NumPy의 테스트 스위트를 로컬에서 실행하려면 &lt;code&gt;pytest&lt;/code&gt; 및 &lt;code&gt;hypothesis&lt;/code&gt; 와 같은 추가 패키지가 필요합니다 . 추가 테스트 종속성은 최상위 디렉토리의 &lt;code&gt;test_requirements.txt&lt;/code&gt; 에 나열되며 다음 을 사용하여 편리하게 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6528715436e5d1c6eabe2ebd257332528dba3b72" translate="yes" xml:space="preserve">
          <source>Running individual test files can be useful; it&amp;rsquo;s much faster than running the whole test suite or that of a whole module (example: &lt;code&gt;np.random.test()&lt;/code&gt;). This can be done with:</source>
          <target state="translated">개별 테스트 파일을 실행하는 것이 유용 할 수 있습니다. 전체 테스트 스위트 또는 전체 모듈 (예 : &lt;code&gt;np.random.test()&lt;/code&gt; )을 실행하는 것보다 훨씬 빠릅니다 . 이것은 다음으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="bff8195100b4b22ac5fb5cdcd26353a9ec88605b" translate="yes" xml:space="preserve">
          <source>Running tests from inside Python</source>
          <target state="translated">Python 내부에서 테스트 실행</target>
        </trans-unit>
        <trans-unit id="bfaab35a824a22ed7c0f74a26346e946e0bea461" translate="yes" xml:space="preserve">
          <source>Running tests from the command line</source>
          <target state="translated">명령 줄에서 테스트 실행</target>
        </trans-unit>
        <trans-unit id="84bb290eb9bcc8f74f1a78f6463a544c117ad53f" translate="yes" xml:space="preserve">
          <source>Running tests with &lt;a href=&quot;https://tox.readthedocs.io/&quot;&gt;tox&lt;/a&gt; is also supported. For example, to build NumPy and run the test suite with Python 3.7, use:</source>
          <target state="translated">&lt;a href=&quot;https://tox.readthedocs.io/&quot;&gt;독극물&lt;/a&gt; 로 테스트를 실행하는 것도 지원됩니다. 예를 들어 NumPy를 빌드하고 Python 3.7로 테스트 스위트를 실행하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="696e4c661450d7937db29b17bc26dfb494678b53" translate="yes" xml:space="preserve">
          <source>Running this from the Python interpreter produces the same answers as our native Python/NumPy code did.</source>
          <target state="translated">Python 인터프리터에서 이것을 실행하면 기본 Python / NumPy 코드와 동일한 답변이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ccd516c7fcfbde1fe3af5b5d27edfb36eaead71f" translate="yes" xml:space="preserve">
          <source>Runtime warnings when comparing NaN numbers</source>
          <target state="translated">NaN 번호를 비교할 때 런타임 경고</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="2a9cb5b040f4dae3fe4cb250a7e3cfe66da6fdda" translate="yes" xml:space="preserve">
          <source>SFC64</source>
          <target state="translated">SFC64</target>
        </trans-unit>
        <trans-unit id="ae544b7a9d33ca4e36a0346efcf1ee33e3a251e4" translate="yes" xml:space="preserve">
          <source>SFC64 (class in numpy.random)</source>
          <target state="translated">SFC64 (numpy.random의 클래스)</target>
        </trans-unit>
        <trans-unit id="c387eaab9d4aa15a891083867d719e44ab39eeb7" translate="yes" xml:space="preserve">
          <source>SFC64 - A fast generator based on random invertible mappings. Usually the fastest generator of the four. See the &lt;a href=&quot;http://pracrand.sourceforge.net/RNG_engines.txt&quot;&gt;SFC author&amp;rsquo;s page&lt;/a&gt; for (a little) more detail.</source>
          <target state="translated">SFC64-임의의 비가 역적 매핑을 기반으로하는 빠른 생성기. 일반적으로 4 개 중 가장 빠른 발전기입니다. 자세한 내용은 &lt;a href=&quot;http://pracrand.sourceforge.net/RNG_engines.txt&quot;&gt;SFC 작성자 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c0159189813715cb594d6925030c6b1c554da97" translate="yes" xml:space="preserve">
          <source>SFC64 Small Fast Chaotic PRNG</source>
          <target state="translated">SFC64 소형 고속 혼돈 PRNG</target>
        </trans-unit>
        <trans-unit id="93db16809e7e08fc5b307c5dac1d071ac2ffe024" translate="yes" xml:space="preserve">
          <source>SFC64.cffi</source>
          <target state="translated">SFC64.cffi</target>
        </trans-unit>
        <trans-unit id="8c70f8e77e814d093abf0c432b09e04412d07414" translate="yes" xml:space="preserve">
          <source>SFC64.ctypes</source>
          <target state="translated">SFC64.ctypes</target>
        </trans-unit>
        <trans-unit id="c7c29743e92aa8405c74e1aec744ed96cb16b9a6" translate="yes" xml:space="preserve">
          <source>SFC64.state</source>
          <target state="translated">SFC64.state</target>
        </trans-unit>
        <trans-unit id="924c62807d3ec8e9314d143171d21220828a94aa" translate="yes" xml:space="preserve">
          <source>SIMD Optimizations</source>
          <target state="translated">SIMD 최적화</target>
        </trans-unit>
        <trans-unit id="53b6ef282f211fcee8a9cc2897135f48a3c3b8e9" translate="yes" xml:space="preserve">
          <source>SIP</source>
          <target state="translated">SIP</target>
        </trans-unit>
        <trans-unit id="cde420170ff42fbe1a561b91e2014d8eeea6ce03" translate="yes" xml:space="preserve">
          <source>SIP (used mainly in PyQT)</source>
          <target state="translated">SIP (주로 PyQT에서 사용됨)</target>
        </trans-unit>
        <trans-unit id="9fc3a42100f1ceda422a2ce1611b1ec04ca80bc0" translate="yes" xml:space="preserve">
          <source>SIP is another tool for wrapping C/C++ libraries that is Python specific and appears to have very good support for C++. Riverbank Computing developed SIP in order to create Python bindings to the QT library. An interface file must be written to generate the binding, but the interface file looks a lot like a C/C++ header file. While SIP is not a full C++ parser, it understands quite a bit of C++ syntax as well as its own special directives that allow modification of how the Python binding is accomplished. It also allows the user to define mappings between Python types and C/C++ structures and classes.</source>
          <target state="translated">SIP는 Python에 특화된 C / C ++ 라이브러리를 래핑하는 또 다른 도구이며 C ++를 매우 잘 지원하는 것으로 보입니다. Riverbank Computing은 QT 라이브러리에 대한 Python 바인딩을 만들기 위해 SIP를 개발했습니다. 바인딩을 생성하려면 인터페이스 파일을 작성해야하지만 인터페이스 파일은 C / C ++ 헤더 파일과 매우 유사합니다. SIP는 완전한 C ++ 구문 분석기는 아니지만 Python 바인딩이 수행되는 방식을 수정할 수있는 자체 특수 지시문과 함께 상당한 C ++ 구문을 이해합니다. 또한 사용자가 Python 유형과 C / C ++ 구조 및 클래스 간의 매핑을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a081af39b5090da8572fb3b42d46a96a05c3a63" translate="yes" xml:space="preserve">
          <source>SVD is usually described for the factorization of a 2D matrix</source>
          <target state="translated">SVD는 일반적으로 2D 행렬의 인수 분해에 대해 설명됩니다</target>
        </trans-unit>
        <trans-unit id="036957d2a9081c97173c18935e3371750d2077c9" translate="yes" xml:space="preserve">
          <source>SWIG</source>
          <target state="translated">SWIG</target>
        </trans-unit>
        <trans-unit id="fd33a1a85b5ff3e23c09f90879fa657c3307f1c3" translate="yes" xml:space="preserve">
          <source>SWIG (automatic wrapper generator)</source>
          <target state="translated">SWIG (자동 래퍼 생성기)</target>
        </trans-unit>
        <trans-unit id="813b0236483a0b9cf4d4001c3c4c34b1cb682035" translate="yes" xml:space="preserve">
          <source>SafeEval</source>
          <target state="translated">SafeEval</target>
        </trans-unit>
        <trans-unit id="5284a44de20af4d8fda72c52069fea5f8f3e96f7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c.NPY_ITEM_REFCOUNT&quot;&gt;&lt;code&gt;NPY_ITEM_REFCOUNT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITEM_REFCOUNT&quot;&gt; &lt;code&gt;NPY_ITEM_REFCOUNT&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="386093403720892978afbe80778e5bada06f7adc" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#term-column-major&quot;&gt;column-major&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-column-major&quot;&gt;column-major&lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="dcceefc8ed9ad321ab5aade3cb152019ccd856ea" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#term-row-major&quot;&gt;row-major&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-row-major&quot;&gt;row-major&lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b0821f9ed8f87afd42b3c108e416912412bf96c6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt;&lt;code&gt;ndarray.mean&lt;/code&gt;&lt;/a&gt; except that, where that returns an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, this returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">동일 &lt;a href=&quot;numpy.ndarray.mean#numpy.ndarray.mean&quot;&gt; &lt;code&gt;ndarray.mean&lt;/code&gt; &lt;/a&gt; , 것을 제외하고 어디에 다시 표시 &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; 이 리턴한다 &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="fe606b4476f6db839be0cc036e84badd1677b28e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt;&lt;code&gt;ndarray.prod&lt;/code&gt;&lt;/a&gt;, except, where that returns an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, this returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object instead.</source>
          <target state="translated">동일 &lt;a href=&quot;numpy.ndarray.prod#numpy.ndarray.prod&quot;&gt; &lt;code&gt;ndarray.prod&lt;/code&gt; &lt;/a&gt; 제외하고, 어디에 다시 표시 &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; 이 리턴한다 &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; 객체 대신.</target>
        </trans-unit>
        <trans-unit id="0d5cffd944b6e5b6c1e94c80f05651121d801fb2" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt;&lt;code&gt;ndarray.ptp&lt;/code&gt;&lt;/a&gt;, except, where that would return an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; object, this returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; 객체를 반환하는 곳을 제외하고 &lt;a href=&quot;numpy.ndarray.ptp#numpy.ndarray.ptp&quot;&gt; &lt;code&gt;ndarray.ptp&lt;/code&gt; &lt;/a&gt; 와 동일하지만 &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0643e4a16350ea173b9b0a8912b24ff1de619acc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;eps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eps&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="cdf57153dc4245d12e46ba27a1830237c75c5b31" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;self.transpose()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self.transpose()&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="986319e53de4261fe58310c58f31ac3908578e97" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;xmax&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;xmax&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23ff064d357d2d9014f1d60ce928cc8ed1a10b62" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;xmin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;xmin&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="13f13898983ea35ed65c623a2897bcfed3c118b7" translate="yes" xml:space="preserve">
          <source>Same as PyArray_MatrixProduct, but store the result in &lt;em&gt;out&lt;/em&gt;. The output array must have the correct shape, type, and be C-contiguous, or an exception is raised.</source>
          <target state="translated">PyArray_MatrixProduct와 동일하지만 결과를 &lt;em&gt;out에&lt;/em&gt; 저장하십시오 . 출력 배열의 모양, 유형이 정확하고 C 연속이어야합니다. 그렇지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bffa078d23aed2a817ce48765fc03d00756a302d" translate="yes" xml:space="preserve">
          <source>Same kind casting in concatenate with &lt;code&gt;axis=None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;axis=None&lt;/code&gt; 으로 연결하는 동일한 종류의 캐스팅</target>
        </trans-unit>
        <trans-unit id="bc9aa2f95bc6e9d0f3a61f32a8c597c512d3672d" translate="yes" xml:space="preserve">
          <source>Same thing without the added noise</source>
          <target state="translated">추가 된 소음이없는 동일한 것</target>
        </trans-unit>
        <trans-unit id="859449a4d3d6686c281e85a475b499646f970b6e" translate="yes" xml:space="preserve">
          <source>Sample spacing (inverse of the sampling rate). Defaults to 1.</source>
          <target state="translated">샘플 간격 (샘플링 속도의 역수). 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="95f068b324924127e052655006617bf7cd2be412" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Gamma distribution with specified parameters, &lt;a href=&quot;../../generated/numpy.shape#numpy.shape&quot;&gt;&lt;code&gt;shape&lt;/code&gt;&lt;/a&gt; (sometimes designated &amp;ldquo;k&amp;rdquo;) and &lt;code&gt;scale&lt;/code&gt; (sometimes designated &amp;ldquo;theta&amp;rdquo;), where both parameters are &amp;gt; 0.</source>
          <target state="translated">샘플은 지정된 매개 변수, &lt;a href=&quot;../../generated/numpy.shape#numpy.shape&quot;&gt; &lt;code&gt;shape&lt;/code&gt; &lt;/a&gt; (때로는 &quot;k&quot;로 지정됨) 및 &lt;code&gt;scale&lt;/code&gt; (때로는 &quot;세타&quot;로 지정됨 ) 를 사용하여 감마 분포에서 추출됩니다. 여기서 두 매개 변수는 모두&amp;gt; 0입니다.</target>
        </trans-unit>
        <trans-unit id="e7d485289c6f6dc71bf065ec3cda03098a214efc" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Gamma distribution with specified parameters, &lt;code&gt;shape&lt;/code&gt; (sometimes designated &amp;ldquo;k&amp;rdquo;) and &lt;code&gt;scale&lt;/code&gt; (sometimes designated &amp;ldquo;theta&amp;rdquo;), where both parameters are &amp;gt; 0.</source>
          <target state="translated">샘플은 지정된 매개 변수, &lt;code&gt;shape&lt;/code&gt; ( &quot;k&quot;로 지정) 및 &lt;code&gt;scale&lt;/code&gt; ( &quot;theta&quot;로 지정됨 ) 을 갖는 감마 분포에서 추출되며 , 두 매개 변수 모두&amp;gt; 0입니다.</target>
        </trans-unit>
        <trans-unit id="292bf0606e0fce9a550ce09f811744a2d52ff4b2" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Gamma distribution with specified parameters, shape (sometimes designated &amp;ldquo;k&amp;rdquo;) and scale=1.</source>
          <target state="translated">지정된 모수, 모양 (때로는 &quot;k&quot;로 지정됨) 및 scale = 1을 사용하여 감마 분포에서 표본을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="6df7e41bdf9569985c1aa43e6794e3eeb780c017" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a Zipf distribution with specified parameter &lt;code&gt;a&lt;/code&gt; &amp;gt; 1.</source>
          <target state="translated">지정된 모수가 &lt;code&gt;a&lt;/code&gt; &amp;gt; 1 인 Zipf 분포에서 표본을 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="5250057b4b5fd8c546513ca9ab55476b863ba678" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a binomial distribution with specified parameters, n trials and p probability of success where n an integer &amp;gt;= 0 and p is in the interval [0,1]. (n may be input as a float, but it is truncated to an integer in use)</source>
          <target state="translated">표본은 지정된 모수, 시행 횟수 및 p 성공 확률을 갖는 이항 분포에서 추출되며, 여기서 n은 정수&amp;gt; = 0이고 p는 [0,1] 간격입니다. (n은 float로 입력 될 수 있지만 사용중인 정수로 잘립니다)</target>
        </trans-unit>
        <trans-unit id="8dbb69b6e5ec7d08f0e2435ee1314b66a818968b" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a hypergeometric distribution with specified parameters, &lt;code&gt;ngood&lt;/code&gt; (ways to make a good selection), &lt;code&gt;nbad&lt;/code&gt; (ways to make a bad selection), and &lt;code&gt;nsample&lt;/code&gt; (number of items sampled, which is less than or equal to the sum &lt;code&gt;ngood + nbad&lt;/code&gt;).</source>
          <target state="translated">지정된 모수, &lt;code&gt;ngood&lt;/code&gt; (좋은 선택을하는 방법), &lt;code&gt;nbad&lt;/code&gt; (나쁜 선택을하는 방법) 및 &lt;code&gt;nsample&lt;/code&gt; (샘플링 된 항목 수, 합계 &lt;code&gt;ngood + nbad&lt;/code&gt; 이하인 )을 사용 하여 초기 하 분포에서 표본을 추출합니다. nbad ).</target>
        </trans-unit>
        <trans-unit id="ae4da6fd6cd239d95203286c66f246b73ebba651" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a log series distribution with specified shape parameter, 0 &amp;lt; &lt;code&gt;p&lt;/code&gt; &amp;lt; 1.</source>
          <target state="translated">지정된 모양 모수, 0 &amp;lt; &lt;code&gt;p&lt;/code&gt; &amp;lt;1 을 사용하여 로그 시리즈 분포에서 표본을 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="2642093206fd7f788ffdf56363454a5315a935c3" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a logistic distribution with specified parameters, loc (location or mean, also median), and scale (&amp;gt;0).</source>
          <target state="translated">지정된 모수, 위치 (위치 또는 평균, 중앙값) 및 스케일 (&amp;gt; 0)을 사용하여 로지스틱 분포에서 표본을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="52cc2ad4beaa6917bf1214b3d49bd1103ff9199c" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a negative binomial distribution with specified parameters, &lt;code&gt;n&lt;/code&gt; successes and &lt;code&gt;p&lt;/code&gt; probability of success where &lt;code&gt;n&lt;/code&gt; is &amp;gt; 0 and &lt;code&gt;p&lt;/code&gt; is in the interval (0, 1].</source>
          <target state="translated">표본은 지정된 매개 변수, &lt;code&gt;n&lt;/code&gt; 개 성공 및 &lt;code&gt;p&lt;/code&gt; 성공 확률 ( &lt;code&gt;n&lt;/code&gt; 이&amp;gt; 0이고 &lt;code&gt;p&lt;/code&gt; 가 구간 (0, 1])에 있는 음 이항 분포에서 추출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec7898fb57c300f285ca6a3cce375169d55effe7" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a negative binomial distribution with specified parameters, &lt;code&gt;n&lt;/code&gt; successes and &lt;code&gt;p&lt;/code&gt; probability of success where &lt;code&gt;n&lt;/code&gt; is &amp;gt; 0 and &lt;code&gt;p&lt;/code&gt; is in the interval [0, 1].</source>
          <target state="translated">샘플은 지정된 파라미터와 음 이항 분포로부터 그려 &lt;code&gt;n&lt;/code&gt; 성공과 &lt;code&gt;p&lt;/code&gt; 성공 확률 &lt;code&gt;n&lt;/code&gt; 이&amp;gt; 0이고 &lt;code&gt;p&lt;/code&gt; 가 [0, 1] 간격 인 .</target>
        </trans-unit>
        <trans-unit id="455cf138a17b68d1fc0c1eed8d31fa7c4006171d" translate="yes" xml:space="preserve">
          <source>Samples are drawn from a von Mises distribution with specified mode (mu) and dispersion (kappa), on the interval [-pi, pi].</source>
          <target state="translated">간격 [-pi, pi]에서 지정된 모드 (mu) 및 분산 (kappa)을 사용하여 von Mises 분포에서 샘플을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="bb4f03b29c8e3b63c24cec04cc545cc1fd8cf5d6" translate="yes" xml:space="preserve">
          <source>Samples are drawn from an F distribution with specified parameters, &lt;code&gt;dfnum&lt;/code&gt; (degrees of freedom in numerator) and &lt;code&gt;dfden&lt;/code&gt; (degrees of freedom in denominator), where both parameters &amp;gt; 1. &lt;code&gt;nonc&lt;/code&gt; is the non-centrality parameter.</source>
          <target state="translated">지정된 모수 인 &lt;code&gt;dfnum&lt;/code&gt; (분자 내 자유도) 및 &lt;code&gt;dfden&lt;/code&gt; ( 분모 내 자유도) 을 갖는 F 분포에서 표본을 추출합니다 . 여기서 두 모수 모두&amp;gt; 1 &lt;code&gt;nonc&lt;/code&gt; 는 비 중심 모수입니다.</target>
        </trans-unit>
        <trans-unit id="4892bdfe2aaeaf82fbd092fa5988f294bc583a61" translate="yes" xml:space="preserve">
          <source>Samples are drawn from an F distribution with specified parameters, &lt;code&gt;dfnum&lt;/code&gt; (degrees of freedom in numerator) and &lt;code&gt;dfden&lt;/code&gt; (degrees of freedom in denominator), where both parameters must be greater than zero.</source>
          <target state="translated">지정된 모수, &lt;code&gt;dfnum&lt;/code&gt; (분자 내 자유도) 및 &lt;code&gt;dfden&lt;/code&gt; 을 사용하여 F 분포에서 표본을 추출합니다. ( , 두 모수는 모두 0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="4bb08e3515ffd6aa9d5bee107026229ac17863ca" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.Generator.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">샘플은 반 개방 간격 &lt;code&gt;[low, high)&lt;/code&gt; 걸쳐 균일하게 분포 됩니다 (낮음 포함 , 높음 제외). 즉, 주어진 구간 내에서 임의의 값이 동일 확률로 인출 될 &lt;a href=&quot;#numpy.random.Generator.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d340df89668e62b717c65799d1869523b77a34e8" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.RandomState.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">샘플은 반 개방 간격 &lt;code&gt;[low, high)&lt;/code&gt; 걸쳐 균일하게 분포 됩니다 (낮음은 포함하지만 높음은 제외). 즉, 주어진 간격 내의 모든 값은 &lt;a href=&quot;#numpy.random.RandomState.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; 에&lt;/a&gt; 의해 그려 질 가능성이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="f9383c411a0915a47021cbe45a442f8d0fdfdd3e" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.mtrand.RandomState.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">샘플은 반 개방 간격 &lt;code&gt;[low, high)&lt;/code&gt; 걸쳐 균일하게 분포 됩니다 (낮음 포함 , 높음 제외). 즉, 주어진 구간 내에서 임의의 값이 동일 확률로 인출 될 &lt;a href=&quot;#numpy.random.mtrand.RandomState.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f729eb82b77600af67af00647a1f1dad27c671a" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;#numpy.random.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">샘플은 반 개방 간격 &lt;code&gt;[low, high)&lt;/code&gt; 걸쳐 균일하게 분포 됩니다 (낮음은 포함하지만 높음은 제외). 즉, 주어진 간격 내의 모든 값은 &lt;a href=&quot;#numpy.random.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; 에&lt;/a&gt; 의해 그려 질 가능성이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="4e7b0b4ef52307f715c259bfbd9d1f9ffabf426c" translate="yes" xml:space="preserve">
          <source>Samples are uniformly distributed over the half-open interval &lt;code&gt;[low, high)&lt;/code&gt; (includes low, but excludes high). In other words, any value within the given interval is equally likely to be drawn by &lt;a href=&quot;numpy.random.uniform#numpy.random.uniform&quot;&gt;&lt;code&gt;uniform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">샘플은 반 개방 간격 &lt;code&gt;[low, high)&lt;/code&gt; 걸쳐 균일하게 분포 됩니다 (낮음은 포함하지만 높음은 제외). 즉, 주어진 간격 내의 모든 값은 &lt;a href=&quot;numpy.random.uniform#numpy.random.uniform&quot;&gt; &lt;code&gt;uniform&lt;/code&gt; 에&lt;/a&gt; 의해 그려 질 가능성이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="50ca6603017443460a2eb081d6d85c883218b476" translate="yes" xml:space="preserve">
          <source>Sampling random rows from a 2-D array is not possible with this function, but is possible with &lt;a href=&quot;numpy.random.generator.choice#numpy.random.Generator.choice&quot;&gt;&lt;code&gt;Generator.choice&lt;/code&gt;&lt;/a&gt; through its &lt;code&gt;axis&lt;/code&gt; keyword.</source>
          <target state="translated">이 함수에서는 2 차원 배열에서 임의의 행을 샘플링 할 수 없지만 해당 &lt;code&gt;axis&lt;/code&gt; 키워드를 통해 &lt;a href=&quot;numpy.random.generator.choice#numpy.random.Generator.choice&quot;&gt; &lt;code&gt;Generator.choice&lt;/code&gt; &lt;/a&gt; 를 사용 하면 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="8efd3024c7a674dd5f3fda767589dbd95c091015" translate="yes" xml:space="preserve">
          <source>Sampling random rows from a 2-D array is not possible with this function, but is possible with &lt;code&gt;Generator.choice&lt;/code&gt; through its &lt;code&gt;axis&lt;/code&gt; keyword.</source>
          <target state="translated">이 함수에서는 2 차원 배열에서 임의의 행을 샘플링 할 수 없지만 해당 &lt;code&gt;axis&lt;/code&gt; 키워드를 통해 &lt;code&gt;Generator.choice&lt;/code&gt; 를 사용 하면 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="efc5f5a55f8bab95355af4762ab8a0048f2ab336" translate="yes" xml:space="preserve">
          <source>Sanity check:</source>
          <target state="translated">위생 점검:</target>
        </trans-unit>
        <trans-unit id="46e0b005ca82c3880442e9e9a7df96f006de258b" translate="yes" xml:space="preserve">
          <source>Save a masked array to a file in binary format.</source>
          <target state="translated">마스크 된 배열을 이진 형식으로 파일에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="911a916b79ab4bc074d4f36912c7fcb7aa4fb620" translate="yes" xml:space="preserve">
          <source>Save a single array to a binary file in NumPy format.</source>
          <target state="translated">단일 배열을 NumPy 형식의 이진 파일로 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="be789a78cf6b85597d4ddf6213d2224a3e631822" translate="yes" xml:space="preserve">
          <source>Save an array to a binary file in NumPy &lt;code&gt;.npy&lt;/code&gt; format</source>
          <target state="translated">배열을 NumPy &lt;code&gt;.npy&lt;/code&gt; 형식 의 이진 파일로 저장</target>
        </trans-unit>
        <trans-unit id="0ba53caacee0f1259455de36e504f82387901221" translate="yes" xml:space="preserve">
          <source>Save an array to a binary file in NumPy &lt;code&gt;.npy&lt;/code&gt; format.</source>
          <target state="translated">배열을 NumPy &lt;code&gt;.npy&lt;/code&gt; 형식 의 이진 파일로 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae01427f92b7456f5ec5bc4f8ee0ae7409a744f4" translate="yes" xml:space="preserve">
          <source>Save an array to a file as plain text.</source>
          <target state="translated">배열을 파일에 일반 텍스트로 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="e9e71c5c94b983abfad5d7a619c58515029b9590" translate="yes" xml:space="preserve">
          <source>Save an array to a text file.</source>
          <target state="translated">배열을 텍스트 파일로 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="54418cd6e366b63c682bf48fc64d3d0a4bf3ce65" translate="yes" xml:space="preserve">
          <source>Save several arrays into a &lt;code&gt;.npz&lt;/code&gt; archive</source>
          <target state="translated">여러 배열을 &lt;code&gt;.npz&lt;/code&gt; 에 저장 아카이브에 저장</target>
        </trans-unit>
        <trans-unit id="021c93af546584623236047204c21bba0386e331" translate="yes" xml:space="preserve">
          <source>Save several arrays into a compressed &lt;code&gt;.npz&lt;/code&gt; archive</source>
          <target state="translated">압축 된 &lt;code&gt;.npz&lt;/code&gt; 아카이브에 여러 어레이 저장</target>
        </trans-unit>
        <trans-unit id="84c68241efc575af7cb341cd4262bbd68e582701" translate="yes" xml:space="preserve">
          <source>Save several arrays into a single file in compressed &lt;code&gt;.npz&lt;/code&gt; format.</source>
          <target state="translated">압축 된 &lt;code&gt;.npz&lt;/code&gt; 형식의 여러 파일을 단일 파일로 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="55ff9d364225dd18ab7f086fb25a1a8994e9b5f3" translate="yes" xml:space="preserve">
          <source>Save several arrays into a single file in uncompressed &lt;code&gt;.npz&lt;/code&gt; format.</source>
          <target state="translated">압축되지 않은 &lt;code&gt;.npz&lt;/code&gt; 형식 으로 여러 파일을 단일 파일로 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="5fe177b86d821a794e0add75b799a949b995201f" translate="yes" xml:space="preserve">
          <source>Save several arrays into an uncompressed &lt;code&gt;.npz&lt;/code&gt; archive</source>
          <target state="translated">압축되지 않은 &lt;code&gt;.npz&lt;/code&gt; 아카이브에 여러 어레이 저장</target>
        </trans-unit>
        <trans-unit id="3834037486fe19959e5d74bb67ba75ca5f90b37c" translate="yes" xml:space="preserve">
          <source>Save several arrays into an uncompressed &lt;code&gt;.npz&lt;/code&gt; file format</source>
          <target state="translated">압축되지 않은 &lt;code&gt;.npz&lt;/code&gt; 파일 형식 으로 여러 배열 저장</target>
        </trans-unit>
        <trans-unit id="96abd2c6b79ee8cefdc4d885ebbf8bf5eb950e9e" translate="yes" xml:space="preserve">
          <source>Save the raw data to disk:</source>
          <target state="translated">원시 데이터를 디스크에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="84c4cc6b052ed4ea693e7157bb77f1d9b09e008c" translate="yes" xml:space="preserve">
          <source>Save/restore using a pickle file</source>
          <target state="translated">피클 파일을 사용하여 저장 / 복원</target>
        </trans-unit>
        <trans-unit id="1c89e5421877d9597204c3cd7df45767dab30f5d" translate="yes" xml:space="preserve">
          <source>Save/restore using tofile and fromfile</source>
          <target state="translated">tofile 및 fromfile을 사용하여 저장 / 복원</target>
        </trans-unit>
        <trans-unit id="73ed9caa35087e09e960ba1aa94c477b31fec1b4" translate="yes" xml:space="preserve">
          <source>Scalar arguments</source>
          <target state="translated">스칼라 인수</target>
        </trans-unit>
        <trans-unit id="7e81135d8c591c75fcb8a4fae4114af8598c3355" translate="yes" xml:space="preserve">
          <source>Scalar attribute identical to the corresponding array attribute.</source>
          <target state="translated">해당 배열 속성과 동일한 스칼라 속성입니다.</target>
        </trans-unit>
        <trans-unit id="fbae089728fbd07d2074ad963d381420ee002558" translate="yes" xml:space="preserve">
          <source>Scalar inputs are converted to 1-dimensional arrays, whilst higher-dimensional inputs are preserved.</source>
          <target state="translated">스칼라 입력은 1 차원 배열로 변환되는 반면 더 높은 차원의 입력은 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9749893e3890bfd1d5e9a92308e37602214ab9aa" translate="yes" xml:space="preserve">
          <source>Scalar method identical to the corresponding array attribute.</source>
          <target state="translated">해당 배열 속성과 동일한 스칼라 방법.</target>
        </trans-unit>
        <trans-unit id="1a487a95dda8c7320c2a85629036aba70a8b62f6" translate="yes" xml:space="preserve">
          <source>Scalar multiplication raises an error.</source>
          <target state="translated">스칼라 곱셈은 오류를 일으 킵니다.</target>
        </trans-unit>
        <trans-unit id="acac1d81b3534449675419a519bb343ca8e4b6f9" translate="yes" xml:space="preserve">
          <source>Scalar promotion in &lt;code&gt;PyArray_ConvertToCommonType&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PyArray_ConvertToCommonType&lt;/code&gt; 의 스칼라 승격</target>
        </trans-unit>
        <trans-unit id="059145f049285d511ac68922d472332e007411c0" translate="yes" xml:space="preserve">
          <source>Scalar representation of &lt;code&gt;a&lt;/code&gt;. The output data type is the same type returned by the input&amp;rsquo;s &lt;code&gt;item&lt;/code&gt; method.</source>
          <target state="translated">의 스칼라 표현 . 출력 데이터 유형은 입력 &lt;code&gt;item&lt;/code&gt; 메소드 에서 리턴 한 것과 동일한 유형 입니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f022d1745ad0c0eeb0f1290564887589cd41951" translate="yes" xml:space="preserve">
          <source>ScalarArrayTypes</source>
          <target state="translated">ScalarArrayTypes</target>
        </trans-unit>
        <trans-unit id="54b48aed2add2b87361aacba152bfad9a3b60a3a" translate="yes" xml:space="preserve">
          <source>Scalars</source>
          <target state="translated">Scalars</target>
        </trans-unit>
        <trans-unit id="c7a963db41c3d974050e19a5aa96bbcac0e75176" translate="yes" xml:space="preserve">
          <source>Scalars currently do not include byte order information, so extracting a scalar from an array will return an integer in native byte order. Hence:</source>
          <target state="translated">스칼라는 현재 바이트 순서 정보를 포함하지 않으므로 배열에서 스칼라를 추출하면 기본 바이트 순서로 정수가 반환됩니다. 그 후:</target>
        </trans-unit>
        <trans-unit id="a99f0f7dfd154d0342b30f3c55eb535a79c456a7" translate="yes" xml:space="preserve">
          <source>Scalars.</source>
          <target state="translated">Scalars.</target>
        </trans-unit>
        <trans-unit id="a29f0256272e79ca91a1c4e608f09a6264397d12" translate="yes" xml:space="preserve">
          <source>Scale</source>
          <target state="translated">Scale</target>
        </trans-unit>
        <trans-unit id="2f4826e6ef9018b6fbf17f3255b508abfe544913" translate="yes" xml:space="preserve">
          <source>Scale parameter, must be &amp;gt; 0.</source>
          <target state="translated">스케일 파라미터.&amp;gt; 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6d36d2d6ae526784915f210e3fb8dde2023d2741" translate="yes" xml:space="preserve">
          <source>Scale, also equals the mode. Must be non-negative. Default is 1.</source>
          <target state="translated">스케일도 모드와 같습니다. 음수가 아니어야합니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="a1d8be118bc39d12d4a10d74286dab4f70d176d9" translate="yes" xml:space="preserve">
          <source>Scaled companion matrix of dimensions (deg, deg).</source>
          <target state="translated">크기가 조정 된 컴패니언 행렬 (도,도).</target>
        </trans-unit>
        <trans-unit id="90f0936d7f1fd48b7b8ab09a84e5ccbd404fee5f" translate="yes" xml:space="preserve">
          <source>SciPy &amp;mdash; a collection of scientific tools for Python.</source>
          <target state="translated">SciPy &amp;mdash; Python을위한 과학 도구 모음입니다.</target>
        </trans-unit>
        <trans-unit id="d8eb0bbdbe7c30ed05a6b89b85311cc11a519093" translate="yes" xml:space="preserve">
          <source>SciPy Lecture Notes</source>
          <target state="translated">SciPy 강의 노트</target>
        </trans-unit>
        <trans-unit id="6cf90182d0d3f8bc33c7beb41c69dd94a1b45912" translate="yes" xml:space="preserve">
          <source>SciPy Tutorial</source>
          <target state="translated">SciPy 튜토리얼</target>
        </trans-unit>
        <trans-unit id="99e184aada462085df37c7560cdb13c82af8c9fb" translate="yes" xml:space="preserve">
          <source>SciPy consists of Python packages, called SciPy packages, that are available to Python users via the &lt;code&gt;scipy&lt;/code&gt; namespace. Each SciPy package may contain other SciPy packages. And so on. Therefore, the SciPy directory tree is a tree of packages with arbitrary depth and width. Any SciPy package may depend on NumPy packages but the dependence on other SciPy packages should be kept minimal or zero.</source>
          <target state="translated">SciPy은을 통해 파이썬 사용자가 사용할 수있는 SciPy 패키지라는 파이썬 패키지로 구성 &lt;code&gt;scipy&lt;/code&gt; 네임 스페이스. 각 SciPy 패키지는 다른 SciPy 패키지를 포함 할 수 있습니다. 등등. 따라서 SciPy 디렉토리 트리는 임의의 깊이와 너비를 가진 패키지 트리입니다. 모든 SciPy 패키지는 NumPy 패키지에 의존 할 수 있지만 다른 SciPy 패키지에 대한 의존성은 최소 또는 0으로 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="8e94aba713782c22853e995a20e9f3be2dad06e8" translate="yes" xml:space="preserve">
          <source>SciPy pure Python package example</source>
          <target state="translated">SciPy 순수 파이썬 패키지 예제</target>
        </trans-unit>
        <trans-unit id="f56355002d65034ce1206bc48c155f52fefbd24f" translate="yes" xml:space="preserve">
          <source>SciPy structure</source>
          <target state="translated">사이 파이 구조</target>
        </trans-unit>
        <trans-unit id="cbfee5c7cc913d86191979f6c77056f50e0278b0" translate="yes" xml:space="preserve">
          <source>SciPy uses the testing framework from &lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt;&lt;code&gt;numpy.testing&lt;/code&gt;&lt;/a&gt;, so all of the NumPy examples shown below are also applicable to SciPy</source>
          <target state="translated">SciPy는 &lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt; &lt;code&gt;numpy.testing&lt;/code&gt; &lt;/a&gt; 의 테스트 프레임 워크를 사용 하므로 아래 표시된 모든 NumPy 예제는 SciPy에도 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="034e5d890cd435fe540161b6563bbf26cb52539a" translate="yes" xml:space="preserve">
          <source>SciPy uses the testing framework from &lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt;&lt;code&gt;numpy.testing&lt;/code&gt;&lt;/a&gt;, so all the SciPy examples shown here are also applicable to NumPy. NumPy&amp;rsquo;s full test suite can be run as follows:</source>
          <target state="translated">SciPy는 &lt;a href=&quot;routines.testing#module-numpy.testing&quot;&gt; &lt;code&gt;numpy.testing&lt;/code&gt; &lt;/a&gt; 의 테스트 프레임 워크를 사용합니다. 하므로 여기에 표시된 모든 SciPy 예제는 NumPy에도 적용됩니다. NumPy의 전체 테스트 스위트는 다음과 같이 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0393074b82615f4e275b98b2246d689226a48539" translate="yes" xml:space="preserve">
          <source>SciPy.org wiki</source>
          <target state="translated">SciPy.org 위키</target>
        </trans-unit>
        <trans-unit id="73afce261b6dfa8d8e62c8a81d6da680b749cab7" translate="yes" xml:space="preserve">
          <source>Search include files from given directories.</source>
          <target state="translated">지정된 디렉토리에서 포함 파일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="98cc363c0119e35d1c8070755fc4d4c2387aad71" translate="yes" xml:space="preserve">
          <source>Searching</source>
          <target state="translated">Searching</target>
        </trans-unit>
        <trans-unit id="bb90e7394de350824c838bd1395dda4027383e30" translate="yes" xml:space="preserve">
          <source>Sebastian Berg</source>
          <target state="translated">Sebastian Berg</target>
        </trans-unit>
        <trans-unit id="4b2e1da1c964383188e00a10d2e39b923197f807" translate="yes" xml:space="preserve">
          <source>Second argument to the dot product.</source>
          <target state="translated">내적에 대한 두 번째 주장.</target>
        </trans-unit>
        <trans-unit id="7ef33b9083ac3caeba432f4b438a6779b5a70013" translate="yes" xml:space="preserve">
          <source>Second argument.</source>
          <target state="translated">두 번째 주장.</target>
        </trans-unit>
        <trans-unit id="cb5ad8b50723a7d1fd17584bedb0f83a41415a3b" translate="yes" xml:space="preserve">
          <source>Second array</source>
          <target state="translated">두 번째 배열</target>
        </trans-unit>
        <trans-unit id="221217640b561f4f6031bb5b13fc0d6996901859" translate="yes" xml:space="preserve">
          <source>Second axis.</source>
          <target state="translated">두 번째 축.</target>
        </trans-unit>
        <trans-unit id="32c1b237f4f300bba4fa4c9ac90f12b44936dc59" translate="yes" xml:space="preserve">
          <source>Second data type.</source>
          <target state="translated">두 번째 데이터 유형.</target>
        </trans-unit>
        <trans-unit id="ca4787861f1057c421779e8f1dedf89da61ae27f" translate="yes" xml:space="preserve">
          <source>Second input vector. Input is flattened if not already 1-dimensional.</source>
          <target state="translated">두 번째 입력 벡터. 1 차원이 아닌 경우 입력이 전개됩니다.</target>
        </trans-unit>
        <trans-unit id="edb13a05930d9e71ca1063cf578d1a9fdd2a8c6d" translate="yes" xml:space="preserve">
          <source>Second mode:</source>
          <target state="translated">두 번째 모드 :</target>
        </trans-unit>
        <trans-unit id="01d29ac55b3ec08df028359b5d454eb4ba1e410b" translate="yes" xml:space="preserve">
          <source>Second one-dimensional input array.</source>
          <target state="translated">두 번째 1 차원 입력 배열.</target>
        </trans-unit>
        <trans-unit id="d8e2f5f8f159edc62dbf9c3ce59c926f0a69e928" translate="yes" xml:space="preserve">
          <source>Second operand for ufuncs requiring two operands. Operand must be broadcastable over first operand after indexing or slicing.</source>
          <target state="translated">두 개의 피연산자가 필요한 ufunc의 두 번째 피연산자입니다. 피연산자는 인덱싱 또는 슬라이싱 후 첫 번째 피연산자에 대해 브로드 캐스트 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="5cc1e296313c284444e01aa95fbe95c897b4202e" translate="yes" xml:space="preserve">
          <source>Section &amp;ldquo;Output arguments&amp;rdquo;</source>
          <target state="translated">&quot;출력 인수&quot;섹션</target>
        </trans-unit>
        <trans-unit id="7ff5a6dafd806f6d95302657c480d07703b64604" translate="yes" xml:space="preserve">
          <source>Sections</source>
          <target state="translated">Sections</target>
        </trans-unit>
        <trans-unit id="86103efaefb974fbeaef0d11fb26a4e10fb923ee" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#how-to-io-large-arrays&quot;&gt;Write or read large arrays&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#how-to-io-large-arrays&quot;&gt;큰 배열 쓰기 또는 읽기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41b9a7ed6858aec5ceec48359e5d8ec1f8ffd4d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#quickstart-shape-manipulation&quot;&gt;below&lt;/a&gt; to get more details on &lt;code&gt;reshape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reshape&lt;/code&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;#quickstart-shape-manipulation&quot;&gt;아래&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64fdae2b1f409fab454a0b6575a79a20076b3149" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#rebasing-on-master&quot;&gt;Rebasing on master&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#rebasing-on-master&quot;&gt;마스터 리베이스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0d3ccd68e0c0e2e2383f28e0aa58fd9bef0633a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-axis&quot;&gt;axis&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-axis&quot;&gt;축을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="909f687a6d644afaf116513903bcb6653d49ea52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-ravel&quot;&gt;ravel&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#term-ravel&quot;&gt;라벨&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="9316f227f1b6905c972301e2f227b4d2e5a4826e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-structured-data-type&quot;&gt;structured data type&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;#term-structured-data-type&quot;&gt;구조화 된 데이터 유형을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faf0bd98883d1433a2c44675804c0341b3472b2d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#term-view&quot;&gt;보기를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2029de82eb780f6939854d19a93981f53bd665b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">사용 된 정의 및 규칙 은 &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c0a72c1cb8120cf7ac0dfcc72d95999596565de" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for details, definitions and conventions used.</source>
          <target state="translated">사용 된 세부 사항, 정의 및 규칙 은 &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0cfb9ee7c8187701f4953f4898745e4a0133d308" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">사용 된 정의 및 규칙에 대해서는 &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="39476c56ef5f38d2b1f008f544da6916173b58b1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for details, definitions and conventions used.</source>
          <target state="translated">사용 된 세부 사항, 정의 및 규칙에 대해서는 &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="967ac82f55bdf0a1e5e32db07feee81b4336ed50" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;arrays.datetime#arrays-datetime&quot;&gt;Datetimes and Timedeltas&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;arrays.datetime#arrays-datetime&quot;&gt;Datetimes 및 Timedeltas&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f111cce9ed2d7158c1f45c1a7d864f18edbaaf3f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;arrays.dtypes#string-dtype-note&quot;&gt;Note on string types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;arrays.dtypes#string-dtype-note&quot;&gt;문자열 유형에 대한 참고 사항을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2394875ced9766b9920c6fda530a08bce17207b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;basics.rec#structured-arrays&quot;&gt;Structured arrays&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basics.rec#structured-arrays&quot;&gt;구조화 된 배열을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32fbac70fdbf6b6767972829b5d64317ce260c1b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;examples/cython/index#extending-cython-example&quot;&gt;Extending numpy.random via Cython&lt;/a&gt; for the complete listings of these examples and a minimal &lt;code&gt;setup.py&lt;/code&gt; to build the c-extension modules.</source>
          <target state="translated">이 예제의 전체 목록과 c- 확장 모듈을 빌드하기위한 최소 &lt;code&gt;setup.py&lt;/code&gt; 는 &lt;a href=&quot;examples/cython/index#extending-cython-example&quot;&gt;Cython&lt;/a&gt; 을 통해 numpy.random 확장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="362c440e832fc9f791e0925e193ae378b155e71e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;extending&quot;&gt;Extending&lt;/a&gt; for examples of using these functions.</source>
          <target state="translated">이러한 기능 사용의 예는 &lt;a href=&quot;extending&quot;&gt;확장&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6936963c4857562319e39034c4eba8403c844439" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://mathesaurus.sf.net/&quot;&gt;http://mathesaurus.sf.net/&lt;/a&gt; for another MATLAB&amp;reg;/NumPy cross-reference.</source>
          <target state="translated">다른 MATLAB&amp;reg; / NumPy 상호 참조는 &lt;a href=&quot;http://mathesaurus.sf.net/&quot;&gt;http://mathesaurus.sf.net/&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5b2dca6ea3ce9fa8366a88d3077edc5ccc79caf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://asv.readthedocs.io/&quot;&gt;ASV documentation&lt;/a&gt; for basics on how to write benchmarks.</source>
          <target state="translated">벤치 마크 작성 방법에 대한 기본 사항 은 &lt;a href=&quot;https://asv.readthedocs.io/&quot;&gt;ASV 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12c16cfb6abe442490f8c7248ecc3f777cd01ad8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;Endianness&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;Endianness를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2759b1edc7f5de4ed3b70a0271458ccf90b1ed18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Python_software#Embedded_as_a_scripting_language&quot;&gt;List of Python software: scripting&lt;/a&gt; for a list of softwares that use Python as a scripting language</source>
          <target state="translated">Python을 스크립팅 언어로 사용하는 &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Python_software#Embedded_as_a_scripting_language&quot;&gt;소프트웨어 목록은 Python 소프트웨어 목록 : 스크립팅&lt;/a&gt; 을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="fd1d29fc8ffd8a495485a47438b29cfbb1794b87" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;Row- and column-major order&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;행 및 열 우선 순서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e60a11a0efdb9fb66087756ac0399ba9bf9be1c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;Row- and column-major order&lt;/a&gt;. NumPy creates arrays in row-major order by default.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Row-_and_column-major_order&quot;&gt;행 및 열 우선 순서를&lt;/a&gt; 참조하십시오 . NumPy는 기본적으로 행 우선 순서로 배열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e57518b27ed21cde08dd2e6bf10a8b62b4ab50ee" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://numpy.org/devdocs/user/theory.broadcasting.html&quot;&gt;this article&lt;/a&gt; for illustrations of broadcasting concepts.</source>
          <target state="translated">방송 개념에 대한 설명은 &lt;a href=&quot;https://numpy.org/devdocs/user/theory.broadcasting.html&quot;&gt;이 기사&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c015117cd802eda9931a9906e2501956ec2f1ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;pandas.DataFrame.to_numpy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy&quot;&gt; &lt;code&gt;pandas.DataFrame.to_numpy&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5e4d97067b946e4ef690b272184e4efc5ede623" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for a complete list of improvements and differences from the traditional &lt;code&gt;Randomstate&lt;/code&gt;.</source>
          <target state="translated">기존 &lt;code&gt;Randomstate&lt;/code&gt; 와의 개선 및 &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;차이점&lt;/a&gt; 에 대한 전체 목록은 새로운 기능 또는 다른 기능을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="192ac208c2a010aec7e6d78dc1244a3730c800d5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for more information</source>
          <target state="translated">자세한 &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;내용은 새로운 기능 또는 다른 기능&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="79bed1cbe270deb55a61fb72310b3bb8b6412c8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;내용은 새로운 기능 또는 다른 기능&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="32f0e6dd051b734927a01c5db87a2be927d800dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt;&lt;code&gt;diag_indices&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt; &lt;code&gt;diag_indices&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="5443e9a54948aa9c9379a327531c6bccc7711bdf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt;&lt;code&gt;numpy.einsum_path&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;numpy.einsum_path#numpy.einsum_path&quot;&gt; &lt;code&gt;numpy.einsum_path&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="686c392217c3aaf7298c3e78ad0a9f7cb212a937" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">사용 된 정의 및 규칙에 대해서는 &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="205ca8dcd159fbcee76df1b2fef8925f1440e59e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; for details, definitions and conventions used.</source>
          <target state="translated">사용 된 세부 사항, 정의 및 규칙에 대해서는 &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9478a5052b310742b09afa66203bc879673c7b08" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt;&lt;code&gt;fftn&lt;/code&gt;&lt;/a&gt; for details and a plotting example, and &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used.</source>
          <target state="translated">세부 사항 및 플로팅 예제는 &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt; 을 , 사용 된 정의 및 규칙 은 &lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt; &lt;code&gt;fftn&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="675d16e4fa406a9a6c6a04ecb2e8ae0357bdec4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.ifftn#numpy.fft.ifftn&quot;&gt;&lt;code&gt;ifftn&lt;/code&gt;&lt;/a&gt; for details and a plotting example, and &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt; for definition and conventions used.</source>
          <target state="translated">세부 사항 및 플로팅 예제는 &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt; 및 사용 된 정의 및 규칙에 대해서는 &lt;a href=&quot;numpy.fft.ifftn#numpy.fft.ifftn&quot;&gt; &lt;code&gt;ifftn&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7538fd13cf14ea1644418142ccb8df97c6be45c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt;&lt;code&gt;rfft&lt;/code&gt;&lt;/a&gt; for definitions and conventions used for real input.</source>
          <target state="translated">실제 입력에 사용되는 정의 및 규칙 은 &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt; &lt;code&gt;rfft&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14d8b147d16c03edc0300c16ec51d7d6ca5bbe18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.ma.sort#numpy.ma.sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">다른 정렬 알고리즘에 대한 참고 사항 은 &lt;a href=&quot;numpy.ma.sort#numpy.ma.sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7cb24d59875b3cc3574d8087b692673ddcdb195" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt;&lt;code&gt;ndarray.tolist&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">전체 설명서는 &lt;a href=&quot;numpy.ndarray.tolist#numpy.ndarray.tolist&quot;&gt; &lt;code&gt;ndarray.tolist&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea9267ac587bed3ccf047481f2944300dad26164" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; parameters of the same name</source>
          <target state="translated">같은 이름의 &lt;a href=&quot;numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt; 매개 변수 보기</target>
        </trans-unit>
        <trans-unit id="c45cefa68ab5a49c7fc455bfaecdfb960c92f083" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.partition#numpy.partition&quot;&gt;&lt;code&gt;partition&lt;/code&gt;&lt;/a&gt; for notes on the different selection algorithms.</source>
          <target state="translated">다른 선택 알고리즘에 대한 참고 사항 은 &lt;a href=&quot;numpy.partition#numpy.partition&quot;&gt; &lt;code&gt;partition&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a40a1aa29fa9651123546ac2519835462e20cae8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;numpy.sort&lt;/code&gt;&lt;/a&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">다른 정렬 알고리즘에 대한 메모는 &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;numpy.sort&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba13a78a2a0a3fa0752c74cc8d90a5244ecac0db" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">다른 정렬 알고리즘에 대한 참고 사항 은 &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="193831fdc2be9f5768df3d003b30aca1e44dbbda" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.tril_indices#numpy.tril_indices&quot;&gt;&lt;code&gt;tril_indices&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;numpy.tril_indices#numpy.tril_indices&quot;&gt; &lt;code&gt;tril_indices&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="5fd11c543ebfdc5c211e4a6d71346d0822c268b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;numpy.triu_indices#numpy.triu_indices&quot;&gt;&lt;code&gt;triu_indices&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;numpy.triu_indices#numpy.triu_indices&quot;&gt; &lt;code&gt;triu_indices&lt;/code&gt; &lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="6d738912af327e02de9688811d1f6caf6ae3c3bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;user/basics.broadcasting#module-numpy.doc.broadcasting&quot;&gt;&lt;code&gt;numpy.doc.broadcasting&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;user/basics.broadcasting#module-numpy.doc.broadcasting&quot;&gt; &lt;code&gt;numpy.doc.broadcasting&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a26a6c6d8fd9cacc6f2cfad9d6c978bd1cfae12c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;column-major&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;column-major&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="d124b82767a9a18459a70bf42d4d1a5c2cabceaa" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;new-or-different&lt;/code&gt; for more information</source>
          <target state="translated">자세한 내용은 &lt;code&gt;new-or-different&lt;/code&gt; 것을 참조하십시오</target>
        </trans-unit>
        <trans-unit id="ca9ae24d30e172d05736d39babb905ced23075a8" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;np.partition&lt;/code&gt; for notes on the different algorithms.</source>
          <target state="translated">다른 알고리즘에 대한 정보는 &lt;code&gt;np.partition&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ad79a6d0f605b65724a6a24d54e33980e6ab85b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;numpy.polynomial.chebfromfunction&lt;/code&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;numpy.polynomial.chebfromfunction&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b7cbeeba787c7bac123af34723f7ac27f6b8e113" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;numpy_distutils/fcompiler.py&lt;/code&gt; for up-to-date list of supported compilers or run</source>
          <target state="translated">지원되는 최신 컴파일러 목록은 &lt;code&gt;numpy_distutils/fcompiler.py&lt;/code&gt; 를 참조 하거나 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="53aeb06592aff3e55872eab7aafc82f2099b695a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;row-major&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;row-major&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="d8d7757a34f4e9d0f656d306b6f251fdbb133f09" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;sort&lt;/code&gt; for notes on the different sorting algorithms.</source>
          <target state="translated">다른 정렬 알고리즘에 대한 참고 사항 은 &lt;code&gt;sort&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9c9247d944d749a48936abc88d1a40f983cb1d7" translate="yes" xml:space="preserve">
          <source>See &lt;em&gt;array&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;array를&lt;/em&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="904e7e2293896fc6a190899b0e3541d19b216aa3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;arrays.classes#numpy.class.__array_function__&quot;&gt;&lt;code&gt;numpy.class.__array_function__&lt;/code&gt;&lt;/a&gt; for more information. This flag is checked at import time.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;arrays.classes#numpy.class.__array_function__&quot;&gt; &lt;code&gt;numpy.class.__array_function__&lt;/code&gt; &lt;/a&gt; 을 참조하십시오. 이 플래그는 가져올 때 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="c42bf30b104306d8d14d78bea5733810e45f113e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://www.numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP 18&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP 18&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="726c8c4767eaebe110b0b0a5572bbc69c9f2d3bd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP 18&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://numpy.org/neps/nep-0018-array-function-protocol.html&quot;&gt;NEP 18&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32afcc466e80065c98820b39346c93678b8ddbce" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;intent(callback)&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;intent(callback)&lt;/code&gt; 속성 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1234129c54dee52191f9a009e54d14ba3cd7901d" translate="yes" xml:space="preserve">
          <source>See also the corresponding attribute of the derived class of interest.</source>
          <target state="translated">파생 클래스의 해당 속성도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4afdc4f9248e485e658b7f06fc706ad02db078bf" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely&quot;&gt;https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely&quot;&gt;https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc70241c94e61db73d579089182797ead2f9266e" translate="yes" xml:space="preserve">
          <source>See casting argument of &lt;code&gt;ndarray.astype&lt;/code&gt;. Controls what kind of data casting may occur.</source>
          <target state="translated">&lt;code&gt;ndarray.astype&lt;/code&gt; 의 캐스팅 인수를 참조하십시오 . 발생할 수있는 데이터 캐스팅의 종류를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="1dd0bc48db89bc375f2f824cfcb08b1ef9134457" translate="yes" xml:space="preserve">
          <source>See copy argument to &lt;code&gt;ndarray.astype&lt;/code&gt;. If true, always return a copy. If false, and &lt;code&gt;dtype&lt;/code&gt; requirements are satisfied, a view is returned.</source>
          <target state="translated">&lt;code&gt;ndarray.astype&lt;/code&gt; 에 인수 복사를 참조하십시오 . 참이면 항상 복사본을 반환합니다. false이고 &lt;code&gt;dtype&lt;/code&gt; 요구 사항이 충족되면 뷰가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1514c7f6c78706cd69d9f9b84fdf65277ce18169" translate="yes" xml:space="preserve">
          <source>See linalg.py in numpy folder for more.</source>
          <target state="translated">자세한 내용은 numpy 폴더의 linalg.py를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ac48e975ba53acce9969156066615d007ed0a86a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../generated/numpy.einsum#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt; function for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../generated/numpy.einsum#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; &lt;/a&gt; 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="83750efeee588beded293ee3f9269da81e7c7a09" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;generated/numpy.einsum#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt; function for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;generated/numpy.einsum#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; &lt;/a&gt; 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="932a4257d3ac9f247fc75aac0a4b3c15e79bc083" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/MacPython/numpy-wheels&quot;&gt;numpy wheels&lt;/a&gt; building repository for more detail.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/MacPython/numpy-wheels&quot;&gt;numpy wheels&lt;/a&gt; building repository를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="05244e546140f7e533088e471d08417c187232f7" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;MacPython/numpy wheels&lt;/code&gt; repository.</source>
          <target state="translated">&lt;code&gt;MacPython/numpy wheels&lt;/code&gt; 저장소를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="b4f3fbbc86b01e081d4bf3029eeb047323af050f" translate="yes" xml:space="preserve">
          <source>See the class docstring for the number of bits returned.</source>
          <target state="translated">리턴 된 비트 수는 docstring 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c83ee6459f11d959cce47b344352f4193d454359" translate="yes" xml:space="preserve">
          <source>See the function &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt;&lt;code&gt;PyArray_MinScalarType&lt;/code&gt;&lt;/a&gt; for an alternative mechanism introduced in NumPy 1.6.0.</source>
          <target state="translated">NumPy 1.6.0에 도입 된 대체 메커니즘은 &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt; &lt;code&gt;PyArray_MinScalarType&lt;/code&gt; &lt;/a&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b5e9065c0e163926104e92911bff64adedee471" translate="yes" xml:space="preserve">
          <source>See the function &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt; for details of NumPy type promotion, updated in NumPy 1.6.0.</source>
          <target state="translated">NumPy 1.6.0에서 업데이트 된 NumPy 유형 승격에 대한 자세한 내용은 &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt; &lt;code&gt;PyArray_ResultType&lt;/code&gt; &lt;/a&gt; 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27b980b7065c19a238ed0ab9383f5a540a5d637c" translate="yes" xml:space="preserve">
          <source>See the more detailed documentation for &lt;code&gt;numpy.diagonal&lt;/code&gt; if you use this function to extract a diagonal and wish to write to the resulting array; whether it returns a copy or a view depends on what version of numpy you are using.</source>
          <target state="translated">이 함수를 사용하여 대각선을 추출하고 결과 배열에 쓰려면 &lt;code&gt;numpy.diagonal&lt;/code&gt; 에 대한 자세한 문서를 참조하십시오 . 사본 또는 뷰를 반환하는지 여부는 사용중인 numpy 버전에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a367dbe20937470e410dfbea9585fd8048f1569d" translate="yes" xml:space="preserve">
          <source>See the notes and examples for clarification.</source>
          <target state="translated">설명을위한 참고 사항과 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ed05825174e3134f290feabd650cdebd78790e5d" translate="yes" xml:space="preserve">
          <source>See the notes for an outline of the algorithm.</source>
          <target state="translated">알고리즘의 개요는 노트를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9f233733da4c5945268174450132dc468d9cc226" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://github.com/scipy/scipy/issues/4919&quot;&gt;https://github.com/scipy/scipy/issues/4919&lt;/a&gt; for a discussion of signing release tags, and &lt;a href=&quot;https://keyring.debian.org/creating-key.html&quot;&gt;https://keyring.debian.org/creating-key.html&lt;/a&gt; for instructions on creating a GPG key if you do not have one.</source>
          <target state="translated">: 참조 &lt;a href=&quot;https://github.com/scipy/scipy/issues/4919&quot;&gt;https://github.com/scipy/scipy/issues/4919을&lt;/a&gt; 릴리스 태그 서명에 대한 설명, 그리고 &lt;a href=&quot;https://keyring.debian.org/creating-key.html&quot;&gt;https://keyring.debian.org/creating-key.html을&lt;/a&gt; 당신이 만약 GPG 키를 생성하는 방법은 하나가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6766ba274f9d0d5aeccf1125da13776bf3679884" translate="yes" xml:space="preserve">
          <source>SeedSequence (class in numpy.random)</source>
          <target state="translated">SeedSequence (numpy.random의 클래스)</target>
        </trans-unit>
        <trans-unit id="2de41805fe60d43135ccbebaad2f5782594f2632" translate="yes" xml:space="preserve">
          <source>SeedSequence mixes sources of entropy in a reproducible way to set the initial state for independent and very probably non-overlapping BitGenerators.</source>
          <target state="translated">SeedSequence는 독립적이고 겹치지 않는 BitGenerator에 대한 초기 상태를 설정하기 위해 재현 가능한 방식으로 엔트로피 소스를 혼합합니다.</target>
        </trans-unit>
        <trans-unit id="c837283b736981a9d882e30832f45d2c3a206514" translate="yes" xml:space="preserve">
          <source>SeedSequence spawning</source>
          <target state="translated">시드 시퀀스 스폰</target>
        </trans-unit>
        <trans-unit id="28355ed4d1be051fdd750124cc876d1fa222f5c2" translate="yes" xml:space="preserve">
          <source>SeedSequence.entropy</source>
          <target state="translated">SeedSequence.entropy</target>
        </trans-unit>
        <trans-unit id="03d7f2826ccb833676fbe70c0022e77d2e2c9c55" translate="yes" xml:space="preserve">
          <source>SeedSequence.generate_state()</source>
          <target state="translated">SeedSequence.generate_state()</target>
        </trans-unit>
        <trans-unit id="c4d5a701757a2a9341845319c69171cb1c646cf5" translate="yes" xml:space="preserve">
          <source>SeedSequence.spawn()</source>
          <target state="translated">SeedSequence.spawn()</target>
        </trans-unit>
        <trans-unit id="9ba62987b34fe8fc63485d9dd7e815f3286c5601" translate="yes" xml:space="preserve">
          <source>SeedSequence.spawn_key</source>
          <target state="translated">SeedSequence.spawn_key</target>
        </trans-unit>
        <trans-unit id="529f2be0ba9acc44b2bfc2619c9e560a49fb0f5d" translate="yes" xml:space="preserve">
          <source>Seeding &lt;code&gt;RandomState&lt;/code&gt; using an array requires a 1-d array</source>
          <target state="translated">배열을 사용하여 &lt;code&gt;RandomState&lt;/code&gt; 를 시드 하려면 1 차원 배열이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8803a737a63e4b3f599d7264c369bdc58f640281" translate="yes" xml:space="preserve">
          <source>Seeding and Entropy</source>
          <target state="translated">시드 및 엔트로피</target>
        </trans-unit>
        <trans-unit id="e478fbf4bf9d911f2c366f8992866e1d7b083794" translate="yes" xml:space="preserve">
          <source>Seeding and State</source>
          <target state="translated">시드 및 상태</target>
        </trans-unit>
        <trans-unit id="27b5c56d24ea90f0f46a962efa10519d7d721726" translate="yes" xml:space="preserve">
          <source>Seeds can be passed to any of the BitGenerators. The provided value is mixed via &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to spread a possible sequence of seeds across a wider range of initialization states for the BitGenerator. Here &lt;a href=&quot;bit_generators/pcg64#numpy.random.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; is used and is wrapped with a &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Seed는 모든 BitGenerator에 전달할 수 있습니다. 제공된 값은 &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt; 를 통해 혼합되어 BitGenerator 에 대한 더 넓은 범위의 초기화 상태에 가능한 시드 시퀀스를 분산시킵니다. 여기서 &lt;a href=&quot;bit_generators/pcg64#numpy.random.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt; 가 사용되고 &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt; 로 래핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="37cd3865c006d959fb649d73b618699ccd761419" translate="yes" xml:space="preserve">
          <source>Seeds can be passed to any of the BitGenerators. The provided value is mixed via &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; to spread a possible sequence of seeds across a wider range of initialization states for the BitGenerator. Here &lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt;&lt;code&gt;PCG64&lt;/code&gt;&lt;/a&gt; is used and is wrapped with a &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">씨앗은 모든 BitGenerator로 전달 될 수 있습니다. 제공된 값은 &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt; 를 통해 혼합되어 BitGenerator 의 광범위한 초기화 상태에 시드 시퀀스를 확산시킬 수 있습니다. 여기서 &lt;a href=&quot;bit_generators/pcg64#numpy.random.pcg64.PCG64&quot;&gt; &lt;code&gt;PCG64&lt;/code&gt; &lt;/a&gt; 가 사용되고 &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt; 로 싸여 있습니다.</target>
        </trans-unit>
        <trans-unit id="befc8fb6b3706476b647851ec8b54ce3f110f269" translate="yes" xml:space="preserve">
          <source>Selection algorithm. Default is &amp;lsquo;introselect&amp;rsquo;</source>
          <target state="translated">선택 알고리즘. 기본값은 'introselect'입니다</target>
        </trans-unit>
        <trans-unit id="ad6f6961c3fd31b6fdfea3ebca7b48b26cade497" translate="yes" xml:space="preserve">
          <source>Selection algorithm. Default is &amp;lsquo;introselect&amp;rsquo;.</source>
          <target state="translated">선택 알고리즘. 기본값은 'introselect'입니다.</target>
        </trans-unit>
        <trans-unit id="e4ebe86796a86b2f6ad98a5ef9dcf9068bc06196" translate="yes" xml:space="preserve">
          <source>Selects a subset of the axes of length one in the shape. If an axis is selected with shape entry greater than one, an error is raised.</source>
          <target state="translated">모양에서 길이가 1 인 축의 하위 집합을 선택합니다. 모양 항목이 1보다 큰 축을 선택하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7f96a534619bacb3ad4f1fc42bed9158e10d6d9e" translate="yes" xml:space="preserve">
          <source>Selects a subset of the entries of length one in the shape. If an axis is selected with shape entry greater than one, an error is raised.</source>
          <target state="translated">모양에서 길이가 1 인 항목의 하위 집합을 선택합니다. 모양 항목이 1보다 큰 축을 선택하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d113b695dceac1abca63d8057088ab91eda91dcc" translate="yes" xml:space="preserve">
          <source>Selects a subset of the single-dimensional entries in the shape. If an axis is selected with shape entry greater than one, an error is raised.</source>
          <target state="translated">도형에서 1 차원 항목의 하위 집합을 선택합니다. 모양 항목이 1보다 큰 축을 선택하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="79443358879bd95386fe2826725c9fd86b989cfe" translate="yes" xml:space="preserve">
          <source>Self-written Python C/API functions can be defined inside signature files using &lt;code&gt;usercode&lt;/code&gt; and &lt;code&gt;pymethoddef&lt;/code&gt; statements (they must be used inside the &lt;code&gt;python module&lt;/code&gt; block). For example, the following signature file &lt;code&gt;spam.pyf&lt;/code&gt;</source>
          <target state="translated">자체 작성된 Python C / API 함수는 사용자 &lt;code&gt;usercode&lt;/code&gt; 및 &lt;code&gt;pymethoddef&lt;/code&gt; 문을 사용하여 서명 파일 내에 정의 할 수 있습니다 ( &lt;code&gt;python module&lt;/code&gt; 블록 내에서 사용해야 함 ). 예를 들어 다음 서명 파일 &lt;code&gt;spam.pyf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcb043cced9bf871f8d9c8f89f0f16414b1d26ad" translate="yes" xml:space="preserve">
          <source>Senior &lt;a href=&quot;https://numfocus.org/code-of-conduct#persons-responsible&quot;&gt;NumFOCUS staff&lt;/a&gt;: &lt;a href=&quot;mailto:conduct%40numfocus.org&quot;&gt;conduct@numfocus.org&lt;/a&gt;</source>
          <target state="translated">수석 &lt;a href=&quot;https://numfocus.org/code-of-conduct#persons-responsible&quot;&gt;NumFOCUS 직원&lt;/a&gt; : &lt;a href=&quot;mailto:conduct%40numfocus.org&quot;&gt;Conduct@numfocus.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1671ef9d02cf65603b61940347a9ba392c0d61a" translate="yes" xml:space="preserve">
          <source>Separate compilation</source>
          <target state="translated">별도의 컴파일</target>
        </trans-unit>
        <trans-unit id="1016bd837a14ebb17e9d66314eef86b904454048" translate="yes" xml:space="preserve">
          <source>Separate core math library</source>
          <target state="translated">별도의 핵심 수학 라이브러리</target>
        </trans-unit>
        <trans-unit id="ce43c468d1865e00edb6873541f360679646ae28" translate="yes" xml:space="preserve">
          <source>Separator between array items for text output. If &amp;ldquo;&amp;rdquo; (empty), a binary file is written, equivalent to &lt;code&gt;file.write(a.tobytes())&lt;/code&gt;.</source>
          <target state="translated">텍스트 출력을위한 배열 항목 사이의 구분자입니다. &quot;&quot;(비어 있음) 인 경우 &lt;code&gt;file.write(a.tobytes())&lt;/code&gt; 와 동등한 이진 파일이 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="69c3854cf2f97e2b89f4f88e15dea295b287e18d" translate="yes" xml:space="preserve">
          <source>Separator between items if file is a text file. Empty (&amp;ldquo;&amp;rdquo;) separator means the file should be treated as binary. Spaces (&amp;rdquo; &amp;ldquo;) in the separator match zero or more whitespace characters. A separator consisting only of spaces must match at least one whitespace.</source>
          <target state="translated">파일이 텍스트 파일 인 경우 항목 간 구분 기호입니다. 빈 ( &quot;&quot;) 구분 기호는 파일을 이진으로 처리해야 함을 의미합니다. 구분 기호의 공백 ( &quot;&quot;)은 0 개 이상의 공백 문자와 일치합니다. 공백으로 만 구성된 구분 기호는 하나 이상의 공백과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="58b5ef82070109089258d37935f6f8dd60465e83" translate="yes" xml:space="preserve">
          <source>Separator to split each string element in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">분리기는 각 문자열 요소를 분할하는 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fda4d938e57bdf80fd45be4a4b9ed3293812c803" translate="yes" xml:space="preserve">
          <source>Sequence containing the roots.</source>
          <target state="translated">뿌리를 포함하는 시퀀스.</target>
        </trans-unit>
        <trans-unit id="577113b6ca2471336f20adea7da8449aa1b619c6" translate="yes" xml:space="preserve">
          <source>Sequence of Poly series coefficients. This routine fails for empty sequences.</source>
          <target state="translated">폴리 시리즈 계수의 순서. 이 루틴은 빈 시퀀스에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="7d56bc3b59f98575164058303f56739492a375cb" translate="yes" xml:space="preserve">
          <source>Sequence of arrays</source>
          <target state="translated">배열 순서</target>
        </trans-unit>
        <trans-unit id="74a030f26672046723689084e56201ef57135767" translate="yes" xml:space="preserve">
          <source>Sequence of input arrays.</source>
          <target state="translated">입력 배열의 순서.</target>
        </trans-unit>
        <trans-unit id="0cd7f24fb8c01924663f200685435e6585e0483c" translate="yes" xml:space="preserve">
          <source>Sequence of title strings. An empty list can be used to leave titles out.</source>
          <target state="translated">제목 문자열의 순서 빈 목록을 사용하여 제목을 남길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e892733a57cfb8724fa5f063a8369bfa0e2ca384" translate="yes" xml:space="preserve">
          <source>Series basis polynomial of degree &lt;code&gt;deg&lt;/code&gt;.</source>
          <target state="translated">도 &lt;code&gt;deg&lt;/code&gt; 의 시리즈 기본 다항식 .</target>
        </trans-unit>
        <trans-unit id="1337e50ba66491fb95c336fa496a5915ac327127" translate="yes" xml:space="preserve">
          <source>Series of representing the identity.</source>
          <target state="translated">정체성을 나타내는 일련의.</target>
        </trans-unit>
        <trans-unit id="b63dd64982c7da79c8185bb27db51618398f47db" translate="yes" xml:space="preserve">
          <source>Series with the specified roots.</source>
          <target state="translated">지정된 뿌리를 가진 시리즈.</target>
        </trans-unit>
        <trans-unit id="c58eeea00ccb981db5bb1976aef71852fd00d936" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; for all &lt;code&gt;n&lt;/code&gt; in indices.</source>
          <target state="translated">집합 &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; 모두 &lt;code&gt;n&lt;/code&gt; 의 인덱스이다.</target>
        </trans-unit>
        <trans-unit id="77a70ae836628667e278cbc0920a320844fc2438" translate="yes" xml:space="preserve">
          <source>Set a Python function to be used when pretty printing arrays.</source>
          <target state="translated">배열을 예쁘게 인쇄 할 때 사용할 Python 함수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2c5db0d0b74f7205ac29d00dc0f28315d34810c2" translate="yes" xml:space="preserve">
          <source>Set a callback function for the &amp;lsquo;call&amp;rsquo; mode.</source>
          <target state="translated">'통화'모드에 대한 콜백 기능을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b4dd0addc44a7c0a5f052f38a920a2396cfdd632" translate="yes" xml:space="preserve">
          <source>Set array flags WRITEABLE, ALIGNED, (WRITEBACKIFCOPY and UPDATEIFCOPY), respectively.</source>
          <target state="translated">배열 플래그를 WRITEABLE, ALIGNED, (WRITEBACKIFCOPY 및 UPDATEIFCOPY)로 각각 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="fe4f54f983d0fc0329e51cb812fc504ecf7d9aeb" translate="yes" xml:space="preserve">
          <source>Set how floating-point errors are handled.</source>
          <target state="translated">부동 소수점 오류 처리 방법을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="39887c043db9f2506d3506245ce2f8a4950e71c8" translate="yes" xml:space="preserve">
          <source>Set item described by index. If value is masked, masks those locations.</source>
          <target state="translated">색인으로 설명 된 항목을 설정하십시오. 값이 마스킹되면 해당 위치를 마스킹합니다.</target>
        </trans-unit>
        <trans-unit id="d43a840d83fb8f7ade894cbf5726d0d362e9206c" translate="yes" xml:space="preserve">
          <source>Set items 0 and 1 to their negative values:</source>
          <target state="translated">항목 0과 1을 음수 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7e3313ed91d9ab09cbf1b02b801051fadfe61771" translate="yes" xml:space="preserve">
          <source>Set of strings or integers representing the positional or keyword arguments for which the function will not be vectorized. These will be passed directly to &lt;code&gt;pyfunc&lt;/code&gt; unmodified.</source>
          <target state="translated">함수가 벡터화되지 않을 위치 또는 키워드 인수를 나타내는 문자열 또는 정수 세트입니다. 이들은 수정되지 않은 &lt;code&gt;pyfunc&lt;/code&gt; 에 직접 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="852786c22c7b6e5d3fa7c9ca71d5ecb116430db0" translate="yes" xml:space="preserve">
          <source>Set operations for arrays based on sorting.</source>
          <target state="translated">정렬을 기반으로 배열에 대한 작업을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="dd426fb4dd6e4754c713da93e729d89067e4bb9f" translate="yes" xml:space="preserve">
          <source>Set print options for the scope of the &lt;code&gt;with&lt;/code&gt; block, and restore the old options at the end. See &lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt;&lt;code&gt;set_printoptions&lt;/code&gt;&lt;/a&gt; for the full description of available options.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; 블록 의 범위에 대한 인쇄 옵션을 설정 하고 마지막에 이전 옵션을 복원하십시오. 사용 가능한 옵션에 대한 자세한 설명은 &lt;a href=&quot;numpy.set_printoptions#numpy.set_printoptions&quot;&gt; &lt;code&gt;set_printoptions&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="865d37322e223fb10d7a9b7ba6a65aa905f9c08b" translate="yes" xml:space="preserve">
          <source>Set printing options.</source>
          <target state="translated">인쇄 옵션을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="12d96b7d9d8a25110f724914dda75cc579f9b15b" translate="yes" xml:space="preserve">
          <source>Set routines</source>
          <target state="translated">루틴 설정</target>
        </trans-unit>
        <trans-unit id="90e5a4de82b432cd6a08040a41846a8b484aa8bd" translate="yes" xml:space="preserve">
          <source>Set self[key] to value.</source>
          <target state="translated">self [key]를 value로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="03a01981fda3953041f5032c2c1e545ec21542ec" translate="yes" xml:space="preserve">
          <source>Set storage-indexed locations to corresponding values.</source>
          <target state="translated">스토리지 인덱싱 된 위치를 해당 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b78901915d1c3e355e6e7781fdabdcf49646d0cb" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;iterator&lt;/em&gt; index and dataptr to the location in the array indicated by the integer &lt;em&gt;index&lt;/em&gt; which points to an element in the C-styled flattened array.</source>
          <target state="translated">&lt;em&gt;반복자&lt;/em&gt; 색인 및 dataptr을 C 스타일의 평탄화 된 배열의 요소를 가리키는 정수 &lt;em&gt;색인으로&lt;/em&gt; 표시된 배열의 위치로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a1438d389936667e0dd90e958cbfcfc479a293a" translate="yes" xml:space="preserve">
          <source>Set the &lt;em&gt;iterator&lt;/em&gt; index, dataptr, and coordinates members to the location in the array indicated by the N-dimensional c-array, &lt;em&gt;destination&lt;/em&gt;, which must have size at least &lt;em&gt;iterator&lt;/em&gt; -&amp;gt;nd_m1+1.</source>
          <target state="translated">&lt;em&gt;반복자&lt;/em&gt; 인덱스, dataptr을 설정하고 멤버를 N 차원 c-array, &lt;em&gt;destination으로&lt;/em&gt; 표시되는 배열의 위치로 설정하십시오. 크기는 최소한 &lt;em&gt;반복자&lt;/em&gt; -&amp;gt; nd_m1 + 1 이어야 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b299e493bd0935fc88448c94801f1997339f1089" translate="yes" xml:space="preserve">
          <source>Set the argtypes attribute to a list whose entries contain objects with a classmethod named from_param that knows how to convert your object to an object that ctypes can understand (an int/long, string, unicode, or object with the &lt;code&gt;_as_parameter_&lt;/code&gt; attribute).</source>
          <target state="translated">개체를 ctypes가 이해할 수있는 개체 (int / long, 문자열, 유니 코드 또는 &lt;code&gt;_as_parameter_&lt;/code&gt; 속성 이있는 개체)로 변환하는 방법을 알고있는 from_param이라는 클래스 메서드가있는 개체가 항목에 포함 된 목록으로 argtypes 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9fda88468648975d476004e19b12d7764d8871eb" translate="yes" xml:space="preserve">
          <source>Set the divide by zero floating point exception</source>
          <target state="translated">부동 소수점 0으로 나누기 예외 설정</target>
        </trans-unit>
        <trans-unit id="052e8b4098d433df163dbe5f239a55cbd55acd03" translate="yes" xml:space="preserve">
          <source>Set the filling value of a masked array.</source>
          <target state="translated">마스크 배열의 채우기 값을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9db96c8032d2ad506db915a48cc3b65dec28661e" translate="yes" xml:space="preserve">
          <source>Set the filling value of a, if a is a masked array.</source>
          <target state="translated">a가 마스크 배열 인 경우 a의 채우기 값을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8edcc5a32149cac92ce5f5d9a420660866edfc9a" translate="yes" xml:space="preserve">
          <source>Set the floating-point error callback function or log object.</source>
          <target state="translated">부동 소수점 오류 콜백 함수 또는 로그 객체를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f50931261f78ae53e6d835ee44ec72ac16267946" translate="yes" xml:space="preserve">
          <source>Set the internal state of the generator from a tuple.</source>
          <target state="translated">튜플에서 생성기의 내부 상태를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b7c017b4e42e5916929d8c2729e2850e7861e4ad" translate="yes" xml:space="preserve">
          <source>Set the invalid floating point exception</source>
          <target state="translated">유효하지 않은 부동 소수점 예외 설정</target>
        </trans-unit>
        <trans-unit id="5fc1b5b3104040e069bf3d79bfbecde1de4a9774" translate="yes" xml:space="preserve">
          <source>Set the mask.</source>
          <target state="translated">마스크를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ddcd09abf8029d03a1fc8a1db4814b795eb053c2" translate="yes" xml:space="preserve">
          <source>Set the object that defines floating-point error handling.</source>
          <target state="translated">부동 소수점 오류 처리를 정의하는 개체를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="e125e8e413edbc9d7b60464db9303d04e73186dc" translate="yes" xml:space="preserve">
          <source>Set the overflow floating point exception</source>
          <target state="translated">오버플로 부동 소수점 예외 설정</target>
        </trans-unit>
        <trans-unit id="32771428ee3d4ac8ada5bdd6145886e45b552f86" translate="yes" xml:space="preserve">
          <source>Set the size of the buffer used in ufuncs.</source>
          <target state="translated">ufuncs에 사용되는 버퍼의 크기를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0594a866f8a04edf46179a77822269ada171c654" translate="yes" xml:space="preserve">
          <source>Set the underflow floating point exception</source>
          <target state="translated">언더 플로 부동 소수점 예외 설정</target>
        </trans-unit>
        <trans-unit id="74d19ff83e70ffb68238d34c2f7bcf87b543941d" translate="yes" xml:space="preserve">
          <source>Set treatment for all types of floating-point errors at once:</source>
          <target state="translated">한 번에 모든 유형의 부동 소수점 오류에 대한 처리를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2bacc37a23889ec714670cdfe5fecedf315b4135" translate="yes" xml:space="preserve">
          <source>Set up and configure a &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; account</source>
          <target state="translated">&lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; 계정 설정 및 구성</target>
        </trans-unit>
        <trans-unit id="934f3ab472fce7c6568b2156a158b396fb14a162" translate="yes" xml:space="preserve">
          <source>Set up and configure a github account</source>
          <target state="translated">github 계정 설정 및 구성</target>
        </trans-unit>
        <trans-unit id="24dd5663183f0705285e5e40d51d2de2774a118e" translate="yes" xml:space="preserve">
          <source>Set up your editor to follow &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;PEP 8&lt;/a&gt; (remove trailing white space, no tabs, etc.). Check code with pyflakes / flake8.</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;PEP 8&lt;/a&gt; 을 따르도록 편집기를 설정합니다 (후행 공백 제거, 탭 없음 등). pyflakes / flake8로 코드를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2f196e543f2114715612962c8d3b1c8137a2f320" translate="yes" xml:space="preserve">
          <source>Set up your fork</source>
          <target state="translated">포크 설정</target>
        </trans-unit>
        <trans-unit id="ce6b655d86b17e69eddcf3fa6cf57de4d2e9e627" translate="yes" xml:space="preserve">
          <source>Set up your repository so &lt;code&gt;git pull&lt;/code&gt; pulls from &lt;code&gt;upstream&lt;/code&gt; by default:</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; 이 기본적으로 &lt;code&gt;upstream&lt;/code&gt; 에서 가져 오도록 저장소를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3643bcad64c7deb0821dc34ea3dcd8232b0cde58" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; for each n where &lt;code&gt;mask.flat[n]==True&lt;/code&gt;.</source>
          <target state="translated">세트 &lt;code&gt;a.flat[n] = values[n]&lt;/code&gt; 각각 N 어디서 &lt;code&gt;mask.flat[n]==True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5df9a7759f3c95336d2489bfd2b71f6a63ff0e82" translate="yes" xml:space="preserve">
          <source>Sets self._data.flat[n] = values[n] for each n in indices. If &lt;code&gt;values&lt;/code&gt; is shorter than &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt; then it will repeat. If &lt;code&gt;values&lt;/code&gt; has some masked values, the initial mask is updated in consequence, else the corresponding values are unmasked.</source>
          <target state="translated">인덱스의 각 n에 대해 self._data.flat [n] = values ​​[n]을 설정합니다. 경우 &lt;code&gt;values&lt;/code&gt; 보다 짧은 &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt; 그것은 반복됩니다. &lt;code&gt;values&lt;/code&gt; 에 마스킹 된 값 이있는 경우 결과적으로 초기 마스크가 업데이트되고, 그렇지 않으면 해당 값이 마스킹 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="4b6bbd22699cc5a44aa30f4688fb3d6f05291031" translate="yes" xml:space="preserve">
          <source>Sets self._data.flat[n] = values[n] for each n in indices. If &lt;code&gt;values&lt;/code&gt; is shorter than &lt;a href=&quot;numpy.ma.indices#numpy.ma.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt; then it will repeat. If &lt;code&gt;values&lt;/code&gt; has some masked values, the initial mask is updated in consequence, else the corresponding values are unmasked.</source>
          <target state="translated">각 n에 대해 self._data.flat [n] = values ​​[n]을 인덱스로 설정합니다. 경우 &lt;code&gt;values&lt;/code&gt; 보다 짧은 &lt;a href=&quot;numpy.ma.indices#numpy.ma.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt; 그것은 반복됩니다. &lt;code&gt;values&lt;/code&gt; 에 마스킹 된 값 이 있으면 초기 마스크가 업데이트되고, 그렇지 않으면 해당 값이 마스킹되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6e37f27c4b449514c6ac39ca56b186f5e999b75a" translate="yes" xml:space="preserve">
          <source>Sets the flag represented by &lt;code&gt;f&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt;, assuming &lt;code&gt;a&lt;/code&gt; can be cast to a &lt;code&gt;PyArrayObject*&lt;/code&gt;.</source>
          <target state="translated">세트는 플래그로 표시 &lt;code&gt;f&lt;/code&gt; 의 가정 (A)에있을 수 캐스트 &lt;code&gt;PyArrayObject*&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d60b0890a431be3750d67b0f7fe70b5f3af16d7e" translate="yes" xml:space="preserve">
          <source>Setting Up</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="adf72c83614ca687d6f697b1bf172e89b7086997" translate="yes" xml:space="preserve">
          <source>Setting and getting error handling</source>
          <target state="translated">오류 처리 설정 및 가져 오기</target>
        </trans-unit>
        <trans-unit id="81151f889bbd067b6b91cb320c1d8c0c937dceab" translate="yes" xml:space="preserve">
          <source>Setting the flag is only useful to aid with NumPy developement to ensure the new version is bug free and should be avoided for production code. It is a helpful test for projects that either create custom datatypes or use for example complicated structured dtypes. The flag is expected to be removed in 1.21 with the new version being always in use.</source>
          <target state="translated">플래그를 설정하는 것은 NumPy 개발을 지원하여 새 버전이 버그가 없는지 확인하는 데 유용하며 프로덕션 코드에서는 피해야합니다. 사용자 지정 데이터 유형을 생성하거나 복잡한 구조화 된 dtypes를 사용하는 프로젝트에 대한 유용한 테스트입니다. 플래그는 1.21에서 제거 될 예정이며 새 버전은 항상 사용 중입니다.</target>
        </trans-unit>
        <trans-unit id="07c4909ef19e3a61ad16bdd17fc70d371fda482e" translate="yes" xml:space="preserve">
          <source>Setting the names</source>
          <target state="translated">이름 설정</target>
        </trans-unit>
        <trans-unit id="a384be3e2e0c4f12be39cdfe96a41f79740f7b44" translate="yes" xml:space="preserve">
          <source>Setting the timezone to UTC shows the same information, but with a Z suffix</source>
          <target state="translated">시간대를 UTC로 설정하면 동일한 정보가 표시되지만 Z 접미사가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a9f0a4af2c6084c2784fc14b31f00dab0521ac3" translate="yes" xml:space="preserve">
          <source>Setting up</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="efe55a3c73407daa5d9341f376c5889144a52435" translate="yes" xml:space="preserve">
          <source>Setting up and using your development environment</source>
          <target state="translated">개발 환경 설정 및 사용</target>
        </trans-unit>
        <trans-unit id="aa4a226df76e5e8361726edfef50413981d0e099" translate="yes" xml:space="preserve">
          <source>Setting up git for NumPy development</source>
          <target state="translated">NumPy 개발을위한 git 설정</target>
        </trans-unit>
        <trans-unit id="b171317f32aa40176413904ea160239515ac8105" translate="yes" xml:space="preserve">
          <source>Setting up the filtering function is similar and allows the filtering function to be called with ndarray arguments as the first two arguments and with pointers to integers (large enough to handle the strides and shape of an ndarray) as the last two arguments.:</source>
          <target state="translated">필터링 함수 설정은 비슷하며 처음 두 인수로 ndarray 인수를 사용하고 마지막 두 인수로 정수 포인터 (ndarray의 보폭과 모양을 처리 할 수있을만큼 큼)를 사용하여 필터링 함수를 호출 할 수 있습니다. :</target>
        </trans-unit>
        <trans-unit id="e1d3a4c5f9d99de50e3926a4fb4bbceabef7db74" translate="yes" xml:space="preserve">
          <source>Settle on the mediator: while parties can propose a different mediator than the suggested candidate, only if common agreement is reached on all terms can the process move forward.</source>
          <target state="translated">중재자 결정 : 당사자는 제안 된 후보자와 다른 중재자를 제안 할 수 있지만 모든 조건에 대해 공통된 합의에 도달 한 경우에만 프로세스가 진행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="c91695f6ab0af4734ea0166f05bdecf2943954de" translate="yes" xml:space="preserve">
          <source>Setup and teardown functions to functions and methods are known as &amp;ldquo;fixtures&amp;rdquo;, and their use is not encouraged.</source>
          <target state="translated">기능 및 방법에 대한 설정 및 해제 기능을 &quot;고정 장치&quot;라고하며 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="badd1cce039672931750b6c398bce1ef82aaa01b" translate="yes" xml:space="preserve">
          <source>Several algorithms in NumPy work on arbitrarily strided arrays. However, some algorithms require single-segment arrays. When an irregularly strided array is passed in to such algorithms, a copy is automatically made.</source>
          <target state="translated">NumPy의 여러 알고리즘은 임의로 스트라이드 된 배열에서 작동합니다. 그러나 일부 알고리즘에는 단일 세그먼트 배열이 필요합니다. 불규칙적으로 스트라이드 된 배열이 이러한 알고리즘으로 전달되면 자동으로 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="a13457498c6c9544e67cbe90a0e9f0dc104a3d19" translate="yes" xml:space="preserve">
          <source>Several array-creation functions of the ndarray allow specification of a particular sub-type to be created. This allows sub-types to be handled seamlessly in many routines. When a sub-type is created in such a fashion, however, neither the __new__ method nor the __init__ method gets called. Instead, the sub-type is allocated and the appropriate instance-structure members are filled in. Finally, the &lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_finalize__&quot;&gt;&lt;code&gt;__array_finalize__&lt;/code&gt;&lt;/a&gt; attribute is looked-up in the object dictionary. If it is present and not None, then it can be either a CObject containing a pointer to a &lt;code&gt;PyArray_FinalizeFunc&lt;/code&gt; or it can be a method taking a single argument (which could be None).</source>
          <target state="translated">ndarray의 여러 배열 생성 기능을 사용하여 특정 하위 유형의 사양을 생성 할 수 있습니다. 이를 통해 많은 루틴에서 하위 유형을 원활하게 처리 할 수 ​​있습니다. 그러나 이러한 방식으로 하위 유형이 생성되면 __new__ 메서드도 __init__ 메서드도 호출되지 않습니다. 대신, 하위 유형이 할당되고 적절한 인스턴스 구조 멤버가 채워집니다. 마지막으로 &lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_finalize__&quot;&gt; &lt;code&gt;__array_finalize__&lt;/code&gt; &lt;/a&gt; 속성은 객체 사전에서 조회됩니다. 존재하고 None이 &lt;code&gt;PyArray_FinalizeFunc&lt;/code&gt; 대한 포인터를 포함하는 CObject 이거나 단일 인수 (None 일 수 있음)를 취하는 메서드 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee91814fe29cd50dd07cba70c00800f2c64e3183" translate="yes" xml:space="preserve">
          <source>Several arrays can be stacked together along different axes:</source>
          <target state="translated">여러 배열을 서로 다른 축을 따라 함께 쌓을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b90ce6fb4085d183a65fefb11a9d8d772bd909e" translate="yes" xml:space="preserve">
          <source>Several kinds of strings can be converted. Recognized strings can be prepended with &lt;code&gt;'&amp;gt;'&lt;/code&gt; (&lt;a href=&quot;../glossary#term-big-endian&quot;&gt;big-endian&lt;/a&gt;), &lt;code&gt;'&amp;lt;'&lt;/code&gt; (&lt;a href=&quot;../glossary#term-little-endian&quot;&gt;little-endian&lt;/a&gt;), or &lt;code&gt;'='&lt;/code&gt; (hardware-native, the default), to specify the byte order.</source>
          <target state="translated">여러 종류의 문자열을 변환 할 수 있습니다. 인식 된 문자열 앞에 &lt;code&gt;'&amp;gt;'&lt;/code&gt; ( &lt;a href=&quot;../glossary#term-big-endian&quot;&gt;big-endian&lt;/a&gt; ), &lt;code&gt;'&amp;lt;'&lt;/code&gt; ( &lt;a href=&quot;../glossary#term-little-endian&quot;&gt;little-endian&lt;/a&gt; ) 또는 &lt;code&gt;'='&lt;/code&gt; (하드웨어 네이티브, 기본값)를 추가하여 바이트 순서를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="feb6d874b888999df457d285f3a6f7b3c564b09d" translate="yes" xml:space="preserve">
          <source>Several kinds of strings can be converted. Recognized strings can be prepended with &lt;code&gt;'&amp;gt;'&lt;/code&gt; (&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-big-endian&quot;&gt;big-endian&lt;/a&gt;), &lt;code&gt;'&amp;lt;'&lt;/code&gt; (&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-little-endian&quot;&gt;little-endian&lt;/a&gt;), or &lt;code&gt;'='&lt;/code&gt; (hardware-native, the default), to specify the byte order.</source>
          <target state="translated">여러 종류의 문자열을 변환 할 수 있습니다. 인식 된 문자열 앞에 &lt;code&gt;'&amp;gt;'&lt;/code&gt; ( &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-big-endian&quot;&gt;big-endian&lt;/a&gt; ), &lt;code&gt;'&amp;lt;'&lt;/code&gt; ( &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-little-endian&quot;&gt;little-endian&lt;/a&gt; ) 또는 &lt;code&gt;'='&lt;/code&gt; (hardware-native, 기본값)을 앞에 붙여 바이트 순서를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85d6a2092d89a65e46012bf0996318aa5023e324" translate="yes" xml:space="preserve">
          <source>Several new types are defined in the C-code. Most of these are accessible from Python, but a few are not exposed due to their limited use. Every new Python type has an associated &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; with an internal structure that includes a pointer to a &amp;ldquo;method table&amp;rdquo; that defines how the new object behaves in Python. When you receive a Python object into C code, you always get a pointer to a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure. Because a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure is very generic and defines only &lt;a href=&quot;#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt;, by itself it is not very interesting. However, different objects contain more details after the &lt;a href=&quot;#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt; (but you have to cast to the correct type to access them &amp;mdash; or use accessor functions or macros).</source>
          <target state="translated">몇 가지 새로운 유형이 C 코드에 정의되어 있습니다. 이들 중 대부분은 Python에서 액세스 할 수 있지만 일부는 제한된 사용으로 인해 노출되지 않습니다. 모든 새 Python 유형에는 새 개체가 Python에서 작동하는 방식을 정의하는 &quot;메서드 테이블&quot;에 대한 포인터를 포함하는 내부 구조와 연결된 &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt; 가 있습니다. Python 객체를 C 코드로 수신하면 항상 &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt; 구조에 대한 포인터를 얻습니다 . &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt; 구조는 매우 일반적이고 &lt;a href=&quot;#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; &lt;/a&gt; 만 정의 하기 때문에 그 자체 로는 별로 흥미롭지 않습니다. 그러나 다른 객체는 &lt;a href=&quot;#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; &lt;/a&gt; 뒤에 더 많은 세부 정보를 포함합니다 (하지만 액세스하려면 올바른 유형으로 캐스트해야합니다. 또는 접근 자 함수 또는 매크로를 사용해야합니다).</target>
        </trans-unit>
        <trans-unit id="ea3e5d75b76acbd893a6d1a1cc411aeb6e8d344d" translate="yes" xml:space="preserve">
          <source>Several new types are defined in the C-code. Most of these are accessible from Python, but a few are not exposed due to their limited use. Every new Python type has an associated &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; with an internal structure that includes a pointer to a &amp;ldquo;method table&amp;rdquo; that defines how the new object behaves in Python. When you receive a Python object into C code, you always get a pointer to a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure. Because a &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure is very generic and defines only &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt;, by itself it is not very interesting. However, different objects contain more details after the &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt;&lt;code&gt;PyObject_HEAD&lt;/code&gt;&lt;/a&gt; (but you have to cast to the correct type to access them &amp;mdash; or use accessor functions or macros).</source>
          <target state="translated">C 코드에는 몇 가지 새로운 유형이 정의되어 있습니다. 이들 중 대부분은 Python에서 액세스 할 수 있지만 일부는 제한적으로 사용되어 노출되지 않습니다. 모든 새로운 파이썬 타입은 &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt; 와 연관 되어 있는데, 내부 구조는 파이썬에서 새로운 객체의 동작 방식을 정의하는 &quot;메소드 테이블&quot;에 대한 포인터를 포함합니다. 파이썬 객체를 C 코드로 받으면 항상 &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt; 구조에 대한 포인터를 얻습니다 . &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt; 구조는 매우 일반적이며 &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; &lt;/a&gt; 만 정의 하기 때문에 그다지 흥미롭지 않습니다. 그러나 &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject_HEAD&quot;&gt; &lt;code&gt;PyObject_HEAD&lt;/code&gt; &lt;/a&gt; 다음에 다른 객체에 대한 자세한 내용이 포함되어 있습니다. 그러나 액세스하려면 올바른 유형으로 캐스팅하거나 접근 자 함수 또는 매크로를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="8baf8c262d837f958d6464df64e5309968744eec" translate="yes" xml:space="preserve">
          <source>Several of the linear algebra routines listed above are able to compute results for several matrices at once, if they are stacked into the same array.</source>
          <target state="translated">위에 나열된 여러 선형 대수 루틴은 동일한 행렬에 쌓이면 여러 행렬에 대한 결과를 한 번에 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dacd729f87ab003204bc2cd8332b6cc4d854b19" translate="yes" xml:space="preserve">
          <source>Several people sharing a single repository</source>
          <target state="translated">여러 사람이 단일 저장소를 공유</target>
        </trans-unit>
        <trans-unit id="72b4a9a262fa7d17e9ac09d705cde6aa24c8773a" translate="yes" xml:space="preserve">
          <source>Several python types are equivalent to a corresponding array scalar when used to generate a &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; 객체 를 생성하는 데 사용되는 여러 파이썬 유형은 해당 배열 스칼라와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d8d57e382f3991d452f308a37f4d81577154ad54" translate="yes" xml:space="preserve">
          <source>Several sentences providing an extended description. Refer to variables using back-ticks, e.g. &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">자세한 설명을 제공하는 여러 문장. 역틱을 사용하는 변수를 참조하십시오 (예 : &lt;code&gt;var&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="1600b8c8e0cd3be2f37da02262f382de60b6f611" translate="yes" xml:space="preserve">
          <source>Sexist, racist, or otherwise discriminatory jokes and language.</source>
          <target state="translated">성 차별, 인종 차별 또는 기타 차별적 인 농담 및 언어.</target>
        </trans-unit>
        <trans-unit id="6c3e28ff5f28439895ee75d4f683fd40b7b5c1c1" translate="yes" xml:space="preserve">
          <source>Shape (length along each transformed axis) to use from the input. (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). The final element of &lt;code&gt;s&lt;/code&gt; corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;rfft(x, n)&lt;/code&gt;, while for the remaining axes, it corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;fft(x, n)&lt;/code&gt;. Along any axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">입력에서 사용할 모양 (각 변환 된 축을 따른 길이)입니다. ( &lt;code&gt;s[0]&lt;/code&gt; 은 축 0, &lt;code&gt;s[1]&lt;/code&gt; -축 1 등을 나타냅니다.) 의 최종 요소 &lt;code&gt;s&lt;/code&gt; 에 대응하는 &lt;code&gt;n&lt;/code&gt; 대 &lt;code&gt;rfft(x, n)&lt;/code&gt; , 나머지 축에있는 동안, 그것이에 대응 &lt;code&gt;n&lt;/code&gt; 에 대해 &lt;code&gt;fft(x, n)&lt;/code&gt; . 축을 따라 주어진 모양이 입력의 모양보다 작 으면 입력이 잘립니다. 더 큰 경우 입력이 0으로 채워집니다. 만약 &lt;code&gt;s&lt;/code&gt; 주어지지 의해 지정된 축을 따라 상기 입력의 형상 &lt;code&gt;axes&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="25e97af4557ebd95034e25fa1946abe7364f73b7" translate="yes" xml:space="preserve">
          <source>Shape (length of each axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;ifft(x, n)&lt;/code&gt;. Along each axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used. See notes for issue on &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt; zero padding.</source>
          <target state="translated">출력의 모양 (각 축의 길이) ( &lt;code&gt;s[0]&lt;/code&gt; 은 축 0, &lt;code&gt;s[1]&lt;/code&gt; -축 1 등을 나타냄) 이것은에 대응하는 &lt;code&gt;n&lt;/code&gt; 에 대한 &lt;code&gt;ifft(x, n)&lt;/code&gt; . 각 축을 따라 주어진 모양이 입력의 모양보다 작 으면 입력이 잘립니다. 더 큰 경우 입력이 0으로 채워집니다. 만약 &lt;code&gt;s&lt;/code&gt; 주어지지 의해 지정된 축을 따라 상기 입력의 형상 &lt;code&gt;axes&lt;/code&gt; 사용된다. &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt; zero padding 문제에 대한 참고 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f0274375e7f902c51299d209c86d1f430d2633d" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). &lt;code&gt;s&lt;/code&gt; is also the number of input points used along this axis, except for the last axis, where &lt;code&gt;s[-1]//2+1&lt;/code&gt; points of the input are used. Along any axis, if the shape indicated by &lt;code&gt;s&lt;/code&gt; is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">출력의 모양 (각 변환 된 축의 길이) ( &lt;code&gt;s[0]&lt;/code&gt; 은 축 0, &lt;code&gt;s[1]&lt;/code&gt; -축 1 등을 나타냄) &lt;code&gt;s&lt;/code&gt; 는 입력 &lt;code&gt;s[-1]//2+1&lt;/code&gt; 포인트가 사용되는 마지막 축을 제외하고이 축을 따라 사용 된 입력 포인트의 수입니다 . 축을 따라 &lt;code&gt;s&lt;/code&gt; 로 표시된 모양 이 입력 의 모양 보다 작 으면 입력이 잘립니다. 더 큰 경우 입력이 0으로 채워집니다. 경우 &lt;code&gt;s&lt;/code&gt; 제공되지 의해 지정된 축을 따라 상기 입력의 형상 &lt;code&gt;axes&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="4c31ca7f114595ee4198765b2a8eb90c036202b2" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). &lt;code&gt;s&lt;/code&gt; is also the number of input points used along this axis, except for the last axis, where &lt;code&gt;s[-1]//2+1&lt;/code&gt; points of the input are used. Along any axis, if the shape indicated by &lt;code&gt;s&lt;/code&gt; is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by axes is used. Except for the last axis which is taken to be &lt;code&gt;2*(m-1)&lt;/code&gt; where &lt;code&gt;m&lt;/code&gt; is the length of the input along that axis.</source>
          <target state="translated">출력의 모양 (변환 된 각 축의 길이) ( &lt;code&gt;s[0]&lt;/code&gt; 은 축 0, &lt;code&gt;s[1]&lt;/code&gt; 에서 축 1 등). &lt;code&gt;s&lt;/code&gt; 는 입력 &lt;code&gt;s[-1]//2+1&lt;/code&gt; 포인트가 사용되는 마지막 축을 제외하고이 축을 따라 사용 된 입력 포인트의 수이기도합니다 . 축을 따라 &lt;code&gt;s&lt;/code&gt; 로 표시된 모양 이 입력 의 모양 보다 작 으면 입력이 잘립니다. 더 크면 입력이 0으로 채워집니다. 경우 &lt;code&gt;s&lt;/code&gt; 주어지지 않는, 축에 의해 규정 된 축을 따라 상기 입력의 형태가 사용된다. 를 보낸다 마지막 축 제외한 &lt;code&gt;2*(m-1)&lt;/code&gt; &lt;code&gt;m&lt;/code&gt; 그 축을 따라 입력의 길이이다.</target>
        </trans-unit>
        <trans-unit id="715197f23d8523982bbe5b136ca8694c043fdfe2" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;fft(x, n)&lt;/code&gt;. Along any axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">출력의 모양 (각 변환 된 축의 길이) ( &lt;code&gt;s[0]&lt;/code&gt; 은 축 0, &lt;code&gt;s[1]&lt;/code&gt; -축 1 등을 나타냄) 이것은에 대응하는 &lt;code&gt;n&lt;/code&gt; 에 대한 &lt;code&gt;fft(x, n)&lt;/code&gt; . 축을 따라 주어진 모양이 입력의 모양보다 작 으면 입력이 잘립니다. 더 큰 경우 입력이 0으로 채워집니다. 만약 &lt;code&gt;s&lt;/code&gt; 주어지지 의해 지정된 축을 따라 상기 입력의 형상 &lt;code&gt;axes&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="911dd842dd5fbba1fec3b25f55cac11209b63564" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;fft(x, n)&lt;/code&gt;. Along each axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used.</source>
          <target state="translated">출력의 모양 (각 변환 된 축의 길이) ( &lt;code&gt;s[0]&lt;/code&gt; 은 축 0, &lt;code&gt;s[1]&lt;/code&gt; -축 1 등을 나타냄) 이것은에 대응하는 &lt;code&gt;n&lt;/code&gt; 에 대한 &lt;code&gt;fft(x, n)&lt;/code&gt; . 각 축을 따라 주어진 모양이 입력의 모양보다 작 으면 입력이 잘립니다. 더 큰 경우 입력이 0으로 채워집니다. 만약 &lt;code&gt;s&lt;/code&gt; 주어지지 의해 지정된 축을 따라 상기 입력의 형상 &lt;code&gt;axes&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="b17262b4844364ff0a648b69b2dd5889d0fd6ded" translate="yes" xml:space="preserve">
          <source>Shape (length of each transformed axis) of the output (&lt;code&gt;s[0]&lt;/code&gt; refers to axis 0, &lt;code&gt;s[1]&lt;/code&gt; to axis 1, etc.). This corresponds to &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;ifft(x, n)&lt;/code&gt;. Along any axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if &lt;code&gt;s&lt;/code&gt; is not given, the shape of the input along the axes specified by &lt;code&gt;axes&lt;/code&gt; is used. See notes for issue on &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt; zero padding.</source>
          <target state="translated">출력의 모양 (각 변환 된 축의 길이) ( &lt;code&gt;s[0]&lt;/code&gt; 은 축 0, &lt;code&gt;s[1]&lt;/code&gt; -축 1 등을 나타냄) 이것은에 대응하는 &lt;code&gt;n&lt;/code&gt; 에 대한 &lt;code&gt;ifft(x, n)&lt;/code&gt; . 축을 따라 주어진 모양이 입력의 모양보다 작 으면 입력이 잘립니다. 더 큰 경우 입력이 0으로 채워집니다. 만약 &lt;code&gt;s&lt;/code&gt; 주어지지 의해 지정된 축을 따라 상기 입력의 형상 &lt;code&gt;axes&lt;/code&gt; 사용된다. &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt; zero padding 문제에 대한 참고 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ebeb877c0987d74b5cc7ea4944124e8bf55dfce" translate="yes" xml:space="preserve">
          <source>Shape Manipulation</source>
          <target state="translated">모양 조작</target>
        </trans-unit>
        <trans-unit id="c9f4b98b8edf5592548ab5955c6e16a228f358cb" translate="yes" xml:space="preserve">
          <source>Shape consistent means they are either the same shape, or one input array can be broadcasted to create the same shape as the other one.</source>
          <target state="translated">모양 일관성은 동일한 모양이거나 하나의 입력 배열을 브로드 캐스트하여 다른 모양과 동일한 모양을 만들 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="5f1d9e046d241980c89d8b9124d4eafb15b1ca52" translate="yes" xml:space="preserve">
          <source>Shape manipulation</source>
          <target state="translated">모양 조작</target>
        </trans-unit>
        <trans-unit id="3b6ca0ce8b60b462e3cf99cb12bf59179d6a929d" translate="yes" xml:space="preserve">
          <source>Shape of broadcasted result.</source>
          <target state="translated">방송 결과의 모양.</target>
        </trans-unit>
        <trans-unit id="bddad57d8d1388e963005420a02793b2da427fb5" translate="yes" xml:space="preserve">
          <source>Shape of created array.</source>
          <target state="translated">생성 된 배열의 모양입니다.</target>
        </trans-unit>
        <trans-unit id="818a25b0afe1b04d91a3db71658f37d35b630552" translate="yes" xml:space="preserve">
          <source>Shape of each array.</source>
          <target state="translated">각 배열의 모양.</target>
        </trans-unit>
        <trans-unit id="6cd9e448195effa4bae30eb0f347906fc449b5d5" translate="yes" xml:space="preserve">
          <source>Shape of output array.</source>
          <target state="translated">출력 배열의 모양.</target>
        </trans-unit>
        <trans-unit id="46e7814f1b68d56a7fb197281826d8c0d7e2f4af" translate="yes" xml:space="preserve">
          <source>Shape of resized array.</source>
          <target state="translated">크기가 조정 된 배열의 모양입니다.</target>
        </trans-unit>
        <trans-unit id="ee903849125469d0cd897ee6f3eb2ebe3bb658c4" translate="yes" xml:space="preserve">
          <source>Shape of the FFT.</source>
          <target state="translated">FFT의 모양.</target>
        </trans-unit>
        <trans-unit id="93a4d2c249aa77d74ddbee4b73894079d88c4f5d" translate="yes" xml:space="preserve">
          <source>Shape of the array.</source>
          <target state="translated">배열의 모양.</target>
        </trans-unit>
        <trans-unit id="02877fc62d2c6f24e10d1abc3b67c8004f59d738" translate="yes" xml:space="preserve">
          <source>Shape of the distribution. Must be positive.</source>
          <target state="translated">분포의 모양. 긍정적이어야합니다.</target>
        </trans-unit>
        <trans-unit id="f2d500bd962f41d17541e213ff6895cd13e0803e" translate="yes" xml:space="preserve">
          <source>Shape of the empty array, e.g., &lt;code&gt;(2, 3)&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">빈 배열, 예를 들어,의 모양 &lt;code&gt;(2, 3)&lt;/code&gt; 또는 &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24ef6c437154658151fd05bcb5ba7d5668bdcc5d" translate="yes" xml:space="preserve">
          <source>Shape of the empty matrix.</source>
          <target state="translated">빈 행렬의 모양입니다.</target>
        </trans-unit>
        <trans-unit id="655648f0fa12f5cdf873e10745fb89b0bd95696d" translate="yes" xml:space="preserve">
          <source>Shape of the inverse FFT.</source>
          <target state="translated">역 FFT의 모양.</target>
        </trans-unit>
        <trans-unit id="3199c5dcca84fd372c42321d02949f1a124a4434" translate="yes" xml:space="preserve">
          <source>Shape of the matrix</source>
          <target state="translated">매트릭스의 모양</target>
        </trans-unit>
        <trans-unit id="c98d12cd91ff402d167f61e45930510176bc8db1" translate="yes" xml:space="preserve">
          <source>Shape of the new array, e.g., &lt;code&gt;(2, 3)&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">새로운 배열, 예를 들면, 모양 &lt;code&gt;(2, 3)&lt;/code&gt; 또는 &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="011eae76336380495ec0325c87bbf97467274627" translate="yes" xml:space="preserve">
          <source>Shape of the output array, which also determines the shape of the coordinate arrays passed to &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">출력 배열의 모양 . &lt;code&gt;function&lt;/code&gt; 에 전달 된 좌표 배열의 모양도 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="c07147cdf3a1896289324d57eac09581fa428dd6" translate="yes" xml:space="preserve">
          <source>Shape of the output. If given as N integers, each integer specifies the size of one dimension. If given as a tuple, this tuple gives the complete shape.</source>
          <target state="translated">출력 형태. N 개의 정수로 지정된 경우 각 정수는 1 차원의 크기를 지정합니다. 튜플로 제공된 경우이 튜플은 완전한 모양을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f87637ff96718f6c6acc84960eb8149c37e2f7dc" translate="yes" xml:space="preserve">
          <source>Shape of the real output to the inverse FFT.</source>
          <target state="translated">역 FFT에 대한 실제 출력의 모양.</target>
        </trans-unit>
        <trans-unit id="af9d8afd8fa749d8e52d9830aee69713b28d831e" translate="yes" xml:space="preserve">
          <source>Shape of the required MaskedArray.</source>
          <target state="translated">필요한 MaskedArray의 모양입니다.</target>
        </trans-unit>
        <trans-unit id="f193325063386f8670f6bce639fd004cd8504ab4" translate="yes" xml:space="preserve">
          <source>Shape of the resulting array. If not provided, inferred from &lt;code&gt;arrayList[0]&lt;/code&gt;.</source>
          <target state="translated">결과 배열의 모양. 제공되지 않으면 &lt;code&gt;arrayList[0]&lt;/code&gt; 에서 유추됩니다 .</target>
        </trans-unit>
        <trans-unit id="e290412db84643bfd2e4e9eaed5764c99448847e" translate="yes" xml:space="preserve">
          <source>Shape parameter for the distribution. Must be in the range (0, 1).</source>
          <target state="translated">분포에 대한 형상 모수. (0, 1) 범위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="83905d9bb159cfd69b777f36625de825a5e41d49" translate="yes" xml:space="preserve">
          <source>Shape parameter for window.</source>
          <target state="translated">창의 모양 매개 변수.</target>
        </trans-unit>
        <trans-unit id="9b7a43cf04b72cc2f8a23566b289e4d0bd8ec177" translate="yes" xml:space="preserve">
          <source>Shape parameter of the distribution. Must be nonnegative.</source>
          <target state="translated">분포의 모양 모수. 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="8e3c6edf56bb87890fd0d1cdb08c97f69b223d25" translate="yes" xml:space="preserve">
          <source>Shape tuple of the sub-array if this data type describes a sub-array, and &lt;code&gt;()&lt;/code&gt; otherwise.</source>
          <target state="translated">이 데이터 유형이 하위 배열을 설명하는 경우 하위 배열의 모양 튜플, 그렇지 않으면 &lt;code&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="446e2a7d2369f9d1a3b2488394691efa0754afe6" translate="yes" xml:space="preserve">
          <source>Shape tuple, the shape of the iterator.</source>
          <target state="translated">튜플, 반복자의 모양.</target>
        </trans-unit>
        <trans-unit id="97199b837363f72dd4350eb91690dc95c41183ea" translate="yes" xml:space="preserve">
          <source>Shape, axis and array properties</source>
          <target state="translated">모양, 축 및 배열 속성</target>
        </trans-unit>
        <trans-unit id="4737472ac1933c52f0c3cc2cfc96a958bfe52820" translate="yes" xml:space="preserve">
          <source>Shape-1 fields in dtypes won&amp;rsquo;t be collapsed to scalars in a future version</source>
          <target state="translated">dtypes의 Shape-1 필드는 향후 버전에서 스칼라로 축소되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="553abfec4e1a448d4b14d3d81794f14b5ad2fe5b" translate="yes" xml:space="preserve">
          <source>Share status of the mask (read-only).</source>
          <target state="translated">마스크의 공유 상태 (읽기 전용).</target>
        </trans-unit>
        <trans-unit id="0623dae016dff8efe16121fd71d3922aed43e23d" translate="yes" xml:space="preserve">
          <source>Sharing private content, such as emails sent privately or non-publicly, or unlogged forums such as IRC channel history, without the sender&amp;rsquo;s consent.</source>
          <target state="translated">발신자의 동의없이 비공개 또는 비공개로 전송 된 이메일과 같은 비공개 콘텐츠 또는 IRC 채널 기록과 같은 로그되지 않은 포럼 공유.</target>
        </trans-unit>
        <trans-unit id="7c87de531eb450c69f475f1cc68cfb4c95a8aa3e" translate="yes" xml:space="preserve">
          <source>Shift the bits of an integer to the left.</source>
          <target state="translated">정수 비트를 왼쪽으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="2f8deb45beae3abccb987abecafce17d01cca0db" translate="yes" xml:space="preserve">
          <source>Shift the bits of an integer to the right.</source>
          <target state="translated">정수 비트를 오른쪽으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="4b62e14d6acb41a9881dd5c7d1b632d11117bf42" translate="yes" xml:space="preserve">
          <source>Shift the zero-frequency component only along the second axis:</source>
          <target state="translated">제로 주파수 구성 요소를 두 번째 축을 따라 만 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="dd4356118ce17af4ac61d8e18b734f9c851e6a93" translate="yes" xml:space="preserve">
          <source>Shift the zero-frequency component to the center of the spectrum.</source>
          <target state="translated">영 주파수 성분을 스펙트럼 중심으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="5055dc1fca0e758173b975d01eb66d87f3cbb17c" translate="yes" xml:space="preserve">
          <source>Shift zero-frequency component to the center of the spectrum.</source>
          <target state="translated">영 주파수 성분을 스펙트럼의 중심으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b180ab3848496fb12e866c104e23d82cd3b364fd" translate="yes" xml:space="preserve">
          <source>Shifts zero-frequency terms to centre of array</source>
          <target state="translated">제로 주파수 항을 배열 중심으로 이동</target>
        </trans-unit>
        <trans-unit id="277215a3b406656029fa8041449bf3521c519abc" translate="yes" xml:space="preserve">
          <source>Shifts zero-frequency terms to the center of the array. For two-dimensional input, swaps first and third quadrants, and second and fourth quadrants.</source>
          <target state="translated">주파수가없는 항을 배열의 중심으로 이동합니다. 2 차원 입력의 경우, 1 사분면과 3 사분면, 2 사분면과 4 사분면을 교체합니다.</target>
        </trans-unit>
        <trans-unit id="609f71722b1e0b0ddda63eb0a8662f11ffaacc20" translate="yes" xml:space="preserve">
          <source>Short answer</source>
          <target state="translated">짧은 대답</target>
        </trans-unit>
        <trans-unit id="b762aac578ae466a940477f419de45f5524873a7" translate="yes" xml:space="preserve">
          <source>Short repeat rule</source>
          <target state="translated">짧은 반복 규칙</target>
        </trans-unit>
        <trans-unit id="9d55add28a10423436ae7204b8967feb872c3c9b" translate="yes" xml:space="preserve">
          <source>Shortcut functions</source>
          <target state="translated">바로 가기 기능</target>
        </trans-unit>
        <trans-unit id="82df73654f5b2a3f44b1124d8173803e26dbe857" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;masked_where&lt;/code&gt;, where &lt;code&gt;condition&lt;/code&gt; is True for &lt;code&gt;x&lt;/code&gt; inside the interval [v1,v2] (v1 &amp;lt;= x &amp;lt;= v2). The boundaries &lt;code&gt;v1&lt;/code&gt; and &lt;code&gt;v2&lt;/code&gt; can be given in either order.</source>
          <target state="translated">바로 가기 &lt;code&gt;masked_where&lt;/code&gt; , &lt;code&gt;condition&lt;/code&gt; 도 마찬가지이다 &lt;code&gt;x&lt;/code&gt; 의 간격 [V1, V2 (V1 &amp;lt;= X &amp;lt;= V2) 내부. 경계 &lt;code&gt;v1&lt;/code&gt; 과 &lt;code&gt;v2&lt;/code&gt; 는 어느 순서 로나 주어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b41646ab781bb52f3ec916c5f5214e0562ccf8b" translate="yes" xml:space="preserve">
          <source>Shortcut to &lt;code&gt;masked_where&lt;/code&gt;, where &lt;code&gt;condition&lt;/code&gt; is True for &lt;code&gt;x&lt;/code&gt; outside the interval [v1,v2] (x &amp;lt; v1)|(x &amp;gt; v2). The boundaries &lt;code&gt;v1&lt;/code&gt; and &lt;code&gt;v2&lt;/code&gt; can be given in either order.</source>
          <target state="translated">바로 가기 &lt;code&gt;masked_where&lt;/code&gt; , &lt;code&gt;condition&lt;/code&gt; 도 마찬가지이다 &lt;code&gt;x&lt;/code&gt; 의 간격 [V1, V2 (X 외부 &amp;lt;V1) | (x&amp;gt; V2). 경계 &lt;code&gt;v1&lt;/code&gt; 과 &lt;code&gt;v2&lt;/code&gt; 는 어느 순서 로나 주어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ced5f0ef00997398994de090b892574d2e91c8dd" translate="yes" xml:space="preserve">
          <source>Should comments be added, or rather removed as unhelpful or extraneous?</source>
          <target state="translated">댓글을 추가해야합니까, 아니면 도움이되지 않거나 관련없는 것으로 제거해야합니까?</target>
        </trans-unit>
        <trans-unit id="acdc204ec7aab16219e80f4999281b4fbb5c2edb" translate="yes" xml:space="preserve">
          <source>Should variable names be improved for clarity or consistency?</source>
          <target state="translated">명확성 또는 일관성을 위해 변수 이름을 개선해야합니까?</target>
        </trans-unit>
        <trans-unit id="90a7ea5e6af4c7b7105e0bea7e0631a8b326d3c4" translate="yes" xml:space="preserve">
          <source>Show how an extreme value distribution can arise from a Gaussian process and compare to a Gaussian:</source>
          <target state="translated">가우스 프로세스에서 극단적 인 값 분포가 발생하고 가우시안과 비교할 수있는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b56794a666b325c7452f614533fd9e51fb479063" translate="yes" xml:space="preserve">
          <source>Show libraries in the system on which NumPy was built.</source>
          <target state="translated">NumPy가 구축 된 시스템의 라이브러리를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="19b965e86e175fb4e059f2686baef10d13deee7c" translate="yes" xml:space="preserve">
          <source>Show the coefficient of the k-th power in the polynomial (which is equivalent to &lt;code&gt;p.c[-(i+1)]&lt;/code&gt;):</source>
          <target state="translated">다항식에서 k 번째 거듭 제곱의 계수를 표시합니다 ( &lt;code&gt;p.c[-(i+1)]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2dc1d2c7e18782c1b84edd4a515e52ecaf16ffe6" translate="yes" xml:space="preserve">
          <source>Show the coefficients:</source>
          <target state="translated">계수를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="196a4e0eff8a41440049d47c5b180f7f45132ca2" translate="yes" xml:space="preserve">
          <source>Show which elements are NaN.</source>
          <target state="translated">NaN 인 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c42d9c8bf1bc36b5a64f8cd7d6ec47959c633d86" translate="yes" xml:space="preserve">
          <source>Show which elements are not NaN or +/-inf.</source>
          <target state="translated">NaN 또는 +/- inf가 아닌 요소를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="1722f8e8697cd3b5c7fd5053f2fe5fc8ffff0c94" translate="yes" xml:space="preserve">
          <source>Showing the shape equivalence:</source>
          <target state="translated">모양 동등성을 표시 :</target>
        </trans-unit>
        <trans-unit id="78c27257780bd2122b57fd1c62035f0e4e503ed6" translate="yes" xml:space="preserve">
          <source>Shown commented is the &lt;code&gt;cython.boundscheck&lt;/code&gt; decorator, which turns bounds-checking for memory view accesses on or off on a per-function basis. We can use this to further speed up our code, at the expense of safety (or a manual check prior to entering the loop).</source>
          <target state="translated">설명 된 것은 &lt;code&gt;cython.boundscheck&lt;/code&gt; 데코레이터로, 함수별로 메모리 뷰 액세스에 대한 경계 검사를 켜거나 끕니다. 이를 사용하여 안전을 희생하여 코드 속도를 더 높일 수 있습니다 (또는 루프에 들어가기 전에 수동 확인).</target>
        </trans-unit>
        <trans-unit id="f7b90b8e09428e6e1e81258972869d09b4e3cfb5" translate="yes" xml:space="preserve">
          <source>Shows which elements are Not a Number (NaN).</source>
          <target state="translated">숫자가 아닌 요소 (NaN)를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="fe897f37d53e4d88b6771d092e29d0cbef83871f" translate="yes" xml:space="preserve">
          <source>Shows which elements are finite (not NaN, not infinity)</source>
          <target state="translated">유한 한 요소 표시 (무한대가 아닌 NaN 아님)</target>
        </trans-unit>
        <trans-unit id="7baa9edf65ea714b6abdb42e0d551c9f633b7a31" translate="yes" xml:space="preserve">
          <source>Shows which elements are negative infinity.</source>
          <target state="translated">음의 무한대 인 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="8a9af7136c0a378e79ffd9025ff0d52b52f3f5b3" translate="yes" xml:space="preserve">
          <source>Shows which elements are neither NaN nor infinity.</source>
          <target state="translated">NaN 또는 무한대가 아닌 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b641e3652a21af65f93f39772715d39737df1101" translate="yes" xml:space="preserve">
          <source>Shows which elements are positive infinity.</source>
          <target state="translated">양의 무한대 인 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="cae71eb0e9768c0464ac97199ab347f3e2d0b2fa" translate="yes" xml:space="preserve">
          <source>Shows which elements are positive or negative infinity.</source>
          <target state="translated">양수 또는 음수 무한대 인 요소를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="fb36ed0dc4329ccc9a4d63a4ab49050cba7729e3" translate="yes" xml:space="preserve">
          <source>Shrinking an array: array is flattened (in the order that the data are stored in memory), resized, and reshaped:</source>
          <target state="translated">배열 축소 : 배열이 평평 해지고 (데이터가 메모리에 저장되는 순서대로) 크기가 조정되고 모양이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="58c6f54429dd2870d35a18395965f5a1b38823a8" translate="yes" xml:space="preserve">
          <source>Shuffle the rows of &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 행을 섞습니다 .</target>
        </trans-unit>
        <trans-unit id="44d7d0d72aadcc192ac3995e5b56c0102f7a1b89" translate="yes" xml:space="preserve">
          <source>Shuffling non-NumPy sequences</source>
          <target state="translated">비 NumPy 시퀀스 셔플</target>
        </trans-unit>
        <trans-unit id="57d924a0266c81fc54add4584a1ccacbe3e83546" translate="yes" xml:space="preserve">
          <source>Signals to nose that this function is or is not a test.</source>
          <target state="translated">이 기능이 테스트인지 여부를 코에 알립니다.</target>
        </trans-unit>
        <trans-unit id="2f32be1dc74166373c988ec03b0bd86f0a576919" translate="yes" xml:space="preserve">
          <source>Signature</source>
          <target state="translated">Signature</target>
        </trans-unit>
        <trans-unit id="cdb0058a181250a9ed3dc6baaf33739c00830333" translate="yes" xml:space="preserve">
          <source>Signature file</source>
          <target state="translated">서명 파일</target>
        </trans-unit>
        <trans-unit id="48c25274f2c6a3a31b614cf30d6e68f12adabdbb" translate="yes" xml:space="preserve">
          <source>Signature files may contain arbitrary Fortran code (so that Fortran codes can be considered as signature files). F2PY silently ignores Fortran constructs that are irrelevant for creating the interface. However, this includes also syntax errors. So, be careful not making ones ;-).</source>
          <target state="translated">서명 파일에는 임의의 Fortran 코드가 포함될 수 있습니다 (Fortran 코드는 서명 파일로 간주 될 수 있음). F2PY는 인터페이스 생성과 관련이없는 Fortran 구조를 자동으로 무시합니다. 그러나 여기에는 구문 오류도 포함됩니다. 그래서, 만들지 않도록 조심하십시오 ;-).</target>
        </trans-unit>
        <trans-unit id="2556fe3e1954aac2c0d596053d8410a59d32ec25" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;char&lt;/code&gt; 와 호환되는 부호있는 정수 유형 .</target>
        </trans-unit>
        <trans-unit id="1ed4ffba395cdc78a06bc8aef22d52feeb9ef587" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;int&lt;/code&gt; 와 호환되는 부호있는 정수 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="2df765a1d1b4bfd63f3eef6c165d9bac728dd845" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;long long&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;long long&lt;/code&gt; 과 호환되는 부호있는 정수 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="e8c3ddadee8eb882f252acb34d3759790567639b" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;short&lt;/code&gt; 와 호환되는 부호있는 정수 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="3535a51d5a67e5c7e53fbd6a214f69c4b8cd2511" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with C &lt;code&gt;unsigned long long&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;unsigned long long&lt;/code&gt; 과 호환되는 부호있는 정수 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="c6ed12d0e004eac85a220db2690db8547d7f3e1e" translate="yes" xml:space="preserve">
          <source>Signed integer type, compatible with Python &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and C &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">Python &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 및 C &lt;code&gt;long&lt;/code&gt; 과 호환되는 부호있는 정수 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="c8655a56d33a88ccca3424a80c2615a1309c9dd5" translate="yes" xml:space="preserve">
          <source>Signed integer types</source>
          <target state="translated">부호있는 정수 유형</target>
        </trans-unit>
        <trans-unit id="da359fb8c5b11d9028368f0d4871e060007c46d2" translate="yes" xml:space="preserve">
          <source>Signed zero when using divmod</source>
          <target state="translated">divmod를 사용할 때 부호있는 0</target>
        </trans-unit>
        <trans-unit id="fe5067c25ed2390437f2a3346e95bda2cae66467" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy (SVD-based).</source>
          <target state="translated">SciPy에서 유사한 기능 (SVD 기반).</target>
        </trans-unit>
        <trans-unit id="4c8f44d09da8431defcd27c477cf2b5bbabb029b" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy (but also solves the generalized eigenvalue problem).</source>
          <target state="translated">SciPy의 유사한 기능 (일반화 된 고유 값 문제도 해결 함).</target>
        </trans-unit>
        <trans-unit id="f14a4ed123dc0817aed12a4d9e25e01388c701ad" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy that also solves the generalized eigenvalue problem.</source>
          <target state="translated">일반 고유 값 문제도 해결하는 SciPy의 유사한 함수입니다.</target>
        </trans-unit>
        <trans-unit id="bb0f879da7865ee7c2e51093714874b7e0056059" translate="yes" xml:space="preserve">
          <source>Similar function in SciPy.</source>
          <target state="translated">SciPy에서 유사한 기능.</target>
        </trans-unit>
        <trans-unit id="7931cda1fe427976dc0d85722ec095e3dd727c1d" translate="yes" xml:space="preserve">
          <source>Similar function which always returns ndarrays.</source>
          <target state="translated">항상 ndarray를 반환하는 비슷한 함수입니다.</target>
        </trans-unit>
        <trans-unit id="3274df1aa677da58a67e936b08b6d01b18ae9bbb" translate="yes" xml:space="preserve">
          <source>Similar function which checks input for NaNs and Infs.</source>
          <target state="translated">NaN 및 Infs의 입력을 확인하는 비슷한 기능.</target>
        </trans-unit>
        <trans-unit id="5bfc139e101673a0040c4eaa29d6026a0cc4d777" translate="yes" xml:space="preserve">
          <source>Similar function which passes through subclasses.</source>
          <target state="translated">서브 클래스를 통과하는 비슷한 기능.</target>
        </trans-unit>
        <trans-unit id="385cb8c7bac921aa96fc7c5b5e20aadf977c2b11" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt;&lt;code&gt;PyArray_FROM_O&lt;/code&gt;&lt;/a&gt; except it can take an argument of &lt;em&gt;requirements&lt;/em&gt; indicating properties the resulting array must have. Available requirements that can be enforced are &lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_ALIGNED&quot;&gt;&lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt;&lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt;&lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_ARRAY_ENSUREARRAY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSUREARRAY&lt;/code&gt;&lt;/a&gt;. Standard combinations of flags can also be used:</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt; &lt;code&gt;PyArray_FROM_O&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 결과 배열 에 &lt;em&gt;필요한&lt;/em&gt; 속성을 나타내는 &lt;em&gt;요구 사항&lt;/em&gt; 의 인수를 취할 수 있습니다 . 적용 할 수 있습니다 가능한 요구 사항은 &lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_F_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_F_CONTIGUOUS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_ALIGNED&quot;&gt; &lt;code&gt;NPY_ARRAY_ALIGNED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt; &lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt; &lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#c.NPY_ARRAY_ENSUREARRAY&quot;&gt; &lt;code&gt;NPY_ARRAY_ENSUREARRAY&lt;/code&gt; 을&lt;/a&gt; . 표준 플래그 조합도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34e63b3cec603aed4fdc223ab142b8582483ea26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt;&lt;code&gt;PyArray_FROM_O&lt;/code&gt;&lt;/a&gt; except it can take an argument of &lt;em&gt;typenum&lt;/em&gt; specifying the type-number the returned array.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_FROM_O&quot;&gt; &lt;code&gt;PyArray_FROM_O&lt;/code&gt; &lt;/a&gt; 와 비슷 하지만 반환 된 배열의 type-number를 지정하는 &lt;em&gt;typenum&lt;/em&gt; 의 인수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ab72ded5542baece20f259b6e4f2d1ffd7e40a6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; except the data-type is specified using a typenumber. &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt;&lt;code&gt;PyArray_DescrFromType&lt;/code&gt;&lt;/a&gt; (&lt;em&gt;typenum&lt;/em&gt;) is passed directly to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt;. This macro also adds &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; to requirements if &lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt;&lt;/a&gt; is passed in as requirements.</source>
          <target state="translated">데이터 유형이 typenumber를 사용하여 지정 &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; 점을 제외하고 PyArray_FromAny 와 유사 합니다. &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt; &lt;code&gt;PyArray_DescrFromType&lt;/code&gt; &lt;/a&gt; ( &lt;em&gt;typenum&lt;/em&gt; )은 &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; 로&lt;/a&gt; 직접 전달됩니다 . 이 매크로는 추가 &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt; &lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt; 을&lt;/a&gt; 경우 요구 사항에 &lt;a href=&quot;#c.NPY_ARRAY_ENSURECOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_ENSURECOPY&lt;/code&gt; 이&lt;/a&gt; 요구 사항에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="b7795b78351922539b7bd3388bd15513fe09ab10" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.linspace&quot;&gt;&lt;code&gt;linspace&lt;/code&gt;&lt;/a&gt;, but uses a step size (instead of the number of samples).</source>
          <target state="translated">유사 &lt;a href=&quot;#numpy.linspace&quot;&gt; &lt;code&gt;linspace&lt;/code&gt; &lt;/a&gt; 하지만,이 스텝 사이즈 (대신 샘플의 수)를 사용한다.</target>
        </trans-unit>
        <trans-unit id="61b73acdf7b4aeb554b76ddf529120fdd3244e4c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.linspace&quot;&gt;&lt;code&gt;linspace&lt;/code&gt;&lt;/a&gt;, but with numbers spaced evenly on a log scale (a geometric progression).</source>
          <target state="translated">유사 &lt;a href=&quot;#numpy.linspace&quot;&gt; &lt;code&gt;linspace&lt;/code&gt; &lt;/a&gt; 하지만, 로그 스케일 (a 기하 급수적)에 균등 번호.</target>
        </trans-unit>
        <trans-unit id="b7334b28a788c204f9b851a15f23e3dc83fbe028" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.ma.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt;, but does not conserve subclass.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 하위 클래스를 보존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e0639724205f7208e357391aa44785bd18f6e10a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.ma.asarray&quot;&gt;&lt;code&gt;asarray&lt;/code&gt;&lt;/a&gt;, but conserves subclasses.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.asarray&quot;&gt; &lt;code&gt;asarray&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 서브 클래스를 보존합니다.</target>
        </trans-unit>
        <trans-unit id="52b03ff3070cbd0c331ca874c17fde9b769a2a13" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.random.RandomState.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.RandomState.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt; 와 유사하게 반 개방 간격 [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; )에만 해당되며 &lt;code&gt;high&lt;/code&gt; 가 생략 된 경우 0이 가장 낮은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="087902d07ba8ed25e8e25e39b41104a23371fa18" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.random.mtrand.RandomState.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.mtrand.RandomState.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt; 와 유사하게 , 반 개방 간격 [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; )에 대해서만 , 그리고 &lt;code&gt;high&lt;/code&gt; 를 생략 하면 0이 가장 낮은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="851925d10fb9418018f1fbd7f3551cc8b537ed0b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#numpy.random.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;#numpy.random.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt; 와 유사하게 반 개방 간격 [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; )에만 해당되며 &lt;code&gt;high&lt;/code&gt; 가 생략 된 경우 0이 가장 낮은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="bc4726691a28fbb0358d1f4f5490980be0f53a29" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt;, but does not conserve subclass.</source>
          <target state="translated">&lt;a href=&quot;numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 하위 클래스를 보존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="71b620118226b8b5ca27f915fbc164b08a1de6a3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.asarray#numpy.asarray&quot;&gt;&lt;code&gt;asarray&lt;/code&gt;&lt;/a&gt;, but conserves subclasses.</source>
          <target state="translated">&lt;a href=&quot;numpy.asarray#numpy.asarray&quot;&gt; &lt;code&gt;asarray&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 하위 클래스를 보존합니다.</target>
        </trans-unit>
        <trans-unit id="4f32836393c39ad349545e85caa88d4f0b0d4f21" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.geomspace#numpy.geomspace&quot;&gt;&lt;code&gt;geomspace&lt;/code&gt;&lt;/a&gt;, but with the end points specified as logarithms.</source>
          <target state="translated">유사 &lt;a href=&quot;numpy.geomspace#numpy.geomspace&quot;&gt; &lt;code&gt;geomspace&lt;/code&gt; &lt;/a&gt; 하지만, 대수로 지정된 엔드 포인트.</target>
        </trans-unit>
        <trans-unit id="417a17a1757a4da41cca5bee188d52bc2ed947d2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;numpy.random.random_integers#numpy.random.random_integers&quot;&gt;&lt;code&gt;random_integers&lt;/code&gt;&lt;/a&gt;, only for the half-open interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;), and 0 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;a href=&quot;numpy.random.random_integers#numpy.random.random_integers&quot;&gt; &lt;code&gt;random_integers&lt;/code&gt; &lt;/a&gt; 와 유사하게 반 개방 간격 [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; )에만 해당되며 &lt;code&gt;high&lt;/code&gt; 가 생략 된 경우 0이 가장 낮은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="9f556182c8173073bc9575354a35bd7cdcf632ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;np.copyto(arr, vals, where=mask)&lt;/code&gt;, the difference is that &lt;a href=&quot;#numpy.place&quot;&gt;&lt;code&gt;place&lt;/code&gt;&lt;/a&gt; uses the first N elements of &lt;code&gt;vals&lt;/code&gt;, where N is the number of True values in &lt;code&gt;mask&lt;/code&gt;, while &lt;a href=&quot;numpy.copyto#numpy.copyto&quot;&gt;&lt;code&gt;copyto&lt;/code&gt;&lt;/a&gt; uses the elements where &lt;code&gt;mask&lt;/code&gt; is True.</source>
          <target state="translated">유사 &lt;code&gt;np.copyto(arr, vals, where=mask)&lt;/code&gt; 의 차이, 즉 &lt;a href=&quot;#numpy.place&quot;&gt; &lt;code&gt;place&lt;/code&gt; &lt;/a&gt; 의 제 N 원소 사용 &lt;code&gt;vals&lt;/code&gt; N 됨 진정한 값의 개수이고, &lt;code&gt;mask&lt;/code&gt; 하면서 &lt;a href=&quot;numpy.copyto#numpy.copyto&quot;&gt; &lt;code&gt;copyto&lt;/code&gt; &lt;/a&gt; 요소를 사용 &lt;code&gt;mask&lt;/code&gt; 참이다.</target>
        </trans-unit>
        <trans-unit id="85182c2cf4636594ba4bb81df790d59ce12b4844" translate="yes" xml:space="preserve">
          <source>Similar to a Blackman</source>
          <target state="translated">흑인과 비슷한</target>
        </trans-unit>
        <trans-unit id="fda0ddbefcd9b950d1be64cfa40b8b4d44338564" translate="yes" xml:space="preserve">
          <source>Similar to a Hamming</source>
          <target state="translated">해밍과 유사</target>
        </trans-unit>
        <trans-unit id="e44711f2465ecfd9681ac18329e5511ea31ae57b" translate="yes" xml:space="preserve">
          <source>Similar to a Hanning</source>
          <target state="translated">해닝과 (과) 비슷한</target>
        </trans-unit>
        <trans-unit id="234d445a03f1aebf3ed4d77e0d02e9c11e9233b2" translate="yes" xml:space="preserve">
          <source>Similar to add_library, but the specified library is installed.</source>
          <target state="translated">add_library와 유사하지만 지정된 라이브러리가 설치되었습니다.</target>
        </trans-unit>
        <trans-unit id="3dfdcd8111d1084fb95920b6488396d3e8d8a393" translate="yes" xml:space="preserve">
          <source>Similar to geomspace, but with arithmetic instead of geometric progression.</source>
          <target state="translated">지오 공간과 유사하지만 기하학적 진행 대신 산술.</target>
        </trans-unit>
        <trans-unit id="33e0805e34847491157755893623c681d0de564b" translate="yes" xml:space="preserve">
          <source>Similar to geomspace, but with endpoints specified using log and base.</source>
          <target state="translated">지리 공간과 유사하지만 로그 및 기준을 사용하여 지정된 끝 점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e5b100f812a24f804b90138859e80b7ccf1d358" translate="yes" xml:space="preserve">
          <source>Similar to linspace, with the step size specified instead of the number of samples.</source>
          <target state="translated">linspace와 유사하며 샘플 수 대신 단계 크기를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="17805c407a9f09edaa3bff91c61279fe000f669b" translate="yes" xml:space="preserve">
          <source>Similar to linspace, with the step size specified instead of the number of samples. Note that, when used with a float endpoint, the endpoint may or may not be included.</source>
          <target state="translated">linspace와 유사하며 샘플 수 대신 단계 크기를 지정합니다. 부동 소수점과 함께 사용하면 끝 점이 포함되거나 포함되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="376b7895ca7454ae515537b5c988798aa23f4981" translate="yes" xml:space="preserve">
          <source>Similar to logspace, but with endpoints specified directly.</source>
          <target state="translated">로그 공간과 유사하지만 엔드 포인트가 직접 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="fb5e56ddf3f3d8bcd94b1df305f6991c2bdc0db5" translate="yes" xml:space="preserve">
          <source>Similar to logspace, but with the samples uniformly distributed in linear space, instead of log space.</source>
          <target state="translated">로그 공간과 유사하지만 샘플이 로그 공간 대신 ​​선형 공간에 균일하게 분포되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cda9d166d2c62a294e133fed232c50e89a11895" translate="yes" xml:space="preserve">
          <source>Similar types of different sizes are not subdtypes of each other:</source>
          <target state="translated">서로 다른 크기의 유사한 유형은 서로 하위 유형이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="972ade8b6d212f3e2ece52621379958937336838" translate="yes" xml:space="preserve">
          <source>Similar, but takes a tuple as its argument.</source>
          <target state="translated">비슷하지만 튜플을 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d90324501e9d6e49bd014963ecc43250f1eed84e" translate="yes" xml:space="preserve">
          <source>Similarly for methods:</source>
          <target state="translated">방법과 유사하게 :</target>
        </trans-unit>
        <trans-unit id="e7febc7c84ac14d9161e90a9bbe4e73cfefdd12e" translate="yes" xml:space="preserve">
          <source>Similarly to tuples, structured scalars can also be indexed with an integer:</source>
          <target state="translated">튜플과 마찬가지로 구조화 된 스칼라도 정수로 인덱싱 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="437fd8a6b3938e0290f56252121bacb40108af36" translate="yes" xml:space="preserve">
          <source>Similarly to use the older &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; bit generator (not recommended), one can instantiate it directly and pass it to &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이전 &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt; 비트 생성기 를 사용하는 것과 유사하게 (권장되지 않음) 직접 인스턴스화하여 &lt;a href=&quot;generator#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; 에&lt;/a&gt; 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b81f29fb06f44979e9e57de858a22a5741bb7e1e" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;a href=&quot;generated/numpy.lib.scimath.sqrt#numpy.lib.scimath.sqrt&quot;&gt;&lt;code&gt;sqrt&lt;/code&gt;&lt;/a&gt;, other base logarithms, &lt;a href=&quot;generated/numpy.lib.scimath.power#numpy.lib.scimath.power&quot;&gt;&lt;code&gt;power&lt;/code&gt;&lt;/a&gt; and trig functions are correctly handled. See their respective docstrings for specific examples.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;generated/numpy.lib.scimath.sqrt#numpy.lib.scimath.sqrt&quot;&gt; &lt;code&gt;sqrt&lt;/code&gt; &lt;/a&gt; , 기타 기본 로그, &lt;a href=&quot;generated/numpy.lib.scimath.power#numpy.lib.scimath.power&quot;&gt; &lt;code&gt;power&lt;/code&gt; &lt;/a&gt; 및 삼각 함수는 올바르게 처리됩니다. 구체적인 예는 각각의 독 스트링을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8e9eeb8d7a147426a8015c3531ee3a6251c0e6fe" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;sqrt&lt;/code&gt;, other base logarithms, &lt;code&gt;power&lt;/code&gt; and trig functions are correctly handled. See their respective docstrings for specific examples.</source>
          <target state="translated">마찬가지로 &lt;code&gt;sqrt&lt;/code&gt; , 기타 기본 로그, &lt;code&gt;power&lt;/code&gt; 및 삼각 함수가 올바르게 처리됩니다. 구체적인 예는 해당 문서 문자열을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d1cdc37a321535dbe93903e9032ec99be36f1027" translate="yes" xml:space="preserve">
          <source>Simple Array Operations</source>
          <target state="translated">간단한 어레이 작업</target>
        </trans-unit>
        <trans-unit id="acf3895a0f3e8fb2433f49e7c933653b2955fa80" translate="yes" xml:space="preserve">
          <source>Simple Iteration Example</source>
          <target state="translated">간단한 반복 예</target>
        </trans-unit>
        <trans-unit id="4512383893712587e1eb27a74805a2a877a79b85" translate="yes" xml:space="preserve">
          <source>Simple Multi-Iteration Example</source>
          <target state="translated">간단한 다중 반복 예제</target>
        </trans-unit>
        <trans-unit id="ee5ac00418ffcbbfc2c7682d69aa3b8e08bf38cb" translate="yes" xml:space="preserve">
          <source>Simple assignments make no copy of objects or their data.</source>
          <target state="translated">단순 할당은 개체 또는 해당 데이터의 복사본을 만들지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76c4886348213898712d6d2115acfbcb32296217" translate="yes" xml:space="preserve">
          <source>Simple example - adding an extra attribute to ndarray</source>
          <target state="translated">간단한 예-ndarray에 추가 속성 추가</target>
        </trans-unit>
        <trans-unit id="50416fe10bcfba1d097d2f78636e350c2106eb91" translate="yes" xml:space="preserve">
          <source>Simple example showing support of broadcasting</source>
          <target state="translated">방송 지원을 보여주는 간단한 예</target>
        </trans-unit>
        <trans-unit id="ae19d7f5a896d028209ec76ca00e6ca839a5fe6f" translate="yes" xml:space="preserve">
          <source>Simple financial functions</source>
          <target state="translated">간단한 재무 기능</target>
        </trans-unit>
        <trans-unit id="8e69123a5602858fe2de0c627a59627cbd3eee16" translate="yes" xml:space="preserve">
          <source>Simple matching of version numbers, for use in CCompiler and FCompiler.</source>
          <target state="translated">CCompiler 및 FCompiler에서 사용하기위한 버전 번호의 단순 일치.</target>
        </trans-unit>
        <trans-unit id="d369dea603addc198cac2b7cf54d9f2f5da3fe8f" translate="yes" xml:space="preserve">
          <source>Simple random data</source>
          <target state="translated">간단한 랜덤 데이터</target>
        </trans-unit>
        <trans-unit id="275d613237a6724f9191d7c3f72deea3d3a6bb91" translate="yes" xml:space="preserve">
          <source>Simplified Wrapper and Interface Generator (SWIG) is an old and fairly stable method for wrapping C/C++-libraries to a large variety of other languages. It does not specifically understand NumPy arrays but can be made useable with NumPy through the use of typemaps. There are some sample typemaps in the numpy/tools/swig directory under numpy.i together with an example module that makes use of them. SWIG excels at wrapping large C/C++ libraries because it can (almost) parse their headers and auto-produce an interface. Technically, you need to generate a &lt;code&gt;.i&lt;/code&gt; file that defines the interface. Often, however, this &lt;code&gt;.i&lt;/code&gt; file can be parts of the header itself. The interface usually needs a bit of tweaking to be very useful. This ability to parse C/C++ headers and auto-generate the interface still makes SWIG a useful approach to adding functionalilty from C/C++ into Python, despite the other methods that have emerged that are more targeted to Python. SWIG can actually target extensions for several languages, but the typemaps usually have to be language-specific. Nonetheless, with modifications to the Python-specific typemaps, SWIG can be used to interface a library with other languages such as Perl, Tcl, and Ruby.</source>
          <target state="translated">SWIG (Simplified Wrapper and Interface Generator)는 C / C ++ 라이브러리를 다양한 다른 언어로 래핑하는 오래되고 상당히 안정적인 방법입니다. NumPy 배열을 구체적으로 이해하지는 않지만 typemap을 사용하여 NumPy와 함께 사용할 수 있습니다. numpy.i 아래의 numpy / tools / swig 디렉토리에는이를 사용하는 예제 모듈과 함께 몇 가지 샘플 타입 맵이 있습니다. SWIG는 헤더를 (거의) 파싱하고 인터페이스를 자동 생성 할 수 있기 때문에 대형 C / C ++ 라이브러리를 래핑하는 데 탁월합니다. 기술적으로 인터페이스를 정의 하는 &lt;code&gt;.i&lt;/code&gt; 파일 을 생성해야합니다 . 그러나 종종 이것은 &lt;code&gt;.i&lt;/code&gt; 파일은 헤더 자체의 일부일 수 있습니다. 인터페이스는 일반적으로 매우 유용하기 위해 약간의 조정이 필요합니다. C / C ++ 헤더를 구문 분석하고 인터페이스를 자동 생성하는이 기능은 Python을 대상으로하는 다른 메서드가 등장 했음에도 불구하고 여전히 SWIG를 C / C ++의 기능을 Python에 추가하는 유용한 접근 방식이되도록합니다. SWIG는 실제로 여러 언어에 대한 확장을 대상으로 할 수 있지만 일반적으로 typemap은 언어별로 지정되어야합니다. 그럼에도 불구하고 Python 특정 유형 맵을 수정하면 SWIG를 사용하여 Perl, Tcl 및 Ruby와 같은 다른 언어와 라이브러리를 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c8cdc6800aadf2bece7e4049099bee1ec8e07ce" translate="yes" xml:space="preserve">
          <source>Simulate from the complex normal distribution (&lt;code&gt;complex_normal&lt;/code&gt;)</source>
          <target state="translated">복소 정규 분포에서 시뮬레이션 ( &lt;code&gt;complex_normal&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6c7cbba342c72a06adf163e32df8899d2552eb30" translate="yes" xml:space="preserve">
          <source>Simultaneous floor division and remainder.</source>
          <target state="translated">동시 층 분할 및 나머지.</target>
        </trans-unit>
        <trans-unit id="6c920146c0be4bce97c21cbae03c25f07c0d27fb" translate="yes" xml:space="preserve">
          <source>Since NumPy contains parts written in C and Cython that need to be compiled before use, make sure you have the necessary compilers and Python development headers installed - see &lt;a href=&quot;../user/building#building-from-source&quot;&gt;Building from source&lt;/a&gt;. Building NumPy as of version &lt;code&gt;1.17&lt;/code&gt; requires a C99 compliant compiler.</source>
          <target state="translated">NumPy에는 사용하기 전에 컴파일해야하는 C 및 Cython으로 작성된 부분이 포함되어 있으므로 필요한 컴파일러와 Python 개발 헤더가 설치되어 있는지 확인하십시오 . &lt;a href=&quot;../user/building#building-from-source&quot;&gt;소스에서 빌드를&lt;/a&gt; 참조하십시오 . 버전 &lt;code&gt;1.17&lt;/code&gt; 부터 NumPy를 빌드 하려면 C99 호환 컴파일러가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ca1a79260d5ca9a9dbd5ed4cd5ff16638e1c6e5b" translate="yes" xml:space="preserve">
          <source>Since Numpy version 1.17.0 the Generator can be initialized with a number of different BitGenerators. It exposes many different probability distributions. See &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; for context on the updated random Numpy number routines. The legacy &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; random number routines are still available, but limited to a single BitGenerator.</source>
          <target state="translated">Numpy 버전 1.17.0부터 Generator는 다양한 BitGenerator로 초기화 될 수 있습니다. 다양한 확률 분포를 보여줍니다. 업데이트 된 임의의 Numpy 번호 루틴에 대한 컨텍스트는 &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; 를 참조하십시오 . 레거시 &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt; 난수 루틴은 계속 사용할 수 있지만 단일 BitGenerator로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="8316a9e39c39081dc4c144a73ec33fdf3205f0d5" translate="yes" xml:space="preserve">
          <source>Since Numpy version 1.17.0 the Generator can be initialized with a number of different BitGenerators. It exposes many different probability distributions. See &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; for context on the updated random Numpy number routines. The legacy &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; random number routines are still available, but limited to a single BitGenerator. See &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;What&amp;rsquo;s New or Different&lt;/a&gt; for a complete list of improvements and differences from the legacy &lt;code&gt;Randomstate&lt;/code&gt;.</source>
          <target state="translated">Numpy 버전 1.17.0부터 Generator는 다양한 BitGenerator로 초기화 될 수 있습니다. 다양한 확률 분포를 보여줍니다. 업데이트 된 임의의 Numpy 번호 루틴에 대한 컨텍스트는 &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; 를 참조하십시오 . 레거시 &lt;a href=&quot;legacy#numpy.random.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt; 난수 루틴은 계속 사용할 수 있지만 단일 BitGenerator로 제한됩니다. 레거시 &lt;code&gt;Randomstate&lt;/code&gt; 의 개선 사항 및 &lt;a href=&quot;new-or-different#new-or-different&quot;&gt;차이점&lt;/a&gt; 에 대한 전체 목록은 What 's New 또는 Different 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5bfc61180c73bf11bcf8e9a59d533a6dcbb10666" translate="yes" xml:space="preserve">
          <source>Since Numpy version 1.17.0 the Generator can be initialized with a number of different BitGenerators. It exposes many different probability distributions. See &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; for context on the updated random Numpy number routines. The legacy &lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt;&lt;code&gt;RandomState&lt;/code&gt;&lt;/a&gt; random number routines are still available, but limited to a single BitGenerator.</source>
          <target state="translated">Numpy 버전 1.17.0부터 Generator는 여러 다른 BitGenerator로 초기화 될 수 있습니다. 다양한 확률 분포를 나타냅니다. 업데이트 된 무작위 Numpy 수 루틴에 대한 내용은 &lt;a href=&quot;https://www.numpy.org/neps/nep-0019-rng-policy.html&quot;&gt;NEP 19&lt;/a&gt; 를 참조하십시오 . 레거시 &lt;a href=&quot;legacy#numpy.random.mtrand.RandomState&quot;&gt; &lt;code&gt;RandomState&lt;/code&gt; &lt;/a&gt; 난수 루틴은 여전히 ​​사용 가능하지만 단일 BitGenerator로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="0e5a09c913abb2d820fe3ca564fc0e41384dbaaf" translate="yes" xml:space="preserve">
          <source>Since all ufuncs can take output arguments, this will always be (at least) 1.</source>
          <target state="translated">모든 ufunc는 출력 인수를 사용할 수 있으므로 항상 (최소한) 1이됩니다.</target>
        </trans-unit>
        <trans-unit id="2ed82f769a88b72358683adc7002539ca034c05e" translate="yes" xml:space="preserve">
          <source>Since concatenation happens along the last axis first, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; is _not_ capable of producing the following directly:</source>
          <target state="translated">연결은 마지막 축을 따라 먼저 이루어 지므로 &lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 은 다음을 직접 생성 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="17c112276469f0963d2aaf7604dae9a20dae7974" translate="yes" xml:space="preserve">
          <source>Since large parts of the main documentation are obtained from numpy via &lt;code&gt;import numpy&lt;/code&gt; and examining the docstrings, you will need to first build NumPy, and install it so that the correct version is imported.</source>
          <target state="translated">주요 문서의 대부분은 &lt;code&gt;import numpy&lt;/code&gt; numpy를 통해 numpy에서 가져오고 독 스트링 을 검사하므로 먼저 NumPy를 빌드하고 올바른 버전 을 가져 오도록 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="1c8d555d61db4dd7cd7039692a77374689036018" translate="yes" xml:space="preserve">
          <source>Since many of these have platform-dependent definitions, a set of fixed-size aliases are provided:</source>
          <target state="translated">이들 중 다수가 플랫폼에 따라 정의되기 때문에 고정 된 크기의 별칭 집합이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="d94a9b208aeb21038eb14dc8469527c3cfa527ef" translate="yes" xml:space="preserve">
          <source>Since this information may be updated regularly, please ensure you are viewing the most &lt;a href=&quot;https://numpy.org/devdocs/user/troubleshooting-importerror.html&quot;&gt;up-to-date version&lt;/a&gt;.</source>
          <target state="translated">이 정보는 정기적으로 업데이트 될 수 있으므로 &lt;a href=&quot;https://numpy.org/devdocs/user/troubleshooting-importerror.html&quot;&gt;최신 버전을&lt;/a&gt; 확인하시기 바랍니다 .</target>
        </trans-unit>
        <trans-unit id="f8bdf65fe9895293c3efd0afce21587c54d0b0c6" translate="yes" xml:space="preserve">
          <source>Since we are going to perform linear algebra operations on this data, it might be more interesting to have real numbers between 0 and 1 in each entry of the matrices to represent the RGB values. We can do that by setting</source>
          <target state="translated">이 데이터에 대해 선형 대수 연산을 수행 할 것이므로 RGB 값을 나타 내기 위해 행렬의 각 항목에 0과 1 사이의 실수를 갖는 것이 더 흥미로울 수 있습니다. 우리는 설정하여 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="dbccad20cacee376129c1a8bbd5585811048a318" translate="yes" xml:space="preserve">
          <source>Single Array Iteration</source>
          <target state="translated">단일 배열 반복</target>
        </trans-unit>
        <trans-unit id="5bfe00c763bcef48d9a91d8c005d3c1e44fabf7a" translate="yes" xml:space="preserve">
          <source>Single element indexing</source>
          <target state="translated">단일 요소 인덱싱</target>
        </trans-unit>
        <trans-unit id="c9752708782db8b51435265b223542426b8e9d5d" translate="yes" xml:space="preserve">
          <source>Single element indexing for a 1-D array is what one expects. It work exactly like that for other standard Python sequences. It is 0-based, and accepts negative indices for indexing from the end of the array.</source>
          <target state="translated">1-D 배열에 대한 단일 요소 인덱싱은 예상되는 것입니다. 다른 표준 Python 시퀀스와 똑같이 작동합니다. 0부터 시작하며 배열 끝에서 인덱싱을 위해 음수 인덱스를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="29650df4d35e8ea7c57b58195e7eb25dd75fd519" translate="yes" xml:space="preserve">
          <source>Single instance: If only a single instance of a class is exposed, document the class. Examples can use the instance name.</source>
          <target state="translated">단일 인스턴스 : 클래스의 단일 인스턴스 만 노출되는 경우 클래스를 문서화합니다. 예제는 인스턴스 이름을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="023390c0097bcde6b939037ae58aad9f1eccdd96" translate="yes" xml:space="preserve">
          <source>Single-precision floating-point number type, compatible with C &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">C &lt;code&gt;float&lt;/code&gt; 와 호환되는 단 정밀도 부동 소수점 숫자 유형 .</target>
        </trans-unit>
        <trans-unit id="1923a37e061c3d312b736626f7d4070c8dcabda6" translate="yes" xml:space="preserve">
          <source>Singular Value Decomposition.</source>
          <target state="translated">특이 값 분해.</target>
        </trans-unit>
        <trans-unit id="be2751c62dbed56ddb419e417fca2d9511c5f595" translate="yes" xml:space="preserve">
          <source>Singular values of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">의 특이 값 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68b02182aef6a1a2ed8fb4231b775d9a82547ea8" translate="yes" xml:space="preserve">
          <source>Size of &lt;code&gt;np.ndarray&lt;/code&gt; and &lt;code&gt;np.void_&lt;/code&gt; changed</source>
          <target state="translated">&lt;code&gt;np.ndarray&lt;/code&gt; 및 &lt;code&gt;np.void_&lt;/code&gt; 의 크기가 변경됨</target>
        </trans-unit>
        <trans-unit id="b7fade19a5b493a2c26eed472f4faba3db6b181a" translate="yes" xml:space="preserve">
          <source>Size of a pointer on this platform (sizeof(void *))</source>
          <target state="translated">이 플랫폼의 포인터 크기 (sizeof (void *))</target>
        </trans-unit>
        <trans-unit id="9f7ca2b11c805ad773c63eebb03a2a048382c59e" translate="yes" xml:space="preserve">
          <source>Size of a pointer on this platform (sizeof(void *)) (A macro defines NPY_SIZEOF_INTP as well.)</source>
          <target state="translated">이 플랫폼의 포인터 크기 (sizeof (void *)) (매크로도 NPY_SIZEOF_INTP를 정의합니다.)</target>
        </trans-unit>
        <trans-unit id="f19f296d7676df236287d76dbc5f75e14729bdc6" translate="yes" xml:space="preserve">
          <source>Size of buffer.</source>
          <target state="translated">버퍼 크기.</target>
        </trans-unit>
        <trans-unit id="94f57e9139c081fd224904e8757bd108f6615f74" translate="yes" xml:space="preserve">
          <source>Size of spacing between samples.</source>
          <target state="translated">샘플 사이의 간격 크기.</target>
        </trans-unit>
        <trans-unit id="3de9e845a3b95a48f909e7b501dd8bf3a25f0227" translate="yes" xml:space="preserve">
          <source>Size of the data (how many bytes is in &lt;em&gt;e.g.&lt;/em&gt; the integer)</source>
          <target state="translated">데이터 크기 ( &lt;em&gt;예 :&lt;/em&gt; 정수의 바이트 수)</target>
        </trans-unit>
        <trans-unit id="69356099c1bda1de5732916fcc4b059a9e5e1e9d" translate="yes" xml:space="preserve">
          <source>Size of the data is in turn described by:</source>
          <target state="translated">데이터의 크기는 다음과 같이 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="b7b677e8d293fb1fdabc56b0ddc443af48c5aeca" translate="yes" xml:space="preserve">
          <source>Size of the iterator.</source>
          <target state="translated">반복자의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="9f5f50339fb8609920b44a4a178129be24577d29" translate="yes" xml:space="preserve">
          <source>Size of the pooled entropy to store. Default is 4 to give a 128-bit entropy pool. 8 (for 256 bits) is another reasonable choice if working with larger PRNGs, but there is very little to be gained by selecting another value.</source>
          <target state="translated">저장할 풀 엔트로피의 크기입니다. 128 비트 엔트로피 풀을 제공하려면 기본값은 4입니다. 더 큰 PRNG로 작업 할 경우 8 (256 비트)이 또 다른 합리적인 선택이지만 다른 값을 선택하면 얻을 수있는 것이 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="425427638096d8909ac722e80f2f8c0179bde19c" translate="yes" xml:space="preserve">
          <source>Size of the returned identity matrix.</source>
          <target state="translated">반환 된 항등 행렬의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="c4824192ad4385f49198eaabf9b1f747f0e02ed6" translate="yes" xml:space="preserve">
          <source>Size of ufunc buffer in bytes.</source>
          <target state="translated">ufunc 버퍼의 크기 (바이트).</target>
        </trans-unit>
        <trans-unit id="48b38a422a66109df2128a05233e6e628a97c405" translate="yes" xml:space="preserve">
          <source>Size of window over each axis that takes part in the sliding window. If &lt;code&gt;axis&lt;/code&gt; is not present, must have same length as the number of input array dimensions. Single integers &lt;code&gt;i&lt;/code&gt; are treated as if they were the tuple &lt;code&gt;(i,)&lt;/code&gt;.</source>
          <target state="translated">슬라이딩 윈도우에 참여하는 각 축의 윈도우 크기입니다. &lt;code&gt;axis&lt;/code&gt; 이없는 경우 입력 배열 차원의 수와 길이가 같아야합니다. 단일 정수 &lt;code&gt;i&lt;/code&gt; 는 마치 튜플 &lt;code&gt;(i,)&lt;/code&gt; 인 것처럼 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a7523f4fd4e263fe3e608e0a858c1961e98f75d" translate="yes" xml:space="preserve">
          <source>Sized aliases</source>
          <target state="translated">크기가 지정된 별칭</target>
        </trans-unit>
        <trans-unit id="ad4bbd7cecbd939b77596b18a5178a89c143d6ba" translate="yes" xml:space="preserve">
          <source>Skip the first &lt;code&gt;skiprows&lt;/code&gt; lines, including comments; default: 0.</source>
          <target state="translated">처음 건너 뛰기 &lt;code&gt;skiprows&lt;/code&gt; 의 의견을 포함하여 라인을; 기본값 : 0</target>
        </trans-unit>
        <trans-unit id="f82f7e14ba8536ae148e3663cd12d9df9f23c8e7" translate="yes" xml:space="preserve">
          <source>Skipping lines and choosing columns</source>
          <target state="translated">줄 건너 뛰기 및 열 선택</target>
        </trans-unit>
        <trans-unit id="5ade18da6c0bc324987dd2a6e552253d5690d6e9" translate="yes" xml:space="preserve">
          <source>Slices can be specified within programs by using the slice() function in Python. For example:</source>
          <target state="translated">Python에서 slice () 함수를 사용하여 프로그램 내에서 슬라이스를 지정할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="a938184025b02624b2da57d3c83ebf5d1d8150a6" translate="yes" xml:space="preserve">
          <source>Slices of &lt;code&gt;x&lt;/code&gt; in this axis are shuffled. Each slice is shuffled independently of the others. If &lt;code&gt;axis&lt;/code&gt; is None, the flattened array is shuffled.</source>
          <target state="translated">이 축에서 &lt;code&gt;x&lt;/code&gt; 조각 이 섞여 있습니다. 각 슬라이스는 다른 슬라이스와 독립적으로 섞입니다. 경우 &lt;code&gt;axis&lt;/code&gt; 것도없고, 평탄화 배열 섞는다.</target>
        </trans-unit>
        <trans-unit id="2054604b34ddf6e044b0a886dacbc545d40e1664" translate="yes" xml:space="preserve">
          <source>Slicing an array returns a view of it:</source>
          <target state="translated">배열을 분할하면보기가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ceefed34cafaf5b19edca282e41b54d0f46c4e35" translate="yes" xml:space="preserve">
          <source>Slicing creates a view, whose memory is shared with x:</source>
          <target state="translated">슬라이스는 메모리가 x와 공유되는 뷰를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="57307a703ae75763102410199fd5e5560ee358fe" translate="yes" xml:space="preserve">
          <source>Sliding window view of the array. The sliding window dimensions are inserted at the end, and the original dimensions are trimmed as required by the size of the sliding window. That is, &lt;code&gt;view.shape = x_shape_trimmed + window_shape&lt;/code&gt;, where &lt;code&gt;x_shape_trimmed&lt;/code&gt; is &lt;code&gt;x.shape&lt;/code&gt; with every entry reduced by one less than the corresponding window size.</source>
          <target state="translated">어레이의 슬라이딩 창보기. 슬라이딩 창 치수는 끝에 삽입되고 원래 치수는 슬라이딩 창의 크기에 따라 잘립니다. 즉, &lt;code&gt;view.shape = x_shape_trimmed + window_shape&lt;/code&gt; , 여기서 &lt;code&gt;x_shape_trimmed&lt;/code&gt; 는 모든 항목이 해당 창 크기보다 1만큼 줄어든 &lt;code&gt;x.shape&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8e774194cbc136ee79daaa22964c29ad8085570b" translate="yes" xml:space="preserve">
          <source>Slightly more realistic example - attribute added to existing array</source>
          <target state="translated">좀 더 현실적인 예-기존 배열에 추가 된 속성</target>
        </trans-unit>
        <trans-unit id="68f51b4a2c9bfa7e4967d12fe3615173471a2867" translate="yes" xml:space="preserve">
          <source>Small results can be suppressed:</source>
          <target state="translated">작은 결과를 억제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55c8d4062bb648b3be6e31f36bb0441eeb936269" translate="yes" xml:space="preserve">
          <source>Smallest (most negative) power of &lt;code&gt;ibeta&lt;/code&gt; consistent with there being no leading zeros in the mantissa.</source>
          <target state="translated">가수에 선행 0이 없음과 일치하는 &lt;code&gt;ibeta&lt;/code&gt; 의 가장 작은 (가장 부정적인) 힘 .</target>
        </trans-unit>
        <trans-unit id="5723001a57f6b6652b2b21977d2b2710160cd8a8" translate="yes" xml:space="preserve">
          <source>Smallest (positive) power of &lt;code&gt;ibeta&lt;/code&gt; that causes overflow.</source>
          <target state="translated">오버플로를 유발 하는 &lt;code&gt;ibeta&lt;/code&gt; 의 가장 작은 (긍정적 인) 힘 .</target>
        </trans-unit>
        <trans-unit id="77213ab3e24eed5431e4dc1329418d12eafeda49" translate="yes" xml:space="preserve">
          <source>Smallest size of user-settable internal buffers.</source>
          <target state="translated">가장 작은 크기의 사용자 설정 가능 내부 버퍼.</target>
        </trans-unit>
        <trans-unit id="0ebb78e1cc10e7821acd9ee50766c4cfdcff7b2e" translate="yes" xml:space="preserve">
          <source>So go ahead and pick something that annoys or confuses you about NumPy, experiment with the code, hang around for discussions or go through the reference documents to try to fix it. Things will fall in place and soon you&amp;rsquo;ll have a pretty good understanding of the project as a whole. Good Luck!</source>
          <target state="translated">그러니 계속해서 NumPy에 대해 성가 시거나 혼란스러운 것을 선택하고, 코드를 실험하고, 토론을하거나, 참조 문서를 검토하여 문제를 해결하십시오. 모든 것이 제자리에 있고 곧 프로젝트 전체에 대해 꽤 잘 이해하게 될 것입니다. 행운을 빕니다!</target>
        </trans-unit>
        <trans-unit id="68fc77bcced0c9052ba8e6d4c729d2a1c844ceab" translate="yes" xml:space="preserve">
          <source>So go ahead and pick something that annoys or confuses you about numpy, experiment with the code, hang around for discussions or go through the reference documents to try to fix it. Things will fall in place and soon you&amp;rsquo;ll have a pretty good understanding of the project as a whole. Good Luck!</source>
          <target state="translated">그러니 계속해서 numpy에 대해 성가 시거나 혼란스러운 것을 선택하고, 코드를 실험하고, 토론을하거나, 참조 문서를 검토하여 문제를 해결하십시오. 모든 것이 제자리에 있고 곧 프로젝트 전체에 대해 꽤 잘 이해하게 될 것입니다. 행운을 빕니다!</target>
        </trans-unit>
        <trans-unit id="5987afde50b9e89e0e7eef5d3f74c5e410d18d69" translate="yes" xml:space="preserve">
          <source>So if this is true, why not choose the index order that matches what you most expect? In particular, why not define row-ordered images to use the image convention? (This is sometimes referred to as the Fortran convention vs the C convention, thus the &amp;lsquo;C&amp;rsquo; and &amp;lsquo;FORTRAN&amp;rsquo; order options for array ordering in numpy.) The drawback of doing this is potential performance penalties. It&amp;rsquo;s common to access the data sequentially, either implicitly in array operations or explicitly by looping over rows of an image. When that is done, then the data will be accessed in non-optimal order. As the first index is incremented, what is actually happening is that elements spaced far apart in memory are being sequentially accessed, with usually poor memory access speeds. For example, for a two dimensional image &amp;lsquo;im&amp;rsquo; defined so that im[0, 10] represents the value at x=0, y=10. To be consistent with usual Python behavior then im[0] would represent a column at x=0. Yet that data would be spread over the whole array since the data are stored in row order. Despite the flexibility of numpy&amp;rsquo;s indexing, it can&amp;rsquo;t really paper over the fact basic operations are rendered inefficient because of data order or that getting contiguous subarrays is still awkward (e.g., im[:,0] for the first row, vs im[0]), thus one can&amp;rsquo;t use an idiom such as for row in im; for col in im does work, but doesn&amp;rsquo;t yield contiguous column data.</source>
          <target state="translated">이것이 사실이라면, 가장 기대하는 것과 일치하는 인덱스 순서를 선택하지 않겠습니까? 특히 이미지 규칙을 사용하도록 행 순서 이미지를 정의하지 않겠습니까? (이것은 때때로 포트란 규칙과 C 규칙으로 불립니다. 따라서 배열 순서를 'C'와 'FORTRAN'순서 옵션으로 표시합니다.)이 작업의 단점은 잠재적 인 성능 불이익입니다. 암시 적으로 배열 작업에서 또는 이미지의 행을 반복하여 명시 적으로 데이터에 순차적으로 액세스하는 것이 일반적입니다. 이 작업이 완료되면 데이터는 최적화되지 않은 순서로 액세스됩니다. 첫 번째 인덱스가 증가함에 따라 실제로 발생하는 것은 메모리에서 멀리 떨어진 요소가 순차적으로 액세스되고 일반적으로 메모리 액세스 속도가 좋지 않은 것입니다. 예를 들어 im [0, 10]이 x = 0의 값을 나타내도록 정의 된 2 차원 이미지 'im'의 경우,y = 10. 일반적인 파이썬 동작과 일치하기 위해 im [0]은 x = 0의 열을 나타냅니다. 그러나 데이터는 행 순서로 저장되므로 데이터는 전체 배열에 분산됩니다. numpy의 인덱싱의 유연성에도 불구하고 데이터 순서로 인해 기본 작업이 비효율적으로 렌더링되거나 연속 하위 배열을 얻는 것이 여전히 어색하다는 사실에 대해 실제로 문서화 할 수는 없습니다 (예 : 첫 번째 행의 경우 im [:, 0] vs im [ 0]) 따라서 im의 row와 같은 관용구를 사용할 수 없습니다. im의 col에 대해서는 작동하지만 연속 열 데이터를 생성하지는 않습니다.데이터 순서로 인해 기본 연산이 비효율적으로 렌더링되거나 연속 서브 어레이를 얻는 것이 여전히 어색하다는 사실을 실제로 문서화 할 수는 없습니다 (예 : 첫 번째 행의 경우 im [:, 0] 대 im [0]). im의 행과 같은 관용구를 사용하지 마십시오. im에서 col의 경우 작동하지만 연속 열 데이터를 생성하지 않습니다.데이터 순서로 인해 기본 연산이 비효율적으로 렌더링되거나 연속 서브 어레이를 얻는 것이 여전히 어색하다는 사실을 실제로 문서화 할 수는 없습니다 (예 : 첫 번째 행의 경우 im [:, 0] 대 im [0]). im의 행과 같은 관용구를 사용하지 마십시오. im의 col에 대해서는 작동하지만 연속 열 데이터를 생성하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ea56e56cf12d7e1630fa5a0096d5cb95aa660e7" translate="yes" xml:space="preserve">
          <source>So note that &lt;code&gt;x[0,2] = x[0][2]&lt;/code&gt; though the second case is more inefficient as a new temporary array is created after the first index that is subsequently indexed by 2.</source>
          <target state="translated">따라서 &lt;code&gt;x[0,2] = x[0][2]&lt;/code&gt; 는 두 번째 경우가 더 비효율적이지만 이후에 2로 인덱싱되는 첫 번째 인덱스 이후에 새 임시 배열이 생성되기 때문에 비효율적이라는 점에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="19c037ce117c6ef2223ffde05ba36545c8c954f9" translate="yes" xml:space="preserve">
          <source>So one can use code to construct tuples of any number of indices and then use these within an index.</source>
          <target state="translated">따라서 코드를 사용하여 여러 인덱스의 튜플을 생성 한 다음 인덱스 내에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75338853856b7644da267b729869a79f35465ac8" translate="yes" xml:space="preserve">
          <source>So the p-value is about 0.009, which says the null hypothesis has a probability of about 99% of being true.</source>
          <target state="translated">따라서 p- 값은 약 0.009이며, 귀무 가설은 참의 약 99 % 일 확률이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b22b13d407a40d9045527bdf90132a3a9fa96895" translate="yes" xml:space="preserve">
          <source>So there is about a 1% chance that the F statistic will exceed 7.62, the measured value is 36, so the null hypothesis is rejected at the 1% level.</source>
          <target state="translated">따라서 F 통계량이 7.62를 초과 할 확률은 약 1 %이며 측정 된 값은 36이므로 귀무 가설은 1 % 수준에서 기각됩니다.</target>
        </trans-unit>
        <trans-unit id="4ddd4fd416fe6d1fe16f23ac519d97ee1e2dc7a2" translate="yes" xml:space="preserve">
          <source>So, by defining a specific &lt;code&gt;__array_wrap__&lt;/code&gt; method for our subclass, we can tweak the output from ufuncs. The &lt;code&gt;__array_wrap__&lt;/code&gt; method requires &lt;code&gt;self&lt;/code&gt;, then an argument - which is the result of the ufunc - and an optional parameter &lt;em&gt;context&lt;/em&gt;. This parameter is returned by ufuncs as a 3-element tuple: (name of the ufunc, arguments of the ufunc, domain of the ufunc), but is not set by other numpy functions. Though, as seen above, it is possible to do otherwise, &lt;code&gt;__array_wrap__&lt;/code&gt; should return an instance of its containing class. See the masked array subclass for an implementation.</source>
          <target state="translated">따라서 하위 클래스에 대한 특정 &lt;code&gt;__array_wrap__&lt;/code&gt; 메서드를 정의하여 ufuncs 의 출력을 조정할 수 있습니다. &lt;code&gt;__array_wrap__&lt;/code&gt; 방법은 필요 &lt;code&gt;self&lt;/code&gt; ufunc의 결과입니다 - - 그리고 선택적 매개 변수의 다음 인수 &lt;em&gt;컨텍스트를&lt;/em&gt; . 이 매개 변수는 ufuncs에 의해 3 요소 튜플 (ufunc의 이름, ufunc의 인수, ufunc의 도메인)으로 반환되지만 다른 numpy 함수에 의해 설정되지 않습니다. 위에서 볼 수 있듯이 다른 방법으로도 가능하지만 &lt;code&gt;__array_wrap__&lt;/code&gt; 은 포함 된 클래스의 인스턴스를 반환해야합니다. 구현에 대해서는 마스크 된 배열 하위 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a6530c806dc81f899a20b29f20f0a01aeaaaf38e" translate="yes" xml:space="preserve">
          <source>So, over 64 months would be required to pay off the loan.</source>
          <target state="translated">따라서 64 개월 이상 대출을 상환해야합니다.</target>
        </trans-unit>
        <trans-unit id="0cd2be4123405b8b865dc4d67f41a8ad4c3f36a7" translate="yes" xml:space="preserve">
          <source>So, this class does not actually do anything interesting: it just converts any instances of its own to regular ndarray (otherwise, we&amp;rsquo;d get infinite recursion!), and adds an &lt;code&gt;info&lt;/code&gt; dictionary that tells which inputs and outputs it converted. Hence, e.g.,</source>
          <target state="translated">따라서이 클래스는 실제로 흥미로운 작업을 수행하지 않습니다. 자체 인스턴스를 일반 ndarray로 변환하고 (그렇지 않으면 무한 재귀를 얻을 수 있습니다!) 변환 된 입력 및 출력을 알려주 는 &lt;code&gt;info&lt;/code&gt; 사전을 추가합니다 . 따라서 예를 들어</target>
        </trans-unit>
        <trans-unit id="a5004dc1aab93010354b018bb188be79f920df9c" translate="yes" xml:space="preserve">
          <source>So, to end up with the same $15692.93 under the same $100 per month &amp;ldquo;savings plan,&amp;rdquo; for annual interest rates of 4% and 3%, one would need initial investments of $649.27 and $1273.79, respectively.</source>
          <target state="translated">따라서, 연간 이자율 4 %와 3 %에 대해 한 달에 같은 $ 100 &quot;저축 계획&quot;하에서 동일한 $ 15692.93으로 끝내려면 각각 초기 $ 649.27와 $ 1273.79의 투자가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="14b8aecd3aaaa33e35d9724dfec4e61ddcb14189" translate="yes" xml:space="preserve">
          <source>So:</source>
          <target state="translated">So:</target>
        </trans-unit>
        <trans-unit id="6ebdb3e9e8d6757481f655d319b1afadf8dc01e9" translate="yes" xml:space="preserve">
          <source>Solution to the system a x = b. Returned shape is identical to &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">시스템에 대한 해결책 ax = b. 반환 된 모양은 &lt;code&gt;b&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="949505f2f39f0b589771403ff8b3ce6df4de8e29" translate="yes" xml:space="preserve">
          <source>Solve &lt;code&gt;a.T x.T = b.T&lt;/code&gt; instead</source>
          <target state="translated">대신 &lt;code&gt;a.T x.T = b.T&lt;/code&gt; 풀기</target>
        </trans-unit>
        <trans-unit id="47cd45ea813008c51999b21afe4021732229d27d" translate="yes" xml:space="preserve">
          <source>Solve a linear matrix equation, or system of linear scalar equations.</source>
          <target state="translated">선형 행렬 방정식 또는 선형 스칼라 방정식 시스템을 풉니 다.</target>
        </trans-unit>
        <trans-unit id="30e7aa84268178ffe0845e5a39585732ba9f3586" translate="yes" xml:space="preserve">
          <source>Solve a.T x.T = b.T instead</source>
          <target state="translated">대신 aT xT = bT 풀기</target>
        </trans-unit>
        <trans-unit id="f401130634f936a923b84a9e812b9c0958189ce8" translate="yes" xml:space="preserve">
          <source>Solve the system of equations &lt;code&gt;3 * x0 + x1 = 9&lt;/code&gt; and &lt;code&gt;x0 + 2 * x1 = 8&lt;/code&gt;:</source>
          <target state="translated">방정식 시스템 &lt;code&gt;3 * x0 + x1 = 9&lt;/code&gt; 및 &lt;code&gt;x0 + 2 * x1 = 8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e357636c18d54887208506dd3f992cf9376f1a5d" translate="yes" xml:space="preserve">
          <source>Solve the system of equations &lt;code&gt;x0 + 2 * x1 = 1&lt;/code&gt; and &lt;code&gt;3 * x0 + 5 * x1 = 2&lt;/code&gt;:</source>
          <target state="translated">연립 방정식 &lt;code&gt;x0 + 2 * x1 = 1&lt;/code&gt; 및 &lt;code&gt;3 * x0 + 5 * x1 = 2&lt;/code&gt; 를 풉니 다 .</target>
        </trans-unit>
        <trans-unit id="4fa6a62025edb0c24849f443aeee1762c51d4292" translate="yes" xml:space="preserve">
          <source>Solve the tensor equation &lt;code&gt;a x = b&lt;/code&gt; for x.</source>
          <target state="translated">x에 대한 텐서 방정식 &lt;code&gt;a x = b&lt;/code&gt; 를 풉니 다 .</target>
        </trans-unit>
        <trans-unit id="2662dd226f62ccee1e8db7abb4ac87cf33caa66b" translate="yes" xml:space="preserve">
          <source>Solves the equation</source>
          <target state="translated">방정식을 해결</target>
        </trans-unit>
        <trans-unit id="c7e1b491799507ad39ca1efa34833c4a45590d4c" translate="yes" xml:space="preserve">
          <source>Solving equations and inverting matrices</source>
          <target state="translated">방정식 풀기 및 역행렬</target>
        </trans-unit>
        <trans-unit id="7816460fa8a4213b4e69ef8f70cd9ea8a3ffd6ed" translate="yes" xml:space="preserve">
          <source>Some Key Differences</source>
          <target state="translated">몇 가지 주요 차이점</target>
        </trans-unit>
        <trans-unit id="f6ac3edd3880760d2a349fec2ec6dede68663b58" translate="yes" xml:space="preserve">
          <source>Some NumPy routines always return views, some always return copies, some may return one or the other, and for some the choice can be specified. Responsiblity for managing views and copies falls to the programmer. &lt;a href=&quot;reference/generated/numpy.shares_memory#numpy.shares_memory&quot;&gt;&lt;code&gt;numpy.shares_memory&lt;/code&gt;&lt;/a&gt; will check whether &lt;code&gt;b&lt;/code&gt; is a view of &lt;code&gt;a&lt;/code&gt;, but an exact answer isn&amp;rsquo;t always feasible, as the documentation page explains.</source>
          <target state="translated">일부 NumPy 루틴은 항상 뷰를 반환하고, 일부는 항상 복사본을 반환하고, 일부는 둘 중 하나를 반환 할 수 있으며, 일부는 선택 사항을 지정할 수 있습니다. 뷰와 복사본을 관리하는 책임은 프로그래머에게 있습니다. &lt;a href=&quot;reference/generated/numpy.shares_memory#numpy.shares_memory&quot;&gt; &lt;code&gt;numpy.shares_memory&lt;/code&gt; &lt;/a&gt; 여부를 확인합니다 &lt;code&gt;b&lt;/code&gt; 를 나타내는 도면이다 하지만, 문서 페이지의 설명에 정확한 대답은 항상 가능하지 않습니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43b0492eef0c0518822e4513393b1d39235d0d0e" translate="yes" xml:space="preserve">
          <source>Some cases where uint and true alignment are different ()</source>
          <target state="translated">uint와 true 정렬이 다른 경우 ()</target>
        </trans-unit>
        <trans-unit id="d1019de292a3b48b30fff1374e4676305929bebd" translate="yes" xml:space="preserve">
          <source>Some cases where uint and true alignment are different (default gcc linux):</source>
          <target state="translated">uint와 true 정렬이 다른 경우 (기본 gcc linux) :</target>
        </trans-unit>
        <trans-unit id="a542d599020730fc9e801345b862f13f14b4acf2" translate="yes" xml:space="preserve">
          <source>Some entries may be missing in the dataset we are trying to import. In a previous example, we used a converter to transform an empty string into a float. However, user-defined converters may rapidly become cumbersome to manage.</source>
          <target state="translated">가져 오려는 데이터 세트에서 일부 항목이 누락되었을 수 있습니다. 이전 예제에서는 변환기를 사용하여 빈 문자열을 부동 소수점으로 변환했습니다. 그러나 사용자 정의 변환기는 빠르게 관리하기가 번거로울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="5c7fd1727ed40b6d20e06713861689602adf2ada" translate="yes" xml:space="preserve">
          <source>Some features described in this document require a recent version of &lt;code&gt;numpydoc&lt;/code&gt;. For example, the &lt;strong&gt;Yields&lt;/strong&gt; section was added in &lt;code&gt;numpydoc&lt;/code&gt; 0.6.</source>
          <target state="translated">이 문서에 설명 된 일부 기능에는 최신 버전의 &lt;code&gt;numpydoc&lt;/code&gt; 이 필요합니다 . 예를 들어 &lt;strong&gt;수율&lt;/strong&gt; 섹션이 &lt;code&gt;numpydoc&lt;/code&gt; 0.6 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c3cc4ff3232feca4c3b11921843d78bf63af7e91" translate="yes" xml:space="preserve">
          <source>Some key differences</source>
          <target state="translated">몇 가지 주요 차이점</target>
        </trans-unit>
        <trans-unit id="64fb9ccdfaf0e9d2d3e1359a257e97c7311570c0" translate="yes" xml:space="preserve">
          <source>Some more use alternate naming conventions for extended-precision floats and complex numbers:</source>
          <target state="translated">더 많은 사람들은 확장 정밀도 부동 소수점 및 복소수에 대해 대체 명명 규칙을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8c00107ac79c20e1a081f03fb6cbaba3191f960b" translate="yes" xml:space="preserve">
          <source>Some of the scalar types are essentially equivalent to fundamental Python types and therefore inherit from them as well as from the generic array scalar type:</source>
          <target state="translated">일부 스칼라 유형은 기본 파이썬 유형과 본질적으로 동일하므로 일반 배열 스칼라 유형뿐만 아니라 이들로부터 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="a5f562d4f1e3fdb2208baf42f6c6a18bd596f596" translate="yes" xml:space="preserve">
          <source>Some of the tests in the test suite require a large amount of memory, and are skipped if your system does not have enough.</source>
          <target state="translated">테스트 스위트의 일부 테스트에는 많은 양의 메모리가 필요하며 시스템에 충분하지 않은 경우 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="565ad1be01f304cf8276cf987896bb34b886694b" translate="yes" xml:space="preserve">
          <source>Some of the types in this module rely on features only present in the standard library in Python 3.8 and greater. If you want to use these types in earlier versions of Python, you should install the &lt;a href=&quot;https://pypi.org/project/typing-extensions/&quot;&gt;typing-extensions&lt;/a&gt; package.</source>
          <target state="translated">이 모듈의 일부 유형은 Python 3.8 이상의 표준 라이브러리에만있는 기능에 의존합니다. 이전 버전의 Python에서 이러한 유형을 사용하려면 &lt;a href=&quot;https://pypi.org/project/typing-extensions/&quot;&gt;typing-extensions&lt;/a&gt; 패키지를 설치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c85e63aec45df025bea301bcb4bf6b89b178cf85" translate="yes" xml:space="preserve">
          <source>Some old Fortran codes need special compiler options in order to work correctly. In order to specify compiler options per source file, &lt;code&gt;numpy.distutils&lt;/code&gt; Fortran compiler looks for the following pattern:</source>
          <target state="translated">일부 오래된 포트란 코드는 올바르게 작동하기 위해 특별한 컴파일러 옵션이 필요합니다. 소스 파일 당 컴파일러 옵션을 지정하기 위해 &lt;code&gt;numpy.distutils&lt;/code&gt; Fortran 컴파일러는 다음 패턴을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="ddbcdd8799a6eb22893d3198d17fe75528762dea" translate="yes" xml:space="preserve">
          <source>Some operations, such as &lt;code&gt;+=&lt;/code&gt; and &lt;code&gt;*=&lt;/code&gt;, act in place to modify an existing array rather than create a new one.</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt; 및 &lt;code&gt;*=&lt;/code&gt; = 와 같은 일부 작업 은 새 배열을 만드는 대신 기존 배열을 수정하기 위해 제자리에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a2cfebd3d3ece5c1e007859b24f38d898adb6c60" translate="yes" xml:space="preserve">
          <source>Some special methods and attributes are used by arrays in order to facilitate the interoperation of sub-types with the base ndarray type.</source>
          <target state="translated">기본 ndarray 유형과 하위 유형의 상호 운용을 용이하게하기 위해 배열에서 일부 특수 메소드 및 속성을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b279d322696735803b77494e0d85658168ba5e97" translate="yes" xml:space="preserve">
          <source>Some spreadsheet programs calculate the &amp;ldquo;floor-towards-zero&amp;rdquo;, in other words &lt;code&gt;floor(-2.5) == -2&lt;/code&gt;. NumPy instead uses the definition of &lt;a href=&quot;#numpy.floor&quot;&gt;&lt;code&gt;floor&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;floor(-2.5) == -3&lt;/code&gt;.</source>
          <target state="translated">일부 스프레드 시트 프로그램은&amp;ldquo;floor-towards-zero&amp;rdquo;, 즉 &lt;code&gt;floor(-2.5) == -2&lt;/code&gt; 합니다. NumPy와 대신 정의 사용 &lt;a href=&quot;#numpy.floor&quot;&gt; &lt;code&gt;floor&lt;/code&gt; &lt;/a&gt; 여기서 &lt;code&gt;floor(-2.5) == -3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7051281732f2ec06ad8a423664716faeca269413" translate="yes" xml:space="preserve">
          <source>Some things to consider:</source>
          <target state="translated">고려해야 할 몇 가지 사항 :</target>
        </trans-unit>
        <trans-unit id="e076ea295087ca8af80708dc44915c8314e4840f" translate="yes" xml:space="preserve">
          <source>Some useful aliases of the above types are</source>
          <target state="translated">위 유형의 유용한 별칭은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1671b95e5ffbf1238a81b8297939415d3fd1114c" translate="yes" xml:space="preserve">
          <source>Something like the following code can be used to support both &lt;code&gt;RandomState&lt;/code&gt; and &lt;code&gt;Generator&lt;/code&gt;, with the understanding that the interfaces are slightly different</source>
          <target state="translated">인터페이스가 약간 다르다는 것을 이해 하면서 다음 코드와 같은 것을 사용하여 &lt;code&gt;RandomState&lt;/code&gt; 및 &lt;code&gt;Generator&lt;/code&gt; 를 모두 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d18010aa6e32898329ba9966b17eb41dba315729" translate="yes" xml:space="preserve">
          <source>Something&amp;rsquo;s wrong with this data - we are not supposed to have negative values in a cumulative data set. What&amp;rsquo;s going on?</source>
          <target state="translated">이 데이터에 문제가 있습니다. 누적 데이터 세트에 음수 값이 있어서는 안됩니다. 무슨 일이야?</target>
        </trans-unit>
        <trans-unit id="34617697c9559c1ea4d57507d3c772b924d1efbc" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;code&gt;copy&lt;/code&gt; should be called after slicing if the original array is not required anymore. For example, suppose &lt;code&gt;a&lt;/code&gt; is a huge intermediate result and the final result &lt;code&gt;b&lt;/code&gt; only contains a small fraction of &lt;code&gt;a&lt;/code&gt;, a deep copy should be made when constructing &lt;code&gt;b&lt;/code&gt; with slicing:</source>
          <target state="translated">원본 배열이 더 이상 필요하지 않은 경우 슬라이스 후 &lt;code&gt;copy&lt;/code&gt; 를 호출해야하는 경우 가 있습니다. 예를 들어, 가정 &lt;code&gt;a&lt;/code&gt; 큰 중간 결과와 최종 결과 &lt;code&gt;b&lt;/code&gt; 는 만의 작은 부분 포함 &lt;code&gt;a&lt;/code&gt; , 구성 할 때 깊은 사본이 만들어 져야한다 &lt;code&gt;b&lt;/code&gt; 슬라이스로 :</target>
        </trans-unit>
        <trans-unit id="4268b2129ba925e1d48843c5c395c0c45327167b" translate="yes" xml:space="preserve">
          <source>Sometimes a Fortran package may require that users provide routines that the package will use. F2PY can construct an interface to such routines so that Python functions could be called from Fortran.</source>
          <target state="translated">때때로 Fortran 패키지는 사용자가 패키지가 사용할 루틴을 제공하도록 요구할 수 있습니다. F2PY는 Fortran에서 Python 함수를 호출 할 수 있도록 이러한 루틴에 대한 인터페이스를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9467a0f0b915a6467304173ebaf28fafa38f3924" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to access a multidimensional array as a C-style multi-dimensional array so that algorithms can be implemented using C&amp;rsquo;s a[i][j][k] syntax. This routine returns a pointer, &lt;em&gt;ptr&lt;/em&gt;, that simulates this kind of C-style array, for 1-, 2-, and 3-d ndarrays.</source>
          <target state="translated">때로는 C의 a [i] [j] [k] 구문을 사용하여 알고리즘을 구현할 수 있도록 다차원 배열을 C 스타일의 다차원 배열로 액세스하는 것이 유용합니다. 이 루틴은 1, 2 및 3 차원 ndarray에 대해 이러한 종류의 C 스타일 배열을 시뮬레이트 하는 포인터 &lt;em&gt;ptr을&lt;/em&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ec72337ff3c83f7940812234b3ba998c6f082e9e" translate="yes" xml:space="preserve">
          <source>Sometimes it may be useful to get the N-dimensional index while iterating. The ndenumerate iterator can achieve this.</source>
          <target state="translated">때로는 반복하면서 N 차원 인덱스를 얻는 것이 유용 할 수 있습니다. ndenumerate iterator는이를 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0744d9126505450547757e296c542c0b00376d4c" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to skip a test or mark it as a known failure, such as when the test suite is being written before the code it&amp;rsquo;s meant to test, or if a test only fails on a particular architecture.</source>
          <target state="translated">때로는 테스트를 건너 뛰거나 테스트 스위트가 코드를 작성하기 전에 테스트 스위트를 작성하는 경우 또는 테스트가 특정 아키텍처에서만 실패하는 경우와 같이 테스트를 건너 뛰거나 알려진 실패로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c295e72861adbd23ef6b2dcbfed6577dacefe499" translate="yes" xml:space="preserve">
          <source>Sometimes, the best approach is to use the &lt;code&gt;%extend&lt;/code&gt; directive to define new methods for your classes (or overload existing ones) that take a &lt;code&gt;PyObject*&lt;/code&gt; (that either is or can be converted to a &lt;code&gt;PyArrayObject*&lt;/code&gt;) instead of a pointer to a buffer. In this case, the helper routines in &lt;code&gt;numpy.i&lt;/code&gt; can be very useful.</source>
          <target state="translated">때로는 가장 좋은 방법은 &lt;code&gt;%extend&lt;/code&gt; 지시문을 사용 하여 버퍼에 대한 포인터 대신 &lt;code&gt;PyObject*&lt;/code&gt; (또는 &lt;code&gt;PyArrayObject*&lt;/code&gt; 로 변환되거나 변환 될 수 있음 )를 사용하는 클래스에 대한 새 메소드를 정의하거나 기존 메소드에 과부하 를 가하는 것입니다. . 이 경우 &lt;code&gt;numpy.i&lt;/code&gt; 의 도우미 루틴 이 매우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04ecf9e2bc2654660a3c52fb5b73eb5423e29ed8" translate="yes" xml:space="preserve">
          <source>Sometimes, you mess up merges or rebases. Luckily, in Git it is relatively straightforward to recover from such mistakes.</source>
          <target state="translated">때로는 병합 또는 리베이스를 엉망으로 만듭니다. 다행히 Git에서는 이러한 실수로부터 복구하는 것이 비교적 간단합니다.</target>
        </trans-unit>
        <trans-unit id="013e7e93c49d182f82742c8920c97f56d061e7e4" translate="yes" xml:space="preserve">
          <source>Somewhat more sophisticated example</source>
          <target state="translated">좀 더 정교한 예</target>
        </trans-unit>
        <trans-unit id="328b7438e36cdae2c28d64a3dd3bc7ddc0df1e77" translate="yes" xml:space="preserve">
          <source>Sort a complex array using the real part first, then the imaginary part.</source>
          <target state="translated">실수 부분을 먼저 사용한 다음 허수 부분을 사용하여 복잡한 배열을 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="7703cef2dff0050a3552375a078ec7f70589b4bd" translate="yes" xml:space="preserve">
          <source>Sort an array in-place.</source>
          <target state="translated">제자리에 배열을 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="758912cadfdc3e6db6c081dc567a966e86a886f3" translate="yes" xml:space="preserve">
          <source>Sort an array in-place. Refer to &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;numpy.sort&lt;/code&gt;&lt;/a&gt; for full documentation.</source>
          <target state="translated">제자리에 배열을 정렬하십시오. 전체 설명서 는 &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;numpy.sort&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e971cf5812926cfacabdee56dc64c56ffada0b99" translate="yes" xml:space="preserve">
          <source>Sort by age, then height if ages are equal:</source>
          <target state="translated">나이를 기준으로 정렬 한 다음 나이가 같은 경우 키를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="edf066d3ae816f3adbcc852b784794ee538b1cc5" translate="yes" xml:space="preserve">
          <source>Sort names: first by surname, then by name.</source>
          <target state="translated">이름을 먼저 성을 기준으로 정렬 한 다음 이름을 기준으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="c29b838e8a5ddeb05ab8f84b06787846a1a439df" translate="yes" xml:space="preserve">
          <source>Sort the array, in-place</source>
          <target state="translated">적절한 위치에 배열 정렬</target>
        </trans-unit>
        <trans-unit id="b84eb35a33eb1b763dfde94c1db6ce2176107aa8" translate="yes" xml:space="preserve">
          <source>Sort two columns of numbers:</source>
          <target state="translated">두 개의 숫자 열을 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="880e5dacaffdb29c387c406a9aa16d00ec9b6165" translate="yes" xml:space="preserve">
          <source>Sorted 1D array of common and unique elements.</source>
          <target state="translated">공통적이고 고유 한 요소로 정렬 된 1D 배열.</target>
        </trans-unit>
        <trans-unit id="2b58c607b5c87ff5c9488ade6840a7c97cabbe74" translate="yes" xml:space="preserve">
          <source>Sorted 1D array of unique values that are in only one of the input arrays.</source>
          <target state="translated">입력 배열 중 하나에 만있는 고유 한 값으로 정렬 된 1D 배열입니다.</target>
        </trans-unit>
        <trans-unit id="378e9e163b7eecefadb4415cae533096e336c4ab" translate="yes" xml:space="preserve">
          <source>Sorting</source>
          <target state="translated">Sorting</target>
        </trans-unit>
        <trans-unit id="ba112ceba77d3fead905df9fb056b8ffb7481e25" translate="yes" xml:space="preserve">
          <source>Sorting algorithm. The default is &amp;lsquo;quicksort&amp;rsquo;. Note that both &amp;lsquo;stable&amp;rsquo; and &amp;lsquo;mergesort&amp;rsquo; use timsort or radix sort under the covers and, in general, the actual implementation will vary with data type. The &amp;lsquo;mergesort&amp;rsquo; option is retained for backwards compatibility.</source>
          <target state="translated">정렬 알고리즘. 기본값은 'quicksort'입니다. 'stable'과 'mergesort'는 모두 표지 아래에서 timsort 또는 radix sort를 사용하며 일반적으로 실제 구현은 데이터 유형에 따라 다릅니다. 이전 버전과의 호환성을 위해 'mergesort'옵션이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0575bbf541bc6691bd2f441dd799bc35084ddbf2" translate="yes" xml:space="preserve">
          <source>Sorting algorithm. The default is &amp;lsquo;quicksort&amp;rsquo;. Note that both &amp;lsquo;stable&amp;rsquo; and &amp;lsquo;mergesort&amp;rsquo; use timsort under the covers and, in general, the actual implementation will vary with data type. The &amp;lsquo;mergesort&amp;rsquo; option is retained for backwards compatibility.</source>
          <target state="translated">정렬 알고리즘. 기본값은 'quicksort'입니다. 'stable'과 'mergesort'는 모두 덮개 아래에서 timsort를 사용하며 일반적으로 실제 구현은 데이터 유형에 따라 다릅니다. 이전 버전과의 호환성을 위해 'mergesort'옵션이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="2cdbbd83ff8697bca9c84ed001e2e5d899425b4f" translate="yes" xml:space="preserve">
          <source>Sorting algorithm. The default is &amp;lsquo;quicksort&amp;rsquo;. Note that both &amp;lsquo;stable&amp;rsquo; and &amp;lsquo;mergesort&amp;rsquo; use timsort under the covers and, in general, the actual implementation will vary with datatype. The &amp;lsquo;mergesort&amp;rsquo; option is retained for backwards compatibility.</source>
          <target state="translated">정렬 알고리즘. 기본값은 'quicksort'입니다. 'stable'과 'mergesort'는 모두 덮개 아래에서 timsort를 사용하며 일반적으로 실제 구현은 데이터 유형에 따라 다릅니다. 이전 버전과의 호환성을 위해 'mergesort'옵션이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="ac2a35ddb37753b49a15b129584e4d1ff35a6cad" translate="yes" xml:space="preserve">
          <source>Sorting an element is simple with &lt;code&gt;np.sort()&lt;/code&gt;. You can specify the axis, kind, and order when you call the function.</source>
          <target state="translated">요소 정렬은 &lt;code&gt;np.sort()&lt;/code&gt; 하여 간단 합니다. 함수를 호출 할 때 축, 종류 및 순서를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdc99b8f2211c27e95a7ae2ea3c4e510c89721f9" translate="yes" xml:space="preserve">
          <source>Sorting with keys:</source>
          <target state="translated">키로 정렬 :</target>
        </trans-unit>
        <trans-unit id="26d009fe61cd6c804332028c785b29bfb52d084f" translate="yes" xml:space="preserve">
          <source>Sorting, searching, and counting</source>
          <target state="translated">정렬, 검색 및 계산</target>
        </trans-unit>
        <trans-unit id="6767832dfbb08054083a5a2806dbcbcc61e43981" translate="yes" xml:space="preserve">
          <source>Source array</source>
          <target state="translated">소스 배열</target>
        </trans-unit>
        <trans-unit id="0573d3f51a9aab11e2cc3aca537f496eac0b69fc" translate="yes" xml:space="preserve">
          <source>Source distribution</source>
          <target state="translated">소스 배포</target>
        </trans-unit>
        <trans-unit id="f129cc36c0cc30f28b30e1834c4eba00a6a6b06e" translate="yes" xml:space="preserve">
          <source>Source of entropy. &amp;lsquo;system&amp;rsquo; uses system cryptographic pool. &amp;lsquo;fallback&amp;rsquo; uses a hash of the time and process id.</source>
          <target state="translated">엔트로피의 근원. 'system'은 시스템 암호화 풀을 사용합니다. '대체'는 시간 및 프로세스 ID의 해시를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a7c9035efe52f2756450e1fe32a13149d10a224e" translate="yes" xml:space="preserve">
          <source>Source tree</source>
          <target state="translated">소스 트리</target>
        </trans-unit>
        <trans-unit id="dc1737b3b1fae12e4ca81687b7ce0c8d06e3bfa1" translate="yes" xml:space="preserve">
          <source>Spacing between f values. Default unitary spacing for all dimensions. Spacing can be specified using:</source>
          <target state="translated">f 값 사이의 간격. 모든 치수의 기본 단일 간격입니다. 간격은 다음을 사용하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="534a506bdd04ed14f369aaa8c5d2a5a1b475cf75" translate="yes" xml:space="preserve">
          <source>Spacing between values. For any output &lt;code&gt;out&lt;/code&gt;, this is the distance between two adjacent values, &lt;code&gt;out[i+1] - out[i]&lt;/code&gt;. The default step size is 1. If &lt;code&gt;step&lt;/code&gt; is specified as a position argument, &lt;code&gt;start&lt;/code&gt; must also be given.</source>
          <target state="translated">값 사이의 간격. 출력 &lt;code&gt;out&lt;/code&gt; 의 경우 , 이것은 두 개의 인접한 값 &lt;code&gt;out[i+1] - out[i]&lt;/code&gt; 사이의 거리 입니다. 기본 단계 크기는 1입니다. &lt;code&gt;step&lt;/code&gt; 가 위치 인수로 지정된 경우 &lt;code&gt;start&lt;/code&gt; 도 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b1c83ae389903de1c17429b8031bd633cfea38a" translate="yes" xml:space="preserve">
          <source>Spacing can be also specified with an array that represents the coordinates of the values F along the dimensions. For instance a uniform spacing:</source>
          <target state="translated">간격은 치수를 따라 값 F의 좌표를 나타내는 배열로 지정할 수도 있습니다. 예를 들어 균일 한 간격 :</target>
        </trans-unit>
        <trans-unit id="3c1452a3b0205f538f941fa6e2df87a5606ff452" translate="yes" xml:space="preserve">
          <source>Spacing of +- inf and NaN is NaN.</source>
          <target state="translated">+-inf와 NaN의 간격은 NaN입니다.</target>
        </trans-unit>
        <trans-unit id="23afed8ee1674d2a0d0a6b27d54e26458214a09b" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;a href=&quot;#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; s by extending the &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt;&lt;code&gt;spawn_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">아이의 숫자 스폰 &lt;a href=&quot;#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt; 연장으로들 &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt; &lt;code&gt;spawn_key&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91b21b0aabd8c374de6706b913967d168827f182" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;a href=&quot;numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; s by extending the &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt;&lt;code&gt;spawn_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">아이의 숫자 스폰 &lt;a href=&quot;numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt; 연장으로들 &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt; &lt;code&gt;spawn_key&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a7b1bed90f9109d1560bedfed1f5842d8350d2b" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;code&gt;SeedSequence&lt;/code&gt; s by extending the &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt;&lt;code&gt;spawn_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">아이의 숫자 스폰 &lt;code&gt;SeedSequence&lt;/code&gt; 연장으로들 &lt;a href=&quot;numpy.random.seedsequence.spawn_key#numpy.random.SeedSequence.spawn_key&quot;&gt; &lt;code&gt;spawn_key&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3011c57bc17adfb34d1d5b7d2a537f2f42b61ecd" translate="yes" xml:space="preserve">
          <source>Spawn a number of child &lt;code&gt;SeedSequence&lt;/code&gt; s by extending the &lt;code&gt;spawn_key&lt;/code&gt;.</source>
          <target state="translated">아이의 숫자 스폰 &lt;code&gt;SeedSequence&lt;/code&gt; 연장으로들 &lt;code&gt;spawn_key&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="5bdcbf562b3722f869ecc22fc6f007711257a292" translate="yes" xml:space="preserve">
          <source>Special attributes and methods</source>
          <target state="translated">특별한 속성과 방법</target>
        </trans-unit>
        <trans-unit id="aed4a5ac93d537d2fee54607e067f0fcd734c2a7" translate="yes" xml:space="preserve">
          <source>Special case of &lt;a href=&quot;#c.PyArray_EquivTypes&quot;&gt;&lt;code&gt;PyArray_EquivTypes&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) that does not accept flexible data types but may be easier to call.</source>
          <target state="translated">유연한 데이터 유형을 허용하지 않지만 호출하기 쉬운 &lt;a href=&quot;#c.PyArray_EquivTypes&quot;&gt; &lt;code&gt;PyArray_EquivTypes&lt;/code&gt; &lt;/a&gt; (&amp;hellip;) 의 특수한 경우 .</target>
        </trans-unit>
        <trans-unit id="1fe419ca9a2135cb73cdfe673bb644f8c5d089ef" translate="yes" xml:space="preserve">
          <source>Special case of &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; for when &lt;em&gt;op&lt;/em&gt; is already an array but it needs to be of a specific &lt;em&gt;newtype&lt;/em&gt; (including byte-order) or has certain &lt;em&gt;requirements&lt;/em&gt;.</source>
          <target state="translated">특별 케이스 &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; 때의 &lt;em&gt;연산이&lt;/em&gt; 이미 어레이이지만, 특정의 구성 될 필요 &lt;em&gt;newtype은&lt;/em&gt; (바이트 순서를 포함) 또는 특정 보유 &lt;em&gt;요건&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="75f613a38c9a77eef52fd9053dd584ff64dc4df0" translate="yes" xml:space="preserve">
          <source>Special cases</source>
          <target state="translated">특수한 상황들</target>
        </trans-unit>
        <trans-unit id="60bf3781f7b69622f4280d80dab8f4e70529bfe8" translate="yes" xml:space="preserve">
          <source>Special functions for NPY_OBJECT</source>
          <target state="translated">NPY_OBJECT를위한 특수 함수</target>
        </trans-unit>
        <trans-unit id="b3dfcf123c0344e2a770caf2c6d80f585312a2df" translate="yes" xml:space="preserve">
          <source>Special hook for ufuncs.</source>
          <target state="translated">ufunc에 대한 특수 후크.</target>
        </trans-unit>
        <trans-unit id="93a7e480fca31e54d3a1bf415987f972c987379d" translate="yes" xml:space="preserve">
          <source>Special methods</source>
          <target state="translated">특별한 방법</target>
        </trans-unit>
        <trans-unit id="236fb9c3ae636a04ac95eb7b7ad259661aa1f52c" translate="yes" xml:space="preserve">
          <source>Special options</source>
          <target state="translated">특별 옵션</target>
        </trans-unit>
        <trans-unit id="74beb6845eb25315ea92e2ea4ebb77c3ebadf8dd" translate="yes" xml:space="preserve">
          <source>Special scalar float values don&amp;rsquo;t cause upcast to double anymore</source>
          <target state="translated">특별한 스칼라 부동 값은 더 이상 업 캐스트를 두 배로 만들지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b47c55cf6c229444142c9b9017fc538e2c7deff" translate="yes" xml:space="preserve">
          <source>Special values defined in numpy: nan, inf,</source>
          <target state="translated">numpy에 정의 된 특수 값 : nan, inf,</target>
        </trans-unit>
        <trans-unit id="a2158670ec5e5117a3b35c2952cf53165872b26e" translate="yes" xml:space="preserve">
          <source>Specialized &lt;code&gt;isnan&lt;/code&gt;, &lt;code&gt;isinf&lt;/code&gt;, and &lt;code&gt;isfinite&lt;/code&gt; ufuncs for bool and int types</source>
          <target state="translated">bool 및 int 유형에 대한 특수화 된 &lt;code&gt;isnan&lt;/code&gt; , &lt;code&gt;isinf&lt;/code&gt; 및 &lt;code&gt;isfinite&lt;/code&gt; ufunc</target>
        </trans-unit>
        <trans-unit id="8899a5e1011908ed3c98b6c76098d0a6e169ff42" translate="yes" xml:space="preserve">
          <source>Specialized, in-depth documentation</source>
          <target state="translated">전문화 된 심층 문서</target>
        </trans-unit>
        <trans-unit id="3231c99cca4b4794d01cebdeb84abe04e24ba373" translate="yes" xml:space="preserve">
          <source>Specific Guidelines</source>
          <target state="translated">특정 지침</target>
        </trans-unit>
        <trans-unit id="552d192c548d97ba2f26ac2b633deab2d34515a8" translate="yes" xml:space="preserve">
          <source>Specific features of ndarray sub-typing</source>
          <target state="translated">ndarray 하위 입력의 특정 기능</target>
        </trans-unit>
        <trans-unit id="3002d8550adc7583b9e34c0e71be4f097501b6cb" translate="yes" xml:space="preserve">
          <source>Specific methods</source>
          <target state="translated">구체적인 방법</target>
        </trans-unit>
        <trans-unit id="cf2f0aad66d259134ba110faea6639bae5dba0cf" translate="yes" xml:space="preserve">
          <source>Specifies how indices outside &lt;code&gt;[0, n-1]&lt;/code&gt; will be treated:</source>
          <target state="translated">&lt;code&gt;[0, n-1]&lt;/code&gt; 외부의 인덱스를 처리하는 방법을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="a7fddec5bc5d09611a6a6411474f1557bfcece40" translate="yes" xml:space="preserve">
          <source>Specifies how out-of-bounds indices are handled. Can specify either one mode or a tuple of modes, one mode per index.</source>
          <target state="translated">범위를 벗어난 인덱스를 처리하는 방법을 지정합니다. 인덱스 당 하나의 모드 또는 하나의 모드 또는 튜플 모드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd5a8d9eaa67a4089d4d8ea6c9d2499b271531d4" translate="yes" xml:space="preserve">
          <source>Specifies how out-of-bounds indices will behave.</source>
          <target state="translated">범위를 벗어난 인덱스의 동작 방식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0c82c7d4c03f4e3d40af4885f34fa55cd32452a2" translate="yes" xml:space="preserve">
          <source>Specifies how out-of-bounds indices will behave. &amp;lsquo;raise&amp;rsquo; : raise an error. &amp;lsquo;wrap&amp;rsquo; : wrap around. &amp;lsquo;clip&amp;rsquo; : clip to the range.</source>
          <target state="translated">범위를 벗어난 인덱스의 동작 방식을 지정합니다. '올림': 오류가 발생합니다. '랩': 랩 어라운드. 'clip': 범위에 클립합니다.</target>
        </trans-unit>
        <trans-unit id="613844173fd200c8dfdc2aaedd515354fe3b2a25" translate="yes" xml:space="preserve">
          <source>Specifies how to handle encoding errors</source>
          <target state="translated">인코딩 오류를 처리하는 방법을 지정합니다</target>
        </trans-unit>
        <trans-unit id="9b982562ff1b137afe496fb00468655c2065dda1" translate="yes" xml:space="preserve">
          <source>Specifies the calculation iteration order/memory layout of the output array. Defaults to &amp;lsquo;K&amp;rsquo;. &amp;lsquo;C&amp;rsquo; means the output should be C-contiguous, &amp;lsquo;F&amp;rsquo; means F-contiguous, &amp;lsquo;A&amp;rsquo; means F-contiguous if the inputs are F-contiguous and not also not C-contiguous, C-contiguous otherwise, and &amp;lsquo;K&amp;rsquo; means to match the element ordering of the inputs as closely as possible.</source>
          <target state="translated">출력 배열의 계산 반복 순서 / 메모리 레이아웃을 지정합니다. 기본값은 'K'입니다. 'C'는 출력이 C 연속이어야 함을 의미하고 'F'는 F 연속을 의미합니다. '는 입력의 요소 순서를 가능한 한 가깝게 일치시키는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="050a737d589d7084aca709c1606453929922c13e" translate="yes" xml:space="preserve">
          <source>Specifies the minimum number of dimensions that the resulting array should have. Ones will be pre-pended to the shape as needed to meet this requirement.</source>
          <target state="translated">결과 배열에 필요한 최소 차원 수를 지정합니다. 이 요구 사항을 충족하는 데 필요한 모양이 미리 붙습니다.</target>
        </trans-unit>
        <trans-unit id="1931e4d3fdc0bcca4a66f0fb2135dc85de6a0cb0" translate="yes" xml:space="preserve">
          <source>Specifies the subscripts for summation as comma separated list of subscript labels. An implicit (classical Einstein summation) calculation is performed unless the explicit indicator &amp;lsquo;-&amp;gt;&amp;rsquo; is included as well as subscript labels of the precise output form.</source>
          <target state="translated">첨자 첨자를 쉼표로 구분 된 첨자 레이블 목록으로 지정합니다. 정확한 출력 양식의 아래 첨자 레이블과 함께 명시 적 표시기 '-&amp;gt;'가 포함되지 않은 경우 내재적 (고전적인 아인슈타인 합산) 계산이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="7ecc55fddab59538bed27df3a80b7134cf4b1452" translate="yes" xml:space="preserve">
          <source>Specifies the subscripts for summation.</source>
          <target state="translated">합계를위한 첨자를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dc782b605bddd3902febdfde45c4deaed380a257" translate="yes" xml:space="preserve">
          <source>Specifies whether the calculation is done with the lower triangular part of &lt;code&gt;a&lt;/code&gt; (&amp;lsquo;L&amp;rsquo;, default) or the upper triangular part (&amp;lsquo;U&amp;rsquo;). Irrespective of this value only the real parts of the diagonal will be considered in the computation to preserve the notion of a Hermitian matrix. It therefore follows that the imaginary part of the diagonal will always be treated as zero.</source>
          <target state="translated">계산이의 아래 삼각형 부분으로 수행할지 여부를 지정 ( 'L', 기본값) 또는 상부 삼각형 부분 ( 'U'). 이 값과 상관없이 허미 시안 행렬의 개념을 보존하기 위해 대각선의 실제 부분 만 계산에서 고려됩니다. 따라서 대각선의 허수 부분은 항상 0으로 취급됩니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84b53fe298f53e60bfe5c134c03be76d2e5954a6" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;count&lt;/code&gt; to improve performance. It allows &lt;code&gt;fromiter&lt;/code&gt; to pre-allocate the output array, instead of resizing it on demand.</source>
          <target state="translated">성능을 향상 시키려면 &lt;code&gt;count&lt;/code&gt; 를 지정하십시오 . 이것은 허용 &lt;code&gt;fromiter&lt;/code&gt; 대신 수요에 리사이즈 출력 배열을 미리 할당.</target>
        </trans-unit>
        <trans-unit id="8e47dd699795bbff19e2079eb9b60b779f348ba1" translate="yes" xml:space="preserve">
          <source>Specify F77 compiler flags</source>
          <target state="translated">F77 컴파일러 플래그 지정</target>
        </trans-unit>
        <trans-unit id="1dcabceb32b27e0847050d1a346a04229536da54" translate="yes" xml:space="preserve">
          <source>Specify F90 compiler flags</source>
          <target state="translated">F90 컴파일러 플래그 지정</target>
        </trans-unit>
        <trans-unit id="8adb73cadd47dbe74102288e37caa0fd6b7db46d" translate="yes" xml:space="preserve">
          <source>Specify Fortran compiler type by vendor.</source>
          <target state="translated">공급 업체별로 Fortran 컴파일러 유형을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f370943c83badb26dd5a7697022661a921c18d58" translate="yes" xml:space="preserve">
          <source>Specify architecture specific optimization flags</source>
          <target state="translated">아키텍처 별 최적화 플래그 지정</target>
        </trans-unit>
        <trans-unit id="6cd35496e6db0dfd44a3dbf9c1531af1eb18b378" translate="yes" xml:space="preserve">
          <source>Specify optimization flags</source>
          <target state="translated">최적화 플래그 지정</target>
        </trans-unit>
        <trans-unit id="d2e60a439c767ec0b6740ba66972caebb34c777a" translate="yes" xml:space="preserve">
          <source>Specify the algorithm that is used to generate the variates. Must be &amp;lsquo;count&amp;rsquo; or &amp;lsquo;marginals&amp;rsquo; (the default). See the Notes for a description of the methods.</source>
          <target state="translated">변량을 생성하는 데 사용되는 알고리즘을 지정하십시오. 'count'또는 'marginals'(기본값) 여야합니다. 방법에 대한 설명은 참고를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a2559f8e80c3826a37d110b99c7697f1e76b2b76" translate="yes" xml:space="preserve">
          <source>Specify the memory layout of the array. If object is not an array, the newly created array will be in C order (row major) unless &amp;lsquo;F&amp;rsquo; is specified, in which case it will be in Fortran order (column major). If object is an array the following holds.</source>
          <target state="translated">배열의 메모리 레이아웃을 지정하십시오. object가 배열이 아닌 경우, 'F'를 지정하지 않으면 새로 작성된 배열은 C 순서 (행 메이저)가되며,이 경우 배열은 포트란 순서 (열 메이저)가됩니다. object가 배열이면 다음을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="c44bd2c1faa32dfad2b525474c59d5dbcd2e61f5" translate="yes" xml:space="preserve">
          <source>Specify the order of the array. If order is &amp;lsquo;C&amp;rsquo; (default), then the array will be in C-contiguous order (last-index varies the fastest). If order is &amp;lsquo;F&amp;rsquo;, then the returned array will be in Fortran-contiguous order (first-index varies the fastest).</source>
          <target state="translated">배열의 순서를 지정하십시오. 차수가 'C'(기본값)이면 배열은 C 연속 순서입니다 (마지막 색인이 가장 빠름). order가 'F'이면 반환 된 배열은 연속적인 순서입니다 (첫 번째 인덱스가 가장 빠름).</target>
        </trans-unit>
        <trans-unit id="8f0736b76ded7485aa40ce78476b297a664e4a9e" translate="yes" xml:space="preserve">
          <source>Specify the order of the array. If order is &amp;lsquo;C&amp;rsquo; (default), then the array will be in C-contiguous order (last-index varies the fastest). If order is &amp;lsquo;F&amp;rsquo;, then the returned array will be in Fortran-contiguous order (first-index varies the fastest). If order is &amp;lsquo;A&amp;rsquo;, then the returned array may be in any order (either C-, Fortran-contiguous, or even discontiguous).</source>
          <target state="translated">배열의 순서를 지정하십시오. 차수가 'C'(기본값)이면 배열은 C 연속 순서입니다 (마지막 색인이 가장 빠름). order가 'F'이면 반환 된 배열은 연속적인 순서입니다 (첫 번째 인덱스가 가장 빠름). order가 'A'이면 반환 된 배열의 순서는 임의의 순서 (C-, Fortran-contiguous 또는 uncontiguous) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21cff05ed82b999db4c7f573fea17c64f4478c68" translate="yes" xml:space="preserve">
          <source>Specify the order of the array. If order is &amp;lsquo;C&amp;rsquo;, then the array will be in C-contiguous order (last-index varies the fastest). If order is &amp;lsquo;F&amp;rsquo;, then the returned array will be in Fortran-contiguous order (first-index varies the fastest). If order is &amp;lsquo;A&amp;rsquo; (default), then the returned array may be in any order (either C-, Fortran-contiguous, or even discontiguous), unless a copy is required, in which case it will be C-contiguous.</source>
          <target state="translated">배열의 순서를 지정하십시오. 차수가 'C'인 경우 배열은 C 연속 순서입니다 (마지막 색인은 가장 빠름). order가 'F'이면 반환 된 배열은 연속적인 순서입니다 (첫 번째 인덱스가 가장 빠름). order가 'A'(기본값)이면 복사가 필요하지 않은 경우 반환 된 배열은 임의 순서 (C-, Fortran-contiguous 또는 uncontiguous) 일 수 있습니다.이 경우 C-contiguous가됩니다.</target>
        </trans-unit>
        <trans-unit id="1fb27d227bb393f1187ad4e5eb0ced3e536e01ee" translate="yes" xml:space="preserve">
          <source>Specify the order of the ndarray memory layout: &lt;a href=&quot;../../glossary#term-row-major&quot;&gt;row-major&lt;/a&gt;, C-style or &lt;a href=&quot;../../glossary#term-column-major&quot;&gt;column-major&lt;/a&gt;, Fortran-style. This only has an effect if the shape is greater than 1-D. The default order is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">ndarray 메모리 레이아웃의 순서를 지정하십시오 : &lt;a href=&quot;../../glossary#term-row-major&quot;&gt;row-major&lt;/a&gt; , C-style 또는 &lt;a href=&quot;../../glossary#term-column-major&quot;&gt;column-major&lt;/a&gt; , Fortran-style. 이것은 모양이 1-D보다 큰 경우에만 효과가 있습니다. 기본 순서는 'C'입니다.</target>
        </trans-unit>
        <trans-unit id="b4bff2e865a836b411173470fe4113bf016b57f0" translate="yes" xml:space="preserve">
          <source>Specify the order of the ndarray memory layout: &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt;, C-style or &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;column-major&lt;/a&gt;, Fortran-style. This only has an effect if the shape is greater than 1-D. The default order is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">ndarray 메모리 레이아웃의 순서를 지정하십시오 : &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt; , C-style 또는 &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;column-major&lt;/a&gt; , Fortran-style. 모양이 1D보다 큰 경우에만 효과가 있습니다. 기본 순서는 'C'입니다.</target>
        </trans-unit>
        <trans-unit id="ca65dac8916a03a2b42b9073cf8dba2d198d2c46" translate="yes" xml:space="preserve">
          <source>Specify the path to F77 compiler</source>
          <target state="translated">F77 컴파일러의 경로 지정</target>
        </trans-unit>
        <trans-unit id="f40540977344e7693e0730aa8ce345078b96cb56" translate="yes" xml:space="preserve">
          <source>Specify the path to F90 compiler</source>
          <target state="translated">F90 컴파일러의 경로 지정</target>
        </trans-unit>
        <trans-unit id="25ffc5daaa5434408ba7fc08d7e2fa025443a543" translate="yes" xml:space="preserve">
          <source>Specifying a where argument:</source>
          <target state="translated">where 인수 지정 :</target>
        </trans-unit>
        <trans-unit id="55a5e09335e7b11d69401e54a34729197354c2ca" translate="yes" xml:space="preserve">
          <source>Specifying a where argument: &amp;gt;&amp;gt;&amp;gt; a = np.array([[5, 9, 13], [14, 10, 12], [11, 15, 19]]) &amp;gt;&amp;gt;&amp;gt; np.mean(a) 12.0 &amp;gt;&amp;gt;&amp;gt; np.mean(a, where=[[True], [False], [False]]) 9.0</source>
          <target state="translated">where 인수 지정 : &amp;gt;&amp;gt;&amp;gt; a = np.array ([[5, 9, 13], [14, 10, 12], [11, 15, 19]]) &amp;gt;&amp;gt;&amp;gt; np.mean (a) 12.0 &amp;gt;&amp;gt;&amp;gt; np.mean (a, where = [[True], [False], [False]]) 9.0</target>
        </trans-unit>
        <trans-unit id="83ad629c93587e0e12f83328a8f66ad92721efa4" translate="yes" xml:space="preserve">
          <source>Specifying and constructing data types</source>
          <target state="translated">데이터 타입 지정 및 구성</target>
        </trans-unit>
        <trans-unit id="00b91ffde426d9b0a3c3899a390a47a2d221ddad" translate="yes" xml:space="preserve">
          <source>Specifying config_fc options for libraries in setup.py script</source>
          <target state="translated">setup.py 스크립트에서 라이브러리에 대한 config_fc 옵션 지정</target>
        </trans-unit>
        <trans-unit id="497ce53e1d016b8475e5f51d0ed03829af1fe8b7" translate="yes" xml:space="preserve">
          <source>Specifying dtype and names</source>
          <target state="translated">dtype 및 이름 지정</target>
        </trans-unit>
        <trans-unit id="99c8805177de6129ae475f67ee264572110d40f8" translate="yes" xml:space="preserve">
          <source>Specifying just the month, but forcing a &amp;lsquo;days&amp;rsquo; unit:</source>
          <target state="translated">월만 지정하고 '일'단위를 강제 :</target>
        </trans-unit>
        <trans-unit id="b3dbb36c7df88f2134e58d3a13401955888547e5" translate="yes" xml:space="preserve">
          <source>Specifying the roots of a polynomial still leaves one degree of freedom, typically represented by an undetermined leading coefficient. &lt;a href=&quot;#r6c2ffae921d1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; In the case of this function, that coefficient - the first one in the returned array - is always taken as one. (If for some reason you have one other point, the only automatic way presently to leverage that information is to use &lt;code&gt;polyfit&lt;/code&gt;.)</source>
          <target state="translated">다항식의 근을 지정하면 여전히 자유도를 유지하며 일반적으로 결정되지 않은 선행 계수로 표시됩니다. &lt;a href=&quot;#r6c2ffae921d1-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; 이 함수의 경우, 반환 된 배열의 첫 번째 계수 인 계수는 항상 1로 간주됩니다. (어떤 이유로 다른 점이 있다면 현재 해당 정보를 활용하는 유일한 자동 방법은 &lt;code&gt;polyfit&lt;/code&gt; 을 사용하는 것 입니다.)</target>
        </trans-unit>
        <trans-unit id="d2530001e7fd871e53a2ba97c658ec2622aa446b" translate="yes" xml:space="preserve">
          <source>Speed could be gained in some operations by an implementation of &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt;&lt;code&gt;numpy.sort&lt;/code&gt;&lt;/a&gt;, that can provide directly the permutation vectors, thus avoiding calls to &lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;numpy.argsort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순열 벡터를 직접 제공 할 수있는 &lt;a href=&quot;numpy.sort#numpy.sort&quot;&gt; &lt;code&gt;numpy.sort&lt;/code&gt; &lt;/a&gt; 구현을 통해 일부 작업에서 속도를 얻을 수 있으므로 numpy.argsort 호출을 &lt;a href=&quot;numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;numpy.argsort&lt;/code&gt; &lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="594ba849acb62bf9955d3fae75bdbb1d0f88e7a2" translate="yes" xml:space="preserve">
          <source>Speed improvement for np.random.shuffle</source>
          <target state="translated">np.random.shuffle의 속도 향상</target>
        </trans-unit>
        <trans-unit id="0b1f4aea2b38e05ca6cff4352833d4c2eead6bd1" translate="yes" xml:space="preserve">
          <source>Speeding up copy operations by using uint assignment in instead of memcpy</source>
          <target state="translated">memcpy 대신 uint 할당을 사용하여 복사 작업 속도 향상</target>
        </trans-unit>
        <trans-unit id="a14b3fe9e3a8f7a006654577a6ae1da8f05955f4" translate="yes" xml:space="preserve">
          <source>Speedup &lt;code&gt;np.block&lt;/code&gt; for large arrays</source>
          <target state="translated">큰 배열을위한 &lt;code&gt;np.block&lt;/code&gt; 속도 향상</target>
        </trans-unit>
        <trans-unit id="40f31f8c5826e4dbe6f04955ac190ea5cc71bdb4" translate="yes" xml:space="preserve">
          <source>Speedup &lt;code&gt;np.take&lt;/code&gt; for read-only arrays</source>
          <target state="translated">읽기 전용 배열에 대한 &lt;code&gt;np.take&lt;/code&gt; 속도 향상</target>
        </trans-unit>
        <trans-unit id="2bafe3b9bad42eed1cf1d2eed53157311e9bd804" translate="yes" xml:space="preserve">
          <source>Spherical covariance (&lt;a href=&quot;../../generated/numpy.cov#numpy.cov&quot;&gt;&lt;code&gt;cov&lt;/code&gt;&lt;/a&gt; is a multiple of the identity matrix)</source>
          <target state="translated">구형 공분산 ( &lt;a href=&quot;../../generated/numpy.cov#numpy.cov&quot;&gt; &lt;code&gt;cov&lt;/code&gt; &lt;/a&gt; 는 단위 행렬의 배수)</target>
        </trans-unit>
        <trans-unit id="76bb3aba19733547ddb8d57ed987b6a041161ff6" translate="yes" xml:space="preserve">
          <source>Spherical covariance (&lt;code&gt;cov&lt;/code&gt; is a multiple of the identity matrix)</source>
          <target state="translated">구형 공분산 ( &lt;code&gt;cov&lt;/code&gt; 는 항등 행렬의 배수 임)</target>
        </trans-unit>
        <trans-unit id="916f5f35ac38196af506905815cb0ca39bdc945d" translate="yes" xml:space="preserve">
          <source>Sphinx (pip)</source>
          <target state="translated">스핑크스 (pip)</target>
        </trans-unit>
        <trans-unit id="6812de7308d57b3049480b863a1f55dfc4da84e7" translate="yes" xml:space="preserve">
          <source>Sphinx extensions</source>
          <target state="translated">스핑크스 확장</target>
        </trans-unit>
        <trans-unit id="4efa11778c1ea32ea551ee21675a9b8096e60567" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays as views into &lt;code&gt;ary&lt;/code&gt;.</source>
          <target state="translated">배열을 &lt;code&gt;ary&lt;/code&gt; 에 대한 뷰로 여러 하위 배열로 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="088d71f3f52d7346fd614d711bd267b4c39c4007" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays horizontally (column-wise).</source>
          <target state="translated">배열을 가로 (열 방향)의 여러 하위 배열로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="b5754126c144e79af24aefbc17318a87cc5f7fd2" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays of equal or near-equal size.</source>
          <target state="translated">배열을 같거나 거의 같은 크기의 여러 하위 배열로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="0cf080dcab286083ff1cc66a435eccc8025f3bbc" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays of equal or near-equal size. Does not raise an exception if an equal division cannot be made.</source>
          <target state="translated">배열을 같거나 거의 같은 크기의 여러 하위 배열로 나눕니다. 동등하게 나눌 수없는 경우 예외를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6395892c45b206d6b99821cc909fe1d65570f05" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays of equal size.</source>
          <target state="translated">배열을 동일한 크기의 여러 하위 배열로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="505aae82481059a2edd349c99b982eb22991f3d7" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays vertically (row-wise).</source>
          <target state="translated">배열을 세로 (행 방향)로 여러 하위 배열로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="0976bf6e914482518c948616b2a64bfe1f530549" translate="yes" xml:space="preserve">
          <source>Split an array into multiple sub-arrays.</source>
          <target state="translated">배열을 여러 하위 배열로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="ffd00244dfa808ccdb1e357f445723b1de446321" translate="yes" xml:space="preserve">
          <source>Split array along second axis.</source>
          <target state="translated">두 번째 축을 따라 배열을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="19f8340eb834a92f93fbe1b260b02dab12c9b437" translate="yes" xml:space="preserve">
          <source>Split array along third axis.</source>
          <target state="translated">세 번째 축을 따라 배열을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="abb8acff6e092f71fe2d7d85b72048053b4e0289" translate="yes" xml:space="preserve">
          <source>Split array into a list of multiple sub-arrays of equal size.</source>
          <target state="translated">배열을 동일한 크기의 여러 하위 배열 목록으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="eeb46fbf791ef3d6b7513aae13670bfd1d286c5f" translate="yes" xml:space="preserve">
          <source>Split array into a list of multiple sub-arrays vertically.</source>
          <target state="translated">배열을 여러 개의 하위 배열 목록으로 세로로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="08031d3c1e963e5e593f6077f8007bde4094d65a" translate="yes" xml:space="preserve">
          <source>Split array into multiple sub-arrays along the 3rd axis (depth).</source>
          <target state="translated">세 번째 축 (깊이)을 따라 배열을 여러 하위 배열로 분할합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
