<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="react_native">
    <body>
      <group id="react_native">
        <trans-unit id="33c3b258dfa8566284e35490f2ddf0a6240b5aa6" translate="yes" xml:space="preserve">
          <source>This section only applies to projects made with &lt;code&gt;react-native init&lt;/code&gt; or to those made with Create React Native App which have since ejected. For more information about ejecting, please see the &lt;a href=&quot;https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md&quot;&gt;guide&lt;/a&gt; on the Create React Native App repository.</source>
          <target state="translated">이 섹션은 &lt;code&gt;react-native init&lt;/code&gt; 로 작성된 프로젝트 또는 배출 된 React Native App로 작성된 프로젝트에만 적용 됩니다. 추출에 대한 자세한 내용은 React Native App 리포지토리 생성 &lt;a href=&quot;https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md&quot;&gt;가이드&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1899a78bc738ea9a1d7a7912e3e40e21417a49c9" translate="yes" xml:space="preserve">
          <source>This should only be called from native code by sending the didUpdateDimensions event.</source>
          <target state="translated">didUpdateDimensions 이벤트를 보내 원시 코드에서만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f8baf6716df0c58ec2fe7f1b362acd6370b64fc" translate="yes" xml:space="preserve">
          <source>This style takes precedence over the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; styles.</source>
          <target state="translated">이 스타일은 &lt;code&gt;left&lt;/code&gt; 및 &lt;code&gt;right&lt;/code&gt; 스타일 보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="248075517f17409952b8950d98aa3dd331616006" translate="yes" xml:space="preserve">
          <source>This style takes precedence over the &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, and &lt;code&gt;end&lt;/code&gt; styles.</source>
          <target state="translated">이 스타일은 &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; 및 &lt;code&gt;end&lt;/code&gt; 스타일 보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="3168c87e990bac7c17434cadd2bd6fd628bc2220" translate="yes" xml:space="preserve">
          <source>This will automatically remove all &lt;code&gt;console.*&lt;/code&gt; calls in the release (production) versions of your project.</source>
          <target state="translated">이렇게하면 프로젝트의 릴리스 (프로덕션) 버전에서 모든 &lt;code&gt;console.*&lt;/code&gt; 호출 이 자동으로 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="2eb2ca5c78d44af579285e1d9b7d6125e67b09c8" translate="yes" xml:space="preserve">
          <source>This will check your files against the latest template and perform the following:</source>
          <target state="translated">그러면 최신 템플릿과 비교하여 파일을 확인하고 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="08d487e08791a4afe0f61aa0b0ce7bda14507677" translate="yes" xml:space="preserve">
          <source>This will eliminate a lot of hard work tracking down bugs, such as crashes caused by timeouts firing after a component has been unmounted.</source>
          <target state="translated">이렇게하면 구성 요소를 마운트 해제 한 후 발생하는 시간 초과로 인한 충돌과 같은 버그를 추적하는 많은 노력이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="213511d48aec4b8eee142dbd08bc3d2e7e2535ca" translate="yes" xml:space="preserve">
          <source>This will now reference the &lt;code&gt;main.jsbundle&lt;/code&gt; resource file that is created during the &lt;code&gt;Bundle React Native code and images&lt;/code&gt; Build Phase in Xcode.</source>
          <target state="translated">이제 &lt;code&gt;Bundle React Native code and images&lt;/code&gt; &lt;code&gt;main.jsbundle&lt;/code&gt; 네이티브 코드와 Xcode의 빌드 단계 이미지 중에 생성 된 main.jsbundle 리소스 파일을 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="091a3653458a2bb847bcb3c3427f4746ee0b94b8" translate="yes" xml:space="preserve">
          <source>This will package everything that would typically be included in the &lt;code&gt;android&lt;/code&gt; directory of your &lt;code&gt;node_modules/react-native/&lt;/code&gt; installation in the root directory of your React Native checkout.</source>
          <target state="translated">이것은 일반적으로 React Native 체크 아웃의 루트 디렉토리에 &lt;code&gt;node_modules/react-native/&lt;/code&gt; 설치 의 &lt;code&gt;android&lt;/code&gt; 디렉토리에 포함되는 모든 것을 패키지 합니다.</target>
        </trans-unit>
        <trans-unit id="db6c7ffc36edeab7a4d26569ca167ccd247e08a8" translate="yes" xml:space="preserve">
          <source>This will print a message similar to the following (scroll up in the yarn output to see it):</source>
          <target state="translated">그러면 다음과 유사한 메시지가 인쇄됩니다 (원사 출력에서 ​​위로 스크롤하여 확인).</target>
        </trans-unit>
        <trans-unit id="6010b29a3d8662b06ba17a4fe0d6fff436f7f810" translate="yes" xml:space="preserve">
          <source>This will render a blue label on iOS, and a blue rounded rectangle with white text on Android. Pressing the button will call the &quot;onPress&quot; function, which in this case displays an alert popup. If you like, you can specify a &quot;color&quot; prop to change the color of your button.</source>
          <target state="translated">iOS에서 파란색 레이블을, Android에서 흰색 텍스트가있는 파란색 둥근 사각형을 렌더링합니다. 버튼을 누르면 &quot;onPress&quot;기능이 호출되며이 경우 경고 팝업이 표시됩니다. 원하는 경우 &quot;색상&quot;소품을 지정하여 단추의 색상을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d82c2390c03255287b8b41f929d55d482fae5642" translate="yes" xml:space="preserve">
          <source>This will result in a container having &lt;code&gt;flex: 1&lt;/code&gt; on both platforms, a red background color on iOS, and a blue background color on Android.</source>
          <target state="translated">두 플랫폼 모두 에서 컨테이너가 &lt;code&gt;flex: 1&lt;/code&gt; , iOS의 경우 빨간색 배경색, Android의 경우 파란색 배경색이됩니다.</target>
        </trans-unit>
        <trans-unit id="f6f08daa062f7cd8baa541e61bb425c265f5898f" translate="yes" xml:space="preserve">
          <source>This will start a development server for you.</source>
          <target state="translated">개발 서버가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a3074276c1aa65eaf1d046ad6f6215021ffc6b12" translate="yes" xml:space="preserve">
          <source>Though you may have installed the &lt;code&gt;react-native-cli&lt;/code&gt; via npm as a separate module, it is a shell for accessing the CLI embedded in the React Native of each project. Your commands and their effects are dependent on the version of the module of &lt;code&gt;react-native&lt;/code&gt; in context of the project. This guide will give a brief overview of the CLI in the module.</source>
          <target state="translated">npm을 통해 &lt;code&gt;react-native-cli&lt;/code&gt; 를 별도의 모듈로 설치했지만 각 프로젝트의 React Native에 포함 된 CLI에 액세스하기위한 쉘입니다. 명령과 그 효과는 프로젝트의 맥락에서 &lt;code&gt;react-native&lt;/code&gt; 모듈의 버전에 따라 다릅니다 . 이 안내서는 모듈의 CLI에 대한 간략한 개요를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5541d0b76d127f6a3c54bbc247ffcc1b6c2bbc25" translate="yes" xml:space="preserve">
          <source>Threading</source>
          <target state="translated">Threading</target>
        </trans-unit>
        <trans-unit id="236758baf2d1f4e9e50870f9c35a578bfad9929b" translate="yes" xml:space="preserve">
          <source>Three buttons mean 'neutral', 'negative', 'positive' (such as 'Later', 'Cancel', 'OK')</source>
          <target state="translated">세 개의 버튼은 '중립', '음성', '양성'(예 : '나중', '취소', '확인')</target>
        </trans-unit>
        <trans-unit id="3937302e43d6795dd2ba380b09f29bcb5916b250" translate="yes" xml:space="preserve">
          <source>Three standard easing functions are provided:</source>
          <target state="translated">세 가지 표준 여유 기능이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="218fe1c150b8e4e874fcd136f65c00092debbd09" translate="yes" xml:space="preserve">
          <source>Threshold in pixels (virtual, not physical) for calling onEndReached.</source>
          <target state="translated">onEndReached를 호출하기위한 임계 값 (가상이 아닌 가상)입니다.</target>
        </trans-unit>
        <trans-unit id="205b6a46e3d1b0637597ade9c38bdf1e45565662" translate="yes" xml:space="preserve">
          <source>TimePickerAndroid</source>
          <target state="translated">TimePickerAndroid</target>
        </trans-unit>
        <trans-unit id="ffca255421eef1e58970752ade9e94264336a9fb" translate="yes" xml:space="preserve">
          <source>TimePickerAndroid.dismissedAction()</source>
          <target state="translated">TimePickerAndroid.dismissedAction()</target>
        </trans-unit>
        <trans-unit id="0773daf0a687f2a88d206c54b56883dfe37bd0af" translate="yes" xml:space="preserve">
          <source>TimePickerAndroid.open()</source>
          <target state="translated">TimePickerAndroid.open()</target>
        </trans-unit>
        <trans-unit id="fd877ef8eb38572d715b15d14edc129bb1947ff1" translate="yes" xml:space="preserve">
          <source>TimePickerAndroid.timeSetAction()</source>
          <target state="translated">TimePickerAndroid.timeSetAction()</target>
        </trans-unit>
        <trans-unit id="f46212363e678ee97e4206fd8e79d9de3ece700b" translate="yes" xml:space="preserve">
          <source>TimerMixin</source>
          <target state="translated">TimerMixin</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="24c1f5b8292a5d203884073f480ea8bb1efa9cda" translate="yes" xml:space="preserve">
          <source>Timers are an important part of an application and React Native implements the &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Timers&quot;&gt;browser timers&lt;/a&gt;.</source>
          <target state="translated">타이머는 응용 프로그램의 중요한 부분이며 React Native는 &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Timers&quot;&gt;브라우저 타이머를&lt;/a&gt; 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="0e80c78fe00de24a898a7ae47a8b1d680deaf816" translate="yes" xml:space="preserve">
          <source>Timezone offset in minutes.</source>
          <target state="translated">분 단위의 시간대 오프셋.</target>
        </trans-unit>
        <trans-unit id="5446e9af023e67acb45771c3714df8111e1c7ae4" translate="yes" xml:space="preserve">
          <source>Title color.</source>
          <target state="translated">제목 색상.</target>
        </trans-unit>
        <trans-unit id="f589f114f90883d51f1743f27a1eb723613c7b22" translate="yes" xml:space="preserve">
          <source>To &quot;stop&quot; an application when a view should be destroyed, call &lt;code&gt;AppRegistry.unmountApplicationComponentAtRootTag&lt;/code&gt; with the tag that was passed into &lt;code&gt;runApplication&lt;/code&gt;. These should always be used as a pair.</source>
          <target state="translated">뷰를 삭제해야 할 때 애플리케이션을 &quot;중지&quot;하려면 &lt;code&gt;AppRegistry.unmountApplicationComponentAtRootTag&lt;/code&gt; 에 전달 된 태그를 사용하여 AppRegistry.unmountApplicationComponentAtRootTag 를 호출 &lt;code&gt;runApplication&lt;/code&gt; . 이들은 항상 쌍으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="52aacd3deea38df46a465a38e4f9fb7c2916c99a" translate="yes" xml:space="preserve">
          <source>To configure your app to be built using the &lt;code&gt;Release&lt;/code&gt; scheme, go to &lt;strong&gt;Product&lt;/strong&gt; &amp;rarr; &lt;strong&gt;Scheme&lt;/strong&gt; &amp;rarr; &lt;strong&gt;Edit Scheme&lt;/strong&gt;. Select the &lt;strong&gt;Run&lt;/strong&gt; tab in the sidebar, then set the Build Configuration dropdown to &lt;code&gt;Release&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Release&lt;/code&gt; 구성표를 사용하여 앱을 빌드하도록 구성하려면 &lt;strong&gt;제품&lt;/strong&gt; &amp;rarr; &lt;strong&gt;구성표&lt;/strong&gt; &amp;rarr; &lt;strong&gt;구성표 편집으로&lt;/strong&gt; 이동 &lt;strong&gt;하십시오&lt;/strong&gt; . 선택 &lt;strong&gt;실행&lt;/strong&gt; 사이드 바에서 탭을, 다음에 빌드 구성 드롭 다운 설정 &lt;code&gt;Release&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff59d7aff49f763fc1d5fd7587ec27067cddc25b" translate="yes" xml:space="preserve">
          <source>To debug the JavaScript code in Chrome, select &quot;Debug JS Remotely&quot; from the Developer Menu. This will open a new tab at &lt;a href=&quot;http://localhost:8081/debugger-ui&quot;&gt;http://localhost:8081/debugger-ui&lt;/a&gt;.</source>
          <target state="translated">Chrome에서 JavaScript 코드를 디버깅하려면 개발자 메뉴에서 &quot;원격으로 JS 디버그&quot;를 선택하십시오. &lt;a href=&quot;http://localhost:8081/debugger-ui&quot;&gt;http : // localhost : 8081 / debugger-ui&lt;/a&gt; 에서 새 탭이 열립니다 .</target>
        </trans-unit>
        <trans-unit id="d9a2873f948fa14a383e8bb50a2f61ca81dbda2d" translate="yes" xml:space="preserve">
          <source>To disable autofill, set &lt;code&gt;textContentType&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">자동 완성을 비활성화하려면 &lt;code&gt;textContentType&lt;/code&gt; 을 &lt;code&gt;none&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1df9e8dffcbe777ba957881cdf85687f0806c986" translate="yes" xml:space="preserve">
          <source>To document the properties (and which values they accept) of our MapView component we'll add a wrapper component and document the interface with React &lt;code&gt;PropTypes&lt;/code&gt;:</source>
          <target state="translated">MapView 컴포넌트의 속성 (및 허용되는 값)을 문서화하기 위해 래퍼 컴포넌트를 추가하고 React &lt;code&gt;PropTypes&lt;/code&gt; 로 인터페이스를 문서화합니다 .</target>
        </trans-unit>
        <trans-unit id="05fe3207e4e0bc5c86d89c1132b73dcef95813e1" translate="yes" xml:space="preserve">
          <source>To enable Proguard, edit &lt;code&gt;android/app/build.gradle&lt;/code&gt;:</source>
          <target state="translated">Proguard를 활성화하려면 &lt;code&gt;android/app/build.gradle&lt;/code&gt; 을 편집 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f742ad58da04725cd32af7049ca731dd63fc5b6" translate="yes" xml:space="preserve">
          <source>To enable USB debugging on your device, you will first need to enable the &quot;Developer options&quot; menu by going to &lt;strong&gt;Settings&lt;/strong&gt; &amp;rarr; &lt;strong&gt;About phone&lt;/strong&gt; and then tapping the &lt;code&gt;Build number&lt;/code&gt; row at the bottom seven times. You can then go back to &lt;strong&gt;Settings&lt;/strong&gt; &amp;rarr; &lt;strong&gt;Developer options&lt;/strong&gt; to enable &quot;USB debugging&quot;.</source>
          <target state="translated">장치에서 USB 디버깅을 활성화하려면 먼저 &lt;strong&gt;설정&lt;/strong&gt; &amp;rarr; &lt;strong&gt;전화 정보&lt;/strong&gt; 로 이동 한 다음 맨 아래에서 &lt;code&gt;Build number&lt;/code&gt; 행을 7 번 눌러 &quot;개발자 옵션&quot;메뉴를 활성화해야합니다 . 그런 다음 &lt;strong&gt;설정&lt;/strong&gt; &amp;rarr; &lt;strong&gt;개발자 옵션&lt;/strong&gt; 으로 돌아가 &quot;USB 디버깅&quot;을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="0840fa70e8738b8a054ad31a6ccc66cdba8cb255" translate="yes" xml:space="preserve">
          <source>To enable VoiceOver, go to the Settings app on your iOS device. Tap General, then Accessibility. There you will find many tools that people use to make their devices more usable, such as bolder text, increased contrast, and VoiceOver.</source>
          <target state="translated">VoiceOver를 활성화하려면 iOS 장비의 설정 앱으로 이동하십시오. 일반을 누른 다음 접근성을 누릅니다. 더 굵은 글씨, 대비 증가 및 VoiceOver와 같이 사람들이 장치를보다 유용하게 사용하기 위해 사용하는 많은 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbe61e58d079469773e68624d1d553d22f12f726" translate="yes" xml:space="preserve">
          <source>To enable VoiceOver, tap on VoiceOver under &quot;Vision&quot; and toggle the switch that appears at the top.</source>
          <target state="translated">VoiceOver를 활성화하려면 &quot;Vision&quot;에서 VoiceOver를 살짝 누르고 상단에 나타나는 스위치를 토글하십시오.</target>
        </trans-unit>
        <trans-unit id="899db164091d7c390f13e9b45e6789f377ee11ce" translate="yes" xml:space="preserve">
          <source>To ensure a smooth experience, create a new folder for your integrated React Native project, then copy your existing Android project to an &lt;code&gt;/android&lt;/code&gt; subfolder.</source>
          <target state="translated">원활한 경험을 보장하려면 통합 React Native 프로젝트를위한 새 폴더를 만든 다음 기존 Android 프로젝트를 &lt;code&gt;/android&lt;/code&gt; 하위 폴더 로 복사하십시오 .</target>
        </trans-unit>
        <trans-unit id="ecaf39e82242e7a645a0f62f5c03e7fd2b7ee1a8" translate="yes" xml:space="preserve">
          <source>To ensure a smooth experience, create a new folder for your integrated React Native project, then copy your existing iOS project to a &lt;code&gt;/ios&lt;/code&gt; subfolder.</source>
          <target state="translated">원활한 경험을 위해 통합 React Native 프로젝트를위한 새 폴더를 만든 다음 기존 iOS 프로젝트를 &lt;code&gt;/ios&lt;/code&gt; 하위 폴더에 복사하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8731ad92919b650ab7f3cf66171d8f49800d395" translate="yes" xml:space="preserve">
          <source>To experiment with the limits of React Native Today widget implementations, try extending the example project in &lt;a href=&quot;https://github.com/matejkriz/react-native-today-widget/&quot;&gt;react-native-today-widget&lt;/a&gt;.</source>
          <target state="translated">React Native Today 위젯 구현의 한계를 실험하려면 &lt;a href=&quot;https://github.com/matejkriz/react-native-today-widget/&quot;&gt;react-native-today-widget&lt;/a&gt; 에서 예제 프로젝트를 확장하십시오 .</target>
        </trans-unit>
        <trans-unit id="74088c96814912393286afe11fc8803e17fbe93e" translate="yes" xml:space="preserve">
          <source>To expose a method to JavaScript a Java method must be annotated using &lt;code&gt;@ReactMethod&lt;/code&gt;. The return type of bridge methods is always &lt;code&gt;void&lt;/code&gt;. React Native bridge is asynchronous, so the only way to pass a result to JavaScript is by using callbacks or emitting events (see below).</source>
          <target state="translated">메소드를 JavaScript에 노출하려면 &lt;code&gt;@ReactMethod&lt;/code&gt; 를 사용하여 Java 메소드에 주석을 달아야 합니다. 브릿지 메소드의 리턴 유형은 항상 &lt;code&gt;void&lt;/code&gt; 입니다. React Native 브리지는 비동기식이므로 결과를 JavaScript로 전달하는 유일한 방법은 콜백 또는 이벤트 생성 (아래 참조)을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3a2efda2276d6d7da699b7827bf6563ae5483cf0" translate="yes" xml:space="preserve">
          <source>To finish up support for the &lt;code&gt;region&lt;/code&gt; prop, we need to document it in &lt;code&gt;propTypes&lt;/code&gt; (or we'll get an error that the native prop is undocumented), then we can set it just like any other prop:</source>
          <target state="translated">&lt;code&gt;region&lt;/code&gt; 소품에 대한 지원을 마치려면 &lt;code&gt;propTypes&lt;/code&gt; 로 문서를 문서화해야합니다 (또는 기본 소품이 문서화되지 않았다는 오류가 발생합니다). 다른 소품과 마찬가지로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c175f140a501ace7c9a20904157b56bbc243d161" translate="yes" xml:space="preserve">
          <source>To get up and running, &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html#//apple_ref/doc/uid/TP40012582-CH26-SW6&quot;&gt;configure your notifications with Apple&lt;/a&gt; and your server-side system.</source>
          <target state="translated">시작하고 실행하려면 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html#//apple_ref/doc/uid/TP40012582-CH26-SW6&quot;&gt;Apple&lt;/a&gt; 및 서버 측 시스템으로 알림을 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c95eae4813c5b86ee4fdea06d0d591199f3e43c" translate="yes" xml:space="preserve">
          <source>To make it simpler to access your new functionality from JavaScript, it is common to wrap the native module in a JavaScript module. This is not necessary but saves the consumers of your library the need to pull it off of &lt;code&gt;NativeModules&lt;/code&gt; each time. This JavaScript file also becomes a good location for you to add any JavaScript side functionality.</source>
          <target state="translated">JavaScript에서 새 기능에보다 쉽게 ​​액세스 할 수 있도록하려면 기본 모듈을 JavaScript 모듈로 랩핑하는 것이 일반적입니다. 이것은 반드시 필요한 것은 아니지만 라이브러리 소비자가 매번 &lt;code&gt;NativeModules&lt;/code&gt; 이를 제거해야 할 필요성을 줄여줍니다 . 이 JavaScript 파일은 JavaScript 측 기능을 추가하기에 좋은 위치가됩니다.</target>
        </trans-unit>
        <trans-unit id="c36b30c907522d02d511c81f726db7f8fd107c91" translate="yes" xml:space="preserve">
          <source>To make your app feel great, every action should have the following attributes:</source>
          <target state="translated">앱의 기분을 좋게하려면 모든 작업에는 다음과 같은 속성이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0f5c91beeff5360cc0bbbe94cb8728c94f749a6c" translate="yes" xml:space="preserve">
          <source>To map the &lt;code&gt;topChange&lt;/code&gt; event name to the &lt;code&gt;onChange&lt;/code&gt; callback prop in JavaScript, register it by overriding the &lt;code&gt;getExportedCustomBubblingEventTypeConstants&lt;/code&gt; method in your &lt;code&gt;ViewManager&lt;/code&gt;:</source>
          <target state="translated">JavaScript 에서 &lt;code&gt;topChange&lt;/code&gt; 이벤트 이름을 &lt;code&gt;onChange&lt;/code&gt; 콜백 prop에 맵핑하려면 &lt;code&gt;ViewManager&lt;/code&gt; 에서 &lt;code&gt;getExportedCustomBubblingEventTypeConstants&lt;/code&gt; 메소드를 대체하여 등록하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a1d8a99bc1cae20da64b1cb157838c2a489b74e" translate="yes" xml:space="preserve">
          <source>To mitigate this, you should:</source>
          <target state="translated">이를 완화하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="70e01d5e7dc7a08e68e9e424c3cc5e767f93bc0f" translate="yes" xml:space="preserve">
          <source>To request access to location, you need to add the following line to your app's &lt;code&gt;AndroidManifest.xml&lt;/code&gt;:</source>
          <target state="translated">위치에 대한 액세스를 요청하려면 앱의 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 에 다음 행을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6de9a45fbeb80ba5ee146f5bc38b39b16dec5fc5" translate="yes" xml:space="preserve">
          <source>To request network info, you need to add the following line to your app's &lt;code&gt;AndroidManifest.xml&lt;/code&gt;:</source>
          <target state="translated">네트워크 정보를 요청하려면 앱의 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 에 다음 줄을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="17766131077a4a49671bf81b661c50fb2f67376d" translate="yes" xml:space="preserve">
          <source>To revert the &lt;code&gt;User Search Header Paths&lt;/code&gt; and &lt;code&gt;Header Search Paths&lt;/code&gt; build settings to their defaults set by CocoaPods - select the entry in the Build Settings panel, and hit delete. It will remove the custom override and return to the CocoaPod defaults.</source>
          <target state="translated">되돌리기 위해 &lt;code&gt;User Search Header Paths&lt;/code&gt; 와 &lt;code&gt;Header Search Paths&lt;/code&gt; CocoaPods 설정 기본값으로 빌드 설정을 - 빌드 설정 패널에서 항목을 선택하고 삭제했다. 사용자 정의 재정의를 제거하고 CocoaPod 기본값으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="7f4797694de11bf3a0ed0ecc37976f9a4c6605ca" translate="yes" xml:space="preserve">
          <source>To run the Android unit tests:</source>
          <target state="translated">Android 단위 테스트를 실행하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9300e3b8137af41e2e06fbd47621f4d533b5e066" translate="yes" xml:space="preserve">
          <source>To run the integration tests, you need to install the Android NDK. See &lt;a href=&quot;building-from-source#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">통합 테스트를 실행하려면 Android NDK를 설치해야합니다. &lt;a href=&quot;building-from-source#prerequisites&quot;&gt;전제 조건을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea09846bdbab863c4ab8f5e66a8c84fe40487423" translate="yes" xml:space="preserve">
          <source>To run your app, you need to first start the development server. To do this, simply run the following command in the root directory of your React Native project:</source>
          <target state="translated">앱을 실행하려면 먼저 개발 서버를 시작해야합니다. 이렇게하려면 React Native 프로젝트의 루트 디렉토리에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="b575befb9a4da95debb4e964974fef259a6180b5" translate="yes" xml:space="preserve">
          <source>To see it in action, try the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/js/PanResponderExample.js&quot;&gt;PanResponder example in RNTester&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/js/PanResponderExample.js&quot;&gt;RNTester에서 PanResponder 예제를&lt;/a&gt; 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="f52e6780eb0500b31d9d769e937318fcedd8c1fd" translate="yes" xml:space="preserve">
          <source>To see the current state, you can check &lt;code&gt;AppState.currentState&lt;/code&gt;, which will be kept up-to-date. However, &lt;code&gt;currentState&lt;/code&gt; will be null at launch while &lt;code&gt;AppState&lt;/code&gt; retrieves it over the bridge.</source>
          <target state="translated">현재 상태를 보려면 &lt;code&gt;AppState.currentState&lt;/code&gt; 를 확인하면 최신 상태 로 유지됩니다. 그러나 &lt;code&gt;AppState&lt;/code&gt; 가 브리지를 통해 검색하는 동안 &lt;code&gt;currentState&lt;/code&gt; 는 시작시 null이됩니다 .</target>
        </trans-unit>
        <trans-unit id="f7fcaff9efa0cf740eac72b8ef20977c5bb36813" translate="yes" xml:space="preserve">
          <source>To see what changes are coming and provide better feedback to React Native contributors, use the &lt;a href=&quot;http://facebook.github.io/react-native/versions.html&quot;&gt;latest release candidate&lt;/a&gt; when possible. By the time a release candidate is released, the changes it contains will have been shipped in production Facebook apps for over two weeks.</source>
          <target state="translated">변경 사항이 무엇인지보고 React Native 기고자에게 더 나은 피드백을 제공하려면 가능한 경우 &lt;a href=&quot;http://facebook.github.io/react-native/versions.html&quot;&gt;최신 릴리스 후보&lt;/a&gt; 를 사용하십시오. 릴리스 후보가 릴리스 될 때 포함 된 변경 내용이 프로덕션 Facebook 앱에서 2 주 이상 배송되었습니다.</target>
        </trans-unit>
        <trans-unit id="b50a79bfc42d201cf014949035292bd7b916ea27" translate="yes" xml:space="preserve">
          <source>To see what changes are coming and provide better feedback to React Native contributors, use the &lt;a href=&quot;https://facebook.github.io/react-native/versions.html&quot;&gt;latest release candidate&lt;/a&gt; when possible. By the time a release candidate is released, the changes it contains will have been shipped in production Facebook apps for over two weeks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613f4ed937f82363863b0228f80842c8e8aa5636" translate="yes" xml:space="preserve">
          <source>To set up the navigator, provide the &lt;code&gt;initialRoute&lt;/code&gt; prop with a route object. A route object is used to describe each scene that your app navigates to. &lt;code&gt;initialRoute&lt;/code&gt; represents the first route in your navigator.</source>
          <target state="translated">네비게이터를 설정하려면 &lt;code&gt;initialRoute&lt;/code&gt; 소품에 경로 객체를 제공하십시오 . 라우트 객체는 앱이 탐색하는 각 장면을 설명하는 데 사용됩니다. &lt;code&gt;initialRoute&lt;/code&gt; 는 네비게이터의 첫 번째 경로를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8c406b908a3ff89a0b00ac2c1f767ec089b49567" translate="yes" xml:space="preserve">
          <source>To solve this issue check the following points.</source>
          <target state="translated">이 문제를 해결하려면 다음 사항을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="612253e3d1348f43d2acfd4683a62791095adaab" translate="yes" xml:space="preserve">
          <source>To start the corresponding activity for a link (web URL, email, contact etc.), call</source>
          <target state="translated">링크 (웹 URL, 이메일, 연락처 등)에 해당하는 활동을 시작하려면</target>
        </trans-unit>
        <trans-unit id="a0c14d868a2f2ff7e3002b8a1dc554ad177c1c85" translate="yes" xml:space="preserve">
          <source>To still use xip.io behind your router:</source>
          <target state="translated">라우터 뒤에서 xip.io를 계속 사용하려면 :</target>
        </trans-unit>
        <trans-unit id="5b19ae2e845fef5f78d799b79f65d2ab965ffdab" translate="yes" xml:space="preserve">
          <source>To support deep linking on Android, refer &lt;a href=&quot;http://developer.android.com/training/app-indexing/deep-linking.html#handling-intents&quot;&gt;http://developer.android.com/training/app-indexing/deep-linking.html#handling-intents&lt;/a&gt;</source>
          <target state="translated">Android에서 딥 링크를 지원하려면 &lt;a href=&quot;http://developer.android.com/training/app-indexing/deep-linking.html#handling-intents&quot;&gt;http://developer.android.com/training/app-indexing/deep-linking.html#handling-intents를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="6cfda64b3b0dbd6344ee164c2516acc138090d41" translate="yes" xml:space="preserve">
          <source>To support deep linking on Android, refer &lt;a href=&quot;https://developer.android.com/training/app-indexing/deep-linking.html#handling-intents&quot;&gt;http://developer.android.com/training/app-indexing/deep-linking.html#handling-intents&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7308e969d609eefaade6316302ecd8c953b572b" translate="yes" xml:space="preserve">
          <source>To trigger navigation functionality such as pushing or popping a view, you have access to a &lt;code&gt;navigator&lt;/code&gt; object. The object is passed in as a prop to any component that is rendered by &lt;code&gt;NavigatorIOS&lt;/code&gt;. You can then call the relevant methods to perform the navigation action you need:</source>
          <target state="translated">보기 밀기 또는 팝업과 같은 탐색 기능을 트리거하려면 &lt;code&gt;navigator&lt;/code&gt; 개체에 액세스 할 수 있습니다 . 객체는 &lt;code&gt;NavigatorIOS&lt;/code&gt; 에 의해 렌더링되는 모든 구성 요소에 대한 소품으로 전달됩니다 . 그런 다음 관련 메소드를 호출하여 필요한 탐색 조치를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cae04616675e3679a76655afb05389d141d25c7" translate="yes" xml:space="preserve">
          <source>To update the data in the datasource, use &lt;code&gt;cloneWithRows&lt;/code&gt; (or &lt;code&gt;cloneWithRowsAndSections&lt;/code&gt; if you care about sections). The data in the data source is immutable, so you can't modify it directly. The clone methods suck in the new data and compute a diff for each row so ListView knows whether to re-render it or not.</source>
          <target state="translated">데이터 소스의 데이터를 업데이트하려면 &lt;code&gt;cloneWithRows&lt;/code&gt; (또는 섹션이 필요한 경우 &lt;code&gt;cloneWithRowsAndSections&lt;/code&gt; )를 사용하십시오. 데이터 소스의 데이터는 변경할 수 없으므로 직접 수정할 수 없습니다. 클론 메소드는 새 데이터를 빨아 들여 각 행에 대해 차이를 계산하므로 ListView가 다시 렌더링할지 여부를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4aa936b9ae30a0d7d64f68303df1c35999f1ed83" translate="yes" xml:space="preserve">
          <source>To update the documentation, you will need to clone the &lt;a href=&quot;https://github.com/facebook/react-native-website&quot;&gt;&lt;code&gt;facebook/react-native-website&lt;/code&gt;&lt;/a&gt; repository, make your changes in the &lt;code&gt;docs/&lt;/code&gt; directory, and then send a pull request. For lightweight changes to a single file, you may also click on &quot;Edit&quot; at the top of any doc right here on the website.</source>
          <target state="translated">문서를 업데이트하려면 &lt;a href=&quot;https://github.com/facebook/react-native-website&quot;&gt; &lt;code&gt;facebook/react-native-website&lt;/code&gt; &lt;/a&gt; 저장소 를 복제 하고 &lt;code&gt;docs/&lt;/code&gt; 디렉토리 에서 변경 한 후 pull 요청을 보내야합니다. 단일 파일을 가볍게 변경하려면 웹 사이트의 모든 문서 상단에있는 &quot;수정&quot;을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="43be09c85eec9db794ce46d3c6b646fe3e75aa9d" translate="yes" xml:space="preserve">
          <source>To use a custom JavaScript debugger in place of Chrome Developer Tools, set the &lt;code&gt;REACT_DEBUGGER&lt;/code&gt; environment variable to a command that will start your custom debugger. You can then select &quot;Debug JS Remotely&quot; from the Developer Menu to start debugging.</source>
          <target state="translated">Chrome 개발자 도구 대신 맞춤 자바 스크립트 디버거를 사용하려면 &lt;code&gt;REACT_DEBUGGER&lt;/code&gt; 환경 변수를 맞춤 디버거를 시작하는 명령으로 설정 하세요. 그런 다음 개발자 메뉴에서 &quot;Debug JS Remotely&quot;를 선택하여 디버깅을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78e44c88367204a4c7cc36f0f5aefd4ae187ca2c" translate="yes" xml:space="preserve">
          <source>To use this component wrap your custom toolbar with the InputAccessoryView component, and set a &lt;code&gt;nativeID&lt;/code&gt;. Then, pass that &lt;code&gt;nativeID&lt;/code&gt; as the &lt;code&gt;inputAccessoryViewID&lt;/code&gt; of whatever &lt;code&gt;TextInput&lt;/code&gt; you desire. A simple example:</source>
          <target state="translated">이 컴포넌트를 사용하려면 사용자 정의 도구 모음을 InputAccessoryView 컴포넌트로 &lt;code&gt;nativeID&lt;/code&gt; 하고 nativeID를 설정하십시오 . 그런 다음 해당 &lt;code&gt;inputAccessoryViewID&lt;/code&gt; 를 원하는 &lt;code&gt;TextInput&lt;/code&gt; 의 &lt;code&gt;nativeID&lt;/code&gt; 로 전달하십시오 . 간단한 예 :</target>
        </trans-unit>
        <trans-unit id="3847df1faf8706e8e479727f8c02ee6a7502066f" translate="yes" xml:space="preserve">
          <source>To use, set the &lt;code&gt;accessibilityLabel&lt;/code&gt; property to a custom string on your View:</source>
          <target state="translated">사용하려면 &lt;code&gt;accessibilityLabel&lt;/code&gt; 속성을 View의 사용자 지정 문자열로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="13722759f6f6ef421897b9ef61c75173b913fb20" translate="yes" xml:space="preserve">
          <source>To use, set the &lt;code&gt;accessibilityTraits&lt;/code&gt; property to one of (or an array of) accessibility trait strings:</source>
          <target state="translated">사용하려면 &lt;code&gt;accessibilityTraits&lt;/code&gt; 특성을 내게 필요한 옵션 특성 문자열 중 하나 (또는 ​​배열)로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="268e2c834d0ab5099ad5dba9f35d9f0cc8564a34" translate="yes" xml:space="preserve">
          <source>ToastAndroid</source>
          <target state="translated">ToastAndroid</target>
        </trans-unit>
        <trans-unit id="76ea6f1c86865efc2be4e27685c40defacc2e562" translate="yes" xml:space="preserve">
          <source>ToastAndroid#BOTTOM</source>
          <target state="translated">ToastAndroid#BOTTOM</target>
        </trans-unit>
        <trans-unit id="55dcabccf036cd5c4613a7439ac571daafe39e73" translate="yes" xml:space="preserve">
          <source>ToastAndroid#CENTER</source>
          <target state="translated">ToastAndroid#CENTER</target>
        </trans-unit>
        <trans-unit id="8c6ea770be6837022c47d828ddebcc21a171efc7" translate="yes" xml:space="preserve">
          <source>ToastAndroid#LONG</source>
          <target state="translated">ToastAndroid#LONG</target>
        </trans-unit>
        <trans-unit id="412eb61701e358a9e054daace5a8079ad88efa2b" translate="yes" xml:space="preserve">
          <source>ToastAndroid#SHORT</source>
          <target state="translated">ToastAndroid#SHORT</target>
        </trans-unit>
        <trans-unit id="21e82baa3d8aa8a427fe3df44b99db704c985e1c" translate="yes" xml:space="preserve">
          <source>ToastAndroid#TOP</source>
          <target state="translated">ToastAndroid#TOP</target>
        </trans-unit>
        <trans-unit id="e2bb1875dd995cd08e0a40fea67401f040b19611" translate="yes" xml:space="preserve">
          <source>ToastAndroid.show()</source>
          <target state="translated">ToastAndroid.show()</target>
        </trans-unit>
        <trans-unit id="bf0129e519a14dd32db3094572607fec807fbfef" translate="yes" xml:space="preserve">
          <source>ToastAndroid.showWithGravity()</source>
          <target state="translated">ToastAndroid.showWithGravity()</target>
        </trans-unit>
        <trans-unit id="b35ae865ec2ad617f978950f9e0864548e8e8071" translate="yes" xml:space="preserve">
          <source>ToastAndroid.showWithGravityAndOffset()</source>
          <target state="translated">ToastAndroid.showWithGravityAndOffset()</target>
        </trans-unit>
        <trans-unit id="9e8327b3c8163e2c02a5e63448c732559e54b39b" translate="yes" xml:space="preserve">
          <source>Today widget</source>
          <target state="translated">오늘 위젯</target>
        </trans-unit>
        <trans-unit id="295d00e68ca115cf08e3982750d46bb7d27bd149" translate="yes" xml:space="preserve">
          <source>Too much GPU work</source>
          <target state="translated">너무 많은 GPU 작업</target>
        </trans-unit>
        <trans-unit id="84c9e1b68096c8448c9bd41ec6b26a10404530ac" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid</source>
          <target state="translated">ToolbarAndroid</target>
        </trans-unit>
        <trans-unit id="fa258d8326e32aee4cb03f0f42c9f5eb033596d7" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#actions</source>
          <target state="translated">ToolbarAndroid#actions</target>
        </trans-unit>
        <trans-unit id="f7d49c741ad783aba6f2fc81e05d36b2d4aee3d4" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#contentInsetEnd</source>
          <target state="translated">ToolbarAndroid#contentInsetEnd</target>
        </trans-unit>
        <trans-unit id="e61c77eb4ec642b0ef4edfaf6768186425d70df4" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#contentInsetStart</source>
          <target state="translated">ToolbarAndroid#contentInsetStart</target>
        </trans-unit>
        <trans-unit id="640cf96a27d77b3de2af034603659b767cf540cb" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#logo</source>
          <target state="translated">ToolbarAndroid#logo</target>
        </trans-unit>
        <trans-unit id="7b8af246ecaf0fd24f27190ca0a93b3c4cdb29e5" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#navIcon</source>
          <target state="translated">ToolbarAndroid#navIcon</target>
        </trans-unit>
        <trans-unit id="e7bcf57ad1c6c3980a864dfc3c1fab5130b5f48a" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#onActionSelected</source>
          <target state="translated">ToolbarAndroid#onActionSelected</target>
        </trans-unit>
        <trans-unit id="74d600b493f7b70587af9c8eb9f6fcb6e2d9fc3d" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#onIconClicked</source>
          <target state="translated">ToolbarAndroid#onIconClicked</target>
        </trans-unit>
        <trans-unit id="dc0785cd8fbcdb27ecc89e23813361d1b2d3fb7b" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#overflowIcon</source>
          <target state="translated">ToolbarAndroid#overflowIcon</target>
        </trans-unit>
        <trans-unit id="19232a52cae226cd6086f551270ffa1d0c3e2a4f" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#rtl</source>
          <target state="translated">ToolbarAndroid#rtl</target>
        </trans-unit>
        <trans-unit id="456ba72a590e3258a79c92cebfdf8f1642aa52ba" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#subtitle</source>
          <target state="translated">ToolbarAndroid#subtitle</target>
        </trans-unit>
        <trans-unit id="4cfbc2792f83202a6a496257a26bb364d762003e" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#subtitleColor</source>
          <target state="translated">ToolbarAndroid#subtitleColor</target>
        </trans-unit>
        <trans-unit id="756d1bac44d63f6db7e6d53e349f9008069c8fee" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#testID</source>
          <target state="translated">ToolbarAndroid#testID</target>
        </trans-unit>
        <trans-unit id="464faf81184a999b91dc85d3e9eb1da3aa17465a" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#title</source>
          <target state="translated">ToolbarAndroid#title</target>
        </trans-unit>
        <trans-unit id="a29c486008d17756e35ae4e9b1aed2de567881b4" translate="yes" xml:space="preserve">
          <source>ToolbarAndroid#titleColor</source>
          <target state="translated">ToolbarAndroid#titleColor</target>
        </trans-unit>
        <trans-unit id="8559d418a43649cb912b726d16f38fb67bb14bc0" translate="yes" xml:space="preserve">
          <source>TouchableHighlight</source>
          <target state="translated">TouchableHighlight</target>
        </trans-unit>
        <trans-unit id="c1d558e2c4b45b557a7ee11d48a3667ca9e4b2f0" translate="yes" xml:space="preserve">
          <source>TouchableHighlight and Touchable*</source>
          <target state="translated">강조 가능 및 터치 가능 *</target>
        </trans-unit>
        <trans-unit id="f11d60943e3e5823905a83414f3503d4dbf018a1" translate="yes" xml:space="preserve">
          <source>TouchableHighlight must have one child (not zero or more than one). If you wish to have several child components, wrap them in a View.</source>
          <target state="translated">TouchableHighlight에는 하나의 자식이 있어야합니다 (0 개 이상). 여러 하위 구성 요소를 가지려면 View로 래핑하십시오.</target>
        </trans-unit>
        <trans-unit id="0c0becd8616461d8513b05ce475fa960e04089cc" translate="yes" xml:space="preserve">
          <source>TouchableHighlight#activeOpacity</source>
          <target state="translated">TouchableHighlight#activeOpacity</target>
        </trans-unit>
        <trans-unit id="3621816afa72780d3b953b075f9074631051b369" translate="yes" xml:space="preserve">
          <source>TouchableHighlight#hasTVPreferredFocus</source>
          <target state="translated">TouchableHighlight#hasTVPreferredFocus</target>
        </trans-unit>
        <trans-unit id="5e8ef962f486808006ab15da7f278e8b2ff978b3" translate="yes" xml:space="preserve">
          <source>TouchableHighlight#onHideUnderlay</source>
          <target state="translated">TouchableHighlight#onHideUnderlay</target>
        </trans-unit>
        <trans-unit id="e5ffea95609ac3e0b2b3791216ac57d04aed4551" translate="yes" xml:space="preserve">
          <source>TouchableHighlight#onShowUnderlay</source>
          <target state="translated">TouchableHighlight#onShowUnderlay</target>
        </trans-unit>
        <trans-unit id="841cf8067715f8f62e7ea2c2bd0b8e10e39ad3ad" translate="yes" xml:space="preserve">
          <source>TouchableHighlight#style</source>
          <target state="translated">TouchableHighlight#style</target>
        </trans-unit>
        <trans-unit id="3661c7065784c82cd28b31c3637dfd4d1ee91a40" translate="yes" xml:space="preserve">
          <source>TouchableHighlight#tvParallaxProperties</source>
          <target state="translated">TouchableHighlight#tvParallaxProperties</target>
        </trans-unit>
        <trans-unit id="b20f3a6a363385f202254dfac4003df225040c10" translate="yes" xml:space="preserve">
          <source>TouchableHighlight#underlayColor</source>
          <target state="translated">TouchableHighlight#underlayColor</target>
        </trans-unit>
        <trans-unit id="b28e7ba5099060d6b26a99c7f23866846aed514f" translate="yes" xml:space="preserve">
          <source>TouchableNativeFeedback</source>
          <target state="translated">TouchableNativeFeedback</target>
        </trans-unit>
        <trans-unit id="ec5b0efe05602fcdfb0efc4bd2344078b3ea2b19" translate="yes" xml:space="preserve">
          <source>TouchableNativeFeedback#background</source>
          <target state="translated">TouchableNativeFeedback#background</target>
        </trans-unit>
        <trans-unit id="efad91160a872f4d7ad6e2f6238c1a186c5ee48a" translate="yes" xml:space="preserve">
          <source>TouchableNativeFeedback#useForeground</source>
          <target state="translated">TouchableNativeFeedback#useForeground</target>
        </trans-unit>
        <trans-unit id="4bc446fad3192c9616e6a6954987f7dcdb37318c" translate="yes" xml:space="preserve">
          <source>TouchableNativeFeedback.Ripple()</source>
          <target state="translated">TouchableNativeFeedback.Ripple()</target>
        </trans-unit>
        <trans-unit id="209394849ff4e16d64149522d31facc4dae21023" translate="yes" xml:space="preserve">
          <source>TouchableNativeFeedback.SelectableBackground()</source>
          <target state="translated">TouchableNativeFeedback.SelectableBackground()</target>
        </trans-unit>
        <trans-unit id="f1e50444beff2d3e0f16accee774bed03d582ecd" translate="yes" xml:space="preserve">
          <source>TouchableNativeFeedback.SelectableBackgroundBorderless()</source>
          <target state="translated">TouchableNativeFeedback.SelectableBackgroundBorderless()</target>
        </trans-unit>
        <trans-unit id="e34906b65edffb2752e267086b43ca0235662f65" translate="yes" xml:space="preserve">
          <source>TouchableNativeFeedback.canUseNativeForeground()</source>
          <target state="translated">TouchableNativeFeedback.canUseNativeForeground()</target>
        </trans-unit>
        <trans-unit id="d680db126d13796d3d1e030b067511d9b1ebfba7" translate="yes" xml:space="preserve">
          <source>TouchableOpacity</source>
          <target state="translated">TouchableOpacity</target>
        </trans-unit>
        <trans-unit id="bae6e3ad853fa3288acef54f3ac20afb2ac0c2fb" translate="yes" xml:space="preserve">
          <source>TouchableOpacity#activeOpacity</source>
          <target state="translated">TouchableOpacity#activeOpacity</target>
        </trans-unit>
        <trans-unit id="61131b062b60ec64bb3b8c65f21f95590208c998" translate="yes" xml:space="preserve">
          <source>TouchableOpacity#hasTVPreferredFocus</source>
          <target state="translated">TouchableOpacity#hasTVPreferredFocus</target>
        </trans-unit>
        <trans-unit id="45a6394b11ce6a7b1f181f11d3388837926b7858" translate="yes" xml:space="preserve">
          <source>TouchableOpacity#tvParallaxProperties</source>
          <target state="translated">TouchableOpacity#tvParallaxProperties</target>
        </trans-unit>
        <trans-unit id="8f05d3ff675467822d6fc366a36ac6fb5515bc76" translate="yes" xml:space="preserve">
          <source>TouchableOpacity.setOpacityTo()</source>
          <target state="translated">TouchableOpacity.setOpacityTo()</target>
        </trans-unit>
        <trans-unit id="b622476aaa2b5be25afb1542211556dfe8e9efdb" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback</source>
          <target state="translated">TouchableWithoutFeedback</target>
        </trans-unit>
        <trans-unit id="875015a4b8b329397b4e8972daa9ed6cfa23c9fa" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback props...</source>
          <target state="translated">피드백 소품없이 만질 수있는 ...</target>
        </trans-unit>
        <trans-unit id="da3621cee6354b9f411898c63020ca7c6f42c3f7" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback supports only one child. If you wish to have several child components, wrap them in a View.</source>
          <target state="translated">TouchableWithoutFeedback은 한 명의 자녀 만 지원합니다. 여러 하위 구성 요소를 가지려면 View로 래핑하십시오.</target>
        </trans-unit>
        <trans-unit id="28caf3872667b8de74a0f42215dca4f8bfa1ce61" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#accessibilityComponentType</source>
          <target state="translated">TouchableWithoutFeedback#accessibilityComponentType</target>
        </trans-unit>
        <trans-unit id="01ade4f8b00e9e857cc70be652400781202660f5" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#accessibilityTraits</source>
          <target state="translated">TouchableWithoutFeedback#accessibilityTraits</target>
        </trans-unit>
        <trans-unit id="85b866aeec47a19b4b2f52ee777ea65c1d493c37" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#accessible</source>
          <target state="translated">TouchableWithoutFeedback#accessible</target>
        </trans-unit>
        <trans-unit id="d0e77a5754f6e549a7d38aa604c7db003db64dda" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#delayLongPress</source>
          <target state="translated">TouchableWithoutFeedback#delayLongPress</target>
        </trans-unit>
        <trans-unit id="cf4b87060ba6eee3e7b0d011568802ae9e74ec4b" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#delayPressIn</source>
          <target state="translated">TouchableWithoutFeedback#delayPressIn</target>
        </trans-unit>
        <trans-unit id="ac3f96da17bc91e4bb124b7adb82dd3f656ace89" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#delayPressOut</source>
          <target state="translated">TouchableWithoutFeedback#delayPressOut</target>
        </trans-unit>
        <trans-unit id="660ccdb0b9c2d5728f40f7701bb5e3a6e98e601c" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#disabled</source>
          <target state="translated">TouchableWithoutFeedback#disabled</target>
        </trans-unit>
        <trans-unit id="46d85cc66df43884d9bce252033ca5604cda6d12" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#hitSlop</source>
          <target state="translated">TouchableWithoutFeedback#hitSlop</target>
        </trans-unit>
        <trans-unit id="902efca4b9c760e684238b9c768883a5b6d6e03e" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#onLayout</source>
          <target state="translated">TouchableWithoutFeedback#onLayout</target>
        </trans-unit>
        <trans-unit id="e053692b308b6ab562fe8ee1ccffa2b3532c5b1a" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#onLongPress</source>
          <target state="translated">TouchableWithoutFeedback#onLongPress</target>
        </trans-unit>
        <trans-unit id="1f34005d97ffdf86c655a03ca03a5c2b238cfbee" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#onPress</source>
          <target state="translated">TouchableWithoutFeedback#onPress</target>
        </trans-unit>
        <trans-unit id="8f06f780610be5def85975e72a4845faba6a5991" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#onPressIn</source>
          <target state="translated">TouchableWithoutFeedback#onPressIn</target>
        </trans-unit>
        <trans-unit id="2a081e7197b310a62690b187cb1ab09e6822ae1c" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#onPressOut</source>
          <target state="translated">TouchableWithoutFeedback#onPressOut</target>
        </trans-unit>
        <trans-unit id="bec30db2245b95d42e1bbddab6bcebde26fba9ba" translate="yes" xml:space="preserve">
          <source>TouchableWithoutFeedback#pressRetentionOffset</source>
          <target state="translated">TouchableWithoutFeedback#pressRetentionOffset</target>
        </trans-unit>
        <trans-unit id="e7cbedfa0fa98287e3e97b93a20f81757531505b" translate="yes" xml:space="preserve">
          <source>Touchables</source>
          <target state="translated">Touchables</target>
        </trans-unit>
        <trans-unit id="13c299e1a36a0b956627284cad313058f87335c9" translate="yes" xml:space="preserve">
          <source>Tracking dynamic values</source>
          <target state="translated">동적 값 추적</target>
        </trans-unit>
        <trans-unit id="e1c43e4fd4b0a5bfc1d972b81fad0b4ab01bf04b" translate="yes" xml:space="preserve">
          <source>Tracking gestures</source>
          <target state="translated">제스처 추적</target>
        </trans-unit>
        <trans-unit id="86bab977cad3033d96bf332af9e6de6122a8dd9a" translate="yes" xml:space="preserve">
          <source>TransformMatrixPropType</source>
          <target state="translated">TransformMatrixPropType</target>
        </trans-unit>
        <trans-unit id="1a50403c8afe4cb365e727a02dcd7ade202e7533" translate="yes" xml:space="preserve">
          <source>Transforming to Module Paths</source>
          <target state="translated">모듈 경로로 변환</target>
        </trans-unit>
        <trans-unit id="0cef4df4d340703594fc301669e90430e959441b" translate="yes" xml:space="preserve">
          <source>Transforms</source>
          <target state="translated">Transforms</target>
        </trans-unit>
        <trans-unit id="dd01a85df97abce828447449f87eb16130a4517a" translate="yes" xml:space="preserve">
          <source>Transforms#decomposedMatrix</source>
          <target state="translated">Transforms#decomposedMatrix</target>
        </trans-unit>
        <trans-unit id="a35e7c8ca7c062a8cd3ba110ce7f1b67e7f4ca2d" translate="yes" xml:space="preserve">
          <source>Transforms#rotation</source>
          <target state="translated">Transforms#rotation</target>
        </trans-unit>
        <trans-unit id="759c0fe78912517325ccf1c7042cdfaa988af6ea" translate="yes" xml:space="preserve">
          <source>Transforms#scaleX</source>
          <target state="translated">Transforms#scaleX</target>
        </trans-unit>
        <trans-unit id="8728f52b2c720f2a1ee34746e278b182aa6df4c7" translate="yes" xml:space="preserve">
          <source>Transforms#scaleY</source>
          <target state="translated">Transforms#scaleY</target>
        </trans-unit>
        <trans-unit id="1ef0f162f03dc0ba52b5faa4a3065c4449490c84" translate="yes" xml:space="preserve">
          <source>Transforms#transform</source>
          <target state="translated">Transforms#transform</target>
        </trans-unit>
        <trans-unit id="8accec1c86da79946d2fef2c303d610381a7ffd7" translate="yes" xml:space="preserve">
          <source>Transforms#transformMatrix</source>
          <target state="translated">Transforms#transformMatrix</target>
        </trans-unit>
        <trans-unit id="130d0299689976fe4da2bd5678d1ea0d1048a2b7" translate="yes" xml:space="preserve">
          <source>Transforms#translateX</source>
          <target state="translated">Transforms#translateX</target>
        </trans-unit>
        <trans-unit id="dcf487cc1a2e95866e095a8a858f3397b18005f1" translate="yes" xml:space="preserve">
          <source>Transforms#translateY</source>
          <target state="translated">Transforms#translateY</target>
        </trans-unit>
        <trans-unit id="e1f4f8162c36d4b73dead48344893eab57cc7de4" translate="yes" xml:space="preserve">
          <source>Transforms...</source>
          <target state="translated">Transforms...</target>
        </trans-unit>
        <trans-unit id="b50dbf69655f602acdddc6d102e4ad214f568b63" translate="yes" xml:space="preserve">
          <source>Transient issues or issues that only occur on a specific project but a minimum repro is not provided may be closed.</source>
          <target state="translated">특정 프로젝트에서만 발생하지만 최소한의 재현이 제공되지 않는 일시적인 문제는 종결 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebf629cac9281251ce103b9b1461efe9bf249ebb" translate="yes" xml:space="preserve">
          <source>Triaging issues</source>
          <target state="translated">심사 문제</target>
        </trans-unit>
        <trans-unit id="6433b807cc585ca2ad5185fbf8b1d6fcfa077fdc" translate="yes" xml:space="preserve">
          <source>Triaging issues and pull requests</source>
          <target state="translated">심사 문제 및 풀 요청</target>
        </trans-unit>
        <trans-unit id="d9186a91973d6f7bd2a35e74bfff07a7fb169eb1" translate="yes" xml:space="preserve">
          <source>Trigger a vibration with specified &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;pattern&lt;/code&gt; 으로 진동을 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="5cf5e25b9d53f935398b669c9b46219374470b4e" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;https://github.com/facebook/react-native/issues/2720&quot;&gt;downgrading your Gradle version to 1.2.3&lt;/a&gt; in &lt;code&gt;android/build.gradle&lt;/code&gt;.</source>
          <target state="translated">시도 &lt;a href=&quot;https://github.com/facebook/react-native/issues/2720&quot;&gt;1.2.3에 Gradle을 버전을 다운 그레이드&lt;/a&gt; 에 &lt;code&gt;android/build.gradle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c45b7802f4b76ef250b8abe66e55eef2523c61e" translate="yes" xml:space="preserve">
          <source>Try it on your phone</source>
          <target state="translated">휴대 전화에서 사용해보세요</target>
        </trans-unit>
        <trans-unit id="26686073cb2d539861bc2c88a106ea0015e0611b" translate="yes" xml:space="preserve">
          <source>Try out apps from the &lt;a href=&quot;https://facebook.github.io/react-native/showcase.html&quot;&gt;Showcase&lt;/a&gt; to see what React Native is capable of! There are also some &lt;a href=&quot;https://github.com/ReactNativeNews/React-Native-Apps&quot;&gt;example apps on GitHub&lt;/a&gt;. You can run the apps on a simulator or device, and you can see the source code for these apps, which is neat.</source>
          <target state="translated">&lt;a href=&quot;https://facebook.github.io/react-native/showcase.html&quot;&gt;Showcase&lt;/a&gt; 에서 앱을 사용해 React Native가 무엇을 할 수 있는지 확인하십시오! &lt;a href=&quot;https://github.com/ReactNativeNews/React-Native-Apps&quot;&gt;GitHub&lt;/a&gt; 에는 몇 가지 예제 앱 도 있습니다 . 시뮬레이터 또는 장치에서 앱을 실행할 수 있으며 이러한 앱의 소스 코드를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="666c0139e19cb08702d2b3474d45b4ad3cf7ac94" translate="yes" xml:space="preserve">
          <source>Try to open the given &lt;code&gt;url&lt;/code&gt; with any of the installed apps.</source>
          <target state="translated">설치된 앱 중 하나 를 사용하여 지정된 &lt;code&gt;url&lt;/code&gt; 을 열어보십시오 .</target>
        </trans-unit>
        <trans-unit id="67a32788a2051583d559b7562fde96365e41ac94" translate="yes" xml:space="preserve">
          <source>Turn on &lt;a href=&quot;debugging#reloading-javascript&quot;&gt;Live Reload&lt;/a&gt; in the Developer Menu. Your app will now reload automatically whenever you save any changes!</source>
          <target state="translated">개발자 메뉴에서 &lt;a href=&quot;debugging#reloading-javascript&quot;&gt;실시간 새로 고침&lt;/a&gt; 을 켭니다 . 변경 사항을 저장할 때마다 앱이 자동으로 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="b736c953a0d20a0c85b27eb657c5c53dd2d30748" translate="yes" xml:space="preserve">
          <source>Two buttons mean 'negative', 'positive' (such as 'Cancel', 'OK')</source>
          <target state="translated">두 개의 버튼은 '음성', '긍정적'을 의미합니다 (예 : '취소', '확인')</target>
        </trans-unit>
        <trans-unit id="88859387cd43d3ba2fb22f905af65a5ed075e55f" translate="yes" xml:space="preserve">
          <source>Two methods exposed via the native element are .focus() and .blur() that will focus or blur the TextInput programmatically.</source>
          <target state="translated">네이티브 요소를 통해 노출되는 두 가지 방법은 .focus () 및 .blur ()입니다. 프로그래밍 방식으로 TextInput의 초점을 맞추거나 흐리게합니다.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="e333598fa13c1bff4fb481f44da0f28dcb0a8442" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;source $HOME/.bash_profile&lt;/code&gt; to load the config into your current shell. Verify that ANDROID_HOME has been added to your path by running &lt;code&gt;echo $PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source $HOME/.bash_profile&lt;/code&gt; 을 입력 하여 현재 쉘에 구성을로드하십시오. &lt;code&gt;echo $PATH&lt;/code&gt; 를 실행하여 ANDROID_HOME이 경로에 추가되었는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ba69662a63352acd45295d8a4cf929df3f97fd7" translate="yes" xml:space="preserve">
          <source>Type Definitions</source>
          <target state="translated">타입 정의</target>
        </trans-unit>
        <trans-unit id="a82d5d8585ad40f9b38a91d41890e19ac3f1ddf6" translate="yes" xml:space="preserve">
          <source>Type in your machine's IP address and the port of the local dev server (e.g. 10.0.1.1:8081).</source>
          <target state="translated">컴퓨터의 IP 주소와 로컬 개발자 서버의 포트를 입력하십시오 (예 : 10.0.1.1:8081).</target>
        </trans-unit>
        <trans-unit id="841c3256f3bebe71a1f972cd34c34be4e81fd9a4" translate="yes" xml:space="preserve">
          <source>Type the following in your command prompt to install and launch your app on the device:</source>
          <target state="translated">명령 프롬프트에 다음을 입력하여 장치에 앱을 설치하고 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="b485468714860cc20d1376986037a8772ae3ffcb" translate="yes" xml:space="preserve">
          <source>UI frame rate (main thread)</source>
          <target state="translated">UI 프레임 속도 (메인 스레드)</target>
        </trans-unit>
        <trans-unit id="f8796f7e630791cc52dfe692d1eed7ea0079d4e1" translate="yes" xml:space="preserve">
          <source>Unable to start react-native package manager (on Linux)</source>
          <target state="translated">반응 네이티브 패키지 관리자를 시작할 수 없습니다 (Linux).</target>
        </trans-unit>
        <trans-unit id="cb5b843f01da5a625b536cf21c3c4bded1a2e95c" translate="yes" xml:space="preserve">
          <source>Unbundling + inline requires</source>
          <target state="translated">번들링 + 인라인 필요</target>
        </trans-unit>
        <trans-unit id="e8febf8942c32824fc7791f721e34b5e33a30ed5" translate="yes" xml:space="preserve">
          <source>Understand what React Native components you will use in your app.</source>
          <target state="translated">앱에서 사용할 React Native 구성 요소를 이해하십시오.</target>
        </trans-unit>
        <trans-unit id="db048614281ba4eb12e3ec3db6435f0bd9951375" translate="yes" xml:space="preserve">
          <source>Understanding the CLI</source>
          <target state="translated">CLI 이해</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="7e2cd33f3a4f970779c2ad2776d2d4dfd04ce10b" translate="yes" xml:space="preserve">
          <source>Unlike the more generic &lt;code&gt;ScrollView&lt;/code&gt;, the following list view components only render elements that are currently showing on the screen. This makes them a great choice for displaying long lists of data.</source>
          <target state="translated">보다 일반적인 &lt;code&gt;ScrollView&lt;/code&gt; 와 달리 다음 목록보기 구성 요소는 현재 화면에 표시되는 요소 만 렌더링합니다. 따라서 긴 데이터 목록을 표시하기에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="ec3f519fae1b5c617724fdab56248a970b3c3707" translate="yes" xml:space="preserve">
          <source>Unregister for all remote notifications received via Apple Push Notification service.</source>
          <target state="translated">Apple Push Notification 서비스를 통해받은 모든 원격 알림의 등록을 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="fb52c13a5d3c511932c9721a05a0f30bebc8f773" translate="yes" xml:space="preserve">
          <source>Unsupported</source>
          <target state="translated">Unsupported</target>
        </trans-unit>
        <trans-unit id="59b37cef28ea34234988046f89344f799c15e380" translate="yes" xml:space="preserve">
          <source>Until now we've just returned a &lt;code&gt;MKMapView&lt;/code&gt; instance from our manager's &lt;code&gt;-(UIView *)view&lt;/code&gt; method. We can't add new properties to &lt;code&gt;MKMapView&lt;/code&gt; so we have to create a new subclass from &lt;code&gt;MKMapView&lt;/code&gt; which we use for our View. We can then add a &lt;code&gt;onRegionChange&lt;/code&gt; callback on this subclass:</source>
          <target state="translated">지금까지는 관리자의 &lt;code&gt;-(UIView *)view&lt;/code&gt; 메소드 에서 &lt;code&gt;MKMapView&lt;/code&gt; 인스턴스를 반환했습니다 . 우리는 새로운 속성을 추가 할 수 없습니다 &lt;code&gt;MKMapView&lt;/code&gt; 을 우리의 새로운 서브 클래스 생성해야하므로 &lt;code&gt;MKMapView&lt;/code&gt; 우리가보기에 사용. 그런 다음 이 서브 클래스에 &lt;code&gt;onRegionChange&lt;/code&gt; 콜백 을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da54bf3d51a7fe248513370218ba4a8c1a1b4fb8" translate="yes" xml:space="preserve">
          <source>Updating the Documentation</source>
          <target state="translated">설명서 업데이트</target>
        </trans-unit>
        <trans-unit id="69dabefac05f5c0a651abedcdf231addb07477cf" translate="yes" xml:space="preserve">
          <source>Updating the config.js</source>
          <target state="translated">config.js 업데이트</target>
        </trans-unit>
        <trans-unit id="3072d954488bb97d34581843eeb952869120fdc0" translate="yes" xml:space="preserve">
          <source>Upgrade based on Git</source>
          <target state="translated">Git 기반 업그레이드</target>
        </trans-unit>
        <trans-unit id="375dee205808a21efe78eb66206d3c2d46c33155" translate="yes" xml:space="preserve">
          <source>Upgrading to new React Native versions</source>
          <target state="translated">새로운 React Native 버전으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="3bf565c0b68f9893c3f7037aa04b5f3cd48fe7ac" translate="yes" xml:space="preserve">
          <source>Upgrading to new versions of React Native will give you access to more APIs, views, developer tools and other goodies. Upgrading requires a small amount of effort, but we try to make it easy for you. The instructions are a bit different depending on whether you used &lt;code&gt;create-react-native-app&lt;/code&gt; or &lt;code&gt;react-native init&lt;/code&gt; to create your project.</source>
          <target state="translated">새로운 버전의 React Native로 업그레이드하면 더 많은 API, 뷰, 개발자 도구 및 기타 기능에 액세스 할 수 있습니다. 업그레이드에는 약간의 노력이 필요하지만 쉽게 사용할 수 있도록 노력하고 있습니다. 지침은 &lt;code&gt;create-react-native-app&lt;/code&gt; 또는 &lt;code&gt;react-native init&lt;/code&gt; 을 사용하여 프로젝트를 작성 했는지에 따라 약간 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="e488b078302c654bd02293f843af45435ee1631f" translate="yes" xml:space="preserve">
          <source>Upgrading your Create React Native App project to a new version of React Native requires updating the &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, and &lt;code&gt;expo&lt;/code&gt; package versions in your &lt;code&gt;package.json&lt;/code&gt; file. Please refer to &lt;a href=&quot;https://github.com/react-community/create-react-native-app/blob/master/VERSIONS.md&quot;&gt;this document&lt;/a&gt; to find out what versions are supported. You will also need to set the correct &lt;code&gt;sdkVersion&lt;/code&gt; in your &lt;code&gt;app.json&lt;/code&gt; file.</source>
          <target state="translated">React Native 앱 작성 프로젝트를 새 버전의 React Native로 업그레이드하려면 &lt;code&gt;package.json&lt;/code&gt; 파일 에서 &lt;code&gt;react-native&lt;/code&gt; , &lt;code&gt;react&lt;/code&gt; 및 &lt;code&gt;expo&lt;/code&gt; 패키지 버전을 업데이트해야 합니다. 지원되는 버전을 확인하려면 &lt;a href=&quot;https://github.com/react-community/create-react-native-app/blob/master/VERSIONS.md&quot;&gt;이 문서&lt;/a&gt; 를 참조하십시오 . 또한 &lt;code&gt;app.json&lt;/code&gt; 파일 에서 올바른 &lt;code&gt;sdkVersion&lt;/code&gt; 을 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2b7bdc1c465e013101031906ab3fd1aac6ab4a81" translate="yes" xml:space="preserve">
          <source>Upload both these files to markets which support device targetting, such as &lt;a href=&quot;https://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;Google Play&lt;/a&gt; and &lt;a href=&quot;https://developer.amazon.com/docs/app-submission/getting-started-with-device-targeting.html&quot;&gt;Amazon AppStore&lt;/a&gt; and the users will automatically get the appropriate APK. If you want to upload to other markets such as &lt;a href=&quot;https://www.apkfiles.com/&quot;&gt;APKFiles&lt;/a&gt;, which do not support multiple APKs for a single app, change the following line as well to create the default universal APK with binaries for both CPUs.</source>
          <target state="translated">&lt;a href=&quot;https://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;Google Play&lt;/a&gt; 및 &lt;a href=&quot;https://developer.amazon.com/docs/app-submission/getting-started-with-device-targeting.html&quot;&gt;Amazon AppStore&lt;/a&gt; 와 같은 장치 타겟팅을 지원하는 시장에이 파일을 모두 업로드 하면 사용자가 자동으로 적절한 APK를받습니다. 단일 앱에 대해 여러 개의 APK를 지원하지 않는 &lt;a href=&quot;https://www.apkfiles.com/&quot;&gt;APKFiles&lt;/a&gt; 와 같은 다른 시장에 업로드 하려면 다음 행을 변경하여 두 CPU에 대한 바이너리가 포함 된 기본 범용 APK를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="ab6d8c936a82fbb62c80db1bb7628990c300c86c" translate="yes" xml:space="preserve">
          <source>Uri Data Images</source>
          <target state="translated">우리 데이터 이미지</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="3439e83eddd9b986dc9a370152a22cf7dcf9b189" translate="yes" xml:space="preserve">
          <source>Usage example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="97044b5ff2028059d5d48be45381412f1327a410" translate="yes" xml:space="preserve">
          <source>Usage with Navigator</source>
          <target state="translated">네비게이터와 함께 사용</target>
        </trans-unit>
        <trans-unit id="9bad42f65f48bf762dcf1e77fbc753fe0181fb05" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;DatePickerIOS&lt;/code&gt; to render a date/time picker (selector) on iOS. This is a controlled component, so you must hook in to the &lt;code&gt;onDateChange&lt;/code&gt; callback and update the &lt;code&gt;date&lt;/code&gt; prop in order for the component to update, otherwise the user's change will be reverted immediately to reflect &lt;code&gt;props.date&lt;/code&gt; as the source of truth.</source>
          <target state="translated">iOS에서 날짜 / 시간 선택기 (선택기)를 렌더링 하려면 &lt;code&gt;DatePickerIOS&lt;/code&gt; 를 사용하십시오 . 이것은 제어되는 구성 요소이므로 구성 요소를 업데이트 하려면 &lt;code&gt;onDateChange&lt;/code&gt; 콜백에 연결하고 &lt;code&gt;date&lt;/code&gt; 소품을 업데이트해야합니다. 그렇지 않으면 사용자의 변경 사항이 &lt;code&gt;props.date&lt;/code&gt; 를 사실의 출처 로 반영하기 위해 즉시 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="b71bb8ded7e3a9817b215ba294156eb50d1d0853" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ProgressViewIOS&lt;/code&gt; to render a UIProgressView on iOS.</source>
          <target state="translated">iOS에서 UIProgressView를 렌더링 하려면 &lt;code&gt;ProgressViewIOS&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b1a11367ac5770d4c7233a4480434e90272b547" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;SegmentedControlIOS&lt;/code&gt; to render a UISegmentedControl iOS.</source>
          <target state="translated">&lt;code&gt;SegmentedControlIOS&lt;/code&gt; 를 사용하여 UISegmentedControl iOS를 렌더링 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f3e3eedce66744a8bfded9847109326ea873355" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;StatusBar&lt;/code&gt; for mutating the status bar.</source>
          <target state="translated">사용 &lt;code&gt;StatusBar&lt;/code&gt; 상태 표시 줄 돌연변이를 위해.</target>
        </trans-unit>
        <trans-unit id="518c101b909f068d77d34cd74c3578609494acce" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;flex&lt;/code&gt; in a component's style to have the component expand and shrink dynamically based on available space. Normally you will use &lt;code&gt;flex: 1&lt;/code&gt;, which tells a component to fill all available space, shared evenly amongst each other component with the same parent. The larger the &lt;code&gt;flex&lt;/code&gt; given, the higher the ratio of space a component will take compared to its siblings.</source>
          <target state="translated">사용 가능한 공간을 기준으로 구성 요소를 동적으로 확장 및 축소하려면 구성 요소 스타일에 &lt;code&gt;flex&lt;/code&gt; 를 사용하십시오 . 일반적으로 &lt;code&gt;flex: 1&lt;/code&gt; 을 사용 하면 구성 요소에 사용 가능한 모든 공간을 채우고 동일한 부모와 서로 다른 구성 요소간에 고르게 공유하도록 지시합니다. 주어진 &lt;code&gt;flex&lt;/code&gt; 클수록 컴포넌트가 형제와 비교할 때 차지하는 공간의 비율이 높아집니다.</target>
        </trans-unit>
        <trans-unit id="f80c94b420a0303fdf09068f885612019dd11c3e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;scrollToEnd({animated: true})&lt;/code&gt; for smooth animated scrolling, &lt;code&gt;scrollToEnd({animated: false})&lt;/code&gt; for immediate scrolling. If no options are passed, &lt;code&gt;animated&lt;/code&gt; defaults to true.</source>
          <target state="translated">사용 &lt;code&gt;scrollToEnd({animated: true})&lt;/code&gt; , 스크롤 애니메이션 부드러운위한 &lt;code&gt;scrollToEnd({animated: false})&lt;/code&gt; 즉시 스크롤. 옵션이 전달되지 않으면 &lt;code&gt;animated&lt;/code&gt; 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="35c85ee872d200914e1a83216513d00fd237e3b8" translate="yes" xml:space="preserve">
          <source>Use Android Ripple</source>
          <target state="translated">안드로이드 리플 사용</target>
        </trans-unit>
        <trans-unit id="3b792e0b3837be43ee4208b81b980397b390a5af" translate="yes" xml:space="preserve">
          <source>Use a StyleSheet:</source>
          <target state="translated">스타일 시트 사용 :</target>
        </trans-unit>
        <trans-unit id="52ca2c2cc13d05e0b15d328ca94e046fde4c6c91" translate="yes" xml:space="preserve">
          <source>Use placeholder text as an example of expected data format</source>
          <target state="translated">자리 표시 자 텍스트를 예상 데이터 형식의 예로 사용</target>
        </trans-unit>
        <trans-unit id="98078ea34c57ad1695036925e021d542b4edba1d" translate="yes" xml:space="preserve">
          <source>Use semicolons;</source>
          <target state="translated">세미콜론을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0badd1971e3d8d54c5a9d433d6a05a2bd163fb87" translate="yes" xml:space="preserve">
          <source>Use setNativeProps when frequent re-rendering creates a performance bottleneck</source>
          <target state="translated">빈번한 다시 렌더링으로 인해 성능 병목 현상이 발생하면 setNativeProps를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4dfbd9f678ee566a3e41391ac106b4f272a45345" translate="yes" xml:space="preserve">
          <source>Use the React Native command line interface to generate a new React Native project called &quot;AwesomeProject&quot;:</source>
          <target state="translated">React Native 명령 행 인터페이스를 사용하여 &quot;AwesomeProject&quot;라는 새로운 React Native 프로젝트를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="22ef02108968916acbfca6f288ecc20c4eebe4f9" translate="yes" xml:space="preserve">
          <source>Use the built-in profiler to get detailed information about work done in the JavaScript thread and main thread side-by-side. Access it by selecting Perf Monitor from the Debug menu.</source>
          <target state="translated">내장 프로파일 러를 사용하여 JavaScript 스레드와 기본 스레드에서 수행 된 작업에 대한 자세한 정보를 얻을 수 있습니다. 디버그 메뉴에서 성능 모니터를 선택하여 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="e4b59267259c40b0c3aabb5cd078ff388d9c1533" translate="yes" xml:space="preserve">
          <source>Use the following lines on Android if you want to use a single indexed file:</source>
          <target state="translated">단일 색인 파일을 사용하려면 Android에서 다음 행을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0b7162d032c1c603f419ffffb869fc9cc6276149" translate="yes" xml:space="preserve">
          <source>Use the new &lt;a href=&quot;flatlist&quot;&gt;&lt;code&gt;FlatList&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sectionlist&quot;&gt;&lt;code&gt;SectionList&lt;/code&gt;&lt;/a&gt; component instead. Besides simplifying the API, the new list components also have significant performance enhancements, the main one being nearly constant memory usage for any number of rows.</source>
          <target state="translated">대신 새 &lt;a href=&quot;flatlist&quot;&gt; &lt;code&gt;FlatList&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sectionlist&quot;&gt; &lt;code&gt;SectionList&lt;/code&gt; &lt;/a&gt; 구성 요소를 사용하십시오. API를 단순화하는 것 외에도 새로운 목록 구성 요소는 성능이 크게 향상되었으며, 주요 구성 요소는 여러 행에 대해 거의 일정한 메모리 사용량입니다.</target>
        </trans-unit>
        <trans-unit id="db1f3ecafb15f90bcf35c17a9c4430cc62da7e60" translate="yes" xml:space="preserve">
          <source>Use this as a batch operation for storing multiple key-value pairs. When the operation completes you'll get a single callback with any errors:</source>
          <target state="translated">여러 키-값 쌍을 저장하기위한 배치 작업으로 사용하십시오. 작업이 완료되면 오류가 발생한 단일 콜백이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="17f4f6789a4bb27d5e702fd5417e6404fe40c149" translate="yes" xml:space="preserve">
          <source>Use this only in case the above didn't work.</source>
          <target state="translated">위의 방법으로 문제가 해결되지 않은 경우에만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0b6a73a2ac399f5fe154fdbfb090721974e55b70" translate="yes" xml:space="preserve">
          <source>Use this property to assign a custom function to be called when someone activates an accessible element by double tapping on it while it's selected.</source>
          <target state="translated">접근 가능한 요소를 선택한 상태에서 두 번 눌러 액세스 할 수있는 요소를 활성화 할 때 호출 할 사용자 정의 함수를 지정하려면이 특성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a5475e8e270bd89295af01a39c2a88d4628b8d11" translate="yes" xml:space="preserve">
          <source>Use with &lt;code&gt;Animated.parallel()&lt;/code&gt; to create a simple effect where the object animates back slightly as the animation starts.</source>
          <target state="translated">&lt;code&gt;Animated.parallel()&lt;/code&gt; 과 함께 사용 하면 애니메이션이 시작될 때 객체가 약간 애니메이션되는 간단한 효과를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e85bde086c6fd317eb7f8d47d69a7b006d2b31e7" translate="yes" xml:space="preserve">
          <source>Used to extract a unique key for a given item at the specified index. Key is used for caching and as the react key to track item re-ordering. The default extractor checks &lt;code&gt;item.key&lt;/code&gt;, then falls back to using the index, like React does.</source>
          <target state="translated">지정된 색인에서 지정된 항목의 고유 키를 추출하는 데 사용됩니다. 키는 캐싱 및 항목 순서 변경을 추적하는 반응 키로 사용됩니다. 기본 추출기는 &lt;code&gt;item.key&lt;/code&gt; 를 확인한 다음 React처럼 인덱스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="19e579680277910903045a35da955f02842c4192" translate="yes" xml:space="preserve">
          <source>Used to extract a unique key for a given item at the specified index. Key is used for caching and as the react key to track item re-ordering. The default extractor checks item.key, then falls back to using the index, like react does. Note that this sets keys for each item, but each overall section still needs its own key.</source>
          <target state="translated">지정된 색인에서 지정된 항목의 고유 키를 추출하는 데 사용됩니다. 키는 캐싱 및 항목 순서 변경을 추적하는 반응 키로 사용됩니다. 기본 추출기는 item.key를 확인한 다음 react처럼 인덱스를 사용합니다. 이렇게하면 각 항목에 대한 키가 설정되지만 각 섹션마다 여전히 고유 한 키가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="80a047fe2fcfc7eae1d0f9c4f0c890a7397c2911" translate="yes" xml:space="preserve">
          <source>Used to handle failures when scrolling to an index that has not been measured yet. Recommended action is to either compute your own offset and &lt;code&gt;scrollTo&lt;/code&gt; it, or scroll as far as possible and then try again after more items have been rendered.</source>
          <target state="translated">아직 측정되지 않은 인덱스로 스크롤 할 때 실패를 처리하는 데 사용됩니다. 권장되는 작업 중 하나를 귀하의 오프셋 소유하고 계산하는 것이다 &lt;code&gt;scrollTo&lt;/code&gt; 최대한으로, 또는 스크롤을 더 많은 항목이 렌더링 된 후 다시 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="666d5aa207d3319c64cd4f2fec4868d85f529f80" translate="yes" xml:space="preserve">
          <source>Used to locate this view from native classes.</source>
          <target state="translated">기본 클래스에서이보기를 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8c7567717128006073e8bbc9fb67d43c9fe9abfe" translate="yes" xml:space="preserve">
          <source>Used to locate this view from native code.</source>
          <target state="translated">기본 코드에서이보기를 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bb7da1d7fc55eee25a20991820e8c28897a515fd" translate="yes" xml:space="preserve">
          <source>Used to locate this view in UI automation tests.</source>
          <target state="translated">UI 자동화 테스트에서이보기를 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4d00ed6017d1915548e66a17eab351062c5d3112" translate="yes" xml:space="preserve">
          <source>Used to locate this view in end-to-end tests.</source>
          <target state="translated">종단 간 테스트에서이보기를 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="20e89b9fcfe4819f82931147d19d420b0ef35039" translate="yes" xml:space="preserve">
          <source>Used to manually set the starting scroll offset. The default value is &lt;code&gt;{x: 0, y: 0}&lt;/code&gt;.</source>
          <target state="translated">시작 스크롤 오프셋을 수동으로 설정하는 데 사용됩니다. 기본값은 &lt;code&gt;{x: 0, y: 0}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="428fad7bde64a69482668536db7e136a1a29547c" translate="yes" xml:space="preserve">
          <source>Used to override default value of overScroll mode.</source>
          <target state="translated">오버 스크롤 모드의 기본값을 재정의하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="73ecebed57f15ea80f3de39ff8e7ff64ca99931e" translate="yes" xml:space="preserve">
          <source>Used to set the toolbar direction to RTL. In addition to this property you need to add</source>
          <target state="translated">툴바 방향을 RTL로 설정하는 데 사용됩니다. 이 속성 외에도 추가해야합니다</target>
        </trans-unit>
        <trans-unit id="29d6afa59c93b1294b2b63bc3250c7ca6b66dc3c" translate="yes" xml:space="preserve">
          <source>Used to style and layout the &lt;code&gt;Slider&lt;/code&gt;. See &lt;code&gt;StyleSheet.js&lt;/code&gt; and &lt;code&gt;ViewStylePropTypes.js&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;Slider&lt;/code&gt; 스타일 및 레이아웃에 사용됩니다 . 자세한 내용은 &lt;code&gt;StyleSheet.js&lt;/code&gt; 및 &lt;code&gt;ViewStylePropTypes.js&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4324ecedb3e5fb1a05baf29c4bfdee1565d5cb5f" translate="yes" xml:space="preserve">
          <source>Used to truncate the text with an ellipsis after computing the text layout, including line wrapping, such that the total number of lines does not exceed this number.</source>
          <target state="translated">줄 바꿈을 포함하여 텍스트 레이아웃을 계산 한 후 줄을 포함하여 텍스트를 줄임표로 잘라서 총 줄 수가이 수를 초과하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="ed5170cd339b4047e02379b1d218d6d630aafc71" translate="yes" xml:space="preserve">
          <source>User Interface</source>
          <target state="translated">사용자 인터페이스</target>
        </trans-unit>
        <trans-unit id="78f39ff4f880f03b897460aa88302aefc23ff132" translate="yes" xml:space="preserve">
          <source>Users interact with mobile apps mainly through touch. They can use a combination of gestures, such as tapping on a button, scrolling a list, or zooming on a map. React Native provides components to handle all sorts of common gestures, as well as a comprehensive &lt;a href=&quot;gesture-responder-system&quot;&gt;gesture responder system&lt;/a&gt; to allow for more advanced gesture recognition, but the one component you will most likely be interested in is the basic Button.</source>
          <target state="translated">사용자는 주로 터치를 통해 모바일 앱과 상호 작용합니다. 버튼 누르기, 목록 스크롤 또는지도 확대 / 축소와 같은 제스처 조합을 사용할 수 있습니다. React Native는 모든 종류의 일반적인 제스처를 처리 할 수있는 구성 요소와 고급 제스처 인식을 허용 하는 포괄적 인 &lt;a href=&quot;gesture-responder-system&quot;&gt;제스처 응답기 시스템&lt;/a&gt; 을 제공하지만 가장 관심있는 구성 요소는 기본 버튼입니다.</target>
        </trans-unit>
        <trans-unit id="a5b72b445cf1c55741fda967c8d393b4612277eb" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;platform-specific-code#platform-specific-extensions&quot;&gt;platform-specific file extensions&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;platform-specific-code#platform-specific-extensions&quot;&gt;플랫폼 별 파일 확장자를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1bcb002dafdb9ae8395c7ff35774338040b7fc79" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;console.log&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;console.log&lt;/code&gt; 문 사용</target>
        </trans-unit>
        <trans-unit id="ea877cdde71432aa7775f2127133113e2b9cd1f2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;name&lt;/code&gt; as a prop lets us customize the &lt;code&gt;Greeting&lt;/code&gt; component, so we can reuse that component for each of our greetings. This example also uses the &lt;code&gt;Greeting&lt;/code&gt; component in JSX, just like the built-in components. The power to do this is what makes React so cool - if you find yourself wishing that you had a different set of UI primitives to work with, you just invent new ones.</source>
          <target state="translated">사용하여 &lt;code&gt;name&lt;/code&gt; 소품으로하는 것은 우리가 사용자 정의 할 수 있습니다 &lt;code&gt;Greeting&lt;/code&gt; 우리는 우리의 인사 각 해당 구성 요소를 재사용 할 수 있도록 구성 요소를. 이 예제는 내장 컴포넌트와 마찬가지로 JSX 의 &lt;code&gt;Greeting&lt;/code&gt; 컴포넌트 도 사용합니다 . 이 작업을 수행하는 힘은 React를 멋지게 만드는 것입니다. 다른 UI 프리미티브 세트를 사용하기를 원한다면 새로운 것을 개발하십시오.</target>
        </trans-unit>
        <trans-unit id="44ba024ed719c4ef8cae67b9917309dca332dbc2" translate="yes" xml:space="preserve">
          <source>Using Fetch</source>
          <target state="translated">가져 오기 사용</target>
        </trans-unit>
        <trans-unit id="75b75e1e863c7d0ffbff9a9e75e16662555cacba" translate="yes" xml:space="preserve">
          <source>Using List Views</source>
          <target state="translated">목록보기 사용</target>
        </trans-unit>
        <trans-unit id="e0279abbea3c087b9732a86adaae7d374f32e063" translate="yes" xml:space="preserve">
          <source>Using Other Networking Libraries</source>
          <target state="translated">다른 네트워킹 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="9829b777dd6be02164547d2606735ebf06f64a2b" translate="yes" xml:space="preserve">
          <source>Using a ScrollView</source>
          <target state="translated">ScrollView 사용</target>
        </trans-unit>
        <trans-unit id="2fbf94abc2ae2de3cc5867c5ab7711cfd9e86d5c" translate="yes" xml:space="preserve">
          <source>Using a physical device</source>
          <target state="translated">물리적 장치 사용</target>
        </trans-unit>
        <trans-unit id="4628dec576efdf39898490acfad9af49eb27e0a1" translate="yes" xml:space="preserve">
          <source>Using a port other than 8081</source>
          <target state="translated">8081 이외의 포트 사용</target>
        </trans-unit>
        <trans-unit id="59f389e2690bb7b33d2dcd09d465cd6f6b586474" translate="yes" xml:space="preserve">
          <source>Using a virtual device</source>
          <target state="translated">가상 장치 사용</target>
        </trans-unit>
        <trans-unit id="90e7981de020c96b2340d9a50d0917428340b025" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;platform-specific-code#platform-module&quot;&gt;&lt;code&gt;Platform&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">은 Using &lt;a href=&quot;platform-specific-code#platform-module&quot;&gt; &lt;code&gt;Platform&lt;/code&gt; 모듈&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31143b557dc76d0aaa44291b58c3b33587d2692d" translate="yes" xml:space="preserve">
          <source>Using the native driver</source>
          <target state="translated">기본 드라이버 사용</target>
        </trans-unit>
        <trans-unit id="6b3232576ae25d39a6c566962099680eb543d43d" translate="yes" xml:space="preserve">
          <source>Using the native driver for normal animations is quite simple. Just add &lt;code&gt;useNativeDriver: true&lt;/code&gt; to the animation config when starting it.</source>
          <target state="translated">일반 애니메이션에 기본 드라이버를 사용하는 것은 매우 간단합니다. 애니메이션 구성을 시작할 때 &lt;code&gt;useNativeDriver: true&lt;/code&gt; 를 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="a0ecea11c76224fac0c1f1b2648966492772517a" translate="yes" xml:space="preserve">
          <source>Valid &lt;code&gt;params&lt;/code&gt; keys are:</source>
          <target state="translated">유효한 &lt;code&gt;params&lt;/code&gt; 키는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="be7db22d90cb63fa7f6e94a6507ac496cfe57fb8" translate="yes" xml:space="preserve">
          <source>Valid bug reports with good repro steps are some of the best issues! Maintainers should thank the author for finding the issue, then explain that React Native is a community project and &lt;strong&gt;ask them if they would be up for sending a fix&lt;/strong&gt;.</source>
          <target state="translated">좋은 재현 단계를 가진 유효한 버그 보고서는 최고의 문제 중 일부입니다! 관리자는 문제를 발견 한 것에 대해 저자에게 감사를 표하고 React Native가 커뮤니티 프로젝트라고 설명 &lt;strong&gt;하고 수정을 보낼 수 있는지 물어보십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="36b379de1d3bb71f0855bf9ca092b1a3795ad7f9" translate="yes" xml:space="preserve">
          <source>Valid events are:</source>
          <target state="translated">유효한 이벤트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="d88f36091547e134ccef45ce59e4d754e4417bb2" translate="yes" xml:space="preserve">
          <source>Value matching value of one of the items. Can be a string or an integer.</source>
          <target state="translated">항목 중 하나의 값 일치 값 문자열 또는 정수일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1996d30f7f9601222bf187a9dde4ec5c537f0786" translate="yes" xml:space="preserve">
          <source>Value to set for the &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 에 설정할 값 입니다.</target>
        </trans-unit>
        <trans-unit id="9ccddeb3abd033269abe57397f265be9db44f8a9" translate="yes" xml:space="preserve">
          <source>Vending a view is simple:</source>
          <target state="translated">뷰를 판매하는 것은 간단합니다 :</target>
        </trans-unit>
        <trans-unit id="9af4bde43e48fdc17fb45d1f7f01a585724d0510" translate="yes" xml:space="preserve">
          <source>Verify that the React Native aspect of your application works as expected.</source>
          <target state="translated">애플리케이션의 React Native 측면이 예상대로 작동하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e181e76568c2246ac5c6ffe43db2eca41e852948" translate="yes" xml:space="preserve">
          <source>VeryExpensive.js</source>
          <target state="translated">VeryExpensive.js</target>
        </trans-unit>
        <trans-unit id="39b345e770818eb21fd66cab4f8cd69026ee9bce" translate="yes" xml:space="preserve">
          <source>Vibration</source>
          <target state="translated">Vibration</target>
        </trans-unit>
        <trans-unit id="240d1adea0e95e4f379ab76e0ae963a23c9e68eb" translate="yes" xml:space="preserve">
          <source>Vibration pattern, accept a number or an array of numbers. Default to 400ms.</source>
          <target state="translated">진동 패턴, 숫자 또는 숫자의 배열을 받아들입니다. 기본값은 400ms입니다.</target>
        </trans-unit>
        <trans-unit id="89609f6bff1bdb31557c3675ba3b2c63078c5610" translate="yes" xml:space="preserve">
          <source>Vibration patterns are currently unsupported.</source>
          <target state="translated">진동 패턴은 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f58af890f50aa2bcc19d91bcd9b4fc31ff26ffd0" translate="yes" xml:space="preserve">
          <source>Vibration.cancel()</source>
          <target state="translated">Vibration.cancel()</target>
        </trans-unit>
        <trans-unit id="f99fbf7ab479c565ee001fd8b534f23932089bb0" translate="yes" xml:space="preserve">
          <source>Vibration.vibrate()</source>
          <target state="translated">Vibration.vibrate()</target>
        </trans-unit>
        <trans-unit id="c609a5577c37381c4c72daf66fbc2eb17b2963a7" translate="yes" xml:space="preserve">
          <source>VibrationIOS</source>
          <target state="translated">VibrationIOS</target>
        </trans-unit>
        <trans-unit id="4907134ba7279e0626dee75fc1a5ab35ecd0ac5d" translate="yes" xml:space="preserve">
          <source>VibrationIOS.vibrate()</source>
          <target state="translated">VibrationIOS.vibrate()</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="fcc5a85ac12739055839517894886a47bdfeb68a" translate="yes" xml:space="preserve">
          <source>View Style Props</source>
          <target state="translated">스타일 소품보기</target>
        </trans-unit>
        <trans-unit id="1f3551d6c9c84c1a1a4647252b27dccc2e1d5d9a" translate="yes" xml:space="preserve">
          <source>View Style Props#backfaceVisibility</source>
          <target state="translated">스타일 소품보기 #backfaceVisibility</target>
        </trans-unit>
        <trans-unit id="7a96f27e1a946ae579ec61fda2745393245469d7" translate="yes" xml:space="preserve">
          <source>View Style Props#backgroundColor</source>
          <target state="translated">스타일 소품보기 #backgroundColor</target>
        </trans-unit>
        <trans-unit id="c223414a89d03c2a6f39f9cd0e516e8ce166d6cc" translate="yes" xml:space="preserve">
          <source>View Style Props#borderBottomColor</source>
          <target state="translated">스타일 소품보기 #borderBottomColor</target>
        </trans-unit>
        <trans-unit id="39aad426eb3dc51feffb8311e605c401fb500e18" translate="yes" xml:space="preserve">
          <source>View Style Props#borderBottomEndRadius</source>
          <target state="translated">스타일 소품보기 #borderBottomEndRadius</target>
        </trans-unit>
        <trans-unit id="c3abc81b398eb7151a6537b7f5ea11f1c34b4a0c" translate="yes" xml:space="preserve">
          <source>View Style Props#borderBottomLeftRadius</source>
          <target state="translated">스타일 소품보기 #borderBottomLeftRadius</target>
        </trans-unit>
        <trans-unit id="87b99cec3de7e4753fa15ebdb9aa06f1a377b423" translate="yes" xml:space="preserve">
          <source>View Style Props#borderBottomRightRadius</source>
          <target state="translated">스타일 소품보기 #borderBottomRightRadius</target>
        </trans-unit>
        <trans-unit id="d0085b1c3a72981810307ef23069a25146942a2e" translate="yes" xml:space="preserve">
          <source>View Style Props#borderBottomStartRadius</source>
          <target state="translated">스타일 소품보기 #borderBottomStartRadius</target>
        </trans-unit>
        <trans-unit id="cddedfd5024a6b45ee75a49df298ef6b28656aa0" translate="yes" xml:space="preserve">
          <source>View Style Props#borderBottomWidth</source>
          <target state="translated">스타일 소품보기 #borderBottomWidth</target>
        </trans-unit>
        <trans-unit id="309728fba57a17618315ea73d257c63b4ba818fc" translate="yes" xml:space="preserve">
          <source>View Style Props#borderColor</source>
          <target state="translated">스타일 소품보기 #borderColor</target>
        </trans-unit>
        <trans-unit id="cb6c76d8e966e182d83f6f4949709498a51864ce" translate="yes" xml:space="preserve">
          <source>View Style Props#borderEndColor</source>
          <target state="translated">스타일 소품보기 #borderEndColor</target>
        </trans-unit>
        <trans-unit id="c95ea507b28ac2ef2707fea8e812b390bcd1b2bd" translate="yes" xml:space="preserve">
          <source>View Style Props#borderLeftColor</source>
          <target state="translated">스타일 소품보기 #borderLeftColor</target>
        </trans-unit>
        <trans-unit id="bbf581f6921de47bc82fe1750702efbe7e7883d2" translate="yes" xml:space="preserve">
          <source>View Style Props#borderLeftWidth</source>
          <target state="translated">스타일 소품보기 #borderLeftWidth</target>
        </trans-unit>
        <trans-unit id="daeb1bd91ba8df419a95ec48e2aead21900c3748" translate="yes" xml:space="preserve">
          <source>View Style Props#borderRadius</source>
          <target state="translated">스타일 소품보기 #borderRadius</target>
        </trans-unit>
        <trans-unit id="75e5791e50d09bfdd7bf01d4d9b6577bc8af5709" translate="yes" xml:space="preserve">
          <source>View Style Props#borderRightColor</source>
          <target state="translated">스타일 소품보기 #borderRightColor</target>
        </trans-unit>
        <trans-unit id="9bbc024e86eecdeb860d87a3c64283fa8048961d" translate="yes" xml:space="preserve">
          <source>View Style Props#borderRightWidth</source>
          <target state="translated">스타일 소품보기 #borderRightWidth</target>
        </trans-unit>
        <trans-unit id="275a8212aadd39dea9530255dae70c73449f123d" translate="yes" xml:space="preserve">
          <source>View Style Props#borderStartColor</source>
          <target state="translated">스타일 소품보기 #borderStartColor</target>
        </trans-unit>
        <trans-unit id="166779cc407b86097f8246fa6ec75134e1b1c273" translate="yes" xml:space="preserve">
          <source>View Style Props#borderStyle</source>
          <target state="translated">스타일 소품보기</target>
        </trans-unit>
        <trans-unit id="bc50e131dace6193142a031d32d4219dbeb64ed2" translate="yes" xml:space="preserve">
          <source>View Style Props#borderTopColor</source>
          <target state="translated">스타일 소품보기 #borderTopColor</target>
        </trans-unit>
        <trans-unit id="f4fca99149cf69716730d6a02dbc17c87bee6566" translate="yes" xml:space="preserve">
          <source>View Style Props#borderTopEndRadius</source>
          <target state="translated">스타일 소품보기 #borderTopEndRadius</target>
        </trans-unit>
        <trans-unit id="0a738ddac74c0ead03764e5703a75987f6371cf2" translate="yes" xml:space="preserve">
          <source>View Style Props#borderTopLeftRadius</source>
          <target state="translated">스타일 소품보기 #borderTopLeftRadius</target>
        </trans-unit>
        <trans-unit id="d98a04dc601317cc6a678f399a7fdec3744660e1" translate="yes" xml:space="preserve">
          <source>View Style Props#borderTopRightRadius</source>
          <target state="translated">스타일 소품보기 #borderTopRightRadius</target>
        </trans-unit>
        <trans-unit id="de67cc6f92715a9824015519e607e9e705ed04ed" translate="yes" xml:space="preserve">
          <source>View Style Props#borderTopStartRadius</source>
          <target state="translated">스타일 소품보기 #borderTopStartRadius</target>
        </trans-unit>
        <trans-unit id="cd0d3b973f1442dc8b6d60183d25123a57da2290" translate="yes" xml:space="preserve">
          <source>View Style Props#borderTopWidth</source>
          <target state="translated">스타일 소품보기 #borderTopWidth</target>
        </trans-unit>
        <trans-unit id="b1928f8e3a5d032d15a615379b4cbb9a0df672b4" translate="yes" xml:space="preserve">
          <source>View Style Props#borderWidth</source>
          <target state="translated">스타일 소품보기 #borderWidth</target>
        </trans-unit>
        <trans-unit id="3602bbeb129b35c43d48522cce7f705ab16896ad" translate="yes" xml:space="preserve">
          <source>View Style Props#elevation</source>
          <target state="translated">스타일 소품보기</target>
        </trans-unit>
        <trans-unit id="146fd116daaa4278477b9429075d9f1edd252264" translate="yes" xml:space="preserve">
          <source>View Style Props#opacity</source>
          <target state="translated">스타일 소품보기 # 불투명도</target>
        </trans-unit>
        <trans-unit id="2d21e3f6b2dd2ff775177c21992dd50c3102cbcc" translate="yes" xml:space="preserve">
          <source>View Style Props...</source>
          <target state="translated">스타일 소품보기 ...</target>
        </trans-unit>
        <trans-unit id="7d0d3d4d7b391f87dc50d167e83242ed52d17545" translate="yes" xml:space="preserve">
          <source>View props...</source>
          <target state="translated">소품보기 ...</target>
        </trans-unit>
        <trans-unit id="8b61a01559c1aaf1c177062baa647903a3d7ad97" translate="yes" xml:space="preserve">
          <source>View#accessibilityComponentType</source>
          <target state="translated">View#accessibilityComponentType</target>
        </trans-unit>
        <trans-unit id="f868d3853fd664dd2269de6443d96860ad28bf67" translate="yes" xml:space="preserve">
          <source>View#accessibilityElementsHidden</source>
          <target state="translated">View#accessibilityElementsHidden</target>
        </trans-unit>
        <trans-unit id="39d6436ff0dfe513a2ff26f438548b9149dfd41c" translate="yes" xml:space="preserve">
          <source>View#accessibilityLabel</source>
          <target state="translated">View#accessibilityLabel</target>
        </trans-unit>
        <trans-unit id="310d3132457b9e467c74f46555c07def3571060b" translate="yes" xml:space="preserve">
          <source>View#accessibilityLiveRegion</source>
          <target state="translated">View#accessibilityLiveRegion</target>
        </trans-unit>
        <trans-unit id="03dc25dceda747b0557751e9c7bbbf5d85e82250" translate="yes" xml:space="preserve">
          <source>View#accessibilityTraits</source>
          <target state="translated">View#accessibilityTraits</target>
        </trans-unit>
        <trans-unit id="8d717075f74eabfedc56591f68bcd3674439461f" translate="yes" xml:space="preserve">
          <source>View#accessibilityViewIsModal</source>
          <target state="translated">View#accessibilityViewIsModal</target>
        </trans-unit>
        <trans-unit id="994215b32822d4ad26efd556befdc3ab3d227c19" translate="yes" xml:space="preserve">
          <source>View#accessible</source>
          <target state="translated">View#accessible</target>
        </trans-unit>
        <trans-unit id="75b63a25e2b40bb17b845ba68db0e31931334521" translate="yes" xml:space="preserve">
          <source>View#collapsable</source>
          <target state="translated">View#collapsable</target>
        </trans-unit>
        <trans-unit id="d0aa48fe204b8238d92229abdd44556ec9816858" translate="yes" xml:space="preserve">
          <source>View#hitSlop</source>
          <target state="translated">View#hitSlop</target>
        </trans-unit>
        <trans-unit id="e3b3d4821184c7a333e6e6ef82a773655d93fb08" translate="yes" xml:space="preserve">
          <source>View#importantForAccessibility</source>
          <target state="translated">View#importantForAccessibility</target>
        </trans-unit>
        <trans-unit id="859ab95247b7be86b1fe455bc43a5d2a24cf59b7" translate="yes" xml:space="preserve">
          <source>View#nativeID</source>
          <target state="translated">View#nativeID</target>
        </trans-unit>
        <trans-unit id="cf7f05edd6bd0b3590f8b1076d37e900a32072a4" translate="yes" xml:space="preserve">
          <source>View#needsOffscreenAlphaCompositing</source>
          <target state="translated">View#needsOffscreenAlphaCompositing</target>
        </trans-unit>
        <trans-unit id="2b3895e31845f11c892886970da0e9dab04adb0e" translate="yes" xml:space="preserve">
          <source>View#onAccessibilityTap</source>
          <target state="translated">View#onAccessibilityTap</target>
        </trans-unit>
        <trans-unit id="df8bcd2ca48fab3ad1eecf25122705fd86419918" translate="yes" xml:space="preserve">
          <source>View#onLayout</source>
          <target state="translated">View#onLayout</target>
        </trans-unit>
        <trans-unit id="110d5eaa478f8de6636bc9f762eb8fc214598e75" translate="yes" xml:space="preserve">
          <source>View#onMagicTap</source>
          <target state="translated">View#onMagicTap</target>
        </trans-unit>
        <trans-unit id="5487e7027f286ee0980d44c7abc827f82585f7cc" translate="yes" xml:space="preserve">
          <source>View#onMoveShouldSetResponder</source>
          <target state="translated">View#onMoveShouldSetResponder</target>
        </trans-unit>
        <trans-unit id="9093180b1e74c3523be3f055eacbbd3e1a287821" translate="yes" xml:space="preserve">
          <source>View#onMoveShouldSetResponderCapture</source>
          <target state="translated">View#onMoveShouldSetResponderCapture</target>
        </trans-unit>
        <trans-unit id="c58a942c3f16fe6461aa12919e83cd825fd360e7" translate="yes" xml:space="preserve">
          <source>View#onResponderGrant</source>
          <target state="translated">View#onResponderGrant</target>
        </trans-unit>
        <trans-unit id="7b3e5095dcb0c032d522332f80b4ef2e6accad0f" translate="yes" xml:space="preserve">
          <source>View#onResponderMove</source>
          <target state="translated">View#onResponderMove</target>
        </trans-unit>
        <trans-unit id="9a0014e66f7e50fa7014b416ae387090d32e3758" translate="yes" xml:space="preserve">
          <source>View#onResponderReject</source>
          <target state="translated">View#onResponderReject</target>
        </trans-unit>
        <trans-unit id="f32b6a401d750f63d1c289136fda4f416350d49f" translate="yes" xml:space="preserve">
          <source>View#onResponderRelease</source>
          <target state="translated">View#onResponderRelease</target>
        </trans-unit>
        <trans-unit id="491fff64e4e44f88dd6b2ffa91ad54494dac9a5f" translate="yes" xml:space="preserve">
          <source>View#onResponderTerminate</source>
          <target state="translated">View#onResponderTerminate</target>
        </trans-unit>
        <trans-unit id="1543429a899f518b30e8db9f69d93f5aa3db0123" translate="yes" xml:space="preserve">
          <source>View#onResponderTerminationRequest</source>
          <target state="translated">View#onResponderTerminationRequest</target>
        </trans-unit>
        <trans-unit id="560866e389d3d3f142794066dc3e08b822769b49" translate="yes" xml:space="preserve">
          <source>View#onStartShouldSetResponder</source>
          <target state="translated">View#onStartShouldSetResponder</target>
        </trans-unit>
        <trans-unit id="e1037fd461e83a7b4622503c1d24d3c9b93fcee5" translate="yes" xml:space="preserve">
          <source>View#onStartShouldSetResponderCapture</source>
          <target state="translated">View#onStartShouldSetResponderCapture</target>
        </trans-unit>
        <trans-unit id="c158e120f60629555dc7928cb62cfd2a712fecf1" translate="yes" xml:space="preserve">
          <source>View#pointerEvents</source>
          <target state="translated">View#pointerEvents</target>
        </trans-unit>
        <trans-unit id="f083d3a92458b864f5c02764a7815a96b3806fd7" translate="yes" xml:space="preserve">
          <source>View#removeClippedSubviews</source>
          <target state="translated">View#removeClippedSubviews</target>
        </trans-unit>
        <trans-unit id="372b750dd0a3c08415b4ad86e61c78e8cd2fc0d7" translate="yes" xml:space="preserve">
          <source>View#renderToHardwareTextureAndroid</source>
          <target state="translated">View#renderToHardwareTextureAndroid</target>
        </trans-unit>
        <trans-unit id="61b981c405ad9276b468e3ae7638743428caf27f" translate="yes" xml:space="preserve">
          <source>View#shouldRasterizeIOS</source>
          <target state="translated">View#shouldRasterizeIOS</target>
        </trans-unit>
        <trans-unit id="5de24ace086972fde5f44d2e46c8792bf8368e9a" translate="yes" xml:space="preserve">
          <source>View#style</source>
          <target state="translated">View#style</target>
        </trans-unit>
        <trans-unit id="47c15916abe6afd0148b66d115a3ff6cbc77396f" translate="yes" xml:space="preserve">
          <source>View#testID</source>
          <target state="translated">View#testID</target>
        </trans-unit>
        <trans-unit id="0fb88c5f5d1bc458e92f3e65fab6ad3c147664b0" translate="yes" xml:space="preserve">
          <source>View.style</source>
          <target state="translated">View.style</target>
        </trans-unit>
        <trans-unit id="b3f2a2fe18618e877266fd33032de67b86664032" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid</source>
          <target state="translated">ViewPagerAndroid</target>
        </trans-unit>
        <trans-unit id="2eddab651378bf450a348dec12d3072b4556a1db" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#initialPage</source>
          <target state="translated">ViewPagerAndroid#initialPage</target>
        </trans-unit>
        <trans-unit id="434423ba0437c8efafbdfdffee03ef6005fcf392" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#keyboardDismissMode</source>
          <target state="translated">ViewPagerAndroid#keyboardDismissMode</target>
        </trans-unit>
        <trans-unit id="1b3041c2e7ca58f67f80648ebeba124a68dad7a7" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#onPageScroll</source>
          <target state="translated">ViewPagerAndroid#onPageScroll</target>
        </trans-unit>
        <trans-unit id="a20cf3864db8bc049cdb81b9cb50fab4531b40af" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#onPageScrollStateChanged</source>
          <target state="translated">ViewPagerAndroid#onPageScrollStateChanged</target>
        </trans-unit>
        <trans-unit id="168b4e1ccae357666647c1033f5a3f8150964ec5" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#onPageSelected</source>
          <target state="translated">ViewPagerAndroid#onPageSelected</target>
        </trans-unit>
        <trans-unit id="b0a80b844922282974d63d9b5eaae57c0fbf0bdb" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#pageMargin</source>
          <target state="translated">ViewPagerAndroid#pageMargin</target>
        </trans-unit>
        <trans-unit id="a25b57ed71cd61716e887004c83bc612aa0b8c95" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#peekEnabled</source>
          <target state="translated">ViewPagerAndroid#peekEnabled</target>
        </trans-unit>
        <trans-unit id="b9bb7800ca1742c949ef65d019fede72ed72da92" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#scrollEnabled</source>
          <target state="translated">ViewPagerAndroid#scrollEnabled</target>
        </trans-unit>
        <trans-unit id="1e033bde0e599fe6103048d133a820b1f4741deb" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#setPage</source>
          <target state="translated">ViewPagerAndroid#setPage</target>
        </trans-unit>
        <trans-unit id="fb5f11df64eca43af211146fa0bb34672010fe11" translate="yes" xml:space="preserve">
          <source>ViewPagerAndroid#setPageWithoutAnimation</source>
          <target state="translated">ViewPagerAndroid#setPageWithoutAnimation</target>
        </trans-unit>
        <trans-unit id="a147be5f8b9b4eba0f7ab2a8f9836b400ad3d676" translate="yes" xml:space="preserve">
          <source>ViewPagerScrollState</source>
          <target state="translated">ViewPagerScrollState</target>
        </trans-unit>
        <trans-unit id="7bc3819f720a5e60e94323ccc34aa745d51d9cb1" translate="yes" xml:space="preserve">
          <source>ViewabilityConfig</source>
          <target state="translated">ViewabilityConfig</target>
        </trans-unit>
        <trans-unit id="e6458d67414e35163b7c0765deabbd09d5813b1b" translate="yes" xml:space="preserve">
          <source>Views are created in the &lt;code&gt;createViewInstance&lt;/code&gt; method, the view should initialize itself in its default state, any properties will be set via a follow up call to &lt;code&gt;updateView.&lt;/code&gt;</source>
          <target state="translated">뷰는 &lt;code&gt;createViewInstance&lt;/code&gt; 메소드 에서 작성되며 뷰는 기본 상태로 초기화되어야하며 모든 특성은 &lt;code&gt;updateView.&lt;/code&gt; 대한 후속 호출을 통해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c0db61e0dbfca93a57c42d440bf51b01d4c36d1c" translate="yes" xml:space="preserve">
          <source>Views that are only used to layout their children or otherwise don't draw anything may be automatically removed from the native hierarchy as an optimization. Set this property to &lt;code&gt;false&lt;/code&gt; to disable this optimization and ensure that this &lt;code&gt;View&lt;/code&gt; exists in the native view hierarchy.</source>
          <target state="translated">자식을 레이아웃하는 데만 사용되거나 아무것도 그리지 않는 뷰는 기본 계층 구조에서 최적화로 자동 제거 될 수 있습니다. 이 최적화를 사용하지 않고이 &lt;code&gt;View&lt;/code&gt; 가 기본보기 계층 구조에 존재 하도록하려면 이 특성을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="97f9112648df7fdcc2f1632b809a2f66fa208737" translate="yes" xml:space="preserve">
          <source>Virtualization massively improves memory consumption and performance of large lists by maintaining a finite render window of active items and replacing all items outside of the render window with appropriately sized blank space. The window adapts to scrolling behavior, and items are rendered incrementally with low-pri (after any running interactions) if they are far from the visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.</source>
          <target state="translated">가상화는 활성 항목의 유한 렌더 창을 유지하고 렌더 창 외부의 모든 항목을 적절한 크기의 빈 공간으로 대체하여 큰 목록의 메모리 소비 및 성능을 크게 향상시킵니다. 이 창은 스크롤 동작에 적응하고 항목이 가시 영역에서 멀리 떨어져 있으면 낮은 우선 순위 (실행중인 상호 작용 후)로 점진적으로 렌더링되고 그렇지 않으면 빈 공간을 볼 가능성을 최소화하기 위해 hi-pri로 점진적으로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="3ab11ca51f1ddd812e03ad9d6d357293731d2781" translate="yes" xml:space="preserve">
          <source>VirtualizedList</source>
          <target state="translated">VirtualizedList</target>
        </trans-unit>
        <trans-unit id="7388520a036c8e87fb64d5b8aaf8b0444b6c30c5" translate="yes" xml:space="preserve">
          <source>VirtualizedList#CellRendererComponent</source>
          <target state="translated">VirtualizedList#CellRendererComponent</target>
        </trans-unit>
        <trans-unit id="5ab48ce991b6975101ef203339870c514694f5d9" translate="yes" xml:space="preserve">
          <source>VirtualizedList#ListEmptyComponent</source>
          <target state="translated">VirtualizedList#ListEmptyComponent</target>
        </trans-unit>
        <trans-unit id="f4ede1f3999a5b6f5e114495aa837bd5338db4bd" translate="yes" xml:space="preserve">
          <source>VirtualizedList#ListFooterComponent</source>
          <target state="translated">VirtualizedList#ListFooterComponent</target>
        </trans-unit>
        <trans-unit id="229f9005a908517b66bb526cdb31708f2e124b22" translate="yes" xml:space="preserve">
          <source>VirtualizedList#ListHeaderComponent</source>
          <target state="translated">VirtualizedList#ListHeaderComponent</target>
        </trans-unit>
        <trans-unit id="58641e8ac4468383c0bff76f31cc291bd04050e1" translate="yes" xml:space="preserve">
          <source>VirtualizedList#data</source>
          <target state="translated">VirtualizedList#data</target>
        </trans-unit>
        <trans-unit id="74ef79f3a0bebea6ecd98cd78343e8a2d3b447fc" translate="yes" xml:space="preserve">
          <source>VirtualizedList#debug</source>
          <target state="translated">VirtualizedList#debug</target>
        </trans-unit>
        <trans-unit id="9a7a534275b27b37b689268d036b7c8a46a0e4ed" translate="yes" xml:space="preserve">
          <source>VirtualizedList#disableVirtualization</source>
          <target state="translated">VirtualizedList#disableVirtualization</target>
        </trans-unit>
        <trans-unit id="55dfbda48d73fac8a69bfffb238b97b2844389d8" translate="yes" xml:space="preserve">
          <source>VirtualizedList#extraData</source>
          <target state="translated">VirtualizedList#extraData</target>
        </trans-unit>
        <trans-unit id="4ddbf5bdb129c8b02b073e83814c99093931a00b" translate="yes" xml:space="preserve">
          <source>VirtualizedList#getItem</source>
          <target state="translated">VirtualizedList#getItem</target>
        </trans-unit>
        <trans-unit id="4937812108d3b7d5ca32b2bf4000e2caf32e877d" translate="yes" xml:space="preserve">
          <source>VirtualizedList#getItemCount</source>
          <target state="translated">VirtualizedList#getItemCount</target>
        </trans-unit>
        <trans-unit id="f864be9f9f78f0640519d702b165ff1b82cc7aa4" translate="yes" xml:space="preserve">
          <source>VirtualizedList#getItemLayout</source>
          <target state="translated">VirtualizedList#getItemLayout</target>
        </trans-unit>
        <trans-unit id="5dff02cf608d5bd4c46ca6f81feec981a9e40d7f" translate="yes" xml:space="preserve">
          <source>VirtualizedList#horizontal</source>
          <target state="translated">VirtualizedList#horizontal</target>
        </trans-unit>
        <trans-unit id="439e01827ea43d79ecf6598cc8cffeeb057c4a7a" translate="yes" xml:space="preserve">
          <source>VirtualizedList#initialNumToRender</source>
          <target state="translated">VirtualizedList#initialNumToRender</target>
        </trans-unit>
        <trans-unit id="d0851634a13f6e3ff8d366c855cac7c549d5c57a" translate="yes" xml:space="preserve">
          <source>VirtualizedList#initialScrollIndex</source>
          <target state="translated">VirtualizedList#initialScrollIndex</target>
        </trans-unit>
        <trans-unit id="51e6e8c8809565fd8db4d941dc5b85f23d063a85" translate="yes" xml:space="preserve">
          <source>VirtualizedList#inverted</source>
          <target state="translated">VirtualizedList#inverted</target>
        </trans-unit>
        <trans-unit id="30128b7d59586b0c3d18ab41b44697a8fa895532" translate="yes" xml:space="preserve">
          <source>VirtualizedList#keyExtractor</source>
          <target state="translated">VirtualizedList#keyExtractor</target>
        </trans-unit>
        <trans-unit id="80653bc3164649567b4e40f992f43571d80f0ec3" translate="yes" xml:space="preserve">
          <source>VirtualizedList#maxToRenderPerBatch</source>
          <target state="translated">VirtualizedList#maxToRenderPerBatch</target>
        </trans-unit>
        <trans-unit id="b58a29f6b1681a96c3bcef36a73068746a384384" translate="yes" xml:space="preserve">
          <source>VirtualizedList#onEndReached</source>
          <target state="translated">VirtualizedList#onEndReached</target>
        </trans-unit>
        <trans-unit id="00176811a48c8b518513688ebd3fe62ad9ad30c3" translate="yes" xml:space="preserve">
          <source>VirtualizedList#onEndReachedThreshold</source>
          <target state="translated">VirtualizedList#onEndReachedThreshold</target>
        </trans-unit>
        <trans-unit id="634001ca28e3ac8b95d2fc315844cb9b078577be" translate="yes" xml:space="preserve">
          <source>VirtualizedList#onLayout</source>
          <target state="translated">VirtualizedList#onLayout</target>
        </trans-unit>
        <trans-unit id="52c251a0e20e2220752ec0e24ef9c8d504341085" translate="yes" xml:space="preserve">
          <source>VirtualizedList#onRefresh</source>
          <target state="translated">VirtualizedList#onRefresh</target>
        </trans-unit>
        <trans-unit id="abfaa51f8c5a95c6e3ffddf2de112b249b240693" translate="yes" xml:space="preserve">
          <source>VirtualizedList#onScrollToIndexFailed</source>
          <target state="translated">VirtualizedList#onScrollToIndexFailed</target>
        </trans-unit>
        <trans-unit id="d3c4bad4de5375e3841cefa57023746a9c0e9d15" translate="yes" xml:space="preserve">
          <source>VirtualizedList#onViewableItemsChanged</source>
          <target state="translated">VirtualizedList#onViewableItemsChanged</target>
        </trans-unit>
        <trans-unit id="fb301781ae065c905e07dedbb3f4796ff3dd34f8" translate="yes" xml:space="preserve">
          <source>VirtualizedList#progressViewOffset</source>
          <target state="translated">VirtualizedList#progressViewOffset</target>
        </trans-unit>
        <trans-unit id="e719d9dc8e926b7a9c6d9a08a4550928978a06fb" translate="yes" xml:space="preserve">
          <source>VirtualizedList#refreshing</source>
          <target state="translated">VirtualizedList#refreshing</target>
        </trans-unit>
        <trans-unit id="1b2eb39829b67f37d9d3393f893207a1160cde94" translate="yes" xml:space="preserve">
          <source>VirtualizedList#removeClippedSubviews</source>
          <target state="translated">VirtualizedList#removeClippedSubviews</target>
        </trans-unit>
        <trans-unit id="41c690c80de7cab7bc4fc65ec825f124fb92d8b5" translate="yes" xml:space="preserve">
          <source>VirtualizedList#renderItem</source>
          <target state="translated">VirtualizedList#renderItem</target>
        </trans-unit>
        <trans-unit id="8f1872faaf77a0ef7dd02b2a2129e458f9ea4074" translate="yes" xml:space="preserve">
          <source>VirtualizedList#renderScrollComponent</source>
          <target state="translated">VirtualizedList#renderScrollComponent</target>
        </trans-unit>
        <trans-unit id="bbc2381cdba6993c3822a9001716eeec04917dfe" translate="yes" xml:space="preserve">
          <source>VirtualizedList#updateCellsBatchingPeriod</source>
          <target state="translated">VirtualizedList#updateCellsBatchingPeriod</target>
        </trans-unit>
        <trans-unit id="9da5e544abb1944823d17ce400e297b4ed21c224" translate="yes" xml:space="preserve">
          <source>VirtualizedList#viewabilityConfig</source>
          <target state="translated">VirtualizedList#viewabilityConfig</target>
        </trans-unit>
        <trans-unit id="6280169c2a2c3dcd836a951061debc41341ac32e" translate="yes" xml:space="preserve">
          <source>VirtualizedList#viewabilityConfigCallbackPairs</source>
          <target state="translated">VirtualizedList#viewabilityConfigCallbackPairs</target>
        </trans-unit>
        <trans-unit id="9bfe00c3cd5ddb642e8b32e3175e570e47a8ebae" translate="yes" xml:space="preserve">
          <source>VirtualizedList#windowSize</source>
          <target state="translated">VirtualizedList#windowSize</target>
        </trans-unit>
        <trans-unit id="1abed3f08cd57bfe6486165eccd5400196be1dbf" translate="yes" xml:space="preserve">
          <source>VirtualizedList.flashScrollIndicators()</source>
          <target state="translated">VirtualizedList.flashScrollIndicators()</target>
        </trans-unit>
        <trans-unit id="3622e1dd3891d3192cace1ebd493d70aae203458" translate="yes" xml:space="preserve">
          <source>VirtualizedList.recordInteraction()</source>
          <target state="translated">VirtualizedList.recordInteraction()</target>
        </trans-unit>
        <trans-unit id="6ea1af4fbad7431213c795cf9123b5f54052eeba" translate="yes" xml:space="preserve">
          <source>VirtualizedList.scrollToEnd()</source>
          <target state="translated">VirtualizedList.scrollToEnd()</target>
        </trans-unit>
        <trans-unit id="58d3dbc53b46f1bbd7516e97a3bbf734c306911b" translate="yes" xml:space="preserve">
          <source>VirtualizedList.scrollToIndex()</source>
          <target state="translated">VirtualizedList.scrollToIndex()</target>
        </trans-unit>
        <trans-unit id="9ff93166d4ec406721c9f9b00123cd81a218a953" translate="yes" xml:space="preserve">
          <source>VirtualizedList.scrollToItem()</source>
          <target state="translated">VirtualizedList.scrollToItem()</target>
        </trans-unit>
        <trans-unit id="2ed76dee2b15dacf210d4003ba9fcf3e1b1f51ce" translate="yes" xml:space="preserve">
          <source>VirtualizedList.scrollToOffset()</source>
          <target state="translated">VirtualizedList.scrollToOffset()</target>
        </trans-unit>
        <trans-unit id="2d1f5ab40535bf9c40c657602785604da5f5c743" translate="yes" xml:space="preserve">
          <source>WARNING: EXPERIMENTAL. Breaking changes will probably happen a lot and will not be reliably announced. The whole thing might be deleted, who knows? Use at your own risk.</source>
          <target state="translated">경고 : 실험적. 주요 변경 사항은 아마도 많이 발생하고 안정적으로 발표되지 않을 것입니다. 모든 것이 삭제 될 수 있습니다. 누가 알겠습니까? 자신의 책임하에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1430f976c596795274458abcfbc4f280cbfcebac" translate="yes" xml:space="preserve">
          <source>Warnings</source>
          <target state="translated">Warnings</target>
        </trans-unit>
        <trans-unit id="92cbdd5b1ed35cd29e2d6bc9e6466635df888dc4" translate="yes" xml:space="preserve">
          <source>Warnings will be displayed on screen with a yellow background. These alerts are known as YellowBoxes. Click on the alerts to show more information or to dismiss them.</source>
          <target state="translated">노란색 배경의 화면에 경고가 표시됩니다. 이러한 경고를 YellowBoxes라고합니다. 경고를 클릭하면 자세한 정보가 표시되거나 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="828357c3569d7e51335798b042828e1409dc8e89" translate="yes" xml:space="preserve">
          <source>Watchman (optional)</source>
          <target state="translated">경비원 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="b2df445fbc855b46abc2c2de9f7f771b7cc229e6" translate="yes" xml:space="preserve">
          <source>We also have a &lt;a href=&quot;https://react-native.canny.io/feature-requests&quot;&gt;place where you can request features or enhancements&lt;/a&gt;. If you see anything you'd like to be implemented, vote it up and explain your use case.</source>
          <target state="translated">우리는 또한 &lt;a href=&quot;https://react-native.canny.io/feature-requests&quot;&gt;당신이 기능이나 향상을 요청할 수있는 곳이 있습니다&lt;/a&gt; . 구현하고 싶은 것이 있으면 투표하여 유스 케이스를 설명하십시오.</target>
        </trans-unit>
        <trans-unit id="f14c2d0241670ad8f66b3dc139d3df3cb4dfed1a" translate="yes" xml:space="preserve">
          <source>We also need to pass back button events to React Native:</source>
          <target state="translated">또한 버튼 이벤트를 React Native로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb65e4fc90e8371340093b412094c59c8ddb4331" translate="yes" xml:space="preserve">
          <source>We believe that this more constrained way to style text will yield better apps:</source>
          <target state="translated">텍스트를 스타일링하는 데보다 제한적인 방법으로 더 나은 앱을 얻을 수 있다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="f281cb23fb6347b6d80bb79f33698c6053beca32" translate="yes" xml:space="preserve">
          <source>We could use this in the Rebound example to update the scale - this might be helpful if the component that we are updating is deeply nested and hasn't been optimized with &lt;code&gt;shouldComponentUpdate&lt;/code&gt;.</source>
          <target state="translated">리바운드 예제에서이를 사용하여 스케일을 업데이트 할 수 있습니다. 이는 업데이트하는 컴포넌트가 깊이 중첩되어 &lt;code&gt;shouldComponentUpdate&lt;/code&gt; 로 최적화되지 않은 경우에 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09dd902c386a0da4bcf23ddaeb66c7dda076a44a" translate="yes" xml:space="preserve">
          <source>We designed React Native such that it is possible for you to write real native code and have access to the full power of the platform. This is a more advanced feature and we don't expect it to be part of the usual development process, however it is essential that it exists. If React Native doesn't support a native feature that you need, you should be able to build it yourself.</source>
          <target state="translated">실제 네이티브 코드를 작성하고 플랫폼의 모든 기능에 액세스 할 수 있도록 React Native를 설계했습니다. 이것은 고급 기능이므로 일반적인 개발 프로세스에 포함되지는 않지만 반드시 있어야합니다. React Native가 필요한 기본 기능을 지원하지 않으면 직접 빌드 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f5ab2ca5fe6f41def69a60e8956cb2cbdd6d125e" translate="yes" xml:space="preserve">
          <source>We found out that the primary cause of fatals in apps created with React Native was due to timers firing after a component was unmounted. To solve this recurring issue, we introduced &lt;code&gt;TimerMixin&lt;/code&gt;. If you include &lt;code&gt;TimerMixin&lt;/code&gt;, then you can replace your calls to &lt;code&gt;setTimeout(fn, 500)&lt;/code&gt; with &lt;code&gt;this.setTimeout(fn, 500)&lt;/code&gt; (just prepend &lt;code&gt;this.&lt;/code&gt;) and everything will be properly cleaned up for you when the component unmounts.</source>
          <target state="translated">React Native로 만든 앱에서 치명적인 주요 원인은 구성 요소를 마운트 해제 한 후 타이머가 실행 되었기 때문입니다. 이 반복되는 문제를 해결하기 위해 &lt;code&gt;TimerMixin&lt;/code&gt; 을 도입 했습니다 . 당신이 포함 된 경우 &lt;code&gt;TimerMixin&lt;/code&gt; 를 , 다음에 통화 대체 할 수 있습니다 &lt;code&gt;setTimeout(fn, 500)&lt;/code&gt; 와 &lt;code&gt;this.setTimeout(fn, 500)&lt;/code&gt; (단지 앞에 추가 &lt;code&gt;this.&lt;/code&gt; ) 모든 것이 제대로 구성 요소 마운트 해제에 대한 정리됩니다.</target>
        </trans-unit>
        <trans-unit id="c684402114861ff04a238ce6f51ee20cd79c028d" translate="yes" xml:space="preserve">
          <source>We have a list of &lt;a href=&quot;https://github.com/facebook/react-native/labels/Good%20first%20issue&quot;&gt;beginner friendly issues&lt;/a&gt; to help you get your feet wet in the React Native codebase and familiar with our contribution process. This is a great place to get started.</source>
          <target state="translated">우리는 React Native 코드베이스에 발을 담그고 기여 프로세스에 익숙해지는 데 도움이 되는 &lt;a href=&quot;https://github.com/facebook/react-native/labels/Good%20first%20issue&quot;&gt;초보자 친화적 인 문제&lt;/a&gt; 목록을 제공합니다. 이곳은 시작하기 좋은 곳입니다.</target>
        </trans-unit>
        <trans-unit id="b733c9fba02ee6bd75bb15de60de94945160a90f" translate="yes" xml:space="preserve">
          <source>We have to be careful when to do this rounding. You never want to work with rounded and unrounded values at the same time as you're going to accumulate rounding errors. Having even one rounding error is deadly because a one pixel border may vanish or be twice as big.</source>
          <target state="translated">이 반올림을 할 때주의해야합니다. 반올림 오류가 누적되는 동안 반올림 및 반올림되지 않은 값으로 작업하고 싶지 않습니다. 한 픽셀 경계가 사라지거나 두 배로 커질 수 있기 때문에 하나의 반올림 오류도 치명적입니다.</target>
        </trans-unit>
        <trans-unit id="399540c3c42a9a7a0d9104e6807c33a7fbaedbee" translate="yes" xml:space="preserve">
          <source>We highly recommend that you watch Conrad Kramer's talk on &lt;a href=&quot;https://cocoaheads.tv/memory-use-in-extensions-by-conrad-kramer/&quot;&gt;Memory Use in Extensions&lt;/a&gt; to learn more about this topic.</source>
          <target state="translated">이 주제에 대한 자세한 내용 을 보려면 Conrad Kramer의 &lt;a href=&quot;https://cocoaheads.tv/memory-use-in-extensions-by-conrad-kramer/&quot;&gt;확장 프로그램&lt;/a&gt; 에서 메모리 사용에 대한 이야기를 시청하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a575c43c1263d3f32887d506c8f542920d67bf91" translate="yes" xml:space="preserve">
          <source>We need set the theme of &lt;code&gt;MyReactActivity&lt;/code&gt; to &lt;code&gt;Theme.AppCompat.Light.NoActionBar&lt;/code&gt; because some React Native UI components rely on this theme.</source>
          <target state="translated">우리의 테마 설정 필요 &lt;code&gt;MyReactActivity&lt;/code&gt; 에 &lt;code&gt;Theme.AppCompat.Light.NoActionBar&lt;/code&gt; 을 일부는이 주제에 의존하는 네이티브 UI 구성 요소에 반응하기 때문이다.</target>
        </trans-unit>
        <trans-unit id="9866e8a9106cdb028ed1f9344d03e9c5095f4cdb" translate="yes" xml:space="preserve">
          <source>We recommend configuring &lt;a href=&quot;https://developer.android.com/studio/run/emulator-acceleration.html#vm-linux&quot;&gt;VM acceleration&lt;/a&gt; on your system to improve performance. Once you've followed those instructions, go back to the AVD Manager.</source>
          <target state="translated">성능을 향상 시키려면 시스템에서 &lt;a href=&quot;https://developer.android.com/studio/run/emulator-acceleration.html#vm-linux&quot;&gt;VM 가속&lt;/a&gt; 을 구성하는 것이 좋습니다 . 이러한 지침을 따른 후에 AVD Manager로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="309fbcf93e6f13f1c11ced6ff54d02020b63346c" translate="yes" xml:space="preserve">
          <source>We recommend installing CocoaPods using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew를&lt;/a&gt; 사용하여 CocoaPods를 설치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ef5b90cd77302bfbc40535be93409260e96ba337" translate="yes" xml:space="preserve">
          <source>We recommend installing CocoaPods using &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc69416d5f76ca1b82dfefd031c6117ff054c3f" translate="yes" xml:space="preserve">
          <source>We recommend installing Node and Python2 via &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt;, a popular package manager for Windows.</source>
          <target state="translated">널리 사용되는 Windows 용 패키지 관리자 인 &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt; 를 통해 Node 및 Python2를 설치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="573c08bb92acf0ffeeab7a9fa99b3855473b0d04" translate="yes" xml:space="preserve">
          <source>We recommend installing Node and Watchman using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;. Run the following commands in a Terminal after installing Homebrew:</source>
          <target state="translated">&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew를&lt;/a&gt; 사용하여 Node 및 Watchman을 설치하는 것이 좋습니다 . Homebrew를 설치 한 후 터미널에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="dc02f774316cda0ed43b4c5bbd6f7e3f40b71097" translate="yes" xml:space="preserve">
          <source>We recommend installing Node and Watchman using &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;. Run the following commands in a Terminal after installing Homebrew:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf0920d46618ffe019520bb6ceb1f882bc97d25" translate="yes" xml:space="preserve">
          <source>We recommend running the Android integration tests in an emulator, although you can also use a real Android device. It's a good idea to keep the emulator running with a visible window. That way if your tests stall, you can look at the emulator to debug.</source>
          <target state="translated">실제 Android 장치를 사용할 수도 있지만 에뮬레이터에서 Android 통합 테스트를 실행하는 것이 좋습니다. 에뮬레이터를 보이는 창으로 계속 실행하는 것이 좋습니다. 이렇게하면 테스트가 중단되면 에뮬레이터를보고 디버깅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18c940a804bfc863a00a592edaf7b7b40f976f89" translate="yes" xml:space="preserve">
          <source>We recommend using the &lt;a href=&quot;alert&quot;&gt;&lt;code&gt;Alert.alert&lt;/code&gt;&lt;/a&gt; method for cross-platform support if you don't need to create iOS-only prompts.</source>
          <target state="translated">iOS 전용 프롬프트를 만들 필요가없는 경우 플랫폼 간 지원에 &lt;a href=&quot;alert&quot;&gt; &lt;code&gt;Alert.alert&lt;/code&gt; &lt;/a&gt; 메서드를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="42cb5ba4cf44dbe3e3cd9fece5cb66827c89e985" translate="yes" xml:space="preserve">
          <source>We see dozens of new issues being created every day. In order to help maintainers focus on what is actionable, maintainers ask contributors to do a bit of work prior to opening a new issue:</source>
          <target state="translated">우리는 매일 수십 개의 새로운 이슈가 만들어지고 있습니다. 유지 보수 담당자가 실행 가능한 것에 집중할 수 있도록 유지 보수 담당자는 새로운 문제를 열기 전에 기부자에게 약간의 작업을 수행하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="617b6c1e5ec9e3d579a79cbb0ba176d61b19d0f4" translate="yes" xml:space="preserve">
          <source>We start by creating a native module. A native module is a Java class that usually extends the &lt;code&gt;ReactContextBaseJavaModule&lt;/code&gt; class and implements the functionality required by the JavaScript. Our goal here is to be able to write &lt;code&gt;ToastExample.show('Awesome', ToastExample.SHORT);&lt;/code&gt; from JavaScript to display a short toast on the screen.</source>
          <target state="translated">우리는 네이티브 모듈을 만드는 것으로 시작합니다. 기본 모듈은 일반적으로 &lt;code&gt;ReactContextBaseJavaModule&lt;/code&gt; 클래스를 확장 하고 JavaScript에 필요한 기능을 구현 하는 Java 클래스입니다 . 우리의 목표는 &lt;code&gt;ToastExample.show('Awesome', ToastExample.SHORT);&lt;/code&gt; JavaScript를 사용하여 화면에 짧은 토스트를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="6308ef7df8fd424c6c33987aa18d7f598bb8e039" translate="yes" xml:space="preserve">
          <source>We use &lt;a href=&quot;https://github.com/facebook/react-native/issues&quot;&gt;GitHub Issues&lt;/a&gt; for our public bugs. If you would like to report a problem, take a look around and see if someone already opened an issue about it. If you are certain this is a new, unreported bug, you can submit a &lt;a href=&quot;http://facebook.github.io/react-native/docs/contributing.html#reporting-new-issues&quot;&gt;bug report&lt;/a&gt;.</source>
          <target state="translated">우리는 공개 버그에 &lt;a href=&quot;https://github.com/facebook/react-native/issues&quot;&gt;GitHub 이슈&lt;/a&gt; 를 사용 합니다. 문제를보고하려면 주위를 둘러보고 누군가가 이미 문제를 열 ​​었는지 확인하십시오. 이것이보고되지 않은 새로운 버그라고 확신하는 경우 &lt;a href=&quot;http://facebook.github.io/react-native/docs/contributing.html#reporting-new-issues&quot;&gt;버그 보고서를&lt;/a&gt; 제출할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d94d420b58ae4380afcd97a1c8bcc0c7a7b83977" translate="yes" xml:space="preserve">
          <source>We use &lt;a href=&quot;https://github.com/facebook/react-native/issues&quot;&gt;GitHub Issues&lt;/a&gt; for our public bugs. If you would like to report a problem, take a look around and see if someone already opened an issue about it. If you are certain this is a new, unreported bug, you can submit a &lt;a href=&quot;https://facebook.github.io/react-native/docs/contributing.html#reporting-new-issues&quot;&gt;bug report&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0681612d3cdf7ed879b32d7525aa67e75188e09" translate="yes" xml:space="preserve">
          <source>We use the &lt;a href=&quot;https://github.com/hzoo/contributors-on-github&quot;&gt;Contributors Chrome extension&lt;/a&gt; to help us understand who is sending a pull request. Pull requests opened by contributors that have a history of having their PRs merged are more likely to be looked at first. Aside from that, we try to go through pull requests on a chronological order.</source>
          <target state="translated">Google은 &lt;a href=&quot;https://github.com/hzoo/contributors-on-github&quot;&gt;Contributors Chrome 확장 프로그램&lt;/a&gt; 을 사용하여 풀 요청을 보내는 사람을 이해하는 데 도움을줍니다. PR을 병합 한 기록이있는 기고자에 의해 열린 끌어 오기 요청은 먼저 살펴볼 가능성이 높습니다. 그 외에도 우리는 시간 순서대로 풀 요청을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="f4ad67cb588d7bc5fd7e917f4139cde35be8ddd9" translate="yes" xml:space="preserve">
          <source>We will do our best to keep &lt;code&gt;master&lt;/code&gt; in good shape, with tests passing at all times. But in order to move fast, we will make API changes that your application might not be compatible with. We will do our best to &lt;a href=&quot;https://github.com/facebook/react-native/releases&quot;&gt;communicate these changes&lt;/a&gt; and version appropriately so you can lock into a specific version if need be.</source>
          <target state="translated">우리는 테스트를 항상 통과하면서 &lt;code&gt;master&lt;/code&gt; 를 좋은 상태로 유지하기 위해 최선을 다할 것 입니다. 그러나 빠르게 이동하기 위해 애플리케이션과 호환되지 않는 API를 변경합니다. 필요한 경우 특정 버전에 고정 할 수 있도록 &lt;a href=&quot;https://github.com/facebook/react-native/releases&quot;&gt;이러한 변경 사항&lt;/a&gt; 과 버전을 적절하게 전달 하기 위해 최선을 다할 것입니다.</target>
        </trans-unit>
        <trans-unit id="1e3edf88ae3771f84b9c17ad0971dfd7a993e16c" translate="yes" xml:space="preserve">
          <source>We will implement a simple image picker to demonstrate this. The image picker will expose the method &lt;code&gt;pickImage&lt;/code&gt; to JavaScript, which will return the path of the image when called.</source>
          <target state="translated">이를 설명하기 위해 간단한 이미지 선택기를 구현할 것입니다. 이미지 선택기는 &lt;code&gt;pickImage&lt;/code&gt; 메소드 를 JavaScript에 노출하며 , 호출 될 때 이미지의 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="16d4f6e2b03caf36382bb2972ed3754b1d2e0086" translate="yes" xml:space="preserve">
          <source>We will now add an event handler from the menu link. A method will be added to the main &lt;code&gt;ViewController&lt;/code&gt; of your application. This is where &lt;code&gt;RCTRootView&lt;/code&gt; comes into play.</source>
          <target state="translated">메뉴 링크에서 이벤트 핸들러를 추가하겠습니다. 메소드가 애플리케이션 의 기본 &lt;code&gt;ViewController&lt;/code&gt; 에 추가됩니다 . 곳이다 &lt;code&gt;RCTRootView&lt;/code&gt; 가 활동하기 시작.</target>
        </trans-unit>
        <trans-unit id="65d22c71be1dc17da016f5dd16349caccd628e27" translate="yes" xml:space="preserve">
          <source>We will tie our React Native component with a new native view in the &lt;code&gt;ViewController&lt;/code&gt; that will actually host it called &lt;code&gt;RCTRootView&lt;/code&gt; .</source>
          <target state="translated">우리는 React Native 컴포넌트를 &lt;code&gt;ViewController&lt;/code&gt; 의 새로운 네이티브 뷰와 연결하여 실제로 &lt;code&gt;RCTRootView&lt;/code&gt; 라는 호스트를 호스팅합니다 .</target>
        </trans-unit>
        <trans-unit id="14f0c59e68f38629c131cd4ba840982463a35e18" translate="yes" xml:space="preserve">
          <source>We will, for debugging purposes, log that the event handler was invoked. Then, we will create a string with the location of our React Native code that exists inside the &lt;code&gt;index.bundle&lt;/code&gt;. Finally, we will create the main &lt;code&gt;RCTRootView&lt;/code&gt;. Notice how we provide &lt;code&gt;RNHighScores&lt;/code&gt; as the &lt;code&gt;moduleName&lt;/code&gt; that we created &lt;a href=&quot;#the-react-native-component&quot;&gt;above&lt;/a&gt; when writing the code for our React Native component.</source>
          <target state="translated">디버깅 목적으로 이벤트 핸들러가 호출되었음을 기록합니다. 그런 다음 &lt;code&gt;index.bundle&lt;/code&gt; 안에 존재하는 React Native 코드의 위치를 ​​가진 문자열을 만듭니다 . 마지막으로 메인 &lt;code&gt;RCTRootView&lt;/code&gt; 를 생성 할 것 입니다. React Native 컴포넌트의 코드를 작성할 때 &lt;a href=&quot;#the-react-native-component&quot;&gt;위에서&lt;/a&gt; 만든 &lt;code&gt;moduleName&lt;/code&gt; 으로 &lt;code&gt;RNHighScores&lt;/code&gt; 를 제공하는 방법에 주목하십시오 .</target>
        </trans-unit>
        <trans-unit id="70e6fabfc0e82d7ee91bddf1ba4253596110d303" translate="yes" xml:space="preserve">
          <source>We're getting close to being able to build a real application. One thing we are still missing is a way to take user input, so let's move on to &lt;a href=&quot;handling-text-input&quot;&gt;learn how to handle text input with the TextInput component&lt;/a&gt;.</source>
          <target state="translated">우리는 실제 응용 프로그램을 구축 할 수있게되었습니다. 우리가 여전히 누락 한 가지는 사용자 입력을 취하는 방법이므로 &lt;a href=&quot;handling-text-input&quot;&gt;TextInput 구성 요소를 사용하여 텍스트 입력을 처리하는 방법을 알아 보겠습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c01d8e51d25b2f08cb665d81b624bc81d631c09" translate="yes" xml:space="preserve">
          <source>We're not able to provide support through GitHub Issues. If you're looking for help with your code, consider asking on &lt;a href=&quot;http://stackoverflow.com/questions/tagged/react-native&quot;&gt;Stack Overflow&lt;/a&gt; or reaching out to the community through &lt;a href=&quot;https://facebook.github.io/react-native/help.html&quot;&gt;other channels&lt;/a&gt;.</source>
          <target state="translated">GitHub 문제를 통해 지원을 제공 할 수 없습니다. 코드에 대한 도움이 필요하면 &lt;a href=&quot;http://stackoverflow.com/questions/tagged/react-native&quot;&gt;스택 오버플로를&lt;/a&gt; 요청 하거나 &lt;a href=&quot;https://facebook.github.io/react-native/help.html&quot;&gt;다른 채널을&lt;/a&gt; 통해 커뮤니티에 문의하십시오 .</target>
        </trans-unit>
        <trans-unit id="7edb7a41c986f4ca330cd7672418dac7a5ba2b8c" translate="yes" xml:space="preserve">
          <source>We're not able to provide support through GitHub Issues. If you're looking for help with your code, consider asking on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/react-native&quot;&gt;Stack Overflow&lt;/a&gt; or reaching out to the community through &lt;a href=&quot;https://facebook.github.io/react-native/help.html&quot;&gt;other channels&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74259e2091637078b77c15d2ffc5df7baef9430" translate="yes" xml:space="preserve">
          <source>We've covered the basics, but there are many other styles you may need for layouts. The full list of props that control layout is documented &lt;a href=&quot;layout-props&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">우리는 기본 사항을 다루었지만 레이아웃에 필요한 다른 스타일이 많이 있습니다. 레이아웃을 제어하는 ​​소품의 전체 목록은 &lt;a href=&quot;layout-props&quot;&gt;여기&lt;/a&gt; 에 문서화되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c972c87d3d1756c13784518aeefb5b3c259891b" translate="yes" xml:space="preserve">
          <source>WebSocket Support</source>
          <target state="translated">WebSocket 지원</target>
        </trans-unit>
        <trans-unit id="aa63d3ea3b779170bc0404cd2b1c9653b55c3d57" translate="yes" xml:space="preserve">
          <source>WebView</source>
          <target state="translated">WebView</target>
        </trans-unit>
        <trans-unit id="663bc3f0f130e9ea1049d6dbbc45213256553433" translate="yes" xml:space="preserve">
          <source>WebView#allowUniversalAccessFromFileURLs</source>
          <target state="translated">WebView#allowUniversalAccessFromFileURLs</target>
        </trans-unit>
        <trans-unit id="96f6842997218d02350aecbd56603e52624d0a42" translate="yes" xml:space="preserve">
          <source>WebView#allowsInlineMediaPlayback</source>
          <target state="translated">WebView#allowsInlineMediaPlayback</target>
        </trans-unit>
        <trans-unit id="322a20bd9393aa7a0e893f0a74e85f54f90d5087" translate="yes" xml:space="preserve">
          <source>WebView#automaticallyAdjustContentInsets</source>
          <target state="translated">WebView#automaticallyAdjustContentInsets</target>
        </trans-unit>
        <trans-unit id="e61e56adbbf6e774675c7804081f554d83e087e5" translate="yes" xml:space="preserve">
          <source>WebView#bounces</source>
          <target state="translated">WebView#bounces</target>
        </trans-unit>
        <trans-unit id="1edac3ec3f91a1d94806bd737ed57b4e754f8d0b" translate="yes" xml:space="preserve">
          <source>WebView#contentInset</source>
          <target state="translated">WebView#contentInset</target>
        </trans-unit>
        <trans-unit id="250e1fe59cbc62474b6a1898e1fc12f555550110" translate="yes" xml:space="preserve">
          <source>WebView#dataDetectorTypes</source>
          <target state="translated">WebView#dataDetectorTypes</target>
        </trans-unit>
        <trans-unit id="39f8c82f45756b1311fb59105816f6574342e6fc" translate="yes" xml:space="preserve">
          <source>WebView#decelerationRate</source>
          <target state="translated">WebView#decelerationRate</target>
        </trans-unit>
        <trans-unit id="955f37ad9d01efc79d09576835deb4ab94a88228" translate="yes" xml:space="preserve">
          <source>WebView#domStorageEnabled</source>
          <target state="translated">WebView#domStorageEnabled</target>
        </trans-unit>
        <trans-unit id="deb22f343af64ec5707f04630ebf2391c5f854c1" translate="yes" xml:space="preserve">
          <source>WebView#geolocationEnabled</source>
          <target state="translated">WebView#geolocationEnabled</target>
        </trans-unit>
        <trans-unit id="9fa88b2b97c3226dc5c7569d3e558c1ae4d1454a" translate="yes" xml:space="preserve">
          <source>WebView#html</source>
          <target state="translated">WebView#html</target>
        </trans-unit>
        <trans-unit id="15bbfd4b85757669ef757d29b9a070ea19880235" translate="yes" xml:space="preserve">
          <source>WebView#initialScale</source>
          <target state="translated">WebView#initialScale</target>
        </trans-unit>
        <trans-unit id="43a4104ea6233ebeb64c97ae19b888aa207a9a11" translate="yes" xml:space="preserve">
          <source>WebView#injectJavaScript</source>
          <target state="translated">WebView#injectJavaScript</target>
        </trans-unit>
        <trans-unit id="69516779396c6d5c6f0e79e6197e297e4f86c96f" translate="yes" xml:space="preserve">
          <source>WebView#injectedJavaScript</source>
          <target state="translated">WebView#injectedJavaScript</target>
        </trans-unit>
        <trans-unit id="9ef23d421c334c1b18b26973687b692e0458d54c" translate="yes" xml:space="preserve">
          <source>WebView#javaScriptEnabled</source>
          <target state="translated">WebView#javaScriptEnabled</target>
        </trans-unit>
        <trans-unit id="f40cffe7151d151eb96fc2c833b775992f54efdd" translate="yes" xml:space="preserve">
          <source>WebView#mediaPlaybackRequiresUserAction</source>
          <target state="translated">WebView#mediaPlaybackRequiresUserAction</target>
        </trans-unit>
        <trans-unit id="c6fb6ae72168b6e66934296054bf37c0fc336948" translate="yes" xml:space="preserve">
          <source>WebView#mixedContentMode</source>
          <target state="translated">WebView#mixedContentMode</target>
        </trans-unit>
        <trans-unit id="bf2d5cf913f0f1faa9528fab8fa650e8cda24c28" translate="yes" xml:space="preserve">
          <source>WebView#nativeConfig</source>
          <target state="translated">WebView#nativeConfig</target>
        </trans-unit>
        <trans-unit id="0eb68f634fb163cda3be82025cc358e0cbf6e47f" translate="yes" xml:space="preserve">
          <source>WebView#onError</source>
          <target state="translated">WebView#onError</target>
        </trans-unit>
        <trans-unit id="1a93b1baa86d4c64cb789a0142864af973cbe6d8" translate="yes" xml:space="preserve">
          <source>WebView#onLoad</source>
          <target state="translated">WebView#onLoad</target>
        </trans-unit>
        <trans-unit id="b024240bbead00a4d671709f0a8f5379b555a174" translate="yes" xml:space="preserve">
          <source>WebView#onLoadEnd</source>
          <target state="translated">WebView#onLoadEnd</target>
        </trans-unit>
        <trans-unit id="3934f5cd1bffcffabd80a92cd8ebce49dbd4540e" translate="yes" xml:space="preserve">
          <source>WebView#onLoadStart</source>
          <target state="translated">WebView#onLoadStart</target>
        </trans-unit>
        <trans-unit id="2b6ac5eb7622489cd9c2d3bfc47faa9421468e7e" translate="yes" xml:space="preserve">
          <source>WebView#onMessage</source>
          <target state="translated">WebView#onMessage</target>
        </trans-unit>
        <trans-unit id="62368f82b49c3231470984867e988c9af33ea713" translate="yes" xml:space="preserve">
          <source>WebView#onNavigationStateChange</source>
          <target state="translated">WebView#onNavigationStateChange</target>
        </trans-unit>
        <trans-unit id="96177452a5c4ab49fe98dc0bee6f1ac9dcfa5647" translate="yes" xml:space="preserve">
          <source>WebView#onShouldStartLoadWithRequest</source>
          <target state="translated">WebView#onShouldStartLoadWithRequest</target>
        </trans-unit>
        <trans-unit id="55b3db77ab367d2013435745ae859faadf33106b" translate="yes" xml:space="preserve">
          <source>WebView#originWhitelist</source>
          <target state="translated">WebView#originWhitelist</target>
        </trans-unit>
        <trans-unit id="21b730e13689cf0edee3e0c1afddf6d4ba5688f1" translate="yes" xml:space="preserve">
          <source>WebView#renderError</source>
          <target state="translated">WebView#renderError</target>
        </trans-unit>
        <trans-unit id="f2dd90792fa5001b4d6af68c363f5ae1c103bf61" translate="yes" xml:space="preserve">
          <source>WebView#renderLoading</source>
          <target state="translated">WebView#renderLoading</target>
        </trans-unit>
        <trans-unit id="54921687cea9ae2c3248cec69fc1378ac50cbd99" translate="yes" xml:space="preserve">
          <source>WebView#scalesPageToFit</source>
          <target state="translated">WebView#scalesPageToFit</target>
        </trans-unit>
        <trans-unit id="53b2e68958399f5393bb7740d11fd36c3bcdaf85" translate="yes" xml:space="preserve">
          <source>WebView#scrollEnabled</source>
          <target state="translated">WebView#scrollEnabled</target>
        </trans-unit>
        <trans-unit id="be63236b9f1533769f3e4ea469b7cf982618a054" translate="yes" xml:space="preserve">
          <source>WebView#source</source>
          <target state="translated">WebView#source</target>
        </trans-unit>
        <trans-unit id="aed192cdab35ebc98ef381806048f214ae5c2ca4" translate="yes" xml:space="preserve">
          <source>WebView#startInLoadingState</source>
          <target state="translated">WebView#startInLoadingState</target>
        </trans-unit>
        <trans-unit id="7961cafed0925bcb1b504f43a0f28aeb5bab3978" translate="yes" xml:space="preserve">
          <source>WebView#style</source>
          <target state="translated">WebView#style</target>
        </trans-unit>
        <trans-unit id="9c58a3d6ce07035c74e01ee26747f9c839422040" translate="yes" xml:space="preserve">
          <source>WebView#thirdPartyCookiesEnabled</source>
          <target state="translated">WebView#thirdPartyCookiesEnabled</target>
        </trans-unit>
        <trans-unit id="a7344b4e375fd16a895e2e829d69e6347cbafd08" translate="yes" xml:space="preserve">
          <source>WebView#url</source>
          <target state="translated">WebView#url</target>
        </trans-unit>
        <trans-unit id="47b5c3707c987f8c4d30ac12ef23deaacfea0cfe" translate="yes" xml:space="preserve">
          <source>WebView#userAgent</source>
          <target state="translated">WebView#userAgent</target>
        </trans-unit>
        <trans-unit id="ba37ad9fd69d4d7275108c301a020844ab17f805" translate="yes" xml:space="preserve">
          <source>WebView.extraNativeComponentConfig()</source>
          <target state="translated">WebView.extraNativeComponentConfig()</target>
        </trans-unit>
        <trans-unit id="01d6d30ec35ee9c1968486d53a2fb2f158b32936" translate="yes" xml:space="preserve">
          <source>WebView.goBack()</source>
          <target state="translated">WebView.goBack()</target>
        </trans-unit>
        <trans-unit id="c77dd030343e8691f50153905d45045b9a035094" translate="yes" xml:space="preserve">
          <source>WebView.goForward()</source>
          <target state="translated">WebView.goForward()</target>
        </trans-unit>
        <trans-unit id="4250949ce6ab33ee1d1b397b0eafd9d9191265eb" translate="yes" xml:space="preserve">
          <source>WebView.reload()</source>
          <target state="translated">WebView.reload()</target>
        </trans-unit>
        <trans-unit id="1df4299118773dd1d3c8f34523022003f18cc9bc" translate="yes" xml:space="preserve">
          <source>WebView.stopLoading()</source>
          <target state="translated">WebView.stopLoading()</target>
        </trans-unit>
        <trans-unit id="2e8a57cc5c472f4ac3b071979a38e80db7e59e87" translate="yes" xml:space="preserve">
          <source>Website</source>
          <target state="translated">Website</target>
        </trans-unit>
        <trans-unit id="4ef9217b5444300ab18ac18da0aa934260acf697" translate="yes" xml:space="preserve">
          <source>What happens next?</source>
          <target state="translated">다음은 어떻게됩니까?</target>
        </trans-unit>
        <trans-unit id="eb55e792a2020a4e60161cca0ca62932cded7fcc" translate="yes" xml:space="preserve">
          <source>What that means is, are you using this library on the native side or only in JavaScript? If you are only using it in JavaScript, you are good to go!</source>
          <target state="translated">이것이 의미하는 바는,이 라이브러리를 기본 또는 JavaScript에서만 사용하고 있습니까? JavaScript로만 사용한다면 갈 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="763e1f32794e190a0349a9a7f5169f805dc048ab" translate="yes" xml:space="preserve">
          <source>What to Expect from Maintainers</source>
          <target state="translated">관리자에게 기대할 사항</target>
        </trans-unit>
        <trans-unit id="177d490a6efdcdd3f314b880b8a85fafa01a4de0" translate="yes" xml:space="preserve">
          <source>What you need to know about frames</source>
          <target state="translated">프레임에 대해 알아야 할 사항</target>
        </trans-unit>
        <trans-unit id="a80832a90f0eb46f0620cb5802e9e519794d6d1a" translate="yes" xml:space="preserve">
          <source>What's going on here?</source>
          <target state="translated">무슨 일이야?</target>
        </trans-unit>
        <trans-unit id="76387a3f3b18bc1e3fb7fc4edccf3529e20b2449" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://github.com/facebook/react-native/issues/new&quot;&gt;opening a new issue&lt;/a&gt;, always make sure to fill out the &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/.github/ISSUE_TEMPLATE.md&quot;&gt;issue template&lt;/a&gt;. &lt;strong&gt;This step is very important!&lt;/strong&gt; Not doing so may result in your issue getting closed. Don't take this personally if this happens, and feel free to open a new issue once you've gathered all the information required by the template.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/facebook/react-native/issues/new&quot;&gt;새로운 호를 열&lt;/a&gt; 때 항상 &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/.github/ISSUE_TEMPLATE.md&quot;&gt;호 템플릿&lt;/a&gt; 을 작성하십시오 . &lt;strong&gt;이 단계는 매우 중요합니다! &lt;/strong&gt;그렇지 않으면 문제가 해결 될 수 있습니다. 이런 일이 발생하면이를 개인적으로 받아들이지 말고 템플릿에 필요한 모든 정보를 수집 한 후에는 언제든지 새로운 문제를여십시오.</target>
        </trans-unit>
        <trans-unit id="1a738302571d0ade70aa9736d280edff80968a53" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;accessible&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the system will invoke this function when the user performs the magic tap gesture.</source>
          <target state="translated">때 &lt;code&gt;accessible&lt;/code&gt; 있다 &lt;code&gt;true&lt;/code&gt; 사용자가 매직 탭 동작을 수행 할 때, 시스템은이 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5aaa7fb99e5142e56b31f48ad24e59756a4eaa43" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;accessible&lt;/code&gt; is true, the system will try to invoke this function when the user performs accessibility tap gesture.</source>
          <target state="translated">때 &lt;code&gt;accessible&lt;/code&gt; 사실이다, 시스템이 기능은 사용자가 수행 접근성 탭 제스처를 호출하려고합니다.</target>
        </trans-unit>
        <trans-unit id="da5d10735615e3be50d7debee0dc3a18c8dac6d8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;false&lt;/code&gt;, if there is a small amount of space available around a text input (e.g. landscape orientation on a phone), the OS may choose to have the user edit the text inside of a full screen text input mode. When &lt;code&gt;true&lt;/code&gt;, this feature is disabled and users will always edit the text directly inside of the text input. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;false&lt;/code&gt; 텍스트 입력 (전화에 예를 들어 가로 방향)의 주위에 사용할 수있는 공간의 작은 금액이있는 경우, 운영 체제는 사용자의 편집을 전체 화면 텍스트 입력 모드의 텍스트 내부를 선택할 수 있습니다. 때 &lt;code&gt;true&lt;/code&gt; ,이 기능을 사용할 수 없습니다 사용자는 항상 텍스트 입력의 내부에 직접 텍스트를 편집합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90896b1c874fd1a566ad4db4a994405720fc15fe" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;flex&lt;/code&gt; is -1, the component is normally sized according &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;. However, if there's not enough space, the component will shrink to its &lt;code&gt;minWidth&lt;/code&gt; and &lt;code&gt;minHeight&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;flex&lt;/code&gt; -1, 성분은 일반적 따라 크기가되는 &lt;code&gt;width&lt;/code&gt; 과 &lt;code&gt;height&lt;/code&gt; . 그러나 공간이 충분하지 않으면 구성 요소가 &lt;code&gt;minWidth&lt;/code&gt; 및 &lt;code&gt;minHeight&lt;/code&gt; 로 축소됩니다 .</target>
        </trans-unit>
        <trans-unit id="f78ea0bf96419e594bc74ce5562715825701703d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;flex&lt;/code&gt; is 0, the component is sized according to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; and it is inflexible.</source>
          <target state="translated">경우 &lt;code&gt;flex&lt;/code&gt; 0, 성분은 크기에있어서 인 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 그리고 융통성이다.</target>
        </trans-unit>
        <trans-unit id="81b077b3631d70365446fbd791c7fa6803787b26" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;flex&lt;/code&gt; is a positive number, it makes the component flexible and it will be sized proportional to its flex value. So a component with &lt;code&gt;flex&lt;/code&gt; set to 2 will take twice the space as a component with &lt;code&gt;flex&lt;/code&gt; set to 1.</source>
          <target state="translated">경우 &lt;code&gt;flex&lt;/code&gt; 양수이고, 상기 성분은 유연하게하고 그것의 연성 값에 비례하는 크기의 것이다. 따라서 &lt;code&gt;flex&lt;/code&gt; 가 2로 설정된 구성 요소는 &lt;code&gt;flex&lt;/code&gt; 가 1로 설정된 구성 요소보다 두 배의 공간을 차지합니다 .</target>
        </trans-unit>
        <trans-unit id="73dc2900ea81863f9716fc5366ad80ec6610a2a9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;numberOfLines&lt;/code&gt; is set, this prop defines how text will be truncated. &lt;code&gt;numberOfLines&lt;/code&gt; must be set in conjunction with this prop.</source>
          <target state="translated">때 &lt;code&gt;numberOfLines&lt;/code&gt; 가 설정되어,이 소품을 정의는 텍스트가 어떻게 잘립니다. &lt;code&gt;numberOfLines&lt;/code&gt; 는이 소품과 함께 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0be3fbfd5d96b21ee327676a28f96cecd6317dcc" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;snapToInterval&lt;/code&gt; is set, &lt;code&gt;snapToAlignment&lt;/code&gt; will define the relationship of the snapping to the scroll view.</source>
          <target state="translated">경우 &lt;code&gt;snapToInterval&lt;/code&gt; 가 설정되어 &lt;code&gt;snapToAlignment&lt;/code&gt; 는 스크롤 뷰 스냅의 관계를 정의한다.</target>
        </trans-unit>
        <trans-unit id="93391c2993fbdbeeb5927d1493e17d39d609e550" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, indicates that the view is an accessibility element. By default, all the touchable elements are accessible.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; ,보기가 내게 필요한 요소임을 나타냅니다. 기본적으로 모든 터치 가능한 요소에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="216ca4440bac9f29fbf9951a8921d15826ccf376" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, indicates that the view is an accessibility element. When a view is an accessibility element, it groups its children into a single selectable component. By default, all touchable elements are accessible.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; ,보기가 내게 필요한 요소임을 나타냅니다. 뷰가 내게 필요한 옵션 요소 인 경우 하위 요소를 선택 가능한 단일 구성 요소로 그룹화합니다. 기본적으로 모든 터치 가능한 요소에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29491a323cfe25ee9dc643afd718c66feebd9182" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, no visual change is made when text is pressed down. By default, a gray oval highlights the text on press down.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , 텍스트 버튼을 눌렀을 때 시각적 변경이되지 않습니다. 기본적으로 회색 타원은 아래로 누를 때 텍스트를 강조 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7e3bf0cd3f29c8f1b801ce71529d03be3b81a7a9" translate="yes" xml:space="preserve">
          <source>When a change made on GitHub is approved, it will first be imported into Facebook's internal source control. The change will eventually sync back to GitHub as a single commit once it has passed all internal tests.</source>
          <target state="translated">GitHub의 변경 사항이 승인되면 먼저 Facebook의 내부 소스 컨트롤로 가져옵니다. 모든 내부 테스트를 통과하면 변경 사항이 단일 커밋으로 GitHub에 다시 동기화됩니다.</target>
        </trans-unit>
        <trans-unit id="fb408a99d48ef58430c812e3cc84dd1cb29aefc0" translate="yes" xml:space="preserve">
          <source>When a view is marked as accessible, it is a good practice to set an accessibilityLabel on the view, so that people who use VoiceOver know what element they have selected. VoiceOver will read this string when a user selects the associated element.</source>
          <target state="translated">보기가 접근 가능한 것으로 표시되어 있으면 VoiceOver를 사용하는 사람들이 선택한 요소를 알 수 있도록보기에서 접근성 레이블을 설정하는 것이 좋습니다. 사용자가 관련 요소를 선택하면 VoiceOver가이 문자열을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b17fc22cbc1cf83e3fc8215f08f4f90baf250f6c" translate="yes" xml:space="preserve">
          <source>When adding a new breaking change, follow this template in your pull request:</source>
          <target state="translated">새로운 주요 변경 사항을 추가 할 때는 풀 요청에서이 템플릿을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="a3045db4d8a951611d9a56009e9b37ce5899e692" translate="yes" xml:space="preserve">
          <source>When an animation is running, it can prevent &lt;code&gt;VirtualizedList&lt;/code&gt; components from rendering more rows. If you need to run a long or looping animation while the user is scrolling through a list, you can use &lt;code&gt;isInteraction: false&lt;/code&gt; in your animation's config to prevent this issue.</source>
          <target state="translated">애니메이션이 실행 중일 때 &lt;code&gt;VirtualizedList&lt;/code&gt; 구성 요소가 더 많은 행을 렌더링 하지 못하게 할 수 있습니다 . 사용자가 목록을 스크롤하는 동안 길거나 반복되는 애니메이션을 실행해야하는 경우 애니메이션 구성에서 &lt;code&gt;isInteraction: false&lt;/code&gt; 를 사용 하여이 문제를 방지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d22f48357638947a828b042ba5898dcf7a78e6d" translate="yes" xml:space="preserve">
          <source>When building a cross-platform app, you'll want to re-use as much code as possible. Scenarios may arise where it makes sense for the code to be different, for example you may want to implement separate visual components for iOS and Android.</source>
          <target state="translated">크로스 플랫폼 앱을 빌드 할 때는 최대한 많은 코드를 재사용해야합니다. 코드가 다른 경우에 적합한 시나리오가있을 수 있습니다. 예를 들어 iOS 및 Android에 대해 별도의 시각적 구성 요소를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6bde0445bbc46a3aaae17a41b53b23bf61ef3c6" translate="yes" xml:space="preserve">
          <source>When building your own native code, GIF and WebP are not supported by default on Android.</source>
          <target state="translated">고유 코드를 빌드 할 때 기본적으로 GIF 및 WebP는 Android에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39e4a1a9b84f4489c4234c299a885ec05308b7d4" translate="yes" xml:space="preserve">
          <source>When components dynamically change, we want TalkBack to alert the end user. This is made possible by the &amp;lsquo;accessibilityLiveRegion&amp;rsquo; property. It can be set to &amp;lsquo;none&amp;rsquo;, &amp;lsquo;polite&amp;rsquo; and &amp;lsquo;assertive&amp;rsquo;:</source>
          <target state="translated">구성 요소가 동적으로 변경되면 TalkBack에서 최종 사용자에게 경고하기를 원합니다. 이것은 'accessibilityLiveRegion'속성으로 가능합니다. 'none', 'polite'및 'assertive'로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25f128fbf512178b74607008ab28b6ab4253ab89" translate="yes" xml:space="preserve">
          <source>When debugging JavaScript in Chrome, you can inspect the props and state of the React components in the browser console.</source>
          <target state="translated">Chrome에서 JavaScript를 디버깅 할 때 브라우저 콘솔에서 React 구성 요소의 소품 및 상태를 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="558ec4088a946bdb751a14c34878f8985c3ef5dc" translate="yes" xml:space="preserve">
          <source>When direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;borderEndWidth&lt;/code&gt; is equivalent to &lt;code&gt;borderRightWidth&lt;/code&gt;. When direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;borderEndWidth&lt;/code&gt; is equivalent to &lt;code&gt;borderLeftWidth&lt;/code&gt;.</source>
          <target state="translated">방향이면 &lt;code&gt;ltr&lt;/code&gt; , &lt;code&gt;borderEndWidth&lt;/code&gt; 는 동등 &lt;code&gt;borderRightWidth&lt;/code&gt; . 방향이면 &lt;code&gt;rtl&lt;/code&gt; , &lt;code&gt;borderEndWidth&lt;/code&gt; 는 동등 &lt;code&gt;borderLeftWidth&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4126b73b9dacb2aae3b2c11361ddd029ea4f77ab" translate="yes" xml:space="preserve">
          <source>When direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;borderStartWidth&lt;/code&gt; is equivalent to &lt;code&gt;borderLeftWidth&lt;/code&gt;. When direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;borderStartWidth&lt;/code&gt; is equivalent to &lt;code&gt;borderRightWidth&lt;/code&gt;.</source>
          <target state="translated">direction이 &lt;code&gt;ltr&lt;/code&gt; 인 경우 &lt;code&gt;borderStartWidth&lt;/code&gt; 는 &lt;code&gt;borderLeftWidth&lt;/code&gt; 와 같습니다 . direction이 &lt;code&gt;rtl&lt;/code&gt; 인 경우 &lt;code&gt;borderStartWidth&lt;/code&gt; 는 &lt;code&gt;borderRightWidth&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="90e47b97bf54fe7b253f31403b950c8a441870a4" translate="yes" xml:space="preserve">
          <source>When direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;marginEnd&lt;/code&gt; is equivalent to &lt;code&gt;marginRight&lt;/code&gt;. When direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;marginEnd&lt;/code&gt; is equivalent to &lt;code&gt;marginLeft&lt;/code&gt;.</source>
          <target state="translated">방향이면 &lt;code&gt;ltr&lt;/code&gt; , &lt;code&gt;marginEnd&lt;/code&gt; 는 동등 &lt;code&gt;marginRight&lt;/code&gt; . 방향이면 &lt;code&gt;rtl&lt;/code&gt; , &lt;code&gt;marginEnd&lt;/code&gt; 는 동등 &lt;code&gt;marginLeft&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74cb7f8b729a3cc61f4c7ba41739b071ef81d46a" translate="yes" xml:space="preserve">
          <source>When direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;marginStart&lt;/code&gt; is equivalent to &lt;code&gt;marginLeft&lt;/code&gt;. When direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;marginStart&lt;/code&gt; is equivalent to &lt;code&gt;marginRight&lt;/code&gt;.</source>
          <target state="translated">방향이면 &lt;code&gt;ltr&lt;/code&gt; , &lt;code&gt;marginStart&lt;/code&gt; 는 동등 &lt;code&gt;marginLeft&lt;/code&gt; . 방향이면 &lt;code&gt;rtl&lt;/code&gt; , &lt;code&gt;marginStart&lt;/code&gt; 는 동등 &lt;code&gt;marginRight&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="778faa484506a0186e75ece078d86944d5f45546" translate="yes" xml:space="preserve">
          <source>When direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;paddingEnd&lt;/code&gt; is equivalent to &lt;code&gt;paddingRight&lt;/code&gt;. When direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;paddingEnd&lt;/code&gt; is equivalent to &lt;code&gt;paddingLeft&lt;/code&gt;.</source>
          <target state="translated">direction이 &lt;code&gt;ltr&lt;/code&gt; 인 경우 &lt;code&gt;paddingEnd&lt;/code&gt; 는 &lt;code&gt;paddingRight&lt;/code&gt; 와 같습니다 . direction이 &lt;code&gt;rtl&lt;/code&gt; 인 경우 &lt;code&gt;paddingEnd&lt;/code&gt; 는 &lt;code&gt;paddingLeft&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="50e7858ccb57f3d6b5bd85c4d279e83c6b608ce2" translate="yes" xml:space="preserve">
          <source>When direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;paddingStart&lt;/code&gt; is equivalent to &lt;code&gt;paddingLeft&lt;/code&gt;. When direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;paddingStart&lt;/code&gt; is equivalent to &lt;code&gt;paddingRight&lt;/code&gt;.</source>
          <target state="translated">direction이 &lt;code&gt;ltr&lt;/code&gt; 인 경우 &lt;code&gt;paddingStart&lt;/code&gt; 는 &lt;code&gt;paddingLeft&lt;/code&gt; 와 같습니다 . direction이 &lt;code&gt;rtl&lt;/code&gt; 인 경우 &lt;code&gt;paddingStart&lt;/code&gt; 는 &lt;code&gt;paddingRight&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d076986678cf7f315b583575bd9e2726e4ed0b6d" translate="yes" xml:space="preserve">
          <source>When false, once tracking starts, won't try to drag if the touch moves. The default value is true.</source>
          <target state="translated">false 인 경우 추적이 시작되면 터치가 움직일 때 드래그하지 않습니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="5fc11457d44eabaaf87a47c0d3a254c40adb44a5" translate="yes" xml:space="preserve">
          <source>When false, the content does not scroll. The default value is true.</source>
          <target state="translated">False이면 내용이 스크롤되지 않습니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="1e6a0e3fade8b3b10c759f2bdc6439371cb4b9f0" translate="yes" xml:space="preserve">
          <source>When false, the view cannot be scrolled via touch interaction. The default value is true.</source>
          <target state="translated">false 인 경우 터치 상호 작용을 통해보기를 스크롤 할 수 없습니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="d154b2b3384277e3647e9bfe9e421a00b1cde226" translate="yes" xml:space="preserve">
          <source>When integrating native and React Native, we also need a way to consolidate two different layout systems. This section covers common layout problems and provides a brief description of mechanisms to address them.</source>
          <target state="translated">Native와 React Native를 통합 할 때 두 가지 다른 레이아웃 시스템을 통합 할 수있는 방법도 필요합니다. 이 섹션에서는 일반적인 레이아웃 문제를 다루고이를 해결하기위한 메커니즘에 대해 간략하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="677f7b138656e896240d828792a810c49c03a0d0" translate="yes" xml:space="preserve">
          <source>When moving your app to production, the &lt;code&gt;NSURL&lt;/code&gt; can point to a pre-bundled file on disk via something like &lt;code&gt;[[NSBundle mainBundle] URLForResource:@&quot;main&quot; withExtension:@&quot;jsbundle&quot;];&lt;/code&gt;. You can use the &lt;code&gt;react-native-xcode.sh&lt;/code&gt; script in &lt;code&gt;node_modules/react-native/scripts/&lt;/code&gt; to generate that pre-bundled file.</source>
          <target state="translated">앱을 프로덕션 환경으로 옮길 때 &lt;code&gt;NSURL&lt;/code&gt; 은 &lt;code&gt;[[NSBundle mainBundle] URLForResource:@&quot;main&quot; withExtension:@&quot;jsbundle&quot;];&lt;/code&gt; . &lt;code&gt;node_modules/react-native/scripts/&lt;/code&gt; 에서 &lt;code&gt;react-native-xcode.sh&lt;/code&gt; 스크립트를 사용하여 사전 번들 된 파일을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f465e8c8952bb00cc73499f221295b8196e75210" translate="yes" xml:space="preserve">
          <source>When moving your app to production, the &lt;code&gt;NSURL&lt;/code&gt; can point to a pre-bundled file on disk via something like &lt;code&gt;let mainBundle = NSBundle(URLForResource: &quot;main&quot; withExtension:&quot;jsbundle&quot;)&lt;/code&gt;. You can use the &lt;code&gt;react-native-xcode.sh&lt;/code&gt; script in &lt;code&gt;node_modules/react-native/scripts/&lt;/code&gt; to generate that pre-bundled file.</source>
          <target state="translated">앱을 프로덕션으로 옮길 때 &lt;code&gt;NSURL&lt;/code&gt; 은 &lt;code&gt;let mainBundle = NSBundle(URLForResource: &quot;main&quot; withExtension:&quot;jsbundle&quot;)&lt;/code&gt; 과 같은 것을 통해 디스크에 사전 번들 된 파일을 가리킬 수 있습니다 . &lt;code&gt;node_modules/react-native/scripts/&lt;/code&gt; 에서 &lt;code&gt;react-native-xcode.sh&lt;/code&gt; 스크립트를 사용하여 사전 번들 된 파일을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="443c063e04235e586af7b52f8abd1553aed86965" translate="yes" xml:space="preserve">
          <source>When running a bundled app, these statements can cause a big bottleneck in the JavaScript thread. This includes calls from debugging libraries such as &lt;a href=&quot;https://github.com/evgenyrodionov/redux-logger&quot;&gt;redux-logger&lt;/a&gt;, so make sure to remove them before bundling. You can also use this &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-remove-console/&quot;&gt;babel plugin&lt;/a&gt; that removes all the &lt;code&gt;console.*&lt;/code&gt; calls. You need to install it first with &lt;code&gt;npm i babel-plugin-transform-remove-console --save&lt;/code&gt;, and then edit the &lt;code&gt;.babelrc&lt;/code&gt; file under your project directory like this:</source>
          <target state="translated">번들 앱을 실행할 때 이러한 명령문으로 인해 JavaScript 스레드에서 병목 현상이 발생할 수 있습니다. 여기에는 &lt;a href=&quot;https://github.com/evgenyrodionov/redux-logger&quot;&gt;redux-logger&lt;/a&gt; 와 같은 디버깅 라이브러리의 호출이 포함 되므로 번들로 묶기 전에 제거하십시오. 모든 &lt;code&gt;console.*&lt;/code&gt; 호출 을 제거 하는이 &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-remove-console/&quot;&gt;babel 플러그인&lt;/a&gt; 을 사용할 수도 있습니다 . 먼저 &lt;code&gt;npm i babel-plugin-transform-remove-console --save&lt;/code&gt; 로 설치 한 다음 프로젝트 디렉토리 아래 에서 &lt;code&gt;.babelrc&lt;/code&gt; 파일을 다음과 같이 편집하십시오 .</target>
        </trans-unit>
        <trans-unit id="485873882049a6b8bf856cde041deb9dc2d68d05" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, indicates that the view is an accessibility element. The default value for a &lt;code&gt;Text&lt;/code&gt; element is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정되면 보기가 액세스 가능성 요소임을 나타냅니다. &lt;code&gt;Text&lt;/code&gt; 요소 의 기본값 은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d729d792e35101c4c5e8432cb66c93a75fa17914" translate="yes" xml:space="preserve">
          <source>When set, causes the scroll view to stop at multiples of the value of &lt;code&gt;snapToInterval&lt;/code&gt;. This can be used for paginating through children that have lengths smaller than the scroll view. Typically used in combination with &lt;code&gt;snapToAlignment&lt;/code&gt; and &lt;code&gt;decelerationRate=&quot;fast&quot;&lt;/code&gt;. Overrides less configurable &lt;code&gt;pagingEnabled&lt;/code&gt; prop.</source>
          <target state="translated">설정하면 스크롤보기가 &lt;code&gt;snapToInterval&lt;/code&gt; 값의 배수로 중지됩니다 . 스크롤보기보다 길이가 작은 자식을 통해 페이지를 매길 때 사용할 수 있습니다. 일반적으로 &lt;code&gt;snapToAlignment&lt;/code&gt; 및 &lt;code&gt;decelerationRate=&quot;fast&quot;&lt;/code&gt; 와 함께 사용됩니다 . 덜 구성 가능한 &lt;code&gt;pagingEnabled&lt;/code&gt; prop을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="dbd15985770b6ded1d934fc282298502a23828d0" translate="yes" xml:space="preserve">
          <source>When setState is called, BlinkApp will re-render its Component. By calling setState within the Timer, the component will re-render every time the Timer ticks.</source>
          <target state="translated">setState가 호출되면 BlinkApp은 해당 컴포넌트를 다시 렌더링합니다. 타이머 내에서 setState를 호출하면 구성 요소는 타이머가 틱될 때마다 다시 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="e100d75fd14c17c676b306c26ba97f217b6f747a" translate="yes" xml:space="preserve">
          <source>When the clear button should appear on the right side of the text view. This property is supported only for single-line TextInput component.</source>
          <target state="translated">텍스트보기의 오른쪽에 지우기 단추가 나타나는 경우. 이 속성은 단일 행 TextInput 구성 요소에만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e9b4cf369e969244bd6fcea99391573c9a143890" translate="yes" xml:space="preserve">
          <source>When the component mounts, the opacity is set to 0. Then, an easing animation is started on the &lt;code&gt;fadeAnim&lt;/code&gt; animated value, which will update all of its dependent mappings (in this case, just the opacity) on each frame as the value animates to the final value of 1.</source>
          <target state="translated">구성 요소가 마운트되면 불투명도가 0으로 설정됩니다. 그런 다음 &lt;code&gt;fadeAnim&lt;/code&gt; 애니메이션 값 에서 여유 애니메이션이 시작되어 값이 애니메이션화 될 때 각 프레임의 모든 종속 매핑 (이 경우 불투명도 만)이 업데이트됩니다. 1의 최종 값</target>
        </trans-unit>
        <trans-unit id="6e3a8725c87a200276121a042637348de58a65e1" translate="yes" xml:space="preserve">
          <source>When the direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt; is equivalent to &lt;code&gt;right&lt;/code&gt;. When the direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt; is equivalent to &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">방향이 &lt;code&gt;ltr&lt;/code&gt; 인 경우 &lt;code&gt;end&lt;/code&gt; 는 &lt;code&gt;right&lt;/code&gt; 와 같습니다 . 방향이 &lt;code&gt;rtl&lt;/code&gt; 인 경우 &lt;code&gt;end&lt;/code&gt; 는 &lt;code&gt;left&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6bcf040ecc83e4a9f5dcff691edd621527151dcc" translate="yes" xml:space="preserve">
          <source>When the direction is &lt;code&gt;ltr&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt; is equivalent to &lt;code&gt;left&lt;/code&gt;. When the direction is &lt;code&gt;rtl&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt; is equivalent to &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">방향이 &lt;code&gt;ltr&lt;/code&gt; 이면 &lt;code&gt;start&lt;/code&gt; 는 &lt;code&gt;left&lt;/code&gt; 와 같습니다 . 방향이 &lt;code&gt;rtl&lt;/code&gt; 인 경우 &lt;code&gt;start&lt;/code&gt; 는 &lt;code&gt;right&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5fbc71cb8a0d00a3fce6e44594a3e20b7287ae7a" translate="yes" xml:space="preserve">
          <source>When the given value is a ValueXY instead of a Value, each config option may be a vector of the form &lt;code&gt;{x: ..., y: ...}&lt;/code&gt; instead of a scalar.</source>
          <target state="translated">주어진 값이 Value 대신 ValueXY 인 경우 각 구성 옵션은 스칼라 대신 &lt;code&gt;{x: ..., y: ...}&lt;/code&gt; 형식의 벡터 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e126bf7a79e0fd8214635dd69a5354e449b6134" translate="yes" xml:space="preserve">
          <source>When the image has rounded corners, specifying an overlayColor will cause the remaining space in the corners to be filled with a solid color. This is useful in cases which are not supported by the Android implementation of rounded corners:</source>
          <target state="translated">이미지에 둥근 모서리가있는 경우 overlayColor를 지정하면 모서리의 나머지 공간이 단색으로 채워집니다. 이것은 둥근 모서리의 Android 구현에서 지원되지 않는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="98ecc3b501a8186bb1f5d7c9b8b0303f50b878e4" translate="yes" xml:space="preserve">
          <source>When the image is resized, the corners of the size specified by &lt;code&gt;capInsets&lt;/code&gt; will stay a fixed size, but the center content and borders of the image will be stretched. This is useful for creating resizable rounded buttons, shadows, and other resizable assets. More info in the &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIImage_Class/index.html#//apple_ref/occ/instm/UIImage/resizableImageWithCapInsets&quot;&gt;official Apple documentation&lt;/a&gt;.</source>
          <target state="translated">이미지 크기를 조정하면 &lt;code&gt;capInsets&lt;/code&gt; 로 지정된 크기의 모서리가 고정 된 크기로 유지되지만 이미지의 중앙 내용과 테두리가 늘어납니다. 크기 조정이 가능한 둥근 버튼, 그림자 및 기타 크기 조정이 가능한 자산을 만드는 데 유용합니다. &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIImage_Class/index.html#//apple_ref/occ/instm/UIImage/resizableImageWithCapInsets&quot;&gt;공식 Apple 문서&lt;/a&gt; 에 더 많은 정보가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa697ae09ea8188b88a8c12df6f2175a8e014827" translate="yes" xml:space="preserve">
          <source>When the scroll view is disabled, this defines how far your touch may move off of the button, before deactivating the button. Once deactivated, try moving it back and you'll see that the button is once again reactivated! Move it back and forth several times while the scroll view is disabled. Ensure you pass in a constant to reduce memory allocations.</source>
          <target state="translated">스크롤보기가 비활성화되면 버튼을 비활성화하기 전에 터치가 버튼에서 멀어 질 수있는 거리를 정의합니다. 비활성화되면 버튼을 뒤로 이동하면 버튼이 다시 활성화 된 것을 볼 수 있습니다! 스크롤보기가 비활성화 된 상태에서 앞뒤로 여러 번 이동하십시오. 메모리 할당을 줄이려면 상수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="b26ec705eb0424a16d1299065b3c05ea1c83ff63" translate="yes" xml:space="preserve">
          <source>When true, ScrollView allows use of pinch gestures to zoom in and out. The default value is true.</source>
          <target state="translated">True 인 경우 ScrollView에서는 핀치 제스처를 사용하여 확대 및 축소 할 수 있습니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="ada2a587e02a990318e5719e484323c34e1a48c9" translate="yes" xml:space="preserve">
          <source>When true, ScrollView will emit updateChildFrames data in scroll events, otherwise will not compute or emit child frame data. This only exists to support legacy issues, &lt;code&gt;onLayout&lt;/code&gt; should be used instead to retrieve frame data. The default value is false.</source>
          <target state="translated">true 인 경우 ScrollView는 스크롤 이벤트에서 updateChildFrames 데이터를 내보내고, 그렇지 않으면 자식 프레임 데이터를 계산하거나 내 보내지 않습니다. 이것은 레거시 문제를 지원하기 위해서만 존재하며 프레임 데이터를 검색하는 데 &lt;code&gt;onLayout&lt;/code&gt; 을 사용해야합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="b6dda17c9d5dda0d294088bdeed7817511cd4c08" translate="yes" xml:space="preserve">
          <source>When true, gestures can drive zoom past min/max and the zoom will animate to the min/max value at gesture end, otherwise the zoom will not exceed the limits.</source>
          <target state="translated">true 인 경우 제스처는 최소 / 최대를지나 확대 / 축소 할 수 있으며 제스처 종료시 확대 / 축소가 최소 / 최대 값으로 애니메이션됩니다. 그렇지 않으면 확대 / 축소가 제한을 초과하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="91263a68a27b6c9d03c92accc10b0f1da14a628b" translate="yes" xml:space="preserve">
          <source>When true, indicates the image is an accessibility element.</source>
          <target state="translated">true 인 경우 이미지가 내게 필요한 옵션 요소임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b0f1ff5170449f59ae1d42225a67d34341f9bf5d" translate="yes" xml:space="preserve">
          <source>When true, shows a horizontal scroll indicator. The default value is true.</source>
          <target state="translated">true 인 경우 가로 스크롤 표시기를 나타냅니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="d3379fffa9d97321ebed1e44d81bbc665dd3827f" translate="yes" xml:space="preserve">
          <source>When true, shows a vertical scroll indicator. The default value is true.</source>
          <target state="translated">true 인 경우 세로 스크롤 표시기를 나타냅니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="3c2e13bba2e91f19b0e70c4cbb4478a91650c885" translate="yes" xml:space="preserve">
          <source>When true, the ScrollView will try to lock to only vertical or horizontal scrolling while dragging. The default value is false.</source>
          <target state="translated">true 인 경우 ScrollView는 드래그하는 동안 세로 또는 가로 스크롤 만 고정하려고합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="18cc85bf82fa0df26c73af0eb3a2b20bba5d041e" translate="yes" xml:space="preserve">
          <source>When true, the scroll view automatically centers the content when the content is smaller than the scroll view bounds; when the content is larger than the scroll view, this property has no effect. The default value is false.</source>
          <target state="translated">true 인 경우 내용이 스크롤보기 범위보다 작을 경우 스크롤보기가 내용을 자동으로 가운데에 맞 춥니 다. 내용이 스크롤보기보다 크면이 속성이 적용되지 않습니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="b906359719be114a70c2c9c246a9eb59f33cce06" translate="yes" xml:space="preserve">
          <source>When true, the scroll view bounces horizontally when it reaches the end even if the content is smaller than the scroll view itself. The default value is true when &lt;code&gt;horizontal={true}&lt;/code&gt; and false otherwise.</source>
          <target state="translated">true 인 경우 내용이 스크롤보기보다 작더라도 스크롤보기가 끝에 도달하면 가로로 튀어 오릅니다. &lt;code&gt;horizontal={true}&lt;/code&gt; 이면 기본값은 true 이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="8c25670ed81abea9193f62fe46bb62463212548e" translate="yes" xml:space="preserve">
          <source>When true, the scroll view bounces vertically when it reaches the end even if the content is smaller than the scroll view itself. The default value is false when &lt;code&gt;horizontal={true}&lt;/code&gt; and true otherwise.</source>
          <target state="translated">true 인 경우 내용이 스크롤보기보다 작더라도 스크롤보기가 끝에 도달하면 세로로 튀어 오릅니다. &lt;code&gt;horizontal={true}&lt;/code&gt; 이면 기본값은 false 이고 그렇지 않으면 true입니다.</target>
        </trans-unit>
        <trans-unit id="bd87295e745012a495ca023ff08b7218f235c1c9" translate="yes" xml:space="preserve">
          <source>When true, the scroll view bounces when it reaches the end of the content if the content is larger then the scroll view along the axis of the scroll direction. When false, it disables all bouncing even if the &lt;code&gt;alwaysBounce*&lt;/code&gt; props are true. The default value is true.</source>
          <target state="translated">true 인 경우 내용이 스크롤 방향의 축을 따라 스크롤보기보다 크면 내용 끝에 도달하면 스크롤보기가 튀어 오릅니다. false 인 경우 &lt;code&gt;alwaysBounce*&lt;/code&gt; 소품이 true 인 경우에도 모든 수신 거부 기능이 비활성화됩니다 . 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="eb50fa58d0f6acb0c6c83cc988660d9b0382a3e2" translate="yes" xml:space="preserve">
          <source>When true, the scroll view scrolls to top when the status bar is tapped. The default value is true.</source>
          <target state="translated">true 인 경우 상태 표시 줄을 누르면 스크롤보기가 맨 위로 스크롤됩니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="74742b3b4bef008716135c6ccd3e50ada1728c08" translate="yes" xml:space="preserve">
          <source>When true, the scroll view stops on multiples of the scroll view's size when scrolling. This can be used for horizontal pagination. The default value is false.</source>
          <target state="translated">true 인 경우 스크롤 할 때 스크롤보기가 스크롤보기 크기의 배수로 중지됩니다. 가로 페이지 매김에 사용할 수 있습니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="6bc681caf0c0f16fc8d2d7d54a9037679ab73fab" translate="yes" xml:space="preserve">
          <source>When true, the scroll view's children are arranged horizontally in a row instead of vertically in a column. The default value is false.</source>
          <target state="translated">true 인 경우 스크롤보기의 자식은 세로가 아닌 가로로 가로로 배열됩니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="b8545bebf1b162e1560af3c6a7538c71c83ec71b" translate="yes" xml:space="preserve">
          <source>When trying to connect to the development server you might get a &lt;a href=&quot;debugging#in-app-errors-and-warnings&quot;&gt;red screen with an error&lt;/a&gt; saying:</source>
          <target state="translated">개발 서버에 연결하려고하면 다음 &lt;a href=&quot;debugging#in-app-errors-and-warnings&quot;&gt;과 같은 오류&lt;/a&gt; 메시지 가 표시된 빨간색 화면이 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3affb81f94ba352b354a058fe8a094e5d3d85d0c" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;PanResponder&lt;/code&gt;, you could use the following code to extract the x and y positions from &lt;code&gt;gestureState.dx&lt;/code&gt; and &lt;code&gt;gestureState.dy&lt;/code&gt;. We use a &lt;code&gt;null&lt;/code&gt; in the first position of the array, as we are only interested in the second argument passed to the &lt;code&gt;PanResponder&lt;/code&gt; handler, which is the &lt;code&gt;gestureState&lt;/code&gt;.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;PanResponder&lt;/code&gt; 을 , 당신은에서 x와 y 위치를 추출하기 위해 다음 코드를 사용할 수 &lt;code&gt;gestureState.dx&lt;/code&gt; 및 &lt;code&gt;gestureState.dy&lt;/code&gt; 을 . 우리는 사용 &lt;code&gt;null&lt;/code&gt; 우리가 단지에 전달 된 두 번째 인수에 관심이있는 한, 배열의 첫 번째 위치에 &lt;code&gt;PanResponder&lt;/code&gt; 의 는 IS 핸들러, &lt;code&gt;gestureState&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3265dfb239eb1296c778f84f2268316155788cb5" translate="yes" xml:space="preserve">
          <source>When using Chrome debugging, all JavaScript code runs within Chrome itself, communicating with native code via WebSockets. Chrome uses &lt;a href=&quot;https://code.google.com/p/v8/&quot;&gt;V8&lt;/a&gt; as its JavaScript engine.</source>
          <target state="translated">Chrome 디버깅을 사용할 때 모든 JavaScript 코드는 Chrome 자체에서 실행되어 WebSocket을 통해 기본 코드와 통신합니다. Chrome은 &lt;a href=&quot;https://code.google.com/p/v8/&quot;&gt;V8&lt;/a&gt; 을 자바 스크립트 엔진으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="87fbf0a694c58af84c60ac56480a9e34cb7c1458" translate="yes" xml:space="preserve">
          <source>When using React Native, you're going to be running your JavaScript code in two environments:</source>
          <target state="translated">React Native를 사용하면 두 가지 환경에서 JavaScript 코드를 실행하게됩니다.</target>
        </trans-unit>
        <trans-unit id="9e81e355b22f646e7dd5239a10375a8f379e6a5d" translate="yes" xml:space="preserve">
          <source>When we have a fixed size root view, we need to respect its bounds on the JS side. In other words, we need to ensure that the React Native content can be contained within the fixed-size root view. The easiest way to ensure this is to use flexbox layout. If you use absolute positioning, and React components are visible outside the root view's bounds, you'll get overlap with native views, causing some features to behave unexpectedly. For instance, 'TouchableHighlight' will not highlight your touches outside the root view's bounds.</source>
          <target state="translated">고정 된 크기의 루트 뷰가있는 경우 JS 측의 경계를 존중해야합니다. 다시 말해, React Native 컨텐츠가 고정 크기 루트보기 내에 포함될 수 있는지 확인해야합니다. 이를 보장하는 가장 쉬운 방법은 flexbox 레이아웃을 사용하는 것입니다. 절대 위치를 사용하고 루트 뷰의 경계 외부에 React 구성 요소가 표시되면 기본 뷰와 겹치게되어 일부 기능이 예기치 않게 작동합니다. 예를 들어 'TouchableHighlight'는 루트 뷰의 경계를 벗어난 사용자의 터치를 강조 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b96e9244dd676e7fc0ed5e8d8f8d1d86322e04c" translate="yes" xml:space="preserve">
          <source>When working with native code, such as when writing native modules, you can launch the app from Android Studio or Xcode and take advantage of the native debugging features (setting up breakpoints, etc.) as you would in case of building a standard native app.</source>
          <target state="translated">네이티브 모듈 작성과 같은 네이티브 코드로 작업 할 때 Android Studio 또는 Xcode에서 앱을 시작하고 표준 네이티브 앱을 빌드 할 때와 같이 네이티브 디버깅 기능 (브레이크 포인트 설정 등)을 활용할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="23a82627396c01370c0fcfaf66e0f020d954da84" translate="yes" xml:space="preserve">
          <source>When wrapping opening tags over multiple lines, place one prop per line</source>
          <target state="translated">오프닝 태그를 여러 줄로 감쌀 때 한 줄에 소품 하나를 배치하십시오</target>
        </trans-unit>
        <trans-unit id="70d4f9cafb69a91496c78a51bc7f02a0c5f73c39" translate="yes" xml:space="preserve">
          <source>When you build a React Native application, you use the React Native packager to create an &lt;code&gt;index.bundle&lt;/code&gt; that will be served by the React Native server. Inside &lt;code&gt;index.bundle&lt;/code&gt; will be our &lt;code&gt;RNHighScore&lt;/code&gt; module. So, we need to point our &lt;code&gt;RCTRootView&lt;/code&gt; to the location of the &lt;code&gt;index.bundle&lt;/code&gt; resource (via &lt;code&gt;NSURL&lt;/code&gt;) and tie it to the module.</source>
          <target state="translated">React Native 애플리케이션을 빌드 할 때 React Native 패키지 프로그램을 사용 하여 React Native 서버에서 제공 할 &lt;code&gt;index.bundle&lt;/code&gt; 을 작성하십시오 . 내부 &lt;code&gt;index.bundle&lt;/code&gt; 은 &lt;code&gt;RNHighScore&lt;/code&gt; 모듈입니다. 따라서 &lt;code&gt;RCTRootView&lt;/code&gt; 가 &lt;code&gt;NSURL&lt;/code&gt; 을 통해 &lt;code&gt;index.bundle&lt;/code&gt; 리소스 의 위치 를 가리키고 이를 모듈에 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="a5611d4ccd7e05d7222f9bff64d21427136e1201" translate="yes" xml:space="preserve">
          <source>When you run your app, you can look in the console and see how many modules have been loaded, and how many are waiting. You may want to read the moduleNames and see if there are any surprises. Note that inline requires are invoked the first time the imports are referenced. You may need to investigate and refactor to ensure only the modules you want are loaded on startup. Note that you can change the Systrace object on require to help debug problematic requires.</source>
          <target state="translated">앱을 실행할 때 콘솔을보고로드 된 모듈 수와 대기중인 모듈 수를 확인할 수 있습니다. moduleNames를 읽고 놀라움이 있는지 확인하십시오. 가져 오기를 처음 참조 할 때 인라인 요구가 호출됩니다. 시작시 원하는 모듈 만로드되도록 조사하고 리팩토링해야합니다. Systrace 오브젝트를 필요에 따라 변경하여 문제점이있는 요구 사항을 디버그 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa787580d263fa15927220e7e87c7ae8a47ca987" translate="yes" xml:space="preserve">
          <source>When your platform-specific code is more complex, you should consider splitting the code out into separate files. React Native will detect when a file has a &lt;code&gt;.ios.&lt;/code&gt; or &lt;code&gt;.android.&lt;/code&gt; extension and load the relevant platform file when required from other components.</source>
          <target state="translated">플랫폼 별 코드가 더 복잡한 경우 코드를 별도의 파일로 분할하는 것을 고려해야합니다. React Native는 파일에 &lt;code&gt;.ios.&lt;/code&gt; 가있는 경우를 탐지합니다 . 또는 &lt;code&gt;.android.&lt;/code&gt; 확장하고 다른 구성 요소에서 필요한 경우 관련 플랫폼 파일을로드하십시오.</target>
        </trans-unit>
        <trans-unit id="809c76b79faf7aeb55784a528f86979e60c4f91d" translate="yes" xml:space="preserve">
          <source>Whenever you are fixing a bug or adding new functionality to React Native, you should add a test that covers it. Depending on the change you're making, there are different types of tests that may be appropriate.</source>
          <target state="translated">버그를 수정하거나 React Native에 새로운 기능을 추가 할 때마다 해당 테스트를 추가해야합니다. 변경 사항에 따라 다른 유형의 테스트가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01245be874364679655ca04001eb0c7032cbc429" translate="yes" xml:space="preserve">
          <source>Where React Native People Hang Out</source>
          <target state="translated">리 액트 네이티브 사람들이 어울리는 곳</target>
        </trans-unit>
        <trans-unit id="c9a808efd812288c8de34d139c3e56b601d98097" translate="yes" xml:space="preserve">
          <source>Whether enable showing peekFraction or not. If this is true, the preview of last and next page will show in current screen. Defaults to false.</source>
          <target state="translated">peekFraction 표시 가능 여부. 이 경우, 마지막 페이지와 다음 페이지의 미리보기가 현재 화면에 표시됩니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="a8157e88aaaeaaccb17c1d6bf450d1cb474c8ae2" translate="yes" xml:space="preserve">
          <source>Whether the indicator should hide when not animating (true by default).</source>
          <target state="translated">애니메이션을 적용하지 않을 때 표시기가 숨길 지 여부입니다 (기본적으로 true).</target>
        </trans-unit>
        <trans-unit id="fa6ac62deff8046ccf34d277e481ea222c059763" translate="yes" xml:space="preserve">
          <source>Whether the pull to refresh functionality is enabled.</source>
          <target state="translated">pull to refresh 기능 사용 여부입니다.</target>
        </trans-unit>
        <trans-unit id="2c2f9db89099e91c38790417b460eb73b70d4d8b" translate="yes" xml:space="preserve">
          <source>Whether the view should be indicating an active refresh.</source>
          <target state="translated">보기가 활성 새로 고침을 표시해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="e42b822566e1e0188f78ae8a58ab6955fceba349" translate="yes" xml:space="preserve">
          <source>Whether this &lt;code&gt;View&lt;/code&gt; needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior. The default (&lt;code&gt;false&lt;/code&gt;) falls back to drawing the component and its children with an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value. This default may be noticeable and undesired in the case where the &lt;code&gt;View&lt;/code&gt; you are setting an opacity on has multiple overlapping elements (e.g. multiple overlapping &lt;code&gt;View&lt;/code&gt;s, or text and a background).</source>
          <target state="translated">100 % 정확한 색상 및 혼합 동작을 유지하기 위해이 &lt;code&gt;View&lt;/code&gt; 를 화면 외부에서 렌더링하고 알파와 합성해야하는지 여부 입니다. 기본값 ( &lt;code&gt;false&lt;/code&gt; )은 전체 구성 요소를 화면 밖으로 렌더링하고 다시 알파 값으로 구성하는 대신 각 요소를 그리는 데 사용 된 페인트에 알파를 적용하여 구성 요소 및 해당 하위 구성 요소를 그리는 것으로 대체됩니다. 불투명도를 설정하려는 &lt;code&gt;View&lt;/code&gt; 에 여러 개의 겹치는 요소 (예 : 여러 개의 겹치는 &lt;code&gt;View&lt;/code&gt; 또는 텍스트와 배경) 가있는 경우이 기본값이 눈에 띄고 바람직하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58ef689501cdb341ae6d9415c2feba8529a22c6e" translate="yes" xml:space="preserve">
          <source>Whether this &lt;code&gt;View&lt;/code&gt; should be rendered as a bitmap before compositing.</source>
          <target state="translated">합성하기 전에이 &lt;code&gt;View&lt;/code&gt; 를 비트 맵으로 렌더링해야하는지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="210b1a1a5e1d144decd2dc2906689b33ed2b5d7b" translate="yes" xml:space="preserve">
          <source>Whether this &lt;code&gt;View&lt;/code&gt; should render itself (and all of its children) into a single hardware texture on the GPU.</source>
          <target state="translated">이 &lt;code&gt;View&lt;/code&gt; 가 GPU 자체에서 하나의 하드웨어 텍스처로 렌더링되어야 하는지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="b8a0e13bec8e9adaf5b163303b7ff99ae9b4de49" translate="yes" xml:space="preserve">
          <source>Whether to show the ProgressBar (true, the default) or hide it (false).</source>
          <target state="translated">ProgressBar를 표시할지 (true, 기본값) 숨길 지 (false)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1e112644bffc271d53be20ae904670db95154ee9" translate="yes" xml:space="preserve">
          <source>Whether to show the indicator (true, the default) or hide it (false).</source>
          <target state="translated">표시기를 표시할지 (true, 기본값) 숨길 지 (false)를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c4549b7f6d441db93f5142a2ea8d035bb4d4d007" translate="yes" xml:space="preserve">
          <source>Which &quot;Touchable&quot; component you use will depend on what kind of feedback you want to provide:</source>
          <target state="translated">어떤 &quot;터치 가능&quot;구성 요소는 어떤 종류의 피드백을 제공하고자하는지에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="408ddad6ae9941b6f349f11302b5b82557446728" translate="yes" xml:space="preserve">
          <source>Which would map like so:</source>
          <target state="translated">다음과 같이 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="609af83fb2edd9aabebc53bb4ef7a8dd65ca2042" translate="yes" xml:space="preserve">
          <source>While both environments are very similar, you may end up hitting some inconsistencies. We're likely going to experiment with other JavaScript engines in the future, so it's best to avoid relying on specifics of any runtime.</source>
          <target state="translated">두 환경이 매우 유사하지만 일부 불일치가 발생할 수 있습니다. 향후 다른 JavaScript 엔진을 실험 할 가능성이 있으므로 모든 런타임에 의존하지 않는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="388f7caa8cb3a01f397d0d96921844a912f636ff" translate="yes" xml:space="preserve">
          <source>While using transform styles such as &lt;code&gt;rotateY&lt;/code&gt;, &lt;code&gt;rotateX&lt;/code&gt;, and others ensure the transform style &lt;code&gt;perspective&lt;/code&gt; is in place. At this time some animations may not render on Android without it. Example below.</source>
          <target state="translated">&lt;code&gt;rotateY&lt;/code&gt; , &lt;code&gt;rotateX&lt;/code&gt; 등의 변형 스타일을 사용하는 동안 변형 스타일의 &lt;code&gt;perspective&lt;/code&gt; 이 적용됩니다. 현재 일부 애니메이션이 없으면 Android에서 렌더링되지 않을 수 있습니다. 아래 예.</target>
        </trans-unit>
        <trans-unit id="e56340552764d486482b61a54fafd3a948835d3e" translate="yes" xml:space="preserve">
          <source>While you can use any editor of your choice to develop your app, you will need to install Android Studio in order to set up the necessary tooling to build your React Native app for Android.</source>
          <target state="translated">선택한 편집기를 사용하여 앱을 개발할 수는 있지만 Android 용 React Native 앱을 빌드하는 데 필요한 도구를 설정하려면 Android Studio를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="96d4774ea1d3676d4637bbede8dbb7796e9a6e61" translate="yes" xml:space="preserve">
          <source>While you can use any editor of your choice to develop your app, you will need to install Xcode in order to set up the necessary tooling to build your React Native app for iOS.</source>
          <target state="translated">선택한 편집기를 사용하여 앱을 개발할 수는 있지만 iOS 용 React Native 앱을 빌드하는 데 필요한 도구를 설정하려면 Xcode를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="729a66793d53e9a8dadd29c86bdf9facee0e8058" translate="yes" xml:space="preserve">
          <source>While your project does not have to be handled by the Git versioning system -- you can use Mercurial, SVN, or nothing -- you will still need to &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;install Git&lt;/a&gt; on your system in order to use &lt;code&gt;react-native-git-upgrade&lt;/code&gt;. Git will also need to be available in the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">프로젝트를 Git 버전 관리 시스템으로 처리 할 필요는 없지만 Mercurial, SVN 등을 사용하거나 아무 것도 사용할 수 없지만 &lt;code&gt;react-native-git-upgrade&lt;/code&gt; 를 사용하려면 시스템에 &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt; 을 설치 해야합니다 . Git은 &lt;code&gt;PATH&lt;/code&gt; 에서도 사용할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="bae9281627295bc8aac69a1ec0b084d822cd3b9d" translate="yes" xml:space="preserve">
          <source>Why Not Automatically Size Everything?</source>
          <target state="translated">왜 자동으로 모든 크기를 조정하지 않습니까?</target>
        </trans-unit>
        <trans-unit id="e2017ae97230cd6f9ce7dd5e9d81840270d39e67" translate="yes" xml:space="preserve">
          <source>Windows (32-bit) - &lt;a href=&quot;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip&quot;&gt;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip&lt;/a&gt;</source>
          <target state="translated">Windows (32 비트) &lt;a href=&quot;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip&quot;&gt;-http&lt;/a&gt; : //dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip</target>
        </trans-unit>
        <trans-unit id="6752f8aa19f8735a1543da03da22f5210c4ba006" translate="yes" xml:space="preserve">
          <source>Windows (32-bit) - &lt;a href=&quot;https://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip&quot;&gt;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03aca15a0e9c4d0b70cce0c35244c84fa6c93325" translate="yes" xml:space="preserve">
          <source>Windows (64-bit) - &lt;a href=&quot;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip&quot;&gt;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip&lt;/a&gt;</source>
          <target state="translated">Windows (64 비트) &lt;a href=&quot;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip&quot;&gt;-http&lt;/a&gt; : //dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip</target>
        </trans-unit>
        <trans-unit id="caf47a6ef65015db0d9c9766b2ccbaf6c100f7c1" translate="yes" xml:space="preserve">
          <source>Windows (64-bit) - &lt;a href=&quot;https://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip&quot;&gt;http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a7edde11a826a592c9e3158c49ad8d25dfac08" translate="yes" xml:space="preserve">
          <source>Wire up the new link in the main menu to the newly added event handler method.</source>
          <target state="translated">기본 메뉴의 새 링크를 새로 추가 된 이벤트 핸들러 메소드에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="4bb611907e5dd19be0276e2b4b174ad4eed85d4c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;props&lt;/code&gt; and the basic &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; components, you can build a wide variety of static screens. To learn how to make your app change over time, you need to &lt;a href=&quot;state&quot;&gt;learn about State&lt;/a&gt;.</source>
          <target state="translated">로 &lt;code&gt;props&lt;/code&gt; 및 기본 &lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; 구성 요소, 당신은 정적 인 화면의 다양한 구축 할 수 있습니다. 시간이 지남에 따라 앱을 변경하는 방법을 배우려면 &lt;a href=&quot;state&quot;&gt;State&lt;/a&gt; 에 대해 알아야합니다 .</target>
        </trans-unit>
        <trans-unit id="580f1aa9b751078232e383724568a444a4685ee3" translate="yes" xml:space="preserve">
          <source>With React Native, you don't use a special language or syntax for defining styles. You just style your application using JavaScript. All of the core components accept a prop named &lt;code&gt;style&lt;/code&gt;. The style names and &lt;a href=&quot;colors&quot;&gt;values&lt;/a&gt; usually match how CSS works on the web, except names are written using camel casing, e.g &lt;code&gt;backgroundColor&lt;/code&gt; rather than &lt;code&gt;background-color&lt;/code&gt;.</source>
          <target state="translated">React Native를 사용하면 스타일을 정의하기 위해 특수 언어 나 구문을 사용하지 않습니다. JavaScript를 사용하여 응용 프로그램의 스타일을 지정하면됩니다. 모든 핵심 컴포넌트는 &lt;code&gt;style&lt;/code&gt; 이라는 prop을 허용합니다 . 스타일의 이름과 &lt;a href=&quot;colors&quot;&gt;값은&lt;/a&gt; CSS 웹에서 작동하는 방법 이름, 예를 들어 낙타 케이스를 사용하여 작성 제외하고는 일반적으로 일치 &lt;code&gt;backgroundColor&lt;/code&gt; 하기보다는 &lt;code&gt;background-color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb7f4617d932dfd73c9e60ca5285c27af56cbace" translate="yes" xml:space="preserve">
          <source>With that in mind we exposed many of these features as independent static libraries.</source>
          <target state="translated">이를 염두에두고 이러한 기능 중 다수를 독립 정적 라이브러리로 노출했습니다.</target>
        </trans-unit>
        <trans-unit id="2fa5aeb26d8b778386709c7860e7b7ffa4f3f856" translate="yes" xml:space="preserve">
          <source>Working Example</source>
          <target state="translated">작업 예</target>
        </trans-unit>
        <trans-unit id="cab48bf4b3746ee174379695dc2a61ba59d51765" translate="yes" xml:space="preserve">
          <source>Working on your first Pull Request? You can learn how from this free video series:</source>
          <target state="translated">첫 번째 풀 요청 작업 중입니까? 이 무료 비디오 시리즈에서 방법을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="846c2bbe3786e5b24df085866c2da96f123fffb1" translate="yes" xml:space="preserve">
          <source>Working with animations</source>
          <target state="translated">애니메이션 작업</target>
        </trans-unit>
        <trans-unit id="5a3daf22c60f26d8d42ff059a738f00e878b782f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest, fetch</source>
          <target state="translated">XMLHttpRequest, 페치</target>
        </trans-unit>
        <trans-unit id="64d36ae69ab9210cfc1f0a43d303686988db04f8" translate="yes" xml:space="preserve">
          <source>Xcode</source>
          <target state="translated">Xcode</target>
        </trans-unit>
        <trans-unit id="a7c3563de88f82e5a554df533cf20b269f7c3b24" translate="yes" xml:space="preserve">
          <source>Yarn has created a new &lt;code&gt;/node_modules&lt;/code&gt; folder. This folder stores all the JavaScript dependencies required to build your project.</source>
          <target state="translated">Yarn은 새로운 &lt;code&gt;/node_modules&lt;/code&gt; 폴더를 만들었습니다 . 이 폴더에는 프로젝트를 빌드하는 데 필요한 모든 JavaScript 종속성이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="de68e3c6ead0b0805ebb4a7b5e7adac167deb1f4" translate="yes" xml:space="preserve">
          <source>YellowBoxes can be disabled during development by using &lt;code&gt;console.disableYellowBox = true;&lt;/code&gt;. Specific warnings can be ignored programmatically by setting an array of prefixes that should be ignored:</source>
          <target state="translated">&lt;code&gt;console.disableYellowBox = true;&lt;/code&gt; 를 사용하여 개발 중에 YellowBox를 비활성화 할 수 있습니다 . . 무시해야하는 접두사 배열을 설정하여 프로그래밍 방식으로 특정 경고를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="7d7b27edf69930ff9b6df5865447b092f1213436" translate="yes" xml:space="preserve">
          <source>Yes, this does still require some native code, but it's pretty thin. You need to extend &lt;code&gt;HeadlessJsTaskService&lt;/code&gt; and override &lt;code&gt;getTaskConfig&lt;/code&gt;, e.g.:</source>
          <target state="translated">예, 여전히 네이티브 코드가 필요하지만 매우 얇습니다. &lt;code&gt;HeadlessJsTaskService&lt;/code&gt; 를 확장 하고 &lt;code&gt;getTaskConfig&lt;/code&gt; 를 대체 해야합니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="4f6daba82d578845b5b3102bf4237a84164deed9" translate="yes" xml:space="preserve">
          <source>You also lose the ability to set up a default font for an entire subtree. The recommended way to use consistent fonts and sizes across your application is to create a component &lt;code&gt;MyAppText&lt;/code&gt; that includes them and use this component across your app. You can also use this component to make more specific components like &lt;code&gt;MyAppHeaderText&lt;/code&gt; for other kinds of text.</source>
          <target state="translated">또한 전체 하위 트리에 대한 기본 글꼴을 설정하는 기능이 손실됩니다. 응용 프로그램에서 일관된 글꼴과 크기를 사용하는 권장 방법 은 포함 된 &lt;code&gt;MyAppText&lt;/code&gt; 구성 요소를 만들고 응용 프로그램 에서이 구성 요소를 사용하는 것입니다. 이 구성 요소를 사용 하여 다른 종류의 텍스트에 대해 &lt;code&gt;MyAppHeaderText&lt;/code&gt; 와 같은보다 구체적인 구성 요소를 만들 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c2797714bcd032d72e2741ac2a4e7601df7707dc" translate="yes" xml:space="preserve">
          <source>You also need to install the &lt;a href=&quot;https://buckbuild.com/setup/install.html&quot;&gt;Buck build tool&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://buckbuild.com/setup/install.html&quot;&gt;Buck 빌드 도구도&lt;/a&gt; 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="75615e9b223b6aaf5b379bfd6b36a1bf6d2dcb7b" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;animated#combining-animated-values&quot;&gt;combine two animated values&lt;/a&gt; via addition, multiplication, division, or modulo to make a new animated value.</source>
          <target state="translated">당신은 수 &lt;a href=&quot;animated#combining-animated-values&quot;&gt;개의 애니메이션 값을 결합하여&lt;/a&gt; 새로운 애니메이션 값을 만들뿐만 아니라, 곱하기, 나누기, 또는 모듈을 통해.</target>
        </trans-unit>
        <trans-unit id="0ec0b6210b422f559f7c0b507b73f1282799700c" translate="yes" xml:space="preserve">
          <source>You can access the developer menu by shaking your device or by selecting &quot;Shake Gesture&quot; inside the Hardware menu in the iOS Simulator. You can also use the &lt;code&gt;⌘D&lt;/code&gt; keyboard shortcut when your app is running in the iOS Simulator, or &lt;code&gt;⌘M&lt;/code&gt; when running in an Android emulator on Mac OS and &lt;code&gt;Ctrl+M&lt;/code&gt; on Windows and Linux. Alternatively for Android, you can run the command &lt;code&gt;adb shell input keyevent 82&lt;/code&gt; to open the dev menu (82 being the Menu key code).</source>
          <target state="translated">기기를 흔들거나 iOS 시뮬레이터의 하드웨어 메뉴에서 &quot;흔들기 제스처&quot;를 선택하여 개발자 메뉴에 액세스 할 수 있습니다. 당신은 또한 사용할 수 있습니다 &lt;code&gt;⌘D&lt;/code&gt; 의 당신의 앱이 iOS 시뮬레이터에서 실행되는 경우, 또는 키보드 단축키를 &lt;code&gt;⌘M&lt;/code&gt; 는 맥 OS와에 안드로이드 에뮬레이터에서 실행하는 경우 &lt;code&gt;Ctrl+M&lt;/code&gt; Windows 및 Linux합니다. 또는 Android의 경우 &lt;code&gt;adb shell input keyevent 82&lt;/code&gt; 명령을 실행 하여 dev 메뉴를 열 수 있습니다 (82는 메뉴 키 코드 임).</target>
        </trans-unit>
        <trans-unit id="4edd0810fb113aa778237180c521f2b9f0347c6f" translate="yes" xml:space="preserve">
          <source>You can add a new link on the main game menu to go to the &quot;High Score&quot; React Native page.</source>
          <target state="translated">메인 게임 메뉴에 새로운 링크를 추가하여 &quot;High Score&quot;React Native 페이지로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf5b5738b84e7fb28a50636f6e08ee1a47860020" translate="yes" xml:space="preserve">
          <source>You can add support for other types by creating a packager config file (see the &lt;a href=&quot;https://github.com/facebook/metro/blob/master/packages/metro/src/defaults.js#L14-L44&quot;&gt;packager config file&lt;/a&gt; for the full list of configuration options).</source>
          <target state="translated">패키지 프로그램 구성 파일을 작성하여 다른 유형에 대한 지원을 추가 할 수 있습니다 ( 구성 옵션의 전체 목록은 &lt;a href=&quot;https://github.com/facebook/metro/blob/master/packages/metro/src/defaults.js#L14-L44&quot;&gt;패키지 프로그램 구성 파일&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="46ee3e55b44d1dca9f03dcfc02d61fbb7ad96622" translate="yes" xml:space="preserve">
          <source>You can also add &lt;code&gt;style&lt;/code&gt; to an image:</source>
          <target state="translated">이미지 에 &lt;code&gt;style&lt;/code&gt; 을 추가 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38d7e86969aff0cca80faa9e5c041f96a96c6938" translate="yes" xml:space="preserve">
          <source>You can also connect to the development server over Wi-Fi. You'll first need to install the app on your device using a USB cable, but once that has been done you can debug wirelessly by following these instructions. You'll need your development machine's current IP address before proceeding.</source>
          <target state="translated">Wi-Fi를 통해 개발 서버에 연결할 수도 있습니다. 먼저 USB 케이블을 사용하여 기기에 앱을 설치해야하지만 일단 완료되면 다음 지침에 따라 무선으로 디버깅 할 수 있습니다. 계속 진행하려면 개발 시스템의 현재 IP 주소가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c57f0b072e6a1449340fc408853b79dc13759cd7" translate="yes" xml:space="preserve">
          <source>You can also directly use the &lt;code&gt;DeviceEventEmitter&lt;/code&gt; module to listen for events.</source>
          <target state="translated">&lt;code&gt;DeviceEventEmitter&lt;/code&gt; 모듈을 직접 사용하여 이벤트를 청취 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="688790bf75d583c04ee054add52fc1ca683faa07" translate="yes" xml:space="preserve">
          <source>You can also iterate quickly on a device by connecting to the development server running on your development machine. There are several ways of accomplishing this, depending on whether you have access to a USB cable or a Wi-Fi network.</source>
          <target state="translated">개발 머신에서 실행되는 개발 서버에 연결하여 디바이스에서 빠르게 반복 할 수도 있습니다. USB 케이블 또는 Wi-Fi 네트워크에 액세스 할 수 있는지 여부에 따라 여러 가지 방법으로이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9a47480978e44189fd689d24ee1be05569ba344" translate="yes" xml:space="preserve">
          <source>You can also iterate quickly on a device using the development server. You only have to be on the same Wi-Fi network as your computer. Shake your device to open the &lt;a href=&quot;debugging#accessing-the-in-app-developer-menu&quot;&gt;Developer menu&lt;/a&gt;, then enable Live Reload. Your app will reload whenever your JavaScript code has changed.</source>
          <target state="translated">개발 서버를 사용하여 장치에서 빠르게 반복 할 수도 있습니다. 컴퓨터와 동일한 Wi-Fi 네트워크에 있어야합니다. 장치를 흔들어 &lt;a href=&quot;debugging#accessing-the-in-app-developer-menu&quot;&gt;개발자 메뉴&lt;/a&gt; 를 연 다음 라이브 다시로드를 활성화하십시오. JavaScript 코드가 변경 될 때마다 앱이 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="fa28e7495f39c8c2f375840724123f0ecec3b5c5" translate="yes" xml:space="preserve">
          <source>You can also trigger navigator functionality from the &lt;code&gt;NavigatorIOS&lt;/code&gt; component:</source>
          <target state="translated">&lt;code&gt;NavigatorIOS&lt;/code&gt; 구성 요소 에서 네비게이터 기능을 트리거 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13a890a5a602986fcb1001aa3fec730545a3cfd4" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;RCT_EXTERN_REMAP_MODULE&lt;/code&gt; and &lt;code&gt;_RCT_EXTERN_REMAP_METHOD&lt;/code&gt; to alter the JavaScript name of the module or methods you are exporting. For more information see &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/React/Base/RCTBridgeModule.h&quot;&gt;&lt;code&gt;RCTBridgeModule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;RCT_EXTERN_REMAP_MODULE&lt;/code&gt; 및 &lt;code&gt;_RCT_EXTERN_REMAP_METHOD&lt;/code&gt; 를 사용 하여 내보내는 모듈 또는 메소드의 JavaScript 이름을 변경할 수도 있습니다 . 자세한 정보는 &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/React/Base/RCTBridgeModule.h&quot;&gt; &lt;code&gt;RCTBridgeModule&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d7d67b2a039cdc17b2927e6f69f27c3e5402c72" translate="yes" xml:space="preserve">
          <source>You can also use color names as values. React Native follows the &lt;a href=&quot;http://www.w3.org/TR/css3-color/#svg-color&quot;&gt;CSS3 specification&lt;/a&gt;:</source>
          <target state="translated">색상 이름을 값으로 사용할 수도 있습니다. React Native는 &lt;a href=&quot;http://www.w3.org/TR/css3-color/#svg-color&quot;&gt;CSS3 사양을&lt;/a&gt; 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="f7183218d381de67268474571ba1b73323723057" translate="yes" xml:space="preserve">
          <source>You can also use color names as values. React Native follows the &lt;a href=&quot;https://www.w3.org/TR/css3-color/#svg-color&quot;&gt;CSS3 specification&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779102555c528a75f8d4b01518744a660ebbac01" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;@2x&lt;/code&gt; and &lt;code&gt;@3x&lt;/code&gt; suffixes to provide images for different screen densities. If you have the following file structure:</source>
          <target state="translated">&lt;code&gt;@2x&lt;/code&gt; 및 &lt;code&gt;@3x&lt;/code&gt; 접미사를 사용하여 다양한 화면 밀도에 대한 이미지를 제공 할 수도 있습니다 . 다음과 같은 파일 구조가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="a8bb53896712e08e71d3419bcf0787230869cc89" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;React Native CLI&lt;/code&gt; to generate and run a &lt;code&gt;Release&lt;/code&gt; build (e.g. &lt;code&gt;react-native run-android --variant=release&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;React Native CLI&lt;/code&gt; 를 사용하여 &lt;code&gt;Release&lt;/code&gt; 빌드 를 생성 및 실행할 수도 있습니다 (예 : &lt;code&gt;react-native run-android --variant=release&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="77de7a158b19ca3c1dc585d4663e7b66c29f106b" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;React Native CLI&lt;/code&gt; to perform this operation using the option &lt;code&gt;--configuration&lt;/code&gt; with the value &lt;code&gt;Release&lt;/code&gt; (e.g. &lt;code&gt;react-native run-ios --configuration Release&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;React Native CLI&lt;/code&gt; 를 사용하여 &lt;code&gt;Release&lt;/code&gt; 값을 가진 &lt;code&gt;--configuration&lt;/code&gt; 옵션 (예 : &lt;code&gt;react-native run-ios --configuration Release&lt;/code&gt; ) 을 사용하여이 작업을 수행 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf58914c6372721df72534163670fe2f4e7e6398" translate="yes" xml:space="preserve">
          <source>You can also use the proposed ES2017 &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; syntax in a React Native app:</source>
          <target state="translated">React Native 앱에서 제안 된 ES2017 &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; 구문을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1be9c039cbb72c999f8f6fa883172cb0c21078a" translate="yes" xml:space="preserve">
          <source>You can checkout full source code of the example &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/RNTester/NativeExampleViews/FlexibleSizeExampleView.m&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">당신은 예를의 전체 소스 코드를 체크 아웃 할 수 있습니다 &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/RNTester/NativeExampleViews/FlexibleSizeExampleView.m&quot;&gt;여기에&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df1cf452ab1e5bf5f936e931280e9ecb1190afe5" translate="yes" xml:space="preserve">
          <source>You can choose &quot;Hide Inspector&quot; in the same menu to exit this mode.</source>
          <target state="translated">동일한 메뉴에서 &quot;Hide Inspector&quot;를 선택하여이 모드를 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b075ef3f0fb2de90d9cbb0c04efcd6e99d6f01f" translate="yes" xml:space="preserve">
          <source>You can combine two animated values via addition, subtraction, multiplication, division, or modulo to make a new animated value:</source>
          <target state="translated">더하기, 빼기, 곱하기, 나누기 또는 모듈로를 통해 두 개의 애니메이션 값을 결합하여 새로운 애니메이션 값을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07f9b309a4ce2b113ffedf653f006293b0dec7df" translate="yes" xml:space="preserve">
          <source>You can configure the packager to use a port other than 8081 by using the &lt;code&gt;port&lt;/code&gt; parameter:</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; 매개 변수 를 사용하여 8081 이외의 포트를 사용하도록 패키저를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa621af16b288867c15b7b373dbe57295e355fb" translate="yes" xml:space="preserve">
          <source>You can create an APK for each CPU by changing the following line in android/app/build.gradle:</source>
          <target state="translated">android / app / build.gradle에서 다음 줄을 변경하여 각 CPU에 대한 APK를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="682d0eb630c2febbf802bb7f224c5d3886494ca3" translate="yes" xml:space="preserve">
          <source>You can display the console logs for an iOS or Android app by using the following commands in a terminal while the app is running:</source>
          <target state="translated">앱이 실행되는 동안 터미널에서 다음 명령을 사용하여 iOS 또는 Android 앱의 콘솔 로그를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="003abbbd100349052473240f2b4ab53be6549c23" translate="yes" xml:space="preserve">
          <source>You can do anything in your task as long as it doesn't touch UI: network requests, timers and so on. Once your task completes (i.e. the promise is resolved), React Native will go into &quot;paused&quot; mode (unless there are other tasks running, or there is a foreground app).</source>
          <target state="translated">네트워크 요청, 타이머 등 UI를 건드리지 않는 한 작업에서 무엇이든 할 수 있습니다. 작업이 완료되면 (즉, 약속이 해결되면) React Native는 다른 작업이 실행 중이거나 포 그라운드 앱이없는 한 &quot;일시 중지&quot;모드로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="469e4ba1ad3de1ca50b0f8ac29e268ccd89698b2" translate="yes" xml:space="preserve">
          <source>You can do this by creating a class that implements the RCTBridgeDelegate Protocol, initializing an RCTBridge with the delegate as an argument and initialising a RCTRootView with the initialized bridge.</source>
          <target state="translated">RCTBridgeDelegate 프로토콜을 구현하는 클래스를 작성하고 대리자로 RCTBridge를 인수로 초기화하고 초기화 된 브릿지로 RCTRootView를 초기화하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93579986f273cce3b51b0f285d90ab74a4910b92" translate="yes" xml:space="preserve">
          <source>You can enable a performance overlay to help you debug performance problems by selecting &quot;Perf Monitor&quot; in the Developer Menu.</source>
          <target state="translated">개발자 메뉴에서 &quot;성능 모니터&quot;를 선택하여 성능 문제를 디버깅 할 수 있도록 성능 오버레이를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0991939a3f4177e4a3492a7107ea54ecdde75aa5" translate="yes" xml:space="preserve">
          <source>You can examine the code that added the React Native screen to our sample app on &lt;a href=&quot;https://github.com/JoelMarcey/iOS-2048/commit/9ae70c7cdd53eb59f5f7c7daab382b0300ed3585&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JoelMarcey/iOS-2048/commit/9ae70c7cdd53eb59f5f7c7daab382b0300ed3585&quot;&gt;GitHub&lt;/a&gt; 의 샘플 앱에 React Native 화면을 추가 한 코드를 검사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4834b57d34510761bdfc6e00a2fb748b841cdbc8" translate="yes" xml:space="preserve">
          <source>You can examine the code that added the React Native screen to our sample app on &lt;a href=&quot;https://github.com/JoelMarcey/swift-2048/commit/13272a31ee6dd46dc68b1dcf4eaf16c1a10f5229&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JoelMarcey/swift-2048/commit/13272a31ee6dd46dc68b1dcf4eaf16c1a10f5229&quot;&gt;GitHub&lt;/a&gt; 의 샘플 앱에 React Native 화면을 추가 한 코드를 검사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="535144986f106c34f0cf66ecb0814fc2d6a7ceef" translate="yes" xml:space="preserve">
          <source>You can find a full list of composition methods in the &lt;a href=&quot;animated#composing-animations&quot;&gt;Composing animations&lt;/a&gt; section of the &lt;code&gt;Animated&lt;/code&gt; API reference.</source>
          <target state="translated">&lt;code&gt;Animated&lt;/code&gt; API 참조 의 애니메이션 &lt;a href=&quot;animated#composing-animations&quot;&gt;구성&lt;/a&gt; 섹션 에서 컴포지션 메서드의 전체 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16a6710459879c1a94422e7fb55bcea8050eb83e" translate="yes" xml:space="preserve">
          <source>You can find a visualization of some common easing functions at &lt;a href=&quot;http://easings.net/&quot;&gt;http://easings.net/&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://easings.net/&quot;&gt;http://easings.net/&lt;/a&gt; 에서 일반적인 여유 기능의 시각화를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79992022110a98a45e125be3f1d482e1ff65aac4" translate="yes" xml:space="preserve">
          <source>You can find additional installation options on &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node's Downloads page&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;노드의 다운로드 페이지&lt;/a&gt; 에서 추가 설치 옵션을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06743a16568d47026243a0d78353828b354041e6" translate="yes" xml:space="preserve">
          <source>You can find further instructions on the &lt;a href=&quot;https://developer.android.com/ndk/index.html&quot;&gt;official page&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.android.com/ndk/index.html&quot;&gt;공식 페이지&lt;/a&gt; 에서 추가 지침을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78d3c4e4df9b7d793b0522cb5132068f26a15c62" translate="yes" xml:space="preserve">
          <source>You can find the IP address in &lt;strong&gt;System Preferences&lt;/strong&gt; &amp;rarr; &lt;strong&gt;Network&lt;/strong&gt;.</source>
          <target state="translated">IP 주소는 &lt;strong&gt;시스템 환경 설정&lt;/strong&gt; &amp;rarr; &lt;strong&gt;네트워크&lt;/strong&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fbe0d145637d003b6551293cfdfdba12ebb85eb6" translate="yes" xml:space="preserve">
          <source>You can find the actual location of the SDK in the Android Studio &quot;Preferences&quot; dialog, under &lt;strong&gt;Appearance &amp;amp; Behavior&lt;/strong&gt; &amp;rarr; &lt;strong&gt;System Settings&lt;/strong&gt; &amp;rarr; &lt;strong&gt;Android SDK&lt;/strong&gt;.</source>
          <target state="translated">Android Studio &quot;환경 설정&quot;대화 상자의 &lt;strong&gt;모양 및 동작&lt;/strong&gt; &amp;rarr; &lt;strong&gt;시스템 설정&lt;/strong&gt; &amp;rarr; &lt;strong&gt;Android SDK&lt;/strong&gt; 에서 SDK의 실제 위치를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="528cab313aff877b20bb26527e9086b5f49ffd81" translate="yes" xml:space="preserve">
          <source>You can generally figure out who may be relevant for a given issue by looking at the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/.github/CODEOWNERS&quot;&gt;CODEOWNERS&lt;/a&gt; file.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/.github/CODEOWNERS&quot;&gt;CODEOWNERS&lt;/a&gt; 파일 을 보면 주어진 문제와 관련이있는 사람을 파악할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d77bc9daf98585702fb617ce5f14c33699ee5130" translate="yes" xml:space="preserve">
          <source>You can generate a private signing key using &lt;code&gt;keytool&lt;/code&gt;. On Windows &lt;code&gt;keytool&lt;/code&gt; must be run from &lt;code&gt;C:\Program Files\Java\jdkx.x.x_x\bin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keytool&lt;/code&gt; 을 사용하여 개인 서명 키를 생성 할 수 있습니다 . Windows에서 &lt;code&gt;keytool&lt;/code&gt; 은 &lt;code&gt;C:\Program Files\Java\jdkx.x.x_x\bin&lt;/code&gt; 에서 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="01518b50a00e3d0e6f60742b5f6f564078acc2bf" translate="yes" xml:space="preserve">
          <source>You can kill any running packager instances, all your framework and JavaScript code is bundled in the APK's assets.</source>
          <target state="translated">실행중인 패키지 프로그램 인스턴스를 모두 종료 할 수 있으며 모든 프레임 워크 및 JavaScript 코드가 APK 자산에 번들로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b53b1953e672a28ea9dfb6671c589c78a00f3e50" translate="yes" xml:space="preserve">
          <source>You can learn more about handling issues in the &lt;a href=&quot;maintainers#handling-issues&quot;&gt;maintainer's guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;maintainers#handling-issues&quot;&gt;관리자 안내서&lt;/a&gt; 에서 문제 처리에 대한 자세한 내용을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad7e134a398521326b0a55cba6e60107d8bb65cb" translate="yes" xml:space="preserve">
          <source>You can now build your app for release by tapping &lt;code&gt;⌘B&lt;/code&gt; or selecting &lt;strong&gt;Product&lt;/strong&gt; &amp;rarr; &lt;strong&gt;Build&lt;/strong&gt; from the menu bar. Once built for release, you'll be able to distribute the app to beta testers and submit the app to the App Store.</source>
          <target state="translated">이제 &lt;code&gt;⌘B&lt;/code&gt; 를 탭 하거나 메뉴 표시 줄에서 &lt;strong&gt;제품&lt;/strong&gt; &amp;rarr; &lt;strong&gt;빌드&lt;/strong&gt; 를 선택하여 출시 용 앱을 빌드 할 수 있습니다 . 출시 용으로 제작되면 앱을 베타 테스터에게 배포하고 앱을 App Store에 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e34554d10d4d36662a2a7ec597bea199d8e73dff" translate="yes" xml:space="preserve">
          <source>You can now enable Live reloading from the &lt;a href=&quot;debugging#accessing-the-in-app-developer-menu&quot;&gt;Developer menu&lt;/a&gt;. Your app will reload whenever your JavaScript code has changed.</source>
          <target state="translated">이제 &lt;a href=&quot;debugging#accessing-the-in-app-developer-menu&quot;&gt;개발자 메뉴&lt;/a&gt; 에서 라이브 리로딩을 활성화 할 수 있습니다 . JavaScript 코드가 변경 될 때마다 앱이 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="5d30071a62e4c865431191c62e14a687ecf99449" translate="yes" xml:space="preserve">
          <source>You can now use &lt;code&gt;MyButton&lt;/code&gt; inside of &lt;code&gt;TouchableOpacity&lt;/code&gt;! A sidenote for clarity: we used the &lt;a href=&quot;https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-dom-element&quot;&gt;ref callback&lt;/a&gt; syntax here, rather than the traditional string-based ref.</source>
          <target state="translated">이제 사용할 수 있습니다 &lt;code&gt;MyButton&lt;/code&gt; 에를 내부 &lt;code&gt;TouchableOpacity&lt;/code&gt; ! 명확성을위한 참고 사항 : 기존의 문자열 기반 참조가 아닌 여기 에서 &lt;a href=&quot;https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-dom-element&quot;&gt;참조 콜백&lt;/a&gt; 구문을 사용했습니다 .</target>
        </trans-unit>
        <trans-unit id="f57c8ebb5f102d5675eecf243d04c412ed9907a5" translate="yes" xml:space="preserve">
          <source>You can optionally pass in a &lt;code&gt;passProps&lt;/code&gt; property to your &lt;code&gt;initialRoute&lt;/code&gt;. &lt;code&gt;NavigatorIOS&lt;/code&gt; passes this in as props to the rendered component:</source>
          <target state="translated">당신은 선택적으로 전달할 수 있습니다 &lt;code&gt;passProps&lt;/code&gt; 의 당신에 재산 &lt;code&gt;initialRoute&lt;/code&gt; . &lt;code&gt;NavigatorIOS&lt;/code&gt; 는이를 렌더링 된 컴포넌트에 대한 소품으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="bb62afc07ebbfadfc9d2edb2958c2eda77274b20" translate="yes" xml:space="preserve">
          <source>You can provide custom extraction and &lt;code&gt;hasChanged&lt;/code&gt; functions for section headers and rows. If absent, data will be extracted with the &lt;code&gt;defaultGetRowData&lt;/code&gt; and &lt;code&gt;defaultGetSectionHeaderData&lt;/code&gt; functions.</source>
          <target state="translated">섹션 헤더 및 행에 대한 사용자 정의 추출 및 &lt;code&gt;hasChanged&lt;/code&gt; 기능을 제공 할 수 있습니다 . 없는 경우 &lt;code&gt;defaultGetRowData&lt;/code&gt; 및 &lt;code&gt;defaultGetSectionHeaderData&lt;/code&gt; 함수를 사용하여 데이터가 추출됩니다 .</target>
        </trans-unit>
        <trans-unit id="9805bbfa1026699c62a2a6ccf6f7afe403f67b1f" translate="yes" xml:space="preserve">
          <source>You can provide one trait or an array of many traits.</source>
          <target state="translated">하나의 특성 또는 여러 특성의 배열을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb001e48e01cfb460a849806fa179488cceb7dd2" translate="yes" xml:space="preserve">
          <source>You can provide one type or an array of many types.</source>
          <target state="translated">하나의 유형 또는 여러 유형의 배열을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fbb29b0e9e9c8013689e31229b5bb8d3069c313" translate="yes" xml:space="preserve">
          <source>You can reference &lt;code&gt;DocumentSelectionState&lt;/code&gt; in &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/Libraries/vendor/document/selection/DocumentSelectionState.js&quot;&gt;&lt;code&gt;vendor/document/selection/DocumentSelectionState.js&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/facebook/react-native/blob/master/Libraries/vendor/document/selection/DocumentSelectionState.js&quot;&gt; &lt;code&gt;vendor/document/selection/DocumentSelectionState.js&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;DocumentSelectionState&lt;/code&gt; 를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb3947cfad2dd536c68d3fa2f69c1c2be394142b" translate="yes" xml:space="preserve">
          <source>You can run Apple TV unit and integration tests locally by running the following in the command line on macOS:</source>
          <target state="translated">macOS의 명령 행에서 다음을 실행하여 Apple TV 장치 및 통합 테스트를 로컬로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e50dbbc5a07e95ad4ea4aa2507c14f666d26212" translate="yes" xml:space="preserve">
          <source>You can run integration tests locally with cmd+U in the IntegrationTest and RNTester apps in Xcode, or by running the following in the command line on macOS:</source>
          <target state="translated">Xcode의 IntegrationTest 및 RNTester 앱에서 cmd + U를 사용하여 로컬로 통합 테스트를 실행하거나 macOS의 명령 행에서 다음을 실행하여 통합 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78337acb6f2d52b2babf2df30099554fd2f333c7" translate="yes" xml:space="preserve">
          <source>You can run via &lt;code&gt;node packager/generateModulePaths.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node packager/generateModulePaths.js&lt;/code&gt; 를 통해 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="881c8840a268485060e8154202a11e50e8193095" translate="yes" xml:space="preserve">
          <source>You can see the list of available Android Virtual Devices (AVDs) by opening the &quot;AVD Manager&quot; from within Android Studio. Look for an icon that looks like this:</source>
          <target state="translated">Android Studio에서 &quot;AVD 관리자&quot;를 열어 사용 가능한 Android 가상 장치 (AVD) 목록을 볼 수 있습니다. 다음과 같은 아이콘을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="48beeb98834a4b535a4c48917e5c5ae76de8cbe5" translate="yes" xml:space="preserve">
          <source>You can see the native driver in action by running the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/&quot;&gt;RNTester app&lt;/a&gt;, then loading the Native Animated Example. You can also take a look at the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/js/NativeAnimationsExample.js&quot;&gt;source code&lt;/a&gt; to learn how these examples were produced.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/&quot;&gt;RNTester app&lt;/a&gt; 을 실행 한 다음 Native Animated Example을로드하여 기본 드라이버가 작동중인 것을 확인할 수 있습니다 . &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/RNTester/js/NativeAnimationsExample.js&quot;&gt;소스 코드&lt;/a&gt; 를 살펴보고 이러한 예제의 생성 방법을 배울 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43ae62a49179d439747c1cc56fb192e2efae7aaa" translate="yes" xml:space="preserve">
          <source>You can specify the device the simulator should run with the &lt;code&gt;--simulator&lt;/code&gt; flag, followed by the device name as a string. The default is &lt;code&gt;&quot;iPhone 6&quot;&lt;/code&gt;. If you wish to run your app on an iPhone 4s, just run &lt;code&gt;react-native run-ios --simulator=&quot;iPhone 4s&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--simulator&lt;/code&gt; 플래그를 사용하여 시뮬레이터가 실행해야하는 장치를 지정하고 장치 이름을 문자열로 지정할 수 있습니다 . 기본값은 &lt;code&gt;&quot;iPhone 6&quot;&lt;/code&gt; 입니다. iPhone 4s에서 앱을 실행하려면 &lt;code&gt;react-native run-ios --simulator=&quot;iPhone 4s&quot;&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="f264d186643d94977c9ac28b4ec8520c2fc35383" translate="yes" xml:space="preserve">
          <source>You can specify which &lt;code&gt;subspec&lt;/code&gt;s your app will depend on in a &lt;code&gt;Podfile&lt;/code&gt; file. The easiest way to create a &lt;code&gt;Podfile&lt;/code&gt; is by running the CocoaPods &lt;code&gt;init&lt;/code&gt; command in the &lt;code&gt;/ios&lt;/code&gt; subfolder of your project:</source>
          <target state="translated">&lt;code&gt;Podfile&lt;/code&gt; 파일 에서 앱이 의존 할 &lt;code&gt;subspec&lt;/code&gt; 지정할 수 있습니다 . &lt;code&gt;Podfile&lt;/code&gt; 을 작성하는 가장 쉬운 방법 은 프로젝트 의 &lt;code&gt;/ios&lt;/code&gt; 하위 폴더 에서 CocoaPods &lt;code&gt;init&lt;/code&gt; 명령 을 실행하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="2129a51f39533d405af0ef4db70f4367ede2fe59" translate="yes" xml:space="preserve">
          <source>You can speed up your development times by having your app reload automatically any time your code changes. Automatic reloading can be enabled by selecting &quot;Enable Live Reload&quot; from the Developer Menu.</source>
          <target state="translated">코드가 변경 될 때마다 앱을 자동으로 다시로드하여 개발 시간을 단축 할 수 있습니다. 개발자 메뉴에서 &quot;라이브 재로드 활성화&quot;를 선택하여 자동 재로드를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbffab68b923f392ce203da9f66038af291db971" translate="yes" xml:space="preserve">
          <source>You can then access the props passed in via &lt;code&gt;{this.props.myProp}&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;code&gt;{this.props.myProp}&lt;/code&gt; 를 통해 전달 된 소품에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab7488786860c5a7b36afdc66e18c46982fbf290" translate="yes" xml:space="preserve">
          <source>You can then define methods and export your enum constants like this:</source>
          <target state="translated">그런 다음 메소드를 정의하고 다음과 같이 열거 형 상수를 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2d2efd3e4ff3b0ecc7b062f3cdc7bf13674f75" translate="yes" xml:space="preserve">
          <source>You can then require the component as follows:</source>
          <target state="translated">그런 다음 다음과 같이 구성 요소를 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bb8339db02cb895ee1941890272b32811226cea" translate="yes" xml:space="preserve">
          <source>You can think of &quot;ours&quot; as &quot;your team&quot; and &quot;theirs&quot; as &quot;the React Native dev team&quot;.</source>
          <target state="translated">&quot;우리&quot;를 &quot;팀&quot;으로, &quot;그들&quot;을 &quot;React Native 개발자 팀&quot;으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86b0369017d28d800fe321afca0e0aeead5fca57" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/facebook/react-devtools/tree/master/packages/react-devtools&quot;&gt;the standalone version of React Developer Tools&lt;/a&gt; to debug the React component hierarchy. To use it, install the &lt;code&gt;react-devtools&lt;/code&gt; package globally:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/facebook/react-devtools/tree/master/packages/react-devtools&quot;&gt;독립형 버전의 React Developer Tools&lt;/a&gt; 를 사용하여 React 컴포넌트 계층을 디버그 할 수 있습니다 . 이를 사용하려면 &lt;code&gt;react-devtools&lt;/code&gt; 패키지를 전체적으로 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="35d0e38ef6a2db6f44705c03b5096f572a87e4f5" translate="yes" xml:space="preserve">
          <source>You can use Android Studio to create your release builds too! It&amp;rsquo;s as easy as creating release builds of your previously-existing native Android app. There&amp;rsquo;s just one additional step, which you&amp;rsquo;ll have to do before every release build. You need to execute the following to create a React Native bundle, which will be included with your native Android app:</source>
          <target state="translated">Android Studio를 사용하여 릴리스 빌드도 만들 수 있습니다! 기존의 기본 Android 앱의 릴리스 빌드를 만드는 것만 큼 쉽습니다. 모든 릴리스 빌드 전에 수행해야 할 추가 단계는 하나뿐입니다. 기본 Android 앱에 포함되는 React Native 번들을 작성하려면 다음을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="30b9d8d6fbb61de77c04d954c0ced83221b1c795" translate="yes" xml:space="preserve">
          <source>You can use other URLs, like a location (e.g. &quot;geo:37.484847,-122.148386&quot; on Android or &quot;&lt;a href=&quot;http://maps.apple.com/?ll=37.484847,-122.148386&quot;&gt;http://maps.apple.com/?ll=37.484847,-122.148386&lt;/a&gt;&quot; on iOS), a contact, or any other URL that can be opened with the installed apps.</source>
          <target state="translated">위치 (예 : Android의 &quot;geo : 37.484847, -122.148386&quot;또는 iOS의 &quot; &lt;a href=&quot;http://maps.apple.com/?ll=37.484847,-122.148386&quot;&gt;http://maps.apple.com/?ll=37.484847,-122.148386&lt;/a&gt; &quot;), 연락처 또는 기타와 같은 다른 URL을 사용할 수 있습니다. 설치된 앱으로 열 수있는 다른 URL</target>
        </trans-unit>
        <trans-unit id="3b8b08c3f9f41a055c25d419e05991874848c760" translate="yes" xml:space="preserve">
          <source>You can use the native driver by specifying &lt;code&gt;useNativeDriver: true&lt;/code&gt; in your animation configuration. See the &lt;a href=&quot;animations#using-the-native-driver&quot;&gt;Animations&lt;/a&gt; guide to learn more.</source>
          <target state="translated">애니메이션 구성에서 &lt;code&gt;useNativeDriver: true&lt;/code&gt; 를 지정하여 기본 드라이버를 사용할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;animations#using-the-native-driver&quot;&gt;애니메이션&lt;/a&gt; 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="afa29a232c9633f3e5c3e199802955db141345ad" translate="yes" xml:space="preserve">
          <source>You can use this component to navigate back and forth in the web view's history and configure various properties for the web content.</source>
          <target state="translated">이 컴포넌트를 사용하여 웹보기 히스토리에서 앞뒤로 탐색하고 웹 컨텐츠에 대한 다양한 특성을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efcc28af9688fd4514d387be8d049e524c844ee8" translate="yes" xml:space="preserve">
          <source>You can use this method if your device is running Android 5.0 (Lollipop) or newer, it has USB debugging enabled, and it is connected via USB to your development machine.</source>
          <target state="translated">디바이스에서 Android 5.0 (Lollipop) 이상을 실행 중이고 USB 디버깅이 사용 가능하며 USB를 통해 개발 시스템에 연결된 경우이 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7467e105f4c38a784cd684876d92b687ce16df9" translate="yes" xml:space="preserve">
          <source>You can wrap your React Native view in a &lt;code&gt;ScrollView&lt;/code&gt; component. This guarantees that your content will always be available and it won't overlap with native views.</source>
          <target state="translated">React Native보기를 &lt;code&gt;ScrollView&lt;/code&gt; 구성 요소로 랩핑 할 수 있습니다 . 이렇게하면 콘텐츠를 항상 사용할 수 있으며 기본보기와 겹치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bad84c280fb042e24ed3c5bd196bf9663105ee0d" translate="yes" xml:space="preserve">
          <source>You could write any conversion function you want for your view - here is the implementation for &lt;code&gt;MKCoordinateRegion&lt;/code&gt; via a category on &lt;code&gt;RCTConvert&lt;/code&gt;. It uses an already existing category of ReactNative &lt;code&gt;RCTConvert+CoreLocation&lt;/code&gt;:</source>
          <target state="translated">여기에 대한 구현입니다 - 당신은 당신의보기를 원하는 변환 기능을 쓸 수 &lt;code&gt;MKCoordinateRegion&lt;/code&gt; 의 카테고리를 통해 &lt;code&gt;RCTConvert&lt;/code&gt; 가 . 기존의 ReactNative &lt;code&gt;RCTConvert+CoreLocation&lt;/code&gt; 카테고리를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ad6d25f604d7ccf684e522021512449e3069943a" translate="yes" xml:space="preserve">
          <source>You have added new resources to your native app's bundle, such as an image in &lt;code&gt;Images.xcassets&lt;/code&gt; on iOS or the &lt;code&gt;res/drawable&lt;/code&gt; folder on Android.</source>
          <target state="translated">iOS의 &lt;code&gt;Images.xcassets&lt;/code&gt; 의 이미지 또는 Android 의 &lt;code&gt;res/drawable&lt;/code&gt; 폴더 와 같은 새로운 리소스를 기본 앱 번들에 추가 했습니다 .</target>
        </trans-unit>
        <trans-unit id="32ef6f3e70a35541c5c8ccfa1384cbaea7bbaff0" translate="yes" xml:space="preserve">
          <source>You have built a great app using React Native, and you are now itching to release it in the App Store. The process is the same as any other native iOS app, with some additional considerations to take into account.</source>
          <target state="translated">React Native를 사용하여 훌륭한 앱을 구축했으며 이제 App Store에서 출시하려고합니다. 이 프로세스는 다른 기본 iOS 앱과 동일하지만 몇 가지 추가 고려 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="82176dfe1ff530fc955c09c59dabdadb3f2ea485" translate="yes" xml:space="preserve">
          <source>You have built a great app using React Native, and you are now itching to release it in the Play Store. The process is the same as any other native Android app, with some additional considerations to take into account. Follow the guide for &lt;a href=&quot;signed-apk-android&quot;&gt;generating a signed APK&lt;/a&gt; to learn more.</source>
          <target state="translated">React Native를 사용하여 훌륭한 앱을 구축했으며 이제 Play 스토어에서 출시하려고합니다. 이 프로세스는 다른 기본 Android 앱과 동일하지만 몇 가지 추가 고려 사항이 있습니다. 자세한 내용 &lt;a href=&quot;signed-apk-android&quot;&gt;은 서명 된 APK 생성&lt;/a&gt; 가이드를 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="23518c44f5fba8250467f7d0ef4bee6b8ef6dfc8" translate="yes" xml:space="preserve">
          <source>You have gathered all the information required to open a new issue, and you are confident it meets the &lt;a href=&quot;contributing&quot;&gt;contributor guidelines&lt;/a&gt;. Once you post an issue, this is what our maintainers will consider when deciding how to move forward:</source>
          <target state="translated">새로운 이슈를 여는 데 필요한 모든 정보를 수집했으며, 해당 정보가 &lt;a href=&quot;contributing&quot;&gt;기고자 지침을&lt;/a&gt; 충족한다고 확신합니다 . 이슈를 게시 한 후에는 앞으로 나아가는 방법을 결정할 때 관리자가 고려해야 할 사항입니다.</target>
        </trans-unit>
        <trans-unit id="f83f8fdd6900440be5a70861351677f7ea29c104" translate="yes" xml:space="preserve">
          <source>You have modified native code (Objective-C/Swift on iOS or Java/C++ on Android).</source>
          <target state="translated">네이티브 코드를 수정했습니다 (iOS의 경우 Objective-C / Swift 또는 Android의 경우 Java / C ++).</target>
        </trans-unit>
        <trans-unit id="8a04a31d352a099e67deaa442c260186b45450d2" translate="yes" xml:space="preserve">
          <source>You have now done all the basic steps to integrate React Native with your current application. Now we will start the React Native packager to build the &lt;code&gt;index.bundle&lt;/code&gt; package and the server running on &lt;code&gt;localhost&lt;/code&gt; to serve it.</source>
          <target state="translated">이제 React Native를 현재 애플리케이션과 통합하기위한 모든 기본 단계를 완료했습니다. 이제 React Native packager를 시작하여 &lt;code&gt;index.bundle&lt;/code&gt; 패키지와 &lt;code&gt;localhost&lt;/code&gt; 에서 실행되는 서버 를 빌드 합니다.</target>
        </trans-unit>
        <trans-unit id="6ab9f7fba09813fed1c11828ee56ba87a6037577" translate="yes" xml:space="preserve">
          <source>You have now done all the basic steps to integrate React Native with your current application. Now we will start the React Native packager to build the &lt;code&gt;index.bundle&lt;/code&gt; package and the server running on localhost to serve it.</source>
          <target state="translated">이제 React Native를 현재 애플리케이션과 통합하기위한 모든 기본 단계를 완료했습니다. 이제 React Native packager를 시작하여 &lt;code&gt;index.bundle&lt;/code&gt; 패키지와 localhost에서 실행되는 서버 를 빌드 합니다.</target>
        </trans-unit>
        <trans-unit id="1600ed5e24ba8ef455c255e3409a0fa4e2e10941" translate="yes" xml:space="preserve">
          <source>You may also access these through &lt;code&gt;Debug &amp;rarr; Open System Log...&lt;/code&gt; in the iOS Simulator or by running &lt;code&gt;adb logcat *:S ReactNative:V ReactNativeJS:V&lt;/code&gt; in a terminal while an Android app is running on a device or emulator.</source>
          <target state="translated">당신은 또한을 통해 이들에 액세스 할 수 있습니다 &lt;code&gt;Debug &amp;rarr; Open System Log...&lt;/code&gt; 아이폰 OS 시뮬레이터 또는 실행하여 &lt;code&gt;adb logcat *:S ReactNative:V ReactNativeJS:V&lt;/code&gt; 터미널에서이 안드로이드 응용 프로그램은 장치 또는 에뮬레이터에서 실행되는 동안을.</target>
        </trans-unit>
        <trans-unit id="0443df8e54c76e51d39bc9e83484924103bd99c0" translate="yes" xml:space="preserve">
          <source>You may consider using &lt;a href=&quot;touchablenativefeedback&quot;&gt;&lt;strong&gt;TouchableNativeFeedback&lt;/strong&gt;&lt;/a&gt; on Android to display ink surface reaction ripples that respond to the user's touch.</source>
          <target state="translated">Android에서 &lt;a href=&quot;touchablenativefeedback&quot;&gt;&lt;strong&gt;TouchableNativeFeedback&lt;/strong&gt;&lt;/a&gt; 을 사용 하여 사용자의 터치에 반응하는 잉크 표면 반응 잔물결을 표시하는 것을 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8b2a8adb65a7255d8ed0fd307b0a7e8cbf91ec3" translate="yes" xml:space="preserve">
          <source>You may consult &lt;a href=&quot;https://github.com/ncuillery/rn-diff&quot;&gt;rn-diff&lt;/a&gt; to see if there were changes in the project template files. In case there weren't any, simply rebuild the project and continue developing. In case of minor changes, you may update your project manually and rebuild.</source>
          <target state="translated">당신은 협의 할 수있다 &lt;a href=&quot;https://github.com/ncuillery/rn-diff&quot;&gt;RN-DIFF를&lt;/a&gt; 프로젝트 템플릿 파일의 변경 사항이 있다면 볼 수 있습니다. 없는 경우 프로젝트를 다시 빌드하고 개발을 계속하십시오. 사소한 변경의 경우 프로젝트를 수동으로 업데이트하고 다시 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="781c8a3f718ac782a0c45c3c1596e195e0534037" translate="yes" xml:space="preserve">
          <source>You may even go a step further and keep your app running as new versions of your files are injected into the JavaScript bundle automatically by enabling &lt;a href=&quot;https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html&quot;&gt;Hot Reloading&lt;/a&gt; from the Developer Menu. This will allow you to persist the app's state through reloads.</source>
          <target state="translated">한 단계 더 나아가 개발자 메뉴에서 &lt;a href=&quot;https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html&quot;&gt;핫 리로딩&lt;/a&gt; 을 활성화하여 새로운 버전의 파일이 JavaScript 번들에 자동으로 주입되므로 앱이 계속 실행되도록 할 수 있습니다. 이렇게하면 새로 고침을 통해 앱의 상태를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2cc0ccf40f5ef169e059ea13ad1f0ea3efbb688" translate="yes" xml:space="preserve">
          <source>You may have noticed that we passed all of the props down to the child view using &lt;code&gt;{...this.props}&lt;/code&gt;. The reason for this is that &lt;code&gt;TouchableOpacity&lt;/code&gt; is actually a composite component, and so in addition to depending on &lt;code&gt;setNativeProps&lt;/code&gt; on its child, it also requires that the child perform touch handling. To do this, it passes on &lt;a href=&quot;view#onmoveshouldsetresponder&quot;&gt;various props&lt;/a&gt; that call back to the &lt;code&gt;TouchableOpacity&lt;/code&gt; component. &lt;code&gt;TouchableHighlight&lt;/code&gt;, in contrast, is backed by a native view and only requires that we implement &lt;code&gt;setNativeProps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{...this.props}&lt;/code&gt; 를 사용하여 모든 소품을 하위 뷰로 전달한 것을 알 수 있습니다 . 그 이유는 &lt;code&gt;TouchableOpacity&lt;/code&gt; 가 실제로 복합 구성 요소이므로 자식의 &lt;code&gt;setNativeProps&lt;/code&gt; 에 따라 자식이 터치 처리를 수행해야하기 때문입니다. 이를 위해 &lt;code&gt;TouchableOpacity&lt;/code&gt; 구성 요소를 다시 호출 하는 &lt;a href=&quot;view#onmoveshouldsetresponder&quot;&gt;다양한 소품&lt;/a&gt; 을 전달 합니다. 대조적으로 &lt;code&gt;TouchableHighlight&lt;/code&gt; 는 기본보기로 지원되며 &lt;code&gt;setNativeProps&lt;/code&gt; 만 구현하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="27ba13e636a9c5fd53556daf78d1eadfc9fbb1d0" translate="yes" xml:space="preserve">
          <source>You may notice that there is no obvious way to read the current value while animating. This is because the value may only be known in the native runtime due to optimizations. If you need to run JavaScript in response to the current value, there are two approaches:</source>
          <target state="translated">애니메이션하는 동안 현재 값을 읽을 수있는 확실한 방법이 없다는 것을 알 수 있습니다. 최적화로 인해 기본 런타임에서만 값을 알 수 있기 때문입니다. 현재 값에 대한 응답으로 JavaScript를 실행해야하는 경우 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7ba2bab9ae9d509089fad46c490ec2151f326b8" translate="yes" xml:space="preserve">
          <source>You may specify a React Native version by passing an argument: &lt;code&gt;react-native-git-upgrade X.Y.Z&lt;/code&gt;</source>
          <target state="translated">인수를 전달하여 React Native 버전을 지정할 수 있습니다. &lt;code&gt;react-native-git-upgrade X.Y.Z&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89a308694aab10ea308a5603616f5e9b1b3b6873" translate="yes" xml:space="preserve">
          <source>You might also see something like this:</source>
          <target state="translated">다음과 같은 것을 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf12a4a94180de4fa0851cac88a9b66668abab2e" translate="yes" xml:space="preserve">
          <source>You might not want to use &lt;code&gt;&amp;lt;ImageBackground&amp;gt;&lt;/code&gt; in some cases, since the implementation is very simple. Refer to &lt;code&gt;&amp;lt;ImageBackground&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/Libraries/Image/ImageBackground.js&quot;&gt;source code&lt;/a&gt; for more insight, and create your own custom component when needed.</source>
          <target state="translated">구현이 매우 간단하기 때문에 경우에 따라 &lt;code&gt;&amp;lt;ImageBackground&amp;gt;&lt;/code&gt; 를 사용하지 않을 수도 있습니다 . 참조 &lt;code&gt;&amp;lt;ImageBackground&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/Libraries/Image/ImageBackground.js&quot;&gt;소스 코드를&lt;/a&gt; 더 통찰력, 필요할 때 사용자 정의 구성 요소를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="950c9445134bd5862ff54030382a515a5e4165d2" translate="yes" xml:space="preserve">
          <source>You must create a class extension of RCTConvert like so:</source>
          <target state="translated">다음과 같이 RCTConvert의 클래스 확장을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="ed675c5849e11be88810b21edc1fc550712ca994" translate="yes" xml:space="preserve">
          <source>You need to include the &lt;code&gt;NSLocationWhenInUseUsageDescription&lt;/code&gt; key in Info.plist to enable geolocation when using the app. Geolocation is enabled by default when you create a project with &lt;code&gt;react-native init&lt;/code&gt;.</source>
          <target state="translated">앱을 사용할 때 지리적 위치를 활성화 하려면 &lt;code&gt;NSLocationWhenInUseUsageDescription&lt;/code&gt; 키를 Info.plist 에 포함해야합니다 . &lt;code&gt;react-native init&lt;/code&gt; 로 프로젝트를 작성할 때 기본적으로 위치 정보가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3c8eb4ff813d65ce203daa629b3e02ff1fe2ce1" translate="yes" xml:space="preserve">
          <source>You should also make sure your code passes &lt;a href=&quot;https://flowtype.org/&quot;&gt;Flow&lt;/a&gt; tests. These can be run using:</source>
          <target state="translated">또한 코드가 &lt;a href=&quot;https://flowtype.org/&quot;&gt;흐름&lt;/a&gt; 테스트를 통과했는지 확인해야합니다 . 이들은 다음을 사용하여 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cfba25ca3915cceba4c9e214736c9e082f582ac" translate="yes" xml:space="preserve">
          <source>You should be able to use the &lt;em&gt;Run&lt;/em&gt; button to run your app on a device. Android Studio won't start the packager automatically, you'll need to start it by running &lt;code&gt;npm start&lt;/code&gt; on the command line.</source>
          <target state="translated">&lt;em&gt;실행&lt;/em&gt; 버튼 을 사용하여 장치에서 앱을 실행할 수 있어야합니다 . Android Studio는 패키저를 자동으로 시작하지 않으므로 명령 줄 에서 &lt;code&gt;npm start&lt;/code&gt; 를 실행하여 패키지를 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5bbaace07d83fadbb504724a1b71d1be8153ddf5" translate="yes" xml:space="preserve">
          <source>You should call this method in rare circumstances only, such as when a new version of the app removes support for all types of remote notifications. Users can temporarily prevent apps from receiving remote notifications through the Notifications section of the Settings app. Apps unregistered through this method can always re-register.</source>
          <target state="translated">새 버전의 앱이 모든 유형의 원격 알림에 대한 지원을 제거하는 경우와 같이 드문 상황에서만이 메소드를 호출해야합니다. 사용자는 설정 앱의 알림 섹션을 통해 앱이 원격 알림을받는 것을 일시적으로 막을 수 있습니다. 이 방법으로 등록되지 않은 앱은 항상 다시 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fe61ad49e4dbb8769e86621872886f880aeb109" translate="yes" xml:space="preserve">
          <source>You should get a higher resolution image if you are on a high pixel density device. A good rule of thumb is to multiply the size of the image you display by the pixel ratio.</source>
          <target state="translated">픽셀 밀도가 높은 장치를 사용하는 경우 더 높은 해상도의 이미지를 얻을 수 있습니다. 일반적으로 표시되는 이미지의 크기에 픽셀 비율을 곱하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="570a328395101e0b10083d705313b0bece5ea104" translate="yes" xml:space="preserve">
          <source>You should now be ready to build your app using unbundling and inline requires. Make sure you measure the before and after startup times.</source>
          <target state="translated">번들링 및 인라인 요구 사항을 사용하여 앱을 빌드 할 준비가되었습니다. 시작 전과 후에 시간을 측정하십시오.</target>
        </trans-unit>
        <trans-unit id="73c0500bf27b293dfc24b4474cf644139404f51b" translate="yes" xml:space="preserve">
          <source>You should re-enable ATS prior to building your app for production by removing the &lt;code&gt;localhost&lt;/code&gt; entry from the &lt;code&gt;NSExceptionDomains&lt;/code&gt; dictionary in your &lt;code&gt;Info.plist&lt;/code&gt; file in the &lt;code&gt;ios/&lt;/code&gt; folder. You can also re-enable ATS from within Xcode by opening your target properties under the Info pane and editing the App Transport Security Settings entry.</source>
          <target state="translated">&lt;code&gt;ios/&lt;/code&gt; 폴더 의 &lt;code&gt;Info.plist&lt;/code&gt; 파일에있는 &lt;code&gt;NSExceptionDomains&lt;/code&gt; 사전에서 &lt;code&gt;localhost&lt;/code&gt; 항목을 제거하여 프로덕션 용 앱을 빌드하기 전에 ATS를 다시 활성화해야 합니다. 정보 창에서 대상 속성을 열고 앱 전송 보안 설정 항목을 편집하여 Xcode 내에서 ATS를 다시 활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3294d726795f655686df6c0bf421d95b20271489" translate="yes" xml:space="preserve">
          <source>You should see output such as:</source>
          <target state="translated">다음과 같은 출력이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="af1ccf7485eac6e383c6d5023bd241c2ef684e98" translate="yes" xml:space="preserve">
          <source>You should see your new app running in the iOS Simulator shortly.</source>
          <target state="translated">iOS 시뮬레이터에서 새 앱이 곧 실행되는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d4147309c2ab7915238811f7ea2ac8e90fcfca5" translate="yes" xml:space="preserve">
          <source>You should see zebra stripes as in the screenshot above. If you don't, try profiling on a different device: Samsung has been known to have issues displaying vsyncs while the Nexus series is generally pretty reliable.</source>
          <target state="translated">위의 스크린 샷과 같이 얼룩말 줄무늬가 나타납니다. 그렇지 않은 경우 다른 기기에서 프로파일 링을 시도해보십시오. 삼성은 vsync를 표시하는 데 문제가있는 것으로 알려져 있지만 Nexus 시리즈는 일반적으로 매우 안정적입니다.</target>
        </trans-unit>
        <trans-unit id="748fb19e0df25ea8e580ad303b14a02d4f9142e5" translate="yes" xml:space="preserve">
          <source>You want the line that represents your phone. If you're in doubt, try unplugging your phone and running the command again:</source>
          <target state="translated">전화기를 나타내는 회선이 필요합니다. 확실하지 않은 경우, 전화를 뽑고 명령을 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3e672edf9d33a31d66b82bc00b7bf093ae521b1c" translate="yes" xml:space="preserve">
          <source>You will also need to install the Xcode Command Line Tools. Open Xcode, then choose &quot;Preferences...&quot; from the Xcode menu. Go to the Locations panel and install the tools by selecting the most recent version in the Command Line Tools dropdown.</source>
          <target state="translated">Xcode 명령 행 도구도 설치해야합니다. Xcode를 연 다음 Xcode 메뉴에서 &quot;환경 설정 ...&quot;을 선택하십시오. 위치 패널로 이동하여 명령 행 도구 드롭 다운에서 최신 버전을 선택하여 도구를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="fa36f00805d3bc4c1ce291fc022fe8ae20ea9d8c" translate="yes" xml:space="preserve">
          <source>You will also need to update your applications to load the JavaScript bundle from the new port. If running on device from Xcode, you can do this by updating occurrences of &lt;code&gt;8081&lt;/code&gt; to your chosen port in the &lt;code&gt;node_modules/react-native/React/React.xcodeproj/project.pbxproj&lt;/code&gt; file.</source>
          <target state="translated">또한 새 포트에서 JavaScript 번들을로드하려면 애플리케이션을 업데이트해야합니다. Xcode의 장치에서 실행중인 경우 &lt;code&gt;node_modules/react-native/React/React.xcodeproj/project.pbxproj&lt;/code&gt; 파일 에서 선택한 포트로 &lt;code&gt;8081&lt;/code&gt; 의 발생을 업데이트하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb6b9106707c2e5c5d04c7a0920a411aa939fc20" translate="yes" xml:space="preserve">
          <source>You will need Node, Watchman, the React Native command line interface, a JDK, and Android Studio.</source>
          <target state="translated">Node, Watchman, React Native 명령 행 인터페이스, JDK 및 Android Studio가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="02f78cee970d7a8b6a23a6f0d88429a7f5ac0b77" translate="yes" xml:space="preserve">
          <source>You will need Node, Watchman, the React Native command line interface, and Xcode.</source>
          <target state="translated">Node, Watchman, React Native 명령 행 인터페이스 및 Xcode가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a6b31eeacaf7a3453a37a99ae88c0b283ac2980b" translate="yes" xml:space="preserve">
          <source>You will need Node, the React Native command line interface, Python2, a JDK, and Android Studio.</source>
          <target state="translated">Node, React Native 명령 행 인터페이스, Python2, JDK 및 Android Studio가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="db0b0a7a022b32cbabb93965812c8a8c794a42d9" translate="yes" xml:space="preserve">
          <source>You will need Node, the React Native command line interface, a JDK, and Android Studio.</source>
          <target state="translated">Node, React Native 명령 행 인터페이스, JDK 및 Android Studio가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="503158318085781199bf96007022da941be0b0e2" translate="yes" xml:space="preserve">
          <source>You will need an Android device to run your React Native Android app. This can be either a physical Android device, or more commonly, you can use an Android Virtual Device which allows you to emulate an Android device on your computer.</source>
          <target state="translated">React Native Android 앱을 실행하려면 Android 장치가 필요합니다. 이것은 실제 Android 장치이거나보다 일반적으로 컴퓨터에서 Android 장치를 에뮬레이트 할 수있는 Android 가상 장치를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73e229ec803ba5f5b9d55e6ae88be684da731154" translate="yes" xml:space="preserve">
          <source>You will need to add some optional modules in &lt;code&gt;android/app/build.gradle&lt;/code&gt;, depending on the needs of your app.</source>
          <target state="translated">&lt;code&gt;android/app/build.gradle&lt;/code&gt; 의 요구에 따라 android / app / build.gradle 에 옵션 모듈을 추가 해야합니다.</target>
        </trans-unit>
        <trans-unit id="952b2e68abb2c2ae42df9bb2f68c539d724459ad" translate="yes" xml:space="preserve">
          <source>You will need to build React Native from source if you want to work on a new feature/bug fix, try out the latest features which are not released yet, or maintain your own fork with patches that cannot be merged to the core.</source>
          <target state="translated">새로운 기능 / 버그 수정에 대해 작업하거나 아직 릴리스되지 않은 최신 기능을 시도하거나 코어에 병합 할 수없는 패치를 사용하여 자체 포크를 유지하려면 소스에서 React Native를 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="21d8d26075e0fc2d2c143dceda4836024e7013e6" translate="yes" xml:space="preserve">
          <source>You will need to rebuild your app for changes to take effect in certain situations:</source>
          <target state="translated">특정 상황에서 변경 사항을 적용하려면 앱을 다시 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="18d868b50d49d78ec0d6225ebc836bfb0509f18c" translate="yes" xml:space="preserve">
          <source>You will never need to instantiate &lt;code&gt;PushNotificationIOS&lt;/code&gt; yourself. Listening to the &lt;code&gt;notification&lt;/code&gt; event and invoking &lt;code&gt;getInitialNotification&lt;/code&gt; is sufficient.</source>
          <target state="translated">&lt;code&gt;PushNotificationIOS&lt;/code&gt; 를 직접 인스턴스화 할 필요는 없습니다 . &lt;code&gt;notification&lt;/code&gt; 이벤트를 듣고 &lt;code&gt;getInitialNotification&lt;/code&gt; 을 호출하는 것으로 충분합니다.</target>
        </trans-unit>
        <trans-unit id="46e037fcad128027f9ae95b446e8dc9b3bb089ca" translate="yes" xml:space="preserve">
          <source>You will normally use a combination of &lt;code&gt;flexDirection&lt;/code&gt;, &lt;code&gt;alignItems&lt;/code&gt;, and &lt;code&gt;justifyContent&lt;/code&gt; to achieve the right layout.</source>
          <target state="translated">일반적으로 올바른 레이아웃을 얻으려면 &lt;code&gt;flexDirection&lt;/code&gt; , &lt;code&gt;alignItems&lt;/code&gt; 및 &lt;code&gt;justifyContent&lt;/code&gt; 조합을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="3f00062b6367e9be3be4f8da8f96bab01a645b95" translate="yes" xml:space="preserve">
          <source>You will receive a warning if you expend resources unnecessarily by emitting an event while there are no listeners. To avoid this, and to optimize your module's workload (e.g. by unsubscribing from upstream notifications or pausing background tasks), you can override &lt;code&gt;startObserving&lt;/code&gt; and &lt;code&gt;stopObserving&lt;/code&gt; in your &lt;code&gt;RCTEventEmitter&lt;/code&gt; subclass.</source>
          <target state="translated">리스너가없는 상태에서 이벤트를 생성하여 불필요하게 자원을 소비하면 경고가 표시됩니다. 이를 피하고 (예 : 업스트림 알림을 구독 취소하거나 백그라운드 작업을 일시 중지하여) 모듈의 작업 부하를 최적화하기 위해 &lt;code&gt;RCTEventEmitter&lt;/code&gt; 하위 클래스 에서 &lt;code&gt;startObserving&lt;/code&gt; 및 &lt;code&gt;stopObserving&lt;/code&gt; 을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="778864f30190ef89fd2e0bf413b095a948ad3a8b" translate="yes" xml:space="preserve">
          <source>You would then call this from JavaScript by using either:</source>
          <target state="translated">그런 다음 다음 중 하나를 사용하여 JavaScript에서이를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="c5d08337bb19fe2e698846fdcef23dc3581ed1ab" translate="yes" xml:space="preserve">
          <source>You'll need to input this into your udev rules in order to get up and running:</source>
          <target state="translated">시작하고 실행하려면이를 udev 규칙에 입력해야합니다.</target>
        </trans-unit>
        <trans-unit id="814c02b8f67242dde42655f61330af54b8ba8616" translate="yes" xml:space="preserve">
          <source>You'll need to listen to &lt;code&gt;onActivityResult&lt;/code&gt; if you want to get results from an activity you started with &lt;code&gt;startActivityForResult&lt;/code&gt;. To do this, you must extend &lt;code&gt;BaseActivityEventListener&lt;/code&gt; or implement &lt;code&gt;ActivityEventListener&lt;/code&gt;. The former is preferred as it is more resilient to API changes. Then, you need to register the listener in the module's constructor,</source>
          <target state="translated">&lt;code&gt;startActivityForResult&lt;/code&gt; 로 시작한 활동에서 결과를 얻으려면 &lt;code&gt;onActivityResult&lt;/code&gt; 를 청취해야합니다 . 이를 위해서는 &lt;code&gt;BaseActivityEventListener&lt;/code&gt; 를 확장 하거나 &lt;code&gt;ActivityEventListener&lt;/code&gt; 를 구현 해야합니다 . 전자는 API 변경에 대해 더 탄력적이므로 선호됩니다. 그런 다음 모듈의 생성자에 리스너를 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f57423073518c8c00fd0b54496e5f87e02f6e2c" translate="yes" xml:space="preserve">
          <source>You'll see a &lt;a href=&quot;debugging#in-app-errors-and-warnings&quot;&gt;red screen with an error&lt;/a&gt;. This is OK. The following steps will fix that.</source>
          <target state="translated">&lt;a href=&quot;debugging#in-app-errors-and-warnings&quot;&gt;오류가&lt;/a&gt; 있는 빨간색 화면이 표시 됩니다. 괜찮습니다. 다음 단계에서이를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="3b9750d0441f77b78cccfe3183764d2f6f8691ba" translate="yes" xml:space="preserve">
          <source>You'll see that after removing the phone, the line which has the phone model (&quot;Motorola PCS&quot; in this case) disappeared from the list. This is the line that we care about.</source>
          <target state="translated">전화기를 제거하면 전화기 모델 (이 경우 &quot;Motorola PCS&quot;)이있는 회선이 목록에서 사라졌습니다. 이것이 우리가 걱정하는 선입니다.</target>
        </trans-unit>
        <trans-unit id="1e900f0b63f59953cc12b1f25296751e1eee8e26" translate="yes" xml:space="preserve">
          <source>You're constructing new UI during the animation/interaction (e.g. loading in new content during a scroll).</source>
          <target state="translated">애니메이션 / 상호 작용 중에 새 UI를 구성하고 있습니다 (예 : 스크롤 중에 새 내용에로드).</target>
        </trans-unit>
        <trans-unit id="56bc6d5e7560685cf52ac299be4c888789e2f606" translate="yes" xml:space="preserve">
          <source>You're not limited to the components and APIs bundled with React Native. React Native is a community of thousands of developers. If you're looking for a library that does something specific, search the npm registry for packages mentioning &lt;a href=&quot;https://www.npmjs.com/search?q=react-native&amp;amp;page=1&amp;amp;ranking=optimal&quot;&gt;react-native&lt;/a&gt;, or check out &lt;a href=&quot;http://www.awesome-react-native.com/&quot;&gt;Awesome React Native&lt;/a&gt; for a curated list.</source>
          <target state="translated">React Native와 함께 번들로 제공되는 구성 요소 및 API로 제한되지 않습니다. React Native는 수천 명의 개발자로 구성된 커뮤니티입니다. 특정 작업을 수행하는 라이브러리를 찾고 있다면 npm 레지스트리에서 &lt;a href=&quot;https://www.npmjs.com/search?q=react-native&amp;amp;page=1&amp;amp;ranking=optimal&quot;&gt;react-native가&lt;/a&gt; 언급 된 패키지를 검색 하거나 &lt;a href=&quot;http://www.awesome-react-native.com/&quot;&gt;Awesome React Native&lt;/a&gt; 에서 선별 된 목록을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8bca020dee972ef4656568d4ce477e9862ee703f" translate="yes" xml:space="preserve">
          <source>Your Xcode install will come with a variety of Simulators running the latest OS. You may need to manually create a new Simulator to match what the &lt;code&gt;XCODE_DESTINATION&lt;/code&gt; param in the test script.</source>
          <target state="translated">Xcode 설치에는 최신 OS를 실행하는 다양한 시뮬레이터가 제공됩니다. 테스트 스크립트에서 &lt;code&gt;XCODE_DESTINATION&lt;/code&gt; 매개 변수 와 일치하도록 새 시뮬레이터를 수동으로 작성해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0b1efdd94b57330be507231a4e0b04db688fb09" translate="yes" xml:space="preserve">
          <source>Your enum will then be automatically unwrapped using the selector provided (&lt;code&gt;integerValue&lt;/code&gt; in the above example) before being passed to your exported method.</source>
          <target state="translated">그런 다음 내 보낸 메소드로 전달되기 전에 제공된 선택기 ( 위 예제에서 &lt;code&gt;integerValue&lt;/code&gt; ) 를 사용하여 열거 형이 자동으로 래핑 해제됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f6e4cbcdd1178a05b660334c3ef952f9bff5b38" translate="yes" xml:space="preserve">
          <source>Your first pull request</source>
          <target state="translated">첫 번째 풀 요청</target>
        </trans-unit>
        <trans-unit id="eac2e01a298dd91c192ddb9cf02f464e8444e696" translate="yes" xml:space="preserve">
          <source>Your grandparents' generation called movies &lt;a href=&quot;https://www.youtube.com/watch?v=F1i40rnpOsA&quot;&gt;&quot;moving pictures&quot;&lt;/a&gt; for a reason: realistic motion in video is an illusion created by quickly changing static images at a consistent speed. We refer to each of these images as frames. The number of frames that is displayed each second has a direct impact on how smooth and ultimately life-like a video (or user interface) seems to be. iOS devices display 60 frames per second, which gives you and the UI system about 16.67ms to do all of the work needed to generate the static image (frame) that the user will see on the screen for that interval. If you are unable to do the work necessary to generate that frame within the allotted 16.67ms, then you will &quot;drop a frame&quot; and the UI will appear unresponsive.</source>
          <target state="translated">조부모의 세대는 영화 &lt;a href=&quot;https://www.youtube.com/watch?v=F1i40rnpOsA&quot;&gt;&quot;&lt;/a&gt; 동영상 &quot; 이라고 불리는 이유가 있습니다. 비디오의 사실적인 움직임은 정적 이미지를 일관된 속도로 빠르게 변경함으로써 만들어지는 환상입니다. 이러한 각 이미지를 프레임이라고합니다. 초당 표시되는 프레임 수는 비디오 (또는 사용자 인터페이스)가 얼마나 매끄럽고 실제와 같은 모양에 직접적인 영향을 미칩니다. iOS 장치는 초당 60 프레임을 표시하므로 사용자와 UI 시스템에 약 16.67ms 동안 사용자가 해당 간격 동안 화면에 표시되는 정적 이미지 (프레임)를 생성하는 데 필요한 모든 작업을 수행 할 수 있습니다. 할당 된 16.67ms 내에 해당 프레임을 생성하는 데 필요한 작업을 수행 할 수없는 경우 &quot;프레임 삭제&quot;가 발생하고 UI가 응답하지 않는 것처럼 보입니다.</target>
        </trans-unit>
        <trans-unit id="769bfa5f03e060a13c1f677fed41e2ad5a58f162" translate="yes" xml:space="preserve">
          <source>Your own components can also use &lt;code&gt;props&lt;/code&gt;. This lets you make a single component that is used in many different places in your app, with slightly different properties in each place. Just refer to &lt;code&gt;this.props&lt;/code&gt; in your &lt;code&gt;render&lt;/code&gt; function. Here's an example:</source>
          <target state="translated">자신의 컴포넌트는 &lt;code&gt;props&lt;/code&gt; 를 사용할 수도 있습니다 . 이를 통해 앱의 여러 장소에서 사용되는 단일 구성 요소를 만들 수 있으며 각 장소마다 약간 다른 속성을 갖습니다. &lt;code&gt;render&lt;/code&gt; 함수 에서 &lt;code&gt;this.props&lt;/code&gt; 를 참조하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5000b13e060644e90de9443d1178c06034104729" translate="yes" xml:space="preserve">
          <source>[() =&amp;gt; void]</source>
          <target state="translated">[() =&amp;gt; 무효]</target>
        </trans-unit>
        <trans-unit id="73c4b2350ec1c928aaef3037d1e96f0dcb8822a1" translate="yes" xml:space="preserve">
          <source>[(info: {distanceFromEnd: number}) =&amp;gt; void]</source>
          <target state="translated">[(정보 : {distanceFromEnd : number}) =&amp;gt; void]</target>
        </trans-unit>
        <trans-unit id="d8f75af6c107f12d8fdf3f741a92584bfa63f9b0" translate="yes" xml:space="preserve">
          <source>[(info: {section: SectionT}) =&amp;gt; ?React.Element</source>
          <target state="translated">[(정보 : {section : SectionT}) =&amp;gt;? React.Element</target>
        </trans-unit>
        <trans-unit id="7398acee8836da189fc6ec65e5808ab05a00cd8a" translate="yes" xml:space="preserve">
          <source>[Android] on another &lt;code&gt;Activity&lt;/code&gt; (even if it was launched by your app)</source>
          <target state="translated">[Android] 다른 &lt;code&gt;Activity&lt;/code&gt; (앱에서 시작한 경우에도)</target>
        </trans-unit>
        <trans-unit id="49e74613f88c17c59d5725868db2125429964eef" translate="yes" xml:space="preserve">
          <source>[ItemSeparatorComponent]</source>
          <target state="translated">[ItemSeparatorComponent]</target>
        </trans-unit>
        <trans-unit id="e0ed845a33cdd8d3eab20190c222d33f5963a358" translate="yes" xml:space="preserve">
          <source>[ReactClass</source>
          <target state="translated">[ReactClass</target>
        </trans-unit>
        <trans-unit id="c293f4d13a55346c59a1fb50514e56f3dbfd875c" translate="yes" xml:space="preserve">
          <source>[boolean]</source>
          <target state="translated">[boolean]</target>
        </trans-unit>
        <trans-unit id="73d1b860bac8cd35d12d37a864710c2f9be61ac1" translate="yes" xml:space="preserve">
          <source>[component, function, element]</source>
          <target state="translated">[구성 요소, 기능, 요소]</target>
        </trans-unit>
        <trans-unit id="2473b064b470c034bab781dc2fa45ca3fd8c6d98" translate="yes" xml:space="preserve">
          <source>[keyExtractor]</source>
          <target state="translated">[keyExtractor]</target>
        </trans-unit>
        <trans-unit id="dff03de3651bf9dc235ca5c36936d8223925592e" translate="yes" xml:space="preserve">
          <source>[key]</source>
          <target state="translated">[key]</target>
        </trans-unit>
        <trans-unit id="032308248283b844d371a9a1d7fac7ee21dd4697" translate="yes" xml:space="preserve">
          <source>[number]</source>
          <target state="translated">[number]</target>
        </trans-unit>
        <trans-unit id="842d583b2875021a4a8e566045fd6f760e0a1894" translate="yes" xml:space="preserve">
          <source>[onPress]</source>
          <target state="translated">[onPress]</target>
        </trans-unit>
        <trans-unit id="3ef46ad1d3cd79ef61df9b337ca0d79a62e98823" translate="yes" xml:space="preserve">
          <source>[renderItem]</source>
          <target state="translated">[renderItem]</target>
        </trans-unit>
        <trans-unit id="03ea215e5c07d4153641576a6847c05b03ce0a87" translate="yes" xml:space="preserve">
          <source>[style]</source>
          <target state="translated">[style]</target>
        </trans-unit>
        <trans-unit id="be9b9467602e0adbff4fefabe59f7c5c0b33c9ad" translate="yes" xml:space="preserve">
          <source>[text]</source>
          <target state="translated">[text]</target>
        </trans-unit>
        <trans-unit id="59a952d1f496e4f260f9465544a748881a055c18" translate="yes" xml:space="preserve">
          <source>a boolean value signifying success or failure</source>
          <target state="translated">성공 또는 실패를 나타내는 부울 값</target>
        </trans-unit>
        <trans-unit id="f187418f34688f4162ff8721662d503620ad61b4" translate="yes" xml:space="preserve">
          <source>a string that, in the case of success, indicates the method of sharing</source>
          <target state="translated">성공한 경우 공유 방법을 나타내는 문자열</target>
        </trans-unit>
        <trans-unit id="84aa838f8d54030ce50e158792dee00013b50290" translate="yes" xml:space="preserve">
          <source>accessibilityComponentType (Android)</source>
          <target state="translated">accessibilityComponentType (Android)</target>
        </trans-unit>
        <trans-unit id="06b6c0c660dbb7531480c15f354e1fe3507cf93c" translate="yes" xml:space="preserve">
          <source>accessibilityElementsHidden (iOS)</source>
          <target state="translated">accessibilityElementsHidden (iOS)</target>
        </trans-unit>
        <trans-unit id="fbcbf57394442118c8ea36d1a3fe687626731bbb" translate="yes" xml:space="preserve">
          <source>accessibilityLabel (iOS, Android)</source>
          <target state="translated">접근성 레이블 (iOS, Android)</target>
        </trans-unit>
        <trans-unit id="322a698dc40afa82b6bdc41e5d274b015ae14b7e" translate="yes" xml:space="preserve">
          <source>accessibilityLiveRegion (Android)</source>
          <target state="translated">accessibilityLiveRegion (Android)</target>
        </trans-unit>
        <trans-unit id="029dc7ee233c47d4248222efdf2772dadefe988d" translate="yes" xml:space="preserve">
          <source>accessibilityTraits (iOS)</source>
          <target state="translated">접근성 특성 (iOS)</target>
        </trans-unit>
        <trans-unit id="8dd6723470a05cb21d65b58be9f717de9045bd05" translate="yes" xml:space="preserve">
          <source>accessibilityViewIsModal (iOS)</source>
          <target state="translated">accessibilityViewIsModal (iOS)</target>
        </trans-unit>
        <trans-unit id="1a71dbddd7f795a0823c5714c09fb4a741ad6a7b" translate="yes" xml:space="preserve">
          <source>accessible (iOS, Android)</source>
          <target state="translated">액세스 가능 (iOS, Android)</target>
        </trans-unit>
        <trans-unit id="8f43adcb5ed5c08e677c192f79211d9f437ba3cc" translate="yes" xml:space="preserve">
          <source>alert, badge, or sound</source>
          <target state="translated">경고, 배지 또는 소리</target>
        </trans-unit>
        <trans-unit id="0c7852bd6b9e7bc4d251bb1539d64d9b5ee7ef45" translate="yes" xml:space="preserve">
          <source>aliceblue (#f0f8ff)</source>
          <target state="translated">aliceblue (# f0f8ff)</target>
        </trans-unit>
        <trans-unit id="ea8276549a72c563f9c2a6141bc24d0d958f81e9" translate="yes" xml:space="preserve">
          <source>and call it from JavaScript:</source>
          <target state="translated">JavaScript에서 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="efdc90fe8ef06eb091a920af0bfec15e51be6c04" translate="yes" xml:space="preserve">
          <source>android.permission.INTERNET - Required for debug mode.</source>
          <target state="translated">android.permission.INTERNET-디버그 모드에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="67c64c90a732a5f7534ea771d2c41b458de0de81" translate="yes" xml:space="preserve">
          <source>android.permission.READ_EXTERNAL_STORAGE - Not required for debug or production.</source>
          <target state="translated">android.permission.READ_EXTERNAL_STORAGE-디버그 또는 프로덕션에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fdb2777fc4681f734d74b8a8ef1448519c0297d3" translate="yes" xml:space="preserve">
          <source>android.permission.READ_PHONE_STATE - Not required for debug or production.</source>
          <target state="translated">android.permission.READ_PHONE_STATE-디버그 또는 프로덕션에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="180d9bdf349daa14dccd4872206de9b3b3b6fdb4" translate="yes" xml:space="preserve">
          <source>android.permission.SYSTEM_ALERT_WINDOW - Required for debug mode.</source>
          <target state="translated">android.permission.SYSTEM_ALERT_WINDOW-디버그 모드에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="29a92d6931b4b1c798ec9e0d9d96bb6f3f9b4ca4" translate="yes" xml:space="preserve">
          <source>android.permission.WRITE_EXTERNAL_STORAGE - Not required for debug or production.</source>
          <target state="translated">android.permission.WRITE_EXTERNAL_STORAGE-디버그 또는 프로덕션에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b0332229dff64e46e863e15d5632a8bc3893c4c" translate="yes" xml:space="preserve">
          <source>android:supportsRtl=&quot;true&quot;</source>
          <target state="translated">android:supportsRtl=&quot;true&quot;</target>
        </trans-unit>
        <trans-unit id="69774d78cc8b98669f1898f54ed36fd8278e8351" translate="yes" xml:space="preserve">
          <source>animated</source>
          <target state="translated">animated</target>
        </trans-unit>
        <trans-unit id="a6b8b600c27ce95ddcf867cfc503564c89fe816a" translate="yes" xml:space="preserve">
          <source>animation</source>
          <target state="translated">animation</target>
        </trans-unit>
        <trans-unit id="50d04ec3400dc1ff9a0882fb5d0f4e3fd4626429" translate="yes" xml:space="preserve">
          <source>antiquewhite (#faebd7)</source>
          <target state="translated">앤티크 화이트 (# faebd7)</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="13162eeafb5ba31c90c55a7e02877d7dd34bce19" translate="yes" xml:space="preserve">
          <source>aqua (#00ffff)</source>
          <target state="translated">아쿠아 (# 00ffff)</target>
        </trans-unit>
        <trans-unit id="c77ed3972382738299a36141d02d1ec83e095e02" translate="yes" xml:space="preserve">
          <source>aquamarine (#7fffd4)</source>
          <target state="translated">아쿠아 마린 (# 7fffd4)</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="f85a0203fcab56d4206d25fdee4758ed19da7056" translate="yes" xml:space="preserve">
          <source>array (&lt;code&gt;NSArray&lt;/code&gt;) of any types from this list</source>
          <target state="translated">&lt;code&gt;NSArray&lt;/code&gt; 스트로부터 임의의 형태의 배열 ( NSArray )</target>
        </trans-unit>
        <trans-unit id="daae6fd01fb89d1dcfbf0f08afd1e382893cc82d" translate="yes" xml:space="preserve">
          <source>array of &lt;a href=&quot;colors&quot;&gt;color&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;colors&quot;&gt;색의&lt;/a&gt; 배열</target>
        </trans-unit>
        <trans-unit id="32559df9fae031d0fa0a53adaaae864181e3c589" translate="yes" xml:space="preserve">
          <source>array of &lt;a href=&quot;sectionlist#section&quot;&gt;Section&lt;/a&gt;s</source>
          <target state="translated">&lt;a href=&quot;sectionlist#section&quot;&gt;섹션&lt;/a&gt; 의 배열</target>
        </trans-unit>
        <trans-unit id="69214eaa592f44a2ea3cdb267dae61993e1f4cd5" translate="yes" xml:space="preserve">
          <source>array of ImageSourcePropTypes, number</source>
          <target state="translated">ImageSourcePropType의 배열, 숫자</target>
        </trans-unit>
        <trans-unit id="24154b3afeba6bc4e71a9819e9ee3f8f0c09052c" translate="yes" xml:space="preserve">
          <source>array of ViewabilityConfigCallbackPair</source>
          <target state="translated">ViewabilityConfigCallbackPair 배열</target>
        </trans-unit>
        <trans-unit id="4314208153d46f4c5dca307e55161fa10e5852a5" translate="yes" xml:space="preserve">
          <source>array of enum('portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right')</source>
          <target state="translated">열거 형 배열 ( '세로', '세로-거꾸로', '가로', '가로 왼쪽', '가로 오른쪽')</target>
        </trans-unit>
        <trans-unit id="aa4a77f0594836430dc3e6a3dc3fc295f78ed65f" translate="yes" xml:space="preserve">
          <source>array of enum('small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums')</source>
          <target state="translated">열거 형 배열 ( '작은 대문자', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums')</target>
        </trans-unit>
        <trans-unit id="3e22ff91d2373d44e7ed854f6acf6201a5196348" translate="yes" xml:space="preserve">
          <source>array of number</source>
          <target state="translated">숫자의 배열</target>
        </trans-unit>
        <trans-unit id="8c8298bd4ca7586d512e342120bb855a0b8d5ee9" translate="yes" xml:space="preserve">
          <source>array of object: {perspective: number}, ,object: {rotate: string}, ,object: {rotateX: string}, ,object: {rotateY: string}, ,object: {rotateZ: string}, ,object: {scale: number}, ,object: {scaleX: number}, ,object: {scaleY: number}, ,object: {translateX: number}, ,object: {translateY: number}, ,object: {skewX: string}, ,object: {skewY: string}</source>
          <target state="translated">객체 배열 : {perspective : number},, object : {rotate : string},, object : {rotateX : string},, object : {rotateY : string},, object : {rotateZ : string},, object : { scale : number},, object : {scaleX : number},, object : {scaleY : number},, object : {translateX : number},, object : {translateY : number},, object : {skewX : string}, , 개체 : {skewY : 문자열}</target>
        </trans-unit>
        <trans-unit id="91c06b246736ca7cd1c1cb63ad6b9452549bcb19" translate="yes" xml:space="preserve">
          <source>array of object: {title: string,icon: optionalImageSource,show: enum('always', 'ifRoom', 'never'),showWithText: bool}</source>
          <target state="translated">객체 배열 : {title : string, icon : optionalImageSource, show : enum ( 'always', 'ifRoom', 'never'), showWithText : bool}</target>
        </trans-unit>
        <trans-unit id="708e01bb3421076ede88ae294bb62436060cefa8" translate="yes" xml:space="preserve">
          <source>array of string</source>
          <target state="translated">문자열 배열</target>
        </trans-unit>
        <trans-unit id="c9b8ec2a04b9b086592fbbe13eaa11dc264268f0" translate="yes" xml:space="preserve">
          <source>array of strings</source>
          <target state="translated">문자열 배열</target>
        </trans-unit>
        <trans-unit id="2b2c0bc940b52f7efa55050c2e8efc4680d17cbf" translate="yes" xml:space="preserve">
          <source>auto (default) - distributes items dynamically according to the user interface idiom. In a horizontally compact environment (e.g. iPhone 5) this value defaults to &lt;code&gt;fill&lt;/code&gt;, in a horizontally regular one (e.g. iPad) it defaults to center.</source>
          <target state="translated">자동 (기본값)-사용자 인터페이스 관용구에 따라 항목을 동적으로 배포합니다. 가로로 컴팩트 한 환경 (예 : iPhone 5)에서이 값은 기본적으로 &lt;code&gt;fill&lt;/code&gt; 로 설정되고 가로로 규칙적인 환경 (예 : iPad)에서는 기본적으로 가운데로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f39a28e0402f6af39e17ce3b11fd97f0d6791a04" translate="yes" xml:space="preserve">
          <source>azure (#f0ffff)</source>
          <target state="translated">푸른 (# f0ffff)</target>
        </trans-unit>
        <trans-unit id="46349c8eb64b7ac8efe7e18f3abf8369265cdee1" translate="yes" xml:space="preserve">
          <source>backgroundPropType</source>
          <target state="translated">backgroundPropType</target>
        </trans-unit>
        <trans-unit id="3c98943fc10636339053a97ee9d4764ecae4c9ec" translate="yes" xml:space="preserve">
          <source>bash: &lt;code&gt;.bash_profile&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt;</source>
          <target state="translated">bash : &lt;code&gt;.bash_profile&lt;/code&gt; 또는 &lt;code&gt;.bashrc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a33f880bea5cca6fbba48b07464b06c0e2637a8e" translate="yes" xml:space="preserve">
          <source>beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either occur on another thread or out of the current stack frame, eg await the returned cookie variable should be used as input into the endAsyncEvent call to end the profile.</source>
          <target state="translated">end가 다른 스레드에서 또는 현재 스택 프레임에서 발생할 수있는 프로파일을 시작한 다음 종료하기위한 beginAsyncEvent / endAsyncEvent (예 : 리턴 된 쿠키 변수를 endAsyncEvent 호출에 대한 입력으로 사용하여 프로파일을 종료해야합니다.)</target>
        </trans-unit>
        <trans-unit id="2d1de878f4e4de8ad2ef4ab9b9c6504e321c9aff" translate="yes" xml:space="preserve">
          <source>beginEvent/endEvent for starting and then ending a profile within the same call stack frame.</source>
          <target state="translated">동일한 호출 스택 프레임 내에서 프로파일을 시작한 다음 종료하기위한 beginEvent / endEvent</target>
        </trans-unit>
        <trans-unit id="a6d8aafc0aa6d4c20af5e317bd7309fdf19b2baf" translate="yes" xml:space="preserve">
          <source>beige (#f5f5dc)</source>
          <target state="translated">베이지 (# f5f5dc)</target>
        </trans-unit>
        <trans-unit id="44e262cb2b10f37f3dfcddec039762ad657c9c5f" translate="yes" xml:space="preserve">
          <source>bisque (#ffe4c4)</source>
          <target state="translated">비스크 (# ffe4c4)</target>
        </trans-unit>
        <trans-unit id="b60a64b90e6293742dc09156d0cf7c4143979d51" translate="yes" xml:space="preserve">
          <source>black (#000000)</source>
          <target state="translated">검은 색 (# 000000)</target>
        </trans-unit>
        <trans-unit id="f15de677bdabf85ad0b35d0d8695171f35bd4d55" translate="yes" xml:space="preserve">
          <source>blanchedalmond (#ffebcd)</source>
          <target state="translated">블랑 헤달 몬드 (#ffebcd)</target>
        </trans-unit>
        <trans-unit id="acbb2d6c8fe7cde36d5c2349299671b6a4b03f84" translate="yes" xml:space="preserve">
          <source>blue (#0000ff)</source>
          <target state="translated">파랑 (# 0000ff)</target>
        </trans-unit>
        <trans-unit id="2405c926152a8f14844a9bfe87cda7f30352ab95" translate="yes" xml:space="preserve">
          <source>blueviolet (#8a2be2)</source>
          <target state="translated">청자색 (# 8a2be2)</target>
        </trans-unit>
        <trans-unit id="f21a3a39f4899ae81057f4da4fd8d098ac090b36" translate="yes" xml:space="preserve">
          <source>blur()</source>
          <target state="translated">blur()</target>
        </trans-unit>
        <trans-unit id="1c1c3f22e9d60b07015111eebe363af1547de8ac" translate="yes" xml:space="preserve">
          <source>blurRadius: the blur radius of the blur filter added to the image</source>
          <target state="translated">blurRadius : 이미지에 추가 된 흐림 필터의 흐림 반경</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="0882402fdcaf11dffe847635d500c9dc33ab645a" translate="yes" xml:space="preserve">
          <source>boolean (&lt;code&gt;BOOL&lt;/code&gt;, &lt;code&gt;NSNumber&lt;/code&gt;)</source>
          <target state="translated">부울 ( &lt;code&gt;BOOL&lt;/code&gt; , &lt;code&gt;NSNumber&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="eb8aca05301575715c44ed691b056c45afc4b7b6" translate="yes" xml:space="preserve">
          <source>borderless</source>
          <target state="translated">borderless</target>
        </trans-unit>
        <trans-unit id="e10ea1afe533dfbfc829b73047b5a2085fdda493" translate="yes" xml:space="preserve">
          <source>brown (#a52a2a)</source>
          <target state="translated">브라운 (# a52a2a)</target>
        </trans-unit>
        <trans-unit id="57d7c82ecdace4f346838b82be466c96f73f2235" translate="yes" xml:space="preserve">
          <source>burlywood (#deb887)</source>
          <target state="translated">벌리 우드 (# deb887)</target>
        </trans-unit>
        <trans-unit id="4623b279c965d4d385ba789a42c847a70dc435a5" translate="yes" xml:space="preserve">
          <source>cadetblue (#5f9ea0)</source>
          <target state="translated">생도 블루 (# 5f9ea0)</target>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="translated">callback</target>
        </trans-unit>
        <trans-unit id="19010a5510ff943b2074fd756a3ed678622ff882" translate="yes" xml:space="preserve">
          <source>callbackOrButtons</source>
          <target state="translated">callbackOrButtons</target>
        </trans-unit>
        <trans-unit id="4fd0653c4f2aef3b19a3c145bbdc5f4740715a09" translate="yes" xml:space="preserve">
          <source>cancel</source>
          <target state="translated">cancel</target>
        </trans-unit>
        <trans-unit id="cb0cd127183b6a0dc738c9931453740136515a3f" translate="yes" xml:space="preserve">
          <source>center - centers item in the available tab bar space</source>
          <target state="translated">center-사용 가능한 탭 막대 공간의 가운데 항목</target>
        </trans-unit>
        <trans-unit id="e8f6c873c6bb89460f4b8de5d195e07125d66f44" translate="yes" xml:space="preserve">
          <source>chartreuse (#7fff00)</source>
          <target state="translated">차트 재사용 (# 7fff00)</target>
        </trans-unit>
        <trans-unit id="daf87d8f51d80c936114cb67a1623b6596459820" translate="yes" xml:space="preserve">
          <source>chocolate (#d2691e)</source>
          <target state="translated">초콜릿 (# d2691e)</target>
        </trans-unit>
        <trans-unit id="6dd0fe8001145bec4a12d0e22da711c4970d000b" translate="yes" xml:space="preserve">
          <source>color</source>
          <target state="translated">color</target>
        </trans-unit>
        <trans-unit id="335c4c1e2f05b5297a56769d8de75ad9c4874cd3" translate="yes" xml:space="preserve">
          <source>component</source>
          <target state="translated">component</target>
        </trans-unit>
        <trans-unit id="6c9661ce8567fc2396130c741f8807438c6164bb" translate="yes" xml:space="preserve">
          <source>component, function</source>
          <target state="translated">구성 요소, 기능</target>
        </trans-unit>
        <trans-unit id="5e23a7675095cfc2da7a791624cb1331ffeeb286" translate="yes" xml:space="preserve">
          <source>component, function, element</source>
          <target state="translated">구성 요소, 기능, 요소</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="27036a679e60c2f0674af1e1dad912b5da4cceae" translate="yes" xml:space="preserve">
          <source>configure your phone to use Google DNS (8.8.8.8)</source>
          <target state="translated">휴대 전화에서 Google DNS (8.8.8.8)를 사용하도록 구성</target>
        </trans-unit>
        <trans-unit id="4c344845e0e7baa362b67db2520c9118e77351d0" translate="yes" xml:space="preserve">
          <source>console.{log, warn, error, info, trace, table, group, groupEnd}</source>
          <target state="translated">console. {로그, 경고, 오류, 정보, 추적, 테이블, 그룹, groupEnd}</target>
        </trans-unit>
        <trans-unit id="e4303643fb095c3922e7b1caf5edd88497d1a624" translate="yes" xml:space="preserve">
          <source>coral (#ff7f50)</source>
          <target state="translated">산호 (# ff7f50)</target>
        </trans-unit>
        <trans-unit id="56b35014dd2c3278a23c4b8934de461588335405" translate="yes" xml:space="preserve">
          <source>cornflowerblue (#6495ed)</source>
          <target state="translated">수레 국화 블루 (# 6495ed)</target>
        </trans-unit>
        <trans-unit id="c8cb4a657644893cf649e7846f294b09f3840a12" translate="yes" xml:space="preserve">
          <source>cornsilk (#fff8dc)</source>
          <target state="translated">옥수수 실크 (# fff8dc)</target>
        </trans-unit>
        <trans-unit id="52aca09d2ff98b2491033b14f1c7168e388c26fc" translate="yes" xml:space="preserve">
          <source>create a new Java Class named &lt;code&gt;CustomToastPackage.java&lt;/code&gt; inside &lt;code&gt;android/app/src/main/java/com/your-app-name/&lt;/code&gt; folder with the content below:</source>
          <target state="translated">새로운 자바 클래스라는 이름의 생성 &lt;code&gt;CustomToastPackage.java&lt;/code&gt; 의 내부 &lt;code&gt;android/app/src/main/java/com/your-app-name/&lt;/code&gt; 아래의 내용과 폴더를 :</target>
        </trans-unit>
        <trans-unit id="3dd77ec625c6aa78f119bb39941535d17f2e2612" translate="yes" xml:space="preserve">
          <source>create a new Java Class named &lt;code&gt;ToastModule.java&lt;/code&gt; inside &lt;code&gt;android/app/src/main/java/com/your-app-name/&lt;/code&gt; folder with the content below:</source>
          <target state="translated">새로운 자바 클래스라는 이름의 생성 &lt;code&gt;ToastModule.java&lt;/code&gt; 의 내부 &lt;code&gt;android/app/src/main/java/com/your-app-name/&lt;/code&gt; 아래의 내용과 폴더를 :</target>
        </trans-unit>
        <trans-unit id="474e909386658938acdaedc2bea51e01676993f3" translate="yes" xml:space="preserve">
          <source>crimson (#dc143c)</source>
          <target state="translated">크림슨 (# dc143c)</target>
        </trans-unit>
        <trans-unit id="62515d0127afb2ee39ff80d18f60a1351c8bfe17" translate="yes" xml:space="preserve">
          <source>cyan (#00ffff)</source>
          <target state="translated">시안 (# 00ffff)</target>
        </trans-unit>
        <trans-unit id="1c7e3dd3b4d6eef776cd3b2f0afe8ef883f2c3db" translate="yes" xml:space="preserve">
          <source>dark-content</source>
          <target state="translated">dark-content</target>
        </trans-unit>
        <trans-unit id="202c591e4863f5f0c7831f4c5b88e7611fb54384" translate="yes" xml:space="preserve">
          <source>darkblue (#00008b)</source>
          <target state="translated">진한 파란색 (# 00008b)</target>
        </trans-unit>
        <trans-unit id="f1278704736c225b0ea4a647526fce788367a947" translate="yes" xml:space="preserve">
          <source>darkcyan (#008b8b)</source>
          <target state="translated">짙은 청록색 (# 008b8b)</target>
        </trans-unit>
        <trans-unit id="dd5b600ec334196ae1e17e0b182fd2e856973149" translate="yes" xml:space="preserve">
          <source>darkgoldenrod (#b8860b)</source>
          <target state="translated">darkgoldenrod (# b8860b)</target>
        </trans-unit>
        <trans-unit id="223e52f614c9bcb88abc70fb9569d60e005bff85" translate="yes" xml:space="preserve">
          <source>darkgray (#a9a9a9)</source>
          <target state="translated">어두운 회색 (# a9a9a9)</target>
        </trans-unit>
        <trans-unit id="1e48502d05e982018aa5c563651f4fcece41cd66" translate="yes" xml:space="preserve">
          <source>darkgreen (#006400)</source>
          <target state="translated">짙은 녹색 (# 006400)</target>
        </trans-unit>
        <trans-unit id="c7cc2202d579e63d577d694fe9883657a3ff74f2" translate="yes" xml:space="preserve">
          <source>darkgrey (#a9a9a9)</source>
          <target state="translated">진회색 (# a9a9a9)</target>
        </trans-unit>
        <trans-unit id="b827a2ea59b23f80941fbe50a99c73b2eb0e0239" translate="yes" xml:space="preserve">
          <source>darkkhaki (#bdb76b)</source>
          <target state="translated">다크 카키 (# bdb76b)</target>
        </trans-unit>
        <trans-unit id="b24e3a15cb8311b58d01e8261ac15350d69e9273" translate="yes" xml:space="preserve">
          <source>darkmagenta (#8b008b)</source>
          <target state="translated">darkmagenta (# 8b008b)</target>
        </trans-unit>
        <trans-unit id="08e959d643388ba676b39c5dd8917ffb1e79c71c" translate="yes" xml:space="preserve">
          <source>darkolivegreen (#556b2f)</source>
          <target state="translated">darkolivegreen (# 556b2f)</target>
        </trans-unit>
        <trans-unit id="9b364d26f839a5088fd47e94973b58b2ab2c47b0" translate="yes" xml:space="preserve">
          <source>darkorange (#ff8c00)</source>
          <target state="translated">다크 오렌지 (# ff8c00)</target>
        </trans-unit>
        <trans-unit id="b3221f44adf35b0d262f1b49d057447c73f522d4" translate="yes" xml:space="preserve">
          <source>darkorchid (#9932cc)</source>
          <target state="translated">darkorchid (# 9932cc)</target>
        </trans-unit>
        <trans-unit id="a153959d34916cc4ac599c5953d929172fad9e11" translate="yes" xml:space="preserve">
          <source>darkred (#8b0000)</source>
          <target state="translated">진한 빨간색 (# 8b0000)</target>
        </trans-unit>
        <trans-unit id="58d1e57b0fd1c2512703f67eae42f98e976d27ff" translate="yes" xml:space="preserve">
          <source>darksalmon (#e9967a)</source>
          <target state="translated">다크 연어 (# e9967a)</target>
        </trans-unit>
        <trans-unit id="9ec65fcaa4a21c1fcb8551fbaf9eaabbd85686a7" translate="yes" xml:space="preserve">
          <source>darkseagreen (#8fbc8f)</source>
          <target state="translated">진한 녹색 (# 8fbc8f)</target>
        </trans-unit>
        <trans-unit id="0adea83fbcf3cfe1767ecf3d3a2e23c689235583" translate="yes" xml:space="preserve">
          <source>darkslateblue (#483d8b)</source>
          <target state="translated">darkslateblue (# 483d8b)</target>
        </trans-unit>
        <trans-unit id="7c2494bfe001ce97a41af6e19a50efae90e98e19" translate="yes" xml:space="preserve">
          <source>darkslategrey (#2f4f4f)</source>
          <target state="translated">다크 슬레이트 그레이 (# 2f4f4f)</target>
        </trans-unit>
        <trans-unit id="1ac236d79dc5a7008fc1825766dcd6ef37ca3f26" translate="yes" xml:space="preserve">
          <source>darkturquoise (#00ced1)</source>
          <target state="translated">어두운 청록색 (# 00ced1)</target>
        </trans-unit>
        <trans-unit id="275fcf0683966ffba56fe3cddca0a7338ddb522b" translate="yes" xml:space="preserve">
          <source>darkviolet (#9400d3)</source>
          <target state="translated">darkviolet (# 9400d3)</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">data</target>
        </trans-unit>
        <trans-unit id="3d54b0545be4c0b209042238ceb7c04e28c7eac0" translate="yes" xml:space="preserve">
          <source>deeppink (#ff1493)</source>
          <target state="translated">딥 핑크 (# ff1493)</target>
        </trans-unit>
        <trans-unit id="ffe29a7532f9e4a897b7defc0d5389a05dbd482c" translate="yes" xml:space="preserve">
          <source>deepskyblue (#00bfff)</source>
          <target state="translated">deepskyblue (# 00bfff)</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="e940d2a8aa21109d83a8b3dad4cee386dabe8439" translate="yes" xml:space="preserve">
          <source>defaultValue</source>
          <target state="translated">defaultValue</target>
        </trans-unit>
        <trans-unit id="556da31987fd079b7fc16b43b3ba8bbed7f8f9c3" translate="yes" xml:space="preserve">
          <source>deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')</source>
          <target state="translated">deprecatedPropType (ReactPropTypes.number, '대신 변환 소품 사용')</target>
        </trans-unit>
        <trans-unit id="10f096a4ff3a1e57b27f32edb47e6f6dcf24adc4" translate="yes" xml:space="preserve">
          <source>destructive</source>
          <target state="translated">destructive</target>
        </trans-unit>
        <trans-unit id="e9711657b066fc8697f6f46ac6be9ce246e43aac" translate="yes" xml:space="preserve">
          <source>details</source>
          <target state="translated">details</target>
        </trans-unit>
        <trans-unit id="0972fb448d29c1edcf6b43446fca789509bc8ba4" translate="yes" xml:space="preserve">
          <source>details is an object containing:</source>
          <target state="translated">세부 사항은 다음을 포함하는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="176013866aaf787422bc28bd14e4fa20d7dab7ca" translate="yes" xml:space="preserve">
          <source>dimgray (#696969)</source>
          <target state="translated">어두운 회색 (# 696969)</target>
        </trans-unit>
        <trans-unit id="25992b3b29f63114417b432656eeb3cf9fe86730" translate="yes" xml:space="preserve">
          <source>dimgrey (#696969)</source>
          <target state="translated">어두운 회색 (# 696969)</target>
        </trans-unit>
        <trans-unit id="0398d9e82b10b947843ea68bf49181a87c0327f6" translate="yes" xml:space="preserve">
          <source>disable the appropriate security feature in your router</source>
          <target state="translated">라우터에서 적절한 보안 기능을 비활성화하십시오</target>
        </trans-unit>
        <trans-unit id="44f84de927be631a0b67b99656c31cae851ce7c1" translate="yes" xml:space="preserve">
          <source>dodgerblue (#1e90ff)</source>
          <target state="translated">다저 블루 (# 1e90ff)</target>
        </trans-unit>
        <trans-unit id="b62da956a00b4ae8a8feb8e3f9be55274238588c" translate="yes" xml:space="preserve">
          <source>dragging</source>
          <target state="translated">dragging</target>
        </trans-unit>
        <trans-unit id="65f06f93205e71d1328da71e49c33900780c8e6d" translate="yes" xml:space="preserve">
          <source>dragging, meaning there is currently an interaction with the navigation view</source>
          <target state="translated">드래그, 즉 현재 내비게이션보기와 상호 작용이 있음을 의미</target>
        </trans-unit>
        <trans-unit id="73888f793d3a58a342ebedd1feca6c6307dbcfd7" translate="yes" xml:space="preserve">
          <source>dragging, meaning there is currently an interaction with the page scroller</source>
          <target state="translated">끌기, 현재 페이지 스크롤러와 상호 작용하고 있음을 의미</target>
        </trans-unit>
        <trans-unit id="3cc674da3f6fb94096f1cd4b7a91b7479a02335a" translate="yes" xml:space="preserve">
          <source>e.g., &lt;code&gt;onLoadStart={(e) =&amp;gt; this.setState({loading: true})}&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;onLoadStart={(e) =&amp;gt; this.setState({loading: true})}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="641a0bf03a588fbbfed59e6c1352611726d37d43" translate="yes" xml:space="preserve">
          <source>e.g., &lt;code&gt;onLongPress={this.increaseSize}&amp;gt;&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;onLongPress={this.increaseSize}&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0fd7afe377946f2ce4fc1c7f289d4b73699c373" translate="yes" xml:space="preserve">
          <source>e.g., &lt;code&gt;onPress={() =&amp;gt; console.log('1st')}&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;onPress={() =&amp;gt; console.log('1st')}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dece05484839df110745b0a800297c33cc078287" translate="yes" xml:space="preserve">
          <source>element</source>
          <target state="translated">element</target>
        </trans-unit>
        <trans-unit id="0443e851445725be215c036ea4ed18de7f20098d" translate="yes" xml:space="preserve">
          <source>enabled: If true, parallax effects are enabled. Defaults to true. shiftDistanceX: Defaults to 2.0. shiftDistanceY: Defaults to 2.0. tiltAngle: Defaults to 0.05. magnification: Defaults to 1.0. pressMagnification: Defaults to 1.0. pressDuration: Defaults to 0.3. pressDelay: Defaults to 0.0.</source>
          <target state="translated">enabled : 참이면 시차 효과가 활성화됩니다. 기본값은 true입니다. shiftDistanceX : 기본값은 2.0입니다. shiftDistanceY : 기본값은 2.0입니다. tiltAngle : 기본값은 0.05입니다. 배율 : 기본값은 1.0입니다. pressMagnification : 기본값은 1.0입니다. pressDuration : 기본값은 0.3입니다. pressDelay : 기본값은 0.0입니다.</target>
        </trans-unit>
        <trans-unit id="88434f4ec733b566739f4460dc74e7a1225c755b" translate="yes" xml:space="preserve">
          <source>enum('Horizontal', 'Normal', 'Small', 'Large', 'Inverse', 'SmallInverse', 'LargeInverse')</source>
          <target state="translated">enum ( 'Horizontal', 'Normal', 'Small', 'Large', 'Inverse', 'SmallInverse', 'LargeInverse')</target>
        </trans-unit>
        <trans-unit id="54606776cabc471d22e5a21c796e3469757c5079" translate="yes" xml:space="preserve">
          <source>enum('absolute', 'relative')</source>
          <target state="translated">열거 형 ( '절대', '상대적')</target>
        </trans-unit>
        <trans-unit id="345399eadd2528094d7b05624d27b10cce51a363" translate="yes" xml:space="preserve">
          <source>enum('always', 'never', 'handled', false, true)</source>
          <target state="translated">enum ( 'always', 'never', 'handled', false, true)</target>
        </trans-unit>
        <trans-unit id="58315026164dc33595cd6c99817f7794af2f1540" translate="yes" xml:space="preserve">
          <source>enum('auto', 'always', 'never')</source>
          <target state="translated">enum ( 'auto', 'always', 'never')</target>
        </trans-unit>
        <trans-unit id="53ba032feed43263fb2cc12c23a82eb2a58630ee" translate="yes" xml:space="preserve">
          <source>enum('auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline')</source>
          <target state="translated">enum ( 'auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline')</target>
        </trans-unit>
        <trans-unit id="4015a6512844cb8bc3a389a0614c0d8b1728660f" translate="yes" xml:space="preserve">
          <source>enum('auto', 'left', 'right', 'center', 'justify')</source>
          <target state="translated">enum ( 'auto', 'left', 'right', 'center', 'justify')</target>
        </trans-unit>
        <trans-unit id="0631c6e694c38f36de6394f758aff8b786ba2eb4" translate="yes" xml:space="preserve">
          <source>enum('auto', 'ltr', 'rtl')</source>
          <target state="translated">enum ( 'auto', 'ltr', 'rtl')</target>
        </trans-unit>
        <trans-unit id="5ed1c7747c3f7c1583c7dcd6d4890b32e07a04db" translate="yes" xml:space="preserve">
          <source>enum('auto', 'resize', 'scale')</source>
          <target state="translated">enum ( 'auto', 'resize', 'scale')</target>
        </trans-unit>
        <trans-unit id="ce864a2be769f48756ff7a2c6e42e67a6333b996" translate="yes" xml:space="preserve">
          <source>enum('auto', 'top', 'bottom', 'center')</source>
          <target state="translated">enum ( 'auto', 'top', 'bottom', 'center')</target>
        </trans-unit>
        <trans-unit id="f6478405861848643c04cf86cc38fbadb679f9d8" translate="yes" xml:space="preserve">
          <source>enum('auto', 'yes', 'no', 'no-hide-descendants')</source>
          <target state="translated">enum ( 'auto', 'yes', 'no', 'no-hide-descendants')</target>
        </trans-unit>
        <trans-unit id="98443733b51e8e9e9461472169b7c1ac3e055e74" translate="yes" xml:space="preserve">
          <source>enum('automatic', 'scrollableAxes', 'never', 'always')</source>
          <target state="translated">enum ( '자동', 'scrollableAxes', 'never', '항상')</target>
        </trans-unit>
        <trans-unit id="d4a6f4e4cc7e3b6770e7e93f1eda7dbcd6be7085" translate="yes" xml:space="preserve">
          <source>enum('bookmarks', 'contacts', 'downloads', 'favorites', 'featured', 'history', 'more', 'most-recent', 'most-viewed', 'recents', 'search', 'top-rated')</source>
          <target state="translated">enum ( 'bookmarks', 'contacts', 'downloads', 'favorites', 'featured', 'history', 'more', 'most-recent', 'most-viewed', 'recents', 'search', '최고 등급')</target>
        </trans-unit>
        <trans-unit id="a45e81bf745379ed78c55037755726d1dc2a1572" translate="yes" xml:space="preserve">
          <source>enum('box-none', 'none', 'box-only', 'auto')</source>
          <target state="translated">enum ( 'box-none', 'none', 'box-only', 'auto')</target>
        </trans-unit>
        <trans-unit id="b583261987bff4c506c59169a40059911e58961e" translate="yes" xml:space="preserve">
          <source>enum('cover', 'contain', 'stretch', 'repeat', 'center')</source>
          <target state="translated">enum ( 'cover', 'contain', 'stretch', 'repeat', 'center')</target>
        </trans-unit>
        <trans-unit id="fd629c4c2556f7e1aa5f8c22a491fbfef168f216" translate="yes" xml:space="preserve">
          <source>enum('date', 'time', 'datetime')</source>
          <target state="translated">enum ( '날짜', '시간', '날짜 시간')</target>
        </trans-unit>
        <trans-unit id="e92fca4b2ccab113a3b21220185653a7d42b257f" translate="yes" xml:space="preserve">
          <source>enum('default', 'bar')</source>
          <target state="translated">enum ( 'default', 'bar')</target>
        </trans-unit>
        <trans-unit id="0f9461d4240924365fe06de539fd66e9089bfd61" translate="yes" xml:space="preserve">
          <source>enum('default', 'black')</source>
          <target state="translated">enum ( 'default', 'black')</target>
        </trans-unit>
        <trans-unit id="5f88440d902f6eb87ac590f696966a712d7cfdbd" translate="yes" xml:space="preserve">
          <source>enum('default', 'black', 'white')</source>
          <target state="translated">enum ( 'default', 'black', 'white')</target>
        </trans-unit>
        <trans-unit id="ce6c5ead34543131af3e51e8cb811f9ab94c62a0" translate="yes" xml:space="preserve">
          <source>enum('default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password')</source>
          <target state="translated">enum ( 'default', 'e-mail-address', 'numeric', 'phone-pad', 'ascii-capable', 'number-and-punctuation', 'url', 'number-pad', 'name-phone' -pad ','decimal-pad ','twitter ','web-search ','visible-password ')</target>
        </trans-unit>
        <trans-unit id="42c34061408e2270a7f9ed4ce2577d067d0d6495" translate="yes" xml:space="preserve">
          <source>enum('default', 'light', 'dark')</source>
          <target state="translated">enum ( 'default', 'light', 'dark')</target>
        </trans-unit>
        <trans-unit id="f6d1627dd97cfed3e0b4500a21d66c8e70b2a68f" translate="yes" xml:space="preserve">
          <source>enum('default', 'light-content', 'dark-content')</source>
          <target state="translated">enum ( 'default', 'light-content', 'dark-content')</target>
        </trans-unit>
        <trans-unit id="5401374210131c69400899ec94a6aa41432efd5a" translate="yes" xml:space="preserve">
          <source>enum('dialog', 'dropdown')</source>
          <target state="translated">열거 형 ( 'dialog', 'dropdown')</target>
        </trans-unit>
        <trans-unit id="a9bd26cba0413599c8a81c650c1fe6678eb73bf6" translate="yes" xml:space="preserve">
          <source>enum('done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo')</source>
          <target state="translated">enum ( 'done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route ','yahoo ')</target>
        </trans-unit>
        <trans-unit id="94a4cc1e4dc2e88739a83530f060cb2a202c2972" translate="yes" xml:space="preserve">
          <source>enum('fade', 'slide')</source>
          <target state="translated">열거 형 ( 'fade', 'slide')</target>
        </trans-unit>
        <trans-unit id="08dbb6681fac9b02f51e933ff8fddacff7af941a" translate="yes" xml:space="preserve">
          <source>enum('fast', 'normal'), ,number</source>
          <target state="translated">열거 형 ( 'fast', 'normal'),, number</target>
        </trans-unit>
        <trans-unit id="74de73c09fbe225f077f09b29f90996ccfb077e1" translate="yes" xml:space="preserve">
          <source>enum('fill', 'center', 'auto')</source>
          <target state="translated">열거 형 ( 'fill', 'center', 'auto')</target>
        </trans-unit>
        <trans-unit id="7b4ed2a284423c9b07db0719a26328fd2a62ab35" translate="yes" xml:space="preserve">
          <source>enum('flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly')</source>
          <target state="translated">enum ( 'flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly')</target>
        </trans-unit>
        <trans-unit id="3e897d2e3e305f5115a779e99968a470f1a8444b" translate="yes" xml:space="preserve">
          <source>enum('flex-start', 'flex-end', 'center', 'stretch', 'baseline')</source>
          <target state="translated">enum ( 'flex-start', 'flex-end', 'center', 'stretch', 'baseline')</target>
        </trans-unit>
        <trans-unit id="fcab23823e573bf625ee43df00e9bee1ea173447" translate="yes" xml:space="preserve">
          <source>enum('flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around')</source>
          <target state="translated">enum ( 'flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around')</target>
        </trans-unit>
        <trans-unit id="1f033dd83bbca0f0db1c47533d4bb903a8be7845" translate="yes" xml:space="preserve">
          <source>enum('fullScreen', 'pageSheet', 'formSheet', 'overFullScreen')</source>
          <target state="translated">enum ( 'fullScreen', 'pageSheet', 'formSheet', 'overFullScreen')</target>
        </trans-unit>
        <trans-unit id="f6f4f69710df44dca4e5347887f9434f05cc4e94" translate="yes" xml:space="preserve">
          <source>enum('head', 'middle', 'tail', 'clip')</source>
          <target state="translated">열거 형 ( 'head', 'middle', 'tail', 'clip')</target>
        </trans-unit>
        <trans-unit id="e252317f5a52bbd608238b7e137048b806cbc223" translate="yes" xml:space="preserve">
          <source>enum('height', 'position', 'padding')</source>
          <target state="translated">enum ( '높이', '위치', '패딩')</target>
        </trans-unit>
        <trans-unit id="2c2c60f6eb0e9ca030e324f2f287ba6246c59f37" translate="yes" xml:space="preserve">
          <source>enum('inherit', 'ltr', 'rtl')</source>
          <target state="translated">enum ( '상속', 'ltr', 'rtl')</target>
        </trans-unit>
        <trans-unit id="aa4076d9e2dd061ad3018f8eac8b7705b0ff4160" translate="yes" xml:space="preserve">
          <source>enum('never', 'always', 'compatibility')</source>
          <target state="translated">enum ( 'never', 'always', 'compatibility')</target>
        </trans-unit>
        <trans-unit id="801c0617e6146a217133f50b87cf91bcd90632cc" translate="yes" xml:space="preserve">
          <source>enum('never', 'while-editing', 'unless-editing', 'always')</source>
          <target state="translated">enum ( 'never', 'while-editing', 'unless-editing', 'always')</target>
        </trans-unit>
        <trans-unit id="51535b51e7564915602936f7c2601367591308f9" translate="yes" xml:space="preserve">
          <source>enum('none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password')</source>
          <target state="translated">enum ( 'none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username ','비밀번호 ')</target>
        </trans-unit>
        <trans-unit id="9a42f74cb882041b75054661c2f7da0fca028108" translate="yes" xml:space="preserve">
          <source>enum('none', 'flex')</source>
          <target state="translated">enum ( 'none', 'flex')</target>
        </trans-unit>
        <trans-unit id="4c6b53cf0a59731cc1f3057dd11384b939aed37d" translate="yes" xml:space="preserve">
          <source>enum('none', 'on-drag')</source>
          <target state="translated">enum ( 'none', 'on-drag')</target>
        </trans-unit>
        <trans-unit id="931119b332ab4cc8e34f0d3110fb86cc6c7e228b" translate="yes" xml:space="preserve">
          <source>enum('none', 'on-drag', 'interactive')</source>
          <target state="translated">enum ( 'none', 'on-drag', 'interactive')</target>
        </trans-unit>
        <trans-unit id="a87983b9cd84bde588b0531ef4e17565ea089801" translate="yes" xml:space="preserve">
          <source>enum('none', 'polite', 'assertive')</source>
          <target state="translated">enum ( 'none', 'polite', 'assertive')</target>
        </trans-unit>
        <trans-unit id="d43fbff29a2f025976010466f5a88c8064d7063d" translate="yes" xml:space="preserve">
          <source>enum('none', 'sentences', 'words', 'characters')</source>
          <target state="translated">enum ( '없음', '문장', '단어', '문자')</target>
        </trans-unit>
        <trans-unit id="36aa2277100aa4a7f61219105d9ae867969159c4" translate="yes" xml:space="preserve">
          <source>enum('none', 'slide', 'fade')</source>
          <target state="translated">enum ( '없음', '슬라이드', '페이드')</target>
        </trans-unit>
        <trans-unit id="ae1b17bdeb719f4c404188c55b41e2a763f40636" translate="yes" xml:space="preserve">
          <source>enum('none', 'underline', 'line-through', 'underline line-through')</source>
          <target state="translated">enum ( 'none', 'underline', 'line-through', 'underline line-through')</target>
        </trans-unit>
        <trans-unit id="a12e4b4aef7ff7b102b56ed1c46c462d03bd1df9" translate="yes" xml:space="preserve">
          <source>enum('none', 'uppercase', 'lowercase', 'capitalize')</source>
          <target state="translated">enum ( '없음', '대문자', '소문자', '대문자')</target>
        </trans-unit>
        <trans-unit id="779833a6c232f53bc960c1d1ca3479d3173fb34e" translate="yes" xml:space="preserve">
          <source>enum('normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900')</source>
          <target state="translated">enum ( 'normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900')</target>
        </trans-unit>
        <trans-unit id="4835c631b0dcc377c61caf6ccf7891421e07168e" translate="yes" xml:space="preserve">
          <source>enum('normal', 'italic')</source>
          <target state="translated">열거 형 ( 'normal', 'italic')</target>
        </trans-unit>
        <trans-unit id="22f76d5fb57cac17575d5f16dcea53825f6816dc" translate="yes" xml:space="preserve">
          <source>enum('phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'), ,array of enum('phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all')</source>
          <target state="translated">enum ( 'phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'), enum ( 'phoneNumber', 'link', 'address', 'calendarEvent', 'none의 배열 ', '모두')</target>
        </trans-unit>
        <trans-unit id="0532944c7c49901d7a7768b254972878b34d2340" translate="yes" xml:space="preserve">
          <source>enum('photo', 'video')</source>
          <target state="translated">enum ( '사진', '비디오')</target>
        </trans-unit>
        <trans-unit id="f5aa9ea2b6cc7bce3c02ee2689b69116733a220e" translate="yes" xml:space="preserve">
          <source>enum('row', 'row-reverse', 'column', 'column-reverse')</source>
          <target state="translated">열거 형 ( 'row', 'row-reverse', 'column', 'column-reverse')</target>
        </trans-unit>
        <trans-unit id="6eb564d621cda10d5db02e5c50b05a8973b3b823" translate="yes" xml:space="preserve">
          <source>enum('simple', 'highQuality', 'balanced')</source>
          <target state="translated">enum ( '단순', '고품질', '균형')</target>
        </trans-unit>
        <trans-unit id="01ea72d30a31620be271e54bfa1642a679807875" translate="yes" xml:space="preserve">
          <source>enum('small', 'large'), ,number</source>
          <target state="translated">열거 형 ( 'small', 'large'),, number</target>
        </trans-unit>
        <trans-unit id="b89e6a32f6ff284443cdaa99ecedd79ea9c88391" translate="yes" xml:space="preserve">
          <source>enum('solid', 'dotted', 'dashed')</source>
          <target state="translated">열거 형 ( 'solid', 'dotted', 'dashed')</target>
        </trans-unit>
        <trans-unit id="d8dbfa7ac74788f57847ffeb2a897e8e0700913c" translate="yes" xml:space="preserve">
          <source>enum('solid', 'double', 'dotted', 'dashed')</source>
          <target state="translated">enum ( 'solid', 'double', 'dotted', 'dashed')</target>
        </trans-unit>
        <trans-unit id="e5ed2fd3d4bd12aa0031536d5192aa94345839e9" translate="yes" xml:space="preserve">
          <source>enum('start', 'center', 'end')</source>
          <target state="translated">enum ( '시작', '중심', '종료')</target>
        </trans-unit>
        <trans-unit id="17fe79175448bf6bd3fcecf8fc54f456746f7496" translate="yes" xml:space="preserve">
          <source>enum('unlocked', 'locked-closed', 'locked-open')</source>
          <target state="translated">enum ( '잠금 해제', '잠금 폐쇄', '잠금 개방')</target>
        </trans-unit>
        <trans-unit id="1161894e40b31435f0ab4260b499993912a7d368" translate="yes" xml:space="preserve">
          <source>enum('visible', 'hidden')</source>
          <target state="translated">enum ( '보이는', '숨겨진')</target>
        </trans-unit>
        <trans-unit id="769e6c79275d4da0060b1cf5c3479ff195382767" translate="yes" xml:space="preserve">
          <source>enum('visible', 'hidden', 'scroll')</source>
          <target state="translated">enum ( '보이는', '숨겨진', '스크롤')</target>
        </trans-unit>
        <trans-unit id="51e91b601424706a99ed39fed77b4898d6b96f10" translate="yes" xml:space="preserve">
          <source>enum('wrap', 'nowrap')</source>
          <target state="translated">열거 형 ( 'wrap', 'nowrap')</target>
        </trans-unit>
        <trans-unit id="005de21ede4094996130c00c745b868ae97edd87" translate="yes" xml:space="preserve">
          <source>enum(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30)</source>
          <target state="translated">열거 형 (1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30)</target>
        </trans-unit>
        <trans-unit id="27c93b62b7396cb0ed382e6270b80960c6733434" translate="yes" xml:space="preserve">
          <source>enum(DrawerConsts.DrawerPosition.Left, DrawerConsts.DrawerPosition.Right)</source>
          <target state="translated">enum (DrawerConsts.DrawerPosition.Left, DrawerConsts.DrawerPosition.Right)</target>
        </trans-unit>
        <trans-unit id="ecde77762c9cfcbb4c80f4f3b141be4778b7ff1e" translate="yes" xml:space="preserve">
          <source>enum(RefreshLayoutConsts.SIZE.DEFAULT, RefreshLayoutConsts.SIZE.LARGE)</source>
          <target state="translated">enum (RefreshLayoutConsts.SIZE.DEFAULT, RefreshLayoutConsts.SIZE.LARGE)</target>
        </trans-unit>
        <trans-unit id="5aff28c45ca1a0431fff9ca3f68c39954ef2f166" translate="yes" xml:space="preserve">
          <source>enum(connectionChange, change)</source>
          <target state="translated">열거 형 (연결 변경, 변경)</target>
        </trans-unit>
        <trans-unit id="11f9578d05e6f7bb58a3cdd00107e9f4e3882671" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="translated">error</target>
        </trans-unit>
        <trans-unit id="3841a78ae59725028ae44bb042a13ebb8a621270" translate="yes" xml:space="preserve">
          <source>eventName</source>
          <target state="translated">eventName</target>
        </trans-unit>
        <trans-unit id="78166c9f658faa0027cb8535eab9195aedb52f98" translate="yes" xml:space="preserve">
          <source>fade</source>
          <target state="translated">fade</target>
        </trans-unit>
        <trans-unit id="d68049bb85454c0b8c56ffbb73c45e8adee41b21" translate="yes" xml:space="preserve">
          <source>failure</source>
          <target state="translated">failure</target>
        </trans-unit>
        <trans-unit id="a15f66dada7e694d4051f0b33a65234cc4a6ffb6" translate="yes" xml:space="preserve">
          <source>fast: 0.99 (the default for iOS web view)</source>
          <target state="translated">빠름 : 0.99 (iOS 웹보기의 기본값)</target>
        </trans-unit>
        <trans-unit id="0ec4cdc0e2958b9869d3d68d621f839d5595ca07" translate="yes" xml:space="preserve">
          <source>fill - distributes items across the entire width of the tab bar</source>
          <target state="translated">채우기-탭 막대의 전체 너비에 걸쳐 항목을 분배합니다</target>
        </trans-unit>
        <trans-unit id="100147cc7d93e7f140fd02d37bfab78930037e80" translate="yes" xml:space="preserve">
          <source>firebrick (#b22222)</source>
          <target state="translated">내화 벽돌 (# b22222)</target>
        </trans-unit>
        <trans-unit id="3f09038d885101c6dc7a166fad404599ea5f4b2f" translate="yes" xml:space="preserve">
          <source>flexGrow, flexShrink, and flexBasis work the same as in CSS.</source>
          <target state="translated">flexGrow, flexShrink 및 flexBasis는 CSS에서와 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b2f71761aef3b9cdcaef525dafc4422175b485df" translate="yes" xml:space="preserve">
          <source>floralwhite (#fffaf0)</source>
          <target state="translated">꽃 무늬 흰색 (# fffaf0)</target>
        </trans-unit>
        <trans-unit id="a936db8283892d36df4ad318dae561bafbf956e6" translate="yes" xml:space="preserve">
          <source>focus()</source>
          <target state="translated">focus()</target>
        </trans-unit>
        <trans-unit id="997db32d8f472884a1556af9c60be1e2e62f35b1" translate="yes" xml:space="preserve">
          <source>forestgreen (#228b22)</source>
          <target state="translated">포레스트 그린 (# 228b22)</target>
        </trans-unit>
        <trans-unit id="d83d4a0d499f39bd201cae7722d3be3a62bc89aa" translate="yes" xml:space="preserve">
          <source>fuchsia (#ff00ff)</source>
          <target state="translated">자홍색 (# ff00ff)</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="95e77c845e2ab546188806dc513fceef2dc1dcdc" translate="yes" xml:space="preserve">
          <source>function (&lt;code&gt;RCTResponseSenderBlock&lt;/code&gt;)</source>
          <target state="translated">기능 ( &lt;code&gt;RCTResponseSenderBlock&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="975089ed8a141d825238f7d644d346e192998fd4" translate="yes" xml:space="preserve">
          <source>gainsboro (#dcdcdc)</source>
          <target state="translated">게인즈 보로 (#dcdcdc)</target>
        </trans-unit>
        <trans-unit id="73ad4bb69601e5d058e0cce40257a306e98cfc01" translate="yes" xml:space="preserve">
          <source>geo_error</source>
          <target state="translated">geo_error</target>
        </trans-unit>
        <trans-unit id="677b2e8376d74a541e1dec4f3a8e2407ea901100" translate="yes" xml:space="preserve">
          <source>geo_options</source>
          <target state="translated">geo_options</target>
        </trans-unit>
        <trans-unit id="6a4be78c526cd2a30f5132a168c7f671a57c8dd0" translate="yes" xml:space="preserve">
          <source>geo_success</source>
          <target state="translated">geo_success</target>
        </trans-unit>
        <trans-unit id="cb0e5f5881684e6e0426d4fe6f1b5ca814a2ee69" translate="yes" xml:space="preserve">
          <source>getRowData(dataBlob, sectionID, rowID);</source>
          <target state="translated">getRowData (dataBlob, sectionID, rowID);</target>
        </trans-unit>
        <trans-unit id="3e32956c7ee0f0048dc3101c14fee04bd19b956d" translate="yes" xml:space="preserve">
          <source>getSectionHeaderData(dataBlob, sectionID);</source>
          <target state="translated">getSectionHeaderData (dataBlob, sectionID);</target>
        </trans-unit>
        <trans-unit id="df8e12109b50e3bf5ee003fb8df76e1324dd2bec" translate="yes" xml:space="preserve">
          <source>ghostwhite (#f8f8ff)</source>
          <target state="translated">고스트 화이트 (# f8f8ff)</target>
        </trans-unit>
        <trans-unit id="30307e3d4f65155da23bd2716d8a5dcb7b6ed357" translate="yes" xml:space="preserve">
          <source>gold (#ffd700)</source>
          <target state="translated">금 (# ffd700)</target>
        </trans-unit>
        <trans-unit id="21644dd6fd23a29c36b7e0fdb9a8fa2d36ed8bb3" translate="yes" xml:space="preserve">
          <source>goldenrod (#daa520)</source>
          <target state="translated">goldenrod (# daa520)</target>
        </trans-unit>
        <trans-unit id="17289ce90cf72fed71668655b74290d61ce9b029" translate="yes" xml:space="preserve">
          <source>gray (#808080)</source>
          <target state="translated">회색 (# 808080)</target>
        </trans-unit>
        <trans-unit id="9f35ad8c95f5bbb527205d2718eb0ff1f2e9fa46" translate="yes" xml:space="preserve">
          <source>green (#008000)</source>
          <target state="translated">녹색 (# 008000)</target>
        </trans-unit>
        <trans-unit id="c3cd3e19e641d405f8c33b9379214f25df977dd3" translate="yes" xml:space="preserve">
          <source>greenyellow (#adff2f)</source>
          <target state="translated">녹색 노랑 (# adff2f)</target>
        </trans-unit>
        <trans-unit id="9f8e932f0400bd1e47f2237053d33cf9de27d1c5" translate="yes" xml:space="preserve">
          <source>grey (#808080)</source>
          <target state="translated">회색 (# 808080)</target>
        </trans-unit>
        <trans-unit id="31a81ec93db3740ee3984fc40e34a60b0412643d" translate="yes" xml:space="preserve">
          <source>handler</source>
          <target state="translated">handler</target>
        </trans-unit>
        <trans-unit id="f4a316742d95482d254f48e4e2840e8ffb05e082" translate="yes" xml:space="preserve">
          <source>hdpi Android devices (240 dpi)</source>
          <target state="translated">hdpi Android 기기 (240dpi)</target>
        </trans-unit>
        <trans-unit id="73e7e545c519a38f0aec9e72df51f8ba169db34d" translate="yes" xml:space="preserve">
          <source>height</source>
          <target state="translated">height</target>
        </trans-unit>
        <trans-unit id="99d72c7fc3e2e145870beab37c0b70e343ea9c3b" translate="yes" xml:space="preserve">
          <source>hidden</source>
          <target state="translated">hidden</target>
        </trans-unit>
        <trans-unit id="7d1eab743a86ed6957aeecb973198f422783ba1d" translate="yes" xml:space="preserve">
          <source>honeydew (#f0fff0)</source>
          <target state="translated">단물 (# f0fff0)</target>
        </trans-unit>
        <trans-unit id="5ad3c9071dfa9a12c37049e19fcbfc8a26af2e48" translate="yes" xml:space="preserve">
          <source>hotpink (#ff69b4)</source>
          <target state="translated">핫 핑크 (# ff69b4)</target>
        </trans-unit>
        <trans-unit id="6413e837d316aafcf260786cd21a849f88ae3069" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="translated">iOS</target>
        </trans-unit>
        <trans-unit id="cb86b8d73aba2f9bd320d5a68b6035d6509329a8" translate="yes" xml:space="preserve">
          <source>iOS (Objective-C)</source>
          <target state="translated">iOS (Objective-C)</target>
        </trans-unit>
        <trans-unit id="724d4fdaaa53e76abd262227cfb9cd4eabb79b80" translate="yes" xml:space="preserve">
          <source>iOS (Swift)</source>
          <target state="translated">iOS (Swift)</target>
        </trans-unit>
        <trans-unit id="2c163589aa74a880f139ca6d1ccbf47fa13ca83e" translate="yes" xml:space="preserve">
          <source>iOS Border Radius Styles</source>
          <target state="translated">iOS 테두리 반경 스타일</target>
        </trans-unit>
        <trans-unit id="129202dee5004e5241c1e2b28b1364537cb8ccef" translate="yes" xml:space="preserve">
          <source>iOS Calendar Module Example</source>
          <target state="translated">iOS 캘린더 모듈 예</target>
        </trans-unit>
        <trans-unit id="a8e236c9c57cab46278c575138d37dda4e821d21" translate="yes" xml:space="preserve">
          <source>iOS Components and APIs</source>
          <target state="translated">iOS 컴포넌트 및 API</target>
        </trans-unit>
        <trans-unit id="ccc926e611a1b742d13f6efac26f1b67392b2dc7" translate="yes" xml:space="preserve">
          <source>iOS MapView example</source>
          <target state="translated">iOS MapView 예</target>
        </trans-unit>
        <trans-unit id="c0c0b66a33d43a278078015dc242002eddbd8ace" translate="yes" xml:space="preserve">
          <source>iOS saves multiple sizes for the same image in your Camera Roll, it is very important to pick the one that's as close as possible for performance reasons. You wouldn't want to use the full quality 3264x2448 image as source when displaying a 200x200 thumbnail. If there's an exact match, React Native will pick it, otherwise it's going to use the first one that's at least 50% bigger in order to avoid blur when resizing from a close size. All of this is done by default so you don't have to worry about writing the tedious (and error prone) code to do it yourself.</source>
          <target state="translated">iOS는 카메라 롤에서 동일한 이미지의 여러 크기를 저장하므로 성능상의 이유로 가능한 한 가까운 이미지를 선택하는 것이 매우 중요합니다. 200x200 썸네일을 표시 할 때 최고 품질의 3264x2448 이미지를 소스로 사용하고 싶지 않습니다. 정확히 일치하는 경우 React Native가 선택합니다. 그렇지 않으면 가까운 크기에서 크기를 조정할 때 흐림을 피하기 위해 최소 50 % 더 큰 첫 번째 항목을 사용합니다. 이 모든 작업은 기본적으로 수행되므로 지루하고 오류가 발생하기 쉬운 코드를 작성하는 것에 대해 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="30ff50188c1e337006cdc954ce36c878b9a26daf" translate="yes" xml:space="preserve">
          <source>iOS-Only. Post a string to be announced by the screen reader.</source>
          <target state="translated">iOS 전용. 스크린 리더가 발표 할 문자열을 게시하십시오.</target>
        </trans-unit>
        <trans-unit id="58cd1bd0f745dc1f54dce639ae5f806fef4cac0f" translate="yes" xml:space="preserve">
          <source>iOS-Only. Set accessibility focus to a react component.</source>
          <target state="translated">iOS 전용. 반응 구성 요소에 접근성 포커스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c088f28fa8cd5b6e2d6fe9ce771e0ca6a578bc1f" translate="yes" xml:space="preserve">
          <source>iOS-specific</source>
          <target state="translated">iOS-specific</target>
        </trans-unit>
        <trans-unit id="6cd174f1f1f4678b2f45bb32e9f7e7d0e8408c6c" translate="yes" xml:space="preserve">
          <source>iOS: Not applicable.</source>
          <target state="translated">iOS : 해당되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6894917115822a232b49fdb872a0d3823299502e" translate="yes" xml:space="preserve">
          <source>iOS: The additional space will be rendered after each glyph.</source>
          <target state="translated">iOS : 각 문자 다음에 추가 공간이 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="01b510792e16701606382c676c2d0232d2aa6629" translate="yes" xml:space="preserve">
          <source>iPhone 4, 4S</source>
          <target state="translated">아이폰 4, 4S</target>
        </trans-unit>
        <trans-unit id="35392a896e2ac6d2a62439d6452d137de6df8b10" translate="yes" xml:space="preserve">
          <source>iPhone 5, 5c, 5s</source>
          <target state="translated">아이폰 5, 5C, 5S</target>
        </trans-unit>
        <trans-unit id="cb2c37f6ec81cbbacc1b4784317619c211276a50" translate="yes" xml:space="preserve">
          <source>iPhone 6</source>
          <target state="translated">아이폰 6</target>
        </trans-unit>
        <trans-unit id="629d965097cfee9c8762d274a45bbf3f1ae9489e" translate="yes" xml:space="preserve">
          <source>iPhone 6 plus</source>
          <target state="translated">아이폰 6 플러스</target>
        </trans-unit>
        <trans-unit id="55b00519c07d7934f0628c5b69fe1bd1a63f55ec" translate="yes" xml:space="preserve">
          <source>identifiers</source>
          <target state="translated">identifiers</target>
        </trans-unit>
        <trans-unit id="1adbcc344b317c2f3bd64fdac273f8b0dc410cdf" translate="yes" xml:space="preserve">
          <source>idle</source>
          <target state="translated">idle</target>
        </trans-unit>
        <trans-unit id="8b7a49f0d04ac22d60809b6a2193047eba93e3e1" translate="yes" xml:space="preserve">
          <source>idle, meaning there is no interaction with the navigation view happening at the time</source>
          <target state="translated">유휴 상태로, 해당 시점에 탐색보기와 상호 작용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39778b05d3cd398fc0fd215ba0edab268e3e32e2" translate="yes" xml:space="preserve">
          <source>idle, meaning there is no interaction with the page scroller happening at the time</source>
          <target state="translated">유휴 상태이므로 당시에 페이지 스크롤러와 상호 작용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4162035608e26853037857f6ca4388c6618e574f" translate="yes" xml:space="preserve">
          <source>importantForAccessibility (Android)</source>
          <target state="translated">중요한 접근성 (Android)</target>
        </trans-unit>
        <trans-unit id="ea1e9ad8264da1c1465a29c719e30a391465156c" translate="yes" xml:space="preserve">
          <source>in another app</source>
          <target state="translated">다른 앱에서</target>
        </trans-unit>
        <trans-unit id="1bd54a0e39f5ad06d99895a9b0e44c2afc522a39" translate="yes" xml:space="preserve">
          <source>indeterminateType</source>
          <target state="translated">indeterminateType</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="959f9d285da55798046dc3b56688c77bbef5e3ce" translate="yes" xml:space="preserve">
          <source>indianred (#cd5c5c)</source>
          <target state="translated">인디언 레드 (# cd5c5c)</target>
        </trans-unit>
        <trans-unit id="ac9fc5916060da79e327a915629cc06983a4b9b6" translate="yes" xml:space="preserve">
          <source>indigo (#4b0082)</source>
          <target state="translated">인디고 (# 4b0082)</target>
        </trans-unit>
        <trans-unit id="7d17465e5022cbfa8133e0ea8f59c414477071d8" translate="yes" xml:space="preserve">
          <source>int duration: The duration of the toast. May be ToastAndroid.SHORT or ToastAndroid.LONG</source>
          <target state="translated">int duration : 토스트 지속 시간. ToastAndroid.SHORT 또는 ToastAndroid.LONG 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e058a12059a9fdbdb53c0490c3d4ae5006fda274" translate="yes" xml:space="preserve">
          <source>investigate using &lt;code&gt;renderToHardwareTextureAndroid&lt;/code&gt; for complex, static content that is being animated/transformed (e.g. the &lt;code&gt;Navigator&lt;/code&gt; slide/alpha animations)</source>
          <target state="translated">애니메이션 / 변환되는 복잡한 정적 컨텐츠 (예 : &lt;code&gt;Navigator&lt;/code&gt; 슬라이드 / 알파 애니메이션)에 &lt;code&gt;renderToHardwareTextureAndroid&lt;/code&gt; 를 사용하여 조사</target>
        </trans-unit>
        <trans-unit id="55ad2f5aecc071ae654f77c894f8696251c8a6e5" translate="yes" xml:space="preserve">
          <source>isViewable</source>
          <target state="translated">isViewable</target>
        </trans-unit>
        <trans-unit id="3a7d9767b1233601ebf8b67495c6dc2ce8b8c2af" translate="yes" xml:space="preserve">
          <source>item</source>
          <target state="translated">item</target>
        </trans-unit>
        <trans-unit id="cb3cf847e15ab7fabb7dac26612d781a3f77cdd9" translate="yes" xml:space="preserve">
          <source>itemVisiblePercentThreshold</source>
          <target state="translated">itemVisiblePercentThreshold</target>
        </trans-unit>
        <trans-unit id="4470fa3a8cc88831c8616d6f8246f8ac17a5fc15" translate="yes" xml:space="preserve">
          <source>ivory (#fffff0)</source>
          <target state="translated">아이보리 (# fffff0)</target>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">key</target>
        </trans-unit>
        <trans-unit id="e4cb8511dd6266cf8df1bf1c344586dc3b9518b3" translate="yes" xml:space="preserve">
          <source>keyValuePairs</source>
          <target state="translated">keyValuePairs</target>
        </trans-unit>
        <trans-unit id="fe4e79c668bd9eb4ad8f7531c6c4a6f20bd5722e" translate="yes" xml:space="preserve">
          <source>keyboardType</source>
          <target state="translated">keyboardType</target>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">keys</target>
        </trans-unit>
        <trans-unit id="63f9668be3f855b58348248fffebeea85669bca6" translate="yes" xml:space="preserve">
          <source>khaki (#f0e68c)</source>
          <target state="translated">카키색 (# f0e68c)</target>
        </trans-unit>
        <trans-unit id="1196e9edcb7e7cdf6f2a8dab53a1ec67d0f874ad" translate="yes" xml:space="preserve">
          <source>ksh: &lt;code&gt;.profile&lt;/code&gt; or &lt;code&gt;$ENV&lt;/code&gt;</source>
          <target state="translated">ksh : &lt;code&gt;.profile&lt;/code&gt; 또는 &lt;code&gt;$ENV&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="916d01409bd8341b8a794e7d1d532390b0f945d2" translate="yes" xml:space="preserve">
          <source>lavender (#e6e6fa)</source>
          <target state="translated">라벤더 (# e6e6fa)</target>
        </trans-unit>
        <trans-unit id="3e94d40b2130420cebd99a5df6d3b632c90c8013" translate="yes" xml:space="preserve">
          <source>lavenderblush (#fff0f5)</source>
          <target state="translated">라벤더 홍당무 (# fff0f5)</target>
        </trans-unit>
        <trans-unit id="87ea090e9a1c521066ecf6052a47f0e56f2014b2" translate="yes" xml:space="preserve">
          <source>lawngreen (#7cfc00)</source>
          <target state="translated">잔디밭 녹색 (# 7cfc00)</target>
        </trans-unit>
        <trans-unit id="53061be32d3fb593d5cf21ed1867bd3a7256826d" translate="yes" xml:space="preserve">
          <source>lemonchiffon (#fffacd)</source>
          <target state="translated">레몬 시폰 (#fffacd)</target>
        </trans-unit>
        <trans-unit id="783c4eb63ccb7b1e23fb6d14c8690d1fd12832cd" translate="yes" xml:space="preserve">
          <source>light-content</source>
          <target state="translated">light-content</target>
        </trans-unit>
        <trans-unit id="2d32afcc386c71cf145904db3d463457bd0520bc" translate="yes" xml:space="preserve">
          <source>lightblue (#add8e6)</source>
          <target state="translated">연한 파랑 (# add8e6)</target>
        </trans-unit>
        <trans-unit id="7cec74d4d1f134f7defc5cad2d449001ef355a62" translate="yes" xml:space="preserve">
          <source>lightcoral (#f08080)</source>
          <target state="translated">라이트 코럴 (# f08080)</target>
        </trans-unit>
        <trans-unit id="93aa4ce28312231a14e216f7ccc7abc5e39125bd" translate="yes" xml:space="preserve">
          <source>lightcyan (#e0ffff)</source>
          <target state="translated">라이트 시안 (# e0ffff)</target>
        </trans-unit>
        <trans-unit id="d68f3d9b8d4ab821aac17fa4dd7da1e07be06bf5" translate="yes" xml:space="preserve">
          <source>lightgoldenrodyellow (#fafad2)</source>
          <target state="translated">라이트 골든로드 옐로우 (# fafad2)</target>
        </trans-unit>
        <trans-unit id="b4799cf1229ca5568edebf637e2e46ad6cf5313d" translate="yes" xml:space="preserve">
          <source>lightgray (#d3d3d3)</source>
          <target state="translated">연한 회색 (# d3d3d3)</target>
        </trans-unit>
        <trans-unit id="a0e0e87a58bb238851addc11e39611db52a5d661" translate="yes" xml:space="preserve">
          <source>lightgreen (#90ee90)</source>
          <target state="translated">연두색 (# 90ee90)</target>
        </trans-unit>
        <trans-unit id="d1ea8d9fd8cfe0f607d91e2a12914e7be89da686" translate="yes" xml:space="preserve">
          <source>lightgrey (#d3d3d3)</source>
          <target state="translated">연한 회색 (# d3d3d3)</target>
        </trans-unit>
        <trans-unit id="e7b8e06bdd26e4247eb0a565f78480c82ac1c429" translate="yes" xml:space="preserve">
          <source>lightpink (#ffb6c1)</source>
          <target state="translated">연분홍 (# ffb6c1)</target>
        </trans-unit>
        <trans-unit id="d7264bf9087b65fb56cc17c72dff2ebdf0c52795" translate="yes" xml:space="preserve">
          <source>lightsalmon (#ffa07a)</source>
          <target state="translated">lightsalmon (# ffa07a)</target>
        </trans-unit>
        <trans-unit id="7a1505d63e239e00bccd204590a4463259196ae9" translate="yes" xml:space="preserve">
          <source>lightseagreen (#20b2aa)</source>
          <target state="translated">연두색 (# 20b2aa)</target>
        </trans-unit>
        <trans-unit id="4b2a85e2229f15d3160665de5c52730cb2521a7b" translate="yes" xml:space="preserve">
          <source>lightskyblue (#87cefa)</source>
          <target state="translated">lightskyblue (# 87cefa)</target>
        </trans-unit>
        <trans-unit id="fffec3eb9879756daf3daba2ed37f6fa18ba64fd" translate="yes" xml:space="preserve">
          <source>lightslategrey (#778899)</source>
          <target state="translated">lightslategrey (# 778899)</target>
        </trans-unit>
        <trans-unit id="6c634aa8c92aeea317fccd2bdaf09c1a12fbae5c" translate="yes" xml:space="preserve">
          <source>lightsteelblue (#b0c4de)</source>
          <target state="translated">라이트 스틸 블루 (# b0c4de)</target>
        </trans-unit>
        <trans-unit id="d0f1014338ed8eb059b2a61f5c0d82352d83b0fe" translate="yes" xml:space="preserve">
          <source>lightyellow (#ffffe0)</source>
          <target state="translated">연 황색 (# ffffe0)</target>
        </trans-unit>
        <trans-unit id="4834472764cd5c7697979b3fc7bcf4902daf33bb" translate="yes" xml:space="preserve">
          <source>lime (#00ff00)</source>
          <target state="translated">라임 (# 00ff00)</target>
        </trans-unit>
        <trans-unit id="e206ddff3429ef33f714f8e5733209c7991fc9aa" translate="yes" xml:space="preserve">
          <source>limegreen (#32cd32)</source>
          <target state="translated">라임 그린 (# 32cd32)</target>
        </trans-unit>
        <trans-unit id="a69aa9f9d692ca287d41a8a10623682af2447471" translate="yes" xml:space="preserve">
          <source>linen (#faf0e6)</source>
          <target state="translated">린넨 (# faf0e6)</target>
        </trans-unit>
        <trans-unit id="ebf24f097b4786a3acbebb95c367b06cdf4d0237" translate="yes" xml:space="preserve">
          <source>locked-closed, meaning that the drawer will stay closed and not respond to gestures.</source>
          <target state="translated">잠겨 있음-서랍이 닫힌 상태로 유지되고 제스처에 응답하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3fb1a46d6dbd8ee94b0e78eaac999c2d1460ba80" translate="yes" xml:space="preserve">
          <source>locked-open, meaning that the drawer will stay opened and not respond to gestures. The drawer may still be opened and closed programmatically (&lt;code&gt;openDrawer&lt;/code&gt;/&lt;code&gt;closeDrawer&lt;/code&gt;).</source>
          <target state="translated">잠긴 상태로, 서랍이 열린 상태로 유지되고 제스처에 응답하지 않습니다. 프로그래밍 방식으로 서랍이 여전히 열리고 닫힐 수 있습니다 ( &lt;code&gt;openDrawer&lt;/code&gt; / &lt;code&gt;closeDrawer&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a4711c3edc78b9ccbc8539267ca508813c75efc9" translate="yes" xml:space="preserve">
          <source>login-password</source>
          <target state="translated">login-password</target>
        </trans-unit>
        <trans-unit id="f0c088428fcebaa6df3aae3db650a429e91ee7fb" translate="yes" xml:space="preserve">
          <source>magenta (#ff00ff)</source>
          <target state="translated">마젠타 (# ff00ff)</target>
        </trans-unit>
        <trans-unit id="3cd4540afb7e6059e47f5217697ad2a063d7e39e" translate="yes" xml:space="preserve">
          <source>make sure that you are &lt;strong&gt;not&lt;/strong&gt; using &lt;code&gt;needsOffscreenAlphaCompositing&lt;/code&gt;, which is disabled by default, as it greatly increases the per-frame load on the GPU in most cases.</source>
          <target state="translated">&lt;code&gt;needsOffscreenAlphaCompositing&lt;/code&gt; 을 사용 &lt;strong&gt;하지&lt;/strong&gt; 않도록하십시오 . 대부분의 경우 GPU의 프레임 당로드가 크게 증가하므로 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="704fdd4a0d819ffc22226afd261c27533b0f2b44" translate="yes" xml:space="preserve">
          <source>maroon (#800000)</source>
          <target state="translated">적갈색 (# 800000)</target>
        </trans-unit>
        <trans-unit id="31ca0a51a5c375a0737595e1b5774928cc75213a" translate="yes" xml:space="preserve">
          <source>mdpi Android devices (160 dpi)</source>
          <target state="translated">mdpi Android 장치 (160dpi)</target>
        </trans-unit>
        <trans-unit id="5e3905d64f5cc6d5b35301ee223b0a4683f290f9" translate="yes" xml:space="preserve">
          <source>measure(callback)</source>
          <target state="translated">measure(callback)</target>
        </trans-unit>
        <trans-unit id="07f59f0fb18ea437a84ad6d6362e67d24c98a921" translate="yes" xml:space="preserve">
          <source>measureInWindow(callback)</source>
          <target state="translated">measureInWindow(callback)</target>
        </trans-unit>
        <trans-unit id="e1b372625a9135ce49856b137583f87721bd43cb" translate="yes" xml:space="preserve">
          <source>measureLayout(relativeToNativeNode, onSuccess, onFail)</source>
          <target state="translated">measureLayout (relativeToNativeNode, onSuccess, onFail)</target>
        </trans-unit>
        <trans-unit id="68e1719db6ae796b5960b5b032dbb86acf1596da" translate="yes" xml:space="preserve">
          <source>mediumaquamarine (#66cdaa)</source>
          <target state="translated">중아 쿠아 마린 (# 66cdaa)</target>
        </trans-unit>
        <trans-unit id="fe0f9687da47a9f07dd1af0eb8cf872bd98ee76e" translate="yes" xml:space="preserve">
          <source>mediumblue (#0000cd)</source>
          <target state="translated">중간 파랑 (# 0000cd)</target>
        </trans-unit>
        <trans-unit id="90a21696ff9ca0d1f8c748cf61cb2029086de0e9" translate="yes" xml:space="preserve">
          <source>mediumorchid (#ba55d3)</source>
          <target state="translated">중간 난초 (# ba55d3)</target>
        </trans-unit>
        <trans-unit id="2b6f91753af6e460af9d8ea789da01c0407fb433" translate="yes" xml:space="preserve">
          <source>mediumpurple (#9370db)</source>
          <target state="translated">중간 보라색 (# 9370db)</target>
        </trans-unit>
        <trans-unit id="3def64b1c508be51c67ce56f8574eae452113b86" translate="yes" xml:space="preserve">
          <source>mediumseagreen (#3cb371)</source>
          <target state="translated">중간 바다색 (# 3cb371)</target>
        </trans-unit>
        <trans-unit id="c38a8a133f217437b12a1e33d304538b3a7c1771" translate="yes" xml:space="preserve">
          <source>mediumslateblue (#7b68ee)</source>
          <target state="translated">미디엄 슬레이트 블루 (# 7b68ee)</target>
        </trans-unit>
        <trans-unit id="bc8bb38545bdaef103330e32955776cf13b64d48" translate="yes" xml:space="preserve">
          <source>mediumspringgreen (#00fa9a)</source>
          <target state="translated">중간 스프링 그린 (# 00fa9a)</target>
        </trans-unit>
        <trans-unit id="da8347f1ebddb7c55785522b197dc9a56d301831" translate="yes" xml:space="preserve">
          <source>mediumturquoise (#48d1cc)</source>
          <target state="translated">중간 청록색 (# 48d1cc)</target>
        </trans-unit>
        <trans-unit id="f812c3c597cf2f8bcddb0b58c7b8698436de32f2" translate="yes" xml:space="preserve">
          <source>mediumvioletred (#c71585)</source>
          <target state="translated">중간 보라색 (# c71585)</target>
        </trans-unit>
        <trans-unit id="6f9b9af3cd6e8b8a73c2cdced37fe9f59226e27d" translate="yes" xml:space="preserve">
          <source>message</source>
          <target state="translated">message</target>
        </trans-unit>
        <trans-unit id="854b4b50d6cde41543c4999385ace23e4ca7cbf9" translate="yes" xml:space="preserve">
          <source>midnightblue (#191970)</source>
          <target state="translated">미드 나이트 블루 (# 191970)</target>
        </trans-unit>
        <trans-unit id="4cad4618a6c3959c28e56ddaa58cffce7b0c49ed" translate="yes" xml:space="preserve">
          <source>minimumViewTime</source>
          <target state="translated">minimumViewTime</target>
        </trans-unit>
        <trans-unit id="1513e1285435499496f7726b9d0f70ec11410d6f" translate="yes" xml:space="preserve">
          <source>mintcream (#f5fffa)</source>
          <target state="translated">민트 크림 (# f5fffa)</target>
        </trans-unit>
        <trans-unit id="7059c5d92bc9bc2cc29bb784061fb62a5b6f9450" translate="yes" xml:space="preserve">
          <source>mistyrose (#ffe4e1)</source>
          <target state="translated">미스티 로즈 (# ffe4e1)</target>
        </trans-unit>
        <trans-unit id="373efe0e8dc77adbfb3a5c65fedf71a79f224f4c" translate="yes" xml:space="preserve">
          <source>moccasin (#ffe4b5)</source>
          <target state="translated">모카신 (# ffe4b5)</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="af96e9cbe630a6d47fe20f4021ab82a8f3ba7d8e" translate="yes" xml:space="preserve">
          <source>n = 4: &lt;a href=&quot;http://easings.net/#easeInQuart&quot;&gt;http://easings.net/#easeInQuart&lt;/a&gt; n = 5: &lt;a href=&quot;http://easings.net/#easeInQuint&quot;&gt;http://easings.net/#easeInQuint&lt;/a&gt;</source>
          <target state="translated">n = 4 : &lt;a href=&quot;http://easings.net/#easeInQuart&quot;&gt;http://easings.net/#easeInQuart&lt;/a&gt; n = 5 : &lt;a href=&quot;http://easings.net/#easeInQuint&quot;&gt;http://easings.net/#easeInQuint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b68b9259925e903b7512fb2543525a5d0a02ac77" translate="yes" xml:space="preserve">
          <source>navajowhite (#ffdead)</source>
          <target state="translated">나바호 화이트 (#ffdead)</target>
        </trans-unit>
        <trans-unit id="22d0fd227c844e452566f9445bf7f0fd537534ed" translate="yes" xml:space="preserve">
          <source>navigator.geolocation</source>
          <target state="translated">navigator.geolocation</target>
        </trans-unit>
        <trans-unit id="0f66f319e54539ba0191ca507bfa15392b14bc53" translate="yes" xml:space="preserve">
          <source>navy (#000080)</source>
          <target state="translated">네이비 (# 000080)</target>
        </trans-unit>
        <trans-unit id="f8e966d1e207d02c44511a58dccff2f5429e9a3b" translate="yes" xml:space="preserve">
          <source>node</source>
          <target state="translated">node</target>
        </trans-unit>
        <trans-unit id="71f8e7976e4cbc4561c9d62fb283e7f788202acb" translate="yes" xml:space="preserve">
          <source>none</source>
          <target state="translated">none</target>
        </trans-unit>
        <trans-unit id="29539308b8d8d03b7b5969681abc976fdea0d491" translate="yes" xml:space="preserve">
          <source>normal: 0.998</source>
          <target state="translated">보통 : 0.998</target>
        </trans-unit>
        <trans-unit id="53b0a1b2fadf4e040cdc2155a7340de24aca93cb" translate="yes" xml:space="preserve">
          <source>number</source>
          <target state="translated">number</target>
        </trans-unit>
        <trans-unit id="35f4b6254de1af5440127c7e1a149e7b3821ab31" translate="yes" xml:space="preserve">
          <source>number (&lt;code&gt;NSInteger&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;CGFloat&lt;/code&gt;, &lt;code&gt;NSNumber&lt;/code&gt;)</source>
          <target state="translated">숫자 ( &lt;code&gt;NSInteger&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;CGFloat&lt;/code&gt; , &lt;code&gt;NSNumber&lt;/code&gt; )</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
