<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="nginx">
    <body>
      <group id="nginx">
        <trans-unit id="c1a62e56ee19b2a81001b3cc9edaf8d65a56049b" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;a href=&quot;https://tools.ietf.org/html/rfc5861#section-4&quot;&gt;stale-if-error&lt;/a&gt;&amp;rdquo; extension of the &amp;ldquo;Cache-Control&amp;rdquo; header field permits using a stale cached response in case of an error.</source>
          <target state="translated">&quot;Cache-Control&quot;헤더 필드 의 &quot; &lt;a href=&quot;https://tools.ietf.org/html/rfc5861#section-4&quot;&gt;stale-if-error&lt;/a&gt; &quot;확장은 오류 발생시 오래된 캐시 된 응답 사용을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3aa63cd966a9aeae97945d51ce9fd483fd1e1011" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;%s&lt;/code&gt;&amp;rdquo; format is suitable to output time in seconds.</source>
          <target state="translated">&quot; &lt;code&gt;%s&lt;/code&gt; &quot;형식은 시간을 초 단위로 출력하는 데 적합합니다.</target>
        </trans-unit>
        <trans-unit id="120fa06c76c9dcf8fda04bbe40c9bb221a0975b0" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; request will match configuration A, the &amp;ldquo;&lt;code&gt;/index.html&lt;/code&gt;&amp;rdquo; request will match configuration B, the &amp;ldquo;&lt;code&gt;/documents/document.html&lt;/code&gt;&amp;rdquo; request will match configuration C, the &amp;ldquo;&lt;code&gt;/images/1.gif&lt;/code&gt;&amp;rdquo; request will match configuration D, and the &amp;ldquo;&lt;code&gt;/documents/1.jpg&lt;/code&gt;&amp;rdquo; request will match configuration E.</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;/&lt;/code&gt; &amp;rdquo;요청은 구성 A와 일치하고&amp;ldquo; &lt;code&gt;/index.html&lt;/code&gt; &amp;rdquo;요청은 구성 B와 일치하고&amp;ldquo; &lt;code&gt;/documents/document.html&lt;/code&gt; &amp;rdquo;요청은 구성 C와 일치하며&amp;ldquo; &lt;code&gt;/images/1.gif&lt;/code&gt; &amp;rdquo;요청과 일치합니다 구성 D 및 &quot; &lt;code&gt;/documents/1.jpg&lt;/code&gt; &quot;요청은 구성 E와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="b90794ad9ae645586fc3aaaad9fcc17d0a3b4fe2" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;/s/link?md5=_e4Nc3iduzkWRm01TBBNYw&amp;amp;expires=2147483647&lt;/code&gt;&amp;rdquo; link restricts access to &amp;ldquo;&lt;code&gt;/s/link&lt;/code&gt;&amp;rdquo; for the client with the IP address 127.0.0.1. The link also has the limited lifetime until January 19, 2038 (GMT).</source>
          <target state="translated">&quot; &lt;code&gt;/s/link?md5=_e4Nc3iduzkWRm01TBBNYw&amp;amp;expires=2147483647&lt;/code&gt; &quot;링크 는 IP 주소가 127.0.0.1 인 클라이언트 &lt;code&gt;/s/link&lt;/code&gt; &quot; / s / link &quot;에 대한 액세스를 제한 합니다. 링크는 2038 년 1 월 19 일 (GMT)까지 수명이 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="85c5d75cbfd2b2a8eb19e31ad60291b3eb7d6bde" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;@&lt;/code&gt;&amp;rdquo; prefix defines a named location. Such a location is not used for a regular request processing, but instead used for request redirection. They cannot be nested, and cannot contain nested locations.</source>
          <target state="translated">&quot; &lt;code&gt;@&lt;/code&gt; &quot;접두사는 명명 된 위치를 정의합니다. 이러한 위치는 일반 요청 처리에 사용되지 않고 대신 요청 리디렉션에 사용됩니다. 중첩 될 수 없으며 중첩 된 위치를 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c504e75d616268fc6d6f6c74e120fbad46203923" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;if&lt;/code&gt;&amp;rdquo; keyword is separated from the condition by one space. Opening brace is located on the same line, or on a dedicated line if the condition takes several lines. Closing brace is located on a dedicated line, optionally followed by &amp;ldquo;&lt;code&gt;else if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt;&amp;rdquo;. Usually, there is an empty line before the &amp;ldquo;&lt;code&gt;else if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt;&amp;rdquo; part:</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;if&lt;/code&gt; &amp;rdquo;키워드는 조건과 하나의 공백으로 구분됩니다. 여는 중괄호는 조건이 여러 줄이 필요한 경우 동일한 줄 또는 전용 줄에 있습니다. 닫는 중괄호는 전용 줄에 있으며 선택적으로 &quot; &lt;code&gt;else if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; &quot;가 뒤에옵니다 . 일반적으로 &quot; &lt;code&gt;else if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; &quot;부분 앞에는 빈 줄이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ab9fc795bf3f90f7987501f2e1f4a8e488b6fb7" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;switch&lt;/code&gt;&amp;rdquo; keyword is separated from the condition by one space. Opening brace is located on the same line. Closing brace is located on a dedicated line. The &amp;ldquo;&lt;code&gt;case&lt;/code&gt;&amp;rdquo; keywords are lined up with &amp;ldquo;&lt;code&gt;switch&lt;/code&gt;&amp;rdquo;:</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;switch&lt;/code&gt; &amp;rdquo;키워드는 조건과 하나의 공백으로 구분됩니다. 여는 중괄호는 같은 줄에 있습니다. 결산 버팀대는 전용선에 있습니다. &amp;ldquo; &lt;code&gt;case&lt;/code&gt; &amp;rdquo;키워드는&amp;ldquo; &lt;code&gt;switch&lt;/code&gt; &quot;로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="26641dcb9830b9bb27cf8bd91533e81a4704018f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Keep-Alive: timeout=&lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt;&amp;rdquo; header field is recognized by Mozilla and Konqueror. MSIE closes keep-alive connections by itself in about 60 seconds.</source>
          <target state="translated">&amp;ldquo;Keep-Alive : timeout = &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; &amp;rdquo;헤더 필드는 Mozilla와 Konqueror에 의해 인식됩니다. MSIE는 약 60 초 내에 연결 유지 연결을 자체적으로 닫습니다.</target>
        </trans-unit>
        <trans-unit id="3f8305dc561be59e6a35b59f51f36da000c90835" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;X-Accel-Expires&amp;rdquo; header field sets caching time of a response in seconds. The zero value disables caching for a response. If the value starts with the &lt;code&gt;@&lt;/code&gt; prefix, it sets an absolute time in seconds since Epoch, up to which the response may be cached.</source>
          <target state="translated">&quot;X-Accel-Expires&quot;헤더 필드는 응답의 캐싱 시간을 초 단위로 설정합니다. 값이 0이면 응답 캐싱이 비활성화됩니다. 값이 &lt;code&gt;@&lt;/code&gt; 로 시작하면 접두어로 하면 응답이 캐시 될 수있는 Epoch 이후의 절대 시간 (초)을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6c3fc0ca327cf79a4838cc9422f78453b9c2a1e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#break&quot;&gt;break&lt;/a&gt;, &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt;, &lt;a href=&quot;#return&quot;&gt;return&lt;/a&gt;, &lt;a href=&quot;#rewrite&quot;&gt;rewrite&lt;/a&gt;, and &lt;a href=&quot;#set&quot;&gt;set&lt;/a&gt; directives are processed in the following order:</source>
          <target state="translated">&lt;a href=&quot;#break&quot;&gt;휴식&lt;/a&gt; , &lt;a href=&quot;#if&quot;&gt;경우&lt;/a&gt; , &lt;a href=&quot;#return&quot;&gt;반환&lt;/a&gt; , &lt;a href=&quot;#rewrite&quot;&gt;재 작성&lt;/a&gt; 및 &lt;a href=&quot;#set&quot;&gt;설정&lt;/a&gt; 지침은 다음과 같은 순서로 처리됩니다</target>
        </trans-unit>
        <trans-unit id="c2d52b3708f16f7fda23067860708179667c19e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#def_nginx_http_upstream_conf_server&quot;&gt;drain&lt;/a&gt; parameter was added in &lt;a href=&quot;#api_version&quot;&gt;version&lt;/a&gt; 2.</source>
          <target state="translated">&lt;a href=&quot;#def_nginx_http_upstream_conf_server&quot;&gt;드레인&lt;/a&gt; 파라미터 첨가 하였다 &lt;a href=&quot;#api_version&quot;&gt;버전&lt;/a&gt; 2.</target>
        </trans-unit>
        <trans-unit id="bf600422e032aded0cfedf6cf82b427cc8d6d8e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#discarded&quot;&gt;discarded&lt;/a&gt; field in &lt;a href=&quot;#server_zones&quot;&gt;server_zones&lt;/a&gt; was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 6.</source>
          <target state="translated">&lt;a href=&quot;#discarded&quot;&gt;폐기&lt;/a&gt; 필드 &lt;a href=&quot;#server_zones&quot;&gt;server_zones을&lt;/a&gt; 첨가 하였다 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 6.</target>
        </trans-unit>
        <trans-unit id="bb25151d199a80df39779b9632e1768047e791c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#generation&quot;&gt;generation&lt;/a&gt; field was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 5.</source>
          <target state="translated">&lt;a href=&quot;#generation&quot;&gt;세대&lt;/a&gt; 필드에 추가 된 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 5.</target>
        </trans-unit>
        <trans-unit id="9a8e072ac261c5bc29428013e22b31b910d54a81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#header_time&quot;&gt;header_time&lt;/a&gt; and &lt;a href=&quot;#response_time&quot;&gt;response_time&lt;/a&gt; fields in &lt;a href=&quot;#upstreams&quot;&gt;upstreams&lt;/a&gt; were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 5.</source>
          <target state="translated">&lt;a href=&quot;#upstreams&quot;&gt;업스트림&lt;/a&gt; 의 &lt;a href=&quot;#header_time&quot;&gt;header_time&lt;/a&gt; 및 &lt;a href=&quot;#response_time&quot;&gt;response_time&lt;/a&gt; 필드 는 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 5 에서 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="76800ca1067b45bdb635c35a31fe2857ea4084d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#id&quot;&gt;id&lt;/a&gt; and &lt;a href=&quot;#max_conns&quot;&gt;max_conns&lt;/a&gt; fields in &lt;a href=&quot;#upstreams&quot;&gt;upstreams&lt;/a&gt; were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 3.</source>
          <target state="translated">&lt;a href=&quot;#upstreams&quot;&gt;업스트림&lt;/a&gt; 의 &lt;a href=&quot;#id&quot;&gt;id&lt;/a&gt; 및 &lt;a href=&quot;#max_conns&quot;&gt;max_conns&lt;/a&gt; 필드 는 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 3 에서 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cc93afe9dca7f453b808f96e4299598018e966e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#name&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;#service&quot;&gt;service&lt;/a&gt; fields in &lt;a href=&quot;#upstreams&quot;&gt;http&lt;/a&gt; and &lt;a href=&quot;#stream_upstreams&quot;&gt;stream&lt;/a&gt; upstreams were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 8.</source>
          <target state="translated">&lt;a href=&quot;#upstreams&quot;&gt;http&lt;/a&gt; 및 &lt;a href=&quot;#stream_upstreams&quot;&gt;스트림&lt;/a&gt; 업스트림 의 &lt;a href=&quot;#name&quot;&gt;이름&lt;/a&gt; 및 &lt;a href=&quot;#service&quot;&gt;서비스&lt;/a&gt; 필드 가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 8에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f4dcf5ea05fd963b3d3229979f7f70526b631dc5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#nginx_build&quot;&gt;nginx_build&lt;/a&gt; and &lt;a href=&quot;#ppid&quot;&gt;ppid&lt;/a&gt; fields were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 8.</source>
          <target state="translated">&lt;a href=&quot;#nginx_build&quot;&gt;nginx_build&lt;/a&gt; 와 &lt;a href=&quot;#ppid&quot;&gt;PPID&lt;/a&gt; 필드에 추가 된 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 8.</target>
        </trans-unit>
        <trans-unit id="975fa3b6546019dd1ff503c4c2fc2c7034ea8b2f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pid&quot;&gt;pid&lt;/a&gt; field was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 6.</source>
          <target state="translated">&lt;a href=&quot;#pid&quot;&gt;PID&lt;/a&gt; 필드가 추가 된 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 6.</target>
        </trans-unit>
        <trans-unit id="9c6f4cd98fe5b22124d9f8a6dc4c66838fb58afd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#queue&quot;&gt;queue&lt;/a&gt; status data were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 6.</source>
          <target state="translated">&lt;a href=&quot;#queue&quot;&gt;큐&lt;/a&gt; 상태 데이터에 첨가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 6.</target>
        </trans-unit>
        <trans-unit id="68727e0d25d8c501e3b3a114a5f830dcd02b08d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#respawned&quot;&gt;respawned&lt;/a&gt; field in &lt;a href=&quot;#processes&quot;&gt;processes&lt;/a&gt; was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 5.</source>
          <target state="translated">&lt;a href=&quot;#processes&quot;&gt;프로세스&lt;/a&gt; 의 &lt;a href=&quot;#respawned&quot;&gt;respawned&lt;/a&gt; 필드가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 5 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0ea48e43d7fa36744ab2a1bbe474369a25ee1a54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#selected&quot;&gt;selected&lt;/a&gt; field in &lt;a href=&quot;#upstreams&quot;&gt;upstreams&lt;/a&gt; was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 4.</source>
          <target state="translated">&lt;a href=&quot;#selected&quot;&gt;선택된&lt;/a&gt; 필드 &lt;a href=&quot;#upstreams&quot;&gt;업스트림을&lt;/a&gt; 첨가 하였다 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 4.</target>
        </trans-unit>
        <trans-unit id="461bc1a6862fcf1e972df8c9eb992c17834ef542" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#server_zones&quot;&gt;server_zones&lt;/a&gt;, &lt;a href=&quot;#caches&quot;&gt;caches&lt;/a&gt;, and &lt;a href=&quot;#load_timestamp&quot;&gt;load_timestamp&lt;/a&gt; status data were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 2.</source>
          <target state="translated">&lt;a href=&quot;#server_zones&quot;&gt;server_zones&lt;/a&gt; , &lt;a href=&quot;#caches&quot;&gt;캐시&lt;/a&gt; 및 &lt;a href=&quot;#load_timestamp&quot;&gt;load_timestamp의&lt;/a&gt; 상태 데이터에 추가 된 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 2.</target>
        </trans-unit>
        <trans-unit id="dd2d623f7dccb7f061b6afc9941727c16965d172" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#sessions&quot;&gt;sessions&lt;/a&gt; status data and the &lt;a href=&quot;#stream_discarded&quot;&gt;discarded&lt;/a&gt; field in stream &lt;a href=&quot;#stream_server_zones&quot;&gt;server_zones&lt;/a&gt; were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 7.</source>
          <target state="translated">스트림 &lt;a href=&quot;#stream_server_zones&quot;&gt;server_zones&lt;/a&gt; 의 &lt;a href=&quot;#sessions&quot;&gt;세션&lt;/a&gt; 상태 데이터 및 &lt;a href=&quot;#stream_discarded&quot;&gt;삭제 된&lt;/a&gt; 필드 가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 7에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f97c59063880648a23beb2ede003e7d6529469a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#slabs&quot;&gt;slabs&lt;/a&gt; status data were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 8.</source>
          <target state="translated">&lt;a href=&quot;#slabs&quot;&gt;석판&lt;/a&gt; 상태 데이터에 추가 된 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 8.</target>
        </trans-unit>
        <trans-unit id="08cbed281e50a10850f96b1d8cc729d2193aafee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl&quot;&gt;ssl&lt;/a&gt; status data were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 6.</source>
          <target state="translated">&lt;a href=&quot;#ssl&quot;&gt;SSL의&lt;/a&gt; 상태 데이터에 첨가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 6.</target>
        </trans-unit>
        <trans-unit id="31b49ec65eff3dac8b4688118b3fa4c75ee2f0f3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#state&quot;&gt;checking&lt;/a&gt; state was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 8.</source>
          <target state="translated">&lt;a href=&quot;#state&quot;&gt;검사&lt;/a&gt; 상태에 첨가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 8.</target>
        </trans-unit>
        <trans-unit id="dfddad449fe45ffbf42cb620be2055157c116bdf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#state&quot;&gt;draining&lt;/a&gt; state in &lt;a href=&quot;#upstreams&quot;&gt;upstreams&lt;/a&gt; was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 4.</source>
          <target state="translated">&lt;a href=&quot;#upstreams&quot;&gt;업스트림&lt;/a&gt; 의 &lt;a href=&quot;#state&quot;&gt;배수&lt;/a&gt; 상태 가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 에 추가되었습니다 4 .</target>
        </trans-unit>
        <trans-unit id="ba0849438f31795c1825c981fe89ca993ddb466d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#stream&quot;&gt;stream&lt;/a&gt; status data were added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 5.</source>
          <target state="translated">&lt;a href=&quot;#stream&quot;&gt;스트림&lt;/a&gt; 상태 데이터에 첨가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 5.</target>
        </trans-unit>
        <trans-unit id="5739489ea173a23b8de8bb7c3e28b11c0d71dcff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#stream_keyvals_&quot;&gt;/stream/keyvals/&lt;/a&gt; data were added in &lt;a href=&quot;#api_version&quot;&gt;version&lt;/a&gt; 2.</source>
          <target state="translated">&lt;a href=&quot;#stream_keyvals_&quot;&gt;/ 스트림 / keyvals /&lt;/a&gt; 데이터에 첨가 &lt;a href=&quot;#api_version&quot;&gt;버전&lt;/a&gt; 2.</target>
        </trans-unit>
        <trans-unit id="345f23af573ceeedcf455b3d767960716704586e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#stream_zone_sync_&quot;&gt;/stream/zone_sync/&lt;/a&gt; data were added in &lt;a href=&quot;#api_version&quot;&gt;version&lt;/a&gt; 3.</source>
          <target state="translated">&lt;a href=&quot;#stream_zone_sync_&quot;&gt;/ 스트림 / zone_sync /&lt;/a&gt; 데이터에 첨가 &lt;a href=&quot;#api_version&quot;&gt;버전&lt;/a&gt; 3.</target>
        </trans-unit>
        <trans-unit id="368d80625ce139631d77b705b9765262522fd183" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#string_tobytes&quot;&gt;toBytes()&lt;/a&gt; method serializes a Unicode string with code points up to 255 into a byte string, otherwise, &lt;code&gt;null&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;a href=&quot;#string_tobytes&quot;&gt;toBytes는 ()&lt;/a&gt; 메소드가 바이트의 문자열로 최대 255 코드 포인트로 유니 코드 문자열 직렬화 달리, &lt;code&gt;null&lt;/code&gt; 가 반환된다 :</target>
        </trans-unit>
        <trans-unit id="ea23115bc195c543817c18e93496e632b289f201" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zombies&quot;&gt;zombies&lt;/a&gt; field was moved from nginx &lt;a href=&quot;../debugging_log&quot;&gt;debug&lt;/a&gt; version in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 6.</source>
          <target state="translated">&lt;a href=&quot;#zombies&quot;&gt;좀비&lt;/a&gt; 필드의 nginx에서 이동 된 &lt;a href=&quot;../debugging_log&quot;&gt;디버그&lt;/a&gt; 에서 버전 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 6.</target>
        </trans-unit>
        <trans-unit id="b1463289dc86319f0d6b4369d334ffce037242a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zone&quot;&gt;zone&lt;/a&gt; field in &lt;a href=&quot;#upstreams&quot;&gt;http&lt;/a&gt; and &lt;a href=&quot;#stream_upstreams&quot;&gt;stream&lt;/a&gt; upstreams was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 8.</source>
          <target state="translated">&lt;a href=&quot;#upstreams&quot;&gt;http&lt;/a&gt; 및 &lt;a href=&quot;#stream_upstreams&quot;&gt;스트림&lt;/a&gt; 업스트림 의 &lt;a href=&quot;#zone&quot;&gt;영역&lt;/a&gt; 필드 가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 8 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f64b7103e626958973df43adfd0cd8a8b9bfeb10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../http/ngx_http_upstream_module&quot;&gt;ngx_http_upstream_module&lt;/a&gt; can be configured explicitly by placing the corresponding &lt;a href=&quot;../http/ngx_http_upstream_module#upstream&quot;&gt;upstream&lt;/a&gt; block into the configuration file, or implicitly by using directives such as &lt;a href=&quot;../http/ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; that accept a URL that gets evaluated at some point into a list of servers. The alternative load-balancing methods are available only with an explicit upstream configuration. The upstream module configuration has its own directive context &lt;code&gt;NGX_HTTP_UPS_CONF&lt;/code&gt;. The structure is defined as follows:</source>
          <target state="translated">&lt;a href=&quot;../http/ngx_http_upstream_module&quot;&gt;ngx_http_upstream_module는&lt;/a&gt; 해당 배치하여 명시 적으로 구성 할 수 있습니다 &lt;a href=&quot;../http/ngx_http_upstream_module#upstream&quot;&gt;업스트림&lt;/a&gt; 또는 암시 적으로 다음과 같은 지침을 사용하여 구성 파일에 블록을 &lt;a href=&quot;../http/ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; 서버 목록에 어떤 시점에서 평가됩니다 URL을 받아들입니다. 대체로드 밸런싱 방법은 명시적인 업스트림 구성에서만 사용할 수 있습니다. 업스트림 모듈 구성에는 자체 지시문 컨텍스트 &lt;code&gt;NGX_HTTP_UPS_CONF&lt;/code&gt; 가 있습니다. 구조는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="18561d60728d10ad731fa172212e2caaf8930357" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../http/ngx_http_upstream_module&quot;&gt;ngx_http_upstream_module&lt;/a&gt; provides the basic functionality needed to pass requests to remote servers. Modules that implement specific protocols, such as HTTP or FastCGI, use this functionality. The module also provides an interface for creating custom load-balancing modules and implements a default round-robin method.</source>
          <target state="translated">&lt;a href=&quot;../http/ngx_http_upstream_module&quot;&gt;ngx_http_upstream_module는&lt;/a&gt; 원격 서버로 요청을 전달하는 데 필요한 기본 기능을 제공합니다. HTTP 또는 FastCGI와 같은 특정 프로토콜을 구현하는 모듈은이 기능을 사용합니다. 이 모듈은 또한 맞춤형로드 밸런싱 모듈을 생성하기위한 인터페이스를 제공하며 기본 라운드 로빈 방법을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="e992d2e9d2ebce27030dd7fed932ff2dea4a890d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../http/ngx_http_upstream_module#least_conn&quot;&gt;least_conn&lt;/a&gt; and &lt;a href=&quot;../http/ngx_http_upstream_module#hash&quot;&gt;hash&lt;/a&gt; modules implement alternative load-balancing methods, but are actually implemented as extensions of the upstream round-robin module and share a lot of code with it, such as the representation of a server group. The &lt;a href=&quot;../http/ngx_http_upstream_module#keepalive&quot;&gt;keepalive&lt;/a&gt; module is an independent module that extends upstream functionality.</source>
          <target state="translated">&lt;a href=&quot;../http/ngx_http_upstream_module#least_conn&quot;&gt;least_conn&lt;/a&gt; 및 &lt;a href=&quot;../http/ngx_http_upstream_module#hash&quot;&gt;해시&lt;/a&gt; 모듈은 다른로드 밸런싱 방법을 구현하지만, 실제로 이러한 서버 그룹의 표현으로, 상류 라운드 로빈 모듈의 확장으로 구현하고 그것으로 많은 코드를 공유하고 있습니다. &lt;a href=&quot;../http/ngx_http_upstream_module#keepalive&quot;&gt;킵 얼라이브&lt;/a&gt; 모듈 상류 기능을 확장 독립적 인 모듈이다.</target>
        </trans-unit>
        <trans-unit id="161974203cd4bcbb3783fda19dd29d1045d5c418" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../stream/ngx_stream_upstream_module#max_conns&quot;&gt;max_conns&lt;/a&gt; limit for the server.</source>
          <target state="translated">서버 의 &lt;a href=&quot;../stream/ngx_stream_upstream_module#max_conns&quot;&gt;max_conns&lt;/a&gt; 제한입니다.</target>
        </trans-unit>
        <trans-unit id="1aebfd18d11d90ec7ea8dc8d4b274c95c9e2cc07" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../stream/ngx_stream_upstream_module#service&quot;&gt;service&lt;/a&gt; parameter value of the &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;server&lt;/a&gt; directive.</source>
          <target state="translated">&lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;서버&lt;/a&gt; 지시문 의 &lt;a href=&quot;../stream/ngx_stream_upstream_module#service&quot;&gt;서비스&lt;/a&gt; 매개 변수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="1bc77c90f49790d6a37a5d26ced91488543aefe2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://hg.nginx.org/nginx-dev-examples&quot;&gt;nginx-dev-examples&lt;/a&gt; repository provides nginx module examples.</source>
          <target state="translated">&lt;a href=&quot;http://hg.nginx.org/nginx-dev-examples&quot;&gt;의 nginx-DEV-예제&lt;/a&gt; 저장소 Nginx의 모듈 예를 제공한다.</target>
        </trans-unit>
        <trans-unit id="ad31baff57e5633a38db23cd5818898c11e6405b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://hg.nginx.org/njs&quot;&gt;repository&lt;/a&gt; with njs sources can be cloned with the following command: (requires &lt;a href=&quot;https://www.mercurial-scm.org&quot;&gt;Mercurial&lt;/a&gt; client):</source>
          <target state="translated">&lt;a href=&quot;http://hg.nginx.org/njs&quot;&gt;저장소&lt;/a&gt; NJS 소스로는 다음과 같은 명령을 복제 할 수 있습니다 (필요 &lt;a href=&quot;https://www.mercurial-scm.org&quot;&gt;의욕&lt;/a&gt; 클라이언트) :</target>
        </trans-unit>
        <trans-unit id="5cc39ecf72757c1c0e93289b3282db624802c498" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ngx_core_module#error_log&quot;&gt;error_log&lt;/a&gt; and &lt;a href=&quot;http/ngx_http_log_module#access_log&quot;&gt;access_log&lt;/a&gt; directives support logging to syslog. The following parameters configure logging to syslog:</source>
          <target state="translated">&lt;a href=&quot;ngx_core_module#error_log&quot;&gt;의 error_log&lt;/a&gt; 및 &lt;a href=&quot;http/ngx_http_log_module#access_log&quot;&gt;ACCESS_LOG&lt;/a&gt; 지침은 syslog에 로그인을 지원합니다. 다음 매개 변수는 syslog에 대한 로깅을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="942e8506fef47ec74cb82adbaf5b721bd3198b16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ngx_http_autoindex_module&quot;&gt;ngx_http_autoindex_module&lt;/a&gt;, &lt;a href=&quot;ngx_http_random_index_module&quot;&gt;ngx_http_random_index_module&lt;/a&gt;, and &lt;a href=&quot;ngx_http_dav_module&quot;&gt;ngx_http_dav_module&lt;/a&gt; modules currently ignore this directive.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_autoindex_module&quot;&gt;ngx_http_autoindex_module&lt;/a&gt; , &lt;a href=&quot;ngx_http_random_index_module&quot;&gt;ngx_http_random_index_module&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_dav_module&quot;&gt;ngx_http_dav_module&lt;/a&gt; 모듈은 현재이 지침을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="65b3f63fd791ffa5bfa328a21edd39b3aae13e4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ngx_http_upstream_module#max_conns&quot;&gt;max_conns&lt;/a&gt; limit for the server.</source>
          <target state="translated">서버 의 &lt;a href=&quot;ngx_http_upstream_module#max_conns&quot;&gt;max_conns&lt;/a&gt; 제한입니다.</target>
        </trans-unit>
        <trans-unit id="5c29018e8eb6d21ead1e386ebaa49df690871ed6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;max_fails&lt;/a&gt; directive sets the number of consecutive unsuccessful attempts to communicate with the server that should happen during &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;fail_timeout&lt;/a&gt;. By default, &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;max_fails&lt;/a&gt; is set to 1. When it is set to 0, health checks are disabled for this server. The &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;fail_timeout&lt;/a&gt; parameter also defines how long the server will be marked as failed. After &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;fail_timeout&lt;/a&gt; interval following the server failure, nginx will start to gracefully probe the server with the live client&amp;rsquo;s requests. If the probes have been successful, the server is marked as a live one.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;max_fails는&lt;/a&gt; 세트를하는 동안 발생해야 서버와 통신하는 연속 실패 시도 횟수 지시어 &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;fail_timeout를&lt;/a&gt; . 기본적으로 &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;max_fails&lt;/a&gt; 는 1로 설정되어 있습니다. 0으로 설정하면이 서버에 대한 상태 확인이 비활성화됩니다. &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;fail_timeout의&lt;/a&gt; 매개 변수는 실패로 서버가 표시됩니다 시간을 정의합니다. 서버 장애 후 &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;fail_timeout&lt;/a&gt; 간격이 지나면 nginx는 라이브 클라이언트의 요청으로 서버를 정상적으로 검사하기 시작합니다. 프로브가 성공한 경우 서버는 활성화 된 것으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5d5dc050dd709debf71ccd2c321538092b581205" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ngx_http_upstream_module#service&quot;&gt;service&lt;/a&gt; parameter value of the &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;server&lt;/a&gt; directive.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;서버&lt;/a&gt; 지시문 의 &lt;a href=&quot;ngx_http_upstream_module#service&quot;&gt;서비스&lt;/a&gt; 매개 변수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="860d36cf9a3f2a212a6e6f2081d8a789ed5049c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$gzip_ratio&lt;/code&gt; variable can be used to log the achieved compression ratio.</source>
          <target state="translated">&lt;code&gt;$gzip_ratio&lt;/code&gt; 변수가 달성 압축비를 기록하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="e7163e012bfe02999fc5afb2190ff3036aa2df84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/data/w3/i/top.gif&lt;/code&gt; file will be sent in response to the &amp;ldquo;&lt;code&gt;/i/top.gif&lt;/code&gt;&amp;rdquo; request.</source>
          <target state="translated">&lt;code&gt;/data/w3/i/top.gif&lt;/code&gt; 의 파일이 &quot;에 대한 응답으로 전송됩니다 &lt;code&gt;/i/top.gif&lt;/code&gt; &quot;요구.</target>
        </trans-unit>
        <trans-unit id="86e008d16e32c244a21b5e5a97a2587316af40b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;i&gt;connections&lt;/i&gt;&lt;/code&gt; parameter sets the maximum number of idle keepalive connections to upstream servers that are preserved in the cache of each worker process. When this number is exceeded, the least recently used connections are closed.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;connections&lt;/i&gt;&lt;/code&gt; 설정 매개 변수는 유휴 연결 유지 연결의 최대 수는 각 작업자 프로세스의 캐시에 보존하는 서버를 업스트림합니다. 이 수를 초과하면 가장 최근에 사용한 연결이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="af3614c1c538c1b96367ccadf85e714a2d0d92ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;i&gt;domain&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; strings can contain variables:</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;domain&lt;/i&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; 문자열 변수를 포함 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1ea53ec0ffee4805979a165e8dfe464aa18ac861" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; must contain 80 or 48 bytes of random data and can be created using the following command:</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; 임의의 데이터의 80 또는 48 바이트를 포함해야하며 다음 명령을 사용하여 만들 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="c3a4624fa9cd77cba56967d8100a14ea7521e090" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; name can contain variables.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; 이름은 변수를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f3c28b7b72b97400c2ee565d503d4448578380b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; strings can contain variables:</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; 문자열 변수를 포함 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="9d3aa48db79e148ebfa2b1bbf76a3fee01569143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; value can contain variables, except &lt;code&gt;$document_root&lt;/code&gt; and &lt;code&gt;$realpath_root&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; 값은 변수를 포함 제외시켰다 수 &lt;code&gt;$document_root&lt;/code&gt; 와 &lt;code&gt;$realpath_root&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f0f031f0c8ac5354aaed98548e130c593f7ddb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; value can contain variables.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; 값은 변수를 포함 할 수있다.</target>
        </trans-unit>
        <trans-unit id="443f2efa1d2aff0db9eb97a34ae3ec2a1c3a740a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EPOLLRDHUP&lt;/code&gt; (Linux 2.6.17, glibc 2.8) and &lt;code&gt;EPOLLEXCLUSIVE&lt;/code&gt; (Linux 4.5, glibc 2.24) flags are supported since 1.11.3.</source>
          <target state="translated">&lt;code&gt;EPOLLRDHUP&lt;/code&gt; (리눅스 2.6.17, glibc는 2.8) 및 &lt;code&gt;EPOLLEXCLUSIVE&lt;/code&gt; (리눅스 4.5의 glibc 2.24) 플래그는 1.11.3부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="13f0af532f424299163908258227a6830f9d8e6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON&lt;/code&gt; object (ES 5.1) provides functions to convert njs values to and from JSON format.</source>
          <target state="translated">&lt;code&gt;JSON&lt;/code&gt; 의 객체 (ES 5.1) 및 JSON 포맷 변환에서의 값 NJS하는 기능을 제공한다.</target>
        </trans-unit>
        <trans-unit id="d8c5977cdc18f03aa8be563ff76a5e612f8f4b10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NGX_CORE_MODULE&lt;/code&gt; is the most basic and thus the most generic and most low-level type of module. The other module types are implemented on top of it and provide a more convenient way to deal with corresponding domains, like handling events or HTTP requests.</source>
          <target state="translated">&lt;code&gt;NGX_CORE_MODULE&lt;/code&gt; 는 가장 기본적이고 모듈 따라서 가장 일반적이고 가장 낮은 수준의 유형입니다. 다른 모듈 유형은 그 위에 구현되며 이벤트 또는 HTTP 요청 처리와 같은 해당 도메인을 처리하는보다 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cf019619e806d3c747527ad6a9abd7bf1a6313c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; constructor corresponds to a standard JS object.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 표준 JS 객체 생성자 대응한다.</target>
        </trans-unit>
        <trans-unit id="03685f1487b689c6e942678e48e2f0411f99f48b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SCRIPT_FILENAME&lt;/code&gt; parameter is used in PHP for determining the script name, and the &lt;code&gt;QUERY_STRING&lt;/code&gt; parameter is used to pass request parameters.</source>
          <target state="translated">&lt;code&gt;SCRIPT_FILENAME&lt;/code&gt; 의 파라미터들은 스크립트 이름을 결정 PHP에 사용되고, &lt;code&gt;QUERY_STRING&lt;/code&gt; 의 파라미터는 요청 파라미터를 전달하는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="6af111ab4694d3bb516447c9088aec8b6faaa697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TLSv1.1&lt;/code&gt; and &lt;code&gt;TLSv1.2&lt;/code&gt; parameters (1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.</source>
          <target state="translated">&lt;code&gt;TLSv1.1&lt;/code&gt; 및 &lt;code&gt;TLSv1.2&lt;/code&gt; 파라미터 (1.1.13, 1.0.12)은 OpenSSL 1.0.1 이상을 사용하는 작업 만.</target>
        </trans-unit>
        <trans-unit id="b82f0568103774091ac5dbf140a010f213d9e77f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TLSv1.1&lt;/code&gt; and &lt;code&gt;TLSv1.2&lt;/code&gt; parameters work only when OpenSSL 1.0.1 or higher is used.</source>
          <target state="translated">&lt;code&gt;TLSv1.1&lt;/code&gt; 및 &lt;code&gt;TLSv1.2&lt;/code&gt; 은 OpenSSL 1.0.1 이상을 사용하는 경우 매개 변수에만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="fcb6cf04184a67ebf3ed98b2db09b9391d61486c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TLSv1.3&lt;/code&gt; parameter (1.13.0) works only when OpenSSL 1.1.1 built with TLSv1.3 support is used.</source>
          <target state="translated">&lt;code&gt;TLSv1.3&lt;/code&gt; 의 TLSv1.3 지원 내장은 OpenSSL 1.1.1을 사용하는 경우 매개 변수 (1.13.0)는에만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d51d16bf460db53183380f4cd638dd0dada40d0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto&lt;/code&gt; parameter is supported starting from versions 1.3.8 and 1.2.5.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; 매개 변수는 버전 1.3.8과 1.2.5부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="567613440ad78a027f4602cc7d2fc1dd9a10595d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build&lt;/code&gt; parameter (1.11.10) enables emitting a &lt;a href=&quot;../configure#build&quot;&gt;build name&lt;/a&gt; along with nginx version.</source>
          <target state="translated">&lt;code&gt;build&lt;/code&gt; 매개 변수 (1.11.10)는 발광 할 수 &lt;a href=&quot;../configure#build&quot;&gt;빌드 이름을&lt;/a&gt; nginx를 버전과 함께.</target>
        </trans-unit>
        <trans-unit id="fb4d3ff5478f8ef6b6a2021a1e0d5e30c8851ef3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compare()&lt;/code&gt; function is a classic comparator function that returns a value less than, equal to, or greater than zero. To speed up lookups and avoid comparing user objects that can be big, an integer hash field is used.</source>
          <target state="translated">&lt;code&gt;compare()&lt;/code&gt; 함수 반환 값보다 같거나 제로보다 큰 것을 고전 비교 함수이다. 조회 속도를 높이고 사용자 개체가 클 수있는 비교를 피하기 위해 정수 해시 필드가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0f3efc0979f277e8979a169b90364040deb56de7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;conf/geo.conf&lt;/code&gt; file could contain the following lines:</source>
          <target state="translated">&lt;code&gt;conf/geo.conf&lt;/code&gt; 파일은 다음 행을 포함 할 수있다 :</target>
        </trans-unit>
        <trans-unit id="de463efca92979ae54a42498418c17d59077a50a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;conf&lt;/code&gt; field defines which configuration structure is passed to the directory handler. Core modules only have the global configuration and set &lt;code&gt;NGX_DIRECT_CONF&lt;/code&gt; flag to access it. Modules like HTTP, Stream or Mail create hierarchies of configurations. For example, a module's configuration is created for &lt;code&gt;server&lt;/code&gt;, &lt;code&gt;location&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt; scopes.</source>
          <target state="translated">&lt;code&gt;conf&lt;/code&gt; 의 어떤 구성 구조 필드를 정의 디렉토리 핸들러로 전달됩니다. 코어 모듈은 전역 구성 만 있으며 &lt;code&gt;NGX_DIRECT_CONF&lt;/code&gt; 플래그를 설정 하여 액세스합니다. HTTP, Stream 또는 Mail과 같은 모듈은 구성 계층을 만듭니다. 예를 들어 &lt;code&gt;server&lt;/code&gt; , &lt;code&gt;location&lt;/code&gt; 및 &lt;code&gt;if&lt;/code&gt; 범위에 대한 모듈 구성이 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="376c72d7974ee93d479ecc15aafe1e5ddce2c54a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; file is a POSIX shell script that can set and access the following variables:</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 파일은 다음과 같은 변수를 설정하고 액세스 할 수있는 POSIX 쉘 스크립트입니다 :</target>
        </trans-unit>
        <trans-unit id="38e0a9affd901e986b90c0bc6935184d5140dbc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; command supports the following parameters:</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 명령은 다음 매개 변수를 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="f9b1a03eb98e6e2f44930d914bbed7c2ef348721" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default&lt;/code&gt; parameter is not permitted if &lt;a href=&quot;#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; is specified using variables.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 경우 매개 변수는 허용되지 않습니다 &lt;a href=&quot;#proxy_pass&quot;&gt;proxy_pass이&lt;/a&gt; 변수를 사용하여 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="961fcfb6d91f386f0d203c5d9fe56eade05e6f4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default_server&lt;/code&gt; parameter has been available since version 0.8.21. In earlier versions the &lt;code&gt;default&lt;/code&gt; parameter should be used instead.</source>
          <target state="translated">&lt;code&gt;default_server&lt;/code&gt; 의 매개 변수는 버전 0.8.21부터 사용할 수있다. 이전 버전에서는 &lt;code&gt;default&lt;/code&gt; 매개 변수를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1807fbc0febdd306c0b9274c2ce034f0f38c290f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default_server&lt;/code&gt; parameter, if present, will cause the server to become the default server for the specified &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt;:&lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; pair. If none of the directives have the &lt;code&gt;default_server&lt;/code&gt; parameter then the first server with the &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt;:&lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; pair will be the default server for this pair.</source>
          <target state="translated">&lt;code&gt;default_server&lt;/code&gt; 의 매개 변수가 존재하는 경우, 서버는 지정의 기본 서버가 될 원인이됩니다 &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; : &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; 쌍. 지시문에 &lt;code&gt;default_server&lt;/code&gt; 매개 변수 가 없으면 &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; : &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; 쌍을 가진 첫 번째 서버 가이 쌍의 기본 서버가됩니다.</target>
        </trans-unit>
        <trans-unit id="3e791bc903690b7d7086ce06c548d7a866f9d978" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delay&lt;/code&gt; parameter (1.15.7) specifies a limit at which excessive requests become delayed. Default value is zero, i.e. all excessive requests are delayed.</source>
          <target state="translated">&lt;code&gt;delay&lt;/code&gt; 매개 변수 (1.15.7)는 과도한 요청이 지연 될하는 제한을 지정합니다. 기본값은 0입니다. 즉, 모든 과도한 요청이 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="59e5434f920ba014191346eb31da732336baf6f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;epoch&lt;/code&gt; parameter sets &amp;ldquo;Expires&amp;rdquo; to the value &amp;ldquo;&lt;code&gt;Thu, 01 Jan 1970 00:00:01 GMT&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;Cache-Control&amp;rdquo; to &amp;ldquo;&lt;code&gt;no-cache&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;epoch&lt;/code&gt; 파라미터 세트는 &quot;값&quot;만료 &quot; &lt;code&gt;Thu, 01 Jan 1970 00:00:01 GMT&lt;/code&gt; &quot;을 &quot;및&quot;캐시 제어 &quot; &lt;code&gt;no-cache&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="a1aabc9c482775f49467573d36af53bfdb7f50ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; parameter also permits using a stale cached response if a FastCGI server to process a request cannot be selected.</source>
          <target state="translated">또한 &lt;code&gt;error&lt;/code&gt; 매개 변수는 FastCGI 서버가 요청을 처리 할 수없는 경우 오래된 캐시 된 응답 사용을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="cb7e2e35d5a9c07bcab04dcd0c064d93309c2b83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; parameter also permits using a stale cached response if a proxied server to process a request cannot be selected.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 파라미터는 요청을 처리 할 수있는 프록시 서버가 선택 될 수없는 경우, 오래된 캐시 된 응답을 이용 가능하게한다.</target>
        </trans-unit>
        <trans-unit id="963da6899464d2d83260f9a58ba4ef43f4af356e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; parameter also permits using a stale cached response if a uwsgi server to process a request cannot be selected.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 파라미터는 요청을 처리하기 uwsgi 서버가 선택 될 수없는 경우, 오래된 캐시 된 응답을 이용 가능하게한다.</target>
        </trans-unit>
        <trans-unit id="5b70818e30a4f7c0cef24713c83c5ea270d19b0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; parameter also permits using a stale cached response if an SCGI server to process a request cannot be selected.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 파라미터는 요청을 처리 할 SCGI 서버가 선택 될 수없는 경우, 오래된 캐시 된 응답을 이용 가능하게한다.</target>
        </trans-unit>
        <trans-unit id="6de5957c8e0416a3d7af75d3c2c7f19464e87168" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; parameter (1.11.8) allows setting &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt; characters escaping in variables, by default, &lt;code&gt;default&lt;/code&gt; escaping is used. The &lt;code&gt;none&lt;/code&gt; parameter (1.13.10) disables escaping.</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; 매개 변수 (1.11.8)의 설정을 허용 &lt;code&gt;json&lt;/code&gt; 또는 &lt;code&gt;default&lt;/code&gt; , 기본적으로 변수에 이스케이프 문자를 &lt;code&gt;default&lt;/code&gt; 이스케이프가 사용됩니다. &lt;code&gt;none&lt;/code&gt; 매개 변수 (1.13.10)은 탈출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aabd0e7aebf9c99255871862fe5852e5d1de1ae3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; parameter (1.11.8) allows setting &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt; characters escaping in variables, by default, &lt;code&gt;default&lt;/code&gt; escaping is used. The &lt;code&gt;none&lt;/code&gt; value (1.13.10) disables escaping.</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; 매개 변수 (1.11.8)의 설정을 허용 &lt;code&gt;json&lt;/code&gt; 또는 &lt;code&gt;default&lt;/code&gt; , 기본적으로 변수에 이스케이프 문자를 &lt;code&gt;default&lt;/code&gt; 이스케이프가 사용됩니다. &lt;code&gt;none&lt;/code&gt; 값 (1.13.10)가 이탈하지 않도록.</target>
        </trans-unit>
        <trans-unit id="da853e821867d009e020e430ee293ce8a6f8ce7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flag&lt;/code&gt; option can accept the following values:</source>
          <target state="translated">&lt;code&gt;flag&lt;/code&gt; 옵션은 다음과 같은 값을 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0c2eb540f2d3d3a9dd067bb97720a275248b4c8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; parameter sets the custom session log format configured by the &lt;a href=&quot;#session_log_format&quot;&gt;session_log_format&lt;/a&gt; directive. If &lt;code&gt;format&lt;/code&gt; is not specified, the predefined &amp;ldquo;&lt;code&gt;combined&lt;/code&gt;&amp;rdquo; format is used.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 매개 변수에 의해 구성된 사용자 세션 로그 형식 설정 &lt;a href=&quot;#session_log_format&quot;&gt;session_log_format의&lt;/a&gt; 지시를. 경우 &lt;code&gt;format&lt;/code&gt; 지정되지 않은, 미리 정의 된 &quot; &lt;code&gt;combined&lt;/code&gt; &quot;형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f150a72bc774f1b0b1c211cd1000206db47368cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; handlers are called to obtain or set the variable value, &lt;code&gt;data&lt;/code&gt; is passed to variable handlers, and &lt;code&gt;index&lt;/code&gt; holds assigned variable index used to reference the variable.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 핸들러를 얻거나 변수 값을 설정 불리는, &lt;code&gt;data&lt;/code&gt; 변수 핸들러에 전달하고, &lt;code&gt;index&lt;/code&gt; 변수를 참조하는 데 사용되는 변수 인덱스를 할당 보유하고있다.</target>
        </trans-unit>
        <trans-unit id="884b4ef4b829a703e800df1dc5cc37a085e4a3cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; handler is responsible for evaluating a variable in the context of a specific request, for example:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 핸들러는 예를 들어, 특정 요청의 컨텍스트에서 변수를 평가하는 책임이있다 :</target>
        </trans-unit>
        <trans-unit id="1eb6c8b37b6c148e0b57f98463d7ef46502d654e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;header&lt;/code&gt; parameter (1.13.1) allows creating a session right after receiving response headers from the upstream server.</source>
          <target state="translated">&lt;code&gt;header&lt;/code&gt; 파라미터 (1.13.1)의 바로 상류 서버로부터 응답 헤더를 수신 한 후 세션을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3b7a29f67482446fdfbd80935126ef503746919" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http.js&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;http.js&lt;/code&gt; 의 파일 :</target>
        </trans-unit>
        <trans-unit id="92c3b9dce27603b15b078c75a7b70c634da92ef1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http2&lt;/code&gt; parameter (1.9.5) configures the port to accept &lt;a href=&quot;ngx_http_v2_module&quot;&gt;HTTP/2&lt;/a&gt; connections. Normally, for this to work the &lt;code&gt;ssl&lt;/code&gt; parameter should be specified as well, but nginx can also be configured to accept HTTP/2 connections without SSL.</source>
          <target state="translated">&lt;code&gt;http2&lt;/code&gt; 매개 변수 (1.9.5)을 수용 할 수있는 포트 구성 &lt;a href=&quot;ngx_http_v2_module&quot;&gt;HTTP / 2&lt;/a&gt; 연결을. 일반적으로 이것이 작동하려면 &lt;code&gt;ssl&lt;/code&gt; 매개 변수도 지정해야하지만 SSL없이 HTTP / 2 연결을 허용하도록 nginx를 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfbaa288ac2f8aa23e10c1210aff3550cc48772e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; parameter identifies the session to which a request is mapped. The &lt;code&gt;id&lt;/code&gt; parameter is set to the hexadecimal representation of an MD5 hash (for example, obtained from a cookie using variables). If this parameter is not specified or does not represent the valid MD5 hash, nginx computes the MD5 hash from the value of the &lt;code&gt;md5&lt;/code&gt; parameter and creates a new session using this hash. Both the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;md5&lt;/code&gt; parameters can contain variables.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 파라미터는 요청이 매핑 된 세션을 식별한다. &lt;code&gt;id&lt;/code&gt; 파라미터 (변수를 사용하여 쿠키로부터 획득, 예를 들어,)은 MD5 해시의 16 진수 표현으로 설정된다. 이 매개 변수를 지정하지 않거나 유효한 MD5 해시를 나타내지 않으면 nginx는 &lt;code&gt;md5&lt;/code&gt; 매개 변수 의 값에서 MD5 해시를 계산 하고이 해시를 사용하여 새 세션을 만듭니다. &lt;code&gt;id&lt;/code&gt; 및 &lt;code&gt;md5&lt;/code&gt; 매개 변수 모두 변수를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aeb344b8b0dc2a2235003c52ee15520a5c5ff596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; parameter (1.7.0) enables conditional logging. A request will not be logged if the &lt;code&gt;&lt;i&gt;condition&lt;/i&gt;&lt;/code&gt; evaluates to &amp;ldquo;0&amp;rdquo; or an empty string. In the following example, the requests with response codes 2xx and 3xx will not be logged:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 파라미터 (1.7.0)는 조건부 로깅 할 수있다. &lt;code&gt;&lt;i&gt;condition&lt;/i&gt;&lt;/code&gt; 이 &quot;0&quot;또는 빈 문자열로 평가 되면 요청이 기록되지 않습니다 . 다음 예에서 응답 코드가 2xx 및 3xx 인 요청은 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d6fa3cad0213d7973c00365f7245717fa5bff73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; parameter enables conditional logging. A session will not be logged if the &lt;code&gt;&lt;i&gt;condition&lt;/i&gt;&lt;/code&gt; evaluates to &amp;ldquo;0&amp;rdquo; or an empty string.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 매개 변수는 조건부 로깅을 할 수 있습니다. &lt;code&gt;&lt;i&gt;condition&lt;/i&gt;&lt;/code&gt; 이 &quot;0&quot;또는 빈 문자열로 평가 되면 세션이 기록되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="bc7314c8818ef91faad6447d8231b19369ec0347" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keepalive&lt;/code&gt; field of an upstream server was removed in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 5.</source>
          <target state="translated">업스트림 서버 의 &lt;code&gt;keepalive&lt;/code&gt; 필드는 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 5 에서 제거되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8321f9c35fd7368608d9ab7e49496c957930fec8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; is a pointer to a function that creates the hash integer key from a string. There are two generic key-creation functions: &lt;code&gt;ngx_hash_key(data, len)&lt;/code&gt; and &lt;code&gt;ngx_hash_key_lc(data, len)&lt;/code&gt;. The latter converts a string to all lowercase characters, so the passed string must be writeable. If that is not true, pass the &lt;code&gt;NGX_HASH_READONLY_KEY&lt;/code&gt; flag to the function, initializing the key array (see below).</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 문자열에서 해시 정수 키를 생성하는 함수에 대한 포인터입니다. &lt;code&gt;ngx_hash_key(data, len)&lt;/code&gt; 및 &lt;code&gt;ngx_hash_key_lc(data, len)&lt;/code&gt; 두 가지 일반 키 작성 기능이 있습니다. 후자는 문자열을 모든 소문자로 변환하므로 전달 된 문자열은 쓰기 가능해야합니다. 이것이 사실이 아닌 경우, &lt;code&gt;NGX_HASH_READONLY_KEY&lt;/code&gt; 플래그를 함수에 전달 하여 키 배열을 초기화하십시오 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="3e7a812010da33d121d746015f72029d05e49e9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;least_time&lt;/code&gt; method is available as a part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;least_time&lt;/code&gt; 의 방법은 우리의 일환으로 볼 수 있습니다 &lt;a href=&quot;http://nginx.com/products/&quot;&gt;상업 가입&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddfe040a7308ac316ad7b88a417a395239ed3f7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;least_time&lt;/code&gt; method passes a connection to a server with the least average time and least number of active connections. If &lt;code&gt;least_time=connect&lt;/code&gt; parameter is specified, time to &lt;a href=&quot;#var_upstream_connect_time&quot;&gt;connect&lt;/a&gt; to the upstream server is used. If &lt;code&gt;least_time=first_byte&lt;/code&gt; parameter is specified, time to receive the &lt;a href=&quot;#var_upstream_first_byte_time&quot;&gt;first byte&lt;/a&gt; of data is used. If &lt;code&gt;least_time=last_byte&lt;/code&gt; is specified, time to receive the &lt;a href=&quot;#var_upstream_session_time&quot;&gt;last byte&lt;/a&gt; of data is used.</source>
          <target state="translated">&lt;code&gt;least_time&lt;/code&gt; 메소드는 평균 시간 이 가장 적고 활성 연결 수가 가장 적은 서버로 연결을 전달합니다. 경우 &lt;code&gt;least_time=connect&lt;/code&gt; 매개 변수가 지정된 시간은하기 &lt;a href=&quot;#var_upstream_connect_time&quot;&gt;연결&lt;/a&gt; 사용되는 업스트림 서버. 경우 &lt;code&gt;least_time=first_byte&lt;/code&gt; 파라미터가 지정 시간은 수신 &lt;a href=&quot;#var_upstream_first_byte_time&quot;&gt;첫 번째 바이트&lt;/a&gt; 의 데이터가 사용된다. 경우 &lt;code&gt;least_time=last_byte&lt;/code&gt; 이 지정되는 시간은 수신 &lt;a href=&quot;#var_upstream_session_time&quot;&gt;마지막 바이트&lt;/a&gt; 의 데이터가 사용된다.</target>
        </trans-unit>
        <trans-unit id="e408bab2508f23f5b97572cc0b8a60e54a32d458" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;least_time&lt;/code&gt; method passes a request to a server with the least average response time and least number of active connections. If &lt;code&gt;least_time=header&lt;/code&gt; is specified, the time to receive the &lt;a href=&quot;#var_upstream_header_time&quot;&gt;response header&lt;/a&gt; is used. If &lt;code&gt;least_time=last_byte&lt;/code&gt; is specified, the time to receive the &lt;a href=&quot;#var_upstream_response_time&quot;&gt;full response&lt;/a&gt; is used.</source>
          <target state="translated">그만큼 &lt;code&gt;least_time&lt;/code&gt; 메소드는 평균 응답 시간 적고 활성 연결 수가 가장 적은 서버로 요청을 전달합니다. 경우 &lt;code&gt;least_time=header&lt;/code&gt; 지정되면, 수신 시간 &lt;a href=&quot;#var_upstream_header_time&quot;&gt;응답 헤더를&lt;/a&gt; 사용한다. 경우 &lt;code&gt;least_time=last_byte&lt;/code&gt; 가 지정되어, 수신하는 시간이 &lt;a href=&quot;#var_upstream_response_time&quot;&gt;전체 응답은&lt;/a&gt; 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a88c8f54519a3a089fbba12abfb2ada4c7c7d257" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;len&lt;/code&gt; field holds the string length and &lt;code&gt;data&lt;/code&gt; holds the string data. The string, held in &lt;code&gt;ngx_str_t&lt;/code&gt;, may or may not be null-terminated after the &lt;code&gt;len&lt;/code&gt; bytes. In most cases it&amp;rsquo;s not. However, in certain parts of the code (for example, when parsing configuration), &lt;code&gt;ngx_str_t&lt;/code&gt; objects are known to be null-terminated, which simplifies string comparison and makes it easier to pass the strings to syscalls.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; 필드는 문자열 길이를 보유하고 &lt;code&gt;data&lt;/code&gt; 문자열 데이터를 보유하고 있습니다. &lt;code&gt;ngx_str_t&lt;/code&gt; 에 보관 된 문자열 은 &lt;code&gt;len&lt;/code&gt; 바이트 이후에 null로 끝나거나 끝나지 않을 수 있습니다 . 대부분의 경우 그렇지 않습니다. 그러나 코드의 특정 부분 (예 : 구문 분석 구성)에서 &lt;code&gt;ngx_str_t&lt;/code&gt; 객체는 null로 끝나는 것으로 알려져있어 문자열 비교를 단순화하고 문자열을 syscall에 쉽게 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="196a878479659011918185c23d68f5399dcc6f3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listen&lt;/code&gt; directive can have several additional parameters specific to socket-related system calls.</source>
          <target state="translated">는 &lt;code&gt;listen&lt;/code&gt; 지시 소켓 관련 시스템 호출에 대한 몇 가지 추가 매개 변수의 특정을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4be6f5955e8d4bc6a0c269957d16817809004bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listen&lt;/code&gt; directive can have several additional parameters specific to socket-related system calls. These parameters can be specified in any &lt;code&gt;listen&lt;/code&gt; directive, but only once for a given &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt;:&lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; pair.</source>
          <target state="translated">는 &lt;code&gt;listen&lt;/code&gt; 지시 소켓 관련 시스템 호출에 대한 몇 가지 추가 매개 변수의 특정을 할 수 있습니다. 이 파라미터는 모든 &lt;code&gt;listen&lt;/code&gt; 에서 지정할 수 있습니다 지시문 &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; : &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; 쌍에 대해 한 번만 .</target>
        </trans-unit>
        <trans-unit id="cea15f5fe3bc4a8b0864e23bc498e986c91d7d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max&lt;/code&gt; parameter sets &amp;ldquo;Expires&amp;rdquo; to the value &amp;ldquo;&lt;code&gt;Thu, 31 Dec 2037 23:55:55 GMT&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;Cache-Control&amp;rdquo; to 10 years.</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; 파라미터 세트의 값은 &quot;을&quot;만료 &quot; &lt;code&gt;Thu, 31 Dec 2037 23:55:55 GMT&lt;/code&gt; &quot;, 10 년 &quot;캐시 제어&quot;.</target>
        </trans-unit>
        <trans-unit id="014fed7b8961f1df12725a1292e61280604af901" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_buf_t&lt;/code&gt; structure has the following fields:</source>
          <target state="translated">&lt;code&gt;ngx_buf_t&lt;/code&gt; 구조는 다음과 같은 필드가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4c761937efe7f701d2358e913316ce5c5bad347a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_command_t&lt;/code&gt; type defines a single configuration directive. Each module that supports configuration provides an array of such structures that describe how to process arguments and what handlers to call:</source>
          <target state="translated">&lt;code&gt;ngx_command_t&lt;/code&gt; 유형은 단일 구성 지시어를 정의합니다. 구성을 지원하는 각 모듈은 인수를 처리하는 방법과 호출 할 핸들러를 설명하는 이러한 구조의 배열을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="efcedcd0d5dcf42e84ebac50319b060f5f18c87f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_config.h&lt;/code&gt; and &lt;code&gt;ngx_core.h&lt;/code&gt; files are always included first, followed by one of &lt;code&gt;ngx_http.h&lt;/code&gt;, &lt;code&gt;ngx_stream.h&lt;/code&gt;, or &lt;code&gt;ngx_mail.h&lt;/code&gt;. Then follow optional external header files:</source>
          <target state="translated">&lt;code&gt;ngx_config.h&lt;/code&gt; 및 &lt;code&gt;ngx_core.h&lt;/code&gt; 파일은 항상 한 다음, 처음으로 포함되어 &lt;code&gt;ngx_http.h&lt;/code&gt; , &lt;code&gt;ngx_stream.h&lt;/code&gt; , 또는 &lt;code&gt;ngx_mail.h&lt;/code&gt; . 그런 다음 선택적 외부 헤더 파일을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="906f1a3f54bb43882e01df6b4bc4b46cec479b89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_errno&lt;/code&gt; macro returns the last system error code. It's mapped to &lt;code&gt;errno&lt;/code&gt; on POSIX platforms and to &lt;code&gt;GetLastError()&lt;/code&gt; call in Windows. The &lt;code&gt;ngx_socket_errno&lt;/code&gt; macro returns the last socket error number. Like the &lt;code&gt;ngx_errno&lt;/code&gt; macro, it's mapped to &lt;code&gt;errno&lt;/code&gt; on POSIX platforms. It's mapped to the &lt;code&gt;WSAGetLastError()&lt;/code&gt; call on Windows. Accessing the values of &lt;code&gt;ngx_errno&lt;/code&gt; or &lt;code&gt;ngx_socket_errno&lt;/code&gt; more than once in a row can cause performance issues. If the error value might be used multiple times, store it in a local variable of type &lt;code&gt;ngx_err_t&lt;/code&gt;. To set errors, use the &lt;code&gt;ngx_set_errno(errno)&lt;/code&gt; and &lt;code&gt;ngx_set_socket_errno(errno)&lt;/code&gt; macros.</source>
          <target state="translated">&lt;code&gt;ngx_errno&lt;/code&gt; 매크로 반환 마지막 시스템 오류 코드. POSIX 플랫폼에서는 &lt;code&gt;errno&lt;/code&gt; 와 Windows에서는 &lt;code&gt;GetLastError()&lt;/code&gt; 호출에 매핑됩니다 . &lt;code&gt;ngx_socket_errno&lt;/code&gt; 매크로 반환 마지막 소켓 오류 번호. &lt;code&gt;ngx_errno&lt;/code&gt; 매크로 와 마찬가지로 POSIX 플랫폼 에서 &lt;code&gt;errno&lt;/code&gt; 에 매핑됩니다 . Windows 의 &lt;code&gt;WSAGetLastError()&lt;/code&gt; 호출에 맵핑됩니다 . &lt;code&gt;ngx_errno&lt;/code&gt; 또는 &lt;code&gt;ngx_socket_errno&lt;/code&gt; 값에 연속으로 두 번 이상 액세스 하면 성능 문제가 발생할 수 있습니다. 오류 값을 여러 번 사용할 수 있으면 &lt;code&gt;ngx_err_t&lt;/code&gt; 유형의 로컬 변수에 저장하십시오 . 오류를 설정하려면 &lt;code&gt;ngx_set_errno(errno)&lt;/code&gt; 사용하십시오및 &lt;code&gt;ngx_set_socket_errno(errno)&lt;/code&gt; 매크로.</target>
        </trans-unit>
        <trans-unit id="9ae1b4b037a54dcb3d206a31c0c7c3baa95099ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_google_perftools_module&lt;/code&gt; module (0.6.29) enables profiling of nginx worker processes using &lt;a href=&quot;https://github.com/gperftools/gperftools&quot;&gt;Google Performance Tools&lt;/a&gt;. The module is intended for nginx developers.</source>
          <target state="translated">&lt;code&gt;ngx_google_perftools_module&lt;/code&gt; 의 모듈 (0.6.29)은 사용의 nginx 작업자 프로세스의 프로파일 링 할 수 있습니다 &lt;a href=&quot;https://github.com/gperftools/gperftools&quot;&gt;구글 성능 도구를&lt;/a&gt; . 이 모듈은 nginx 개발자를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="3300033297543783bfbe22c7527abc4d9cabefe3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_access_module&lt;/code&gt; module allows limiting access to certain client addresses.</source>
          <target state="translated">&lt;code&gt;ngx_http_access_module&lt;/code&gt; 모듈은 특정 클라이언트 주소에 대한 액세스를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7da69b199dcd31ecbb7a31330f8d7210656764a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_addition_module&lt;/code&gt; module is a filter that adds text before and after a response. This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_addition_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">&lt;code&gt;ngx_http_addition_module&lt;/code&gt; 모듈 전과 반응 후에 텍스트를 추가하는 필터이다. 이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_addition_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="64d083a35996efcb1f31ab774741442d28699d10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_api_module&lt;/code&gt; module (1.13.3) provides REST API for accessing various status information, configuring upstream server groups on-the-fly, and managing &lt;a href=&quot;ngx_http_keyval_module&quot;&gt;key-value pairs&lt;/a&gt; without the need of reconfiguring nginx.</source>
          <target state="translated">&lt;code&gt;ngx_http_api_module&lt;/code&gt; 의 모듈 (1.13.3)은 각종 상태 정보에 액세스 즉석에서 업스트림 서버 그룹을 구성 및 관리 REST API를 제공 &lt;a href=&quot;ngx_http_keyval_module&quot;&gt;키 - 값 쌍을&lt;/a&gt; nginx를 재구성 할 필요없이.</target>
        </trans-unit>
        <trans-unit id="588220700af435bfe299350fc06d702ba166cc7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_auth_basic_module&lt;/code&gt; module allows limiting access to resources by validating the user name and password using the &amp;ldquo;HTTP Basic Authentication&amp;rdquo; protocol.</source>
          <target state="translated">&lt;code&gt;ngx_http_auth_basic_module&lt;/code&gt; 모듈은 사용자 이름의 유효성을 검사하고 암호 &quot;HTTP 기본 인증&quot;프로토콜을 사용하여 리소스에 대한 액세스를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="370cae89044a2f5369d43f502680902aa3e747ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_auth_jwt_module&lt;/code&gt; module (1.11.3) implements client authorization by validating the provided &lt;a href=&quot;https://tools.ietf.org/html/rfc7519&quot;&gt;JSON Web Token&lt;/a&gt; (JWT) using the specified keys. JWT claims must be encoded in a &lt;a href=&quot;https://tools.ietf.org/html/rfc7515&quot;&gt;JSON Web Signature&lt;/a&gt; (JWS) structure. The module can be used for &lt;a href=&quot;http://openid.net/specs/openid-connect-core-1_0.html&quot;&gt;OpenID Connect&lt;/a&gt; authentication.</source>
          <target state="translated">&lt;code&gt;ngx_http_auth_jwt_module&lt;/code&gt; 의 모듈 제공 유효성을 검사하여 (1.11.3) 구현 클라이언트 인증 &lt;a href=&quot;https://tools.ietf.org/html/rfc7519&quot;&gt;JSON 웹 토큰&lt;/a&gt; 지정된 키를 사용하여 (JWT)을. JWT 클레임은 &lt;a href=&quot;https://tools.ietf.org/html/rfc7515&quot;&gt;JSON&lt;/a&gt; ( JSON Web Signature ) 구조 로 인코딩해야합니다 . 이 모듈은 &lt;a href=&quot;http://openid.net/specs/openid-connect-core-1_0.html&quot;&gt;OpenID Connect&lt;/a&gt; 인증에 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7efafa7b14eac81d05ff424514e39cadc4b6ea46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_auth_jwt_module&lt;/code&gt; module supports embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_auth_jwt_module&lt;/code&gt; 모듈 내장 변수를 지원한다 :</target>
        </trans-unit>
        <trans-unit id="0c65461ddfd4b32e3cc88bbbaf378b053cf2c9f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_auth_request_module&lt;/code&gt; module (1.5.4+) implements client authorization based on the result of a subrequest. If the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403, the access is denied with the corresponding error code. Any other response code returned by the subrequest is considered an error.</source>
          <target state="translated">&lt;code&gt;ngx_http_auth_request_module&lt;/code&gt; subrequest의 결과에 기초하여, 모듈 (1.5.4+)를 구현 클라이언트 인증. 서브 요청이 2xx 응답 코드를 리턴하면 액세스가 허용됩니다. 401 또는 403을 반환하면 해당 오류 코드로 액세스가 거부됩니다. 서브 요청에 의해 리턴 된 다른 응답 코드는 오류로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="5080f55aadfa12322d53d7129e64b1dc2e72b0b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_autoindex_module&lt;/code&gt; module processes requests ending with the slash character (&amp;lsquo;&lt;code&gt;/&lt;/code&gt;&amp;rsquo;) and produces a directory listing. Usually a request is passed to the &lt;code&gt;ngx_http_autoindex_module&lt;/code&gt; module when the &lt;a href=&quot;ngx_http_index_module&quot;&gt;ngx_http_index_module&lt;/a&gt; module cannot find an index file.</source>
          <target state="translated">&lt;code&gt;ngx_http_autoindex_module&lt;/code&gt; 모듈을 처리 슬래시 문자로 끝나는 요청 ( ' &lt;code&gt;/&lt;/code&gt; ') 및 디렉토리 목록을 생성합니다. 일반적으로 &lt;a href=&quot;ngx_http_index_module&quot;&gt;ngx_http_index_module&lt;/a&gt; 모듈이 색인 파일을 찾을 수없는 경우 요청이 &lt;code&gt;ngx_http_autoindex_module&lt;/code&gt; 모듈 로 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="7fb09f94465e3b1664b66c1d816345c72d871f79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_browser_module&lt;/code&gt; module creates variables whose values depend on the value of the &amp;ldquo;User-Agent&amp;rdquo; request header field:</source>
          <target state="translated">&lt;code&gt;ngx_http_browser_module&lt;/code&gt; 의 모듈은 그 값이 &quot;사용자 에이전트&quot;요청 헤더 필드의 값에 의존하는 변수를 작성</target>
        </trans-unit>
        <trans-unit id="45afb7ea112d676376da9a38e62fd223eb91229d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_charset_module&lt;/code&gt; module adds the specified charset to the &amp;ldquo;Content-Type&amp;rdquo; response header field. In addition, the module can convert data from one charset to another, with some limitations:</source>
          <target state="translated">&lt;code&gt;ngx_http_charset_module&lt;/code&gt; 모듈은 &quot;Content-Type을&quot;응답 헤더 필드에 지정된 캐릭터 세트를 추가합니다. 또한이 모듈은 한 문자 세트에서 다른 문자 세트로 데이터를 변환 할 수 있지만 몇 가지 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="378eb5530514d686919251956d78cf1a1efc8f51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_core_module&lt;/code&gt; module supports embedded variables with names matching the Apache Server variables. First of all, these are variables representing client request header fields, such as &lt;code&gt;$http_user_agent&lt;/code&gt;, &lt;code&gt;$http_cookie&lt;/code&gt;, and so on. Also there are other variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_core_module&lt;/code&gt; 모듈 지원은 아파치 서버 변수와 일치하는 이름을 가진 변수를 포함. 우선, 이들은 &lt;code&gt;$http_user_agent&lt;/code&gt; , &lt;code&gt;$http_cookie&lt;/code&gt; 등과 같은 클라이언트 요청 헤더 필드를 나타내는 변수 입니다. 또한 다른 변수가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="33c91cf33367b0361d7f535d92ff53b272082aa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_dav_module&lt;/code&gt; module is intended for file management automation via the WebDAV protocol. The module processes HTTP and WebDAV methods PUT, DELETE, MKCOL, COPY, and MOVE.</source>
          <target state="translated">&lt;code&gt;ngx_http_dav_module&lt;/code&gt; 모듈은 WebDAV 프로토콜을 통해 파일 관리 자동화를위한 것입니다. 모듈은 HTTP 및 WebDAV 메소드 PUT, DELETE, MKCOL, COPY 및 MOVE를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="70eb11570ec6caa44617021af5213a645503bfc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_empty_gif_module&lt;/code&gt; module emits single-pixel transparent GIF.</source>
          <target state="translated">&lt;code&gt;ngx_http_empty_gif_module&lt;/code&gt; 모듈은 단일 픽셀 투명한 GIF을 방출한다.</target>
        </trans-unit>
        <trans-unit id="d2513a33beb212f4fbbb9c8b8d7b9e105860b7f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_f4f_module&lt;/code&gt; module provides server-side support for Adobe HTTP Dynamic Streaming (HDS).</source>
          <target state="translated">&lt;code&gt;ngx_http_f4f_module&lt;/code&gt; 모듈은 어도비 HTTP 다이내믹 스트리밍 (HDS)에 대한 서버 측 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d1c31be2f2f6447339536db83cf20b6bd38368e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_fastcgi_module&lt;/code&gt; module allows passing requests to a FastCGI server.</source>
          <target state="translated">&lt;code&gt;ngx_http_fastcgi_module&lt;/code&gt; 모듈은 FastCGI를 서버에 요청을 전달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11cbf620278494614da0f2faaaa303ac3ceee31c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_fastcgi_module&lt;/code&gt; module supports embedded variables that can be used to set parameters using the &lt;a href=&quot;#fastcgi_param&quot;&gt;fastcgi_param&lt;/a&gt; directive:</source>
          <target state="translated">&lt;code&gt;ngx_http_fastcgi_module&lt;/code&gt; 모듈을 지원하여 설정 파라미터로 사용될 수있다 매립 변수 &lt;a href=&quot;#fastcgi_param&quot;&gt;fastcgi_param의&lt;/a&gt; 지시자 :</target>
        </trans-unit>
        <trans-unit id="3a21222bb95c9ce93d302e973b7ebedbc57a33a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_flv_module&lt;/code&gt; module provides pseudo-streaming server-side support for Flash Video (FLV) files.</source>
          <target state="translated">&lt;code&gt;ngx_http_flv_module&lt;/code&gt; 모듈은 플래시 비디오 (FLV) 파일에 대한 의사 스트리밍 서버 측 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c5cf56bea9f7fb3a5b67eede334ec071dabd98ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_geo_module&lt;/code&gt; module creates variables with values depending on the client IP address.</source>
          <target state="translated">&lt;code&gt;ngx_http_geo_module&lt;/code&gt; 모듈은 상기 클라이언트 IP 주소에 따라 값이 변수를 생성한다.</target>
        </trans-unit>
        <trans-unit id="287b3601e5f57307d12794e6250fed6899cecddc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_geoip_module&lt;/code&gt; module (0.8.6+) creates variables with values depending on the client IP address, using the precompiled &lt;a href=&quot;http://www.maxmind.com&quot;&gt;MaxMind&lt;/a&gt; databases.</source>
          <target state="translated">&lt;code&gt;ngx_http_geoip_module&lt;/code&gt; 모듈 (0.8.6+)의 값이 미리 컴파일하여 클라이언트의 IP 주소에 따라 생성하여 변수 &lt;a href=&quot;http://www.maxmind.com&quot;&gt;MaxMind의&lt;/a&gt; 데이터베이스.</target>
        </trans-unit>
        <trans-unit id="026f5c1f2cf14d851e908793503fe4beda33ee99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_get_flushed_variable()&lt;/code&gt; and &lt;code&gt;ngx_http_get_indexed_variable()&lt;/code&gt; functions are used to obtain the value of a variable. They have the same interface - accepting an HTTP request &lt;code&gt;r&lt;/code&gt; as a context for evaluating the variable and an &lt;code&gt;index&lt;/code&gt; that identifies it. An example of typical usage:</source>
          <target state="translated">&lt;code&gt;ngx_http_get_flushed_variable()&lt;/code&gt; 와 &lt;code&gt;ngx_http_get_indexed_variable()&lt;/code&gt; 함수는 변수의 값을 획득하기 위해 사용된다. HTTP 요청 수락 - 그들은 동일한 인터페이스가 &lt;code&gt;r&lt;/code&gt; 변수를 평가하는 상황과 같은 &lt;code&gt;index&lt;/code&gt; 하는 것을 식별 그것을. 일반적인 사용법의 예 :</target>
        </trans-unit>
        <trans-unit id="aba12e1252da52d968a7edbd92fef02b7a08e138" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_grpc_module&lt;/code&gt; module allows passing requests to a gRPC server (1.13.10). The module requires the &lt;a href=&quot;ngx_http_v2_module&quot;&gt;ngx_http_v2_module&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;ngx_http_grpc_module&lt;/code&gt; 모듈은 gRPC 서버 (1.13.10)로 요청을 전달 할 수 있습니다. 이 모듈에는 &lt;a href=&quot;ngx_http_v2_module&quot;&gt;ngx_http_v2_module&lt;/a&gt; 모듈이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="164de712ec3f14692045a23037710224666dcb7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_gunzip_module&lt;/code&gt; module is a filter that decompresses responses with &amp;ldquo;&lt;code&gt;Content-Encoding: gzip&lt;/code&gt;&amp;rdquo; for clients that do not support &amp;ldquo;gzip&amp;rdquo; encoding method. The module will be useful when it is desirable to store data compressed to save space and reduce I/O costs.</source>
          <target state="translated">&lt;code&gt;ngx_http_gunzip_module&lt;/code&gt; &quot;모듈과 응답을 압축 해제하는 필터입니다 &lt;code&gt;Content-Encoding: gzip&lt;/code&gt; 방법을 인코딩&quot;GZIP &quot;를 지원하지 않는 고객을 위해&quot;. 공간을 절약하고 I / O 비용을 줄이기 위해 압축 된 데이터를 저장하는 것이 바람직한 경우이 모듈이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e3482f06bf0a4d7977e39f411829c54f68783c80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_gzip_module&lt;/code&gt; module is a filter that compresses responses using the &amp;ldquo;gzip&amp;rdquo; method. This often helps to reduce the size of transmitted data by half or even more.</source>
          <target state="translated">&lt;code&gt;ngx_http_gzip_module&lt;/code&gt; 모듈 습포 응답이 &quot;GZIP&quot;방법을 사용하는 필터이다. 이것은 종종 전송 된 데이터의 크기를 절반 이상 줄이는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="ddb91a0ef361da01ee0b888d58c5784924c656d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_gzip_static_module&lt;/code&gt; module allows sending precompressed files with the &amp;ldquo;&lt;code&gt;.gz&lt;/code&gt;&amp;rdquo; filename extension instead of regular files.</source>
          <target state="translated">&lt;code&gt;ngx_http_gzip_static_module&lt;/code&gt; 모듈은 &quot;와 미리 압축 파일을 전송 할 수 있습니다 &lt;code&gt;.gz&lt;/code&gt; 대신 일반 파일의&quot;파일 이름 확장자.</target>
        </trans-unit>
        <trans-unit id="0729056fcd5e4e30c6028113d2680f9f2d067452" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_headers_module&lt;/code&gt; module allows adding the &amp;ldquo;Expires&amp;rdquo; and &amp;ldquo;Cache-Control&amp;rdquo; header fields, and arbitrary fields, to a response header.</source>
          <target state="translated">&lt;code&gt;ngx_http_headers_module&lt;/code&gt; 모듈 응답 헤더의 &quot;만료&quot;및 &quot;캐시 제어&quot;헤더 필드에, 임의의 필드를 추가 허용한다.</target>
        </trans-unit>
        <trans-unit id="fe56fe67435b66abec2653451a6d37271029ba06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_hls_module&lt;/code&gt; module provides HTTP Live Streaming (HLS) server-side support for MP4 and MOV media files. Such files typically have the &lt;code&gt;.mp4&lt;/code&gt;, &lt;code&gt;.m4v&lt;/code&gt;, &lt;code&gt;.m4a&lt;/code&gt;, &lt;code&gt;.mov&lt;/code&gt;, or &lt;code&gt;.qt&lt;/code&gt; filename extensions. The module supports H.264 video codec, AAC and MP3 audio codecs.</source>
          <target state="translated">&lt;code&gt;ngx_http_hls_module&lt;/code&gt; 모듈은 HTTP 라이브 스트리밍 (HLS) MP4 및 MOV 미디어 파일에 대한 서버 측 지원을 제공합니다. 이러한 파일은 일반적으로 &lt;code&gt;.mp4&lt;/code&gt; , &lt;code&gt;.m4v&lt;/code&gt; , &lt;code&gt;.m4a&lt;/code&gt; , &lt;code&gt;.mov&lt;/code&gt; 또는 &lt;code&gt;.qt&lt;/code&gt; 파일 이름 확장자를 갖습니다 . 이 모듈은 H.264 비디오 코덱, AAC 및 MP3 오디오 코덱을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="09497b6f7870c4f6a1b860065db3835c29a0b5e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_image_filter_module&lt;/code&gt; module (0.7.54+) is a filter that transforms images in JPEG, GIF, PNG, and WebP formats.</source>
          <target state="translated">&lt;code&gt;ngx_http_image_filter_module&lt;/code&gt; 모듈 (0.7.54+)는 필터 인 것을 JPEG, GIF, PNG, 및 WebP 형식 포맷으로 변환 이미지.</target>
        </trans-unit>
        <trans-unit id="85ae75f517ef49c82ca0af4abbeed0d3a972e8ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_index_module&lt;/code&gt; module processes requests ending with the slash character (&amp;lsquo;&lt;code&gt;/&lt;/code&gt;&amp;rsquo;). Such requests can also be processed by the &lt;a href=&quot;ngx_http_autoindex_module&quot;&gt;ngx_http_autoindex_module&lt;/a&gt; and &lt;a href=&quot;ngx_http_random_index_module&quot;&gt;ngx_http_random_index_module&lt;/a&gt; modules.</source>
          <target state="translated">&lt;code&gt;ngx_http_index_module&lt;/code&gt; 슬래시 문자로 끝나는 모듈 프로세스 요청 ( ' &lt;code&gt;/&lt;/code&gt; '). 이러한 요청은 &lt;a href=&quot;ngx_http_autoindex_module&quot;&gt;ngx_http_autoindex_module&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_random_index_module&quot;&gt;ngx_http_random_index_module&lt;/a&gt; 모듈 에서 처리 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8045602f92aaa0804ed8942c35a0bec89fc11fac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_internal_redirect(r, uri, args)&lt;/code&gt; function changes the request URI and returns the request to the &lt;code&gt;NGX_HTTP_SERVER_REWRITE_PHASE&lt;/code&gt; phase. The request proceeds with a server default location. Later at &lt;code&gt;NGX_HTTP_FIND_CONFIG_PHASE&lt;/code&gt; a new location is chosen based on the new request URI.</source>
          <target state="translated">&lt;code&gt;ngx_http_internal_redirect(r, uri, args)&lt;/code&gt; 함수는 요청 URI 변경되고 요청에 반환 &lt;code&gt;NGX_HTTP_SERVER_REWRITE_PHASE&lt;/code&gt; 의 상. 요청은 서버 기본 위치로 진행됩니다. 나중에 &lt;code&gt;NGX_HTTP_FIND_CONFIG_PHASE&lt;/code&gt; 에서 새 요청 URI를 기반으로 새 위치가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="59fc2e5b59e4bbf58249a822a32629015bc68565" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_js_module&lt;/code&gt; module is used to implement location and variable handlers in &lt;a href=&quot;../njs/index&quot;&gt;njs&lt;/a&gt; &amp;mdash; a subset of the JavaScript language.</source>
          <target state="translated">&lt;code&gt;ngx_http_js_module&lt;/code&gt; 모듈의 위치와 변수 핸들러 구현하는 데 사용됩니다 &lt;a href=&quot;../njs/index&quot;&gt;NJS&lt;/a&gt; 자바 스크립트 언어의 부분 집합을 -.</target>
        </trans-unit>
        <trans-unit id="35deaa5fdf4e604db8a6cf64ce2b4091be90f2d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_keyval_module&lt;/code&gt; module (1.13.3) creates variables with values taken from key-value pairs managed by the &lt;a href=&quot;ngx_http_api_module#http_keyvals_&quot;&gt;API&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngx_http_keyval_module&lt;/code&gt; 의 모듈 (1.13.3)를 관리하여 키 - 값 쌍에서 촬영 변수 값 생성 &lt;a href=&quot;ngx_http_api_module#http_keyvals_&quot;&gt;API를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfee92f4b5727e43a7c00f0c8c2719b973dba50b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_limit_conn_module&lt;/code&gt; module is used to limit the number of connections per the defined key, in particular, the number of connections from a single IP address.</source>
          <target state="translated">&lt;code&gt;ngx_http_limit_conn_module&lt;/code&gt; 모듈은 특히 정의 키당 연결의 수를 제한하는 데 사용되며, 하나의 IP 어드레스로부터의 접속의 수.</target>
        </trans-unit>
        <trans-unit id="1e1698b1e7d484aee0476192d9324232df233aff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_limit_req_module&lt;/code&gt; module (0.7.21) is used to limit the request processing rate per a defined key, in particular, the processing rate of requests coming from a single IP address. The limitation is done using the &amp;ldquo;leaky bucket&amp;rdquo; method.</source>
          <target state="translated">&lt;code&gt;ngx_http_limit_req_module&lt;/code&gt; 모듈 (0.7.21)는 특히 한정된 키당 요청 처리 속도를 제한하는 데 사용되는 하나의 IP 주소로부터 들어오는 요청의 처리 속도. 제한은 &quot;누설 버킷&quot;방법을 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="cac4e294615464d493ebf8a32c4e09216ef19c6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_log_module&lt;/code&gt; module writes request logs in the specified format.</source>
          <target state="translated">&lt;code&gt;ngx_http_log_module&lt;/code&gt; 모듈 쓰기는 지정된 형식으로 로그를 요청합니다.</target>
        </trans-unit>
        <trans-unit id="5d596deeaba168314bccb87b4621b1f55a725e5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_map_module&lt;/code&gt; module creates variables whose values depend on values of other variables.</source>
          <target state="translated">&lt;code&gt;ngx_http_map_module&lt;/code&gt; 모듈은 그 값이 다른 변수의 값에 의존하는 변수를 생성한다.</target>
        </trans-unit>
        <trans-unit id="d3ea4bcf2b4c594993b2df586eab5761beab6bbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_memcached_module&lt;/code&gt; module is used to obtain responses from a memcached server. The key is set in the &lt;code&gt;$memcached_key&lt;/code&gt; variable. A response should be put in memcached in advance by means external to nginx.</source>
          <target state="translated">&lt;code&gt;ngx_http_memcached_module&lt;/code&gt; 모듈은 memcached를 서버로부터 응답을 얻기 위해 사용된다. 키는 &lt;code&gt;$memcached_key&lt;/code&gt; 변수에 설정되어 있습니다. 응답은 nginx 외부에서 미리 memcached에 넣어야합니다.</target>
        </trans-unit>
        <trans-unit id="37fb17125856747535acf4c563b5f7dad783e685" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_mirror_module&lt;/code&gt; module (1.13.4) implements mirroring of an original request by creating background mirror subrequests. Responses to mirror subrequests are ignored.</source>
          <target state="translated">&lt;code&gt;ngx_http_mirror_module&lt;/code&gt; 의 모듈 (1.13.4) 배경 미러 하위 요청을 생성하여 원래 요청 미러링 구현한다. 하위 요청 미러링에 대한 응답은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3c958d2f91c2cb8e079542942e9657cee2c7edfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_mp4_module&lt;/code&gt; module provides pseudo-streaming server-side support for MP4 files. Such files typically have the &lt;code&gt;.mp4&lt;/code&gt;, &lt;code&gt;.m4v&lt;/code&gt;, or &lt;code&gt;.m4a&lt;/code&gt; filename extensions.</source>
          <target state="translated">&lt;code&gt;ngx_http_mp4_module&lt;/code&gt; 모듈은 MP4 파일에 대한 의사 스트리밍 서버 측 지원을 제공합니다. 이러한 파일의 파일 이름 확장자 는 일반적으로 &lt;code&gt;.mp4&lt;/code&gt; , &lt;code&gt;.m4v&lt;/code&gt; 또는 &lt;code&gt;.m4a&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ae1a8af24ed43b330fd04e850b9a3dcd3be3493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_perl_module&lt;/code&gt; module is used to implement location and variable handlers in Perl and insert Perl calls into SSI.</source>
          <target state="translated">&lt;code&gt;ngx_http_perl_module&lt;/code&gt; 모듈은 펄과 SSI에 펄 통화 삽입 위치와 변수 핸들러를 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d77c5ff3aba768c2a88c91aae853182e6e2976f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_postpone_filter&lt;/code&gt; activates the next request in the active request's subrequest list, once all data prior to that request are sent.</source>
          <target state="translated">&lt;code&gt;ngx_http_postpone_filter&lt;/code&gt; 는 그 이전 요청에 대한 모든 데이터가 전송되면, 활성 요청의 subrequest 목록에서 다음 요청을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6f40912623888fa11f3f0ed3597117dce195b083" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_proxy_module&lt;/code&gt; module allows passing requests to another server.</source>
          <target state="translated">&lt;code&gt;ngx_http_proxy_module&lt;/code&gt; 모듈은 다른 서버로 요청을 전달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c5ed1cab997879f196b9ad6d3ae596b7f9bc96b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_proxy_module&lt;/code&gt; module supports embedded variables that can be used to compose headers using the &lt;a href=&quot;#proxy_set_header&quot;&gt;proxy_set_header&lt;/a&gt; directive:</source>
          <target state="translated">&lt;code&gt;ngx_http_proxy_module&lt;/code&gt; 모듈을 지원하여 작성 헤더로 사용할 수있다 매립 변수 &lt;a href=&quot;#proxy_set_header&quot;&gt;proxy_set_header의&lt;/a&gt; 지시자 :</target>
        </trans-unit>
        <trans-unit id="4704144f297b725373bcceaf7c0c37c9ed6b4a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_random_index_module&lt;/code&gt; module processes requests ending with the slash character (&amp;lsquo;&lt;code&gt;/&lt;/code&gt;&amp;rsquo;) and picks a random file in a directory to serve as an index file. The module is processed before the &lt;a href=&quot;ngx_http_index_module&quot;&gt;ngx_http_index_module&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;ngx_http_random_index_module&lt;/code&gt; 모듈을 처리 슬래시 문자로 끝나는 요청 ( ' &lt;code&gt;/&lt;/code&gt; 디렉토리에서')와 픽 임의의 파일을 인덱스 파일로 제공합니다. 모듈은 &lt;a href=&quot;ngx_http_index_module&quot;&gt;ngx_http_index_module&lt;/a&gt; 모듈 보다 먼저 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="3fc0e6eac146c94ad8923e994eed00c25bf8d0af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_realip_module&lt;/code&gt; module is used to change the client address and optional port to those sent in the specified header field.</source>
          <target state="translated">&lt;code&gt;ngx_http_realip_module&lt;/code&gt; 모듈은 지정된 헤더 필드에있는 사람들하여 전송에 클라이언트의 주소와 옵션 포트를 변경하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="360e2dd27429ef2c31f7723ad9d07911da7f45c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_referer_module&lt;/code&gt; module is used to block access to a site for requests with invalid values in the &amp;ldquo;Referer&amp;rdquo; header field. It should be kept in mind that fabricating a request with an appropriate &amp;ldquo;Referer&amp;rdquo; field value is quite easy, and so the intended purpose of this module is not to block such requests thoroughly but to block the mass flow of requests sent by regular browsers. It should also be taken into consideration that regular browsers may not send the &amp;ldquo;Referer&amp;rdquo; field even for valid requests.</source>
          <target state="translated">&lt;code&gt;ngx_http_referer_module&lt;/code&gt; 모듈은 &quot;리퍼러&quot;헤더 필드에 잘못된 값이 요청에 대한 사이트에 대한 액세스를 차단하는 데 사용됩니다. 적절한 &quot;Referer&quot;필드 값으로 요청을 제작하는 것은 매우 쉬우므로이 모듈의 의도 된 목적은 그러한 요청을 철저하게 차단하는 것이 아니라 일반 브라우저가 보낸 요청의 대량 흐름을 차단하는 것입니다. 일반 브라우저는 유효한 요청에도 &quot;참조 자&quot;필드를 보내지 않을 수도 있다는 점도 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="2a56e48d68478e199554b4510ee00fa2ade6921a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_rewrite_module&lt;/code&gt; module directives are compiled at the configuration stage into internal instructions that are interpreted during request processing. An interpreter is a simple virtual stack machine.</source>
          <target state="translated">&lt;code&gt;ngx_http_rewrite_module&lt;/code&gt; 모듈 지시자는 요구 처리 중 해석 내부 명령으로 구성 단계에서 컴파일된다. 인터프리터는 간단한 가상 스택 머신입니다.</target>
        </trans-unit>
        <trans-unit id="78a434d9ec75946a2772684784deb535b93c1a95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_rewrite_module&lt;/code&gt; module is used to change request URI using PCRE regular expressions, return redirects, and conditionally select configurations.</source>
          <target state="translated">&lt;code&gt;ngx_http_rewrite_module&lt;/code&gt; 모듈은 PCRE 정규 표현식, 반환 리디렉션, 조건부 선택 구성을 사용하여 변경 요청 URI에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9aabb2a64a959ad5c509bfd61733df743b1ae5f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_scgi_module&lt;/code&gt; module allows passing requests to an SCGI server.</source>
          <target state="translated">&lt;code&gt;ngx_http_scgi_module&lt;/code&gt; 모듈은 SCGI 서버로 요청을 전달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="607dd35af1fd2105c815b3112f8a18bb1dfef2d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_secure_link_module&lt;/code&gt; module (0.7.18) is used to check authenticity of requested links, protect resources from unauthorized access, and limit link lifetime.</source>
          <target state="translated">&lt;code&gt;ngx_http_secure_link_module&lt;/code&gt; 의 모듈 (0.7.18) 요청 링크, 무단 액세스로부터 보호 자원 및 한계 링크 수명의 인증을 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e8db621eee4b7cead5a679eb0d952644d758b4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_send_header(r)&lt;/code&gt; function invokes the header filter chain by calling the first header filter handler stored in the &lt;code&gt;ngx_http_top_header_filter&lt;/code&gt; variable. It's assumed that every header handler calls the next handler in the chain until the final handler &lt;code&gt;ngx_http_header_filter(r)&lt;/code&gt; is called. The final header handler constructs the HTTP response based on &lt;code&gt;r-&amp;gt;headers_out&lt;/code&gt; and passes it to the &lt;code&gt;ngx_http_writer_filter&lt;/code&gt; for output.</source>
          <target state="translated">&lt;code&gt;ngx_http_send_header(r)&lt;/code&gt; 함수에 저장된 1 헤더 필터 핸들러 호출 헤더 필터 체인을 호출 &lt;code&gt;ngx_http_top_header_filter&lt;/code&gt; 의 변수. 최종 핸들러 &lt;code&gt;ngx_http_header_filter(r)&lt;/code&gt; 가 호출 될 때까지 모든 헤더 핸들러가 체인의 다음 핸들러를 호출한다고 가정합니다 . 최종 헤더 핸들러는 &lt;code&gt;r-&amp;gt;headers_out&lt;/code&gt; 을 기반으로 HTTP 응답을 구성하고 출력 을 위해 &lt;code&gt;ngx_http_writer_filter&lt;/code&gt; 로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="e2d0bbffc18a0933b73f953d14a7efad6d8537ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_send_header(r)&lt;/code&gt; function sends the output header. Do not call this function until &lt;code&gt;r-&amp;gt;headers_out&lt;/code&gt; contains all of the data required to produce the HTTP response header. The &lt;code&gt;status&lt;/code&gt; field in &lt;code&gt;r-&amp;gt;headers_out&lt;/code&gt; must always be set. If the response status indicates that a response body follows the header, &lt;code&gt;content_length_n&lt;/code&gt; can be set as well. The default value for this field is &lt;code&gt;-1&lt;/code&gt;, which means that the body size is unknown. In this case, chunked transfer encoding is used. To output an arbitrary header, append the &lt;code&gt;headers&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;ngx_http_send_header(r)&lt;/code&gt; 함수는 출력 헤더를 전송한다. &lt;code&gt;r-&amp;gt;headers_out&lt;/code&gt; 에 HTTP 응답 헤더를 생성하는 데 필요한 모든 데이터가 포함될 때까지이 함수를 호출하지 마십시오 . &lt;code&gt;r-&amp;gt;headers_out&lt;/code&gt; 의 &lt;code&gt;status&lt;/code&gt; 필드 는 항상 설정해야합니다. 응답 상태가 응답 본문이 헤더를 따르는 것으로 표시하면 &lt;code&gt;content_length_n&lt;/code&gt; 도 설정할 수 있습니다. 이 필드의 기본값은 &lt;code&gt;-1&lt;/code&gt; 이며 본문 크기를 알 수 없음을 의미합니다. 이 경우 청크 전송 인코딩이 사용됩니다. 임의의 헤더를 출력하려면 &lt;code&gt;headers&lt;/code&gt; 목록을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="717004f0541e74cee49a87b86eff795a311a5bc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_session_log_module&lt;/code&gt; module enables logging sessions (that is, aggregates of multiple HTTP requests) instead of individual HTTP requests.</source>
          <target state="translated">&lt;code&gt;ngx_http_session_log_module&lt;/code&gt; 모듈은 세션을 기록 할 수 있습니다 (즉, 여러 HTTP 요청 집계) 대신 개별 HTTP 요청.</target>
        </trans-unit>
        <trans-unit id="c0956e9849485b38c49c46fbd260008a0a128b2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_session_log_module&lt;/code&gt; module supports two embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_session_log_module&lt;/code&gt; 모듈은 두 변수를 포함 지원</target>
        </trans-unit>
        <trans-unit id="657aaa5d91d832bb4305867ba51b74e0e8269bd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_set_complex_value_slot()&lt;/code&gt; is a convenient function used to initialize a complex value completely in the directive declaration itself.</source>
          <target state="translated">&lt;code&gt;ngx_http_set_complex_value_slot()&lt;/code&gt; 지향성 선언 자체 완전히 복소 값을 초기화하는 데 편리한 기능이다.</target>
        </trans-unit>
        <trans-unit id="8d6e5a44a63aa89249d2e29d984d759f3787825e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_slice_module&lt;/code&gt; module (1.9.8) is a filter that splits a request into subrequests, each returning a certain range of response. The filter provides more effective caching of big responses.</source>
          <target state="translated">&lt;code&gt;ngx_http_slice_module&lt;/code&gt; 모듈 (1.9.8)의 하위 요청에 대한 요구를 각각의 응답의 특정 범위를 반환을 분할하는 필터이다. 이 필터는 큰 응답을보다 효과적으로 캐싱합니다.</target>
        </trans-unit>
        <trans-unit id="f96a513b4b953807c5f0911373b1522ff019cbfa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_slice_module&lt;/code&gt; module supports the following embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_slice_module&lt;/code&gt; 모듈은 다음과 같은 포함 된 변수를 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="199fedc9551b0f634892ddfefd9b5dfaeee6271a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_spdy_module&lt;/code&gt; module provides experimental support for &lt;a href=&quot;http://www.chromium.org/spdy/spdy-protocol&quot;&gt;SPDY&lt;/a&gt;. Currently, &lt;a href=&quot;http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft3-1&quot;&gt;draft 3.1&lt;/a&gt; of SPDY protocol is implemented.</source>
          <target state="translated">&lt;code&gt;ngx_http_spdy_module&lt;/code&gt; 모듈에 대한 실험적인 지원을 제공 &lt;a href=&quot;http://www.chromium.org/spdy/spdy-protocol&quot;&gt;SPDY를&lt;/a&gt; . 현재 SPDY 프로토콜의 &lt;a href=&quot;http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft3-1&quot;&gt;초안 3.1&lt;/a&gt; 이 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="ec65f11d3cb5ddf37a93279ab31c33aaa89e19e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_spdy_module&lt;/code&gt; module supports the following embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_spdy_module&lt;/code&gt; 모듈은 다음과 같은 포함 된 변수를 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="30a118853ad6178b54b4c1fb677c66b22d2c8402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_split_clients_module&lt;/code&gt; module creates variables suitable for A/B testing, also known as split testing.</source>
          <target state="translated">&lt;code&gt;ngx_http_split_clients_module&lt;/code&gt; 모듈은 분할 테스트 알려진 A / B 테스팅에 적합한 변수를 생성한다.</target>
        </trans-unit>
        <trans-unit id="0c1cc82156b2a38ef5fbc82a7c3aacdbe0cdbdb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_ssi_module&lt;/code&gt; module is a filter that processes SSI (Server Side Includes) commands in responses passing through it. Currently, the list of supported SSI commands is incomplete.</source>
          <target state="translated">&lt;code&gt;ngx_http_ssi_module&lt;/code&gt; 모듈은 통과 응답에서 SSI (서버 사이드 포함) 명령을 처리하는 필터입니다. 현재 지원되는 SSI 명령 목록이 불완전합니다.</target>
        </trans-unit>
        <trans-unit id="9d18d0c504cdeb9efc83e58d6d5949b022a59ddd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_ssi_module&lt;/code&gt; module supports two embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_ssi_module&lt;/code&gt; 모듈은 두 변수를 포함 지원</target>
        </trans-unit>
        <trans-unit id="22f1ad6054b0bc7ce6927203ed679687b9c54937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_ssl_module&lt;/code&gt; module provides the necessary support for HTTPS.</source>
          <target state="translated">&lt;code&gt;ngx_http_ssl_module&lt;/code&gt; 모듈은 HTTPS에 필요한 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="06c6ad973c2356d78f6e2b87bab5c3c567267e1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_ssl_module&lt;/code&gt; module supports embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_ssl_module&lt;/code&gt; 모듈 내장 변수를 지원한다 :</target>
        </trans-unit>
        <trans-unit id="8b89835813b2720400a939865d3de58df8c1f78c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_ssl_module&lt;/code&gt; module supports several non-standard error codes that can be used for redirects using the &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page&lt;/a&gt; directive:</source>
          <target state="translated">&lt;code&gt;ngx_http_ssl_module&lt;/code&gt; 모듈은 사용 리디렉션을 위해 사용할 수있는 몇 가지 표준이 아닌 에러 코드 지원 &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page의&lt;/a&gt; 지시를 :</target>
        </trans-unit>
        <trans-unit id="5c0f3f98bd5eaef1912688e44fcc9bcdcf1b689b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_status_module&lt;/code&gt; module provides access to various status information.</source>
          <target state="translated">&lt;code&gt;ngx_http_status_module&lt;/code&gt; 모듈은 다양한 상태 정보에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="46a891dec6b8c7a477276fe2cc16a7a2d1d3f957" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_stub_status_module&lt;/code&gt; module provides access to basic status information.</source>
          <target state="translated">&lt;code&gt;ngx_http_stub_status_module&lt;/code&gt; 모듈은 기본 상태 정보에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="40464bc6b07480973dd2b4e3058e09ee698a2402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_stub_status_module&lt;/code&gt; module supports the following embedded variables (1.3.14):</source>
          <target state="translated">&lt;code&gt;ngx_http_stub_status_module&lt;/code&gt; 모듈 지지부 다음 매립 변수 (1.3.14)</target>
        </trans-unit>
        <trans-unit id="8fb85a52518d491da5a5de31f4935602bed6707c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_sub_module&lt;/code&gt; module is a filter that modifies a response by replacing one specified string by another.</source>
          <target state="translated">&lt;code&gt;ngx_http_sub_module&lt;/code&gt; 모듈은 필터 인 수정하게 다른 하나 지정된 문자열로 대체함으로써 응답.</target>
        </trans-unit>
        <trans-unit id="8b9c191c389546e78d0239a20bd7dc83e1e36804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_time(buf, time)&lt;/code&gt; function returns a string representation suitable for use in HTTP headers (for example, &lt;code&gt;&quot;Mon, 28 Sep 1970 06:00:00 GMT&quot;&lt;/code&gt;). The &lt;code&gt;ngx_http_cookie_time(buf, time)&lt;/code&gt; returns a string representation function returns a string representation suitable for HTTP cookies (&lt;code&gt;&quot;Thu, 31-Dec-37 23:55:55 GMT&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ngx_http_time(buf, time)&lt;/code&gt; HTTP 헤더에 사용되는 문자열 표현에 적합한 함수가 반환 (예를 들어, &lt;code&gt;&quot;Mon, 28 Sep 1970 06:00:00 GMT&quot;&lt;/code&gt; ). &lt;code&gt;ngx_http_cookie_time(buf, time)&lt;/code&gt; 문자열 표현의 기능은 HTTP 쿠키에 적합한 문자열 표현을 반환 (반환 &lt;code&gt;&quot;Thu, 31-Dec-37 23:55:55 GMT&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="01d6db1dfcc1603d016eb95cff8125d46937907e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_upstream_conf_module&lt;/code&gt; module allows configuring upstream server groups on-the-fly via a simple HTTP interface without the need of restarting nginx. The &lt;a href=&quot;ngx_http_upstream_module#zone&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#zone&quot;&gt;stream&lt;/a&gt; server group must reside in the shared memory.</source>
          <target state="translated">&lt;code&gt;ngx_http_upstream_conf_module&lt;/code&gt; 모듈의 nginx를 재시작 할 필요없이 즉석에서 간단한 HTTP 인터페이스를 통해 업스트림 서버 그룹을 구성 할 수 있습니다. &lt;a href=&quot;ngx_http_upstream_module#zone&quot;&gt;HTTP&lt;/a&gt; 또는 &lt;a href=&quot;../stream/ngx_stream_upstream_module#zone&quot;&gt;스트림&lt;/a&gt; 서버 그룹은 공유 메모리에 상주해야합니다.</target>
        </trans-unit>
        <trans-unit id="66f733d89bc8990c44394ef900b2e7e14ce67e3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_upstream_hc_module&lt;/code&gt; module allows enabling periodic health checks of the servers in a &lt;a href=&quot;ngx_http_upstream_module#upstream&quot;&gt;group&lt;/a&gt; referenced in the surrounding location. The server group must reside in the &lt;a href=&quot;ngx_http_upstream_module#zone&quot;&gt;shared memory&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngx_http_upstream_hc_module&lt;/code&gt; 모듈은 상기 서버의 주기적 상태 확인을 가능하게 허용 &lt;a href=&quot;ngx_http_upstream_module#upstream&quot;&gt;그룹&lt;/a&gt; 주변의 위치에서 참조. 서버 그룹은 &lt;a href=&quot;ngx_http_upstream_module#zone&quot;&gt;공유 메모리에&lt;/a&gt; 상주해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d87532a3d35759223527f449c188e84a337c8905" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_upstream_module&lt;/code&gt; module is used to define groups of servers that can be referenced by the &lt;a href=&quot;ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_scgi_module#scgi_pass&quot;&gt;scgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_memcached_module#memcached_pass&quot;&gt;memcached_pass&lt;/a&gt;, and &lt;a href=&quot;ngx_http_grpc_module#grpc_pass&quot;&gt;grpc_pass&lt;/a&gt; directives.</source>
          <target state="translated">&lt;code&gt;ngx_http_upstream_module&lt;/code&gt; 모듈은 참조 할 수있는 서버 그룹을 정의하는 데 사용됩니다 &lt;a href=&quot;ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_scgi_module#scgi_pass&quot;&gt;scgi_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_memcached_module#memcached_pass&quot;&gt;memcached_pass&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_grpc_module#grpc_pass&quot;&gt;grpc_pass의&lt;/a&gt; 지시를.</target>
        </trans-unit>
        <trans-unit id="458bd26336c8c2874f56b0e6e02eb373c1be7fa9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_upstream_module&lt;/code&gt; module supports the following embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_upstream_module&lt;/code&gt; 모듈은 다음과 같은 포함 된 변수를 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="7a3f5f4deaecb56d31c75ffda9b7c6822460218b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_userid_module&lt;/code&gt; module sets cookies suitable for client identification. Received and set cookies can be logged using the embedded variables &lt;a href=&quot;#var_uid_got&quot;&gt;$uid_got&lt;/a&gt; and &lt;a href=&quot;#var_uid_set&quot;&gt;$uid_set&lt;/a&gt;. This module is compatible with the &lt;a href=&quot;http://www.lexa.ru/programs/mod-uid-eng.html&quot;&gt;mod_uid&lt;/a&gt; module for Apache.</source>
          <target state="translated">&lt;code&gt;ngx_http_userid_module&lt;/code&gt; 모듈은 클라이언트 식별에 적합 쿠키를 설정합니다. 포함 된 변수 &lt;a href=&quot;#var_uid_got&quot;&gt;$ uid_got&lt;/a&gt; 및 &lt;a href=&quot;#var_uid_set&quot;&gt;$ uid_set을&lt;/a&gt; 사용하여 수신 및 설정 쿠키를 기록 할 수 있습니다 . 이 모듈은 Apache 용 &lt;a href=&quot;http://www.lexa.ru/programs/mod-uid-eng.html&quot;&gt;mod_uid&lt;/a&gt; 모듈 과 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="37fb8012df9a9a0b3c62168b7c1ded9b6f41f26f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_userid_module&lt;/code&gt; module supports the following embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_userid_module&lt;/code&gt; 모듈은 다음과 같은 포함 된 변수를 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="6792b47a664d1da540085bc069fba927aa0e0bd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_uwsgi_module&lt;/code&gt; module allows passing requests to a uwsgi server.</source>
          <target state="translated">&lt;code&gt;ngx_http_uwsgi_module&lt;/code&gt; 모듈은 uwsgi 서버로 요청을 전달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3980b8cc59f7149993100ba4f9f3ea32753779e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_v2_module&lt;/code&gt; module (1.9.5) provides support for &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;HTTP/2&lt;/a&gt; and supersedes the &lt;a href=&quot;ngx_http_spdy_module&quot;&gt;ngx_http_spdy_module&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;ngx_http_v2_module&lt;/code&gt; 모듈 (1.9.5)을위한 지원을 제공하는 &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;HTTP / 2&lt;/a&gt; 및 대체합니다 &lt;a href=&quot;ngx_http_spdy_module&quot;&gt;ngx_http_spdy_module&lt;/a&gt; 모듈.</target>
        </trans-unit>
        <trans-unit id="bfd370402fb11f0cf70fb6ea1b6ffb305ac6160d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_v2_module&lt;/code&gt; module supports the following embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_http_v2_module&lt;/code&gt; 모듈은 다음과 같은 포함 된 변수를 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="2d7c96d61ab62f29f02b394bf7b7578c6d04bc1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_http_xslt_module&lt;/code&gt; (0.7.8+) is a filter that transforms XML responses using one or more XSLT stylesheets.</source>
          <target state="translated">&lt;code&gt;ngx_http_xslt_module&lt;/code&gt; (0.7.8+)는 변환 된 XML 응답은 하나 이상의 XSLT 스타일 시트를 사용하는 필터이다.</target>
        </trans-unit>
        <trans-unit id="3478469288bd042c14033f315d3202d558532403" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_inline&lt;/code&gt; macro should be used instead of &lt;code&gt;inline&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ngx_inline&lt;/code&gt; 의 매크로 대신 사용해야합니다 &lt;code&gt;inline&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c402b791f946544a46a9b49600de7b95fb5d9897" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_mail_ssl_module&lt;/code&gt; module provides the necessary support for a mail proxy server to work with the SSL/TLS protocol.</source>
          <target state="translated">&lt;code&gt;ngx_mail_ssl_module&lt;/code&gt; 모듈은 SSL / TLS 프로토콜 작업에 대한 메일 프록시 서버에 필요한 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8ddb79bf3196aedc3863f2e985953d92aaaec21f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_regex_exec_array()&lt;/code&gt; function accepts the array of &lt;code&gt;ngx_regex_elt_t&lt;/code&gt; elements (which are just compiled regular expressions with associated names), a string to match, and a log. The function applies expressions from the array to the string until either a match is found or no more expressions are left. The return value is &lt;code&gt;NGX_OK&lt;/code&gt; when there is a match and &lt;code&gt;NGX_DECLINED&lt;/code&gt; otherwise, or &lt;code&gt;NGX_ERROR&lt;/code&gt; in case of error.</source>
          <target state="translated">&lt;code&gt;ngx_regex_exec_array()&lt;/code&gt; 함수의 배열을 받아 &lt;code&gt;ngx_regex_elt_t&lt;/code&gt; (단지 관련된 이름을 가진 정규 표현식을 컴파일) 요소, 경기에 문자열 및 로그를. 이 함수는 일치하는 것이 발견되거나 더 이상 표현식이 남아 있지 않을 때까지 배열의 표현식을 문자열에 적용합니다. 일치하는 경우 반환 값은 &lt;code&gt;NGX_OK&lt;/code&gt; 이고 , 그렇지 않으면 &lt;code&gt;NGX_DECLINED&lt;/code&gt; , 오류 인 경우 &lt;code&gt;NGX_ERROR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d143bb0203fe4056658444fb9210153719ebd13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_access_module&lt;/code&gt; module (1.9.2) allows limiting access to certain client addresses.</source>
          <target state="translated">&lt;code&gt;ngx_stream_access_module&lt;/code&gt; 의 모듈 (1.9.2)는 특정 클라이언트 주소에 대한 액세스를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b56fa4d44dc7c780ceafe9b7f366100d165b04b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_core_module&lt;/code&gt; module is available since version 1.9.0. This module is not built by default, it should be enabled with the &lt;code&gt;--with-stream&lt;/code&gt; configuration parameter.</source>
          <target state="translated">&lt;code&gt;ngx_stream_core_module&lt;/code&gt; 모듈은 버전 1.9.0부터 사용할 수 있습니다. 이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-stream&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="89b5f29ff19df66056dc19067b14d9da9c3ac060" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_core_module&lt;/code&gt; module supports variables since 1.11.2.</source>
          <target state="translated">&lt;code&gt;ngx_stream_core_module&lt;/code&gt; 모듈 1.11.2 때문에 변수를 지원한다.</target>
        </trans-unit>
        <trans-unit id="df21c493723b2c4663e99a252137e58ed318fc2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_geo_module&lt;/code&gt; module (1.11.3) creates variables with values depending on the client IP address.</source>
          <target state="translated">&lt;code&gt;ngx_stream_geo_module&lt;/code&gt; 의 모듈 (1.11.3) 클라이언트의 IP 주소에 따라 값이 변수를 생성한다.</target>
        </trans-unit>
        <trans-unit id="89ef5db7a68ad4ed2f9f944aef800488a34ea01b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_geoip_module&lt;/code&gt; module (1.11.3) creates variables with values depending on the client IP address, using the precompiled &lt;a href=&quot;http://www.maxmind.com&quot;&gt;MaxMind&lt;/a&gt; databases.</source>
          <target state="translated">&lt;code&gt;ngx_stream_geoip_module&lt;/code&gt; 모듈 (1.11.3)의 값이 미리 컴파일하여 클라이언트의 IP 주소에 따라 생성하여 변수 &lt;a href=&quot;http://www.maxmind.com&quot;&gt;MaxMind의&lt;/a&gt; 데이터베이스.</target>
        </trans-unit>
        <trans-unit id="2b81f1f8500c5c4b4c4dcc3767d7ccff38ef22fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_js_module&lt;/code&gt; module is used to implement handlers in &lt;a href=&quot;../njs/index&quot;&gt;njs&lt;/a&gt; &amp;mdash; a subset of the JavaScript language.</source>
          <target state="translated">&lt;code&gt;ngx_stream_js_module&lt;/code&gt; 모듈에서 핸들러를 구현하는 데 사용됩니다 &lt;a href=&quot;../njs/index&quot;&gt;NJS&lt;/a&gt; 자바 스크립트 언어의 부분 집합을 -.</target>
        </trans-unit>
        <trans-unit id="ce76b3cf18aa672085e35b965d4acab31df97730" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_keyval_module&lt;/code&gt; module (1.13.7) creates variables with values taken from key-value pairs managed by the &lt;a href=&quot;../http/ngx_http_api_module#stream_keyvals_&quot;&gt;API&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngx_stream_keyval_module&lt;/code&gt; 의 모듈 (1.13.7)를 관리하여 키 - 값 쌍에서 촬영 변수 값 생성 &lt;a href=&quot;../http/ngx_http_api_module#stream_keyvals_&quot;&gt;API를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f54658ee7467bbae6958a8af1e6f0d86b947878" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_limit_conn_module&lt;/code&gt; module (1.9.3) is used to limit the number of connections per the defined key, in particular, the number of connections from a single IP address.</source>
          <target state="translated">&lt;code&gt;ngx_stream_limit_conn_module&lt;/code&gt; 의 모듈 (1.9.3)은 특히 정의 키당 연결의 수를 제한하는 데 사용되며, 하나의 IP 어드레스로부터의 접속의 수.</target>
        </trans-unit>
        <trans-unit id="8a85fcbd9f6cf70f78d3759eb4d26cca3d481bce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_log_module&lt;/code&gt; module (1.11.4) writes session logs in the specified format.</source>
          <target state="translated">&lt;code&gt;ngx_stream_log_module&lt;/code&gt; 모듈 (1.11.4) 지정된 형식으로 세션 로그를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="a1ac68115aa192833a2a58f0480920d49df40da4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_map_module&lt;/code&gt; module (1.11.2) creates variables whose values depend on values of other variables.</source>
          <target state="translated">&lt;code&gt;ngx_stream_map_module&lt;/code&gt; 의 모듈 (1.11.2)는 그 값이 다른 변수의 값에 의존하는 변수를 생성한다.</target>
        </trans-unit>
        <trans-unit id="4a287a0e1a7dbb911edbf9d7bb4646e979ebbd9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_proxy_module&lt;/code&gt; module (1.9.0) allows proxying data streams over TCP, UDP (1.9.13), and UNIX-domain sockets.</source>
          <target state="translated">&lt;code&gt;ngx_stream_proxy_module&lt;/code&gt; 모듈 (1.9.0)의 데이터를 TCP, UDP (1.9.13), 및 UNIX 도메인 소켓을 통해 스트림을 프록시 허용한다.</target>
        </trans-unit>
        <trans-unit id="adcee8496f544dd12e2b5fb7c88a5ca43642daa8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_realip_module&lt;/code&gt; module is used to change the client address and port to the ones sent in the PROXY protocol header (1.11.4). The PROXY protocol must be previously enabled by setting the &lt;a href=&quot;ngx_stream_core_module#proxy_protocol&quot;&gt;proxy_protocol&lt;/a&gt; parameter in the &lt;code&gt;listen&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ngx_stream_realip_module&lt;/code&gt; 모듈은 프록시 프로토콜 헤더 (1.11.4)에 보낸 사람에 대한 클라이언트의 주소와 포트를 변경하는 데 사용됩니다. &lt;code&gt;listen&lt;/code&gt; 지시문 에서 &lt;a href=&quot;ngx_stream_core_module#proxy_protocol&quot;&gt;proxy_protocol&lt;/a&gt; 매개 변수를 설정하여 PROXY 프로토콜을 미리 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="293fcc31b71f66681ab67f87889e7cae5a520c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_return_module&lt;/code&gt; module (1.11.2) allows sending a specified value to the client and then closing the connection.</source>
          <target state="translated">&lt;code&gt;ngx_stream_return_module&lt;/code&gt; 모듈 (1.11.2) 클라이언트에 지정된 값을 전송하고 연결을 종료 허용한다.</target>
        </trans-unit>
        <trans-unit id="ab0afd545fb3d16f56e368ddd07995c0333619ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_split_clients_module&lt;/code&gt; module (1.11.3) creates variables suitable for A/B testing, also known as split testing.</source>
          <target state="translated">&lt;code&gt;ngx_stream_split_clients_module&lt;/code&gt; 모듈 (1.11.3)도 분할 테스트 알려진 A / B 테스팅에 적합한 변수를 생성한다.</target>
        </trans-unit>
        <trans-unit id="a0a50caf03125f9ac6eb5854b238e3c1ce28a40d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_ssl_module&lt;/code&gt; module (1.9.0) provides the necessary support for a stream proxy server to work with the SSL/TLS protocol. This module is not built by default, it should be enabled with the &lt;code&gt;--with-stream_ssl_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">&lt;code&gt;ngx_stream_ssl_module&lt;/code&gt; 의 모듈 (1.9.0)는 SSL / TLS 프로토콜 작업에 스트림 프록시 서버에 필요한 지원을 제공합니다. 이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-stream_ssl_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c50421f73e3a7bc6ef3d6ec8c407a16953e03a87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_ssl_module&lt;/code&gt; module supports variables since 1.11.2.</source>
          <target state="translated">&lt;code&gt;ngx_stream_ssl_module&lt;/code&gt; 모듈 1.11.2 때문에 변수를 지원한다.</target>
        </trans-unit>
        <trans-unit id="cc5ada4efa9766397fa8abb1ea106c466a356a18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_ssl_preread_module&lt;/code&gt; module (1.11.5) allows extracting information from the &lt;a href=&quot;https://tools.ietf.org/html/rfc5246#section-7.4.1.2&quot;&gt;ClientHello&lt;/a&gt; message without terminating SSL/TLS, for example, the server name requested through &lt;a href=&quot;https://tools.ietf.org/html/rfc6066#section-3&quot;&gt;SNI&lt;/a&gt; or protocols advertised in &lt;a href=&quot;https://tools.ietf.org/html/rfc7301&quot;&gt;ALPN&lt;/a&gt;. This module is not built by default, it should be enabled with the &lt;code&gt;--with-stream_ssl_preread_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">&lt;code&gt;ngx_stream_ssl_preread_module&lt;/code&gt; 모듈 (1.11.5)는 정보 추출있게 &lt;a href=&quot;https://tools.ietf.org/html/rfc5246#section-7.4.1.2&quot;&gt;의 ClientHello&lt;/a&gt; SSL을 종료하지 않고 메시지 / TLS는, 예를 들어, 서버 이름을 요청 &lt;a href=&quot;https://tools.ietf.org/html/rfc6066#section-3&quot;&gt;SNI&lt;/a&gt; 또는 프로토콜 보급 &lt;a href=&quot;https://tools.ietf.org/html/rfc7301&quot;&gt;ALPN&lt;/a&gt; . 이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-stream_ssl_preread_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ffdc63f291e370bc960dfd91bd0b9d2b263a28c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_upstream_hc_module&lt;/code&gt; module (1.9.0) allows enabling periodic health checks of the servers in a &lt;a href=&quot;ngx_stream_upstream_module#upstream&quot;&gt;group&lt;/a&gt;. The server group must reside in the &lt;a href=&quot;ngx_stream_upstream_module#zone&quot;&gt;shared memory&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngx_stream_upstream_hc_module&lt;/code&gt; 의 모듈 (1.9.0)은 상기 서버의 주기적 상태 확인을 가능하게 허용 &lt;a href=&quot;ngx_stream_upstream_module#upstream&quot;&gt;기&lt;/a&gt; . 서버 그룹은 &lt;a href=&quot;ngx_stream_upstream_module#zone&quot;&gt;공유 메모리에&lt;/a&gt; 상주해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c882d4782aba8c9cb1ac3989bd3b842e0251b279" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_upstream_module&lt;/code&gt; module (1.9.0) is used to define groups of servers that can be referenced by the &lt;a href=&quot;ngx_stream_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; directive.</source>
          <target state="translated">&lt;code&gt;ngx_stream_upstream_module&lt;/code&gt; 의 모듈 (1.9.0)을 참조 할 수있는 서버 그룹을 정의하기 위해 사용된다 &lt;a href=&quot;ngx_stream_proxy_module#proxy_pass&quot;&gt;proxy_pass의&lt;/a&gt; 지시자.</target>
        </trans-unit>
        <trans-unit id="ae837de7d0c91202cd038832ddcc7f9baf92e736" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_upstream_module&lt;/code&gt; module supports the following embedded variables:</source>
          <target state="translated">&lt;code&gt;ngx_stream_upstream_module&lt;/code&gt; 모듈은 다음과 같은 포함 된 변수를 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="31e38093e3a83c1a51e8f8421400a853d10944ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_stream_zone_sync_module&lt;/code&gt; module (1.13.8) provides the necessary support for synchronizing contents of &lt;a href=&quot;ngx_stream_upstream_module#zone&quot;&gt;shared memory zones&lt;/a&gt; between nodes of a cluster. To enable synchronization for a particular zone, a corresponding module must support this feature. Currently, it is possible to synchronize HTTP &lt;a href=&quot;../http/ngx_http_upstream_module#sticky&quot;&gt;sticky&lt;/a&gt; sessions, information about &lt;a href=&quot;../http/ngx_http_limit_req_module&quot;&gt;excessive HTTP requests&lt;/a&gt;, and key-value pairs both in &lt;a href=&quot;../http/ngx_http_keyval_module&quot;&gt;http&lt;/a&gt; and &lt;a href=&quot;ngx_stream_keyval_module&quot;&gt;stream&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ngx_stream_zone_sync_module&lt;/code&gt; 의 모듈 (1.13.8)의 내용 동기화에 필요한 지원을 제공하는 &lt;a href=&quot;ngx_stream_upstream_module#zone&quot;&gt;공유 메모리 영역을&lt;/a&gt; 클러스터의 노드 사이를. 특정 영역에 대한 동기화를 활성화하려면 해당 모듈이이 기능을 지원해야합니다. 현재 HTTP &lt;a href=&quot;../http/ngx_http_upstream_module#sticky&quot;&gt;고정&lt;/a&gt; 세션, &lt;a href=&quot;../http/ngx_http_limit_req_module&quot;&gt;과도한 HTTP 요청&lt;/a&gt; 에 대한 정보 및 &lt;a href=&quot;../http/ngx_http_keyval_module&quot;&gt;http&lt;/a&gt; 및 &lt;a href=&quot;ngx_stream_keyval_module&quot;&gt;stream&lt;/a&gt; 모두에서 키-값 쌍 을 동기화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3e9da7f334eff6f72af623245d672195e0488326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_time()&lt;/code&gt; and &lt;code&gt;ngx_timeofday()&lt;/code&gt; macros return the current time value in seconds and are the preferred way to access the cached time value.</source>
          <target state="translated">&lt;code&gt;ngx_time()&lt;/code&gt; 및 &lt;code&gt;ngx_timeofday()&lt;/code&gt; 매크로는 초 현재 시간 값을 반환하고 캐시 시간 값에 액세스 할 수있는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d796a88733b1085cd5e6b28e0996bbcf00bef871" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_time_t&lt;/code&gt; structure represents time with three separate types for seconds, milliseconds, and the GMT offset:</source>
          <target state="translated">&lt;code&gt;ngx_time_t&lt;/code&gt; 구조 초, 밀리 초 동안 세 개의 유형의 시간을 나타내고, GMT 오프셋 :</target>
        </trans-unit>
        <trans-unit id="f597efb21883955f86774afacbc53b6f60dd8bc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngx_tm_t&lt;/code&gt; structure is an alias for &lt;code&gt;struct tm&lt;/code&gt; on UNIX platforms and &lt;code&gt;SYSTEMTIME&lt;/code&gt; on Windows.</source>
          <target state="translated">&lt;code&gt;ngx_tm_t&lt;/code&gt; 구조의 별칭입니다 &lt;code&gt;struct tm&lt;/code&gt; UNIX 플랫폼 및 &lt;code&gt;SYSTEMTIME&lt;/code&gt; Windows에서.</target>
        </trans-unit>
        <trans-unit id="f572cdf2556bacf35b0caf81d76bc929831a2fc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;off&lt;/code&gt; parameter cancels the effect of all &lt;code&gt;proxy_cookie_domain&lt;/code&gt; directives on the current level:</source>
          <target state="translated">&lt;code&gt;off&lt;/code&gt; 매개 변수는 모든 효과 취소 &lt;code&gt;proxy_cookie_domain&lt;/code&gt; 의 현재 수준에 대한 지침을 :</target>
        </trans-unit>
        <trans-unit id="8de9e9dae3d2c50c1b2980c971a2cc16cbe00a03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;off&lt;/code&gt; parameter cancels the effect of all &lt;code&gt;proxy_cookie_path&lt;/code&gt; directives on the current level:</source>
          <target state="translated">&lt;code&gt;off&lt;/code&gt; 매개 변수는 모든 효과 취소 &lt;code&gt;proxy_cookie_path&lt;/code&gt; 의 현재 수준에 대한 지침을 :</target>
        </trans-unit>
        <trans-unit id="abc14cb938c4e1e25b6d1ea48f9821539a7b4fe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;off&lt;/code&gt; parameter cancels the effect of all &lt;code&gt;proxy_redirect&lt;/code&gt; directives on the current level:</source>
          <target state="translated">&lt;code&gt;off&lt;/code&gt; 매개 변수는 모든 효과 취소 &lt;code&gt;proxy_redirect&lt;/code&gt; 의 현재 수준에 대한 지침을 :</target>
        </trans-unit>
        <trans-unit id="1a954210bd1aa6807be9ccf45dccd082ee2b1ec7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;off&lt;/code&gt; parameter disables adding or modifying the &amp;ldquo;Expires&amp;rdquo; and &amp;ldquo;Cache-Control&amp;rdquo; response header fields.</source>
          <target state="translated">&lt;code&gt;off&lt;/code&gt; 은 &quot;만료&quot;와 &quot;캐시 제어&quot;응답 헤더 필드를 추가하거나 수정하는 매개 변수 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="315e461bb256fbbc9b5be202388d4b4bd3d1d43c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; defines the offset of a field in a module configuration structure that holds values for this particular directive. The typical use is to employ the &lt;code&gt;offsetof()&lt;/code&gt; macro.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 은이 특정 지시문에 대한 값을 보유하는 모듈 구성 구조에서 필드 의 오프셋을 정의합니다. 일반적인 용도는 &lt;code&gt;offsetof()&lt;/code&gt; 매크로 를 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4e83dd588b2e4cc7edf9b891c6db22301c16ab76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional&lt;/code&gt; parameter (0.8.7+) requests the client certificate and verifies it if the certificate is present.</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; 인증서가있는 경우 매개 변수 (0.8.7+) 클라이언트 인증서를 검증을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="c260e46c49db2d6dc5bb7099b1493b12f9dab22e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional&lt;/code&gt; parameter requests the client certificate and verifies it if the certificate is present.</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; 인증서가있는 경우 매개 변수는 클라이언트 인증서를 검증을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="b77dced38ed2b36736d75b439aa3ac16c7d6d449" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional_no_ca&lt;/code&gt; parameter (1.3.8, 1.2.5) requests the client certificate but does not require it to be signed by a trusted CA certificate. This is intended for the use in cases when a service that is external to nginx performs the actual certificate verification. The contents of the certificate is accessible through the &lt;a href=&quot;#var_ssl_client_cert&quot;&gt;$ssl_client_cert&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;optional_no_ca&lt;/code&gt; 의 매개 변수 (1.3.8, 1.2.5) 클라이언트 인증서를 요청하지만이 신뢰할 수있는 CA 인증서로 서명 할 필요가 없습니다. 이는 nginx 외부의 서비스가 실제 인증서 확인을 수행하는 경우에 사용하기위한 것입니다. 인증서 내용은 &lt;a href=&quot;#var_ssl_client_cert&quot;&gt;$ ssl_client_cert&lt;/a&gt; 변수를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27ac6613112f3e2e818a58f5686131c331518283" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional_no_ca&lt;/code&gt; parameter requests the client certificate but does not require it to be signed by a trusted CA certificate. This is intended for the use in cases when a service that is external to nginx performs the actual certificate verification. The contents of the certificate is accessible through requests &lt;a href=&quot;ngx_mail_auth_http_module#auth_http_pass_client_cert&quot;&gt;sent&lt;/a&gt; to the authentication server.</source>
          <target state="translated">&lt;code&gt;optional_no_ca&lt;/code&gt; 의 매개 변수는 클라이언트 인증서를 요청하지만이는 CA 인증서를 신뢰 서명 할 필요가 없습니다. 이는 nginx 외부의 서비스가 실제 인증서 확인을 수행하는 경우에 사용하기위한 것입니다. 인증 내용은 인증 서버로 &lt;a href=&quot;ngx_mail_auth_http_module#auth_http_pass_client_cert&quot;&gt;전송 된&lt;/a&gt; 요청을 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5838b23c76b78505d1d0a3dfe13c7e7b8e2896ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional_no_ca&lt;/code&gt; parameter requests the client certificate but does not require it to be signed by a trusted CA certificate. This is intended for the use in cases when a service that is external to nginx performs the actual certificate verification. The contents of the certificate is accessible through the &lt;a href=&quot;#var_ssl_client_cert&quot;&gt;$ssl_client_cert&lt;/a&gt; variable.</source>
          <target state="translated">&lt;code&gt;optional_no_ca&lt;/code&gt; 의 매개 변수는 클라이언트 인증서를 요청하지만이는 CA 인증서를 신뢰 서명 할 필요가 없습니다. 이는 nginx 외부의 서비스가 실제 인증서 확인을 수행하는 경우에 사용하기위한 것입니다. 인증서 내용은 &lt;a href=&quot;#var_ssl_client_cert&quot;&gt;$ ssl_client_cert&lt;/a&gt; 변수를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="140de75f0b6927ec32d63030c366f0e6495396a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;method&lt;/code&gt; fields of &lt;a href=&quot;#def_nginx_error&quot;&gt;nginx error object&lt;/a&gt; were removed in &lt;a href=&quot;#api_version&quot;&gt;version&lt;/a&gt; 4. These fields continue to exist in earlier api versions, but show an empty value.</source>
          <target state="translated">&lt;a href=&quot;#def_nginx_error&quot;&gt;nginx 오류 객체&lt;/a&gt; 의 &lt;code&gt;path&lt;/code&gt; 및 &lt;code&gt;method&lt;/code&gt; 필드는 &lt;a href=&quot;#api_version&quot;&gt;버전&lt;/a&gt; 4 에서 제거되었습니다 .이 필드는 이전 API 버전에서는 계속 존재하지만 빈 값을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="63ab9886c1d3e5cd5959fcffa57191c9b87176be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;perl/lib/hello.pm&lt;/code&gt; module:</source>
          <target state="translated">&lt;code&gt;perl/lib/hello.pm&lt;/code&gt; 모듈 :</target>
        </trans-unit>
        <trans-unit id="4adca16665f51cccf6906afee628a461da53f84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;post&lt;/code&gt; argument is the &lt;code&gt;ngx_conf_post_t&lt;/code&gt; object itself, and the &lt;code&gt;data&lt;/code&gt; is a pointer to the value, converted from arguments by the main handler with the appropriate type.</source>
          <target state="translated">&lt;code&gt;post&lt;/code&gt; 인수는이다 &lt;code&gt;ngx_conf_post_t&lt;/code&gt; 객체 자체, 그리고 &lt;code&gt;data&lt;/code&gt; 값에 대한 포인터, 적절한 유형의 주요 핸들러에 의해 인수에서 변환.</target>
        </trans-unit>
        <trans-unit id="976d9e1dd143215d302111a42e65c1fc8f8c768a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;post&lt;/code&gt; field has two purposes: it may be used to define a handler to be called after the main handler has completed, or to pass additional data to the main handler. In the first case, the &lt;code&gt;ngx_conf_post_t&lt;/code&gt; structure needs to be initialized with a pointer to the handler, for example:</source>
          <target state="translated">&lt;code&gt;post&lt;/code&gt; 필드는 두 가지 용도 : 메인 처리기가 완료된 후 호출하는 핸들러를 정의하거나 메인 처리기에 추가 데이터를 전달하는 데 사용될 수있다. 첫 번째 경우, &lt;code&gt;ngx_conf_post_t&lt;/code&gt; 구조는 핸들러에 대한 포인터로 초기화해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="22c84c58d85cd3cdfe44218f43280b9af267fc71" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object is a global object that provides information about the current process (&lt;a href=&quot;changes#njs0.3.3&quot;&gt;0.3.3&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; 목적은 현재 프로세스 (약 정보를 제공하는 글로벌 목적 &lt;a href=&quot;changes#njs0.3.3&quot;&gt;0.3.3을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="dad233f3a4374154c298cb6b20cf43ea2bf0cf58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxy_protocol&lt;/code&gt; parameter (1.11.4) allows specifying that all connections accepted on this port should use the &lt;a href=&quot;http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt&quot;&gt;PROXY protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;proxy_protocol&lt;/code&gt; 의 매개 변수 (1.11.4)를하면이 포트에 모든 연결이 사용하도록 지정할 수 있습니다 &lt;a href=&quot;http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt&quot;&gt;PROXY 프로토콜을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a23eed5dd486752fa43a22e5fbceca5999f64bcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxy_protocol&lt;/code&gt; parameter (1.5.12) allows specifying that all connections accepted on this port should use the &lt;a href=&quot;http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt&quot;&gt;PROXY protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;proxy_protocol&lt;/code&gt; 의 매개 변수 (1.5.12)을하면이 포트에 모든 연결이 사용하도록 지정할 수 있습니다 &lt;a href=&quot;http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt&quot;&gt;PROXY 프로토콜을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae139da4b1a07ab4c6486e1f43bcca90ab2772c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxy_protocol&lt;/code&gt; parameter (1.5.12) changes the client address to the one from the PROXY protocol header. The PROXY protocol must be previously enabled by setting the &lt;code&gt;proxy_protocol&lt;/code&gt; parameter in the &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; directive.</source>
          <target state="translated">&lt;code&gt;proxy_protocol&lt;/code&gt; 의 파라미터 (1.5.12)는 PROXY 프로토콜 헤더 중 하나에 클라이언트의 주소를 변경한다. &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;청취&lt;/a&gt; 지시문 에서 &lt;code&gt;proxy_protocol&lt;/code&gt; 매개 변수를 설정하여 PROXY 프로토콜을 미리 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="50632831e798319c76d4f9c7d81c614a1c98cafe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request_body_no_buffering&lt;/code&gt; flag enables the unbuffered mode of reading a request body. In this mode, after calling &lt;code&gt;ngx_http_read_client_request_body()&lt;/code&gt;, the &lt;code&gt;bufs&lt;/code&gt; chain might keep only a part of the body. To read the next part, call the &lt;code&gt;ngx_http_read_unbuffered_request_body(r)&lt;/code&gt; function. The return value &lt;code&gt;NGX_AGAIN&lt;/code&gt; and the request flag &lt;code&gt;reading_body&lt;/code&gt; indicate that more data is available. If &lt;code&gt;bufs&lt;/code&gt; is NULL after calling this function, there is nothing to read at the moment. The request callback &lt;code&gt;read_event_handler&lt;/code&gt; will be called when the next part of request body is available.</source>
          <target state="translated">&lt;code&gt;request_body_no_buffering&lt;/code&gt; 플래그는 요청 본문을 읽는 버퍼링 모드를 가능하게한다. 이 모드에서 호출 한 후 &lt;code&gt;ngx_http_read_client_request_body()&lt;/code&gt; 는 &lt;code&gt;bufs&lt;/code&gt; 의 체인은 신체의 일부를 유지할 수 있습니다. 다음 부분을 읽으려면 &lt;code&gt;ngx_http_read_unbuffered_request_body(r)&lt;/code&gt; 함수를 호출하십시오 . 리턴 값 &lt;code&gt;NGX_AGAIN&lt;/code&gt; 및 요청 플래그 &lt;code&gt;reading_body&lt;/code&gt; 는 더 많은 데이터가 사용 가능함을 나타냅니다. 경우 &lt;code&gt;bufs&lt;/code&gt; 이 NULL이 함수를 호출 이후, 순간에 읽을 수있는 것은 없다. 요청 본문의 다음 부분이 사용 가능하면 요청 콜백 &lt;code&gt;read_event_handler&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7155efb0711070393980b216e7b865e5db6448f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resolve&lt;/code&gt; parameter instructs nginx to monitor changes of the IP addresses that correspond to a domain name of the node and automatically modify the configuration without the need of restarting nginx.</source>
          <target state="translated">&lt;code&gt;resolve&lt;/code&gt; 매개 변수에 지시는 노드의 도메인 이름에 해당하는 자동이의 nginx를 재시작 할 필요없이 구성을 수정하는 IP 주소의 변경을 감시하기 위해서 nginx에.</target>
        </trans-unit>
        <trans-unit id="83cc6e4a70ca55454f17812f9b3c9d65bf95f6a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;revalidated&lt;/code&gt; field in &lt;a href=&quot;#caches&quot;&gt;caches&lt;/a&gt; was added in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 3.</source>
          <target state="translated">&lt;a href=&quot;#caches&quot;&gt;캐시&lt;/a&gt; 의 &lt;code&gt;revalidated&lt;/code&gt; 필드가 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 3 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5f9b6a5f7e784940d5dd8ddeed2fe90ed396c73c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; field defines a handler that processes a directive and stores parsed values into the corresponding configuration. There's a number of functions that perform common conversions:</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 필드는 해당 구성에 값을 파싱하여 저장 지시어를 처리하는 처리기를 정의한다. 일반적인 변환을 수행하는 여러 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="283aaa5c94e1d8c5d5ac7cf00de5096681b4c722" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; handler allows setting the property referenced by the variable. For example, the set handler of the &lt;code&gt;$limit_rate&lt;/code&gt; variable modifies the request's &lt;code&gt;limit_rate&lt;/code&gt; field:</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 핸들러는 변수가 참조하는 속성을 설정 할 수 있습니다. 예를 들어, &lt;code&gt;$limit_rate&lt;/code&gt; 변수 의 set 핸들러 는 요청의 &lt;code&gt;limit_rate&lt;/code&gt; 필드를 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="d1fb6eaae765295a45bef2168810fc1d2bb319b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spdy&lt;/code&gt; parameter (1.3.15-1.9.4) allows accepting &lt;a href=&quot;ngx_http_spdy_module&quot;&gt;SPDY&lt;/a&gt; connections on this port. Normally, for this to work the &lt;code&gt;ssl&lt;/code&gt; parameter should be specified as well, but nginx can also be configured to accept SPDY connections without SSL.</source>
          <target state="translated">&lt;code&gt;spdy&lt;/code&gt; 파라미터 (1.3.15-1.9.4)은 수용성 허용 &lt;a href=&quot;ngx_http_spdy_module&quot;&gt;SPDY&lt;/a&gt; 이 포트에 연결. 일반적으로 이것이 작동하려면 &lt;code&gt;ssl&lt;/code&gt; 매개 변수도 지정해야하지만 SSL없이 SPDY 연결을 허용하도록 nginx를 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4580a0d871f49118b2049f205c14f701484a760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src/core/ngx_rbtree.h&lt;/code&gt; header file provides access to the effective implementation of red-black trees.</source>
          <target state="translated">&lt;code&gt;src/core/ngx_rbtree.h&lt;/code&gt; 헤더 파일은 레드 - 블랙 트리의 효과적인 이행에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0c66d90c78963b5007c26e368676a670d7731cbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src/core/ngx_thread_pool.h&lt;/code&gt; header file contains relevant definitions:</source>
          <target state="translated">&lt;code&gt;src/core/ngx_thread_pool.h&lt;/code&gt; 헤더 파일 관련 정의가 포함되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="c8be3c8e7081e0fd2626d3bcb79636ea792ef8c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl&lt;/code&gt; parameter (0.7.14) allows specifying that all connections accepted on this port should work in SSL mode. This allows for a more compact &lt;a href=&quot;configuring_https_servers#single_http_https_server&quot;&gt;configuration&lt;/a&gt; for the server that handles both HTTP and HTTPS requests.</source>
          <target state="translated">&lt;code&gt;ssl&lt;/code&gt; 매개 변수 (0.7.14)을하면이 포트에 모든 연결이 SSL 모드에서 작동하도록 지정 할 수 있습니다. 이를 통해 HTTP 및 HTTPS 요청을 모두 처리하는 서버에 대해 보다 컴팩트 한 &lt;a href=&quot;configuring_https_servers#single_http_https_server&quot;&gt;구성&lt;/a&gt; 이 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="1c21c4990ce3ad27f81aad14da0b36ba92298a21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl&lt;/code&gt; parameter allows specifying that all connections accepted on this port should work in SSL mode.</source>
          <target state="translated">&lt;code&gt;ssl&lt;/code&gt; 매개 변수는이 포트에서 받아 모든 연결이 SSL 모드에서 작동하도록 지정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="188576ae08e64c36c34c78a375b3b0d04003b6bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl&lt;/code&gt; parameter of the &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; directive has been supported since 0.7.14. Prior to 0.8.21 it could only be specified along with the &lt;code&gt;default&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; 지시문 의 &lt;code&gt;ssl&lt;/code&gt; 매개 변수는 0.7.14부터 지원되었습니다. 0.8.21 이전에는 &lt;code&gt;default&lt;/code&gt; 매개 변수 와 함께 만 지정할 수있었습니다 .</target>
        </trans-unit>
        <trans-unit id="ea9e8e5a006696daafce95129dcd52b7d4613b06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stream.js&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;stream.js&lt;/code&gt; 파일 :</target>
        </trans-unit>
        <trans-unit id="1d535d091715fe1044f8f09e81c5c2fad7538963" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sync&lt;/code&gt; parameter (1.13.8) enables &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;synchronization&lt;/a&gt; of the shared memory zone.</source>
          <target state="translated">&lt;code&gt;sync&lt;/code&gt; 파라미터 (1.13.8)을 가능하게 &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;동기화&lt;/a&gt; 공유 메모리 영역을.</target>
        </trans-unit>
        <trans-unit id="9d0a104c34a5c73e2a65579a899f737a9de71e2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sync&lt;/code&gt; parameter (1.15.3) enables &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;synchronization&lt;/a&gt; of the shared memory zone.</source>
          <target state="translated">&lt;code&gt;sync&lt;/code&gt; 파라미터 (1.15.3)을 가능하게 &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;동기화&lt;/a&gt; 공유 메모리 영역을.</target>
        </trans-unit>
        <trans-unit id="d00bda70c0443909b5ea78349380f065c286488e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sync&lt;/code&gt; parameter is available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;sync&lt;/code&gt; 매개 변수는 우리의 일환으로 볼 수 있습니다 &lt;a href=&quot;http://nginx.com/products/&quot;&gt;상업 가입&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a432f408c8c6f6882ad71b2a4d3e0a591869ffc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;threads&lt;/code&gt; parameter defines the number of threads in the pool.</source>
          <target state="translated">&lt;code&gt;threads&lt;/code&gt; 매개 변수는 풀의 스레드 수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="3eca7a2db5222f02e1f4599647d3b9c3588a023d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transparent&lt;/code&gt; parameter (1.11.0) allows outgoing connections to a FastCGI server originate from a non-local IP address, for example, from a real IP address of a client:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; 매개 변수 (1.11.0)는 FastCGI를 서버로 나가는 연결 클라이언트의 실제 IP 주소, 예를 들어, 로컬이 아닌 IP 주소에서 발생 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ffa947997001aba421f1ebeb1287780dd123164d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transparent&lt;/code&gt; parameter (1.11.0) allows outgoing connections to a memcached server originate from a non-local IP address, for example, from a real IP address of a client:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; 매개 변수 (1.11.0)는 memcached를 서버로 나가는 연결 클라이언트의 실제 IP 주소, 예를 들어, 로컬이 아닌 IP 주소에서 발생 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="936eae3a4b0889b75dc9b8b4984b9a818b0ac38a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transparent&lt;/code&gt; parameter (1.11.0) allows outgoing connections to a proxied server originate from a non-local IP address, for example, from a real IP address of a client:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; 매개 변수 (1.11.0)는 프록시 서버로 나가는 연결 클라이언트의 실제 IP 주소, 예를 들어, 로컬이 아닌 IP 주소에서 발생 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ec36013e89699a89ebad01a0a570f258b01726ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transparent&lt;/code&gt; parameter (1.11.0) allows outgoing connections to a uwsgi server originate from a non-local IP address, for example, from a real IP address of a client:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; 매개 변수 (1.11.0)는 uwsgi 서버로 나가는 연결 클라이언트의 실제 IP 주소, 예를 들어, 로컬이 아닌 IP 주소에서 발생 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="cdc3d0a3bc6155a5f09cd0efc27d7789d34a6685" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transparent&lt;/code&gt; parameter (1.11.0) allows outgoing connections to an SCGI server originate from a non-local IP address, for example, from a real IP address of a client:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; 매개 변수 (1.11.0)는 SCGI 서버로 나가는 연결 클라이언트의 실제 IP 주소, 예를 들어, 로컬이 아닌 IP 주소에서 발생 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="35fa3ebd6df2a0c4491d7f57655d63ad23f8fd99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transparent&lt;/code&gt; parameter allows outgoing connections to a gRPC server originate from a non-local IP address, for example, from a real IP address of a client:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; 매개 변수는 gRPC 서버로 나가는 연결 클라이언트의 실제 IP 주소, 예를 들어, 로컬이 아닌 IP 주소에서 발생 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="8881024069bab368876f9cb77d7a3a6645bc871c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;udp&lt;/code&gt; parameter configures a listening socket for working with datagrams (1.9.13). In order to handle packets from the same address and port in the same session, the &lt;a href=&quot;#reuseport&quot;&gt;&lt;code&gt;reuseport&lt;/code&gt;&lt;/a&gt; parameter should also be specified.</source>
          <target state="translated">&lt;code&gt;udp&lt;/code&gt; 매개 변수는 데이터 그램 (1.9.13) 작업을위한 청취 소켓을 구성합니다. 동일한 세션에서 동일한 주소 및 포트의 패킷을 처리하려면 &lt;a href=&quot;#reuseport&quot;&gt; &lt;code&gt;reuseport&lt;/code&gt; &lt;/a&gt; 매개 변수도 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="19d6012842bc59cc252c82afc9303cca17e02ee0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;worker_connections&lt;/code&gt; directive in the nginx configuration limits the number of connections per nginx worker. All connection structures are precreated when a worker starts and stored in the &lt;code&gt;connections&lt;/code&gt; field of the cycle object. To retrieve a connection structure, use the &lt;code&gt;ngx_get_connection(s, log)&lt;/code&gt; function. It takes as its &lt;code&gt;s&lt;/code&gt; argument a socket descriptor, which needs to be wrapped in a connection structure.</source>
          <target state="translated">nginx 구성 의 &lt;code&gt;worker_connections&lt;/code&gt; 지시문은 nginx 작업 자당 연결 수를 제한합니다. 모든 연결 구조는 작업자가 시작되어 사이클 객체 의 &lt;code&gt;connections&lt;/code&gt; 필드에 저장 될 때 미리 만들어 집니다. 연결 구조를 검색하려면 &lt;code&gt;ngx_get_connection(s, log)&lt;/code&gt; 함수를 사용하십시오. 그것은 그것으로 소요 &lt;code&gt;s&lt;/code&gt; 연결 구조에 싸여 할 필요가 인수 소켓 기술자.</target>
        </trans-unit>
        <trans-unit id="11e18a82cae226eb8b362d5f05fc157dfec6e938" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; parameter determines whether the API is read-only or read-write. By default, the API is read-only.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; 매개 변수는 API가 읽기 전용 여부를 읽기 - 쓰기를 결정합니다. 기본적으로 API는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="9957e0f0d9ba2203c76b4d361c763d398c6c9d47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;zero&lt;/code&gt; flag is useful when results are to be passed to libraries that require zero-terminated strings, and prefixes are handy when dealing with filenames.</source>
          <target state="translated">&lt;code&gt;zero&lt;/code&gt; 결과는 제로 끝나는 문자열을 필요로 도서관에 전달 될 때 플래그는 유용하고, 파일 이름을 처리 할 때 접두어가 편리합니다.</target>
        </trans-unit>
        <trans-unit id="2476d43d7a49d729711ceb382fd937cff82c9c26" translate="yes" xml:space="preserve">
          <source>The Crypto module provides cryptographic functionality support. The Crypto module object is returned by &lt;code&gt;require('crypto')&lt;/code&gt;.</source>
          <target state="translated">암호화 모듈은 암호화 기능을 지원합니다. Crypto 모듈 객체는 &lt;code&gt;require('crypto')&lt;/code&gt; 에 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a6e73988cc41681cfa6bd37bd95521335cdf014" translate="yes" xml:space="preserve">
          <source>The File System module provides operations with files. The module object is returned by &lt;code&gt;require('fs')&lt;/code&gt;.</source>
          <target state="translated">파일 시스템 모듈은 파일 작업을 제공합니다. 모듈 객체는 &lt;code&gt;require('fs')&lt;/code&gt; 에 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b0e3517e02c96dba1622f04b39f9c2c55b614cd6" translate="yes" xml:space="preserve">
          <source>The HTTP protocol is used to communicate with the authentication server. The data in the response body is ignored, the information is passed only in the headers.</source>
          <target state="translated">HTTP 프로토콜은 인증 서버와 통신하는 데 사용됩니다. 응답 본문의 데이터는 무시되고 정보는 헤더에만 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="bc2618f77454b4b3d2e907d59539a43b787ad467" translate="yes" xml:space="preserve">
          <source>The HTTP request object is available only in the &lt;a href=&quot;../http/ngx_http_js_module&quot;&gt;ngx_http_js_module&lt;/a&gt; module. All string properties of the object are &lt;a href=&quot;#string&quot;&gt;byte strings&lt;/a&gt;.</source>
          <target state="translated">HTTP 요청 객체는 &lt;a href=&quot;../http/ngx_http_js_module&quot;&gt;ngx_http_js_module&lt;/a&gt; 모듈 에서만 사용할 수 있습니다 . 객체의 모든 문자열 속성은 &lt;a href=&quot;#string&quot;&gt;바이트 문자열&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15b1c20022f992746cd79388f24fd91de603dad2" translate="yes" xml:space="preserve">
          <source>The ID of the HTTP upstream server. The ID is assigned automatically and cannot be changed.</source>
          <target state="translated">HTTP 업스트림 서버의 ID입니다. ID는 자동으로 할당되며 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3ab6fe207c970946135d083634d6d0da6ab7ded9" translate="yes" xml:space="preserve">
          <source>The ID of the master process that started the &lt;a href=&quot;#pid&quot;&gt;worker process&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pid&quot;&gt;작업자 프로세스&lt;/a&gt; 를 시작한 마스터 프로세스의 ID입니다 .</target>
        </trans-unit>
        <trans-unit id="56328553c495d80a7edfac772a81611b14224109" translate="yes" xml:space="preserve">
          <source>The ID of the master process that started the &lt;a href=&quot;ngx_http_status_module#pid&quot;&gt;worker process&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_status_module#pid&quot;&gt;작업자 프로세스&lt;/a&gt; 를 시작한 마스터 프로세스의 ID입니다 .</target>
        </trans-unit>
        <trans-unit id="4d02d42301d1dee81cb6a82dfc54aee8dc364ba1" translate="yes" xml:space="preserve">
          <source>The ID of the request, equals the value of the &lt;a href=&quot;ngx_http_core_module#var_request_id&quot;&gt;$request_id&lt;/a&gt; variable.</source>
          <target state="translated">요청의 ID는 &lt;a href=&quot;ngx_http_core_module#var_request_id&quot;&gt;$ request_id&lt;/a&gt; 변수 의 값과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2c2cb5dc70df5d7d8e49a5c1cef451be6eec921a" translate="yes" xml:space="preserve">
          <source>The ID of the server.</source>
          <target state="translated">서버의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="a5e01bde96a67da5c20d8fc5e9e36ff445ad4f48" translate="yes" xml:space="preserve">
          <source>The ID of the stream upstream server. The ID is assigned automatically and cannot be changed.</source>
          <target state="translated">스트림 업스트림 서버의 ID입니다. ID는 자동으로 할당되며 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="76843b0c50b166fea33125b46ea0692f59914eb4" translate="yes" xml:space="preserve">
          <source>The ID of the worker process that handled status request.</source>
          <target state="translated">상태 요청을 처리 한 작업자 프로세스의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="78f2f18090f68794270ba898bd4a2905ba6b084b" translate="yes" xml:space="preserve">
          <source>The JIT is available in PCRE libraries starting from version 8.20 built with the &lt;code&gt;--enable-jit&lt;/code&gt; configuration parameter. When the PCRE library is built with nginx (&lt;code&gt;--with-pcre=&lt;/code&gt;), the JIT support is enabled via the &lt;code&gt;--with-pcre-jit&lt;/code&gt; configuration parameter.</source>
          <target state="translated">JIT는 &lt;code&gt;--enable-jit&lt;/code&gt; 구성 매개 변수로 빌드 된 버전 8.20부터 PCRE 라이브러리에서 사용 가능 합니다. PCRE 라이브러리가 nginx ( &lt;code&gt;--with-pcre=&lt;/code&gt; ) 로 빌드 되면 &lt;code&gt;--with-pcre-jit&lt;/code&gt; 구성 매개 변수 를 통해 JIT 지원이 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="75d9eba0d317ce014860d380e17c2925a9e9d11d" translate="yes" xml:space="preserve">
          <source>The NGINX environment variable is used internally by nginx and should not be set directly by the user.</source>
          <target state="translated">NGINX 환경 변수는 nginx에 의해 내부적으로 사용되며 사용자가 직접 설정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="8a3d6e419a8ca9157dc513ac0c68e1ee6d600a77" translate="yes" xml:space="preserve">
          <source>The PCRE library supports named captures using the following syntax:</source>
          <target state="translated">PCRE 라이브러리는 다음 구문을 사용하여 명명 된 캡처를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9b9647a793125f2812cfd15f9411520c53c7548a" translate="yes" xml:space="preserve">
          <source>The PROXY protocol must be previously enabled by setting the &lt;code&gt;proxy_protocol&lt;/code&gt; parameter in the &lt;a href=&quot;#listen&quot;&gt;listen&lt;/a&gt; directive.</source>
          <target state="translated">&lt;a href=&quot;#listen&quot;&gt;청취&lt;/a&gt; 지시문 에서 &lt;code&gt;proxy_protocol&lt;/code&gt; 매개 변수를 설정하여 PROXY 프로토콜을 미리 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="697aaa738c1ad6de8dde55f34ce56cdaa8a2b666" translate="yes" xml:space="preserve">
          <source>The PROXY protocol version 2 is supported since version 1.13.11.</source>
          <target state="translated">PROXY 프로토콜 버전 2는 버전 1.13.11부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c1b351581140f94c31a0e9089dd413b2c2e77013" translate="yes" xml:space="preserve">
          <source>The SNI support status has been shown by the &amp;ldquo;-V&amp;rdquo; switch since 0.8.21 and 0.7.62.</source>
          <target state="translated">SNI 지원 상태는 0.8.21 및 0.7.62 이후&amp;ldquo;-V&amp;rdquo;스위치로 표시되었습니다.</target>
        </trans-unit>
        <trans-unit id="29ead884eb5d23d633c0fc40e721e1280adb2ccc" translate="yes" xml:space="preserve">
          <source>The TZ variable is always inherited and available to the &lt;a href=&quot;http/ngx_http_perl_module&quot;&gt;ngx_http_perl_module&lt;/a&gt; module, unless it is configured explicitly.</source>
          <target state="translated">TZ 변수는 명시 적으로 구성되지 않는 한 항상 &lt;a href=&quot;http/ngx_http_perl_module&quot;&gt;ngx_http_perl_module&lt;/a&gt; 모듈에서 상속되고 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="905c476b9d1d04a0bdb84325b9970ffd7357b25f" translate="yes" xml:space="preserve">
          <source>The UDP proxy functionality is not supported.</source>
          <target state="translated">UDP 프록시 기능은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c472cb1d11da9e634023a5725e3afe30a20d3112" translate="yes" xml:space="preserve">
          <source>The WebDAV specification only allows creating files in already existing directories. This directive allows creating all needed intermediate directories.</source>
          <target state="translated">WebDAV 스펙은 기존 디렉토리에 파일을 작성하는 것만 허용합니다. 이 지시문을 사용하면 필요한 모든 중간 디렉토리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="baf1d19c98374eda9f2de4d89b9d3417edb43d5c" translate="yes" xml:space="preserve">
          <source>The WebP format support appeared in version 1.11.6. To transform images in this format, the &lt;code&gt;libgd&lt;/code&gt; library must be compiled with the WebP support.</source>
          <target state="translated">WebP 형식 지원은 버전 1.11.6에 나타났습니다. 이 형식으로 이미지를 변환하려면 &lt;code&gt;libgd&lt;/code&gt; 라이브러리가 WebP 지원으로 컴파일되어야합니다.</target>
        </trans-unit>
        <trans-unit id="26e6383793fb91829a8162726f4d144f079b6b01" translate="yes" xml:space="preserve">
          <source>The XML output can be transformed using the &lt;a href=&quot;ngx_http_xslt_module&quot;&gt;ngx_http_xslt_module&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_xslt_module&quot;&gt;ngx_http_xslt_module&lt;/a&gt; 모듈을 사용하여 XML 출력을 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a2642184efef728662f0d770bd688a6546d04d2" translate="yes" xml:space="preserve">
          <source>The above examples are for an &lt;a href=&quot;ngx_http_upstream_module&quot;&gt;http&lt;/a&gt; upstream server group. Similar examples for a &lt;a href=&quot;../stream/ngx_stream_upstream_module&quot;&gt;stream&lt;/a&gt; upstream server group require the &amp;ldquo;&lt;code&gt;stream=&lt;/code&gt;&amp;rdquo; parameter.</source>
          <target state="translated">위의 예는 &lt;a href=&quot;ngx_http_upstream_module&quot;&gt;http&lt;/a&gt; 업스트림 서버 그룹에 대한 것입니다. &lt;a href=&quot;../stream/ngx_stream_upstream_module&quot;&gt;스트림&lt;/a&gt; 업스트림 서버 그룹의 유사한 예 에는 &quot; &lt;code&gt;stream=&lt;/code&gt; &quot;매개 변수가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="91565673c6ce8513fef758a621bfe92963c3f6ea" translate="yes" xml:space="preserve">
          <source>The above rules also apply to sub-expressions, where each sub-expression has its own indentation level:</source>
          <target state="translated">위의 규칙은 하위 표현식에도 적용되며, 각 하위 표현식에는 고유 한 들여 쓰기 수준이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cec6d841a9287ae6ce0ab5871659de74aa853ac" translate="yes" xml:space="preserve">
          <source>The actual items are stored in list parts, which are defined as follows:</source>
          <target state="translated">실제 항목은 목록 파트에 저장되며 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="fdbf4b4a327ed63b941d243a0b255f5027c11e72" translate="yes" xml:space="preserve">
          <source>The address can also be specified using variables (1.11.3):</source>
          <target state="translated">주소는 변수 (1.11.3)를 사용하여 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a41d2cc0ac219bb0287356b7fbc2061a1ecdfd4" translate="yes" xml:space="preserve">
          <source>The address of the server that accepted status request.</source>
          <target state="translated">상태 요청을 수락 한 서버의 주소입니다.</target>
        </trans-unit>
        <trans-unit id="c9df25523bbc8c1f02238b78234c938d18521b7f" translate="yes" xml:space="preserve">
          <source>The arguments to &lt;code&gt;ngx_regex_exec()&lt;/code&gt; are the compiled regular expression &lt;code&gt;re&lt;/code&gt;, the string to match &lt;code&gt;s&lt;/code&gt;, an optional array of integers to hold any &lt;code&gt;captures&lt;/code&gt; that are found, and the array's &lt;code&gt;size&lt;/code&gt;. The size of the &lt;code&gt;captures&lt;/code&gt; array must be a multiple of three, as required by the &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcreapi.html&quot;&gt;PCRE API&lt;/a&gt;. In the example, the size is calculated from the total number of captures plus &lt;code&gt;1&lt;/code&gt;one for the matched string itself.</source>
          <target state="translated">&lt;code&gt;ngx_regex_exec()&lt;/code&gt; 에 대한 인수 는 컴파일 된 정규 표현식 &lt;code&gt;re&lt;/code&gt; , &lt;code&gt;s&lt;/code&gt; 와 일치하는 문자열 , 발견 된 &lt;code&gt;captures&lt;/code&gt; 를 보유 할 선택적 정수 배열 및 배열의 &lt;code&gt;size&lt;/code&gt; 입니다. &lt;code&gt;captures&lt;/code&gt; 배열 의 크기 는 &lt;a href=&quot;http://www.pcre.org/original/doc/html/pcreapi.html&quot;&gt;PCRE API에&lt;/a&gt; 필요한대로 3의 배수 여야합니다 . 이 예에서 크기는 총 캡처 수에 일치하는 문자열 자체에 대해 &lt;code&gt;1&lt;/code&gt; 을 더한 값에서 계산 됩니다.</target>
        </trans-unit>
        <trans-unit id="50931219ecf2cbb5ff234f69728ef8a2c4d67814" translate="yes" xml:space="preserve">
          <source>The authenticity of a requested link is verified by comparing the checksum value passed in a request with the value computed for the request. If a link has a limited lifetime and the time has expired, the link is considered outdated. The status of these checks is made available in the &lt;code&gt;$secure_link&lt;/code&gt; variable.</source>
          <target state="translated">요청 된 링크의 신뢰성은 요청에 전달 된 체크섬 값과 요청에 대해 계산 된 값을 비교하여 확인됩니다. 링크 수명이 제한되어 있고 시간이 만료 된 경우 링크가 오래된 것으로 간주됩니다. 이러한 점검의 상태는 &lt;code&gt;$secure_link&lt;/code&gt; 변수 에서 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="2adf8a2df6662625d5d291efbabd2a72ee6da54e" translate="yes" xml:space="preserve">
          <source>The available string representations are:</source>
          <target state="translated">사용 가능한 문자열 표현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="771c584c6844640269efa91e6cef34cede23df5b" translate="yes" xml:space="preserve">
          <source>The average time to connect to the upstream server.</source>
          <target state="translated">업스트림 서버에 연결하는 평균 시간입니다.</target>
        </trans-unit>
        <trans-unit id="62359a5f4e9327a82241b95d9b9fd9b0adac905d" translate="yes" xml:space="preserve">
          <source>The average time to connect to the upstream server. Prior to version 1.11.6, the field was available only when using the &lt;a href=&quot;../stream/ngx_stream_upstream_module#least_time&quot;&gt;least_time&lt;/a&gt; load balancing method.</source>
          <target state="translated">업스트림 서버에 연결하는 평균 시간입니다. 버전 1.11.6 이전에는이 ​​필드는 &lt;a href=&quot;../stream/ngx_stream_upstream_module#least_time&quot;&gt;최소 시간&lt;/a&gt; 로드 밸런싱 방법을 사용하는 경우에만 사용 가능했습니다 .</target>
        </trans-unit>
        <trans-unit id="c7d5867ecc90c9bdf48ad316e0e314ebb617a8bf" translate="yes" xml:space="preserve">
          <source>The average time to get the &lt;a href=&quot;ngx_http_upstream_module#var_upstream_header_time&quot;&gt;response header&lt;/a&gt; from the server (1.7.10). Prior to version 1.11.6, the field was available only when using the &lt;a href=&quot;ngx_http_upstream_module#least_time&quot;&gt;least_time&lt;/a&gt; load balancing method.</source>
          <target state="translated">서버에서 &lt;a href=&quot;ngx_http_upstream_module#var_upstream_header_time&quot;&gt;응답 헤더&lt;/a&gt; 를 가져 오는 데 걸리는 평균 시간 (1.7.10) 버전 1.11.6 이전에는이 ​​필드는 &lt;a href=&quot;ngx_http_upstream_module#least_time&quot;&gt;최소 시간&lt;/a&gt; 로드 밸런싱 방법을 사용하는 경우에만 사용 가능했습니다 .</target>
        </trans-unit>
        <trans-unit id="8434fb945f0501edbb41c847362f65fb0ab520f3" translate="yes" xml:space="preserve">
          <source>The average time to get the &lt;a href=&quot;ngx_http_upstream_module#var_upstream_header_time&quot;&gt;response header&lt;/a&gt; from the server.</source>
          <target state="translated">서버에서 &lt;a href=&quot;ngx_http_upstream_module#var_upstream_header_time&quot;&gt;응답 헤더&lt;/a&gt; 를 가져 오는 데 걸리는 평균 시간 입니다.</target>
        </trans-unit>
        <trans-unit id="014b6084f266928b97e93bf01ee7fed4d4ce000f" translate="yes" xml:space="preserve">
          <source>The average time to get the &lt;a href=&quot;ngx_http_upstream_module#var_upstream_response_time&quot;&gt;full response&lt;/a&gt; from the server (1.7.10). Prior to version 1.11.6, the field was available only when using the &lt;a href=&quot;ngx_http_upstream_module#least_time&quot;&gt;least_time&lt;/a&gt; load balancing method.</source>
          <target state="translated">서버에서 &lt;a href=&quot;ngx_http_upstream_module#var_upstream_response_time&quot;&gt;전체 응답&lt;/a&gt; 을 얻는 데 걸린 평균 시간 (1.7.10). 버전 1.11.6 이전에는이 ​​필드는 &lt;a href=&quot;ngx_http_upstream_module#least_time&quot;&gt;최소 시간&lt;/a&gt; 로드 밸런싱 방법을 사용하는 경우에만 사용 가능했습니다 .</target>
        </trans-unit>
        <trans-unit id="96cb021f9c22bc23ad326a375796d845924a039d" translate="yes" xml:space="preserve">
          <source>The average time to get the &lt;a href=&quot;ngx_http_upstream_module#var_upstream_response_time&quot;&gt;full response&lt;/a&gt; from the server.</source>
          <target state="translated">서버에서 &lt;a href=&quot;ngx_http_upstream_module#var_upstream_response_time&quot;&gt;전체 응답&lt;/a&gt; 을 얻는 데 걸리는 평균 시간 입니다.</target>
        </trans-unit>
        <trans-unit id="2d1f0d98403b67fa2f78d2379fe1072d6a06902f" translate="yes" xml:space="preserve">
          <source>The average time to receive the first byte of data.</source>
          <target state="translated">데이터의 첫 바이트를받는 평균 시간입니다.</target>
        </trans-unit>
        <trans-unit id="339fe5590d32d9f09d7e5859d2be158ce66ec761" translate="yes" xml:space="preserve">
          <source>The average time to receive the first byte of data. Prior to version 1.11.6, the field was available only when using the &lt;a href=&quot;../stream/ngx_stream_upstream_module#least_time&quot;&gt;least_time&lt;/a&gt; load balancing method.</source>
          <target state="translated">데이터의 첫 바이트를받는 평균 시간입니다. 버전 1.11.6 이전에는이 ​​필드는 &lt;a href=&quot;../stream/ngx_stream_upstream_module#least_time&quot;&gt;최소 시간&lt;/a&gt; 로드 밸런싱 방법을 사용하는 경우에만 사용 가능했습니다 .</target>
        </trans-unit>
        <trans-unit id="0fbd276c5e24d2e9a395bf67256e6117015e0cf7" translate="yes" xml:space="preserve">
          <source>The average time to receive the last byte of data.</source>
          <target state="translated">데이터의 마지막 바이트를받는 평균 시간입니다.</target>
        </trans-unit>
        <trans-unit id="642139322a3be262887d44b0c329f354b750d022" translate="yes" xml:space="preserve">
          <source>The average time to receive the last byte of data. Prior to version 1.11.6, the field was available only when using the &lt;a href=&quot;../stream/ngx_stream_upstream_module#least_time&quot;&gt;least_time&lt;/a&gt; load balancing method.</source>
          <target state="translated">데이터의 마지막 바이트를받는 평균 시간입니다. 버전 1.11.6 이전에는이 ​​필드는 &lt;a href=&quot;../stream/ngx_stream_upstream_module#least_time&quot;&gt;최소 시간&lt;/a&gt; 로드 밸런싱 방법을 사용하는 경우에만 사용 가능했습니다 .</target>
        </trans-unit>
        <trans-unit id="2f716af6d715b52b24d38bb1a1e602c4d12a479d" translate="yes" xml:space="preserve">
          <source>The basic status information will be accessible from the surrounding location.</source>
          <target state="translated">기본 상태 정보는 주변 위치에서 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d62df8a2a5171105e54bc40e71fd1aeb86ae7473" translate="yes" xml:space="preserve">
          <source>The buffer size must not exceed the size of an atomic write to a disk file. For FreeBSD this size is unlimited.</source>
          <target state="translated">버퍼 크기는 디스크 파일에 대한 원자 쓰기 크기를 초과해서는 안됩니다. FreeBSD의 경우이 크기는 무제한입니다.</target>
        </trans-unit>
        <trans-unit id="046257933dd28faf8fde125c2eb77b64590140dd" translate="yes" xml:space="preserve">
          <source>The build is configured using the &lt;code&gt;configure&lt;/code&gt; command. It defines various aspects of the system, including the methods nginx is allowed to use for connection processing. At the end it creates a &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">빌드는 &lt;code&gt;configure&lt;/code&gt; 명령을 사용하여 구성 됩니다. nginx가 연결 처리에 사용할 수있는 방법을 포함하여 시스템의 다양한 측면을 정의합니다. 마지막에 &lt;code&gt;Makefile&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f1accd1f628d17ff89920fc1fa20efd89ad735fb" translate="yes" xml:space="preserve">
          <source>The checksum value extracted from the string is compared with the MD5 hash value of the expression defined by the &lt;a href=&quot;#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; directive. If the checksums are different, the &lt;code&gt;$secure_link&lt;/code&gt; variable is set to an empty string. If the checksums are the same, the link lifetime is checked. If the link has a limited lifetime and the time has expired, the &lt;code&gt;$secure_link&lt;/code&gt; variable is set to &amp;ldquo;&lt;code&gt;0&lt;/code&gt;&amp;rdquo;. Otherwise, it is set to &amp;ldquo;&lt;code&gt;1&lt;/code&gt;&amp;rdquo;. The MD5 hash value passed in a request is encoded in &lt;a href=&quot;https://tools.ietf.org/html/rfc4648#section-5&quot;&gt;base64url&lt;/a&gt;.</source>
          <target state="translated">문자열에서 추출 된 체크섬 값은 &lt;a href=&quot;#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; 지시문에 의해 정의 된 표현식의 MD5 해시 값과 비교됩니다 . 체크섬이 다른 경우 &lt;code&gt;$secure_link&lt;/code&gt; 변수는 빈 문자열로 설정됩니다. 체크섬이 동일하면 링크 수명이 확인됩니다. 링크 수명이 제한되어 있고 시간이 만료 된 경우 &lt;code&gt;$secure_link&lt;/code&gt; 변수는 &quot; &lt;code&gt;0&lt;/code&gt; &quot;으로 설정됩니다 . 그렇지 않으면 &quot; &lt;code&gt;1&lt;/code&gt; &quot;로 설정됩니다 . 요청에 전달 된 MD5 해시 값은 &lt;a href=&quot;https://tools.ietf.org/html/rfc4648#section-5&quot;&gt;base64url&lt;/a&gt; 로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="92edd689a711e04347e49ebab602a04bfe45a6dd" translate="yes" xml:space="preserve">
          <source>The code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.</source>
          <target state="translated">코드 307은 버전 1.1.16 및 1.0.13까지 리디렉션으로 처리되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="8a400ef46e87d727b1a79defd27b0cc1645d3131" translate="yes" xml:space="preserve">
          <source>The code 308 was not treated as a redirect until version 1.13.0.</source>
          <target state="translated">코드 308은 버전 1.13.0까지 리디렉션으로 처리되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="f21250feadc13e76166d7b61da71916f742b616e" translate="yes" xml:space="preserve">
          <source>The compiled regular expression can then be used for matching against strings:</source>
          <target state="translated">그런 다음 컴파일 된 정규식을 사용하여 문자열과 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="101a147ebeb9610592fc6bb2f367a759fd16e43c" translate="yes" xml:space="preserve">
          <source>The completion &lt;code&gt;callback&lt;/code&gt; receives a subrequest response object with methods and properties identical to the parent request object.</source>
          <target state="translated">완료 &lt;code&gt;callback&lt;/code&gt; 은 상위 요청 오브젝트와 동일한 메소드 및 특성을 가진 서브 요청 응답 오브젝트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="f46a98b4f354885646264fc23c30320ac3612dbc" translate="yes" xml:space="preserve">
          <source>The completion callback has the following prototype: &lt;code&gt;callback(data, flags)&lt;/code&gt;, where &lt;code&gt;data&lt;/code&gt; is string, &lt;code&gt;flags&lt;/code&gt; is an object with the following properties:</source>
          <target state="translated">완료 콜백에는 다음 프로토 타입이 있습니다. &lt;code&gt;callback(data, flags)&lt;/code&gt; , 여기서 &lt;code&gt;data&lt;/code&gt; 는 string이고 &lt;code&gt;flags&lt;/code&gt; 는 다음 속성을 가진 객체입니다.</target>
        </trans-unit>
        <trans-unit id="9df6c007e63634d32fdcc60409b683f923711846" translate="yes" xml:space="preserve">
          <source>The complex value description in &lt;code&gt;ngx_http_compile_complex_value&lt;/code&gt; is compiled at the configuration stage into &lt;code&gt;ngx_http_complex_value_t&lt;/code&gt; which is used at runtime to obtain results of expression evaluation.</source>
          <target state="translated">복소 값의 설명 &lt;code&gt;ngx_http_compile_complex_value&lt;/code&gt; 은 으로 구성 단계에서 컴파일 &lt;code&gt;ngx_http_complex_value_t&lt;/code&gt; 식 평가의 결과를 얻기 위하여 실행시 사용된다.</target>
        </trans-unit>
        <trans-unit id="cd614eab7cfee53daaa327ff6e9656063ec16eef" translate="yes" xml:space="preserve">
          <source>The configuration always includes the predefined &amp;ldquo;&lt;code&gt;combined&lt;/code&gt;&amp;rdquo; format:</source>
          <target state="translated">구성에는 항상 사전 정의 된 &quot; &lt;code&gt;combined&lt;/code&gt; &quot;형식이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="978fb29aa14dd01c994eec18fa47547e325c203f" translate="yes" xml:space="preserve">
          <source>The configuration parser uses these flags to throw an error in case of a misplaced directive and calls directive handlers supplied with a proper configuration pointer, so that the same directives in different locations can store their values in distinct places.</source>
          <target state="translated">구성 구문 분석기는이 플래그를 사용하여 잘못 배치 된 지시문의 경우 오류를 발생시키고 적절한 구성 포인터와 함께 제공된 지시문 핸들러를 호출하여 다른 위치의 동일한 지시문이 값을 개별 위치에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12ae797a13d5b718050a37a9781bcf548a003e34" translate="yes" xml:space="preserve">
          <source>The connection type &lt;code&gt;ngx_connection_t&lt;/code&gt; is a wrapper around a socket descriptor. It includes the following fields:</source>
          <target state="translated">연결 유형 &lt;code&gt;ngx_connection_t&lt;/code&gt; 는 소켓 설명자에 대한 랩퍼입니다. 다음과 같은 필드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6127122979fa6aebecb0d0014dff21653dd85a2e" translate="yes" xml:space="preserve">
          <source>The contents of the &amp;ldquo;Cache-Control&amp;rdquo; field depends on the sign of the specified time:</source>
          <target state="translated">&quot;Cache-Control&quot;필드의 내용은 지정된 시간의 부호에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="47576340b8b57696251da6c331df3b5bbf2f6eba" translate="yes" xml:space="preserve">
          <source>The cookie name and received client identifier.</source>
          <target state="translated">쿠키 이름 및 수신 된 클라이언트 식별자</target>
        </trans-unit>
        <trans-unit id="e07f21e09fed4044e4b05fd776e5e72f45cc80b6" translate="yes" xml:space="preserve">
          <source>The cookie name and sent client identifier.</source>
          <target state="translated">쿠키 이름 및 전송 된 클라이언트 식별자</target>
        </trans-unit>
        <trans-unit id="7feef2f64493f7bb09b412b936b4d9201da2667c" translate="yes" xml:space="preserve">
          <source>The corresponding instructions will then look like this:</source>
          <target state="translated">해당 지침은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="70fc145d87190cac577244a4e382ce1678354f1c" translate="yes" xml:space="preserve">
          <source>The current list of standardized extensions is published at &lt;a href=&quot;http://www.iana.org/assignments/imap4-capabilities&quot;&gt;www.iana.org&lt;/a&gt;.</source>
          <target state="translated">현재 표준화 된 확장 목록은 &lt;a href=&quot;http://www.iana.org/assignments/imap4-capabilities&quot;&gt;www.iana.org에&lt;/a&gt; 게시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e539c2b9b546d6492205a878897738983fb39087" translate="yes" xml:space="preserve">
          <source>The current list of standardized extensions is published at &lt;a href=&quot;http://www.iana.org/assignments/mail-parameters&quot;&gt;www.iana.org&lt;/a&gt;.</source>
          <target state="translated">현재 표준화 된 확장 목록은 &lt;a href=&quot;http://www.iana.org/assignments/mail-parameters&quot;&gt;www.iana.org에&lt;/a&gt; 게시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c0cf92590afd39e7489e91374343f026a24e0d6" translate="yes" xml:space="preserve">
          <source>The current list of standardized extensions is published at &lt;a href=&quot;http://www.iana.org/assignments/pop3-extension-mechanism&quot;&gt;www.iana.org&lt;/a&gt;.</source>
          <target state="translated">현재 표준화 된 확장 목록은 &lt;a href=&quot;http://www.iana.org/assignments/pop3-extension-mechanism&quot;&gt;www.iana.org에&lt;/a&gt; 게시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fecf3c758b87c8e2b22efe037d6409d599dde51a" translate="yes" xml:space="preserve">
          <source>The current number of active client connections including &lt;code&gt;Waiting&lt;/code&gt; connections.</source>
          <target state="translated">&lt;code&gt;Waiting&lt;/code&gt; 연결을 포함한 현재 활성 클라이언트 연결 수입니다 .</target>
        </trans-unit>
        <trans-unit id="60530e0c83d4fe3c7f2797bbed1fa5da5f1ec24d" translate="yes" xml:space="preserve">
          <source>The current number of active client connections.</source>
          <target state="translated">현재 활성 클라이언트 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="9f4612f3f1dfbd8ad107b542289af74eea1988fe" translate="yes" xml:space="preserve">
          <source>The current number of active connections.</source>
          <target state="translated">현재 활성 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="da574e08bdf1498766db9884b97bc2b807719f8f" translate="yes" xml:space="preserve">
          <source>The current number of client requests.</source>
          <target state="translated">현재 클라이언트 요청 수</target>
        </trans-unit>
        <trans-unit id="15d62f06aac73681415ebeef4b839a3a35598858" translate="yes" xml:space="preserve">
          <source>The current number of connections where nginx is reading the request header.</source>
          <target state="translated">nginx가 요청 헤더를 읽는 현재 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="ef012bcf8ae360e6b8611cf58f60e9640e81eb09" translate="yes" xml:space="preserve">
          <source>The current number of connections where nginx is writing the response back to the client.</source>
          <target state="translated">nginx가 응답을 클라이언트에 다시 쓰는 현재 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="c29344c03d740f28dce2e97c6430ec5a7d0f8bb2" translate="yes" xml:space="preserve">
          <source>The current number of connections.</source>
          <target state="translated">현재 연결 수</target>
        </trans-unit>
        <trans-unit id="b7d11418f1cf47272ae082cc871282a89bc84bd4" translate="yes" xml:space="preserve">
          <source>The current number of free memory pages.</source>
          <target state="translated">사용 가능한 메모리 페이지의 현재 수</target>
        </trans-unit>
        <trans-unit id="6cfce59deb9a6a1f8b482aa612380333aedf2729" translate="yes" xml:space="preserve">
          <source>The current number of free memory slots.</source>
          <target state="translated">사용 가능한 메모리 슬롯의 현재 수</target>
        </trans-unit>
        <trans-unit id="b3f27ff638de15e49e1cdedc7389fa8a3eaa0a48" translate="yes" xml:space="preserve">
          <source>The current number of idle &lt;a href=&quot;ngx_http_upstream_module#keepalive&quot;&gt;keepalive&lt;/a&gt; connections.</source>
          <target state="translated">아이들의 현재 수 &lt;a href=&quot;ngx_http_upstream_module#keepalive&quot;&gt;킵 얼라이브&lt;/a&gt; 연결.</target>
        </trans-unit>
        <trans-unit id="3eabc664e685bc89270b0a10a96656917d3d55bb" translate="yes" xml:space="preserve">
          <source>The current number of idle client connections waiting for a request.</source>
          <target state="translated">요청을 기다리는 현재 유휴 클라이언트 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="7006f9e2c91cabdf750641cea6bc800be02f2435" translate="yes" xml:space="preserve">
          <source>The current number of idle client connections.</source>
          <target state="translated">유휴 클라이언트 연결의 현재 수</target>
        </trans-unit>
        <trans-unit id="3a3f354a1a32dfe1763877cd6c48d0e2132353cf" translate="yes" xml:space="preserve">
          <source>The current number of requests in the queue.</source>
          <target state="translated">큐의 현재 요청 수</target>
        </trans-unit>
        <trans-unit id="55b973f571d5f2da675a25d4702b38ebe72a62e8" translate="yes" xml:space="preserve">
          <source>The current number of servers removed from the group but still processing active client connections.</source>
          <target state="translated">그룹에서 제거되었지만 활성 클라이언트 연결을 처리하는 현재 서버 수</target>
        </trans-unit>
        <trans-unit id="8a8019b4038895beb964fa88263c7e82887f1051" translate="yes" xml:space="preserve">
          <source>The current number of servers removed from the group but still processing active client requests.</source>
          <target state="translated">그룹에서 제거되었지만 활성 클라이언트 요청을 계속 처리하는 현재 서버 수입니다.</target>
        </trans-unit>
        <trans-unit id="45579798f4ce6d375b940e053fc654453cfcf36a" translate="yes" xml:space="preserve">
          <source>The current number of used memory pages.</source>
          <target state="translated">사용 된 메모리 페이지의 현재 수</target>
        </trans-unit>
        <trans-unit id="889d8b70f8673abf03a53f6462de262ed495a3c0" translate="yes" xml:space="preserve">
          <source>The current number of used memory slots.</source>
          <target state="translated">사용 된 메모리 슬롯의 현재 수</target>
        </trans-unit>
        <trans-unit id="ebe21833c793d4d92977ff13b55c55a3de250d16" translate="yes" xml:space="preserve">
          <source>The current size of the cache.</source>
          <target state="translated">캐시의 현재 크기</target>
        </trans-unit>
        <trans-unit id="db59d1e4aae01f232a9b418d5ce8f9ea43bac585" translate="yes" xml:space="preserve">
          <source>The debugging log can be written to a cyclic memory buffer:</source>
          <target state="translated">디버깅 로그는 순환 메모리 버퍼에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71833ad04cc55cfb6da1cef31866ff287ccd4264" translate="yes" xml:space="preserve">
          <source>The default replacement specified by the &lt;code&gt;default&lt;/code&gt; parameter uses the parameters of the &lt;a href=&quot;ngx_http_core_module#location&quot;&gt;location&lt;/a&gt; and &lt;a href=&quot;#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; directives. Hence, the two configurations below are equivalent:</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 매개 변수로 지정된 기본 대체 는 &lt;a href=&quot;ngx_http_core_module#location&quot;&gt;location&lt;/a&gt; 및 &lt;a href=&quot;#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; 지시문 의 매개 변수를 사용합니다 . 따라서 아래 두 구성은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="2eda1ca6938f71c26b65de4ce2de453728c95c52" translate="yes" xml:space="preserve">
          <source>The default value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo; instructs nginx to &lt;a href=&quot;#lingering_timeout&quot;&gt;wait for&lt;/a&gt; and &lt;a href=&quot;#lingering_time&quot;&gt;process&lt;/a&gt; additional data from a client before fully closing a connection, but only if heuristics suggests that a client may be sending more data.</source>
          <target state="translated">&quot;기본값 &lt;code&gt;on&lt;/code&gt; 지시합니다&quot;는하기 nginx에 &lt;a href=&quot;#lingering_timeout&quot;&gt;대기&lt;/a&gt; 하고 &lt;a href=&quot;#lingering_time&quot;&gt;처리&lt;/a&gt; 하지만 휴리스틱은 클라이언트가 더 많은 데이터를 전송 할 수 있음을 시사하는 경우에만 완전히 연결을 닫기 전에 클라이언트에서 추가 데이터를.</target>
        </trans-unit>
        <trans-unit id="a8812f1fb52c2d82218963780a4f4a808b354f22" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;code&gt;timeout&lt;/code&gt; parameter is 60 seconds.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 매개 변수 의 기본값 은 60 초입니다.</target>
        </trans-unit>
        <trans-unit id="503905598384c242648087fe9d79cd3978d0d171" translate="yes" xml:space="preserve">
          <source>The deprecated properties will be removed in &lt;a href=&quot;#njs0.2.8&quot;&gt;next&lt;/a&gt; releases.</source>
          <target state="translated">더 이상 사용되지 않는 속성은 &lt;a href=&quot;#njs0.2.8&quot;&gt;다음&lt;/a&gt; 릴리스 에서 제거 됩니다.</target>
        </trans-unit>
        <trans-unit id="5860c92d8eb636d620cf039551b9dad2a256cb36" translate="yes" xml:space="preserve">
          <source>The difference between functions is that the &lt;code&gt;ngx_http_get_indexed_variable()&lt;/code&gt; returns a cached value and &lt;code&gt;ngx_http_get_flushed_variable()&lt;/code&gt; flushes the cache for non-cacheable variables.</source>
          <target state="translated">함수의 차이점은 &lt;code&gt;ngx_http_get_indexed_variable()&lt;/code&gt; 은 캐시 된 값을 반환하고 &lt;code&gt;ngx_http_get_flushed_variable()&lt;/code&gt; 은 캐시 할 수없는 변수에 대한 캐시를 플러시한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e28d29d0fd9f810b415000894bd2f3cb01c52cff" translate="yes" xml:space="preserve">
          <source>The directive</source>
          <target state="translated">지시어</target>
        </trans-unit>
        <trans-unit id="c012d1f0055469557e0fe560f6af32cfb92bb5b1" translate="yes" xml:space="preserve">
          <source>The directive also defines what is considered an &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;unsuccessful attempt&lt;/a&gt; of communication with a server. The cases of &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;invalid_header&lt;/code&gt; are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of &lt;code&gt;http_500&lt;/code&gt;, &lt;code&gt;http_502&lt;/code&gt;, &lt;code&gt;http_503&lt;/code&gt;, &lt;code&gt;http_504&lt;/code&gt;, and &lt;code&gt;http_429&lt;/code&gt; are considered unsuccessful attempts only if they are specified in the directive. The cases of &lt;code&gt;http_403&lt;/code&gt; and &lt;code&gt;http_404&lt;/code&gt; are never considered unsuccessful attempts.</source>
          <target state="translated">이 지시문은 또한 서버와의 통신에 &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;실패한&lt;/a&gt; 것으로 간주되는 사항을 정의 합니다. 의 경우 &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; 및 &lt;code&gt;invalid_header&lt;/code&gt; 는 항상이 지침에 규정되지 않은 경우에도 실패한 시도로 간주됩니다. 의 경우 &lt;code&gt;http_500&lt;/code&gt; , &lt;code&gt;http_502&lt;/code&gt; , &lt;code&gt;http_503&lt;/code&gt; , &lt;code&gt;http_504&lt;/code&gt; 및 &lt;code&gt;http_429&lt;/code&gt; 는 그들이 지시에 지정된 경우에만 성공하지 못한 시도로 간주됩니다. &lt;code&gt;http_403&lt;/code&gt; 및 &lt;code&gt;http_404&lt;/code&gt; 의 경우는 실패한 시도로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="999c4e798a04b0b1e9da610353c3949993153368" translate="yes" xml:space="preserve">
          <source>The directive also defines what is considered an &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;unsuccessful attempt&lt;/a&gt; of communication with a server. The cases of &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;invalid_header&lt;/code&gt; are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of &lt;code&gt;http_500&lt;/code&gt;, &lt;code&gt;http_503&lt;/code&gt;, and &lt;code&gt;http_429&lt;/code&gt; are considered unsuccessful attempts only if they are specified in the directive. The cases of &lt;code&gt;http_403&lt;/code&gt; and &lt;code&gt;http_404&lt;/code&gt; are never considered unsuccessful attempts.</source>
          <target state="translated">이 지시문은 또한 서버와의 통신에 &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;실패한&lt;/a&gt; 것으로 간주되는 사항을 정의 합니다. 의 경우 &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; 및 &lt;code&gt;invalid_header&lt;/code&gt; 는 항상이 지침에 규정되지 않은 경우에도 실패한 시도로 간주됩니다. 의 경우 &lt;code&gt;http_500&lt;/code&gt; , &lt;code&gt;http_503&lt;/code&gt; 및 &lt;code&gt;http_429&lt;/code&gt; 는 그들이 지시에 지정된 경우에만 성공하지 못한 시도로 간주됩니다. &lt;code&gt;http_403&lt;/code&gt; 및 &lt;code&gt;http_404&lt;/code&gt; 의 경우는 실패한 시도로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="126a4f2ab7cbc845d26f4c6d5d1996e7219a7a3a" translate="yes" xml:space="preserve">
          <source>The directive also defines what is considered an &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;unsuccessful attempt&lt;/a&gt; of communication with a server. The cases of &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;invalid_response&lt;/code&gt; are always considered unsuccessful attempts, even if they are not specified in the directive. The case of &lt;code&gt;not_found&lt;/code&gt; is never considered an unsuccessful attempt.</source>
          <target state="translated">이 지시문은 또한 서버와의 통신에 &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;실패한&lt;/a&gt; 것으로 간주되는 사항을 정의 합니다. 의 경우 &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; 및 &lt;code&gt;invalid_response&lt;/code&gt; 는 항상이 지침에 규정되지 않은 경우에도 실패한 시도로 간주됩니다. &lt;code&gt;not_found&lt;/code&gt; 의 경우 는 실패한 시도로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65d8160d576454e30374a73f2ae416a45b7ffd14" translate="yes" xml:space="preserve">
          <source>The directive can also be specified using regular expressions. In this case, &lt;code&gt;&lt;i&gt;domain&lt;/i&gt;&lt;/code&gt; should start from the &amp;ldquo;&lt;code&gt;~&lt;/code&gt;&amp;rdquo; symbol. A regular expression can contain named and positional captures, and &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; can reference them:</source>
          <target state="translated">지시문은 정규식을 사용하여 지정할 수도 있습니다. 이 경우 &lt;code&gt;&lt;i&gt;domain&lt;/i&gt;&lt;/code&gt; 은 &quot; &lt;code&gt;~&lt;/code&gt; &quot;기호로 시작해야합니다 . 정규식에는 명명 된 위치 캡처와 위치 캡처가 포함될 수 있으며 &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; 는이를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbb98814d50bcdf229bc41dfcab9050ea8e36613" translate="yes" xml:space="preserve">
          <source>The directive can also be specified using regular expressions. In this case, &lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; should either start from the &amp;ldquo;&lt;code&gt;~&lt;/code&gt;&amp;rdquo; symbol for a case-sensitive matching, or from the &amp;ldquo;&lt;code&gt;~*&lt;/code&gt;&amp;rdquo; symbols for case-insensitive matching. The regular expression can contain named and positional captures, and &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; can reference them:</source>
          <target state="translated">지시문은 정규식을 사용하여 지정할 수도 있습니다. 이 경우 &lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; 는 대소 문자를 구분하는 &amp;ldquo; &lt;code&gt;~&lt;/code&gt; &amp;rdquo;기호 또는 대소 문자를 구분하지 않는 &amp;ldquo; &lt;code&gt;~*&lt;/code&gt; &amp;rdquo;기호로 시작해야합니다 . 정규식에는 명명 된 위치 캡처와 위치 캡처가 포함될 수 있으며 &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; 는이를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41c0995fabb9e569a8182b65aec358b526753acb" translate="yes" xml:space="preserve">
          <source>The directive can be specified (1.1.11) using regular expressions. In this case, &lt;code&gt;&lt;i&gt;redirect&lt;/i&gt;&lt;/code&gt; should either start with the &amp;ldquo;&lt;code&gt;~&lt;/code&gt;&amp;rdquo; symbol for a case-sensitive matching, or with the &amp;ldquo;&lt;code&gt;~*&lt;/code&gt;&amp;rdquo; symbols for case-insensitive matching. The regular expression can contain named and positional captures, and &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; can reference them:</source>
          <target state="translated">지시문은 정규식을 사용하여 지정할 수 있습니다 (1.1.11). 이 경우 &lt;code&gt;&lt;i&gt;redirect&lt;/i&gt;&lt;/code&gt; 은 대 / 소문자를 구분하는 &quot; &lt;code&gt;~&lt;/code&gt; &quot;기호로 시작 하거나 대 / 소문자를 구분하지 않는 &quot; &lt;code&gt;~*&lt;/code&gt; &quot;기호로 시작해야합니다 . 정규식에는 명명 된 위치 캡처와 위치 캡처가 포함될 수 있으며 &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; 는이를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba2083ac22ce7718de83f9bf08c9a3c04539c68c" translate="yes" xml:space="preserve">
          <source>The directive can be specified on the &lt;code&gt;stream&lt;/code&gt; level starting from version 1.7.11, and on the &lt;code&gt;mail&lt;/code&gt; level starting from version 1.9.0.</source>
          <target state="translated">지정 문은 버전 1.7.11부터 &lt;code&gt;stream&lt;/code&gt; 레벨 및 버전 1.9.0부터 &lt;code&gt;mail&lt;/code&gt; 레벨 에서 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="620faf88c6fa95c1fedf3a87171102c9475a09b2" translate="yes" xml:space="preserve">
          <source>The directive has the following parameters:</source>
          <target state="translated">지시문에는 다음과 같은 매개 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae498559619639919adc7cf14a64fb1681a888f0" translate="yes" xml:space="preserve">
          <source>The directive is applicable only for subrequests with response bodies saved into memory. For example, such subrequests are created by &lt;a href=&quot;ngx_http_ssi_module#ssi_include_set&quot;&gt;SSI&lt;/a&gt;.</source>
          <target state="translated">지시문은 응답 본문이 메모리에 저장된 하위 요청에만 적용됩니다. 예를 들어, 이러한 하위 요청은 &lt;a href=&quot;ngx_http_ssi_module#ssi_include_set&quot;&gt;SSI에&lt;/a&gt; 의해 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2a51f38b0907ef2a77a6e503ca4d532bdcc812f" translate="yes" xml:space="preserve">
          <source>The directive is ignored if &lt;a href=&quot;events#kqueue&quot;&gt;kqueue&lt;/a&gt; connection processing method is used, because it reports the number of new connections waiting to be accepted.</source>
          <target state="translated">&lt;a href=&quot;events#kqueue&quot;&gt;kqueue&lt;/a&gt; 연결 처리 방법을 사용하는 경우 지시문은 무시 되기를 기다리는 새 연결 수를보고하므로 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="c0581b6ef8460d919d69387634695b42b23be4a0" translate="yes" xml:space="preserve">
          <source>The directive is only available on FreeBSD and Linux.</source>
          <target state="translated">지시문은 FreeBSD 및 Linux에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38b01ef0b9908ec4a8d7aae1bbe9f6dc9cfb398c" translate="yes" xml:space="preserve">
          <source>The directive is supported when using OpenSSL 1.1.1 or higher (1.15.4) and &lt;a href=&quot;https://boringssl.googlesource.com/boringssl/&quot;&gt;BoringSSL&lt;/a&gt;.</source>
          <target state="translated">이 지시문은 OpenSSL 1.1.1 이상 (1.15.4) 및 &lt;a href=&quot;https://boringssl.googlesource.com/boringssl/&quot;&gt;BoringSSL을&lt;/a&gt; 사용할 때 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3d113f5157f04a12ded812c6182438adc7a21e3" translate="yes" xml:space="preserve">
          <source>The directives &lt;a href=&quot;ngx_http_ssl_module#ssl_protocols&quot;&gt;ssl_protocols&lt;/a&gt; and &lt;a href=&quot;ngx_http_ssl_module#ssl_ciphers&quot;&gt;ssl_ciphers&lt;/a&gt; can be used to limit connections to include only the strong versions and ciphers of SSL/TLS. By default nginx uses &amp;ldquo;&lt;code&gt;ssl_protocols TLSv1 TLSv1.1 TLSv1.2&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;ssl_ciphers HIGH:!aNULL:!MD5&lt;/code&gt;&amp;rdquo;, so configuring them explicitly is generally not needed. Note that default values of these directives were &lt;a href=&quot;#compatibility&quot;&gt;changed&lt;/a&gt; several times.</source>
          <target state="translated">지시문 &lt;a href=&quot;ngx_http_ssl_module#ssl_protocols&quot;&gt;ssl_protocols&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_ssl_module#ssl_ciphers&quot;&gt;ssl_ciphers&lt;/a&gt; 를 사용하여 SSL / TLS의 강력한 버전 및 암호 만 포함하도록 연결을 제한 할 수 있습니다. 기본적으로 nginx는 &quot; &lt;code&gt;ssl_protocols TLSv1 TLSv1.1 TLSv1.2&lt;/code&gt; &quot;및 &quot; &lt;code&gt;ssl_ciphers HIGH:!aNULL:!MD5&lt;/code&gt; &quot;를 사용하므로 일반적으로 명시 적으로 구성 할 필요가 없습니다. 이 지시문의 기본값은 여러 번 &lt;a href=&quot;#compatibility&quot;&gt;변경되었습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cda57afa39826bdddfabd4e79edb1fb10478259e" translate="yes" xml:space="preserve">
          <source>The directives are inherited from the previous level if and only if there are no &lt;code&gt;limit_conn&lt;/code&gt; directives on the current level.</source>
          <target state="translated">지시문은 현재 레벨에 &lt;code&gt;limit_conn&lt;/code&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="1bc736bbcb1ed36d818a51adb8b380dd2c5360fb" translate="yes" xml:space="preserve">
          <source>The elements of the array are available in the &lt;code&gt;elts&lt;/code&gt; field. The &lt;code&gt;nelts&lt;/code&gt; field holds the number of elements. The &lt;code&gt;size&lt;/code&gt; field holds the size of a single element and is set when the array is initialized.</source>
          <target state="translated">배열의 요소는 &lt;code&gt;elts&lt;/code&gt; 필드 에서 사용할 수 있습니다 . &lt;code&gt;nelts&lt;/code&gt; 의 필드 요소의 수를 보유하고 있습니다. &lt;code&gt;size&lt;/code&gt; 필드는 하나의 요소의 크기를 유지하고 어레이가 초기화 될 때 설정된다.</target>
        </trans-unit>
        <trans-unit id="77f00e8de3dadbcd0b067eb8ed1c9889e787b076" translate="yes" xml:space="preserve">
          <source>The event loop has the following stages:</source>
          <target state="translated">이벤트 루프에는 다음 단계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="219c8717caad865ec56bb9536ed40edf8e06a1cf" translate="yes" xml:space="preserve">
          <source>The exact names hash table is searched first. If a name is not found, the hash table with wildcard names starting with an asterisk is searched. If the name is not found there, the hash table with wildcard names ending with an asterisk is searched.</source>
          <target state="translated">정확한 이름 해시 테이블이 먼저 검색됩니다. 이름을 찾지 못하면 별표로 시작하는 와일드 카드 이름을 가진 해시 테이블이 검색됩니다. 이름을 찾을 수 없으면 별표로 끝나는 와일드 카드 이름이있는 해시 테이블이 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="9eba818c9164a0f3a37f3b1be958acd79c0e7dcb" translate="yes" xml:space="preserve">
          <source>The example above results in log entries like these:</source>
          <target state="translated">위의 예는 다음과 같은 로그 항목을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="093ff5b3a2a72c4e60fee485bd1aa6a921107941" translate="yes" xml:space="preserve">
          <source>The expression should contain the secured part of a link (resource) and a secret ingredient. If the link has a limited lifetime, the expression should also contain &lt;code&gt;$secure_link_expires&lt;/code&gt;.</source>
          <target state="translated">표현은 링크 (자원)의 보안 부분과 비밀 성분을 포함해야합니다. 링크의 수명이 제한된 경우 표현식에도 &lt;code&gt;$secure_link_expires&lt;/code&gt; 포함되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="43ceafd5e790eb3fc502f76542dff2f76463a9de" translate="yes" xml:space="preserve">
          <source>The file path can contain variables (0.7.6+), but such logs have some constraints:</source>
          <target state="translated">파일 경로에는 변수 (0.7.6+)가 포함될 수 있지만 이러한 로그에는 몇 가지 제약 조건이 있습니다.</target>
        </trans-unit>
        <trans-unit id="032c83000ba75817f3c24a397b1d64dbf09b4d3c" translate="yes" xml:space="preserve">
          <source>The file path can contain variables, but such logs have some constraints:</source>
          <target state="translated">파일 경로에는 변수가 포함될 수 있지만 이러한 로그에는 몇 가지 제약 조건이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1104c075d03a0858c01d5f8315e9cd4de756db8c" translate="yes" xml:space="preserve">
          <source>The file should be in the DER format as produced by the &amp;ldquo;&lt;code&gt;openssl ocsp&lt;/code&gt;&amp;rdquo; command.</source>
          <target state="translated">파일은 &quot; &lt;code&gt;openssl ocsp&lt;/code&gt; &quot;명령 으로 생성 된 DER 형식이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a5d683b27a89ec61c089fecbb6239d69d1034a22" translate="yes" xml:space="preserve">
          <source>The files can be compressed using the &lt;code&gt;gzip&lt;/code&gt; command, or any other compatible one. It is recommended that the modification date and time of original and compressed files be the same.</source>
          <target state="translated">&lt;code&gt;gzip&lt;/code&gt; 명령 또는 다른 호환 가능한 파일을 사용하여 파일을 압축 할 수 있습니다 . 원본 파일과 압축 파일의 수정 날짜와 시간은 같은 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3f43610e58a46ad6675e619db0358d2f9da1e945" translate="yes" xml:space="preserve">
          <source>The final DTrace script can be downloaded from &lt;a href=&quot;http://nginx.org/download/trace_process_request.d&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">최종 DTrace 스크립트는 &lt;a href=&quot;http://nginx.org/download/trace_process_request.d&quot;&gt;여기&lt;/a&gt; 에서 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b95e9a1adfc3bb85d6ae0d5ee29f30ebc090c5c2" translate="yes" xml:space="preserve">
          <source>The final phase where the result of a client session processing is recorded. The &lt;a href=&quot;ngx_stream_log_module&quot;&gt;ngx_stream_log_module&lt;/a&gt; module is invoked at this phase.</source>
          <target state="translated">클라이언트 세션 처리 결과가 기록되는 마지막 단계입니다. &lt;a href=&quot;ngx_stream_log_module&quot;&gt;ngx_stream_log_module&lt;/a&gt; 모듈은이 단계에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a18c06bd7b4e983ab5b2b6dbead2a6191b74f3da" translate="yes" xml:space="preserve">
          <source>The first name becomes the primary server name.</source>
          <target state="translated">이름이 기본 서버 이름이됩니다.</target>
        </trans-unit>
        <trans-unit id="dcea1a59f5c62ebdb3959a61f5804f5cef2b4284" translate="yes" xml:space="preserve">
          <source>The first parameter defines a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; that will store the log. The special value &lt;code&gt;stderr&lt;/code&gt; selects the standard error file. Logging to &lt;a href=&quot;syslog&quot;&gt;syslog&lt;/a&gt; can be configured by specifying the &amp;ldquo;&lt;code&gt;syslog:&lt;/code&gt;&amp;rdquo; prefix. Logging to a &lt;a href=&quot;debugging_log#memory&quot;&gt;cyclic memory buffer&lt;/a&gt; can be configured by specifying the &amp;ldquo;&lt;code&gt;memory:&lt;/code&gt;&amp;rdquo; prefix and buffer &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt;, and is generally used for debugging (1.7.11).</source>
          <target state="translated">첫 번째 매개 변수는 로그를 저장할 &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; 을 정의합니다 . 특수 값 &lt;code&gt;stderr&lt;/code&gt; 은 표준 오류 파일을 선택합니다. &quot; &lt;code&gt;syslog:&lt;/code&gt; &quot;접두사를 지정하여 &lt;a href=&quot;syslog&quot;&gt;syslog에&lt;/a&gt; 로깅을 구성 할 수 있습니다 . &lt;a href=&quot;debugging_log#memory&quot;&gt;순환 메모리 버퍼에&lt;/a&gt; 로깅 은 &quot; &lt;code&gt;memory:&lt;/code&gt; &quot;접두사 및 버퍼 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 를 지정하여 구성 할 수 있으며 일반적으로 디버깅 (1.7.11)에 사용됩니다.&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="c17b263ab59cf91745d003e9844eef7ffe6de518" translate="yes" xml:space="preserve">
          <source>The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side. The zero value disables keep-alive client connections. The optional second parameter sets a value in the &amp;ldquo;Keep-Alive: timeout=&lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt;&amp;rdquo; response header field. Two parameters may differ.</source>
          <target state="translated">첫 번째 매개 변수는 연결 유지 클라이언트 연결이 서버 쪽에서 열린 상태로 유지되는 시간 초과를 설정합니다. 값이 0이면 연결 유지 클라이언트 연결이 비활성화됩니다. 선택적 두 번째 매개 변수는&amp;ldquo;Keep-Alive : timeout = &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; &amp;rdquo;응답 헤더 필드에 값을 설정 합니다. 두 매개 변수가 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3a8d2c1332eac04c48d76fddc3089cbecb093b5" translate="yes" xml:space="preserve">
          <source>The first parameter sets the name of the cookie to be set or inspected. The cookie value is a hexadecimal representation of the MD5 hash of the IP address and port, or of the UNIX-domain socket path. However, if the &amp;ldquo;&lt;code&gt;route&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;#server&quot;&gt;server&lt;/a&gt; directive is specified, the cookie value will be the value of the &amp;ldquo;&lt;code&gt;route&lt;/code&gt;&amp;rdquo; parameter:</source>
          <target state="translated">첫 번째 매개 변수는 설정하거나 검사 할 쿠키의 이름을 설정합니다. 쿠키 값은 IP 주소 및 포트 또는 UNIX 도메인 소켓 경로의 MD5 해시를 16 진수로 나타낸 것입니다. 그러나 &lt;a href=&quot;#server&quot;&gt;서버&lt;/a&gt; 지시문 의 &quot; &lt;code&gt;route&lt;/code&gt; &quot;매개 변수 가 지정된 경우 쿠키 값은 &quot; &lt;code&gt;route&lt;/code&gt; &quot;매개 변수 의 값이 됩니다.</target>
        </trans-unit>
        <trans-unit id="d53e6cc5d4bb051156a41f50bb4dcf053fc56436" translate="yes" xml:space="preserve">
          <source>The first phase after accepting a client connection. The &lt;a href=&quot;ngx_stream_realip_module&quot;&gt;ngx_stream_realip_module&lt;/a&gt; module is invoked at this phase.</source>
          <target state="translated">클라이언트 연결을 수락 한 후 첫 번째 단계. &lt;a href=&quot;ngx_stream_realip_module&quot;&gt;ngx_stream_realip_module&lt;/a&gt; 모듈은이 단계에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f27e1b8e79b8690349f1b4ec9eedee0cd46f3b70" translate="yes" xml:space="preserve">
          <source>The first subrequest of an active request becomes active right after creation.</source>
          <target state="translated">활성 요청의 첫 번째 하위 요청은 생성 직후 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="29ed77d16e734e3df782ea3304f5835e2df917cb" translate="yes" xml:space="preserve">
          <source>The first three parameters select an object. This can be either the whole http or stream upstream server group, or a specific server. Without other parameters, the configuration of the selected group or server is shown.</source>
          <target state="translated">처음 세 개의 매개 변수는 객체를 선택합니다. 전체 http 또는 스트림 업스트림 서버 그룹이거나 특정 서버 일 수 있습니다. 다른 매개 변수가 없으면 선택한 그룹 또는 서버의 구성이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="aa53bb15bb4d3e6306bb28f3895a7963c808d069" translate="yes" xml:space="preserve">
          <source>The first two of the names mentioned above can be combined in one:</source>
          <target state="translated">위에서 언급 한 이름 중 처음 두 가지를 하나로 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27a68035800438f275892b90349a9ea2c8c57387" translate="yes" xml:space="preserve">
          <source>The flags for directive types are:</source>
          <target state="translated">지시문 유형의 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a4cf6458473928d3f0542a726b2ba5fdc1decedc" translate="yes" xml:space="preserve">
          <source>The following articles describe load balancing with NGINX Plus in more detail:</source>
          <target state="translated">다음 기사에서는 NGINX Plus의로드 밸런싱에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8850ec9362a786abd2e97eec6d141a7075582f3e" translate="yes" xml:space="preserve">
          <source>The following commands are supported:</source>
          <target state="translated">다음 명령이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="6c72050f073c4cf159a68c670820f8ddd1c0d873" translate="yes" xml:space="preserve">
          <source>The following configuration sets up a session log and maps requests to sessions according to the request client address and &amp;ldquo;User-Agent&amp;rdquo; request header field:</source>
          <target state="translated">다음 구성은 세션 로그를 설정하고 요청 클라이언트 주소 및 &quot;User-Agent&quot;요청 헤더 필드에 따라 요청을 세션에 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="d13f136ab20e64465dfec85e6d44abb61519f6e1" translate="yes" xml:space="preserve">
          <source>The following connection processing methods are supported:</source>
          <target state="translated">다음과 같은 연결 처리 방법이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="540cd64d38d3c6c03202546ab0b7d69da631a99b" translate="yes" xml:space="preserve">
          <source>The following example creates a subrequest with the URI of &lt;code&gt;/foo&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 URI가 &lt;code&gt;/foo&lt;/code&gt; 인 하위 요청을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="d6395dae0aa4a3c90c2fd9125727798ce7ec008f" translate="yes" xml:space="preserve">
          <source>The following example gets a pointer to a location configuration of standard nginx core module &lt;a href=&quot;../http/ngx_http_core_module&quot;&gt;ngx_http_core_module&lt;/a&gt; and replaces the location content handler kept in the &lt;code&gt;handler&lt;/code&gt; field of the structure.</source>
          <target state="translated">다음 예제는 표준 nginx 코어 모듈 &lt;a href=&quot;../http/ngx_http_core_module&quot;&gt;ngx_http_core_module&lt;/a&gt; 의 위치 구성에 대한 포인터를 가져 와서 구조 의 &lt;code&gt;handler&lt;/code&gt; 필드에 보관 된 위치 컨텐츠 핸들러를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="e24267611af6ee03e9a5c63a54ccd48c5feee1e4" translate="yes" xml:space="preserve">
          <source>The following example is a body filter that inserts the string &amp;ldquo;foo&amp;rdquo; before each incoming buffer. The new buffers allocated by the module are reused if possible. Note that for this example to work properly, setting up a &lt;a href=&quot;#http_header_filters&quot;&gt;header filter&lt;/a&gt; and resetting &lt;code&gt;content_length_n&lt;/code&gt; to &lt;code&gt;-1&lt;/code&gt; is also required, but the relevant code is not provided here.</source>
          <target state="translated">다음 예제는 각 수신 버퍼 앞에 문자열 &quot;foo&quot;를 삽입하는 본문 필터입니다. 모듈에서 할당 한 새 버퍼는 가능한 경우 재사용됩니다. 이 예제가 제대로 작동하려면 &lt;a href=&quot;#http_header_filters&quot;&gt;헤더 필터를&lt;/a&gt; 설정하고 &lt;code&gt;content_length_n&lt;/code&gt; 을 &lt;code&gt;-1&lt;/code&gt; 로 재설정 해야하지만 여기에는 관련 코드가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="273d12f0fce2cf00aad88d3eb5dbe2f40af0eb4b" translate="yes" xml:space="preserve">
          <source>The following example of a header filter module adds the HTTP header &quot;&lt;code&gt;X-Foo: foo&lt;/code&gt;&quot; to every response with status &lt;code&gt;200&lt;/code&gt;.</source>
          <target state="translated">다음 헤더 필터 모듈 예제는 HTTP 헤더 &quot; &lt;code&gt;X-Foo: foo&lt;/code&gt; &quot;를 상태 &lt;code&gt;200&lt;/code&gt; 인 모든 응답에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="2727cec9a9b93298d934fd85485d5429e6f416ec" translate="yes" xml:space="preserve">
          <source>The following example performs a redirect to a named location @foo.</source>
          <target state="translated">다음 예제는 명명 된 위치 @foo로 리디렉션을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a7a5a8c6fa9a8cb049273fa927577614a2b37210" translate="yes" xml:space="preserve">
          <source>The following example performs an internal redirect with the new request arguments.</source>
          <target state="translated">다음 예제는 새 요청 인수로 내부 경로 재 지정을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3ccaa5e5b964a54ca3e1b1719b96c9ea89bd988f" translate="yes" xml:space="preserve">
          <source>The following example produces a complete HTTP response with &quot;foo&quot; as its body. For the example to work as subrequest as well as a main request, the &lt;code&gt;last_in_chain&lt;/code&gt; flag is set in the last buffer of the output. The &lt;code&gt;last_buf&lt;/code&gt; flag is set only for the main request because the last buffer for a subrequest does not end the entire output.</source>
          <target state="translated">다음 예제는 &quot;foo&quot;를 본문으로하여 완전한 HTTP 응답을 생성합니다. 예제가 기본 요청뿐만 아니라 서브 요청으로 작동하기 위해 &lt;code&gt;last_in_chain&lt;/code&gt; 플래그는 출력의 마지막 버퍼에 설정됩니다. &lt;code&gt;last_buf&lt;/code&gt; subrequest 대한 마지막 버퍼가 전체 출력을 종료하지 않으므로 플래그는 메인 요청에 설정된다.</target>
        </trans-unit>
        <trans-unit id="70c6c0ae6f05aefc7cd1c3c52ab2cbe8ea15001a" translate="yes" xml:space="preserve">
          <source>The following example reads a client request body and returns its size.</source>
          <target state="translated">다음 예제는 클라이언트 요청 본문을 읽고 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="91ca1d48f01fe15336f0838463313ed9eb02ca38" translate="yes" xml:space="preserve">
          <source>The following example shows a filter module config file assuming for a module with just one source file, &lt;code&gt;ngx_http_foo_filter_module.c&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 소스 파일이 하나 인 모듈 &lt;code&gt;ngx_http_foo_filter_module.c&lt;/code&gt; 를 가정하는 필터 모듈 구성 파일을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="85ad9127376ac8e3a8ba57cae67296c41db241d9" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum required settings for PHP:</source>
          <target state="translated">다음 예제는 PHP에 필요한 최소 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d5017053c128e40c263b9145b3405ecf4a0e60fe" translate="yes" xml:space="preserve">
          <source>The following example shows the output of running this script:</source>
          <target state="translated">다음 예제는이 스크립트를 실행 한 결과를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="bed337374cbbc7c1a52d6ee19ce1cf94d73f5b6a" translate="yes" xml:space="preserve">
          <source>The following fields of the request determine how the request body is read:</source>
          <target state="translated">요청의 다음 필드는 요청 본문을 읽는 방법을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="8443f84f4b153ea226eb424d5d80ebcbd5417ab6" translate="yes" xml:space="preserve">
          <source>The following formatting functions support nginx-specific types:</source>
          <target state="translated">다음 포맷팅 함수는 nginx 특정 타입을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="f7f806ba17fff59ef0e8f02182d9d1fc26d7e021" translate="yes" xml:space="preserve">
          <source>The following functions convert &lt;code&gt;time_t&lt;/code&gt; into the indicated broken-down time representation. The first function in each pair converts &lt;code&gt;time_t&lt;/code&gt; to &lt;code&gt;ngx_tm_t&lt;/code&gt; and the second (with the &lt;code&gt;_libc_&lt;/code&gt; infix) to &lt;code&gt;struct tm&lt;/code&gt;:</source>
          <target state="translated">다음 함수는 &lt;code&gt;time_t&lt;/code&gt; 를 표시된 분류 시간 표시 로 변환 합니다. 각 쌍의 첫 번째 함수는 &lt;code&gt;time_t&lt;/code&gt; 를 &lt;code&gt;ngx_tm_t&lt;/code&gt; 로 변환 하고 두 번째 함수 ( &lt;code&gt;_libc_&lt;/code&gt; 접두어 포함 )를 &lt;code&gt;struct tm&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4446e3c46faae4a61fa1ea10bb57a67787efc52f" translate="yes" xml:space="preserve">
          <source>The following functions perform case conversion and comparison:</source>
          <target state="translated">다음 함수는 대소 문자 변환 및 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="c073a49add3f0c89b1782ed8f4fc76fbfbe687d9" translate="yes" xml:space="preserve">
          <source>The following items can be tested in a response:</source>
          <target state="translated">다음 항목을 응답으로 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9aa945f3681f7f83e956428aae8145865a2c887e" translate="yes" xml:space="preserve">
          <source>The following load balancing mechanisms (or methods) are supported in nginx:</source>
          <target state="translated">nginx에서는 다음과 같은 로드 밸런싱 메커니즘이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="156624ff5a32bee4ec890081d11e169e0847588a" translate="yes" xml:space="preserve">
          <source>The following macros are available for accessing configuration for HTTP modules at runtime.</source>
          <target state="translated">런타임시 HTTP 모듈의 구성에 액세스하기 위해 다음 매크로를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42a4d2f66b50976b9a9672a85c1f119e407d9626" translate="yes" xml:space="preserve">
          <source>The following macros are available. for accessing configuration for HTTP modules at configuration time. They all take &lt;code&gt;ngx_conf_t&lt;/code&gt; reference as the first argument.</source>
          <target state="translated">다음과 같은 매크로를 사용할 수 있습니다. 구성시 HTTP 모듈 구성에 액세스합니다. 모두 &lt;code&gt;ngx_conf_t&lt;/code&gt; 참조를 첫 번째 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="55fb07de10d7038befe51b711320ca6981127f0c" translate="yes" xml:space="preserve">
          <source>The following macros simplify string initialization:</source>
          <target state="translated">다음 매크로는 문자열 초기화를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="082261589ad336133acac187caf99a28654c0fca" translate="yes" xml:space="preserve">
          <source>The following modules are typically used as references. The &lt;code&gt;ngx_http_copy_filter_module&lt;/code&gt; reads the data for other filter modules and is placed near the bottom of the list so that it is one of the first to be executed. The &lt;code&gt;ngx_http_write_filter_module&lt;/code&gt; writes the data to the client socket and is placed near the top of the list, and is the last to be executed.</source>
          <target state="translated">다음 모듈은 일반적으로 참조로 사용됩니다. &lt;code&gt;ngx_http_copy_filter_module&lt;/code&gt; 는 다른 필터 모듈에 대한 데이터를 판독하고 실행하는 최초의 하나가되도록 목록의 하단에 배치되어있다. &lt;code&gt;ngx_http_write_filter_module&lt;/code&gt; 는 클라이언트 소켓에 데이터를 기록하고 목록의 상단에 배치하고, 실행하는 것이 마지막이다.</target>
        </trans-unit>
        <trans-unit id="b41cd13d4195113191910e11eb0e3c04ce29eccc" translate="yes" xml:space="preserve">
          <source>The following optional parameters are supported:</source>
          <target state="translated">다음과 같은 선택적 매개 변수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="bbb0060fafb1b1a12e73884154b4dd11377c3b26" translate="yes" xml:space="preserve">
          <source>The following parameters are supported:</source>
          <target state="translated">다음과 같은 매개 변수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="91f15a3ed15cc6ec0e21d1d7bda9d3c11fc8832c" translate="yes" xml:space="preserve">
          <source>The following parameters can be configured:</source>
          <target state="translated">다음과 같은 매개 변수를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e06f726857ee42bbeda177e635d4bf7b2048558e" translate="yes" xml:space="preserve">
          <source>The following parameters can be defined:</source>
          <target state="translated">다음과 같은 파라미터를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cda6d882646f8750f07af6b5c2735c382811f71c" translate="yes" xml:space="preserve">
          <source>The following password types are supported:</source>
          <target state="translated">다음 비밀번호 유형이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f23aa6701075d9f81d7201675168040af6a77fab" translate="yes" xml:space="preserve">
          <source>The following special parameters are also supported:</source>
          <target state="translated">다음과 같은 특수 매개 변수도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="18bc6ce57a0d079cf07f97ba511777d3123023bd" translate="yes" xml:space="preserve">
          <source>The following status information is provided:</source>
          <target state="translated">다음과 같은 상태 정보가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="fedad994e7a908b49b7ed083e7a69fae8db89d8e" translate="yes" xml:space="preserve">
          <source>The following two &lt;code&gt;#include&lt;/code&gt; statements must appear at the beginning of every nginx file:</source>
          <target state="translated">모든 nginx 파일의 시작 부분에 다음 두 가지 &lt;code&gt;#include&lt;/code&gt; 문이 나타나야합니다.</target>
        </trans-unit>
        <trans-unit id="82a848f7f250ccf59b026b1298415345af1b56e5" translate="yes" xml:space="preserve">
          <source>The following two records</source>
          <target state="translated">다음 두 레코드</target>
        </trans-unit>
        <trans-unit id="4b0c75dfbf38b31b283858ba0a0ffc6cb0ffd1df" translate="yes" xml:space="preserve">
          <source>The full URI of a requested link looks as follows:</source>
          <target state="translated">요청 된 링크의 전체 URI는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fcf210c0b4795ff9e6e5b57ef10e31bd8183520a" translate="yes" xml:space="preserve">
          <source>The full list can be viewed using the &amp;ldquo;&lt;code&gt;openssl ciphers&lt;/code&gt;&amp;rdquo; command.</source>
          <target state="translated">&quot; &lt;code&gt;openssl ciphers&lt;/code&gt; &quot;명령을 사용하여 전체 목록을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04e8a906b9556a859ab6d92f931a63e6e9580b07" translate="yes" xml:space="preserve">
          <source>The full list of formatting options, supported by these functions is in &lt;code&gt;src/core/ngx_string.c&lt;/code&gt;. Some of them are:</source>
          <target state="translated">이 함수가 지원하는 전체 포맷 옵션 목록은 &lt;code&gt;src/core/ngx_string.c&lt;/code&gt; 에 있습니다. 그들 중 일부는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8aaff34be1e08e5f89187b564723ce94d49752c" translate="yes" xml:space="preserve">
          <source>The full redirect URL is formed according to the request scheme (&lt;code&gt;$scheme&lt;/code&gt;) and the &lt;a href=&quot;ngx_http_core_module#server_name_in_redirect&quot;&gt;server_name_in_redirect&lt;/a&gt; and &lt;a href=&quot;ngx_http_core_module#port_in_redirect&quot;&gt;port_in_redirect&lt;/a&gt; directives.</source>
          <target state="translated">전체 리디렉션 URL은 요청 체계 ( &lt;code&gt;$scheme&lt;/code&gt; ) 및 &lt;a href=&quot;ngx_http_core_module#server_name_in_redirect&quot;&gt;server_name_in_redirect&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_core_module#port_in_redirect&quot;&gt;port_in_redirect&lt;/a&gt; 지시문에 따라 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="7abcbcc9d48d0c5886c559e3b4e423ee632ec787" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;ngx_add_timer(ev, timer)&lt;/code&gt; sets a timeout for an event, &lt;code&gt;ngx_del_timer(ev)&lt;/code&gt; deletes a previously set timeout. The global timeout red-black tree &lt;code&gt;ngx_event_timer_rbtree&lt;/code&gt; stores all timeouts currently set. The key in the tree is of type &lt;code&gt;ngx_msec_t&lt;/code&gt; and is the time when the event occurs. The tree structure enables fast insertion and deletion operations, as well as access to the nearest timeouts, which nginx uses to find out how long to wait for I/O events and for expiring timeout events.</source>
          <target state="translated">&lt;code&gt;ngx_add_timer(ev, timer)&lt;/code&gt; 함수 는 이벤트에 대한 시간 초과를 설정하고 &lt;code&gt;ngx_del_timer(ev)&lt;/code&gt; 는 이전에 설정된 시간 초과를 삭제합니다. 글로벌 타임 아웃 레드-블랙 트리 &lt;code&gt;ngx_event_timer_rbtree&lt;/code&gt; 는 현재 설정된 모든 타임 아웃을 저장합니다. 트리의 키는 &lt;code&gt;ngx_msec_t&lt;/code&gt; 유형 이며 이벤트가 발생하는 시간입니다. 트리 구조는 빠른 삽입 및 삭제 작업과 가장 가까운 타임 아웃에 대한 액세스를 가능하게합니다. nginx는 I / O 이벤트 대기 시간과 타임 아웃 이벤트 만료 시간을 알아내는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fd55533177cec45892178b3fdd9027f3d361f110" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;ngx_http_finalize_request(r, rc)&lt;/code&gt; expects the following &lt;code&gt;rc&lt;/code&gt; values:</source>
          <target state="translated">&lt;code&gt;ngx_http_finalize_request(r, rc)&lt;/code&gt; 함수 는 다음 &lt;code&gt;rc&lt;/code&gt; 값을 예상 합니다.</target>
        </trans-unit>
        <trans-unit id="2edd8946f8ed312593dec7e4f5af4c28a4056b0d" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;ngx_http_named_location(r, name)&lt;/code&gt; redirects a request to a named location. The name of the location is passed as the argument. The location is looked up among all named locations of the current server, after which the requests switches to the &lt;code&gt;NGX_HTTP_REWRITE_PHASE&lt;/code&gt; phase.</source>
          <target state="translated">&lt;code&gt;ngx_http_named_location(r, name)&lt;/code&gt; 함수 는 요청을 명명 된 위치로 리디렉션합니다. 위치 이름이 인수로 전달됩니다. 현재 서버의 이름이 지정된 모든 위치에서 위치가 조회 된 후 요청이 &lt;code&gt;NGX_HTTP_REWRITE_PHASE&lt;/code&gt; 단계로 전환됩니다 .</target>
        </trans-unit>
        <trans-unit id="c708e0bb55005c7d7893f11bbff76437f32a3beb" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;ngx_http_output_filter(r, cl)&lt;/code&gt; invokes the body filter chain by calling the first body filter handler stored in the &lt;code&gt;ngx_http_top_body_filter&lt;/code&gt; variable. It's assumed that every body handler calls the next handler in the chain until the final handler &lt;code&gt;ngx_http_write_filter(r, cl)&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;ngx_http_output_filter(r, cl)&lt;/code&gt; 함수 는 &lt;code&gt;ngx_http_top_body_filter&lt;/code&gt; 변수에 저장된 첫 번째 본문 필터 핸들러를 호출하여 본문 필터 체인을 호출합니다 . 모든 핸들러가 최종 핸들러 &lt;code&gt;ngx_http_write_filter(r, cl)&lt;/code&gt; 가 호출 될 때까지 체인의 다음 핸들러를 호출한다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="437bded1c4a2625c544995bc7be4034918734531" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;ngx_http_read_client_request_body(r, post_handler)&lt;/code&gt; starts the process of reading the request body. When the body is completely read, the &lt;code&gt;post_handler&lt;/code&gt; callback is called to continue processing the request. If the request body is missing or has already been read, the callback is called immediately. The function &lt;code&gt;ngx_http_read_client_request_body(r, post_handler)&lt;/code&gt; allocates the &lt;code&gt;request_body&lt;/code&gt; request field of type &lt;code&gt;ngx_http_request_body_t&lt;/code&gt;. The field &lt;code&gt;bufs&lt;/code&gt; of this object keeps the result as a buffer chain. The body can be saved in memory buffers or file buffers, if the capacity specified by the &lt;a href=&quot;../http/ngx_http_core_module#client_body_buffer_size&quot;&gt;client_body_buffer_size&lt;/a&gt; directive is not enough to fit the entire body in memory.</source>
          <target state="translated">&lt;code&gt;ngx_http_read_client_request_body(r, post_handler)&lt;/code&gt; 함수 는 요청 본문을 읽는 프로세스를 시작합니다. 본문을 완전히 읽으면 요청 처리를 계속 &lt;code&gt;post_handler&lt;/code&gt; 콜백이 호출됩니다. 요청 본문이 없거나 이미 읽은 경우 콜백이 즉시 호출됩니다. 함수 &lt;code&gt;ngx_http_read_client_request_body(r, post_handler)&lt;/code&gt; 할당 &lt;code&gt;request_body&lt;/code&gt; 유형의 요구 필드 &lt;code&gt;ngx_http_request_body_t&lt;/code&gt; 를 . 이 객체 의 필드 &lt;code&gt;bufs&lt;/code&gt; 는 결과를 버퍼 체인으로 유지합니다. &lt;a href=&quot;../http/ngx_http_core_module#client_body_buffer_size&quot;&gt;client_body_buffer_size에서&lt;/a&gt; 지정한 용량 인 경우 본문을 메모리 버퍼 또는 파일 버퍼에 저장할 수 있습니다. 지시문은 몸 전체를 메모리에 맞추기에 충분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9994011c9b52b70b5d83a226cfcbd495c122df7" translate="yes" xml:space="preserve">
          <source>The function fails if &lt;code&gt;max_size&lt;/code&gt; or &lt;code&gt;bucket_size&lt;/code&gt; parameters are not big enough.</source>
          <target state="translated">&lt;code&gt;max_size&lt;/code&gt; 또는 &lt;code&gt;bucket_size&lt;/code&gt; 매개 변수가 충분히 크지 않으면 함수가 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="7908d7a9f020cf75937231b006cd2f3a3f97c787" translate="yes" xml:space="preserve">
          <source>The function name in a definition starts with a new line. The function body opening and closing braces are on separate lines. The body of a function is indented. There are two empty lines between functions:</source>
          <target state="translated">정의의 함수 이름은 줄 바꿈으로 시작합니다. 기능 본체 개폐 괄호는 별도의 라인에 있습니다. 함수의 본문이 들여 쓰기됩니다. 함수 사이에는 두 개의 빈 줄이 있습니다.</target>
        </trans-unit>
        <trans-unit id="81a954fd6d5c1a643f08e00a055a0c0756bc7eaa" translate="yes" xml:space="preserve">
          <source>The function recognizes wildcards and adds keys into the corresponding arrays. Please refer to the &lt;a href=&quot;../http/ngx_http_map_module#map&quot;&gt;map&lt;/a&gt; module documentation for the description of the wildcard syntax and the matching algorithm.</source>
          <target state="translated">이 함수는 와일드 카드를 인식하고 해당 배열에 키를 추가합니다. 와일드 카드 구문 및 일치 알고리즘에 대한 설명은 &lt;a href=&quot;../http/ngx_http_map_module#map&quot;&gt;맵&lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d14ba24897a9a3f30897166afbf1981546523032" translate="yes" xml:space="preserve">
          <source>The function returns NULL in case of error or a pointer to &lt;code&gt;ngx_http_variable_t&lt;/code&gt; otherwise:</source>
          <target state="translated">이 함수는 오류가 발생하면 NULL을 반환하거나 그렇지 않으면 &lt;code&gt;ngx_http_variable_t&lt;/code&gt; 에 대한 포인터를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1af5a1cace046ac136731f42665c81d71b1fc4f9" translate="yes" xml:space="preserve">
          <source>The hash bucket size parameter is aligned to the size that is a multiple of the processor&amp;rsquo;s cache line size. This speeds up key search in a hash on modern processors by reducing the number of memory accesses. If hash bucket size is equal to one processor&amp;rsquo;s cache line size then the number of memory accesses during the key search will be two in the worst case &amp;mdash; first to compute the bucket address, and second during the key search inside the bucket. Therefore, if nginx emits the message requesting to increase either hash max size or hash bucket size then the first parameter should first be increased.</source>
          <target state="translated">해시 버킷 크기 매개 변수는 프로세서 캐시 라인 크기의 배수 인 크기에 맞춰집니다. 이는 메모리 액세스 수를 줄임으로써 최신 프로세서의 해시에서 키 검색 속도를 높입니다. 해시 버킷 크기가 하나의 프로세서 캐시 라인 크기와 같으면 키 검색 중 메모리 액세스 수는 최악의 경우 두 개가됩니다. 먼저 버킷 주소를 계산하고 두 번째는 버킷 내부의 키 검색 중입니다. 따라서 nginx가 해시 최대 크기 또는 해시 버킷 크기를 늘리도록 요청하는 메시지를 내 보내면 첫 번째 매개 변수를 먼저 늘려야합니다.</target>
        </trans-unit>
        <trans-unit id="1b5c080cda0e80e05bceef801ce50bcf868b9592" translate="yes" xml:space="preserve">
          <source>The hash keys are stored in &lt;code&gt;ngx_hash_keys_arrays_t&lt;/code&gt; and are initialized with &lt;code&gt;ngx_hash_keys_array_init(arr, type)&lt;/code&gt;: The second parameter (&lt;code&gt;type&lt;/code&gt;) controls the amount of resources preallocated for the hash and can be either &lt;code&gt;NGX_HASH_SMALL&lt;/code&gt; or &lt;code&gt;NGX_HASH_LARGE&lt;/code&gt;. The latter is appropriate if you expect the hash to contain thousands of elements.</source>
          <target state="translated">해시 키는 &lt;code&gt;ngx_hash_keys_arrays_t&lt;/code&gt; 에 저장되고 ngx_hash_keys_array_init &lt;code&gt;ngx_hash_keys_array_init(arr, type)&lt;/code&gt; 으로 초기화됩니다 . 두 번째 매개 변수 ( &lt;code&gt;type&lt;/code&gt; )는 해시에 사전 할당 된 자원의 양을 제어하며 &lt;code&gt;NGX_HASH_SMALL&lt;/code&gt; 또는 &lt;code&gt;NGX_HASH_LARGE&lt;/code&gt; 입니다. 후자는 해시에 수천 개의 요소가 포함될 것으로 예상되는 경우 적합합니다.</target>
        </trans-unit>
        <trans-unit id="5c4b0c2f3c199fa2aaf56f48f231d2175c4beef1" translate="yes" xml:space="preserve">
          <source>The head queue node is not linked with any data. Use the &lt;code&gt;ngx_queue_init(q)&lt;/code&gt; call to initialize the list head before use. Queues support the following operations:</source>
          <target state="translated">헤드 큐 노드가 데이터와 연결되어 있지 않습니다. 사용하기 &lt;code&gt;ngx_queue_init(q)&lt;/code&gt; 호출을 사용하여 목록 헤드를 초기화하십시오. 큐는 다음 작업을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7ab960b55ee4500d1491ffc421c95a855fee2487" translate="yes" xml:space="preserve">
          <source>The keys array needs to be sorted, and initialization results must be added to the combined hash. The initialization of &lt;code&gt;dns_wc_tail&lt;/code&gt; array is done similarly.</source>
          <target state="translated">키 배열을 정렬해야하며 초기화 결과를 결합 된 해시에 추가해야합니다. &lt;code&gt;dns_wc_tail&lt;/code&gt; 배열 의 초기화 도 비슷하게 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a91bb0f071a268a08dcc4cca61b7b186665ae956" translate="yes" xml:space="preserve">
          <source>The last parameter can also point to a named location, as shown in examples below. Starting from version 0.7.51, the last parameter can also be a &lt;code&gt;&lt;i&gt;code&lt;/i&gt;&lt;/code&gt;:</source>
          <target state="translated">아래 예제와 같이 마지막 매개 변수는 명명 된 위치를 가리킬 수도 있습니다. 버전 0.7.51부터 마지막 ​​매개 변수는 &lt;code&gt;&lt;i&gt;code&lt;/i&gt;&lt;/code&gt; 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="64f89bdca04925bf744e15ade48503ee4f7c8bcf" translate="yes" xml:space="preserve">
          <source>The last parameter value can contain variables (1.7.9):</source>
          <target state="translated">마지막 매개 변수 값은 변수 (1.7.9)를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="369c3dd18bbb2191ff00d4bca1d5af7011f9d53c" translate="yes" xml:space="preserve">
          <source>The lifetime of a link passed in a request; intended to be used only in the &lt;a href=&quot;#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; directive.</source>
          <target state="translated">링크가 요청에 전달되었습니다. &lt;a href=&quot;#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; 지시문 에서만 사용하도록 의도되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2b9f587478d1e0f7603f10837036d135d78dfb1c" translate="yes" xml:space="preserve">
          <source>The limit on the maximum size of the cache specified in the configuration.</source>
          <target state="translated">구성에 지정된 캐시의 최대 크기 제한.</target>
        </trans-unit>
        <trans-unit id="450b6f92cc5f7d95db5894e228a8d273b64b7085" translate="yes" xml:space="preserve">
          <source>The list of certificates will be sent to clients. If this is not desired, the &lt;a href=&quot;#ssl_trusted_certificate&quot;&gt;ssl_trusted_certificate&lt;/a&gt; directive can be used.</source>
          <target state="translated">인증서 목록이 클라이언트로 전송됩니다. 이것이 바람직하지 않은 경우 &lt;a href=&quot;#ssl_trusted_certificate&quot;&gt;ssl_trusted_certificate&lt;/a&gt; 지시문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="409ddbb83a59d9a609b6e249a8723949ed13bee3" translate="yes" xml:space="preserve">
          <source>The list of servers in &lt;a href=&quot;#upstreams&quot;&gt;upstreams&lt;/a&gt; was moved into &lt;a href=&quot;#peers&quot;&gt;peers&lt;/a&gt; in &lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt; 6.</source>
          <target state="translated">&lt;a href=&quot;#upstreams&quot;&gt;업스트림&lt;/a&gt; 서버 목록이 &lt;a href=&quot;#version&quot;&gt;버전&lt;/a&gt; 6 에서 &lt;a href=&quot;#peers&quot;&gt;피어&lt;/a&gt; 로 이동되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ab540b76719120223243e25a049237889f97923b" translate="yes" xml:space="preserve">
          <source>The log format can contain common variables, and variables that exist only at the time of a log write:</source>
          <target state="translated">로그 형식에는 공통 변수 및 로그 쓰기시에만 존재하는 변수가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ad99f39cb798769267c6cb75a3decf59b9578e5" translate="yes" xml:space="preserve">
          <source>The lookup in a combined hash is handled by the &lt;code&gt;ngx_hash_find_combined(chash, key, name, len)&lt;/code&gt;:</source>
          <target state="translated">결합 된 해시에서의 조회는 &lt;code&gt;ngx_hash_find_combined(chash, key, name, len)&lt;/code&gt; 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="94b323134a67c3f542f3333d0af4ebbdf401c951" translate="yes" xml:space="preserve">
          <source>The master process calls the &lt;code&gt;exit_master&lt;/code&gt; handler before exiting.</source>
          <target state="translated">마스터 프로세스는 종료하기 전에 &lt;code&gt;exit_master&lt;/code&gt; 핸들러를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="1a8b50006eaf9b8e6da5adf50fd9cf934b5c18af" translate="yes" xml:space="preserve">
          <source>The master process creates one or more worker processes and the &lt;code&gt;init_process&lt;/code&gt; handler is called in each of them.</source>
          <target state="translated">마스터 프로세스는 하나 이상의 작업자 프로세스를 작성 하고 각 프로세스에서 &lt;code&gt;init_process&lt;/code&gt; 핸들러가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="788da7368c6ac25a5822fec3ad67d0c36f50119f" translate="yes" xml:space="preserve">
          <source>The matching is performed against a normalized URI, after decoding the text encoded in the &amp;ldquo;&lt;code&gt;%XX&lt;/code&gt;&amp;rdquo; form, resolving references to relative path components &amp;ldquo;&lt;code&gt;.&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;..&lt;/code&gt;&amp;rdquo;, and possible &lt;a href=&quot;#merge_slashes&quot;&gt;compression&lt;/a&gt; of two or more adjacent slashes into a single slash.</source>
          <target state="translated">&quot; &lt;code&gt;%XX&lt;/code&gt; &quot;형식으로 인코딩 된 텍스트를 디코딩 한 후 상대 경로 구성 요소에 대한 참조를 확인 하여 정규화 된 URI에 대해 일치가 수행 &lt;code&gt;.&lt;/code&gt; &amp;rdquo;및&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;및 두 개 이상의 인접한 슬래시를 단일 슬래시로 &lt;a href=&quot;#merge_slashes&quot;&gt;압축&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="66d08e8825e75aef6a4eaa9183f2fb8d7c467b07" translate="yes" xml:space="preserve">
          <source>The maximum number of requests that can be in the queue at the same time.</source>
          <target state="translated">큐에 동시에있을 수있는 최대 요청 수입니다.</target>
        </trans-unit>
        <trans-unit id="56274ede69a320a026d0845e8a2c568f7e54db02" translate="yes" xml:space="preserve">
          <source>The maximum size of the response is set by the &lt;a href=&quot;ngx_http_core_module#subrequest_output_buffer_size&quot;&gt;subrequest_output_buffer_size&lt;/a&gt; directive (1.13.10):</source>
          <target state="translated">응답의 최대 크기는 &lt;a href=&quot;ngx_http_core_module#subrequest_output_buffer_size&quot;&gt;subrequest_output_buffer_size&lt;/a&gt; 지시문 (1.13.10)에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8aec76ebb429ca5b8327022466ca3108b8d88bc" translate="yes" xml:space="preserve">
          <source>The method can be called multiple times per callback invocation.</source>
          <target state="translated">콜백 호출마다 메소드를 여러 번 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b92e51f0efb956825bd15d8d6b9f62d58c4c6192" translate="yes" xml:space="preserve">
          <source>The modification time of files is set according to the received &amp;ldquo;Last-Modified&amp;rdquo; response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the &lt;a href=&quot;#fastcgi_temp_path&quot;&gt;fastcgi_temp_path&lt;/a&gt; directive, are put on the same file system.</source>
          <target state="translated">파일의 수정 시간은 수신 된 &quot;Last-Modified&quot;응답 헤더 필드에 따라 설정됩니다. 응답은 먼저 임시 파일에 기록 된 다음 파일 이름이 바뀝니다. 버전 0.8.9부터 임시 파일과 영구 저장소를 다른 파일 시스템에 둘 수 있습니다. 그러나이 경우 저렴한 이름 바꾸기 작업 대신 두 파일 시스템에 파일이 복사됩니다. 따라서 임의의 지정된 위치에 대해, 저장된 파일과 &lt;a href=&quot;#fastcgi_temp_path&quot;&gt;fastcgi_temp_path&lt;/a&gt; 지시문에 의해 설정된 임시 파일을 보유하는 디렉토리 모두 동일한 파일 시스템에 놓는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="9ef16c0482b1ab92d2b6f0644eb5e283740c2844" translate="yes" xml:space="preserve">
          <source>The modification time of files is set according to the received &amp;ldquo;Last-Modified&amp;rdquo; response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the &lt;a href=&quot;#proxy_temp_path&quot;&gt;proxy_temp_path&lt;/a&gt; directive, are put on the same file system.</source>
          <target state="translated">파일의 수정 시간은 수신 된 &quot;Last-Modified&quot;응답 헤더 필드에 따라 설정됩니다. 응답은 먼저 임시 파일에 기록 된 다음 파일 이름이 바뀝니다. 버전 0.8.9부터 임시 파일과 영구 저장소를 다른 파일 시스템에 둘 수 있습니다. 그러나이 경우 저렴한 이름 바꾸기 작업 대신 두 파일 시스템에 파일이 복사됩니다. 따라서 지정된 위치에 대해 저장된 파일과 &lt;a href=&quot;#proxy_temp_path&quot;&gt;proxy_temp_path&lt;/a&gt; 지시문으로 설정 한 임시 파일을 보유한 디렉토리를 모두 동일한 파일 시스템에 두는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="e9f77c8a9eb2422195e7a7e6a683522a78cbb36b" translate="yes" xml:space="preserve">
          <source>The modification time of files is set according to the received &amp;ldquo;Last-Modified&amp;rdquo; response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the &lt;a href=&quot;#scgi_temp_path&quot;&gt;scgi_temp_path&lt;/a&gt; directive, are put on the same file system.</source>
          <target state="translated">파일의 수정 시간은 수신 된 &quot;Last-Modified&quot;응답 헤더 필드에 따라 설정됩니다. 응답은 먼저 임시 파일에 기록 된 다음 파일 이름이 바뀝니다. 버전 0.8.9부터 임시 파일과 영구 저장소를 다른 파일 시스템에 둘 수 있습니다. 그러나이 경우 저렴한 이름 바꾸기 작업 대신 두 파일 시스템에 파일이 복사됩니다. 따라서 지정된 위치에 대해 저장된 파일과 &lt;a href=&quot;#scgi_temp_path&quot;&gt;scgi_temp_path&lt;/a&gt; 지시문으로 설정 한 임시 파일을 보유한 디렉토리를 동일한 파일 시스템에 두는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="615cb203731983c6e2603af899858944bcc38dc1" translate="yes" xml:space="preserve">
          <source>The modification time of files is set according to the received &amp;ldquo;Last-Modified&amp;rdquo; response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the &lt;a href=&quot;#uwsgi_temp_path&quot;&gt;uwsgi_temp_path&lt;/a&gt; directive, are put on the same file system.</source>
          <target state="translated">파일의 수정 시간은 수신 된 &quot;Last-Modified&quot;응답 헤더 필드에 따라 설정됩니다. 응답은 먼저 임시 파일에 기록 된 다음 파일 이름이 바뀝니다. 버전 0.8.9부터 임시 파일과 영구 저장소를 다른 파일 시스템에 둘 수 있습니다. 그러나이 경우 저렴한 이름 바꾸기 작업 대신 두 파일 시스템에 파일이 복사됩니다. 따라서 지정된 위치에 대해 저장된 파일과 &lt;a href=&quot;#uwsgi_temp_path&quot;&gt;uwsgi_temp_path&lt;/a&gt; 지시문으로 설정 한 임시 파일을 보유한 디렉토리를 동일한 파일 시스템에 두는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a279614eaa5365b4c3a9c04354a93a1734718c10" translate="yes" xml:space="preserve">
          <source>The module &lt;code&gt;type&lt;/code&gt; defines exactly what is stored in the &lt;code&gt;ctx&lt;/code&gt; field. Its value is one of the following types:</source>
          <target state="translated">모듈 &lt;code&gt;type&lt;/code&gt; 은 &lt;code&gt;ctx&lt;/code&gt; 필드에 저장된 내용을 정확하게 정의 합니다. 그 값은 다음 유형 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="fe844114c3d0f0c1389e8a8da304f838d69b9873" translate="yes" xml:space="preserve">
          <source>The module also supports the &lt;code&gt;end&lt;/code&gt; argument of an HTTP request (1.5.13) which sets the end point of playback. The &lt;code&gt;end&lt;/code&gt; argument can be specified with the &lt;code&gt;start&lt;/code&gt; argument or separately:</source>
          <target state="translated">이 모듈은 또한 재생의 끝점을 설정하는 HTTP 요청 (1.5.13) 의 &lt;code&gt;end&lt;/code&gt; 인수를 지원 합니다. &lt;code&gt;end&lt;/code&gt; 인수는 지정할 수 있습니다 &lt;code&gt;start&lt;/code&gt; 별도로 인수 나 :</target>
        </trans-unit>
        <trans-unit id="4c45ddb018f48ff53d4cfd0761c716bc3055bd66" translate="yes" xml:space="preserve">
          <source>The module is experimental, caveat emptor applies.</source>
          <target state="translated">모듈은 실험적이며주의해야 할 emptor가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="cd2e6d15398eac114ad3595b25d580691283893d" translate="yes" xml:space="preserve">
          <source>The module may be combined with other access modules, such as &lt;a href=&quot;ngx_http_access_module&quot;&gt;ngx_http_access_module&lt;/a&gt;, &lt;a href=&quot;ngx_http_auth_basic_module&quot;&gt;ngx_http_auth_basic_module&lt;/a&gt;, and &lt;a href=&quot;ngx_http_auth_jwt_module&quot;&gt;ngx_http_auth_jwt_module&lt;/a&gt;, via the &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;satisfy&lt;/a&gt; directive.</source>
          <target state="translated">모듈은 &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;충족&lt;/a&gt; 지시문을 통해 &lt;a href=&quot;ngx_http_access_module&quot;&gt;ngx_http_access_module&lt;/a&gt; , &lt;a href=&quot;ngx_http_auth_basic_module&quot;&gt;ngx_http_auth_basic_module&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_auth_jwt_module&quot;&gt;ngx_http_auth_jwt_module&lt;/a&gt; 과 같은 다른 액세스 모듈과 결합 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="946fd88f567640c5311130c86bd0c11ae2993e91" translate="yes" xml:space="preserve">
          <source>The module may be combined with other access modules, such as &lt;a href=&quot;ngx_http_access_module&quot;&gt;ngx_http_access_module&lt;/a&gt;, &lt;a href=&quot;ngx_http_auth_basic_module&quot;&gt;ngx_http_auth_basic_module&lt;/a&gt;, and &lt;a href=&quot;ngx_http_auth_request_module&quot;&gt;ngx_http_auth_request_module&lt;/a&gt;, via the &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;satisfy&lt;/a&gt; directive.</source>
          <target state="translated">모듈은 &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;충족&lt;/a&gt; 지시문을 통해 &lt;a href=&quot;ngx_http_access_module&quot;&gt;ngx_http_access_module&lt;/a&gt; , &lt;a href=&quot;ngx_http_auth_basic_module&quot;&gt;ngx_http_auth_basic_module&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_auth_request_module&quot;&gt;ngx_http_auth_request_module&lt;/a&gt; 과 같은 다른 액세스 모듈과 결합 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65a58f076841673f44337d7ff8728892c239420e" translate="yes" xml:space="preserve">
          <source>The module provides two alternative operation modes. The first mode is enabled by the &lt;a href=&quot;#secure_link_secret&quot;&gt;secure_link_secret&lt;/a&gt; directive and is used to check authenticity of requested links as well as protect resources from unauthorized access. The second mode (0.8.50) is enabled by the &lt;a href=&quot;#secure_link&quot;&gt;secure_link&lt;/a&gt; and &lt;a href=&quot;#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; directives and is also used to limit lifetime of links.</source>
          <target state="translated">이 모듈은 두 가지 대체 작동 모드를 제공합니다. 첫 번째 모드는 &lt;a href=&quot;#secure_link_secret&quot;&gt;secure_link_secret&lt;/a&gt; 지시문에 의해 활성화되며 요청 된 링크의 신뢰성을 확인하고 무단 액세스로부터 리소스를 보호하는 데 사용됩니다. 두 번째 모드 (0.8.50)는 &lt;a href=&quot;#secure_link&quot;&gt;secure_link&lt;/a&gt; 및 &lt;a href=&quot;#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; 지시문에 의해 활성화되며 링크 수명을 제한하는 데에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e82ed2d00cc1b883da4e20c36bbcd99dd019be3b" translate="yes" xml:space="preserve">
          <source>The module supersedes the &lt;a href=&quot;ngx_http_status_module&quot;&gt;ngx_http_status_module&lt;/a&gt; and &lt;a href=&quot;ngx_http_upstream_conf_module&quot;&gt;ngx_http_upstream_conf_module&lt;/a&gt; modules.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;ngx_http_status_module&quot;&gt;ngx_http_status_module&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_upstream_conf_module&quot;&gt;ngx_http_upstream_conf_module&lt;/a&gt; 모듈을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="8b9ea244f0144444e7785df9f3aa0cf97d03087a" translate="yes" xml:space="preserve">
          <source>The module supports the following cryptographic &lt;a href=&quot;https://www.iana.org/assignments/jose/jose.xhtml#web-signature-encryption-algorithms&quot;&gt;algorithms&lt;/a&gt;:</source>
          <target state="translated">이 모듈은 다음과 같은 암호화 &lt;a href=&quot;https://www.iana.org/assignments/jose/jose.xhtml#web-signature-encryption-algorithms&quot;&gt;알고리즘을&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="789f49401dfc24a0b3e80f4f3759e54ebab92313" translate="yes" xml:space="preserve">
          <source>The modules can also be built as &lt;a href=&quot;../ngx_core_module#load_module&quot;&gt;dynamic&lt;/a&gt;:</source>
          <target state="translated">모듈은 &lt;a href=&quot;../ngx_core_module#load_module&quot;&gt;동적&lt;/a&gt; 으로 구축 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ced69121859ec850f17d4430a883431a99e02e3" translate="yes" xml:space="preserve">
          <source>The most basic nginx configuration to work with a FastCGI server includes using the &lt;a href=&quot;http/ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt; directive instead of the &lt;code&gt;proxy_pass&lt;/code&gt; directive, and &lt;a href=&quot;http/ngx_http_fastcgi_module#fastcgi_param&quot;&gt;fastcgi_param&lt;/a&gt; directives to set parameters passed to a FastCGI server. Suppose the FastCGI server is accessible on &lt;code&gt;localhost:9000&lt;/code&gt;. Taking the proxy configuration from the previous section as a basis, replace the &lt;code&gt;proxy_pass&lt;/code&gt; directive with the &lt;code&gt;fastcgi_pass&lt;/code&gt; directive and change the parameter to &lt;code&gt;localhost:9000&lt;/code&gt;. In PHP, the &lt;code&gt;SCRIPT_FILENAME&lt;/code&gt; parameter is used for determining the script name, and the &lt;code&gt;QUERY_STRING&lt;/code&gt; parameter is used to pass request parameters. The resulting configuration would be:</source>
          <target state="translated">FastCGI를 서버와 작업에 대한 가장 기본적인의 nginx 구성은 사용 포함 &lt;a href=&quot;http/ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass의&lt;/a&gt; 지침 대신 &lt;code&gt;proxy_pass&lt;/code&gt; 의 지침 및 &lt;a href=&quot;http/ngx_http_fastcgi_module#fastcgi_param&quot;&gt;fastcgi_param의&lt;/a&gt; FastCGI를 서버에 전달 설정 매개 변수 지시를. &lt;code&gt;localhost:9000&lt;/code&gt; 에서 FastCGI 서버에 액세스 할 수 있다고 가정하십시오 . 이전 섹션에서 프록시 구성을 기초로하여 &lt;code&gt;proxy_pass&lt;/code&gt; 지시문을 &lt;code&gt;fastcgi_pass&lt;/code&gt; 지시문으로 바꾸고 매개 변수를 &lt;code&gt;localhost:9000&lt;/code&gt; 으로 변경하십시오 . PHP에서 &lt;code&gt;SCRIPT_FILENAME&lt;/code&gt; 매개 변수는 스크립트 이름과 &lt;code&gt;QUERY_STRING&lt;/code&gt; 을 결정하는 데 사용됩니다.매개 변수는 요청 매개 변수를 전달하는 데 사용됩니다. 결과 구성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="95adfb039dfe689821fe58359356d176e3606780" translate="yes" xml:space="preserve">
          <source>The most common pitfall is an attempt to write a full-fledged C module when it can be avoided. In most cases your task can be accomplished by creating a proper configuration. If writing a module is inevitable, try to make it as small and simple as possible. For example, a module can only export some &lt;a href=&quot;#http_variables&quot;&gt;variables&lt;/a&gt;.</source>
          <target state="translated">가장 일반적인 함정은 피할 수있을 때 본격적인 C 모듈을 작성하려는 시도입니다. 대부분의 경우 적절한 구성을 작성하여 작업을 수행 할 수 있습니다. 모듈 작성이 불가피한 경우 가능한 작고 단순하게 만드십시오. 예를 들어, 모듈은 일부 &lt;a href=&quot;#http_variables&quot;&gt;변수&lt;/a&gt; 만 내보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9fdfcde9675ba2cd1ba4823c7fd1f0029ae3707" translate="yes" xml:space="preserve">
          <source>The most used string type in nginx, &lt;a href=&quot;#string_overview&quot;&gt;ngx_str_t&lt;/a&gt; is not a C-Style zero-terminated string. You cannot pass the data to standard C library functions such as &lt;code&gt;strlen()&lt;/code&gt; or &lt;code&gt;strstr()&lt;/code&gt;. Instead, nginx &lt;a href=&quot;#string_overview&quot;&gt;counterparts&lt;/a&gt; that accept either &lt;code&gt;ngx_str_t&lt;/code&gt; should be used or pointer to data and a length. However, there is a case when &lt;code&gt;ngx_str_t&lt;/code&gt; holds a pointer to a zero-terminated string: strings that come as a result of configuration file parsing are zero-terminated.</source>
          <target state="translated">nginx에서 가장 많이 사용되는 문자열 유형 인 &lt;a href=&quot;#string_overview&quot;&gt;ngx_str_t&lt;/a&gt; 는 C 스타일의 0으로 끝나는 문자열이 아닙니다. &lt;code&gt;strlen()&lt;/code&gt; 또는 &lt;code&gt;strstr()&lt;/code&gt; 과 같은 표준 C 라이브러리 함수에는 데이터를 전달할 수 없습니다 . 대신, &lt;code&gt;ngx_str_t&lt;/code&gt; 를 허용하는 nginx &lt;a href=&quot;#string_overview&quot;&gt;대응 물&lt;/a&gt; 을 사용하거나 데이터 및 길이에 대한 포인터를 사용해야합니다. 그러나 &lt;code&gt;ngx_str_t&lt;/code&gt; 가 0으로 끝나는 문자열에 대한 포인터를 보유 하는 경우 가 있습니다. 구성 파일 구문 분석의 결과로 나오는 문자열은 0으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="e1ef36ca349e1b81d46d5400d08bf735d6a93262" translate="yes" xml:space="preserve">
          <source>The name of a stream keyval shared memory zone.</source>
          <target state="translated">스트림 키 발트 공유 메모리 존의 이름.</target>
        </trans-unit>
        <trans-unit id="7126b47ed13afe3757d60ff79999df8c064222be" translate="yes" xml:space="preserve">
          <source>The name of a stream server zone.</source>
          <target state="translated">스트림 서버 영역의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7ed06daa9d274a25783fbe76f2044c753dc354bb" translate="yes" xml:space="preserve">
          <source>The name of a stream upstream server group.</source>
          <target state="translated">스트림 업스트림 서버 그룹의 이름</target>
        </trans-unit>
        <trans-unit id="abef00340c3ab85c5116ecedf612c92ec80ef352" translate="yes" xml:space="preserve">
          <source>The name of an HTTP keyval shared memory zone.</source>
          <target state="translated">HTTP keyval 공유 메모리 영역의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ca0803c7bfdcf9ae72b12683a2f0b5e99f873fd9" translate="yes" xml:space="preserve">
          <source>The name of an HTTP server zone.</source>
          <target state="translated">HTTP 서버 영역의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1196bdae895863809712369c0fb2925645a7dbe0" translate="yes" xml:space="preserve">
          <source>The name of an HTTP upstream server group.</source>
          <target state="translated">HTTP 업스트림 서버 그룹의 이름</target>
        </trans-unit>
        <trans-unit id="26e2449e9c6740ceb24b2efc4f2042eba1baebc0" translate="yes" xml:space="preserve">
          <source>The name of an upstream server group.</source>
          <target state="translated">업스트림 서버 그룹의 이름</target>
        </trans-unit>
        <trans-unit id="1a4545d45979f663b44f39ae817974d2b617d4a3" translate="yes" xml:space="preserve">
          <source>The name of the cache zone.</source>
          <target state="translated">캐시 영역의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="35887fbfc7acddf6787b06aa966a508393efe9f2" translate="yes" xml:space="preserve">
          <source>The name of the server specified in the &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;server&lt;/a&gt; directive.</source>
          <target state="translated">&lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;서버&lt;/a&gt; 지시문에 지정된 서버의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="10c22a3c3beb3ac626b3c0444a040a1f27e79693" translate="yes" xml:space="preserve">
          <source>The name of the server specified in the &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;server&lt;/a&gt; directive.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;서버&lt;/a&gt; 지시문에 지정된 서버의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="f86299cc9f0bdb125b9cf554d39268f995993db4" translate="yes" xml:space="preserve">
          <source>The name of the shared memory &lt;a href=&quot;../stream/ngx_stream_upstream_module#zone&quot;&gt;zone&lt;/a&gt; that keeps the group&amp;rsquo;s configuration and run-time state.</source>
          <target state="translated">그룹의 구성 및 런타임 상태를 유지 하는 공유 메모리 &lt;a href=&quot;../stream/ngx_stream_upstream_module#zone&quot;&gt;영역&lt;/a&gt; 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="f78b0e51bb7a90cfb411edf797846feed2fedc12" translate="yes" xml:space="preserve">
          <source>The name of the shared memory &lt;a href=&quot;ngx_http_upstream_module#zone&quot;&gt;zone&lt;/a&gt; that keeps the group&amp;rsquo;s configuration and run-time state.</source>
          <target state="translated">그룹의 구성 및 런타임 상태를 유지 하는 공유 메모리 &lt;a href=&quot;ngx_http_upstream_module#zone&quot;&gt;영역&lt;/a&gt; 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="df5d7028dc2d56f8c139685b50f7d76daf79ce3e" translate="yes" xml:space="preserve">
          <source>The name of the shared memory zone with slab allocator.</source>
          <target state="translated">슬랩 할당자가있는 공유 메모리 영역의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="72e5d67f13913cf8c4ced1df2838de2e0958d20b" translate="yes" xml:space="preserve">
          <source>The name of the upstream server group.</source>
          <target state="translated">업스트림 서버 그룹의 이름</target>
        </trans-unit>
        <trans-unit id="4591efc0da78078a7a69dab2d39588e7765c14a3" translate="yes" xml:space="preserve">
          <source>The nginx array type &lt;code&gt;ngx_array_t&lt;/code&gt; is defined as follows</source>
          <target state="translated">nginx 배열 유형 &lt;code&gt;ngx_array_t&lt;/code&gt; 는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="748e4a7acc556bd8b66529740048a9cb14e0bc82" translate="yes" xml:space="preserve">
          <source>The nginx processes handle the following signals:</source>
          <target state="translated">nginx 프로세스는 다음 신호를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="6bf0fd4c0ee9325537224f8bbf342b0e4c4a01e5" translate="yes" xml:space="preserve">
          <source>The nginx string type &lt;code&gt;ngx_str_t&lt;/code&gt; is defined as follows:</source>
          <target state="translated">nginx 문자열 유형 &lt;code&gt;ngx_str_t&lt;/code&gt; 는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="d9d3aae499850bad3c629345e52cf43e4d725fae" translate="yes" xml:space="preserve">
          <source>The number of accepted, dropped, active, and idle connections.</source>
          <target state="translated">수락, 끊어짐, 활성 및 유휴 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="9498a2a81ae431d6ee064be421edf65facba725d" translate="yes" xml:space="preserve">
          <source>The number of bytes received by this node.</source>
          <target state="translated">이 노드가 수신 한 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="53d47b2fbc9167ae244ba6bb08f09bfb7d41ab00" translate="yes" xml:space="preserve">
          <source>The number of bytes sent by this node.</source>
          <target state="translated">이 노드가 보낸 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="954498a85e3d189290ba718cd9a0cffe62c3e455" translate="yes" xml:space="preserve">
          <source>The number of client connections that are currently being processed.</source>
          <target state="translated">현재 처리중인 클라이언트 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="e71c5cc6d7059d4c17808764fc7e01d0e9dbd6ac" translate="yes" xml:space="preserve">
          <source>The number of client requests that are currently being processed.</source>
          <target state="translated">현재 처리중인 클라이언트 요청 수</target>
        </trans-unit>
        <trans-unit id="d0e3aecde62cdabeef1c04aa064d96831201cf1d" translate="yes" xml:space="preserve">
          <source>The number of failed health checks.</source>
          <target state="translated">실패한 상태 확인 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="e7aa0149166ebf20f68df311aed44f694e7f105c" translate="yes" xml:space="preserve">
          <source>The number of free and used memory pages.</source>
          <target state="translated">사용 가능한 메모리 페이지와 사용 된 메모리 페이지 수</target>
        </trans-unit>
        <trans-unit id="04bff855a8fd203b936f67baace27ef76ecf3d32" translate="yes" xml:space="preserve">
          <source>The number of messages received by this node.</source>
          <target state="translated">이 노드가 수신 한 메시지 수</target>
        </trans-unit>
        <trans-unit id="da7d8640b6aac4ace0692c7916ed4cd12fb29536" translate="yes" xml:space="preserve">
          <source>The number of messages sent by this node.</source>
          <target state="translated">이 노드가 보낸 메시지 수</target>
        </trans-unit>
        <trans-unit id="9a92ee2e9995995353d8ea8c8e89f369d17dfcb4" translate="yes" xml:space="preserve">
          <source>The number of peers this node is connected to.</source>
          <target state="translated">이 노드가 연결된 피어 수입니다.</target>
        </trans-unit>
        <trans-unit id="e021bc638744c183ef1f1624d33b1eb38ef1cea4" translate="yes" xml:space="preserve">
          <source>The number of records that need to be sent to the cluster.</source>
          <target state="translated">클러스터로 전송해야하는 레코드 수</target>
        </trans-unit>
        <trans-unit id="a4a32e0ec16a865adb87dcd665a3fcbaabc54da8" translate="yes" xml:space="preserve">
          <source>The number of responses with &amp;ldquo;&lt;code&gt;1xx&lt;/code&gt;&amp;rdquo; status codes.</source>
          <target state="translated">&quot; &lt;code&gt;1xx&lt;/code&gt; &quot;상태 코드 가있는 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="b7a8aacb685a0ded45f36d991df78eac543f28e0" translate="yes" xml:space="preserve">
          <source>The number of responses with &amp;ldquo;&lt;code&gt;2xx&lt;/code&gt;&amp;rdquo; status codes.</source>
          <target state="translated">&quot; &lt;code&gt;2xx&lt;/code&gt; &quot;상태 코드 가있는 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="79d197904e79607608bf763c5c98bf737af94829" translate="yes" xml:space="preserve">
          <source>The number of responses with &amp;ldquo;&lt;code&gt;3xx&lt;/code&gt;&amp;rdquo; status codes.</source>
          <target state="translated">&quot; &lt;code&gt;3xx&lt;/code&gt; &quot;상태 코드 가있는 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="aaf1232b134ed5596597c4f52280e1e12dc4d0b3" translate="yes" xml:space="preserve">
          <source>The number of responses with &amp;ldquo;&lt;code&gt;4xx&lt;/code&gt;&amp;rdquo; status codes.</source>
          <target state="translated">&quot; &lt;code&gt;4xx&lt;/code&gt; &quot;상태 코드 가있는 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="72a0b27b843a35ee3d456f9d3c7bff3d089a83ef" translate="yes" xml:space="preserve">
          <source>The number of responses with &amp;ldquo;&lt;code&gt;5xx&lt;/code&gt;&amp;rdquo; status codes.</source>
          <target state="translated">&quot; &lt;code&gt;5xx&lt;/code&gt; &quot;상태 코드 가있는 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="d3a9758e7398e8c469315588e9a7c3b352de793d" translate="yes" xml:space="preserve">
          <source>The number of responses with status codes 1xx, 2xx, 3xx, 4xx, and 5xx.</source>
          <target state="translated">상태 코드가 1xx, 2xx, 3xx, 4xx 및 5xx 인 응답 수입니다.</target>
        </trans-unit>
        <trans-unit id="dfa38091ba3033175add9cad457ac228d7ee5114" translate="yes" xml:space="preserve">
          <source>The number of sessions completed with &lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;status codes&lt;/a&gt; 2xx, 4xx, or 5xx.</source>
          <target state="translated">&lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;상태 코드&lt;/a&gt; 2xx, 4xx 또는 5xx로 완료된 세션 수입니다 .</target>
        </trans-unit>
        <trans-unit id="cae8534693eb55527a7895aea9b8852a9185088d" translate="yes" xml:space="preserve">
          <source>The number of unsuccessful attempts to allocate memory of specified size.</source>
          <target state="translated">지정된 크기의 메모리를 할당하지 못한 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="9d1d7467ae5c19883c38d1ce0cfbd220e6608e44" translate="yes" xml:space="preserve">
          <source>The oldest and most robust method to resolve the issue is to assign a separate IP address for every HTTPS server:</source>
          <target state="translated">이 문제를 해결하는 가장 오래되고 가장 강력한 방법은 모든 HTTPS 서버에 대해 별도의 IP 주소를 할당하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c3c255ea61337d7e384c8d156580d80655c57982" translate="yes" xml:space="preserve">
          <source>The omitted private part includes the module version and a signature and is filled using the predefined macro &lt;code&gt;NGX_MODULE_V1&lt;/code&gt;.</source>
          <target state="translated">생략 된 개인 부분은 모듈 버전 및 서명을 포함하며 사전 정의 된 매크로 &lt;code&gt;NGX_MODULE_V1&lt;/code&gt; 을 사용하여 채워 집니다 .</target>
        </trans-unit>
        <trans-unit id="8c7079f6aafcdb3ddb5717af8eca8b11b78f97c9" translate="yes" xml:space="preserve">
          <source>The opposite of the &amp;ldquo;&lt;code&gt;down&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#down&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#down&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_upstream_module#down&quot;&gt;http&lt;/a&gt; 또는 &lt;a href=&quot;../stream/ngx_stream_upstream_module#down&quot;&gt;스트림&lt;/a&gt; 업스트림 서버 의 &quot; &lt;code&gt;down&lt;/code&gt; &quot;매개 변수와 반대입니다 .</target>
        </trans-unit>
        <trans-unit id="ddb6739e456bb66c9357d5a07952397b9c22367b" translate="yes" xml:space="preserve">
          <source>The optimal value depends on many factors including (but not limited to) the number of CPU cores, the number of hard disk drives that store data, and load pattern. When one is in doubt, setting it to the number of available CPU cores would be a good start (the value &amp;ldquo;&lt;code&gt;auto&lt;/code&gt;&amp;rdquo; will try to autodetect it).</source>
          <target state="translated">최적의 값은 CPU 코어 수, 데이터를 저장하는 하드 디스크 드라이브 수 및로드 패턴을 포함하여 많은 요인에 따라 달라집니다. 확실하지 않은 경우, 사용 가능한 CPU 코어 수로 설정하면 좋은 시작이됩니다 ( &quot; &lt;code&gt;auto&lt;/code&gt; &quot; 값 은 자동 감지를 시도합니다).</target>
        </trans-unit>
        <trans-unit id="b64eaad8509725f5cf6663f052da555b5dff8a5f" translate="yes" xml:space="preserve">
          <source>The optional &amp;ldquo;&lt;code&gt;fields&lt;/code&gt;&amp;rdquo; argument in the request line specifies which fields of the requested objects will be output:</source>
          <target state="translated">요청 라인 의 선택적 &quot; &lt;code&gt;fields&lt;/code&gt; &quot;인수는 요청 된 객체의 어떤 필드가 출력 될 것인지 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2f07f5a7095fe03995cab9f7387689420fa22470" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;state&lt;/code&gt; parameter specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; that keeps the current state of the key-value database in the JSON format and makes it persistent across nginx restarts.</source>
          <target state="translated">선택적 &lt;code&gt;state&lt;/code&gt; 매개 변수 는 키-값 데이터베이스의 현재 상태를 JSON 형식으로 유지하고 nginx를 다시 시작해도 지속적으로 유지 하는 &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; 을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="78dd64e356e911f75ad997043bc07a807d65b6b5" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;sync&lt;/code&gt; parameter (1.15.0) enables &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;synchronization&lt;/a&gt; of the shared memory zone. The synchronization requires the &lt;code&gt;timeout&lt;/code&gt; parameter to be set.</source>
          <target state="translated">선택적 &lt;code&gt;sync&lt;/code&gt; 매개 변수 (1.15.0)는 공유 메모리 영역의 &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;동기화&lt;/a&gt; 를 가능하게 합니다 . 동기화에는 &lt;code&gt;timeout&lt;/code&gt; 매개 변수가 설정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2d964283fa4d6a56e9cfffcbe8e8eacb435ab8af" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;sync&lt;/code&gt; parameter (1.15.0) enables &lt;a href=&quot;ngx_stream_zone_sync_module#zone_sync&quot;&gt;synchronization&lt;/a&gt; of the shared memory zone. The synchronization requires the &lt;code&gt;timeout&lt;/code&gt; parameter to be set.</source>
          <target state="translated">선택적 &lt;code&gt;sync&lt;/code&gt; 매개 변수 (1.15.0)는 공유 메모리 영역의 &lt;a href=&quot;ngx_stream_zone_sync_module#zone_sync&quot;&gt;동기화&lt;/a&gt; 를 가능하게 합니다 . 동기화에는 &lt;code&gt;timeout&lt;/code&gt; 매개 변수가 설정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="72a348b58ec452e927b5266edb8ea71be2f2fafe" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;timeout&lt;/code&gt; parameter (1.15.0) sets the time after which key-value pairs are removed from the zone.</source>
          <target state="translated">선택적 &lt;code&gt;timeout&lt;/code&gt; 매개 변수 (1.15.0)는 영역에서 키-값 쌍이 제거 된 후 시간을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="95f26c6b14d655e52124019a4e8b07a09971f7c3" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;token&lt;/code&gt; parameter specifies a variable that contains JSON Web Token. By default, JWT is passed in the &amp;ldquo;Authorization&amp;rdquo; header as a &lt;a href=&quot;https://tools.ietf.org/html/rfc6750&quot;&gt;Bearer Token&lt;/a&gt;. JWT may be also passed as a cookie or a part of a query string:</source>
          <target state="translated">선택적 &lt;code&gt;token&lt;/code&gt; 매개 변수는 JSON 웹 토큰을 포함하는 변수를 지정합니다. 기본적으로 JWT는&amp;ldquo;Authorization&amp;rdquo;헤더에 &lt;a href=&quot;https://tools.ietf.org/html/rfc6750&quot;&gt;Bearer Token&lt;/a&gt; 으로 전달됩니다 . JWT는 쿠키 또는 쿼리 문자열의 일부로 전달 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3975350b867bf0aa52927ed663fbb4cbf06997e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;two&lt;/code&gt; parameter instructs nginx to randomly select &lt;a href=&quot;https://homes.cs.washington.edu/~karlin/papers/balls.pdf&quot;&gt;two&lt;/a&gt; servers and then choose a server using the specified &lt;code&gt;method&lt;/code&gt;. The default method is &lt;code&gt;least_conn&lt;/code&gt; which passes a connection to a server with the least number of active connections.</source>
          <target state="translated">선택적 &lt;code&gt;two&lt;/code&gt; 매개 변수는 nginx에 &lt;a href=&quot;https://homes.cs.washington.edu/~karlin/papers/balls.pdf&quot;&gt;두&lt;/a&gt; 서버 를 무작위로 선택한 다음 지정된 &lt;code&gt;method&lt;/code&gt; 사용하여 서버를 선택하도록 지시 합니다 . 기본 방법은 최소 활성 연결 수가있는 서버로 연결을 전달하는 &lt;code&gt;least_conn&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69b9883d37f5e9e24d7c07a94a77090b280c5948" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;two&lt;/code&gt; parameter instructs nginx to randomly select &lt;a href=&quot;https://homes.cs.washington.edu/~karlin/papers/balls.pdf&quot;&gt;two&lt;/a&gt; servers and then choose a server using the specified &lt;code&gt;method&lt;/code&gt;. The default method is &lt;code&gt;least_conn&lt;/code&gt; which passes a request to a server with the least number of active connections.</source>
          <target state="translated">선택적 &lt;code&gt;two&lt;/code&gt; 매개 변수는 nginx에 &lt;a href=&quot;https://homes.cs.washington.edu/~karlin/papers/balls.pdf&quot;&gt;두&lt;/a&gt; 서버 를 무작위로 선택한 다음 지정된 &lt;code&gt;method&lt;/code&gt; 사용하여 서버를 선택하도록 지시 합니다 . 기본 방법은 최소 수의 활성 연결을 가진 서버로 요청을 전달하는 &lt;code&gt;least_conn&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6570aae860b081d458fb4e94488bb6b9e6522d87" translate="yes" xml:space="preserve">
          <source>The optional mask parameter can be used to limit the CPUs available for automatic binding:</source>
          <target state="translated">선택적 마스크 매개 변수를 사용하여 자동 바인딩에 사용 가능한 CPU를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b0a5e967537ba7b2005b789f070e893102855a1" translate="yes" xml:space="preserve">
          <source>The output header in a subrequest is always ignored. The &lt;code&gt;ngx_http_postpone_filter&lt;/code&gt; places the subrequest's output body in the right position relative to other data produced by the parent request.</source>
          <target state="translated">하위 요청의 출력 헤더는 항상 무시됩니다. &lt;code&gt;ngx_http_postpone_filter&lt;/code&gt; 는 부모의 요청에 의해 생성 된 다른 데이터에 대한 권리의 상대 위치에 subrequest의 출력 체를 놓는다.</target>
        </trans-unit>
        <trans-unit id="a58d6931af21559c857e838ad70a0ae6808698e4" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;off&lt;/code&gt; cancels the addition of charset to the &amp;ldquo;Content-Type&amp;rdquo; response header field.</source>
          <target state="translated">&lt;code&gt;off&lt;/code&gt; 매개 변수 는 &quot;Content-Type&quot;응답 헤더 필드에 문자 세트 추가를 취소합니다.</target>
        </trans-unit>
        <trans-unit id="a938ac71dc60178150e03a380b0696f1557f89fe" translate="yes" xml:space="preserve">
          <source>The parameter cannot be used along with the &lt;a href=&quot;#hash&quot;&gt;hash&lt;/a&gt; and &lt;a href=&quot;#ip_hash&quot;&gt;ip_hash&lt;/a&gt; load balancing methods.</source>
          <target state="translated">이 매개 변수는 &lt;a href=&quot;#hash&quot;&gt;해시&lt;/a&gt; 및 &lt;a href=&quot;#ip_hash&quot;&gt;ip_hash&lt;/a&gt; 로드 밸런싱 방법 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="976b755c624876c88f0e05aa615d87cb74aa7aba" translate="yes" xml:space="preserve">
          <source>The parameter cannot be used along with the &lt;a href=&quot;#hash&quot;&gt;hash&lt;/a&gt; load balancing method.</source>
          <target state="translated">이 매개 변수는 &lt;a href=&quot;#hash&quot;&gt;해시&lt;/a&gt; 로드 밸런싱 방법 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a99478203d9e1de4a515aa29f08c1852054a088f" translate="yes" xml:space="preserve">
          <source>The parameter is a regular expression matching all URIs ending with &lt;code&gt;.gif&lt;/code&gt;, &lt;code&gt;.jpg&lt;/code&gt;, or &lt;code&gt;.png&lt;/code&gt;. A regular expression should be preceded with &lt;code&gt;~&lt;/code&gt;. The corresponding requests will be mapped to the &lt;code&gt;/data/images&lt;/code&gt; directory.</source>
          <target state="translated">이 매개 변수는 &lt;code&gt;.gif&lt;/code&gt; , &lt;code&gt;.jpg&lt;/code&gt; 또는 &lt;code&gt;.png&lt;/code&gt; 로 끝나는 모든 URI와 일치하는 정규식 입니다. 정규식 앞에 &lt;code&gt;~&lt;/code&gt; 가 와야 합니다. 해당 요청은 &lt;code&gt;/data/images&lt;/code&gt; 디렉토리에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="483cf2f885da01ceab3d20d2b532df257267216f" translate="yes" xml:space="preserve">
          <source>The parameters &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;lookup&lt;/code&gt; specify variables that indicate how new sessions are created and existing sessions are searched, respectively. Both parameters may be specified more than once, in which case the first non-empty variable is used.</source>
          <target state="translated">매개 변수 &lt;code&gt;create&lt;/code&gt; 및 &lt;code&gt;lookup&lt;/code&gt; 은 각각 새 세션을 만들고 기존 세션을 검색하는 방법을 나타내는 변수를 지정합니다. 두 매개 변수를 두 번 이상 지정할 수 있으며이 경우 비어 있지 않은 첫 번째 변수가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="27e1defc641544592749c2537ac9a0bdab01e180" translate="yes" xml:space="preserve">
          <source>The parameters description can contain variables, for example, the whole line of parameters can be taken from a single variable:</source>
          <target state="translated">매개 변수 설명에는 변수가 포함될 수 있습니다. 예를 들어, 전체 매개 변수 행은 단일 변수에서 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4b2a73c8fbbeaf2744933df4370f40e213db48e" translate="yes" xml:space="preserve">
          <source>The parameters of the &lt;code&gt;route&lt;/code&gt; method specify variables that may contain routing information. The first non-empty variable is used to find the matching server.</source>
          <target state="translated">&lt;code&gt;route&lt;/code&gt; 메소드 의 매개 변수는 라우팅 정보를 포함 할 수있는 변수를 지정합니다. 비어 있지 않은 첫 번째 변수는 일치하는 서버를 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="67a542d806f3155dd13a13b41d6a3e5a30c13cd8" translate="yes" xml:space="preserve">
          <source>The previous versions of nginx used &lt;a href=&quot;../http/configuring_https_servers#compatibility&quot;&gt;different&lt;/a&gt; ciphers by default.</source>
          <target state="translated">이전 버전의 nginx 는 기본적으로 &lt;a href=&quot;../http/configuring_https_servers#compatibility&quot;&gt;다른&lt;/a&gt; 암호를 사용 했습니다.</target>
        </trans-unit>
        <trans-unit id="18403b5b3c429f2ede3e25cdfd145f69cbe20b5b" translate="yes" xml:space="preserve">
          <source>The previous versions of nginx used &lt;a href=&quot;configuring_https_servers#compatibility&quot;&gt;different&lt;/a&gt; ciphers by default.</source>
          <target state="translated">이전 버전의 nginx 는 기본적으로 &lt;a href=&quot;configuring_https_servers#compatibility&quot;&gt;다른&lt;/a&gt; 암호를 사용 했습니다.</target>
        </trans-unit>
        <trans-unit id="7a17e2201a5d8696a95b86f696a4c9e340dab7dc" translate="yes" xml:space="preserve">
          <source>The problem above can be solved by including only the relevant and necessary structure and type definitions in the DTrace script. DTrace has to know sizes of structures, types, and fields offsets. Thus dependencies can be further reduced by manually optimizing structure definitions for use with DTrace.</source>
          <target state="translated">위의 문제는 DTrace 스크립트에 관련이 있고 필요한 구조 및 유형 정의 만 포함하여 해결할 수 있습니다. DTrace는 구조, 유형 및 필드 오프셋의 크기를 알아야합니다. 따라서 DTrace와 함께 사용할 구조 정의를 수동으로 최적화하여 종속성을 더욱 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00fe38e1263e4110d763adb55451cbd4049dae38" translate="yes" xml:space="preserve">
          <source>The rate is specified in requests per second (r/s). If a rate of less than one request per second is desired, it is specified in request per minute (r/m). For example, half-request per second is 30r/m.</source>
          <target state="translated">비율은 초당 요청 (r / s)으로 지정됩니다. 초당 1 회 미만의 요청이 필요한 경우 분당 요청 (r / m)으로 지정됩니다. 예를 들어, 초당 절반 요청은 30r / m입니다.</target>
        </trans-unit>
        <trans-unit id="4884607daadfd9f9413c006c74fff8c2f6b5c3ab" translate="yes" xml:space="preserve">
          <source>The redirection happens after the request is fully parsed and the variables, such as &lt;code&gt;$request_uri&lt;/code&gt;, &lt;code&gt;$uri&lt;/code&gt;, &lt;code&gt;$args&lt;/code&gt; and others, are available.</source>
          <target state="translated">요청이 완전히 파싱되고 &lt;code&gt;$request_uri&lt;/code&gt; , &lt;code&gt;$uri&lt;/code&gt; , &lt;code&gt;$args&lt;/code&gt; 등의 변수 를 사용할 수있게 되면 리디렉션이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="d38b53233b00578aedf377b9bcfe2b9c01334a41" translate="yes" xml:space="preserve">
          <source>The regular expressions interface in nginx is a wrapper around the &lt;a href=&quot;http://www.pcre.org&quot;&gt;PCRE&lt;/a&gt; library. The corresponding header file is &lt;code&gt;src/core/ngx_regex.h&lt;/code&gt;.</source>
          <target state="translated">nginx의 정규식 인터페이스는 &lt;a href=&quot;http://www.pcre.org&quot;&gt;PCRE&lt;/a&gt; 라이브러리를 둘러싼 래퍼 입니다. 해당 헤더 파일은 &lt;code&gt;src/core/ngx_regex.h&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6db33a5d29a1db3426f9cd3b6465fd75164f9908" translate="yes" xml:space="preserve">
          <source>The regular expressions used by nginx are compatible with those used by the Perl programming language (PCRE). To use a regular expression, the server name must start with the tilde character:</source>
          <target state="translated">nginx가 사용하는 정규식은 Perl 프로그래밍 언어 (PCRE)가 사용하는 정규식과 호환됩니다. 정규식을 사용하려면 서버 이름이 물결표 문자로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="62b17aa89715666962fe3b3bedae97550cbd545e" translate="yes" xml:space="preserve">
          <source>The replacement block content is processed in the included request context.</source>
          <target state="translated">대체 블록 컨텐츠는 포함 된 요청 컨텍스트에서 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="6242e3ba7f8bec113a9f00d4cafaf53e35d2e499" translate="yes" xml:space="preserve">
          <source>The request header field value that contains an optional port is also used to replace the client port (1.11.0). The address and port should be specified according to &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt;.</source>
          <target state="translated">선택적 포트를 포함하는 요청 헤더 필드 값은 클라이언트 포트 (1.11.0)를 대체하는 데에도 사용됩니다. 주소와 포트는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt; 에 따라 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="afb187accbb189551264f22c2669bea07d82ef8c" translate="yes" xml:space="preserve">
          <source>The rest of a line after the &lt;code&gt;#&lt;/code&gt; sign is considered a comment.</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 기호 뒤의 나머지 줄 은 주석으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="07e23067c711c636c70306a7338df2ca88f1a4f1" translate="yes" xml:space="preserve">
          <source>The resulting configuration of a proxy server will look like this:</source>
          <target state="translated">프록시 서버의 결과 구성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cbe76fb0da6a84890aee9f45b7b6dbbf08a4eb8e" translate="yes" xml:space="preserve">
          <source>The resulting configuration of the &lt;code&gt;server&lt;/code&gt; block should look like this:</source>
          <target state="translated">&lt;code&gt;server&lt;/code&gt; 블록 의 결과 구성 은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="cfc4865a29f3326c16c078b953a645c7f528c154" translate="yes" xml:space="preserve">
          <source>The resulting file should be used in the &lt;a href=&quot;ngx_http_ssl_module#ssl_certificate&quot;&gt;ssl_certificate&lt;/a&gt; directive:</source>
          <target state="translated">결과 파일은 &lt;a href=&quot;ngx_http_ssl_module#ssl_certificate&quot;&gt;ssl_certificate&lt;/a&gt; 지시문 에서 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="26d800ecc0eed5f572ec436cca3f02faa89abafa" translate="yes" xml:space="preserve">
          <source>The resulting value can contain text, variable (0.9.0), and their combination (1.11.0).</source>
          <target state="translated">결과 값은 텍스트, 변수 (0.9.0) 및 그 조합 (1.11.0)을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e66ce69c4bbcc394dcac98dbbee6bb8fb9dc173" translate="yes" xml:space="preserve">
          <source>The resulting value can contain text, variable, and their combination.</source>
          <target state="translated">결과 값은 텍스트, 변수 및 그 조합을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45b96d54a3bc9ff9b0ab074eb822d6009d2af3b9" translate="yes" xml:space="preserve">
          <source>The rules are checked in sequence until the first match is found. In this example, access is allowed only for IPv4 networks &lt;code&gt;10.1.1.0/16&lt;/code&gt; and &lt;code&gt;192.168.1.0/24&lt;/code&gt; excluding the address &lt;code&gt;192.168.1.1&lt;/code&gt;, and for IPv6 network &lt;code&gt;2001:0db8::/32&lt;/code&gt;.</source>
          <target state="translated">첫 번째 일치 항목을 찾을 때까지 규칙을 순서대로 확인합니다. 이 예에서는 주소 &lt;code&gt;192.168.1.1&lt;/code&gt; 을 제외한 IPv4 네트워크 &lt;code&gt;10.1.1.0/16&lt;/code&gt; 및 &lt;code&gt;192.168.1.0/24&lt;/code&gt; 및 IPv6 네트워크 &lt;code&gt;2001:0db8::/32&lt;/code&gt; 에만 액세스가 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="21bbfca04922a786dbd8e3b3f21fe43f77b8996f" translate="yes" xml:space="preserve">
          <source>The rules are checked in sequence until the first match is found. In this example, access is allowed only for IPv4 networks &lt;code&gt;10.1.1.0/16&lt;/code&gt; and &lt;code&gt;192.168.1.0/24&lt;/code&gt; excluding the address &lt;code&gt;192.168.1.1&lt;/code&gt;, and for IPv6 network &lt;code&gt;2001:0db8::/32&lt;/code&gt;. In case of a lot of rules, the use of the &lt;a href=&quot;ngx_http_geo_module&quot;&gt;ngx_http_geo_module&lt;/a&gt; module variables is preferable.</source>
          <target state="translated">첫 번째 일치 항목을 찾을 때까지 규칙을 순서대로 확인합니다. 이 예에서는 주소 &lt;code&gt;192.168.1.1&lt;/code&gt; 을 제외한 IPv4 네트워크 &lt;code&gt;10.1.1.0/16&lt;/code&gt; 및 &lt;code&gt;192.168.1.0/24&lt;/code&gt; 및 IPv6 네트워크 &lt;code&gt;2001:0db8::/32&lt;/code&gt; 에만 액세스가 허용됩니다 . 규칙이 많은 경우 &lt;a href=&quot;ngx_http_geo_module&quot;&gt;ngx_http_geo_module&lt;/a&gt; 모듈 변수를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8ddfac114aad681100127352e777802dc1e63179" translate="yes" xml:space="preserve">
          <source>The second parameter determines the &lt;code&gt;&lt;i&gt;level&lt;/i&gt;&lt;/code&gt; of logging, and can be one of the following: &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;notice&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;crit&lt;/code&gt;, &lt;code&gt;alert&lt;/code&gt;, or &lt;code&gt;emerg&lt;/code&gt;. Log levels above are listed in the order of increasing severity. Setting a certain log level will cause all messages of the specified and more severe log levels to be logged. For example, the default level &lt;code&gt;error&lt;/code&gt; will cause &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;crit&lt;/code&gt;, &lt;code&gt;alert&lt;/code&gt;, and &lt;code&gt;emerg&lt;/code&gt; messages to be logged. If this parameter is omitted then &lt;code&gt;error&lt;/code&gt; is used.</source>
          <target state="translated">두 번째 매개 변수 는 로깅 &lt;code&gt;&lt;i&gt;level&lt;/i&gt;&lt;/code&gt; 을 결정하며 &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;notice&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;crit&lt;/code&gt; , &lt;code&gt;alert&lt;/code&gt; 또는 &lt;code&gt;emerg&lt;/code&gt; 중 하나 일 수 있습니다 . 위의 로그 수준은 심각도 증가 순서대로 나열됩니다. 특정 로그 수준을 설정하면 지정된보다 심각한 로그 수준의 모든 메시지가 기록됩니다. 예를 들어, 기본 수준 &lt;code&gt;error&lt;/code&gt; 는 &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;crit&lt;/code&gt; , &lt;code&gt;alert&lt;/code&gt; 및 &lt;code&gt;emerg&lt;/code&gt; 메시지를 기록합니다. 이 매개 변수를 생략하면 &lt;code&gt;error&lt;/code&gt; 사용.</target>
        </trans-unit>
        <trans-unit id="35b3168a636518c91e53084789d8c53321d5bcba" translate="yes" xml:space="preserve">
          <source>The server certificate is a public entity. It is sent to every client that connects to the server. The private key is a secure entity and should be stored in a file with restricted access, however, it must be readable by nginx&amp;rsquo;s master process. The private key may alternately be stored in the same file as the certificate:</source>
          <target state="translated">서버 인증서는 공개 엔터티입니다. 서버에 연결된 모든 클라이언트에 전송됩니다. 개인 키는 보안 개체이며 액세스가 제한된 파일에 저장해야하지만 nginx의 마스터 프로세스에서 읽을 수 있어야합니다. 개인 키는 인증서와 동일한 파일에 교대로 저장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7595367bcc65c7d14996264b81aebae67fcf4166" translate="yes" xml:space="preserve">
          <source>The set of core modules includes &lt;code&gt;ngx_core_module&lt;/code&gt;, &lt;code&gt;ngx_errlog_module&lt;/code&gt;, &lt;code&gt;ngx_regex_module&lt;/code&gt;, &lt;code&gt;ngx_thread_pool_module&lt;/code&gt; and &lt;code&gt;ngx_openssl_module&lt;/code&gt; modules. The HTTP module, the stream module, the mail module and event modules are core modules too. The context of a core module is defined as:</source>
          <target state="translated">핵심 모듈 세트에는 &lt;code&gt;ngx_core_module&lt;/code&gt; , &lt;code&gt;ngx_errlog_module&lt;/code&gt; , &lt;code&gt;ngx_regex_module&lt;/code&gt; , &lt;code&gt;ngx_thread_pool_module&lt;/code&gt; 및 &lt;code&gt;ngx_openssl_module&lt;/code&gt; 모듈이 포함됩니다. HTTP 모듈, 스트림 모듈, 메일 모듈 및 이벤트 모듈도 핵심 모듈입니다. 핵심 모듈의 컨텍스트는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3d981f2335a0513c3f6dca0b1a007508c68fd73e" translate="yes" xml:space="preserve">
          <source>The shared SSL session cache has been supported since 0.5.6.</source>
          <target state="translated">공유 SSL 세션 캐시는 0.5.6부터 지원되었습니다.</target>
        </trans-unit>
        <trans-unit id="c1f28d0a4bcef2686e672530d62b4cba9d30a9b3" translate="yes" xml:space="preserve">
          <source>The shared memory entry structure &lt;code&gt;ngx_shm_zone_t&lt;/code&gt; has the following fields:</source>
          <target state="translated">공유 메모리 입력 구조 &lt;code&gt;ngx_shm_zone_t&lt;/code&gt; 에는 다음 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b630c15074dbfe235ea3c19e449e48a089b66a3" translate="yes" xml:space="preserve">
          <source>The simple monitoring page is shipped with this distribution, accessible as &amp;ldquo;&lt;code&gt;/status.html&lt;/code&gt;&amp;rdquo; in the default configuration. It requires the locations &amp;ldquo;&lt;code&gt;/status&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;/status.html&lt;/code&gt;&amp;rdquo; to be configured as shown above.</source>
          <target state="translated">단순 모니터링 페이지는이 배포와 함께 제공되며 기본 구성에서 &quot; &lt;code&gt;/status.html&lt;/code&gt; &quot; 로 액세스 할 수 있습니다. 위와 같이 &quot; &lt;code&gt;/status&lt;/code&gt; &quot;및 &quot; &lt;code&gt;/status.html&lt;/code&gt; &quot;위치를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="21917d98275aa1c820a13b604f12d5987e81bb97" translate="yes" xml:space="preserve">
          <source>The simplest configuration for load balancing with nginx may look like the following:</source>
          <target state="translated">nginx로로드 밸런싱을위한 가장 간단한 구성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="37d8fcab4810cf4db5ac9994e14bf87397dbadbe" translate="yes" xml:space="preserve">
          <source>The special &amp;ldquo;cache manager&amp;rdquo; process monitors the maximum cache size set by the &lt;code&gt;max_size&lt;/code&gt; parameter. When this size is exceeded, it removes the least recently used data. The data is removed in iterations configured by &lt;code&gt;manager_files&lt;/code&gt;, &lt;code&gt;manager_threshold&lt;/code&gt;, and &lt;code&gt;manager_sleep&lt;/code&gt; parameters (1.11.5). During one iteration no more than &lt;code&gt;manager_files&lt;/code&gt; items are deleted (by default, 100). The duration of one iteration is limited by the &lt;code&gt;manager_threshold&lt;/code&gt; parameter (by default, 200 milliseconds). Between iterations, a pause configured by the &lt;code&gt;manager_sleep&lt;/code&gt; parameter (by default, 50 milliseconds) is made.</source>
          <target state="translated">특수한 &quot;캐시 관리자&quot;프로세스는 &lt;code&gt;max_size&lt;/code&gt; 매개 변수로 설정된 최대 캐시 크기를 모니터합니다 . 이 크기를 초과하면 가장 최근에 사용한 데이터가 제거됩니다. &lt;code&gt;manager_files&lt;/code&gt; , &lt;code&gt;manager_threshold&lt;/code&gt; 및 &lt;code&gt;manager_sleep&lt;/code&gt; 매개 변수 (1.11.5)로 구성된 반복에서 데이터가 제거됩니다 . 한 번의 반복 동안 &lt;code&gt;manager_files&lt;/code&gt; 항목 만 삭제됩니다 (기본적으로 100). 한 번의 반복 기간은 &lt;code&gt;manager_threshold&lt;/code&gt; 매개 변수 (기본적으로 200 밀리 초)에 의해 제한됩니다 . 반복 사이에 &lt;code&gt;manager_sleep&lt;/code&gt; 매개 변수 (기본적으로 50 밀리 초)로 구성된 일시 정지 가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="b27c05cc17559dd92f58431a041b64faf802f85c" translate="yes" xml:space="preserve">
          <source>The special form &lt;code&gt;.example.org&lt;/code&gt; has been supported since 0.3.18.</source>
          <target state="translated">특수 형식 &lt;code&gt;.example.org&lt;/code&gt; 는 0.3.18부터 지원되었습니다.</target>
        </trans-unit>
        <trans-unit id="454f8680971b9b8ce169d598c62a88d22510d74f" translate="yes" xml:space="preserve">
          <source>The special mask &amp;ldquo;&lt;code&gt;msie6&lt;/code&gt;&amp;rdquo; (0.7.12) corresponds to the regular expression &amp;ldquo;&lt;code&gt;MSIE [4-6]\.&lt;/code&gt;&amp;rdquo;, but works faster. Starting from version 0.8.11, &amp;ldquo;&lt;code&gt;MSIE 6.0; ... SV1&lt;/code&gt;&amp;rdquo; is excluded from this mask.</source>
          <target state="translated">특수 마스크 &quot; &lt;code&gt;msie6&lt;/code&gt; &quot;(0.7.12)은 정규식 &quot; &lt;code&gt;MSIE [4-6]\.&lt;/code&gt; &amp;rdquo;이지만 더 빠르게 작동합니다. 버전 0.8.11부터&amp;ldquo; &lt;code&gt;MSIE 6.0; ... SV1&lt;/code&gt; 이 마스크에서 SV1 &amp;rdquo;이 제외되었습니다.</target>
        </trans-unit>
        <trans-unit id="f0532c64a9188361b12f2c6c6b35778e69170afc" translate="yes" xml:space="preserve">
          <source>The special server name &amp;ldquo;&lt;code&gt;$hostname&lt;/code&gt;&amp;rdquo; has been supported since 0.9.4.</source>
          <target state="translated">특수 서버 이름 &quot; &lt;code&gt;$hostname&lt;/code&gt; &quot;은 0.9.4부터 지원되었습니다.</target>
        </trans-unit>
        <trans-unit id="f97f91b275932f356968e872b23c08c34a306ac3" translate="yes" xml:space="preserve">
          <source>The special value &lt;code&gt;auto&lt;/code&gt; (1.11.0) instructs nginx to use a list built into the OpenSSL library when using OpenSSL 1.0.2 or higher, or &lt;code&gt;prime256v1&lt;/code&gt; with older versions.</source>
          <target state="translated">특수 값 &lt;code&gt;auto&lt;/code&gt; (1.11.0)는 OpenSSL 1.0.2 이상 또는 이전 버전의 &lt;code&gt;prime256v1&lt;/code&gt; 을 사용할 때 nginx에 OpenSSL 라이브러리에 내장 된 목록을 사용하도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="92a6ad706d0bd2b8a119bee1dc077808aecfab40" translate="yes" xml:space="preserve">
          <source>The special value &lt;code&gt;auto&lt;/code&gt; (1.9.10) allows binding worker processes automatically to available CPUs:</source>
          <target state="translated">특수 값 &lt;code&gt;auto&lt;/code&gt; (1.9.10)를 사용하면 작업자 프로세스를 사용 가능한 CPU에 자동으로 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fa787c986e92e0ea5a0eb1d94a2461dd7b7ee03" translate="yes" xml:space="preserve">
          <source>The special value &lt;code&gt;off&lt;/code&gt; cancels the effect of the &lt;code&gt;auth_jwt&lt;/code&gt; directive inherited from the previous configuration level.</source>
          <target state="translated">특수 값 &lt;code&gt;off&lt;/code&gt; 는 이전 구성 수준에서 상속 된 &lt;code&gt;auth_jwt&lt;/code&gt; 지시문 의 효과를 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="a3a6420b109da342287d25610332b0e5c045abc5" translate="yes" xml:space="preserve">
          <source>The special value &lt;code&gt;off&lt;/code&gt; disables resolving.</source>
          <target state="translated">특수 값 &lt;code&gt;off&lt;/code&gt; 는 분석 을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="394ac3fb16aa05b54f97c2c53d128bb761be1c10" translate="yes" xml:space="preserve">
          <source>The special value &lt;code&gt;unlisted&lt;/code&gt; specifies to consider a browser as modern if it was not listed by the &lt;code&gt;modern_browser&lt;/code&gt; and &lt;a href=&quot;#ancient_browser&quot;&gt;ancient_browser&lt;/a&gt; directives. Otherwise such a browser is considered ancient. If a request does not provide the &amp;ldquo;User-Agent&amp;rdquo; field in the header, the browser is treated as not being listed.</source>
          <target state="translated">&lt;code&gt;unlisted&lt;/code&gt; 특수 값 은 &lt;code&gt;modern_browser&lt;/code&gt; 및 &lt;a href=&quot;#ancient_browser&quot;&gt;ancient_browser&lt;/a&gt; 지시문 에 의해 브라우저가 나열되지 않은 경우 브라우저를 최신으로 간주하도록 지정합니다. 그렇지 않으면 그러한 브라우저는 고대로 간주됩니다. 요청이 헤더에 &quot;User-Agent&quot;필드를 제공하지 않으면 브라우저가 나열되지 않은 것으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="a1494fbbabff87e4a9b2b75b2c908ff825b85df8" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;&lt;i&gt;condition&lt;/i&gt;&lt;/code&gt; is evaluated. If true, this module directives specified inside the braces are executed, and the request is assigned the configuration inside the &lt;code&gt;if&lt;/code&gt; directive. Configurations inside the &lt;code&gt;if&lt;/code&gt; directives are inherited from the previous configuration level.</source>
          <target state="translated">지정된 &lt;code&gt;&lt;i&gt;condition&lt;/i&gt;&lt;/code&gt; 이 평가됩니다. true이면 중괄호 안에 지정된이 모듈 지시문이 실행되고 요청에 &lt;code&gt;if&lt;/code&gt; 지시문 내의 구성이 할당됩니다 . &lt;code&gt;if&lt;/code&gt; 지시문 내의 구성 은 이전 구성 수준에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="905cf512ca03be882868ca30f870dd291cde32ff" translate="yes" xml:space="preserve">
          <source>The state is currently limited to the list of servers with their parameters. The file is read when parsing the configuration and is updated each time the upstream configuration is &lt;a href=&quot;../http/ngx_http_api_module#stream_upstreams_stream_upstream_name_servers_&quot;&gt;changed&lt;/a&gt;. Changing the file content directly should be avoided. The directive cannot be used along with the &lt;a href=&quot;#server&quot;&gt;server&lt;/a&gt; directive.</source>
          <target state="translated">상태는 현재 매개 변수가있는 서버 목록으로 제한됩니다. 구성을 구문 분석 할 때 파일을 읽고 업스트림 구성이 &lt;a href=&quot;../http/ngx_http_api_module#stream_upstreams_stream_upstream_name_servers_&quot;&gt;변경&lt;/a&gt; 될 때마다 업데이트됩니다 . 파일 내용을 직접 변경하지 마십시오. 지시문은 &lt;a href=&quot;#server&quot;&gt;서버&lt;/a&gt; 지시문 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="db4026c473bcec9c69ca6e5d23630eec0f8dd6fe" translate="yes" xml:space="preserve">
          <source>The state is currently limited to the list of servers with their parameters. The file is read when parsing the configuration and is updated each time the upstream configuration is &lt;a href=&quot;ngx_http_api_module#http_upstreams_http_upstream_name_servers_&quot;&gt;changed&lt;/a&gt;. Changing the file content directly should be avoided. The directive cannot be used along with the &lt;a href=&quot;#server&quot;&gt;server&lt;/a&gt; directive.</source>
          <target state="translated">상태는 현재 매개 변수가있는 서버 목록으로 제한됩니다. 구성을 구문 분석 할 때 파일을 읽고 업스트림 구성이 &lt;a href=&quot;ngx_http_api_module#http_upstreams_http_upstream_name_servers_&quot;&gt;변경&lt;/a&gt; 될 때마다 업데이트됩니다 . 파일 내용을 직접 변경하지 마십시오. 지시문은 &lt;a href=&quot;#server&quot;&gt;서버&lt;/a&gt; 지시문 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="15946504de294baa85129a0a4087b3f18326dca8" translate="yes" xml:space="preserve">
          <source>The status information will be accessible from the surrounding location. Access to this location should be &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;limited&lt;/a&gt;.</source>
          <target state="translated">상태 정보는 주변 위치에서 액세스 할 수 있습니다. 이 위치에 대한 액세스는 &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;제한&lt;/a&gt; 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="654733a7ad339690692f88af2b94b5e2c2c0280e" translate="yes" xml:space="preserve">
          <source>The status of a link check. The specific value depends on the selected operation mode.</source>
          <target state="translated">링크 확인 상태입니다. 특정 값은 선택한 작동 모드에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="52d82419f626878340056fef38d5a81fe06b742b" translate="yes" xml:space="preserve">
          <source>The stream session object is available only in the &lt;a href=&quot;../stream/ngx_stream_js_module&quot;&gt;ngx_stream_js_module&lt;/a&gt; module. All string properties of the object are &lt;a href=&quot;#string&quot;&gt;byte strings&lt;/a&gt;.</source>
          <target state="translated">스트림 세션 객체는 &lt;a href=&quot;../stream/ngx_stream_js_module&quot;&gt;ngx_stream_js_module&lt;/a&gt; 모듈 에서만 사용할 수 있습니다 . 객체의 모든 문자열 속성은 &lt;a href=&quot;#string&quot;&gt;바이트 문자열&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bb6482135f17ac2c9ef0a3dc8cf24b1ff9b0d9d6" translate="yes" xml:space="preserve">
          <source>The string operations in nginx are declared in &lt;code&gt;src/core/ngx_string.h&lt;/code&gt; Some of them are wrappers around standard C functions:</source>
          <target state="translated">nginx의 문자열 연산은 &lt;code&gt;src/core/ngx_string.h&lt;/code&gt; 에 선언되어 있습니다. 그중 일부는 표준 C 함수를 감싸는 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="dc689ff42827e45c6d69755b552e93bd397b6a6f" translate="yes" xml:space="preserve">
          <source>The structure has the following fields:</source>
          <target state="translated">구조에는 다음과 같은 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="be6d63ddbef45704e77aae7177685cf6f8060aae" translate="yes" xml:space="preserve">
          <source>The synchronization status of a node is available via the &lt;a href=&quot;../http/ngx_http_api_module#stream_zone_sync_&quot;&gt;/stream/zone_sync/&lt;/a&gt; endpoint of the API which returns the &lt;a href=&quot;../http/ngx_http_api_module#def_nginx_stream_zone_sync&quot;&gt;following&lt;/a&gt; metrics.</source>
          <target state="translated">노드의 동기화 상태 는 API 의 &lt;a href=&quot;../http/ngx_http_api_module#stream_zone_sync_&quot;&gt;/ stream / zone_sync /&lt;/a&gt; 엔드 포인트를 통해 사용 가능 하며 &lt;a href=&quot;../http/ngx_http_api_module#def_nginx_stream_zone_sync&quot;&gt;다음&lt;/a&gt; 메트릭 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="adb1e314dccd1096548f51875a205c4b50967305" translate="yes" xml:space="preserve">
          <source>The time (in milliseconds since Epoch) when the server became &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;checking&lt;/code&gt;&amp;rdquo;, or &amp;ldquo;&lt;code&gt;unhealthy&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">서버가 &quot;이되었다 (신기원 이후 밀리 초) 시간 &lt;code&gt;unavail&lt;/code&gt; &quot;, &quot; &lt;code&gt;checking&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;unhealthy&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="57cce52f7baff89f551d9f65c081982e7545c724" translate="yes" xml:space="preserve">
          <source>The time (in milliseconds since Epoch) when the server was last selected to process a connection.</source>
          <target state="translated">연결을 처리하기 위해 서버를 마지막으로 선택한 시간 (Epoch 이후 밀리 초)</target>
        </trans-unit>
        <trans-unit id="1ccde5339f64301e4686ecc748f92a270399cfb8" translate="yes" xml:space="preserve">
          <source>The time (in milliseconds since Epoch) when the server was last selected to process a request (1.7.5).</source>
          <target state="translated">서버가 요청을 처리하기 위해 마지막으로 선택된 시간 (1.7.5) (1.7.5)</target>
        </trans-unit>
        <trans-unit id="98ad277b42a3b4f20a1a4c516061c2b2139bf9d3" translate="yes" xml:space="preserve">
          <source>The time in the &amp;ldquo;Expires&amp;rdquo; field is computed as a sum of the current time and &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; specified in the directive. If the &lt;code&gt;modified&lt;/code&gt; parameter is used (0.7.0, 0.6.32) then the time is computed as a sum of the file&amp;rsquo;s modification time and the &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; specified in the directive.</source>
          <target state="translated">&quot;만료&quot;필드의 &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; 은 지시문에 지정된 현재 시간과 &lt;i&gt;시간&lt;/i&gt; 의 합계로 계산됩니다 . 경우] &lt;code&gt;modified&lt;/code&gt; 파라미터 (0.7.0, 0.6.32) 사용되는 다음 시간은 파일의 수정 시간의 합과 같이 계산되는 &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; 지시자에 지정된.</target>
        </trans-unit>
        <trans-unit id="42c6df644d49b001204c926b6c4074bdd041d117" translate="yes" xml:space="preserve">
          <source>The time when the server became &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;checking&lt;/code&gt;&amp;rdquo;, or &amp;ldquo;&lt;code&gt;unhealthy&lt;/code&gt;&amp;rdquo;, in the ISO 8601 format with millisecond resolution.</source>
          <target state="translated">밀리 초 해상도의 ISO 8601 형식에서 서버가 &quot;사용 &lt;code&gt;unavail&lt;/code&gt; &quot;, &quot; &lt;code&gt;checking&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;unhealthy&lt;/code&gt; &quot;상태가 된 시간입니다.</target>
        </trans-unit>
        <trans-unit id="b209f34f5bd9f8084b8e0a6dc27871e89802f2d6" translate="yes" xml:space="preserve">
          <source>The time when the server was last selected to process a connection, in the ISO 8601 format with millisecond resolution.</source>
          <target state="translated">연결을 처리하기 위해 서버가 마지막으로 선택된 시간 (밀리 초 해상도의 ISO 8601 형식).</target>
        </trans-unit>
        <trans-unit id="dc7c116988e1e944408c19d849d9b5b02ccdce97" translate="yes" xml:space="preserve">
          <source>The time when the server was last selected to process a request, in the ISO 8601 format with millisecond resolution.</source>
          <target state="translated">요청을 처리하기 위해 서버가 마지막으로 선택된 시간 (밀리 초 해상도의 ISO 8601 형식).</target>
        </trans-unit>
        <trans-unit id="970df91253d592c02d9f85386b8ee88d3970db92" translate="yes" xml:space="preserve">
          <source>The total number of &lt;a href=&quot;../stream/ngx_stream_upstream_hc_module#health_check&quot;&gt;health check&lt;/a&gt; requests made.</source>
          <target state="translated">작성된 총 &lt;a href=&quot;../stream/ngx_stream_upstream_hc_module#health_check&quot;&gt;상태 점검&lt;/a&gt; 요청 수입니다 .</target>
        </trans-unit>
        <trans-unit id="d26441535300ecaaf7183e17e55f5f1c92cb99cf" translate="yes" xml:space="preserve">
          <source>The total number of &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_valid&quot;&gt;valid&lt;/a&gt; responses read from the cache.</source>
          <target state="translated">캐시에서 읽은 총 &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_valid&quot;&gt;유효&lt;/a&gt; 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="5537695b29d7946af74c73bebc53709402ac1b52" translate="yes" xml:space="preserve">
          <source>The total number of &lt;a href=&quot;ngx_http_upstream_hc_module#health_check&quot;&gt;health check&lt;/a&gt; requests made.</source>
          <target state="translated">작성된 총 &lt;a href=&quot;ngx_http_upstream_hc_module#health_check&quot;&gt;상태 점검&lt;/a&gt; 요청 수입니다 .</target>
        </trans-unit>
        <trans-unit id="a3e0029035362a2eca74ec4de587f4370b213a96" translate="yes" xml:space="preserve">
          <source>The total number of abnormally terminated and respawned child processes.</source>
          <target state="translated">비정상적으로 종료되고 다시 생성 된 하위 프로세스의 총 수</target>
        </trans-unit>
        <trans-unit id="66ed08a0fa4c31a8a49eccf31fe9a15fa62dd7ca" translate="yes" xml:space="preserve">
          <source>The total number of accepted client connections.</source>
          <target state="translated">허용 된 총 클라이언트 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="cb79949ce3d05595754bec6ad4c3a65f0946d67d" translate="yes" xml:space="preserve">
          <source>The total number of attempts to allocate memory of specified size.</source>
          <target state="translated">지정된 크기의 메모리를 할당하려는 총 시도 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="265fb2974cbf1025e05deb9e923761a414fad987" translate="yes" xml:space="preserve">
          <source>The total number of bytes read from the cache.</source>
          <target state="translated">캐시에서 읽은 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="2bd4aede9bc7ffec618a888a2b3361f6d5774801" translate="yes" xml:space="preserve">
          <source>The total number of bytes read from the proxied server.</source>
          <target state="translated">프록시 서버에서 읽은 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="273e01d3c04745e1f37c3eefc5f6c75e4d9e44e0" translate="yes" xml:space="preserve">
          <source>The total number of bytes received from clients.</source>
          <target state="translated">클라이언트로부터받은 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="fef272ab52604226666cd341651a1ba7842b1058" translate="yes" xml:space="preserve">
          <source>The total number of bytes received from this server.</source>
          <target state="translated">이 서버에서받은 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="ccad726008a983431caf272d65c5ba29a6988736" translate="yes" xml:space="preserve">
          <source>The total number of bytes sent to clients.</source>
          <target state="translated">클라이언트에 전송 된 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="2f20e4d60e654ca2f45096a8ab59d46508bbb62d" translate="yes" xml:space="preserve">
          <source>The total number of bytes sent to this server.</source>
          <target state="translated">이 서버로 전송 된 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="0204a3f52b7f03b2eec45d2d981f8ece6ae0398e" translate="yes" xml:space="preserve">
          <source>The total number of bytes written to the cache.</source>
          <target state="translated">캐시에 쓴 총 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="a16750f87b83f1860091ec82fd6a57c11c5eddc2" translate="yes" xml:space="preserve">
          <source>The total number of client connections forwarded to this server.</source>
          <target state="translated">이 서버로 전달 된 총 클라이언트 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="6043793bd61cbfcfd80f07e61500d9b43dc3ce95" translate="yes" xml:space="preserve">
          <source>The total number of client requests forwarded to this server.</source>
          <target state="translated">이 서버로 전달 된 총 클라이언트 요청 수입니다.</target>
        </trans-unit>
        <trans-unit id="cd4cdd4e829d54042afa37203039463beb944c1b" translate="yes" xml:space="preserve">
          <source>The total number of client requests received from clients.</source>
          <target state="translated">클라이언트로부터받은 총 클라이언트 요청 수입니다.</target>
        </trans-unit>
        <trans-unit id="cc4b264f45b6eba848986b1b489f915e3589cdab" translate="yes" xml:space="preserve">
          <source>The total number of client requests.</source>
          <target state="translated">총 클라이언트 요청 수</target>
        </trans-unit>
        <trans-unit id="45e8d3cacabe847a66828e84ee1ec52797cef94b" translate="yes" xml:space="preserve">
          <source>The total number of completed client sessions.</source>
          <target state="translated">완료된 총 클라이언트 세션 수입니다.</target>
        </trans-unit>
        <trans-unit id="d451e1b77183eb28fe42cd6b949108c5110b7471" translate="yes" xml:space="preserve">
          <source>The total number of completed sessions, and the number of sessions completed with status codes &amp;ldquo;&lt;code&gt;2xx&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;4xx&lt;/code&gt;&amp;rdquo;, or &amp;ldquo;&lt;code&gt;5xx&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">완료된 총 세션 수 및 상태 코드 &quot; &lt;code&gt;2xx&lt;/code&gt; &quot;, &quot; &lt;code&gt;4xx&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;5xx&lt;/code&gt; &quot; 로 완료된 세션 수</target>
        </trans-unit>
        <trans-unit id="feeba683a80e29217c91fcd52fe9d6b314c4c665" translate="yes" xml:space="preserve">
          <source>The total number of configuration &lt;a href=&quot;../control#reconfiguration&quot;&gt;reloads&lt;/a&gt;.</source>
          <target state="translated">구성의 총 수 &lt;a href=&quot;../control#reconfiguration&quot;&gt;를 다시로드&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0cf1204e06607507200c78ab0897f8d379a17a30" translate="yes" xml:space="preserve">
          <source>The total number of connections accepted from clients.</source>
          <target state="translated">클라이언트가 수락 한 총 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="2b875c25f11a56e6edac4255e665a9eb2898e29c" translate="yes" xml:space="preserve">
          <source>The total number of connections completed without creating a session.</source>
          <target state="translated">세션을 만들지 않고 완료된 총 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="3b98a3b381a7f2238a6139b188fe2c0261b7a700" translate="yes" xml:space="preserve">
          <source>The total number of dropped client connections.</source>
          <target state="translated">삭제 된 총 클라이언트 연결 수입니다.</target>
        </trans-unit>
        <trans-unit id="5d0bb2fc207063095ac92e1bb8549b66550ab7bc" translate="yes" xml:space="preserve">
          <source>The total number of expired and revalidated responses read from the cache (see &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_revalidate&quot;&gt;proxy_cache_revalidate&lt;/a&gt; and other &amp;ldquo;&lt;code&gt;*_cache_revalidate&lt;/code&gt;&amp;rdquo; directives.</source>
          <target state="translated">캐시에서 읽은 만료 및 재확인 된 총 응답 수 ( &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_revalidate&quot;&gt;proxy_cache_revalidate&lt;/a&gt; 및 기타&amp;ldquo; &lt;code&gt;*_cache_revalidate&lt;/code&gt; &amp;rdquo;지시문 참조)</target>
        </trans-unit>
        <trans-unit id="a342c6d5241f77550c09696a904bd2f5dce16387" translate="yes" xml:space="preserve">
          <source>The total number of expired responses not taken from the cache.</source>
          <target state="translated">캐시에서 가져 오지 않은 총 만료 된 응답 수입니다.</target>
        </trans-unit>
        <trans-unit id="0ae28c6087dd13605fac5126b3bba98cf556e2cc" translate="yes" xml:space="preserve">
          <source>The total number of expired responses read from the cache (see &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_use_stale&quot;&gt;proxy_cache_use_stale&lt;/a&gt; and other &amp;ldquo;&lt;code&gt;*_cache_use_stale&lt;/code&gt;&amp;rdquo; directives).</source>
          <target state="translated">캐시에서 읽은 만료 된 총 응답 수입니다 ( &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_use_stale&quot;&gt;proxy_cache_use_stale&lt;/a&gt; 및 기타&amp;ldquo; &lt;code&gt;*_cache_use_stale&lt;/code&gt; &amp;rdquo;지시문 참조).</target>
        </trans-unit>
        <trans-unit id="c1e37238e384e1828b1903c98f582dc65cc79518" translate="yes" xml:space="preserve">
          <source>The total number of expired responses read from the cache while responses were being updated (see &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_use_stale_updating&quot;&gt;proxy_cache_use_stale&lt;/a&gt; and other &amp;ldquo;&lt;code&gt;*_cache_use_stale&lt;/code&gt;&amp;rdquo; directives).</source>
          <target state="translated">응답이 업데이트되는 동안 캐시에서 읽은 만료 된 총 응답 수입니다 ( &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_use_stale_updating&quot;&gt;proxy_cache_use_stale&lt;/a&gt; 및 기타&amp;ldquo; &lt;code&gt;*_cache_use_stale&lt;/code&gt; &amp;rdquo;지시문 참조).</target>
        </trans-unit>
        <trans-unit id="b2a0ffd23142fcfefd9ff540503fd55ee7cc6ece" translate="yes" xml:space="preserve">
          <source>The total number of failed SSL handshakes.</source>
          <target state="translated">실패한 총 SSL 핸드 셰이크 수입니다.</target>
        </trans-unit>
        <trans-unit id="fda191c8753664173e2e8bd67ddae9b4a685824a" translate="yes" xml:space="preserve">
          <source>The total number of handled connections. Generally, the parameter value is the same as &lt;code&gt;accepts&lt;/code&gt; unless some resource limits have been reached (for example, the &lt;a href=&quot;../ngx_core_module#worker_connections&quot;&gt;worker_connections&lt;/a&gt; limit).</source>
          <target state="translated">처리 된 총 연결 수입니다. 일반적으로, 파라미터 값과 동일 &lt;code&gt;accepts&lt;/code&gt; 일부 자원 한계에 도달하지 않은 경우 (예를 들어, &lt;a href=&quot;../ngx_core_module#worker_connections&quot;&gt;worker_connections가&lt;/a&gt; 제한).</target>
        </trans-unit>
        <trans-unit id="e60d93c347172cd27daebed1dcd4adb19dbebf8b" translate="yes" xml:space="preserve">
          <source>The total number of records stored in the shared memory zone.</source>
          <target state="translated">공유 메모리 영역에 저장된 총 레코드 수입니다.</target>
        </trans-unit>
        <trans-unit id="7bc45085400066f6645def2b115b9517c3485187" translate="yes" xml:space="preserve">
          <source>The total number of requests completed without sending a response.</source>
          <target state="translated">응답을 보내지 않고 완료된 총 요청 수입니다.</target>
        </trans-unit>
        <trans-unit id="b130614aba79c2cd89c788a9cb5ee88927212a2e" translate="yes" xml:space="preserve">
          <source>The total number of requests rejected due to the queue overflow.</source>
          <target state="translated">큐 오버 플로우로 인해 거부 된 총 요청 수입니다.</target>
        </trans-unit>
        <trans-unit id="e999e23f0c25cfdbc1f91c807ce06f9d51d21ea2" translate="yes" xml:space="preserve">
          <source>The total number of responses not found in the cache.</source>
          <target state="translated">캐시에서 찾을 수없는 총 응답 수입니다.</target>
        </trans-unit>
        <trans-unit id="341011b1bf9b0a012fb2f44b66b9721e8734c9b6" translate="yes" xml:space="preserve">
          <source>The total number of responses not looked up in the cache due to the &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_bypass&quot;&gt;proxy_cache_bypass&lt;/a&gt; and other &amp;ldquo;&lt;code&gt;*_cache_bypass&lt;/code&gt;&amp;rdquo; directives.</source>
          <target state="translated">&lt;a href=&quot;ngx_http_proxy_module#proxy_cache_bypass&quot;&gt;proxy_cache_bypass&lt;/a&gt; 및 기타 &quot; &lt;code&gt;*_cache_bypass&lt;/code&gt; &quot;지시문 으로 인해 캐시에서 찾지 못한 총 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="5c73d942f67a2051ffa6d20c2bb930270ab6f013" translate="yes" xml:space="preserve">
          <source>The total number of responses not taken from the cache (misses, expires, or bypasses due to &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_bypass&quot;&gt;proxy_cache_bypass&lt;/a&gt; and the likes).</source>
          <target state="translated">캐시에서 가져 오지 않은 총 응답 수 ( &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_bypass&quot;&gt;proxy_cache_bypass&lt;/a&gt; 등 으로 인해 누락, 만료 또는 우회 )</target>
        </trans-unit>
        <trans-unit id="ca34af57963d1924c6dd4061897ecf8830567ca4" translate="yes" xml:space="preserve">
          <source>The total number of responses obtained from this server.</source>
          <target state="translated">이 서버에서 얻은 총 응답 수입니다.</target>
        </trans-unit>
        <trans-unit id="d4efcd914b60dd36a451abe8b08e306ad05d53f6" translate="yes" xml:space="preserve">
          <source>The total number of responses read from the cache (hits, or stale responses due to &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_use_stale&quot;&gt;proxy_cache_use_stale&lt;/a&gt; and the likes).</source>
          <target state="translated">캐시에서 읽은 총 응답 수 ( &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_use_stale&quot;&gt;proxy_cache_use_stale&lt;/a&gt; 등 으로 인해 적중 또는 오래된 응답 )</target>
        </trans-unit>
        <trans-unit id="7d00f90967536a2dca044db89ded65c7a8644ccb" translate="yes" xml:space="preserve">
          <source>The total number of responses sent to clients and the number of responses with status codes &amp;ldquo;&lt;code&gt;1xx&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;2xx&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;3xx&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;4xx&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;&lt;code&gt;5xx&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">클라이언트에 전송 된 총 응답 수 및 상태 코드가 &quot; &lt;code&gt;1xx&lt;/code&gt; &quot;, &quot; &lt;code&gt;2xx&lt;/code&gt; &quot;, &quot; &lt;code&gt;3xx&lt;/code&gt; &quot;, &quot; &lt;code&gt;4xx&lt;/code&gt; &quot;및 &quot; &lt;code&gt;5xx&lt;/code&gt; &quot; 인 응답 수입니다 .</target>
        </trans-unit>
        <trans-unit id="7c351af31e5f21bfb83537bae6d46a1292032538" translate="yes" xml:space="preserve">
          <source>The total number of responses sent to clients.</source>
          <target state="translated">고객에게 보낸 총 응답 수입니다.</target>
        </trans-unit>
        <trans-unit id="fa70ad2fefe00a14c0a4c5a55e5f7c3bdf113f8e" translate="yes" xml:space="preserve">
          <source>The total number of responses written to the cache.</source>
          <target state="translated">캐시에 쓴 총 응답 수입니다.</target>
        </trans-unit>
        <trans-unit id="da8b5ec6f5393d3d490f5e848878c777ed42ed26" translate="yes" xml:space="preserve">
          <source>The total number of session reuses during SSL handshake.</source>
          <target state="translated">SSL 핸드 셰이크 중 총 세션 재사용 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="be8efec9aefe2dfe9bdbfa7cdd7439f3252477cd" translate="yes" xml:space="preserve">
          <source>The total number of sessions completed with &lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;status codes&lt;/a&gt; &amp;ldquo;&lt;code&gt;2xx&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;상태 코드&lt;/a&gt; &quot; &lt;code&gt;2xx&lt;/code&gt; &quot;로 완료된 총 세션 수입니다 .</target>
        </trans-unit>
        <trans-unit id="e7aed30533458ad89ef1225747b216c4ccac2751" translate="yes" xml:space="preserve">
          <source>The total number of sessions completed with &lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;status codes&lt;/a&gt; &amp;ldquo;&lt;code&gt;4xx&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;상태 코드&lt;/a&gt; &quot; &lt;code&gt;4xx&lt;/code&gt; &quot;로 완료된 총 세션 수입니다 .</target>
        </trans-unit>
        <trans-unit id="8ccc52038ed5adaf1c5ae0152966f9c2f3b4925c" translate="yes" xml:space="preserve">
          <source>The total number of sessions completed with &lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;status codes&lt;/a&gt; &amp;ldquo;&lt;code&gt;5xx&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;../stream/ngx_stream_core_module#var_status&quot;&gt;상태 코드&lt;/a&gt; &quot; &lt;code&gt;5xx&lt;/code&gt; &quot;로 완료된 총 세션 수입니다 .</target>
        </trans-unit>
        <trans-unit id="fecb0c235b61316fefe984bd408a9e0b38c5bf13" translate="yes" xml:space="preserve">
          <source>The total number of successful SSL handshakes.</source>
          <target state="translated">성공적인 SSL 핸드 셰이크의 총 수</target>
        </trans-unit>
        <trans-unit id="21e94d8e6f2a206c32812012e9e4ee4136957715" translate="yes" xml:space="preserve">
          <source>The total number of unsuccessful attempts to communicate with the server.</source>
          <target state="translated">서버와의 통신에 실패한 총 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="c10a71699bcbc55fbfb919ad64c73a2b1d3e62af" translate="yes" xml:space="preserve">
          <source>The traversal is pretty straightforward and can be demonstrated with the following lookup function pattern:</source>
          <target state="translated">순회는 매우 간단하며 다음 조회 기능 패턴으로 시연 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6b219ea0a13fb0b2b15df81839eae5c2615e5ae" translate="yes" xml:space="preserve">
          <source>The type for nginx pools is &lt;code&gt;ngx_pool_t&lt;/code&gt;. The following operations are supported:</source>
          <target state="translated">nginx 풀의 유형은 &lt;code&gt;ngx_pool_t&lt;/code&gt; 입니다. 다음 작업이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="6172b8dadc3f1c87191a6174d43affd2193e3af3" translate="yes" xml:space="preserve">
          <source>The use of a port in redirects is controlled by the &lt;a href=&quot;#port_in_redirect&quot;&gt;port_in_redirect&lt;/a&gt; directive.</source>
          <target state="translated">경로 재 지정에서 포트 사용은 &lt;a href=&quot;#port_in_redirect&quot;&gt;port_in_redirect&lt;/a&gt; 지시문에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff71cf3cef91fc11d3e00b30a4204af3e838b3e3" translate="yes" xml:space="preserve">
          <source>The use of the primary server name in redirects is controlled by the &lt;a href=&quot;#server_name_in_redirect&quot;&gt;server_name_in_redirect&lt;/a&gt; directive.</source>
          <target state="translated">리디렉션에서 기본 서버 이름의 사용은 &lt;a href=&quot;#server_name_in_redirect&quot;&gt;server_name_in_redirect&lt;/a&gt; 지시문에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="78158739f71517c79fa97ee46b16757a0c3ff1b4" translate="yes" xml:space="preserve">
          <source>The value &amp;ldquo;&lt;code&gt;always&lt;/code&gt;&amp;rdquo; will cause nginx to unconditionally wait for and process additional client data.</source>
          <target state="translated">&quot; &lt;code&gt;always&lt;/code&gt; &quot; 값 은 nginx가 추가 클라이언트 데이터를 무조건 대기하고 처리하게합니다.</target>
        </trans-unit>
        <trans-unit id="8621a6a59d6b97ba9a2c900a4003d9bc8c3732b2" translate="yes" xml:space="preserve">
          <source>The value &amp;ldquo;&lt;code&gt;off&lt;/code&gt;&amp;rdquo; tells nginx to never wait for more data and close the connection immediately. This behavior breaks the protocol and should not be used under normal circumstances.</source>
          <target state="translated">&quot; &lt;code&gt;off&lt;/code&gt; &quot; 값 은 nginx가 더 많은 데이터를 기다리지 않고 연결을 즉시 닫도록 지시합니다. 이 동작은 프로토콜을 손상 시키므로 정상적인 상황에서는 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cb7982c5c6e37c9f53d605799c76e27ed06a29c6" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;clean&lt;/code&gt; will cause the temporary files left after request processing to be removed.</source>
          <target state="translated">&lt;code&gt;clean&lt;/code&gt; 값 은 요청 처리 후 남은 임시 파일을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="34f38714e5eee1e2c556466181154c33e6e715a1" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;data&lt;/code&gt;:&lt;code&gt;&lt;i&gt;$variable&lt;/i&gt;&lt;/code&gt; can be specified instead of the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10), which loads a certificate from a variable without using intermediate files. Note that inappropriate use of this syntax may have its security implications, such as writing secret key data to &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;error log&lt;/a&gt;.</source>
          <target state="translated">값 &lt;code&gt;data&lt;/code&gt; : &lt;code&gt;&lt;i&gt;$variable&lt;/i&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10) 대신 지정 될 수 있으며 중간 파일을 사용하지 않고 변수에서 인증서를로드합니다. 이 구문을 부적절하게 사용하면 비밀 키 데이터를 &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;오류 로그에&lt;/a&gt; 쓰는 것과 같이 보안에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27b6b8b882a3fe2b4d314198c8b09a8c09e24e8c" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;data&lt;/code&gt;:&lt;code&gt;&lt;i&gt;$variable&lt;/i&gt;&lt;/code&gt; can be specified instead of the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10), which loads a secret key from a variable without using intermediate files. Note that inappropriate use of this syntax may have its security implications, such as writing secret key data to &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;error log&lt;/a&gt;.</source>
          <target state="translated">값 &lt;code&gt;data&lt;/code&gt; : &lt;code&gt;&lt;i&gt;$variable&lt;/i&gt;&lt;/code&gt; 은 &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10) 대신 지정 될 수 있으며 중간 파일을 사용하지 않고 변수에서 비밀 키를로드합니다. 이 구문을 부적절하게 사용하면 비밀 키 데이터를 &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;오류 로그에&lt;/a&gt; 쓰는 것과 같이 보안에 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e66d2b8b43490e9d9ac0ee7cd299f2b04c779da" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;data&lt;/code&gt;:&lt;code&gt;&lt;i&gt;certificate&lt;/i&gt;&lt;/code&gt; can be specified instead of the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10), which loads a certificate without using intermediate files. Note that inappropriate use of this syntax may have its security implications, such as writing secret key data to &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;error log&lt;/a&gt;.</source>
          <target state="translated">중간 파일을 사용하지 않고 인증서를로드하는 &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10) 대신 &lt;code&gt;data&lt;/code&gt; : &lt;code&gt;&lt;i&gt;certificate&lt;/i&gt;&lt;/code&gt; 값을 지정할 수 있습니다 . 이 구문을 부적절하게 사용하면 비밀 키 데이터를 &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;오류 로그에&lt;/a&gt; 쓰는 것과 같이 보안에 영향을 줄 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="f3d02955122b0f6eae3c2661c2187ef7f4d83d82" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;data&lt;/code&gt;:&lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; can be specified instead of the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10), which loads a secret key without using intermediate files. Note that inappropriate use of this syntax may have its security implications, such as writing secret key data to &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;error log&lt;/a&gt;.</source>
          <target state="translated">중간 파일을 사용하지 않고 비밀 키를로드하는 &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.15.10) 대신 &lt;code&gt;data&lt;/code&gt; : &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; 값을 지정할 수 있습니다 . 이 구문을 부적절하게 사용하면 비밀 키 데이터를 &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;오류 로그에&lt;/a&gt; 쓰는 것과 같이 보안에 영향을 줄 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="78aa70f8ea17cd18a4ad40b346454211f1addd7c" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;engine&lt;/code&gt;:&lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt;:&lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; can be specified instead of the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.7.9), which loads a secret key with a specified &lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; from the OpenSSL engine &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; (1.7.9) 대신 &lt;code&gt;engine&lt;/code&gt; : &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; : &lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; 값을 지정할 수 있습니다.이 &lt;i&gt;파일&lt;/i&gt; 은 OpenSSL 엔진 &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; 에서 지정된 &lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; 를 가진 비밀 키를로드합니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="f71af8cec2cc2e266a919885b82f38de8f35f69d" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;engine&lt;/code&gt;:&lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt;:&lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; can be specified instead of the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt;, which loads a secret key with a specified &lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; from the OpenSSL engine &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; 대신 &lt;code&gt;engine&lt;/code&gt; : &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; : &lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; 값을 지정할 수 있습니다 . 이 값 은 OpenSSL 엔진 &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; 에서 지정된 &lt;code&gt;&lt;i&gt;id&lt;/i&gt;&lt;/code&gt; 를 가진 비밀 키를로드합니다 .&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="ce137a7640cb14852f34781dd0193a3dd0504f84" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;$uri&lt;/code&gt; may change during request processing, e.g. when doing internal redirects, or when using index files.</source>
          <target state="translated">요청 처리 중에 (예 : 내부 리디렉션을 수행 할 때 또는 인덱스 파일을 사용할 때) &lt;code&gt;$uri&lt;/code&gt; 값 이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ada0f6b3826b1904cead1aec4e658d0db966d0b9" translate="yes" xml:space="preserve">
          <source>The value of the original string is hashed using MurmurHash2. In the example given, hash values from 0 to 21474835 (0.5%) correspond to the value &lt;code&gt;&quot;.one&quot;&lt;/code&gt; of the &lt;code&gt;$variant&lt;/code&gt; variable, hash values from 21474836 to 107374180 (2%) correspond to the value &lt;code&gt;&quot;.two&quot;&lt;/code&gt;, and hash values from 107374181 to 4294967295 correspond to the value &lt;code&gt;&quot;&quot;&lt;/code&gt; (an empty string).</source>
          <target state="translated">원래 문자열의 값은 MurmurHash2를 사용하여 해시됩니다. 주어진 예에서, 0-21474835 (0.5 %)의 해시 값 은 &lt;code&gt;$variant&lt;/code&gt; 변수 의 &lt;code&gt;&quot;.one&quot;&lt;/code&gt; 값에 해당하고 21474836-107374180 (2 %)의 해시 값은 &lt;code&gt;&quot;.two&quot;&lt;/code&gt; 값에 해당 하고 hash 107374181에서 4294967295까지의 값은 &lt;code&gt;&quot;&quot;&lt;/code&gt; (빈 문자열) 값에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="155dbc5a6c19edddb8a61a16ad647a65710ae17f" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;ngx_errno&lt;/code&gt; and &lt;code&gt;ngx_socket_errno&lt;/code&gt; can be passed to the logging functions &lt;code&gt;ngx_log_error()&lt;/code&gt; and &lt;code&gt;ngx_log_debugX()&lt;/code&gt;, in which case system error text is added to the log message.</source>
          <target state="translated">&lt;code&gt;ngx_errno&lt;/code&gt; 및 &lt;code&gt;ngx_socket_errno&lt;/code&gt; 값은 로깅 함수 &lt;code&gt;ngx_log_error()&lt;/code&gt; 및 &lt;code&gt;ngx_log_debugX()&lt;/code&gt; 로 전달 될 수 있으며 ,이 경우 시스템 오류 텍스트가 로그 메시지에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="cce36ebe2b352c079b5409abddab2d00c6ff4770" translate="yes" xml:space="preserve">
          <source>The variable is available only for new sessions.</source>
          <target state="translated">변수는 새 세션에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca4f24f3286a47e32f594c50e51fe53173564ed5" translate="yes" xml:space="preserve">
          <source>The variable is deprecated, the &lt;code&gt;$ssl_client_escaped_cert&lt;/code&gt; variable should be used instead.</source>
          <target state="translated">이 변수는 더 이상 사용되지 않으며 &lt;code&gt;$ssl_client_escaped_cert&lt;/code&gt; 변수를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6f8ab94bbdced31f60843dfa2d46b187c5a59e4c" translate="yes" xml:space="preserve">
          <source>The variable is fully supported only when using OpenSSL version 1.0.2 or higher. With older versions, the variable is available only for new sessions and lists only known ciphers.</source>
          <target state="translated">변수는 OpenSSL 버전 1.0.2 이상을 사용하는 경우에만 완전히 지원됩니다. 이전 버전에서는 변수가 새 세션에서만 사용 가능하며 알려진 암호 만 나열합니다.</target>
        </trans-unit>
        <trans-unit id="2588ac9d70827c52f1aa0815778e21c78e7da872" translate="yes" xml:space="preserve">
          <source>The variable is supported only when using OpenSSL version 1.0.2 or higher. With older versions, the variable value will be an empty string.</source>
          <target state="translated">변수는 OpenSSL 버전 1.0.2 이상을 사용하는 경우에만 지원됩니다. 이전 버전에서는 변수 값이 빈 문자열이됩니다.</target>
        </trans-unit>
        <trans-unit id="a97adeaaa2fc2f9743991cbf7d4f3ab9bd80bf2d" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s value is made available in locations processed by the &lt;a href=&quot;ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt;, and &lt;a href=&quot;ngx_http_scgi_module#scgi_pass&quot;&gt;scgi_pass&lt;/a&gt; directives when the request body was read to a &lt;a href=&quot;#client_body_buffer_size&quot;&gt;memory buffer&lt;/a&gt;.</source>
          <target state="translated">변수의 값은 요청 본문을 &lt;a href=&quot;#client_body_buffer_size&quot;&gt;메모리 버퍼&lt;/a&gt; 로 읽을 때 &lt;a href=&quot;ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_scgi_module#scgi_pass&quot;&gt;scgi_pass&lt;/a&gt; 지시문으로 처리 된 위치에서 사용 가능 합니다 .</target>
        </trans-unit>
        <trans-unit id="92d1beec67ad7f493c5cbb99aed789fbca1437e2" translate="yes" xml:space="preserve">
          <source>The way nginx and its modules work is determined in the configuration file. By default, the configuration file is named &lt;code&gt;nginx.conf&lt;/code&gt; and placed in the directory &lt;code&gt;/usr/local/nginx/conf&lt;/code&gt;, &lt;code&gt;/etc/nginx&lt;/code&gt;, or &lt;code&gt;/usr/local/etc/nginx&lt;/code&gt;.</source>
          <target state="translated">nginx 및 해당 모듈의 작동 방식은 구성 파일에서 결정됩니다. 기본적으로 구성 파일 이름은 &lt;code&gt;nginx.conf&lt;/code&gt; 이며 &lt;code&gt;/usr/local/nginx/conf&lt;/code&gt; , &lt;code&gt;/etc/nginx&lt;/code&gt; 또는 &lt;code&gt;/usr/local/etc/nginx&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="f669b4f8f1cffc0c75ed4a07333ddc2f9e287b33" translate="yes" xml:space="preserve">
          <source>The zero value disables buffering of responses to temporary files.</source>
          <target state="translated">값이 0이면 임시 파일에 대한 응답 버퍼링이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="5dbfbf1b8ccd086c8a6fb55826e345771784efd9" translate="yes" xml:space="preserve">
          <source>Then the &lt;code&gt;debug&lt;/code&gt; level should be set with the &lt;a href=&quot;ngx_core_module#error_log&quot;&gt;error_log&lt;/a&gt; directive:</source>
          <target state="translated">그런 다음 &lt;a href=&quot;ngx_core_module#error_log&quot;&gt;error_log&lt;/a&gt; 지시문을 사용 하여 &lt;code&gt;debug&lt;/code&gt; 레벨을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="48d49f316ddb66cef8f931ab17aed4933c7dff07" translate="yes" xml:space="preserve">
          <source>Then the modules should be compiled using the &lt;code&gt;--add-module&lt;/code&gt; configuration parameter:</source>
          <target state="translated">그런 다음 &lt;code&gt;--add-module&lt;/code&gt; 구성 매개 변수를 사용하여 모듈을 컴파일해야합니다 .</target>
        </trans-unit>
        <trans-unit id="984c3f1a2a51cc927f81e398ff3e0fdd30be0db9" translate="yes" xml:space="preserve">
          <source>Then there&amp;rsquo;s the &lt;code&gt;ngx_http_process_request_t&lt;/code&gt; structure that contains a lot of pointers to other structures. Because these pointers are really irrelevant to this script, and because they have the same size, it is possible to just replace them with void pointers. Instead of changing definitions, it is better to add appropriate typedefs, though:</source>
          <target state="translated">그런 다음 다른 구조에 대한 많은 포인터를 포함하는 &lt;code&gt;ngx_http_process_request_t&lt;/code&gt; 구조가 있습니다. 이러한 포인터는이 스크립트와 관련이 없으며 크기가 동일하기 때문에 포인터를 void 포인터로 대체 할 수 있습니다. 정의를 변경하는 대신 적절한 typedef를 추가하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d3e945cfcaba512283319bb45037043248de39ce" translate="yes" xml:space="preserve">
          <source>There are many &lt;a href=&quot;http/ngx_http_proxy_module&quot;&gt;more&lt;/a&gt; directives that may be used to further configure a proxy connection.</source>
          <target state="translated">프록시 연결을 추가로 구성하는 데 사용할 수있는 지시문이 &lt;a href=&quot;http/ngx_http_proxy_module&quot;&gt;더&lt;/a&gt; 많이 있습니다.</target>
        </trans-unit>
        <trans-unit id="11097b777ab8b64e9d8194c6025ce5e57c0bf73b" translate="yes" xml:space="preserve">
          <source>There are other ways that allow sharing a single IP address between several HTTPS servers. However, all of them have their drawbacks. One way is to use a certificate with several names in the SubjectAltName certificate field, for example, &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;www.example.org&lt;/code&gt;. However, the SubjectAltName field length is limited.</source>
          <target state="translated">여러 HTTPS 서버간에 단일 IP 주소를 공유 할 수있는 다른 방법이 있습니다. 그러나 그들 모두 단점이 있습니다. 한 가지 방법은 SubjectAltName 인증서 필드에 여러 이름의 인증서를 사용하는 것입니다 (예 : &lt;code&gt;www.example.com&lt;/code&gt; 및 &lt;code&gt;www.example.org&lt;/code&gt; ) . 그러나 SubjectAltName 필드 길이는 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="43fb968e9c60017f31d1b300e6b82e173fcc15ff" translate="yes" xml:space="preserve">
          <source>There are several types of processes in nginx. The type of a process is kept in the &lt;code&gt;ngx_process&lt;/code&gt; global variable, and is one of the following:</source>
          <target state="translated">nginx에는 여러 유형의 프로세스가 있습니다. 프로세스 유형은 &lt;code&gt;ngx_process&lt;/code&gt; 전역 변수에 유지되며 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="846051e0c305e1ef0ae547af31dbbe0c9c0e93d8" translate="yes" xml:space="preserve">
          <source>There are some server names that are treated specially.</source>
          <target state="translated">특별히 취급되는 일부 서버 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4f5a03613b7cdff7b394f4db7d3ac68893f90df" translate="yes" xml:space="preserve">
          <source>There are two additional numeric conversion functions. Like the first four, they return &lt;code&gt;NGX_ERROR&lt;/code&gt; on error.</source>
          <target state="translated">두 가지 추가 숫자 변환 기능이 있습니다. 처음 네 개와 마찬가지로 오류가 발생하면 &lt;code&gt;NGX_ERROR&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f2721d2bee363bf54da5edb2c5e273f89c60ecd4" translate="yes" xml:space="preserve">
          <source>There are two basic usage scenarios when an external request is needed:</source>
          <target state="translated">외부 요청이 필요한 경우 두 가지 기본 사용 시나리오가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b27b94b6e548f4d4378eea80a76d98f000dcfd6" translate="yes" xml:space="preserve">
          <source>There are two types of strings in njs: a Unicode string (default) and a byte string.</source>
          <target state="translated">njs에는 두 가지 유형의 문자열 인 유니 코드 문자열 (기본값)과 바이트 문자열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c86b5a13e08096f799ee5d0ef4a82b5f7dcdf3d2" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;add_header&lt;/code&gt; directives. These directives are inherited from the previous level if and only if there are no &lt;code&gt;add_header&lt;/code&gt; directives defined on the current level.</source>
          <target state="translated">&lt;code&gt;add_header&lt;/code&gt; 지시문 이 여러 개있을 수 있습니다 . 이러한 지시문은 현재 레벨에 정의 된 &lt;code&gt;add_header&lt;/code&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="1565aa22e9203ec28da7bbe3d8ac42f7a6ab25fa" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;add_trailer&lt;/code&gt; directives. These directives are inherited from the previous level if and only if there are no &lt;code&gt;add_trailer&lt;/code&gt; directives defined on the current level.</source>
          <target state="translated">&lt;code&gt;add_trailer&lt;/code&gt; 지시문 이 여러 개있을 수 있습니다 . 이러한 지시문은 현재 레벨에 정의 된 &lt;code&gt;add_trailer&lt;/code&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="fb13ae212e1ca0b1acca422a081bc33b5b024daa" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;limit_conn&lt;/code&gt; directives. For example, the following configuration will limit the number of connections to the server per a client IP and, at the same time, the total number of connections to the virtual server:</source>
          <target state="translated">&lt;code&gt;limit_conn&lt;/code&gt; 지시문 이 여러 개있을 수 있습니다 . 예를 들어 다음 구성은 클라이언트 IP 당 서버에 대한 연결 수와 가상 서버에 대한 총 연결 수를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="766c700963fbf5eadcabafd33f418dd6cb671b74" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;limit_req&lt;/code&gt; directives. For example, the following configuration will limit the processing rate of requests coming from a single IP address and, at the same time, the request processing rate by the virtual server:</source>
          <target state="translated">&lt;code&gt;limit_req&lt;/code&gt; 지시문 이 여러 개있을 수 있습니다 . 예를 들어 다음 구성은 단일 IP 주소에서 오는 요청의 처리 속도와 가상 서버의 요청 처리 속도를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="d4a0cc483d00e8fbf1d779b988f4cdd7ab3463e4" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;proxy_cookie_domain&lt;/code&gt; directives:</source>
          <target state="translated">&lt;code&gt;proxy_cookie_domain&lt;/code&gt; 지시문 이 여러 개있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25d72f7fae568abfd78a31636aa2155801a5fc35" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;proxy_cookie_path&lt;/code&gt; directives:</source>
          <target state="translated">여러 &lt;code&gt;proxy_cookie_path&lt;/code&gt; 지시문 이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8406cab7773306d737ed770d03b2e0a1406e14a3" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;proxy_redirect&lt;/code&gt; directives:</source>
          <target state="translated">여러 &lt;code&gt;proxy_redirect&lt;/code&gt; 지시문 이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="99f36d04a828c71b9473092a6b9aa8a8d9e964c0" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;xslt_param&lt;/code&gt; directives. These directives are inherited from the previous level if and only if there are no &lt;code&gt;xslt_param&lt;/code&gt; and &lt;a href=&quot;#xslt_string_param&quot;&gt;xslt_string_param&lt;/a&gt; directives defined on the current level.</source>
          <target state="translated">여러 &lt;code&gt;xslt_param&lt;/code&gt; 지시문 이있을 수 있습니다 . 이러한 지시문은 현재 레벨에 정의 된 &lt;code&gt;xslt_param&lt;/code&gt; 및 &lt;a href=&quot;#xslt_string_param&quot;&gt;xslt_string_param&lt;/a&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="fa9ba086930143fd958650bcc0bc440189e94ab8" translate="yes" xml:space="preserve">
          <source>There could be several &lt;code&gt;xslt_string_param&lt;/code&gt; directives. These directives are inherited from the previous level if and only if there are no &lt;a href=&quot;#xslt_param&quot;&gt;xslt_param&lt;/a&gt; and &lt;code&gt;xslt_string_param&lt;/code&gt; directives defined on the current level.</source>
          <target state="translated">여러 &lt;code&gt;xslt_string_param&lt;/code&gt; 지시문 이있을 수 있습니다 . 이러한 지시문은 현재 레벨에 정의 된 &lt;a href=&quot;#xslt_param&quot;&gt;xslt_param&lt;/a&gt; 및 &lt;code&gt;xslt_string_param&lt;/code&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="f437d5a294dcfead1535161bbf91f36d6b44b9a9" translate="yes" xml:space="preserve">
          <source>There is a bunch of commonly used type/name combinations:</source>
          <target state="translated">일반적으로 사용되는 여러 유형 / 이름 조합이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e290523f2281c1aa9309259da5a8f12b18d5c33" translate="yes" xml:space="preserve">
          <source>There is a limit of 10 internal redirects per request to prevent request processing cycles that can occur in incorrect configurations. If this limit is reached, the error 500 (Internal Server Error) is returned. In such cases, the &amp;ldquo;rewrite or internal redirection cycle&amp;rdquo; message can be seen in the error log.</source>
          <target state="translated">잘못된 구성에서 발생할 수있는 요청 처리주기를 방지하기 위해 요청 당 10 개의 내부 리디렉션이 제한되어 있습니다. 이 한계에 도달하면 오류 500 (내부 서버 오류)이 리턴됩니다. 이러한 경우 &quot;다시 쓰기 또는 내부 리디렉션주기&quot;메시지가 오류 로그에 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05dfc19da4fb464e640dda486785cdb4b1366ef8" translate="yes" xml:space="preserve">
          <source>There is a possibility that the main process and then worker processes will grow in size after every reconfiguration. If the main process grows to an unacceptable size, the &lt;a href=&quot;../control#upgrade&quot;&gt;live upgrade&lt;/a&gt; procedure can be applied without changing the executable file.</source>
          <target state="translated">기본 프로세스와 작업자 프로세스는 재구성 할 때마다 크기가 커질 수 있습니다. 기본 프로세스가 허용 할 수없는 크기로 커지면 실행 파일을 변경하지 않고 &lt;a href=&quot;../control#upgrade&quot;&gt;라이브 업그레이드&lt;/a&gt; 절차를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ed2bbc87a85986620aed7069ba977c2b3121c2e" translate="yes" xml:space="preserve">
          <source>There is also a standalone &lt;a href=&quot;cli&quot;&gt;command line&lt;/a&gt; utility that can be used independently of nginx for njs development and debugging.</source>
          <target state="translated">njs 개발 및 디버깅을 위해 nginx와 독립적으로 사용할 수 있는 독립형 &lt;a href=&quot;cli&quot;&gt;명령 행&lt;/a&gt; 유틸리티도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1360ccfeb5a7c02ac1297ae16128f1090dcb321" translate="yes" xml:space="preserve">
          <source>There is no need to enable &lt;code&gt;accept_mutex&lt;/code&gt; on systems that support the &lt;a href=&quot;events#epoll&quot;&gt;EPOLLEXCLUSIVE&lt;/a&gt; flag (1.11.3) or when using &lt;a href=&quot;http/ngx_http_core_module#reuseport&quot;&gt;reuseport&lt;/a&gt;.</source>
          <target state="translated">수 있도록 할 필요가 없습니다 &lt;code&gt;accept_mutex&lt;/code&gt; 를 지원 시스템에 &lt;a href=&quot;events#epoll&quot;&gt;EPOLLEXCLUSIVE를&lt;/a&gt; 사용하는 경우 플래그 (1.11.3) 또는 &lt;a href=&quot;http/ngx_http_core_module#reuseport&quot;&gt;reuseport은&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="769f9c992a48af04da309f4c78c050b0e8866698" translate="yes" xml:space="preserve">
          <source>There is no space after the function name and opening parenthesis. Long function calls are wrapped such that continuation lines start from the position of the first function argument. If this is impossible, format the first continuation line such that it ends at position 79:</source>
          <target state="translated">함수 이름과 여는 괄호 뒤에 공백이 없습니다. 긴 함수 호출은 연속 행이 첫 번째 함수 인수의 위치에서 시작되도록 줄 바꿈됩니다. 이것이 불가능한 경우, 첫 번째 연속 행을 위치 79에서 끝나도록 형식화하십시오.</target>
        </trans-unit>
        <trans-unit id="89dbc2df71edd9bad4f8db7dac01f6eb3ed54ccb" translate="yes" xml:space="preserve">
          <source>There is nothing special about this name, it is just one of a myriad of invalid domain names which never intersect with any real name. Other invalid names like &amp;ldquo;&lt;code&gt;--&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;!@#&lt;/code&gt;&amp;rdquo; may equally be used.</source>
          <target state="translated">이 이름에는 특별한 것이 없으며 실제 이름과 절대 교차하지 않는 무수한 잘못된 도메인 이름 중 하나 일뿐입니다. &amp;ldquo; &lt;code&gt;--&lt;/code&gt; &amp;rdquo;및&amp;ldquo; &lt;code&gt;!@#&lt;/code&gt; &amp;rdquo; 과 같은 다른 잘못된 이름도 동일하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="336d39d2e9fe63ac0ab41549d4ef0c55ad5bd7b2" translate="yes" xml:space="preserve">
          <source>There is one subtlety however: since the &amp;ldquo;Upgrade&amp;rdquo; is a &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-13.5.1&quot;&gt;hop-by-hop&lt;/a&gt; header, it is not passed from a client to proxied server. With forward proxying, clients may use the &lt;code&gt;CONNECT&lt;/code&gt; method to circumvent this issue. This does not work with reverse proxying however, since clients are not aware of any proxy servers, and special processing on a proxy server is required.</source>
          <target state="translated">그러나 &quot;업그레이드&quot;는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-13.5.1&quot;&gt;홉별&lt;/a&gt; 헤더이기 때문에 클라이언트에서 프록시 서버로 전달되지 않습니다. 정방향 프록시를 사용하면 클라이언트가 &lt;code&gt;CONNECT&lt;/code&gt; 메서드를 사용 하여이 문제를 피할 수 있습니다 . 그러나 클라이언트가 프록시 서버를 인식하지 못하고 프록시 서버에서의 특수 처리가 필요하므로 리버스 프록시에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4407bdf08c75bcde4bb8d52adf7a75ab7908a0b0" translate="yes" xml:space="preserve">
          <source>These directives are inherited from the previous level if and only if there are no &lt;code&gt;error_page&lt;/code&gt; directives defined on the current level.</source>
          <target state="translated">이러한 지시문은 현재 레벨에 정의 된 &lt;code&gt;error_page&lt;/code&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="6ceafd664aff4171e7da92b1800a11971ebaf8f1" translate="yes" xml:space="preserve">
          <source>These directives are inherited from the previous level if and only if there are no &lt;code&gt;limit_conn&lt;/code&gt; directives on the current level.</source>
          <target state="translated">이러한 지시문은 현재 레벨에 &lt;code&gt;limit_conn&lt;/code&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="eeaca1f2df2f8f03c5cf0f592291218969448a2d" translate="yes" xml:space="preserve">
          <source>These directives are inherited from the previous level if and only if there are no &lt;code&gt;limit_req&lt;/code&gt; directives on the current level.</source>
          <target state="translated">이러한 지시문은 현재 레벨에 &lt;code&gt;limit_req&lt;/code&gt; 지시문 이없는 경우에만 이전 레벨에서 상속 됩니다.</target>
        </trans-unit>
        <trans-unit id="1d2a0eceac6628972514d50dcade36c0500204ea" translate="yes" xml:space="preserve">
          <source>These macros receive a reference to an HTTP request &lt;code&gt;ngx_http_request_t&lt;/code&gt;. The main configuration of a request never changes. Server configuration can change from the default after the virtual server for the request is chosen. Location configuration selected for processing a request can change multiple times as a result of a rewrite operation or internal redirect. The following example shows how to access a module's HTTP configuration at runtime.</source>
          <target state="translated">이 매크로는 HTTP 요청 &lt;code&gt;ngx_http_request_t&lt;/code&gt; 에 대한 참조를 받습니다 . 요청의 기본 구성은 변경되지 않습니다. 요청에 대한 가상 서버가 선택된 후 서버 구성이 기본값에서 변경 될 수 있습니다. 요청을 처리하기 위해 선택한 위치 구성은 다시 쓰기 작업 또는 내부 리디렉션의 결과로 여러 번 변경 될 수 있습니다. 다음 예제는 런타임시 모듈의 HTTP 구성에 액세스하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3a0918681e032e8a20efdbd2f572a15b46457db1" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;location&lt;/code&gt; block specifies the &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; prefix compared with the URI from the request. For matching requests, the URI will be added to the path specified in the &lt;a href=&quot;http/ngx_http_core_module#root&quot;&gt;root&lt;/a&gt; directive, that is, to &lt;code&gt;/data/www&lt;/code&gt;, to form the path to the requested file on the local file system. If there are several matching &lt;code&gt;location&lt;/code&gt; blocks nginx selects the one with the longest prefix. The &lt;code&gt;location&lt;/code&gt; block above provides the shortest prefix, of length one, and so only if all other &lt;code&gt;location&lt;/code&gt; blocks fail to provide a match, this block will be used.</source>
          <target state="translated">이 &lt;code&gt;location&lt;/code&gt; 블록 은 요청의 URI와 비교 하여 &quot; &lt;code&gt;/&lt;/code&gt; &quot;접두사를 지정합니다 . 일치하는 요청의 경우 로컬 파일 시스템에서 요청 된 파일의 경로를 형성하기 위해 &lt;a href=&quot;http/ngx_http_core_module#root&quot;&gt;루트&lt;/a&gt; 지시문에 지정된 경로 , 즉 &lt;code&gt;/data/www&lt;/code&gt; 에 URI가 추가됩니다 . 일치하는 &lt;code&gt;location&lt;/code&gt; 블록 이 여러 개인 경우 nginx는 가장 긴 접두사를 가진 블록을 선택합니다. 위 의 &lt;code&gt;location&lt;/code&gt; 블록은 길이가 1 인 가장 짧은 접두사를 제공하므로 다른 모든 &lt;code&gt;location&lt;/code&gt; 블록이 일치하지 않는 경우에만 이 블록이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e306c9cd1dc4d8c75cfc5d78d561bf07b3789822" translate="yes" xml:space="preserve">
          <source>This allows performing a random seeking at any time, or starting playback in the middle of the timeline.</source>
          <target state="translated">이를 통해 언제든지 임의 검색을 수행하거나 타임 라인 중간에 재생을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="984a82623fed56fcbd9e6b7cc6f95cae9c31c347" translate="yes" xml:space="preserve">
          <source>This article assumes the reader has a general knowledge of nginx internals and &lt;a href=&quot;#see_also&quot;&gt;DTrace&lt;/a&gt;.</source>
          <target state="translated">이 기사는 독자가 nginx internals와 &lt;a href=&quot;#see_also&quot;&gt;DTrace에&lt;/a&gt; 대한 일반적인 지식을 가지고 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="e7b57b9d1e7e34b23a7ee341941f2c098643a06f" translate="yes" xml:space="preserve">
          <source>This causes an internal redirect to the specified &lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; with the client request method changed to &amp;ldquo;&lt;code&gt;GET&lt;/code&gt;&amp;rdquo; (for all methods other than &amp;ldquo;&lt;code&gt;GET&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;HEAD&lt;/code&gt;&amp;rdquo;).</source>
          <target state="translated">이로 인해 클라이언트 요청 메소드가 &quot; &lt;code&gt;GET&lt;/code&gt; &quot;( &quot; &lt;code&gt;GET&lt;/code&gt; &quot;및 &quot; &lt;code&gt;HEAD&lt;/code&gt; &quot; 이외의 모든 메소드)으로 변경된 상태 에서 지정된 &lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; 로 내부 경로 재 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ae7e008dfdf1471396b0211fa68bd6018dd596dc" translate="yes" xml:space="preserve">
          <source>This command should be executed under the same user that started nginx.</source>
          <target state="translated">이 명령은 nginx를 시작한 동일한 사용자로 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b892f198bd4dfaba8f759d83986aa1deb75c63ff" translate="yes" xml:space="preserve">
          <source>This configuration creates a simple web page with basic status data which may look like as follows:</source>
          <target state="translated">이 구성은 다음과 같은 기본 상태 데이터가 포함 된 간단한 웹 페이지를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="06e010f3c19c1c1184d5ff03fe30af02a03108aa" translate="yes" xml:space="preserve">
          <source>This configuration shows that in order for a health check to pass, the response to a health check request should succeed, have status 200, and contain &amp;ldquo;&lt;code&gt;Welcome to nginx!&lt;/code&gt;&amp;rdquo; in the body.</source>
          <target state="translated">이 구성은 상태 확인을 통과하려면 상태 확인 요청에 대한 응답이 성공하고 상태가 200이며 &quot; &lt;code&gt;Welcome to nginx!&lt;/code&gt; 몸에.</target>
        </trans-unit>
        <trans-unit id="6707979fefcee909dbf15a4281fa927f163259af" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.3.0.</source>
          <target state="translated">이 지시문은 버전 0.3.0에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="1b15c8e4e7f613d4d6207579d4a0cb954c2c5304" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.6.23.</source>
          <target state="translated">이 지시문은 버전 0.6.23에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="25c536e6b086996cea0160ee5edc7e070843d138" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.7.2.</source>
          <target state="translated">이 지시문은 버전 0.7.2에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="3c51a45b3a0a518e45140e39a6fd09d81bc156cd" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.7.24.</source>
          <target state="translated">이 지시문은 버전 0.7.24에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="22a80dccfad3955b60d6ed8fc42fb23c38b536e7" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.7.59.</source>
          <target state="translated">이 지시문은 버전 0.7.59에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="672f94acb828dbaeb9864f3e3bb93a7c0a4d4a40" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.7.7.</source>
          <target state="translated">이 지시문은 버전 0.7.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="16860be8d676e83ad656d144aef13d14a3b2fe9c" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.7.9.</source>
          <target state="translated">이 지시문은 버전 0.7.9에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="ff91790198243573d8ab1ce14bb3ffa273fe8de2" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.8.0.</source>
          <target state="translated">이 지시어는 버전 0.8.0에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="a14f926618c05b22c1d0cf1a773d83e440b4263f" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.8.11.</source>
          <target state="translated">이 지시어는 버전 0.8.11에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="15696dd3ec93a29d80f2395adb0e9dcbc2b2cf39" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.8.18.</source>
          <target state="translated">이 지시어는 버전 0.8.18에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="c2eca6be54fc0620243b7dc5a5511c916cbb1209" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.8.22.</source>
          <target state="translated">이 지시어는 버전 0.8.22에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="bbd7386aa8033a50fe2f64b8186233439317d47f" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 0.8.7.</source>
          <target state="translated">이 지시어는 버전 0.8.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="768e655d8b3a19dc63cd1449a1962d4f6ea7d580" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.0.3.</source>
          <target state="translated">이 지시문은 버전 1.0.3에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="b40d46a452f74800b71e7bfae6da5aac3641ef29" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.0.5.</source>
          <target state="translated">이 지시문은 버전 1.0.5에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="aa2858064685e8f7225e5c7d12e2c33673dce6bd" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.1.12.</source>
          <target state="translated">이 지시문은 버전 1.1.12에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="ea5ed0d3b949db7f3f251c84279c2f434197764d" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.1.15.</source>
          <target state="translated">이 지시문은 버전 1.1.15에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="f3fa1b8e3b7a6ce7f6a17c3152aac9ee8d493cfa" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.1.18.</source>
          <target state="translated">이 지시문은 버전 1.1.18에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="c5ce0ebe27bee5c0bef033d6e65ed7678f7ae760" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.1.2.</source>
          <target state="translated">이 지시문은 버전 1.1.2에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="06fb8946717f03e1ed30d41984a9fb00aef2c288" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.1.4.</source>
          <target state="translated">이 지시어는 버전 1.1.4에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="2619d63f7039d31ab1cf523d25870f48127c7de6" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.0.</source>
          <target state="translated">이 지시문은 버전 1.11.0에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="3ac8973ae9703bddecb6dd7f504f30b485d52ecf" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.10.</source>
          <target state="translated">이 지시어는 버전 1.11.10에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="aa93cab27b4d148367d95726069e50de1961253c" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.11.</source>
          <target state="translated">이 지시어는 버전 1.11.11에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="54cff3c819aedb0f91817d953cff6ea4806460a1" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.2.</source>
          <target state="translated">이 지시문은 버전 1.11.2에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="41f7a3574e933bcee0b89e10a1305737c9ad4c53" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.3.</source>
          <target state="translated">이 지시문은 버전 1.11.3에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="80ff8d43727f508ef8c95f26b83faa16b754e8e3" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.4.</source>
          <target state="translated">이 지시문은 버전 1.11.4에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="9003c33b39773aa3090730232e9956dcd6777855" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.5.</source>
          <target state="translated">이 지시문은 버전 1.11.5에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="e2d6a5521badff3d2f29f443b549036563c3cf00" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.6.</source>
          <target state="translated">이 지시문은 버전 1.11.6에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="7b585d41bf419cec09a68df8cc43e19350e8bf84" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.11.8.</source>
          <target state="translated">이 지시문은 버전 1.11.8에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="d3d28c231020012479d5445bbd17f0588b8df490" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.13.10.</source>
          <target state="translated">이 지시문은 버전 1.13.10에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="b2906fd51115d4779746442f1741e65caa07a79b" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.13.12.</source>
          <target state="translated">이 지시어는 버전 1.13.12에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="eaa41524cb817d2997488a6f91dd88c5b68a9595" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.13.2.</source>
          <target state="translated">이 지시어는 버전 1.13.2에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="488c7d36c3a292e4b4242aa987c8a68fba8b1daf" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.13.9.</source>
          <target state="translated">이 지시문은 버전 1.13.9에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="5e810c17562eadb6c7134a37c7a2ffdc0fbd22c9" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.15.1.</source>
          <target state="translated">이 지시어는 버전 1.15.1에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="30230e888274ed3a7487085899f26059e4cd06e8" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.15.3.</source>
          <target state="translated">이 지시문은 버전 1.15.3에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="0de41f280212ad36246ae86c5a15d669180f3d89" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.15.6.</source>
          <target state="translated">이 지시어는 버전 1.15.6에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="33630bdd732a57b171587fc9dcd365c3eab57647" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.15.7.</source>
          <target state="translated">이 지시어는 버전 1.15.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="aad035a8f75353d65162dc9e0e5950418af3d514" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.15.8.</source>
          <target state="translated">이 지시문은 버전 1.15.8에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="2eda47d241afe4bb07745df74a9c22f1b2848cd2" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.17.1.</source>
          <target state="translated">이 지시문은 버전 1.17.1에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="d6e9a04bc13ba63cecf84bfea77f576f14ddfff5" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.3.15.</source>
          <target state="translated">이 지시어는 버전 1.3.15에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="9d1ec3da098e347cff887c1d280ae177324a7280" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.3.3.</source>
          <target state="translated">이 지시어는 버전 1.3.3에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="71e5e32cf3e3d3805ddd631915db9ce04267b869" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.3.6.</source>
          <target state="translated">이 지시어는 버전 1.3.6에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="56178d13b7d281e5df1b6adeaf839e8473860674" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.3.7.</source>
          <target state="translated">이 지시어는 버전 1.3.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="64124a61cf7816fd6aceb4c0868c2f61ae3eb189" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.5.1.</source>
          <target state="translated">이 지시어는 버전 1.5.1에 ​​나타났습니다.</target>
        </trans-unit>
        <trans-unit id="14a6915cede67fe525e5710fa308a944fa89dc9e" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.5.12.</source>
          <target state="translated">이 지시어는 버전 1.5.12에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="6b71bab3adb74875d85254838e1b2cd9553a3468" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.5.6.</source>
          <target state="translated">이 지시어는 버전 1.5.6에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="d3735f0856fe1c470eb5ceccdbb02df4f726be1c" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.5.7.</source>
          <target state="translated">이 지시어는 버전 1.5.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="7d929a7d45715e54e691e687babb9e83dd3fd8c1" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.5.8.</source>
          <target state="translated">이 지시어는 버전 1.5.8에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="0d45533ab2494221c95db43798a38a1870229fa0" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.5.9.</source>
          <target state="translated">이 지시어는 버전 1.5.9에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="c70dd6bb342600154f4aeafcf991af4610a2ec3c" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.0.</source>
          <target state="translated">이 지시어는 버전 1.7.0에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="13d017a9bed0ea13b3ea4b1bd7aa968c16d0e08d" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.10.</source>
          <target state="translated">이 지시어는 버전 1.7.10에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="afee20b28205eb0e71b0cc42c0425f220627ad4c" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.11.</source>
          <target state="translated">이 지시어는 버전 1.7.11에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="27b449c839042e2fdd4f9bdaa2cca3c865ae859f" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.2.</source>
          <target state="translated">이 지시어는 버전 1.7.2에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="e5138acfb560894689144456b66b6aba39ad928b" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.3.</source>
          <target state="translated">이 지시어는 버전 1.7.3에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="1197a170b732e37c332c7910922e5291e4b41873" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.5.</source>
          <target state="translated">이 지시어는 버전 1.7.5에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="11cee1f79b11135915cfe98d6ffd14f380db56de" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.7.</source>
          <target state="translated">이 지시어는 버전 1.7.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="ded3808b14f0866b97dd5e777f2a2e6b942a5165" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.8.</source>
          <target state="translated">이 지시어는 버전 1.7.8에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="00c1fbbec50de8fc25853f1783123934cfc68fed" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.7.9.</source>
          <target state="translated">이 지시어는 버전 1.7.9에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="e19b17ce72c4a47ccacd00fbdaf544bc98de222f" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.9.0.</source>
          <target state="translated">이 지시어는 버전 1.9.0에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="7b328a0fad9bd625c363f858c3e1c39f42bbcc87" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.9.11.</source>
          <target state="translated">이 지시문은 버전 1.9.11에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="3ffa4b8adbe453497e3d7b891646affb84561acb" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.9.13.</source>
          <target state="translated">이 지시어는 버전 1.9.13에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="bc8a6a792491fef1b6cc099270e1a3dcdebb878e" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.9.2.</source>
          <target state="translated">이 지시어는 버전 1.9.2에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="30b4f982f721ddb1cd8dc1e64eda18efba99ff52" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.9.3.</source>
          <target state="translated">이 지시어는 버전 1.9.3에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="0ad4b5701d004271d7ee6712ba165d42b27f2ccb" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.9.4.</source>
          <target state="translated">이 지시문은 버전 1.9.4에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="178a0644d3e8eaae376f16d15fdeda5339b6e21f" translate="yes" xml:space="preserve">
          <source>This directive appeared in version 1.9.7.</source>
          <target state="translated">이 지시어는 버전 1.9.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="ddd2b8f9cfd5d2ea74f6e96ff1a18647172107be" translate="yes" xml:space="preserve">
          <source>This directive appeared in versions 1.1.0 and 1.0.6.</source>
          <target state="translated">이 지시어는 버전 1.1.0 및 1.0.6에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="62f68466a49246c321a387e648f9a45c489b929f" translate="yes" xml:space="preserve">
          <source>This directive appeared in versions 1.1.4 and 1.0.7.</source>
          <target state="translated">이 지시문은 버전 1.1.4 및 1.0.7에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="84f91151f076b86cb2e84bf88c4aab94baf8b2f1" translate="yes" xml:space="preserve">
          <source>This directive appeared in versions 1.3.0 and 1.2.1.</source>
          <target state="translated">이 지시문은 버전 1.3.0 및 1.2.1에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="d615bf00281f37085f918f3b02f96c9fcb7b0d17" translate="yes" xml:space="preserve">
          <source>This directive appeared in versions 1.3.1 and 1.2.2.</source>
          <target state="translated">이 지시문은 버전 1.3.1 및 1.2.2에 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="972bfbbb3a11129875a3c4d21463b712c7304e12" translate="yes" xml:space="preserve">
          <source>This directive can be used to create local copies of static unchangeable files, e.g.:</source>
          <target state="translated">이 지시문은 다음과 같이 정적 변경 불가능한 파일의 로컬 사본을 작성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbf82a4682ce8473d48412ed0dd6ec859cdeb514" translate="yes" xml:space="preserve">
          <source>This directive is available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;.</source>
          <target state="translated">이 지침은 &lt;a href=&quot;http://nginx.com/products/&quot;&gt;상용 가입의&lt;/a&gt; 일부로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="64690ccb10186a86de67d611dcf436d486233033" translate="yes" xml:space="preserve">
          <source>This directive is ignored on Linux, Solaris, and Windows.</source>
          <target state="translated">이 지시문은 Linux, Solaris 및 Windows에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1fa7126723ff47fcc13e3abe0fea8d8bfbe896ef" translate="yes" xml:space="preserve">
          <source>This directive is obsolete since version 1.5.7. An equivalent &lt;a href=&quot;#sticky&quot;&gt;sticky&lt;/a&gt; directive with a new syntax should be used instead:</source>
          <target state="translated">이 지시문은 버전 1.5.7부터 사용되지 않습니다. 대신 새 구문을 사용 하는 동등한 &lt;a href=&quot;#sticky&quot;&gt;고정&lt;/a&gt; 지시문을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2687d536aeb3e431e58c9a9a44425e2dab99ef09" translate="yes" xml:space="preserve">
          <source>This directive is only available on systems that have the &lt;code&gt;openat()&lt;/code&gt; and &lt;code&gt;fstatat()&lt;/code&gt; interfaces. Such systems include modern versions of FreeBSD, Linux, and Solaris.</source>
          <target state="translated">이 지시문은 &lt;code&gt;openat()&lt;/code&gt; 및 &lt;code&gt;fstatat()&lt;/code&gt; 인터페이스 가있는 시스템에서만 사용할 수 있습니다. 이러한 시스템에는 최신 버전의 FreeBSD, Linux 및 Solaris가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d92640a96e50b5d8a9281a013674bc8a173c3d86" translate="yes" xml:space="preserve">
          <source>This directive is used for debugging.</source>
          <target state="translated">이 지시어는 디버깅에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f7355973c12446ac7cad233d784ef4a2d42540d0" translate="yes" xml:space="preserve">
          <source>This directive was made obsolete in version 1.1.8 and was removed in version 1.7.6. An equivalent &lt;a href=&quot;#limit_conn_zone&quot;&gt;limit_conn_zone&lt;/a&gt; directive with a changed syntax should be used instead:</source>
          <target state="translated">이 지시문은 버전 1.1.8에서 폐기되었으며 버전 1.7.6에서 제거되었습니다. 대신 구문이 변경된 동등한 &lt;a href=&quot;#limit_conn_zone&quot;&gt;limit_conn_zone&lt;/a&gt; 지시문을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="48f32088f6e303a26ef2a598934ac8bedcea2249" translate="yes" xml:space="preserve">
          <source>This directive was made obsolete in version 1.15.0. The &lt;code&gt;ssl&lt;/code&gt; parameter of the &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; directive should be used instead.</source>
          <target state="translated">이 지시문은 버전 1.15.0에서 폐기되었습니다. &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; 지시문 의 &lt;code&gt;ssl&lt;/code&gt; 매개 변수를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="34fa4830c0fe92d68da9e46f9f053095f1397a62" translate="yes" xml:space="preserve">
          <source>This directive was made obsolete in version 1.15.0. The &lt;code&gt;ssl&lt;/code&gt; parameter of the &lt;a href=&quot;ngx_mail_core_module#listen&quot;&gt;listen&lt;/a&gt; directive should be used instead.</source>
          <target state="translated">이 지시문은 버전 1.15.0에서 폐기되었습니다. &lt;a href=&quot;ngx_mail_core_module#listen&quot;&gt;listen&lt;/a&gt; 지시문 의 &lt;code&gt;ssl&lt;/code&gt; 매개 변수를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a77d90c4f05b826ddfd88ed99d73995d63eebb3e" translate="yes" xml:space="preserve">
          <source>This example clones the current request and sets a finalization callback for the subrequest.</source>
          <target state="translated">이 예에서는 현재 요청을 복제하고 하위 요청에 대한 마무리 콜백을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="37b472d8653a91f3c5b1b8505f418833f3c3ae7b" translate="yes" xml:space="preserve">
          <source>This function in the example is used to initialize the &lt;code&gt;preconfiguration&lt;/code&gt; field of the HTTP module context and is called before the parsing of HTTP configuration, so that the parser can refer to these variables.</source>
          <target state="translated">예제에서이 함수 는 HTTP 모듈 컨텍스트 의 &lt;code&gt;preconfiguration&lt;/code&gt; 필드 를 초기화하는 데 사용되며 구문 분석기가 이러한 변수를 참조 할 수 있도록 HTTP 구성 구문 분석 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7f2c303adf89eeb7d3e257e63b568b26927704e4" translate="yes" xml:space="preserve">
          <source>This functionality is available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;.</source>
          <target state="translated">이 기능은 &lt;a href=&quot;http://nginx.com/products/&quot;&gt;상용 가입의&lt;/a&gt; 일부로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="96a1a525d29ff4caf2bb5d73476acc245104ef57" translate="yes" xml:space="preserve">
          <source>This guide gives a basic introduction to nginx and describes some simple tasks that can be done with it. It is supposed that nginx is already installed on the reader&amp;rsquo;s machine. If it is not, see the &lt;a href=&quot;install&quot;&gt;Installing nginx&lt;/a&gt; page. This guide describes how to start and stop nginx, and reload its configuration, explains the structure of the configuration file and describes how to set up nginx to serve out static content, how to configure nginx as a proxy server, and how to connect it with a FastCGI application.</source>
          <target state="translated">이 안내서는 nginx에 대한 기본적인 소개와 함께 수행 할 수있는 몇 가지 간단한 작업을 설명합니다. nginx가 리더기 시스템에 이미 설치되어 있다고 가정합니다. 그렇지 않은 경우, &lt;a href=&quot;install&quot;&gt;nginx 설치&lt;/a&gt; 페이지를 참조하십시오. 이 안내서는 nginx를 시작 및 중지하는 방법과 구성을 다시로드하는 방법, 구성 파일의 구조를 설명하고 정적 콘텐츠를 제공하기 위해 nginx를 설정하는 방법, nginx를 프록시 서버로 구성하는 방법 및이를 연결하는 방법을 설명합니다. FastCGI 응용 프로그램.</target>
        </trans-unit>
        <trans-unit id="42e4ffa45ab1e608725b050d9ee3377aaa74d7a7" translate="yes" xml:space="preserve">
          <source>This is a wrong, cumbersome, and ineffective way. The right way is to define a separate server for &lt;code&gt;example.org&lt;/code&gt;:</source>
          <target state="translated">이것은 잘못되고 성가 시며 비효율적 인 방법입니다. 올바른 방법은 &lt;code&gt;example.org&lt;/code&gt; 에 별도의 서버를 정의하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="aaa5c5b7e37cba66a9174eb51fcf80a0c572cf96" translate="yes" xml:space="preserve">
          <source>This is already a working configuration of a server that listens on the standard port 80 and is accessible on the local machine at &lt;code&gt;http://localhost/&lt;/code&gt;. In response to requests with URIs starting with &lt;code&gt;/images/&lt;/code&gt;, the server will send files from the &lt;code&gt;/data/images&lt;/code&gt; directory. For example, in response to the &lt;code&gt;http://localhost/images/example.png&lt;/code&gt; request nginx will send the &lt;code&gt;/data/images/example.png&lt;/code&gt; file. If such file does not exist, nginx will send a response indicating the 404 error. Requests with URIs not starting with &lt;code&gt;/images/&lt;/code&gt; will be mapped onto the &lt;code&gt;/data/www&lt;/code&gt; directory. For example, in response to the &lt;code&gt;http://localhost/some/example.html&lt;/code&gt; request nginx will send the &lt;code&gt;/data/www/some/example.html&lt;/code&gt; file.</source>
          <target state="translated">이미 표준 포트 80에서 수신 대기하고 로컬 시스템 ( &lt;code&gt;http://localhost/&lt;/code&gt; 에서 액세스 할 수있는 서버의 작동중인 구성입니다 . &lt;code&gt;/images/&lt;/code&gt; 시작하는 URI가있는 요청에 응답 하여 서버는 &lt;code&gt;/data/images&lt;/code&gt; 디렉토리 에서 파일을 보냅니다 . 예를 들어, &lt;code&gt;http://localhost/images/example.png&lt;/code&gt; 요청 에 응답하여 nginx는 &lt;code&gt;/data/images/example.png&lt;/code&gt; 파일 을 보냅니다 . 이러한 파일이 존재하지 않으면 nginx는 404 오류를 나타내는 응답을 보냅니다. &lt;code&gt;/images/&lt;/code&gt; 시작하지 않는 URI가있는 요청 은 &lt;code&gt;/data/www&lt;/code&gt; 디렉토리에 매핑됩니다 . 예를 들어 &lt;code&gt;http://localhost/some/example.html&lt;/code&gt; 에 대한 응답으로요청 nginx는 &lt;code&gt;/data/www/some/example.html&lt;/code&gt; 파일 을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="3c8d2dfb509f908661c0fa268fef3c2e82439d85" translate="yes" xml:space="preserve">
          <source>This method also decrements the &lt;code&gt;tries&lt;/code&gt; counter.</source>
          <target state="translated">이 방법은 또한 &lt;code&gt;tries&lt;/code&gt; 카운터를 감소시킵니다 .</target>
        </trans-unit>
        <trans-unit id="85f5180f3d3ea97df451273ca23722cd040306be" translate="yes" xml:space="preserve">
          <source>This module implements handling of HTTP Dynamic Streaming requests in the &amp;ldquo;&lt;code&gt;/videoSeg1-Frag1&lt;/code&gt;&amp;rdquo; form &amp;mdash; extracting the needed fragment from the &lt;code&gt;videoSeg1.f4f&lt;/code&gt; file using the &lt;code&gt;videoSeg1.f4x&lt;/code&gt; index file. This module is an alternative to the Adobe&amp;rsquo;s f4f module (HTTP Origin Module) for Apache.</source>
          <target state="translated">이 모듈은 &quot; &lt;code&gt;/videoSeg1-Frag1&lt;/code&gt; &quot;형식 으로 HTTP 동적 스트리밍 요청 처리를 구현 하여 &lt;code&gt;videoSeg1.f4x&lt;/code&gt; 색인 파일을 사용하여 &lt;code&gt;videoSeg1.f4f&lt;/code&gt; 파일 에서 필요한 조각을 추출 합니다. 이 모듈은 Apache 용 Adobe f4f 모듈 (HTTP Origin Module)의 대안입니다.</target>
        </trans-unit>
        <trans-unit id="d75af8ee915b5f9e5648926a88e81a2a9d9e95d9" translate="yes" xml:space="preserve">
          <source>This module is available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://nginx.com/products/&quot;&gt;상용 가입의&lt;/a&gt; 일부로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="07085400c8c010bfc1f97f539723be77f6a81bd8" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-google_perftools_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-google_perftools_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="89453f945dacf1bdda3db0ef6e2cb9d33379d692" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_auth_request_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_auth_request_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="828b496305ad7745adf0e473b53dbf2d49cf20e0" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_dav_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_dav_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9da38b1db7e425b98be90ae5e95eb8262fcc291d" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_flv_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_flv_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3461a9b23b5fcd111c7618562c7107cd82186685" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_geoip_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_geoip_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="71355c19f59769b2f96c42f82279f200a695a065" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_gunzip_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_gunzip_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7a60fc552a29e13d03cd70565fa94d281f6c9544" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_gzip_static_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_gzip_static_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2945013c6a5cb93a18f672c28ef2dacea744366f" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_image_filter_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_image_filter_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1257d9de7792c5b9f60b9039a1dbfbc4d2f9b31e" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_mp4_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_mp4_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e8361a3d30f0b3305d64e04b19891a50cb7d814e" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_perl_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_perl_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1574164d90a6128673273f2f4426750e0cb5ff7b" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_random_index_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_random_index_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f3bf3b19438e5cc25dc447e660a1508e67f2c493" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_realip_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_realip_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ade45f58266d9d621e2d734c0fc28554338a5f47" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_secure_link_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_secure_link_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5acedf2607057bf3db8de6e1511379ffcb09e8a1" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_slice_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_slice_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a357d327fdb602ce2093446af5f65756103e630d" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_spdy_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_spdy_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3f3be39defec2ca753e30c60c3651d22a60fda23" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_ssl_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_ssl_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f46eab60c88f0f3f9a887746d875100c37cb058a" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_stub_status_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_stub_status_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d18fbae0f823a369756c5d19b7c26a8d35494d62" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_sub_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_sub_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ef70341b4dabe8e20c78e8545ec094a7e9d49616" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_v2_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_v2_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="643ea15c61d71e000b16b879a836d24e809cbae3" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-http_xslt_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-http_xslt_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f0a5e367d5053e4a698731b6a34d281c367e7549" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-mail&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-mail&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="02e8310e5f2181b75f8bd7beb8c8da80a5def9e6" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-mail_ssl_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-mail_ssl_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7c4f3510ae927a38fe9432ddd6e8d78dc1da138b" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-stream_geoip_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-stream_geoip_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1ef7368dbfb1bc9929ebc0250a501661082a54b0" translate="yes" xml:space="preserve">
          <source>This module is not built by default, it should be enabled with the &lt;code&gt;--with-stream_realip_module&lt;/code&gt; configuration parameter.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않으며 &lt;code&gt;--with-stream_realip_module&lt;/code&gt; 구성 매개 변수를 사용하여 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3c3cf0ed417df7675566e3d88ea891b574323a3e" translate="yes" xml:space="preserve">
          <source>This module is not built by default. Download and install instructions are available &lt;a href=&quot;../njs/install&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 기본적으로 빌드되지 않습니다. 다운로드 및 설치 지침은 &lt;a href=&quot;../njs/install&quot;&gt;여기에 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0da87b9b49843e732e259db0a8188fc0cfe0cc94" translate="yes" xml:space="preserve">
          <source>This module requires &lt;a href=&quot;https://www.perl.org/get.html&quot;&gt;Perl&lt;/a&gt; version 5.6.1 or higher. The C compiler should be compatible with the one used to build Perl.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;https://www.perl.org/get.html&quot;&gt;Perl&lt;/a&gt; 버전 5.6.1 이상 이 필요합니다 . C 컴파일러는 Perl을 빌드하는 데 사용되는 컴파일러와 호환 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="25ab3a2b2d6cd5f35a5bbf922cc78bcca39e531c" translate="yes" xml:space="preserve">
          <source>This module requires the &lt;a href=&quot;http://www.maxmind.com/app/c&quot;&gt;MaxMind GeoIP&lt;/a&gt; library.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;http://www.maxmind.com/app/c&quot;&gt;MaxMind GeoIP&lt;/a&gt; 라이브러리 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="cef51fc26f88fca2ea2362a736e38e55b29ff233" translate="yes" xml:space="preserve">
          <source>This module requires the &lt;a href=&quot;http://www.openssl.org&quot;&gt;OpenSSL&lt;/a&gt; library.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;http://www.openssl.org&quot;&gt;OpenSSL&lt;/a&gt; 라이브러리 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="ef5ee29e431b9c77e7c8d7bd1e98aed6ebf8c1a1" translate="yes" xml:space="preserve">
          <source>This module requires the &lt;a href=&quot;http://xmlsoft.org&quot;&gt;libxml2&lt;/a&gt; and &lt;a href=&quot;http://xmlsoft.org/XSLT/&quot;&gt;libxslt&lt;/a&gt; libraries.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;http://xmlsoft.org&quot;&gt;libxml2&lt;/a&gt; 및 &lt;a href=&quot;http://xmlsoft.org/XSLT/&quot;&gt;libxslt&lt;/a&gt; 라이브러리 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="309e976e5730bfb5e8f63a8043e7928eac0f31f6" translate="yes" xml:space="preserve">
          <source>This module requires the &lt;a href=&quot;https://github.com/gperftools/gperftools&quot;&gt;gperftools&lt;/a&gt; library.</source>
          <target state="translated">이 모듈에는 &lt;a href=&quot;https://github.com/gperftools/gperftools&quot;&gt;gperftools&lt;/a&gt; 라이브러리 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="71e55df88be569ceb742e4c7ecd150cc304126fa" translate="yes" xml:space="preserve">
          <source>This module utilizes the &lt;a href=&quot;http://libgd.org&quot;&gt;libgd&lt;/a&gt; library. It is recommended to use the latest available version of the library.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://libgd.org&quot;&gt;libgd&lt;/a&gt; 라이브러리를 사용합니다 . 사용 가능한 최신 버전의 라이브러리를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f3f35984a3d9b0fae60cce6b84908b335e79c666" translate="yes" xml:space="preserve">
          <source>This module was available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt; until 1.13.10. It was superseded by the &lt;a href=&quot;ngx_http_api_module&quot;&gt;ngx_http_api_module&lt;/a&gt; module in 1.13.3.</source>
          <target state="translated">이 모듈은 1.13.10까지 &lt;a href=&quot;http://nginx.com/products/&quot;&gt;상용 구독의&lt;/a&gt; 일부로 제공되었습니다 . &lt;a href=&quot;ngx_http_api_module&quot;&gt;1.13.3&lt;/a&gt; 의 ngx_http_api_module 모듈 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f531577aa1618852a87ac77c135201798eae535e" translate="yes" xml:space="preserve">
          <source>This module was superseded by the &lt;a href=&quot;ngx_http_v2_module&quot;&gt;ngx_http_v2_module&lt;/a&gt; module in 1.9.5.</source>
          <target state="translated">이 모듈은 1.9.5 에서 &lt;a href=&quot;ngx_http_v2_module&quot;&gt;ngx_http_v2_module&lt;/a&gt; 모듈로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4ec16722d3a720520325c816b34a0b30751afd2d" translate="yes" xml:space="preserve">
          <source>This parameter should be specified before the list of values.</source>
          <target state="translated">이 매개 변수는 값 목록보다 먼저 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="041f3d9421ef0b227bd6f6e10e4ffa74cc04a8a1" translate="yes" xml:space="preserve">
          <source>This restriction does not apply to responses that will be &lt;a href=&quot;#fastcgi_cache&quot;&gt;cached&lt;/a&gt; or &lt;a href=&quot;#fastcgi_store&quot;&gt;stored&lt;/a&gt; on disk.</source>
          <target state="translated">이 제한은 디스크에 &lt;a href=&quot;#fastcgi_cache&quot;&gt;캐시&lt;/a&gt; 되거나 &lt;a href=&quot;#fastcgi_store&quot;&gt;저장&lt;/a&gt; 될 응답에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="56f71d58ef1ad2a5607fe8ab72ffb02382d51a8e" translate="yes" xml:space="preserve">
          <source>This restriction does not apply to responses that will be &lt;a href=&quot;#proxy_cache&quot;&gt;cached&lt;/a&gt; or &lt;a href=&quot;#proxy_store&quot;&gt;stored&lt;/a&gt; on disk.</source>
          <target state="translated">이 제한은 디스크에 &lt;a href=&quot;#proxy_cache&quot;&gt;캐시&lt;/a&gt; 되거나 &lt;a href=&quot;#proxy_store&quot;&gt;저장&lt;/a&gt; 될 응답에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="762e136267776cb0f19baad65dc75a9221878622" translate="yes" xml:space="preserve">
          <source>This restriction does not apply to responses that will be &lt;a href=&quot;#scgi_cache&quot;&gt;cached&lt;/a&gt; or &lt;a href=&quot;#scgi_store&quot;&gt;stored&lt;/a&gt; on disk.</source>
          <target state="translated">이 제한은 디스크에 &lt;a href=&quot;#scgi_cache&quot;&gt;캐시&lt;/a&gt; 되거나 &lt;a href=&quot;#scgi_store&quot;&gt;저장&lt;/a&gt; 될 응답에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="729ee5d94e944a736052837058ed989e087fda06" translate="yes" xml:space="preserve">
          <source>This restriction does not apply to responses that will be &lt;a href=&quot;#uwsgi_cache&quot;&gt;cached&lt;/a&gt; or &lt;a href=&quot;#uwsgi_store&quot;&gt;stored&lt;/a&gt; on disk.</source>
          <target state="translated">이 제한은 디스크에 &lt;a href=&quot;#uwsgi_cache&quot;&gt;캐시&lt;/a&gt; 되거나 &lt;a href=&quot;#uwsgi_store&quot;&gt;저장&lt;/a&gt; 될 응답에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7c201a1e9caae70710bf100f4213d03fc87e2bad" translate="yes" xml:space="preserve">
          <source>This server will filter requests ending with &lt;code&gt;.gif&lt;/code&gt;, &lt;code&gt;.jpg&lt;/code&gt;, or &lt;code&gt;.png&lt;/code&gt; and map them to the &lt;code&gt;/data/images&lt;/code&gt; directory (by adding URI to the &lt;code&gt;root&lt;/code&gt; directive&amp;rsquo;s parameter) and pass all other requests to the proxied server configured above.</source>
          <target state="translated">이 서버는 &lt;code&gt;.gif&lt;/code&gt; , &lt;code&gt;.jpg&lt;/code&gt; 또는 &lt;code&gt;.png&lt;/code&gt; 로 끝나는 요청을 필터링 하여 &lt;code&gt;root&lt;/code&gt; 지시자의 매개 변수에 URI를 추가 하여 &lt;code&gt;/data/images&lt;/code&gt; 디렉토리에 맵핑하고 다른 모든 요청을 위에 구성된 프록시 서버로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="503c437d6369ff9479ee9274873d53be3d149348" translate="yes" xml:space="preserve">
          <source>This variable may contain outdated information since the corresponding database field is deprecated.</source>
          <target state="translated">해당 데이터베이스 필드는 더 이상 사용되지 않으므로이 변수에는 오래된 정보가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="391c9812f63b492eae0dec954ba9e910a53f685d" translate="yes" xml:space="preserve">
          <source>This will be a simple server that listens on the port 8080 (previously, the &lt;code&gt;listen&lt;/code&gt; directive has not been specified since the standard port 80 was used) and maps all requests to the &lt;code&gt;/data/up1&lt;/code&gt; directory on the local file system. Create this directory and put the &lt;code&gt;index.html&lt;/code&gt; file into it. Note that the &lt;code&gt;root&lt;/code&gt; directive is placed in the &lt;code&gt;server&lt;/code&gt; context. Such &lt;code&gt;root&lt;/code&gt; directive is used when the &lt;code&gt;location&lt;/code&gt; block selected for serving a request does not include own &lt;code&gt;root&lt;/code&gt; directive.</source>
          <target state="translated">이 서버는 포트 8080에서 수신 대기하고 (이전 에는 표준 포트 80이 사용 된 이후에 &lt;code&gt;listen&lt;/code&gt; 지시문이 지정되지 않은) 단순 서버 이며 모든 요청을 로컬 파일 시스템 의 &lt;code&gt;/data/up1&lt;/code&gt; 디렉토리에 맵핑합니다 . 이 디렉토리를 작성하고 &lt;code&gt;index.html&lt;/code&gt; 파일을 넣으 십시오. 점을 유의 &lt;code&gt;root&lt;/code&gt; 지시자가에 위치 &lt;code&gt;server&lt;/code&gt; 컨텍스트. 이러한 &lt;code&gt;root&lt;/code&gt; 지시문은 요청을 처리하기 위해 선택된 &lt;code&gt;location&lt;/code&gt; 블록에 자체 &lt;code&gt;root&lt;/code&gt; 지시문이 포함되지 않은 경우에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="48223019dd5ef7d389103e3ec088f701a552cdef" translate="yes" xml:space="preserve">
          <source>This will set up a server that will route all requests except for requests for static images to the proxied server operating on &lt;code&gt;localhost:9000&lt;/code&gt; through the FastCGI protocol.</source>
          <target state="translated">이는 정적 이미지 요청을 제외한 모든 요청을 FastCGI 프로토콜을 통해 &lt;code&gt;localhost:9000&lt;/code&gt; 에서 작동하는 프록시 서버로 라우팅하는 서버를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="bb12e8aaaecc434fd51e448fe7669bced1bdd107" translate="yes" xml:space="preserve">
          <source>Threads</source>
          <target state="translated">Threads</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="a450676fcab0c819c08276a18761bdd5aca588e0" translate="yes" xml:space="preserve">
          <source>Time intervals can be specified in milliseconds, seconds, minutes, hours, days and so on, using the following suffixes:</source>
          <target state="translated">다음 접미사를 사용하여 시간 간격을 밀리 초, 초, 분, 시간, 일 등으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76bf7b6f337833b710ddde75748891d3daa705f6" translate="yes" xml:space="preserve">
          <source>Time of the last reload of configuration, in milliseconds since Epoch.</source>
          <target state="translated">Epoch 이후 마지막 구성 다시로드 시간 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="8e3a01c9c049c4272c9033d5312de7a777fe602e" translate="yes" xml:space="preserve">
          <source>Time of the last reload of configuration, in the ISO 8601 format with millisecond resolution.</source>
          <target state="translated">밀리 초 해상도의 ISO 8601 형식으로 구성을 마지막으로 다시로드 한 시간입니다.</target>
        </trans-unit>
        <trans-unit id="93f0e04eb5c46772b55a9267600fb1b683115ddb" translate="yes" xml:space="preserve">
          <source>Timer events</source>
          <target state="translated">타이머 이벤트</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="d55b8546e1d5086d1e28416b03620b2e2d2dd9b7" translate="yes" xml:space="preserve">
          <source>To add a &lt;code&gt;task&lt;/code&gt; into a queue of a specified thread pool &lt;code&gt;tp&lt;/code&gt; at runtime, use the &lt;code&gt;ngx_thread_task_post(tp, task)&lt;/code&gt; function. To execute a function in a thread, pass parameters and setup a completion handler using the &lt;code&gt;ngx_thread_task_t&lt;/code&gt; structure:</source>
          <target state="translated">런타임에 지정된 스레드 풀 &lt;code&gt;tp&lt;/code&gt; 의 큐에 &lt;code&gt;task&lt;/code&gt; 을 추가하려면 &lt;code&gt;ngx_thread_task_post(tp, task)&lt;/code&gt; 함수를 사용하십시오. 스레드에서 함수를 실행하려면 &lt;code&gt;ngx_thread_task_t&lt;/code&gt; 구조를 사용하여 매개 변수를 전달하고 완료 핸들러를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="065b653b488232a0cf9f9ea05e3286b050748e12" translate="yes" xml:space="preserve">
          <source>To add a handler to the header filter chain, store its address in the global variable &lt;code&gt;ngx_http_top_header_filter&lt;/code&gt; at configuration time. The previous handler address is normally stored in a static variable in a module and is called by the newly added handler before exiting.</source>
          <target state="translated">헤더 필터 체인에 핸들러를 추가하려면 구성시 글로벌 변수 &lt;code&gt;ngx_http_top_header_filter&lt;/code&gt; 에 해당 주소를 저장하십시오 . 이전 핸들러 주소는 일반적으로 모듈의 정적 변수에 저장되며 종료하기 전에 새로 추가 된 핸들러에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9d06d3094ab2b0e979bbb7ddad419c6870d6befc" translate="yes" xml:space="preserve">
          <source>To add a new backup server, send:</source>
          <target state="translated">새 백업 서버를 추가하려면 다음을 보내십시오.</target>
        </trans-unit>
        <trans-unit id="4a88ef4a9cffdfcde23213340ef1f526649ee7d9" translate="yes" xml:space="preserve">
          <source>To add a new primary server, set its parameters to non-default values and mark it as &amp;ldquo;&lt;code&gt;down&lt;/code&gt;&amp;rdquo;, send:</source>
          <target state="translated">새 기본 서버를 추가하려면 해당 매개 변수를 기본값이 아닌 값으로 설정하고 &quot; &lt;code&gt;down&lt;/code&gt; &quot; 으로 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="461f1adad4ba56c4f10255d373c7901adf2b4176" translate="yes" xml:space="preserve">
          <source>To add a new server, specify its address in the &amp;ldquo;&lt;code&gt;server=&lt;/code&gt;&amp;rdquo; parameter. Without other parameters specified, a server will be added with other parameters set to their default values (see the &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;stream&lt;/a&gt; &amp;ldquo;&lt;code&gt;server&lt;/code&gt;&amp;rdquo; directive).</source>
          <target state="translated">새 서버를 추가하려면&amp;ldquo; &lt;code&gt;server=&lt;/code&gt; &amp;rdquo;매개 변수에 주소를 지정하십시오 . 다른 매개 변수를 지정하지 않으면 서버에 다른 매개 변수가 기본값으로 설정되어 추가됩니다 ( &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;http&lt;/a&gt; 또는 &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;스트림&lt;/a&gt; &amp;ldquo; &lt;code&gt;server&lt;/code&gt; &amp;rdquo;지시문 참조).</target>
        </trans-unit>
        <trans-unit id="d03201fd17af7834832c7295555504c6d5a58771" translate="yes" xml:space="preserve">
          <source>To add a node to a tree, allocate a new node, initialize it and call &lt;code&gt;ngx_rbtree_insert()&lt;/code&gt;:</source>
          <target state="translated">트리에 노드를 추가하려면 새 노드를 할당하고 초기화 한 다음 &lt;code&gt;ngx_rbtree_insert()&lt;/code&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="67a45513a90070e3c8bd493a2d8ef5629aca8e94" translate="yes" xml:space="preserve">
          <source>To allocate memory from system heap, use the following functions:</source>
          <target state="translated">시스템 힙에서 메모리를 할당하려면 다음 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2808ace98b5a1dc4410b0381b1c0ab6e0800da54" translate="yes" xml:space="preserve">
          <source>To apply new configuration, send the &lt;code&gt;reload&lt;/code&gt; signal to nginx as described in the previous sections.</source>
          <target state="translated">새로운 구성을 적용하려면 이전 섹션에서 설명한대로 &lt;code&gt;reload&lt;/code&gt; 신호를 nginx로 전송하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ed2b7a5b1c43ed355b025d11726857417649e57" translate="yes" xml:space="preserve">
          <source>To apply the new configuration, start nginx if it is not yet started or send the &lt;code&gt;reload&lt;/code&gt; signal to the nginx&amp;rsquo;s master process, by executing:</source>
          <target state="translated">새 구성을 적용하려면 nginx가 아직 시작되지 않은 경우 시작하거나 다음을 실행 하여 &lt;code&gt;reload&lt;/code&gt; 신호를 nginx의 마스터 프로세스로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="8d49c0cebd801b41c4091037ada445d4fac63ae9" translate="yes" xml:space="preserve">
          <source>To avoid this, either the line redefining the log should be commented out, or the &lt;code&gt;debug&lt;/code&gt; level specification should also be added:</source>
          <target state="translated">이를 피하려면 로그를 재정의하는 행을 주석 처리하거나 &lt;code&gt;debug&lt;/code&gt; 레벨 스펙도 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="a4cd6c87c69fb00762b5d3f01cce36587edd93d1" translate="yes" xml:space="preserve">
          <source>To build nginx on the Microsoft Win32&lt;sup&gt;&amp;reg;&lt;/sup&gt; platform you need:</source>
          <target state="translated">Microsoft Win32 &lt;sup&gt;&amp;reg;&lt;/sup&gt; 플랫폼 에서 nginx를 빌드하려면 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3da0fd7c1eb862bac1df13cc407a80361c5fd866" translate="yes" xml:space="preserve">
          <source>To build nginx:</source>
          <target state="translated">nginx를 빌드하려면 :</target>
        </trans-unit>
        <trans-unit id="9bef6630e2cc678f225a75fe22aa900cb4a3ec04" translate="yes" xml:space="preserve">
          <source>To build only njs command-line &lt;a href=&quot;cli&quot;&gt;utility&lt;/a&gt;, run &lt;code&gt;./configure&lt;/code&gt; and &lt;code&gt;make njs&lt;/code&gt; commands from njs root directory. The utility is available as &lt;code&gt;./build/njs&lt;/code&gt;.</source>
          <target state="translated">단지 NJS 명령 줄 빌드하려면 &lt;a href=&quot;cli&quot;&gt;유틸리티&lt;/a&gt; 를 실행 &lt;code&gt;./configure&lt;/code&gt; 를 하고 &lt;code&gt;make njs&lt;/code&gt; NJS 루트 디렉토리에서 명령을. 이 유틸리티는 &lt;code&gt;./build/njs&lt;/code&gt; 로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="f8a111240319e3f32a5c69712b6aece0f024ebb1" translate="yes" xml:space="preserve">
          <source>To build the hash table, call the &lt;code&gt;ngx_hash_init(hinit, key_names, nelts)&lt;/code&gt; function:</source>
          <target state="translated">해시 테이블을 작성하려면 &lt;code&gt;ngx_hash_init(hinit, key_names, nelts)&lt;/code&gt; 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="bcb6d304bd9fafc9d88ff261a1e9517028e8cc7f" translate="yes" xml:space="preserve">
          <source>To compile a module into nginx statically, use the &lt;code&gt;--add-module=/path/to/module&lt;/code&gt; argument to the configure script. To compile a module for later dynamic loading into nginx, use the &lt;code&gt;--add-dynamic-module=/path/to/module&lt;/code&gt; argument.</source>
          <target state="translated">모듈을 nginx에 정적으로 컴파일하려면 configure 스크립트에 &lt;code&gt;--add-module=/path/to/module&lt;/code&gt; 인수를 사용하십시오. 나중에 nginx로 동적로드하기 위해 모듈을 컴파일하려면 &lt;code&gt;--add-dynamic-module=/path/to/module&lt;/code&gt; 인수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="39d94ec8db73ca7ebf66ba5a5686cf96a828ecf8" translate="yes" xml:space="preserve">
          <source>To configure an HTTPS server, the &lt;code&gt;ssl&lt;/code&gt; parameter must be enabled on &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listening sockets&lt;/a&gt; in the &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;server&lt;/a&gt; block, and the locations of the &lt;a href=&quot;ngx_http_ssl_module#ssl_certificate&quot;&gt;server certificate&lt;/a&gt; and &lt;a href=&quot;ngx_http_ssl_module#ssl_certificate_key&quot;&gt;private key&lt;/a&gt; files should be specified:</source>
          <target state="translated">HTTPS 서버를 구성하려면 &lt;code&gt;ssl&lt;/code&gt; 매개 변수를 사용하도록 설정해야합니다 &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;소켓을 듣고&lt;/a&gt; 에 &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;서버&lt;/a&gt; 블록과의 위치 &lt;a href=&quot;ngx_http_ssl_module#ssl_certificate&quot;&gt;서버 인증서&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_ssl_module#ssl_certificate_key&quot;&gt;개인 키&lt;/a&gt; 파일 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="883d7ba1bf87907c37409a1863f702f9411951f2" translate="yes" xml:space="preserve">
          <source>To configure ip-hash load balancing, just add the &lt;a href=&quot;ngx_http_upstream_module#ip_hash&quot;&gt;ip_hash&lt;/a&gt; directive to the server (upstream) group configuration:</source>
          <target state="translated">ip-hash로드 밸런싱을 구성하려면 &lt;a href=&quot;ngx_http_upstream_module#ip_hash&quot;&gt;ip_hash를&lt;/a&gt; 추가하십시오 . 지시문을 서버 (업스트림) 그룹 구성에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="1e701d013bed1e92a39eec740f6ca642b46670ff" translate="yes" xml:space="preserve">
          <source>To configure load balancing for HTTPS instead of HTTP, just use &amp;ldquo;https&amp;rdquo; as the protocol.</source>
          <target state="translated">HTTP 대신 HTTPS에 대한로드 밸런싱을 구성하려면 프로토콜로 &quot;https&quot;를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="387e6594c498afc7966198e432f6c0b0bd67acd7" translate="yes" xml:space="preserve">
          <source>To convert a Unicode string to hex, first, it should be converted to a byte string and then to hex:</source>
          <target state="translated">유니 코드 문자열을 16 진수로 변환하려면 먼저 바이트 문자열로 변환 한 다음 16 진수로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="71c03976d43f82ddb3280fc2462a19d6db5201e5" translate="yes" xml:space="preserve">
          <source>To create a hash that works with wildcards, use the &lt;code&gt;ngx_hash_combined_t&lt;/code&gt; type. It includes the hash type described above and has two additional keys arrays: &lt;code&gt;dns_wc_head&lt;/code&gt; and &lt;code&gt;dns_wc_tail&lt;/code&gt;. The initialization of basic properties is similar to a regular hash:</source>
          <target state="translated">와일드 카드와 함께 작동하는 해시를 만들려면 &lt;code&gt;ngx_hash_combined_t&lt;/code&gt; 유형을 사용하십시오 . 위에서 설명한 해시 유형을 포함하고 &lt;code&gt;dns_wc_head&lt;/code&gt; 및 &lt;code&gt;dns_wc_tail&lt;/code&gt; 두 개의 추가 키 배열이 있습니다. 기본 속성의 초기화는 일반 해시와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="9c7da7dea4b12d576ec6df480de65c540f3d15be" translate="yes" xml:space="preserve">
          <source>To create a variable, use the &lt;code&gt;ngx_http_add_variable()&lt;/code&gt; function. It takes as arguments a configuration (where the variable is registered), the variable name and flags that control the function's behaviour:</source>
          <target state="translated">변수를 만들려면 &lt;code&gt;ngx_http_add_variable()&lt;/code&gt; 함수를 사용하십시오 . 함수 (변수가 등록 된) 구성, 변수 이름 및 함수의 동작을 제어하는 ​​플래그를 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0a39a6c778b92ffee4a9b3c0542d012facd5ac91" translate="yes" xml:space="preserve">
          <source>To deal with a tree as a whole, you need two nodes: root and sentinel. Typically, they are added to a custom structure, allowing you to organize your data into a tree in which the leaves contain a link to or embed your data.</source>
          <target state="translated">트리 전체를 다루려면 루트와 센티넬이라는 두 개의 노드가 필요합니다. 일반적으로 사용자 정의 구조에 추가되어 잎에 데이터에 대한 링크를 포함하거나 포함하는 트리로 데이터를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e85d62ca7943b49c7a2cf219fdf93453f693463d" translate="yes" xml:space="preserve">
          <source>To deal with synchronization, the following wrappers over &lt;code&gt;pthreads&lt;/code&gt; primitives are available:</source>
          <target state="translated">동기화를 처리하기 위해 &lt;code&gt;pthreads&lt;/code&gt; 프리미티브에 대한 다음 랩퍼를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15052106d7d336b01ae20264c3f0acc5ac2e7a18" translate="yes" xml:space="preserve">
          <source>To enable a debugging log, nginx needs to be configured to support debugging during the build:</source>
          <target state="translated">디버깅 로그를 활성화하려면 빌드 도중 디버깅을 지원하도록 nginx를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="9e314ba45198a9ba0083d802bfcac21ec7fad9c8" translate="yes" xml:space="preserve">
          <source>To initialize a tree:</source>
          <target state="translated">트리를 초기화하려면</target>
        </trans-unit>
        <trans-unit id="e4fe7c7f665c734c809dfde4b10b6eff59411b12" translate="yes" xml:space="preserve">
          <source>To insert keys into a hash keys array, use the &lt;code&gt;ngx_hash_add_key(keys_array, key, value, flags)&lt;/code&gt; function:</source>
          <target state="translated">해시 키 배열에 키를 삽입하려면 &lt;code&gt;ngx_hash_add_key(keys_array, key, value, flags)&lt;/code&gt; 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="56c93f03c8f1c6dc18bce25e8021506dd8d46624" translate="yes" xml:space="preserve">
          <source>To install nginx/Windows, &lt;a href=&quot;https://nginx.org/en/download.html&quot;&gt;download&lt;/a&gt; the latest mainline version distribution (1.17.2), since the mainline branch of nginx contains all known fixes. Then unpack the distribution, go to the nginx-1.17.2 directory, and run &lt;code&gt;nginx&lt;/code&gt;. Here is an example for the drive C: root directory:</source>
          <target state="translated">nginx / Windows를 설치하려면 nginx 의 메인 라인 분기에 알려진 모든 수정 사항이 포함되어 있으므로 최신 메인 라인 버전 배포 (1.17.2)를 &lt;a href=&quot;https://nginx.org/en/download.html&quot;&gt;다운로드&lt;/a&gt; 하십시오. 그런 다음, 배포를 풀고의 nginx-1.17.2 디렉토리로 이동하고, 실행 &lt;code&gt;nginx&lt;/code&gt; . 다음은 C 드라이브의 루트 디렉토리 예입니다.</target>
        </trans-unit>
        <trans-unit id="a7fe3d230a5c3fce188a1776a88012f9898fe093" translate="yes" xml:space="preserve">
          <source>To make a particular location emit the &amp;ldquo;&lt;code&gt;application/octet-stream&lt;/code&gt;&amp;rdquo; MIME type for all requests, the following configuration can be used:</source>
          <target state="translated">특정 위치 에서 모든 요청에 ​​대해 &quot; &lt;code&gt;application/octet-stream&lt;/code&gt; &quot;MIME 유형을 내보내려면 다음 구성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e57bd2a974430f75fce6e62d2215914eb54f915" translate="yes" xml:space="preserve">
          <source>To mark an existing server as &amp;ldquo;&lt;code&gt;down&lt;/code&gt;&amp;rdquo;, send:</source>
          <target state="translated">기존 서버를 &quot; &lt;code&gt;down&lt;/code&gt; &quot; 으로 표시하려면 다음을 전송하십시오.</target>
        </trans-unit>
        <trans-unit id="8428ed8d9f0ff8aec9daa43eeb40065b1f50015a" translate="yes" xml:space="preserve">
          <source>To minimize the number of accesses to FastCGI servers when populating a new cache element, the &lt;a href=&quot;#fastcgi_cache_lock&quot;&gt;fastcgi_cache_lock&lt;/a&gt; directive can be used.</source>
          <target state="translated">새 캐시 요소를 &lt;a href=&quot;#fastcgi_cache_lock&quot;&gt;채울&lt;/a&gt; 때 FastCGI 서버에 대한 액세스 수를 최소화하기 위해 fastcgi_cache_lock 지시문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f767802b833a56ce7bf2aac63b475e99ac29907" translate="yes" xml:space="preserve">
          <source>To minimize the number of accesses to SCGI servers when populating a new cache element, the &lt;a href=&quot;#scgi_cache_lock&quot;&gt;scgi_cache_lock&lt;/a&gt; directive can be used.</source>
          <target state="translated">새 캐시 요소를 &lt;a href=&quot;#scgi_cache_lock&quot;&gt;채울&lt;/a&gt; 때 SCGI 서버에 대한 액세스 수를 최소화하기 위해 scgi_cache_lock 지시문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e04f5a40f7ea046a98b87971b598082c03360c4c" translate="yes" xml:space="preserve">
          <source>To minimize the number of accesses to proxied servers when populating a new cache element, the &lt;a href=&quot;#proxy_cache_lock&quot;&gt;proxy_cache_lock&lt;/a&gt; directive can be used.</source>
          <target state="translated">새 캐시 요소를 &lt;a href=&quot;#proxy_cache_lock&quot;&gt;채울&lt;/a&gt; 때 프록시 서버에 대한 액세스 수를 최소화하기 위해 proxy_cache_lock 지시문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0a2eb72f75913fbd7bdded47d71dee5b0e54066" translate="yes" xml:space="preserve">
          <source>To minimize the number of accesses to uwsgi servers when populating a new cache element, the &lt;a href=&quot;#uwsgi_cache_lock&quot;&gt;uwsgi_cache_lock&lt;/a&gt; directive can be used.</source>
          <target state="translated">새 캐시 요소를 채울 때 uwsgi 서버에 대한 액세스 수를 최소화하기 위해 &lt;a href=&quot;#uwsgi_cache_lock&quot;&gt;uwsgi_cache_lock&lt;/a&gt; 지시문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99f4fcd4e10c83137a0ac37cbbcb599a54568173" translate="yes" xml:space="preserve">
          <source>To modify other parameters of an existing server, send:</source>
          <target state="translated">기존 서버의 다른 매개 변수를 수정하려면 다음을 전송하십시오.</target>
        </trans-unit>
        <trans-unit id="8662a88329026c02e472063b6ebdb0ea8f10aebf" translate="yes" xml:space="preserve">
          <source>To modify the address of an existing server, send:</source>
          <target state="translated">기존 서버의 주소를 수정하려면 다음을 전송하십시오.</target>
        </trans-unit>
        <trans-unit id="a85cad7e1502fda684dd9d841effde9c13f1765f" translate="yes" xml:space="preserve">
          <source>To obtain the current time, it is usually sufficient to access one of the available global variables, representing the cached time value in the desired format.</source>
          <target state="translated">현재 시간을 얻으려면 일반적으로 캐시 된 시간 값을 원하는 형식으로 나타내는 사용 가능한 전역 변수 중 하나에 액세스하는 것으로 충분합니다.</target>
        </trans-unit>
        <trans-unit id="b1cfd8332469702e9f67b68f7785a1ac179d29bd" translate="yes" xml:space="preserve">
          <source>To obtain the time explicitly, use &lt;code&gt;ngx_gettimeofday()&lt;/code&gt;, which updates its argument (pointer to &lt;code&gt;struct timeval&lt;/code&gt;). The time is always updated when nginx returns to the event loop from system calls. To update the time immediately, call &lt;code&gt;ngx_time_update()&lt;/code&gt;, or &lt;code&gt;ngx_time_sigsafe_update()&lt;/code&gt; if updating the time in the signal handler context.</source>
          <target state="translated">시간을 명시 적으로 얻으려면 &lt;code&gt;ngx_gettimeofday()&lt;/code&gt; 사용 하여 인수를 업데이트합니다 ( &lt;code&gt;struct timeval&lt;/code&gt; 포인터 ). nginx가 시스템 호출에서 이벤트 루프로 돌아올 때 시간이 항상 업데이트됩니다. 신호 핸들러 컨텍스트에서 시간을 업데이트하는 경우 시간을 즉시 업데이트하려면 &lt;code&gt;ngx_time_update()&lt;/code&gt; 또는 &lt;code&gt;ngx_time_sigsafe_update()&lt;/code&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b0877edf55f05a92b7b9d2f2d41f030361cd29a" translate="yes" xml:space="preserve">
          <source>To prevent DNS spoofing, it is recommended configuring DNS servers in a properly secured trusted local network.</source>
          <target state="translated">DNS 스푸핑을 방지하려면 올바르게 보안 된 신뢰할 수있는 로컬 네트워크에서 DNS 서버를 구성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6ff155a16e1011ceb44119d1d2ab2d12703e2ea4" translate="yes" xml:space="preserve">
          <source>To prevent unauthorized access, the expression may contain some information about the client, such as its address and browser version.</source>
          <target state="translated">무단 액세스를 방지하기 위해 표현식에는 클라이언트의 주소 및 브라우저 버전과 같은 일부 정보가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66e08856e7c8dcd40698d53db085e79283d0f45c" translate="yes" xml:space="preserve">
          <source>To protect data in shared memory from concurrent access, use the mutex available in the &lt;code&gt;mutex&lt;/code&gt; field of &lt;code&gt;ngx_slab_pool_t&lt;/code&gt;. A mutex is most commonly used by the slab pool while allocating and freeing memory, but it can be used to protect any other user data structures allocated in the shared zone. To lock or unlock a mutex, call &lt;code&gt;ngx_shmtx_lock(&amp;amp;shpool-&amp;gt;mutex)&lt;/code&gt; or &lt;code&gt;ngx_shmtx_unlock(&amp;amp;shpool-&amp;gt;mutex)&lt;/code&gt; respectively.</source>
          <target state="translated">공유 메모리의 데이터를 동시 액세스로부터 보호하려면 &lt;code&gt;ngx_slab_pool_t&lt;/code&gt; 의 &lt;code&gt;mutex&lt;/code&gt; 필드 에서 사용 가능한 mutex를 사용하십시오 . 뮤텍스는 메모리를 할당하고 해제하는 동안 슬랩 풀에서 가장 일반적으로 사용되지만 공유 영역에 할당 된 다른 사용자 데이터 구조를 보호하는 데 사용할 수 있습니다. 뮤텍스를 잠 그거나 잠금 해제하려면 &lt;code&gt;ngx_shmtx_lock(&amp;amp;shpool-&amp;gt;mutex)&lt;/code&gt; 또는 &lt;code&gt;ngx_shmtx_unlock(&amp;amp;shpool-&amp;gt;mutex)&lt;/code&gt; 각각 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="77c44df71b16270c2df4131fe9727720e3dacee0" translate="yes" xml:space="preserve">
          <source>To quickly process static sets of data such as server names, &lt;a href=&quot;http/ngx_http_map_module#map&quot;&gt;map&lt;/a&gt; directive&amp;rsquo;s values, MIME types, names of request header strings, nginx uses hash tables. During the start and each re-configuration nginx selects the minimum possible sizes of hash tables such that the bucket size that stores keys with identical hash values does not exceed the configured parameter (hash bucket size). The size of a table is expressed in buckets. The adjustment is continued until the table size exceeds the hash max size parameter. Most hashes have the corresponding directives that allow changing these parameters, for example, for the server names hash they are &lt;a href=&quot;http/ngx_http_core_module#server_names_hash_max_size&quot;&gt;server_names_hash_max_size&lt;/a&gt; and &lt;a href=&quot;http/ngx_http_core_module#server_names_hash_bucket_size&quot;&gt;server_names_hash_bucket_size&lt;/a&gt;.</source>
          <target state="translated">서버 이름, &lt;a href=&quot;http/ngx_http_map_module#map&quot;&gt;맵&lt;/a&gt; 지시문 값, MIME 유형, 요청 헤더 문자열 이름과 같은 정적 데이터 세트를 빠르게 처리하기 위해 nginx는 해시 테이블을 사용합니다. 시작 및 각 재구성 중에 nginx는 해시 값이 동일한 키를 저장하는 버킷 크기가 구성된 매개 변수 (해시 버킷 크기)를 초과하지 않도록 가능한 최소 해시 테이블 크기를 선택합니다. 테이블의 크기는 버킷으로 표시됩니다. 테이블 크기가 해시 최대 크기 매개 변수를 초과 할 때까지 조정이 계속됩니다. 대부분의 해시에는 이러한 매개 변수를 변경할 수있는 해당 지시문이 있습니다 (예 : 서버 이름 해시의 경우 &lt;a href=&quot;http/ngx_http_core_module#server_names_hash_max_size&quot;&gt;server_names_hash_max_size&lt;/a&gt; 및 &lt;a href=&quot;http/ngx_http_core_module#server_names_hash_bucket_size&quot;&gt;server_names_hash_bucket_size)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c418e1e834e4b65ed8cd1245422ffc036e42e16f" translate="yes" xml:space="preserve">
          <source>To reduce the processor load it is recommended to</source>
          <target state="translated">프로세서로드를 줄이려면 다음을 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1cc926fcd43120c552b8fd5d019016142ba627b5" translate="yes" xml:space="preserve">
          <source>To reduce the processor load, it is recommended to</source>
          <target state="translated">프로세서로드를 줄이려면 다음을 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3fb90df7d6c4498cea727b88ebeacf3d505816bc" translate="yes" xml:space="preserve">
          <source>To register a pool cleanup, call &lt;code&gt;ngx_pool_cleanup_add(pool, size)&lt;/code&gt;, which returns a &lt;code&gt;ngx_pool_cleanup_t&lt;/code&gt; pointer to be filled in by the caller. Use the &lt;code&gt;size&lt;/code&gt; argument to allocate context for the cleanup handler.</source>
          <target state="translated">풀 정리를 등록하려면 호출자가 채울 &lt;code&gt;ngx_pool_cleanup_t&lt;/code&gt; 포인터를 리턴하는 ngx_pool_cleanup_add &lt;code&gt;ngx_pool_cleanup_add(pool, size)&lt;/code&gt; 를 호출하십시오. 정리 인수에 컨텍스트를 할당 하려면 &lt;code&gt;size&lt;/code&gt; 인수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="56e85afdddf08c0eba0e63a2e27b82574b22854f" translate="yes" xml:space="preserve">
          <source>To remove a node, call the &lt;code&gt;ngx_rbtree_delete()&lt;/code&gt; function:</source>
          <target state="translated">노드를 제거하려면 &lt;code&gt;ngx_rbtree_delete()&lt;/code&gt; 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="0deb9525806450770a051178e7890fe32ce335e9" translate="yes" xml:space="preserve">
          <source>To remove a node, update a DNS record of a cluster hostname and remove the IP address of the node. All other nodes will eventually discover that the node is removed, close connections to the node, and will no longer try to connect to it. After the node is removed, it can be stopped as described above. In case of static configuration, other nodes need to be reloaded in order to stop sending updates to the removed node.</source>
          <target state="translated">노드를 제거하려면 클러스터 호스트 이름의 DNS 레코드를 업데이트하고 노드의 IP 주소를 제거하십시오. 다른 모든 노드는 결국 노드가 제거되었음을 발견하고 노드에 대한 연결을 닫고 더 이상 연결하려고하지 않습니다. 노드가 제거 된 후 위에서 설명한대로 중지 할 수 있습니다. 정적 구성의 경우 제거 된 노드로 업데이트 전송을 중지하려면 다른 노드를 다시로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0263cbe5b91b0a196c35167f1eaacd009fe91f8" translate="yes" xml:space="preserve">
          <source>To remove a server, specify its ID:</source>
          <target state="translated">서버를 제거하려면 해당 ID를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="6d51eabd06f8d42ad9038a21777855a8543f19b5" translate="yes" xml:space="preserve">
          <source>To send the response body, call the &lt;code&gt;ngx_http_output_filter(r, cl)&lt;/code&gt; function. The function can be called multiple times. Each time, it sends a part of the response body in the form of a buffer chain. Set the &lt;code&gt;last_buf&lt;/code&gt; flag in the last body buffer.</source>
          <target state="translated">응답 본문을 보내려면 &lt;code&gt;ngx_http_output_filter(r, cl)&lt;/code&gt; 함수를 호출하십시오 . 이 함수는 여러 번 호출 될 수 있습니다. 매번, 응답 본문의 일부를 버퍼 체인 형태로 보냅니다. 마지막 바디 버퍼에서 &lt;code&gt;last_buf&lt;/code&gt; 플래그를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8fc3f46862430935d1ed0b2fd053dc63521ec05c" translate="yes" xml:space="preserve">
          <source>To start a new node, update a DNS record of a cluster hostname with the IP address of the new node and start an instance. The new node will discover other nodes from DNS or static configuration and will start sending updates to them. Other nodes will eventually discover the new node using DNS and start pushing updates to it. In case of static configuration, other nodes need to be reloaded in order to send updates to the new node.</source>
          <target state="translated">새 노드를 시작하려면 새 노드의 IP 주소로 클러스터 호스트 이름의 DNS 레코드를 업데이트하고 인스턴스를 시작하십시오. 새 노드는 DNS 또는 정적 구성에서 다른 노드를 발견하고 업데이트를 보내기 시작합니다. 다른 노드는 결국 DNS를 사용하여 새 노드를 발견하고 업데이트를 시작합니다. 정적 구성의 경우 새 노드로 업데이트를 보내려면 다른 노드를 다시로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="41655ee16669a6b8a5a698db857316f2d979191c" translate="yes" xml:space="preserve">
          <source>To start nginx, run the executable file. Once nginx is started, it can be controlled by invoking the executable with the &lt;code&gt;-s&lt;/code&gt; parameter. Use the following syntax:</source>
          <target state="translated">nginx를 시작하려면 실행 파일을 실행하십시오. nginx가 시작되면 &lt;code&gt;-s&lt;/code&gt; 매개 변수 를 사용하여 실행 파일을 호출하여 제어 할 수 있습니다 . 다음 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="43afe017c0eec12443193e55fa7424f2a7146422" translate="yes" xml:space="preserve">
          <source>To start playback, the player first needs to read metadata. This is done by sending a special request with the &lt;code&gt;start=0&lt;/code&gt; argument. A lot of encoding software insert the metadata at the end of the file. This is suboptimal for pseudo-streaming, because the player has to download the entire file before starting playback. If the metadata are located at the beginning of the file, it is enough for nginx to simply start sending back the file contents. If the metadata are located at the end of the file, nginx must read the entire file and prepare a new stream so that the metadata come before the media data. This involves some CPU, memory, and disk I/O overhead, so it is a good idea to &lt;a href=&quot;http://flowplayer.org/plugins/streaming/pseudostreaming.html#prepare&quot;&gt; prepare an original file for pseudo-streaming&lt;/a&gt; in advance, rather than having nginx do this on every such request.</source>
          <target state="translated">재생을 시작하려면 먼저 플레이어가 메타 데이터를 읽어야합니다. &lt;code&gt;start=0&lt;/code&gt; 인수 와 함께 특수 요청을 보내면 됩니다. 많은 인코딩 소프트웨어가 파일 끝에 메타 데이터를 삽입합니다. 이는 플레이어가 재생을 시작하기 전에 전체 파일을 다운로드해야하기 때문에 의사 스트리밍에는 적합하지 않습니다. 메타 데이터가 파일의 시작 부분에있는 경우, nginx가 단순히 파일 내용을 보내기 시작하기에 충분합니다. 메타 데이터가 파일의 끝에있는 경우 nginx는 전체 파일을 읽고 메타 데이터가 미디어 데이터 앞에 오도록 새 스트림을 준비해야합니다. 여기에는 일부 CPU, 메모리 및 디스크 I / O 오버 헤드가 포함되므로 &lt;a href=&quot;http://flowplayer.org/plugins/streaming/pseudostreaming.html#prepare&quot;&gt;의사 스트리밍을 위해 원본 파일&lt;/a&gt; 을 준비하는 것이 좋습니다 사전에 nginx가 그러한 모든 요청에 ​​대해이를 수행하는 대신.</target>
        </trans-unit>
        <trans-unit id="b2a82bb0b53c631cf3d476178f8fb84d8f5b0d0f" translate="yes" xml:space="preserve">
          <source>To stop a node, send the &lt;code&gt;QUIT&lt;/code&gt; signal to the instance. The node will finish zone synchronization and gracefully close open connections.</source>
          <target state="translated">노드를 중지하려면 &lt;code&gt;QUIT&lt;/code&gt; 신호를 인스턴스로 보내십시오 . 노드는 영역 동기화를 마치고 열린 연결을 정상적으로 닫습니다.</target>
        </trans-unit>
        <trans-unit id="7da153c034b31e1f833e54cd33f2bd9bac8c4264" translate="yes" xml:space="preserve">
          <source>To support seeking, H.264-based formats store metadata in a so-called &amp;ldquo;moov atom&amp;rdquo;. It is a part of the file that holds the index information for the whole file.</source>
          <target state="translated">탐색을 지원하기 위해 H.264 기반 형식은 메타 데이터를 소위 &quot;moov atom&quot;에 저장합니다. 전체 파일에 대한 색인 정보를 보유하는 파일의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="1804c0bdd3fa4c5a6afcd4efec60d3569370ce11" translate="yes" xml:space="preserve">
          <source>To traverse a tree and insert new values, use the &quot;&lt;code&gt;insert_value&lt;/code&gt;&quot; functions. For example, the &lt;code&gt;ngx_str_rbtree_insert_value&lt;/code&gt; function deals with the &lt;code&gt;ngx_str_t&lt;/code&gt; type. Its arguments are pointers to a root node of an insertion, the newly created node to be added, and a tree sentinel.</source>
          <target state="translated">트리를 탐색하고 새 값을 삽입하려면 &quot; &lt;code&gt;insert_value&lt;/code&gt; &quot;함수를 사용하십시오 . 예를 들어, &lt;code&gt;ngx_str_rbtree_insert_value&lt;/code&gt; 함수는 &lt;code&gt;ngx_str_t&lt;/code&gt; 유형을 처리합니다. 인수는 삽입의 루트 노드, 새로 추가 할 노드 및 트리 센티넬에 대한 포인터입니다.</target>
        </trans-unit>
        <trans-unit id="2d03c6732d8b613c75cb1fdd60544dd05bd3b7b1" translate="yes" xml:space="preserve">
          <source>To turn a connection between a client and server from HTTP/1.1 into WebSocket, the &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.42&quot;&gt;protocol switch&lt;/a&gt; mechanism available in HTTP/1.1 is used.</source>
          <target state="translated">클라이언트와 서버 간의 연결을 HTTP / 1.1에서 WebSocket으로 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.42&quot;&gt;전환&lt;/a&gt; 하기 위해 HTTP / 1.1에서 사용 가능한 프로토콜 스위치 메커니즘이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a598a9bd756e7b00b686d4ac4c77453d2bedb6be" translate="yes" xml:space="preserve">
          <source>To use a regular expression for string matching, it first needs to be compiled, which is usually done at the configuration phase. Note that since PCRE support is optional, all code using the interface must be protected by the surrounding &lt;code&gt;NGX_PCRE&lt;/code&gt; macro:</source>
          <target state="translated">문자열 일치에 정규식을 사용하려면 먼저 구성 단계에서 수행되는 컴파일해야합니다. PCRE 지원은 선택 사항이므로 인터페이스를 사용하는 모든 코드는 주변 &lt;code&gt;NGX_PCRE&lt;/code&gt; 매크로 로 보호해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2b18c03fb0c822fac00353867c343e0dd1f8f349" translate="yes" xml:space="preserve">
          <source>To use gRPC over SSL, the &amp;ldquo;&lt;code&gt;grpcs://&lt;/code&gt;&amp;rdquo; scheme should be used:</source>
          <target state="translated">SSL을 통해 gRPC를 사용하려면 &quot; &lt;code&gt;grpcs://&lt;/code&gt; &quot;체계를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0da7d4144036ce71b5e2cebded7bfc2d88551dc9" translate="yes" xml:space="preserve">
          <source>To use njs in nginx:</source>
          <target state="translated">nginx에서 nj를 사용하려면 :</target>
        </trans-unit>
        <trans-unit id="e9fffab6b17e0ef598d1cd78d5d90827e7b5a74f" translate="yes" xml:space="preserve">
          <source>To verify that nginx is configured to support debugging, run the &lt;code&gt;nginx -V&lt;/code&gt; command:</source>
          <target state="translated">nginx가 디버깅을 지원하도록 구성되었는지 확인하려면 &lt;code&gt;nginx -V&lt;/code&gt; 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="397054fc67df20556249eda8005c9f0fa7c34369" translate="yes" xml:space="preserve">
          <source>To view the configuration of a specific server, also specify its ID:</source>
          <target state="translated">특정 서버의 구성을 보려면 해당 ID도 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="2bb7fc79e23569e1902d01e4dd0ffe68832cf475" translate="yes" xml:space="preserve">
          <source>Total time the server was in the &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;checking&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;&lt;code&gt;unhealthy&lt;/code&gt;&amp;rdquo; states.</source>
          <target state="translated">서버가 &quot;사용 &lt;code&gt;unavail&lt;/code&gt; &quot;, &quot; &lt;code&gt;checking&lt;/code&gt; &quot;및 &quot; &lt;code&gt;unhealthy&lt;/code&gt; &quot;상태 인 총 시간</target>
        </trans-unit>
        <trans-unit id="3266b86b461f5de90b6a6bc78ee10002949eaa56" translate="yes" xml:space="preserve">
          <source>Trusted IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.</source>
          <target state="translated">신뢰할 수있는 IPv6 주소는 버전 1.3.0 및 1.2.1부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3dcb1610cef32b369f82e2a498b1a8aaf2a4dc78" translate="yes" xml:space="preserve">
          <source>Turning the compression &lt;code&gt;off&lt;/code&gt; can become necessary if a URI contains base64-encoded names, since base64 uses the &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; character internally. However, for security considerations, it is better to avoid turning the compression off.</source>
          <target state="translated">base64가 내부적으로 &quot; &lt;code&gt;/&lt;/code&gt; &quot;문자를 사용하므로 URI에 base64로 인코딩 된 이름이 포함 된 경우 압축을 &lt;code&gt;off&lt;/code&gt; 해야합니다 . 그러나 보안상의 이유로 압축을 해제하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="88143b311b74a4af89b4b941d46142ef6b3114a1" translate="yes" xml:space="preserve">
          <source>Turns on HLS streaming in the surrounding location.</source>
          <target state="translated">주변 위치에서 HLS 스트리밍을 켭니다.</target>
        </trans-unit>
        <trans-unit id="504092e2e7a07cd13510942f1d49f9943532439b" translate="yes" xml:space="preserve">
          <source>Turns on module processing in a surrounding location.</source>
          <target state="translated">주변 위치에서 모듈 처리를 켭니다.</target>
        </trans-unit>
        <trans-unit id="967f782fc2e9d54fa293eeda1d4f7bf8b1790368" translate="yes" xml:space="preserve">
          <source>Turns on module processing in the surrounding location.</source>
          <target state="translated">주변 위치에서 모듈 처리를 켭니다.</target>
        </trans-unit>
        <trans-unit id="934a42d8b7220702b7de4c817d02400bcfe1884e" translate="yes" xml:space="preserve">
          <source>Turns on the HTTP interface of upstream configuration in the surrounding location. Access to this location should be &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;limited&lt;/a&gt;.</source>
          <target state="translated">주변 위치에서 업스트림 구성의 HTTP 인터페이스를 켭니다. 이 위치에 대한 액세스는 &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;제한&lt;/a&gt; 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6723e34f0ffbd1d398051ece8a9259b1721beb3d" translate="yes" xml:space="preserve">
          <source>Turns on the REST API interface in the surrounding location. Access to this location should be &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;limited&lt;/a&gt;.</source>
          <target state="translated">주변 위치에서 REST API 인터페이스를 켭니다. 이 위치에 대한 액세스는 &lt;a href=&quot;ngx_http_core_module#satisfy&quot;&gt;제한&lt;/a&gt; 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="b76232ee0e43d9ae3a03d6808b4f47320c382535" translate="yes" xml:space="preserve">
          <source>Type casts are separated by one space from casted expressions. An asterisk inside type cast is separated with space from type name:</source>
          <target state="translated">유형 캐스트는 캐스트 된 표현식에서 한 칸씩 분리됩니다. 유형 캐스트 ​​내부의 별표는 유형 이름과 공백으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="0ce831a77bd5b41cebfde67426211841abef2476" translate="yes" xml:space="preserve">
          <source>Type names end with the &amp;ldquo;&lt;code&gt;_t&lt;/code&gt;&amp;rdquo; suffix. A defined type name is separated by at least two spaces:</source>
          <target state="translated">유형 이름은&amp;ldquo; &lt;code&gt;_t&lt;/code&gt; &amp;rdquo;접미사로 끝납니다 . 정의 된 유형 이름은 최소한 두 개의 공백으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="104d00a4746272bfd96726569fd2ba857b59a219" translate="yes" xml:space="preserve">
          <source>Typical Mongrel rules:</source>
          <target state="translated">일반적인 잡종 규칙 :</target>
        </trans-unit>
        <trans-unit id="dee176aa07de8fd62dc8c9638bba809b8854bdf1" translate="yes" xml:space="preserve">
          <source>UNIX-domain sockets (0.8.21) are specified with the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; prefix:</source>
          <target state="translated">UNIX 도메인 소켓 (0.8.21)은 &quot; &lt;code&gt;unix:&lt;/code&gt; &quot;접두어 로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="51baddd015aecaadd0bef8ad7d1dd142ed9558fd" translate="yes" xml:space="preserve">
          <source>UNIX-domain sockets (1.3.5) are specified with the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; prefix:</source>
          <target state="translated">UNIX 도메인 소켓 (1.3.5)은 &quot; &lt;code&gt;unix:&lt;/code&gt; &quot;접두어 로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="78eb2822297ed1208c54bdc3929cd8cb24b180f1" translate="yes" xml:space="preserve">
          <source>UNIX-domain sockets are specified with the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; prefix:</source>
          <target state="translated">UNIX 도메인 소켓은 &quot; &lt;code&gt;unix:&lt;/code&gt; &quot;접두어 로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="a6199306d1c27c0e0c33ef5e26c5b5c5bc13e12b" translate="yes" xml:space="preserve">
          <source>URL Decoding</source>
          <target state="translated">URL 디코딩</target>
        </trans-unit>
        <trans-unit id="45be10951674a3123971f36b8b830d97fe857c8f" translate="yes" xml:space="preserve">
          <source>URL Encoding</source>
          <target state="translated">URL 인코딩</target>
        </trans-unit>
        <trans-unit id="7de92062fe23da16afc7815ef86f5c53a67f7722" translate="yes" xml:space="preserve">
          <source>USR1</source>
          <target state="translated">USR1</target>
        </trans-unit>
        <trans-unit id="1797af2eff2f965cd54f53aeed94fcabe5a7844c" translate="yes" xml:space="preserve">
          <source>USR2</source>
          <target state="translated">USR2</target>
        </trans-unit>
        <trans-unit id="ce33257f6e0a8976461e22a3768b5f62661e8033" translate="yes" xml:space="preserve">
          <source>Unnecessary protocols can be disabled using the &lt;a href=&quot;../configure&quot;&gt;configuration&lt;/a&gt; parameters &lt;code&gt;--without-mail_imap_module&lt;/code&gt;, &lt;code&gt;--without-mail_pop3_module&lt;/code&gt;, and &lt;code&gt;--without-mail_smtp_module&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../configure&quot;&gt;구성&lt;/a&gt; 매개 변수 &lt;code&gt;--without-mail_imap_module&lt;/code&gt; , &lt;code&gt;--without-mail_pop3_module&lt;/code&gt; 및 &lt;code&gt;--without-mail_smtp_module&lt;/code&gt; 을 사용하여 불필요한 프로토콜을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a643620f061d39e4bf4e2d3019da431266fd6b87" translate="yes" xml:space="preserve">
          <source>Until version 0.7.28, four 4K or 8K buffers were used by default.</source>
          <target state="translated">버전 0.7.28까지는 기본적으로 4 개의 4K 또는 8K 버퍼가 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="f91042a63c0e5b20aa4e13af1075fe112086aa3b" translate="yes" xml:space="preserve">
          <source>Until version 1.5.4, &amp;ldquo;&lt;code&gt;application/x-javascript&lt;/code&gt;&amp;rdquo; was used as the default MIME type instead of &amp;ldquo;&lt;code&gt;application/javascript&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">버전 1.5.4까지는 &quot; &lt;code&gt;application/javascript&lt;/code&gt; &quot; 대신 &quot; &lt;code&gt;application/x-javascript&lt;/code&gt; &quot;가 기본 MIME 유형으로 사용되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f5a842f22b2e4c561f6fee14645f9ce5f7b086ee" translate="yes" xml:space="preserve">
          <source>Until versions 1.3.1 and 1.2.2, it was not possible to specify a weight for servers using the &lt;code&gt;ip_hash&lt;/code&gt; load balancing method.</source>
          <target state="translated">버전 1.3.1 및 1.2.2까지는 &lt;code&gt;ip_hash&lt;/code&gt; 로드 밸런싱 방법을 사용하여 서버의 가중치를 지정할 수 없었습니다 .</target>
        </trans-unit>
        <trans-unit id="af5d7d8b0a22daab6634c08d11ac146115513d70" translate="yes" xml:space="preserve">
          <source>Updates the HMAC content with the given &lt;code&gt;&lt;i&gt;data&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;i&gt;data&lt;/i&gt;&lt;/code&gt; HMAC 컨텐츠를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="0870d9b5d79eac0a6fecebbbd68010113b31a030" translate="yes" xml:space="preserve">
          <source>Updates the hash content with the given &lt;code&gt;&lt;i&gt;data&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;i&gt;data&lt;/i&gt;&lt;/code&gt; 해시 내용을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="a1d213248124350cac41518224d670ef57a8add2" translate="yes" xml:space="preserve">
          <source>Upgrading Executable on the Fly</source>
          <target state="translated">플라이에서 실행 파일 업그레이드</target>
        </trans-unit>
        <trans-unit id="20503dc279f10768e528aaec3a51d3c9fb25d472" translate="yes" xml:space="preserve">
          <source>Upon successful compilation, &lt;code&gt;cv.lengths&lt;/code&gt; contains information about the presence of variables in the expression. The NULL value means that the expression contained static text only, and so can be stored in a simple string rather than as a complex value.</source>
          <target state="translated">컴파일이 성공하면 &lt;code&gt;cv.lengths&lt;/code&gt; 에는 표현식에 변수가 있는지에 대한 정보가 포함됩니다. NULL 값은 표현식에 정적 텍스트 만 포함되어 있으므로 복잡한 값이 아닌 단순한 문자열에 저장 될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="14a29ba383c84d15925a42f871530f52904ae908" translate="yes" xml:space="preserve">
          <source>Use cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="2dd5ab950b5e823c620419d1244a1b92dce8744f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;ngx_array_create(pool, n, size)&lt;/code&gt; call to create an array in a pool, and the &lt;code&gt;ngx_array_init(array, pool, n, size)&lt;/code&gt; call to initialize an array object that has already been allocated.</source>
          <target state="translated">사용 &lt;code&gt;ngx_array_create(pool, n, size)&lt;/code&gt; 풀의 배열을 생성하기 위해 호출하고 &lt;code&gt;ngx_array_init(array, pool, n, size)&lt;/code&gt; 호출이 이미 할당 된 어레이 객체를 초기화.</target>
        </trans-unit>
        <trans-unit id="fe053390334486e394febe0505919dd7d1ea97d5" translate="yes" xml:space="preserve">
          <source>Use the following functions to add elements to an array:</source>
          <target state="translated">다음 함수를 사용하여 배열에 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="390dcb2d107e0fd72048ae1f7baab0fa8a05802c" translate="yes" xml:space="preserve">
          <source>Using a stale cached response can also be enabled directly in the response header for a specified number of seconds after the response became stale (1.11.10). This has lower priority than using the directive parameters.</source>
          <target state="translated">오래된 캐시 응답을 사용하면 응답이 오래 된 후 (1.11.10) 지정된 시간 (초) 동안 응답 헤더에서 직접 활성화 할 수 있습니다. 지시문 매개 변수를 사용하는 것보다 우선 순위가 낮습니다.</target>
        </trans-unit>
        <trans-unit id="ae59fbd01797c77ebbcf4c43287520eed6769d9f" translate="yes" xml:space="preserve">
          <source>Using multiple worker threads inside a single worker process.</source>
          <target state="translated">단일 작업자 프로세스 내에서 여러 작업자 스레드 사용</target>
        </trans-unit>
        <trans-unit id="2ff0752cd1d8a8fc125dae51882c2881f94c06b6" translate="yes" xml:space="preserve">
          <source>Using nginx as HTTP load balancer</source>
          <target state="translated">HTTP로드 밸런서로 nginx 사용</target>
        </trans-unit>
        <trans-unit id="37edcae86e193d4cc879538f004ecd1ff5bcf3c7" translate="yes" xml:space="preserve">
          <source>Using similar techniques the reader should be able to trace other nginx function calls.</source>
          <target state="translated">유사한 기술을 사용하여 독자는 다른 nginx 함수 호출을 추적 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6ce8f97799c48d6d64c49ee51ecc4b761c355eba" translate="yes" xml:space="preserve">
          <source>Using the I/O completion ports as a connection processing method.</source>
          <target state="translated">연결 처리 방법으로 I / O 완료 포트 사용</target>
        </trans-unit>
        <trans-unit id="ba69657974672181ce9953691d329ec00f985b23" translate="yes" xml:space="preserve">
          <source>Using this directive, it is also possible to add host names to relative redirects issued by a proxied server:</source>
          <target state="translated">이 지정 문을 사용하여 프록시 서버가 발행 한 상대 경로 재 지정에 호스트 이름을 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="615a38e1568240a9e71dc13b2244b7b7e3116847" translate="yes" xml:space="preserve">
          <source>Usual pre-processing with Adobe&amp;rsquo;s f4fpackager is required, see relevant documentation for details.</source>
          <target state="translated">Adobe f4fpackager를 사용한 일반적인 전처리가 필요합니다. 자세한 내용은 관련 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4a5d3879f0d5129a2f4f056e7800faeda2eeee2e" translate="yes" xml:space="preserve">
          <source>Usually, a null-terminated static array of &lt;code&gt;ngx_http_variable_t&lt;/code&gt; structures is created by a module and processed at the preconfiguration stage to add variables into the configuration, for example:</source>
          <target state="translated">일반적으로 &lt;code&gt;ngx_http_variable_t&lt;/code&gt; 구조 의 null로 끝나는 정적 배열은 모듈에 의해 생성되고 사전 구성 단계에서 처리되어 변수를 구성에 추가합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f9941dcc7b269ae02502b1690aed18d82db560db" translate="yes" xml:space="preserve">
          <source>Usually, if the authentication in nginx is a success, the backend cannot return an error. If it nevertheless returns an error, it means some internal error has occurred. In such case the backend message can contain information that should not be shown to the client. However, responding with an error for the correct password is a normal behavior for some POP3 servers. For example, CommuniGatePro informs a user about &lt;a href=&quot;http://www.stalker.com/CommuniGatePro/Alerts.html#Quota&quot;&gt;mailbox overflow&lt;/a&gt; or other events by periodically outputting the &lt;a href=&quot;http://www.stalker.com/CommuniGatePro/POP.html#Alerts&quot;&gt;authentication error&lt;/a&gt;. The directive should be enabled in this case.</source>
          <target state="translated">일반적으로 nginx의 인증이 성공하면 백엔드는 오류를 반환 할 수 없습니다. 그럼에도 불구하고 오류를 반환하면 내부 오류가 발생한 것입니다. 이러한 경우 백엔드 메시지에는 클라이언트에 표시해서는 안되는 정보가 포함될 수 있습니다. 그러나 일부 POP3 서버에서는 올바른 비밀번호에 대한 오류로 응답하는 것이 정상적인 동작입니다. 예를 들어 CommuniGatePro는 정기적으로 &lt;a href=&quot;http://www.stalker.com/CommuniGatePro/POP.html#Alerts&quot;&gt;인증 오류를&lt;/a&gt; 출력하여 &lt;a href=&quot;http://www.stalker.com/CommuniGatePro/Alerts.html#Quota&quot;&gt;사서함 오버플로&lt;/a&gt; 또는 기타 이벤트에 대해 사용자에게 알립니다 . 이 경우 지시문을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="f8e2d99324ca6a199cf3338ac22c60d715ee1e29" translate="yes" xml:space="preserve">
          <source>ValiCert, Inc.</source>
          <target state="translated">ValiCert, Inc.</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="66ba36b0eb02bed038ab017ac2b6c041fc313e3b" translate="yes" xml:space="preserve">
          <source>Variables are declared sorted by length of a base type, then alphabetically. Type names and variable names are aligned. The type and name &amp;ldquo;columns&amp;rdquo; are separated with two spaces. Large arrays are put at the end of a declaration block:</source>
          <target state="translated">변수는 기본 유형의 길이를 기준으로 정렬 한 다음 알파벳순으로 선언됩니다. 유형 이름과 변수 이름이 정렬됩니다. 유형과 이름 &quot;열&quot;은 두 개의 공백으로 구분됩니다. 선언 배열의 끝에 큰 배열이 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="6b52e583cbc0732e72ed6cba90f4be1dc0c8b63b" translate="yes" xml:space="preserve">
          <source>Variables can be referenced by index (this is the most common method) or name (see &lt;a href=&quot;#http_creating_variables&quot;&gt;below&lt;/a&gt;). The index is created at configuration stage, when a variable is added to the configuration. To obtain the variable index, use &lt;code&gt;ngx_http_get_variable_index()&lt;/code&gt;:</source>
          <target state="translated">변수는 index (가장 일반적인 방법) 또는 name ( &lt;a href=&quot;#http_creating_variables&quot;&gt;아래&lt;/a&gt; 참조)으로 참조 할 수 있습니다 . 변수는 구성에 추가 될 때 구성 단계에서 색인이 작성됩니다. 변수 인덱스를 얻으려면 &lt;code&gt;ngx_http_get_variable_index()&lt;/code&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a684cbaf8734ab7e07614cfd6ce05d252262627" translate="yes" xml:space="preserve">
          <source>Variables used in an &lt;code&gt;&lt;i&gt;expression&lt;/i&gt;&lt;/code&gt; are usually associated with a request; see &lt;a href=&quot;#secure_link_md5&quot;&gt;example&lt;/a&gt; below.</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;expression&lt;/i&gt;&lt;/code&gt; 사용 된 변수 는 일반적으로 요청과 연관됩니다. 아래 &lt;a href=&quot;#secure_link_md5&quot;&gt;예를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="22eceb85c049de19d290d4602b34125e7f22987a" translate="yes" xml:space="preserve">
          <source>Version 0.7.64, 0.8.18 and earlier: the default SSL ciphers are</source>
          <target state="translated">버전 0.7.64, 0.8.18 및 이전 버전 : 기본 SSL 암호는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ccf27717e348622229ce9ce7030233ed5ea0d18c" translate="yes" xml:space="preserve">
          <source>Version 0.7.64, 0.8.18 and earlier: the default SSL protocols are SSLv2, SSLv3, and TLSv1.</source>
          <target state="translated">버전 0.7.64, 0.8.18 이하 : 기본 SSL 프로토콜은 SSLv2, SSLv3 및 TLSv1입니다.</target>
        </trans-unit>
        <trans-unit id="ec4b8b171de8b057c8fe72a9eb10a0e0d1fa5750" translate="yes" xml:space="preserve">
          <source>Version 0.7.65, 0.8.19 and later: the default SSL protocols are SSLv3, TLSv1, TLSv1.1, and TLSv1.2 (if supported by the OpenSSL library).</source>
          <target state="translated">버전 0.7.65, 0.8.19 이상 : 기본 SSL 프로토콜은 SSLv3, TLSv1, TLSv1.1 및 TLSv1.2 (OpenSSL 라이브러리에서 지원되는 경우)입니다.</target>
        </trans-unit>
        <trans-unit id="dd4804c6971953889476d91df8274030e4830768" translate="yes" xml:space="preserve">
          <source>Version 0.7.65, 0.8.20 and later: the default SSL ciphers are &amp;ldquo;&lt;code&gt;HIGH:!ADH:!MD5&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">버전 0.7.65, 0.8.20 이상 : 기본 SSL 암호는 &quot; &lt;code&gt;HIGH:!ADH:!MD5&lt;/code&gt; &quot;입니다.</target>
        </trans-unit>
        <trans-unit id="c80d3d6c508d742b19ab4a1cf414c009c4ea2434" translate="yes" xml:space="preserve">
          <source>Version 0.8.19: the default SSL ciphers are &amp;ldquo;&lt;code&gt;ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">버전 0.8.19 : 기본 SSL 암호는 &quot; &lt;code&gt;ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM&lt;/code&gt; &quot;입니다.</target>
        </trans-unit>
        <trans-unit id="97fbe3ec87166141bb7b56e63ac8d0cdd9835856" translate="yes" xml:space="preserve">
          <source>Version 1.0.5 and later: the default SSL ciphers are &amp;ldquo;&lt;code&gt;HIGH:!aNULL:!MD5&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">버전 1.0.5 이상 : 기본 SSL 암호는 &quot; &lt;code&gt;HIGH:!aNULL:!MD5&lt;/code&gt; &quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3f78836a349dd4cac5ec927e0c9f310e88125562" translate="yes" xml:space="preserve">
          <source>Version 1.9.1 and later: the default SSL protocols are TLSv1, TLSv1.1, and TLSv1.2 (if supported by the OpenSSL library).</source>
          <target state="translated">버전 1.9.1 이상 : 기본 SSL 프로토콜은 TLSv1, TLSv1.1 및 TLSv1.2입니다 (OpenSSL 라이브러리에서 지원되는 경우).</target>
        </trans-unit>
        <trans-unit id="b443b20414dbee9a466421b586e8455c9c16910d" translate="yes" xml:space="preserve">
          <source>Version of nginx for Windows uses the native Win32 API (not the Cygwin emulation layer). Only the &lt;code&gt;select()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; (1.15.9) connection processing methods are currently used, so high performance and scalability should not be expected. Due to this and some other known issues version of nginx for Windows is considered to be a</source>
          <target state="translated">Windows 용 nginx 버전은 기본 Win32 API (Cygwin 에뮬레이션 레이어가 아님)를 사용합니다. 만 &lt;code&gt;select()&lt;/code&gt; 와 &lt;code&gt;poll()&lt;/code&gt; (1.15.9) 연결 처리 방법은 현재 사용 때문에 높은 성능과 확장 성이 예상되어서는 안된다. 이것과 다른 알려진 문제로 인해 Windows 용 nginx의 버전은</target>
        </trans-unit>
        <trans-unit id="294c866b602fa3630c0d4952e31af74d77629295" translate="yes" xml:space="preserve">
          <source>Version of nginx.</source>
          <target state="translated">nginx의 버전.</target>
        </trans-unit>
        <trans-unit id="01968f78af5af71ffaea93790931a124b992ec74" translate="yes" xml:space="preserve">
          <source>Version of the provided data set. The current version is 8.</source>
          <target state="translated">제공된 데이터 세트의 버전입니다. 현재 버전은 8입니다.</target>
        </trans-unit>
        <trans-unit id="0f1b13f0972b4126b7ec58cb436104cc44df6302" translate="yes" xml:space="preserve">
          <source>Versions can be specified in the following formats: X, X.X, X.X.X, or X.X.X.X. The maximum values for each of the format are 4000, 4000.99, 4000.99.99, and 4000.99.99.99, respectively.</source>
          <target state="translated">버전은 X, XX, XXX 또는 XXXX 형식으로 지정할 수 있습니다. 각 형식의 최대 값은 각각 4000, 4000.99, 4000.99.99 및 4000.99.99.99입니다.</target>
        </trans-unit>
        <trans-unit id="d8dba9b2649b75767f2d68edc016aec563b98b5b" translate="yes" xml:space="preserve">
          <source>WINCH</source>
          <target state="translated">WINCH</target>
        </trans-unit>
        <trans-unit id="ee4cdfb013ce854d91ecb9104546bda97811aba4" translate="yes" xml:space="preserve">
          <source>We will configure a basic proxy server, which serves requests of images with files from the local directory and sends all other requests to a proxied server. In this example, both servers will be defined on a single nginx instance.</source>
          <target state="translated">로컬 디렉토리에서 파일로 이미지 요청을 제공하고 다른 모든 요청을 프록시 서버로 보내는 기본 프록시 서버를 구성합니다. 이 예제에서 두 서버 모두 단일 nginx 인스턴스에 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="eac219cb0ff119105426d2411afea04083d1b42f" translate="yes" xml:space="preserve">
          <source>We will modify the second &lt;code&gt;location&lt;/code&gt; block, which currently maps requests with the &lt;code&gt;/images/&lt;/code&gt; prefix to the files under the &lt;code&gt;/data/images&lt;/code&gt; directory, to make it match the requests of images with typical file extensions. The modified &lt;code&gt;location&lt;/code&gt; block looks like this:</source>
          <target state="translated">현재 &lt;code&gt;/images/&lt;/code&gt; 접두사를 가진 요청을 &lt;code&gt;/data/images&lt;/code&gt; 디렉토리 아래의 파일에 매핑 하는 두 번째 &lt;code&gt;location&lt;/code&gt; 블록 을 수정하여 일반적인 파일 확장자를 가진 이미지의 요청과 일치시킵니다. 수정 된 &lt;code&gt;location&lt;/code&gt; 블록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a734f32bd06361a648e9e8a169075cb26321ffba" translate="yes" xml:space="preserve">
          <source>WebDAV clients that require additional WebDAV methods to operate will not work with this module.</source>
          <target state="translated">작동하기 위해 추가 WebDAV 방법이 필요한 WebDAV 클라이언트는이 모듈에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6a371bd49dca9af3374c8d42000be8418d5abffa" translate="yes" xml:space="preserve">
          <source>WebSocket proxying</source>
          <target state="translated">WebSocket 프록 싱</target>
        </trans-unit>
        <trans-unit id="baa4ed4b62eb7cec650e5778e62d4f490568474b" translate="yes" xml:space="preserve">
          <source>Weighted load balancing</source>
          <target state="translated">가중 로드 밸런싱</target>
        </trans-unit>
        <trans-unit id="1db62450d90901d50c52e3522785fcc6edf0afe9" translate="yes" xml:space="preserve">
          <source>What is currently supported</source>
          <target state="translated">현재 지원되는 것</target>
        </trans-unit>
        <trans-unit id="41a68fc6b423856c14553fabd81780988b62bbea" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#fastcgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the FastCGI server is enabled, and the whole response does not fit into the buffers set by the &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#fastcgi_buffers&quot;&gt;fastcgi_buffers&lt;/a&gt; directives, a part of the response can be saved to a temporary file. This directive sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the temporary file. The size of data written to the temporary file at a time is set by the &lt;a href=&quot;#fastcgi_temp_file_write_size&quot;&gt;fastcgi_temp_file_write_size&lt;/a&gt; directive.</source>
          <target state="translated">때 &lt;a href=&quot;#fastcgi_buffering&quot;&gt;버퍼링&lt;/a&gt; FastCGI를 서버에서 응답이 활성화되어, 전체 응답이 설정 한 버퍼에 맞지 않는 &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#fastcgi_buffers&quot;&gt;fastcgi_buffers&lt;/a&gt; 지시, 응답의 일부가 임시 파일로 저장할 수 있습니다. 이 지시문 은 임시 파일 의 최대 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 를 설정 합니다. 한 번에 임시 파일에 기록되는 데이터 크기는 &lt;a href=&quot;#fastcgi_temp_file_write_size&quot;&gt;fastcgi_temp_file_write_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="b63f98da7d8531d0113117bc7906a4ac88f31737" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#fastcgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the FastCGI server is enabled, limits the total &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by the size of two buffers set by the &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#fastcgi_buffers&quot;&gt;fastcgi_buffers&lt;/a&gt; directives.</source>
          <target state="translated">때 &lt;a href=&quot;#fastcgi_buffering&quot;&gt;버퍼링&lt;/a&gt; FastCGI를 서버에서 응답이 활성화되어, 총 제한 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 응답이 아직 완전히 읽지 않은 상태에서 클라이언트에 응답을 보내는 바쁜 될 수 있습니다 버퍼를. 그 동안 나머지 버퍼를 사용하여 응답을 읽고 필요한 경우 응답의 일부를 임시 파일로 버퍼링 할 수 있습니다. 기본적으로 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 는 &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#fastcgi_buffers&quot;&gt;fastcgi_buffers&lt;/a&gt; 지시문으로 설정된 두 개의 버퍼 &lt;i&gt;크기&lt;/i&gt; 로 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2d3965f331a7249101106cdff1ea20305127e42" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#lingering_close&quot;&gt;lingering_close&lt;/a&gt; is in effect, this directive specifies the maximum time during which nginx will process (read and ignore) additional data coming from a client. After that, the connection will be closed, even if there will be more data.</source>
          <target state="translated">때 &lt;a href=&quot;#lingering_close&quot;&gt;lingering_close가&lt;/a&gt; 적용되는이 지침 지정의 nginx가 처리되는 동안 최대 시간은 클라이언트에서 오는 추가 데이터 (읽기 무시). 그 후에는 더 많은 데이터가 있더라도 연결이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="b6a32f1dc2e73db5a50a9217a0b5a37c22668d0f" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#lingering_close&quot;&gt;lingering_close&lt;/a&gt; is in effect, this directive specifies the maximum waiting time for more client data to arrive. If data are not received during this time, the connection is closed. Otherwise, the data are read and ignored, and nginx starts waiting for more data again. The &amp;ldquo;wait-read-ignore&amp;rdquo; cycle is repeated, but no longer than specified by the &lt;a href=&quot;#lingering_time&quot;&gt;lingering_time&lt;/a&gt; directive.</source>
          <target state="translated">때 &lt;a href=&quot;#lingering_close&quot;&gt;lingering_close가&lt;/a&gt; 적용되는이 지시어를 지정 더 많은 클라이언트 데이터 대기 시간을 최대 도착합니다. 이 시간 동안 데이터가 수신되지 않으면 연결이 닫힙니다. 그렇지 않으면 데이터를 읽고 무시하고 nginx가 더 많은 데이터를 다시 대기하기 시작합니다. &quot;wait-read-ignore&quot;주기는 반복되지만 &lt;a href=&quot;#lingering_time&quot;&gt;lingering_time&lt;/a&gt; 지시문에 의해 지정된 시간보다 길지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="721c44e583eeb5818c9d84d3bccfab8f8e7808b3" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#proxy_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the proxied server is enabled, and the whole response does not fit into the buffers set by the &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; and &lt;a href=&quot;#proxy_buffers&quot;&gt;proxy_buffers&lt;/a&gt; directives, a part of the response can be saved to a temporary file. This directive sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the temporary file. The size of data written to the temporary file at a time is set by the &lt;a href=&quot;#proxy_temp_file_write_size&quot;&gt;proxy_temp_file_write_size&lt;/a&gt; directive.</source>
          <target state="translated">때 &lt;a href=&quot;#proxy_buffering&quot;&gt;버퍼링&lt;/a&gt; 을 프록시 서버로부터의 응답이 활성화되어, 전체 응답이 설정 한 버퍼에 맞지 않는 &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#proxy_buffers&quot;&gt;proxy_buffers&lt;/a&gt; 지시, 응답의 일부가 임시 파일로 저장할 수 있습니다. 이 지시문 은 임시 파일 의 최대 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 를 설정 합니다. 한 번에 임시 파일에 기록되는 데이터의 크기는 &lt;a href=&quot;#proxy_temp_file_write_size&quot;&gt;proxy_temp_file_write_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c3c18d96289315cc4a511c3050157736c11f0f9a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#proxy_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the proxied server is enabled, limits the total &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by the size of two buffers set by the &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; and &lt;a href=&quot;#proxy_buffers&quot;&gt;proxy_buffers&lt;/a&gt; directives.</source>
          <target state="translated">때 &lt;a href=&quot;#proxy_buffering&quot;&gt;버퍼링&lt;/a&gt; 을 프록시 서버의 응답의 것이 활성화되어, 총 제한 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 응답이 아직 완벽하게 읽을 수있는 동안 클라이언트에 응답을 전송 바쁜 될 수 있습니다 버퍼를. 그 동안 나머지 버퍼를 사용하여 응답을 읽고 필요한 경우 응답의 일부를 임시 파일로 버퍼링 할 수 있습니다. 기본적으로 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 는 &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#proxy_buffers&quot;&gt;proxy_buffers&lt;/a&gt; 지시문에 의해 설정된 두 개의 버퍼 크기에 의해 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b4193620feeac549a1c2bc2703d4a33fd8a8fe8" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#scgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the SCGI server is enabled, and the whole response does not fit into the buffers set by the &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#scgi_buffers&quot;&gt;scgi_buffers&lt;/a&gt; directives, a part of the response can be saved to a temporary file. This directive sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the temporary file. The size of data written to the temporary file at a time is set by the &lt;a href=&quot;#scgi_temp_file_write_size&quot;&gt;scgi_temp_file_write_size&lt;/a&gt; directive.</source>
          <target state="translated">때 &lt;a href=&quot;#scgi_buffering&quot;&gt;버퍼링&lt;/a&gt; SCGI 서버에서 응답이 활성화되어, 전체 응답이 설정 한 버퍼에 맞지 않는 &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#scgi_buffers&quot;&gt;scgi_buffers&lt;/a&gt; 지시, 응답의 일부가 임시 파일로 저장할 수 있습니다. 이 지시문 은 임시 파일 의 최대 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 를 설정 합니다. 한 번에 임시 파일에 기록되는 데이터 크기는 &lt;a href=&quot;#scgi_temp_file_write_size&quot;&gt;scgi_temp_file_write_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f74fc97d2c797341871fca1cf4d16241d576d2e" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#scgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the SCGI server is enabled, limits the total &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by the size of two buffers set by the &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#scgi_buffers&quot;&gt;scgi_buffers&lt;/a&gt; directives.</source>
          <target state="translated">때 &lt;a href=&quot;#scgi_buffering&quot;&gt;버퍼링&lt;/a&gt; SCGI 서버에서 응답이 활성화되어, 총 제한 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 응답이 아직 완전히 읽지 않은 상태에서 클라이언트에 응답을 보내는 바쁜 될 수 있습니다 버퍼를. 그 동안 나머지 버퍼를 사용하여 응답을 읽고 필요한 경우 응답의 일부를 임시 파일로 버퍼링 할 수 있습니다. 기본적으로 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 는 &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#scgi_buffers&quot;&gt;scgi_buffers&lt;/a&gt; 지시문으로 설정된 두 개의 버퍼 크기에 의해 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="f5d7d1cedfa4e639baa658691fd6959549c7c2d5" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#uwsgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the uwsgi server is enabled, and the whole response does not fit into the buffers set by the &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#uwsgi_buffers&quot;&gt;uwsgi_buffers&lt;/a&gt; directives, a part of the response can be saved to a temporary file. This directive sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the temporary file. The size of data written to the temporary file at a time is set by the &lt;a href=&quot;#uwsgi_temp_file_write_size&quot;&gt;uwsgi_temp_file_write_size&lt;/a&gt; directive.</source>
          <target state="translated">때 &lt;a href=&quot;#uwsgi_buffering&quot;&gt;버퍼링&lt;/a&gt; uwsgi 서버에서 응답이 활성화되어, 전체 응답이 설정 한 버퍼에 맞지 않는 &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#uwsgi_buffers&quot;&gt;uwsgi_buffers&lt;/a&gt; 지시, 응답의 일부가 임시 파일로 저장할 수 있습니다. 이 지시문 은 임시 파일 의 최대 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 를 설정 합니다. 한 번에 임시 파일에 기록되는 데이터의 크기는 &lt;a href=&quot;#uwsgi_temp_file_write_size&quot;&gt;uwsgi_temp_file_write_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="cfbc15fcb0476b32d6f8219aa4e45c1284550c0a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#uwsgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the uwsgi server is enabled, limits the total &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by the size of two buffers set by the &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#uwsgi_buffers&quot;&gt;uwsgi_buffers&lt;/a&gt; directives.</source>
          <target state="translated">때 &lt;a href=&quot;#uwsgi_buffering&quot;&gt;버퍼링&lt;/a&gt; uwsgi 서버에서 응답이 활성화되어, 총 제한 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 응답이 아직 완전히 읽지 않은 상태에서 클라이언트에 응답을 보내는 바쁜 될 수 있습니다 버퍼를. 그 동안 나머지 버퍼를 사용하여 응답을 읽고 필요한 경우 응답의 일부를 임시 파일로 버퍼링 할 수 있습니다. 기본적으로 &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; 는 &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#uwsgi_buffers&quot;&gt;uwsgi_buffers&lt;/a&gt; 지시문에 의해 설정된 두 개의 버퍼 크기에 의해 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="66e098c1fd966f456c2a97e75eef19432dbcbd90" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, adds a &lt;a href=&quot;../stream/ngx_stream_upstream_module#backup&quot;&gt;backup&lt;/a&gt; server. This parameter cannot be changed.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; 하는 추가 &lt;a href=&quot;../stream/ngx_stream_upstream_module#backup&quot;&gt;백업&lt;/a&gt; 서버. 이 매개 변수는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5abbc237f6620d71361ea747c4c3fdc553afc7b8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, adds a &lt;a href=&quot;ngx_http_upstream_module#backup&quot;&gt;backup&lt;/a&gt; server. This parameter cannot be changed.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; 하는 추가 &lt;a href=&quot;ngx_http_upstream_module#backup&quot;&gt;백업&lt;/a&gt; 서버. 이 매개 변수는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="59bc300ed3be340a8c4fdf9330fda6df9dd1b274" translate="yes" xml:space="preserve">
          <source>When HTTP/1.1 chunked transfer encoding is used to send the original request body, the request body will be buffered regardless of the directive value unless HTTP/1.1 is &lt;a href=&quot;#proxy_http_version&quot;&gt;enabled&lt;/a&gt; for proxying.</source>
          <target state="translated">HTTP / 1.1 청크 전송 인코딩을 사용하여 원래 요청 본문을 보내는 경우 HTTP / 1.1 을 프록시에 &lt;a href=&quot;#proxy_http_version&quot;&gt;사용할 수&lt;/a&gt; 없는 경우 지시문 값에 관계없이 요청 본문이 버퍼링됩니다 .</target>
        </trans-unit>
        <trans-unit id="dd8c2cc7133cdce99d1b0fc03fb5b769e2dad93d" translate="yes" xml:space="preserve">
          <source>When HTTP/1.1 chunked transfer encoding is used to send the original request body, the request body will be buffered regardless of the directive value.</source>
          <target state="translated">HTTP / 1.1 청크 전송 인코딩을 사용하여 원래 요청 본문을 전송하면 지시문 값에 관계없이 요청 본문이 버퍼링됩니다.</target>
        </trans-unit>
        <trans-unit id="4b5f41ccf7f08a82c0adffbcef7e8aebc640112d" translate="yes" xml:space="preserve">
          <source>When a connection to the proxied server cannot be established, determines whether a client connection will be passed to the next server.</source>
          <target state="translated">프록시 서버에 대한 연결을 설정할 수 없으면 클라이언트 연결이 다음 서버로 전달되는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="69f1fbd7e542af6d4f7e0840961d66306fc55b84" translate="yes" xml:space="preserve">
          <source>When a request is finalized, its parent is activated.</source>
          <target state="translated">요청이 완료되면 해당 부모가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="28360e2b5f4589daf5a387470b9417ff87489438" translate="yes" xml:space="preserve">
          <source>When a worker process receives the shutdown or terminate command from the master, it invokes the &lt;code&gt;exit_process&lt;/code&gt; handler.</source>
          <target state="translated">작업자 프로세스가 마스터로부터 shutdown 또는 terminate 명령을 수신하면 &lt;code&gt;exit_process&lt;/code&gt; 핸들러를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="7a888bb4f84546e7265636ba43038d2f2807f76e" translate="yes" xml:space="preserve">
          <source>When adding a server, it is possible to specify it as a domain name. In this case, changes of the IP addresses that correspond to a domain name will be monitored and automatically applied to the upstream configuration without the need of restarting nginx (1.7.2). This requires the &amp;ldquo;&lt;code&gt;resolver&lt;/code&gt;&amp;rdquo; directive in the &lt;a href=&quot;ngx_http_core_module#resolver&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_core_module#resolver&quot;&gt;stream&lt;/a&gt; block. See also the &amp;ldquo;&lt;code&gt;resolve&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#resolve&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#resolve&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="translated">서버를 추가 할 때 서버를 도메인 이름으로 지정할 수 있습니다. 이 경우 도메인 이름에 해당하는 IP 주소의 변경 사항이 모니터링되고 nginx (1.7.2)를 다시 시작할 필요없이 업스트림 구성에 자동으로 적용됩니다. &lt;a href=&quot;ngx_http_core_module#resolver&quot;&gt;http&lt;/a&gt; 또는 &lt;a href=&quot;../stream/ngx_stream_core_module#resolver&quot;&gt;stream&lt;/a&gt; 블록 에 &quot; &lt;code&gt;resolver&lt;/code&gt; &quot;지시문 이 필요합니다 . &lt;a href=&quot;ngx_http_upstream_module#resolve&quot;&gt;http&lt;/a&gt; 또는 &lt;a href=&quot;../stream/ngx_stream_upstream_module#resolve&quot;&gt;스트림&lt;/a&gt; 업스트림 서버 의 &quot; &lt;code&gt;resolve&lt;/code&gt; &quot;매개 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd9dc18d546b8b7510725d2422d7ce9da19face7" translate="yes" xml:space="preserve">
          <source>When both AIO and &lt;a href=&quot;#sendfile&quot;&gt;sendfile&lt;/a&gt; are enabled on Linux, AIO is used for files that are larger than or equal to the size specified in the &lt;a href=&quot;#directio&quot;&gt;directio&lt;/a&gt; directive, while &lt;a href=&quot;#sendfile&quot;&gt;sendfile&lt;/a&gt; is used for files of smaller sizes or when &lt;a href=&quot;#directio&quot;&gt;directio&lt;/a&gt; is disabled.</source>
          <target state="translated">Linux에서 AIO와 &lt;a href=&quot;#sendfile&quot;&gt;sendfile&lt;/a&gt; 이 모두 활성화 된 경우 &lt;a href=&quot;#directio&quot;&gt;directio&lt;/a&gt; 지시문에 지정된 크기보다 크거나 같은 파일에는 AIO가 사용되고 &lt;a href=&quot;#sendfile&quot;&gt;sendfile&lt;/a&gt; 은 작은 크기의 파일이나 &lt;a href=&quot;#directio&quot;&gt;directio&lt;/a&gt; 가 비활성화 된 파일에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0b0393763dc57836d93e70bd80f431bc4f267539" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the request body is sent to the FastCGI server immediately as it is received. In this case, the request cannot be passed to the &lt;a href=&quot;#fastcgi_next_upstream&quot;&gt;next server&lt;/a&gt; if nginx already started sending the request body.</source>
          <target state="translated">버퍼링이 비활성화되면 요청 본문이 수신되는 즉시 FastCGI 서버로 전송됩니다. 이 경우, nginx가 이미 요청 본문 전송을 시작한 경우 요청을 &lt;a href=&quot;#fastcgi_next_upstream&quot;&gt;다음 서버&lt;/a&gt; 로 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="cb584bee083fc8351de88c9e13d32cc6bc4f7300" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the request body is sent to the SCGI server immediately as it is received. In this case, the request cannot be passed to the &lt;a href=&quot;#scgi_next_upstream&quot;&gt;next server&lt;/a&gt; if nginx already started sending the request body.</source>
          <target state="translated">버퍼링이 비활성화되면 요청 본문이 수신되는 즉시 SCGI 서버로 전송됩니다. 이 경우, nginx가 이미 요청 본문 전송을 시작한 경우 요청을 &lt;a href=&quot;#scgi_next_upstream&quot;&gt;다음 서버&lt;/a&gt; 로 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="dff90fe6566e2debf0b3870a7bfb7b9ea33db41b" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the request body is sent to the proxied server immediately as it is received. In this case, the request cannot be passed to the &lt;a href=&quot;#proxy_next_upstream&quot;&gt;next server&lt;/a&gt; if nginx already started sending the request body.</source>
          <target state="translated">버퍼링이 비활성화되면 요청 본문이 수신되는 즉시 프록시 서버로 전송됩니다. 이 경우, nginx가 이미 요청 본문 전송을 시작한 경우 요청을 &lt;a href=&quot;#proxy_next_upstream&quot;&gt;다음 서버&lt;/a&gt; 로 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e8dcc1beae0e6058ae8912eee35d649e7801661e" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the request body is sent to the uwsgi server immediately as it is received. In this case, the request cannot be passed to the &lt;a href=&quot;#uwsgi_next_upstream&quot;&gt;next server&lt;/a&gt; if nginx already started sending the request body.</source>
          <target state="translated">버퍼링이 비활성화되면 요청 본문이 수신되는 즉시 uwsgi 서버로 전송됩니다. 이 경우, nginx가 이미 요청 본문 전송을 시작한 경우 요청을 &lt;a href=&quot;#uwsgi_next_upstream&quot;&gt;다음 서버&lt;/a&gt; 로 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="50c5ed0eac51e1d931dbab717281610b716893cf" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the FastCGI server. The maximum size of the data that nginx can receive from the server at a time is set by the &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; directive.</source>
          <target state="translated">버퍼링이 비활성화되면 응답이 수신되는 즉시 클라이언트에 동 기적으로 전달됩니다. nginx는 FastCGI 서버에서 전체 응답을 읽으려고하지 않습니다. nginx가 한 번에 서버에서 수신 할 수있는 최대 데이터 크기는 &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="f86e19e8ea0782f73abf115e1c90ce1d098b8ac6" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the SCGI server. The maximum size of the data that nginx can receive from the server at a time is set by the &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; directive.</source>
          <target state="translated">버퍼링이 비활성화되면 응답이 수신되는 즉시 클라이언트에 동 기적으로 전달됩니다. nginx는 SCGI 서버에서 전체 응답을 읽으려고하지 않습니다. nginx가 한 번에 서버에서 수신 할 수있는 최대 데이터 크기는 &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="9846439d70a36f79bfd36082f08a2573cf8e9f6c" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the proxied server. The maximum size of the data that nginx can receive from the server at a time is set by the &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; directive.</source>
          <target state="translated">버퍼링이 비활성화되면 응답이 수신되는 즉시 클라이언트에 동 기적으로 전달됩니다. nginx는 프록시 서버에서 전체 응답을 읽으려고 시도하지 않습니다. nginx가 한 번에 서버에서 수신 할 수있는 최대 데이터 크기는 &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0496301307b036bafa5a17f5c0dc649ea4b3294e" translate="yes" xml:space="preserve">
          <source>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the uwsgi server. The maximum size of the data that nginx can receive from the server at a time is set by the &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; directive.</source>
          <target state="translated">버퍼링이 비활성화되면 응답이 수신되는 즉시 클라이언트에 동 기적으로 전달됩니다. nginx는 uwsgi 서버에서 전체 응답을 읽으려고 시도하지 않습니다. nginx가 한 번에 서버에서 수신 할 수있는 최대 데이터 크기는 &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; 지시문에 의해 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="4aa5db230656e43ff8b66ae785f798b03abc2e26" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, nginx receives a response from the FastCGI server as soon as possible, saving it into the buffers set by the &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#fastcgi_buffers&quot;&gt;fastcgi_buffers&lt;/a&gt; directives. If the whole response does not fit into memory, a part of it can be saved to a &lt;a href=&quot;#fastcgi_temp_path&quot;&gt;temporary file&lt;/a&gt; on the disk. Writing to temporary files is controlled by the &lt;a href=&quot;#fastcgi_max_temp_file_size&quot;&gt;fastcgi_max_temp_file_size&lt;/a&gt; and &lt;a href=&quot;#fastcgi_temp_file_write_size&quot;&gt;fastcgi_temp_file_write_size&lt;/a&gt; directives.</source>
          <target state="translated">버퍼링이 활성화되면 nginx는 가능한 한 빨리 FastCGI 서버로부터 응답을 수신하여 &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#fastcgi_buffers&quot;&gt;fastcgi_buffers&lt;/a&gt; 지시문에 의해 설정된 버퍼에 저장합니다 . 전체 응답이 메모리에 맞지 않으면 일부를 디스크 의 &lt;a href=&quot;#fastcgi_temp_path&quot;&gt;임시 파일&lt;/a&gt; 에 저장할 수 있습니다 . 임시 파일에 쓰는 것은 &lt;a href=&quot;#fastcgi_max_temp_file_size&quot;&gt;fastcgi_max_temp_file_size&lt;/a&gt; 및 &lt;a href=&quot;#fastcgi_temp_file_write_size&quot;&gt;fastcgi_temp_file_write_size&lt;/a&gt; 지시문에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="41511462614d35a2b449e01940a0408b2fd43ccb" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, nginx receives a response from the SCGI server as soon as possible, saving it into the buffers set by the &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#scgi_buffers&quot;&gt;scgi_buffers&lt;/a&gt; directives. If the whole response does not fit into memory, a part of it can be saved to a &lt;a href=&quot;#scgi_temp_path&quot;&gt;temporary file&lt;/a&gt; on the disk. Writing to temporary files is controlled by the &lt;a href=&quot;#scgi_max_temp_file_size&quot;&gt;scgi_max_temp_file_size&lt;/a&gt; and &lt;a href=&quot;#scgi_temp_file_write_size&quot;&gt;scgi_temp_file_write_size&lt;/a&gt; directives.</source>
          <target state="translated">버퍼링이 활성화되면 nginx는 가능한 빨리 SCGI 서버로부터 응답을 수신하여 &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#scgi_buffers&quot;&gt;scgi_buffers&lt;/a&gt; 지시문이 설정 한 버퍼에 저장합니다 . 전체 응답이 메모리에 맞지 않으면 일부를 디스크 의 &lt;a href=&quot;#scgi_temp_path&quot;&gt;임시 파일&lt;/a&gt; 에 저장할 수 있습니다 . 임시 파일 쓰기는 &lt;a href=&quot;#scgi_max_temp_file_size&quot;&gt;scgi_max_temp_file_size&lt;/a&gt; 및 &lt;a href=&quot;#scgi_temp_file_write_size&quot;&gt;scgi_temp_file_write_size&lt;/a&gt; 지시문에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="501241c4812f1ca64d955c041de7b74b08d56bb6" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, nginx receives a response from the proxied server as soon as possible, saving it into the buffers set by the &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; and &lt;a href=&quot;#proxy_buffers&quot;&gt;proxy_buffers&lt;/a&gt; directives. If the whole response does not fit into memory, a part of it can be saved to a &lt;a href=&quot;#proxy_temp_path&quot;&gt;temporary file&lt;/a&gt; on the disk. Writing to temporary files is controlled by the &lt;a href=&quot;#proxy_max_temp_file_size&quot;&gt;proxy_max_temp_file_size&lt;/a&gt; and &lt;a href=&quot;#proxy_temp_file_write_size&quot;&gt;proxy_temp_file_write_size&lt;/a&gt; directives.</source>
          <target state="translated">버퍼링이 활성화되면 nginx는 프록시 서버로부터 가능한 빨리 응답을 받아 &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#proxy_buffers&quot;&gt;proxy_buffers&lt;/a&gt; 지시문에 의해 설정된 버퍼에 저장합니다 . 전체 응답이 메모리에 맞지 않으면 일부를 디스크 의 &lt;a href=&quot;#proxy_temp_path&quot;&gt;임시 파일&lt;/a&gt; 에 저장할 수 있습니다 . 임시 파일에 쓰는 것은 &lt;a href=&quot;#proxy_max_temp_file_size&quot;&gt;proxy_max_temp_file_size&lt;/a&gt; 및 &lt;a href=&quot;#proxy_temp_file_write_size&quot;&gt;proxy_temp_file_write_size&lt;/a&gt; 지시문에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="4e6c4eb5bf0acda620a0996df98c12808e520796" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, nginx receives a response from the uwsgi server as soon as possible, saving it into the buffers set by the &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#uwsgi_buffers&quot;&gt;uwsgi_buffers&lt;/a&gt; directives. If the whole response does not fit into memory, a part of it can be saved to a &lt;a href=&quot;#uwsgi_temp_path&quot;&gt;temporary file&lt;/a&gt; on the disk. Writing to temporary files is controlled by the &lt;a href=&quot;#uwsgi_max_temp_file_size&quot;&gt;uwsgi_max_temp_file_size&lt;/a&gt; and &lt;a href=&quot;#uwsgi_temp_file_write_size&quot;&gt;uwsgi_temp_file_write_size&lt;/a&gt; directives.</source>
          <target state="translated">버퍼링이 활성화되면, nginx는 가능한 빨리 uwsgi 서버로부터 응답을 수신하여 &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; 및 &lt;a href=&quot;#uwsgi_buffers&quot;&gt;uwsgi_buffers&lt;/a&gt; 지시문에 의해 설정된 버퍼에 저장합니다 . 전체 응답이 메모리에 맞지 않으면 일부를 디스크 의 &lt;a href=&quot;#uwsgi_temp_path&quot;&gt;임시 파일&lt;/a&gt; 에 저장할 수 있습니다 . 임시 파일에 쓰는 것은 &lt;a href=&quot;#uwsgi_max_temp_file_size&quot;&gt;uwsgi_max_temp_file_size&lt;/a&gt; 및 &lt;a href=&quot;#uwsgi_temp_file_write_size&quot;&gt;uwsgi_temp_file_write_size&lt;/a&gt; 지시문에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="24530f7066fdd22e47ccb3a1a92853f20ce479db" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, the data will be written to the file:</source>
          <target state="translated">버퍼링이 활성화되면 데이터가 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="3db5002ea32edcf74513bf9be84b56e05b3ec735" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, the entire request body is &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;read&lt;/a&gt; from the client before sending the request to a FastCGI server.</source>
          <target state="translated">버퍼링이 활성화되면 요청을 FastCGI 서버로 보내기 전에 클라이언트에서 전체 요청 본문을 &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;읽습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63f3adba0e59656f5f9ba0258a16a39d72ffc186" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, the entire request body is &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;read&lt;/a&gt; from the client before sending the request to a proxied server.</source>
          <target state="translated">버퍼링을 사용 하면 프록시 서버로 요청을 보내기 전에 클라이언트에서 전체 요청 본문을 &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;읽습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72d5cd862cc4102f6b6ec12885b2f8baf9adc156" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, the entire request body is &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;read&lt;/a&gt; from the client before sending the request to a uwsgi server.</source>
          <target state="translated">버퍼링이 활성화되면 요청을 uwsgi 서버로 보내기 전에 클라이언트에서 전체 요청 본문을 &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;읽습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="092f6f1d16438ff50004c1c9dd202625fe0eed89" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, the entire request body is &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;read&lt;/a&gt; from the client before sending the request to an SCGI server.</source>
          <target state="translated">버퍼링이 활성화되면 SCGI 서버로 요청을 보내기 전에 클라이언트에서 전체 요청 본문을 &lt;a href=&quot;ngx_http_core_module#client_body_buffer_size&quot;&gt;읽습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01c4edd4b2be466b01da6fc97cb1b173a4fa85c8" translate="yes" xml:space="preserve">
          <source>When checking symbolic links (parameters &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;if_not_owner&lt;/code&gt;), all components of the pathname are normally checked. Checking of symbolic links in the initial part of the pathname may be avoided by specifying additionally the &lt;code&gt;from&lt;/code&gt;=&lt;code&gt;&lt;i&gt;part&lt;/i&gt;&lt;/code&gt; parameter. In this case, symbolic links are checked only from the pathname component that follows the specified initial part. If the value is not an initial part of the pathname checked, the whole pathname is checked as if this parameter was not specified at all. If the value matches the whole file name, symbolic links are not checked. The parameter value can contain variables.</source>
          <target state="translated">기호 링크 (매개 변수 &lt;code&gt;on&lt;/code&gt; 및 &lt;code&gt;if_not_owner&lt;/code&gt; )를 검사 할 때 경로 이름의 모든 구성 요소가 정상적으로 검사됩니다. &lt;code&gt;from&lt;/code&gt; = &lt;code&gt;&lt;i&gt;part&lt;/i&gt;&lt;/code&gt; 매개 변수 를 추가로 지정하여 경로명의 초기 부분에서 기호 링크를 점검하지 않아도됩니다 . 이 경우 심볼릭 링크는 지정된 초기 부분 다음에 오는 경로 이름 구성 요소에서만 확인됩니다. 값이 점검 된 경로명의 초기 부분이 아닌 경우,이 매개 변수가 전혀 지정되지 않은 것처럼 전체 경로명이 점검됩니다. 값이 전체 파일 이름과 일치하면 기호 링크가 확인되지 않습니다. 매개 변수 값은 변수를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9072c623546e939bdf63f97e93e3cab0dea8a33e" translate="yes" xml:space="preserve">
          <source>When creating a file with the PUT method, it is possible to specify the modification date by passing it in the &amp;ldquo;Date&amp;rdquo; header field.</source>
          <target state="translated">PUT 방식으로 파일을 생성 할 때 &quot;날짜&quot;헤더 필드에 수정 날짜를 전달하여 수정 날짜를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0f549a3079e0238a4c9c545541aa7090208da11" translate="yes" xml:space="preserve">
          <source>When describing a conversion table to UTF-8, codes for the UTF-8 charset should be given in the second column, for example:</source>
          <target state="translated">UTF-8로 변환 테이블을 설명 할 때 UTF-8 문자 세트의 코드는 두 번째 열에 제공되어야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ea50f66d14e538179d4a0a4360d0d18deb4aba91" translate="yes" xml:space="preserve">
          <source>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the &lt;a href=&quot;#fastcgi_cache_key&quot;&gt;fastcgi_cache_key&lt;/a&gt; directive by passing a request to a FastCGI server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the &lt;a href=&quot;#fastcgi_cache_lock_timeout&quot;&gt;fastcgi_cache_lock_timeout&lt;/a&gt; directive.</source>
          <target state="translated">활성화되면 한 번에 하나의 요청 만 FastCGI 서버에 요청을 전달 하여 &lt;a href=&quot;#fastcgi_cache_key&quot;&gt;fastcgi_cache_key&lt;/a&gt; 지시문에 따라 식별 된 새 캐시 요소를 채울 수 있습니다 . 동일한 캐시 요소의 다른 요청은 응답이 캐시에 나타날 때까지 기다리거나 &lt;a href=&quot;#fastcgi_cache_lock_timeout&quot;&gt;fastcgi_cache_lock_timeout&lt;/a&gt; 지시문이 설정 한 시간까지이 요소가 해제 될 때까지 캐시 잠금을 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="7789302203efcc7736577adafc8d979c5e81096c" translate="yes" xml:space="preserve">
          <source>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the &lt;a href=&quot;#proxy_cache_key&quot;&gt;proxy_cache_key&lt;/a&gt; directive by passing a request to a proxied server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the &lt;a href=&quot;#proxy_cache_lock_timeout&quot;&gt;proxy_cache_lock_timeout&lt;/a&gt; directive.</source>
          <target state="translated">사용 가능한 경우 한 번에 하나의 요청 만 프록시 서버에 요청을 전달 하여 &lt;a href=&quot;#proxy_cache_key&quot;&gt;proxy_cache_key&lt;/a&gt; 지시문에 따라 식별 된 새 캐시 요소를 채울 수 있습니다 . 동일한 캐시 요소에 대한 다른 요청은 응답이 캐시에 나타날 때까지 기다리거나 &lt;a href=&quot;#proxy_cache_lock_timeout&quot;&gt;proxy_cache_lock_timeout&lt;/a&gt; 지시문이 설정 한 시간까지이 요소가 해제 될 때까지 캐시 잠금을 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="e54a03876a663c98259370b08a1b5b6b4b1522e2" translate="yes" xml:space="preserve">
          <source>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the &lt;a href=&quot;#scgi_cache_key&quot;&gt;scgi_cache_key&lt;/a&gt; directive by passing a request to an SCGI server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the &lt;a href=&quot;#scgi_cache_lock_timeout&quot;&gt;scgi_cache_lock_timeout&lt;/a&gt; directive.</source>
          <target state="translated">활성화되면 한 번에 하나의 요청 만 SCGI 서버에 요청을 전달 하여 &lt;a href=&quot;#scgi_cache_key&quot;&gt;scgi_cache_key&lt;/a&gt; 지시문에 따라 식별 된 새 캐시 요소를 채울 수 있습니다 . 동일한 캐시 요소에 대한 다른 요청은 응답이 캐시에 나타날 때까지 기다리거나 &lt;a href=&quot;#scgi_cache_lock_timeout&quot;&gt;scgi_cache_lock_timeout&lt;/a&gt; 지시문이 설정 한 시간까지이 요소가 해제 될 때까지 캐시 잠금을 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="ae966c59ceb592fc166f936a8b309c841f9e32c4" translate="yes" xml:space="preserve">
          <source>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the &lt;a href=&quot;#uwsgi_cache_key&quot;&gt;uwsgi_cache_key&lt;/a&gt; directive by passing a request to a uwsgi server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the &lt;a href=&quot;#uwsgi_cache_lock_timeout&quot;&gt;uwsgi_cache_lock_timeout&lt;/a&gt; directive.</source>
          <target state="translated">활성화되면 요청을 uwsgi 서버에 전달 하여 &lt;a href=&quot;#uwsgi_cache_key&quot;&gt;uwsgi_cache_key&lt;/a&gt; 지시문에 따라 식별 된 새 캐시 요소를 한 번에 하나의 요청 만 채울 수 있습니다 . 동일한 캐시 요소에 대한 다른 요청은 &lt;a href=&quot;#uwsgi_cache_lock_timeout&quot;&gt;uwsgi_cache_lock_timeout&lt;/a&gt; 지시문이 설정 한 시간까지 캐시에 응답이 표시 되거나이 요소가 해제 될 때까지 캐시 잠금이 대기 합니다.</target>
        </trans-unit>
        <trans-unit id="9a1ea145571dc5dc7acf5e99e0f4d513ccbed07a" translate="yes" xml:space="preserve">
          <source>When internal error is detected, e.g. the leak of sockets on restart of working processes, enabling &lt;code&gt;debug_points&lt;/code&gt; leads to a core file creation (&lt;code&gt;abort&lt;/code&gt;) or to stopping of a process (&lt;code&gt;stop&lt;/code&gt;) for further analysis using a system debugger.</source>
          <target state="translated">내부 오류가 감지되면 (예 : 작업 프로세스 재시작시 소켓 누수) &lt;code&gt;debug_points&lt;/code&gt; 를 활성화 하면 시스템 디버거를 사용하여 추가 분석 을 위해 코어 파일 작성 ( &lt;code&gt;abort&lt;/code&gt; ) 또는 프로세스 &lt;code&gt;stop&lt;/code&gt; ( 중지 )가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="70e9be26cd4d94b177c1e1e616d9d65fe4bb78e1" translate="yes" xml:space="preserve">
          <source>When issuing or altering a stream of buffers, it's often desirable to reuse the allocated buffers. A standard and widely adopted approach in nginx code is to keep two buffer chains for this purpose: &lt;code&gt;free&lt;/code&gt; and &lt;code&gt;busy&lt;/code&gt;. The &lt;code&gt;free&lt;/code&gt; chain keeps all free buffers, which can be reused. The &lt;code&gt;busy&lt;/code&gt; chain keeps all buffers sent by the current module that are still in use by some other filter handler. A buffer is considered in use if its size is greater than zero. Normally, when a buffer is consumed by a filter, its &lt;code&gt;pos&lt;/code&gt; (or &lt;code&gt;file_pos&lt;/code&gt; for a file buffer) is moved towards &lt;code&gt;last&lt;/code&gt; (&lt;code&gt;file_last&lt;/code&gt; for a file buffer). Once a buffer is completely consumed, it's ready to be reused. To add newly freed buffers to the &lt;code&gt;free&lt;/code&gt; chain it's enough to iterate over the &lt;code&gt;busy&lt;/code&gt; chain and move the zero size buffers at the head of it to &lt;code&gt;free&lt;/code&gt;. This operation is so common that there is a special function for it, &lt;code&gt;ngx_chain_update_chains(free, busy, out, tag)&lt;/code&gt;. The function appends the output chain &lt;code&gt;out&lt;/code&gt; to &lt;code&gt;busy&lt;/code&gt; and moves free buffers from the top of &lt;code&gt;busy&lt;/code&gt; to &lt;code&gt;free&lt;/code&gt;. Only the buffers with the specified &lt;code&gt;tag&lt;/code&gt; are reused. This lets a module reuse only the buffers that it allocated itself.</source>
          <target state="translated">버퍼 스트림을 발행하거나 변경할 때 할당 된 버퍼를 재사용하는 것이 바람직합니다. nginx 코드에서 널리 채택 된 표준 접근법은이 목적을 위해 두 개의 버퍼 체인을 유지하는 것입니다 : &lt;code&gt;free&lt;/code&gt; 및 &lt;code&gt;busy&lt;/code&gt; . 사용 &lt;code&gt;free&lt;/code&gt; 체인은 재사용 가능한 모든 사용 가능한 버퍼를 유지합니다. &lt;code&gt;busy&lt;/code&gt; 체인 다른 필터 핸들러가 여전히 사용되고 현재 모듈에 의해 전송 된 모든 버퍼를 유지한다. 버퍼 크기가 0보다 큰 경우 사용중인 것으로 간주됩니다. 일반적으로, 버퍼가 필터에 의해 사용될 때 , 그 &lt;code&gt;pos&lt;/code&gt; (또는 파일 버퍼에 대한 &lt;code&gt;file_pos&lt;/code&gt; )는 &lt;code&gt;last&lt;/code&gt; ( &lt;code&gt;file_last&lt;/code&gt; )으로 이동합니다파일 버퍼). 버퍼가 완전히 소모되면 재사용 할 수 있습니다. 새로 사용 가능한 버퍼를 사용 &lt;code&gt;free&lt;/code&gt; 체인에 추가하려면 사용 &lt;code&gt;busy&lt;/code&gt; 체인 을 반복 하고 헤드 크기가 0 인 버퍼를 &lt;code&gt;free&lt;/code&gt; 로 이동하면 충분합니다 . 이 작업은 너무 일반적이기 때문에 특별한 기능인 &lt;code&gt;ngx_chain_update_chains(free, busy, out, tag)&lt;/code&gt; 있습니다. 함수는 출력 체인 추가 &lt;code&gt;out&lt;/code&gt; 에 &lt;code&gt;busy&lt;/code&gt; 의 상부로부터 이동 가능한 버퍼가 &lt;code&gt;busy&lt;/code&gt; 할 &lt;code&gt;free&lt;/code&gt; . 지정된 &lt;code&gt;tag&lt;/code&gt; 가진 버퍼 만 재사용됩니다. 이를 통해 모듈은 자신이 할당 한 버퍼 만 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f664988db4661a9a9844ad4c00880bb2853eb06" translate="yes" xml:space="preserve">
          <source>When location is specified using a regular expression, and also inside named locations.</source>
          <target state="translated">위치가 정규식을 사용하여 지정되고 이름이 지정된 위치 내부에도 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="ba57d1252aa42e92c7bd1389a64a0b3661071215" translate="yes" xml:space="preserve">
          <source>When location matches the last part of the directive&amp;rsquo;s value:</source>
          <target state="translated">위치가 지시문 값의 마지막 부분과 일치하는 경우 :</target>
        </trans-unit>
        <trans-unit id="835c2766bf80f31c848868a6da3033edd773d9a2" translate="yes" xml:space="preserve">
          <source>When nginx has to pass a request to another host for processing, it uses the configured load-balancing method to obtain an address to connect to. The method is obtained from the &lt;code&gt;ngx_http_upstream_t.peer&lt;/code&gt; object of type &lt;code&gt;ngx_peer_connection_t&lt;/code&gt;:</source>
          <target state="translated">nginx는 처리를 위해 요청을 다른 호스트로 전달해야 할 경우 구성된로드 밸런싱 방법을 사용하여 연결할 주소를 얻습니다. 이 메소드는 &lt;code&gt;ngx_http_upstream_t.peer&lt;/code&gt; 유형 의 ngx_http_upstream_t.peer 객체에서 &lt;code&gt;ngx_peer_connection_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4498ff73a32af6dafeeae11ee31e1a08a511b2d8" translate="yes" xml:space="preserve">
          <source>When nginx selects a &lt;code&gt;location&lt;/code&gt; block to serve a request it first checks &lt;a href=&quot;http/ngx_http_core_module#location&quot;&gt;location&lt;/a&gt; directives that specify prefixes, remembering &lt;code&gt;location&lt;/code&gt; with the longest prefix, and then checks regular expressions. If there is a match with a regular expression, nginx picks this &lt;code&gt;location&lt;/code&gt; or, otherwise, it picks the one remembered earlier.</source>
          <target state="translated">nginx는 요청을 처리하기 위해 &lt;code&gt;location&lt;/code&gt; 블록을 선택할 때 먼저 접두사를 지정하는 &lt;a href=&quot;http/ngx_http_core_module#location&quot;&gt;위치&lt;/a&gt; 지시문을 확인 하고 가장 긴 접두사를 가진 &lt;code&gt;location&lt;/code&gt; 를 기억 한 다음 정규식을 확인합니다. 정규식과 일치하는 경우 nginx는이 &lt;code&gt;location&lt;/code&gt; 선택 하거나 그렇지 않으면 이전에 기억 된 위치를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="6d9d7a511292e2a346e06d4709f9b0421eed43b4" translate="yes" xml:space="preserve">
          <source>When searching for a virtual server by name, if name matches more than one of the specified variants, e.g. both wildcard name and regular expression match, the first matching variant will be chosen, in the following order of precedence:</source>
          <target state="translated">이름으로 가상 서버를 검색 할 때 이름이 지정된 변형 중 하나 이상 (예 : 와일드 카드 이름 및 정규식 일치)과 일치하는 경우 첫 번째 일치 변형이 다음 우선 순위에 따라 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="3a2ba736a0758b76c15e2481bd1878c27a9b38a5" translate="yes" xml:space="preserve">
          <source>When set to a non-zero value, limits the amount of data that can be transferred in a single &lt;code&gt;sendfile()&lt;/code&gt; call. Without the limit, one fast connection may seize the worker process entirely.</source>
          <target state="translated">0이 아닌 값으로 설정하면 단일 &lt;code&gt;sendfile()&lt;/code&gt; 호출 에서 전송할 수있는 데이터의 양이 제한 됩니다. 제한이 없으면 하나의 빠른 연결로 작업자 프로세스가 완전히 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b14e485ff114af36bdf987ee478909875a43a8e9" translate="yes" xml:space="preserve">
          <source>When set to the value &lt;code&gt;on&lt;/code&gt;, temporary files are not removed after request processing.</source>
          <target state="translated">&lt;code&gt;on&lt;/code&gt; 값 으로 설정하면 요청 처리 후에 임시 파일이 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d868f61224d5a5087dc527ba7714167d2cd212f" translate="yes" xml:space="preserve">
          <source>When set, the stapled OCSP response will be taken from the specified &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; instead of querying the OCSP responder specified in the server certificate.</source>
          <target state="translated">설정되면 스테이플 된 OCSP 응답은 서버 인증서에 지정된 OCSP 응답자를 조회하는 대신 지정된 &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b30f6791e33d34b1cf9b7038921068b7771ccab6" translate="yes" xml:space="preserve">
          <source>When setting up load balancing for FastCGI, uwsgi, SCGI, memcached, or gRPC, use &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_scgi_module#scgi_pass&quot;&gt;scgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_memcached_module#memcached_pass&quot;&gt;memcached_pass&lt;/a&gt;, and &lt;a href=&quot;ngx_http_grpc_module#grpc_pass&quot;&gt;grpc_pass&lt;/a&gt; directives respectively.</source>
          <target state="translated">FastCGI, uwsgi, SCGI, memcached 또는 gRPC에 대한로드 밸런싱을 설정할 때는 각각 &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_scgi_module#scgi_pass&quot;&gt;scgi_pass&lt;/a&gt; , &lt;a href=&quot;ngx_http_memcached_module#memcached_pass&quot;&gt;memcached_pass&lt;/a&gt; 및 &lt;a href=&quot;ngx_http_grpc_module#grpc_pass&quot;&gt;grpc_pass&lt;/a&gt; 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="47785bd748e084967c3302284fffc2e59d05ddc0" translate="yes" xml:space="preserve">
          <source>When several &lt;code&gt;limit_conn&lt;/code&gt; directives are specified, any configured limit will apply.</source>
          <target state="translated">여러 &lt;code&gt;limit_conn&lt;/code&gt; 지시문이 지정되면 구성된 제한이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e42d47b77f95292fe6a87b7eaa1adf05e5fbab9e" translate="yes" xml:space="preserve">
          <source>When testing configurations with &lt;a href=&quot;#sni&quot;&gt;SNI&lt;/a&gt;, it is important to specify the &lt;code&gt;-servername&lt;/code&gt; option as &lt;code&gt;openssl&lt;/code&gt; does not use SNI by default.</source>
          <target state="translated">&lt;a href=&quot;#sni&quot;&gt;SNI&lt;/a&gt; 를 사용하여 구성을 테스트 할 때는 &lt;code&gt;openssl&lt;/code&gt; 이 기본적으로 SNI를 사용하지 않으므로 &lt;code&gt;-servername&lt;/code&gt; 옵션 을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ac63c718484ae849c97e2cc676a04b69dde1a905" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;weight&lt;/a&gt; parameter is specified for a server, the weight is accounted as part of the load balancing decision.</source>
          <target state="translated">때 &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;가중치&lt;/a&gt; 파라미터 서버에 지정되어, 중량은 부하 분산 결정의 일부를 차지한다.</target>
        </trans-unit>
        <trans-unit id="996c32ead0baa99d754c463b2bafc1c693bf35f7" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cookie&lt;/code&gt; method is used, information about the designated server is passed in an HTTP cookie generated by nginx:</source>
          <target state="translated">때 &lt;code&gt;cookie&lt;/code&gt; 방법을 사용, 지정된 서버에 대한 정보의 nginx에 의해 생성 된 HTTP 쿠키에 전달됩니다 :</target>
        </trans-unit>
        <trans-unit id="ac0970dc129dc8e757812f42c2420103e0fe36b6" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;learn&lt;/code&gt; method (1.7.1) is used, nginx analyzes upstream server responses and learns server-initiated sessions usually passed in an HTTP cookie.</source>
          <target state="translated">(가) 때 &lt;code&gt;learn&lt;/code&gt; 방법 (1.7.1)을 사용, nginx를 분석 업스트림 서버 응답 및 배운다 일반적으로 HTTP 쿠키 전달 서버 시작 세션을.</target>
        </trans-unit>
        <trans-unit id="ffbce3e16ee93be26ad53a76ce9db61ede007b42" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;route&lt;/code&gt; method is used, proxied server assigns client a route on receipt of the first request. All subsequent requests from this client will carry routing information in a cookie or URI. This information is compared with the &amp;ldquo;&lt;code&gt;route&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;#server&quot;&gt;server&lt;/a&gt; directive to identify the server to which the request should be proxied. If the &amp;ldquo;&lt;code&gt;route&lt;/code&gt;&amp;rdquo; parameter is not specified, the route name will be a hexadecimal representation of the MD5 hash of the IP address and port, or of the UNIX-domain socket path. If the designated server cannot process a request, the new server is selected by the configured balancing method as if there is no routing information in the request.</source>
          <target state="translated">때 &lt;code&gt;route&lt;/code&gt; 방법을 사용, 서버 양수인 클라이언트에게 첫 번째 요청의 수신에 경로를 프록시. 이 클라이언트의 모든 후속 요청은 쿠키 또는 URI로 라우팅 정보를 전달합니다. 이 정보는 &lt;a href=&quot;#server&quot;&gt;서버&lt;/a&gt; 지정 문의 &quot; &lt;code&gt;route&lt;/code&gt; &quot;매개 변수 와 비교 하여 요청을 프록시해야하는 서버를 식별합니다. &quot; &lt;code&gt;route&lt;/code&gt; &quot;매개 변수를 지정하지 않으면 경로 이름은 IP 주소 및 포트의 MD5 해시 또는 UNIX 도메인 소켓 경로의 16 진 표현입니다. 지정된 서버가 요청을 처리 할 수없는 경우 요청에 라우팅 정보가없는 것처럼 구성된 밸런싱 방법으로 새 ​​서버가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="a6e04910d324d1ed616e752b5acea0ce206477ee" translate="yes" xml:space="preserve">
          <source>When the APOP or CRAM-MD5 are used, request-response will look as follows:</source>
          <target state="translated">APOP 또는 CRAM-MD5를 사용하는 경우 요청-응답은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9169fa0fa1ecb805d4aa0b04a46ef56ddb2f69cf" translate="yes" xml:space="preserve">
          <source>When the JSONP format is used, the name of a callback function is set with the &lt;code&gt;callback&lt;/code&gt; request argument. If the argument is missing or has an empty value, then the JSON format is used.</source>
          <target state="translated">JSONP 형식을 사용하는 경우 콜백 함수의 이름은 &lt;code&gt;callback&lt;/code&gt; 요청 인수로 설정됩니다 . 인수가 누락되었거나 값이 비어 있으면 JSON 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9b3db6be19cea4509e17a1fad529262b62d4b6e0" translate="yes" xml:space="preserve">
          <source>When the URI is changed inside a proxied location using the &lt;a href=&quot;ngx_http_rewrite_module#rewrite&quot;&gt;rewrite&lt;/a&gt; directive, and this same configuration will be used to process a request (&lt;code&gt;break&lt;/code&gt;):</source>
          <target state="translated">&lt;a href=&quot;ngx_http_rewrite_module#rewrite&quot;&gt;rewrite&lt;/a&gt; 지시문을 사용하여 프록시 위치 내에서 URI가 변경되면 동일한 구성이 요청을 처리하는 데 사용됩니다 ( &lt;code&gt;break&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="64dfffeea6b6e6018ed478cda4f8689cbce970a1" translate="yes" xml:space="preserve">
          <source>When the client certificate was present, its details are passed in the following request headers: &amp;ldquo;Auth-SSL-Subject&amp;rdquo;, &amp;ldquo;Auth-SSL-Issuer&amp;rdquo;, &amp;ldquo;Auth-SSL-Serial&amp;rdquo;, and &amp;ldquo;Auth-SSL-Fingerprint&amp;rdquo;. If &lt;a href=&quot;#auth_http_pass_client_cert&quot;&gt;auth_http_pass_client_cert&lt;/a&gt; is enabled, the certificate itself is passed in the &amp;ldquo;Auth-SSL-Cert&amp;rdquo; header. The request will look as follows:</source>
          <target state="translated">클라이언트 인증서가 있으면 세부 정보는 &quot;Auth-SSL-Subject&quot;, &quot;Auth-SSL-Issuer&quot;, &quot;Auth-SSL-Serial&quot;및 &quot;Auth-SSL-Fingerprint&quot;요청 헤더에 전달됩니다. 경우 &lt;a href=&quot;#auth_http_pass_client_cert&quot;&gt;auth_http_pass_client_cert가&lt;/a&gt; 활성화되어, 인증서 자체는 &quot;인증-SSL-CERT는&quot;헤더에 전달됩니다. 요청은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5be28b4d1a4da1e4ffbb4c721ace58b88196741f" translate="yes" xml:space="preserve">
          <source>When the hash is built, use the &lt;code&gt;ngx_hash_find(hash, key, name, len)&lt;/code&gt; function to look up elements:</source>
          <target state="translated">해시가 빌드되면 &lt;code&gt;ngx_hash_find(hash, key, name, len)&lt;/code&gt; 함수를 사용하여 요소를 찾아보십시오.</target>
        </trans-unit>
        <trans-unit id="ed54f15a6e856150b534c116191550935aece083" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;http/ngx_http_core_module#aio&quot;&gt;aio&lt;/a&gt; with the &lt;a href=&quot;events#epoll&quot;&gt;epoll&lt;/a&gt; connection processing method, sets the maximum &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; of outstanding asynchronous I/O operations for a single worker process.</source>
          <target state="translated">&lt;a href=&quot;events#epoll&quot;&gt;epoll&lt;/a&gt; 연결 처리 방법으로 &lt;a href=&quot;http/ngx_http_core_module#aio&quot;&gt;aio&lt;/a&gt; 를 사용 하는 경우 단일 작업자 프로세스에 대해 최대 비동기 처리 I / O 작업 &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; 를 설정하십시오 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="0edd6867383b0ff69dcae746b06620e52dd0fd99" translate="yes" xml:space="preserve">
          <source>When using OpenSSL 1.0.2 or higher, it is possible to specify multiple curves (1.11.0), for example:</source>
          <target state="translated">OpenSSL 1.0.2 이상을 사용하는 경우 다음과 같이 여러 곡선 (1.11.0)을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45276258abeeda504575036e89674ccdd75b6bdb" translate="yes" xml:space="preserve">
          <source>When using load balancer methods other than the default round-robin method, it is necessary to activate them before the &lt;code&gt;keepalive&lt;/code&gt; directive.</source>
          <target state="translated">기본 라운드 로빈 방법 이외의로드 밸런서 방법을 사용하는 경우 &lt;code&gt;keepalive&lt;/code&gt; 지시문 전에 활성화해야 합니다.</target>
        </trans-unit>
        <trans-unit id="85125319115fa5be2fa7b851c577b9af7a98baf1" translate="yes" xml:space="preserve">
          <source>When using load balancer methods other than the default round-robin method, it is necessary to activate them before the &lt;code&gt;ntlm&lt;/code&gt; directive.</source>
          <target state="translated">기본 라운드 로빈 방법 이외의로드 밸런서 방법을 사용하는 경우 &lt;code&gt;ntlm&lt;/code&gt; 지시문 전에 활성화해야 합니다.</target>
        </trans-unit>
        <trans-unit id="a6da310a154885da3adaad2c4578b8798e9dc162" translate="yes" xml:space="preserve">
          <source>When using load balancer methods other than the default round-robin method, it is necessary to activate them before the &lt;code&gt;queue&lt;/code&gt; directive.</source>
          <target state="translated">기본 라운드 로빈 방법 이외의로드 밸런서 방법을 사용하는 경우 &lt;code&gt;queue&lt;/code&gt; 지시문 전에 활성화해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7a1c85ba2842627d5f8541a09bff3469391f931d" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;#fastcgi_split_path_info&quot;&gt;fastcgi_split_path_info&lt;/a&gt; directive, the &lt;code&gt;$fastcgi_script_name&lt;/code&gt; variable equals the value of the first capture set by the directive.</source>
          <target state="translated">&lt;a href=&quot;#fastcgi_split_path_info&quot;&gt;fastcgi_split_path_info&lt;/a&gt; 지시문을 사용할 때 &lt;code&gt;$fastcgi_script_name&lt;/code&gt; 변수는 지시문이 설정 한 첫 번째 캡처 값과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0053feff20102d93ff084942934471628ad26c11" translate="yes" xml:space="preserve">
          <source>When using the SSL/TLS protocol, compressed responses may be subject to &lt;a href=&quot;https://en.wikipedia.org/wiki/BREACH&quot;&gt;BREACH&lt;/a&gt; attacks.</source>
          <target state="translated">SSL / TLS 프로토콜을 사용할 때 압축 된 응답은 &lt;a href=&quot;https://en.wikipedia.org/wiki/BREACH&quot;&gt;BREACH&lt;/a&gt; 공격을 받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba566e794a5aede3b3081326a351995229e3eba3" translate="yes" xml:space="preserve">
          <source>When using the databases with IPv6 support (1.3.12, 1.2.7), IPv4 addresses are looked up as IPv4-mapped IPv6 addresses.</source>
          <target state="translated">IPv6을 지원하는 데이터베이스 (1.3.12, 1.2.7)를 사용하는 경우 IPv4 주소는 IPv4 매핑 된 IPv6 주소로 조회됩니다.</target>
        </trans-unit>
        <trans-unit id="d18af41f0b6351d2de2db21837fc7b305bf0ac70" translate="yes" xml:space="preserve">
          <source>When using the databases with IPv6 support, IPv4 addresses are looked up as IPv4-mapped IPv6 addresses.</source>
          <target state="translated">IPv6을 지원하는 데이터베이스를 사용하는 경우 IPv4 주소는 IPv4 매핑 된 IPv6 주소로 조회됩니다.</target>
        </trans-unit>
        <trans-unit id="e33e2f9e041378ca2603ea77e0b9298b160508e3" translate="yes" xml:space="preserve">
          <source>When variables are used in &lt;code&gt;proxy_pass&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;proxy_pass&lt;/code&gt; 에서 변수를 사용하는 경우 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
