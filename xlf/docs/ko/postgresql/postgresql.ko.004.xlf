<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="postgresql">
    <body>
      <group id="postgresql">
        <trans-unit id="b988d6ad848125dadf360eaa4d9f0eaf13fa9c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DROP USER&lt;/code&gt; is simply an alternate spelling of &lt;a href=&quot;sql-droprole&quot;&gt;DROP ROLE&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DROP USER&lt;/code&gt; 는 단순히 &lt;a href=&quot;sql-droprole&quot;&gt;DROP ROLE&lt;/a&gt; 의 대체 철자입니다 .</target>
        </trans-unit>
        <trans-unit id="d6aff9224c2ebd626d814fc2abcc1c87945d0936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DROP VIEW&lt;/code&gt; drops an existing view. To execute this command you must be the owner of the view.</source>
          <target state="translated">&lt;code&gt;DROP VIEW&lt;/code&gt; 는 기존 뷰를 삭제합니다. 이 명령을 실행하려면 뷰의 소유자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b7a5039da43f3926cf317fb8cddeb42302994cd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DST&lt;/code&gt; is the zone abbreviation to be used for daylight-savings time. If this field and the following ones are omitted, the zone uses a fixed UTC offset with no daylight-savings rule.</source>
          <target state="translated">&lt;code&gt;DST&lt;/code&gt; 는 일광 절약 시간에 사용되는 영역 약어입니다. 이 필드와 다음 필드가 생략되면 구역은 일광 절약 규칙이없는 고정 UTC 오프셋을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="126d6da63f5eafde2a7ad7097a467cb8fb04c0ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateStyle&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;DateStyle&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="14457c8127c1c88e1a7d6a06a2d36cb6abcaf426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EEEE&lt;/code&gt; (scientific notation) cannot be used in combination with any of the other formatting patterns or modifiers other than digit and decimal point patterns, and must be at the end of the format string (e.g., &lt;code&gt;9.99EEEE&lt;/code&gt; is a valid pattern).</source>
          <target state="translated">&lt;code&gt;EEEE&lt;/code&gt; (과학적 표기법)는 숫자 및 소수점 패턴 이외의 다른 서식 패턴 또는 수정 자와 함께 사용할 수 없으며 형식 문자열의 끝에 있어야합니다 (예 : &lt;code&gt;9.99EEEE&lt;/code&gt; 는 유효한 패턴).</target>
        </trans-unit>
        <trans-unit id="01743cb755ffb3da4d3adbffc583f6831a11e216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;END&lt;/code&gt; commits the current transaction. All changes made by the transaction become visible to others and are guaranteed to be durable if a crash occurs. This command is a PostgreSQL extension that is equivalent to &lt;a href=&quot;sql-commit&quot;&gt;COMMIT&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;END&lt;/code&gt; 는 현재 트랜잭션을 커밋합니다. 트랜잭션에 의해 작성된 모든 변경 사항은 다른 사람에게 표시되며 충돌이 발생해도 지속 가능합니다. 이 명령은 &lt;a href=&quot;sql-commit&quot;&gt;COMMIT&lt;/a&gt; 와 동등한 PostgreSQL 확장입니다 .</target>
        </trans-unit>
        <trans-unit id="960180f8d45682f16b81536d291bd114ecedbd5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;END&lt;/code&gt; is a PostgreSQL extension that provides functionality equivalent to &lt;a href=&quot;sql-commit&quot;&gt;COMMIT&lt;/a&gt;, which is specified in the SQL standard.</source>
          <target state="translated">&lt;code&gt;END&lt;/code&gt; 는 SQL 표준에 지정된 &lt;a href=&quot;sql-commit&quot;&gt;COMMIT&lt;/a&gt; 과 동등한 기능을 제공하는 PostgreSQL 확장입니다 .</target>
        </trans-unit>
        <trans-unit id="1974b370a2d7b82d542947cb90d4041775036b09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXCEPT&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;EXCEPT&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="a49236c74db817db81d9a42442ad8550e4348250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXCEPTION&lt;/code&gt; blocks and other internal subtransactions</source>
          <target state="translated">&lt;code&gt;EXCEPTION&lt;/code&gt; 블록 및 기타 내부 서브 트랜잭션</target>
        </trans-unit>
        <trans-unit id="01d9bebf504ea4423fb9afdb43216da8d021025d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXCLUDE&lt;/code&gt; Constraint</source>
          <target state="translated">&lt;code&gt;EXCLUDE&lt;/code&gt; 제약</target>
        </trans-unit>
        <trans-unit id="c063c40bdf5eda0966e6586bda3cde5af220843d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXECUTE&lt;/code&gt; is used to execute a previously prepared statement. Since prepared statements only exist for the duration of a session, the prepared statement must have been created by a &lt;code&gt;PREPARE&lt;/code&gt; statement executed earlier in the current session.</source>
          <target state="translated">&lt;code&gt;EXECUTE&lt;/code&gt; 는 이전에 준비된 명령문을 실행하는 데 사용됩니다. 준비된 명령문은 세션 기간 동안 만 존재하므로 준비된 명령문 은 현재 세션에서 이전에 실행 된 &lt;code&gt;PREPARE&lt;/code&gt; 문에 의해 작성되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4248548d490b3ad4eac527660479fc2299fda7a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXPLAIN&lt;/code&gt; has a &lt;code&gt;BUFFERS&lt;/code&gt; option that can be used with &lt;code&gt;ANALYZE&lt;/code&gt; to get even more run time statistics:</source>
          <target state="translated">&lt;code&gt;EXPLAIN&lt;/code&gt; 에는 &lt;code&gt;ANALYZE&lt;/code&gt; 와 함께 사용하여 더 많은 런타임 통계를 얻을 수 있는 &lt;code&gt;BUFFERS&lt;/code&gt; 옵션이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b34ecd597527740fdbd1e78aec22a8692122c4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXPLAIN&lt;/code&gt; results should not be extrapolated to situations much different from the one you are actually testing; for example, results on a toy-sized table cannot be assumed to apply to large tables. The planner's cost estimates are not linear and so it might choose a different plan for a larger or smaller table. An extreme example is that on a table that only occupies one disk page, you'll nearly always get a sequential scan plan whether indexes are available or not. The planner realizes that it's going to take one disk page read to process the table in any case, so there's no value in expending additional page reads to look at an index. (We saw this happening in the &lt;code&gt;polygon_tbl&lt;/code&gt; example above.)</source>
          <target state="translated">&lt;code&gt;EXPLAIN&lt;/code&gt; 결과는 실제로 테스트중인 상황과 크게 다른 상황으로 추정해서는 안됩니다. 예를 들어, 장난감 크기 테이블의 결과는 큰 테이블에 적용되는 것으로 가정 할 수 없습니다. 플래너의 비용 추정치는 선형 적이 지 않으므로 더 크거나 작은 테이블에 대해 다른 계획을 선택할 수 있습니다. 극단적 인 예는 하나의 디스크 페이지 만 차지하는 테이블에서 인덱스 사용 가능 여부에 관계없이 거의 항상 순차적 스캔 계획을 얻는다는 것입니다. 플래너는 어떤 경우에도 테이블을 처리하기 위해 하나의 디스크 페이지 읽기가 필요하다는 것을 인식하므로 인덱스를보기 위해 추가 페이지 읽기를 소비하는 데 아무런 가치가 없습니다. ( 위 의 &lt;code&gt;polygon_tbl&lt;/code&gt; 예제 에서 이런 일이 발생했습니다 .)</target>
        </trans-unit>
        <trans-unit id="c45ab7ae167daed27196aada1b7abcf732fdbfc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXTENDED&lt;/code&gt; allows both compression and out-of-line storage. This is the default for most TOAST-able data types. Compression will be attempted first, then out-of-line storage if the row is still too big.</source>
          <target state="translated">&lt;code&gt;EXTENDED&lt;/code&gt; 는 압축 및 오프라인 저장을 모두 허용합니다. 대부분의 TOAST 가능 데이터 유형에 대한 기본값입니다. 압축이 먼저 시도 된 다음 행이 여전히 너무 큰 경우 외부 저장 영역 스토리지가 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="7b0ab4b64d158746597bb87bad93c1d1ba49c44d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXTERNAL&lt;/code&gt; allows out-of-line storage but not compression. Use of &lt;code&gt;EXTERNAL&lt;/code&gt; will make substring operations on wide &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;bytea&lt;/code&gt; columns faster (at the penalty of increased storage space) because these operations are optimized to fetch only the required parts of the out-of-line value when it is not compressed.</source>
          <target state="translated">&lt;code&gt;EXTERNAL&lt;/code&gt; 은 외부 저장을 허용하지만 압축은 허용하지 않습니다. &lt;code&gt;EXTERNAL&lt;/code&gt; 을 사용하면 넓은 &lt;code&gt;text&lt;/code&gt; 및 &lt;code&gt;bytea&lt;/code&gt; 열에 대한 서브 스트링 조작이 더 빨라집니다 (확장 된 저장 공간의 대가로 ), 이러한 조작은 압축되지 않을 때 라인 외부 값의 필요한 부분 만 페치하도록 최적화되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="6527eb76d07b576150615222fcfe1a0e4e9c4d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extension&lt;/code&gt; Wait Event</source>
          <target state="translated">&lt;code&gt;Extension&lt;/code&gt; 대기 이벤트</target>
        </trans-unit>
        <trans-unit id="cdc4240ac6317b2c9a11ccfa038ab940f6604e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extension&lt;/code&gt;: The server process is waiting for activity in an extension module. This category is useful for modules to track custom waiting points.</source>
          <target state="translated">&lt;code&gt;Extension&lt;/code&gt; : 서버 프로세스가 확장 모듈에서 활동을 기다리고 있습니다. 이 범주는 모듈이 사용자 지정 대기 지점을 추적하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b59f6e675b60ea443c9dee54e90cd63b96bd39ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FETCH&lt;/code&gt; retrieves rows using a previously-created cursor.</source>
          <target state="translated">&lt;code&gt;FETCH&lt;/code&gt; 는 이전에 작성된 커서를 사용하여 행을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ec6cc00ef469b83653e0785a8e3b9e7baf528e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FINALFUNC_MODIFY&lt;/code&gt; = { &lt;code&gt;READ_ONLY&lt;/code&gt; | &lt;code&gt;SHAREABLE&lt;/code&gt; | &lt;code&gt;READ_WRITE&lt;/code&gt; }</source>
          <target state="translated">&lt;code&gt;FINALFUNC_MODIFY&lt;/code&gt; = { &lt;code&gt;READ_ONLY&lt;/code&gt; | &lt;code&gt;SHAREABLE&lt;/code&gt; | &lt;code&gt;READ_WRITE&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="758ba691d972330c0756d807df689db284c18f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIRST&lt;/code&gt; and &lt;code&gt;ANY&lt;/code&gt; are case-insensitive. If these keywords are used as the name of a standby server, its &lt;code&gt;standby_name&lt;/code&gt; must be double-quoted.</source>
          <target state="translated">&lt;code&gt;FIRST&lt;/code&gt; 와 &lt;code&gt;ANY&lt;/code&gt; 는 대소 문자를 구분하지 않습니다. 이러한 키워드를 대기 서버의 이름으로 사용하는 경우 &lt;code&gt;standby_name&lt;/code&gt; 을 큰 따옴표로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="6abba114fa54904c750ddf9d5def91faedeb17cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FM&lt;/code&gt; prefix</source>
          <target state="translated">&lt;code&gt;FM&lt;/code&gt; 접두사</target>
        </trans-unit>
        <trans-unit id="6432d54f800779365fbcdc755b09ca926e7adea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FM&lt;/code&gt; suppresses leading zeroes and trailing blanks that would otherwise be added to make the output of a pattern be fixed-width. In PostgreSQL, &lt;code&gt;FM&lt;/code&gt; modifies only the next specification, while in Oracle &lt;code&gt;FM&lt;/code&gt; affects all subsequent specifications, and repeated &lt;code&gt;FM&lt;/code&gt; modifiers toggle fill mode on and off.</source>
          <target state="translated">&lt;code&gt;FM&lt;/code&gt; 은 패턴의 출력을 고정 폭으로 만들기 위해 추가되는 선행 0과 후행 공백을 억제합니다. PostgreSQL에서 &lt;code&gt;FM&lt;/code&gt; 은 다음 사양 만 수정하고 Oracle &lt;code&gt;FM&lt;/code&gt; 은 모든 후속 사양에 영향을 미치며 반복 &lt;code&gt;FM&lt;/code&gt; 수정자는 채우기 모드를 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="87975a7bb83ba9d9240b282b9dbae3c7c07868ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOR EACH ROW&lt;/code&gt;&lt;code&gt;FOR EACH STATEMENT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FOR EACH ROW&lt;/code&gt; &lt;code&gt;FOR EACH STATEMENT&lt;/code&gt; 각 행</target>
        </trans-unit>
        <trans-unit id="79ede29d61f7f2c5791165059cfe3c956a62fc3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOR NO KEY UPDATE&lt;/code&gt;, &lt;code&gt;FOR UPDATE&lt;/code&gt;, &lt;code&gt;FOR SHARE&lt;/code&gt;, &lt;code&gt;FOR KEY SHARE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FOR NO KEY UPDATE&lt;/code&gt; , &lt;code&gt;FOR UPDATE&lt;/code&gt; , &lt;code&gt;FOR SHARE&lt;/code&gt; , &lt;code&gt;FOR KEY SHARE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5486931ffedb6b44117d0b657cd9e299fbc48dc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOR UPDATE&lt;/code&gt; causes the rows retrieved by the &lt;code&gt;SELECT&lt;/code&gt; statement to be locked as though for update. This prevents them from being locked, modified or deleted by other transactions until the current transaction ends. That is, other transactions that attempt &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt;, &lt;code&gt;SELECT FOR NO KEY UPDATE&lt;/code&gt;, &lt;code&gt;SELECT FOR SHARE&lt;/code&gt; or &lt;code&gt;SELECT FOR KEY SHARE&lt;/code&gt; of these rows will be blocked until the current transaction ends; conversely, &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt; will wait for a concurrent transaction that has run any of those commands on the same row, and will then lock and return the updated row (or no row, if the row was deleted). Within a &lt;code&gt;REPEATABLE READ&lt;/code&gt; or &lt;code&gt;SERIALIZABLE&lt;/code&gt; transaction, however, an error will be thrown if a row to be locked has changed since the transaction started. For further discussion see &lt;a href=&quot;applevel-consistency&quot;&gt;Section 13.4&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;FOR UPDATE&lt;/code&gt; 는 &lt;code&gt;SELECT&lt;/code&gt; 문에 의해 검색된 행 이 갱신되는 것처럼 잠 깁니다. 이렇게하면 현재 트랜잭션이 끝날 때까지 다른 트랜잭션에 의해 잠금, 수정 또는 삭제되지 않습니다. 즉, 이러한 행의 &lt;code&gt;UPDATE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt; , &lt;code&gt;SELECT FOR NO KEY UPDATE&lt;/code&gt; , &lt;code&gt;SELECT FOR SHARE&lt;/code&gt; 또는 &lt;code&gt;SELECT FOR KEY SHARE&lt;/code&gt; 를 시도하는 다른 트랜잭션 은 현재 트랜잭션이 끝날 때까지 차단됩니다. 반대로, &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt; 동일한 행에서 해당 명령을 실행 한 동시 트랜잭션을 기다린 다음 업데이트 된 행을 잠그고 반환합니다 (또는 행이 삭제 된 경우 행 없음). 그러나 &lt;code&gt;REPEATABLE READ&lt;/code&gt; 또는 &lt;code&gt;SERIALIZABLE&lt;/code&gt; 트랜잭션 내 에서 트랜잭션이 시작된 후 잠길 행이 변경되면 오류가 발생합니다. 추가 논의는 &lt;a href=&quot;applevel-consistency&quot;&gt;13.4 절을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ccf8f52c0c47bd7f474491c354814daa66a491d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOR UPDATE&lt;/code&gt;, &lt;code&gt;FOR NO KEY UPDATE&lt;/code&gt;, &lt;code&gt;FOR SHARE&lt;/code&gt; and &lt;code&gt;FOR KEY SHARE&lt;/code&gt; are &lt;em&gt;locking clauses&lt;/em&gt;; they affect how &lt;code&gt;SELECT&lt;/code&gt; locks rows as they are obtained from the table.</source>
          <target state="translated">&lt;code&gt;FOR UPDATE&lt;/code&gt; , &lt;code&gt;FOR NO KEY UPDATE&lt;/code&gt; , &lt;code&gt;FOR SHARE&lt;/code&gt; 및 &lt;code&gt;FOR KEY SHARE&lt;/code&gt; 는 &lt;em&gt;잠금 절입니다&lt;/em&gt; . 이들은 테이블에서 가져올 때 &lt;code&gt;SELECT&lt;/code&gt; 가 행을 잠그는 방법에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="ef0c3d4fa4679ce04eeb377236f998962b1499e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FORCE_NULL&lt;/code&gt; and &lt;code&gt;FORCE_NOT_NULL&lt;/code&gt; can be used simultaneously on the same column. This results in converting quoted null strings to null values and unquoted null strings to empty strings.</source>
          <target state="translated">&lt;code&gt;FORCE_NULL&lt;/code&gt; 동일한 열에서 FORCE_NULL 및 &lt;code&gt;FORCE_NOT_NULL&lt;/code&gt; 을 동시에 사용할 수 있습니다. 따라서 따옴표로 묶인 null 문자열을 null 값으로, 따옴표가없는 null 문자열을 빈 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4bb5bef29b191685b966745ceb53ea5f0d4bb218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FROM T1 CROSS JOIN T2&lt;/code&gt; is equivalent to &lt;code&gt;FROM T1 INNER JOIN T2 ON TRUE&lt;/code&gt; (see below). It is also equivalent to &lt;code&gt;FROM T1, T2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FROM T1 CROSS JOIN T2&lt;/code&gt; 는 &lt;code&gt;FROM T1 INNER JOIN T2 ON TRUE&lt;/code&gt; 와 같습니다 (아래 참조). &lt;code&gt;FROM T1, T2&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4a906b0aa208019296868f21bf3a9d55bbfddbe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FROM table1&lt;/code&gt; is a simple kind of table expression: it reads just one table. In general, table expressions can be complex constructs of base tables, joins, and subqueries. But you can also omit the table expression entirely and use the &lt;code&gt;SELECT&lt;/code&gt; command as a calculator:</source>
          <target state="translated">&lt;code&gt;FROM table1&lt;/code&gt; 은 단순한 종류의 테이블 표현식입니다. 하나의 테이블 만 읽습니다. 일반적으로 테이블 표현식은 기본 테이블, 조인 및 서브 쿼리의 복잡한 구성 일 수 있습니다. 그러나 테이블 표현식을 완전히 생략하고 &lt;code&gt;SELECT&lt;/code&gt; 명령을 계산기로 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65c0f727c63c4bd37b41bcac73c9174515b07ebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FROM&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; 절</target>
        </trans-unit>
        <trans-unit id="592846205aaa49b3f0dac1e58fb1df7310c6e28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FROM&lt;/code&gt;&lt;code&gt;old_version&lt;/code&gt; must be specified when, and only when, you are attempting to install an extension that replaces an &amp;ldquo;old style&amp;rdquo; module that is just a collection of objects not packaged into an extension. This option causes &lt;code&gt;CREATE EXTENSION&lt;/code&gt; to run an alternative installation script that absorbs the existing objects into the extension, instead of creating new objects. Be careful that &lt;code&gt;SCHEMA&lt;/code&gt; specifies the schema containing these pre-existing objects.</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; &lt;code&gt;old_version&lt;/code&gt; 은 확장으로 패키지되지 않은 개체의 모음 인 &quot;이전 스타일&quot;모듈을 대체하는 확장을 설치하려고 할 때만 지정해야합니다. 이 옵션을 사용하면 &lt;code&gt;CREATE EXTENSION&lt;/code&gt; 이 새 오브젝트를 작성하는 대신 기존 오브젝트를 확장으로 흡수하는 대체 설치 스크립트를 실행합니다. 것을주의 &lt;code&gt;SCHEMA&lt;/code&gt; 는 이러한 기존의 객체를 포함하는 스키마를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cf65952404f5b5c27c570a3a65bdca12201176e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FULL OUTER JOIN&lt;/code&gt; returns all the joined rows, plus one row for each unmatched left-hand row (extended with nulls on the right), plus one row for each unmatched right-hand row (extended with nulls on the left).</source>
          <target state="translated">&lt;code&gt;FULL OUTER JOIN&lt;/code&gt; 은 조인 된 모든 행과 일치하지 않는 각 왼쪽 행에 대한 하나의 행 (오른쪽에 널로 확장 됨)과 일치하지 않는 각 오른쪽 행에 대한 하나의 행 (왼쪽에 널로 확장 됨)을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1af288b269956491632fbb1ed507723628c2352a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FUNCTION&lt;/code&gt; or &lt;code&gt;PROCEDURE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FUNCTION&lt;/code&gt; 또는 &lt;code&gt;PROCEDURE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ce6e10cc24d6e8236271b43c8af16715bc348b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FUNCTION&lt;/code&gt;, &lt;code&gt;PROCEDURE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FUNCTION&lt;/code&gt; , &lt;code&gt;PROCEDURE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d85bfbd38a815be5a782bdb1bdc7c39a8f38fb8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FX&lt;/code&gt; prefix</source>
          <target state="translated">&lt;code&gt;FX&lt;/code&gt; 접두사</target>
        </trans-unit>
        <trans-unit id="242a29859a197806edbbaaa5f5141b642ec77006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FragmentDelimiter&lt;/code&gt; (string): When more than one fragment is displayed, the fragments will be separated by this string. The default is &amp;ldquo; &lt;code&gt;...&lt;/code&gt; &amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;FragmentDelimiter&lt;/code&gt; (문자열) : 둘 이상의 단편이 표시 될 때 단편은이 문자열로 구분됩니다. 기본값은&amp;ldquo; &lt;code&gt;...&lt;/code&gt; &amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="14057974db2bde7ad3acec08bfb5a407a0d7cef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FragmentDelimiter&lt;/code&gt;: When more than one fragment is displayed, the fragments will be separated by this string.</source>
          <target state="translated">&lt;code&gt;FragmentDelimiter&lt;/code&gt; : 둘 이상의 조각이 표시되면 조각이이 문자열로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="134e0bf40e93b886670d8beb186208eb68da361b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GLOBAL&lt;/code&gt; or &lt;code&gt;LOCAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;GLOBAL&lt;/code&gt; 또는 &lt;code&gt;LOCAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e845323bb5b67740b10c0784ea2f24c0c23aef98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GRANT&lt;/code&gt; and &lt;code&gt;REVOKE&lt;/code&gt; can also be done by a role that is not the owner of the affected object, but is a member of the role that owns the object, or is a member of a role that holds privileges &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; on the object. In this case the privileges will be recorded as having been granted by the role that actually owns the object or holds the privileges &lt;code&gt;WITH GRANT OPTION&lt;/code&gt;. For example, if table &lt;code&gt;t1&lt;/code&gt; is owned by role &lt;code&gt;g1&lt;/code&gt;, of which role &lt;code&gt;u1&lt;/code&gt; is a member, then &lt;code&gt;u1&lt;/code&gt; can grant privileges on &lt;code&gt;t1&lt;/code&gt; to &lt;code&gt;u2&lt;/code&gt;, but those privileges will appear to have been granted directly by &lt;code&gt;g1&lt;/code&gt;. Any other member of role &lt;code&gt;g1&lt;/code&gt; could revoke them later.</source>
          <target state="translated">&lt;code&gt;GRANT&lt;/code&gt; 및 &lt;code&gt;REVOKE&lt;/code&gt; 는 영향을받는 개체의 소유자는 아니지만 개체를 ​​소유 한 역할의 구성원이거나 개체에 대해 &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; 권한을 가진 역할의 구성원 인 역할에 의해 수행 될 수도 있습니다 . 이 경우 특권은 실제로 오브젝트를 소유하거나 &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; 특권을 보유한 역할에 의해 부여 된 것으로 기록됩니다 . 테이블 예를 들어, &lt;code&gt;t1&lt;/code&gt; 역할에 의해 소유 &lt;code&gt;g1&lt;/code&gt; 역할 그 중, &lt;code&gt;u1&lt;/code&gt; 구성원 인 다음 &lt;code&gt;u1&lt;/code&gt; 에 권한을 부여 할 수 &lt;code&gt;t1&lt;/code&gt; 에 &lt;code&gt;u2&lt;/code&gt; , 그러나 그 권한 직접 부여 된 것으로 나타납니다 &lt;code&gt;g1&lt;/code&gt; . &lt;code&gt;g1&lt;/code&gt; 역할의 다른 구성원은 나중에이를 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1807e9be41f80e18f1469fbae828b7edda056f21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GROUP BY&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;GROUP BY&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="0f2e10adaf4769ad26a640ccf628af10683298cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GROUP BY&lt;/code&gt; will condense into a single row all selected rows that share the same values for the grouped expressions. An &lt;code&gt;expression&lt;/code&gt; used inside a &lt;code&gt;grouping_element&lt;/code&gt; can be an input column name, or the name or ordinal number of an output column (&lt;code&gt;SELECT&lt;/code&gt; list item), or an arbitrary expression formed from input-column values. In case of ambiguity, a &lt;code&gt;GROUP BY&lt;/code&gt; name will be interpreted as an input-column name rather than an output column name.</source>
          <target state="translated">&lt;code&gt;GROUP BY&lt;/code&gt; 는 그룹화 된 표현식에 대해 동일한 값을 공유하는 선택된 모든 행을 단일 행으로 압축합니다. &lt;code&gt;grouping_element&lt;/code&gt; 내에서 사용 되는 &lt;code&gt;expression&lt;/code&gt; 은 입력 컬럼 이름 또는 출력 컬럼의 이름 또는 서수 ( &lt;code&gt;SELECT&lt;/code&gt; 목록 항목) 또는 입력 컬럼 값으로 형성된 임의의 표현식 일 수 있습니다. 모호한 경우, &lt;code&gt;GROUP BY&lt;/code&gt; 이름은 출력 열 이름이 아닌 입력 열 이름으로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="3f3a76df93dbf0ae6492b5fed42561c784879169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GenericXLogFinish()&lt;/code&gt; takes care of marking buffers dirty and setting their LSNs. You do not need to do this explicitly.</source>
          <target state="translated">&lt;code&gt;GenericXLogFinish()&lt;/code&gt; 는 버퍼를 더티로 표시하고 LSN을 설정합니다. 이를 명시 적으로 수행 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="56af591aa491b240a7060836e76a7cc8771c10c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GenericXLogFinish(state)&lt;/code&gt; &amp;mdash; apply the changes to the buffers and emit the generic WAL record.</source>
          <target state="translated">&lt;code&gt;GenericXLogFinish(state)&lt;/code&gt; &amp;mdash; 변경 사항을 버퍼에 적용하고 일반 WAL 레코드를 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="b406147749640129b23605e4b1a61232c15eeaf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HANDLER&lt;/code&gt;&lt;code&gt;call_handler&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HANDLER&lt;/code&gt;&lt;code&gt;call_handler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="957551a09ab9209e359a4dbc5671ab3f92e0a2ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HAVING&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;HAVING&lt;/code&gt; 절</target>
        </trans-unit>
        <trans-unit id="0994a39a8457a965783542ea92333d2dc7ed9531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HAVING&lt;/code&gt; eliminates group rows that do not satisfy the condition. &lt;code&gt;HAVING&lt;/code&gt; is different from &lt;code&gt;WHERE&lt;/code&gt;: &lt;code&gt;WHERE&lt;/code&gt; filters individual rows before the application of &lt;code&gt;GROUP BY&lt;/code&gt;, while &lt;code&gt;HAVING&lt;/code&gt; filters group rows created by &lt;code&gt;GROUP BY&lt;/code&gt;. Each column referenced in &lt;code&gt;condition&lt;/code&gt; must unambiguously reference a grouping column, unless the reference appears within an aggregate function or the ungrouped column is functionally dependent on the grouping columns.</source>
          <target state="translated">&lt;code&gt;HAVING&lt;/code&gt; 은 조건을 만족하지 않는 그룹 행을 제거합니다. &lt;code&gt;HAVING&lt;/code&gt; 은 &lt;code&gt;WHERE&lt;/code&gt; 와 다릅니다 . &lt;code&gt;WHERE&lt;/code&gt; 는 &lt;code&gt;GROUP BY&lt;/code&gt; 를 적용하기 전에 개별 행을 필터링 하지만 &lt;code&gt;HAVING&lt;/code&gt; 은 &lt;code&gt;GROUP BY&lt;/code&gt; 로 작성된 그룹 행을 필터링 합니다. 참조가 집계 함수 내에 표시되거나 그룹화되지 않은 열이 기능적으로 그룹화 열에 종속되지 않는 한 &lt;code&gt;condition&lt;/code&gt; 에서 참조 된 각 열 은 그룹화 열을 명확하게 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="ba3bc425c136873ba71cdec0cf133df1c60ba905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HighlightAll&lt;/code&gt; (boolean): if &lt;code&gt;true&lt;/code&gt; the whole document will be used as the headline, ignoring the preceding three parameters. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HighlightAll&lt;/code&gt; (부울) : &lt;code&gt;true&lt;/code&gt; 이면 앞의 세 매개 변수를 무시하고 전체 문서가 헤드 라인으로 사용됩니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0b1dcd648d3368512a614d9d1db9dcccee995e47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HighlightAll&lt;/code&gt;: Boolean flag; if &lt;code&gt;true&lt;/code&gt; the whole document will be used as the headline, ignoring the preceding three parameters.</source>
          <target state="translated">&lt;code&gt;HighlightAll&lt;/code&gt; : 부울 플래그; 경우 &lt;code&gt;true&lt;/code&gt; 전체 문서는 위의 세 가지 매개 변수를 무시하고, 헤드 라인으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="09ec77f57bb7a3a9c3738f5338ace6ad0a77481c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; treats the argument value as an SQL identifier, double-quoting it if necessary. It is an error for the value to be null (equivalent to &lt;code&gt;quote_ident&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; 필요한 경우를 두 번 인용, SQL ID 순으로 인수 값을 처리합니다. 값이 null ( &lt;code&gt;quote_ident&lt;/code&gt; 와 동일) 인 것은 오류입니다 .</target>
        </trans-unit>
        <trans-unit id="cba1b0c97327d44866237c5c7bd29f9a710b995e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMMUTABLE&lt;/code&gt; indicates that the function cannot modify the database and always returns the same result when given the same argument values; that is, it does not do database lookups or otherwise use information not directly present in its argument list. If this option is given, any call of the function with all-constant arguments can be immediately replaced with the function value.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; 은 함수가 데이터베이스를 수정할 수 없으며 동일한 인수 값이 제공 될 때 항상 동일한 결과를 리턴 함을 나타냅니다. 즉, 데이터베이스 조회를 수행하지 않거나 인수 목록에 직접 존재하지 않는 정보를 사용하지 않습니다. 이 옵션을 지정하면 모든 상수 인수를 가진 함수 호출을 즉시 함수 값으로 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae4096de7bbb5ab8162d55b92d76059ff2f3ad37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;code&gt;STABLE&lt;/code&gt;&lt;code&gt;VOLATILE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;code&gt;STABLE&lt;/code&gt;&lt;code&gt;VOLATILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0eb18c04380b78a13eaddff0409c6d5bcf80c3c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMPORT FOREIGN SCHEMA&lt;/code&gt; creates foreign tables that represent tables existing on a foreign server. The new foreign tables will be owned by the user issuing the command and are created with the correct column definitions and options to match the remote tables.</source>
          <target state="translated">&lt;code&gt;IMPORT FOREIGN SCHEMA&lt;/code&gt; 는 외부 서버에 존재하는 테이블을 나타내는 외부 테이블을 작성합니다. 새 외부 테이블은 명령을 실행하는 사용자가 소유하며 원격 테이블과 일치하는 올바른 열 정의 및 옵션으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="f86ea62e008a9fd11a3ff788a7e5c5e9ae42c07e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IN GROUP&lt;/code&gt; is an obsolete spelling of &lt;code&gt;IN ROLE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IN GROUP&lt;/code&gt; 은 &lt;code&gt;IN ROLE&lt;/code&gt; 의 오래된 철자입니다 .</target>
        </trans-unit>
        <trans-unit id="ce692e328955d4b2c2834350e0fa997c5d354f32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IN GROUP&lt;/code&gt;&lt;code&gt;role_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IN GROUP&lt;/code&gt; &lt;code&gt;role_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bf088b21464524a27f8348b04a677437e127213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IN ROLE&lt;/code&gt;&lt;code&gt;role_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IN ROLE&lt;/code&gt; &lt;code&gt;role_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f345e4cbd4974eddd3087cdbd8de85a4e2f17c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INCLUDE&lt;/code&gt; indexes can never use deduplication.</source>
          <target state="translated">&lt;code&gt;INCLUDE&lt;/code&gt; 인덱스는 중복 제거를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cac114235ab24ee5f596cd2bb4410f050b49e1fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INCLUDING ALL&lt;/code&gt; is an abbreviated form selecting all the available individual options. (It could be useful to write individual &lt;code&gt;EXCLUDING&lt;/code&gt; clauses after &lt;code&gt;INCLUDING ALL&lt;/code&gt; to select all but some specific options.)</source>
          <target state="translated">&lt;code&gt;INCLUDING ALL&lt;/code&gt; 은 사용 가능한 모든 개별 옵션을 선택하는 약식 양식입니다. &lt;code&gt;INCLUDING ALL&lt;/code&gt; 후에 개별 &lt;code&gt;EXCLUDING&lt;/code&gt; 절 을 작성 하여 일부 특정 옵션을 제외한 모든 옵션을 선택하는 것이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ee453eca6e27ec4663035b949b4548e0750a6ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt; level messages are always sent to the client.</source>
          <target state="translated">&lt;code&gt;INFO&lt;/code&gt; 레벨 메시지는 항상 클라이언트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="d1233879be44f3a3bb7b7d19b46d63bbb9fd1810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INHERIT&lt;/code&gt;&lt;code&gt;NOINHERIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INHERIT&lt;/code&gt;&lt;code&gt;NOINHERIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="194f347410fbeca0973dee3833035542d024d8f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INITIALLY IMMEDIATE&lt;/code&gt;&lt;code&gt;INITIALLY DEFERRED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INITIALLY IMMEDIATE&lt;/code&gt; &lt;code&gt;INITIALLY DEFERRED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b25d4741895b68c2832b7407f793151623c2cf23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INLINE&lt;/code&gt;&lt;code&gt;inline_handler&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INLINE&lt;/code&gt;&lt;code&gt;inline_handler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bff9865f03ccdb0193e7962563fcc7c8a825056a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; conforms to the SQL standard, except that the &lt;code&gt;RETURNING&lt;/code&gt; clause is a PostgreSQL extension, as is the ability to use &lt;code&gt;WITH&lt;/code&gt; with &lt;code&gt;INSERT&lt;/code&gt;, and the ability to specify an alternative action with &lt;code&gt;ON CONFLICT&lt;/code&gt;. Also, the case in which a column name list is omitted, but not all the columns are filled from the &lt;code&gt;VALUES&lt;/code&gt; clause or &lt;code&gt;query&lt;/code&gt;, is disallowed by the standard.</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; 는 &lt;code&gt;WITH&lt;/code&gt; &lt;code&gt;INSERT&lt;/code&gt; 와 함께 사용 하고 &lt;code&gt;ON CONFLICT&lt;/code&gt; 로 대체 조치를 지정하는 기능과 같이 &lt;code&gt;RETURNING&lt;/code&gt; 절이 PostgreSQL 확장 이라는 점을 제외하고는 SQL 표준을 준수합니다 . 또한 열 이름 목록이 생략되었지만 모든 열이 &lt;code&gt;VALUES&lt;/code&gt; 절 또는 &lt;code&gt;query&lt;/code&gt; 에서 채워지는 것은 아닌 경우 표준에서 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b4241010e03ab8189cb933b6b046f9980c0becd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; inserts new rows into a table. One can insert one or more rows specified by value expressions, or zero or more rows resulting from a query.</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; 는 새로운 행을 테이블에 삽입합니다. 값 표현식으로 지정된 하나 이상의 행을 삽입하거나 쿼리에서 생성 된 0 개 이상의 행을 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fda26d23a4dd7d306cafa212d39b7a719c4bcb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; statements with &lt;code&gt;ON CONFLICT&lt;/code&gt; clauses are unlikely to work as expected, as the &lt;code&gt;ON CONFLICT&lt;/code&gt; action is only taken in case of unique violations on the specified target relation, not its child relations.</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; &lt;code&gt;ON CONFLICT&lt;/code&gt; 절이있는 INSERT 문 은 예상 한대로 작동하지 않습니다. &lt;code&gt;ON CONFLICT&lt;/code&gt; 조치는 하위 관계가 아닌 지정된 대상 관계에 대한 고유 한 위반의 경우에만 수행되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="61712588e1312541bfd1e0a1fddf783e53b1d6a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; with an &lt;code&gt;ON CONFLICT DO NOTHING&lt;/code&gt; clause may have insertion not proceed for a row due to the outcome of another transaction whose effects are not visible to the &lt;code&gt;INSERT&lt;/code&gt; snapshot. Again, this is only the case in Read Committed mode.</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; &lt;code&gt;ON CONFLICT DO NOTHING&lt;/code&gt; 절이 있는 INSERT 절은 영향이 &lt;code&gt;INSERT&lt;/code&gt; 스냅 샷에 표시되지 않는 다른 트랜잭션의 결과로 인해 행에 대해 삽입이 진행되지 않을 수 있습니다 . 다시 한번 이것은 커밋 된 읽기 모드 인 경우에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="725e1e458c74bc66a9a731a5ac068b88a86cec8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; with an &lt;code&gt;ON CONFLICT DO UPDATE&lt;/code&gt; clause behaves similarly. In Read Committed mode, each row proposed for insertion will either insert or update. Unless there are unrelated errors, one of those two outcomes is guaranteed. If a conflict originates in another transaction whose effects are not yet visible to the &lt;code&gt;INSERT&lt;/code&gt; , the &lt;code&gt;UPDATE&lt;/code&gt; clause will affect that row, even though possibly &lt;em&gt;no&lt;/em&gt; version of that row is conventionally visible to the command.</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; &lt;code&gt;ON CONFLICT DO UPDATE&lt;/code&gt; 절이 있는 INSERT 도 비슷하게 동작합니다. 커밋 된 읽기 모드에서 삽입을 제안 된 각 행은 삽입 또는 업데이트됩니다. 관련 오류가없는 한이 두 결과 중 하나가 보장됩니다. 그 효과를 아직 볼 수없는 또 다른 거래에서 충돌 유래 경우 &lt;code&gt;INSERT&lt;/code&gt; 가 의 &lt;code&gt;UPDATE&lt;/code&gt; 절은 해당 행, 비록 가능성이 영향을 미칠 것 &lt;em&gt;없이&lt;/em&gt; 그 행의 버전을 명령에 종래 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cc80efb693bcf9a6f5ffe15edffa2ff14d150f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; with an &lt;code&gt;ON CONFLICT DO UPDATE&lt;/code&gt; clause is a &amp;ldquo;deterministic&amp;rdquo; statement. This means that the command will not be allowed to affect any single existing row more than once; a cardinality violation error will be raised when this situation arises. Rows proposed for insertion should not duplicate each other in terms of attributes constrained by an arbiter index or constraint.</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; &lt;code&gt;ON CONFLICT DO UPDATE&lt;/code&gt; 절이 있는 INSERT 는 &quot;결정적&quot;문입니다. 이는 명령이 기존의 단일 행에 두 번 이상 영향을 줄 수 없음을 의미합니다. 이 상황이 발생하면 카디널리티 위반 오류가 발생합니다. 삽입을 위해 제안 된 행은 중재자 색인 또는 제한 조건에 의해 제한되는 속성의 측면에서 서로 중복되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="4c2df84a41e3025343ed310a12c42f2d66f94ac5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt;/&lt;code&gt;UPDATE&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt;/&lt;code&gt;UPDATE&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b1686e398e05af406f8487640cc540d1c92a649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTEAD OF UPDATE&lt;/code&gt; events do not allow a list of columns. A column list cannot be specified when requesting transition relations, either.</source>
          <target state="translated">&lt;code&gt;INSTEAD OF UPDATE&lt;/code&gt; 이벤트는 열 목록을 허용하지 않습니다. 전이 관계를 요청할 때 열 목록도 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7eea0290ddbc43f11be0dccd94c884680025740a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTEAD OF&lt;/code&gt; triggers do not support &lt;code&gt;WHEN&lt;/code&gt; conditions.</source>
          <target state="translated">&lt;code&gt;INSTEAD OF&lt;/code&gt; 트리거는 &lt;code&gt;WHEN&lt;/code&gt; 조건을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="198610004b48316ffd420985cbade8adce7ab588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTEAD&lt;/code&gt; indicates that the commands should be executed &lt;em&gt;instead of&lt;/em&gt; the original command.</source>
          <target state="translated">&lt;code&gt;INSTEAD&lt;/code&gt; 는 원래 명령 &lt;em&gt;대신&lt;/em&gt; 명령을 실행해야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1dfcfa7c12145b8f7463f69a4d5af919c04324ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INTERSECT&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;INTERSECT&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="15701d75a203b801657eda764b30487a85406d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INTERSECT&lt;/code&gt; and &lt;code&gt;EXCEPT&lt;/code&gt; operations are likewise resolved pairwise. However, the other constructs described in this section consider all of their inputs in one resolution step.</source>
          <target state="translated">&lt;code&gt;INTERSECT&lt;/code&gt; 및 &lt;code&gt;EXCEPT&lt;/code&gt; 연산도 마찬가지로 쌍으로 해결됩니다. 그러나이 섹션에서 설명하는 다른 구성은 하나의 해결 단계에서 모든 입력을 고려합니다.</target>
        </trans-unit>
        <trans-unit id="73cb09654841b56e2be1bb120149fcc61f426445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; Wait Event</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 대기 이벤트</target>
        </trans-unit>
        <trans-unit id="d90f8d1e9f5167bfc4fadb96b01288462b71b2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt;: The server process is waiting for a IO to complete. &lt;code&gt;wait_event&lt;/code&gt; will identify the specific wait point.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; : 서버 프로세스가 IO가 완료되기를 기다리고 있습니다. &lt;code&gt;wait_event&lt;/code&gt; 는 특정 대기 지점을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="9b321c4846b0db7e30a03ebbaafd337a03b15c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IP-address&lt;/code&gt;&lt;code&gt;IP-mask&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IP-address&lt;/code&gt;&lt;code&gt;IP-mask&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eebff6468494972cc59b6eeff7446bf21646c270" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IPC&lt;/code&gt; Wait Event</source>
          <target state="translated">&lt;code&gt;IPC&lt;/code&gt; 대기 이벤트</target>
        </trans-unit>
        <trans-unit id="e7f54f066010de7768a9a71b4524e48adfdfb50d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IPC&lt;/code&gt;: The server process is waiting for some activity from another process in the server. &lt;code&gt;wait_event&lt;/code&gt; will identify the specific wait point.</source>
          <target state="translated">&lt;code&gt;IPC&lt;/code&gt; : 서버 프로세스가 서버의 다른 프로세스에서 일부 활동을 기다리고 있습니다. &lt;code&gt;wait_event&lt;/code&gt; 는 특정 대기 지점을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="fa1e555c084aeb121b1e7349aeec6b15b218413b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IS TRUE&lt;/code&gt;, &lt;code&gt;IS FALSE&lt;/code&gt;, &lt;code&gt;IS NULL&lt;/code&gt;, &lt;code&gt;IS DISTINCT FROM&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;IS TRUE&lt;/code&gt; , &lt;code&gt;IS FALSE&lt;/code&gt; , &lt;code&gt;IS NULL&lt;/code&gt; , &lt;code&gt;IS DISTINCT FROM&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="81048a8ff9b57fe97e510be844739ada0a55bb56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IS&lt;/code&gt;&lt;code&gt;ISNULL&lt;/code&gt;&lt;code&gt;NOTNULL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IS&lt;/code&gt;&lt;code&gt;ISNULL&lt;/code&gt;&lt;code&gt;NOTNULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c4e68db7d5f2fab94aef4d3ced3f04291c50fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Infinity&lt;/code&gt;&lt;code&gt;-Infinity&lt;/code&gt;&lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Infinity&lt;/code&gt;&lt;code&gt;-Infinity&lt;/code&gt;&lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08023d008bf50c99464b47d86a20975527137627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntervalStyle&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;IntervalStyle&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fbc32eeea0206211c1f82a5f60b1cc7378846db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;J&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;J&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27ede47b33c90f670b318bdf94ff2abeb3992789" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JULIAN&lt;/code&gt;, &lt;code&gt;JD&lt;/code&gt;, &lt;code&gt;J&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JULIAN&lt;/code&gt; , &lt;code&gt;JD&lt;/code&gt; , &lt;code&gt;J&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0bf0fd79c82b05619cdf6f9f662a136bfd1a553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt; quotes the argument value as an SQL literal. A null value is displayed as the string &lt;code&gt;NULL&lt;/code&gt;, without quotes (equivalent to &lt;code&gt;quote_nullable&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; 은 인수 값을 SQL 리터럴로 인용합니다. 따옴표없이 null 값이 문자열 &lt;code&gt;NULL&lt;/code&gt; 로 표시됩니다 ( &lt;code&gt;quote_nullable&lt;/code&gt; 과 동일 ).</target>
        </trans-unit>
        <trans-unit id="3022365ee8b7e9c26b1bad5b782ad985371bbcdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LARGE OBJECT&lt;/code&gt;, &lt;code&gt;SEQUENCE&lt;/code&gt;, &lt;code&gt;TABLE&lt;/code&gt; (and table-like objects), table column</source>
          <target state="translated">&lt;code&gt;LARGE OBJECT&lt;/code&gt; , &lt;code&gt;SEQUENCE&lt;/code&gt; , &lt;code&gt;TABLE&lt;/code&gt; (및 테이블과 유사한 객체), 테이블 열</target>
        </trans-unit>
        <trans-unit id="0e8d0adb9a895982d567f8b0189cd6f30f64fc71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LARGE OBJECT&lt;/code&gt;, &lt;code&gt;SEQUENCE&lt;/code&gt;, &lt;code&gt;TABLE&lt;/code&gt;, table column</source>
          <target state="translated">&lt;code&gt;LARGE OBJECT&lt;/code&gt; , &lt;code&gt;SEQUENCE&lt;/code&gt; , &lt;code&gt;TABLE&lt;/code&gt; , 테이블 열</target>
        </trans-unit>
        <trans-unit id="bf856f9a215ef619baaeb7458db275db499d064c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LAST_ERROR_MESSAGE&lt;/code&gt;&lt;code&gt;LAST_ERROR_SQLSTATE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LAST_ERROR_MESSAGE&lt;/code&gt;&lt;code&gt;LAST_ERROR_SQLSTATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bbf224ed12ab57f597489315fb59a5d0b600e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LATERAL&lt;/code&gt; can also precede a function-call &lt;code&gt;FROM&lt;/code&gt; item, but in this case it is a noise word, because the function expression can refer to earlier &lt;code&gt;FROM&lt;/code&gt; items in any case.</source>
          <target state="translated">&lt;code&gt;LATERAL&lt;/code&gt; 은 함수 호출 &lt;code&gt;FROM&lt;/code&gt; 항목 보다 앞에 올 수 있지만,이 경우 함수 표현식은 모든 경우에 이전 &lt;code&gt;FROM&lt;/code&gt; 항목을 참조 할 수 있기 때문에 의미없는 단어 입니다.</target>
        </trans-unit>
        <trans-unit id="ad9141a96644be4864d063f925b1b40443b82ca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LATERAL&lt;/code&gt; is primarily useful when the cross-referenced column is necessary for computing the row(s) to be joined. A common application is providing an argument value for a set-returning function. For example, supposing that &lt;code&gt;vertices(polygon)&lt;/code&gt; returns the set of vertices of a polygon, we could identify close-together vertices of polygons stored in a table with:</source>
          <target state="translated">&lt;code&gt;LATERAL&lt;/code&gt; 은 주로 조인 될 행을 계산하기 위해 상호 참조 열이 필요할 때 유용합니다. 일반적인 응용 프로그램은 set-returning 함수에 인수 값을 제공합니다. 예를 들어 &lt;code&gt;vertices(polygon)&lt;/code&gt; 의 꼭짓점 집합을 반환 한다고 가정 하면 다음과 같이 테이블에 저장된 다각형의 꼭짓점을 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="402a7bf6efd81c79e96e054e21d86d9dc6ae6c9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LC_COLLATE&lt;/code&gt; for this collation object</source>
          <target state="translated">&lt;code&gt;LC_COLLATE&lt;/code&gt; 이 데이터 정렬 객체에 대한 LC_COLLATE</target>
        </trans-unit>
        <trans-unit id="069e95cf1ea6c73b572ce64a68bdae99760ea6ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LC_CTYPE&lt;/code&gt; for this collation object</source>
          <target state="translated">&lt;code&gt;LC_CTYPE&lt;/code&gt; 이 데이터 정렬 객체의 LC_CTYPE</target>
        </trans-unit>
        <trans-unit id="5bfa55b03c18457c143a3bd26d8dce5e8efec7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEAKPROOF&lt;/code&gt; indicates that the function has no side effects. It reveals no information about its arguments other than by its return value. For example, a function which throws an error message for some argument values but not others, or which includes the argument values in any error message, is not leakproof. This affects how the system executes queries against views created with the &lt;code&gt;security_barrier&lt;/code&gt; option or tables with row level security enabled. The system will enforce conditions from security policies and security barrier views before any user-supplied conditions from the query itself that contain non-leakproof functions, in order to prevent the inadvertent exposure of data. Functions and operators marked as leakproof are assumed to be trustworthy, and may be executed before conditions from security policies and security barrier views. In addition, functions which do not take arguments or which are not passed any arguments from the security barrier view or table do not have to be marked as leakproof to be executed before security conditions. See &lt;a href=&quot;sql-createview&quot;&gt;CREATE VIEW&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/docs/12/rules-privileges.html&quot;&gt;Section 40.5&lt;/a&gt;. This option can only be set by the superuser.</source>
          <target state="translated">&lt;code&gt;LEAKPROOF&lt;/code&gt; 는 기능에 부작용이 없음을 나타냅니다. 반환 값 이외의 인수에 대한 정보는 공개하지 않습니다. 예를 들어, 일부 인수 값에 대해서는 오류 메시지를 표시하지만 다른 인수 값에 대해서는 오류 메시지를 발생 시키거나 오류 메시지에 인수 값을 포함하는 함수는 누출 방지 기능이 없습니다. 이는 &lt;code&gt;security_barrier&lt;/code&gt; 로 작성된 뷰에 대해 시스템이 쿼리를 실행하는 방법에 영향을줍니다.행 레벨 보안이 사용 가능한 옵션 또는 테이블. 시스템은 실수로 데이터가 노출되는 것을 방지하기 위해 누수 방지 기능이 포함 된 쿼리 자체의 사용자 제공 조건보다 보안 정책 및 보안 장벽보기의 조건을 시행합니다. 누액 방지로 표시된 기능과 운영자는 신뢰할 수있는 것으로 간주되며 보안 정책 및 보안 장벽보기의 조건보다 먼저 실행될 수 있습니다. 또한 인수를받지 않거나 보안 장벽보기 또는 테이블에서 인수를 전달하지 않은 함수는 보안 조건 전에 실행하기 위해 누수 방지로 표시 할 필요가 없습니다. &lt;a href=&quot;sql-createview&quot;&gt;CREATE VIEW&lt;/a&gt; 및 &lt;a href=&quot;https://www.postgresql.org/docs/12/rules-privileges.html&quot;&gt;40.5 섹션을&lt;/a&gt; 참조하십시오 . 이 옵션은 수퍼 유저 만 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="920c370d0ca7d6bbd971aefae17e564f0cab099f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEAKPROOF&lt;/code&gt; indicates that the function has no side effects. It reveals no information about its arguments other than by its return value. For example, a function which throws an error message for some argument values but not others, or which includes the argument values in any error message, is not leakproof. This affects how the system executes queries against views created with the &lt;code&gt;security_barrier&lt;/code&gt; option or tables with row level security enabled. The system will enforce conditions from security policies and security barrier views before any user-supplied conditions from the query itself that contain non-leakproof functions, in order to prevent the inadvertent exposure of data. Functions and operators marked as leakproof are assumed to be trustworthy, and may be executed before conditions from security policies and security barrier views. In addition, functions which do not take arguments or which are not passed any arguments from the security barrier view or table do not have to be marked as leakproof to be executed before security conditions. See &lt;a href=&quot;sql-createview&quot;&gt;CREATE VIEW&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/docs/13/rules-privileges.html&quot;&gt;Section 40.5&lt;/a&gt;. This option can only be set by the superuser.</source>
          <target state="translated">&lt;code&gt;LEAKPROOF&lt;/code&gt; 는 함수에 부작용이 없음을 나타냅니다. 반환 값 외에는 인수에 대한 정보를 표시하지 않습니다. 예를 들어, 일부 인수 값에 대해 오류 메시지를 던지거나 다른 인수 값에 대해 오류 메시지를 표시하거나 오류 메시지에 인수 값을 포함하는 함수는 누출 방지 기능이 없습니다. 이는 시스템이 &lt;code&gt;security_barrier&lt;/code&gt; 로 생성 된 뷰에 대해 쿼리를 실행하는 방법에 영향을줍니다.행 수준 보안이 활성화 된 옵션 또는 테이블. 시스템은 데이터의 부주의 한 노출을 방지하기 위해 누수 방지 기능이 포함 된 쿼리 자체에서 사용자가 제공 한 조건보다 먼저 보안 정책 및 보안 장벽보기의 조건을 적용합니다. 누출 방지로 표시된 기능 및 운영자는 신뢰할 수있는 것으로 간주되며 보안 정책 및 보안 장벽보기의 조건보다 먼저 실행될 수 있습니다. 또한 인수를받지 않거나 보안 장벽 뷰 또는 테이블에서 인수를 전달하지 않은 함수는 보안 조건 전에 실행하기 위해 누수 방지로 표시 할 필요가 없습니다. &lt;a href=&quot;sql-createview&quot;&gt;CREATE VIEW&lt;/a&gt; 및 &lt;a href=&quot;https://www.postgresql.org/docs/13/rules-privileges.html&quot;&gt;Section 40.5를&lt;/a&gt; 참조하십시오 . 이 옵션은 수퍼 유저 만 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7fc1a65cef7d0dc221727d989336055ec017c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; returns all rows in the qualified Cartesian product (i.e., all combined rows that pass its join condition), plus one copy of each row in the left-hand table for which there was no right-hand row that passed the join condition. This left-hand row is extended to the full width of the joined table by inserting null values for the right-hand columns. Note that only the &lt;code&gt;JOIN&lt;/code&gt; clause's own condition is considered while deciding which rows have matches. Outer conditions are applied afterwards.</source>
          <target state="translated">&lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; 은 규정 된 직교 곱의 모든 행 (즉, 결합 조건을 통과하는 모든 결합 된 행)과 결합 조건을 통과 한 오른쪽 행이없는 왼쪽 테이블의 각 행의 사본 하나를 리턴합니다. . 이 왼쪽 행은 오른쪽 열에 null 값을 삽입하여 조인 된 테이블의 전체 너비로 확장됩니다. 단지 참고 &lt;code&gt;JOIN&lt;/code&gt; 행이 일치해야하는 결정하면서 절 자신의 상태가 고려된다. 이후에 외부 조건이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e02b3b9aabca34382f5e1adde13c1793b6387404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIKE&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;LIKE&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="5b41a837a37c5b8268c0522bcc0d8fa6658cd996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIKE&lt;/code&gt; pattern matching always covers the entire string. Therefore, if it's desired to match a sequence anywhere within a string, the pattern must start and end with a percent sign.</source>
          <target state="translated">&lt;code&gt;LIKE&lt;/code&gt; 패턴 일치는 항상 전체 문자열을 포함합니다. 따라서 문자열 내에서 시퀀스를 일치 시키려면 패턴이 퍼센트 기호로 시작하고 끝나야합니다.</target>
        </trans-unit>
        <trans-unit id="f97fce463b663cfed114750fbe597e422975ba83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIKE&lt;/code&gt; searches, being much simpler than the other two options, are safer to use with possibly-hostile pattern sources.</source>
          <target state="translated">&lt;code&gt;LIKE&lt;/code&gt; 검색은 다른 두 옵션보다 훨씬 간단하지만 적대적인 패턴 소스를 사용하는 것이 더 안전합니다.</target>
        </trans-unit>
        <trans-unit id="44a779a44a431a225f7a7c9d85fb7f1162131eca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIMIT&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;LIMIT&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="6256e266d99d14522bc0af23bb903fc0de252897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;OFFSET&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LIMIT&lt;/code&gt; 및 &lt;code&gt;OFFSET&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2db043d3ab573a74fdd47e519576262ebd91b836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;OFFSET&lt;/code&gt; allow you to retrieve just a portion of the rows that are generated by the rest of the query:</source>
          <target state="translated">&lt;code&gt;LIMIT&lt;/code&gt; 및 &lt;code&gt;OFFSET&lt;/code&gt; 을 사용하면 나머지 쿼리에서 생성 된 행의 일부만 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5653840df3e08aca29c7e9d9cb68d9fb889238fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LISTEN&lt;/code&gt; registers the current session as a listener on the notification channel named &lt;code&gt;channel&lt;/code&gt;. If the current session is already registered as a listener for this notification channel, nothing is done.</source>
          <target state="translated">&lt;code&gt;LISTEN&lt;/code&gt; 레지스터에게 알림 채널 이름에 리스너로서 현재 세션 &lt;code&gt;channel&lt;/code&gt; . 현재 세션이이 알림 채널의 리스너로 이미 등록 된 경우 아무 것도 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3b3e41f03caa3e2785ea13c4276b7e47ceea7176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LISTEN&lt;/code&gt; takes effect at transaction commit. If &lt;code&gt;LISTEN&lt;/code&gt; or &lt;code&gt;UNLISTEN&lt;/code&gt; is executed within a transaction that later rolls back, the set of notification channels being listened to is unchanged.</source>
          <target state="translated">&lt;code&gt;LISTEN&lt;/code&gt; 은 트랜잭션 커밋시 적용됩니다. 나중에 롤백하는 트랜잭션 내에서 &lt;code&gt;LISTEN&lt;/code&gt; 또는 &lt;code&gt;UNLISTEN&lt;/code&gt; 이 실행 되면 수신되는 알림 채널 세트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b73971cfc9fdce528271a3555597a1c8aee4b13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LISTEN&lt;/code&gt;, &lt;code&gt;NOTIFY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LISTEN&lt;/code&gt; , &lt;code&gt;NOTIFY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcf215a5c675dbca4b38c90d0445dfbad1bd3dec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOAD&lt;/code&gt; is a PostgreSQL extension.</source>
          <target state="translated">&lt;code&gt;LOAD&lt;/code&gt; 는 PostgreSQL 확장입니다.</target>
        </trans-unit>
        <trans-unit id="95f8c9bfb521ec22f3709c6bc0365ceb73829943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCAL&lt;/code&gt;&lt;code&gt;DEFAULT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOCAL&lt;/code&gt;&lt;code&gt;DEFAULT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7784cf855669dd06dec63b60ed8f584df4f5370a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK TABLE ... IN ACCESS SHARE MODE&lt;/code&gt; requires &lt;code&gt;SELECT&lt;/code&gt; privileges on the target table. &lt;code&gt;LOCK TABLE ... IN ROW EXCLUSIVE MODE&lt;/code&gt; requires &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, or &lt;code&gt;TRUNCATE&lt;/code&gt; privileges on the target table. All other forms of &lt;code&gt;LOCK&lt;/code&gt; require table-level &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, or &lt;code&gt;TRUNCATE&lt;/code&gt; privileges.</source>
          <target state="translated">&lt;code&gt;LOCK TABLE ... IN ACCESS SHARE MODE&lt;/code&gt; 에는 대상 테이블에 대한 &lt;code&gt;SELECT&lt;/code&gt; 특권이 필요 합니다. &lt;code&gt;LOCK TABLE ... IN ROW EXCLUSIVE MODE&lt;/code&gt; 필요 &lt;code&gt;INSERT&lt;/code&gt; 가 , &lt;code&gt;UPDATE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; 또는 &lt;code&gt;TRUNCATE&lt;/code&gt; 의 대상 테이블에 권한. 다른 모든 형태의 &lt;code&gt;LOCK&lt;/code&gt; 에는 테이블 레벨 &lt;code&gt;UPDATE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; 또는 &lt;code&gt;TRUNCATE&lt;/code&gt; 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e59eee6ed4889200aad2e11105878561b951d5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK TABLE&lt;/code&gt; is useless outside a transaction block: the lock would remain held only to the completion of the statement. Therefore PostgreSQL reports an error if &lt;code&gt;LOCK&lt;/code&gt; is used outside a transaction block. Use &lt;a href=&quot;sql-begin&quot;&gt;BEGIN&lt;/a&gt; and &lt;a href=&quot;sql-commit&quot;&gt;COMMIT&lt;/a&gt; (or &lt;a href=&quot;sql-rollback&quot;&gt;ROLLBACK&lt;/a&gt;) to define a transaction block.</source>
          <target state="translated">&lt;code&gt;LOCK TABLE&lt;/code&gt; 은 트랜잭션 블록 외부에서는 쓸모가 없습니다. 잠금은 명령문 완료시에만 유지됩니다. 따라서 PostgreSQL 은 &lt;code&gt;LOCK&lt;/code&gt; 이 트랜잭션 블록 외부에서 사용되는 경우 오류를보고합니다 . 사용은 &lt;a href=&quot;sql-begin&quot;&gt;BEGIN&lt;/a&gt; 및 &lt;a href=&quot;sql-commit&quot;&gt;COMMIT&lt;/a&gt; (또는 &lt;a href=&quot;sql-rollback&quot;&gt;ROLLBACK&lt;/a&gt; 트랜잭션 블록을 정의하기 위해).</target>
        </trans-unit>
        <trans-unit id="67988adabe3d16617a2a92328ddfb21d35b21654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK TABLE&lt;/code&gt; obtains a table-level lock, waiting if necessary for any conflicting locks to be released. If &lt;code&gt;NOWAIT&lt;/code&gt; is specified, &lt;code&gt;LOCK TABLE&lt;/code&gt; does not wait to acquire the desired lock: if it cannot be acquired immediately, the command is aborted and an error is emitted. Once obtained, the lock is held for the remainder of the current transaction. (There is no &lt;code&gt;UNLOCK TABLE&lt;/code&gt; command; locks are always released at transaction end.)</source>
          <target state="translated">&lt;code&gt;LOCK TABLE&lt;/code&gt; 은 충돌하는 잠금이 해제 될 때까지 대기하면서 테이블 수준 잠금을 얻습니다. 경우 &lt;code&gt;NOWAIT&lt;/code&gt; 가 지정되어, &lt;code&gt;LOCK TABLE&lt;/code&gt; 이 원하는 잠금을 획득하기 위해 대기하지 않습니다이 바로 취득 할 수없는 경우, 명령이 중단되고 오류가 방출된다. 일단 획득되면, 현재 트랜잭션의 나머지 부분에 대해 잠금이 유지됩니다. ( &lt;code&gt;UNLOCK TABLE&lt;/code&gt; 명령 은 없으며 트랜잭션 종료시 항상 잠금이 해제됩니다.)</target>
        </trans-unit>
        <trans-unit id="248769e08946337a5bda00548f1e3c62a326a2c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK TABLE&lt;/code&gt; only deals with table-level locks, and so the mode names involving &lt;code&gt;ROW&lt;/code&gt; are all misnomers. These mode names should generally be read as indicating the intention of the user to acquire row-level locks within the locked table. Also, &lt;code&gt;ROW EXCLUSIVE&lt;/code&gt; mode is a shareable table lock. Keep in mind that all the lock modes have identical semantics so far as &lt;code&gt;LOCK TABLE&lt;/code&gt; is concerned, differing only in the rules about which modes conflict with which. For information on how to acquire an actual row-level lock, see &lt;a href=&quot;explicit-locking#LOCKING-ROWS&quot;&gt;Section 13.3.2&lt;/a&gt; and &lt;a href=&quot;sql-select#SQL-FOR-UPDATE-SHARE&quot;&gt;The Locking Clause&lt;/a&gt; in the &lt;a href=&quot;sql-select&quot;&gt;SELECT&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;code&gt;LOCK TABLE&lt;/code&gt; 은 테이블 수준 잠금 만 처리하므로 &lt;code&gt;ROW&lt;/code&gt; 와 관련된 모드 이름 은 모두 잘못된 이름입니다. 이러한 모드 이름은 일반적으로 사용자가 잠긴 테이블 내에서 행 수준 잠금을 획득하려는 의도를 나타내는 것으로 읽어야합니다. 또한 &lt;code&gt;ROW EXCLUSIVE&lt;/code&gt; 모드는 공유 가능한 테이블 잠금입니다. 모든 잠금 모드는 &lt;code&gt;LOCK TABLE&lt;/code&gt; 에 관한 한 동일한 의미를 가지며 어떤 모드와 충돌하는지에 대한 규칙 만 다릅니다. 실제 행 수준 잠금을 획득하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;sql-select&quot;&gt;SELECT&lt;/a&gt; 문서의 &lt;a href=&quot;explicit-locking#LOCKING-ROWS&quot;&gt;13.3.2 절&lt;/a&gt; 및 &lt;a href=&quot;sql-select#SQL-FOR-UPDATE-SHARE&quot;&gt;잠금 절&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44348119132a0eaff71eedd1b2e642b04395ddaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK TABLE&lt;/code&gt; only deals with table-level locks, and so the mode names involving &lt;code&gt;ROW&lt;/code&gt; are all misnomers. These mode names should generally be read as indicating the intention of the user to acquire row-level locks within the locked table. Also, &lt;code&gt;ROW EXCLUSIVE&lt;/code&gt; mode is a shareable table lock. Keep in mind that all the lock modes have identical semantics so far as &lt;code&gt;LOCK TABLE&lt;/code&gt; is concerned, differing only in the rules about which modes conflict with which. For information on how to acquire an actual row-level lock, see &lt;a href=&quot;explicit-locking#LOCKING-ROWS&quot;&gt;Section 13.3.2&lt;/a&gt; and the &lt;a href=&quot;sql-select#SQL-FOR-UPDATE-SHARE&quot;&gt;The Locking Clause&lt;/a&gt; in the &lt;code&gt;SELECT&lt;/code&gt; reference documentation.</source>
          <target state="translated">&lt;code&gt;LOCK TABLE&lt;/code&gt; 은 테이블 수준 잠금 만 처리하므로 &lt;code&gt;ROW&lt;/code&gt; 와 관련된 모드 이름 은 모두 잘못입니다. 이 모드 이름은 일반적으로 사용자가 잠긴 테이블 내에서 행 레벨 잠금을 획득하려는 의도를 나타내는 것으로 읽혀 져야합니다. 또한 &lt;code&gt;ROW EXCLUSIVE&lt;/code&gt; 모드는 공유 가능한 테이블 잠금입니다. &lt;code&gt;LOCK TABLE&lt;/code&gt; 에 관한 한 모든 잠금 모드는 동일한 의미를 가지며 , 어떤 모드가 어떤 모드와 충돌하는지에 대한 규칙 만 다릅니다. 실제 행 수준 잠금을 얻는 방법에 대한 자세한 내용 은 &lt;code&gt;SELECT&lt;/code&gt; 참조 설명서 &lt;a href=&quot;sql-select#SQL-FOR-UPDATE-SHARE&quot;&gt;의 &lt;/a&gt;&lt;a href=&quot;explicit-locking#LOCKING-ROWS&quot;&gt;13.3.2 절&lt;/a&gt; 및 잠금 절 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="271b89db6d1df5fe7ad7c2f69c3f488757e1789c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK TABLE&lt;/code&gt;, though only when explicitly in one of these modes: &lt;code&gt;ACCESS SHARE&lt;/code&gt;, &lt;code&gt;ROW SHARE&lt;/code&gt; or &lt;code&gt;ROW EXCLUSIVE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOCK TABLE&lt;/code&gt; &lt;code&gt;ACCESS SHARE&lt;/code&gt; , &lt;code&gt;ROW SHARE&lt;/code&gt; 또는 &lt;code&gt;ROW EXCLUSIVE&lt;/code&gt; 모드 중 하나 인 경우에만 LOCK TABLE .</target>
        </trans-unit>
        <trans-unit id="3a6fa77630e27d5e136b368719ad4a97c24a0aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK&lt;/code&gt; in short default form, since it requests &lt;code&gt;ACCESS EXCLUSIVE MODE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOCK&lt;/code&gt; &lt;code&gt;ACCESS EXCLUSIVE MODE&lt;/code&gt; 를 요청하기 때문에 짧은 기본 형식의 LOCK .</target>
        </trans-unit>
        <trans-unit id="b12da6e18c4438ad3cf3b90952a1a063e11c2f0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK&lt;/code&gt; that explicitly requests a mode higher than &lt;code&gt;ROW EXCLUSIVE MODE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LOCK&lt;/code&gt; 명시 적으로보다 높은 모드를 요청 &lt;code&gt;ROW EXCLUSIVE MODE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d5f4f8a945f3f652e213d2b0a1d6ccce46b5d8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOGIN&lt;/code&gt;&lt;code&gt;NOLOGIN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOGIN&lt;/code&gt;&lt;code&gt;NOLOGIN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f1b85fd43a6dc815c49ad5982419f5fe65a99f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LWLock&lt;/code&gt; Wait Event</source>
          <target state="translated">&lt;code&gt;LWLock&lt;/code&gt; 대기 이벤트</target>
        </trans-unit>
        <trans-unit id="a868a86f042401112e26244bdd2bc6d78c935532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LWLock&lt;/code&gt;: The backend is waiting for a lightweight lock. Each such lock protects a particular data structure in shared memory. &lt;code&gt;wait_event&lt;/code&gt; will contain a name identifying the purpose of the lightweight lock. (Some locks have specific names; others are part of a group of locks each with a similar purpose.)</source>
          <target state="translated">&lt;code&gt;LWLock&lt;/code&gt; : 백엔드가 가벼운 잠금을 기다리고 있습니다. 이러한 각 잠금은 공유 메모리의 특정 데이터 구조를 보호합니다. &lt;code&gt;wait_event&lt;/code&gt; 는 경량 잠금의 목적을 식별하는 이름을 포함합니다. (일부 자물쇠에는 특정 이름이 있으며, 다른 자물쇠는 비슷한 목적을 가진 자물쇠 그룹의 일부입니다.)</target>
        </trans-unit>
        <trans-unit id="f6f32d7ade3b517e7b6ecdeeb2cd2e3ec923f45c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; Wait Event</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 대기 이벤트</target>
        </trans-unit>
        <trans-unit id="0492febdcb827207e643811ca8e724dbf73dc994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt;: The backend is waiting for a heavyweight lock. Heavyweight locks, also known as lock manager locks or simply locks, primarily protect SQL-visible objects such as tables. However, they are also used to ensure mutual exclusion for certain internal operations such as relation extension. &lt;code&gt;wait_event&lt;/code&gt; will identify the type of lock awaited.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; : 백엔드가 헤비급 잠금을 기다리고 있습니다. 잠금 관리자 잠금 또는 단순 잠금이라고도하는 헤비급 잠금은 주로 테이블과 같은 SQL 표시 가능 개체를 보호합니다. 그러나 관계 확장과 같은 특정 내부 작업에 대한 상호 배제를 보장하는 데에도 사용됩니다. &lt;code&gt;wait_event&lt;/code&gt; 는 대기중인 잠금 유형을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="7efb3e6821cedad03dd4247028306c9e71e4da78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt;&lt;code&gt;m&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;d&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt;&lt;code&gt;m&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;d&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8a9ecde56af9755a6e3404e9c865e72e701d1d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MAIN&lt;/code&gt; allows compression but not out-of-line storage. (Actually, out-of-line storage will still be performed for such columns, but only as a last resort when there is no other way to make the row small enough to fit on a page.)</source>
          <target state="translated">&lt;code&gt;MAIN&lt;/code&gt; 은 압축을 허용하지만 외부 저장 공간은 허용하지 않습니다. 실제로 실제로 해당 열에 대해 오프라인 저장은 계속 수행되지만 행을 페이지에 맞게 충분히 작게 만들 수있는 다른 방법이없는 경우에만 최후의 수단으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c54870a445476d2913d5fff25558004972dfa82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MFINALFUNC_MODIFY&lt;/code&gt; = { &lt;code&gt;READ_ONLY&lt;/code&gt; | &lt;code&gt;SHAREABLE&lt;/code&gt; | &lt;code&gt;READ_WRITE&lt;/code&gt; }</source>
          <target state="translated">&lt;code&gt;MFINALFUNC_MODIFY&lt;/code&gt; = { &lt;code&gt;READ_ONLY&lt;/code&gt; | &lt;code&gt;SHAREABLE&lt;/code&gt; | &lt;code&gt;READ_WRITE&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="67f2bab3a6bf26553fc3545698e8e2961547f815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOVE&lt;/code&gt; repositions a cursor without retrieving any data. &lt;code&gt;MOVE&lt;/code&gt; works exactly like the &lt;code&gt;FETCH&lt;/code&gt; command, except it only positions the cursor and does not return rows.</source>
          <target state="translated">&lt;code&gt;MOVE&lt;/code&gt; 는 데이터를 검색하지 않고 커서의 위치를 ​​변경합니다. &lt;code&gt;MOVE&lt;/code&gt; 는 커서 위치 만 지정하고 행을 리턴하지 않는다는 점을 제외하고 &lt;code&gt;FETCH&lt;/code&gt; 명령과 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="ee80e7f6a027ea8ce559f44d315d12bff87b3624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxFragments&lt;/code&gt; (integer): maximum number of text fragments to display. The default value of zero selects a non-fragment-based headline generation method. A value greater than zero selects fragment-based headline generation (see below).</source>
          <target state="translated">&lt;code&gt;MaxFragments&lt;/code&gt; (정수) : 표시 할 최대 텍스트 조각 수입니다. 기본값 0은 단편 기반이 아닌 헤드 라인 생성 방법을 선택합니다. 0보다 큰 값은 조각 기반 헤드 라인 생성을 선택합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="f78b256c5af9095b0d4371034706363582d5aa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxFragments&lt;/code&gt;: maximum number of text excerpts or fragments to display. The default value of zero selects a non-fragment-oriented headline generation method. A value greater than zero selects fragment-based headline generation. This method finds text fragments with as many query words as possible and stretches those fragments around the query words. As a result query words are close to the middle of each fragment and have words on each side. Each fragment will be of at most &lt;code&gt;MaxWords&lt;/code&gt; and words of length &lt;code&gt;ShortWord&lt;/code&gt; or less are dropped at the start and end of each fragment. If not all query words are found in the document, then a single fragment of the first &lt;code&gt;MinWords&lt;/code&gt; in the document will be displayed.</source>
          <target state="translated">&lt;code&gt;MaxFragments&lt;/code&gt; : 표시 할 최대 텍스트 발췌 또는 조각 수입니다. 기본값 0은 조각이 아닌 헤드 라인 생성 방법을 선택합니다. 0보다 큰 값은 조각 기반 헤드 라인 생성을 선택합니다. 이 방법은 가능한 많은 쿼리 단어가있는 텍스트 조각을 찾아서 해당 단어 조각을 쿼리 단어 주위로 확장합니다. 결과적으로 쿼리 단어는 각 조각의 중간에 가까우며 각면에 단어가 있습니다. 각 조각은 최대 &lt;code&gt;MaxWords&lt;/code&gt; 이고 &lt;code&gt;ShortWord&lt;/code&gt; 이하의 단어 는 각 조각의 시작과 끝에서 삭제됩니다. 문서에서 모든 검색어가 발견되지 않으면 문서에서 첫 번째 &lt;code&gt;MinWords&lt;/code&gt; 의 단일 조각 이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="02f12d2f4a0042c46f1f755a8b3cd27424051c1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxWords&lt;/code&gt;, &lt;code&gt;MinWords&lt;/code&gt; (integers): these numbers determine the longest and shortest headlines to output. The default values are 35 and 15.</source>
          <target state="translated">&lt;code&gt;MaxWords&lt;/code&gt; , &lt;code&gt;MinWords&lt;/code&gt; (정수) :이 숫자는 출력 할 최장 및 최단 헤드 라인을 결정합니다. 기본값은 35 및 15입니다.</target>
        </trans-unit>
        <trans-unit id="5e795dc21061d089a5b9d07c8a9ce8bd9648ac77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxWords&lt;/code&gt;, &lt;code&gt;MinWords&lt;/code&gt;: these numbers determine the longest and shortest headlines to output.</source>
          <target state="translated">&lt;code&gt;MaxWords&lt;/code&gt; , &lt;code&gt;MinWords&lt;/code&gt; :이 숫자는 출력 할 가장 길고 짧은 헤드 라인을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="3009e34324e4a38b476bd1daf6b48200f3145c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mskanji&lt;/code&gt;, &lt;code&gt;ShiftJIS&lt;/code&gt;, &lt;code&gt;WIN932&lt;/code&gt;, &lt;code&gt;Windows932&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Mskanji&lt;/code&gt; , &lt;code&gt;ShiftJIS&lt;/code&gt; , &lt;code&gt;WIN932&lt;/code&gt; , &lt;code&gt;Windows932&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9370e5f4d22e4eed05dc04dfb243a53418c988b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NATURAL&lt;/code&gt; is shorthand for a &lt;code&gt;USING&lt;/code&gt; list that mentions all columns in the two tables that have matching names. If there are no common column names, &lt;code&gt;NATURAL&lt;/code&gt; is equivalent to &lt;code&gt;ON TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NATURAL&lt;/code&gt; 은 이름이 일치하는 두 테이블의 모든 열을 언급 하는 &lt;code&gt;USING&lt;/code&gt; 목록의 약어입니다 . 공통 열 이름이 없으면 &lt;code&gt;NATURAL&lt;/code&gt; 은 &lt;code&gt;ON TRUE&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e93a9a24e229d544603d17ff0c5351a79433efcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NO FORCE&lt;/code&gt;/&lt;code&gt;FORCE ROW LEVEL SECURITY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NO FORCE&lt;/code&gt; / &lt;code&gt;FORCE ROW LEVEL SECURITY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32fd6a9477e7a7e6cb857114e30a423299622ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOT IN&lt;/code&gt; is equivalent to &lt;code&gt;&amp;lt;&amp;gt; ALL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NOT IN&lt;/code&gt; 은 &lt;code&gt;&amp;lt;&amp;gt; ALL&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="75221b349f891e54cb8c0cfb304fe1d84e8a3549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOT&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; &lt;code&gt;boolean&lt;/code&gt; 아님 &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b1788846d913b947add44c8d1a3963e2b175502" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOTIFY&lt;/code&gt; interacts with SQL transactions in some important ways. Firstly, if a &lt;code&gt;NOTIFY&lt;/code&gt; is executed inside a transaction, the notify events are not delivered until and unless the transaction is committed. This is appropriate, since if the transaction is aborted, all the commands within it have had no effect, including &lt;code&gt;NOTIFY&lt;/code&gt;. But it can be disconcerting if one is expecting the notification events to be delivered immediately. Secondly, if a listening session receives a notification signal while it is within a transaction, the notification event will not be delivered to its connected client until just after the transaction is completed (either committed or aborted). Again, the reasoning is that if a notification were delivered within a transaction that was later aborted, one would want the notification to be undone somehow &amp;mdash; but the server cannot &amp;ldquo;take back&amp;rdquo; a notification once it has sent it to the client. So notification events are only delivered between transactions. The upshot of this is that applications using &lt;code&gt;NOTIFY&lt;/code&gt; for real-time signaling should try to keep their transactions short.</source>
          <target state="translated">&lt;code&gt;NOTIFY&lt;/code&gt; 는 몇 가지 중요한 방식으로 SQL 트랜잭션과 상호 작용합니다. 먼저, 트랜잭션 내 에서 &lt;code&gt;NOTIFY&lt;/code&gt; 가 실행되면 트랜잭션이 커밋 될 때까지 통지 이벤트가 전달되지 않습니다. 트랜잭션이 중단되면 &lt;code&gt;NOTIFY&lt;/code&gt; 를 포함하여 트랜잭션 내의 모든 명령이 영향을 미치지 않기 때문에 이것은 적절합니다.. 그러나 알림 이벤트가 즉시 전달 될 것으로 예상되면 당황 스러울 수 있습니다. 두 번째로, 수신 세션이 트랜잭션 내에있는 동안 알림 신호를 수신하면 트랜잭션이 완료된 (커밋되거나 중단 된) 직후까지 알림 이벤트가 연결된 클라이언트에 전달되지 않습니다. 다시 말하지만, 나중에 중단 된 트랜잭션 내에서 알림이 전달 된 경우 알림이 어떻게 든 취소되기를 원하지만 서버가 알림을 클라이언트에 보낸 후에는 알림을 &quot;복구&quot;할 수 없기 때문입니다. 따라서 알림 이벤트는 트랜잭션간에 만 전달됩니다. 이것의 결과는 실시간 시그널링을 위해 &lt;code&gt;NOTIFY&lt;/code&gt; 를 사용하는 응용 프로그램 은 트랜잭션을 짧게 유지해야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6cbaf3c1ca99c24bf63e2672ca59412ae8fc12b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOTIFY&lt;/code&gt; provides a simple interprocess communication mechanism for a collection of processes accessing the same PostgreSQL database. A payload string can be sent along with the notification, and higher-level mechanisms for passing structured data can be built by using tables in the database to pass additional data from notifier to listener(s).</source>
          <target state="translated">&lt;code&gt;NOTIFY&lt;/code&gt; 는 동일한 PostgreSQL 데이터베이스에 액세스하는 프로세스 모음에 간단한 프로세스 간 통신 메커니즘을 제공합니다. 페이로드 문자열은 알림과 함께 전송 될 수 있으며, 데이터베이스의 테이블을 사용하여 알리미에서 리스너로 추가 데이터를 전달하여 구조화 된 데이터를 전달하는 고급 메커니즘을 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8aba8c8edc2d0f2d0ad11078655d95868154c2aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NULL&lt;/code&gt; if the dictionary does not recognize the input token</source>
          <target state="translated">&lt;code&gt;NULL&lt;/code&gt; 사전이 입력 토큰을 인식하지 못하면 NULL</target>
        </trans-unit>
        <trans-unit id="19a6f2a1d22051c0a250853fb044bf96aedbb98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NULL&lt;/code&gt;&amp;ldquo;Constraint&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;NULL&lt;/code&gt;&amp;ldquo;Constraint&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d6d9c7a7f4e8e1b9914476ca0ee065e50dc90564" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;infinity&lt;/code&gt; values are disallowed</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 및 &lt;code&gt;infinity&lt;/code&gt; 값이 허용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="605823b1cabd1d3a2197a74c4fb48f4c3979851a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OFFSET&lt;/code&gt; says to skip that many rows before beginning to return rows. &lt;code&gt;OFFSET 0&lt;/code&gt; is the same as omitting the &lt;code&gt;OFFSET&lt;/code&gt; clause, as is &lt;code&gt;OFFSET&lt;/code&gt; with a NULL argument.</source>
          <target state="translated">&lt;code&gt;OFFSET&lt;/code&gt; 은 행을 반환하기 전에 많은 행을 건너 뛰라고 말합니다. &lt;code&gt;OFFSET 0&lt;/code&gt; 은 NULL 인수가있는 &lt;code&gt;OFFSET&lt;/code&gt; 과 마찬가지로 &lt;code&gt;OFFSET&lt;/code&gt; 절 을 생략하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7543c87ea4fe740ad57d6fed403dcce9f896e9fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OLD TABLE&lt;/code&gt;&lt;code&gt;NEW TABLE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OLD TABLE&lt;/code&gt; &lt;code&gt;NEW TABLE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c8f1f4c65d8e665d726555aea5b23961ff948b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON CONFLICT DO UPDATE&lt;/code&gt; guarantees an atomic &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;UPDATE&lt;/code&gt; outcome; provided there is no independent error, one of those two outcomes is guaranteed, even under high concurrency. This is also known as &lt;em&gt;UPSERT&lt;/em&gt; &amp;mdash; &amp;ldquo;UPDATE or INSERT&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;ON CONFLICT DO UPDATE&lt;/code&gt; 는 원 자성 &lt;code&gt;INSERT&lt;/code&gt; 또는 &lt;code&gt;UPDATE&lt;/code&gt; 결과를 보장합니다 . 독립적 인 오류가없는 경우 높은 동시성에서도이 두 결과 중 하나가 보장됩니다. 이것은 &lt;em&gt;UPSERT&lt;/em&gt; &amp;ndash;&amp;ldquo;UPDATE 또는 INSERT&amp;rdquo; 라고도 합니다.</target>
        </trans-unit>
        <trans-unit id="9a4d7f68a04d7fcdb48f243ec84442880f017a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON CONFLICT&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;ON CONFLICT&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="ef76fa96381ebd2acd25f709a599c55ff018fdf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON CONFLICT&lt;/code&gt; can be used to specify an alternative action to raising a unique constraint or exclusion constraint violation error. (See &lt;a href=&quot;sql-insert#SQL-ON-CONFLICT&quot;&gt;&lt;code&gt;ON CONFLICT&lt;/code&gt; Clause&lt;/a&gt; below.)</source>
          <target state="translated">&lt;code&gt;ON CONFLICT&lt;/code&gt; 를 사용하여 고유 제한 조건 또는 제외 제한 조건 위반 오류를 발생시키는 대체 조치를 지정할 수 있습니다. ( 아래의 &lt;a href=&quot;sql-insert#SQL-ON-CONFLICT&quot;&gt; &lt;code&gt;ON CONFLICT&lt;/code&gt; 조항을&lt;/a&gt; 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="f15483f76eb75fd53066cc81d2ea6974baebfbbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON CONFLICT&lt;/code&gt; can be used to specify an alternative action to raising a unique constraint or exclusion constraint violation error. (See &lt;a href=&quot;sql-insert#SQL-ON-CONFLICT&quot;&gt;ON CONFLICT Clause&lt;/a&gt; below.)</source>
          <target state="translated">&lt;code&gt;ON CONFLICT&lt;/code&gt; 를 사용하여 고유 제약 조건 또는 제외 제약 조건 위반 오류를 발생시키는 대체 작업을 지정할 수 있습니다. (아래 &lt;a href=&quot;sql-insert#SQL-ON-CONFLICT&quot;&gt;ON CONFLICT 조항을&lt;/a&gt; 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="6d77e4fc09afe503fd786ece7b83490977ecb4ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ONLY&lt;/code&gt; and Inheritance</source>
          <target state="translated">&lt;code&gt;ONLY&lt;/code&gt; 상속</target>
        </trans-unit>
        <trans-unit id="7d11c16e8bb5dd8377b87005906dd21239cb8693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OR&lt;/code&gt;: logical or will be converted to the &lt;code&gt;|&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;OR&lt;/code&gt; : 논리 또는 &lt;code&gt;|&lt;/code&gt; 운영자.</target>
        </trans-unit>
        <trans-unit id="84b33a5175fbff1b1e3178979fc3b6ad359a4ded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OR&lt;/code&gt;: the word &amp;ldquo;or&amp;rdquo; will be converted to the &lt;code&gt;|&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;OR&lt;/code&gt; : &quot;or&quot;라는 단어가 &lt;code&gt;|&lt;/code&gt; 운영자.</target>
        </trans-unit>
        <trans-unit id="5a08a15fefe6814ee4836089daeaadc9bea71c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ORDER BY&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;ORDER BY&lt;/code&gt; 조항 별 주문</target>
        </trans-unit>
        <trans-unit id="decc2351a4d24a206b8d252f8b536b950fa219b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ORDER BY&lt;/code&gt; can be applied to the result of a &lt;code&gt;UNION&lt;/code&gt;, &lt;code&gt;INTERSECT&lt;/code&gt;, or &lt;code&gt;EXCEPT&lt;/code&gt; combination, but in this case it is only permitted to sort by output column names or numbers, not by expressions.</source>
          <target state="translated">&lt;code&gt;ORDER BY&lt;/code&gt; 는 &lt;code&gt;UNION&lt;/code&gt; , &lt;code&gt;INTERSECT&lt;/code&gt; 또는 &lt;code&gt;EXCEPT&lt;/code&gt; 조합 의 결과에 적용 할 수 있지만이 경우 표현식이 아닌 출력 열 이름 또는 숫자로만 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3e6c94741e9b92007ccc5e07afc52fa40d3ea40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OWNED BY&lt;/code&gt;&lt;code&gt;table_name&lt;/code&gt;.&lt;code&gt;column_name&lt;/code&gt;&lt;code&gt;OWNED BY NONE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OWNED BY&lt;/code&gt; &lt;code&gt;table_name&lt;/code&gt; . &lt;code&gt;column_name&lt;/code&gt; &lt;code&gt;OWNED BY NONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0aaff0614ae677ff8f32da11c66acd27aa2c600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PARALLEL =&lt;/code&gt; { &lt;code&gt;SAFE&lt;/code&gt; | &lt;code&gt;RESTRICTED&lt;/code&gt; | &lt;code&gt;UNSAFE&lt;/code&gt; }</source>
          <target state="translated">&lt;code&gt;PARALLEL =&lt;/code&gt; { &lt;code&gt;SAFE&lt;/code&gt; | &lt;code&gt;RESTRICTED&lt;/code&gt; | &lt;code&gt;UNSAFE&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="49e11464e2f6110892981a1e4a2dca1e7913dd0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PARALLEL UNSAFE&lt;/code&gt; indicates that the function can't be executed in parallel mode and the presence of such a function in an SQL statement forces a serial execution plan. This is the default. &lt;code&gt;PARALLEL RESTRICTED&lt;/code&gt; indicates that the function can be executed in parallel mode, but the execution is restricted to parallel group leader. &lt;code&gt;PARALLEL SAFE&lt;/code&gt; indicates that the function is safe to run in parallel mode without restriction.</source>
          <target state="translated">&lt;code&gt;PARALLEL UNSAFE&lt;/code&gt; 는 함수를 병렬 모드에서 실행할 수 없으며 SQL 문에 이러한 함수가 있으면 직렬 실행 계획이 적용됨을 나타냅니다. 이것이 기본값입니다. &lt;code&gt;PARALLEL RESTRICTED&lt;/code&gt; 는 기능이 병렬 모드에서 실행될 수 있지만 실행이 병렬 그룹 리더로 제한됨을 나타냅니다. &lt;code&gt;PARALLEL SAFE&lt;/code&gt; 는 기능이 제한없이 병렬 모드에서 실행해도 안전함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6bc66003abf587dbc8d04656be6765ab0e76f616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PARTITION BY&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;PARTITION BY&lt;/code&gt; 절</target>
        </trans-unit>
        <trans-unit id="04e25f76bbf998a06e376a90b8bbeb0dc8315fb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PARTITION OF&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;PARTITION OF&lt;/code&gt; 조항 의 분할</target>
        </trans-unit>
        <trans-unit id="653b2979e39f83acdda4e50dee7f4bbfe663603d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PGDATABASE&lt;/code&gt;&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGOPTIONS&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PGDATABASE&lt;/code&gt;&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGOPTIONS&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b7ad296a7f545cbc4bc4dd898b136d61d8fb60e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PGDATABASE&lt;/code&gt;&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PGDATABASE&lt;/code&gt;&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15db4b5363639dce5a2b6763039bc784f48a6d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGOPTIONS&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGOPTIONS&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c59a91c929ebf38ca3eedc631ca8808c8c292da7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PGHOST&lt;/code&gt;&lt;code&gt;PGPORT&lt;/code&gt;&lt;code&gt;PGUSER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="786ac7fea668d056bef279bd10627037bae6b210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PL&lt;/code&gt;, &lt;code&gt;SG&lt;/code&gt;, and &lt;code&gt;TH&lt;/code&gt; are PostgreSQL extensions.</source>
          <target state="translated">&lt;code&gt;PL&lt;/code&gt; , &lt;code&gt;SG&lt;/code&gt; 및 &lt;code&gt;TH&lt;/code&gt; 는 PostgreSQL 확장입니다.</target>
        </trans-unit>
        <trans-unit id="f67e209b4f79f14b4aa2e6ae876921aa169a9feb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PLAIN&lt;/code&gt; prevents either compression or out-of-line storage; furthermore it disables use of single-byte headers for varlena types. This is the only possible strategy for columns of non-TOAST-able data types.</source>
          <target state="translated">&lt;code&gt;PLAIN&lt;/code&gt; 은 압축 또는 외부 저장을 방지합니다. 또한 varlena 유형에 단일 바이트 헤더 사용을 비활성화합니다. TOAST 불가능 데이터 유형의 컬럼에 가능한 유일한 전략입니다.</target>
        </trans-unit>
        <trans-unit id="b5f2a3f7313ee7839f65568a2f7565727218a8e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; is a PostgreSQL extension. It is intended for use by external transaction management systems, some of which are covered by standards (such as X/Open XA), but the SQL side of those systems is not standardized.</source>
          <target state="translated">&lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; 은 PostgreSQL 확장입니다. 외부 트랜잭션 관리 시스템에서 사용하기위한 것으로 일부는 표준 (예 : X / Open XA)에 의해 다루어 지지만 해당 시스템의 SQL 쪽은 ​​표준화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b64c7c93b47e43d55e0c0ac3aac08642f8bffa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; is not intended for use in applications or interactive sessions. Its purpose is to allow an external transaction manager to perform atomic global transactions across multiple databases or other transactional resources. Unless you're writing a transaction manager, you probably shouldn't be using &lt;code&gt;PREPARE TRANSACTION&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; 은 응용 프로그램 또는 대화식 세션에서 사용하기위한 것이 아닙니다. 외부 트랜잭션 관리자가 여러 데이터베이스 또는 기타 트랜잭션 자원에서 원자 전역 트랜잭션을 수행 할 수 있도록하기위한 것입니다. 트랜잭션 관리자를 작성하지 않으면 &lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; 을 사용하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="28c63377c548812cc1c1b856610a262df5cb4375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; prepares the current transaction for two-phase commit. After this command, the transaction is no longer associated with the current session; instead, its state is fully stored on disk, and there is a very high probability that it can be committed successfully, even if a database crash occurs before the commit is requested.</source>
          <target state="translated">&lt;code&gt;PREPARE TRANSACTION&lt;/code&gt; 은 2 단계 커밋을 위해 현재 트랜잭션을 준비합니다. 이 명령 후에는 트랜잭션이 더 이상 현재 세션과 연관되지 않습니다. 대신 상태는 디스크에 완전히 저장되며 커밋이 요청되기 전에 데이터베이스 충돌이 발생하더라도 성공적으로 커밋 될 가능성이 매우 높습니다.</target>
        </trans-unit>
        <trans-unit id="b108c5cac02b42d29a008a4ce832cfc8fba5571e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PREPARE&lt;/code&gt; creates a prepared statement. A prepared statement is a server-side object that can be used to optimize performance. When the &lt;code&gt;PREPARE&lt;/code&gt; statement is executed, the specified statement is parsed, analyzed, and rewritten. When an &lt;code&gt;EXECUTE&lt;/code&gt; command is subsequently issued, the prepared statement is planned and executed. This division of labor avoids repetitive parse analysis work, while allowing the execution plan to depend on the specific parameter values supplied.</source>
          <target state="translated">&lt;code&gt;PREPARE&lt;/code&gt; 는 준비된 명령문을 작성합니다. 준비된 명령문은 성능을 최적화하는 데 사용할 수있는 서버 측 오브젝트입니다. 때 &lt;code&gt;PREPARE&lt;/code&gt; 문이 실행될, 지정된 문, 구문 분석, 분석 및 다시 작성됩니다. 때 &lt;code&gt;EXECUTE&lt;/code&gt; 이후에 발행 된 명령을 준비된 문은 계획되고 실행됩니다. 이 분업은 반복적 인 구문 분석 분석 작업을 피하면서 실행 계획이 제공된 특정 매개 변수 값에 의존하도록합니다.</target>
        </trans-unit>
        <trans-unit id="2ccce4dcff00b35d22e336a75f78aefbec833baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRIMARY KEY&lt;/code&gt; (column constraint)&lt;code&gt;PRIMARY KEY ( column_name [, ... ] )&lt;/code&gt; [ INCLUDE ( &lt;code&gt;column_name&lt;/code&gt; [, ...]) ] (table constraint)</source>
          <target state="translated">&lt;code&gt;PRIMARY KEY&lt;/code&gt; (열 제약 조건) &lt;code&gt;PRIMARY KEY ( column_name [, ... ] )&lt;/code&gt; [INCLUDE ( &lt;code&gt;column_name&lt;/code&gt; [, ...])] (테이블 제약 조건)</target>
        </trans-unit>
        <trans-unit id="d062e691a0f16dfe887bad98786d2bf1791fed1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRIMARY KEY&lt;/code&gt; constraints share the restrictions that &lt;code&gt;UNIQUE&lt;/code&gt; constraints have when placed on partitioned tables.</source>
          <target state="translated">&lt;code&gt;PRIMARY KEY&lt;/code&gt; 제약 조건은 분할 된 테이블에 배치 할 때 &lt;code&gt;UNIQUE&lt;/code&gt; 제약 조건 의 제한 사항을 공유합니다 .</target>
        </trans-unit>
        <trans-unit id="973b293c7e5105338915e3ef583332305ae4a0ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRIMARY KEY&lt;/code&gt; enforces the same data constraints as a combination of &lt;code&gt;UNIQUE&lt;/code&gt; and &lt;code&gt;NOT NULL&lt;/code&gt;, but identifying a set of columns as the primary key also provides metadata about the design of the schema, since a primary key implies that other tables can rely on this set of columns as a unique identifier for rows.</source>
          <target state="translated">&lt;code&gt;PRIMARY KEY&lt;/code&gt; 는 &lt;code&gt;UNIQUE&lt;/code&gt; 및 &lt;code&gt;NOT NULL&lt;/code&gt; 의 조합과 동일한 데이터 제약 조건을 적용 하지만 기본 키로 열 집합을 식별하면 스키마 디자인에 대한 메타 데이터도 제공합니다. 기본 키는 다른 테이블이이 세트에 의존 할 수 있기 때문에 열을 행의 고유 식별자로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ad0f85833ec199eaa2d234c01a06b3fee9089c4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROMPT1&lt;/code&gt;&lt;code&gt;PROMPT2&lt;/code&gt;&lt;code&gt;PROMPT3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PROMPT1&lt;/code&gt;&lt;code&gt;PROMPT2&lt;/code&gt;&lt;code&gt;PROMPT3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56411cc756f821a0ed62aa4ae0a8c00c7275bd04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PSQL_EDITOR&lt;/code&gt;&lt;code&gt;EDITOR&lt;/code&gt;&lt;code&gt;VISUAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PSQL_EDITOR&lt;/code&gt;&lt;code&gt;EDITOR&lt;/code&gt;&lt;code&gt;VISUAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bbe530d1a607b5271f42283cb71034d8012013f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PSQL_PAGER&lt;/code&gt;&lt;code&gt;PAGER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PSQL_PAGER&lt;/code&gt;&lt;code&gt;PAGER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8f9573e13fb81ba5e84214ab91b5b77f9b79539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REASSIGN OWNED&lt;/code&gt; instructs the system to change the ownership of database objects owned by any of the &lt;code&gt;old_roles&lt;/code&gt; to &lt;code&gt;new_role&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REASSIGN OWNED&lt;/code&gt; 의 모든 소유 객체 데이터베이스의 소유권 변경하도록 지시에게 시스템을 &lt;code&gt;old_roles&lt;/code&gt; 에 &lt;code&gt;new_role&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e45366c802078b050260b80ac7d5e87b44b6ac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REASSIGN OWNED&lt;/code&gt; is often used to prepare for the removal of one or more roles. Because &lt;code&gt;REASSIGN OWNED&lt;/code&gt; does not affect objects within other databases, it is usually necessary to execute this command in each database that contains objects owned by a role that is to be removed.</source>
          <target state="translated">&lt;code&gt;REASSIGN OWNED&lt;/code&gt; 는 종종 하나 이상의 역할 제거를 준비하는 데 사용됩니다. 때문에 &lt;code&gt;REASSIGN OWNED&lt;/code&gt; 다른 데이터베이스 내의 개체에 영향을주지 않습니다, 그것을 제거 할 수있는 역할이 소유 객체가 포함 된 각 데이터베이스에서이 명령을 실행하는 것이 필요하다.</target>
        </trans-unit>
        <trans-unit id="77559c81a90445f28aba9506e5fb97a64be21e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REASSIGN OWNED&lt;/code&gt; requires membership on both the source role(s) and the target role.</source>
          <target state="translated">&lt;code&gt;REASSIGN OWNED&lt;/code&gt; 는 소스 역할과 대상 역할 모두에 멤버십이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2b86c7ac4d199cfa97b9a7352cb38af564664875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RECEIVE&lt;/code&gt; can be set to the name of a binary input function, or &lt;code&gt;NONE&lt;/code&gt; to remove the type's binary input function. Using this option requires superuser privilege.</source>
          <target state="translated">&lt;code&gt;RECEIVE&lt;/code&gt; 는 이진 입력 함수의 이름으로 설정하거나 &lt;code&gt;NONE&lt;/code&gt; 으로 설정하여 유형의 이진 입력 함수를 제거 할 수 있습니다. 이 옵션을 사용하려면 수퍼 유저 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="24d74c1dfb498197230927c7b3098fcafc7dd5fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REFERENCES reftable [ ( refcolumn ) ] [ MATCH matchtype ] [ ON DELETE referential_action ] [ ON UPDATE referential_action ]&lt;/code&gt; (column constraint)&lt;code&gt;FOREIGN KEY ( column_name [, ... ] ) REFERENCES reftable [ ( refcolumn [, ... ] ) ] [ MATCH matchtype ] [ ON DELETE referential_action ] [ ON UPDATE referential_action ]&lt;/code&gt; (table constraint)</source>
          <target state="translated">&lt;code&gt;REFERENCES reftable [ ( refcolumn ) ] [ MATCH matchtype ] [ ON DELETE referential_action ] [ ON UPDATE referential_action ]&lt;/code&gt; (column constraint) &lt;code&gt;FOREIGN KEY ( column_name [, ... ] ) REFERENCES reftable [ ( refcolumn [, ... ] ) ] [ MATCH matchtype ] [ ON DELETE referential_action ] [ ON UPDATE referential_action ]&lt;/code&gt; (테이블 제약 조건)</target>
        </trans-unit>
        <trans-unit id="586b95a2e3a5e6095a38d3813adc6eef67388efd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REFERENCING&lt;/code&gt; clause name for &lt;code&gt;NEW TABLE&lt;/code&gt;, or null if none</source>
          <target state="translated">&lt;code&gt;REFERENCING&lt;/code&gt; &lt;code&gt;NEW TABLE&lt;/code&gt; 의REFERENCING 절 이름. 없는 경우는 null</target>
        </trans-unit>
        <trans-unit id="0764e1eebd939afe8650b6ce63de3e1c3c2c733e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REFERENCING&lt;/code&gt; clause name for &lt;code&gt;OLD TABLE&lt;/code&gt;, or null if none</source>
          <target state="translated">&lt;code&gt;REFERENCING&lt;/code&gt; &lt;code&gt;OLD TABLE&lt;/code&gt; 에 대한 REFERENCING 절 이름 또는없는 경우 널</target>
        </trans-unit>
        <trans-unit id="9e0c03638dc1aea0ddf3f043e77d88f6998d2dc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt; (without &lt;code&gt;CONCURRENTLY&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt; (없이 &lt;code&gt;CONCURRENTLY&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1c1eff880c036d37f0041f58f36c9777ee5fb441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt; completely replaces the contents of a materialized view. To execute this command you must be the owner of the materialized view. The old contents are discarded. If &lt;code&gt;WITH DATA&lt;/code&gt; is specified (or defaults) the backing query is executed to provide the new data, and the materialized view is left in a scannable state. If &lt;code&gt;WITH NO DATA&lt;/code&gt; is specified no new data is generated and the materialized view is left in an unscannable state.</source>
          <target state="translated">&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt; 는 구체화 된 뷰의 내용을 완전히 대체합니다. 이 명령을 실행하려면 구체화 된 뷰의 소유자 여야합니다. 오래된 내용은 폐기됩니다. &lt;code&gt;WITH DATA&lt;/code&gt; 가 지정 되면 (또는 기본값) 새 데이터를 제공하기 위해 백업 조회가 실행되고 구체화 된보기는 스캔 가능한 상태로 남아 있습니다. &lt;code&gt;WITH NO DATA&lt;/code&gt; 가 지정 되면 새 데이터가 생성되지 않으며 구체화 된보기는 스캔 할 수없는 상태로 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa5d7f7025ec316e55ce72dd01c0ae5025cc0899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt; is a PostgreSQL extension.</source>
          <target state="translated">&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt; 는 PostgreSQL 확장입니다.</target>
        </trans-unit>
        <trans-unit id="05d71b10e260ac3a716a4cf5c798f5e13fe6021e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt; is waiting for transactions with read locks on the table to finish, before dropping the old index. This phase is skipped when not in concurrent mode. Columns &lt;code&gt;lockers_total&lt;/code&gt;, &lt;code&gt;lockers_done&lt;/code&gt; and &lt;code&gt;current_locker_pid&lt;/code&gt; contain the progress information for this phase.</source>
          <target state="translated">&lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt; 는 이전 인덱스를 삭제하기 전에 테이블에서 읽기 잠금이있는 트랜잭션이 완료되기를 기다리고 있습니다. 동시 모드에 있지 않으면이 단계를 건너 뜁니다. &lt;code&gt;lockers_total&lt;/code&gt; , &lt;code&gt;lockers_done&lt;/code&gt; 및 &lt;code&gt;current_locker_pid&lt;/code&gt; 열에 는이 단계의 진행 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0ed8d667dbc8eff65da9090d344181b84d3d866a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt; is waiting for transactions with read locks on the table to finish, before marking the old index dead. This phase is skipped when not in concurrent mode. Columns &lt;code&gt;lockers_total&lt;/code&gt;, &lt;code&gt;lockers_done&lt;/code&gt; and &lt;code&gt;current_locker_pid&lt;/code&gt; contain the progress information for this phase.</source>
          <target state="translated">&lt;code&gt;REINDEX CONCURRENTLY&lt;/code&gt; 는 테이블에서 읽기 잠금이있는 트랜잭션이 완료되기를 기다렸다가 이전 인덱스를 사용 불능으로 표시합니다. 동시 모드에 있지 않으면이 단계를 건너 뜁니다. &lt;code&gt;lockers_total&lt;/code&gt; , &lt;code&gt;lockers_done&lt;/code&gt; 및 &lt;code&gt;current_locker_pid&lt;/code&gt; 열에 는이 단계의 진행 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="073c345fe49a9dd2504687475ee20a1983109105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REINDEX SYSTEM&lt;/code&gt; does not support &lt;code&gt;CONCURRENTLY&lt;/code&gt; since system catalogs cannot be reindexed concurrently.</source>
          <target state="translated">&lt;code&gt;REINDEX SYSTEM&lt;/code&gt; 시스템 카탈로그를 동시에 재 색인 할 수 없으므로 REINDEX SYSTEM 은 &lt;code&gt;CONCURRENTLY&lt;/code&gt; 를 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e539d329d76f200376b0660b735cbdffd0709e12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REINDEX&lt;/code&gt; is similar to a drop and recreate of the index in that the index contents are rebuilt from scratch. However, the locking considerations are rather different. &lt;code&gt;REINDEX&lt;/code&gt; locks out writes but not reads of the index's parent table. It also takes an exclusive lock on the specific index being processed, which will block reads that attempt to use that index. In contrast, &lt;code&gt;DROP INDEX&lt;/code&gt; momentarily takes an exclusive lock on the parent table, blocking both writes and reads. The subsequent &lt;code&gt;CREATE INDEX&lt;/code&gt; locks out writes but not reads; since the index is not there, no read will attempt to use it, meaning that there will be no blocking but reads might be forced into expensive sequential scans.</source>
          <target state="translated">&lt;code&gt;REINDEX&lt;/code&gt; 는 인덱스 내용이 처음부터 다시 작성된다는 점에서 인덱스 삭제 및 재 작성과 유사합니다. 그러나 잠금 고려 사항은 다소 다릅니다. &lt;code&gt;REINDEX&lt;/code&gt; 는 인덱스의 상위 테이블에 대한 쓰기를 잠그지 만 읽기는 잠급니다. 또한 처리중인 특정 인덱스에 대해 독점 잠금을 수행하여 해당 인덱스를 사용하려는 읽기를 차단합니다. 반대로 &lt;code&gt;DROP INDEX&lt;/code&gt; 는 일시적으로 부모 테이블에 독점 잠금을 수행하여 쓰기와 읽기를 모두 차단합니다. 후속 &lt;code&gt;CREATE INDEX&lt;/code&gt; 는 쓰기를 잠그지 만 읽기는 잠급니다. 인덱스가 없으므로 읽기가 인덱스를 사용하려고 시도하지 않습니다. 즉, 블로킹은 없지만 읽기는 비싼 순차적 스캔으로 강제 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9349af6a3d4226b85e558f9a546f4b982b3687f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REINDEX&lt;/code&gt; rebuilds an index using the data stored in the index's table, replacing the old copy of the index. There are several scenarios in which to use &lt;code&gt;REINDEX&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;REINDEX&lt;/code&gt; 는 인덱스 테이블에 저장된 데이터를 사용하여 인덱스의 이전 복사본을 대체하여 인덱스를 다시 작성합니다. &lt;code&gt;REINDEX&lt;/code&gt; 를 사용하는 몇 가지 시나리오가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac286fe90c41206cd6e6ecc49479a1bc69339b0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RELATIVE 0&lt;/code&gt;, &lt;code&gt;FORWARD 0&lt;/code&gt;, and &lt;code&gt;BACKWARD 0&lt;/code&gt; all request fetching the current row without moving the cursor, that is, re-fetching the most recently fetched row. This will succeed unless the cursor is positioned before the first row or after the last row; in which case, no row is returned.</source>
          <target state="translated">&lt;code&gt;RELATIVE 0&lt;/code&gt; , &lt;code&gt;FORWARD 0&lt;/code&gt; 및 &lt;code&gt;BACKWARD 0&lt;/code&gt; 은 모두 커서를 이동하지 않고 현재 행을 페치 (즉, 가장 최근에 페치 된 행을 다시 페치)하도록 요청합니다. 커서가 첫 번째 행 앞이나 마지막 행 뒤에 위치하지 않으면 성공합니다. 이 경우 행이 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d2a6b4e8e4d4c709e20d6612957d14d6513ada9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RELEASE SAVEPOINT&lt;/code&gt; also destroys all savepoints that were established after the named savepoint was established.</source>
          <target state="translated">&lt;code&gt;RELEASE SAVEPOINT&lt;/code&gt; 는 이름이 지정된 세이브 포인트가 설정된 후 설정된 모든 세이브 포인트도 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="3fad6b173e5dfa1ed5d7c7b9e7a3f293e34116d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RELEASE SAVEPOINT&lt;/code&gt; destroys a savepoint previously defined in the current transaction.</source>
          <target state="translated">&lt;code&gt;RELEASE SAVEPOINT&lt;/code&gt; 는 현재 트랜잭션에서 이전에 정의 된 저장 점을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="cd2bc3fc15eb03b892b0b529acc033602e3f3bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REPLICATION&lt;/code&gt;&lt;code&gt;NOREPLICATION&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REPLICATION&lt;/code&gt;&lt;code&gt;NOREPLICATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4430a1591bb6fd5e2aaed3b33b71cd5ac337daec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RESET&lt;/code&gt; is a PostgreSQL extension.</source>
          <target state="translated">&lt;code&gt;RESET&lt;/code&gt; 은 PostgreSQL 확장입니다.</target>
        </trans-unit>
        <trans-unit id="bcb322e13a09d669ff39eba8aec5ffa8168fcb34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RESET&lt;/code&gt; restores run-time parameters to their default values. &lt;code&gt;RESET&lt;/code&gt; is an alternative spelling for</source>
          <target state="translated">&lt;code&gt;RESET&lt;/code&gt; 은 런타임 매개 변수를 기본값으로 복원합니다. &lt;code&gt;RESET&lt;/code&gt; 은 다른 철자입니다.</target>
        </trans-unit>
        <trans-unit id="652098da481dd794c0dea55a3431f5e7311713eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RETURNING&lt;/code&gt; lists are treated the same as &lt;code&gt;SELECT&lt;/code&gt; output lists for this purpose.</source>
          <target state="translated">&lt;code&gt;RETURNING&lt;/code&gt; 목록은 이 목적 으로 &lt;code&gt;SELECT&lt;/code&gt; 출력 목록 과 동일하게 취급 됩니다.</target>
        </trans-unit>
        <trans-unit id="0f49db78adc8b0543ef139005bc69c3bfe36f212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RETURNS NULL ON NULL INPUT&lt;/code&gt; or &lt;code&gt;STRICT&lt;/code&gt; indicates that the function always returns null whenever any of its arguments are null. If this parameter is specified, the function is not executed when there are null arguments; instead a null result is assumed automatically.</source>
          <target state="translated">&lt;code&gt;RETURNS NULL ON NULL INPUT&lt;/code&gt; 또는 &lt;code&gt;STRICT&lt;/code&gt; 는 인수가 널이 될 때마다 함수가 항상 널을 리턴 함을 나타냅니다. 이 매개 변수를 지정하면 널 인수가있을 때 함수가 실행되지 않습니다. 대신 null 결과는 자동으로 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="3711e8c79001ecd68f92c13f2ae20d9371ae479a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REVOKE&lt;/code&gt; can also be done by a role that is not the owner of the affected object, but is a member of the role that owns the object, or is a member of a role that holds privileges &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; on the object. In this case the command is performed as though it were issued by the containing role that actually owns the object or holds the privileges &lt;code&gt;WITH GRANT OPTION&lt;/code&gt;. For example, if table &lt;code&gt;t1&lt;/code&gt; is owned by role &lt;code&gt;g1&lt;/code&gt;, of which role &lt;code&gt;u1&lt;/code&gt; is a member, then &lt;code&gt;u1&lt;/code&gt; can revoke privileges on &lt;code&gt;t1&lt;/code&gt; that are recorded as being granted by &lt;code&gt;g1&lt;/code&gt;. This would include grants made by &lt;code&gt;u1&lt;/code&gt; as well as by other members of role &lt;code&gt;g1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REVOKE&lt;/code&gt; 는 영향을받는 개체의 소유자는 아니지만 개체를 ​​소유 한 역할의 구성원이거나 개체에 대해 &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; 권한을 가진 역할의 구성원 인 역할에 의해 수행 될 수도 있습니다 . 이 경우 명령은 실제로 오브젝트를 소유하거나 &lt;code&gt;WITH GRANT OPTION&lt;/code&gt; 권한을 보유하는 포함 역할에 의해 발행 된 것처럼 수행됩니다 . 테이블의 경우, 예를 들어, &lt;code&gt;t1&lt;/code&gt; 역할에 의해 소유 &lt;code&gt;g1&lt;/code&gt; 역할 그 중, &lt;code&gt;u1&lt;/code&gt; 구성원 다음 &lt;code&gt;u1&lt;/code&gt; 에 취소 할 권한 &lt;code&gt;t1&lt;/code&gt; 에 의해 부여되는 것으로서 기록된다 &lt;code&gt;g1&lt;/code&gt; . 여기에는 &lt;code&gt;u1&lt;/code&gt; 과 다른 역할 멤버가 부여한 보조금이 포함됩니다. &lt;code&gt;g1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="162ef650858f311b9691712fffd9641aa9707d73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROLE&lt;/code&gt;&lt;code&gt;role_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ROLE&lt;/code&gt;&lt;code&gt;role_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fe856629eeac6f3507360a38c354f481e0b5428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROLLBACK PREPARED&lt;/code&gt; is a PostgreSQL extension. It is intended for use by external transaction management systems, some of which are covered by standards (such as X/Open XA), but the SQL side of those systems is not standardized.</source>
          <target state="translated">&lt;code&gt;ROLLBACK PREPARED&lt;/code&gt; 는 PostgreSQL 확장입니다. 외부 트랜잭션 관리 시스템에서 사용하기위한 것으로 일부는 표준 (예 : X / Open XA)에 의해 다루어 지지만 해당 시스템의 SQL 쪽은 ​​표준화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="899081c7e2a6abd33341d48a27e4481377b89bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROLLBACK PREPARED&lt;/code&gt; rolls back a transaction that is in prepared state.</source>
          <target state="translated">&lt;code&gt;ROLLBACK PREPARED&lt;/code&gt; 는 준비 상태에있는 트랜잭션을 롤백합니다.</target>
        </trans-unit>
        <trans-unit id="09a80fc811afc55eb6e6fe0b99f9ce895c11c532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROLLBACK TO SAVEPOINT&lt;/code&gt; implicitly destroys all savepoints that were established after the named savepoint.</source>
          <target state="translated">&lt;code&gt;ROLLBACK TO SAVEPOINT&lt;/code&gt; 은 명명 된 세이브 포인트 이후에 설정된 모든 세이브 포인트를 암시 적으로 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="21ea064ebb27ca7460c2bbc78d516bdcf622922a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROLLBACK&lt;/code&gt; rolls back the current transaction and causes all the updates made by the transaction to be discarded.</source>
          <target state="translated">&lt;code&gt;ROLLBACK&lt;/code&gt; 은 현재 트랜잭션을 롤백하고 트랜잭션이 수행 한 모든 업데이트를 버립니다.</target>
        </trans-unit>
        <trans-unit id="8d1181c5f503d51015aea6ac61a6a258fbdd55fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROW(1,3) #= 'f1=&amp;gt;11'::hstore&lt;/code&gt; &amp;rarr; &lt;code&gt;(11,3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ROW(1,3) #= 'f1=&amp;gt;11'::hstore&lt;/code&gt; &amp;rarr; &lt;code&gt;(11,3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff27f702249bfe189b8dcbcc0199dc52a2ba1f85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROWS FROM( ... )&lt;/code&gt; is an extension of the SQL standard.</source>
          <target state="translated">&lt;code&gt;ROWS FROM( ... )&lt;/code&gt; 은 SQL 표준의 확장입니다.</target>
        </trans-unit>
        <trans-unit id="ffcb1af7f66e48c160d9be53136903c3048f8406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROWS&lt;/code&gt;&lt;code&gt;result_rows&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ROWS&lt;/code&gt;&lt;code&gt;result_rows&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83ea29b6bcfd869d7627ac5ff700db760d908c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RULES&lt;/code&gt; is the base name of the file containing the list of translation rules. This file must be stored in &lt;code&gt;$SHAREDIR/tsearch_data/&lt;/code&gt; (where &lt;code&gt;$SHAREDIR&lt;/code&gt; means the PostgreSQL installation's shared-data directory). Its name must end in &lt;code&gt;.rules&lt;/code&gt; (which is not to be included in the &lt;code&gt;RULES&lt;/code&gt; parameter).</source>
          <target state="translated">&lt;code&gt;RULES&lt;/code&gt; 는 변환 규칙 목록이 포함 된 파일의 기본 이름입니다. 이 파일은 &lt;code&gt;$SHAREDIR/tsearch_data/&lt;/code&gt; 저장해야합니다 (여기서 &lt;code&gt;$SHAREDIR&lt;/code&gt; 은 PostgreSQL 설치의 공유 데이터 디렉토리를 의미합니다). 이름은 &lt;code&gt;.rules&lt;/code&gt; 로 끝나야합니다 ( &lt;code&gt;RULES&lt;/code&gt; 매개 변수에 포함되지 않음 ).</target>
        </trans-unit>
        <trans-unit id="324247d93372acaf03b610aa3d42bf92c32f6024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAVEPOINT&lt;/code&gt; establishes a new savepoint within the current transaction.</source>
          <target state="translated">&lt;code&gt;SAVEPOINT&lt;/code&gt; 는 현재 트랜잭션 내에서 새 저장 점을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="bfbf2807539ae0813366e09ff388f6c9acfb2660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAVEPOINT&lt;/code&gt;, &lt;code&gt;RELEASE&lt;/code&gt;, &lt;code&gt;ROLLBACK TO SAVEPOINT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SAVEPOINT&lt;/code&gt; , &lt;code&gt;RELEASE&lt;/code&gt; , &lt;code&gt;ROLLBACK TO SAVEPOINT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d43f579f3710a57f536f558865a0ee4364a7b527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLL&lt;/code&gt; specifies that the cursor can be used to retrieve rows in a nonsequential fashion (e.g., backward). Depending upon the complexity of the query's execution plan, specifying &lt;code&gt;SCROLL&lt;/code&gt; might impose a performance penalty on the query's execution time. &lt;code&gt;NO SCROLL&lt;/code&gt; specifies that the cursor cannot be used to retrieve rows in a nonsequential fashion. The default is to allow scrolling in some cases; this is not the same as specifying &lt;code&gt;SCROLL&lt;/code&gt;. See &lt;a href=&quot;sql-declare#SQL-DECLARE-NOTES&quot;&gt;Notes&lt;/a&gt; below for details.</source>
          <target state="translated">&lt;code&gt;SCROLL&lt;/code&gt; 은 커서를 사용하여 비 순차적 방식 (예 : 뒤로)으로 행을 검색 할 수 있음을 지정합니다. 쿼리 실행 계획의 복잡성에 따라 &lt;code&gt;SCROLL&lt;/code&gt; 을 지정 하면 쿼리 실행 시간에 성능이 저하 될 수 있습니다. &lt;code&gt;NO SCROLL&lt;/code&gt; 은 커서를 비 순차 방식으로 행을 검색하는 데 사용할 수 없음을 지정합니다. 기본값은 경우에 따라 스크롤을 허용하는 것입니다. 이것은 &lt;code&gt;SCROLL&lt;/code&gt; 지정과 동일하지 않습니다 . 자세한 내용은 아래 &lt;a href=&quot;sql-declare#SQL-DECLARE-NOTES&quot;&gt;참고를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1af7b290867c44f9ff13240e74521509957c337c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLL&lt;/code&gt; specifies that the cursor can be used to retrieve rows in a nonsequential fashion (e.g., backward). Depending upon the complexity of the query's execution plan, specifying &lt;code&gt;SCROLL&lt;/code&gt; might impose a performance penalty on the query's execution time. &lt;code&gt;NO SCROLL&lt;/code&gt; specifies that the cursor cannot be used to retrieve rows in a nonsequential fashion. The default is to allow scrolling in some cases; this is not the same as specifying &lt;code&gt;SCROLL&lt;/code&gt;. See &lt;a href=&quot;sql-declare#SQL-DECLARE-NOTES&quot;&gt;Notes&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;SCROLL&lt;/code&gt; 은 커서를 사용하여 비 순차적 방식으로 행을 검색 할 수 있도록 지정합니다 (예 : 뒤로). 쿼리 실행 계획의 복잡성에 따라 &lt;code&gt;SCROLL&lt;/code&gt; 을 지정 하면 쿼리 실행 시간에 성능이 저하 될 수 있습니다. &lt;code&gt;NO SCROLL&lt;/code&gt; 은 커서를 사용하여 비 순차적으로 행을 검색 할 수 없도록 지정합니다. 어떤 경우에는 기본적으로 스크롤이 허용됩니다. 이것은 &lt;code&gt;SCROLL&lt;/code&gt; 지정과는 다릅니다 . 자세한 내용은 &lt;a href=&quot;sql-declare#SQL-DECLARE-NOTES&quot;&gt;참고&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="57f109bc9df4d1a8518fd8f2207af37e83feffac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLL&lt;/code&gt;&lt;code&gt;NO SCROLL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SCROLL&lt;/code&gt; &lt;code&gt;NO SCROLL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1221665e5c230f56af720754840fd9a06d45c99e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECURITY INVOKER&lt;/code&gt; indicates that the function is to be executed with the privileges of the user that calls it. That is the default. &lt;code&gt;SECURITY DEFINER&lt;/code&gt; specifies that the function is to be executed with the privileges of the user that owns it.</source>
          <target state="translated">&lt;code&gt;SECURITY INVOKER&lt;/code&gt; 는 함수를 호출하는 사용자의 권한으로 함수가 실행됨을 나타냅니다. 이것이 기본값입니다. &lt;code&gt;SECURITY DEFINER&lt;/code&gt; 는 기능을 소유 한 사용자의 권한으로 기능이 실행되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ef18c9b7eb10844546278a55037b3022636fdbbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECURITY INVOKER&lt;/code&gt; indicates that the procedure is to be executed with the privileges of the user that calls it. That is the default. &lt;code&gt;SECURITY DEFINER&lt;/code&gt; specifies that the procedure is to be executed with the privileges of the user that owns it.</source>
          <target state="translated">&lt;code&gt;SECURITY INVOKER&lt;/code&gt; 는 프로 시저를 호출하는 사용자의 권한으로 프로 시저가 실행됨을 나타냅니다. 이것이 기본값입니다. &lt;code&gt;SECURITY DEFINER&lt;/code&gt; 는 프로 시저를 소유 한 사용자의 권한으로 프로 시저를 실행하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9d966c23b812e6650495cbc08718461310e419f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECURITY LABEL&lt;/code&gt; applies a security label to a database object. An arbitrary number of security labels, one per label provider, can be associated with a given database object. Label providers are loadable modules which register themselves by using the function &lt;code&gt;register_label_provider&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SECURITY LABEL&lt;/code&gt; 은 데이터베이스 레이블에 보안 레이블을 적용합니다. 레이블 제공자 당 하나씩 임의의 수의 보안 레이블을 지정된 데이터베이스 오브젝트와 연관시킬 수 있습니다. 라벨 제공자는 함수를 사용하여 자신을 등록로드 가능한 모듈이다 &lt;code&gt;register_label_provider&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="926baa3779b770be1fbdc2405b1919988f85bdc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT ... FOR SHARE | UPDATE&lt;/code&gt;, because row locks cannot be taken without updating the underlying data files.</source>
          <target state="translated">&lt;code&gt;SELECT ... FOR SHARE | UPDATE&lt;/code&gt; 기본 데이터 파일을 업데이트하지 않으면 행 잠금을 수행 할 수 없으므로 UPDATE</target>
        </trans-unit>
        <trans-unit id="5ffaac5980f225f9b9eed0981c50e6d635ffac0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT DISTINCT ON ( expression [, ...] )&lt;/code&gt; keeps only the first row of each set of rows where the given expressions evaluate to equal. The &lt;code&gt;DISTINCT ON&lt;/code&gt; expressions are interpreted using the same rules as for &lt;code&gt;ORDER BY&lt;/code&gt; (see above). Note that the &amp;ldquo;first row&amp;rdquo; of each set is unpredictable unless &lt;code&gt;ORDER BY&lt;/code&gt; is used to ensure that the desired row appears first. For example:</source>
          <target state="translated">&lt;code&gt;SELECT DISTINCT ON ( expression [, ...] )&lt;/code&gt; 은 주어진 표현식이 동일한 것으로 평가되는 각 행 세트의 첫 번째 행만 유지합니다. &lt;code&gt;DISTINCT ON&lt;/code&gt; 의 표현식과 동일한 규칙을 사용하여 해석되는 &lt;code&gt;ORDER BY&lt;/code&gt; 를 (위 참조). &lt;code&gt;ORDER BY&lt;/code&gt; 를 사용하여 원하는 행을 먼저 표시 하지 않으면 각 세트의 &quot;첫 번째 행&quot;을 예측할 수 없습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="16b80756221858126f9e45407672c5ece1513bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT DISTINCT&lt;/code&gt; eliminates duplicate rows from the result. &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; eliminates rows that match on all the specified expressions. &lt;code&gt;SELECT ALL&lt;/code&gt; (the default) will return all candidate rows, including duplicates. (See &lt;a href=&quot;sql-select#SQL-DISTINCT&quot;&gt;&lt;code&gt;DISTINCT&lt;/code&gt; Clause&lt;/a&gt; below.)</source>
          <target state="translated">&lt;code&gt;SELECT DISTINCT&lt;/code&gt; 는 결과에서 중복 행을 제거합니다. &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; 은 지정된 모든 표현식에서 일치하는 행을 제거합니다. &lt;code&gt;SELECT ALL&lt;/code&gt; (기본값)은 중복을 포함하여 모든 후보 행을 리턴합니다. (아래의 &lt;a href=&quot;sql-select#SQL-DISTINCT&quot;&gt; &lt;code&gt;DISTINCT&lt;/code&gt; 조항을&lt;/a&gt; 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="1a9c6f746b253e26b8af8b9a01d252e815e19137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT DISTINCT&lt;/code&gt; eliminates duplicate rows from the result. &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; eliminates rows that match on all the specified expressions. &lt;code&gt;SELECT ALL&lt;/code&gt; (the default) will return all candidate rows, including duplicates. (See &lt;a href=&quot;sql-select#SQL-DISTINCT&quot;&gt;DISTINCT Clause&lt;/a&gt; below.)</source>
          <target state="translated">&lt;code&gt;SELECT DISTINCT&lt;/code&gt; eliminates duplicate rows from the result. &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; eliminates rows that match on all the specified expressions. &lt;code&gt;SELECT ALL&lt;/code&gt; (the default) will return all candidate rows, including duplicates. (See &lt;a href=&quot;sql-select#SQL-DISTINCT&quot;&gt;DISTINCT Clause&lt;/a&gt; below.)</target>
        </trans-unit>
        <trans-unit id="c6e3724b483edeb6f561971fb5a2ae2c6eda9d44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT INTO&lt;/code&gt; creates a new table and fills it with data computed by a query. The data is not returned to the client, as it is with a normal &lt;code&gt;SELECT&lt;/code&gt;. The new table's columns have the names and data types associated with the output columns of the &lt;code&gt;SELECT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SELECT INTO&lt;/code&gt; 는 새 테이블을 작성하고 쿼리로 계산 된 데이터로 채 웁니다. 데이터는 일반 &lt;code&gt;SELECT&lt;/code&gt; 와 같이 클라이언트에 반환되지 않습니다 . 새 테이블의 열에는 &lt;code&gt;SELECT&lt;/code&gt; 의 출력 열과 연관된 이름 및 데이터 유형이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7955d5eee2bf312184e70b12d20f26aaae061057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT&lt;/code&gt; List</source>
          <target state="translated">&lt;code&gt;SELECT&lt;/code&gt; 리스트 선택</target>
        </trans-unit>
        <trans-unit id="2bdaba83198640ca087510f2b2e283b4b7f020be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT&lt;/code&gt; does not modify any rows so you cannot create &lt;code&gt;SELECT&lt;/code&gt; triggers. Rules and views may provide workable solutions to problems that seem to need &lt;code&gt;SELECT&lt;/code&gt; triggers.</source>
          <target state="translated">&lt;code&gt;SELECT&lt;/code&gt; 는 행을 수정하지 않으므로 &lt;code&gt;SELECT&lt;/code&gt; 트리거를 만들 수 없습니다 . 규칙과 뷰는 &lt;code&gt;SELECT&lt;/code&gt; 트리거 가 필요한 것으로 보이는 문제에 대한 실용적인 솔루션을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0fc16ca05c37581a474c60cd8beddbddff18cc74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT&lt;/code&gt; retrieves rows from zero or more tables. The general processing of &lt;code&gt;SELECT&lt;/code&gt; is as follows:</source>
          <target state="translated">&lt;code&gt;SELECT&lt;/code&gt; 는 0 개 이상의 테이블에서 행을 검색합니다. &lt;code&gt;SELECT&lt;/code&gt; 의 일반적인 처리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="891d861010fc633299057d73d15850426fcc03c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT&lt;/code&gt;&lt;code&gt;INSERT&lt;/code&gt;&lt;code&gt;UPDATE&lt;/code&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;code&gt;TRUNCATE&lt;/code&gt;&lt;code&gt;REFERENCES&lt;/code&gt;&lt;code&gt;TRIGGER&lt;/code&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;code&gt;CONNECT&lt;/code&gt;&lt;code&gt;TEMPORARY&lt;/code&gt;&lt;code&gt;EXECUTE&lt;/code&gt;&lt;code&gt;USAGE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SELECT&lt;/code&gt;&lt;code&gt;INSERT&lt;/code&gt;&lt;code&gt;UPDATE&lt;/code&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;code&gt;TRUNCATE&lt;/code&gt;&lt;code&gt;REFERENCES&lt;/code&gt;&lt;code&gt;TRIGGER&lt;/code&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;code&gt;CONNECT&lt;/code&gt;&lt;code&gt;TEMPORARY&lt;/code&gt;&lt;code&gt;EXECUTE&lt;/code&gt;&lt;code&gt;USAGE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e43d8309b14cb0df08092a4009d77f592623a2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEND&lt;/code&gt; can be set to the name of a binary output function, or &lt;code&gt;NONE&lt;/code&gt; to remove the type's binary output function. Using this option requires superuser privilege.</source>
          <target state="translated">&lt;code&gt;SEND&lt;/code&gt; can be set to the name of a binary output function, or &lt;code&gt;NONE&lt;/code&gt; to remove the type's binary output function. Using this option requires superuser privilege.</target>
        </trans-unit>
        <trans-unit id="a97cb4f9ebfe5c40b1d3bbcc74f65eef146fd192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SERIALIZABLE&lt;/code&gt; is the default transaction isolation level in the standard. In PostgreSQL the default is ordinarily &lt;code&gt;READ COMMITTED&lt;/code&gt;, but you can change it as mentioned above.</source>
          <target state="translated">&lt;code&gt;SERIALIZABLE&lt;/code&gt; 은 표준의 기본 트랜잭션 격리 수준입니다. PostgreSQL에서 기본값은 일반적으로 &lt;code&gt;READ COMMITTED&lt;/code&gt; 이지만 위에서 언급 한대로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad11ed424de046d1ea54501c4aa105032801fa10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SERVER_VERSION_NAME&lt;/code&gt;&lt;code&gt;SERVER_VERSION_NUM&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SERVER_VERSION_NAME&lt;/code&gt;&lt;code&gt;SERVER_VERSION_NUM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5cf51e4539341a50938e9980d1b58fd71a037a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET ( attribute_option = value [, ... ] )&lt;/code&gt;&lt;code&gt;RESET ( attribute_option [, ... ] )&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SET ( attribute_option = value [, ... ] )&lt;/code&gt; &lt;code&gt;RESET ( attribute_option [, ... ] )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c436b0d4e3743ccf64ee605de8160214368e8c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET ( view_option_name [= view_option_value] [, ... ] )&lt;/code&gt;&lt;code&gt;RESET ( view_option_name [, ... ] )&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SET ( view_option_name [= view_option_value] [, ... ] )&lt;/code&gt; &lt;code&gt;RESET ( view_option_name [, ... ] )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12fbf3e8619f61d9a38376c5030b22b220510fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET CONSTRAINTS&lt;/code&gt; sets the behavior of constraint checking within the current transaction. &lt;code&gt;IMMEDIATE&lt;/code&gt; constraints are checked at the end of each statement. &lt;code&gt;DEFERRED&lt;/code&gt; constraints are not checked until transaction commit. Each constraint has its own &lt;code&gt;IMMEDIATE&lt;/code&gt; or &lt;code&gt;DEFERRED&lt;/code&gt; mode.</source>
          <target state="translated">&lt;code&gt;SET CONSTRAINTS&lt;/code&gt; 는 현재 트랜잭션 내에서 제약 조건 검사 동작을 설정합니다. &lt;code&gt;IMMEDIATE&lt;/code&gt; 제약 조건은 각 문의 끝에서 확인됩니다. 트랜잭션 커밋이 완료 될 때까지 &lt;code&gt;DEFERRED&lt;/code&gt; 제약 조건을 확인하지 않습니다. 각 제약 조건에는 자체 &lt;code&gt;IMMEDIATE&lt;/code&gt; 또는 &lt;code&gt;DEFERRED&lt;/code&gt; 모드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="09875f0da521ccb9eca0e6be85918ff0e8dbcaa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET CONSTRAINTS&lt;/code&gt; with a list of constraint names changes the mode of just those constraints (which must all be deferrable). Each constraint name can be schema-qualified. The current schema search path is used to find the first matching name if no schema name is specified. &lt;code&gt;SET CONSTRAINTS ALL&lt;/code&gt; changes the mode of all deferrable constraints.</source>
          <target state="translated">&lt;code&gt;SET CONSTRAINTS&lt;/code&gt; 제약 조건 이름 목록이있는 SET CONSTRAINTS 는 해당 제약 조건 (모두 연기 가능해야 함)의 모드 만 변경합니다. 각 제한 조건 이름은 스키마로 규정 될 수 있습니다. 현재 스키마 검색 경로는 스키마 이름이 지정되지 않은 경우 첫 번째 일치하는 이름을 찾는 데 사용됩니다. &lt;code&gt;SET CONSTRAINTS ALL&lt;/code&gt; 은 모든 지연 가능한 제한 조건의 모드를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="5b72617953d2268fb0af0cd69e9abcc4e029c87b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET NAMES value&lt;/code&gt; is an alias for &lt;code&gt;SET client_encoding TO value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SET NAMES value&lt;/code&gt; 은 &lt;code&gt;SET client_encoding TO value&lt;/code&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="cf41734e4efa36d861f96689195c8b730f7f3dc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET NOT NULL&lt;/code&gt; may only be applied to a column provided none of the records in the table contain a &lt;code&gt;NULL&lt;/code&gt; value for the column. Ordinarily this is checked during the &lt;code&gt;ALTER TABLE&lt;/code&gt; by scanning the entire table; however, if a valid &lt;code&gt;CHECK&lt;/code&gt; constraint is found which proves no &lt;code&gt;NULL&lt;/code&gt; can exist, then the table scan is skipped.</source>
          <target state="translated">&lt;code&gt;SET NOT NULL&lt;/code&gt; may only be applied to a column provided none of the records in the table contain a &lt;code&gt;NULL&lt;/code&gt; value for the column. Ordinarily this is checked during the &lt;code&gt;ALTER TABLE&lt;/code&gt; by scanning the entire table; however, if a valid &lt;code&gt;CHECK&lt;/code&gt; constraint is found which proves no &lt;code&gt;NULL&lt;/code&gt; can exist, then the table scan is skipped.</target>
        </trans-unit>
        <trans-unit id="6907355995e9cb355a2f1bb89b7a1ab2c77b718b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET NOT NULL&lt;/code&gt; may only be applied to a column providing none of the records in the table contain a &lt;code&gt;NULL&lt;/code&gt; value for the column. Ordinarily this is checked during the &lt;code&gt;ALTER TABLE&lt;/code&gt; by scanning the entire table; however, if a valid &lt;code&gt;CHECK&lt;/code&gt; constraint is found which proves no &lt;code&gt;NULL&lt;/code&gt; can exist, then the table scan is skipped.</source>
          <target state="translated">&lt;code&gt;SET NOT NULL&lt;/code&gt; 은 테이블의 레코드에 컬럼에 대한 &lt;code&gt;NULL&lt;/code&gt; 값이 없는 경우 컬럼에만 적용 할 수 있습니다 . 일반적으로 이것은 &lt;code&gt;ALTER TABLE&lt;/code&gt; 동안 전체 테이블을 스캔하여 점검됩니다 . 그러나 &lt;code&gt;NULL&lt;/code&gt; 이 존재할 수 없음을 증명 하는 유효한 &lt;code&gt;CHECK&lt;/code&gt; 제한 조건이 발견 되면 테이블 스캔을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="1ca8775771890cfd6c3ce4af297219c271e7d9aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET ROLE&lt;/code&gt; cannot be used within a &lt;code&gt;SECURITY DEFINER&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;SET ROLE&lt;/code&gt; &lt;code&gt;SECURITY DEFINER&lt;/code&gt; 기능 내에서는 SET ROLE을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d7cb7d772f031c40db318be76f73a6ad5c03c4de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET ROLE&lt;/code&gt; does not process session variables as specified by the role's &lt;a href=&quot;sql-alterrole&quot;&gt;ALTER ROLE&lt;/a&gt; settings; this only happens during login.</source>
          <target state="translated">&lt;code&gt;SET ROLE&lt;/code&gt; 은 역할의 &lt;a href=&quot;sql-alterrole&quot;&gt;ALTER ROLE&lt;/a&gt; 설정에 지정된 세션 변수를 처리하지 않습니다 . 이것은 로그인 중에 만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1fa80f41aec9a817985766e25245d183e618ebe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET ROLE&lt;/code&gt; has effects comparable to &lt;a href=&quot;sql-set-session-authorization&quot;&gt;SET SESSION AUTHORIZATION&lt;/a&gt;, but the privilege checks involved are quite different. Also, &lt;code&gt;SET SESSION AUTHORIZATION&lt;/code&gt; determines which roles are allowable for later &lt;code&gt;SET ROLE&lt;/code&gt; commands, whereas changing roles with &lt;code&gt;SET ROLE&lt;/code&gt; does not change the set of roles allowed to a later &lt;code&gt;SET ROLE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SET ROLE&lt;/code&gt; 은 &lt;a href=&quot;sql-set-session-authorization&quot;&gt;SET SESSION AUTHORIZATION&lt;/a&gt; 과 비슷한 효과를 갖지만 관련된 권한 검사는 상당히 다릅니다. 또한 &lt;code&gt;SET SESSION AUTHORIZATION&lt;/code&gt; 은 이후 &lt;code&gt;SET ROLE&lt;/code&gt; 명령에 허용되는 역할을 결정 하지만 &lt;code&gt;SET ROLE&lt;/code&gt; 로 역할을 변경해도 이후 &lt;code&gt;SET ROLE&lt;/code&gt; 에 허용 된 역할 세트는 변경되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="624238adac95e6fcb219ed1bb2f52c350b42a1f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET SCHEMA 'value'&lt;/code&gt; is an alias for &lt;code&gt;SET search_path TO value&lt;/code&gt;. Only one schema can be specified using this syntax.</source>
          <target state="translated">&lt;code&gt;SET SCHEMA 'value'&lt;/code&gt; 는 &lt;code&gt;SET search_path TO value&lt;/code&gt; 의 별명입니다 . 이 구문을 사용하여 하나의 스키마 만 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cde0b2f82e8f3d60fe73715147eaea0e2ee79f67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET SESSION AUTHORIZATION&lt;/code&gt; cannot be used within a &lt;code&gt;SECURITY DEFINER&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;SET SESSION AUTHORIZATION&lt;/code&gt; 은 &lt;code&gt;SECURITY DEFINER&lt;/code&gt; 기능 내에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="08e3d14444c4ca1dbe9aa0852c204d05d1b307be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET STATISTICS&lt;/code&gt; acquires a &lt;code&gt;SHARE UPDATE EXCLUSIVE&lt;/code&gt; lock.</source>
          <target state="translated">&lt;code&gt;SET STATISTICS&lt;/code&gt; 는 &lt;code&gt;SHARE UPDATE EXCLUSIVE&lt;/code&gt; 잠금을 획득합니다 .</target>
        </trans-unit>
        <trans-unit id="94a42bef135c72101f7a8c9e95a45a5d8381a6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET TIME ZONE value&lt;/code&gt; is an alias for &lt;code&gt;SET timezone TO value&lt;/code&gt;. The syntax &lt;code&gt;SET TIME ZONE&lt;/code&gt; allows special syntax for the time zone specification. Here are examples of valid values:</source>
          <target state="translated">&lt;code&gt;SET TIME ZONE value&lt;/code&gt; 은 &lt;code&gt;SET timezone TO value&lt;/code&gt; 의 별명입니다 . 구문 &lt;code&gt;SET TIME ZONE&lt;/code&gt; 은 시간대 지정을위한 특별한 구문을 할 수 있습니다. 유효한 값의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae37570be3cf840f45098deeb8573987dac0dd26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET TIME ZONE&lt;/code&gt; extends syntax defined in the SQL standard. The standard allows only numeric time zone offsets while PostgreSQL allows more flexible time-zone specifications. All other &lt;code&gt;SET&lt;/code&gt; features are PostgreSQL extensions.</source>
          <target state="translated">&lt;code&gt;SET TIME ZONE&lt;/code&gt; 은 SQL 표준에 정의 된 구문을 확장합니다. 표준은 숫자 시간대 오프셋 만 허용하고 PostgreSQL은보다 유연한 시간대 지정을 허용합니다. 다른 모든 &lt;code&gt;SET&lt;/code&gt; 기능은 PostgreSQL 확장입니다.</target>
        </trans-unit>
        <trans-unit id="2f6442b82abffaf15f31026cd343f86dd22f3c71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET TRANSACTION READ WRITE&lt;/code&gt;, &lt;code&gt;SET SESSION CHARACTERISTICS AS TRANSACTION READ WRITE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SET TRANSACTION READ WRITE&lt;/code&gt; 로 &lt;code&gt;SET SESSION CHARACTERISTICS AS TRANSACTION READ WRITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="848cf382fac5f6808e4445703cdc2fecc761230b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET sequence_option&lt;/code&gt;&lt;code&gt;RESTART&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SET sequence_option&lt;/code&gt; &lt;code&gt;RESTART&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc69a8c722cb50ce084422ecdd44b69d2048c693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET&lt;/code&gt;/&lt;code&gt;DROP DEFAULT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SET&lt;/code&gt; / &lt;code&gt;DROP DEFAULT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13520b8fdd0c8d64755254ebcbc36c7c59ff4b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET&lt;/code&gt;/&lt;code&gt;DROP NOT NULL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SET&lt;/code&gt; / &lt;code&gt;DROP NOT NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93a189551cc62e26d5ac136a966d9567e9af5ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHARE UPDATE EXCLUSIVE&lt;/code&gt; lock will be taken for fillfactor, toast and autovacuum storage parameters, as well as the following planner related parameters: &lt;code&gt;effective_io_concurrency&lt;/code&gt;, &lt;code&gt;parallel_workers&lt;/code&gt;, &lt;code&gt;seq_page_cost&lt;/code&gt;, &lt;code&gt;random_page_cost&lt;/code&gt;, &lt;code&gt;n_distinct&lt;/code&gt; and &lt;code&gt;n_distinct_inherited&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SHARE UPDATE EXCLUSIVE&lt;/code&gt; 의 : 잠금 FILLFACTOR, 토스트, 자동 진공 저장 매개 변수뿐만 아니라 다음과 같은 계획 관련 매개 변수에 대한 이동합니다 &lt;code&gt;effective_io_concurrency&lt;/code&gt; , &lt;code&gt;parallel_workers&lt;/code&gt; , &lt;code&gt;seq_page_cost&lt;/code&gt; , &lt;code&gt;random_page_cost&lt;/code&gt; , &lt;code&gt;n_distinct&lt;/code&gt; 및 &lt;code&gt;n_distinct_inherited&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d583a4f505cac2874e7ae3e5dbaebd73b1eaff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHARE UPDATE EXCLUSIVE&lt;/code&gt; lock will be taken for fillfactor, toast and autovacuum storage parameters, as well as the planner parameter &lt;code&gt;parallel_workers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SHARE UPDATE EXCLUSIVE&lt;/code&gt; lock will be taken for fillfactor, toast and autovacuum storage parameters, as well as the planner parameter &lt;code&gt;parallel_workers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b581297f6514a5dab959adf4dd6075811eebf08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHARED_DEPENDENCY_ACL&lt;/code&gt; (&lt;code&gt;a&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;SHARED_DEPENDENCY_ACL&lt;/code&gt; ( &lt;code&gt;a&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="95c0d4b15e9a091e7e48f83671201ea11daa50cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHARED_DEPENDENCY_OWNER&lt;/code&gt; (&lt;code&gt;o&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;SHARED_DEPENDENCY_OWNER&lt;/code&gt; ( &lt;code&gt;o&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b99a742632f23a751a402ff8f6befb452376385f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHARED_DEPENDENCY_PIN&lt;/code&gt; (&lt;code&gt;p&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;SHARED_DEPENDENCY_PIN&lt;/code&gt; ( &lt;code&gt;p&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8d9a6eaffafaf1c914fd8519ba212f470d702e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHARED_DEPENDENCY_POLICY&lt;/code&gt; (&lt;code&gt;r&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;SHARED_DEPENDENCY_POLICY&lt;/code&gt; ( &lt;code&gt;r&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cd70ad588dc798059e0b46ac26a73b93d21b244b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHMALL&lt;/code&gt; is measured in 4 kB pages on this platform.</source>
          <target state="translated">&lt;code&gt;SHMALL&lt;/code&gt; 은이 플랫폼에서 4kB 페이지로 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="5a4be23ffabae97ee4775b6a62ac03df1c8f966b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHMMAX&lt;/code&gt; can only be set to a multiple of 4096.</source>
          <target state="translated">&lt;code&gt;SHMMAX&lt;/code&gt; can only be set to a multiple of 4096.</target>
        </trans-unit>
        <trans-unit id="87b2aba82a035bbafd5bd28ab477add56c88af68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHOW&lt;/code&gt; will display the current setting of run-time parameters. These variables can be set using the &lt;code&gt;SET&lt;/code&gt; statement, by editing the &lt;code&gt;postgresql.conf&lt;/code&gt; configuration file, through the &lt;code&gt;PGOPTIONS&lt;/code&gt; environmental variable (when using libpq or a libpq-based application), or through command-line flags when starting the &lt;code&gt;postgres&lt;/code&gt; server. See &lt;a href=&quot;https://www.postgresql.org/docs/12/runtime-config.html&quot;&gt;Chapter 19&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;SHOW&lt;/code&gt; 는 현재 런타임 파라미터 설정을 표시합니다. &lt;code&gt;postgresql.conf&lt;/code&gt; 구성 파일 을 편집하거나 &lt;code&gt;PGOPTIONS&lt;/code&gt; 환경 변수 (libpq 또는 libpq 기반 응용 프로그램을 사용하는 경우)를 통해 또는 &lt;code&gt;postgres&lt;/code&gt; 서버를 시작할 때 명령 줄 플래그를 통해 &lt;code&gt;SET&lt;/code&gt; 문을 사용하여 이러한 변수를 설정할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;https://www.postgresql.org/docs/12/runtime-config.html&quot;&gt;19 장&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d750500b22049437bfbde8785d4c99845d5a2319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHOW&lt;/code&gt; will display the current setting of run-time parameters. These variables can be set using the &lt;code&gt;SET&lt;/code&gt; statement, by editing the &lt;code&gt;postgresql.conf&lt;/code&gt; configuration file, through the &lt;code&gt;PGOPTIONS&lt;/code&gt; environmental variable (when using libpq or a libpq-based application), or through command-line flags when starting the &lt;code&gt;postgres&lt;/code&gt; server. See &lt;a href=&quot;https://www.postgresql.org/docs/13/runtime-config.html&quot;&gt;Chapter 19&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;SHOW&lt;/code&gt; will display the current setting of run-time parameters. These variables can be set using the &lt;code&gt;SET&lt;/code&gt; statement, by editing the &lt;code&gt;postgresql.conf&lt;/code&gt; configuration file, through the &lt;code&gt;PGOPTIONS&lt;/code&gt; environmental variable (when using libpq or a libpq-based application), or through command-line flags when starting the &lt;code&gt;postgres&lt;/code&gt; server. See &lt;a href=&quot;https://www.postgresql.org/docs/13/runtime-config.html&quot;&gt;Chapter 19&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="9e675622dcbb41a6be8062e395c0170ed66ff7df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SOME&lt;/code&gt; is a synonym for &lt;code&gt;ANY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SOME&lt;/code&gt; 는 &lt;code&gt;ANY&lt;/code&gt; 와 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="532e3b42f95de518c131a4f06f7956694f7f8967" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SOME&lt;/code&gt; is a synonym for &lt;code&gt;ANY&lt;/code&gt;. &lt;code&gt;IN&lt;/code&gt; is equivalent to &lt;code&gt;= ANY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SOME&lt;/code&gt; 는 &lt;code&gt;ANY&lt;/code&gt; 와 동의어입니다 . &lt;code&gt;IN&lt;/code&gt; 은 &lt;code&gt;= ANY&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d9f73873633df37af2d16880c68cade4baeda01a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SP&lt;/code&gt; suffix</source>
          <target state="translated">&lt;code&gt;SP&lt;/code&gt; 접미사</target>
        </trans-unit>
        <trans-unit id="5f7c4eb654a3c5dc286611b775716d82ceaca7f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSSS&lt;/code&gt;, &lt;code&gt;SSSSS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SSSS&lt;/code&gt; , &lt;code&gt;SSSSS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4491e6fc341e9e33105aa4e732fa0718bd120d82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STABLE&lt;/code&gt; indicates that the function cannot modify the database, and that within a single table scan it will consistently return the same result for the same argument values, but that its result could change across SQL statements. This is the appropriate selection for functions whose results depend on database lookups, parameter variables (such as the current time zone), etc. (It is inappropriate for &lt;code&gt;AFTER&lt;/code&gt; triggers that wish to query rows modified by the current command.) Also note that the &lt;code&gt;current_timestamp&lt;/code&gt; family of functions qualify as stable, since their values do not change within a transaction.</source>
          <target state="translated">&lt;code&gt;STABLE&lt;/code&gt; 은 함수가 데이터베이스를 수정할 수 없으며 단일 테이블 스캔에서 동일한 인수 값에 대해 동일한 결과를 일관되게 리턴하지만 결과는 SQL 문에서 변경 될 수 있음을 나타냅니다. 이는 데이터베이스 조회, 매개 변수 (예 : 현재 시간대) 등에 따라 결과가 달라지는 함수에 적합한 선택입니다. ( 현재 명령으로 수정 된 행을 쿼리하려는 &lt;code&gt;AFTER&lt;/code&gt; 트리거 에는 적합하지 않습니다 .) &lt;code&gt;current_timestamp&lt;/code&gt; 함수 계열은 트랜잭션 내에서 값이 변경되지 않으므로 안정적인 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a4f846a23644e9a7f22bf262e5406e911557e5b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STD&lt;/code&gt; is the zone abbreviation to be used for standard time.</source>
          <target state="translated">&lt;code&gt;STD&lt;/code&gt; is the zone abbreviation to be used for standard time.</target>
        </trans-unit>
        <trans-unit id="cf0ea1b97ee990d9297316eb46dbf401cf71e2e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STORAGE&lt;/code&gt; can be set to &lt;code&gt;plain&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt;, &lt;code&gt;external&lt;/code&gt;, or &lt;code&gt;main&lt;/code&gt; (see &lt;a href=&quot;storage-toast&quot;&gt;Section 68.2&lt;/a&gt; for more information about what these mean). However, changing from &lt;code&gt;plain&lt;/code&gt; to another setting requires superuser privilege (because it requires that the type's C functions all be TOAST-ready), and changing to &lt;code&gt;plain&lt;/code&gt; from another setting is not allowed at all (since the type may already have TOASTed values present in the database). Note that changing this option doesn't by itself change any stored data, it just sets the default TOAST strategy to be used for table columns created in the future. See &lt;a href=&quot;sql-altertable&quot;&gt;ALTER TABLE&lt;/a&gt; to change the TOAST strategy for existing table columns.</source>
          <target state="translated">&lt;code&gt;STORAGE&lt;/code&gt; can be set to &lt;code&gt;plain&lt;/code&gt; , &lt;code&gt;extended&lt;/code&gt; , &lt;code&gt;external&lt;/code&gt; , or &lt;code&gt;main&lt;/code&gt; (see &lt;a href=&quot;storage-toast&quot;&gt;Section 68.2&lt;/a&gt; for more information about what these mean). However, changing from &lt;code&gt;plain&lt;/code&gt; to another setting requires superuser privilege (because it requires that the type's C functions all be TOAST-ready), and changing to &lt;code&gt;plain&lt;/code&gt; from another setting is not allowed at all (since the type may already have TOASTed values present in the database). Note that changing this option doesn't by itself change any stored data, it just sets the default TOAST strategy to be used for table columns created in the future. See &lt;a href=&quot;sql-altertable&quot;&gt;ALTER TABLE&lt;/a&gt; to change the TOAST strategy for existing table columns.</target>
        </trans-unit>
        <trans-unit id="6f7d363fb09e0f10d6b4a13d37db09e42b55f5ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STORAGE&lt;/code&gt; settings for the copied column definitions will be copied. The default behavior is to exclude &lt;code&gt;STORAGE&lt;/code&gt; settings, resulting in the copied columns in the new table having type-specific default settings. For more on &lt;code&gt;STORAGE&lt;/code&gt; settings, see &lt;a href=&quot;storage-toast&quot;&gt;Section 68.2&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;STORAGE&lt;/code&gt; 복사 된 열 정의에 대한 STORAGE 설정이 복사됩니다. 기본 동작은 &lt;code&gt;STORAGE&lt;/code&gt; 설정 을 제외 하여 새 테이블의 복사 된 열이 유형별 기본 설정을 갖도록하는 것입니다. &lt;code&gt;STORAGE&lt;/code&gt; 설정 에 대한 자세한 내용 &lt;a href=&quot;storage-toast&quot;&gt;은 68.2 절을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c565301813a126e093286693fedf37b3aa985fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUPERUSER&lt;/code&gt;&lt;code&gt;NOSUPERUSER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SUPERUSER&lt;/code&gt;&lt;code&gt;NOSUPERUSER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b2059af27f740a2c1295a56da85051f51d3d043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUPERUSER&lt;/code&gt;&lt;code&gt;NOSUPERUSER&lt;/code&gt;&lt;code&gt;CREATEDB&lt;/code&gt;&lt;code&gt;NOCREATEDB&lt;/code&gt;&lt;code&gt;CREATEROLE&lt;/code&gt;&lt;code&gt;NOCREATEROLE&lt;/code&gt;&lt;code&gt;INHERIT&lt;/code&gt;&lt;code&gt;NOINHERIT&lt;/code&gt;&lt;code&gt;LOGIN&lt;/code&gt;&lt;code&gt;NOLOGIN&lt;/code&gt;&lt;code&gt;REPLICATION&lt;/code&gt;&lt;code&gt;NOREPLICATION&lt;/code&gt;&lt;code&gt;BYPASSRLS&lt;/code&gt;&lt;code&gt;NOBYPASSRLS&lt;/code&gt;&lt;code&gt;CONNECTION LIMIT&lt;/code&gt;&lt;code&gt;connlimit&lt;/code&gt;[ &lt;code&gt;ENCRYPTED&lt;/code&gt; ] &lt;code&gt;PASSWORD&lt;/code&gt; '&lt;code&gt;password&lt;/code&gt;'&lt;code&gt;PASSWORD NULL&lt;/code&gt;&lt;code&gt;VALID UNTIL&lt;/code&gt; '&lt;code&gt;timestamp&lt;/code&gt;'</source>
          <target state="translated">&lt;code&gt;SUPERUSER&lt;/code&gt; &lt;code&gt;NOSUPERUSER&lt;/code&gt; &lt;code&gt;CREATEDB&lt;/code&gt; &lt;code&gt;NOCREATEDB&lt;/code&gt; &lt;code&gt;CREATEROLE&lt;/code&gt; &lt;code&gt;NOCREATEROLE&lt;/code&gt; &lt;code&gt;INHERIT&lt;/code&gt; &lt;code&gt;NOINHERIT&lt;/code&gt; &lt;code&gt;LOGIN&lt;/code&gt; &lt;code&gt;NOLOGIN&lt;/code&gt; &lt;code&gt;REPLICATION&lt;/code&gt; &lt;code&gt;NOREPLICATION&lt;/code&gt; &lt;code&gt;BYPASSRLS&lt;/code&gt; &lt;code&gt;NOBYPASSRLS&lt;/code&gt; &lt;code&gt;CONNECTION LIMIT&lt;/code&gt; &lt;code&gt;connlimit&lt;/code&gt; [ &lt;code&gt;ENCRYPTED&lt;/code&gt; ] &lt;code&gt;PASSWORD&lt;/code&gt; ' &lt;code&gt;password&lt;/code&gt; ' &lt;code&gt;PASSWORD NULL&lt;/code&gt; &lt;code&gt;VALID UNTIL&lt;/code&gt; ' &lt;code&gt;timestamp&lt;/code&gt; '</target>
        </trans-unit>
        <trans-unit id="15018d72148e48680f36dc365ce23c6035de9cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUPPORT&lt;/code&gt;&lt;code&gt;support_function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SUPPORT&lt;/code&gt;&lt;code&gt;support_function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdb79cf9c18608cd6a8cfcf3893230611cbca363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SYSID&lt;/code&gt;&lt;code&gt;uid&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SYSID&lt;/code&gt;&lt;code&gt;uid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf0ca00d34dd1763f0122657797fd88b06f5b1de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SYSTEM_ROWS&lt;/code&gt; does not support the &lt;code&gt;REPEATABLE&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;SYSTEM_ROWS&lt;/code&gt; 는 &lt;code&gt;REPEATABLE&lt;/code&gt; 절을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d6ae1868cb8250475ab16f26c8c13c917f41be80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SYSTEM_TIME&lt;/code&gt; does not support the &lt;code&gt;REPEATABLE&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;SYSTEM_TIME&lt;/code&gt; 은 &lt;code&gt;REPEATABLE&lt;/code&gt; 절을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="3ec6c61c1e39e27d7131b5c8accdd4474b07028d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ShortWord&lt;/code&gt; (integer): words of this length or less will be dropped at the start and end of a headline, unless they are query terms. The default value of three eliminates common English articles.</source>
          <target state="translated">&lt;code&gt;ShortWord&lt;/code&gt; (integer): words of this length or less will be dropped at the start and end of a headline, unless they are query terms. The default value of three eliminates common English articles.</target>
        </trans-unit>
        <trans-unit id="3aa6d2d4e6b99427f5ba420e4d77c74f9237301b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ShortWord&lt;/code&gt;: words of this length or less will be dropped at the start and end of a headline. The default value of three eliminates common English articles.</source>
          <target state="translated">&lt;code&gt;ShortWord&lt;/code&gt; :이 길이 이하의 단어는 헤드 라인의 시작과 끝에서 삭제됩니다. 기본값 3은 일반적인 영어 기사를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="9d530148d9144794dee4116bd6ad55565491e6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartSel&lt;/code&gt;, &lt;code&gt;StopSel&lt;/code&gt; (strings): the strings with which to delimit query words appearing in the document, to distinguish them from other excerpted words. The default values are &amp;ldquo;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;&amp;lt;/b&amp;gt;&lt;/code&gt;&amp;rdquo;, which can be suitable for HTML output.</source>
          <target state="translated">&lt;code&gt;StartSel&lt;/code&gt; , &lt;code&gt;StopSel&lt;/code&gt; (strings): the strings with which to delimit query words appearing in the document, to distinguish them from other excerpted words. The default values are &amp;ldquo; &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; &amp;rdquo; and &amp;ldquo; &lt;code&gt;&amp;lt;/b&amp;gt;&lt;/code&gt; &amp;rdquo;, which can be suitable for HTML output.</target>
        </trans-unit>
        <trans-unit id="b9f7381ffac68f00bfe210e7df299bad65a89a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartSel&lt;/code&gt;, &lt;code&gt;StopSel&lt;/code&gt;: the strings with which to delimit query words appearing in the document, to distinguish them from other excerpted words. You must double-quote these strings if they contain spaces or commas.</source>
          <target state="translated">&lt;code&gt;StartSel&lt;/code&gt; , &lt;code&gt;StopSel&lt;/code&gt; : 문서에 나타나는 쿼리 단어를 구분하여 다른 발췌 단어와 구별하는 문자열입니다. 공백이나 쉼표가 포함 된 문자열은 큰 따옴표로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="4ac366351a2fac2ba0f0d459a23eb6f26bc6bf32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TABLE&lt;/code&gt; (and table-like objects)</source>
          <target state="translated">&lt;code&gt;TABLE&lt;/code&gt; (및 테이블과 같은 객체)</target>
        </trans-unit>
        <trans-unit id="08b2eda27106e9c4cf7d15d2c50872320eeba764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TABLE&lt;/code&gt; Command</source>
          <target state="translated">&lt;code&gt;TABLE&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="9790e5c027f1c75435ba57bb0921296e62cb82c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TABLE&lt;/code&gt;, table column</source>
          <target state="translated">&lt;code&gt;TABLE&lt;/code&gt; , 테이블 열</target>
        </trans-unit>
        <trans-unit id="9ef5d4e039fbc0adf20ebeff7ab003229f0b3021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TABLESAMPLE&lt;/code&gt; Clause Restrictions</source>
          <target state="translated">&lt;code&gt;TABLESAMPLE&lt;/code&gt; 조항 제한 사항</target>
        </trans-unit>
        <trans-unit id="0219854354c570a1e3e102c431082ffb4649e4bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TEMPORARY&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TEMPORARY&lt;/code&gt; 또는 &lt;code&gt;TEMP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27f3f7313a02252ec4462a3981ffe4dbcc976062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TH&lt;/code&gt; does not convert values less than zero and does not convert fractional numbers.</source>
          <target state="translated">&lt;code&gt;TH&lt;/code&gt; 는 0보다 작은 값을 변환하지 않으며 소수를 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0cf48504b7371a777f4b70ffb55d0bafc17f14e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TH&lt;/code&gt; or &lt;code&gt;th&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TH&lt;/code&gt; 또는 &lt;code&gt;th&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f453a25c11eabaa53b406db15644550dc0022ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TH&lt;/code&gt; suffix</source>
          <target state="translated">&lt;code&gt;TH&lt;/code&gt; 접미사</target>
        </trans-unit>
        <trans-unit id="0f1cadcf798089a8527b021c54aacfa80b877df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TM&lt;/code&gt; does not include trailing blanks. &lt;code&gt;to_timestamp&lt;/code&gt; and &lt;code&gt;to_date&lt;/code&gt; ignore the &lt;code&gt;TM&lt;/code&gt; modifier.</source>
          <target state="translated">&lt;code&gt;TM&lt;/code&gt; 은 후행 공백을 포함하지 않습니다. &lt;code&gt;to_timestamp&lt;/code&gt; 및 &lt;code&gt;to_date&lt;/code&gt; 는 &lt;code&gt;TM&lt;/code&gt; 수정자를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="8300d89cf05c9cfc5ffba93fad676c1d7d058e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TM&lt;/code&gt; prefix</source>
          <target state="translated">&lt;code&gt;TM&lt;/code&gt; 접두사</target>
        </trans-unit>
        <trans-unit id="921f57ad4709ab377ce7c80be6f429e0f6b35694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TM&lt;/code&gt; suppresses trailing blanks whether or not &lt;code&gt;FM&lt;/code&gt; is specified.</source>
          <target state="translated">&lt;code&gt;TM&lt;/code&gt; suppresses trailing blanks whether or not &lt;code&gt;FM&lt;/code&gt; is specified.</target>
        </trans-unit>
        <trans-unit id="b682ec1ac36e787176afec8968411deb5b4316db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TOAST_TUPLE_TARGET&lt;/code&gt; can be adjusted for each table using &lt;a href=&quot;sql-altertable&quot;&gt;&lt;code&gt;ALTER TABLE ... SET (toast_tuple_target = N)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;TOAST_TUPLE_TARGET&lt;/code&gt; &lt;a href=&quot;sql-altertable&quot;&gt; &lt;code&gt;ALTER TABLE ... SET (toast_tuple_target = N)&lt;/code&gt; &lt;/a&gt; 사용하여 각 테이블에 대해 TOAST_TUPLE_TARGET 을 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af4e321e4db41c21c3ad9f12d797fb9118e7c0bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; acquires an &lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; lock on each table it operates on, which blocks all other concurrent operations on the table. When &lt;code&gt;RESTART IDENTITY&lt;/code&gt; is specified, any sequences that are to be restarted are likewise locked exclusively. If concurrent access to a table is required, then the &lt;code&gt;DELETE&lt;/code&gt; command should be used instead.</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 는 작동하는 각 테이블에서 &lt;code&gt;ACCESS EXCLUSIVE&lt;/code&gt; 잠금을 획득하여 테이블의 다른 모든 동시 작업을 차단합니다. &lt;code&gt;RESTART IDENTITY&lt;/code&gt; 가 지정 되면 재시작 될 시퀀스도 마찬가지로 독점적으로 잠 깁니다. 테이블에 대한 동시 액세스가 필요한 경우 &lt;code&gt;DELETE&lt;/code&gt; 명령을 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f737dd14c7b962708b71f93a19eaeb10a93b2f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; cannot be used on a table that has foreign-key references from other tables, unless all such tables are also truncated in the same command. Checking validity in such cases would require table scans, and the whole point is not to do one. The &lt;code&gt;CASCADE&lt;/code&gt; option can be used to automatically include all dependent tables &amp;mdash; but be very careful when using this option, or else you might lose data you did not intend to!</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 다른 테이블에서 외래 키 참조가있는 테이블에서는 TRUNCATE를 사용할 수 없습니다. 이러한 테이블도 모두 같은 명령으로 잘리지 않습니다. 이러한 경우 유효성을 검사하려면 테이블 스캔이 필요하며 요점은 전체를 스캔하지 않는 것입니다. &lt;code&gt;CASCADE&lt;/code&gt; 의 옵션이 자동으로 사용되는 모든 종속 테이블을 포함 할 수있다 - 그러나이 옵션을 사용할 때 매우 조심, 그렇지 않으면 당신은 당신이 의도하지 않은 데이터가 손실 될 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="436e2b61b2cfad7e4be14aff4a3a264079cc2329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; cannot be used on a table that has foreign-key references from other tables, unless all such tables are also truncated in the same command. Checking validity in such cases would require table scans, and the whole point is not to do one. The &lt;code&gt;CASCADE&lt;/code&gt; option can be used to automatically include all dependent tables &amp;mdash; but be very careful when using this option, or else you might lose data you did not intend to! Note in particular that when the table to be truncated is a partition, siblings partitions are left untouched, but cascading occurs to all referencing tables and all their partitions with no distinction.</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; cannot be used on a table that has foreign-key references from other tables, unless all such tables are also truncated in the same command. Checking validity in such cases would require table scans, and the whole point is not to do one. The &lt;code&gt;CASCADE&lt;/code&gt; option can be used to automatically include all dependent tables &amp;mdash; but be very careful when using this option, or else you might lose data you did not intend to! Note in particular that when the table to be truncated is a partition, siblings partitions are left untouched, but cascading occurs to all referencing tables and all their partitions with no distinction.</target>
        </trans-unit>
        <trans-unit id="c7249890e4bdede028186c1db675c4b99a2b527d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; has the same hazard.</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 도 같은 위험이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3d25d87b89a0cbe792c866748601db2b99989ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; is not MVCC-safe. After truncation, the table will appear empty to concurrent transactions, if they are using a snapshot taken before the truncation occurred. See &lt;a href=&quot;mvcc-caveats&quot;&gt;Section 13.5&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 는 MVCC 안전하지 않습니다. 자르기 후 자르기 전에 스냅 샷을 사용하는 경우 테이블은 동시 트랜잭션에 대해 비어있는 것으로 나타납니다. 자세한 내용 &lt;a href=&quot;mvcc-caveats&quot;&gt;은 13.5 절&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8266480b2d8f8e22961e74ef8ed7306d0a0e201d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; is not currently supported for foreign tables. This implies that if a specified table has any descendant tables that are foreign, the command will fail.</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 는 현재 외부 테이블에 대해 지원되지 않습니다. 이는 지정된 테이블에 외부의 하위 테이블이 있으면 명령이 실패 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="10c1371d53236c0e1cce9960a7226618afb726d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; is transaction-safe with respect to the data in the tables: the truncation will be safely rolled back if the surrounding transaction does not commit.</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 는 테이블의 데이터와 관련하여 트랜잭션에 안전합니다. 주변 트랜잭션이 커밋되지 않으면 잘림이 안전하게 롤백됩니다.</target>
        </trans-unit>
        <trans-unit id="b01c3d9cf95c777316dd077a19311e3eda8e95ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; quickly removes all rows from a set of tables. It has the same effect as an unqualified &lt;code&gt;DELETE&lt;/code&gt; on each table, but since it does not actually scan the tables it is faster. Furthermore, it reclaims disk space immediately, rather than requiring a subsequent &lt;code&gt;VACUUM&lt;/code&gt; operation. This is most useful on large tables.</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 는 테이블 세트에서 모든 행을 빠르게 제거합니다. 각 테이블에서 규정되지 않은 &lt;code&gt;DELETE&lt;/code&gt; 와 동일한 효과를 갖지만 실제로 테이블을 스캔하지 않기 때문에 더 빠릅니다. 또한 후속 &lt;code&gt;VACUUM&lt;/code&gt; 작업을 수행 하지 않고 디스크 공간을 즉시 회수 합니다. 큰 테이블에서 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="580fb65e8e4bf0b6b45f5eb091b0e6bd2f110337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUNCATE&lt;/code&gt; will not fire any &lt;code&gt;ON DELETE&lt;/code&gt; triggers that might exist for the tables. But it will fire &lt;code&gt;ON TRUNCATE&lt;/code&gt; triggers. If &lt;code&gt;ON TRUNCATE&lt;/code&gt; triggers are defined for any of the tables, then all &lt;code&gt;BEFORE TRUNCATE&lt;/code&gt; triggers are fired before any truncation happens, and all &lt;code&gt;AFTER TRUNCATE&lt;/code&gt; triggers are fired after the last truncation is performed and any sequences are reset. The triggers will fire in the order that the tables are to be processed (first those listed in the command, and then any that were added due to cascading).</source>
          <target state="translated">&lt;code&gt;TRUNCATE&lt;/code&gt; 는 테이블에 존재할 수 있는 &lt;code&gt;ON DELETE&lt;/code&gt; 트리거를 발생시키지 않습니다 . 그러나 &lt;code&gt;ON TRUNCATE&lt;/code&gt; 트리거 를 발생 시킵니다. 경우 &lt;code&gt;ON TRUNCATE&lt;/code&gt; 의 트리거가 테이블의에 정의 된, 모든 &lt;code&gt;BEFORE TRUNCATE&lt;/code&gt; 의 트리거는 절단이 일어나기 전에 해고, 모든 &lt;code&gt;AFTER TRUNCATE&lt;/code&gt; 마지막 절단을 수행하고 시퀀스는 리셋 후 트리거가 발사된다. 트리거는 테이블이 처리되는 순서대로 실행됩니다 (먼저 명령에 나열된 트리거와 계단식으로 추가 된 트리거).</target>
        </trans-unit>
        <trans-unit id="147a02164b3eacdfbd4dae4d52063eedaac19933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRUSTED&lt;/code&gt; specifies that the language does not grant access to data that the user would not otherwise have. If this key word is omitted when registering the language, only users with the PostgreSQL superuser privilege can use this language to create new functions.</source>
          <target state="translated">&lt;code&gt;TRUSTED&lt;/code&gt; 는 언어가 사용자에게없는 데이터에 대한 액세스 권한을 부여하지 않도록 지정합니다. 언어를 등록 할 때이 키워드를 생략하면 PostgreSQL 수퍼 유저 권한이있는 사용자 만이 언어를 사용하여 새 기능을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6eea6c2dc687c50473613fc7c156826f5b88ef8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TYPMOD_IN&lt;/code&gt; can be set to the name of a type modifier input function, or &lt;code&gt;NONE&lt;/code&gt; to remove the type's type modifier input function. Using this option requires superuser privilege.</source>
          <target state="translated">&lt;code&gt;TYPMOD_IN&lt;/code&gt; can be set to the name of a type modifier input function, or &lt;code&gt;NONE&lt;/code&gt; to remove the type's type modifier input function. Using this option requires superuser privilege.</target>
        </trans-unit>
        <trans-unit id="70c437c9b1f7d2dc367828d5e5a9ef36ad48a370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TYPMOD_OUT&lt;/code&gt; can be set to the name of a type modifier output function, or &lt;code&gt;NONE&lt;/code&gt; to remove the type's type modifier output function. Using this option requires superuser privilege.</source>
          <target state="translated">&lt;code&gt;TYPMOD_OUT&lt;/code&gt; can be set to the name of a type modifier output function, or &lt;code&gt;NONE&lt;/code&gt; to remove the type's type modifier output function. Using this option requires superuser privilege.</target>
        </trans-unit>
        <trans-unit id="e6b467c0dd59093c1cdc8d64cec1eecea6a86719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TimeZone&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8efe20d4b0de6c6435d20885e50309e72e12a2f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt; Wait Event</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; Wait Event</target>
        </trans-unit>
        <trans-unit id="dd215d6aa5b0ce92709e2d3e67c99ba571050df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timeout&lt;/code&gt;: The server process is waiting for a timeout to expire. &lt;code&gt;wait_event&lt;/code&gt; will identify the specific wait point.</source>
          <target state="translated">&lt;code&gt;Timeout&lt;/code&gt; : 서버 프로세스가 시간 초과가 만료되기를 기다리고 있습니다. &lt;code&gt;wait_event&lt;/code&gt; 는 특정 대기 지점을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="17557788d75e03ef6bc4eb577fd51771f0737963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&amp;amp;'\0061\0308bc' IS NFD NORMALIZED&lt;/code&gt; &amp;rarr; &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U&amp;amp;'\0061\0308bc' IS NFD NORMALIZED&lt;/code&gt; &amp;rarr; &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d7a1d4260f462cf79f83fc8fe3ff893f4882556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNION&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;UNION&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="c83b19c176c3c9da3aa996685e605c7868fe37e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNION&lt;/code&gt;, &lt;code&gt;CASE&lt;/code&gt;, and related constructs</source>
          <target state="translated">&lt;code&gt;UNION&lt;/code&gt; , &lt;code&gt;CASE&lt;/code&gt; 및 관련 구문</target>
        </trans-unit>
        <trans-unit id="5d66860e7e3c01a93e875bfc2448255f90e16aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNIQUE&lt;/code&gt; (column constraint)&lt;code&gt;UNIQUE ( column_name [, ... ] )&lt;/code&gt; [ INCLUDE ( &lt;code&gt;column_name&lt;/code&gt; [, ...]) ] (table constraint)</source>
          <target state="translated">&lt;code&gt;UNIQUE&lt;/code&gt; (열 제약 조건) &lt;code&gt;UNIQUE ( column_name [, ... ] )&lt;/code&gt; [INCLUDE ( &lt;code&gt;column_name&lt;/code&gt; [, ...])] (테이블 제약 조건)</target>
        </trans-unit>
        <trans-unit id="36076162fad6dd4faafd156f562b5a9b6bed1ad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNIQUE_CHECK_EXISTING&lt;/code&gt; indicates that this is a deferred recheck of a row that was reported as a potential uniqueness violation. Although this is implemented by calling &lt;code&gt;aminsert&lt;/code&gt;, the access method must &lt;em&gt;not&lt;/em&gt; insert a new index entry in this case. The index entry is already present. Rather, the access method must check to see if there is another live index entry. If so, and if the target row is also still live, report error.</source>
          <target state="translated">&lt;code&gt;UNIQUE_CHECK_EXISTING&lt;/code&gt; 은 잠재적 고유성 위반으로보고 된 행의 지연된 재검사임을 나타냅니다. 이것은 &lt;code&gt;aminsert&lt;/code&gt; 를 호출하여 구현되지만이 경우 액세스 메소드는 새 색인 항목을 삽입 해서는 &lt;em&gt;안됩니다&lt;/em&gt; . 색인 항목이 이미 존재합니다. 대신 액세스 방법은 다른 라이브 인덱스 항목이 있는지 확인해야합니다. 그렇다면 목표 행도 여전히 활성 상태 인 경우 오류를보고하십시오.</target>
        </trans-unit>
        <trans-unit id="556eb59ea8fee8ab1d0da2c121745aaeafaf3e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNIQUE_CHECK_NO&lt;/code&gt; indicates that no uniqueness checking should be done (this is not a unique index).</source>
          <target state="translated">&lt;code&gt;UNIQUE_CHECK_NO&lt;/code&gt; 는 고유성 검사를 수행하지 않아야 함을 나타냅니다 (고유 인덱스가 아님).</target>
        </trans-unit>
        <trans-unit id="d8296e731b860850faaf10e89bb06cedf6b0b16c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNIQUE_CHECK_PARTIAL&lt;/code&gt; indicates that the unique constraint is deferrable. PostgreSQL will use this mode to insert each row's index entry. The access method must allow duplicate entries into the index, and report any potential duplicates by returning false from &lt;code&gt;aminsert&lt;/code&gt;. For each row for which false is returned, a deferred recheck will be scheduled.</source>
          <target state="translated">&lt;code&gt;UNIQUE_CHECK_PARTIAL&lt;/code&gt; 은 고유 제한 조건을 연기 할 수 있음을 나타냅니다. PostgreSQL은이 모드를 사용하여 각 행의 색인 항목을 삽입합니다. 액세스 방법은 인덱스에 중복 항목을 허용하고 &lt;code&gt;aminsert&lt;/code&gt; 에서 false를 리턴하여 잠재적 중복을보고해야합니다 . false가 리턴되는 각 행에 대해 지연된 재검사가 스케줄됩니다.</target>
        </trans-unit>
        <trans-unit id="6ef4aaf95f898440710a1f03005da795c3b59a32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNIQUE_CHECK_YES&lt;/code&gt; indicates that this is a non-deferrable unique index, and the uniqueness check must be done immediately, as described above.</source>
          <target state="translated">&lt;code&gt;UNIQUE_CHECK_YES&lt;/code&gt; 는 이것이 지연 불가능한 고유 인덱스임을 나타내며 위에서 설명한대로 고유성 검사를 즉시 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="bd1e03a742070f86d818f2558d3109bd86f4ac8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNLISTEN&lt;/code&gt; is used to remove an existing registration for &lt;code&gt;NOTIFY&lt;/code&gt; events. &lt;code&gt;UNLISTEN&lt;/code&gt; cancels any existing registration of the current PostgreSQL session as a listener on the notification channel named &lt;code&gt;channel&lt;/code&gt;. The special wildcard &lt;code&gt;*&lt;/code&gt; cancels all listener registrations for the current session.</source>
          <target state="translated">&lt;code&gt;UNLISTEN&lt;/code&gt; 은 &lt;code&gt;NOTIFY&lt;/code&gt; 이벤트에 대한 기존 등록을 제거하는 데 사용됩니다 . &lt;code&gt;UNLISTEN&lt;/code&gt; 는 알림 채널라는 이름의 리스너로서 현재의 PostgreSQL 세션의 기존 등록을 취소 &lt;code&gt;channel&lt;/code&gt; . 특수 와일드 카드 &lt;code&gt;*&lt;/code&gt; 는 현재 세션에 대한 모든 리스너 등록을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="cce15d1b331394b1f98eb7d89df9e878715dc9f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UPDATE&lt;/code&gt; changes the values of the specified columns in all rows that satisfy the condition. Only the columns to be modified need be mentioned in the &lt;code&gt;SET&lt;/code&gt; clause; columns not explicitly modified retain their previous values.</source>
          <target state="translated">&lt;code&gt;UPDATE&lt;/code&gt; 는 조건을 만족하는 모든 행에서 지정된 열의 값을 변경합니다. &lt;code&gt;SET&lt;/code&gt; 절 에는 수정 될 열만 언급하면됩니다 . 명시 적으로 수정되지 않은 열은 이전 값을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="099041914d1e673320b518264155fdb32e8f8b70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt;, and &lt;code&gt;SELECT FOR SHARE&lt;/code&gt; commands behave the same as &lt;code&gt;SELECT&lt;/code&gt; in terms of searching for target rows: they will only find target rows that were committed as of the command start time. However, such a target row might have already been updated (or deleted or locked) by another concurrent transaction by the time it is found. In this case, the would-be updater will wait for the first updating transaction to commit or roll back (if it is still in progress). If the first updater rolls back, then its effects are negated and the second updater can proceed with updating the originally found row. If the first updater commits, the second updater will ignore the row if the first updater deleted it, otherwise it will attempt to apply its operation to the updated version of the row. The search condition of the command (the &lt;code&gt;WHERE&lt;/code&gt; clause) is re-evaluated to see if the updated version of the row still matches the search condition. If so, the second updater proceeds with its operation using the updated version of the row. In the case of &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt; and &lt;code&gt;SELECT FOR SHARE&lt;/code&gt;, this means it is the updated version of the row that is locked and returned to the client.</source>
          <target state="translated">&lt;code&gt;UPDATE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt; 및 &lt;code&gt;SELECT FOR SHARE&lt;/code&gt; 명령은 &lt;code&gt;SELECT&lt;/code&gt; 와 동일하게 동작합니다.대상 행 검색과 관련하여 명령 시작 시간에 커밋 된 대상 행만 찾습니다. 그러나 이러한 목표 행은 발견 될 때까지 다른 동시 트랜잭션에 의해 이미 갱신 (또는 삭제 또는 잠김)되었을 수 있습니다. 이 경우, 유망 업데 이터는 첫 번째 업데이트 트랜잭션이 커밋 또는 롤백 될 때까지 기다립니다 (아직 진행중인 경우). 첫 번째 업데이터가 롤백되면 그 효과는 무시되고 두 번째 업데이터는 원래 찾은 행의 업데이트를 진행할 수 있습니다. 첫 번째 업데이터가 커밋하면 두 번째 업데이터는 첫 번째 업데이터가 삭제 한 경우 해당 행을 무시하고, 그렇지 않으면 업데이트 된 버전의 행에 작업을 적용하려고 시도합니다. 명령의 검색 조건 ( &lt;code&gt;WHERE&lt;/code&gt; 업데이트 된 버전의 행이 여전히 검색 조건과 일치하는지 확인하기 위해 절)을 다시 평가합니다. 그렇다면 두 번째 업데이터는 업데이트 된 버전의 행을 사용하여 작업을 진행합니다. 의 경우 &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt; 와 &lt;code&gt;SELECT FOR SHARE&lt;/code&gt; , 잠겨 클라이언트에 반환되는 행의 업데이트 된 버전이 의미합니다.</target>
        </trans-unit>
        <trans-unit id="9111f5fac310151883bf28652c4e3e00700ff711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt;, and &lt;code&gt;SELECT FOR SHARE&lt;/code&gt; commands behave the same as &lt;code&gt;SELECT&lt;/code&gt; in terms of searching for target rows: they will only find target rows that were committed as of the transaction start time. However, such a target row might have already been updated (or deleted or locked) by another concurrent transaction by the time it is found. In this case, the repeatable read transaction will wait for the first updating transaction to commit or roll back (if it is still in progress). If the first updater rolls back, then its effects are negated and the repeatable read transaction can proceed with updating the originally found row. But if the first updater commits (and actually updated or deleted the row, not just locked it) then the repeatable read transaction will be rolled back with the message</source>
          <target state="translated">&lt;code&gt;UPDATE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;SELECT FOR UPDATE&lt;/code&gt; 및 &lt;code&gt;SELECT FOR SHARE&lt;/code&gt; 명령은 &lt;code&gt;SELECT&lt;/code&gt; 와 동일하게 동작합니다.대상 행 검색과 관련하여 트랜잭션 시작 시간에 커밋 된 대상 행만 찾습니다. 그러나 이러한 목표 행은 발견 될 때까지 다른 동시 트랜잭션에 의해 이미 갱신 (또는 삭제 또는 잠김)되었을 수 있습니다. 이 경우 반복 가능한 읽기 트랜잭션은 첫 번째 업데이트 트랜잭션이 커밋 또는 롤백 될 때까지 기다립니다 (아직 진행중인 경우). 첫 번째 업데이터가 롤백하면 해당 효과가 무시되고 반복 가능한 읽기 트랜잭션이 원래 찾은 행을 업데이트 할 수 있습니다. 그러나 첫 번째 업데이터가 커밋 (및 실제로 행을 잠그지 않고 업데이트 또는 삭제 한 경우)하면 반복 가능한 읽기 트랜잭션이 메시지와 함께 롤백됩니다.</target>
        </trans-unit>
        <trans-unit id="0a5a454caecf27bbe6291441d0e1fe48bac2bedc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USER&lt;/code&gt;&lt;code&gt;role_name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;USER&lt;/code&gt;&lt;code&gt;role_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67a60ecbbd27c2b09e753a03b48077dde7c8fe0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USING&lt;/code&gt; is reasonably safe from column changes in the joined relations since only the listed columns are combined. &lt;code&gt;NATURAL&lt;/code&gt; is considerably more risky since any schema changes to either relation that cause a new matching column name to be present will cause the join to combine that new column as well.</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 나열된 열만 결합되므로 USING 은 조인 된 관계의 열 변경으로부터 합리적으로 안전합니다. 일치하는 새 열 이름이 존재하는 관계로 스키마를 변경하면 조인이 해당 새 열도 결합하게되므로 &lt;code&gt;NATURAL&lt;/code&gt; 은 훨씬 더 위험합니다.</target>
        </trans-unit>
        <trans-unit id="3a1ec878720dbc69a4150ba8c568bb3f73b7caba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; with &lt;code&gt;to_char&lt;/code&gt; multiplies the input values by &lt;code&gt;10^n&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the number of digits following &lt;code&gt;V&lt;/code&gt;. &lt;code&gt;V&lt;/code&gt; with &lt;code&gt;to_number&lt;/code&gt; divides in a similar manner. &lt;code&gt;to_char&lt;/code&gt; and &lt;code&gt;to_number&lt;/code&gt; do not support the use of &lt;code&gt;V&lt;/code&gt; combined with a decimal point (e.g., &lt;code&gt;99.9V99&lt;/code&gt; is not allowed).</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; 와 &lt;code&gt;to_char&lt;/code&gt; 승산은 입력 값을 기준으로 &lt;code&gt;10^n&lt;/code&gt; , &lt;code&gt;n&lt;/code&gt; 다음의 자리수 &lt;code&gt;V&lt;/code&gt; . &lt;code&gt;to_number&lt;/code&gt; 를 가진 &lt;code&gt;V&lt;/code&gt; 는 비슷한 방식으로 나눕니다. &lt;code&gt;to_char&lt;/code&gt; 및 &lt;code&gt;to_number&lt;/code&gt; 는 소수점과 결합 된 &lt;code&gt;V&lt;/code&gt; 의 사용을 지원하지 않습니다 (예 : &lt;code&gt;99.9V99&lt;/code&gt; 는 허용되지 않음).</target>
        </trans-unit>
        <trans-unit id="55a11e4aa1258c855805d2b47b7f449297ef0ae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM ANALYZE&lt;/code&gt; performs a &lt;code&gt;VACUUM&lt;/code&gt; and then an &lt;code&gt;ANALYZE&lt;/code&gt; for each selected table. This is a handy combination form for routine maintenance scripts. See &lt;a href=&quot;sql-analyze&quot;&gt;ANALYZE&lt;/a&gt; for more details about its processing.</source>
          <target state="translated">&lt;code&gt;VACUUM ANALYZE&lt;/code&gt; 을 수행에게 &lt;code&gt;VACUUM&lt;/code&gt; 한 다음은 &lt;code&gt;ANALYZE&lt;/code&gt; 선택된 각 테이블. 이것은 일상적인 유지 보수 스크립트를위한 편리한 조합 양식입니다. 참조 &lt;a href=&quot;sql-analyze&quot;&gt;ANALYZE&lt;/a&gt; 의 처리에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="7c8166acd604c2610b7642832cba33780e173eaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; cannot be executed inside a transaction block.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 트랜잭션 블록 안에서 VACUUM 을 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fba2e53b4df8284bb1ce24c645ccffb43345eee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; causes a substantial increase in I/O traffic, which might cause poor performance for other active sessions. Therefore, it is sometimes advisable to use the cost-based vacuum delay feature. For parallel vacuum, each worker sleeps in proportion to the work done by that worker. See &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-VACUUM-COST&quot;&gt;Section 19.4.4&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; causes a substantial increase in I/O traffic, which might cause poor performance for other active sessions. Therefore, it is sometimes advisable to use the cost-based vacuum delay feature. For parallel vacuum, each worker sleeps in proportion to the work done by that worker. See &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-VACUUM-COST&quot;&gt;Section 19.4.4&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="ba2d01866894bc81939d3b5b8a1f9e668a2d4b32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; causes a substantial increase in I/O traffic, which might cause poor performance for other active sessions. Therefore, it is sometimes advisable to use the cost-based vacuum delay feature. See &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-VACUUM-COST&quot;&gt;Section 19.4.4&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 I / O 트래픽을 크게 증가시켜 다른 활성 세션의 성능이 저하 될 수 있습니다. 따라서 때때로 비용 기반 진공 지연 기능을 사용하는 것이 좋습니다. 자세한 내용 &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-VACUUM-COST&quot;&gt;은 19.4.4 절&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="009f475b343679cb1aad5d8f6aac21bdb69bafa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; creates a substantial amount of I/O traffic, which can cause poor performance for other active sessions. There are configuration parameters that can be adjusted to reduce the performance impact of background vacuuming &amp;mdash; see &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-VACUUM-COST&quot;&gt;Section 19.4.4&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 상당한 양의 I / O 트래픽을 생성하여 다른 활성 세션의 성능이 저하 될 수 있습니다. 백그라운드 진공 청소기의 성능 영향을 줄이기 위해 조정할 수있는 구성 매개 변수가 있습니다 ( &lt;a href=&quot;runtime-config-resource#RUNTIME-CONFIG-RESOURCE-VACUUM-COST&quot;&gt;섹션 19.4.4&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="b0f9ed551b6354baf5723455d29183a345c3e4b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; is currently cleaning up indexes. This occurs after the heap has been completely scanned and all vacuuming of the indexes and the heap has been completed.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 현재 인덱스를 정리하고 있습니다. 힙이 완전히 스캔되고 인덱스 및 힙의 모든 진공 청소기가 완료된 후에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c0a22ee8a8050f3b0151c8b0a857fefaea99eb93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; is currently scanning the heap. It will prune and defragment each page if required, and possibly perform freezing activity. The &lt;code&gt;heap_blks_scanned&lt;/code&gt; column can be used to monitor the progress of the scan.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 이 현재 힙을 스캔하고 있습니다. 필요한 경우 각 페이지를 정리하고 조각 모음을 수행하며 정지 작업을 수행 할 수 있습니다. &lt;code&gt;heap_blks_scanned&lt;/code&gt; 열은 검사의 진행 상황을 모니터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e9df08bca46feaa9001d912895cf6b57c381072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; is currently truncating the heap so as to return empty pages at the end of the relation to the operating system. This occurs after cleaning up indexes.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 현재 운영 체제와의 관계가 끝날 때 빈 페이지를 리턴하기 위해 힙을 절단하고 있습니다. 인덱스를 정리 한 후에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="acda59f0e0f6c6108ca2a4f6139517c1426fe725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; is currently vacuuming the heap. Vacuuming the heap is distinct from scanning the heap, and occurs after each instance of vacuuming indexes. If &lt;code&gt;heap_blks_scanned&lt;/code&gt; is less than &lt;code&gt;heap_blks_total&lt;/code&gt;, the system will return to scanning the heap after this phase is completed; otherwise, it will begin cleaning up indexes after this phase is completed.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 현재 힙을 진공 청소기로 청소하고 있습니다. 힙을 진공 청소기로 청소하는 것은 힙을 스캔하는 것과는 별개이며, 진공 청소기로 청소하는 각 인스턴스 후에 발생합니다. 경우 &lt;code&gt;heap_blks_scanned&lt;/code&gt; 이 적은보다 &lt;code&gt;heap_blks_total&lt;/code&gt; , 시스템은이 단계가 완료된 후 힙을 스캔으로 돌아갑니다; 그렇지 않으면이 단계가 완료된 후 인덱스 정리가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="c8f1cf61683bfc9a1f9d8624d9c87e495ae526c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; is currently vacuuming the indexes. If a table has any indexes, this will happen at least once per vacuum, after the heap has been completely scanned. It may happen multiple times per vacuum if &lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt; is insufficient to store the number of dead tuples found.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 현재 인덱스를 정리하고 있습니다. 테이블에 인덱스가있는 경우 힙이 완전히 스캔 된 후 진공 당 한 번 이상 발생합니다. &lt;a href=&quot;runtime-config-resource#GUC-MAINTENANCE-WORK-MEM&quot;&gt;maintenance_work_mem&lt;/a&gt; 이 발견 된 데드 튜플 수를 저장하기에 충분하지 않은 경우 진공 당 여러 번 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c8362d3a834123ef9584c36d9f664fae31dfe13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; is performing final cleanup. During this phase, &lt;code&gt;VACUUM&lt;/code&gt; will vacuum the free space map, update statistics in &lt;code&gt;pg_class&lt;/code&gt;, and report statistics to the statistics collector. When this phase is completed, &lt;code&gt;VACUUM&lt;/code&gt; will end.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 이 최종 정리를 수행하고 있습니다. 이 단계에서 &lt;code&gt;VACUUM&lt;/code&gt; 은 여유 공간 맵을 &lt;code&gt;pg_class&lt;/code&gt; 하고 pg_class의 통계를 업데이트 하며 통계를 통계 수집기에보고합니다. 이 단계가 완료되면 &lt;code&gt;VACUUM&lt;/code&gt; 이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="c7f40eccefc9091a18b1458933d57b109ab990e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; is preparing to begin scanning the heap. This phase is expected to be very brief.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 이 힙 스캔을 시작할 준비를하고 있습니다. 이 단계는 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="7b2836ec397ff055922c85642dd41af49391f922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; normally only scans pages that have been modified since the last vacuum, but &lt;code&gt;relfrozenxid&lt;/code&gt; can only be advanced when every page of the table that might contain unfrozen XIDs is scanned. This happens when &lt;code&gt;relfrozenxid&lt;/code&gt; is more than &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; transactions old, when &lt;code&gt;VACUUM&lt;/code&gt;'s &lt;code&gt;FREEZE&lt;/code&gt; option is used, or when all pages that are not already all-frozen happen to require vacuuming to remove dead row versions. When &lt;code&gt;VACUUM&lt;/code&gt; scans every page in the table that is not already all-frozen, it should set &lt;code&gt;age(relfrozenxid)&lt;/code&gt; to a value just a little more than the &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt; setting that was used (more by the number of transactions started since the &lt;code&gt;VACUUM&lt;/code&gt; started). If no &lt;code&gt;relfrozenxid&lt;/code&gt;-advancing &lt;code&gt;VACUUM&lt;/code&gt; is issued on the table until &lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt; is reached, an autovacuum will soon be forced for the table.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 일반적으로 마지막 진공 이후 수정 된 페이지 만 스캔하지만 &lt;code&gt;relfrozenxid&lt;/code&gt; 는 고정되지 않은 XID를 포함 할 수있는 테이블의 모든 페이지가 스캔 될 때만 진행될 수 있습니다. 이 문제 는 &lt;code&gt;relfrozenxid&lt;/code&gt; 가 &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; 트랜잭션 보다 오래된 트랜잭션, &lt;code&gt;VACUUM&lt;/code&gt; 의 &lt;code&gt;FREEZE&lt;/code&gt; 옵션이 사용 된 경우 또는 아직 완전히 고정되지 않은 모든 페이지에서 데드 행 버전을 제거하기 위해 진공 처리가 필요한 경우에 발생합니다. &lt;code&gt;VACUUM&lt;/code&gt; 이 아직 완전히 고정되지 않은 테이블의 모든 페이지를 스캔 할 때 &lt;code&gt;age(relfrozenxid)&lt;/code&gt; 를 &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt; 보다 약간 더 큰 값으로 설정해야합니다.사용 된 설정 ( &lt;code&gt;VACUUM&lt;/code&gt; 이 시작된 이후 시작된 트랜잭션 수에 따라 다름 ) &lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt; 에 도달 할 때까지 테이블에 &lt;code&gt;relfrozenxid&lt;/code&gt; -advancing &lt;code&gt;VACUUM&lt;/code&gt; 이 발행 되지 않으면 곧 테이블에 대해 자동 진공 이 강제 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="bd87ef85ce79d1eacbd949b45178b5f976440b28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; performs an aggressive scan if the table's &lt;code&gt;pg_class&lt;/code&gt;.&lt;code&gt;relfrozenxid&lt;/code&gt; field has reached the age specified by this setting. An aggressive scan differs from a regular &lt;code&gt;VACUUM&lt;/code&gt; in that it visits every page that might contain unfrozen XIDs or MXIDs, not just those that might contain dead tuples. The default is 150 million transactions. Although users can set this value anywhere from zero to two billion, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to 95% of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-FREEZE-MAX-AGE&quot;&gt;autovacuum_freeze_max_age&lt;/a&gt;, so that a periodic manual &lt;code&gt;VACUUM&lt;/code&gt; has a chance to run before an anti-wraparound autovacuum is launched for the table. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-WRAPAROUND&quot;&gt;Section 24.1.5&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; performs an aggressive scan if the table's &lt;code&gt;pg_class&lt;/code&gt; . &lt;code&gt;relfrozenxid&lt;/code&gt; field has reached the age specified by this setting. An aggressive scan differs from a regular &lt;code&gt;VACUUM&lt;/code&gt; in that it visits every page that might contain unfrozen XIDs or MXIDs, not just those that might contain dead tuples. The default is 150 million transactions. Although users can set this value anywhere from zero to two billion, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to 95% of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-FREEZE-MAX-AGE&quot;&gt;autovacuum_freeze_max_age&lt;/a&gt;, so that a periodic manual &lt;code&gt;VACUUM&lt;/code&gt; has a chance to run before an anti-wraparound autovacuum is launched for the table. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-WRAPAROUND&quot;&gt;Section 24.1.5&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c712c96697ea586ab4c9c06b9a881cac6dd51355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; performs an aggressive scan if the table's &lt;code&gt;pg_class&lt;/code&gt;.&lt;code&gt;relfrozenxid&lt;/code&gt; field has reached the age specified by this setting. An aggressive scan differs from a regular &lt;code&gt;VACUUM&lt;/code&gt; in that it visits every page that might contain unfrozen XIDs or MXIDs, not just those that might contain dead tuples. The default is 150 million transactions. Although users can set this value anywhere from zero to two billions, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to 95% of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-FREEZE-MAX-AGE&quot;&gt;autovacuum_freeze_max_age&lt;/a&gt;, so that a periodical manual &lt;code&gt;VACUUM&lt;/code&gt; has a chance to run before an anti-wraparound autovacuum is launched for the table. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-WRAPAROUND&quot;&gt;Section 24.1.5&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 테이블의 &lt;code&gt;pg_class&lt;/code&gt; 인 경우 공격적인 스캔을 수행합니다 . &lt;code&gt;relfrozenxid&lt;/code&gt; 필드가이 설정으로 지정된 연령에 도달했습니다. 공격적인 스캔은 데드 튜플을 포함 할 수있는 페이지뿐만 아니라 고정되지 않은 XID 또는 MXID를 포함 할 수있는 모든 페이지를 방문한다는 점에서 일반 &lt;code&gt;VACUUM&lt;/code&gt; 과 다릅니다 . 기본값은 1 억 5 천만 건입니다. 사용자는이 값을 0에서 20 억 &lt;code&gt;VACUUM&lt;/code&gt; 설정할 수 있지만 VACUUM 은 유효 값을 &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-FREEZE-MAX-AGE&quot;&gt;autovacuum_freeze_max_age의&lt;/a&gt; 95 %로 자동 제한 하므로 , 테이블에 대해 랩 어라운드 방지 autovacuum을 시작하기 전에 정기적 인 수동 &lt;code&gt;VACUUM&lt;/code&gt; 을 실행할 수 있습니다. 자세한 정보는 &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-WRAPAROUND&quot;&gt;24.1.5 절을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8616e027b1f1d53d168be090652a9a04a6a9aa4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; performs an aggressive scan if the table's &lt;code&gt;pg_class&lt;/code&gt;.&lt;code&gt;relminmxid&lt;/code&gt; field has reached the age specified by this setting. An aggressive scan differs from a regular &lt;code&gt;VACUUM&lt;/code&gt; in that it visits every page that might contain unfrozen XIDs or MXIDs, not just those that might contain dead tuples. The default is 150 million multixacts. Although users can set this value anywhere from zero to two billion, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to 95% of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-MULTIXACT-FREEZE-MAX-AGE&quot;&gt;autovacuum_multixact_freeze_max_age&lt;/a&gt;, so that a periodic manual &lt;code&gt;VACUUM&lt;/code&gt; has a chance to run before an anti-wraparound is launched for the table. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-MULTIXACT-WRAPAROUND&quot;&gt;Section 24.1.5.1&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; performs an aggressive scan if the table's &lt;code&gt;pg_class&lt;/code&gt; . &lt;code&gt;relminmxid&lt;/code&gt; field has reached the age specified by this setting. An aggressive scan differs from a regular &lt;code&gt;VACUUM&lt;/code&gt; in that it visits every page that might contain unfrozen XIDs or MXIDs, not just those that might contain dead tuples. The default is 150 million multixacts. Although users can set this value anywhere from zero to two billion, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to 95% of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-MULTIXACT-FREEZE-MAX-AGE&quot;&gt;autovacuum_multixact_freeze_max_age&lt;/a&gt;, so that a periodic manual &lt;code&gt;VACUUM&lt;/code&gt; has a chance to run before an anti-wraparound is launched for the table. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-MULTIXACT-WRAPAROUND&quot;&gt;Section 24.1.5.1&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6dd76101bce62c4824bf1485662f9d2834f8e0ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; performs an aggressive scan if the table's &lt;code&gt;pg_class&lt;/code&gt;.&lt;code&gt;relminmxid&lt;/code&gt; field has reached the age specified by this setting. An aggressive scan differs from a regular &lt;code&gt;VACUUM&lt;/code&gt; in that it visits every page that might contain unfrozen XIDs or MXIDs, not just those that might contain dead tuples. The default is 150 million multixacts. Although users can set this value anywhere from zero to two billions, &lt;code&gt;VACUUM&lt;/code&gt; will silently limit the effective value to 95% of &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-MULTIXACT-FREEZE-MAX-AGE&quot;&gt;autovacuum_multixact_freeze_max_age&lt;/a&gt;, so that a periodical manual &lt;code&gt;VACUUM&lt;/code&gt; has a chance to run before an anti-wraparound is launched for the table. For more information see &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-MULTIXACT-WRAPAROUND&quot;&gt;Section 24.1.5.1&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 테이블의 &lt;code&gt;pg_class&lt;/code&gt; 인 경우 공격적인 스캔을 수행합니다 . &lt;code&gt;relminmxid&lt;/code&gt; 필드가이 설정으로 지정된 연령에 도달했습니다. 공격적인 스캔은 데드 튜플을 포함 할 수있는 페이지뿐만 아니라 고정되지 않은 XID 또는 MXID를 포함 할 수있는 모든 페이지를 방문한다는 점에서 일반 &lt;code&gt;VACUUM&lt;/code&gt; 과 다릅니다 . 기본값은 1 억 5 천만 멀티 플렉스입니다. 사용자는이 값을 0에서 20 억 &lt;code&gt;VACUUM&lt;/code&gt; 설정할 수 있지만 VACUUM 은 &lt;a href=&quot;runtime-config-autovacuum#GUC-AUTOVACUUM-MULTIXACT-FREEZE-MAX-AGE&quot;&gt;autovacuum_multixact_freeze_max_age&lt;/a&gt; 의 유효 값을 자동으로 95 %로 제한 하므로 테이블에 랩 어라운드가 시작되기 전에 정기적 인 수동 &lt;code&gt;VACUUM&lt;/code&gt; 이 실행될 수 있습니다. 자세한 정보는 &lt;a href=&quot;routine-vacuuming#VACUUM-FOR-MULTIXACT-WRAPAROUND&quot;&gt;24.1.5.1 절을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bde7de0c3a8204fa1eaab8d792657116d1d9a81b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; reclaims storage occupied by dead tuples. In normal PostgreSQL operation, tuples that are deleted or obsoleted by an update are not physically removed from their table; they remain present until a &lt;code&gt;VACUUM&lt;/code&gt; is done. Therefore it's necessary to do &lt;code&gt;VACUUM&lt;/code&gt; periodically, especially on frequently-updated tables.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 죽은 튜플이 차지한 스토리지를 회수합니다. 일반적인 PostgreSQL 작업에서 업데이트에 의해 삭제되거나 폐기 된 튜플은 실제로 테이블에서 제거되지 않습니다. &lt;code&gt;VACUUM&lt;/code&gt; 이 완료 될 때까지 존재 합니다. 따라서 , 특히 자주 업데이트되는 테이블에서 &lt;code&gt;VACUUM&lt;/code&gt; 을 정기적으로 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c9509e6daa2d944355d94abefff6f2b1320c54b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VACUUM&lt;/code&gt; uses the &lt;a href=&quot;storage-vm&quot;&gt;visibility map&lt;/a&gt; to determine which pages of a table must be scanned. Normally, it will skip pages that don't have any dead row versions even if those pages might still have row versions with old XID values. Therefore, normal &lt;code&gt;VACUUM&lt;/code&gt;s won't always freeze every old row version in the table. Periodically, &lt;code&gt;VACUUM&lt;/code&gt; will perform an &lt;em&gt;aggressive vacuum&lt;/em&gt;, skipping only those pages which contain neither dead rows nor any unfrozen XID or MXID values. &lt;a href=&quot;runtime-config-client#GUC-VACUUM-FREEZE-TABLE-AGE&quot;&gt;vacuum_freeze_table_age&lt;/a&gt; controls when &lt;code&gt;VACUUM&lt;/code&gt; does that: all-visible but not all-frozen pages are scanned if the number of transactions that have passed since the last such scan is greater than &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; minus &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt;. Setting &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; to 0 forces &lt;code&gt;VACUUM&lt;/code&gt; to use this more aggressive strategy for all scans.</source>
          <target state="translated">&lt;code&gt;VACUUM&lt;/code&gt; 은 &lt;a href=&quot;storage-vm&quot;&gt;가시성 맵&lt;/a&gt; 을 사용하여 스캔 할 테이블의 페이지를 결정합니다. 일반적으로 이전 XID 값을 가진 행 버전이있는 페이지 일지라도 사용 가능한 행 버전이없는 페이지는 건너 뜁니다. 따라서 일반 &lt;code&gt;VACUUM&lt;/code&gt; 은 항상 테이블의 모든 이전 행 버전을 고정하지는 않습니다. &lt;code&gt;VACUUM&lt;/code&gt; 은 주기적 &lt;em&gt;으로 적극적인 진공&lt;/em&gt; 을 수행하여 데드 행이나 고정되지 않은 XID 또는 MXID 값이 포함되지 않은 페이지 만 건너 뜁니다. &lt;a href=&quot;runtime-config-client#GUC-VACUUM-FREEZE-TABLE-AGE&quot;&gt;vacuum_freeze_table_age&lt;/a&gt; 는 &lt;code&gt;VACUUM&lt;/code&gt; 이 다음을 수행하는 시기를 제어 합니다. 마지막으로 스캔 한 이후에 통과 한 트랜잭션 수가 이보다 큰 경우 모든 표시 가능하지만 완전히 고정되지 않은 페이지가 스캔됩니다. &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; 빼기 &lt;code&gt;vacuum_freeze_min_age&lt;/code&gt; . &lt;code&gt;vacuum_freeze_table_age&lt;/code&gt; 를 0으로 설정하면 &lt;code&gt;VACUUM&lt;/code&gt; 이 모든 스캔에이보다 적극적인 전략을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5c2a8aa36047724c3880b998478b069a0bb150f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALID UNTIL&lt;/code&gt; '&lt;code&gt;timestamp&lt;/code&gt;'</source>
          <target state="translated">&lt;code&gt;VALID UNTIL&lt;/code&gt; ' &lt;code&gt;timestamp&lt;/code&gt; '</target>
        </trans-unit>
        <trans-unit id="a333ee183ddb9a34cc375df204fa5e12108d3d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALIDATOR&lt;/code&gt;&lt;code&gt;valfunction&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VALIDATOR&lt;/code&gt;&lt;code&gt;valfunction&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ba04c885bbb2f3268ce0ba6d01be5e736428d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUES&lt;/code&gt; can also be used where a sub-&lt;code&gt;SELECT&lt;/code&gt; might be written, for example in a &lt;code&gt;FROM&lt;/code&gt; clause:</source>
          <target state="translated">&lt;code&gt;VALUES&lt;/code&gt; 하위 &lt;code&gt;SELECT&lt;/code&gt; 가 작성 될 수있는 위치 ( 예 : &lt;code&gt;FROM&lt;/code&gt; 절) 에서 VALUES를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d74f4cacc54a226c0d65a8cd146fc7d88afad9bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUES&lt;/code&gt; computes a row value or set of row values specified by value expressions. It is most commonly used to generate a &amp;ldquo;constant table&amp;rdquo; within a larger command, but it can be used on its own.</source>
          <target state="translated">&lt;code&gt;VALUES&lt;/code&gt; 는 값 표현식으로 지정된 행 값 또는 행 값 세트를 계산합니다. 더 큰 명령 내에서 &quot;일정한 테이블&quot;을 생성하는 데 가장 일반적으로 사용되지만 자체적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae950693f54d3b998ed7dbc20b3b3c0d958a6fbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUES&lt;/code&gt; conforms to the SQL standard. &lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;OFFSET&lt;/code&gt; are PostgreSQL extensions; see also under &lt;a href=&quot;sql-select&quot;&gt;SELECT&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VALUES&lt;/code&gt; 은 SQL 표준을 준수합니다. &lt;code&gt;LIMIT&lt;/code&gt; 및 &lt;code&gt;OFFSET&lt;/code&gt; 은 PostgreSQL 확장입니다. &lt;a href=&quot;sql-select&quot;&gt;SELECT&lt;/a&gt; 아래도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb3f38acc90b713656e0ad7c171625d13dd8257c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUES&lt;/code&gt; lists with very large numbers of rows should be avoided, as you might encounter out-of-memory failures or poor performance. &lt;code&gt;VALUES&lt;/code&gt; appearing within &lt;code&gt;INSERT&lt;/code&gt; is a special case (because the desired column types are known from the &lt;code&gt;INSERT&lt;/code&gt;'s target table, and need not be inferred by scanning the &lt;code&gt;VALUES&lt;/code&gt; list), so it can handle larger lists than are practical in other contexts.</source>
          <target state="translated">&lt;code&gt;VALUES&lt;/code&gt; 메모리가 부족하거나 성능이 저하 될 수 있으므로 행 수가 많은 VALUES 목록은 피해야합니다. &lt;code&gt;INSERT&lt;/code&gt; 에 나타나는 &lt;code&gt;VALUES&lt;/code&gt; 은 특별한 경우입니다 (원하는 열 유형이 &lt;code&gt;INSERT&lt;/code&gt; 의 대상 테이블 에서 알려 지고 &lt;code&gt;VALUES&lt;/code&gt; 목록 을 스캔하여 추론 할 필요가 없기 때문에). 따라서 다른 컨텍스트에서 실제보다 큰 목록을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="f7a17bb893077f9684f46be6eda8d3f3ba46d539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUES&lt;/code&gt; provides a way to generate a &amp;ldquo;constant table&amp;rdquo; that can be used in a query without having to actually create and populate a table on-disk. The syntax is</source>
          <target state="translated">&lt;code&gt;VALUES&lt;/code&gt; 는 실제로 디스크에 테이블을 작성하고 채울 필요없이 쿼리에 사용할 수있는 &quot;일정한 테이블&quot;을 생성하는 방법을 제공합니다. 문법은</target>
        </trans-unit>
        <trans-unit id="af3e1e00eef4e6314e5fdfaec5572c99cff832cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VARIADIC&lt;/code&gt;&lt;code&gt;&quot;any&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VARIADIC&lt;/code&gt;&lt;code&gt;&quot;any&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56efe2d3dd1fcd2103eea0fe5df69769b0e1d0f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION&lt;/code&gt;&lt;code&gt;VERSION_NAME&lt;/code&gt;&lt;code&gt;VERSION_NUM&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;VERSION&lt;/code&gt;&lt;code&gt;VERSION_NAME&lt;/code&gt;&lt;code&gt;VERSION_NUM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae006510fd032c2e7108bab197e82cb0f6070ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VOLATILE&lt;/code&gt; indicates that the function value can change even within a single table scan, so no optimizations can be made. Relatively few database functions are volatile in this sense; some examples are &lt;code&gt;random()&lt;/code&gt;, &lt;code&gt;currval()&lt;/code&gt;, &lt;code&gt;timeofday()&lt;/code&gt;. But note that any function that has side-effects must be classified volatile, even if its result is quite predictable, to prevent calls from being optimized away; an example is &lt;code&gt;setval()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VOLATILE&lt;/code&gt; 은 단일 테이블 스캔에서도 함수 값이 변경 될 수 있으므로 최적화를 수행 할 수 없음을 나타냅니다. 이러한 의미에서 일시적인 데이터베이스 기능은 상대적으로 적습니다. 몇 가지 예는 &lt;code&gt;random()&lt;/code&gt; , &lt;code&gt;currval()&lt;/code&gt; , &lt;code&gt;timeofday()&lt;/code&gt; 입니다. 그러나 부작용이있는 기능은 결과가 상당히 예측 가능하더라도 호출이 최적화되지 않도록 휘발성으로 분류되어야합니다. 예는 &lt;code&gt;setval()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2dac73cf86ceb68ba5ba013f4040a4865c1b6bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WHERE&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;WHERE&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="255c52db5d85094b6ce7c9ec47b25625c687e689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WIN936&lt;/code&gt;, &lt;code&gt;Windows936&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WIN936&lt;/code&gt; , &lt;code&gt;Windows936&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5a684cc205e043940cbed0b40d88337bd61cc46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WIN949&lt;/code&gt;, &lt;code&gt;Windows949&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WIN949&lt;/code&gt; , &lt;code&gt;Windows949&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acf25e99a5145fa8db481a0ea08cc1dfe9d8e4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WIN950&lt;/code&gt;, &lt;code&gt;Windows950&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WIN950&lt;/code&gt; , &lt;code&gt;Windows950&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7472d1e90394f1fb5065676a5be3df70c41fae9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WINDOW&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;WINDOW&lt;/code&gt; 조항</target>
        </trans-unit>
        <trans-unit id="ca72a29993b0b1044b978748dd47ae91a6ac77b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WINDOW&lt;/code&gt; indicates that the function is a &lt;em&gt;window function&lt;/em&gt; rather than a plain function. This is currently only useful for functions written in C. The &lt;code&gt;WINDOW&lt;/code&gt; attribute cannot be changed when replacing an existing function definition.</source>
          <target state="translated">&lt;code&gt;WINDOW&lt;/code&gt; 는 함수가 일반 함수가 아닌 &lt;em&gt;윈도우 함수&lt;/em&gt; 임을 나타냅니다 . 이것은 현재 C로 작성된 함수에만 유용합니다 . 기존 함수 정의를 바꿀 때 &lt;code&gt;WINDOW&lt;/code&gt; 속성을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3065c16c1a6ed061c3ecca459fcac6421f56ce07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITH HOLD&lt;/code&gt; may not be specified when the query includes &lt;code&gt;FOR UPDATE&lt;/code&gt; or &lt;code&gt;FOR SHARE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WITH HOLD&lt;/code&gt; 쿼리에 &lt;code&gt;FOR UPDATE&lt;/code&gt; 또는 &lt;code&gt;FOR SHARE&lt;/code&gt; 가 포함되어 있으면 WITH HOLD를 지정할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b37c12ca197e0d4d7e93c77057e285e61034d2e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITH HOLD&lt;/code&gt; specifies that the cursor can continue to be used after the transaction that created it successfully commits. &lt;code&gt;WITHOUT HOLD&lt;/code&gt; specifies that the cursor cannot be used outside of the transaction that created it. If neither &lt;code&gt;WITHOUT HOLD&lt;/code&gt; nor &lt;code&gt;WITH HOLD&lt;/code&gt; is specified, &lt;code&gt;WITHOUT HOLD&lt;/code&gt; is the default.</source>
          <target state="translated">&lt;code&gt;WITH HOLD&lt;/code&gt; 는 커서를 작성한 트랜잭션이 커미트 된 후에도 커서를 계속 사용할 수 있도록 지정합니다. &lt;code&gt;WITHOUT HOLD&lt;/code&gt; 는 커서를 만든 트랜잭션 외부에서 커서를 사용할 수 없도록 지정합니다. &lt;code&gt;WITHOUT HOLD&lt;/code&gt; 또는 &lt;code&gt;WITH HOLD&lt;/code&gt; 가 지정 되지 않은 경우 &lt;code&gt;WITHOUT HOLD&lt;/code&gt; 가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="7fb666630267f1dc412cd03bb2382af6e1676a01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITH HOLD&lt;/code&gt;&lt;code&gt;WITHOUT HOLD&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WITH HOLD&lt;/code&gt; &lt;code&gt;WITHOUT HOLD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ef0328d6dd75f9bf63dd9963faddfe630e63d18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITH&lt;/code&gt; Clause</source>
          <target state="translated">&lt;code&gt;WITH&lt;/code&gt; 의 절</target>
        </trans-unit>
        <trans-unit id="7b8c995bf2fcfa04aeddb00aa3bbb4a6f40cf509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITH&lt;/code&gt; provides a way to write auxiliary statements for use in a larger query. These statements, which are often referred to as Common Table Expressions or CTEs, can be thought of as defining temporary tables that exist just for one query. Each auxiliary statement in a &lt;code&gt;WITH&lt;/code&gt; clause can be a &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt;; and the &lt;code&gt;WITH&lt;/code&gt; clause itself is attached to a primary statement that can also be a &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WITH&lt;/code&gt; 는 더 큰 쿼리에 사용할 보조 문을 작성하는 방법을 제공합니다. 흔히 공통 테이블 표현식 또는 CTE라고하는이 명령문은 하나의 쿼리에 대해서만 존재하는 임시 테이블을 정의하는 것으로 생각할 수 있습니다. &lt;code&gt;WITH&lt;/code&gt; 절의 각 보조 명령문은 &lt;code&gt;SELECT&lt;/code&gt; , &lt;code&gt;INSERT&lt;/code&gt; , &lt;code&gt;UPDATE&lt;/code&gt; 또는 &lt;code&gt;DELETE&lt;/code&gt; 일 수 있습니다 . 그리고 &lt;code&gt;WITH&lt;/code&gt; 절 자체도 될 수있는 차 문에 부착 된 &lt;code&gt;SELECT&lt;/code&gt; , &lt;code&gt;INSERT&lt;/code&gt; , &lt;code&gt;UPDATE&lt;/code&gt; 를 , 또는 &lt;code&gt;DELETE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67bbe170001be69d4e59b314e593595ba90d58e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WORK&lt;/code&gt;&lt;code&gt;TRANSACTION&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WORK&lt;/code&gt;&lt;code&gt;TRANSACTION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c6845a2804d5d5a00ff90bce09c46f93ead1c18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[ EXTERNAL ] SECURITY INVOKER&lt;/code&gt;&lt;code&gt;[ EXTERNAL ] SECURITY DEFINER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[ EXTERNAL ] SECURITY INVOKER&lt;/code&gt; &lt;code&gt;[ EXTERNAL ] SECURITY DEFINER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1350985f0b46a7b86ec5fcf9a6190f315082ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[-d] dbname&lt;/code&gt;&lt;code&gt;[--dbname=]dbname&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[-d] dbname&lt;/code&gt; &lt;code&gt;[--dbname=]dbname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e6133de9165856bec31a963923494e952b07a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d7a9561499865aaba1ff31c2d93cc67e7499a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;code&gt;chars&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;code&gt;chars&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e538177509b40bbb6afd7d470a3dc122709850d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[EXTERNAL] SECURITY INVOKER&lt;/code&gt;&lt;code&gt;[EXTERNAL] SECURITY DEFINER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[EXTERNAL] SECURITY INVOKER&lt;/code&gt; &lt;code&gt;[EXTERNAL] SECURITY DEFINER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68fc3cdef2a974e21e55770d4e30aab20e80be7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[:alnum:]_]&lt;/code&gt; (note underscore is included)</source>
          <target state="translated">&lt;code&gt;[[:alnum:]_]&lt;/code&gt; (밑줄이 포함되어 있음)</target>
        </trans-unit>
        <trans-unit id="038dfef0afe6f9ac17621abc30786e664886947b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[^[:alnum:]_]&lt;/code&gt; (note underscore is included)</source>
          <target state="translated">&lt;code&gt;[^[:alnum:]_]&lt;/code&gt; (밑줄이 포함되어 있음)</target>
        </trans-unit>
        <trans-unit id="cb138c59b50a639b5cf50e48b92b0c0d72e8990b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;code&gt;c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;code&gt;c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f206327e3cf80a16ae9805c2cb11e04e2846f6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;code&gt;digits&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;code&gt;digits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a18a86346195aa5fb3375ddfcbc7c728011b8643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;code&gt;k&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;code&gt;k&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23d31596b2e40c411dc5cc6581584e061c0c30f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;code&gt;m&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;code&gt;m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57eb199aa3159dfae3d5b4d0771aa902500cdb45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;code&gt;mnn&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;code&gt;mnn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="660c2200ecad649abdd6fcea6939ea85d19c53b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;code&gt;xy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;code&gt;xy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87e09177a4751a8d9f034d0e2350b787c2daa154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;code&gt;xyz&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;code&gt;xyz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dfe62804016250566e45268f4ed12c9789470b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\H&lt;/code&gt; or &lt;code&gt;\html&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\H&lt;/code&gt; 또는 &lt;code&gt;\html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef87d08c7bed7b21f6acc4d9021f0e8834726a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\U&lt;/code&gt;&lt;code&gt;stuvwxyz&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\U&lt;/code&gt;&lt;code&gt;stuvwxyz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67075ce048a869f22b01b55ade4df5929133eb72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\c&lt;/code&gt; or &lt;code&gt;\connect [ -reuse-previous=on|off ] [ dbname [ username ] [ host ] [ port ] | conninfo ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\c&lt;/code&gt; 또는 &lt;code&gt;\connect [ -reuse-previous=on|off ] [ dbname [ username ] [ host ] [ port ] | conninfo ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cae36c49547b651f198a2a29fa9df015f3017b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\c&lt;/code&gt;&lt;code&gt;X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\c&lt;/code&gt;&lt;code&gt;X&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86f099e12d09c972005c08173ee0d045e92ec313" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\copy { table [ ( column_list ) ] } from { 'filename' | program 'command' | stdin | pstdin } [ [ with ] ( option [, ...] ) ] [ where condition ]&lt;/code&gt;&lt;code&gt;\copy { table [ ( column_list ) ] | ( query ) } to { 'filename' | program 'command' | stdout | pstdout } [ [ with ] ( option [, ...] ) ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\copy { table [ ( column_list ) ] } from { 'filename' | program 'command' | stdin | pstdin } [ [ with ] ( option [, ...] ) ] [ where condition ]&lt;/code&gt; &lt;code&gt;\copy { table [ ( column_list ) ] | ( query ) } to { 'filename' | program 'command' | stdout | pstdout } [ [ with ] ( option [, ...] ) ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="608145b8c961099b2ee57031d929f80d059100ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\dE[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;&lt;code&gt;\di[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;&lt;code&gt;\dm[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;&lt;code&gt;\ds[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;&lt;code&gt;\dt[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;&lt;code&gt;\dv[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\dE[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt; &lt;code&gt;\di[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt; &lt;code&gt;\dm[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt; &lt;code&gt;\ds[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt; &lt;code&gt;\dt[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt; &lt;code&gt;\dv[S+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="444ba3dde2996198b10d820de6f19d1678ac0ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\dd&lt;/code&gt; displays descriptions for objects matching the &lt;code&gt;pattern&lt;/code&gt;, or of visible objects of the appropriate type if no argument is given. But in either case, only objects that have a description are listed. By default, only user-created objects are shown; supply a pattern or the &lt;code&gt;S&lt;/code&gt; modifier to include system objects.</source>
          <target state="translated">&lt;code&gt;\dd&lt;/code&gt; 는 &lt;code&gt;pattern&lt;/code&gt; 과 일치하는 객체에 대한 설명 또는 인수가 제공되지 않은 경우 적절한 유형의 보이는 객체에 대한 설명을 표시합니다. 그러나 두 경우 모두 설명이있는 개체 만 나열됩니다. 기본적으로 사용자가 만든 개체 만 표시됩니다. 시스템 오브젝트를 포함 하도록 패턴 또는 &lt;code&gt;S&lt;/code&gt; 수정자를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="f6e22ed690bbf7578ec9874cfc12a0bc6d7a09c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\deu+&lt;/code&gt; might also display the user name and password of the remote user, so care should be taken not to disclose them.</source>
          <target state="translated">&lt;code&gt;\deu+&lt;/code&gt; 는 원격 사용자의 사용자 이름과 암호도 표시 할 수 있으므로 공개하지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="36d92eba3108cd6c8c33d690295373e53268515b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\e&lt;/code&gt; or &lt;code&gt;\edit&lt;/code&gt;&lt;code&gt;[ filename ] [ line_number ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\e&lt;/code&gt; 또는 &lt;code&gt;\edit&lt;/code&gt; &lt;code&gt;[ filename ] [ line_number ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="865141bf92b80d6be064e2431bfaddd2cd07220e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\g [ (option=value [...]) ] [ filename ]&lt;/code&gt;&lt;code&gt;\g [ (option=value [...]) ] [ |command ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\g [ (option=value [...]) ] [ filename ]&lt;/code&gt; &lt;code&gt;\g [ (option=value [...]) ] [ |command ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c0e35ca346bae54d3d09156eede8ed2c31b4fe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\g [ filename ]&lt;/code&gt;&lt;code&gt;\g [ |command ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\g [ filename ]&lt;/code&gt; &lt;code&gt;\g [ |command ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60290164a4e464bd26284215d4896f95a166de73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\gset [prefix]&lt;/code&gt;&lt;code&gt;\aset [prefix]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\gset [prefix]&lt;/code&gt; &lt;code&gt;\aset [prefix]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6bd47ba8213417e790bd91aea46cc6bc980b7b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\gx [ (option=value [...]) ] [ filename ]&lt;/code&gt;&lt;code&gt;\gx [ (option=value [...]) ] [ |command ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\gx [ (option=value [...]) ] [ filename ]&lt;/code&gt; &lt;code&gt;\gx [ (option=value [...]) ] [ |command ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a136507fe3cd2926732d87edeb1e2c527020617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\gx [ filename ]&lt;/code&gt;&lt;code&gt;\gx [ |command ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\gx [ filename ]&lt;/code&gt; &lt;code&gt;\gx [ |command ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26e59c20763657abd76791f439aa9ff96b6552a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\gx&lt;/code&gt; is equivalent to &lt;code&gt;\g&lt;/code&gt;, but forces expanded output mode for this query. See &lt;code&gt;\x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;\gx&lt;/code&gt; 는 &lt;code&gt;\g&lt;/code&gt; 와 동일 하지만이 쿼리에 대해 확장 된 출력 모드를 강제합니다. &lt;code&gt;\x&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eca5d61d21c8535cd95cc545d916b931f9f918a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\gx&lt;/code&gt; is equivalent to &lt;code&gt;\g&lt;/code&gt;, except that it forces expanded output mode for this query, as if &lt;code&gt;expanded=on&lt;/code&gt; were included in the list of &lt;code&gt;\pset&lt;/code&gt; options. See also &lt;code&gt;\x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;\gx&lt;/code&gt; is equivalent to &lt;code&gt;\g&lt;/code&gt; , except that it forces expanded output mode for this query, as if &lt;code&gt;expanded=on&lt;/code&gt; were included in the list of &lt;code&gt;\pset&lt;/code&gt; options. See also &lt;code&gt;\x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6a7dde19333ae462b9d93382f5b829c29e2cbea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\h&lt;/code&gt; or &lt;code&gt;\help&lt;/code&gt;&lt;code&gt;[ command ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\h&lt;/code&gt; 또는 &lt;code&gt;\help&lt;/code&gt; &lt;code&gt;[ command ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4b3e084b9c478d947efa3e0b1e9955b5a6ea4b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\i&lt;/code&gt; or &lt;code&gt;\include&lt;/code&gt;&lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\i&lt;/code&gt; 또는 &lt;code&gt;\include&lt;/code&gt; &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a68780e323ca4c60df96caf10c2da06e4ca0acd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\if&lt;/code&gt;&lt;code&gt;expression&lt;/code&gt;&lt;code&gt;\elif&lt;/code&gt;&lt;code&gt;expression&lt;/code&gt;&lt;code&gt;\else&lt;/code&gt;&lt;code&gt;\endif&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\if&lt;/code&gt;&lt;code&gt;expression&lt;/code&gt;&lt;code&gt;\elif&lt;/code&gt;&lt;code&gt;expression&lt;/code&gt;&lt;code&gt;\else&lt;/code&gt;&lt;code&gt;\endif&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70fe13eba7f488861e770b41975b92bd544e7981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\ir&lt;/code&gt; or &lt;code&gt;\include_relative&lt;/code&gt;&lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\ir&lt;/code&gt; 또는 &lt;code&gt;\include_relative&lt;/code&gt; &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e8897f922e6cc9b23b640671be05bc0161c0b3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\l[+]&lt;/code&gt; or &lt;code&gt;\list[+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\l[+]&lt;/code&gt; 또는 &lt;code&gt;\list[+] [ &lt;a href=&quot;app-psql#APP-PSQL-PATTERNS&quot;&gt;pattern&lt;/a&gt; ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f23bce51e748968efe348e34c5e0e0b5931d62c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\o&lt;/code&gt; or &lt;code&gt;\out [ filename ]&lt;/code&gt;&lt;code&gt;\o&lt;/code&gt; or &lt;code&gt;\out [ |command ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\o&lt;/code&gt; 또는 &lt;code&gt;\out [ filename ]&lt;/code&gt; &lt;code&gt;\o&lt;/code&gt; 또는 &lt;code&gt;\out [ |command ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82c7b2d041dfc6c2c6a60fdbb9fb1869cb823e69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\o&lt;/code&gt;, &lt;code&gt;\oo&lt;/code&gt;, &lt;code&gt;\ooo&lt;/code&gt; (&lt;code&gt;o&lt;/code&gt; = 0 - 7)</source>
          <target state="translated">&lt;code&gt;\o&lt;/code&gt; , &lt;code&gt;\oo&lt;/code&gt; , &lt;code&gt;\ooo&lt;/code&gt; ( &lt;code&gt;o&lt;/code&gt; = 0-7 )</target>
        </trans-unit>
        <trans-unit id="e9e5302cad8569241e5c5b956977f6052f58f5ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\o&lt;/code&gt;, &lt;code&gt;\oo&lt;/code&gt;, &lt;code&gt;\ooo&lt;/code&gt; (&lt;code&gt;o&lt;/code&gt; = 0&amp;ndash;7)</source>
          <target state="translated">&lt;code&gt;\o&lt;/code&gt; , &lt;code&gt;\oo&lt;/code&gt; , &lt;code&gt;\ooo&lt;/code&gt; ( &lt;code&gt;o&lt;/code&gt; = 0&amp;ndash;7)</target>
        </trans-unit>
        <trans-unit id="608c70ca95a08762647843acc0e881d4b97476f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\p&lt;/code&gt; or &lt;code&gt;\print&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\p&lt;/code&gt; 또는 &lt;code&gt;\print&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c9b8e39c47101f3f63552cdf3014dc44e0386ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\pset&lt;/code&gt; without any arguments displays the current status of all printing options.</source>
          <target state="translated">&lt;code&gt;\pset&lt;/code&gt; 인수없이 \ pset 은 모든 인쇄 옵션의 현재 상태를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a1715bef43f4d42f53bf60a43b2282f6210326c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\q&lt;/code&gt; or &lt;code&gt;\quit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\q&lt;/code&gt; 또는 &lt;code&gt;\quit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e9d72fd2cf51bc5e89c7bfdbbcc48def76d2992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\reset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\r&lt;/code&gt; 또는 &lt;code&gt;\reset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0508525815a7eba4b834b8e0e3a64c07971c0847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\set&lt;/code&gt; without any arguments displays the names and values of all currently-set psql variables.</source>
          <target state="translated">&lt;code&gt;\set&lt;/code&gt; 인수없이 \ set 은 현재 설정된 모든 psql 변수의 이름과 값을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a5d16e5802fba3407ecb917bc0456585d3f72db1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u0000&lt;/code&gt; is disallowed, as are Unicode escapes representing characters not available in the database encoding</source>
          <target state="translated">&lt;code&gt;\u0000&lt;/code&gt; is disallowed, as are Unicode escapes representing characters not available in the database encoding</target>
        </trans-unit>
        <trans-unit id="7ff278f9331a434bba30b82fac5f5f2ec5de4c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u0000&lt;/code&gt; is disallowed, as are non-ASCII Unicode escapes if database encoding is not UTF8</source>
          <target state="translated">&lt;code&gt;\u0000&lt;/code&gt; 데이터베이스 인코딩이 UTF8이 아닌 경우 비 ASCII 유니 코드 이스케이프와 같이 \ u0000 은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="10e4bd6aa6ba9ccfdc5dd4a037b0b2b266a21d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u&lt;/code&gt;&lt;code&gt;wxyz&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u&lt;/code&gt;&lt;code&gt;wxyz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbfd30f6cfec5158ea3499c0e28afcd26de26a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\uxxxx&lt;/code&gt;, &lt;code&gt;\Uxxxxxxxx&lt;/code&gt; (&lt;code&gt;x&lt;/code&gt; = 0 - 9, A - F)</source>
          <target state="translated">&lt;code&gt;\uxxxx&lt;/code&gt; , &lt;code&gt;\Uxxxxxxxx&lt;/code&gt; ( &lt;code&gt;x&lt;/code&gt; = 0-9, A-F)</target>
        </trans-unit>
        <trans-unit id="a5bf66ae6525b98298428546b0a6acc324625718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\uxxxx&lt;/code&gt;, &lt;code&gt;\Uxxxxxxxx&lt;/code&gt; (&lt;code&gt;x&lt;/code&gt; = 0&amp;ndash;9, A&amp;ndash;F)</source>
          <target state="translated">&lt;code&gt;\uxxxx&lt;/code&gt; , &lt;code&gt;\Uxxxxxxxx&lt;/code&gt; ( &lt;code&gt;x&lt;/code&gt; = 0&amp;ndash;9, A&amp;ndash;F)</target>
        </trans-unit>
        <trans-unit id="2d96d632a3259be5279b14030755bd882723f56f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; or &lt;code&gt;\write&lt;/code&gt;&lt;code&gt;filename&lt;/code&gt;&lt;code&gt;\w&lt;/code&gt; or &lt;code&gt;\write&lt;/code&gt;&lt;code&gt;|&lt;/code&gt;&lt;code&gt;command&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 또는 &lt;code&gt;\write&lt;/code&gt; &lt;code&gt;filename&lt;/code&gt; &lt;code&gt;\w&lt;/code&gt; 또는 &lt;code&gt;\write&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; &lt;code&gt;command&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ba59b1282cf7bd9ea4755b20ff44d44c03a53f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt;&lt;code&gt;digits&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt;&lt;code&gt;digits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="284f4625d91ffd872665af9837f7ee762515ada2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt;&lt;code&gt;hhh&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt;&lt;code&gt;hhh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d74c125266ec91e3244980683e24be9321f3198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xh&lt;/code&gt;, &lt;code&gt;\xhh&lt;/code&gt; (&lt;code&gt;h&lt;/code&gt; = 0 - 9, A - F)</source>
          <target state="translated">&lt;code&gt;\xh&lt;/code&gt; , &lt;code&gt;\xhh&lt;/code&gt; ( &lt;code&gt;h&lt;/code&gt; = 0-9, A-F)</target>
        </trans-unit>
        <trans-unit id="f4acea5920b397c4ff0f39ee53e31900e0151247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xh&lt;/code&gt;, &lt;code&gt;\xhh&lt;/code&gt; (&lt;code&gt;h&lt;/code&gt; = 0&amp;ndash;9, A&amp;ndash;F)</source>
          <target state="translated">&lt;code&gt;\xh&lt;/code&gt; , &lt;code&gt;\xhh&lt;/code&gt; ( &lt;code&gt;h&lt;/code&gt; = 0&amp;ndash;9, A&amp;ndash;F)</target>
        </trans-unit>
        <trans-unit id="5797a8db22c85a3da1778a2aaa961a7ffda1db2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\xxx&lt;/code&gt; (octal value)</source>
          <target state="translated">&lt;code&gt;\xxx&lt;/code&gt; (8 진수)</target>
        </trans-unit>
        <trans-unit id="84bc8deee8a67657dae928a659631f4680823aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; (&amp;ldquo;append&amp;rdquo;)</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; (&amp;ldquo;첨부&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="6d34f4e24f7fc96798246dd51e78bcbd485c3cb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; AND &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae1a398bdc5e908c340dc1901c5c69f392065997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; OR &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 또는 &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09f914491c9f7b0c84c95955924965b0e4132b72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;&lt;code id=&quot;between&quot;&gt;BETWEEN&lt;/code&gt;&lt;code&gt;x&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt;&lt;code id=&quot;between&quot;&gt;BETWEEN&lt;/code&gt;&lt;code&gt;x&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a034c05fc6d5f537d35509def3c5377e584c9f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;&lt;code id=&quot;between32symmetric&quot;&gt;BETWEEN SYMMETRIC&lt;/code&gt;&lt;code&gt;x&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;code id=&quot;between32symmetric&quot;&gt;BETWEEN SYMMETRIC&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b40995c9eb2c17d05dd39c65f97ac2b777a66f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;&lt;code id=&quot;is32distinct32from&quot;&gt;IS DISTINCT FROM&lt;/code&gt;&lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;code id=&quot;is32distinct32from&quot;&gt;IS DISTINCT FROM&lt;/code&gt; &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d47567aa175162db9da026578931a610eac9bcc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;&lt;code id=&quot;is32not32distinct32from&quot;&gt;IS NOT DISTINCT FROM&lt;/code&gt;&lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;code id=&quot;is32not32distinct32from&quot;&gt;IS NOT DISTINCT FROM&lt;/code&gt; &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df77d11c87feb169b3ebcb1622ae10c501069c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;&lt;code id=&quot;not32between&quot;&gt;NOT BETWEEN&lt;/code&gt;&lt;code&gt;x&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;y&lt;/code&gt; &lt;code id=&quot;not32between&quot;&gt;NOT BETWEEN&lt;/code&gt; 가 아님</target>
        </trans-unit>
        <trans-unit id="7668a93abe7378306abbe8ce59f696c5632a2999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt;&lt;code id=&quot;not32between32symmetric&quot;&gt;NOT BETWEEN SYMMETRIC&lt;/code&gt;&lt;code&gt;x&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;code id=&quot;not32between32symmetric&quot;&gt;NOT BETWEEN SYMMETRIC&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;y&lt;/code&gt; 사이 가 아님</target>
        </trans-unit>
        <trans-unit id="3d8f600aaa1737e116e6d1ede19a0f5f98afb17a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abbrev(cidr '10.1.0.0/16')&lt;/code&gt; &amp;rarr; &lt;code&gt;10.1/16&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;abbrev(cidr '10.1.0.0/16')&lt;/code&gt; &amp;rarr; &lt;code&gt;10.1/16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc9ce03a9ed9f37dddcf8a548dfefb698207e841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abbrev&lt;/code&gt; ( &lt;code&gt;cidr&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;abbrev&lt;/code&gt; ( &lt;code&gt;cidr&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17a4ee5fa25b85d5c0cf181e0503459a7d198e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abbrev&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;abbrev&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="358194232dfe656bfa047a4508758b2b07f20dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs(-17)&lt;/code&gt; &amp;rarr; &lt;code&gt;17&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;abs(-17)&lt;/code&gt; &amp;rarr; &lt;code&gt;17&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="958e7fb125bbf69c06e64f6aab1994205a176c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs&lt;/code&gt; ( &lt;code&gt;number&lt;/code&gt; ) &amp;rarr; same type as input</source>
          <target state="translated">&lt;code&gt;abs&lt;/code&gt; ( &lt;code&gt;number&lt;/code&gt; ) &amp;rarr; same type as input</target>
        </trans-unit>
        <trans-unit id="5b61f9fa2dd886dd12383ed003c2256f2aab0816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acldefault&lt;/code&gt; returns the built-in default access privileges for an object of type &lt;em&gt;&lt;code&gt;type&lt;/code&gt;&lt;/em&gt; belonging to role &lt;em&gt;&lt;code&gt;ownerId&lt;/code&gt;&lt;/em&gt;. These represent the access privileges that will be assumed when an object's ACL entry is null. (The default access privileges are described in &lt;a href=&quot;ddl-priv&quot;&gt;Section 5.7&lt;/a&gt;.) The &lt;em&gt;&lt;code&gt;type&lt;/code&gt;&lt;/em&gt; parameter is a &lt;code&gt;CHAR&lt;/code&gt;: write 'c' for &lt;code&gt;COLUMN&lt;/code&gt;, 'r' for &lt;code&gt;TABLE&lt;/code&gt; and table-like objects, 's' for &lt;code&gt;SEQUENCE&lt;/code&gt;, 'd' for &lt;code&gt;DATABASE&lt;/code&gt;, 'f' for &lt;code&gt;FUNCTION&lt;/code&gt; or &lt;code&gt;PROCEDURE&lt;/code&gt;, 'l' for &lt;code&gt;LANGUAGE&lt;/code&gt;, 'L' for &lt;code&gt;LARGE OBJECT&lt;/code&gt;, 'n' for &lt;code&gt;SCHEMA&lt;/code&gt;, 't' for &lt;code&gt;TABLESPACE&lt;/code&gt;, 'F' for &lt;code&gt;FOREIGN DATA WRAPPER&lt;/code&gt;, 'S' for &lt;code&gt;FOREIGN SERVER&lt;/code&gt;, or 'T' for &lt;code&gt;TYPE&lt;/code&gt; or &lt;code&gt;DOMAIN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;acldefault&lt;/code&gt; 는 &lt;em&gt; &lt;code&gt;ownerId&lt;/code&gt; &lt;/em&gt; 역할에 속하는 유형 &lt;em&gt; &lt;code&gt;type&lt;/code&gt; &lt;/em&gt; 의 객체에 대한 기본 제공 기본 액세스 권한을 반환합니다 . 이는 객체의 ACL 항목이 null 일 때 가정되는 액세스 권한을 나타냅니다. (기본 액세스 권한은 &lt;a href=&quot;ddl-priv&quot;&gt;5.7 절&lt;/a&gt; 에 설명되어 있습니다.) &lt;em&gt; &lt;code&gt;type&lt;/code&gt; &lt;/em&gt; 매개 변수는 &lt;code&gt;CHAR&lt;/code&gt; 입니다 . &lt;code&gt;COLUMN&lt;/code&gt; 의 경우 ' c' , &lt;code&gt;TABLE&lt;/code&gt; 및 테이블과 같은 오브젝트의 경우 ' r' , &lt;code&gt;SEQUENCE&lt;/code&gt; 의 경우 's' , &lt;code&gt;DATABASE&lt;/code&gt; 의 경우 ' d' , ' &lt;code&gt;FUNCTION&lt;/code&gt; 또는 &lt;code&gt;PROCEDURE&lt;/code&gt; 경우 f ' , &lt;code&gt;LANGUAGE&lt;/code&gt; 경우'l ', &lt;code&gt;LARGE OBJECT&lt;/code&gt; 경우' L ' ,'n ' &lt;code&gt;SCHEMA&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;위한 't' &lt;code&gt;TABLESPACE&lt;/code&gt; 위한 'F' &lt;code&gt;FOREIGN DATA WRAPPER&lt;/code&gt; 들어, 'S' &lt;code&gt;FOREIGN SERVER&lt;/code&gt; 용 또는 'T' &lt;code&gt;TYPE&lt;/code&gt; 또는 &lt;code&gt;DOMAIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6fd7aeae82f25e97d94c1468f2e76bd898a5dc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aclexplode&lt;/code&gt; returns an &lt;code&gt;aclitem&lt;/code&gt; array as a set of rows. Output columns are grantor &lt;code&gt;oid&lt;/code&gt;, grantee &lt;code&gt;oid&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; for &lt;code&gt;PUBLIC&lt;/code&gt;), granted privilege as &lt;code&gt;text&lt;/code&gt; (&lt;code&gt;SELECT&lt;/code&gt;, ...) and whether the privilege is grantable as &lt;code&gt;boolean&lt;/code&gt;. &lt;code&gt;makeaclitem&lt;/code&gt; performs the inverse operation.</source>
          <target state="translated">&lt;code&gt;aclexplode&lt;/code&gt; 는 &lt;code&gt;aclitem&lt;/code&gt; 배열을 행 집합으로 반환합니다 . 출력 열 수 여자입니다 &lt;code&gt;oid&lt;/code&gt; , 피부 &lt;code&gt;oid&lt;/code&gt; ( &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;PUBLIC&lt;/code&gt; )으로 부여 된 권한 &lt;code&gt;text&lt;/code&gt; ( &lt;code&gt;SELECT&lt;/code&gt; , ...)와 특권으로 부여 할 여부 &lt;code&gt;boolean&lt;/code&gt; . &lt;code&gt;makeaclitem&lt;/code&gt; 은 역 연산을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="52ecb0625b76fa87e102eb38e6ddbe26333b6a2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aclitem&lt;/code&gt;&lt;code id=&quot;61&quot;&gt;=&lt;/code&gt;&lt;code&gt;aclitem&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aclitem&lt;/code&gt; &lt;code id=&quot;61&quot;&gt;=&lt;/code&gt; &lt;code&gt;aclitem&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cadcdc7fb847a007cbbb953c015c4ea1cc5370fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aclitem[]&lt;/code&gt;&lt;code id=&quot;126&quot;&gt;~&lt;/code&gt;&lt;code&gt;aclitem&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aclitem[]&lt;/code&gt; &lt;code id=&quot;126&quot;&gt;~&lt;/code&gt; &lt;code&gt;aclitem&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2c86f904784adddb8327828ed70491452fa9c64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aclitem[]&lt;/code&gt;&lt;code id=&quot;6462&quot;&gt;@&amp;gt;&lt;/code&gt;&lt;code&gt;aclitem&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aclitem[]&lt;/code&gt; &lt;code id=&quot;6462&quot;&gt;@&amp;gt;&lt;/code&gt; &lt;code&gt;aclitem&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eed58dc3acf43ca016cfa6fac0a64db6f8600c17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active&lt;/code&gt;: The backend is executing a query.</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; : 백엔드가 쿼리를 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="0c743d451b72d7a17c57d75af48dd8d704f50ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d1133debff0cbb530c4f9bd2c24c8e86e2d945b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_pid&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active_pid&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e53ca969dead3e7068c1bf0e93f658ac782906c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adbin&lt;/code&gt;&lt;code&gt;pg_node_tree&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;adbin&lt;/code&gt;&lt;code&gt;pg_node_tree&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3346a94a0982989be3a54b99e7a2334ce229a2d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0744a0e12a8f6d245f84fdd658a095bd5bc542f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;admin_option&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;admin_option&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4e80d319cc0031f1425ae5691fbbcc3008dced5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adminpack&lt;/code&gt; provides a number of support functions which pgAdmin and other administration and management tools can use to provide additional functionality, such as remote management of server log files. Use of all these functions is only allowed to the superuser by default but may be allowed to other users by using the &lt;code&gt;GRANT&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;adminpack&lt;/code&gt; 은 pgAdmin 및 기타 관리 및 관리 도구가 서버 로그 파일의 원격 관리와 같은 추가 기능을 제공하기 위해 사용할 수있는 많은 지원 기능을 제공합니다. 이러한 모든 기능의 사용은 기본적으로 수퍼 유저에게만 허용되지만 &lt;code&gt;GRANT&lt;/code&gt; 명령 을 사용하여 다른 사용자에게도 허용 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adaee97ada65d474aabff6bbb348a7a14c391a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adnum&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt;&lt;code&gt;pg_attribute&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;attnum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;adnum&lt;/code&gt; &lt;code&gt;int2&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt; &lt;code&gt;pg_attribute&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;attnum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5c7b9327404eee4844e174d1bae9f100f6651fab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;adrelid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt;&lt;code&gt;pg_class&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;adrelid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt; &lt;code&gt;pg_class&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8ae89c0a797b2397758394ba1be0c48b841b7041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aes&lt;/code&gt; &amp;mdash; AES (Rijndael-128, -192 or -256)</source>
          <target state="translated">&lt;code&gt;aes&lt;/code&gt; &amp;mdash; AES (Rijndael-128, -192 또는 -256)</target>
        </trans-unit>
        <trans-unit id="fe4a7dfa214d2cfd42c7c249fb1a0d0f15742a83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;age(timestamp '1957-06-13')&lt;/code&gt; &amp;rarr; &lt;code&gt;62 years 6 mons 10 days&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;age(timestamp '1957-06-13')&lt;/code&gt; &amp;rarr; &lt;code&gt;62 years 6 mons 10 days&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6083df0f483c07925d94cb213da6c93aa68546d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;age&lt;/code&gt; ( &lt;code&gt;timestamp&lt;/code&gt; ) &amp;rarr; &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;age&lt;/code&gt; ( &lt;code&gt;timestamp&lt;/code&gt; ) &amp;rarr; &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1baa3cb80544130a0a0d9bc182934a709786154c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggcombinefn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggcombinefn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="37f3836ff6e6bc4dcf51c72cc7ec0df827948abd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggdeserialfn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggdeserialfn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bdac89e0159d98987b8f931369b9f1de860663bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggfinalextra&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggfinalextra&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a7d237492a259266175dd006252abbfc6b93510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggfinalfn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggfinalfn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="172741e7fde8d5d2597f1e7b365e924e4857ddeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggfinalmodify&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggfinalmodify&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20d3280cbc36d0b4d2da4a56a468ba9e1ca963d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggfnoid&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggfnoid&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c6a76418e066d6922aeb4449ef538fdf49c48c04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;agginitval&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;agginitval&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0b76de257f958911dbda721f307a6cec0286cb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggkind&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggkind&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9ad3422aff07e807ee3edcf217481a00bc34c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggmfinalextra&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggmfinalextra&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b833e3f24a738f75afa3cd91bda074bf8c2945e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggmfinalfn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggmfinalfn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a649987b8efe3025cd06c63e0aa9a2d40236adb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggmfinalmodify&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggmfinalmodify&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fce1fc814401c0e61fcb5740105aff9c87c8748b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggminitval&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggminitval&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e9861bd49f8b8c79255e0f874fbadb31655498d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggminvtransfn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggminvtransfn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="df3761dc601e8fa822aa01f513381bd003cf5e42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggmtransfn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggmtransfn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8a62b2d15ebcd4d89e0a67de1e6f5612bb33138e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggmtransspace&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggmtransspace&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9d072da8f8637b7e3a534cd16bfcd9545b239b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggmtranstype&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggmtranstype&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6f0ca49ff693826ad00bfefdbd6bcfb95354a9ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggnumdirectargs&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggnumdirectargs&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69bff3d513bd922fda2ceac33606aea52e73bcb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggserialfn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggserialfn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="86ae48f9e0e74053f1c9d78217e58484bd904079" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggsortop&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt;&lt;code&gt;pg_operator&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggsortop&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt; &lt;code&gt;pg_operator&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="349781008b1fe8437c8619fd5c68baef8b01e556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggtransfn&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggtransfn&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ef1f426ee53fd6b402b04224da797fef2c50fdd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggtransspace&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aggtransspace&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9a94b167228be701363a57d28a283e27d8ca84e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggtranstype&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;aggtranstype&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c2a43e905ce315e9858b3e07deb8a0e180747725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;akeys('a=&amp;gt;1,b=&amp;gt;2')&lt;/code&gt; &amp;rarr; &lt;code&gt;{a,b}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;akeys('a=&amp;gt;1,b=&amp;gt;2')&lt;/code&gt; &amp;rarr; &lt;code&gt;{a,b}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc05fc768b4d64ec2cec82c7013d90556aac4a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;akeys&lt;/code&gt; ( &lt;code&gt;hstore&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;akeys&lt;/code&gt; ( &lt;code&gt;hstore&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4750275affff8310aabd784e94da9699b78e9666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt;&lt;code&gt;text&lt;/code&gt; &amp;mdash; short name of the token type</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; &lt;code&gt;text&lt;/code&gt; &amp;mdash; 토큰 유형의 짧은 이름</target>
        </trans-unit>
        <trans-unit id="10b1e514554703917dd5bea36f86739c85f73d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aligned&lt;/code&gt; format is the standard, human-readable, nicely formatted text output; this is the default.</source>
          <target state="translated">&lt;code&gt;aligned&lt;/code&gt; 형식은 사람이 읽을 수있는 표준 형식의 텍스트 출력입니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="c12317b66af85e969b2ad53fad222d679bca5fba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allocated_size&lt;/code&gt;&lt;code&gt;int8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;allocated_size&lt;/code&gt;&lt;code&gt;int8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec2395364a445e61a5009766fd584054599f80fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_system_table_mods&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;allow_system_table_mods&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e0897f6db2b52160010a12920048194e3ba9f142" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amcheck&lt;/code&gt; can be effective at detecting various types of failure modes that &lt;a href=&quot;app-initdb#APP-INITDB-DATA-CHECKSUMS&quot;&gt;data page checksums&lt;/a&gt; will always fail to catch. These include:</source>
          <target state="translated">&lt;code&gt;amcheck&lt;/code&gt; 는 &lt;a href=&quot;app-initdb#APP-INITDB-DATA-CHECKSUMS&quot;&gt;데이터 페이지 체크섬&lt;/a&gt; 이 항상 포착하지 못하는 다양한 유형의 실패 모드를 감지하는 데 효과적 일 수 있습니다 . 여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="df97802a1382e7f131f8d0eaa67148065551599b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amcheck&lt;/code&gt; functions may only be used by superusers.</source>
          <target state="translated">&lt;code&gt;amcheck&lt;/code&gt; 기능은 수퍼 유저 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfec06c2ca55429467141b9e12410206bbedceb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amhandler&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amhandler&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5e579552aad55b6e8779347b2a80f0e1d80f29d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;amname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="447d7bc621e2d08e998c05e22102cb6b6d91693e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amopfamily&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-opfamily&quot;&gt;&lt;code&gt;pg_opfamily&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amopfamily&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-opfamily&quot;&gt; &lt;code&gt;pg_opfamily&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8b82fad866101c0e78b0ebbb9b59e1cc993aa7fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amoplefttype&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amoplefttype&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bbe63b9ec63b037c9eae689283b49b9e7e3d0bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amopmethod&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-am&quot;&gt;&lt;code&gt;pg_am&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amopmethod&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-am&quot;&gt; &lt;code&gt;pg_am&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8dd80650d233893ab2f4945f585f4cade20b61cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amopopr&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt;&lt;code&gt;pg_operator&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amopopr&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt; &lt;code&gt;pg_operator&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="339883239cf8f0f78c7be63f85d2c596ba283aa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amoppurpose&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;amoppurpose&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82b2b9380a0748c9b1165f4eaf353bcfbd6f220b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amoprighttype&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amoprighttype&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="af6868954f1fecd8ba21dd75f8c76104d9ea5b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amopsortfamily&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-opfamily&quot;&gt;&lt;code&gt;pg_opfamily&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amopsortfamily&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-opfamily&quot;&gt; &lt;code&gt;pg_opfamily&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0356bdf95cc72c3bee3eab9d74ad985aa516ef32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amopstrategy&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;amopstrategy&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39aee59e16c9831ff63af0dd4f3835236fef603a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amproc&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amproc&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f5ee755ee70723a23f3a74b239741f4b31f23793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amprocfamily&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-opfamily&quot;&gt;&lt;code&gt;pg_opfamily&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amprocfamily&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-opfamily&quot;&gt; &lt;code&gt;pg_opfamily&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="51bd6e02aee1221723991cde9dcc847930656bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amproclefttype&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amproclefttype&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0cca9b81cc393fe2bf0e77f42cdb0f1b08750aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amprocnum&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;amprocnum&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba8c8f7f65a1f4c20010911850bfe6f6cb69cdea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amprocrighttype&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;amprocrighttype&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8907154b8100a07ed45d683fa5cf1e0114e8f4f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amtype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;amtype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68de4b49f876fe76e74f8ea657cf119d31a26041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;analyze_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;analyze_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04d0b96bed47b4f0712899cc9ce935242b7a6360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyarray&lt;/code&gt;&lt;code id=&quot;124124&quot;&gt;||&lt;/code&gt;&lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyarray&lt;/code&gt; &lt;code id=&quot;124124&quot;&gt;||&lt;/code&gt; &lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45eb2779a00b2013dba41690a322781f3bdace72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyarray&lt;/code&gt;&lt;code id=&quot;3838&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyarray&lt;/code&gt; &lt;code id=&quot;3838&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdb098d183399eff0969f09b6dcc9d7da8eb4463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyarray&lt;/code&gt;&lt;code id=&quot;6064&quot;&gt;&amp;lt;@&lt;/code&gt;&lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyarray&lt;/code&gt; &lt;code id=&quot;6064&quot;&gt;&amp;lt;@&lt;/code&gt; &lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbda4720b24d2d33366845f10b3564c17ccbe921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyarray&lt;/code&gt;&lt;code id=&quot;6462&quot;&gt;@&amp;gt;&lt;/code&gt;&lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyarray&lt;/code&gt; &lt;code id=&quot;6462&quot;&gt;@&amp;gt;&lt;/code&gt; &lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36c6ba677bcf869f2ad67d509c40be9c98ede8c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyarray&lt;/code&gt;&lt;code&gt;||&lt;/code&gt;&lt;code&gt;anyelement&lt;/code&gt; &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyarray&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;anyelement&lt;/code&gt; &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="946c7960d6ca2a365eeee39bf129dba9a5d3074d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyelement&lt;/code&gt;&lt;code&gt;#=&lt;/code&gt;&lt;code&gt;hstore&lt;/code&gt; &amp;rarr; &lt;code&gt;anyelement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyelement&lt;/code&gt; &lt;code&gt;#=&lt;/code&gt; &lt;code&gt;hstore&lt;/code&gt; &amp;rarr; &lt;code&gt;anyelement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97eb2c0d936cb5ea8611f0a6744dda92118ecf1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyelement&lt;/code&gt;&lt;code&gt;&amp;lt;@&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyelement&lt;/code&gt; &lt;code&gt;&amp;lt;@&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a84c0ac2688e639e0d0186ef7e451bf14c6f1c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyelement&lt;/code&gt;&lt;code&gt;||&lt;/code&gt;&lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyelement&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;anyarray&lt;/code&gt; &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43b871a5ced3640ecc182580eeecebf5ee42ee98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anynonarray&lt;/code&gt;&lt;code&gt;||&lt;/code&gt;&lt;code&gt;text&lt;/code&gt; &amp;rarr; &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anynonarray&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;text&lt;/code&gt; &amp;rarr; &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbaace5db10f76ce1dcfc01899ae888b342bf6c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;124&quot;&gt;-|-&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;124&quot;&gt;-|-&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87a60dcef1746857af9160826260083ce5ab2d9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;3838&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;3838&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f12354a9c1621582074666589c8d3712d1341e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;3860&quot;&gt;&amp;amp;&amp;lt;&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;3860&quot;&gt;&amp;amp;&amp;lt;&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9660191e881a52b7f704343457a6acc8f2108a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;3862&quot;&gt;&amp;amp;&amp;gt;&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;3862&quot;&gt;&amp;amp;&amp;gt;&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0b19d9ce8235b845db30309c3ea4d95265cd5b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;42&quot;&gt;*&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;anyrange&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;42&quot;&gt;*&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;anyrange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5aaa7feeb52ab406994571462a887ac05306cb38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;43&quot;&gt;+&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;anyrange&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;43&quot;&gt;+&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;anyrange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8642e56586683aa4507ac4496237d0ce702926d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;6060&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;6060&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a05e93c65cd098985751d17d348aeedd8a90d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;6064&quot;&gt;&amp;lt;@&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;6064&quot;&gt;&amp;lt;@&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="738fe0da9dd566c32921540b0b23cf6b83d39370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;6262&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;6262&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="231e1c8bd5b02cbe1fdb61d7d5e7475411deacb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code id=&quot;6462&quot;&gt;@&amp;gt;&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code id=&quot;6462&quot;&gt;@&amp;gt;&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ce24a25e79be63356d5400a8a3e27072b92cf90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;anyrange&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;anyrange&lt;/code&gt; &amp;rarr; &lt;code&gt;anyrange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cea986d89997f1a33740b68513e277404d2702fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyrange&lt;/code&gt;&lt;code&gt;@&amp;gt;&lt;/code&gt;&lt;code&gt;anyelement&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;anyrange&lt;/code&gt; &lt;code&gt;@&amp;gt;&lt;/code&gt; &lt;code&gt;anyelement&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83e28b3ec66f269c9e4f2f8e6628ea49467f3a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application_name&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;application_name&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5cb5ca1d3c70863fc07dc434ecec1130feab9e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application_name&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;application_name&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65535e316e5db3353beadb7647550c800446d234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;applied&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;applied&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="782a401641cf673d16a28c6a87f0305ad27486f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;archive_cleanup_command&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;archive_cleanup_command&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="aae4b114e63103a00e0644603ade60b5d6e4f480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;archive_command&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;archive_command&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="188ca1ff65214880763cce5eb35c4a87081810d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;archive_mode&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;archive_mode&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c312286920fd0c3a325f3ee73a10c80fd4c4aef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;archive_mode&lt;/code&gt; and &lt;code&gt;archive_command&lt;/code&gt; are separate variables so that &lt;code&gt;archive_command&lt;/code&gt; can be changed without leaving archiving mode. This parameter can only be set at server start. &lt;code&gt;archive_mode&lt;/code&gt; cannot be enabled when &lt;code&gt;wal_level&lt;/code&gt; is set to &lt;code&gt;minimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;archive_mode&lt;/code&gt; 및 &lt;code&gt;archive_command&lt;/code&gt; 는 별도의 변수이므로 아카이빙 모드를 종료하지 않고 &lt;code&gt;archive_command&lt;/code&gt; 를 변경할 수 있습니다. 이 매개 변수는 서버 시작시에만 설정할 수 있습니다. &lt;code&gt;wal_level&lt;/code&gt; 이 &lt;code&gt;minimal&lt;/code&gt; 로 설정되어 있으면 &lt;code&gt;archive_mode&lt;/code&gt; 를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="211e96072b600deece8a80e931f721b0d79169e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;archive_timeout&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;archive_timeout&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d7771b06ea7badd15161179f539421516a640044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;archived_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;archived_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05efb5ede862c723855a02fb1560cf5846b056c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_agg&lt;/code&gt; ( &lt;code&gt;anyarray&lt;/code&gt; ) &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array_agg&lt;/code&gt; ( &lt;code&gt;anyarray&lt;/code&gt; ) &amp;rarr; &lt;code&gt;anyarray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18450fca7e1f4bb355860c0ca1847f796ec041be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_dims&lt;/code&gt; produces a &lt;code&gt;text&lt;/code&gt; result, which is convenient for people to read but perhaps inconvenient for programs. Dimensions can also be retrieved with &lt;code&gt;array_upper&lt;/code&gt; and &lt;code&gt;array_lower&lt;/code&gt;, which return the upper and lower bound of a specified array dimension, respectively:</source>
          <target state="translated">&lt;code&gt;array_dims&lt;/code&gt; 는 &lt;code&gt;text&lt;/code&gt; 결과를 생성하여 사람들이 읽기 편하지만 프로그램에는 불편할 수 있습니다. 지정된 배열 차원의 상한과 하한을 각각 반환하는 &lt;code&gt;array_upper&lt;/code&gt; 및 &lt;code&gt;array_lower&lt;/code&gt; 를 사용 하여 차원을 검색 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c0d13a74e6935f627ee454d7a5ac76db940a75fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_fill(7, ARRAY[3], ARRAY[2])&lt;/code&gt; &amp;rarr; &lt;code&gt;[2:4]={7,7,7}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array_fill(7, ARRAY[3], ARRAY[2])&lt;/code&gt; &amp;rarr; &lt;code&gt;[2:4]={7,7,7}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa436b8fc63d6630377d858b3fdaf2ceace823d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_length&lt;/code&gt; will return the length of a specified array dimension:</source>
          <target state="translated">&lt;code&gt;array_length&lt;/code&gt; 는 지정된 배열 차원의 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0da428682552cc4f93a3e1523e40cf79309102ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_nulls&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;array_nulls&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cb6d2ad6b054db7e060bccc6470aacdf2d61498b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_to_json('{{1,5},{99,100}}'::int[])&lt;/code&gt; &amp;rarr; &lt;code&gt;[[1,5],[99,100]]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array_to_json('{{1,5},{99,100}}'::int[])&lt;/code&gt; &amp;rarr; &lt;code&gt;[[1,5],[99,100]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f74349d33cb25da91514b689316bedcaba5024e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_to_json&lt;/code&gt; ( &lt;code&gt;anyarray&lt;/code&gt; [, &lt;code&gt;boolean&lt;/code&gt; ] ) &amp;rarr; &lt;code&gt;json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array_to_json&lt;/code&gt; ( &lt;code&gt;anyarray&lt;/code&gt; [, &lt;code&gt;boolean&lt;/code&gt; ] ) &amp;rarr; &lt;code&gt;json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d70be6c23f2bdd813c66168a5a6f465943d804d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array_to_json&lt;/code&gt; and &lt;code&gt;row_to_json&lt;/code&gt; have the same behavior as &lt;code&gt;to_json&lt;/code&gt; except for offering a pretty-printing option. The behavior described for &lt;code&gt;to_json&lt;/code&gt; likewise applies to each individual value converted by the other JSON creation functions.</source>
          <target state="translated">&lt;code&gt;array_to_json&lt;/code&gt; 및 &lt;code&gt;row_to_json&lt;/code&gt; 은 예쁜 인쇄 옵션을 제공하는 것을 제외하고 &lt;code&gt;to_json&lt;/code&gt; 과 동일한 동작을 갖습니다 . &lt;code&gt;to_json&lt;/code&gt; 에 대해 설명 된 동작은 마찬가지로 다른 JSON 작성 함수로 변환 된 각 개별 값에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="50102cad1e985b7b9e50da387c46ea8fb594b1b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ascii('x')&lt;/code&gt; &amp;rarr; &lt;code&gt;120&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ascii('x')&lt;/code&gt; &amp;rarr; &lt;code&gt;120&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fa3a6db069d7943d00b5bef193fd767a6929986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ascii&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ascii&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdee2f2f8937f912a7386754055cff9851a03a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ascii&lt;/code&gt; style uses plain ASCII characters. Newlines in data are shown using a &lt;code&gt;+&lt;/code&gt; symbol in the right-hand margin. When the &lt;code&gt;wrapped&lt;/code&gt; format wraps data from one line to the next without a newline character, a dot (&lt;code&gt;.&lt;/code&gt;) is shown in the right-hand margin of the first line, and again in the left-hand margin of the following line.</source>
          <target state="translated">&lt;code&gt;ascii&lt;/code&gt; 스타일은 일반 ASCII 문자를 사용합니다. 데이터의 줄 바꿈 은 오른쪽 여백에 &lt;code&gt;+&lt;/code&gt; 기호를 사용하여 표시됩니다 . &lt;code&gt;wrapped&lt;/code&gt; 형식이 개행 문자없이 한 행에서 다음 행으로 데이터를 랩핑 할 때 첫 번째 행의 오른쪽 여백에 점 ( &lt;code&gt;.&lt;/code&gt; )이 표시되고 다음 행의 왼쪽 여백에 점 ( . )이 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a3982015b8306395d567a34f1e680e1597446525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;: This standby server is asynchronous.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; :이 대기 서버는 비동기입니다.</target>
        </trans-unit>
        <trans-unit id="699c96eddff45e143a75d817d89fe1593494a127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attType&lt;/code&gt; is passed in order to support polymorphic index operator classes; for ordinary fixed-data-type operator classes, it will always have the same value and so can be ignored.</source>
          <target state="translated">&lt;code&gt;attType&lt;/code&gt; 다형성 인덱스 연산자 클래스를 지원하기 위해 attType 이 전달됩니다. 일반 고정 데이터 유형 연산자 클래스의 경우 항상 동일한 값을 가지므로 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7429e27abe821be70cf22c790d3dd7630c419ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attacl&lt;/code&gt;&lt;code&gt;aclitem[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attacl&lt;/code&gt;&lt;code&gt;aclitem[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71f8b774f0435da705080b1d717c67788f210930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attalign&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attalign&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="598d25a39a8a3bd1a55c08de98295ff3adb5b15f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attbyval&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attbyval&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0193b7820a4091a1bd16cb04ffd32c28a1e315c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attcacheoff&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attcacheoff&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cfa760ffd659419fc5732bbf575e33ab18c4302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attcollation&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-collation&quot;&gt;&lt;code&gt;pg_collation&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;attcollation&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-collation&quot;&gt; &lt;code&gt;pg_collation&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c21cdf59f67f7f79c91224691e21915082431457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attfdwoptions&lt;/code&gt;&lt;code&gt;text[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attfdwoptions&lt;/code&gt;&lt;code&gt;text[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0e3746aab819be1818e01e4874781779ca68280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attgenerated&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attgenerated&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d91df5b3e8d289baf27a5baa3043b25c5fba8be7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atthasdef&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atthasdef&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71d54d9af72dd615273477e5bbf0a722cf339a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atthasmissing&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atthasmissing&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43536bfd0f2000de59ed58f394a34bd9489ef864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attidentity&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attidentity&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e7fe01303ebe47bc4895ab3aa23c6e02cb7acd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attinhcount&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attinhcount&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="743c241001f3f39f4a8b8cfbf9a1b34ae02b273b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attisdropped&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attisdropped&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1d7cd36b3a664d7eb1923a93e56133cfc71362b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attislocal&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attislocal&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9e88d33a96aa6e1ab2f34f9e5cf8ca5195ca63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attlen&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attlen&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62db194b75b4d250672d336a2dafcae3b263fd1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attmissingval&lt;/code&gt;&lt;code&gt;anyarray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attmissingval&lt;/code&gt;&lt;code&gt;anyarray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1770ec360556aac414a395c649110ebfe18f3c25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04eade4109451288f8a95e4ba4a7f3b4124ca8aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt;&lt;code&gt;pg_attribute&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;attname&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;attname&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt; &lt;code&gt;pg_attribute&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;attname&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3b37f635dfa6bf05377dfe203e484ac2e67ca2ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attnames&lt;/code&gt;&lt;code&gt;name[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt;&lt;code&gt;pg_attribute&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;attname&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;attnames&lt;/code&gt; &lt;code&gt;name[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt; &lt;code&gt;pg_attribute&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;attname&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b6032a30c69e59676d151a6c0f148b084ea62423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attndims&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attndims&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2aed908fbdbc14e8102ee3e5fa2f153a70d3364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attnotnull&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attnotnull&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32bc0d180cbc1cbf429518caee3e0722f5179860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attnum&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attnum&lt;/code&gt;&lt;code&gt;int2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd9d47d3153e8f939b64f97211a8720341f7adc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attoptions&lt;/code&gt;&lt;code&gt;text[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attoptions&lt;/code&gt;&lt;code&gt;text[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1059e72ef30c917a9c6ca0f4e8860dba50ab303f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrelid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt;&lt;code&gt;pg_class&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;attrelid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt; &lt;code&gt;pg_class&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4fe38a309398cda08b9d3c7d683bc2c0732bb065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attstattarget&lt;/code&gt; controls the level of detail of statistics accumulated for this column by &lt;a href=&quot;sql-analyze&quot;&gt;ANALYZE&lt;/a&gt;. A zero value indicates that no statistics should be collected. A negative value says to use the system default statistics target. The exact meaning of positive values is data type-dependent. For scalar data types, &lt;code&gt;attstattarget&lt;/code&gt; is both the target number of &amp;ldquo;most common values&amp;rdquo; to collect, and the target number of histogram bins to create.</source>
          <target state="translated">&lt;code&gt;attstattarget&lt;/code&gt; 는 의한 열이 축적 된 통계의 세부 사항의 레벨을 제어 &lt;a href=&quot;sql-analyze&quot;&gt;ANALYZE를&lt;/a&gt; . 값이 0이면 통계를 수집하지 않아야 함을 나타냅니다. 음수 값은 시스템 기본 통계 대상을 사용하라는 메시지입니다. 양수 값의 정확한 의미는 데이터 유형에 따라 다릅니다. 스칼라 데이터 형식의 경우 &lt;code&gt;attstattarget&lt;/code&gt; 은 수집 할 &quot;가장 일반적인 값&quot;의 대상 수와 만들 히스토그램 저장소의 대상 수입니다.</target>
        </trans-unit>
        <trans-unit id="07e49bda6af62d0d9e36dac30fa3f1e8c0266265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attstattarget&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attstattarget&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39ec09d81c7f116fd3a18c2d604fc529aebcb101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attstorage&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attstorage&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c15fee04ab501a3ce33fe73f1873e09814e5817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atttypid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;atttypid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;oid&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2fe3224df3366d97c6b99540b8594e163154959e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atttypmod&lt;/code&gt; records type-specific data supplied at table creation time (for example, the maximum length of a &lt;code&gt;varchar&lt;/code&gt; column). It is passed to type-specific input functions and length coercion functions. The value will generally be -1 for types that do not need &lt;code&gt;atttypmod&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atttypmod&lt;/code&gt; 는 테이블 작성시 제공된 유형별 데이터 (예 : &lt;code&gt;varchar&lt;/code&gt; 열의 최대 길이 )를 기록합니다. 유형별 입력 함수 및 길이 강제 함수로 전달됩니다. &lt;code&gt;atttypmod&lt;/code&gt; 가 필요없는 유형의 경우 일반적으로 값은 -1입니다 .</target>
        </trans-unit>
        <trans-unit id="2940d442122d267d80ffccbaf6cdf0ea1febf28f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atttypmod&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atttypmod&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3571fd2d48b0ac2ec69e622df343d503fd4d6785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth_delay.milliseconds&lt;/code&gt; (&lt;code&gt;int&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auth_delay.milliseconds&lt;/code&gt; ( &lt;code&gt;int&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cd61b03481638c83cc6a73c4c1208492ca22cada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth_delay&lt;/code&gt; causes the server to pause briefly before reporting authentication failure, to make brute-force attacks on database passwords more difficult. Note that it does nothing to prevent denial-of-service attacks, and may even exacerbate them, since processes that are waiting before reporting authentication failure will still consume connection slots.</source>
          <target state="translated">&lt;code&gt;auth_delay&lt;/code&gt; 는 인증 실패를보고하기 전에 서버가 잠시 일시 중지되어 데이터베이스 암호에 대한 무차별 대입 공격을보다 어렵게 만듭니다. 인증 실패를보고하기 전에 대기중인 프로세스는 여전히 연결 슬롯을 사용하기 때문에 서비스 거부 공격을 막을 수있는 것은 아니며 공격을 악화시킬 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="633103c902d81bc539c2a04e6f1215149d2d9f66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth_method&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;auth_method&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24dd9764b023901fdee4017d362b60baad79770e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;authentication_timeout&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;authentication_timeout&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="07746c1178877feea98d42d0f4d49a2d652a3694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_analyze&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_analyze&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="df1eabf7cabd9590ca0fe7babb0c44ed556651e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_analyze&lt;/code&gt; causes &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; output, rather than just &lt;code&gt;EXPLAIN&lt;/code&gt; output, to be printed when an execution plan is logged. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_analyze&lt;/code&gt; 의 원인 &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; 단지보다는 출력 &lt;code&gt;EXPLAIN&lt;/code&gt; 실행 계획이 기록 될 때 인쇄 될 출력한다. 이 매개 변수는 기본적으로 해제되어 있습니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0226876cb466b4c6900adcba843b8df340835a9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_buffers&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_buffers&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5c9cb3669b1a1d99efaf68364eb9e1c09f6cafb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_buffers&lt;/code&gt; controls whether buffer usage statistics are printed when an execution plan is logged; it's equivalent to the &lt;code&gt;BUFFERS&lt;/code&gt; option of &lt;code&gt;EXPLAIN&lt;/code&gt;. This parameter has no effect unless &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; is enabled. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_buffers&lt;/code&gt; 는 실행 계획이 로그 될 때 버퍼 사용 통계가 인쇄되는지 여부를 제어합니다. &lt;code&gt;EXPLAIN&lt;/code&gt; 의 &lt;code&gt;BUFFERS&lt;/code&gt; 옵션과 동일합니다 . &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; 를 사용 하지 않으면이 매개 변수가 적용되지 않습니다 . 이 매개 변수는 기본적으로 해제되어 있습니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df12016846b8904a767e68008c7c31d6108d8b80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_format&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_format&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="857d4312482a9356701d7c180cd5ae4ad5be26d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_format&lt;/code&gt; selects the &lt;code&gt;EXPLAIN&lt;/code&gt; output format to be used. The allowed values are &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, and &lt;code&gt;yaml&lt;/code&gt;. The default is text. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_format&lt;/code&gt; 은 사용할 &lt;code&gt;EXPLAIN&lt;/code&gt; 출력 형식을 선택합니다 . 허용되는 값은 &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;xml&lt;/code&gt; , &lt;code&gt;json&lt;/code&gt; 및 &lt;code&gt;yaml&lt;/code&gt; 입니다. 기본값은 텍스트입니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="daad34636b28679e85c4d16cbf6797af1cf1912c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_level&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_level&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ac289ad5d1d2d7c4717a6375a5b37eac4db407f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_level&lt;/code&gt; selects the log level at which auto_explain will log the query plan. Valid values are &lt;code&gt;DEBUG5&lt;/code&gt;, &lt;code&gt;DEBUG4&lt;/code&gt;, &lt;code&gt;DEBUG3&lt;/code&gt;, &lt;code&gt;DEBUG2&lt;/code&gt;, &lt;code&gt;DEBUG1&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;NOTICE&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, and &lt;code&gt;LOG&lt;/code&gt;. The default is &lt;code&gt;LOG&lt;/code&gt;. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_level&lt;/code&gt; 은 auto_explain이 쿼리 계획을 기록 할 로그 수준을 선택합니다. 유효한 값은 &lt;code&gt;DEBUG5&lt;/code&gt; , &lt;code&gt;DEBUG4&lt;/code&gt; , &lt;code&gt;DEBUG3&lt;/code&gt; , &lt;code&gt;DEBUG2&lt;/code&gt; , &lt;code&gt;DEBUG1&lt;/code&gt; , &lt;code&gt;INFO&lt;/code&gt; , &lt;code&gt;NOTICE&lt;/code&gt; , &lt;code&gt;WARNING&lt;/code&gt; 및 &lt;code&gt;LOG&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;LOG&lt;/code&gt; 입니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="142179f1a4c1675c06cee774f4b2157fe8d444b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_min_duration&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_min_duration&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="25177f9912542038951c826afddf1bbe8000c725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_min_duration&lt;/code&gt; is the minimum statement execution time, in milliseconds, that will cause the statement's plan to be logged. Setting this to &lt;code&gt;0&lt;/code&gt; logs all plans. &lt;code&gt;-1&lt;/code&gt; (the default) disables logging of plans. For example, if you set it to &lt;code&gt;250ms&lt;/code&gt; then all statements that run 250ms or longer will be logged. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_min_duration&lt;/code&gt; 은 명령문의 계획이 로그되는 최소 명령문 실행 시간 (밀리 초)입니다. 이것을 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 모든 계획 이 기록됩니다. &lt;code&gt;-1&lt;/code&gt; (기본값)은 계획 로깅을 비활성화합니다. 예를 들어, &lt;code&gt;250ms&lt;/code&gt; 로 설정하면 250ms 이상을 실행하는 모든 명령문이 기록됩니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06599ea7fae0868ee0187df4416e407838568269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_nested_statements&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_nested_statements&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b632691720445df2b0698decb2277b1fa222cab1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_nested_statements&lt;/code&gt; causes nested statements (statements executed inside a function) to be considered for logging. When it is off, only top-level query plans are logged. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_nested_statements&lt;/code&gt; 는 중첩 명령문 (함수 내에서 실행 된 명령문)이 로깅을 고려하도록합니다. 해제되어 있으면 최상위 쿼리 계획 만 기록됩니다. 이 매개 변수는 기본적으로 해제되어 있습니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4aebb373819fbaa18e37a83d142b3786e5547e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_settings&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_settings&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="946a08b3f3c712df51a41c2f3d69191b73e83708" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_settings&lt;/code&gt; controls whether information about modified configuration options are printed when execution plan is logged. Only options affecting query planning with value different from the built-in default value are included in the output. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_settings&lt;/code&gt; 는 실행 계획이 기록 될 때 수정 된 구성 옵션에 대한 정보를 인쇄할지 여부를 제어합니다. 기본 제공 기본값과 다른 값으로 쿼리 계획에 영향을주는 옵션 만 출력에 포함됩니다. 이 매개 변수는 기본적으로 해제되어 있습니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c99ff3d4bd41472298bad3e373baab65ca96d766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_settings&lt;/code&gt; controls whether information about modified configuration options is printed when an execution plan is logged. Only options affecting query planning with value different from the built-in default value are included in the output. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_settings&lt;/code&gt; controls whether information about modified configuration options is printed when an execution plan is logged. Only options affecting query planning with value different from the built-in default value are included in the output. This parameter is off by default. Only superusers can change this setting.</target>
        </trans-unit>
        <trans-unit id="38088edfea90d6ff4883aaea9f7e359be8969da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_timing&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_timing&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6c79bfc5856b2232f8a7990eb44faa9503aaaa82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_timing&lt;/code&gt; controls whether per-node timing information is printed when an execution plan is logged; it's equivalent to the &lt;code&gt;TIMING&lt;/code&gt; option of &lt;code&gt;EXPLAIN&lt;/code&gt;. The overhead of repeatedly reading the system clock can slow down queries significantly on some systems, so it may be useful to set this parameter to off when only actual row counts, and not exact times, are needed. This parameter has no effect unless &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; is enabled. This parameter is on by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_timing&lt;/code&gt; 은 실행 계획이 로그 될 때 노드 별 타이밍 정보가 인쇄되는지 여부를 제어합니다. &lt;code&gt;EXPLAIN&lt;/code&gt; 의 &lt;code&gt;TIMING&lt;/code&gt; 옵션과 동일합니다 . 시스템 클럭을 반복해서 읽는 오버 헤드로 인해 일부 시스템에서 쿼리 속도가 크게 느려질 수 있으므로 정확한 시간이 아닌 실제 행 개수 만 필요한 경우이 매개 변수를 off로 설정하면 유용 할 수 있습니다. &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; 를 사용 하지 않으면이 매개 변수가 적용되지 않습니다 . 이 매개 변수는 기본적으로 켜져 있습니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c0b41061dbc8ee0e73a5ac67aab0741c1ec920a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_triggers&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_triggers&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c7319e00e576c6af61b088d4b047a839648b930c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_triggers&lt;/code&gt; causes trigger execution statistics to be included when an execution plan is logged. This parameter has no effect unless &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; is enabled. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_triggers&lt;/code&gt; 는 실행 계획이 로깅 될 때 트리거 실행 통계가 포함되도록합니다. &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; 를 사용 하지 않으면이 매개 변수가 적용되지 않습니다 . 이 매개 변수는 기본적으로 해제되어 있습니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35dda9ba4ad0eb2207779945df4cd29fee410e45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_verbose&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_verbose&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7f743e528d4383a617a49a1c1a5dab08af781de2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_verbose&lt;/code&gt; controls whether verbose details are printed when an execution plan is logged; it's equivalent to the &lt;code&gt;VERBOSE&lt;/code&gt; option of &lt;code&gt;EXPLAIN&lt;/code&gt;. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_verbose&lt;/code&gt; 는 실행 계획이 기록 될 때 자세한 정보가 인쇄되는지 여부를 제어합니다. &lt;code&gt;EXPLAIN&lt;/code&gt; 의 &lt;code&gt;VERBOSE&lt;/code&gt; 옵션과 동일합니다 . 이 매개 변수는 기본적으로 해제되어 있습니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e6f2cbb3882fa5c6f438346af461bda291d7177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_wal&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.log_wal&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cc813abb062d59dfe248195026e7b2cd22deafc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.log_wal&lt;/code&gt; controls whether WAL usage statistics are printed when an execution plan is logged; it's equivalent to the &lt;code&gt;WAL&lt;/code&gt; option of &lt;code&gt;EXPLAIN&lt;/code&gt;. This parameter has no effect unless &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; is enabled. This parameter is off by default. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.log_wal&lt;/code&gt; controls whether WAL usage statistics are printed when an execution plan is logged; it's equivalent to the &lt;code&gt;WAL&lt;/code&gt; option of &lt;code&gt;EXPLAIN&lt;/code&gt; . This parameter has no effect unless &lt;code&gt;auto_explain.log_analyze&lt;/code&gt; is enabled. This parameter is off by default. Only superusers can change this setting.</target>
        </trans-unit>
        <trans-unit id="40b0d7023ac089772432b50475251b3c38824ea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.sample_rate&lt;/code&gt; (&lt;code&gt;real&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;auto_explain.sample_rate&lt;/code&gt; ( &lt;code&gt;real&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7c8938cc8c0974177ff37219009beb6725e680dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto_explain.sample_rate&lt;/code&gt; causes auto_explain to only explain a fraction of the statements in each session. The default is 1, meaning explain all the queries. In case of nested statements, either all will be explained or none. Only superusers can change this setting.</source>
          <target state="translated">&lt;code&gt;auto_explain.sample_rate&lt;/code&gt; 는 auto_explain이 각 세션에서 명령문의 일부만 설명하도록합니다. 기본값은 1이며 모든 쿼리를 설명합니다. 중첩 된 명령문의 경우 모두 설명되거나 생략됩니다. 수퍼 유저 만이 설정을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca5496c935637aedf4cad31c2901b2f51acbf7cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoanalyze_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;autoanalyze_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f96416d25edfeeddea625a7476216332c5777d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoinc()&lt;/code&gt; is a trigger that stores the next value of a sequence into an integer field. This has some overlap with the built-in &amp;ldquo;serial column&amp;rdquo; feature, but it is not the same: &lt;code&gt;autoinc()&lt;/code&gt; will override attempts to substitute a different field value during inserts, and optionally it can be used to increment the field during updates, too.</source>
          <target state="translated">&lt;code&gt;autoinc()&lt;/code&gt; 는 시퀀스의 다음 값을 정수 필드에 저장하는 트리거입니다. 이것은 내장&amp;ldquo;직렬 열&amp;rdquo;기능과 일부 겹치지 만 동일하지는 &lt;code&gt;autoinc()&lt;/code&gt; . autoinc () 는 삽입 중에 다른 필드 값을 대체하려는 시도를 무시하고 선택적으로 업데이트 중에 필드를 증가시키는 데 사용할 수 있습니다. 너무.</target>
        </trans-unit>
        <trans-unit id="e48774a5fea71369cb7d04032c411865568f8b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autosummarize&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autosummarize&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d0e58733cfcebc12d3746115bee42558f03b7b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dadb0ad8317ba83114a9a999ccee83fc5b8ac347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_analyze_scale_factor&lt;/code&gt; (&lt;code&gt;float4&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_analyze_scale_factor&lt;/code&gt; ( &lt;code&gt;float4&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dd22bf2a90030bc7a32f854f3064ac117a5722db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_analyze_scale_factor&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_analyze_scale_factor&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f7ca608cc79ecdd124467472b99e2963172707ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_analyze_threshold&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_analyze_threshold&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d88ddc2e8321767141cc735995986a887cc6db95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;autovacuum_count&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="caa5852d6f0172feccd2a32feab9e9ecc84fd8ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_enabled&lt;/code&gt;, &lt;code&gt;toast.autovacuum_enabled&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_enabled&lt;/code&gt; , &lt;code&gt;toast.autovacuum_enabled&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fe330dc8fbc6b29b0548d8834e0a25e54535b243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a50a09d1284ea2db10fdd3a2dcd03c2141bef227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt;, &lt;code&gt;toast.autovacuum_freeze_max_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_freeze_max_age&lt;/code&gt; , &lt;code&gt;toast.autovacuum_freeze_max_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9f867a7751939ad4cf4e38e8e6bca93faf25e1eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_freeze_min_age&lt;/code&gt;, &lt;code&gt;toast.autovacuum_freeze_min_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_freeze_min_age&lt;/code&gt; , &lt;code&gt;toast.autovacuum_freeze_min_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6cdaf29181abd954c62b6874f5a5d57d08642756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_freeze_table_age&lt;/code&gt;, &lt;code&gt;toast.autovacuum_freeze_table_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_freeze_table_age&lt;/code&gt; , &lt;code&gt;toast.autovacuum_freeze_table_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9c72cc5562d08044430c9ebf36320aef9236dfa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_max_workers&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_max_workers&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2fe364c555f9fe760954b1f038ee00380934cacf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_multixact_freeze_max_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_multixact_freeze_max_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9f3aa77e9f636f37c1569aac52b9c32d0d6ea551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_multixact_freeze_max_age&lt;/code&gt;, &lt;code&gt;toast.autovacuum_multixact_freeze_max_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_multixact_freeze_max_age&lt;/code&gt; , &lt;code&gt;toast.autovacuum_multixact_freeze_max_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d7974de50ee8d9fd7b483a4d6cdf7b4365d3dbcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_multixact_freeze_min_age&lt;/code&gt;, &lt;code&gt;toast.autovacuum_multixact_freeze_min_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_multixact_freeze_min_age&lt;/code&gt; , &lt;code&gt;toast.autovacuum_multixact_freeze_min_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="69f261d06b2c11fb5da380d8e64bfdf0a3f81dbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_multixact_freeze_table_age&lt;/code&gt;, &lt;code&gt;toast.autovacuum_multixact_freeze_table_age&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_multixact_freeze_table_age&lt;/code&gt; , &lt;code&gt;toast.autovacuum_multixact_freeze_table_age&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="446da8ef6226bb3cd7a19e15c4a304af9fe45289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_naptime&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_naptime&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="297ae6bf348a56f903b17a8c242da5415f095c1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_cost_delay&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_cost_delay&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="439c16b46b66e7d3b5a6141c68a80fd47fc162b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_cost_delay&lt;/code&gt;, &lt;code&gt;toast.autovacuum_vacuum_cost_delay&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_cost_delay&lt;/code&gt; , &lt;code&gt;toast.autovacuum_vacuum_cost_delay&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ef998dc63ae2d5fc8768532ebb05a80dae8598d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_cost_limit&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_cost_limit&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8e36c2a126e9852338cd0ae94ad43735738c703b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_cost_limit&lt;/code&gt;, &lt;code&gt;toast.autovacuum_vacuum_cost_limit&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_cost_limit&lt;/code&gt; , &lt;code&gt;toast.autovacuum_vacuum_cost_limit&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fe1cfc5e7253b3162119d1bd793ac53c5aa51d3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="45092dbcef8a5421ca11ffdba8b98634976790f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt;, &lt;code&gt;toast.autovacuum_vacuum_insert_scale_factor&lt;/code&gt; (&lt;code&gt;float4&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; , &lt;code&gt;toast.autovacuum_vacuum_insert_scale_factor&lt;/code&gt; ( &lt;code&gt;float4&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f0ae1bb51d3f0f1fef97ac2414b1890e54ed202d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_insert_threshold&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_insert_threshold&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="215f86b617d7e35dd7ba5765f261cd907b1c43a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_insert_threshold&lt;/code&gt;, &lt;code&gt;toast.autovacuum_vacuum_insert_threshold&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_insert_threshold&lt;/code&gt; , &lt;code&gt;toast.autovacuum_vacuum_insert_threshold&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4ca509ace7b44facbfcbfe68f2478c9624aa61aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5e88b65acf4752ebd7952b1d4607f086e72dac9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt;, &lt;code&gt;toast.autovacuum_vacuum_scale_factor&lt;/code&gt; (&lt;code&gt;float4&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; , &lt;code&gt;toast.autovacuum_vacuum_scale_factor&lt;/code&gt; ( &lt;code&gt;float4&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5854fcb9cd88ad7a83148b7400b9ce93335a0132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt;, &lt;code&gt;toast.autovacuum_vacuum_scale_factor&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_scale_factor&lt;/code&gt; , &lt;code&gt;toast.autovacuum_vacuum_scale_factor&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="55dd623d3d401d2b75b0a63a56dc92b829fdcfa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_threshold&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_threshold&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b0981ff014f0c39e0a0123824ab3d71dd7023243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_vacuum_threshold&lt;/code&gt;, &lt;code&gt;toast.autovacuum_vacuum_threshold&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_vacuum_threshold&lt;/code&gt; , &lt;code&gt;toast.autovacuum_vacuum_threshold&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5b19ad94f8ac63b3a5c9f2db61249eff910208fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autovacuum_work_mem&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;autovacuum_work_mem&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="58e13666595e3ba5265fe32b7690f5bd7ab40e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avals('a=&amp;gt;1,b=&amp;gt;2')&lt;/code&gt; &amp;rarr; &lt;code&gt;{1,2}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avals('a=&amp;gt;1,b=&amp;gt;2')&lt;/code&gt; &amp;rarr; &lt;code&gt;{1,2}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71ee6395c59035eed3853575c6e096f6133ddd31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avals&lt;/code&gt; ( &lt;code&gt;hstore&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avals&lt;/code&gt; ( &lt;code&gt;hstore&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0a4499fa1378fa1d32a855fa63b4b0032658ec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="043b8dc007e7468d1f623955da5e0087152af76f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6a2291d0498166a06ac42770e225078b37df73d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8998980c511ac7a96024b98ca6b411af4168c80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;interval&lt;/code&gt; ) &amp;rarr; &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;interval&lt;/code&gt; ) &amp;rarr; &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b22fb032bfc8fc82e7dd730938fae2f5019cfe02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;numeric&lt;/code&gt; ) &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;numeric&lt;/code&gt; ) &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d0548e27347f8c3d87105d5eb9db13cb84c177a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;real&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; ( &lt;code&gt;real&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e6d369efe0a4744b2e9aa78084a20570f073b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;avg_width&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;avg_width&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="832f208e1fe56a0e3072c31b006fbbc1919e3476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; = infix (&amp;ldquo;both&amp;rdquo;), &lt;code&gt;l&lt;/code&gt; = prefix (&amp;ldquo;left&amp;rdquo;), &lt;code&gt;r&lt;/code&gt; = postfix (&amp;ldquo;right&amp;rdquo;)</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; = 접두사 (&amp;ldquo;둘 다&amp;rdquo;), &lt;code&gt;l&lt;/code&gt; = 접두사 (&amp;ldquo;왼쪽&amp;rdquo;), &lt;code&gt;r&lt;/code&gt; = 접두사 (&amp;ldquo;오른쪽&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="7b58dbbb3f05bac6eed4ac4a6e771f37ed9a9fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backend_flush_after&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;backend_flush_after&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f498c196096b8e51404d8e50e24bb3ee9279d96e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backend_start&lt;/code&gt;&lt;code&gt;timestamp with time zone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backend_start&lt;/code&gt; &lt;code&gt;timestamp with time zone&lt;/code&gt; backend_start 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="2437d9720498510f80fe86b2484c7fbc0aa4783f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backend_type&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backend_type&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98e674df76d219eb55a19f1238f8a350ea2061e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backend_xid&lt;/code&gt;&lt;code&gt;xid&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backend_xid&lt;/code&gt;&lt;code&gt;xid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e90c7d9a70aade299c3d0987f6de6755c34c66d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backend_xmin&lt;/code&gt;&lt;code&gt;xid&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backend_xmin&lt;/code&gt;&lt;code&gt;xid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8470a0469f952ad8256d9641294f09446ffc626f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backslash_quote&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;backslash_quote&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9521bb0e339c68b8f20ca146dc00167d74c34142" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backtrace_functions&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;backtrace_functions&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b484cabf1eca7474233d0db299ce85c23790b276" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backup&lt;/code&gt;: This WAL sender is sending a backup.</source>
          <target state="translated">&lt;code&gt;backup&lt;/code&gt; :이 WAL 발신자가 백업을 보내고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f274ffd5be43a2649f1112225f35b4a8470d8e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backup_streamed&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backup_streamed&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="413205e4a0459ba628d73442a537121622d8c1b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backup_total&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backup_total&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df58ada35791361427d5a120be9f3d1310724333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beta1&lt;/code&gt; in the context &lt;code&gt;postgresql-beta1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;beta1&lt;/code&gt; 컨텍스트에서 &lt;code&gt;postgresql-beta1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ce2ad3f3eaf3e21cb34b97f06aed64fb9ee72e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bf&lt;/code&gt; &amp;mdash; Blowfish</source>
          <target state="translated">&lt;code&gt;bf&lt;/code&gt; &amp;mdash; 복어</target>
        </trans-unit>
        <trans-unit id="98851a35aba684197cc1af65c983f28170d95eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bgwriter_delay&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bgwriter_delay&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f22a842e85a2930479cfbbb2f5fc47693e172cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bgwriter_flush_after&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bgwriter_flush_after&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b89e22542c99395482ec6333e50617b6566090c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bgwriter_lru_maxpages&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bgwriter_lru_maxpages&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b78a48f8ca885db4452ea4dc92b91aea7bab742d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bgwriter_lru_multiplier&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bgwriter_lru_multiplier&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8b976ae4bbe48727a68d6a4a780bd141b3997d1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigint&lt;/code&gt; for &lt;code&gt;smallint&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt; arguments, &lt;code&gt;numeric&lt;/code&gt; for &lt;code&gt;bigint&lt;/code&gt; arguments, otherwise the same as the argument data type</source>
          <target state="translated">&lt;code&gt;bigint&lt;/code&gt; 위한 &lt;code&gt;smallint&lt;/code&gt; 또는 &lt;code&gt;int&lt;/code&gt; 인수 &lt;code&gt;numeric&lt;/code&gt; 위한 &lt;code&gt;bigint&lt;/code&gt; 인수 데이터 유형과 달리 동일한 인수</target>
        </trans-unit>
        <trans-unit id="2d0a0d660fcc930061e44f901426f44b1357f41a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigint&lt;/code&gt;&lt;code id=&quot;33&quot;&gt;!&lt;/code&gt; &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bigint&lt;/code&gt; &lt;code id=&quot;33&quot;&gt;!&lt;/code&gt; &amp;rarr; &lt;code&gt;numeric&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d80cfb392e222f89b76cef1b363aeb3bbf7fd84f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigint&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;inet&lt;/code&gt; &amp;rarr; &lt;code&gt;inet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bigint&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; &lt;code&gt;inet&lt;/code&gt; &amp;rarr; &lt;code&gt;inet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37771ef10b2784d99304957cf3e0d75b239628ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit&lt;/code&gt; type data must match the length &lt;code&gt;n&lt;/code&gt; exactly; it is an error to attempt to store shorter or longer bit strings. &lt;code&gt;bit varying&lt;/code&gt; data is of variable length up to the maximum length &lt;code&gt;n&lt;/code&gt;; longer strings will be rejected. Writing &lt;code&gt;bit&lt;/code&gt; without a length is equivalent to &lt;code&gt;bit(1)&lt;/code&gt;, while &lt;code&gt;bit varying&lt;/code&gt; without a length specification means unlimited length.</source>
          <target state="translated">&lt;code&gt;bit&lt;/code&gt; 유형 데이터는 길이 &lt;code&gt;n&lt;/code&gt; 과 정확히 일치해야합니다 . 더 짧거나 더 긴 비트 문자열을 저장하려고하면 오류가 발생합니다. &lt;code&gt;bit varying&lt;/code&gt; 데이터는 최대 길이 &lt;code&gt;n&lt;/code&gt; 까지 가변 길이 이고 ; 더 긴 문자열은 거부됩니다. 길이가없는 &lt;code&gt;bit&lt;/code&gt; 를 쓰는 것은 &lt;code&gt;bit(1)&lt;/code&gt; 과 동일하지만 길이 지정이없는 &lt;code&gt;bit varying&lt;/code&gt; 는 무제한 길이를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1bb2aeb7149f98dfc19e8e59456891e1882377f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit&lt;/code&gt;&lt;code id=&quot;124&quot;&gt;|&lt;/code&gt;&lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit&lt;/code&gt; &lt;code id=&quot;124&quot;&gt;|&lt;/code&gt; &lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51d2d48ec7fe8d5e3f08a854661f983884ede2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit&lt;/code&gt;&lt;code id=&quot;124124&quot;&gt;||&lt;/code&gt;&lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit&lt;/code&gt; &lt;code id=&quot;124124&quot;&gt;||&lt;/code&gt; &lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="760f3332a8a381dff5ea9b9e80d360ce7c4b37e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit&lt;/code&gt;&lt;code id=&quot;35&quot;&gt;#&lt;/code&gt;&lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit&lt;/code&gt; &lt;code id=&quot;35&quot;&gt;#&lt;/code&gt; &lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dc9dd8bd4e91fa2969325c7793b98e431b5d58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit&lt;/code&gt;&lt;code id=&quot;38&quot;&gt;&amp;amp;&lt;/code&gt;&lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit&lt;/code&gt; &lt;code id=&quot;38&quot;&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;bit&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c98862a4c9c36d628d098572ff3b3917a0e5cfb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit&lt;/code&gt;&lt;code id=&quot;6060&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit&lt;/code&gt; &lt;code id=&quot;6060&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="766726fd928dc357570cc8e2579666752c0ef2a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit&lt;/code&gt;&lt;code id=&quot;6262&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit&lt;/code&gt; &lt;code id=&quot;6262&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71bbefae377c54e6d2fbed44b8b80624befc3877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_and&lt;/code&gt; ( &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_and&lt;/code&gt; ( &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac7b1fea5f292ccfbca499559734851bcfeedce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_and&lt;/code&gt; ( &lt;code&gt;bit&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_and&lt;/code&gt; ( &lt;code&gt;bit&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02dff4fba717ee13d0d34fdcaa4b1e2e0ae547b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_and&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_and&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4d50bfaf2bf52dbe8942f9f81f12d38dd3bdcff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_length('jose')&lt;/code&gt; &amp;rarr; &lt;code&gt;32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_length('jose')&lt;/code&gt; &amp;rarr; &lt;code&gt;32&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="727ae30516154ee50c8b491a7be970a378eae51c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_length&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_length&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8881ce2166fb728abd7b3098d8bf1e52f971d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_or&lt;/code&gt; ( &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_or&lt;/code&gt; ( &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d207c0d929687ea2d33f597a57baea4cd433813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_or&lt;/code&gt; ( &lt;code&gt;bit&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_or&lt;/code&gt; ( &lt;code&gt;bit&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e611b2a20957f7497cfde21eba71037f345641ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit_or&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bit_or&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f058f0208fc7b230a7fab52f92c816a209fe10ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bits&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bits&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="458bb27a315bce2f7ecde11f5df5d8170a1b4d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blk_read_time&lt;/code&gt;&lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blk_read_time&lt;/code&gt; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58d7e273da0c33267c957e3360783b3e4cff4016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blk_write_time&lt;/code&gt;&lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blk_write_time&lt;/code&gt; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f47d3f625a4fd6bb2b62bad058e62444e4ed5968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blks_exists&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blks_exists&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f27bd5e3e30cd3013144d8528e1a4bf9e1b1e5c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blks_hit&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blks_hit&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="550cc02b82764e9727e9386c4c5723e491d836dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blks_read&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blks_read&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b25a18d0d8ad582107f46d126945503a0e24b732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blks_written&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blks_written&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69ac491b730f761fc732d9e5b17f2d3abcfdce39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blks_zeroed&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blks_zeroed&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e980ec53e76c9a58a51bc4cf151fc58e821608a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block_size&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;block_size&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="30eb12ad5cef4d39c050f7edb88ef34ec4957554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocks_done&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blocks_done&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="095e76458278afd58cc73c0e2b4808db67a7e6b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocks_total&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blocks_total&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9e2cbe094d03d37d71c2289dbd89ba3110a641a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bloom&lt;/code&gt; access method doesn't support &lt;code&gt;UNIQUE&lt;/code&gt; indexes.</source>
          <target state="translated">&lt;code&gt;bloom&lt;/code&gt; 액세스 방법은 &lt;code&gt;UNIQUE&lt;/code&gt; 인덱스를 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6c1b1844f91bf9ef4bcfed26c35dda4b12b22932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bloom&lt;/code&gt; access method doesn't support searching for &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bloom&lt;/code&gt; 액세스 방법은 &lt;code&gt;NULL&lt;/code&gt; 값 검색을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4224fa7a6abab2670249415b7c5ae343048793b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bloom&lt;/code&gt; provides an index access method based on &lt;a href=&quot;https://en.wikipedia.org/wiki/Bloom_filter&quot;&gt;Bloom filters&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bloom&lt;/code&gt; 은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Bloom_filter&quot;&gt;Bloom 필터를&lt;/a&gt; 기반으로하는 인덱스 액세스 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="10e345bba46d160d2fc0a436cfcb9ae6ccd9b2e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bonjour&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bonjour&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6c84115bcca462310b12b1d94eb4b2720a4c1fe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bonjour_name&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bonjour_name&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ca44370aced35221e8505c6c74aec3684ab74bec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code id=&quot;is32false&quot;&gt;IS FALSE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code id=&quot;is32false&quot;&gt;IS FALSE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6d6eaaeb61d67cf905d21e3cb54c8224c780f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code id=&quot;is32not32false&quot;&gt;IS NOT FALSE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code id=&quot;is32not32false&quot;&gt;IS NOT FALSE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4541c9830dc7395c538a9fdb4b3bd5a01007fcb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code id=&quot;is32not32true&quot;&gt;IS NOT TRUE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code id=&quot;is32not32true&quot;&gt;IS NOT TRUE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45be4b0aa90d017d67fa650e073871eb2aecfc52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code id=&quot;is32not32unknown&quot;&gt;IS NOT UNKNOWN&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code id=&quot;is32not32unknown&quot;&gt;IS NOT UNKNOWN&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c87a8f843d938f30ed80f6a5a94474d91050287a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code id=&quot;is32true&quot;&gt;IS TRUE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code id=&quot;is32true&quot;&gt;IS TRUE&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbb01d080dd1dd38c2fef8d00d7e049c099af7c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code id=&quot;is32unknown&quot;&gt;IS UNKNOWN&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code id=&quot;is32unknown&quot;&gt;IS UNKNOWN&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="998d94c7c0b2ef5f93fb0caf87c51dca8429645c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86210a4a4a6f74ae58ab12dcc41a8fd0e191bd21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0750c9657c7a4c4a8971bc051c219448f0830d51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;IS [NOT] (NULL|TRUE|FALSE)&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;IS [NOT] (NULL|TRUE|FALSE)&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6600ee740c63644c4b056e03a56d994c7b0b7ded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;OR&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;OR&lt;/code&gt; &lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="186c08d77fa637b6e6a48942aea4632ec99832b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;is unknown&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;is unknown&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98598af38bc19907e4756732397a7d63d3734ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;||&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;boolean&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fa79c530d81d7724234a40cee1088d5262c6975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean_expression&lt;/code&gt;&lt;code id=&quot;is32false&quot;&gt;IS FALSE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean_expression&lt;/code&gt; 이 &lt;code id=&quot;is32false&quot;&gt;IS FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88ab3251ee1678bc8765c6e496202e3212b15f73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean_expression&lt;/code&gt;&lt;code id=&quot;is32not32false&quot;&gt;IS NOT FALSE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean_expression&lt;/code&gt; 이 &lt;code id=&quot;is32not32false&quot;&gt;IS NOT FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69e87095585301206dd2c94448c6a27c7caa732c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean_expression&lt;/code&gt;&lt;code id=&quot;is32not32true&quot;&gt;IS NOT TRUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean_expression&lt;/code&gt; 이 &lt;code id=&quot;is32not32true&quot;&gt;IS NOT TRUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76e2933cfad0b5b43dfe5bddd22d208ebe4b7768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean_expression&lt;/code&gt;&lt;code id=&quot;is32not32unknown&quot;&gt;IS NOT UNKNOWN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean_expression&lt;/code&gt; 이 &lt;code id=&quot;is32not32unknown&quot;&gt;IS NOT UNKNOWN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd0d1c65aabd8b6da7f24eb1413990465520ebb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean_expression&lt;/code&gt;&lt;code id=&quot;is32true&quot;&gt;IS TRUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean_expression&lt;/code&gt; 은 &lt;code id=&quot;is32true&quot;&gt;IS TRUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3805825d6c071101663f804e977b321232306cc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean_expression&lt;/code&gt;&lt;code id=&quot;is32unknown&quot;&gt;IS UNKNOWN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean_expression&lt;/code&gt; 은 &lt;code id=&quot;is32unknown&quot;&gt;IS UNKNOWN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c69603c1eec66e0f96e1d17029a2a7b4a47d021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boot_val&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boot_val&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d185e85a5e27399e9fcb3c95f8e5cb61707cf5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;box&lt;/code&gt; ( &lt;code&gt;point&lt;/code&gt; ) &amp;rarr; &lt;code&gt;box&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;box&lt;/code&gt; ( &lt;code&gt;point&lt;/code&gt; ) &amp;rarr; &lt;code&gt;box&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f41b24be03b70bff3f2e7f4f995b06f951b9a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;box&lt;/code&gt; ( &lt;code&gt;point&lt;/code&gt;, &lt;code&gt;point&lt;/code&gt; ) &amp;rarr; &lt;code&gt;box&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;box&lt;/code&gt; ( &lt;code&gt;point&lt;/code&gt; , &lt;code&gt;point&lt;/code&gt; ) &amp;rarr; &lt;code&gt;box&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1a9395e9bb047e8340726c361336480fd81bf32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;box&lt;/code&gt; ( &lt;code&gt;polygon&lt;/code&gt; ) &amp;rarr; &lt;code&gt;box&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;box&lt;/code&gt; ( &lt;code&gt;polygon&lt;/code&gt; ) &amp;rarr; &lt;code&gt;box&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6fd45d83523892f5216416f6100ee1ca819f97d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;box&lt;/code&gt;&lt;code id=&quot;6094&quot;&gt;&amp;lt;^&lt;/code&gt;&lt;code&gt;box&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;box&lt;/code&gt; &lt;code id=&quot;6094&quot;&gt;&amp;lt;^&lt;/code&gt; &lt;code&gt;box&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19989a313a99bc99414fedef186288f44ae91499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;box&lt;/code&gt;&lt;code id=&quot;6294&quot;&gt;&amp;gt;^&lt;/code&gt;&lt;code&gt;box&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;box&lt;/code&gt; &lt;code id=&quot;6294&quot;&gt;&amp;gt;^&lt;/code&gt; &lt;code&gt;box&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8424079cf7772ee1a1888c7e6c6e105fe4f55ea8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;box&lt;/code&gt;&lt;code&gt;#&lt;/code&gt;&lt;code&gt;box&lt;/code&gt; &amp;rarr; &lt;code&gt;box&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;box&lt;/code&gt; &lt;code&gt;#&lt;/code&gt; &lt;code&gt;box&lt;/code&gt; &amp;rarr; &lt;code&gt;box&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15e72e3334aa2322e7c65c51985958cc22a4ca61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_desummarize_range&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;index&lt;/code&gt;&lt;/em&gt;&lt;code&gt;regclass&lt;/code&gt;, &lt;em&gt;&lt;code&gt;blockNumber&lt;/code&gt;&lt;/em&gt;&lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;void&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;brin_desummarize_range&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;index&lt;/code&gt; &lt;/em&gt; &lt;code&gt;regclass&lt;/code&gt; , &lt;em&gt; &lt;code&gt;blockNumber&lt;/code&gt; &lt;/em&gt; &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;void&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="854acd2dc654bb711e270f5e1a15e0be3bf3f58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_metapage_info&lt;/code&gt; returns assorted information about a BRIN index metapage. For example:</source>
          <target state="translated">&lt;code&gt;brin_metapage_info&lt;/code&gt; 는 BRIN 색인 메타 페이지에 대한 여러 정보를 리턴합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9d66b7e49654b569426bfcacb1ed8c9189893415" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_page_items&lt;/code&gt; returns the data stored in the BRIN data page. For example:</source>
          <target state="translated">&lt;code&gt;brin_page_items&lt;/code&gt; 는 BRIN 데이터 페이지에 저장된 데이터를 리턴합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9763fb3151f9796fa9c1366cc1650f5bbd50dd93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_page_type&lt;/code&gt; returns the page type of the given BRIN index page, or throws an error if the page is not a valid BRIN page. For example:</source>
          <target state="translated">&lt;code&gt;brin_page_type&lt;/code&gt; 은 주어진 BRIN 색인 페이지의 페이지 유형을 리턴하거나 페이지가 유효한 BRIN 페이지가 아닌 경우 오류를 발생시킵니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c66a876b091cf24e7b3b0da9bcf40e53b04a820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_revmap_data&lt;/code&gt; returns the list of tuple identifiers in a BRIN index range map page. For example:</source>
          <target state="translated">&lt;code&gt;brin_revmap_data&lt;/code&gt; 는 BRIN 색인 범위 맵 페이지에서 튜플 ID 목록을 리턴합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e78038ad038a8d0ac22252fad4a231149e66de4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_summarize_new_values&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;index&lt;/code&gt;&lt;/em&gt;&lt;code&gt;regclass&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;brin_summarize_new_values&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;index&lt;/code&gt; &lt;/em&gt; &lt;code&gt;regclass&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ef20daf8de678ac93323a75859af83bf9b5a590" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_summarize_new_values&lt;/code&gt; accepts the OID or name of a BRIN index and inspects the index to find page ranges in the base table that are not currently summarized by the index; for any such range it creates a new summary index tuple by scanning the table pages. It returns the number of new page range summaries that were inserted into the index. &lt;code&gt;brin_summarize_range&lt;/code&gt; does the same, except it only summarizes the range that covers the given block number.</source>
          <target state="translated">&lt;code&gt;brin_summarize_new_values&lt;/code&gt; 는 BRIN 인덱스의 OID 또는 이름을 승인하고 인덱스를 검사하여 현재 인덱스에 의해 요약되지 않은 기본 테이블에서 페이지 범위를 찾습니다. 이러한 범위에 대해 테이블 ​​페이지를 스캔하여 새 요약 인덱스 튜플을 작성합니다. 색인에 삽입 된 새 페이지 범위 요약 수를 리턴합니다. &lt;code&gt;brin_summarize_range&lt;/code&gt; 는 주어진 블록 번호를 포괄하는 범위 만 요약한다는 점을 제외하고 동일하게 수행합니다.</target>
        </trans-unit>
        <trans-unit id="92faa044b221c219d4ed2d40fad9e477d11272c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;brin_summarize_range&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;index&lt;/code&gt;&lt;/em&gt;&lt;code&gt;regclass&lt;/code&gt;, &lt;em&gt;&lt;code&gt;blockNumber&lt;/code&gt;&lt;/em&gt;&lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;brin_summarize_range&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;index&lt;/code&gt; &lt;/em&gt; &lt;code&gt;regclass&lt;/code&gt; , &lt;em&gt; &lt;code&gt;blockNumber&lt;/code&gt; &lt;/em&gt; &lt;code&gt;bigint&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d700db4f310fd0f528a26d410b97a72cf7fffe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_index_check&lt;/code&gt; acquires an &lt;code&gt;AccessShareLock&lt;/code&gt; on the target index and the heap relation it belongs to. This lock mode is the same lock mode acquired on relations by simple &lt;code&gt;SELECT&lt;/code&gt; statements. &lt;code&gt;bt_index_check&lt;/code&gt; does not verify invariants that span child/parent relationships, but will verify the presence of all heap tuples as index tuples within the index when &lt;em&gt;&lt;code&gt;heapallindexed&lt;/code&gt;&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;. When a routine, lightweight test for corruption is required in a live production environment, using &lt;code&gt;bt_index_check&lt;/code&gt; often provides the best trade-off between thoroughness of verification and limiting the impact on application performance and availability.</source>
          <target state="translated">&lt;code&gt;bt_index_check&lt;/code&gt; 는 대상 인덱스와 이에 속하는 힙 관계 에서 &lt;code&gt;AccessShareLock&lt;/code&gt; 을 획득합니다 . 이 잠금 모드는 간단한 &lt;code&gt;SELECT&lt;/code&gt; 문 으로 관계에서 획득 한 것과 동일한 잠금 모드 입니다. &lt;code&gt;bt_index_check&lt;/code&gt; 는 자식 / 부모 관계에 걸쳐있는 불변을 확인하지 않지만 &lt;em&gt; &lt;code&gt;heapallindexed&lt;/code&gt; &lt;/em&gt; 가 &lt;code&gt;true&lt;/code&gt; 일 때 인덱스 내에 튜플로 모든 힙 튜플이 있는지 확인 합니다 . 실제 프로덕션 환경에서 일상적인 가벼운 손상 테스트가 필요한 경우 &lt;code&gt;bt_index_check&lt;/code&gt; 를 사용 하면 검증의 철저 함과 응용 프로그램 성능 및 가용성에 대한 영향을 제한하는 것 사이에서 최상의 절충점을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8aa7888a49cb3e5840dc363f13b748fbf0f8d18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_index_check&lt;/code&gt; and &lt;code&gt;bt_index_parent_check&lt;/code&gt; both output log messages about the verification process at &lt;code&gt;DEBUG1&lt;/code&gt; and &lt;code&gt;DEBUG2&lt;/code&gt; severity levels. These messages provide detailed information about the verification process that may be of interest to PostgreSQL developers. Advanced users may also find this information helpful, since it provides additional context should verification actually detect an inconsistency. Running:</source>
          <target state="translated">&lt;code&gt;bt_index_check&lt;/code&gt; 및 &lt;code&gt;bt_index_parent_check&lt;/code&gt; 는 모두 &lt;code&gt;DEBUG1&lt;/code&gt; 및 &lt;code&gt;DEBUG2&lt;/code&gt; 심각도 수준 에서 확인 프로세스에 대한 출력 로그 메시지를 출력 합니다. 이러한 메시지는 PostgreSQL 개발자가 관심을 가질 수있는 확인 프로세스에 대한 자세한 정보를 제공합니다. 검증이 실제로 불일치를 감지하는 경우 추가 컨텍스트를 제공하므로 고급 사용자도이 정보가 도움이 될 수 있습니다. 달리는:</target>
        </trans-unit>
        <trans-unit id="3073b5c6d0050feb8f3b2d622ac5b7b4c95ae56c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_index_check&lt;/code&gt; tests that its target, a B-Tree index, respects a variety of invariants. Example usage:</source>
          <target state="translated">&lt;code&gt;bt_index_check&lt;/code&gt; 는 목표 인 B- 트리 인덱스가 다양한 불변량을 존중 하는지 테스트합니다. 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="ee34681a7f211bff0bbbdddf2f2e1f148e04d73d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_index_parent_check&lt;/code&gt; tests that its target, a B-Tree index, respects a variety of invariants. Optionally, when the &lt;em&gt;&lt;code&gt;heapallindexed&lt;/code&gt;&lt;/em&gt; argument is &lt;code&gt;true&lt;/code&gt;, the function verifies the presence of all heap tuples that should be found within the index, and that there are no missing downlinks in the index structure. When the optional &lt;em&gt;&lt;code&gt;rootdescend&lt;/code&gt;&lt;/em&gt; argument is &lt;code&gt;true&lt;/code&gt;, verification re-finds tuples on the leaf level by performing a new search from the root page for each tuple. The checks that can be performed by &lt;code&gt;bt_index_parent_check&lt;/code&gt; are a superset of the checks that can be performed by &lt;code&gt;bt_index_check&lt;/code&gt;. &lt;code&gt;bt_index_parent_check&lt;/code&gt; can be thought of as a more thorough variant of &lt;code&gt;bt_index_check&lt;/code&gt;: unlike &lt;code&gt;bt_index_check&lt;/code&gt;, &lt;code&gt;bt_index_parent_check&lt;/code&gt; also checks invariants that span parent/child relationships. &lt;code&gt;bt_index_parent_check&lt;/code&gt; follows the general convention of raising an error if it finds a logical inconsistency or other problem.</source>
          <target state="translated">&lt;code&gt;bt_index_parent_check&lt;/code&gt; 는 목표 인 B- 트리 인덱스가 다양한 불변량을 존중 하는지 테스트합니다. 선택적으로 &lt;em&gt; &lt;code&gt;heapallindexed&lt;/code&gt; &lt;/em&gt; 인수가 &lt;code&gt;true&lt;/code&gt; 인 경우, 함수는 인덱스 내에서 찾아야하는 모든 힙 튜플의 존재를 확인하고 인덱스 구조에 누락 된 다운 링크가 없는지 확인합니다. 선택적 &lt;em&gt; &lt;code&gt;rootdescend&lt;/code&gt; &lt;/em&gt; 인수가 &lt;code&gt;true&lt;/code&gt; 인 경우 , 검증은 각 튜플의 루트 페이지에서 새로운 검색을 수행하여 리프 레벨에서 튜플을 다시 찾습니다. 수행 될 수있는 검사 &lt;code&gt;bt_index_parent_check&lt;/code&gt; 을 수행 할 수있는 수표의 수퍼 &lt;code&gt;bt_index_check&lt;/code&gt; . &lt;code&gt;bt_index_parent_check&lt;/code&gt; 더욱 철저한 변형으로 간주 할 수 있습니다 &lt;code&gt;bt_index_check&lt;/code&gt; 달리 : &lt;code&gt;bt_index_check&lt;/code&gt; , &lt;code&gt;bt_index_parent_check&lt;/code&gt; 그 범위의 상위 / 하위 관계도 확인 불변입니다. &lt;code&gt;bt_index_parent_check&lt;/code&gt; 는 논리적 불일치 또는 다른 문제가 발견되면 오류를 발생시키는 일반적인 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="07c72217a01ad50631b92cc1179739dde20dd702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_index_parent_check&lt;/code&gt; tests that its target, a B-Tree index, respects a variety of invariants. Optionally, when the &lt;em&gt;&lt;code&gt;heapallindexed&lt;/code&gt;&lt;/em&gt; argument is &lt;code&gt;true&lt;/code&gt;, the function verifies the presence of all heap tuples that should be found within the index. When the optional &lt;em&gt;&lt;code&gt;rootdescend&lt;/code&gt;&lt;/em&gt; argument is &lt;code&gt;true&lt;/code&gt;, verification re-finds tuples on the leaf level by performing a new search from the root page for each tuple. The checks that can be performed by &lt;code&gt;bt_index_parent_check&lt;/code&gt; are a superset of the checks that can be performed by &lt;code&gt;bt_index_check&lt;/code&gt;. &lt;code&gt;bt_index_parent_check&lt;/code&gt; can be thought of as a more thorough variant of &lt;code&gt;bt_index_check&lt;/code&gt;: unlike &lt;code&gt;bt_index_check&lt;/code&gt;, &lt;code&gt;bt_index_parent_check&lt;/code&gt; also checks invariants that span parent/child relationships, including checking that there are no missing downlinks in the index structure. &lt;code&gt;bt_index_parent_check&lt;/code&gt; follows the general convention of raising an error if it finds a logical inconsistency or other problem.</source>
          <target state="translated">&lt;code&gt;bt_index_parent_check&lt;/code&gt; 는 대상인 B- 트리 인덱스가 다양한 불변성을 존중 하는지 테스트합니다. 선택적으로 &lt;em&gt; &lt;code&gt;heapallindexed&lt;/code&gt; &lt;/em&gt; 인수가 &lt;code&gt;true&lt;/code&gt; 이면 함수는 인덱스 내에서 찾아야하는 모든 힙 튜플이 있는지 확인합니다. 선택적 &lt;em&gt; &lt;code&gt;rootdescend&lt;/code&gt; &lt;/em&gt; 인수가 &lt;code&gt;true&lt;/code&gt; 이면 검증은 각 튜플에 대해 루트 페이지에서 새 검색을 수행하여 리프 수준에서 튜플을 다시 찾습니다. 수행 될 수있는 검사 &lt;code&gt;bt_index_parent_check&lt;/code&gt; 을 수행 할 수있는 수표의 수퍼 &lt;code&gt;bt_index_check&lt;/code&gt; . &lt;code&gt;bt_index_parent_check&lt;/code&gt; 는 더욱 철저한 변형으로 생각 될 수있다 &lt;code&gt;bt_index_check&lt;/code&gt; : 달리 &lt;code&gt;bt_index_check&lt;/code&gt; , &lt;code&gt;bt_index_parent_check&lt;/code&gt; 는 인덱스 구조에 누락 된 다운 링크가 없는지 확인하는 것을 포함하여 부모 / 자식 관계에 걸쳐있는 불변성을 확인합니다. &lt;code&gt;bt_index_parent_check&lt;/code&gt; 는 논리적 불일치 또는 기타 문제를 발견하면 오류를 발생시키는 일반적인 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="2a688aef3f03a30311b961d71a407b2d2beb7628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_index_parent_check&lt;/code&gt;'s additional verification is more likely to detect various pathological cases. These cases may involve an incorrectly implemented B-Tree operator class used by the index that is checked, or, hypothetically, undiscovered bugs in the underlying B-Tree index access method code. Note that &lt;code&gt;bt_index_parent_check&lt;/code&gt; cannot be used when Hot Standby mode is enabled (i.e., on read-only physical replicas), unlike &lt;code&gt;bt_index_check&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bt_index_parent_check&lt;/code&gt; 의 추가 검증은 다양한 병리학 적 사례를 탐지 할 가능성이 높습니다. 이러한 경우 검사 된 색인에서 사용 된 B-Tree 연산자 클래스가 잘못 구현되었거나 기본 B-Tree 색인 액세스 방법 코드에서 발견되지 않은 버그가 발생할 수 있습니다. 참고 &lt;code&gt;bt_index_parent_check&lt;/code&gt; 가 상시 대기 모드가 활성화 된 경우 사용할 수 없습니다 (즉, 읽기 전용 물리적 복제본), 달리 &lt;code&gt;bt_index_check&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8172e2e08de4c6ade214b5ea7af4490404fc37c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_metap&lt;/code&gt; returns information about a B-tree index's metapage. For example:</source>
          <target state="translated">&lt;code&gt;bt_metap&lt;/code&gt; 은 B- 트리 인덱스의 메타 페이지에 대한 정보를 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c1bb232a18950e74280cdae551a493c34a825aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_page_items&lt;/code&gt; returns detailed information about all of the items on a B-tree index page. For example:</source>
          <target state="translated">&lt;code&gt;bt_page_items&lt;/code&gt; 는 B- 트리 인덱스 페이지의 모든 항목에 대한 자세한 정보를 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07d473f9416583d2fffa8ef019c864278def2c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bt_page_stats&lt;/code&gt; returns summary information about single pages of B-tree indexes. For example:</source>
          <target state="translated">&lt;code&gt;bt_page_stats&lt;/code&gt; 는 B- 트리 인덱스의 단일 페이지에 대한 요약 정보를 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8eeacc05e8fd9e0d5dc8302233ac102b155be8bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;btree_gin&lt;/code&gt; provides sample GIN operator classes that implement B-tree equivalent behavior for the data types &lt;code&gt;int2&lt;/code&gt;, &lt;code&gt;int4&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;float4&lt;/code&gt;, &lt;code&gt;float8&lt;/code&gt;, &lt;code&gt;timestamp with time zone&lt;/code&gt;, &lt;code&gt;timestamp without time zone&lt;/code&gt;, &lt;code&gt;time with time zone&lt;/code&gt;, &lt;code&gt;time without time zone&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;interval&lt;/code&gt;, &lt;code&gt;oid&lt;/code&gt;, &lt;code&gt;money&lt;/code&gt;, &lt;code&gt;&quot;char&quot;&lt;/code&gt;, &lt;code&gt;varchar&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;bytea&lt;/code&gt;, &lt;code&gt;bit&lt;/code&gt;, &lt;code&gt;varbit&lt;/code&gt;, &lt;code&gt;macaddr&lt;/code&gt;, &lt;code&gt;macaddr8&lt;/code&gt;, &lt;code&gt;inet&lt;/code&gt;, &lt;code&gt;cidr&lt;/code&gt;, &lt;code&gt;uuid&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;bpchar&lt;/code&gt;, and all &lt;code&gt;enum&lt;/code&gt; types.</source>
          <target state="translated">&lt;code&gt;btree_gin&lt;/code&gt; 은 데이터 유형 &lt;code&gt;int2&lt;/code&gt; , &lt;code&gt;int4&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;float4&lt;/code&gt; , &lt;code&gt;float8&lt;/code&gt; , &lt;code&gt;timestamp with time zone&lt;/code&gt; 가있는 &lt;code&gt;timestamp without time zone&lt;/code&gt; , 시간대가 없는 타임 스탬프 , &lt;code&gt;time with time zone&lt;/code&gt; , &lt;code&gt;time without time zone&lt;/code&gt; , 시간대가없는 시간 , &lt;code&gt;date&lt;/code&gt; , &lt;code&gt;interval&lt;/code&gt; 대해 B- 트리 동등한 동작을 구현하는 샘플 GIN 연산자 클래스를 제공 합니다. , &lt;code&gt;oid&lt;/code&gt; , &lt;code&gt;money&lt;/code&gt; , &lt;code&gt;&quot;char&quot;&lt;/code&gt; , &lt;code&gt;varchar&lt;/code&gt; , &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;bytea&lt;/code&gt; , &lt;code&gt;bit&lt;/code&gt; , &lt;code&gt;varbit&lt;/code&gt; , &lt;code&gt;macaddr&lt;/code&gt; , &lt;code&gt;macaddr8&lt;/code&gt; , &lt;code&gt;inet&lt;/code&gt; , &lt;code&gt;cidr&lt;/code&gt; , &lt;code&gt;uuid&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; , &lt;code&gt;bpchar&lt;/code&gt; 및 모든 &lt;code&gt;enum&lt;/code&gt; 형.</target>
        </trans-unit>
        <trans-unit id="fb912f8d74a266b155eee4dd2a337d5c55762543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;btree_gist&lt;/code&gt; provides GiST index operator classes that implement B-tree equivalent behavior for the data types &lt;code&gt;int2&lt;/code&gt;, &lt;code&gt;int4&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;float4&lt;/code&gt;, &lt;code&gt;float8&lt;/code&gt;, &lt;code&gt;numeric&lt;/code&gt;, &lt;code&gt;timestamp with time zone&lt;/code&gt;, &lt;code&gt;timestamp without time zone&lt;/code&gt;, &lt;code&gt;time with time zone&lt;/code&gt;, &lt;code&gt;time without time zone&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;interval&lt;/code&gt;, &lt;code&gt;oid&lt;/code&gt;, &lt;code&gt;money&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;varchar&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;bytea&lt;/code&gt;, &lt;code&gt;bit&lt;/code&gt;, &lt;code&gt;varbit&lt;/code&gt;, &lt;code&gt;macaddr&lt;/code&gt;, &lt;code&gt;macaddr8&lt;/code&gt;, &lt;code&gt;inet&lt;/code&gt;, &lt;code&gt;cidr&lt;/code&gt;, &lt;code&gt;uuid&lt;/code&gt;, and all &lt;code&gt;enum&lt;/code&gt; types.</source>
          <target state="translated">&lt;code&gt;btree_gist&lt;/code&gt; 는 데이터 유형 &lt;code&gt;int2&lt;/code&gt; , &lt;code&gt;int4&lt;/code&gt; , &lt;code&gt;int8&lt;/code&gt; , &lt;code&gt;float4&lt;/code&gt; , &lt;code&gt;float8&lt;/code&gt; , &lt;code&gt;numeric&lt;/code&gt; , &lt;code&gt;timestamp with time zone&lt;/code&gt; 가있는 &lt;code&gt;timestamp without time zone&lt;/code&gt; , 시간대가 없는 타임 스탬프 , &lt;code&gt;time with time zone&lt;/code&gt; , &lt;code&gt;time without time zone&lt;/code&gt; , &lt;code&gt;date&lt;/code&gt; B- 트리 동등한 동작을 구현하는 GiST 인덱스 연산자 클래스를 제공 합니다. , &lt;code&gt;interval&lt;/code&gt; , &lt;code&gt;oid&lt;/code&gt; , &lt;code&gt;money&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;varchar&lt;/code&gt; , &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;bytea&lt;/code&gt; , &lt;code&gt;bit&lt;/code&gt; , &lt;code&gt;varbit&lt;/code&gt; , &lt;code&gt;macaddr&lt;/code&gt; , &lt;code&gt;macaddr8&lt;/code&gt; , &lt;code&gt;inet&lt;/code&gt; , &lt;code&gt;cidr&lt;/code&gt; , &lt;code&gt;uuid&lt;/code&gt; 및 모든 &lt;code&gt;enum&lt;/code&gt; 형.</target>
        </trans-unit>
        <trans-unit id="463e9235feda175a4518265b0abb6f0f084d174f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;btrim('xyxtrimyyx', 'xyz')&lt;/code&gt; &amp;rarr; &lt;code&gt;trim&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;btrim('xyxtrimyyx', 'xyz')&lt;/code&gt; &amp;rarr; &lt;code&gt;trim&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20b76f19eab72228dcc479d697a34bac00c59008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;btrim&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;string&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; [, &lt;em&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; ] ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;btrim&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;string&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; [, &lt;em&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; ]) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da47853fb7b7beee35e8aba6986810789fd81c0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferid&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bufferid&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1892ec8698c891b5c678805333a8110eb68dc5ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffering&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;buffering&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3fba9f96f4053130c5facc61b29a5acbf7c04a5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffers_alloc&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffers_alloc&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e8547e2b6f63934fb1126cf25d05ff44c7c39bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffers_backend&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffers_backend&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="108cca6c79cacba154d1a99bdc582e5be50a0594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffers_backend_fsync&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffers_backend_fsync&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6594bd6c76db8043866ded5a0c5231edc5c9cfa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffers_checkpoint&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffers_checkpoint&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c031e058b9bceba733f671627a1733d7acaa8730" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buffers_clean&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffers_clean&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c639c9a5ac84b192954f2f6bce17233c163f735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bytea&lt;/code&gt;&lt;code id=&quot;124124&quot;&gt;||&lt;/code&gt;&lt;code&gt;bytea&lt;/code&gt; &amp;rarr; &lt;code&gt;bytea&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bytea&lt;/code&gt; &lt;code id=&quot;124124&quot;&gt;||&lt;/code&gt; &lt;code&gt;bytea&lt;/code&gt; &amp;rarr; &lt;code&gt;bytea&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d4ab38621d4db61f1ac1f63e70bdc0259ea32ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bytea_output&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bytea_output&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b09d802f6a971699e40541e1f90f924c31f7c3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt; = &lt;code&gt;char&lt;/code&gt; alignment, i.e., no alignment needed.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; = &lt;code&gt;char&lt;/code&gt; 정렬, 즉 정렬이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b4cce9205064c88403bcd3b95b4459a33e224ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt; = check constraint, &lt;code&gt;f&lt;/code&gt; = foreign key constraint, &lt;code&gt;p&lt;/code&gt; = primary key constraint, &lt;code&gt;u&lt;/code&gt; = unique constraint, &lt;code&gt;t&lt;/code&gt; = constraint trigger, &lt;code&gt;x&lt;/code&gt; = exclusion constraint</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; = 점검 제한 조건, &lt;code&gt;f&lt;/code&gt; = 외래 키 제약 조건, &lt;code&gt;p&lt;/code&gt; = 기본 키 제약 조건, &lt;code&gt;u&lt;/code&gt; = 고유 제약 조건, &lt;code&gt;t&lt;/code&gt; = 제약 조건 트리거, &lt;code&gt;x&lt;/code&gt; = 제외 제약 조건</target>
        </trans-unit>
        <trans-unit id="eb313d968aebdb1360de9c75ff1567d4b06f1ae9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;&lt;code&gt;custom&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt;&lt;code&gt;custom&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e32da554f226b5facebbbffe44628495f358acd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache_size&lt;/code&gt;&lt;code&gt;int8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cache_size&lt;/code&gt;&lt;code&gt;int8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="118e7fc4764d240a9a44a4c89661dac3fec5a5b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_handler&lt;/code&gt; is the name of a previously registered function that will be called to execute the procedural language's functions. The call handler for a procedural language must be written in a compiled language such as C with version 1 call convention and registered with PostgreSQL as a function taking no arguments and returning the &lt;code&gt;language_handler&lt;/code&gt; type, a placeholder type that is simply used to identify the function as a call handler.</source>
          <target state="translated">&lt;code&gt;call_handler&lt;/code&gt; 는 절차 언어 기능을 실행하기 위해 호출 될 이전에 등록 된 기능의 이름입니다. 절차 언어에 대한 호출 처리기는 버전 1 호출 규칙을 사용하는 C와 같은 컴파일 된 언어로 작성되어야하며 PostgreSQL에 인수를 사용하지 않고 함수 를 식별하는 데 사용되는 자리 표시 자 형식 인 &lt;code&gt;language_handler&lt;/code&gt; 형식을 반환 하는 함수로 등록해야합니다. 콜 핸들러.</target>
        </trans-unit>
        <trans-unit id="1cb15ec94d6844dda42ab6496409106406f9d97a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;calls&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;calls&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98f8f92c6a53661501d60b82237a4abd46a6fa6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cardinality&lt;/code&gt; returns the total number of elements in an array across all dimensions. It is effectively the number of rows a call to &lt;code&gt;unnest&lt;/code&gt; would yield:</source>
          <target state="translated">&lt;code&gt;cardinality&lt;/code&gt; 는 모든 차원에서 배열의 총 요소 수를 반환합니다. 실제로 &lt;code&gt;unnest&lt;/code&gt; 에 대한 호출 이 생성 하는 행 수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7e35c6e3339260b0447351681f6fa2959d3d6cbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;castcontext&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;castcontext&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fdc787658baf0948196f9866a1e39c79b90e3cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;castfunc&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;castfunc&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="a2a5d5fe394c934904cdeaa9db70d88c6c39581e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;castmethod&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;castmethod&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afc9fdad01206ec199103eecfba3c731bd6c6b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;castsource&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;castsource&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="083992077584a6265f6e3ab8a026e9f65e51dfde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;casttarget&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;casttarget&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="2d6b78ae051a096e0061ff35af5093a6fcd124ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;catalog_xmin&lt;/code&gt;&lt;code&gt;xid&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;catalog_xmin&lt;/code&gt;&lt;code&gt;xid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="861907c8451cbc7f1e97cb6065f854b1279184ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;catchup&lt;/code&gt;: This WAL sender's connected standby is catching up with the primary.</source>
          <target state="translated">&lt;code&gt;catchup&lt;/code&gt; :이 WAL 발신자의 연결된 대기가 기본을 따라 잡고 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fb93489167a3cf269a57a88635bc4ae934542af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;category&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;category&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c577b6838026ced2d618a5de4e1b17e51d1be3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cbc&lt;/code&gt; &amp;mdash; next block depends on previous (default)</source>
          <target state="translated">&lt;code&gt;cbc&lt;/code&gt; &amp;mdash; 다음 블록은 이전에 따라 다릅니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="afadc621abdf88efd1a135ef673cf0d9550882f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceil((max_connections + autovacuum_max_workers + max_wal_senders + max_worker_processes + 5) / 16) * 17&lt;/code&gt; plus room for other applications</source>
          <target state="translated">&lt;code&gt;ceil((max_connections + autovacuum_max_workers + max_wal_senders + max_worker_processes + 5) / 16) * 17&lt;/code&gt; + 다른 응용 프로그램을위한 공간</target>
        </trans-unit>
        <trans-unit id="2697c1164aa5217044cc65d3035f7c8b39ac1988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceil(-42.8)&lt;/code&gt; &amp;rarr; &lt;code&gt;-42&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ceil(-42.8)&lt;/code&gt; &amp;rarr; &lt;code&gt;-42&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56c11e00821a547350088da85eb4362ecccda72e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceil&lt;/code&gt; ( &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ceil&lt;/code&gt; ( &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c42e7e3748879fc43887e53d20a00d20773acbf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceiling&lt;/code&gt; ( &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ceiling&lt;/code&gt; ( &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a04a9090de05d3c07193eed18278a4bd553b546" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfgname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cfgname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1851609576261608ada75e06ff7a1bc6f1d69876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfgnamespace&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-namespace&quot;&gt;&lt;code&gt;pg_namespace&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cfgnamespace&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-namespace&quot;&gt; &lt;code&gt;pg_namespace&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="ea8adbb912fdb862c130dc6bd07c59574af6abc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfgowner&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-authid&quot;&gt;&lt;code&gt;pg_authid&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cfgowner&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-authid&quot;&gt; &lt;code&gt;pg_authid&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="57b6e40e43c781a18825ae1eadb5119303739799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfgparser&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-ts-parser&quot;&gt;&lt;code&gt;pg_ts_parser&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cfgparser&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-ts-parser&quot;&gt; &lt;code&gt;pg_ts_parser&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="602665e61d6b3819f4b55e2f11aa0c4251adee2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char_length('jos&amp;eacute;')&lt;/code&gt; &amp;rarr; &lt;code&gt;4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;char_length('jos&amp;eacute;')&lt;/code&gt; &amp;rarr; &lt;code&gt;4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fabe8f8d4fae7a03948168bb81832beab60af757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char_length&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;char_length&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="047a59c2cf3185227c066fff2d101b5b0fb4c5e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;character_length&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;character_length&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6aee96a88eb265b7ca78c741276c679fe292528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_foreign_key()&lt;/code&gt; checks the referenced table. To use, create a &lt;code&gt;BEFORE DELETE OR UPDATE&lt;/code&gt; trigger using this function on a table referenced by other table(s). Specify as the trigger arguments: the number of referencing tables for which the function has to perform checking, the action if a referencing key is found (&lt;code&gt;cascade&lt;/code&gt; &amp;mdash; to delete the referencing row, &lt;code&gt;restrict&lt;/code&gt; &amp;mdash; to abort transaction if referencing keys exist, &lt;code&gt;setnull&lt;/code&gt; &amp;mdash; to set referencing key fields to null), the triggered table's column names which form the primary/unique key, then the referencing table name and column names (repeated for as many referencing tables as were specified by first argument). Note that the primary/unique key columns should be marked NOT NULL and should have a unique index.</source>
          <target state="translated">&lt;code&gt;check_foreign_key()&lt;/code&gt; 는 참조 된 테이블을 확인합니다. 사용하려면 다른 테이블에서 참조하는 테이블에서이 함수를 사용하여 &lt;code&gt;BEFORE DELETE OR UPDATE&lt;/code&gt; 트리거를 작성하십시오. 함수가 점검을 수행 &lt;code&gt;setnull&lt;/code&gt; 참조 테이블의 수, 참조 키가있는 경우의 조치 ( &lt;code&gt;cascade&lt;/code&gt; -참조 행 삭제, &lt;code&gt;restrict&lt;/code&gt; -참조 키가있는 경우 트랜잭션 중단, setnull) : 트리거 인수로 지정하십시오.&amp;mdash; 참조 키 필드를 null로 설정), 기본 / 고유 키를 형성하는 트리거 된 테이블의 열 이름, 참조 테이블 이름 및 열 이름 (첫 번째 인수에 지정된 수의 참조 테이블에 대해 반복됨). 기본 / 고유 키 열은 NOT NULL로 표시되어야하며 고유 인덱스가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="18734426d17a48e984495edcefe96762f1ef9055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_function_bodies&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;check_function_bodies&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="867923935adc37900901dbf6be1295238abec0fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_option&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;check_option&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="24d080b6ada0fac195449d6e350a2ea2e6d86a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_option&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;check_option&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="af8b20152919ae3e5949ad1da6467a4f1744e42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_primary_key()&lt;/code&gt; and &lt;code&gt;check_foreign_key()&lt;/code&gt; are used to check foreign key constraints. (This functionality is long since superseded by the built-in foreign key mechanism, of course, but the module is still useful as an example.)</source>
          <target state="translated">&lt;code&gt;check_primary_key()&lt;/code&gt; 및 &lt;code&gt;check_foreign_key()&lt;/code&gt; 는 외래 키 제약 조건을 확인하는 데 사용됩니다. (물론이 기능은 내장 외래 키 메커니즘으로 대체 된 지 오래되었지만 모듈은 여전히 ​​예로서 유용합니다.)</target>
        </trans-unit>
        <trans-unit id="36619b5a0396d046f4ddc93f61d9c4a9740d6157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_primary_key()&lt;/code&gt; checks the referencing table. To use, create a &lt;code&gt;BEFORE INSERT OR UPDATE&lt;/code&gt; trigger using this function on a table referencing another table. Specify as the trigger arguments: the referencing table's column name(s) which form the foreign key, the referenced table name, and the column names in the referenced table which form the primary/unique key. To handle multiple foreign keys, create a trigger for each reference.</source>
          <target state="translated">&lt;code&gt;check_primary_key()&lt;/code&gt; 는 참조 테이블을 확인합니다. 사용하려면 다른 테이블을 참조하는 테이블에서이 함수를 사용하여 &lt;code&gt;BEFORE INSERT OR UPDATE&lt;/code&gt; 트리거를 작성 하십시오. 트리거 인수로 외래 키를 구성하는 참조 테이블의 열 이름, 참조 테이블 이름 및 기본 / 고유 키를 형성하는 참조 테이블의 열 이름을 트리거 인수로 지정하십시오. 여러 외래 키를 처리하려면 각 참조에 대한 트리거를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="00cadf215981f3416e447dc0503a8330a677e405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoint_completion_target&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;checkpoint_completion_target&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9180ce38e1168181204edce063810818220b18d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoint_flush_after&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;checkpoint_flush_after&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b97dbd729398db31a2c357dfaff849009d1fced7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoint_sync_time&lt;/code&gt;&lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;checkpoint_sync_time&lt;/code&gt; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15254516a016254c77b7f791550ae32885e5890a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoint_timeout&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;checkpoint_timeout&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6a0408da200f13e84ad0719e7a5ff086e022a1db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoint_warning&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;checkpoint_warning&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="be923cd53c57a9ac69a52984d63fa69fefd30624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoint_write_time&lt;/code&gt;&lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;checkpoint_write_time&lt;/code&gt; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf776539e8dc44ac43512301cc3059ebd6c16e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoints_req&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;checkpoints_req&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ba443e9224da271fedc7f2907e919e2edb8eeb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkpoints_timed&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;checkpoints_timed&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="794346c0b9e7031096514a0735e3d10f7d89ba24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checksum_failures&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;checksum_failures&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f7db509581666c52f4cbf98711d01dcc4dfa4eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checksum_last_failure&lt;/code&gt;&lt;code&gt;timestamp with time zone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;checksum_last_failure&lt;/code&gt; &lt;code&gt;timestamp with time zone&lt;/code&gt; checksum_last_failure 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="8ef0a7b572be5d761455394e55de64b2f896bc27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child_tables_done&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;child_tables_done&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8627c41ee866246ca38ae34195a8ed01df265e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;child_tables_total&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;child_tables_total&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d21058c2dcfc7cd9cce13437bd7d6774bed35451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chr(65)&lt;/code&gt; &amp;rarr; &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;chr(65)&lt;/code&gt; &amp;rarr; &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8bf8c5571831b1d665549d48ae0aa486ceaa8a9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chr&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;chr&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbfd2e02df6063c924d72a696d3a8ff4add07dee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cidr&lt;/code&gt; Input</source>
          <target state="translated">&lt;code&gt;cidr&lt;/code&gt; 입력</target>
        </trans-unit>
        <trans-unit id="a79893c21d873f2caa88b44807a45e98e17f42bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cidr&lt;/code&gt; Output</source>
          <target state="translated">&lt;code&gt;cidr&lt;/code&gt; 출력</target>
        </trans-unit>
        <trans-unit id="7719d18e1809b85c2bbc9013b3cff7b607b1d509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cipher&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cipher&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e50b70bc06a71b3e04fef6d1834d59ece18b90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;circle&lt;/code&gt; ( &lt;code&gt;point&lt;/code&gt;, &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;circle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;circle&lt;/code&gt; ( &lt;code&gt;point&lt;/code&gt; , &lt;code&gt;double precision&lt;/code&gt; ) &amp;rarr; &lt;code&gt;circle&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb59ef96bdfebd441e979d569716bdc953d22ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;circle&lt;/code&gt; ( &lt;code&gt;polygon&lt;/code&gt; ) &amp;rarr; &lt;code&gt;circle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;circle&lt;/code&gt; ( &lt;code&gt;polygon&lt;/code&gt; ) &amp;rarr; &lt;code&gt;circle&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb7dfc6e68db3be84b32d47fc3d1c3e339d59701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;citext&lt;/code&gt; doesn't help much if you need data to compare case-sensitively in some contexts and case-insensitively in other contexts. The standard answer is to use the &lt;code&gt;text&lt;/code&gt; type and manually use the &lt;code&gt;lower&lt;/code&gt; function when you need to compare case-insensitively; this works all right if case-insensitive comparison is needed only infrequently. If you need case-insensitive behavior most of the time and case-sensitive infrequently, consider storing the data as &lt;code&gt;citext&lt;/code&gt; and explicitly casting the column to &lt;code&gt;text&lt;/code&gt; when you want case-sensitive comparison. In either situation, you will need two indexes if you want both types of searches to be fast.</source>
          <target state="translated">&lt;code&gt;citext&lt;/code&gt; 는 일부 상황에서는 대소 문자를 구분하고 다른 상황에서는 대소 문자를 구분하지 않는 데이터가 필요한 경우 크게 도움이되지 않습니다. 표준 답변은 &lt;code&gt;text&lt;/code&gt; 유형 을 사용하고 대소 문자를 구분하지 않고 비교할 때 수동으로 &lt;code&gt;lower&lt;/code&gt; 기능을 사용하는 것입니다 . 대소 문자를 구분하지 않는 비교가 드물게 필요한 경우에 올바르게 작동합니다. 대소 문자를 구분하지 않는 경우가 많고 대소 문자를 구분하지 않는 경우가 &lt;code&gt;citext&lt;/code&gt; 대소 &lt;code&gt;text&lt;/code&gt; 를 구분할 때 데이터를 citext 로 저장 하고 열을 텍스트로 명시 적으로 캐스팅하는 것이 좋습니다. 두 경우 모두 빠른 검색을 원하면 두 개의 인덱스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e5d9ac7d5008282e1b1b8e3aa0ee8073002b81c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;citext&lt;/code&gt; is not as efficient as &lt;code&gt;text&lt;/code&gt; because the operator functions and the B-tree comparison functions must make copies of the data and convert it to lower case for comparisons. Also, only &lt;code&gt;text&lt;/code&gt; can support B-Tree deduplication. However, &lt;code&gt;citext&lt;/code&gt; is slightly more efficient than using &lt;code&gt;lower&lt;/code&gt; to get case-insensitive matching.</source>
          <target state="translated">&lt;code&gt;citext&lt;/code&gt; 는 연산자 함수와 B- 트리 비교 함수가 데이터의 복사본을 만들어 비교를 위해 소문자로 변환해야하므로 &lt;code&gt;text&lt;/code&gt; 만큼 효율적이지 않습니다 . 또한 &lt;code&gt;text&lt;/code&gt; 만 B- 트리 중복 제거를 지원할 수 있습니다. 그러나 &lt;code&gt;citext&lt;/code&gt; 는 대소 문자를 구분하지 않는 일치를 얻기 위해 &lt;code&gt;lower&lt;/code&gt; 를 사용하는 것보다 약간 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="e23f575a4cd4b19d77a19f71d54cef1fd6ae266f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;citext&lt;/code&gt; is not as efficient as &lt;code&gt;text&lt;/code&gt; because the operator functions and the B-tree comparison functions must make copies of the data and convert it to lower case for comparisons. It is, however, slightly more efficient than using &lt;code&gt;lower&lt;/code&gt; to get case-insensitive matching.</source>
          <target state="translated">&lt;code&gt;citext&lt;/code&gt; 연산자 함수와 B- 트리 비교 함수는 비교를 위해 데이터를 복사하여 소문자로 변환해야하기 때문에 citext 는 &lt;code&gt;text&lt;/code&gt; 만큼 효율적이지 않습니다 . 그러나 대소 문자를 구분하지 않는 매칭을 위해 &lt;code&gt;lower&lt;/code&gt; 를 사용하는 것보다 약간 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="4e11d9b93d984a515addd0f09bbd8a4472a5180a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;citext&lt;/code&gt; performs comparisons by converting each string to lower case (as though &lt;code&gt;lower&lt;/code&gt; were called) and then comparing the results normally. Thus, for example, two strings are considered equal if &lt;code&gt;lower&lt;/code&gt; would produce identical results for them.</source>
          <target state="translated">&lt;code&gt;citext&lt;/code&gt; 는 각 문자열을 소문자 ( &lt;code&gt;lower&lt;/code&gt; 가 호출 된 것처럼)로 변환 한 다음 결과를 정상적으로 비교하여 비교를 수행합니다. 따라서, 예를 들어, 2 개의 현이 &lt;code&gt;lower&lt;/code&gt; 동일한 결과가 나오면 동일한 것으로 간주 됩니다.</target>
        </trans-unit>
        <trans-unit id="52feb2b8fa6a452bd033a275952455de6b3fa848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;citext&lt;/code&gt;'s case-folding behavior depends on the &lt;code&gt;LC_CTYPE&lt;/code&gt; setting of your database. How it compares values is therefore determined when the database is created. It is not truly case-insensitive in the terms defined by the Unicode standard. Effectively, what this means is that, as long as you're happy with your collation, you should be happy with &lt;code&gt;citext&lt;/code&gt;'s comparisons. But if you have data in different languages stored in your database, users of one language may find their query results are not as expected if the collation is for another language.</source>
          <target state="translated">&lt;code&gt;citext&lt;/code&gt; 의 대소 문자 구분 동작은 데이터베이스 의 &lt;code&gt;LC_CTYPE&lt;/code&gt; 설정에 따라 다릅니다 . 따라서 값을 비교하는 방법은 데이터베이스를 만들 때 결정됩니다. 유니 코드 표준에 의해 정의 된 용어에서는 대소 문자를 구분하지 않습니다. 효과적으로, 이것이 의미하는 것은 데이터 정렬에 만족하는 한 &lt;code&gt;citext&lt;/code&gt; 비교에 만족해야한다는 것 입니다. 그러나 데이터베이스에 다른 언어로 된 데이터가 저장된 경우 한 언어의 사용자가 데이터 정렬이 다른 언어에 대한 쿼리 인 경우 쿼리 결과가 예상과 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94d58efc1869e8f85b8a106c958aa4934b2e4080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt;&lt;code&gt;pg_class&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;classid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-class&quot;&gt; &lt;code&gt;pg_class&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="173d4a029328ae793db94c0d7ea7ed4aac22cc15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classoid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt;&lt;code&gt;pg_class&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;classoid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-class&quot;&gt; &lt;code&gt;pg_class&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="241de479261925f3c631d9b2a47066a60e4e348f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_addr&lt;/code&gt;&lt;code&gt;inet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;client_addr&lt;/code&gt;&lt;code&gt;inet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef243ce0d3fbbc4d9c344935f1958b5ad6812d99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_dn&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;client_dn&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c97e862d6146b5373a42e79a8bc18e1dccd1ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_encoding&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;client_encoding&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="96e089970021664fb50bc81577939f9e25ae525b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_encoding&lt;/code&gt; (this is automatically set from the local server encoding)</source>
          <target state="translated">&lt;code&gt;client_encoding&lt;/code&gt; (로컬 서버 인코딩에서 자동으로 설정 됨)</target>
        </trans-unit>
        <trans-unit id="62325473150dbd70d71702a302a50aa9c9ed2ceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_hostname&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;client_hostname&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71fa78b433ed2d3809b2304e3e3287dfe074a0eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_min_messages&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;client_min_messages&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="642e34469f64bac54c126447a53a8db5a49c2f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_port&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;client_port&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63dbf3cfb887b2050444f0ee1e9d35124d933968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_serial&lt;/code&gt;&lt;code&gt;numeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;client_serial&lt;/code&gt;&lt;code&gt;numeric&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed33aef64ef580dd23b530688291d5357038418d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_index_relid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cluster_index_relid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="443a300b0f16a7b7e874c8fe71ecacaddb180a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_name&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cluster_name&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8ad65bc83503c8ef84e757ae9da4830f2878588b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clusterdb&lt;/code&gt; [&lt;code&gt;connection-option&lt;/code&gt;...] [ &lt;code&gt;--verbose&lt;/code&gt; | &lt;code&gt;-v&lt;/code&gt; ] &lt;code&gt;--all&lt;/code&gt; | &lt;code&gt;-a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;clusterdb&lt;/code&gt; [ &lt;code&gt;connection-option&lt;/code&gt; ...] [ &lt;code&gt;--verbose&lt;/code&gt; | &lt;code&gt;-v&lt;/code&gt; ] &lt;code&gt;--all&lt;/code&gt; | &lt;code&gt;-a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9809ca1fbdb31ed739362deb05b359a48da5921b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clusterdb&lt;/code&gt; [&lt;code&gt;connection-option&lt;/code&gt;...] [ &lt;code&gt;--verbose&lt;/code&gt; | &lt;code&gt;-v&lt;/code&gt; ] [ &lt;code&gt;--table&lt;/code&gt; | &lt;code&gt;-t&lt;/code&gt;&lt;code&gt;table&lt;/code&gt; ] ... [&lt;code&gt;dbname&lt;/code&gt;]</source>
          <target state="translated">&lt;code&gt;clusterdb&lt;/code&gt; [ &lt;code&gt;connection-option&lt;/code&gt; ...] [ &lt;code&gt;--verbose&lt;/code&gt; | &lt;code&gt;-v&lt;/code&gt; ] [ &lt;code&gt;--table&lt;/code&gt; | &lt;code&gt;-t&lt;/code&gt; &lt;code&gt;table&lt;/code&gt; ] ... [ &lt;code&gt;dbname&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6e057884222f80ac663cb28b36a194881dbdec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmd&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cmd&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8093589d33528b3f04006c92c2af4e2024c514e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;col_description&lt;/code&gt; returns the comment for a table column, which is specified by the OID of its table and its column number. (&lt;code&gt;obj_description&lt;/code&gt; cannot be used for table columns since columns do not have OIDs of their own.)</source>
          <target state="translated">&lt;code&gt;col_description&lt;/code&gt; 은 테이블의 OID와 해당 열 번호로 지정된 테이블 열에 대한 주석을 리턴합니다. ( &lt;code&gt;obj_description&lt;/code&gt; 는 열이 자신의 OID를을 가지고 있지 않기 때문에 테이블 열을 사용할 수 없습니다.)</target>
        </trans-unit>
        <trans-unit id="96ae7beb64e97665e7d54c3f3eee00f3e11db356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collcollate&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collcollate&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ef5a8f180c8d2722dac90e0edc322acc141c91a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collctype&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collctype&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecec36a7ed4dcae7f439b8c3eee43bee04945f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collencoding&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collencoding&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b271b90addb5ee1a6b709171edf9c909a7b64869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collisdeterministic&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collisdeterministic&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8224ae72bf2c3ce4b91426457be17d47e01955c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="012b649c0333081643f52831b5ce216c24e212ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collnamespace&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-namespace&quot;&gt;&lt;code&gt;pg_namespace&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;collnamespace&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-namespace&quot;&gt; &lt;code&gt;pg_namespace&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="72037f5e3e5acce46ed3b45d4edc634d4c9921ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collowner&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-authid&quot;&gt;&lt;code&gt;pg_authid&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;collowner&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-authid&quot;&gt; &lt;code&gt;pg_authid&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="e4b9a0fdbbcf143b1288ec031e247839f01a0df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collprovider&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collprovider&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a6d1569ba3de4f4df21f298de1c12013cecac6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collversion&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collversion&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="101afa5c5a3783cf320b560f051c4a4217818915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt; and each &lt;code&gt;argument&lt;/code&gt; can be either a text constant or a &lt;code&gt;:&lt;/code&gt;&lt;code&gt;variablename&lt;/code&gt; reference to a variable. If you want to use an &lt;code&gt;argument&lt;/code&gt; starting with a colon, write an additional colon at the beginning of &lt;code&gt;argument&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 각 &lt;code&gt;argument&lt;/code&gt; 문자 상수 또는 일 수있다 &lt;code&gt;:&lt;/code&gt; &lt;code&gt;variablename&lt;/code&gt; 변수를 참조. 당신이 사용하려는 경우 &lt;code&gt;argument&lt;/code&gt; 콜론으로 시작을,의 시작 부분에 추가 콜론 쓰기 &lt;code&gt;argument&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca13b88184618151306239551b88bf702887892d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt; must be either a command string that is completely parsable by the server (i.e., it contains no psql-specific features), or a single backslash command. Thus you cannot mix SQL and psql meta-commands within a &lt;code&gt;-c&lt;/code&gt; option. To achieve that, you could use repeated &lt;code&gt;-c&lt;/code&gt; options or pipe the string into psql, for example:</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 는 서버에서 완전히 구문 분석 할 수있는 명령 문자열이거나 (예 : psql 관련 기능이 포함되어 있지 않음) 단일 백 슬래시 명령 이어야합니다. 따라서 &lt;code&gt;-c&lt;/code&gt; 옵션 내에서 SQL 및 psql 메타 명령을 혼합 할 수 없습니다 . 이를 위해 반복 된 &lt;code&gt;-c&lt;/code&gt; 옵션을 사용하거나 문자열을 psql에 파이프 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6f5487735dfaef72f2149c401a9f88aa0633f688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;command&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfafbc3a43f9d148dcb471f7c8e2bdeef2d54a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a800a8fcf9cfac3d11a1c740b2cbe148e88b19da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commit_delay&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;commit_delay&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="389b572db6f78a41dd3b99d07e2426aa6fd6dd82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commit_siblings&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;commit_siblings&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5c75f299bab8bbe7d69d5e5b676828ff48a545af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compression&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;compression&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91a9e131da4ae6de873544e61438119fdcb4bb84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conbin&lt;/code&gt;&lt;code&gt;pg_node_tree&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;conbin&lt;/code&gt;&lt;code&gt;pg_node_tree&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90a0b8cbe669c8700a06abfce552626da7d952d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat('abcde', 2, NULL, 22)&lt;/code&gt; &amp;rarr; &lt;code&gt;abcde222&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;concat('abcde', 2, NULL, 22)&lt;/code&gt; &amp;rarr; &lt;code&gt;abcde222&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="297725e1584274b023b1bab7767f84287ff1accd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;val1&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&quot;any&quot;&lt;/code&gt; [, &lt;em&gt;&lt;code&gt;val2&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&quot;any&quot;&lt;/code&gt; [, ...] ] ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;val1&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&quot;any&quot;&lt;/code&gt; [, &lt;em&gt; &lt;code&gt;val2&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&quot;any&quot;&lt;/code&gt; [, ...]]) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6074d894508d300a4c8d698301171bef0218e3a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat_ws(',', 'abcde', 2, NULL, 22)&lt;/code&gt; &amp;rarr; &lt;code&gt;abcde,2,22&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;concat_ws(',', 'abcde', 2, NULL, 22)&lt;/code&gt; &amp;rarr; &lt;code&gt;abcde,2,22&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3eaf036e9b14c3c6ee7a062cf7bcb1e12b22f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat_ws&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;sep&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt;, &lt;em&gt;&lt;code&gt;val1&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&quot;any&quot;&lt;/code&gt; [, &lt;em&gt;&lt;code&gt;val2&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&quot;any&quot;&lt;/code&gt; [, ...] ] ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;concat_ws&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;sep&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; , &lt;em&gt; &lt;code&gt;val1&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&quot;any&quot;&lt;/code&gt; [, &lt;em&gt; &lt;code&gt;val2&lt;/code&gt; &lt;/em&gt; &lt;code&gt;&quot;any&quot;&lt;/code&gt; [, ...]]) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="916f1bd90f4952a65cc94ad05d130d2af29bada9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;condefault&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;condefault&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b4cd548b1152bea4da6d4a002d3b7c2cc821271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;condeferrable&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;condeferrable&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c2a9cf7b3481d60689102be1f35859933134615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;condeferred&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;condeferred&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db2dcfe390c6a2ecf5cad169c965ed6a28164356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conexclop&lt;/code&gt;&lt;code&gt;oid[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt;&lt;code&gt;pg_operator&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conexclop&lt;/code&gt; &lt;code&gt;oid[]&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-operator&quot;&gt; &lt;code&gt;pg_operator&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="f0d2f2dd908fcef5cdabbc1d9e4f3c90246fd7d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confdeltype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confdeltype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80f9c33f9493adefc70cef5d1455be864e3cdc41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conffeqop&lt;/code&gt;&lt;code&gt;oid[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt;&lt;code&gt;pg_operator&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conffeqop&lt;/code&gt; &lt;code&gt;oid[]&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-operator&quot;&gt; &lt;code&gt;pg_operator&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="7efbc78f567442e6eb477be50a02a989fc7f8212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config_file&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;config_file&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6a1e2edd3876081169f4b75b67102f7deb447399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configuration_parameter&lt;/code&gt;&lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;configuration_parameter&lt;/code&gt;&lt;code&gt;value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f7154fe9a76ade58b9031e900cc82da75806e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confirmed_flush_lsn&lt;/code&gt;&lt;code&gt;pg_lsn&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confirmed_flush_lsn&lt;/code&gt;&lt;code&gt;pg_lsn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a51cd68e975f9da18c420930d9d4bbd150761186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confkey&lt;/code&gt;&lt;code&gt;int2[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt;&lt;code&gt;pg_attribute&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;attnum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;confkey&lt;/code&gt; &lt;code&gt;int2[]&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-attribute&quot;&gt; &lt;code&gt;pg_attribute&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;attnum&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="c22cbf1f3958fd5e5021af0ce79036b574909215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confl_bufferpin&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confl_bufferpin&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="943c11665e11e3360974b5913149ecf0b38a10df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confl_deadlock&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confl_deadlock&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c85869d3800c0cb8dec65d897a3c1e22546388f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confl_lock&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confl_lock&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1b7dbca2431fe4412fb29ed36dc5b7068ecddd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confl_snapshot&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confl_snapshot&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50a530b4a6b95a32fdc9a3982baf1a183c3bc8ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confl_tablespace&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confl_tablespace&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc0d9385851c326e95f997cea413ff354d38a032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conflicts&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;conflicts&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e19da10e87ac3084e91b1d8bc22f2f7ac6d03456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confmatchtype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confmatchtype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="630b643aa3c284e166a70626b502e7860213cb17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conforencoding&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;conforencoding&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf695406e8719da93f8c95b3889e1fc07e37ae3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confrelid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt;&lt;code&gt;pg_class&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;confrelid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-class&quot;&gt; &lt;code&gt;pg_class&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="80e2e7adcfb36158f87e206b7e5de1c9bbda0646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confupdtype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;confupdtype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c930852dca882e071a43aa24549b555e5f3b420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conindid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt;&lt;code&gt;pg_class&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conindid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-class&quot;&gt; &lt;code&gt;pg_class&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="aa9e7ec50c642ddb591333480712a92158066859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;coninhcount&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;coninhcount&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a09972af9beb04355dd3f2d8b414b3d3b5f631e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conislocal&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;conislocal&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71a07e7bf549ebd7d813bf9e07813512924acf27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conkey&lt;/code&gt;&lt;code&gt;int2[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-attribute&quot;&gt;&lt;code&gt;pg_attribute&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;attnum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conkey&lt;/code&gt; &lt;code&gt;int2[]&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-attribute&quot;&gt; &lt;code&gt;pg_attribute&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;attnum&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="f03e88a317f115169a3cde6028afa31ae2617063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;conname&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba9a68f07703a3b511d0dfafb5125bef86812a69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connamespace&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-namespace&quot;&gt;&lt;code&gt;pg_namespace&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;connamespace&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-namespace&quot;&gt; &lt;code&gt;pg_namespace&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="66e910a78d645658518d15ce97568e2a2a988684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ce1dd191262f824d2013b3a539beaac29ea263dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connectby&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;relname&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt;, &lt;em&gt;&lt;code&gt;keyid_fld&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt;, &lt;em&gt;&lt;code&gt;parent_keyid_fld&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; [, &lt;em&gt;&lt;code&gt;orderby_fld&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; ], &lt;em&gt;&lt;code&gt;start_with&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt;, &lt;em&gt;&lt;code&gt;max_depth&lt;/code&gt;&lt;/em&gt;&lt;code&gt;integer&lt;/code&gt; [, &lt;em&gt;&lt;code&gt;branch_delim&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; ] ) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;connectby&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;relname&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; , &lt;em&gt; &lt;code&gt;keyid_fld&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; , &lt;em&gt; &lt;code&gt;parent_keyid_fld&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; [, &lt;em&gt; &lt;code&gt;orderby_fld&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; ], &lt;em&gt; &lt;code&gt;start_with&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; , &lt;em&gt; &lt;code&gt;max_depth&lt;/code&gt; &lt;/em&gt; &lt;code&gt;integer&lt;/code&gt; [, &lt;em&gt; &lt;code&gt;branch_delim&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; ]) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bafe0b65d51e5d6e9867c80149313e1a502e4f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conninfo&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;conninfo&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="887c5aed5080314b312c4ad806e44cf44b8a2661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connoinherit&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;connoinherit&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44ec9c0a148d7039f539137b580b2d3f7429fd07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conowner&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-authid&quot;&gt;&lt;code&gt;pg_authid&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conowner&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-authid&quot;&gt; &lt;code&gt;pg_authid&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="8d89c213814fe4341c769b7275b60eddc298d28f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conparentid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-constraint&quot;&gt;&lt;code&gt;pg_constraint&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conparentid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-constraint&quot;&gt; &lt;code&gt;pg_constraint&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="1ba0c7a257c072a5d3bda6568b1267c0bb3b27c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conpfeqop&lt;/code&gt;&lt;code&gt;oid[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt;&lt;code&gt;pg_operator&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conpfeqop&lt;/code&gt; &lt;code&gt;oid[]&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-operator&quot;&gt; &lt;code&gt;pg_operator&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="403f7d894512ac2f2965050137095b002852f954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conppeqop&lt;/code&gt;&lt;code&gt;oid[]&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-operator&quot;&gt;&lt;code&gt;pg_operator&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conppeqop&lt;/code&gt; &lt;code&gt;oid[]&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-operator&quot;&gt; &lt;code&gt;pg_operator&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="a3a01a854b7c022b30cf589cc4a72ef341a34347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conproc&lt;/code&gt;&lt;code&gt;regproc&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-proc&quot;&gt;&lt;code&gt;pg_proc&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conproc&lt;/code&gt; &lt;code&gt;regproc&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-proc&quot;&gt; &lt;code&gt;pg_proc&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="2b0729031d16baec696fc0248d1b1344784f17fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conrelid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-class&quot;&gt;&lt;code&gt;pg_class&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;conrelid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-class&quot;&gt; &lt;code&gt;pg_class&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="978159af1b4888867d8f5ed47da5fb3c2f74ab27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constraint_exclusion&lt;/code&gt; (&lt;code&gt;enum&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;constraint_exclusion&lt;/code&gt; ( &lt;code&gt;enum&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2f28f7ca9e658432c72524cb771755c72e61d3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt;&lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3631301d084832de2f31ade2c8c7534ed45e314b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contoencoding&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;contoencoding&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f438f827d1623b1e560fb3a55b944851181dc0bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;contype&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e50225276df7ed84b832c5c9bddb7e5801f36e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contypid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;contypid&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="0ed7868f1efa44e6c4226bfcb79c850fa110f1a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;convalidated&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;convalidated&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0435f768aff97ffed0bfad9fa926f4e5f6a950d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy_data&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;copy_data&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a3ebfcf45a135ca56dd5f2a673fd26efe7ffef9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;correlation&lt;/code&gt; is the name of a table (possibly qualified with a schema name), or an alias for a table defined by means of a &lt;code&gt;FROM&lt;/code&gt; clause. The correlation name and separating dot can be omitted if the column name is unique across all the tables being used in the current query. (See also &lt;a href=&quot;https://www.postgresql.org/docs/12/queries.html&quot;&gt;Chapter 7&lt;/a&gt;.)</source>
          <target state="translated">&lt;code&gt;correlation&lt;/code&gt; 는 테이블 이름 (스키마 이름으로 정규화 될 수 있음) 또는 &lt;code&gt;FROM&lt;/code&gt; 절 을 통해 정의 된 테이블의 별명입니다 . 열 이름이 현재 쿼리에서 사용중인 모든 테이블에서 고유 한 경우 상관 이름과 분리 점을 생략 할 수 있습니다. (또한 &lt;a href=&quot;https://www.postgresql.org/docs/12/queries.html&quot;&gt;7 장을&lt;/a&gt; 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="9ea13b741130c692217516c026d3dbf011730fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;correlation&lt;/code&gt; is the name of a table (possibly qualified with a schema name), or an alias for a table defined by means of a &lt;code&gt;FROM&lt;/code&gt; clause. The correlation name and separating dot can be omitted if the column name is unique across all the tables being used in the current query. (See also &lt;a href=&quot;https://www.postgresql.org/docs/13/queries.html&quot;&gt;Chapter 7&lt;/a&gt;.)</source>
          <target state="translated">&lt;code&gt;correlation&lt;/code&gt; 은 테이블의 이름 (스키마 이름으로 규정 될 수 있음) 또는 &lt;code&gt;FROM&lt;/code&gt; 절 을 통해 정의 된 테이블의 별명입니다 . 컬럼 이름이 현재 쿼리에서 사용중인 모든 테이블에서 고유 한 경우 상관 이름 및 구분 점을 생략 할 수 있습니다. ( &lt;a href=&quot;https://www.postgresql.org/docs/13/queries.html&quot;&gt;7 장&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="5d772d417716aaa9fb953a81c3d1a11cd2f137db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;correlation&lt;/code&gt;&lt;code&gt;float4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;correlation&lt;/code&gt;&lt;code&gt;float4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="963778214b90994e4ef19c7d92f03e9fdfe46423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; ( &lt;code&gt;&quot;any&quot;&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; ( &lt;code&gt;&quot;any&quot;&lt;/code&gt; ) &amp;rarr; &lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65a46d2cd9da813de4812dc5db9a6a0ce7826611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; is a possibly-signed integer constant, determining the location or number of rows to fetch. For &lt;code&gt;FORWARD&lt;/code&gt; and &lt;code&gt;BACKWARD&lt;/code&gt; cases, specifying a negative &lt;code&gt;count&lt;/code&gt; is equivalent to changing the sense of &lt;code&gt;FORWARD&lt;/code&gt; and &lt;code&gt;BACKWARD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 는 부호있는 정수 상수이며 가져올 행의 위치 또는 수를 결정합니다. 들면 &lt;code&gt;FORWARD&lt;/code&gt; 및 &lt;code&gt;BACKWARD&lt;/code&gt; 경우, 음의 특정 &lt;code&gt;count&lt;/code&gt; 감 변경 동등 &lt;code&gt;FORWARD&lt;/code&gt; 및 &lt;code&gt;BACKWARD&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="3afa553d62686101963c9a4065aac0c52b3dc270" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; specifies the maximum number of rows to return, while &lt;code&gt;start&lt;/code&gt; specifies the number of rows to skip before starting to return rows. When both are specified, &lt;code&gt;start&lt;/code&gt; rows are skipped before starting to count the &lt;code&gt;count&lt;/code&gt; rows to be returned.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 는 반환 할 최대 행 수를 지정하고 &lt;code&gt;start&lt;/code&gt; 는 행 반환을 시작 하기 전에 건너 뛸 행 수를 지정합니다. 둘 다 지정되면 리턴 될 &lt;code&gt;count&lt;/code&gt; 행 수 를 계산하기 전에 &lt;code&gt;start&lt;/code&gt; 행을 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="39a57d4838b578ab0af32baf47affd61b2516894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpu_index_tuple_cost&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cpu_index_tuple_cost&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5ac1a83d31665e15123b770e3623c557a7877299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpu_operator_cost&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cpu_operator_cost&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="38f00d34193637d9ed1b51acc8400ef2fcebfee5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpu_tuple_cost&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cpu_tuple_cost&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4563741b591e6ae09711bcf3d29c81a91f013737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create type subrowtype as (d int, e text);&lt;/code&gt;&lt;code&gt;create type myrowtype as (a int, b text[], c subrowtype);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;create type subrowtype as (d int, e text);&lt;/code&gt; &lt;code&gt;create type myrowtype as (a int, b text[], c subrowtype);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fbbeaaf66550b2525e410493e929014dd1963e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create_slot&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;create_slot&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="74b676df99946e3fab4fee02d295136f036b0875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createdb&lt;/code&gt; [&lt;code&gt;connection-option&lt;/code&gt;...] [&lt;code&gt;option&lt;/code&gt;...] [&lt;code&gt;dbname&lt;/code&gt; [&lt;code&gt;description&lt;/code&gt;]]</source>
          <target state="translated">&lt;code&gt;createdb&lt;/code&gt; [ &lt;code&gt;connection-option&lt;/code&gt; ...] [ &lt;code&gt;option&lt;/code&gt; ...] [ &lt;code&gt;dbname&lt;/code&gt; [ &lt;code&gt;description&lt;/code&gt; ]]</target>
        </trans-unit>
        <trans-unit id="cd00db21b99be0432967f731fa171a4911ccd364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createdb&lt;/code&gt; does no magic. It connects to the &lt;code&gt;postgres&lt;/code&gt; database and issues the &lt;code&gt;CREATE DATABASE&lt;/code&gt; command, exactly as described above. The &lt;a href=&quot;app-createdb&quot;&gt;createdb&lt;/a&gt; reference page contains the invocation details. Note that &lt;code&gt;createdb&lt;/code&gt; without any arguments will create a database with the current user name.</source>
          <target state="translated">&lt;code&gt;createdb&lt;/code&gt; 는 마술을하지 않습니다. &lt;code&gt;postgres&lt;/code&gt; 데이터베이스에 연결하고 위에서 설명한대로 &lt;code&gt;CREATE DATABASE&lt;/code&gt; 명령을 실행합니다. &lt;a href=&quot;app-createdb&quot;&gt;CREATEDB의&lt;/a&gt; 참조 페이지는 호출 대한 세부 사항이 포함되어 있습니다. 참고 &lt;code&gt;createdb&lt;/code&gt; 현재 사용자 이름으로 데이터베이스를 생성합니다 인수없이.</target>
        </trans-unit>
        <trans-unit id="aa3241e53f7336b199054e43c7a325e5593b8ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createuser&lt;/code&gt; [&lt;code&gt;connection-option&lt;/code&gt;...] [&lt;code&gt;option&lt;/code&gt;...] [&lt;code&gt;username&lt;/code&gt;]</source>
          <target state="translated">&lt;code&gt;createuser&lt;/code&gt; [ &lt;code&gt;connection-option&lt;/code&gt; ...] [ &lt;code&gt;option&lt;/code&gt; ...] [ &lt;code&gt;username&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fc6881083127dc303a5a9e54642018ba1da09b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;creation_time&lt;/code&gt;&lt;code&gt;timestamptz&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;creation_time&lt;/code&gt;&lt;code&gt;timestamptz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="097029eaec17796f6f37ba1825f18fc1dc4c1992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crosstab&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;source_sql&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt;, &lt;em&gt;&lt;code&gt;category_sql&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;crosstab&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;source_sql&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; , &lt;em&gt; &lt;code&gt;category_sql&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a751db99f8a20b93d6ec18453d36de12e32f38e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crosstab&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;sql&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;crosstab&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;sql&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acb44ef8500fab3735b1866625aa12e341e277c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crosstab&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;sql&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt;, &lt;em&gt;&lt;code&gt;N&lt;/code&gt;&lt;/em&gt;&lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;crosstab&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;sql&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; , &lt;em&gt; &lt;code&gt;N&lt;/code&gt; &lt;/em&gt; &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof record&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc990468310f067835c54fc749b5be3994a8f194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crosstabN&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;sql&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof table_crosstab_N&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;crosstabN&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;sql&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;setof table_crosstab_N&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ba0ce71d19fe2bf799d959975f5e898e3c3ea9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypt-bf&lt;/code&gt; numbers are taken using a simple program that loops over 1000 8-character passwords. That way I can show the speed with different numbers of iterations. For reference: &lt;code&gt;john -test&lt;/code&gt; shows 13506 loops/sec for &lt;code&gt;crypt-bf/5&lt;/code&gt;. (The very small difference in results is in accordance with the fact that the &lt;code&gt;crypt-bf&lt;/code&gt; implementation in &lt;code&gt;pgcrypto&lt;/code&gt; is the same one used in John the Ripper.)</source>
          <target state="translated">&lt;code&gt;crypt-bf&lt;/code&gt; 번호는 1000 개 이상의 8 문자 암호를 반복하는 간단한 프로그램을 사용하여 가져옵니다. 그렇게하면 다른 반복 횟수로 속도를 보여줄 수 있습니다. 참고로 &lt;code&gt;john -test&lt;/code&gt; 는 &lt;code&gt;crypt-bf/5&lt;/code&gt; 에 대해 13506 루프 / 초를 보여줍니다 . (결과의 아주 작은 차이는 &lt;code&gt;pgcrypto&lt;/code&gt; 의 &lt;code&gt;crypt-bf&lt;/code&gt; 구현 이 John the Ripper에서 사용 된 것과 동일 하다는 사실 에 따릅니다 .)</target>
        </trans-unit>
        <trans-unit id="1a28fc368bc65090a50bec41a0656581921809ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypt-des&lt;/code&gt; and &lt;code&gt;crypt-md5&lt;/code&gt; algorithm numbers are taken from John the Ripper v1.6.38 &lt;code&gt;-test&lt;/code&gt; output.</source>
          <target state="translated">&lt;code&gt;crypt-des&lt;/code&gt; 및 &lt;code&gt;crypt-md5&lt;/code&gt; 알고리즘 번호는 John the Ripper v1.6.38 &lt;code&gt;-test&lt;/code&gt; 출력 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="61b93541a6e986e3f11ad9875e724e92be30852e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;csv&lt;/code&gt; format  writes column values separated by commas, applying the quoting rules described in &lt;a href=&quot;https://tools.ietf.org/html/rfc4180&quot;&gt;RFC 4180&lt;/a&gt;. This output is compatible with the CSV format of the server's &lt;code&gt;COPY&lt;/code&gt; command. A header line with column names is generated unless the &lt;code&gt;tuples_only&lt;/code&gt; parameter is &lt;code&gt;on&lt;/code&gt;. Titles and footers are not printed. Each row is terminated by the system-dependent end-of-line character, which is typically a single newline (&lt;code&gt;\n&lt;/code&gt;) for Unix-like systems or a carriage return and newline sequence (&lt;code&gt;\r\n&lt;/code&gt;) for Microsoft Windows. Field separator characters other than comma can be selected with &lt;code&gt;\pset csv_fieldsep&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;csv&lt;/code&gt; 형식은 &lt;a href=&quot;https://tools.ietf.org/html/rfc4180&quot;&gt;RFC 4180에&lt;/a&gt; 설명 된 인용 규칙을 적용하여 열 값을 쉼표로 구분하여 기록합니다 . 이 출력은 서버 &lt;code&gt;COPY&lt;/code&gt; 명령 의 CSV 형식과 호환됩니다 . &lt;code&gt;tuples_only&lt;/code&gt; 매개 변수가 설정 &lt;code&gt;on&lt;/code&gt; 있지 않으면 열 이름이있는 헤더 행이 생성 됩니다 . 제목과 바닥 글이 인쇄되지 않습니다. 각 행은 시스템 종속 행 끝 문자로 종료되는데, 일반적으로 Unix 계열 시스템의 경우 단일 줄 바꿈 ( &lt;code&gt;\n&lt;/code&gt; ) 또는 Microsoft Windows의 경우 캐리지 리턴 및 줄 바꿈 시퀀스 ( &lt;code&gt;\r\n&lt;/code&gt; )입니다. 쉼표 이외의 필드 구분 문자는 &lt;code&gt;\pset csv_fieldsep&lt;/code&gt; 로 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce2d546a801b866c99f1288f380120dbecbb6536" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube('(1,2),(3,4)'::cube, 5)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2, 5),(3, 4, 5)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube('(1,2),(3,4)'::cube, 5)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2, 5),(3, 4, 5)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="175e8786e3148b8f9f29a21100041a9c99afef6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube('(1,2),(3,4)'::cube, 5, 6)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2, 5),(3, 4, 6)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube('(1,2),(3,4)'::cube, 5, 6)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2, 5),(3, 4, 6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6cfac5194474fd422cca5d59cf3223bd4a6bbc63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube(1)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube(1)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d149bd5a9a644c816a30b0fd0bbc2d546421587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube(1,2)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1),(2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube(1,2)&lt;/code&gt; &amp;rarr; &lt;code&gt;(1),(2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2152617399f5580fe7d703a5c9655984746f45e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube(ARRAY[1,2,3])&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2, 3)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube(ARRAY[1,2,3])&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2, 3)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a24c2b33e40c4ff3eabf44ea8f6443d1f26995e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube(ARRAY[1,2], ARRAY[3,4])&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2),(3, 4)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube(ARRAY[1,2], ARRAY[3,4])&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2),(3, 4)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6ca7862862e7d7fddfc9f5962691d2af562dbfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="528bce5a702e6e853b36ab34534424a748bed568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;float8&lt;/code&gt;, &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;float8&lt;/code&gt; , &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7ad0c47e8cec1368b9fc45b6ba3ec9a6c81ea9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="636ef722b67cd3cbbf77ff69557b9180dec7c491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8&lt;/code&gt;, &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8&lt;/code&gt; , &lt;code&gt;float8&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06be3d8c6124c999504717d4cb7b793809e1242e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8[]&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8[]&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5957af2394455e78ba071b0664786a0805ee058a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8[]&lt;/code&gt;, &lt;code&gt;float8[]&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; ( &lt;code&gt;float8[]&lt;/code&gt; , &lt;code&gt;float8[]&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f533d7664490e06fb4b3f0fcbc639c563d6fc3a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d22e3bb8b0cfeeba0055c66ab0e0b8c04fd8612c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;&amp;lt;#&amp;gt;&lt;/code&gt;&lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;&amp;lt;#&amp;gt;&lt;/code&gt; &lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41ab97d14302518520d5aa94c083d35ddf572565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;&amp;lt;-&amp;gt;&lt;/code&gt;&lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;&amp;lt;-&amp;gt;&lt;/code&gt; &lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fec67ccc2e1da9b8fb498104c6d4701a2c02d612" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; &lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4f6762a680d006d26c72bd7b41a440d91e7c1b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;&amp;lt;@&lt;/code&gt;&lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;&amp;lt;@&lt;/code&gt; &lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3f41bc84b0ba74c6cd26e557833cb1d8650d546" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3a32a76560ce4895f08e3809cc523702ce4355e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;@&amp;gt;&lt;/code&gt;&lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;@&amp;gt;&lt;/code&gt; &lt;code&gt;cube&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14d8242ba5579fcf591a1a25565ca65ff3ec6ad2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube&lt;/code&gt;&lt;code&gt;~&amp;gt;&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube&lt;/code&gt; &lt;code&gt;~&amp;gt;&lt;/code&gt; &lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f03f3b606e0c8a47708c620d1cfb3096bdcc48fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_dim('(1,2),(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_dim('(1,2),(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddd22602c69675a6bb159f8113075440d0148cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_dim&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_dim&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5026d2194662fc3ccafb86bd6776492386104bcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_distance('(1,2)', '(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;2.8284271247461903&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_distance('(1,2)', '(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;2.8284271247461903&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2191044b753d3eae4c14567a5fabee90ac2892a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_distance&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_distance&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc4610516e389a1037aa752a6abc022dc2d549c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_enlarge('(1,2),(3,4)', 0.5, 3)&lt;/code&gt; &amp;rarr; &lt;code&gt;(0.5, 1.5, -0.5),(3.5, 4.5, 0.5)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_enlarge('(1,2),(3,4)', 0.5, 3)&lt;/code&gt; &amp;rarr; &lt;code&gt;(0.5, 1.5, -0.5),(3.5, 4.5, 0.5)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34590e820d3373a152ab3002352e62d4915196ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_enlarge&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;c&lt;/code&gt;&lt;/em&gt;&lt;code&gt;cube&lt;/code&gt;, &lt;em&gt;&lt;code&gt;r&lt;/code&gt;&lt;/em&gt;&lt;code&gt;double&lt;/code&gt;, &lt;em&gt;&lt;code&gt;n&lt;/code&gt;&lt;/em&gt;&lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_enlarge&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;c&lt;/code&gt; &lt;/em&gt; &lt;code&gt;cube&lt;/code&gt; , &lt;em&gt; &lt;code&gt;r&lt;/code&gt; &lt;/em&gt; &lt;code&gt;double&lt;/code&gt; , &lt;em&gt; &lt;code&gt;n&lt;/code&gt; &lt;/em&gt; &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="663e4ce4bc36408b96c14f69d03a5f1ead5a4f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_inter('(1,2)', '(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;(3, 4),(1, 2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_inter('(1,2)', '(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;(3, 4),(1, 2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6dca4feda4f3463fddc28f6c6612c0f05d5d122c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_inter&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_inter&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81a91264ebcbc7832959df7f71e4752bd11789b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_is_point(cube(1,1))&lt;/code&gt; &amp;rarr; &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_is_point(cube(1,1))&lt;/code&gt; &amp;rarr; &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0953541f4b1516d717468ef623760f012ec27e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_is_point&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_is_point&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2976de485bf1984e21626ed4860efd28642aba26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_ll_coord('(1,2),(3,4)', 2)&lt;/code&gt; &amp;rarr; &lt;code&gt;2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_ll_coord('(1,2),(3,4)', 2)&lt;/code&gt; &amp;rarr; &lt;code&gt;2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b38e85928dcd037067af10f7b750022b9d0ab420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_ll_coord&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_ll_coord&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a854a6d0a336cd48135c1b1b71d555013fd66ed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[2]) == '(3),(7)'&lt;/code&gt;&lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[3,2,1,1]) == '(5,3,1,1),(8,7,6,6)'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[2]) == '(3),(7)'&lt;/code&gt; &lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[3,2,1,1]) == '(5,3,1,1),(8,7,6,6)'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f7638783ecc911eb508bc256b7990f105210bf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[2])&lt;/code&gt; &amp;rarr; &lt;code&gt;(3),(7)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[2])&lt;/code&gt; &amp;rarr; &lt;code&gt;(3),(7)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="773f76392e340d4d1ca7a4ed00d8201a7eb5eb34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[3,2,1,1])&lt;/code&gt; &amp;rarr; &lt;code&gt;(5, 3, 1, 1),(8, 7, 6, 6)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[3,2,1,1])&lt;/code&gt; &amp;rarr; &lt;code&gt;(5, 3, 1, 1),(8, 7, 6, 6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d356f72bff9199e69e7d9560805901f9f598636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_subset&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;integer[]&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_subset&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;integer[]&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81203d95e211f00a13d9648e2700b8ad05244611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_union('(1,2)', '(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2),(3, 4)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_union('(1,2)', '(3,4)')&lt;/code&gt; &amp;rarr; &lt;code&gt;(1, 2),(3, 4)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="621054bf9847c560542aeedc65b0257d9a01515a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_union&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_union&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;cube&lt;/code&gt; ) &amp;rarr; &lt;code&gt;cube&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb7ba802322c4bfa37c728ae4c6d14b0845fa584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_ur_coord('(1,2),(3,4)', 2)&lt;/code&gt; &amp;rarr; &lt;code&gt;4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_ur_coord('(1,2),(3,4)', 2)&lt;/code&gt; &amp;rarr; &lt;code&gt;4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea6ca66a572f4e754155fddc1facfb7626d373b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cube_ur_coord&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cube_ur_coord&lt;/code&gt; ( &lt;code&gt;cube&lt;/code&gt; , &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;float8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f19bf33bc7880cbd5824b79af7a72d7c715923f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cume_dist&lt;/code&gt; computes the fraction of partition rows that are less than or equal to the current row and its peers, while &lt;code&gt;percent_rank&lt;/code&gt; computes the fraction of partition rows that are less than the current row, assuming the current row does not exist in the partition.</source>
          <target state="translated">&lt;code&gt;cume_dist&lt;/code&gt; 는 현재 행과 그 피어보다 작거나 같은 파티션 행의 비율을 계산하는 반면, &lt;code&gt;percent_rank&lt;/code&gt; 는 현재 행이 파티션에 존재하지 않는다고 가정하고 현재 행보다 적은 파티션 행의 비율을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="74da38248c94ae8d28bab065bdf3a36cbbf56f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_catalog&lt;/code&gt;, &lt;code&gt;current_role&lt;/code&gt;, &lt;code&gt;current_schema&lt;/code&gt;, &lt;code&gt;current_user&lt;/code&gt;, &lt;code&gt;session_user&lt;/code&gt;, and &lt;code&gt;user&lt;/code&gt; have special syntactic status in SQL: they must be called without trailing parentheses. (In PostgreSQL, parentheses can optionally be used with &lt;code&gt;current_schema&lt;/code&gt;, but not with the others.)</source>
          <target state="translated">&lt;code&gt;current_catalog&lt;/code&gt; , &lt;code&gt;current_role&lt;/code&gt; , &lt;code&gt;current_schema&lt;/code&gt; , &lt;code&gt;current_user&lt;/code&gt; , &lt;code&gt;session_user&lt;/code&gt; 및 &lt;code&gt;user&lt;/code&gt; 는 SQL에서 특수한 구문 상태를 갖습니다. 뒤에 괄호없이 호출해야합니다. PostgreSQL에서 괄호는 선택적으로 &lt;code&gt;current_schema&lt;/code&gt; 와 함께 사용할 수 있지만 다른 것과 함께 사용할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="b6e4b0c9a99ace15fe39e974b42e46113bd4719e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_catalog&lt;/code&gt;, &lt;code&gt;current_role&lt;/code&gt;, &lt;code&gt;current_schema&lt;/code&gt;, &lt;code&gt;current_user&lt;/code&gt;, &lt;code&gt;session_user&lt;/code&gt;, and &lt;code&gt;user&lt;/code&gt; have special syntactic status in SQL: they must be called without trailing parentheses. In PostgreSQL, parentheses can optionally be used with &lt;code&gt;current_schema&lt;/code&gt;, but not with the others.</source>
          <target state="translated">&lt;code&gt;current_catalog&lt;/code&gt; , &lt;code&gt;current_role&lt;/code&gt; , &lt;code&gt;current_schema&lt;/code&gt; , &lt;code&gt;current_user&lt;/code&gt; , &lt;code&gt;session_user&lt;/code&gt; 및 &lt;code&gt;user&lt;/code&gt; 는 SQL에서 특수한 구문 상태를 갖습니다. 후행 괄호없이 호출해야합니다. PostgreSQL에서 괄호는 선택적으로 &lt;code&gt;current_schema&lt;/code&gt; 와 함께 사용할 수 있지만 다른 것과 함께 사용할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="de227570830293421e51ef15719f4122d6d8e658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_child_table_relid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_child_table_relid&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="446718687fe4400ab9afd56658621f11fd0ed863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_date&lt;/code&gt; &amp;rarr; &lt;code&gt;date&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_date&lt;/code&gt; &lt;code&gt;date&lt;/code&gt; &amp;rarr; 날짜</target>
        </trans-unit>
        <trans-unit id="99b046c904f8513c45337d64f44b18c7856219d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_locker_pid&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_locker_pid&lt;/code&gt;&lt;code&gt;bigint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da002cc15739c3f47477a3fc3435b91e74968319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_logfiles&lt;/code&gt; is recreated when a new log file is created as an effect of rotation, and when &lt;code&gt;log_destination&lt;/code&gt; is reloaded. It is removed when neither stderr nor csvlog are included in &lt;code&gt;log_destination&lt;/code&gt;, and when the logging collector is disabled.</source>
          <target state="translated">&lt;code&gt;current_logfiles&lt;/code&gt; 는 회전의 영향으로 새 로그 파일을 만들 때와 &lt;code&gt;log_destination&lt;/code&gt; 을 다시로드 할 때 다시 만들어집니다. stderr 또는 csvlog가 &lt;code&gt;log_destination&lt;/code&gt; 에 포함되어 있지 않고 로깅 콜렉터가 사용 불가능한 경우 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="aa311c4eb2ded4f8eefba0a1f36e64ad4ced8395" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_schema&lt;/code&gt; () &amp;rarr; &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_schema&lt;/code&gt; () &amp;rarr; &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef29c180f9796a3b0a9f2730de5755b773dcefea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_schema&lt;/code&gt; returns the name of the schema that is first in the search path (or a null value if the search path is empty). This is the schema that will be used for any tables or other named objects that are created without specifying a target schema. &lt;code&gt;current_schemas(boolean)&lt;/code&gt; returns an array of the names of all schemas presently in the search path. The Boolean option determines whether or not implicitly included system schemas such as &lt;code&gt;pg_catalog&lt;/code&gt; are included in the returned search path.</source>
          <target state="translated">&lt;code&gt;current_schema&lt;/code&gt; 는 검색 경로에서 첫 번째 인 스키마 이름을 반환합니다 (또는 검색 경로가 비어 있으면 null 값). 대상 스키마를 지정하지 않고 생성 된 테이블 또는 기타 명명 된 개체에 사용되는 스키마입니다. &lt;code&gt;current_schemas(boolean)&lt;/code&gt; 은 현재 검색 경로에있는 모든 스키마 이름의 배열을 반환합니다. 부울 옵션은 &lt;code&gt;pg_catalog&lt;/code&gt; 와 같이 내재적으로 포함 된 시스템 스키마 가 리턴 된 검색 경로에 포함되는지 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="8aa41ccc57b1a389944a941a9c93451cfc71a65c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_setting('datestyle')&lt;/code&gt; &amp;rarr; &lt;code&gt;ISO, MDY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_setting('datestyle')&lt;/code&gt; &amp;rarr; &lt;code&gt;ISO, MDY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8f4cba99e11607a230ead4dbdead10dabdd11a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_setting&lt;/code&gt; ( &lt;em&gt;&lt;code&gt;setting_name&lt;/code&gt;&lt;/em&gt;&lt;code&gt;text&lt;/code&gt; [, &lt;em&gt;&lt;code&gt;missing_ok&lt;/code&gt;&lt;/em&gt;&lt;code&gt;boolean&lt;/code&gt; ] ) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_setting&lt;/code&gt; ( &lt;em&gt; &lt;code&gt;setting_name&lt;/code&gt; &lt;/em&gt; &lt;code&gt;text&lt;/code&gt; [, &lt;em&gt; &lt;code&gt;missing_ok&lt;/code&gt; &lt;/em&gt; &lt;code&gt;boolean&lt;/code&gt; ]) &amp;rarr; &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="260ccfbe965440cdc54a4f10a399e4fa3b343754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_time(2)&lt;/code&gt; &amp;rarr; &lt;code&gt;14:39:53.66-05&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_time(2)&lt;/code&gt; &amp;rarr; &lt;code&gt;14:39:53.66-05&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8445b94ef159fb7f8d8b1ebe1869f9d12fe287c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_time&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;time with time zone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_time&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;time with time zone&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a81f0a64d8edb69108acb92e5d90122092f54ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_timestamp(0)&lt;/code&gt; &amp;rarr; &lt;code&gt;2019-12-23 14:39:53-05&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_timestamp(0)&lt;/code&gt; &amp;rarr; &lt;code&gt;2019-12-23 14:39:53-05&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bd4f1b8bfa336543c97a4254b0aab9a073fe9d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_timestamp&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;timestamp with time zone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_timestamp&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; ) &amp;rarr; &lt;code&gt;timestamp with time zone&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15e1eba6399cc89f632a8df73867f9d3c2a02910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_user&lt;/code&gt; &amp;rarr; &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;current_user&lt;/code&gt; &amp;rarr; &lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a85203d998c84542ce9a5b664e14429fc310c264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cursor_tuple_fraction&lt;/code&gt; (&lt;code&gt;floating point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;cursor_tuple_fraction&lt;/code&gt; ( &lt;code&gt;floating point&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="98c97d6078a5032e708b14303ab024e65d4da73d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cycle&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cycle&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f5258b6d62cd693cecb2c52a40931486ea4cc62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d&lt;/code&gt; (Drop)</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; (드롭)</target>
        </trans-unit>
        <trans-unit id="87976f5933853c0c0f27f29d8bb1b3f5d33b9135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d&lt;/code&gt; = &lt;code&gt;double&lt;/code&gt; alignment (8 bytes on many machines, but by no means all).</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; = &lt;code&gt;double&lt;/code&gt; 정렬 (많은 컴퓨터에서 8 바이트이지만 결코 아님).</target>
        </trans-unit>
        <trans-unit id="3c10a1df9d3c7f874f5757c86d4cdf69cb484d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d&lt;/code&gt;&lt;code&gt;directory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt;&lt;code&gt;directory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12595affa3a6b4fdc0233ee9f8a962e0805060cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;&lt;code&gt;bytea&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt;&lt;code&gt;bytea&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4d2615d940b126c9690acb77eafc244e6722787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data_checksums&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;data_checksums&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="98cd310c85b77dfb2432f39d8d8ab7280bde527e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data_directory&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;data_directory&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="05114adf0459cd2ce9ad6bbfab12da623fe2ec0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data_directory_mode&lt;/code&gt; (&lt;code&gt;integer&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;data_directory_mode&lt;/code&gt; ( &lt;code&gt;integer&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e4ef45c62d49d2ef7e744bd6b4b213f612160894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data_sync_retry&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;data_sync_retry&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="01f2474e8c6741abbc9970109ccc15e43efe8ade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data_type&lt;/code&gt;&lt;code&gt;regtype&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-type&quot;&gt;&lt;code&gt;pg_type&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;data_type&lt;/code&gt; &lt;code&gt;regtype&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-type&quot;&gt; &lt;code&gt;pg_type&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="5af50a380cf32918fc7c988fd80f6af3a32b0c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;database&lt;/code&gt;&lt;code&gt;name&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-database&quot;&gt;&lt;code&gt;pg_database&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;datname&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-database&quot;&gt; &lt;code&gt;pg_database&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;datname&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="66c8e0c60ebf60cd1ad060fef3db9ea0ca9e0c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;database&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-database&quot;&gt;&lt;code&gt;pg_database&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-database&quot;&gt; &lt;code&gt;pg_database&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="a76e411892e6d09361fbfad9ea5a9c951a6fd551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;database&lt;/code&gt;&lt;code&gt;text[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt;&lt;code&gt;text[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb4c5c9c212df144993793e1d172ea90cfb26289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datacl&lt;/code&gt;&lt;code&gt;aclitem[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datacl&lt;/code&gt;&lt;code&gt;aclitem[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15681e5b22527c75c8136dbe4271510fc891fd07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datallowconn&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datallowconn&lt;/code&gt;&lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="470e4aa641e3786916b7f97557b1ff54fb1b3239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;3361&quot;&gt;!=&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;3361&quot;&gt;!=&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="209942bbc751d778ac21a04393dca3819223d6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;60&quot;&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;60&quot;&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1da025a6664ed2bc9fa1b56206657dac5208e2a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;6061&quot;&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;6061&quot;&gt;&amp;lt;=&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3d02d44a39119339ff570d81cdb9ea92838cb39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;6062&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;6062&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9ea983454f57b1b44e15044a49396a73bed5060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;61&quot;&gt;=&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;61&quot;&gt;=&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f158133b094a1ff92b5e3f214d68124dd50875bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;62&quot;&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;62&quot;&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f1922dbad61b81bc33333336a419baa9529efa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;6261&quot;&gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;6261&quot;&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96f94481a5d0f47fe1e7af36c5d5f1064a32ef90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;between&quot;&gt;BETWEEN&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;between&quot;&gt;BETWEEN&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="988a0843db0f98011c4fea0e5a3faf547dc1e7f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;between32symmetric&quot;&gt;BETWEEN SYMMETRIC&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;between32symmetric&quot;&gt;BETWEEN SYMMETRIC&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f5031d587a1c2604a547725baef90a56122d71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;is32distinct32from&quot;&gt;IS DISTINCT FROM&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;is32distinct32from&quot;&gt;IS DISTINCT FROM&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de7b04b273e3618ab811e81e781ee2e954befe46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;is32not32distinct32from&quot;&gt;IS NOT DISTINCT FROM&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;is32not32distinct32from&quot;&gt;IS NOT DISTINCT FROM&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56cf0f6636c51e0c567b300a65ca97cc5f79eefd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;is32not32null&quot;&gt;IS NOT NULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;is32not32null&quot;&gt;IS NOT NULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fdc7c280b4c75cc6f6b17f5fcd5d54f2df861f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;is32null&quot;&gt;IS NULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;is32null&quot;&gt;IS NULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ac57f53ef048b64b644dcd139d2aae2e2c241ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;isnull&quot;&gt;ISNULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;isnull&quot;&gt;ISNULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0612e4629b3175785ad0cb79b6ae750121cd90e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;not32between&quot;&gt;NOT BETWEEN&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;not32between&quot;&gt;NOT BETWEEN&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f597833c4522b2c4e7b267f35da585b2da5b9a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;not32between32symmetric&quot;&gt;NOT BETWEEN SYMMETRIC&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt;&lt;code&gt;AND&lt;/code&gt;&lt;code&gt;datatype&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;not32between32symmetric&quot;&gt;NOT BETWEEN SYMMETRIC&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; &lt;code&gt;AND&lt;/code&gt; &lt;code&gt;datatype&lt;/code&gt; 사이가 아님 &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="667d070bbda52d39c9228aa9bbb0bac83fe9ce07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt;&lt;code id=&quot;notnull&quot;&gt;NOTNULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;code id=&quot;notnull&quot;&gt;NOTNULL&lt;/code&gt; &amp;rarr; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c29b16387981b0a8141ada45c2e735992b0c809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datcollate&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datcollate&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e490fccdc0f72456aec6ffc6973566d8c2cf6ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datconnlimit&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datconnlimit&lt;/code&gt;&lt;code&gt;int4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec262a9e90d25827bf7b2d55491fb3affda069e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datctype&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;datctype&lt;/code&gt;&lt;code&gt;name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="682eec0ef029f7e41ee56d7e5afafd4478ef2526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datdba&lt;/code&gt;&lt;code&gt;oid&lt;/code&gt; (references &lt;a href=&quot;catalog-pg-authid&quot;&gt;&lt;code&gt;pg_authid&lt;/code&gt;&lt;/a&gt;.&lt;code&gt;oid&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;datdba&lt;/code&gt; &lt;code&gt;oid&lt;/code&gt; ( &lt;a href=&quot;catalog-pg-authid&quot;&gt; &lt;code&gt;pg_authid&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;oid&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="196040857cbb516e920fab33e4db45921e153391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; , &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;timestamp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e30e63b70dc945d86dd4567a60c78e49f350495c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; , &lt;code&gt;timestamp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abbd57c04085610a575f81c49b04d919902ca7e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;&lt;code id=&quot;43&quot;&gt;+&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;date&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; &lt;code id=&quot;43&quot;&gt;+&lt;/code&gt; &lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d715b5c8d18ee8f634ef210cd66e65a19174ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;interval&lt;/code&gt; &amp;rarr; &lt;code&gt;timestamp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; &lt;code&gt;interval&lt;/code&gt; &amp;rarr; &lt;code&gt;timestamp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d53238ed25b1c836a4bd378a0ac558311f15024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;time&lt;/code&gt; &amp;rarr; &lt;code&gt;timestamp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; &lt;code&gt;time&lt;/code&gt; &amp;rarr; &lt;code&gt;timestamp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="745e92de71c67dd61f0d108e51c20285ae30fdc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;date&lt;/code&gt; &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;date&lt;/code&gt; &amp;rarr; &lt;code&gt;integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02a2d5708dcdb711b42a677bfd313452ee8dae8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;date&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;integer&lt;/code&gt; &amp;rarr; &lt;code&gt;date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af92cbfd022f703ce59994d5ccf59f896ad6de5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;interval&lt;/code&gt; &amp;rarr; &lt;code&gt;timestamp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;interval&lt;/code&gt; &amp;rarr; &lt;code&gt;timestamp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa0af639fea875e9b9ba3ee6d0c7de6d71c6f316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_part('month', interval '2 years 3 months')&lt;/code&gt; &amp;rarr; &lt;code&gt;3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date_part('month', interval '2 years 3 months')&lt;/code&gt; &amp;rarr; &lt;code&gt;3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f531bb32a64809d47fb0b422989fcccd1d51412c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_part&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;interval&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date_part&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;interval&lt;/code&gt; ) &amp;rarr; &lt;code&gt;double precision&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3db9965a80dd732db4b1f22db9ac6d559b355a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_trunc('day', timestamptz '2001-02-16 20:38:40+00', 'Australia/Sydney')&lt;/code&gt; &amp;rarr; &lt;code&gt;2001-02-16 13:00:00+00&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date_trunc('day', timestamptz '2001-02-16 20:38:40+00', 'Australia/Sydney')&lt;/code&gt; &amp;rarr; &lt;code&gt;2001-02-16 13:00:00+00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18a7bd7d68cd9acb710da18433e682ab9675932e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_trunc('hour', interval '2 days 3 hours 40 minutes')&lt;/code&gt; &amp;rarr; &lt;code&gt;2 days 03:00:00&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date_trunc('hour', interval '2 days 3 hours 40 minutes')&lt;/code&gt; &amp;rarr; &lt;code&gt;2 days 03:00:00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ae6b86f4c37dbb96ec4cc3921dc9aada80e9924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_trunc&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;interval&lt;/code&gt; ) &amp;rarr; &lt;code&gt;interval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date_trunc&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;interval&lt;/code&gt; ) &amp;rarr; &lt;code&gt;interval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b18e0d2c7bab04171e89fc6df102aff4b4f5aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date_trunc&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;timestamp with time zone&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;timestamp with time zone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date_trunc&lt;/code&gt; ( &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;timestamp with time zone&lt;/code&gt; , &lt;code&gt;text&lt;/code&gt; ) &amp;rarr; &lt;code&gt;timestamp with time zone&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7dbc183f18251088eef50467a705fc1d36c3ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datestyle&lt;/code&gt; Setting</source>
          <target state="translated">&lt;code&gt;datestyle&lt;/code&gt; 설정</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
