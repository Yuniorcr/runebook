<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="5dcfd253111a81b33599a14f13a913487a6b41a0" translate="yes" xml:space="preserve">
          <source>Whether this interval is before the given interval and does not intersect with it.</source>
          <target state="translated">이 간격이 주어진 간격 이전이고 교차하지 않는지 여부</target>
        </trans-unit>
        <trans-unit id="e4e02f2380c2d7ee22f3e1d560e4a94074cf7d0b" translate="yes" xml:space="preserve">
          <source>Whether this interval is before the given time point.</source>
          <target state="translated">이 간격이 지정된 시점 이전인지 여부</target>
        </trans-unit>
        <trans-unit id="ff0d513f725657c9701839abfc98c3dd010c6909" translate="yes" xml:space="preserve">
          <source>Whether this time zone has Daylight Savings Time at any point in time. Note that for some time zone types it may not have DST for current dates but will still return true for &lt;code&gt;hasDST&lt;/code&gt; because the time zone did at some point have DST.</source>
          <target state="translated">이 시간대에 특정 시점의 일광 절약 시간이 있는지 여부 일부 시간대 유형의 경우 현재 날짜에 대한 DST가 없지만 시간대에 DST가 있기 때문에 &lt;code&gt;hasDST&lt;/code&gt; 에 대해서는 여전히 true를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="f678c2cc53224442a63d8eb28e8e0eb235c4cb30" translate="yes" xml:space="preserve">
          <source>Whether to sort the elements copied into &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">에 복사 한 요소를 정렬하려면 여부 &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11b3a2eb47ce7aed7eefa6b35dca0ba9b2577af6" translate="yes" xml:space="preserve">
          <source>Which vendor produced this compiler.</source>
          <target state="translated">이 컴파일러를 생산 한 공급 업체</target>
        </trans-unit>
        <trans-unit id="89d2da88935f744eb5dc43351e0a9f1635d4c8e4" translate="yes" xml:space="preserve">
          <source>While Statement</source>
          <target state="translated">While 문</target>
        </trans-unit>
        <trans-unit id="7659a44594ab81434d082561cb3451e34e95259a" translate="yes" xml:space="preserve">
          <source>While Windows environment variable names are case insensitive, D's built-in associative arrays are not. This function will store all variable names in uppercase (e.g. &lt;code&gt;PATH&lt;/code&gt;).</source>
          <target state="translated">Windows 환경 변수 이름은 대소 문자를 구분하지 않지만 D의 기본 제공 연관 배열은 대소 문자를 구분하지 않습니다. 이 함수는 모든 변수 이름을 대문자로 저장합니다 (예 : &lt;code&gt;PATH&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e24dc8d5e3b7b9e5ec92f45cfd6c7a044e34e2f8" translate="yes" xml:space="preserve">
          <source>While copy construction takes care of initializing an object from another object of the same type, assignment is defined as copying the contents of a source object over those of a destination object, calling the destination object's destructor if it has one in the process:</source>
          <target state="translated">복사 구성은 동일한 유형의 다른 객체에서 객체를 초기화하는 것을 처리하지만 할당은 대상 객체의 소멸자를 프로세스에있는 경우 대상 객체의 소멸자를 호출하여 대상 객체의 내용 위에 소스 객체의 내용을 복사하는 것으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6ff7a87cbdd305f6521232a6c7f965514f712bfe" translate="yes" xml:space="preserve">
          <source>While getting and setting &lt;code&gt;sharedLog&lt;/code&gt; is thread-safe, it has to be considered that the returned reference is only a current snapshot and in the following code, you must make sure no other thread reassigns to it between reading and writing &lt;code&gt;sharedLog&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sharedLog&lt;/code&gt; 를 가져오고 설정 하는 것은 스레드로부터 안전하지만 반환 된 참조는 현재 스냅 &lt;code&gt;sharedLog&lt;/code&gt; 다음 코드에서는 sharedLog를 읽고 쓰는 것 사이에 다른 스레드가 다시 할당되지 않도록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f6e5bcb9190a1ada8fb4e6ac105cd38eb4513180" translate="yes" xml:space="preserve">
          <source>While it may seem that void arrays are just fancy syntax for &lt;code&gt;ubyte[]&lt;/code&gt;, there is a subtle distinction. The garbage collector generally will not scan &lt;code&gt;ubyte[]&lt;/code&gt; arrays for pointers, &lt;code&gt;ubyte[]&lt;/code&gt; being presumed to contain only pure byte data, not pointers. However, it</source>
          <target state="translated">void 배열은 &lt;code&gt;ubyte[]&lt;/code&gt; 멋진 구문 인 것처럼 보이지만 미묘한 차이가 있습니다. 가비지 수집기는 일반적으로 스캔되지 &lt;code&gt;ubyte[]&lt;/code&gt; 포인터 용 어레이 &lt;code&gt;ubyte[]&lt;/code&gt; 순수한 바이트 데이터가 아니라 포인터를 포함하는 것으로 추정된다. 그러나 그것은</target>
        </trans-unit>
        <trans-unit id="46639ab687f349e8b6021b4ed72b63fb5679e139" translate="yes" xml:space="preserve">
          <source>While some containers offer direct access to their elements e.g. via &lt;code&gt;opIndex&lt;/code&gt;, &lt;code&gt;c.front&lt;/code&gt; or &lt;code&gt;c.back&lt;/code&gt;, access and modification of a container's contents is generally done through its primary &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; type, which is aliased as &lt;code&gt;C.Range&lt;/code&gt;. For example, the primary range type of &lt;code&gt;Array!int&lt;/code&gt; is &lt;code&gt;Array!int.Range&lt;/code&gt;.</source>
          <target state="translated">일부 컨테이너는 &lt;code&gt;opIndex&lt;/code&gt; , &lt;code&gt;c.front&lt;/code&gt; 또는 &lt;code&gt;c.back&lt;/code&gt; 등을 통해 해당 요소에 직접 액세스 할 수 있지만 컨테이너의 내용에 대한 액세스 및 수정은 일반적 으로 &lt;code&gt;C.Range&lt;/code&gt; 로 별칭이 지정된 기본 &lt;a href=&quot;std_range&quot;&gt;범위&lt;/a&gt; 유형을 통해 수행됩니다 . 예를 들어 &lt;code&gt;Array!int&lt;/code&gt; 의 기본 범위 유형 은 &lt;code&gt;Array!int.Range&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4f4f0535fe84b7df413259e8e5f2078595bb140b" translate="yes" xml:space="preserve">
          <source>While the</source>
          <target state="translated">동안</target>
        </trans-unit>
        <trans-unit id="f208f6b0e96c87c1b483e05c18f118d000b490de" translate="yes" xml:space="preserve">
          <source>While the debug and version conditions superficially behave the same, they are intended for very different purposes. Debug statements are for adding debug code that is removed for the release version. Version statements are to aid in portability and multiple release versions.</source>
          <target state="translated">디버그 및 버전 조건은 표면적으로 동일하게 작동하지만 매우 다른 용도로 사용됩니다. 디버그 명령문은 릴리스 버전에서 제거 된 디버그 코드를 추가하기위한 것입니다. 버전 설명은 이식성과 다중 릴리스 버전을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4a2d2c6bac88a828336274aa6e63799cf47b9a2e" translate="yes" xml:space="preserve">
          <source>While the generic versions of these functions are computationally expensive relative to the cost of the operation itself, compiler implementations are free to recognize them and generate equivalent and faster code.</source>
          <target state="translated">이러한 함수의 일반 버전은 연산 자체 비용에 비해 계산 비용이 많이 드는 반면, 컴파일러 구현은이를 인식하여 동등하고 빠른 코드를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d2a7879cc14c93bf5b4fe24670e954f3f073eac" translate="yes" xml:space="preserve">
          <source>While the receive timeout setting is generally quite accurate on *nix systems even for smaller durations, there are two issues to be aware of on Windows: First, although undocumented, the effective timeout duration seems to be the one set on the socket plus half a second. &lt;code&gt;setOption()&lt;/code&gt; tries to compensate for that, but still, timeouts under 500ms are not possible on Windows. Second, be aware that the actual amount of time spent until a blocking call returns randomly varies on the order of 10ms.</source>
          <target state="translated">수신 시간 초과 설정은 일반적으로 * nix 시스템에서 더 작은 시간 동안 상당히 정확하지만 Windows에서는 두 가지 문제를 알아야합니다. 먼저 문서화되지는 않았지만 유효 시간 초과 기간은 소켓에 설정된 시간 + 0.5 둘째. &lt;code&gt;setOption()&lt;/code&gt; 를 보완하려고하지만 여전히 500ms 미만의 시간 초과는 불가능합니다. 둘째, 차단 호출이 반환 될 때까지 소요되는 실제 시간은 10ms 정도에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="ea3902c92ee74dcdfd72c59af08de3db3511067c" translate="yes" xml:space="preserve">
          <source>While this function takes the address of variables that may be on the stack, some overloads are marked as @trusted. &lt;code&gt;Task&lt;/code&gt; includes a destructor that waits for the task to complete before destroying the stack frame it is allocated on. Therefore, it is impossible for the stack frame to be destroyed before the task is complete and no longer referenced by a &lt;code&gt;TaskPool&lt;/code&gt;.</source>
          <target state="translated">이 함수는 스택에있을 수있는 변수의 주소를 사용하지만 일부 과부하는 @trusted로 표시됩니다. &lt;code&gt;Task&lt;/code&gt; 에는 할당 된 스택 프레임을 파괴하기 전에 작업이 완료되기를 기다리는 소멸자가 포함됩니다. 따라서 작업이 완료되고 더 이상 &lt;code&gt;TaskPool&lt;/code&gt; 에서 참조하지 않으면 스택 프레임을 파괴 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f0b22e024cefbd662530ad4f62e3c1e20aab7ccd" translate="yes" xml:space="preserve">
          <source>While this might look unreasonable, in practice whenever this is done it either is a bug or at least looks like a bug.</source>
          <target state="translated">이것이 불합리하게 보일 수 있지만 실제로는 이것이 완료 될 때마다 버그이거나 적어도 버그처럼 보입니다.</target>
        </trans-unit>
        <trans-unit id="bac09e53981b38ee90df9f891d55bff60d1a7bab" translate="yes" xml:space="preserve">
          <source>While, testing can be done without the &lt;em&gt;-betterC&lt;/em&gt; flag, it is sometimes desirable to run the testsuite in &lt;code&gt;-betterC&lt;/code&gt; too. &lt;code&gt;unittest&lt;/code&gt; blocks can be listed with the &lt;a href=&quot;traits#getUnitTests&quot;&gt;&lt;code&gt;getUnitTests&lt;/code&gt;&lt;/a&gt; trait:</source>
          <target state="translated">테스트가없이 할 수 있지만 &lt;em&gt;-betterC의&lt;/em&gt; 플래그,에있는 TestSuite 실행 때로는 바람직하다 &lt;code&gt;-betterC&lt;/code&gt; 을 너무. &lt;code&gt;unittest&lt;/code&gt; 블록은 &lt;a href=&quot;traits#getUnitTests&quot;&gt; &lt;code&gt;getUnitTests&lt;/code&gt; &lt;/a&gt; 특성 과 함께 나열 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff0f36602d56ff20e347eedfcee547e7074e86d6" translate="yes" xml:space="preserve">
          <source>White Space</source>
          <target state="translated">여백</target>
        </trans-unit>
        <trans-unit id="5da2d68669a03b947051233558b6ce56e6780f0a" translate="yes" xml:space="preserve">
          <source>White_Space</source>
          <target state="translated">White_Space</target>
        </trans-unit>
        <trans-unit id="04095795c4578ea2e54241cfccfa1659c3513815" translate="yes" xml:space="preserve">
          <source>Whitespace and newlines are ignored, so the hex data can be easily formatted. The number of hex characters must be a multiple of 2.</source>
          <target state="translated">공백과 줄 바꿈이 무시되므로 16 진 데이터를 쉽게 형식화 할 수 있습니다. 16 진 문자 수는 2의 배수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="translated">Width</target>
        </trans-unit>
        <trans-unit id="5dcb127348f728b3146a3e531a4bd1ca9bab0b4d" translate="yes" xml:space="preserve">
          <source>Width of the field to center &lt;code&gt;s&lt;/code&gt; in</source>
          <target state="translated">센터 필드 폭 &lt;code&gt;s&lt;/code&gt; 에서</target>
        </trans-unit>
        <trans-unit id="664add438097fbd4307f814de8e62a10f8905588" translate="yes" xml:space="preserve">
          <source>Wikipedia</source>
          <target state="translated">Wikipedia</target>
        </trans-unit>
        <trans-unit id="d5387a54e32017aea8f8d0a5887c6a2e00c032bc" translate="yes" xml:space="preserve">
          <source>Wikipedia Comma-separated values</source>
          <target state="translated">위키 백과 쉼표로 구분 된 값</target>
        </trans-unit>
        <trans-unit id="337e9f5e1d26296ff63a3b47029ab44de601ac95" translate="yes" xml:space="preserve">
          <source>Wikipedia article about SHA</source>
          <target state="translated">SHA에 관한 Wikipedia 기사</target>
        </trans-unit>
        <trans-unit id="f454523199747c7975fb27c2c145f3ddf6613344" translate="yes" xml:space="preserve">
          <source>Wikipedia entry on TZ Database</source>
          <target state="translated">TZ 데이터베이스의 Wikipedia 항목</target>
        </trans-unit>
        <trans-unit id="7c37b2692cf2556bdd59cfe50d71e16e0d843e62" translate="yes" xml:space="preserve">
          <source>Wikipedia on CRC</source>
          <target state="translated">CRC 위키 백과</target>
        </trans-unit>
        <trans-unit id="96ee6f82283ef66c8e354e4839873eaa37b3674a" translate="yes" xml:space="preserve">
          <source>Wikipedia on MD5</source>
          <target state="translated">MD5의 Wikipedia</target>
        </trans-unit>
        <trans-unit id="6edc90cc8ad6e1864bac759b4c3827efbba013d6" translate="yes" xml:space="preserve">
          <source>Wikipedia on RIPEMD-160</source>
          <target state="translated">RIPEMD-160 위키 백과</target>
        </trans-unit>
        <trans-unit id="9c668ea4b7293340a845504eaceece6a5a68b03a" translate="yes" xml:space="preserve">
          <source>Wikipedia: glob (programming)</source>
          <target state="translated">위키 백과 : glob (프로그래밍)</target>
        </trans-unit>
        <trans-unit id="20090ab63c8caad94d271d9d33cb7ecd2c964a55" translate="yes" xml:space="preserve">
          <source>Will take ownership of the buffer located inside &lt;code&gt;readResult&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;readResult&lt;/code&gt; 내에있는 버퍼의 소유권을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="0463d1ccc9613d5098c42774fc7e43131ce95d1e" translate="yes" xml:space="preserve">
          <source>Win32 Specific Interface</source>
          <target state="translated">Win32 특정 인터페이스</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="1795e7900ce9ccc312122f0f53ad0579cfef9d87" translate="yes" xml:space="preserve">
          <source>Windows API conventions are:</source>
          <target state="translated">Windows API 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7d109a43d386f5d7e791378257372b485d57017e" translate="yes" xml:space="preserve">
          <source>Windows only: if running in a dynamically loaded DLL, this delegate will be called if the DLL is supposed to be unloaded, but the thread is still running. The thread must be terminated via &lt;code&gt;joinLowLevelThread&lt;/code&gt; by the callback.</source>
          <target state="translated">Windows 전용 : 동적으로로드 된 DLL에서 실행중인 경우 DLL이 언로드되어야하지만 스레드가 여전히 실행중인 경우이 대리자가 호출됩니다. 스레드는 콜백에 의해 &lt;code&gt;joinLowLevelThread&lt;/code&gt; 를 통해 종료되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="34796431c4136a13fc1a272537e43a27d56433b1" translate="yes" xml:space="preserve">
          <source>Windows specific</source>
          <target state="translated">특정 윈도우</target>
        </trans-unit>
        <trans-unit id="d6cb85155bdca89444f87ede6d91a77dd2285d9d" translate="yes" xml:space="preserve">
          <source>Windows specific character set support.</source>
          <target state="translated">Windows 특정 문자 세트 지원</target>
        </trans-unit>
        <trans-unit id="a2a0337ee498510df7507386009893267714bb73" translate="yes" xml:space="preserve">
          <source>Windows uses a different set of time zone names than the IANA time zone database does, and how they correspond to one another changes over time (particularly when Microsoft updates Windows). &lt;a href=&quot;http://unicode.org/cldr/data/common/supplemental/windowsZones.xml&quot;&gt;windowsZones.xml&lt;/a&gt; provides the current conversions (which may or may not match up with what's on a particular Windows box depending on how up-to-date it is), and parseTZConversions reads in those conversions from windowsZones.xml so that a D program can use those conversions.</source>
          <target state="translated">Windows는 IANA 표준 시간대 데이터베이스와 다른 시간대 이름 집합을 사용하며 시간에 따라 서로 다른 방식으로 일치하는 방식 (특히 Microsoft가 Windows를 업데이트 할 때)을 사용합니다. &lt;a href=&quot;http://unicode.org/cldr/data/common/supplemental/windowsZones.xml&quot;&gt;windowsZones.xml&lt;/a&gt; 은 현재 변환을 제공하며 (최신 상태에 따라 특정 Windows 상자의 내용과 일치하거나 일치하지 않을 수 있음) parseTZConversions는 windowsZones.xml의 변환에서 D 프로그램이 읽을 수 있도록 읽습니다. 이러한 전환을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="94e945f65f1cc64663b7c91a745aabfe9ddd6074" translate="yes" xml:space="preserve">
          <source>Windows x86 note: A DMD compatible libcurl static library can be downloaded from the dlang.org &lt;a href=&quot;http://dlang.org/download.html&quot;&gt;download page&lt;/a&gt;.</source>
          <target state="translated">Windows x86 참고 : DMD 호환 libcurl 정적 라이브러리는 dlang.org &lt;a href=&quot;http://dlang.org/download.html&quot;&gt;다운로드 페이지&lt;/a&gt; 에서 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4db909be5b20ef140227bb8c3e3b7e15ef517df" translate="yes" xml:space="preserve">
          <source>Windows x86 note: A DMD compatible libcurl static library can be downloaded from the dlang.org &lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;download archive page&lt;/a&gt;.  Compared to using libcurl directly this module allows simpler client code for common uses, requires no unsafe operations, and integrates better with the rest of the language. Futhermore it provides &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; access to protocols supported by libcurl both synchronously and asynchronously.  A high level and a low level API are available. The high level API is built entirely on top of the low level one.  The high level API is for commonly used functionality such as HTTP/FTP get. The &lt;a href=&quot;#byLineAsync&quot;&gt;&lt;code&gt;byLineAsync&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#byChunkAsync&quot;&gt;&lt;code&gt;byChunkAsync&lt;/code&gt;&lt;/a&gt; provides asynchronous &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; that performs the request in another thread while handling a line/chunk in the current thread.  The low level API allows for streaming and other advanced features.</source>
          <target state="translated">Windows x86 참고 : DMD 호환 libcurl 정적 라이브러리는 dlang.org &lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;다운로드 아카이브 페이지&lt;/a&gt; 에서 다운로드 할 수 있습니다 . libcurl을 직접 사용하는 것과 비교하여이 모듈은 일반적인 용도로 간단한 클라이언트 코드를 허용하고 안전하지 않은 작업이 필요하지 않으며 나머지 언어와 더 잘 통합됩니다. 또한 libcurl이 지원하는 프로토콜에 대한 동기 및 비동기의 &lt;a href=&quot;std_range&quot;&gt;범위&lt;/a&gt; 액세스를 제공합니다 . 높은 수준과 낮은 수준의 API를 사용할 수 있습니다. 높은 수준의 API는 완전히 낮은 수준의 API 위에 구축됩니다. 고급 API는 HTTP / FTP get과 같이 일반적으로 사용되는 기능을위한 것입니다. &lt;a href=&quot;#byLineAsync&quot;&gt; &lt;code&gt;byLineAsync&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#byChunkAsync&quot;&gt; &lt;code&gt;byChunkAsync&lt;/code&gt; 는&lt;/a&gt; 비동기 제공 &lt;a href=&quot;std_range&quot;&gt;범위를&lt;/a&gt;현재 스레드에서 라인 / 청크를 처리하는 동안 다른 스레드에서 요청을 수행합니다. 저수준 API는 스트리밍 및 기타 고급 기능을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="bec2db5e60635c89ee2429b529d4047d4fa2e62c" translate="yes" xml:space="preserve">
          <source>Windows x86 note: A DMD compatible libcurl static library can be downloaded from the dlang.org &lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;download archive page&lt;/a&gt;.  This module is not available for iOS, tvOS or watchOS.  Compared to using libcurl directly this module allows simpler client code for common uses, requires no unsafe operations, and integrates better with the rest of the language. Futhermore it provides &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; access to protocols supported by libcurl both synchronously and asynchronously.  A high level and a low level API are available. The high level API is built entirely on top of the low level one.  The high level API is for commonly used functionality such as HTTP/FTP get. The &lt;a href=&quot;#byLineAsync&quot;&gt;&lt;code&gt;byLineAsync&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#byChunkAsync&quot;&gt;&lt;code&gt;byChunkAsync&lt;/code&gt;&lt;/a&gt; provides asynchronous &lt;a href=&quot;std_range&quot;&gt;range&lt;/a&gt; that performs the request in another thread while handling a line/chunk in the current thread.  The low level API allows for streaming and other advanced features.</source>
          <target state="translated">Windows x86 참고 : DMD 호환 libcurl 정적 라이브러리는 dlang.org &lt;a href=&quot;http://downloads.dlang.org/other/index.html&quot;&gt;다운로드 아카이브 페이지&lt;/a&gt; 에서 다운로드 할 수 있습니다 . 이 모듈은 iOS, tvOS 또는 watchOS에서 사용할 수 없습니다. libcurl을 직접 사용하는 것과 비교할 때이 모듈은 일반적인 용도로 더 간단한 클라이언트 코드를 허용하고 안전하지 않은 작업이 필요하지 않으며 나머지 언어와 더 잘 통합됩니다. 또한 libcurl이 지원하는 프로토콜에 대한 &lt;a href=&quot;std_range&quot;&gt;범위&lt;/a&gt; 액세스를 동기식 및 비동기식으로 제공합니다. 높은 수준과 낮은 수준의 API를 사용할 수 있습니다. 고수준 API는 전적으로 저수준 API 위에 구축됩니다. 상위 수준 API는 HTTP / FTP 가져 오기와 같이 일반적으로 사용되는 기능을위한 것입니다. &lt;a href=&quot;#byLineAsync&quot;&gt; &lt;code&gt;byLineAsync&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#byChunkAsync&quot;&gt; &lt;code&gt;byChunkAsync&lt;/code&gt; 는&lt;/a&gt; 비동기 제공 &lt;a href=&quot;std_range&quot;&gt;범위를&lt;/a&gt;현재 스레드에서 라인 / 청크를 처리하는 동안 다른 스레드에서 요청을 수행합니다. 저수준 API는 스트리밍 및 기타 고급 기능을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="60be3f1caf4fea17050a14a88440a0b64f55ed06" translate="yes" xml:space="preserve">
          <source>With Statement</source>
          <target state="translated">성명서</target>
        </trans-unit>
        <trans-unit id="4e955385152531f3736a983c851768114e7023a5" translate="yes" xml:space="preserve">
          <source>With a binary predicate, a range of ranges is returned in which all elements in a given subrange are equivalent under the given predicate. With a unary predicate, a range of tuples is returned, with the tuple consisting of the result of the unary predicate for each subrange, and the subrange itself.</source>
          <target state="translated">2 진 술어를 사용하면, 주어진 부속 범위의 모든 요소가 주어진 술어에서 동등한 범위의 범위가 리턴됩니다. 단항 술어를 사용하면 튜플 범위가 리턴되며 튜플은 각 하위 범위에 대한 단항 술어 결과와 하위 범위 자체로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b2936eb0281259dec571bd7da523aa2c0285dc45" translate="yes" xml:space="preserve">
          <source>With arguments of mixed signedness, the return type is the one that can store the lowest values.</source>
          <target state="translated">혼합 부호 인수로 리턴 유형은 가장 낮은 값을 저장할 수있는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="3176d986db58f62d282b850e7d10ffe59cbb8f5f" translate="yes" xml:space="preserve">
          <source>With either function, the predicate must be a strict ordering just like with &lt;code&gt;isSorted&lt;/code&gt;. For example, using &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; is incorrect and will cause failed assertions.</source>
          <target state="translated">두 함수 중 하나를 사용하면 술어는 &lt;code&gt;isSorted&lt;/code&gt; 와 마찬가지로 엄격한 순서 여야합니다 . 예를 들어, &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; 대신 &quot;a &amp;lt;= b&quot;를 사용 &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; 것은 올바르지 않으며 어설 션이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="6ac97370c950e205f86272b5e6a043cdb9f5012f" translate="yes" xml:space="preserve">
          <source>With either function, the predicate must be a strict ordering. For example, using &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; is incorrect and will cause failed assertions.</source>
          <target state="translated">두 기능 중 하나를 사용하면 술어는 엄격한 순서이어야합니다. 예를 들어, &lt;code&gt;&quot;a &amp;lt;= b&quot;&lt;/code&gt; 대신 &quot;a &amp;lt;= b&quot;를 사용 &lt;code&gt;&quot;a &amp;lt; b&quot;&lt;/code&gt; 것은 올바르지 않으며 어설 션이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="5f404fdd2edadc615c0355a47cce8ef6af402ed0" translate="yes" xml:space="preserve">
          <source>With statement scope</source>
          <target state="translated">명세서 범위</target>
        </trans-unit>
        <trans-unit id="379b8bea62c49b3ba24f35087b121928859e87af" translate="yes" xml:space="preserve">
          <source>With the above code you can invoke the program with &quot;--output=myfile.txt,yourfile.txt&quot;, or &quot;--output myfile.txt,yourfile.txt&quot;.</source>
          <target state="translated">위 코드를 사용하면 &quot;--output = myfile.txt, yourfile.txt&quot;또는 &quot;--output myfile.txt, yourfile.txt&quot;를 사용하여 프로그램을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54a01cc42bda8e929cf9280559ef4a1e7d2d6d0d" translate="yes" xml:space="preserve">
          <source>With the above code you can invoke the program with &quot;--tune=alpha=0.5,beta=0.6&quot;, or &quot;--tune alpha=0.5,beta=0.6&quot;.  In general, the keys and values can be of any parsable types.</source>
          <target state="translated">위 코드를 사용하면 &quot;--tune = alpha = 0.5, beta = 0.6&quot;또는 &quot;--tune alpha = 0.5, beta = 0.6&quot;으로 프로그램을 호출 할 수 있습니다. 일반적으로 키와 값은 구문 분석 가능한 유형일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e7ea4808c516dd2621097198b60332075e1b32a" translate="yes" xml:space="preserve">
          <source>With this definition, allocation requests for &lt;code&gt;n1&lt;/code&gt; bytes or less are directed to &lt;code&gt;A1&lt;/code&gt;; requests between &lt;code&gt;n1 + 1&lt;/code&gt; and &lt;code&gt;n2&lt;/code&gt; bytes (inclusive) are directed to &lt;code&gt;A2&lt;/code&gt;; requests between &lt;code&gt;n2 + 1&lt;/code&gt; and &lt;code&gt;n3&lt;/code&gt; bytes (inclusive) are directed to &lt;code&gt;A3&lt;/code&gt;; and requests for more than &lt;code&gt;n3&lt;/code&gt; bytes are directed to &lt;code&gt;A4&lt;/code&gt;. If some particular range should not be handled, &lt;code&gt;NullAllocator&lt;/code&gt; may be used appropriately.</source>
          <target state="translated">이 정의에서 &lt;code&gt;n1&lt;/code&gt; 바이트 이하의 할당 요청은 &lt;code&gt;A1&lt;/code&gt; 으로 보내집니다 . &lt;code&gt;n1 + 1&lt;/code&gt; 에서 &lt;code&gt;n2&lt;/code&gt; 바이트 사이의 요청 (포함)은 &lt;code&gt;A2&lt;/code&gt; 로 보내집니다 . &lt;code&gt;n2 + 1&lt;/code&gt; 에서 &lt;code&gt;n3&lt;/code&gt; 바이트 사이의 요청 (포함)은 &lt;code&gt;A3&lt;/code&gt; 으로 보내집니다 . &lt;code&gt;n3&lt;/code&gt; 바이트 이상에 대한 요청은 &lt;code&gt;A4&lt;/code&gt; 로 보내 집니다. 특정 범위를 처리하지 않으면 &lt;code&gt;NullAllocator&lt;/code&gt; 를 적절하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eabd87c7367119a510e10aa1fc357af4be84da36" translate="yes" xml:space="preserve">
          <source>With this template any single entity can be aliased:</source>
          <target state="translated">이 템플릿을 사용하면 단일 엔터티를 별칭으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9eeb0586b522665291cf81e818a29ca7386a2eb" translate="yes" xml:space="preserve">
          <source>WithStatement</source>
          <target state="translated">WithStatement</target>
        </trans-unit>
        <trans-unit id="81a1a1e16f9313636de11bd71de525c3a2fd9896" translate="yes" xml:space="preserve">
          <source>Within a module, static construction occurs in the lexical order in which they appear.</source>
          <target state="translated">모듈 내에서 정적 생성은 나타나는 어휘 순서로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="23f06a3534e9c200e5a28318b23f4aa9ddf98991" translate="yes" xml:space="preserve">
          <source>Within a module, the static construction occurs in the lexical order in which they appear.</source>
          <target state="translated">모듈 내에서 정적 구성은 어휘 순서대로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="1e17b4775e323753ed2cd29d65d6c43cb910dd8f" translate="yes" xml:space="preserve">
          <source>Within a non-static member function, &lt;code&gt;this&lt;/code&gt; resolves to a reference to the object for which the function was called. If the object is an instance of a struct, &lt;code&gt;this&lt;/code&gt; will be a pointer to that instance. If a member function is called with an explicit reference to &lt;code&gt;typeof(this)&lt;/code&gt;, a non-virtual call is made:</source>
          <target state="translated">비 정적 멤버 함수 내에서 &lt;code&gt;this&lt;/code&gt; 함수가 호출 된 객체에 대한 참조로 해석됩니다. 개체가 구조체의 인스턴스 인 경우, &lt;code&gt;this&lt;/code&gt; 해당 인스턴스에 대한 포인터 될 것입니다. &lt;code&gt;typeof(this)&lt;/code&gt; 대한 명시 적 참조로 멤버 함수를 호출 하면 비가 상 호출이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="3df71e1c8566f2156343b539c269380e5ded71d7" translate="yes" xml:space="preserve">
          <source>Within each dynasty, the optimisation techniques are largely identical (eg, use instruction pairing for group 4). Major instruction set improvements occur within each dynasty.</source>
          <target state="translated">각 왕조 내에서 최적화 기법은 거의 동일합니다 (예 : 그룹 4에 명령 쌍 사용). 각 왕조 내에서 주요 교육 세트 개선이 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="c5a725a9aa204ef26605cfb88e094f3761a32a02" translate="yes" xml:space="preserve">
          <source>Within the [ ] of a static or a dynamic array, the symbol &lt;code&gt;$&lt;/code&gt; represents the length of the array.</source>
          <target state="translated">정적 또는 동적 배열의 [] 내에서 &lt;code&gt;$&lt;/code&gt; 기호 는 배열의 길이를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b865d9b6a0282f9882fe6fded1959a061a026851" translate="yes" xml:space="preserve">
          <source>Within the arguments to array index and slicing operators, &lt;code&gt;$&lt;/code&gt; gets translated to &lt;code&gt;opDollar!i&lt;/code&gt;, where &lt;code&gt;i&lt;/code&gt; is the position of the expression &lt;code&gt;$&lt;/code&gt; appears in. For example:</source>
          <target state="translated">배열 인덱스 및 슬라이싱 연산자에 대한 인수 내에서 &lt;code&gt;$&lt;/code&gt; 는 &lt;code&gt;opDollar!i&lt;/code&gt; 변환됩니다 . 여기서 &lt;code&gt;i&lt;/code&gt; 는 식 &lt;code&gt;$&lt;/code&gt; 의 위치입니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="39569217a70cf6ca9c936b2a9a45c6702055afc8" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;-lowmem&lt;/code&gt;, we need to switch to the bump-pointer allocation scheme right from the start, before any module ctors are run, so we need this hook before druntime is initialized and &lt;code&gt;_Dmain&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;-lowmem&lt;/code&gt; 이 없으면 모듈 ctor가 실행되기 전에 시작부터 바로 범프 포인터 할당 체계로 전환해야하므로 druntime이 초기화되고 &lt;code&gt;_Dmain&lt;/code&gt; 이 호출 되기 전에이 후크가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="34f7315fd1aaacb94332f891276d7a1cb6067a26" translate="yes" xml:space="preserve">
          <source>Won't be generated by parser.</source>
          <target state="translated">파서에 의해 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31f52cd8749a7a903b8481046b2787c755e758da" translate="yes" xml:space="preserve">
          <source>Word size of this xorshift generator and the return type of &lt;code&gt;opCall&lt;/code&gt;.</source>
          <target state="translated">이 xorshift 생성기의 워드 크기의 반환 형식 &lt;code&gt;opCall&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84b30f1d163f6819d59e7e7466b961744996f249" translate="yes" xml:space="preserve">
          <source>Word-level alignment.</source>
          <target state="translated">단어 수준 정렬.</target>
        </trans-unit>
        <trans-unit id="992d31e258a782f6e52ea07fcd0ee0997b7da140" translate="yes" xml:space="preserve">
          <source>WorkerLocalStorage!T &lt;strong id=&quot;workerLocalStorage&quot;&gt;workerLocalStorage&lt;/strong&gt;(T)(lazy T initialVal = T.init);</source>
          <target state="translated">WorkerLocalStorage! T &lt;strong id=&quot;workerLocalStorage&quot;&gt;workerLocalStorage&lt;/strong&gt; (T) (게으른 T initialVal = T.init);</target>
        </trans-unit>
        <trans-unit id="37d97ca17647a6bee8e65a6f35cad028b58d8d12" translate="yes" xml:space="preserve">
          <source>Working with the Garbage Collector</source>
          <target state="translated">가비지 콜렉터 작업</target>
        </trans-unit>
        <trans-unit id="38bb5af2736644721a17f24a5ee3d9864cb5ac14" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;finish&lt;/code&gt; but does not reset the internal state, so it's possible to continue putting data into this CRC after a call to peek.</source>
          <target state="translated">&lt;code&gt;finish&lt;/code&gt; 처럼 작동 하지만 내부 상태를 재설정하지 않으므로 peek 호출 후 데이터를이 CRC에 계속 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="557f00a1de11ff690b55d85810dfb12357791c73" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;finish&lt;/code&gt; but does not reset the internal state, so it's possible to continue putting data into this WrapperDigest after a call to peek.</source>
          <target state="translated">&lt;code&gt;finish&lt;/code&gt; 처럼 작동 하지만 내부 상태를 재설정하지 않으므로 peek 호출 후 데이터를이 WrapperDigest에 계속 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6c55023c3f48d83141afa6b39cf1a1f8e16bbec" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isAbstractClass&lt;/code&gt;, except it's for final classes.</source>
          <target state="translated">최종 클래스를 제외하고 &lt;code&gt;isAbstractClass&lt;/code&gt; 와 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="257073bf2bff55c2797a68b782e9c7e37b49fb19" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for associative array types.</source>
          <target state="translated">연관 배열 유형을 제외하고 &lt;code&gt;isArithmetic&lt;/code&gt; 과 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="0a69285a27011260c5d6d719ae7fb72a26cffe4e" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for floating point types (including imaginary and complex types).</source>
          <target state="translated">부동 소수점 유형 (가상 및 복합 유형 포함)을 제외하고 &lt;code&gt;isArithmetic&lt;/code&gt; 과 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="8ceb0e8d704718d48d55c5c32b9522c9c499787c" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for integral types (including character types).</source>
          <target state="translated">정수 유형 (문자 유형 포함)을 제외하고 &lt;code&gt;isArithmetic&lt;/code&gt; 과 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="7abff98f46b77eb7b6b94e5ca6e034a29deef048" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for scalar types.</source>
          <target state="translated">스칼라 유형을 제외하고 &lt;code&gt;isArithmetic&lt;/code&gt; 과 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="79230c494d3167bb14479d0f0902108a0ad374d5" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for static array types.</source>
          <target state="translated">정적 배열 유형을 제외하고 &lt;code&gt;isArithmetic&lt;/code&gt; 과 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="a3a07b9159dee88ca3840794772f640bc3115b39" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;isArithmetic&lt;/code&gt;, except it's for unsigned types.</source>
          <target state="translated">부호없는 유형을 제외하고 &lt;code&gt;isArithmetic&lt;/code&gt; 과 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="f0a70fd23c7692a856ee0237be75ede52b20afd7" translate="yes" xml:space="preserve">
          <source>Wrap src in an anonymous class implementing Targets.</source>
          <target state="translated">대상을 구현하는 익명 클래스로 src를 래핑하십시오.</target>
        </trans-unit>
        <trans-unit id="1464bb1e874127ba2c5db433daec7f3ace8b2f82" translate="yes" xml:space="preserve">
          <source>Wrap text into a paragraph.</source>
          <target state="translated">텍스트를 단락으로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="3b0a975353fc715fec14e946a0c3766d6a6d51d7" translate="yes" xml:space="preserve">
          <source>Wrap the unwinder's data with our own compiler specific struct with our own data.</source>
          <target state="translated">언 와인 더의 데이터를 자체 데이터로 자체 컴파일러 특정 구조체로 래핑하십시오.</target>
        </trans-unit>
        <trans-unit id="3cc5194239acc099229522f2326aca77f79a86d7" translate="yes" xml:space="preserve">
          <source>Wrapper for bidirectional ranges with assignable elements.</source>
          <target state="translated">할당 가능한 요소가있는 양방향 범위의 래퍼.</target>
        </trans-unit>
        <trans-unit id="482dcac045bf310d55bbcc3f7aecdd043622aa3e" translate="yes" xml:space="preserve">
          <source>Wrapper for bidirectional ranges.</source>
          <target state="translated">양방향 범위를위한 래퍼.</target>
        </trans-unit>
        <trans-unit id="59326ac149de95b9deb08a0f11f430a8c14b72ce" translate="yes" xml:space="preserve">
          <source>Wrapper for deprecated declarations.</source>
          <target state="translated">더 이상 사용되지 않는 선언의 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="a03c3fb2c3cfd6a3695e20acdf7774c905dd55f3" translate="yes" xml:space="preserve">
          <source>Wrapper for finite random-access ranges with assignable elements.</source>
          <target state="translated">할당 가능한 요소가있는 유한 랜덤 액세스 범위의 래퍼.</target>
        </trans-unit>
        <trans-unit id="b56fb4e4af7b711682584f0bbf2e4cd660a098eb" translate="yes" xml:space="preserve">
          <source>Wrapper for finite random-access ranges.</source>
          <target state="translated">유한 랜덤 액세스 범위를위한 래퍼.</target>
        </trans-unit>
        <trans-unit id="211fed544be798538bc476360c3e2ec3fb89c8d4" translate="yes" xml:space="preserve">
          <source>Wrapper for forward ranges with assignable elements.</source>
          <target state="translated">할당 가능한 요소가있는 순방향 범위의 래퍼.</target>
        </trans-unit>
        <trans-unit id="92850a0186cbcef479f7cc5539bf23d874562bfb" translate="yes" xml:space="preserve">
          <source>Wrapper for forward ranges.</source>
          <target state="translated">순방향 범위를위한 래퍼.</target>
        </trans-unit>
        <trans-unit id="1837fdc88befd95dea3165c6d54f1e3c41d0394f" translate="yes" xml:space="preserve">
          <source>Wrapper for infinite random-access ranges.</source>
          <target state="translated">무한 랜덤 액세스 범위를위한 래퍼.</target>
        </trans-unit>
        <trans-unit id="37bdb8f566f2d5a031530ff138898fa6ae23cdfd" translate="yes" xml:space="preserve">
          <source>Wrapper for input ranges with assignable elements.</source>
          <target state="translated">할당 가능한 요소가있는 입력 범위의 래퍼.</target>
        </trans-unit>
        <trans-unit id="c3d9916a0371443b3a41375a3a1c28aa8e91a094" translate="yes" xml:space="preserve">
          <source>Wrapper for input ranges.</source>
          <target state="translated">입력 범위를위한 래퍼.</target>
        </trans-unit>
        <trans-unit id="b0a95a21e1760a09fb4db567a6f4ee03a11a7d5a" translate="yes" xml:space="preserve">
          <source>Wrapper for output ranges.</source>
          <target state="translated">출력 범위를위한 래퍼.</target>
        </trans-unit>
        <trans-unit id="de3d4101c4e21df3d5905171039aec77f7ed4860" translate="yes" xml:space="preserve">
          <source>Wrapper to provide a better interface to libcurl than using the plain C API. It is recommended to use the &lt;code&gt;HTTP&lt;/code&gt;/&lt;code&gt;FTP&lt;/code&gt; etc. structs instead unless raw access to libcurl is needed.</source>
          <target state="translated">일반 C API를 사용하는 것보다 libcurl에 더 나은 인터페이스를 제공하는 래퍼입니다. libcurl에 대한 원시 액세스가 필요하지 않은 경우 &lt;code&gt;HTTP&lt;/code&gt; / &lt;code&gt;FTP&lt;/code&gt; 등 구조체를 대신 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="39537f1f2830ede14ee9fa6d2b62f5b64f801ca8" translate="yes" xml:space="preserve">
          <source>Wrapper which effectively makes it possible to pass a range by reference. Both the original range and the RefRange will always have the exact same elements. Any operation done on one will affect the other. So, for instance, if it's passed to a function which would implicitly copy the original range if it were passed to it, the original range is</source>
          <target state="translated">참조로 범위를 효과적으로 전달할 수있는 래퍼입니다. 원래 범위와 RefRange 모두 항상 동일한 요소를 갖습니다. 하나의 작업은 다른 작업에 영향을 미칩니다. 예를 들어, 원래 범위가 전달되면 암시 적으로 복사하는 함수에 전달되면 원래 범위는</target>
        </trans-unit>
        <trans-unit id="8618b840b60543d75b11e0d88e3bf56a352299c0" translate="yes" xml:space="preserve">
          <source>Wraps a possibly-throwing expression in a &lt;code&gt;nothrow&lt;/code&gt; wrapper so that it can be called by a &lt;code&gt;nothrow&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;nothrow&lt;/code&gt; 함수에 의해 호출 될 수 있도록 throw 가능 표현식을 &lt;code&gt;nothrow&lt;/code&gt; 랩퍼로 랩핑 합니다.</target>
        </trans-unit>
        <trans-unit id="4d17b811fb36d5c934b00c26b8e8c9b92a1e888d" translate="yes" xml:space="preserve">
          <source>Wraps a template API hash struct into a Digest interface. Modules providing digest implementations will usually provide an alias for this template (e.g. MD5Digest, SHA1Digest, ...).</source>
          <target state="translated">템플릿 API 해시 구조체를 다이제스트 인터페이스에 래핑합니다. 다이제스트 구현을 제공하는 모듈은 일반적으로이 템플릿의 별칭을 제공합니다 (예 : MD5Digest, SHA1Digest, ...).</target>
        </trans-unit>
        <trans-unit id="1099c1f74d6812ece804b9cbf074c78e29c32ea4" translate="yes" xml:space="preserve">
          <source>Wraps remaining &lt;code&gt;Appender&lt;/code&gt; methods such as &lt;a href=&quot;#put&quot;&gt;&lt;code&gt;put&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#put&quot;&gt; &lt;code&gt;put&lt;/code&gt; &lt;/a&gt; 과 같은 나머지 &lt;code&gt;Appender&lt;/code&gt; 메소드를 랩핑합니다 .</target>
        </trans-unit>
        <trans-unit id="7c7ac617339018f6920ef4c3f2015a628986c38e" translate="yes" xml:space="preserve">
          <source>Write 4 bytes of value.</source>
          <target state="translated">4 바이트의 값을 씁니다.</target>
        </trans-unit>
        <trans-unit id="7b2d00fb0e7046aa336568ca894f9bb21983d223" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;buffer&lt;/code&gt; to file &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">파일 &lt;code&gt;name&lt;/code&gt; &lt;code&gt;buffer&lt;/code&gt; 를 씁니다 .</target>
        </trans-unit>
        <trans-unit id="a38083e109d2e7a4d69cbaa3489444f640acbb5f" translate="yes" xml:space="preserve">
          <source>Write Data Into A BLOB Incrementally</source>
          <target state="translated">점차적으로 BLOB에 데이터 쓰기</target>
        </trans-unit>
        <trans-unit id="d8676a24afa3e4fa26f8aa90b7515ad1db60e34d" translate="yes" xml:space="preserve">
          <source>Write a bunch of zeros</source>
          <target state="translated">0을 많이 쓰세요</target>
        </trans-unit>
        <trans-unit id="cd6ebd461d34874264399a83d24a2bda6b4f4798" translate="yes" xml:space="preserve">
          <source>Write a file, returning &lt;code&gt;true&lt;/code&gt; on success.</source>
          <target state="translated">성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환하는 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c23284d2531bd9efe864545f4deedd492a816fa" translate="yes" xml:space="preserve">
          <source>Write a reference to s+offset</source>
          <target state="translated">s + offset에 대한 참조 작성</target>
        </trans-unit>
        <trans-unit id="c592a1af0fe821d27955299f19033c098bb4eae4" translate="yes" xml:space="preserve">
          <source>Write a reference to the data ptr[0..size+nzeros]</source>
          <target state="translated">데이터 ptr [0..size + nzeros]에 대한 참조를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="3882bd2c403298385dd12d1ae983b7517cc8ea11" translate="yes" xml:space="preserve">
          <source>Write a size_t value.</source>
          <target state="translated">size_t 값을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7b48df38bf6bec7bc7495236d55a213c96208120" translate="yes" xml:space="preserve">
          <source>Write compression method used for this member</source>
          <target state="translated">이 멤버에 사용 된 쓰기 압축 방법</target>
        </trans-unit>
        <trans-unit id="ad225ae5d885e53a7fe7e2b14f383df6da47f195" translate="yes" xml:space="preserve">
          <source>Write data of member in uncompressed form.</source>
          <target state="translated">압축되지 않은 형식으로 멤버의 데이터를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="de773a94d6778baa590700460694a2cc5240feda" translate="yes" xml:space="preserve">
          <source>Write out argument types to buf.</source>
          <target state="translated">buf에 인수 유형을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="47b35050ddbd7849601928f12e067c9e7bf6f24c" translate="yes" xml:space="preserve">
          <source>Write read-only string to object file, create a local symbol for it. Makes a copy of str's contents, does not keep a reference to it.</source>
          <target state="translated">객체 파일에 읽기 전용 문자열을 쓰고 로컬 기호를 만듭니다. str의 내용을 복사하고 참조를 유지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfc6582499d380a7ad4bacacf8e5c59cd194bd21" translate="yes" xml:space="preserve">
          <source>Write reference to offset in code segment.</source>
          <target state="translated">코드 세그먼트에서 오프셋에 대한 참조를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="52b53ecf38b837b581ff5600e009ee4494a94b7a" translate="yes" xml:space="preserve">
          <source>Write the UUID into &lt;code&gt;sink&lt;/code&gt; as an ASCII string in the canonical form, which is 36 characters in the form &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;</source>
          <target state="translated">&quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;형식의 36자인 정식 형식의 ASCII 문자열 로 &lt;code&gt;sink&lt;/code&gt; UUID를 씁니다.</target>
        </trans-unit>
        <trans-unit id="1ef16b7a07c299f61bfb74b5ad3be81f23a593eb" translate="yes" xml:space="preserve">
          <source>Write the contents of the string to dest. Use numberOfCodeUnits() to determine size of result.</source>
          <target state="translated">문자열의 내용을 dest에 씁니다. numberOfCodeUnits ()를 사용하여 결과 크기를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="9a1c97eb157d22efcffe10a200a9901ebb080254" translate="yes" xml:space="preserve">
          <source>Write the format string to an output range until the next format specifier is found and parse that format specifier.</source>
          <target state="translated">다음 형식 지정자를 찾을 때까지 형식 문자열을 출력 범위에 쓰고 해당 형식 지정자를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="9df19c54f436b6a77ec7817a689a3cb7a8863393" translate="yes" xml:space="preserve">
          <source>Write-Ahead Log Commit Hook</source>
          <target state="translated">미리 쓰기 로그 커밋 후크</target>
        </trans-unit>
        <trans-unit id="dabbf81e18099cb6956d08106b3303fb985c826b" translate="yes" xml:space="preserve">
          <source>Writer &lt;code&gt;sink&lt;/code&gt;</source>
          <target state="translated">작가 &lt;code&gt;sink&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e30103d33af6a946f9ebe462448f1d80d87755a5" translate="yes" xml:space="preserve">
          <source>Writer &lt;code&gt;w&lt;/code&gt;</source>
          <target state="translated">작가 &lt;code&gt;w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="261949f891c9b0b3af3322e9a82fd8c652e10037" translate="yes" xml:space="preserve">
          <source>Writers get preference. This may starve readers.</source>
          <target state="translated">작가는 선호를 얻는다. 이것은 독자를 굶주릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c169d753208ebdefff0c5bc61bb4a72eb78601af" translate="yes" xml:space="preserve">
          <source>Writes 'newval' into 'val'. The memory barrier specified by 'ms' is applied to the operation, which is fully sequenced by default. Valid memory orders are MemoryOrder.raw, MemoryOrder.rel, and MemoryOrder.seq.</source>
          <target state="translated">'newval'을 'val'에 씁니다. 'ms'로 지정된 메모리 배리어는 작업에 적용되며 기본적으로 완전히 순서가 지정됩니다. 유효한 메모리 순서는 MemoryOrder.raw, MemoryOrder.rel 및 MemoryOrder.seq입니다.</target>
        </trans-unit>
        <trans-unit id="f545090236c52b4db845fdcaa9b14bff9fdd1e07" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;#Code%20point&quot;&gt;code point&lt;/a&gt;&lt;code&gt;ch&lt;/code&gt; at given index in this cluster.</source>
          <target state="translated">이 클러스터의 지정된 인덱스에서 &lt;a href=&quot;#Code%20point&quot;&gt;코드 포인트 &lt;/a&gt; &lt;code&gt;ch&lt;/code&gt; 를 씁니다 .</target>
        </trans-unit>
        <trans-unit id="da65af1a504194bc282a562bcd49dbb2f1a648fd" translate="yes" xml:space="preserve">
          <source>Writes a file, terminate the program on error</source>
          <target state="translated">파일 쓰기, 오류 발생시 프로그램 종료</target>
        </trans-unit>
        <trans-unit id="3ffb03394b34b5a784ef70061fb278a426c07e08" translate="yes" xml:space="preserve">
          <source>Writes an array or range to a file. Shorthand for &lt;code&gt;data.copy(File(fileName, &quot;wb&quot;).lockingBinaryWriter)&lt;/code&gt;. Similar to &lt;a href=&quot;std_file#write&quot;&gt;&lt;code&gt;std.file.write&lt;/code&gt;&lt;/a&gt;, strings are written as-is, rather than encoded according to the &lt;code&gt;File&lt;/code&gt;'s &lt;a href=&quot;http://en.cppreference.com/w/c/io#Narrow_and_wide_orientation&quot;&gt;orientation&lt;/a&gt;.</source>
          <target state="translated">배열 또는 범위를 파일에 씁니다. 속기에 대한 &lt;code&gt;data.copy(File(fileName, &quot;wb&quot;).lockingBinaryWriter)&lt;/code&gt; . &lt;a href=&quot;std_file#write&quot;&gt; &lt;code&gt;std.file.write&lt;/code&gt; &lt;/a&gt; 와 유사하게 문자열은 &lt;code&gt;File&lt;/code&gt; 의 &lt;a href=&quot;http://en.cppreference.com/w/c/io#Narrow_and_wide_orientation&quot;&gt;방향&lt;/a&gt; 에 따라 인코딩되지 않고있는 그대로 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="671cfcd86b743c33ffcbc7db930780c93330dcf9" translate="yes" xml:space="preserve">
          <source>Writes and returns value to I/O port at port_address.</source>
          <target state="translated">port_address의 I / O 포트에 값을 쓰고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c98d5d7059935e8dfc263a9b5d85176d88130c5a" translate="yes" xml:space="preserve">
          <source>Writes formatted data to standard output (without a trailing newline).</source>
          <target state="translated">형식화 된 데이터를 후행 줄 바꿈없이 표준 출력에 씁니다.</target>
        </trans-unit>
        <trans-unit id="7a22ff839b6664d67c85bd4ac1968cd869085e52" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to standard output (without a trailing newline).</source>
          <target state="translated">인수를 텍스트 형식으로 표준 출력에 출력합니다 (후행 줄 바꿈 없음).</target>
        </trans-unit>
        <trans-unit id="22ac1343524825034c576966a15ac34d09638673" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to the file, according to the format string fmt.</source>
          <target state="translated">형식 문자열 fmt에 따라 텍스트 형식의 인수를 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="e124919c1b78704f045218d126ac7290c975bdd3" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to the file, followed by a newline.</source>
          <target state="translated">인수를 텍스트 형식으로 파일에 쓴 다음 줄 바꿈을 씁니다.</target>
        </trans-unit>
        <trans-unit id="d3d461f396ab97110d36d894979f20e6ede9f849" translate="yes" xml:space="preserve">
          <source>Writes its arguments in text format to the file.</source>
          <target state="translated">텍스트 형식의 인수를 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="62cb6d546280f4feea26cac5835bb92dc3d81ffa" translate="yes" xml:space="preserve">
          <source>Writes this module's fully-qualified name to buf</source>
          <target state="translated">이 모듈의 정규화 된 이름을 buf에 씁니다.</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="ad162d2c79c76f33c48d81a0634c1baa1d09990c" translate="yes" xml:space="preserve">
          <source>Writing either arrays of &lt;code&gt;char&lt;/code&gt;s or &lt;code&gt;ubyte&lt;/code&gt;s is faster than writing each character individually from a range. For large amounts of data, writing the contents in chunks using an intermediary array can result in a speed increase.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 또는 &lt;code&gt;ubyte&lt;/code&gt; s 배열을 쓰는 것이 각 문자를 범위에서 개별적으로 쓰는 것보다 빠릅니다. 많은 양의 데이터의 경우 중간 배열을 사용하여 내용을 청크로 작성하면 속도가 증가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dee8bd37d704973bd57f3004e2cb5ef11b63a6dc" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. Equivalent to unwind.h</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. unwind.h와 동일</target>
        </trans-unit>
        <trans-unit id="b109ed01b302839f4c77abd81c996851cc4aa9de" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. Implementation of exception handling support routines for Posix and Win64.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. Posix 및 Win64에 대한 예외 처리 지원 루틴 구현</target>
        </trans-unit>
        <trans-unit id="49db7f4304c68465326e6bfa4a2c75bc29acc1b8" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. Module initialization routines.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 모듈 초기화 루틴.</target>
        </trans-unit>
        <trans-unit id="bcc259680d6a3b51f61e191fd1e26662589cdb25" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides Darwin 64 bit specific support for sections.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 이 모듈은 섹션에 대한 Darwin 64 비트 특정 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c866fcbf99d5602882352f6b26195cfcc8dd82c4" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides ELF-specific support for sections with shared libraries.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 이 모듈은 공유 라이브러리가있는 섹션에 ELF 특정 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="17d6a2308d5068aa0b43c14f08e05e3755cbbcf1" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides OS X x86 specific support for sections.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 이 모듈은 섹션에 대한 OS X x86 특정 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="aefaa53ce78b985648513722359bd4425aa1cb2d" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides OS X x86-64 specific support for sections.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 이 모듈은 섹션에 대한 OS X x86-64 특정 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ca0cae03a7a5c3acd5595105b8f3e0a0ae198ca1" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides Solaris-specific support for sections.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 이 모듈은 섹션에 대한 Solaris 특정 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2b4f7ed077ce71d4c32f279f6eae5e4c9e152169" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides Win32-specific support for sections.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 이 모듈은 섹션에 대한 Win32 특정 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1805d8b1070ddc09d2826c5527186a21ffa4052b" translate="yes" xml:space="preserve">
          <source>Written in the D programming language. This module provides bionic-specific support for sections.</source>
          <target state="translated">D 프로그래밍 언어로 작성되었습니다. 이 모듈은 섹션에 대한 생체 공학적 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="09eb5bb61ba3b0aa4f6364dacd7049445e4dc50e" translate="yes" xml:space="preserve">
          <source>Wysiwyg (&quot;what you see is what you get&quot;) quoted strings are enclosed by &lt;code&gt;r&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;. All characters between the &lt;code&gt;r&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt; are part of the string. There are no escape sequences inside wysiwyg strings.</source>
          <target state="translated">따옴표로 묶인 Wysiwyg ( &quot;보이는 것&quot;)는 &lt;code&gt;r&quot;&lt;/code&gt; 과 &lt;code&gt;&quot;&lt;/code&gt; 로 묶습니다 . &lt;code&gt;r&quot;&lt;/code&gt; 과 &lt;code&gt;&quot;&lt;/code&gt; 사이의 모든 문자 는 문자열의 일부입니다. wysiwyg 문자열 내부에는 이스케이프 시퀀스가 ​​없습니다.</target>
        </trans-unit>
        <trans-unit id="a6cb1ff0672a736cac188c10daba997612f2b5d7" translate="yes" xml:space="preserve">
          <source>Wysiwyg (&quot;what you see is what you get&quot;) quoted strings can be defined using either of two syntaxes.</source>
          <target state="translated">Wysiwyg ( &quot;What you see is what you get&quot;) 인용 문자열은 두 가지 구문 중 하나를 사용하여 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f394fca831934fbcb7376bfab2879d2cf43ab77" translate="yes" xml:space="preserve">
          <source>Wysiwyg Strings</source>
          <target state="translated">Wysiwyg 현</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="9f0ffc25b2d7427efa79b34a28595c3421d94517" translate="yes" xml:space="preserve">
          <source>X &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">X &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="838a45e19c4c329eb943a7e88927c9dbf2d8de29" translate="yes" xml:space="preserve">
          <source>X &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">X &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ce5d7ec39a23b922a17f0c3abf223f6f76a032f" translate="yes" xml:space="preserve">
          <source>X86 And X86_64 Vector Extension Implementation</source>
          <target state="translated">X86 및 X86_64 벡터 확장 구현</target>
        </trans-unit>
        <trans-unit id="50efddb988b104babe6401aede32fd071cdc5984" translate="yes" xml:space="preserve">
          <source>XID_Continue</source>
          <target state="translated">XID_Continue</target>
        </trans-unit>
        <trans-unit id="2c844a38f208dd0b734ef526a343db1d60c00d66" translate="yes" xml:space="preserve">
          <source>XID_Start</source>
          <target state="translated">XID_Start</target>
        </trans-unit>
        <trans-unit id="5b72efcf7e8eabc51f5896751a16634ab4ef311c" translate="yes" xml:space="preserve">
          <source>XIException if the segment body is illegal (contains &quot;&amp;gt;&quot;)</source>
          <target state="translated">XI 세그먼트 본문이 불법 인 경우 ( &quot;&amp;gt;&quot;포함)</target>
        </trans-unit>
        <trans-unit id="b2d4816b0ff06e62a59ac8c5ce7de8752afdaa5d" translate="yes" xml:space="preserve">
          <source>XML 1.0</source>
          <target state="translated">XML 1.0</target>
        </trans-unit>
        <trans-unit id="cdf582a2f3fe605b845df26a838737ecff0c3fe3" translate="yes" xml:space="preserve">
          <source>XMM opcodes that conform to the following:</source>
          <target state="translated">다음을 준수하는 XMM opcode :</target>
        </trans-unit>
        <trans-unit id="2c7bb3312643d9ad59c52760eab81e963630bcd2" translate="yes" xml:space="preserve">
          <source>Xerox NS protocol</source>
          <target state="translated">제록스 NS 프로토콜</target>
        </trans-unit>
        <trans-unit id="4e530f8bf5eb82ad3ccf91c4c829121f9a54abad" translate="yes" xml:space="preserve">
          <source>Xerox NS protocol level</source>
          <target state="translated">제록스 NS 프로토콜 레벨</target>
        </trans-unit>
        <trans-unit id="eb2d9c37422dc286e83db49708664a6da951c27c" translate="yes" xml:space="preserve">
          <source>Xor Expressions</source>
          <target state="translated">Xor 식</target>
        </trans-unit>
        <trans-unit id="64735c56cdb98bf119d182f824db814b9e562062" translate="yes" xml:space="preserve">
          <source>Xorshift Engines</source>
          <target state="translated">Xorshift 엔진</target>
        </trans-unit>
        <trans-unit id="85f1172c42fb72f91fb5f94b48cd45b847b16691" translate="yes" xml:space="preserve">
          <source>Xorshift generator. Implemented according to &lt;a href=&quot;http://www.jstatsoft.org/v08/i14/paper&quot;&gt;Xorshift RNGs&lt;/a&gt; (Marsaglia, 2003) when the size is small. For larger sizes the generator uses Sebastino Vigna's optimization of using an index to avoid needing to rotate the internal array.</source>
          <target state="translated">Xorshift 생성기. 크기가 작은 &lt;a href=&quot;http://www.jstatsoft.org/v08/i14/paper&quot;&gt;Xorshift RNGs&lt;/a&gt; (Marsaglia, 2003) 에 따라 구현되었습니다 . 더 큰 크기의 발전기는 내부 배열을 회전 할 필요가 없도록 인덱스를 사용하는 Sebastino Vigna의 최적화를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c0f0cadca077341656948de09d8670971ee5641b" translate="yes" xml:space="preserve">
          <source>YEAR</source>
          <target state="translated">YEAR</target>
        </trans-unit>
        <trans-unit id="9f0b3ec328ac735aae6d043262de18d9d11f4eaa" translate="yes" xml:space="preserve">
          <source>Yazan Dabain</source>
          <target state="translated">야잔 다바 인</target>
        </trans-unit>
        <trans-unit id="7c887a64b178b27f92231366833c25de4d13a9ba" translate="yes" xml:space="preserve">
          <source>Yazan Dabain, Sean Kelly</source>
          <target state="translated">야잔 다바 인, 숀 켈리</target>
        </trans-unit>
        <trans-unit id="5f2748a461454cf10b2f902f6d541955314d51f4" translate="yes" xml:space="preserve">
          <source>Year 0 is a leap year.</source>
          <target state="translated">0 년은 윤년입니다.</target>
        </trans-unit>
        <trans-unit id="985b2a4dc89c44de21746593a2cc7eb37a2b3bd4" translate="yes" xml:space="preserve">
          <source>Year B.C. of the Gregorian Calendar counting year 0 as 1 B.C.</source>
          <target state="translated">0 년을 1 BC로 계산하는 그레고리력의 BC 연도</target>
        </trans-unit>
        <trans-unit id="b9c408c073ad8582d540590e32701ef21fc98b1b" translate="yes" xml:space="preserve">
          <source>Year of the Gregorian Calendar. Positive numbers are A.D. Non-positive are B.C.</source>
          <target state="translated">그레고리력의 해. 양수는 AD 비 양수는 BC</target>
        </trans-unit>
        <trans-unit id="8f12c389ba31dc6166c8efdbd3320c92c713f633" translate="yes" xml:space="preserve">
          <source>Year of the Gregorian Calendar. Positive values are A.D. Non-positive values are B.C. with year 0 being the year prior to 1 A.D.</source>
          <target state="translated">그레고리력의 해. 양수 값은 AD입니다 양수 값은 BC입니다. 0은 1 AD 이전의 해입니다.</target>
        </trans-unit>
        <trans-unit id="041fa90b252fda96d77375b360e6dda6c7588996" translate="yes" xml:space="preserve">
          <source>Year, month, and day are kept separately internally so that &lt;code&gt;Date&lt;/code&gt; is optimized for calendar-based operations.</source>
          <target state="translated">년, 월 및 일은 내부적으로 별도로 유지되므로 &lt;code&gt;Date&lt;/code&gt; 가 달력 기반 작업에 최적화됩니다.</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="8b3ea263ffe29592bef18c80ae24a5c69c012728" translate="yes" xml:space="preserve">
          <source>Yet another class of algorithms may choose an intermediate tradeoff by being stable only on a well-defined subrange of the range. There is no established terminology for such behavior; this library calls it &lt;b&gt;semistable&lt;/b&gt;.</source>
          <target state="translated">또 다른 클래스의 알고리즘은 범위의 잘 정의 된 하위 범위에서만 안정적이므로 중간 트레이드 오프를 선택할 수 있습니다. 그러한 행동에 대한 확립 된 용어는 없다. 이 라이브러리는 &lt;b&gt;semistable&lt;/b&gt; 이라고 부릅니다 .</target>
        </trans-unit>
        <trans-unit id="c2bf8cb1a13b6661ace7ce9f9719055b32f2e726" translate="yes" xml:space="preserve">
          <source>Yi</source>
          <target state="translated">Yi</target>
        </trans-unit>
        <trans-unit id="11b6edc31ec66de50fd5378989503aea27ad82d5" translate="yes" xml:space="preserve">
          <source>Yi Radicals</source>
          <target state="translated">이순신</target>
        </trans-unit>
        <trans-unit id="871743fa0c93bc0da9a20cdf8000104bbc1a35c0" translate="yes" xml:space="preserve">
          <source>Yi Syllables</source>
          <target state="translated">이 음절</target>
        </trans-unit>
        <trans-unit id="4f2be812d0ba733c97bf4f338315cfec143db69a" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; has a &lt;code&gt;length&lt;/code&gt; member that returns a value of &lt;code&gt;size_t&lt;/code&gt; type. &lt;code&gt;R&lt;/code&gt; does not have to be a range. If &lt;code&gt;R&lt;/code&gt; is a range, algorithms in the standard library are only guaranteed to support &lt;code&gt;length&lt;/code&gt; with type &lt;code&gt;size_t&lt;/code&gt;.</source>
          <target state="translated">수익률 &lt;code&gt;true&lt;/code&gt; 경우 &lt;code&gt;R&lt;/code&gt; 은 이 &lt;code&gt;length&lt;/code&gt; 구성원을 반환하는 값 &lt;code&gt;size_t&lt;/code&gt; 타입. &lt;code&gt;R&lt;/code&gt; 은 범위 일 필요는 없습니다. 경우 &lt;code&gt;R&lt;/code&gt; 은 범위이며, 표준 라이브러리 알고리즘은 지원을 보장하는 &lt;code&gt;length&lt;/code&gt; 형과 &lt;code&gt;size_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d63667905d7542aa573c76be73117be28084946c" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;T&lt;/code&gt; is an aggregate that defines a symbol called &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">수확량 &lt;code&gt;true&lt;/code&gt; 의 경우에만 &lt;code&gt;T&lt;/code&gt; 는 라는 기호를 정의하는 집합입니다 &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b78b1033eef6ebbec6c54884c6c74ed3e982e76c" translate="yes" xml:space="preserve">
          <source>Yields a value of type T to the caller of the currently executing generator.</source>
          <target state="translated">현재 실행중인 생성기의 호출자에게 T 유형의 값을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b170ba66d44b075487377d036e56fe2e1236ecfd" translate="yes" xml:space="preserve">
          <source>Yields execution to another logical thread.</source>
          <target state="translated">다른 논리 스레드로 실행을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c0fee1b841b1164e3c9df7152dc5dc76a150031e" translate="yes" xml:space="preserve">
          <source>Yijing Hexagram Symbols</source>
          <target state="translated">이징 헥사 그램 기호</target>
        </trans-unit>
        <trans-unit id="1ec730d733a5a23d15b5142c27fc22cbe77f9ce5" translate="yes" xml:space="preserve">
          <source>You can also remove the standard GC implementation from a statically linked binary by redefining the function &lt;code&gt;extern(C) void* register_default_gcs()&lt;/code&gt;. If no custom garbage collector has been registered all attempts to allocate GC managed memory will terminate the application with an appropriate message.</source>
          <target state="translated">&lt;code&gt;extern(C) void* register_default_gcs()&lt;/code&gt; 함수를 재정 의하여 정적으로 링크 된 바이너리에서 표준 GC 구현을 제거 할 수도 있습니다 . 사용자 정의 가비지 수집기가 등록되지 않은 경우 GC 관리 메모리를 할당하려는 모든 시도는 적절한 메시지와 함께 응용 프로그램을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="cb9ce54c7e063a5f63459b64e87e580212a04c11" translate="yes" xml:space="preserve">
          <source>You can convert this &lt;code&gt;length&lt;/code&gt; into the number of seconds by dividing it by &lt;code&gt;ticksPerSec&lt;/code&gt; (or using one the appropriate property function to do it).</source>
          <target state="translated">이 &lt;code&gt;length&lt;/code&gt; 를 &lt;code&gt;ticksPerSec&lt;/code&gt; (또는 적절한 특성 함수 중 하나를 사용하여) 로 나누어 길이 를 초 단위로 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a280f20fa2a0436981b678de2506b6fda834ebf" translate="yes" xml:space="preserve">
          <source>You can either use the generic function &lt;code&gt;dur&lt;/code&gt; and give it the units as a &lt;code&gt;string&lt;/code&gt; or use the named aliases.</source>
          <target state="translated">일반 함수 &lt;code&gt;dur&lt;/code&gt; 을 사용하여 단위를 &lt;code&gt;string&lt;/code&gt; 하거나 명명 된 별명을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="155cb1da1f9e22e9d6f167f108238008a26d3e23" translate="yes" xml:space="preserve">
          <source>You can escape any ASCII punctuation symbol with a backslash &lt;code&gt;\&lt;/code&gt;. Doing so outputs the original character without the backslash, except for the following characters which output predefined macros instead:</source>
          <target state="translated">역 슬래시 &lt;code&gt;\&lt;/code&gt; 로 ASCII 문장 부호를 이스케이프 처리 할 수 ​​있습니다 . 미리 정의 된 매크로를 대신 출력하는 다음 문자를 제외하고 백 슬래시없이 원래 문자를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="e3235c6feadfb13ad2c1d369dc6696e0b1bd716f" translate="yes" xml:space="preserve">
          <source>You can foreach either with or without an index. If an index is specified, it will be initialized at each iteration with the offset into the string at which the code point begins.</source>
          <target state="translated">당신은 인덱스가 있거나 없거나 foreach 할 수 있습니다. 인덱스가 지정되면 코드 포인트가 시작되는 문자열에 대한 오프셋과 함께 각 반복에서 인덱스가 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="268f4f2a943986f919b73829b619ff1ea95be319" translate="yes" xml:space="preserve">
          <source>You can insert a literal asterisk by &lt;a href=&quot;#punctuation_escapes&quot;&gt;backslash-escaping&lt;/a&gt; it: &lt;code&gt;\*&lt;/code&gt; is rendered as *.</source>
          <target state="translated">&lt;a href=&quot;#punctuation_escapes&quot;&gt;백 슬래시로 이스케이프 처리&lt;/a&gt; 하여 리터럴 별표를 삽입 할 수 있습니다 . &lt;code&gt;\*&lt;/code&gt; 는 * 로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="281c7bf193a2238d33c24d116bbd109a49197245" translate="yes" xml:space="preserve">
          <source>You can pass them to &lt;code&gt;getopt&lt;/code&gt; in any position, except in between an option string and its bound pointer.</source>
          <target state="translated">옵션 문자열과 바운드 포인터 사이를 제외하고 어떤 위치에서도 &lt;code&gt;getopt&lt;/code&gt; 를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fee02d71c7ece7369ab291103ad7a7fb75ebd8e" translate="yes" xml:space="preserve">
          <source>You can use bitwise to implement an uniform bool generator</source>
          <target state="translated">비트 단위를 사용하여 균일 한 부울 생성기를 구현할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="665a916dcc61b11eaca958b8fb02768f4747231d" translate="yes" xml:space="preserve">
          <source>You may alias &lt;code&gt;map&lt;/code&gt; with some function(s) to a symbol and use it separately:</source>
          <target state="translated">일부 기능이있는 &lt;code&gt;map&lt;/code&gt; 별명을 기호에 별칭으로 사용하여 별도로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b206026afc946b60b23a987f6918168a0be2d6d9" translate="yes" xml:space="preserve">
          <source>You may define your own &lt;code&gt;DOC_ROOT_&lt;/code&gt; macros for any external packages you wish to link to using a &lt;a href=&quot;#macros&quot;&gt;Macros section&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#macros&quot;&gt;매크로 섹션&lt;/a&gt; 을 사용하여 연결하려는 외부 패키지에 대해 고유 한 &lt;code&gt;DOC_ROOT_&lt;/code&gt; 매크로를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf2a29cba8c99ca679dbf684333c923cf4ec456a" translate="yes" xml:space="preserve">
          <source>You may need to link to the &lt;b&gt;curl&lt;/b&gt; library, e.g. by adding &lt;code&gt;&quot;libs&quot;: [&quot;curl&quot;]&lt;/code&gt; to your &lt;b&gt;dub.json&lt;/b&gt; file if you are using &lt;a href=&quot;http://code.dlang.org&quot;&gt;DUB&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://code.dlang.org&quot;&gt;DUB를&lt;/a&gt; 사용하는 경우 &lt;b&gt;dub.json&lt;/b&gt; 파일에 &lt;code&gt;&quot;libs&quot;: [&quot;curl&quot;]&lt;/code&gt; 을 추가 하여 &lt;b&gt;curl&lt;/b&gt; 라이브러리 에 연결해야 할 수도 있습니다 .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="edfa5374961a427324fc95b6cba01103b14831ce" translate="yes" xml:space="preserve">
          <source>You may opt to use, copy, modify, merge, publish, distribute and/or sell copies of the Software, and permit persons to whom the Software is furnished to do so, under the terms of the COPYING file.</source>
          <target state="translated">귀하는 소프트웨어 사본을 사용, 복사, 수정, 병합, 게시, 배포 및 / 또는 판매 할 수 있으며 소프트웨어를 제공받은 사람은 COPYING 파일의 조건에 따라 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50322cada6a0e21e214b6785e4891d438ace2a91" translate="yes" xml:space="preserve">
          <source>You may want to use &lt;code&gt;Rebindable&lt;/code&gt; when you want to have mutable storage referring to &lt;code&gt;const&lt;/code&gt; objects, for example an array of references that must be sorted in place. &lt;code&gt;Rebindable&lt;/code&gt; does not break the soundness of D's type system and does not incur any of the risks usually associated with &lt;code&gt;cast&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 객체를 참조하는 가변 스토리지 ( 예 : 정렬되어야하는 참조 배열) 를 원할 경우 리 &lt;code&gt;Rebindable&lt;/code&gt; 을 사용할 수 있습니다 . &lt;code&gt;Rebindable&lt;/code&gt; 은 D 타입 시스템의 건전성을 해치지 않으며 일반적으로 &lt;code&gt;cast&lt;/code&gt; 와 관련된 위험을 유발 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d40216de066cb1f033f6b3262e764ef0915eb5ad" translate="yes" xml:space="preserve">
          <source>You may want to use templated property functions (instead of Implicit Template Properties) to generate complex functions:</source>
          <target state="translated">복잡한 함수를 생성하기 위해 암시 적 템플릿 속성 대신 템플릿 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db55fd579be49c54f8c178991ee321d18dc5a1f5" translate="yes" xml:space="preserve">
          <source>You may want to use the CRC32, CRC65ECMA and CRC64ISO aliases for convenience.</source>
          <target state="translated">편의를 위해 CRC32, CRC65ECMA 및 CRC64ISO 별명을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a1d4c57f4a2414bd387d52bf93fb36278919c78" translate="yes" xml:space="preserve">
          <source>You need to specify the &lt;code&gt;unsafe&lt;/code&gt; parameter for enums with custom values</source>
          <target state="translated">사용자 정의 값으로 열거 형에 &lt;code&gt;unsafe&lt;/code&gt; 매개 변수 를 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="fc4767992a9f1c3de860fd8ca00dee74332afe20" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that CDatas can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. CData를 연관 배열 키로 사용할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="86159f6788175c96b0181428a15b2f1f4051d9ac" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Comments can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. 주석이 연관 배열 키로 사용될 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="55cf97addbd4d7e3fe53879199da112ed7f347bb" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Documents can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. 문서를 연관 배열 키로 사용할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="770696c8a297f8edec55950cc36f1c9cf4ea2f96" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Elements can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. Elements를 연관 배열 키로 사용할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="e963a087e2db85f944689291b453ef957179668f" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that ProcessingInstructions can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. ProcessingInstructions를 연관 배열 키로 사용할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="7a79379185bbe8329843c72f4cd3a55c92058c99" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Tags can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. 태그를 연관 배열 키로 사용할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="ffae39495c1ba7a2ec2a8a534df6e7552d4a2443" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that Texts can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. 텍스트를 연관 배열 키로 사용할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="89946c8ae1beb19f9cb83a272f63a2e2a1dad64f" translate="yes" xml:space="preserve">
          <source>You should rarely need to call this function. It exists so that XmlInstructions can be used as associative array keys.</source>
          <target state="translated">이 함수를 호출 할 필요는 거의 없습니다. XmlInstructions를 연관 배열 키로 사용할 수 있도록 존재합니다.</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="4e9f2773f15b5889a5fb652dc146b57476cd52d6" translate="yes" xml:space="preserve">
          <source>Z_FINISH</source>
          <target state="translated">Z_FINISH</target>
        </trans-unit>
        <trans-unit id="07d3ecd2b854f2a13223bb7b7dd4db1a482ccd3c" translate="yes" xml:space="preserve">
          <source>Z_FULL_FLUSH</source>
          <target state="translated">Z_FULL_FLUSH</target>
        </trans-unit>
        <trans-unit id="78534a9ce32ec2df62158e7c9c11693b6744604b" translate="yes" xml:space="preserve">
          <source>Z_SYNC_FLUSH</source>
          <target state="translated">Z_SYNC_FLUSH</target>
        </trans-unit>
        <trans-unit id="2da27396964ac06f05f5bbad804ea58b1b769a7a" translate="yes" xml:space="preserve">
          <source>Zero if all elemented are visited, nonzero if not.</source>
          <target state="translated">모든 요소가 방문하면 0, 그렇지 않으면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="8df5e58805947bdcff88bb2019b2d094d05c05c9" translate="yes" xml:space="preserve">
          <source>Zero or more non-infinite forward ranges</source>
          <target state="translated">0 개 이상의 무한대 범위</target>
        </trans-unit>
        <trans-unit id="bb1efd5bc2b916d992598168372279a4684c9e49" translate="yes" xml:space="preserve">
          <source>Zero or more pairs consisting of an &lt;code&gt;AllocFlag&lt;/code&gt; and an allocator type.</source>
          <target state="translated">&lt;code&gt;AllocFlag&lt;/code&gt; 와 할당 자 유형 으로 구성된 0 개 이상의 쌍 .</target>
        </trans-unit>
        <trans-unit id="3e2bda8a88aff5f46c955102111f711363165c54" translate="yes" xml:space="preserve">
          <source>Zero-width lookahead assertion. Matches at a point where the subexpression regex could be matched starting from the current position.</source>
          <target state="translated">너비가없는 미리보기 어설 션. 현재 위치에서 시작하여 하위 표현식 정규 표현식을 일치시킬 수있는 지점에서 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d859db4a5a63e306c41886451e4f60d1de98a6ed" translate="yes" xml:space="preserve">
          <source>Zero-width lookbehind assertion. Matches at a point where the subexpression regex could be matched ending at the current position (matching goes backwards).</source>
          <target state="translated">너비가 0 인 룩 어설 션. 하위 표현식 정규 표현식이 현재 위치에서 끝나는 지점에서 일치합니다 (일치하는 항목은 거꾸로 됨).</target>
        </trans-unit>
        <trans-unit id="dd25b63c4bd1a2436f18b05d857f1a5b388ed97c" translate="yes" xml:space="preserve">
          <source>Zero-width negative lookahead assertion. Matches at a point where the subexpression regex could &lt;em&gt;not&lt;/em&gt; be matched starting from the current position.</source>
          <target state="translated">너비가 0 인 네거티브 선견 어설 션. 현재 위치부터 하위 표현식 정규식을 일치 시킬 수 &lt;em&gt;없는&lt;/em&gt; 지점에서 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c08ab8fc338dc8665d7647825312c8220d091cd8" translate="yes" xml:space="preserve">
          <source>Zero-width negative lookbehind assertion. Matches at a point where the subexpression regex could &lt;em&gt;not&lt;/em&gt; be matched ending at the current position (matching goes backwards).</source>
          <target state="translated">폭이 0 인 네거티브 룩백 어설 션. 하위 표현식 정규식을 현재 위치에서 끝나는 일치 시킬 수 &lt;em&gt;없는&lt;/em&gt; 지점에서 일치합니다 (일치하는 항목은 거꾸로 됨).</target>
        </trans-unit>
        <trans-unit id="de1bd670d90f58a6c9b2ffebdc2fb027056ab442" translate="yes" xml:space="preserve">
          <source>ZipException when an unsupported compression method is used or when compression failed.</source>
          <target state="translated">지원되지 않는 압축 방법을 사용하거나 압축에 실패한 경우 ZipException입니다.</target>
        </trans-unit>
        <trans-unit id="752cdaf20ca6526205211ed5572bf77959364345" translate="yes" xml:space="preserve">
          <source>ZipException when the archive could not be build.</source>
          <target state="translated">아카이브를 빌드 할 수없는 경우 ZipException입니다.</target>
        </trans-unit>
        <trans-unit id="225113b2d8f745ebbb0d147b615c37ff99d15bc2" translate="yes" xml:space="preserve">
          <source>ZipException when the archive was invalid or when malware was detected.</source>
          <target state="translated">아카이브가 유효하지 않거나 맬웨어가 감지 된 경우 ZipException입니다.</target>
        </trans-unit>
        <trans-unit id="4b1755d9718a61fbea36cc02d57100d6afa1daab" translate="yes" xml:space="preserve">
          <source>ZipException when the entry is invalid or the compression method is not supported.</source>
          <target state="translated">항목이 유효하지 않거나 압축 방법이 지원되지 않는 경우 ZipException입니다.</target>
        </trans-unit>
        <trans-unit id="6be404c28a20a755971361ab2d7b6240b4ee20e2" translate="yes" xml:space="preserve">
          <source>Zl</source>
          <target state="translated">Zl</target>
        </trans-unit>
        <trans-unit id="5633f83512c43c6456260610345d94ebb6dbe9d5" translate="yes" xml:space="preserve">
          <source>Zp</source>
          <target state="translated">Zp</target>
        </trans-unit>
        <trans-unit id="0b85f14fa99ca19d173a463217a813ab4fe5ad81" translate="yes" xml:space="preserve">
          <source>Zs</source>
          <target state="translated">Zs</target>
        </trans-unit>
        <trans-unit id="ed4edf00c589794000c22c60e5896dd5563b98fa" translate="yes" xml:space="preserve">
          <source>[ e1, e2, e3, ... ]</source>
          <target state="translated">[e1, e2, e3, ...]</target>
        </trans-unit>
        <trans-unit id="8938fea170332eb44328d18b5e681dc858213e09" translate="yes" xml:space="preserve">
          <source>[ key0 : value0, key1 : value1, ... ]</source>
          <target state="translated">[key0 : value0, key1 : value1, ...]</target>
        </trans-unit>
        <trans-unit id="a0c7153f1cc4aa831954a6788d4f2f9ef25f9bd4" translate="yes" xml:space="preserve">
          <source>[05:00:30 - 12:00:00)</source>
          <target state="translated">[05:00:30-12:00:00)</target>
        </trans-unit>
        <trans-unit id="5cc780b611e649470fb813785a884d0781d82398" translate="yes" xml:space="preserve">
          <source>[0x00, 0x00, 0xFE, 0xFF]</source>
          <target state="translated">[0x00, 0x00, 0xFE, 0xFF]</target>
        </trans-unit>
        <trans-unit id="3a82e1270f683dce0aafeb683ef13257aa7cd535" translate="yes" xml:space="preserve">
          <source>[0x0E, 0xFE, 0xFF]</source>
          <target state="translated">[0x0E, 0xFE, 0xFF]</target>
        </trans-unit>
        <trans-unit id="127241c46d6af9dae67045d409338b48cf7d851c" translate="yes" xml:space="preserve">
          <source>[0x84, 0x31, 0x95, 0x33]</source>
          <target state="translated">[0x84, 0x31, 0x95, 0x33]</target>
        </trans-unit>
        <trans-unit id="25d3883361a4fae44aa127fb1db5f4de39632e42" translate="yes" xml:space="preserve">
          <source>[0xDD, 0x73, 0x66, 0x73]</source>
          <target state="translated">[0xDD, 0x73, 0x66, 0x73]</target>
        </trans-unit>
        <trans-unit id="f85c19245e651cc73bc05b92970a9810642dc5bd" translate="yes" xml:space="preserve">
          <source>[0xEF, 0xBB, 0xBF]</source>
          <target state="translated">[0xEF, 0xBB, 0xBF]</target>
        </trans-unit>
        <trans-unit id="8091720208bd9e06c11e2526dee2576869699591" translate="yes" xml:space="preserve">
          <source>[0xF7, 0x64, 0x4C]</source>
          <target state="translated">[0xF7, 0x64, 0x4C]</target>
        </trans-unit>
        <trans-unit id="50948e8255cdbb4bffa669a403821268e817ff90" translate="yes" xml:space="preserve">
          <source>[0xFB, 0xEE, 0x28]</source>
          <target state="translated">[0xFB, 0xEE, 0x28]</target>
        </trans-unit>
        <trans-unit id="37f1beff2dcd5309ee7e7c60e25143e26012959e" translate="yes" xml:space="preserve">
          <source>[0xFE, 0xFF]</source>
          <target state="translated">[0xFE, 0xFF]</target>
        </trans-unit>
        <trans-unit id="88043d764331c8d0d96a29e08610589a55790021" translate="yes" xml:space="preserve">
          <source>[0xFF, 0xFE, 0x00, 0x00]</source>
          <target state="translated">[0xFF, 0xFE, 0x00, 0x00]</target>
        </trans-unit>
        <trans-unit id="b0813d64143dd99bd80443c996704f63795593aa" translate="yes" xml:space="preserve">
          <source>[0xFF, 0xFE]</source>
          <target state="translated">[0xFF, 0xFE]</target>
        </trans-unit>
        <trans-unit id="bb90d949090bdc87a5ffc85a1d4fc7c9359636ac" translate="yes" xml:space="preserve">
          <source>[1982-01-04T08:59:00 - 2010-07-04T12:00:00)</source>
          <target state="translated">[1982-01-04T08 : 59 : 00-2010-07-04T12 : 00 : 00)</target>
        </trans-unit>
        <trans-unit id="12347dc7f7cdd583255745f9bf967b1b9d33a2bd" translate="yes" xml:space="preserve">
          <source>[EDX,EAX] = [EDX,EAX] / [ECX,EBX] [ECX,EBX] = [EDX,EAX] % [ECX,EBX]</source>
          <target state="translated">[EDX, EAX] = [EDX, EAX] / [ECX, EBX] [ECX, EBX] = [EDX, EAX] % [ECX, EBX]</target>
        </trans-unit>
        <trans-unit id="709899bf392f7ec43be5bb3439c0b80f3583eeb7" translate="yes" xml:space="preserve">
          <source>[EDX,EAX] = [EDX,EAX] / [ECX,EBX] [ECX,EBX] = [EDX,EAX] % [ECX,EBX] ESI,EDI destroyed</source>
          <target state="translated">[EDX, EAX] = [EDX, EAX] / [ECX, EBX] [ECX, EBX] = [EDX, EAX] % [ECX, EBX] ESI, EDI 파괴</target>
        </trans-unit>
        <trans-unit id="455df00305aecd4738e1dab757f8f7993ca6aea1" translate="yes" xml:space="preserve">
          <source>[EDX,EAX],[ECX,EBX]</source>
          <target state="translated">[EDX,EAX],[ECX,EBX]</target>
        </trans-unit>
        <trans-unit id="ddaf8db003092aa758759000f6bb7ea6319f5293" translate="yes" xml:space="preserve">
          <source>[January 5th, 2010 - March 10th, 2010)</source>
          <target state="translated">[2010 년 1 월 5 일-2010 년 3 월 10 일)</target>
        </trans-unit>
        <trans-unit id="5850d1834e46e1a5b7ad928ccc67bc19e466e16b" translate="yes" xml:space="preserve">
          <source>[The GC modules defining the interface (gc.interface) and registration (gc.registry) are currently not public and are subject to change from version to version. Add an import search path to the druntime/src path to compile the example.]</source>
          <target state="translated">[인터페이스 (gc.interface) 및 등록 (gc.registry)을 정의하는 GC 모듈은 현재 공개되지 않으며 버전에 따라 변경 될 수 있습니다. 예제를 컴파일하기 위해 가져 오기 검색 경로를 druntime / src 경로에 추가하십시오.]</target>
        </trans-unit>
        <trans-unit id="4b954678c0799d6d81c056360b3a7adde81fe086" translate="yes" xml:space="preserve">
          <source>[^class]</source>
          <target state="translated">[^class]</target>
        </trans-unit>
        <trans-unit id="4c30f6694055256fdec9df696d7c787e9f238f82" translate="yes" xml:space="preserve">
          <source>[a||b], [a--b], [a~~b], [a&amp;amp;&amp;amp;b]</source>
          <target state="translated">[a || b], [a--b], [a ~~ b], [a &amp;amp;&amp;amp; b]</target>
        </trans-unit>
        <trans-unit id="045361a9242bfbdf1bdd2d8c5cd510cfe86f0507" translate="yes" xml:space="preserve">
          <source>[class]</source>
          <target state="translated">[class]</target>
        </trans-unit>
        <trans-unit id="a30e2891772edb4c8ba0ee9b73303175b2f0cd07" translate="yes" xml:space="preserve">
          <source>[mixin] template Identifier (parameters) [Constraint] &lt;a href=&quot;https://dlang.org/spec/template.html&quot;&gt;https://dlang.org/spec/template.html&lt;/a&gt;&lt;a href=&quot;https://dlang.org/spec/template-mixin.html&quot;&gt;https://dlang.org/spec/template-mixin.html&lt;/a&gt;</source>
          <target state="translated">[mixin] 템플릿 식별자 (매개 변수) [제약] &lt;a href=&quot;https://dlang.org/spec/template.html&quot;&gt;https://dlang.org/spec/template.html &lt;/a&gt;&lt;a href=&quot;https://dlang.org/spec/template-mixin.html&quot;&gt;https://dlang.org/spec/template-mixin.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cbd929c7ee2a6fff2837e3fb05eb9e6b1989986" translate="yes" xml:space="preserve">
          <source>[special case]</source>
          <target state="translated">[특별한 상황]</target>
        </trans-unit>
        <trans-unit id="95bc0dc370dc108367da33cf82301a753f2e319e" translate="yes" xml:space="preserve">
          <source>\B</source>
          <target state="translated">\B</target>
        </trans-unit>
        <trans-unit id="685fbb74df34ffbf7cb2576e295a8f2797a5c326" translate="yes" xml:space="preserve">
          <source>\D</source>
          <target state="translated">\D</target>
        </trans-unit>
        <trans-unit id="19784d22d82960d909c15c3197ac197f3f69df53" translate="yes" xml:space="preserve">
          <source>\P{Cyrillic}</source>
          <target state="translated">\P{Cyrillic}</target>
        </trans-unit>
        <trans-unit id="511b3dde8cf5b068533868bfe0a22b8e3fd6110e" translate="yes" xml:space="preserve">
          <source>\P{InBasicLatin}</source>
          <target state="translated">\P{InBasicLatin}</target>
        </trans-unit>
        <trans-unit id="e3d5456e0206a6f9d998d4a70a59a08724f2fbdc" translate="yes" xml:space="preserve">
          <source>\P{PropertyName}</source>
          <target state="translated">\P{PropertyName}</target>
        </trans-unit>
        <trans-unit id="cb092f062604c51a9863ba0cb5f29f5cc676fa1d" translate="yes" xml:space="preserve">
          <source>\S</source>
          <target state="translated">\S</target>
        </trans-unit>
        <trans-unit id="e2cf00aa1ca687b794ccd3e7ad1cd3f95b155126" translate="yes" xml:space="preserve">
          <source>\U00YYYYYY</source>
          <target state="translated">\U00YYYYYY</target>
        </trans-unit>
        <trans-unit id="dd763376ee8ab23121ea96f020a65565c5e68687" translate="yes" xml:space="preserve">
          <source>\W</source>
          <target state="translated">\W</target>
        </trans-unit>
        <trans-unit id="9e94758983980504af303ef297fd2bf9d9cea063" translate="yes" xml:space="preserve">
          <source>\\</source>
          <target state="translated">\\</target>
        </trans-unit>
        <trans-unit id="4629ca1b60e263bdc4326334b23323e0434717a5" translate="yes" xml:space="preserve">
          <source>\b</source>
          <target state="translated">\b</target>
        </trans-unit>
        <trans-unit id="9d84dff8df5bc5872e07f8bc4fd5c30d118c579e" translate="yes" xml:space="preserve">
          <source>\c , where c is any character</source>
          <target state="translated">\ c, 여기서 c는 모든 문자입니다</target>
        </trans-unit>
        <trans-unit id="28bc53053f1b821cbb584b3e67bb0cf54eaaee23" translate="yes" xml:space="preserve">
          <source>\c where c is one of [|*+?()</source>
          <target state="translated">\ c 여기서 c는 [| * +? () 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="e99e482dfabaf62459df1d07f2b8b140105afe46" translate="yes" xml:space="preserve">
          <source>\cC</source>
          <target state="translated">\cC</target>
        </trans-unit>
        <trans-unit id="caf5b0b18d08106e7f87e99a2da9940d43b46e3b" translate="yes" xml:space="preserve">
          <source>\d</source>
          <target state="translated">\d</target>
        </trans-unit>
        <trans-unit id="794a729d2e4ffbb094fec03ae9b3acd219371385" translate="yes" xml:space="preserve">
          <source>\f</source>
          <target state="translated">\f</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="ebe4d41e923a479329d1012ecceef8319b97bfe6" translate="yes" xml:space="preserve">
          <source>\p{Cyrillic}</source>
          <target state="translated">\p{Cyrillic}</target>
        </trans-unit>
        <trans-unit id="6ba94b4fb31f1afec11f9809b329845de27c9bb8" translate="yes" xml:space="preserve">
          <source>\p{InBasicLatin}</source>
          <target state="translated">\p{InBasicLatin}</target>
        </trans-unit>
        <trans-unit id="c0ab0ae964aa381825b8b94bb5a7bb07c1a5bbdc" translate="yes" xml:space="preserve">
          <source>\p{PropertyName}</source>
          <target state="translated">\p{PropertyName}</target>
        </trans-unit>
        <trans-unit id="f12c84902108895980702c88db900ceea2d2ec01" translate="yes" xml:space="preserve">
          <source>\r</source>
          <target state="translated">\r</target>
        </trans-unit>
        <trans-unit id="e1c702e348504013ae2a1faa8cec6a558f9315a8" translate="yes" xml:space="preserve">
          <source>\s</source>
          <target state="translated">\s</target>
        </trans-unit>
        <trans-unit id="8bf81043e29dfc96a6fe1f30f7116f552de6e7d7" translate="yes" xml:space="preserve">
          <source>\t</source>
          <target state="translated">\t</target>
        </trans-unit>
        <trans-unit id="f2cc6fc9ff8093a6d4713d7baac4f64b490f9732" translate="yes" xml:space="preserve">
          <source>\uXXXX</source>
          <target state="translated">\uXXXX</target>
        </trans-unit>
        <trans-unit id="d5d0ebb2740b3e81b5cce512a169118a280bb8cb" translate="yes" xml:space="preserve">
          <source>\v</source>
          <target state="translated">\v</target>
        </trans-unit>
        <trans-unit id="84a1312a8a946a90cf99ad056ddaeb081ebe238e" translate="yes" xml:space="preserve">
          <source>\w</source>
          <target state="translated">\w</target>
        </trans-unit>
        <trans-unit id="3ae3339d3df42bd81574a61520ae7ec1b26f3f20" translate="yes" xml:space="preserve">
          <source>\xXX</source>
          <target state="translated">\xXX</target>
        </trans-unit>
        <trans-unit id="4ff447b8ef42ca51fa6fb287bed8d40f49be58f1" translate="yes" xml:space="preserve">
          <source>]</source>
          <target state="translated">]</target>
        </trans-unit>
        <trans-unit id="2c1dc11960c9d5c8367226c4452cef60c46ae64b" translate="yes" xml:space="preserve">
          <source>], and sub-sequences are denoted by the slicing syntax.</source>
          <target state="translated">], 하위 시퀀스는 슬라이싱 구문으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5e6f80a34a9798cafc6a5db96cc57ba4c4db59c2" translate="yes" xml:space="preserve">
          <source>^</source>
          <target state="translated">^</target>
        </trans-unit>
        <trans-unit id="980c4ab611293347dac0eddbf024ca3da40ebfb9" translate="yes" xml:space="preserve">
          <source>_N2 &lt;strong id=&quot;strings&quot;&gt;strings&lt;/strong&gt;;</source>
          <target state="translated">_N2 &lt;strong id=&quot;strings&quot;&gt;문자열&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5a5dc3120fd3d083305057a37451ec087d1ec206" translate="yes" xml:space="preserve">
          <source>_N31 &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt;;</source>
          <target state="translated">_N31 &lt;strong id=&quot;data&quot;&gt;데이터&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6b416a55cf8bb5b155da033be92758ef2f0fd324" translate="yes" xml:space="preserve">
          <source>_Unwind_Action &lt;code&gt;actions&lt;/code&gt;</source>
          <target state="translated">_Unwind_Action &lt;code&gt;actions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6120ca07385a9d02cca9d20e846a6c4107396652" translate="yes" xml:space="preserve">
          <source>_Unwind_Context* &lt;code&gt;context&lt;/code&gt;</source>
          <target state="translated">_Unwind_Context * &lt;code&gt;context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="602b6e0399b5d74ad3f9037cbe913543b4f9dd5f" translate="yes" xml:space="preserve">
          <source>_Unwind_Exception* &lt;code&gt;eo&lt;/code&gt;</source>
          <target state="translated">_Unwind_Exception * &lt;code&gt;eo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="554e3b632e56d6f1df6dfc8b8a2101dfa9a092b7" translate="yes" xml:space="preserve">
          <source>_Unwind_Exception* &lt;code&gt;exceptionObject&lt;/code&gt;</source>
          <target state="translated">_Unwind_Exception * &lt;code&gt;exceptionObject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4210dabc2a56c810c242f98f93364e5a2ac2a25a" translate="yes" xml:space="preserve">
          <source>_Unwind_Exception_Class &lt;code&gt;exceptionClass&lt;/code&gt;</source>
          <target state="translated">_Unwind_Exception_Class &lt;code&gt;exceptionClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="792273665f4652968e51ebb49f54e805c90d1ed5" translate="yes" xml:space="preserve">
          <source>_Unwind_Ptr &lt;code&gt;ip&lt;/code&gt;</source>
          <target state="translated">_Unwind_Ptr &lt;code&gt;ip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d154c3f701d36b2cec3d162fa56a26b218612d55" translate="yes" xml:space="preserve">
          <source>_Unwind_Ptr &lt;code&gt;landingPad&lt;/code&gt;</source>
          <target state="translated">_Unwind_Ptr &lt;code&gt;landingPad&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c675061e0d8b288a6134cf2588857468b008450a" translate="yes" xml:space="preserve">
          <source>_Unwind_Reason_Code &lt;strong id=&quot;__dmd_personality_v0&quot;&gt;__dmd_personality_v0&lt;/strong&gt;(int ver, _Unwind_Action actions, _Unwind_Exception_Class exceptionClass, _Unwind_Exception* exceptionObject, _Unwind_Context* context);</source>
          <target state="translated">_Unwind_Reason_Code &lt;strong id=&quot;__dmd_personality_v0&quot;&gt;__dmd_personality_v0&lt;/strong&gt; (int ver, _Unwind_Action 작업, _Unwind_Exception_Class exceptionClass, _Unwind_Exception * exceptionObject, _Unwind_Context * 컨텍스트);</target>
        </trans-unit>
        <trans-unit id="9072ddffb62ae60ff34ae70b7030371d0c03ad0d" translate="yes" xml:space="preserve">
          <source>_sleb128_t &lt;strong id=&quot;sLEB128&quot;&gt;sLEB128&lt;/strong&gt;(const(ubyte)** p);</source>
          <target state="translated">_sleb128_t &lt;strong id=&quot;sLEB128&quot;&gt;sLEB128&lt;/strong&gt; (const (ubyte) ** p);</target>
        </trans-unit>
        <trans-unit id="b7419a423f2fcfe5cd1de6e9080bcb6d2faec43e" translate="yes" xml:space="preserve">
          <source>_traits(identifier, args...)</source>
          <target state="translated">_traits (식별자, 인수 ...)</target>
        </trans-unit>
        <trans-unit id="2c3a07fac6fc35e6943846630c3e1cd773d7e32d" translate="yes" xml:space="preserve">
          <source>_uleb128_t &lt;strong id=&quot;uLEB128&quot;&gt;uLEB128&lt;/strong&gt;(const(ubyte)** p);</source>
          <target state="translated">_uleb128_t &lt;strong id=&quot;uLEB128&quot;&gt;uLEB128&lt;/strong&gt; (const (ubyte) ** p);</target>
        </trans-unit>
        <trans-unit id="5259a4315957e9c1db2618c0f2d7fe150b69556c" translate="yes" xml:space="preserve">
          <source>`0`</source>
          <target state="translated">`0`</target>
        </trans-unit>
        <trans-unit id="267a4bb6f51ed35da54f9fb95b42688147432a5a" translate="yes" xml:space="preserve">
          <source>`AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="3fb8a6fec0a41da3ce9dc667372b3c3e5fcc056d" translate="yes" xml:space="preserve">
          <source>`AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="4b09a4ccee1998b0b223e05f91d954fcd0746599" translate="yes" xml:space="preserve">
          <source>`AllocFlag.hasNoIndirections`</source>
          <target state="translated">`AllocFlag.hasNoIndirections`</target>
        </trans-unit>
        <trans-unit id="1e7a4b101ab0d46e83e3df2c788c1202fea02588" translate="yes" xml:space="preserve">
          <source>`AllocFlag.immutableShared | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.immutableShared | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="95ee7f2e0af8ea1b26858a0e24b13ac2a35d5e89" translate="yes" xml:space="preserve">
          <source>`AllocFlag.immutableShared | AllocFlag.hasNoIndirections`</source>
          <target state="translated">`AllocFlag.immutableShared | AllocFlag.hasNoIndirections`</target>
        </trans-unit>
        <trans-unit id="9226bfc311c2934df8a67406986e1fae35e0d1e2" translate="yes" xml:space="preserve">
          <source>`AllocFlag.immutableShared`</source>
          <target state="translated">`AllocFlag.immutableShared`</target>
        </trans-unit>
        <trans-unit id="8ffb013f2c91e1792124ee48ad9e8399f986d95f" translate="yes" xml:space="preserve">
          <source>`AllocFlag.threadLocal | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</source>
          <target state="translated">`AllocFlag.threadLocal | AllocFlag.hasNoIndirections | AllocFlag.fixedSize`</target>
        </trans-unit>
        <trans-unit id="39c79680debfe2439708064e798d03d1ba1d9f52" translate="yes" xml:space="preserve">
          <source>`AllocFlag.threadLocal | AllocFlag.hasNoIndirections`</source>
          <target state="translated">`AllocFlag.threadLocal | AllocFlag.hasNoIndirections`</target>
        </trans-unit>
        <trans-unit id="07b48c6da1bc77296f0bcd6675397ce85fd60f8b" translate="yes" xml:space="preserve">
          <source>`AllocFlag.threadLocal`</source>
          <target state="translated">`AllocFlag.threadLocal`</target>
        </trans-unit>
        <trans-unit id="93b7aad5da37a53762dc7ee6a72c8493e2857ab7" translate="yes" xml:space="preserve">
          <source>`Ternary empty();`</source>
          <target state="translated">`테너 리 빈 ();`</target>
        </trans-unit>
        <trans-unit id="30e090b60af63e8d6bccaa51660ec51ef8cf21df" translate="yes" xml:space="preserve">
          <source>`Ternary owns(void[] b);`</source>
          <target state="translated">`Ternary owns (void [] b);`</target>
        </trans-unit>
        <trans-unit id="11a952ce8951413a7965d2ef58f8668e085709d5" translate="yes" xml:space="preserve">
          <source>`Ternary resolveInternalPointer(void* p, ref void[] result);`</source>
          <target state="translated">`Ternary resolveInternalPointer (void * p, ref void [] 결과);`</target>
        </trans-unit>
        <trans-unit id="b293daf2b94fcecc6d941d7fd9a963fabb2f414a" translate="yes" xml:space="preserve">
          <source>`UUID.Variant`</source>
          <target state="translated">`UUID.Variant`</target>
        </trans-unit>
        <trans-unit id="612e57ee3eda41877d759b9338ff3aa24f00d43f" translate="yes" xml:space="preserve">
          <source>`UUID.Version`</source>
          <target state="translated">`UUID.Version`</target>
        </trans-unit>
        <trans-unit id="67cae93829c730c322b7fcf354b743041c305a6d" translate="yes" xml:space="preserve">
          <source>`bool alignedReallocate(ref void[] b,</source>
          <target state="translated">`boolalignReallocate (ref void [] b,</target>
        </trans-unit>
        <trans-unit id="2eb1c73d19a8284e71ebbfe525c77ffa32126ed3" translate="yes" xml:space="preserve">
          <source>`bool deallocate(void[] b);`</source>
          <target state="translated">`bool deallocate (void [] b);`</target>
        </trans-unit>
        <trans-unit id="4ba14ab4f841b3304bd9a4feb1e38bd47e64d895" translate="yes" xml:space="preserve">
          <source>`bool deallocateAll();`</source>
          <target state="translated">`bool deallocateAll ();`</target>
        </trans-unit>
        <trans-unit id="13a6aa7488cf2ff21c19c58f6d92c530fea1a259" translate="yes" xml:space="preserve">
          <source>`bool expand(ref void[] b, size_t delta);`</source>
          <target state="translated">`bool expand (ref void [] b, size_t 델타);`</target>
        </trans-unit>
        <trans-unit id="406b79125a607cf78944c45500dd31b422545453" translate="yes" xml:space="preserve">
          <source>`bool reallocate(ref void[] b, size_t s);`</source>
          <target state="translated">`bool 재 할당 (ref void [] b, size_t s);`</target>
        </trans-unit>
        <trans-unit id="cfdd2f2491b2c295432df1370b4c458ff823fef8" translate="yes" xml:space="preserve">
          <source>`size_t goodAllocSize(size_t n);`</source>
          <target state="translated">`size_t goodAllocSize (size_t n);`</target>
        </trans-unit>
        <trans-unit id="801bd6813aa4c0330dcf2056e10b3533a1352a81" translate="yes" xml:space="preserve">
          <source>`static Allocator instance;`</source>
          <target state="translated">`정적 할당 자 인스턴스;`</target>
        </trans-unit>
        <trans-unit id="ad28a9b1fb797def73cae78fdd852227fd7d7573" translate="yes" xml:space="preserve">
          <source>`uint alignment;`</source>
          <target state="translated">`정렬 정렬;`</target>
        </trans-unit>
        <trans-unit id="0c6332d76bec808ed786689c706ba08b1b302fbf" translate="yes" xml:space="preserve">
          <source>`void[] alignedAllocate(size_t s, uint a);`</source>
          <target state="translated">`void [] alignAllocate (size_t s, uint a);`</target>
        </trans-unit>
        <trans-unit id="f0b1271584aa3408a331061f5d648e112b7efce9" translate="yes" xml:space="preserve">
          <source>`void[] allocate(size_t s);`</source>
          <target state="translated">`void [] assign (size_t s);`</target>
        </trans-unit>
        <trans-unit id="75ef97c368705919d5757541da49a9d741b5cc8f" translate="yes" xml:space="preserve">
          <source>`void[] allocateAll();`</source>
          <target state="translated">`void [] assignAll ();`</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="4e1df7712d667e3c4f7c2ae7d664f5e6185a68c1" translate="yes" xml:space="preserve">
          <source>a &amp;cap; b</source>
          <target state="translated">a &amp;cap; b</target>
        </trans-unit>
        <trans-unit id="071b68afd90173dc93c649c6c0bf3a80778f2074" translate="yes" xml:space="preserve">
          <source>a &amp;cup; b</source>
          <target state="translated">a &amp;cup; b</target>
        </trans-unit>
        <trans-unit id="49e4ed45006b0ed737f3ead37d6f12ffe51e71c7" translate="yes" xml:space="preserve">
          <source>a .. z</source>
          <target state="translated">.. z</target>
        </trans-unit>
        <trans-unit id="ec2f0d57fb7ffa20b86457d77672259e646844d0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#FileAndLines&quot;&gt;&lt;code&gt;FileAndLines&lt;/code&gt;&lt;/a&gt; object containing a line-by-line representation of the requested file</source>
          <target state="translated">요청 된 파일의 라인 별 표현을 포함 하는 &lt;a href=&quot;#FileAndLines&quot;&gt; &lt;code&gt;FileAndLines&lt;/code&gt; &lt;/a&gt; 객체</target>
        </trans-unit>
        <trans-unit id="ae003014da05dd328a0259aef2b40c1543a1bb05" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;expression#NewExpression&quot;&gt;&lt;i&gt;NewExpression&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;expression#NewExpression&quot;&gt;&lt;i&gt;NewExpression&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67149728bff457d4ca064189aebe0b9345430db2" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt; or &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;양방향 범위&lt;/a&gt; 또는 &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;입력 범위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8653df1e136899ee0cf91e4ff780365e4ac2cea" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt; with a length member</source>
          <target state="translated">길이 멤버가 있는 &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;양방향 범위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e805b2a3b236f9cd9bf9c0d39f55509179e3c3e0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;bidirectional range&lt;/a&gt; with either swappable elements, a random access range with a length member, or a narrow string</source>
          <target state="translated">교환 가능한 요소, 길이 멤버가있는 임의 액세스 범위 또는 좁은 문자열이 있는 &lt;a href=&quot;std_range_primitives#isBidirectionalRange&quot;&gt;양방향 범위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df8045e3f2cce8b905eed1d3c80cebe099149916" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;forward range&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;std_range_primitives#isForwardRange&quot;&gt;전진 기어&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f42a1354e42c927e608012b3a9c367c38fefb573" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;Nullable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Nullable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49695019b9966fa00d02e848d13d2ef54c1e8a9d" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;RegexMatch&lt;/code&gt; object holding engine state after first match.</source>
          <target state="translated">첫 번째 일치 후 엔진 상태를 유지 하는 &lt;code&gt;RegexMatch&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="b757888337c73f1c546ccc04a483b659909fa89c" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;bool&lt;/code&gt; indicating if the hook is present.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 고리가 존재하는 경우를 나타내는.</target>
        </trans-unit>
        <trans-unit id="5bc54aa30d63c6f7fea044ddc457725de4aee66c" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;dchar[]&lt;/code&gt;, &lt;code&gt;const(dchar)[]&lt;/code&gt;, or &lt;code&gt;immutable(dchar)[]&lt;/code&gt; depending on the constness of the input.</source>
          <target state="translated">&lt;code&gt;dchar[]&lt;/code&gt; , &lt;code&gt;const(dchar)[]&lt;/code&gt; , 또는 &lt;code&gt;immutable(dchar)[]&lt;/code&gt; 입력의 const와에 따라.</target>
        </trans-unit>
        <trans-unit id="03839dca8b9b692ac1d7aee42852db8c332f295b" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;string&lt;/code&gt; or a callable</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 또는 호출</target>
        </trans-unit>
        <trans-unit id="cb872c0d9ef96cb3322219e41f6eeac0ec3c5d02" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;string&lt;/code&gt;, a &lt;code&gt;wstring&lt;/code&gt; or a &lt;code&gt;dstring&lt;/code&gt;, according to the type of hexData.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 하는 &lt;code&gt;wstring&lt;/code&gt; 또는 &lt;code&gt;dstring&lt;/code&gt; hexData의 종류에 따라.</target>
        </trans-unit>
        <trans-unit id="ccc866ad6800cdbcc2ca4cdacd252f4481d61e0c" translate="yes" xml:space="preserve">
          <source>a D identifier to include scope and type information.</source>
          <target state="translated">범위 및 유형 정보를 포함하는 D 식별자</target>
        </trans-unit>
        <trans-unit id="fe7ef2f63d5ee004ed09501c1595fd5181fbc14f" translate="yes" xml:space="preserve">
          <source>a Range with all of range except element at the start and end</source>
          <target state="translated">시작과 끝의 요소를 제외한 모든 범위의 범위</target>
        </trans-unit>
        <trans-unit id="4dec9368b24007f8419ebfa9246f664978da71b0" translate="yes" xml:space="preserve">
          <source>a SwapStrategy to determine if the original order needs to be preserved</source>
          <target state="translated">원래 주문을 보존해야하는지 확인하기위한 SwapStrategy</target>
        </trans-unit>
        <trans-unit id="790c4b14baf27505558b4b6b645315ca29ca6346" translate="yes" xml:space="preserve">
          <source>a bidirectional ranges with lvalue elements or mutable character arrays</source>
          <target state="translated">lvalue 요소 또는 가변 문자 배열이있는 양방향 범위</target>
        </trans-unit>
        <trans-unit id="0a5fa2340fb556380d5d778923f9c24f91575b85" translate="yes" xml:space="preserve">
          <source>a bit number, starting with bit 0 of p[0], and progressing. It addresses bits like the expression:</source>
          <target state="translated">p [0]의 비트 0으로 시작하고 진행하는 비트 번호. 표현식과 같은 비트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="0ad06a6379ceb4cf2d26d3dbe64014c3bc0b2638" translate="yes" xml:space="preserve">
          <source>a block of 16 to 256 bytes has an 8-bit length.</source>
          <target state="translated">16-256 바이트의 블록은 8 비트 길이입니다.</target>
        </trans-unit>
        <trans-unit id="636382d53c33f221bc93820c5da3d45d8e582a11" translate="yes" xml:space="preserve">
          <source>a block with 512 to pagesize/2 bytes has a 16-bit length.</source>
          <target state="translated">512에서 페이지 크기 / 2 바이트까지의 블록은 16 비트 길이입니다.</target>
        </trans-unit>
        <trans-unit id="63dc84cfb488be56164093a4bdcd03d2b1298666" translate="yes" xml:space="preserve">
          <source>a callable object whose opCall takes at least 1 object</source>
          <target state="translated">opCall이 최소한 1 개의 객체를 취하는 콜 러블 객체</target>
        </trans-unit>
        <trans-unit id="daf6a6b6706d9d1ca73d83fb14a03265f1cf1b22" translate="yes" xml:space="preserve">
          <source>a complete asm {} block</source>
          <target state="translated">완전한 asm {} 블록</target>
        </trans-unit>
        <trans-unit id="b8f7f3e0729ccf7a3ebdd043ba13f0117f857481" translate="yes" xml:space="preserve">
          <source>a complex number of two float values</source>
          <target state="translated">두 개의 float 값의 복소수</target>
        </trans-unit>
        <trans-unit id="1ec824306b3c33dafba3a2181e71d12cbd804cc9" translate="yes" xml:space="preserve">
          <source>a consistent look and feel for the contracts</source>
          <target state="translated">계약에 대한 일관된 모양과 느낌</target>
        </trans-unit>
        <trans-unit id="e1eb7a00f854554d82c47e43291ee8679e31edcf" translate="yes" xml:space="preserve">
          <source>a copy</source>
          <target state="translated">사본</target>
        </trans-unit>
        <trans-unit id="1f7130e75c49486ef081e7c892a20ab1a931a5f6" translate="yes" xml:space="preserve">
          <source>a definition</source>
          <target state="translated">정의</target>
        </trans-unit>
        <trans-unit id="922b5e213dee1219392e6ee5619bc4fdb3e0bc7a" translate="yes" xml:space="preserve">
          <source>a delegate that is not shared.</source>
          <target state="translated">공유되지 않은 대리인</target>
        </trans-unit>
        <trans-unit id="f854768186923f7ab92a02bc0db7eb9d81722d8b" translate="yes" xml:space="preserve">
          <source>a delegate.</source>
          <target state="translated">대의원.</target>
        </trans-unit>
        <trans-unit id="c6795ac04025149e8c2d9c07896a810980a6522c" translate="yes" xml:space="preserve">
          <source>a finite &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;</source>
          <target state="translated">유한 &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;입력 범위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e34e8650151d2e3fda4c7ae9b869ad4bdf0b9cb" translate="yes" xml:space="preserve">
          <source>a finite bidirectional range of any character type</source>
          <target state="translated">모든 문자 유형의 유한 양방향 범위</target>
        </trans-unit>
        <trans-unit id="68abf41f49f9c1433888d21a08ac5fa8fbbdb47e" translate="yes" xml:space="preserve">
          <source>a finite input range</source>
          <target state="translated">유한 입력 범위</target>
        </trans-unit>
        <trans-unit id="d49aa2609891c0f3d30106ea282a31ceae46796c" translate="yes" xml:space="preserve">
          <source>a finite range of unsigned integers</source>
          <target state="translated">유한 범위의 부호없는 정수</target>
        </trans-unit>
        <trans-unit id="649db5f4a21a97229739d0662f4a3ae8d0e38718" translate="yes" xml:space="preserve">
          <source>a floating point number.</source>
          <target state="translated">부동 소수점 숫자</target>
        </trans-unit>
        <trans-unit id="487c373e88007c86b23b353a4b50b852df4b0953" translate="yes" xml:space="preserve">
          <source>a floating point type</source>
          <target state="translated">부동 소수점 유형</target>
        </trans-unit>
        <trans-unit id="c090c8bd507efb6e4ca04287da9914ef2a0aab27" translate="yes" xml:space="preserve">
          <source>a forward range of characters</source>
          <target state="translated">앞으로 문자 범위</target>
        </trans-unit>
        <trans-unit id="628ce63ede2a327909956ecaf8cccfa6ce999af7" translate="yes" xml:space="preserve">
          <source>a function operating on the content of the nullable</source>
          <target state="translated">널 입력 가능 컨텐츠에서 작동하는 함수</target>
        </trans-unit>
        <trans-unit id="91112f1aadba820ad445ebe615d0547a6acfe8b0" translate="yes" xml:space="preserve">
          <source>a function parameter, type, D keyword, etc. To prevent unintended emphasis of an identifier, it can be preceded by an underscore (_). The underscore will be stripped from the output.</source>
          <target state="translated">함수 매개 변수, 유형, D 키워드 등. 의도하지 않은 식별자 강조를 방지하기 위해 앞에 밑줄 (_)을 붙일 수 있습니다. 밑줄이 출력에서 ​​제거됩니다.</target>
        </trans-unit>
        <trans-unit id="d4d5a7e70378b636e3b00c3a1822d9583ac5bc54" translate="yes" xml:space="preserve">
          <source>a function pointer or an aggregate type with &lt;code&gt;opCall&lt;/code&gt; defined.</source>
          <target state="translated">&lt;code&gt;opCall&lt;/code&gt; 이 정의 된 함수 포인터 또는 집계 유형</target>
        </trans-unit>
        <trans-unit id="8e2a09a27fb8ee8761906aa158f3dff9b9712b43" translate="yes" xml:space="preserve">
          <source>a function taking at least one argument</source>
          <target state="translated">적어도 하나의 인수를 취하는 함수</target>
        </trans-unit>
        <trans-unit id="a97bc5020979027c4ffda324639c732aacaf23f9" translate="yes" xml:space="preserve">
          <source>a gzip file format header</source>
          <target state="translated">gzip 파일 형식 헤더</target>
        </trans-unit>
        <trans-unit id="0100dfab5b820f9c81dcbadcd39369be91bb4fbb" translate="yes" xml:space="preserve">
          <source>a human readable representation of &lt;code&gt;kind&lt;/code&gt;</source>
          <target state="translated">인간이 읽을 수있는 &lt;code&gt;kind&lt;/code&gt; 표현</target>
        </trans-unit>
        <trans-unit id="f00a7a0ee8c70534bf8c96dc229c15d465e64551" translate="yes" xml:space="preserve">
          <source>a human readable representation of &lt;code&gt;mod&lt;/code&gt;, which is the token &lt;code&gt;mod&lt;/code&gt; corresponds to</source>
          <target state="translated">사람이 읽을 수있는 &lt;code&gt;mod&lt;/code&gt; 표현 , 토큰 &lt;code&gt;mod&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="5e16d75f43a42130dbe18bac0e7c29b365988d9a" translate="yes" xml:space="preserve">
          <source>a human readable representation of &lt;code&gt;trust&lt;/code&gt;, which is the token &lt;code&gt;trust&lt;/code&gt; corresponds to</source>
          <target state="translated">인간이 읽을 수있는 &lt;code&gt;trust&lt;/code&gt; 표현 , 토큰 &lt;code&gt;trust&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="8167707979440f9b27a1db55e9e9db99b20d954a" translate="yes" xml:space="preserve">
          <source>a lazy range of the center justified result</source>
          <target state="translated">중심 정당화 결과의 게으른 범위</target>
        </trans-unit>
        <trans-unit id="05849852a3c615b71ba6ebcb2db90ff95a3557ec" translate="yes" xml:space="preserve">
          <source>a lazy range of the left justified result</source>
          <target state="translated">왼쪽 정당화 결과의 게으른 범위</target>
        </trans-unit>
        <trans-unit id="c4599ab7eb80f5e32e3d6d14e21939b828f66f92" translate="yes" xml:space="preserve">
          <source>a lazy range of the right justified result</source>
          <target state="translated">정당한 정당한 결과의 게으른 범위</target>
        </trans-unit>
        <trans-unit id="9c1679fa6fa9482337c5d92d57681f9c86acf627" translate="yes" xml:space="preserve">
          <source>a nested anonymous metaclass for classes declared with &lt;code&gt;extern (Objective-C)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern (Objective-C)&lt;/code&gt; 으로 선언 된 클래스의 중첩 된 익명 메타 클래스</target>
        </trans-unit>
        <trans-unit id="e9e7456a88ad947c20708de6829d3c61458d1076" translate="yes" xml:space="preserve">
          <source>a new &lt;code&gt;Address&lt;/code&gt; object for the current address family.</source>
          <target state="translated">현재의 주소 패밀리 의 새로운 &lt;code&gt;Address&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="389c91bb51f9cfa0458917dcf2eb2a1ff107b745" translate="yes" xml:space="preserve">
          <source>a new CURLM handle to use in all 'curl_multi' functions.</source>
          <target state="translated">모든 'curl_multi'함수에서 사용할 새로운 CURLM 핸들</target>
        </trans-unit>
        <trans-unit id="c8bf750c22c80e55f24830fe1a75e1fa0f055664" translate="yes" xml:space="preserve">
          <source>a new side effect part will be appended to it.</source>
          <target state="translated">새로운 부작용 부분이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b37cc0fa9addd5bd99cc71f9847e07ad4b2bc47d" translate="yes" xml:space="preserve">
          <source>a newly allocated &lt;code&gt;Token&lt;/code&gt;.</source>
          <target state="translated">새로 할당 된 &lt;code&gt;Token&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7d797e7c7c0fe19dbbff1d234c07a6b85bc4643" translate="yes" xml:space="preserve">
          <source>a newly allocated variable that can be added to the global environment</source>
          <target state="translated">글로벌 환경에 추가 할 수있는 새로 할당 된 변수</target>
        </trans-unit>
        <trans-unit id="d56871548a1832d8b03d7d36fc3c0cb1e15b54d3" translate="yes" xml:space="preserve">
          <source>a non-NULL pointer to an array of size_ts.</source>
          <target state="translated">size_ts 배열에 대한 NULL이 아닌 포인터</target>
        </trans-unit>
        <trans-unit id="26e785e0e12b9301f27f6129c0d1e3732f421ad8" translate="yes" xml:space="preserve">
          <source>a parameter list or an &lt;a href=&quot;std_meta#AliasSeq&quot;&gt;&lt;code&gt;std.meta.AliasSeq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">매개 변수 목록 또는 &lt;a href=&quot;std_meta#AliasSeq&quot;&gt; &lt;code&gt;std.meta.AliasSeq&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b825c2b89a7b65ebd8efbeb9c3c47187195e609" translate="yes" xml:space="preserve">
          <source>a parameter passed to fp.</source>
          <target state="translated">fp에 전달 된 매개 변수</target>
        </trans-unit>
        <trans-unit id="3e8a8c89b9f7d485fe2d176f226a4dc30ac744e9" translate="yes" xml:space="preserve">
          <source>a path to a file or a directory</source>
          <target state="translated">파일 또는 디렉토리의 경로</target>
        </trans-unit>
        <trans-unit id="c004984b0ff8689f0b2c64ba44ddb90f50f87467" translate="yes" xml:space="preserve">
          <source>a path to check (the name is stripped)</source>
          <target state="translated">확인할 경로 (이름이 제거됨)</target>
        </trans-unit>
        <trans-unit id="21fc31a44f9fa0a4c6f9375f5da16bb9ce1c6173" translate="yes" xml:space="preserve">
          <source>a pointer value is read from any part of the memory object graph, which is treated as assignment to whoever receives that pointer</source>
          <target state="translated">포인터 값은 메모리 개체 그래프의 모든 부분에서 읽혀지며 해당 포인터를받는 사람에 대한 할당으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="c0019fae2527fd9881c87f8441e2f7840f60cf59" translate="yes" xml:space="preserve">
          <source>a predicate that splits the range when it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">그것을 반환 할 때 범위를 분할하는 술어 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33fae92b0643fcbc5277050bf157e00e0f69167e" translate="yes" xml:space="preserve">
          <source>a priori</source>
          <target state="translated">선험적으로</target>
        </trans-unit>
        <trans-unit id="1a9f0ea3e7ef5961f2d620fe43278ed03a639dae" translate="yes" xml:space="preserve">
          <source>a random access range of the transformed path</source>
          <target state="translated">변환 된 경로의 랜덤 액세스 범위</target>
        </trans-unit>
        <trans-unit id="2fee2e73aec51a47416d4a6e2e9d67b9648bd826" translate="yes" xml:space="preserve">
          <source>a random access range that has the &lt;code&gt;length&lt;/code&gt; property defined</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 속성이 정의 된 임의 접근 범위</target>
        </trans-unit>
        <trans-unit id="92f30b65c6a221f4d486b1bbcdb830a23b98aa20" translate="yes" xml:space="preserve">
          <source>a random access range with length and slicing</source>
          <target state="translated">길이와 슬라이싱이있는 임의 접근 범위</target>
        </trans-unit>
        <trans-unit id="1d179652a4e158dfbeff3f1f10cd49dd3f21a551" translate="yes" xml:space="preserve">
          <source>a range containing the consecutive reduced values.</source>
          <target state="translated">연속 감소 값을 포함하는 범위</target>
        </trans-unit>
        <trans-unit id="e2781d63293139e2556f24c205b5ad27ae1c76e2" translate="yes" xml:space="preserve">
          <source>a range of key/values for &lt;code&gt;aa&lt;/code&gt;.</source>
          <target state="translated">위한 키 / 값의 범위 &lt;code&gt;aa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43a5a343a2251882995e76e970a8af071e6d7d85" translate="yes" xml:space="preserve">
          <source>a range with swappable elements</source>
          <target state="translated">교환 가능한 요소가있는 범위</target>
        </trans-unit>
        <trans-unit id="b17d5c73af540a000b6f6e63479eac11de1d82a0" translate="yes" xml:space="preserve">
          <source>a range with the substitutions replaced.</source>
          <target state="translated">대체가 대체 된 범위</target>
        </trans-unit>
        <trans-unit id="21d0ed1bc8f959e056a89160cb5229a3f37ec952" translate="yes" xml:space="preserve">
          <source>a raw pointer &lt;code&gt;U*&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; is not immutable or shared;</source>
          <target state="translated">원시 포인터 &lt;code&gt;U*&lt;/code&gt; 및 &lt;code&gt;U&lt;/code&gt; 는 변경 불가능하거나 공유되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="79e50baeb3d063611f00a4f43409559f6fc83879" translate="yes" xml:space="preserve">
          <source>a raw pointer &lt;code&gt;U*&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; is not immutable;</source>
          <target state="translated">원시 포인터 &lt;code&gt;U*&lt;/code&gt; 및 &lt;code&gt;U&lt;/code&gt; 는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bb5ae1e2ccaa3affccdf7062f555c80027e1514b" translate="yes" xml:space="preserve">
          <source>a raw pointer &lt;code&gt;U*&lt;/code&gt;;</source>
          <target state="translated">원시 포인터 &lt;code&gt;U*&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="ae375e46ec29a2f0eacc078d3bc2a801bdfc2fdd" translate="yes" xml:space="preserve">
          <source>a reference to a class or interface type &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; is not immutable.</source>
          <target state="translated">클래스 또는 인터페이스 유형 &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;C&lt;/code&gt; 에 대한 참조 는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f19bdd640ead3f29b9c19fdeac686f1cd2fc82cf" translate="yes" xml:space="preserve">
          <source>a reference to a class type &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; is not immutable or shared.</source>
          <target state="translated">클래스 유형 &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;C&lt;/code&gt; 에 대한 참조 는 변경 불가능하거나 공유되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7d75434c0735e6afa0aa79ebfddfaaffcd35e59c" translate="yes" xml:space="preserve">
          <source>a reference to a class type &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">클래스에 대한 참조는 입력 &lt;code&gt;C&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="148580627812ac95e48dbbdccb5f2026281794a9" translate="yes" xml:space="preserve">
          <source>a reference to the array being grown</source>
          <target state="translated">성장중인 어레이에 대한 참조</target>
        </trans-unit>
        <trans-unit id="e73a1c28cc974188b5649f82a204be6256b684ff" translate="yes" xml:space="preserve">
          <source>a reference to the array being shrunk</source>
          <target state="translated">축소 된 배열에 대한 참조</target>
        </trans-unit>
        <trans-unit id="dd256d8afbdff3c97c21d239389f44b83c713c52" translate="yes" xml:space="preserve">
          <source>a scope for the parameters of ti</source>
          <target state="translated">ti의 매개 변수 범위</target>
        </trans-unit>
        <trans-unit id="900b6d61727bf38670543f302fa5afe93dc45e0f" translate="yes" xml:space="preserve">
          <source>a set of replacements/substitutions</source>
          <target state="translated">교체 / 대체 세트</target>
        </trans-unit>
        <trans-unit id="95d89b650f29de7bd2964e529745e5a28ecd8f1c" translate="yes" xml:space="preserve">
          <source>a single value which can be substituted in &amp;Omicron;(&lt;code&gt;1&lt;/code&gt;)</source>
          <target state="translated">&amp;Omicron; ( &lt;code&gt;1&lt;/code&gt; ) 로 대체 할 수있는 단일 값</target>
        </trans-unit>
        <trans-unit id="7f2852d8b1ffaad7610b1947814ef77a1693697e" translate="yes" xml:space="preserve">
          <source>a standard zlib header</source>
          <target state="translated">표준 zlib 헤더</target>
        </trans-unit>
        <trans-unit id="aac0fee755016e2c7eb030feae3d94bcf836e2b0" translate="yes" xml:space="preserve">
          <source>a string of &lt;code&gt;chars&lt;/code&gt;, &lt;code&gt;wchars&lt;/code&gt;, or &lt;code&gt;dchars&lt;/code&gt;, or any custom type that casts to a &lt;code&gt;string&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;chars&lt;/code&gt; , &lt;code&gt;wchars&lt;/code&gt; 또는 &lt;code&gt;dchars&lt;/code&gt; 의 문자열 또는 &lt;code&gt;string&lt;/code&gt; 유형으로 캐스트되는 사용자 정의 유형</target>
        </trans-unit>
        <trans-unit id="6b098a6de224f3afd1732001eeb4dcde43264d38" translate="yes" xml:space="preserve">
          <source>a super class</source>
          <target state="translated">수퍼 클래스</target>
        </trans-unit>
        <trans-unit id="8b2bf0cc0af6ff3e9a821f1c216a5dd0c740312c" translate="yes" xml:space="preserve">
          <source>a symbolic link, then this function returns the same result as getAttributes.</source>
          <target state="translated">기호 링크 인 경우이 함수는 getAttributes와 동일한 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ab3af9c0283f081bc3bea60f8b5edd2c5c7a6f05" translate="yes" xml:space="preserve">
          <source>a temporary is created</source>
          <target state="translated">임시 생성</target>
        </trans-unit>
        <trans-unit id="60b7cf24e644afefc7283c41a9aaa20d65bbada5" translate="yes" xml:space="preserve">
          <source>a value composed of to with from's sign bit.</source>
          <target state="translated">from의 부호 비트로 구성되는 값.</target>
        </trans-unit>
        <trans-unit id="8e844cdc8ccc36baf4224b163fe87b586e865b67" translate="yes" xml:space="preserve">
          <source>a value of the same type as the elements of &lt;code&gt;range&lt;/code&gt; or another</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; 또는 다른 요소와 동일한 유형의 값</target>
        </trans-unit>
        <trans-unit id="8b3d081f8c47b5157cb11c1b0a972d62497370b2" translate="yes" xml:space="preserve">
          <source>a variable or the result of the</source>
          <target state="translated">변수 또는 결과</target>
        </trans-unit>
        <trans-unit id="56b639ee9ee05047e2ef785a7cbdfb353ca1bc9f" translate="yes" xml:space="preserve">
          <source>a ~ b</source>
          <target state="translated">a ~ b</target>
        </trans-unit>
        <trans-unit id="fb35c4b616776fb6592cb05476b0bfe92df2837c" translate="yes" xml:space="preserve">
          <source>a ∖ b</source>
          <target state="translated">a ∖ b</target>
        </trans-unit>
        <trans-unit id="6b6c2ccd462c682b27ee161ecdb19779d3900466" translate="yes" xml:space="preserve">
          <source>a-z</source>
          <target state="translated">a-z</target>
        </trans-unit>
        <trans-unit id="3a03030725b0199fd4c86e3c8d0a00300de99977" translate="yes" xml:space="preserve">
          <source>a.b.c.d</source>
          <target state="translated">a.b.c.d</target>
        </trans-unit>
        <trans-unit id="f29bc91bbdab169fc0c0a326965953d11c7dff83" translate="yes" xml:space="preserve">
          <source>a1</source>
          <target state="translated">a1</target>
        </trans-unit>
        <trans-unit id="b9f85daa6f83cf02ce5c31913d1f64d3f5c8fade" translate="yes" xml:space="preserve">
          <source>a2</source>
          <target state="translated">a2</target>
        </trans-unit>
        <trans-unit id="252bc06763afb3b6c2a0802f7346700ab55f46f5" translate="yes" xml:space="preserve">
          <source>a3</source>
          <target state="translated">a3</target>
        </trans-unit>
        <trans-unit id="b521ea96e9e6e36ea9392ad018bba8be3aecff53" translate="yes" xml:space="preserve">
          <source>aaRange implements a ForwardRange</source>
          <target state="translated">aaRange는 ForwardRange를 구현합니다</target>
        </trans-unit>
        <trans-unit id="ade5cf54af7f5b303ac4e754cc4c48f00b3f37df" translate="yes" xml:space="preserve">
          <source>aborting the program</source>
          <target state="translated">프로그램 중단</target>
        </trans-unit>
        <trans-unit id="66206b19c16f55926390c56d098d8185332f4213" translate="yes" xml:space="preserve">
          <source>about harmonia</source>
          <target state="translated">하모니아에 대하여</target>
        </trans-unit>
        <trans-unit id="c3900ea911127bf782b2d7bb9ec9503ece3dbba7" translate="yes" xml:space="preserve">
          <source>absolute path</source>
          <target state="translated">절대 경로</target>
        </trans-unit>
        <trans-unit id="602dca236598238a20d1d974a6a552be16144410" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;ASTNode&quot;&gt;ASTNode&lt;/strong&gt;: dmd.root.rootobject.RootObject;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;ASTNode&quot;&gt;ASTNode&lt;/strong&gt; : dmd.root.rootobject.RootObject;</target>
        </trans-unit>
        <trans-unit id="95509f8a438d1cf3f323d02b088ca5779b76583c" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Address&quot;&gt;Address&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;Address&quot;&gt;주소&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="63e845ea4d461d4b16e1bbc87ea8009ecb18f618" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;AggregateDeclaration&quot;&gt;AggregateDeclaration&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;AggregateDeclaration&quot;&gt;AggregateDeclaration&lt;/strong&gt; : dmd.dsymbol.ScopeDsymbol;</target>
        </trans-unit>
        <trans-unit id="403dcb8243542a4bc5815dc711147d99ed29e505" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;AttribDeclaration&quot;&gt;AttribDeclaration&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;AttribDeclaration&quot;&gt;AttribDeclaration&lt;/strong&gt; : dmd.dsymbol.Dsymbol;</target>
        </trans-unit>
        <trans-unit id="e8a38045cbe1fb3004176c55373db6883312bb5a" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;BinExp&quot;&gt;BinExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;BinExp&quot;&gt;BinExp&lt;/strong&gt; : dmd.expression.Expression;</target>
        </trans-unit>
        <trans-unit id="9394d0631363a67c3a779404482a247a6ca9d5a9" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;DVCondition&quot;&gt;DVCondition&lt;/strong&gt;: dmd.cond.Condition;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;DVCondition&quot;&gt;DVCondition&lt;/strong&gt; : dmd.cond.Condition;</target>
        </trans-unit>
        <trans-unit id="20175d4842de48104bc341a1fa032c678d99cb0d" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Declaration&quot;&gt;Declaration&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;Declaration&quot;&gt;선언&lt;/strong&gt; : dmd.dsymbol.Dsymbol;</target>
        </trans-unit>
        <trans-unit id="62305af0d3d5f4a75ca73a484fb06a9fa2d2477e" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;DiagnosticReporter&quot;&gt;DiagnosticReporter&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;DiagnosticReporter&quot;&gt;DiagnosticReporter&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff2920faff7856c19bb3ebf3648943afb8e898c2" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;EncodingScheme&quot;&gt;EncodingScheme&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;EncodingScheme&quot;&gt;EncodingScheme&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="94eeab83710d1c83646bc2b10efc14bc964a406c" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Expression&quot;&gt;Expression&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;Expression&quot;&gt;표현&lt;/strong&gt; : dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="f8be1b3f718c56fdbd0615c655f6306f46529984" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Item&quot;&gt;Item&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;Item&quot;&gt;Item&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="149923a53a0ca05ff89bd02ffe41d3241c32359b" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Logger&quot;&gt;Logger&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;Logger&quot;&gt;로거&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f85697e4de75a42ea78654ae3f7d6c37dfaad822" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Statement&quot;&gt;Statement&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;Statement&quot;&gt;문장&lt;/strong&gt; : dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="007fc2b635ffccd53ce2345ac64b2dc386a175b4" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TemplateParameter&quot;&gt;TemplateParameter&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;TemplateParameter&quot;&gt;TemplateParameter&lt;/strong&gt; : dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="d3c19fd4a030fecb8af73bafe481c5088f40ec39" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TimeZone&quot;&gt;TimeZone&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;TimeZone&quot;&gt;TimeZone&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ba56109af33e44da40c2f5e9104b0ca45af8a48b" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;Type&quot;&gt;Type&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;Type&quot;&gt;유형&lt;/strong&gt; : dmd.ast_node.ASTNode;</target>
        </trans-unit>
        <trans-unit id="798a2222891ab69ba186eaaccc2bab0c9eb748df" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeArray&quot;&gt;TypeArray&lt;/strong&gt;: dmd.mtype.TypeNext;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;TypeArray&quot;&gt;TypeArray&lt;/strong&gt; : dmd.mtype.TypeNext;</target>
        </trans-unit>
        <trans-unit id="a4c13a5a815e8f5e75a925515cdae3e2bc035bc4" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeInfo&quot;&gt;TypeInfo&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;TypeInfo&quot;&gt;TypeInfo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0f3504678015ab650adadb12d8c93874393377d7" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeNext&quot;&gt;TypeNext&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;TypeNext&quot;&gt;TypeNext&lt;/strong&gt; : dmd.mtype.Type;</target>
        </trans-unit>
        <trans-unit id="47c0cd8c87bc56d2477764d2bfef68a567c269df" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;TypeQualified&quot;&gt;TypeQualified&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;TypeQualified&quot;&gt;TypeQualified&lt;/strong&gt; : dmd.mtype.Type;</target>
        </trans-unit>
        <trans-unit id="dac3841924a003012fa35ee82ab6ba299fb0e170" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;UnaExp&quot;&gt;UnaExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;UnaExp&quot;&gt;UnaExp&lt;/strong&gt; : dmd.expression.Expression;</target>
        </trans-unit>
        <trans-unit id="04905ecdd0bc24265bb75e2f8349eeebb71f723d" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong id=&quot;environment&quot;&gt;environment&lt;/strong&gt;;</source>
          <target state="translated">추상 클래스 &lt;strong id=&quot;environment&quot;&gt;환경&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b92286f6ded5726e9d1cf41a43730d855dbda337" translate="yes" xml:space="preserve">
          <source>abstract const @property immutable(ubyte)[] &lt;strong id=&quot;replacementSequence&quot;&gt;replacementSequence&lt;/strong&gt;();</source>
          <target state="translated">추상 const @property immutable (ubyte) [] &lt;strong id=&quot;replacementSequence&quot;&gt;replacementSequence&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a078097d45f73e5f942f2ad0b2cd3e147ce88a2c" translate="yes" xml:space="preserve">
          <source>abstract const @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(scope const Object o);</source>
          <target state="translated">추상 const @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt; (범위 const 객체 o);</target>
        </trans-unit>
        <trans-unit id="9ec343436a8d45ebb3c0b51f976b32c5db7770f7" translate="yes" xml:space="preserve">
          <source>abstract const @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(scope const Object o);</source>
          <target state="translated">추상 const @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt; (범위 const 객체 o);</target>
        </trans-unit>
        <trans-unit id="7b8164e42fa21d5b9a3d865bd45b5f7757b770ba" translate="yes" xml:space="preserve">
          <source>abstract const bool &lt;strong id=&quot;canEncode&quot;&gt;canEncode&lt;/strong&gt;(dchar c);</source>
          <target state="translated">추상 const bool &lt;strong id=&quot;canEncode&quot;&gt;canEncode&lt;/strong&gt; (dchar c);</target>
        </trans-unit>
        <trans-unit id="8ddaec9d91a381ca7db3fa66d634855390e4adc1" translate="yes" xml:space="preserve">
          <source>abstract const dchar &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(ref const(ubyte)[] s);</source>
          <target state="translated">추상 const dchar &lt;strong id=&quot;decode&quot;&gt;디코딩&lt;/strong&gt; (ref const (ubyte) [] s);</target>
        </trans-unit>
        <trans-unit id="53eadf7889a9cff20dba39144e6a26e0141f0a34" translate="yes" xml:space="preserve">
          <source>abstract const dchar &lt;strong id=&quot;safeDecode&quot;&gt;safeDecode&lt;/strong&gt;(ref const(ubyte)[] s);</source>
          <target state="translated">추상 const dchar &lt;strong id=&quot;safeDecode&quot;&gt;safeDecode&lt;/strong&gt; (ref const (ubyte) [] s);</target>
        </trans-unit>
        <trans-unit id="6e33c81d704d3b0f7d3ba23df15ad0c8228b2ea1" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @property @safe bool &lt;strong id=&quot;hasDST&quot;&gt;hasDST&lt;/strong&gt;();</source>
          <target state="translated">추상 const nothrow @property @safe bool &lt;strong id=&quot;hasDST&quot;&gt;hasDST&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f931bd7261429df79d9bc44f77f1263acb3018a6" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @property @trusted size_t &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt;();</source>
          <target state="translated">추상 const nothrow @property @trusted size_t &lt;strong id=&quot;length&quot;&gt;길이&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5540b65913716858bace3cf98a03b87188f44b67" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @safe bool &lt;strong id=&quot;dstInEffect&quot;&gt;dstInEffect&lt;/strong&gt;(long stdTime);</source>
          <target state="translated">추상적 인 const nothrow @safe bool &lt;strong id=&quot;dstInEffect&quot;&gt;dstInEffect&lt;/strong&gt; (long stdTime);</target>
        </trans-unit>
        <trans-unit id="8c086739876521b50fd6e96d4027e47834e57fff" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @safe long &lt;strong id=&quot;tzToUTC&quot;&gt;tzToUTC&lt;/strong&gt;(long adjTime);</source>
          <target state="translated">추상 const nothrow @safe long &lt;strong id=&quot;tzToUTC&quot;&gt;tzToUTC&lt;/strong&gt; (long adjTime);</target>
        </trans-unit>
        <trans-unit id="d0c4bc82b9438e84b2646684043e9d09eb8c8d7f" translate="yes" xml:space="preserve">
          <source>abstract const nothrow @safe long &lt;strong id=&quot;utcToTZ&quot;&gt;utcToTZ&lt;/strong&gt;(long stdTime);</source>
          <target state="translated">추상 const nothrow @safe long &lt;strong id=&quot;utcToTZ&quot;&gt;utcToTZ&lt;/strong&gt; (long stdTime);</target>
        </trans-unit>
        <trans-unit id="9a720d6b4499c3cbf7103b828c3a83e9cd9b479a" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @property @safe const(sockaddr)* &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="translated">추상 const 순수 nothrow @nogc @property @safe const (sockaddr) * &lt;strong id=&quot;name&quot;&gt;이름&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="52efee9dd8b6b17375ff78f8fc9e9b8d5461eda1" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @property @safe socklen_t &lt;strong id=&quot;nameLen&quot;&gt;nameLen&lt;/strong&gt;();</source>
          <target state="translated">추상 const 순수한 nothrow @nogc @property @safe socklen_t &lt;strong id=&quot;nameLen&quot;&gt;nameLen&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f353e2cb7d99934a61fc5f31472dae3722e99e7f" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @property scope @safe bool &lt;strong id=&quot;isEmptyXML&quot;&gt;isEmptyXML&lt;/strong&gt;();</source>
          <target state="translated">추상 const 순수한 nothrow @nogc @property scope @safe bool &lt;strong id=&quot;isEmptyXML&quot;&gt;isEmptyXML&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b249614910dfe2f856313aa1019178dd9fe70cb9" translate="yes" xml:space="preserve">
          <source>abstract const pure nothrow @nogc @safe const(void)[] &lt;strong id=&quot;initializer&quot;&gt;initializer&lt;/strong&gt;();</source>
          <target state="translated">추상 const 순수 nothrow @nogc @safe const (void) [] &lt;strong id=&quot;initializer&quot;&gt;이니셜 라이저&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cb35c80415cb32c94c73a7756df440c1c0085656" translate="yes" xml:space="preserve">
          <source>abstract const scope @safe size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;();</source>
          <target state="translated">추상 const 범위 @safe size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ba60f0f7e9c67be9c2a374cbf12efe3f6ce0981b" translate="yes" xml:space="preserve">
          <source>abstract const scope @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="translated">추상 const 범위 @safe 문자열 &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="3fddb56a48e702f11c3260531971876b15c5b616" translate="yes" xml:space="preserve">
          <source>abstract const size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(dchar c, ubyte[] buffer);</source>
          <target state="translated">추상 const size_t &lt;strong id=&quot;encode&quot;&gt;인코딩&lt;/strong&gt; (dchar c, ubyte [] 버퍼);</target>
        </trans-unit>
        <trans-unit id="60ca1bd89bc8caee262d7cb530fc381260b71bc7" translate="yes" xml:space="preserve">
          <source>abstract const size_t &lt;strong id=&quot;encodedLength&quot;&gt;encodedLength&lt;/strong&gt;(dchar c);</source>
          <target state="translated">추상 const size_t &lt;strong id=&quot;encodedLength&quot;&gt;encodingLength&lt;/strong&gt; (dchar c);</target>
        </trans-unit>
        <trans-unit id="83071325e73d53e5f586a7473d854a646dfa53f2" translate="yes" xml:space="preserve">
          <source>abstract const string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="translated">추상 const 문자열 &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6a7f3249c54be78bd9aefd00c5134b6c22ed4229" translate="yes" xml:space="preserve">
          <source>abstract const string[] &lt;strong id=&quot;names&quot;&gt;names&lt;/strong&gt;();</source>
          <target state="translated">추상 const 문자열 [] &lt;strong id=&quot;names&quot;&gt;이름&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="57f6f621bc4fda3d27a805f68650176d80cae595" translate="yes" xml:space="preserve">
          <source>abstract nothrow @property ref ThreadInfo &lt;strong id=&quot;thisInfo&quot;&gt;thisInfo&lt;/strong&gt;();</source>
          <target state="translated">초록 nothrow @property ref ThreadInfo &lt;strong id=&quot;thisInfo&quot;&gt;thisInfo&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8ce4ca186c11cd72e82380377b8f27ebe6f26cd6" translate="yes" xml:space="preserve">
          <source>abstract nothrow @property uint &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;();</source>
          <target state="translated">초록 nothrow @property uint &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b79d9fb4976110e88e4ab28a861490510565fb15" translate="yes" xml:space="preserve">
          <source>abstract nothrow @trusted ubyte[] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt;();</source>
          <target state="translated">초록 nothrow @trusted ubyte [] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="167c64980438994d6dbad9f19e456295b6c94b8a" translate="yes" xml:space="preserve">
          <source>abstract nothrow @trusted void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt;(scope const(ubyte)[] data...);</source>
          <target state="translated">추상 nothrow @trusted void &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt; (scope const (ubyte) [] data ...);</target>
        </trans-unit>
        <trans-unit id="86a6002b042cafebd04ec7cf6c791edaae960ae4" translate="yes" xml:space="preserve">
          <source>abstract nothrow @trusted void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt;();</source>
          <target state="translated">초록 nothrow @trusted void &lt;strong id=&quot;reset&quot;&gt;reset&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e59361272d85e133dacd2d7633f69a1cc1289cb3" translate="yes" xml:space="preserve">
          <source>abstract nothrow Condition &lt;strong id=&quot;newCondition&quot;&gt;newCondition&lt;/strong&gt;(Mutex m);</source>
          <target state="translated">초록 nothrow 조건 &lt;strong id=&quot;newCondition&quot;&gt;newCondition&lt;/strong&gt; (Mutex m);</target>
        </trans-unit>
        <trans-unit id="60910532671bf8753b04472cff1bc534ba4ac9c8" translate="yes" xml:space="preserve">
          <source>abstract nothrow Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">초록 nothrow Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e1cbb0bdf80fccbb2b734c3c9a902ae40b765d8b" translate="yes" xml:space="preserve">
          <source>abstract nothrow Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[] b);</source>
          <target state="translated">추상 nothrow Ternary &lt;strong id=&quot;owns&quot;&gt;소유&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="a499e8082c356f5f98161e5ee0e2030976f96f31" translate="yes" xml:space="preserve">
          <source>abstract nothrow Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;(const void* p, ref void[] result);</source>
          <target state="translated">추상 nothrow Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt; (const void * p, ref void [] 결과);</target>
        </trans-unit>
        <trans-unit id="2c4d08f3784605a480640ab968377af8ff0ce5fd" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alignedReallocate&lt;/strong&gt;(ref void[] b, size_t size, uint alignment);</source>
          <target state="translated">추상 nothrow &lt;strong id=&quot;alignedReallocate&quot;&gt;boolalignReallocate&lt;/strong&gt; (ref void [] b, size_t 크기, uint 정렬);</target>
        </trans-unit>
        <trans-unit id="9d69e75dc9bcb49d9905f73d8210657227458ffc" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">추상 nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;할당 해제&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="afa2b20b684f27c142f4112a6d99f9932eb01370" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;();</source>
          <target state="translated">추상 nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6b1ba7f33b558a329f8f6224834c8460d344a129" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">추상 nothrow bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt; (ref void [], size_t);</target>
        </trans-unit>
        <trans-unit id="b87cc10b53f23a530901939991462cefca7f8245" translate="yes" xml:space="preserve">
          <source>abstract nothrow bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">추상 nothrow bool &lt;strong id=&quot;reallocate&quot;&gt;재 할당&lt;/strong&gt; (ref void [], size_t);</target>
        </trans-unit>
        <trans-unit id="a37d26cf992e712c5fb5057d3327388969756806" translate="yes" xml:space="preserve">
          <source>abstract nothrow int &lt;strong id=&quot;deprecationCount&quot;&gt;deprecationCount&lt;/strong&gt;();</source>
          <target state="translated">추상 nothrow int &lt;strong id=&quot;deprecationCount&quot;&gt;deprecationCount&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="195235832c7fc492f87dd0627fb8d1728a061658" translate="yes" xml:space="preserve">
          <source>abstract nothrow int &lt;strong id=&quot;errorCount&quot;&gt;errorCount&lt;/strong&gt;();</source>
          <target state="translated">추상 nothrow int &lt;strong id=&quot;errorCount&quot;&gt;errorCount&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ca583154b01f55013661898507f9c49042fa8959" translate="yes" xml:space="preserve">
          <source>abstract nothrow int &lt;strong id=&quot;warningCount&quot;&gt;warningCount&lt;/strong&gt;();</source>
          <target state="translated">추상 nothrow int &lt;strong id=&quot;warningCount&quot;&gt;warningCount&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f008dfd494361930bb1e0b013b005d1b2191a7fc" translate="yes" xml:space="preserve">
          <source>abstract nothrow size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t s);</source>
          <target state="translated">초록 nothrow size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t s);</target>
        </trans-unit>
        <trans-unit id="64e614568397a9f16f71c06efba43163d1b84a93" translate="yes" xml:space="preserve">
          <source>abstract nothrow ubyte[] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt;(ubyte[] buf);</source>
          <target state="translated">추상 nothrow ubyte [] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt; (ubyte [] buf);</target>
        </trans-unit>
        <trans-unit id="a8f14d4ef8a4271b6a8f216a4a6cee637a617eb9" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;deprecation&quot;&gt;deprecation&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list args);</source>
          <target state="translated">추상 nothrow void &lt;strong id=&quot;deprecation&quot;&gt;deprecation&lt;/strong&gt; (ref const Loc loc, const (char) * 형식, va_list args 참조);</target>
        </trans-unit>
        <trans-unit id="7c4ca06627e61e4041fb2119f0755bd2dbe8c72e" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;deprecationSupplemental&quot;&gt;deprecationSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list);</source>
          <target state="translated">추상 nothrow void &lt;strong id=&quot;deprecationSupplemental&quot;&gt;deprecationSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * 형식, va_list 참조);</target>
        </trans-unit>
        <trans-unit id="a8a2cb650960fcb355e62fee2551472cd09471c2" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list args);</source>
          <target state="translated">추상 nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; (ref const Loc loc, const (char) * 형식, va_list args 참조);</target>
        </trans-unit>
        <trans-unit id="953fcfc258a1f2e17925c804f6c75c7e28f536c8" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;errorSupplemental&quot;&gt;errorSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list);</source>
          <target state="translated">추상 nothrow void &lt;strong id=&quot;errorSupplemental&quot;&gt;error 보충&lt;/strong&gt; (ref const Loc loc, const (char) * 형식, va_list 참조);</target>
        </trans-unit>
        <trans-unit id="83b1e781a033f2145a6f0560414778620f1e8b65" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;warning&quot;&gt;warning&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list args);</source>
          <target state="translated">추상 nothrow void &lt;strong id=&quot;warning&quot;&gt;경고&lt;/strong&gt; (ref const Loc loc, const (char) * 형식, va_list args 참조);</target>
        </trans-unit>
        <trans-unit id="f9b6bcbbf3ed0a23bc8036487ef0725b5dd511ae" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;warningSupplemental&quot;&gt;warningSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list);</source>
          <target state="translated">추상 nothrow void &lt;strong id=&quot;warningSupplemental&quot;&gt;warningSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * 형식, va_list 참조);</target>
        </trans-unit>
        <trans-unit id="b9b0cb737085475ef9a000316c0a92356d2a06dd" translate="yes" xml:space="preserve">
          <source>abstract nothrow void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt;();</source>
          <target state="translated">초록 nothrow void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="55c1baf7b210b0645d46ed7e9a31d914c3ac84b7" translate="yes" xml:space="preserve">
          <source>abstract nothrow void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t n, uint a);</source>
          <target state="translated">추상 nothrow void [] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignAllocate&lt;/strong&gt; (size_t n, uint a);</target>
        </trans-unit>
        <trans-unit id="773db43da85e9e2a1509afb2788ee00a07791816" translate="yes" xml:space="preserve">
          <source>abstract nothrow void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t, TypeInfo ti = null);</source>
          <target state="translated">추상 nothrow 무효 [] &lt;strong id=&quot;allocate&quot;&gt;할당&lt;/strong&gt; (size_t와, 소속 카테고리 TI = NULL);</target>
        </trans-unit>
        <trans-unit id="6ec1ee0a929e80615878c0ae26585d557f4f8c7a" translate="yes" xml:space="preserve">
          <source>abstract nothrow void[] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;();</source>
          <target state="translated">추상 nothrow 무효 [] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f84f56ca6a5da43f8c300f0be0a091e7cf175df0" translate="yes" xml:space="preserve">
          <source>abstract pure nothrow @nogc @property @safe sockaddr* &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="translated">추상 순수 nothrow @nogc @property @safe sockaddr * &lt;strong id=&quot;name&quot;&gt;이름&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5191c2b295c85c49a53c4ea4934153aa1ec53119" translate="yes" xml:space="preserve">
          <source>abstract pure nothrow @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt;();</source>
          <target state="translated">추상 순수 노하우 @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="75d6c2daf504e97823a9213af02c350b108b1042" translate="yes" xml:space="preserve">
          <source>abstract pure nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt;();</source>
          <target state="translated">추상 순수 nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0b22b8685eeeec326764b37d217112c331999e56" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow @property uint &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;();</source>
          <target state="translated">추상적 공유 노쓰 @property uint &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7fa490cefc6fa349aff28acf40c78a50dc12b009" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">추상적는 삼항 nothrow 공유 &lt;strong id=&quot;empty&quot;&gt;를 비워&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8c8d7fce3d4fdd74a8e8b1c48fa97adc3688230a" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(void[] b);</source>
          <target state="translated">추상 공유 된 nothrow Ternary &lt;strong id=&quot;owns&quot;&gt;소유&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="d4d00d23ab5c52e35b0c61f1cd2971c48eca5753" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow Ternary &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt;(const void* p, ref void[] result);</source>
          <target state="translated">추상 공유 된 nothrow 3 차 &lt;strong id=&quot;resolveInternalPointer&quot;&gt;resolveInternalPointer&lt;/strong&gt; (const void * p, ref void [] 결과);</target>
        </trans-unit>
        <trans-unit id="6eb8d65a745bf1eff27454c21ecad4e8cb5fa95a" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;alignedReallocate&quot;&gt;alignedReallocate&lt;/strong&gt;(ref void[] b, size_t size, uint alignment);</source>
          <target state="translated">추상 공유 된 &lt;strong id=&quot;alignedReallocate&quot;&gt;노쓰로 볼 정렬 된 재 할당&lt;/strong&gt; (ref void [] b, size_t 크기, uint 정렬);</target>
        </trans-unit>
        <trans-unit id="172b3164307331bc0db721464d4e414cc13b6774" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;deallocate&lt;/strong&gt;(void[] b);</source>
          <target state="translated">추상적 인 공유 된 nothrow bool &lt;strong id=&quot;deallocate&quot;&gt;할당 해제&lt;/strong&gt; (void [] b);</target>
        </trans-unit>
        <trans-unit id="577662e3c19f522e0adf2e1a53be6b027e60bf8e" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt;();</source>
          <target state="translated">추상 공유 된 nothrow bool &lt;strong id=&quot;deallocateAll&quot;&gt;deallocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="be3c894bb70613c1f9699c41df295000a24b1fc7" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;expand&quot;&gt;expand&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">추상적 인 공유 된 노슬 부울 &lt;strong id=&quot;expand&quot;&gt;확장&lt;/strong&gt; (ref void [], size_t);</target>
        </trans-unit>
        <trans-unit id="2cf808b65a3b051e6f2fc4296775a0158944ceb2" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow bool &lt;strong id=&quot;reallocate&quot;&gt;reallocate&lt;/strong&gt;(ref void[], size_t);</source>
          <target state="translated">추상 공유 된 노쓰로 볼 &lt;strong id=&quot;reallocate&quot;&gt;재 할당&lt;/strong&gt; (ref void [], size_t);</target>
        </trans-unit>
        <trans-unit id="81e4553b43e4822ecc988f56cbfc9eff86215758" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t s);</source>
          <target state="translated">추상적 공유 &lt;strong id=&quot;goodAllocSize&quot;&gt;노던 치&lt;/strong&gt; size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt; (size_t s);</target>
        </trans-unit>
        <trans-unit id="286a2c08b387f4af1005a7dc380c33c80d84d314" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow void[] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignedAllocate&lt;/strong&gt;(size_t n, uint a);</source>
          <target state="translated">abstract shared nothrow void [] &lt;strong id=&quot;alignedAllocate&quot;&gt;alignAllocate&lt;/strong&gt; (size_t n, uint a);</target>
        </trans-unit>
        <trans-unit id="7d244b2f152c02faa70d2001505da7efe927e999" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow void[] &lt;strong id=&quot;allocate&quot;&gt;allocate&lt;/strong&gt;(size_t, TypeInfo ti = null);</source>
          <target state="translated">nothrow 공유 추상적 [] 보이드 &lt;strong id=&quot;allocate&quot;&gt;할당&lt;/strong&gt; (size_t와, 소속 카테고리 TI = NULL);</target>
        </trans-unit>
        <trans-unit id="ef6badfeb6de9fcd4dd428e938ede9f826cc6ce0" translate="yes" xml:space="preserve">
          <source>abstract shared nothrow void[] &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt;();</source>
          <target state="translated">추상 보이드 [] nothrow 공유 &lt;strong id=&quot;allocateAll&quot;&gt;allocateAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d4e3317aa8e2c0ecc28ec0ee7339b747ef883c11" translate="yes" xml:space="preserve">
          <source>abstract shared pure nothrow @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt;();</source>
          <target state="translated">추상 공유 순수 nothrow @nogc @safe bool &lt;strong id=&quot;decRef&quot;&gt;decRef&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d1f1aa61fb59b47104b429cd0fcd5b88a5671c5f" translate="yes" xml:space="preserve">
          <source>abstract shared pure nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt;();</source>
          <target state="translated">추상 공유 된 순수 nothrow @nogc @safe void &lt;strong id=&quot;incRef&quot;&gt;incRef&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c158996e5263cf637b358325686e957d675eb2ed" translate="yes" xml:space="preserve">
          <source>abstract void &lt;strong id=&quot;accept&quot;&gt;accept&lt;/strong&gt;(Visitor v);</source>
          <target state="translated">추상 무효 &lt;strong id=&quot;accept&quot;&gt;수락&lt;/strong&gt; (방문자 v);</target>
        </trans-unit>
        <trans-unit id="2fce188a4c9da388b1b55082adfa8c961b784050" translate="yes" xml:space="preserve">
          <source>abstract void &lt;strong id=&quot;spawn&quot;&gt;spawn&lt;/strong&gt;(void delegate() op);</source>
          <target state="translated">추상 무효 &lt;strong id=&quot;spawn&quot;&gt;스폰&lt;/strong&gt; (void delegate () op);</target>
        </trans-unit>
        <trans-unit id="4f0fe392414368b23e4ca3d33af54dbe50a1d98f" translate="yes" xml:space="preserve">
          <source>abstract void &lt;strong id=&quot;start&quot;&gt;start&lt;/strong&gt;(void delegate() op);</source>
          <target state="translated">추상 무효 &lt;strong id=&quot;start&quot;&gt;시작&lt;/strong&gt; (void delegate () op);</target>
        </trans-unit>
        <trans-unit id="15c093e9b3ea5895886f4007a3b8c726b27dbd9b" translate="yes" xml:space="preserve">
          <source>accept separator characters or not</source>
          <target state="translated">구분자 문자 허용 여부</target>
        </trans-unit>
        <trans-unit id="dd82f36c8279769497a226012c721f4fe55f6237" translate="yes" xml:space="preserve">
          <source>access mode defined above.</source>
          <target state="translated">위에서 정의한 액세스 모드.</target>
        </trans-unit>
        <trans-unit id="3c2311736b395b779b842a7b7a96ed5a1f4b0c93" translate="yes" xml:space="preserve">
          <source>access.d</source>
          <target state="translated">access.d</target>
        </trans-unit>
        <trans-unit id="c854e7342897099cc5d681d6545d8ddd8dfd14ae" translate="yes" xml:space="preserve">
          <source>acos(x)</source>
          <target state="translated">acos(x)</target>
        </trans-unit>
        <trans-unit id="572f358ec01da12611b4426c46482d86677aa2ea" translate="yes" xml:space="preserve">
          <source>acosh(x)</source>
          <target state="translated">acosh(x)</target>
        </trans-unit>
        <trans-unit id="3ff03dd719c7d132069786e1f6d667bed743bb1b" translate="yes" xml:space="preserve">
          <source>act result</source>
          <target state="translated">행동 결과</target>
        </trans-unit>
        <trans-unit id="8e6d7797ae2ce7e078c20281527439a5e6c3ba4e" translate="yes" xml:space="preserve">
          <source>actually an OpenSSL SSL_CTX</source>
          <target state="translated">실제로 OpenSSL SSL_CTX</target>
        </trans-unit>
        <trans-unit id="75adfe4c00460f712e62051da535436093d88ab4" translate="yes" xml:space="preserve">
          <source>ad aggregate with the invariant vthis variable with 'this'</source>
          <target state="translated">'this'가있는 불변 vthis 변수가있는 광고 집계</target>
        </trans-unit>
        <trans-unit id="c3c09d3f7ae734026e9b4c851dec727884c99bd3" translate="yes" xml:space="preserve">
          <source>add a root where a pointer to the object is stored using core.memory.GC.addRoot() or core.memory.GC.addRange().</source>
          <target state="translated">core.memory.GC.addRoot () 또는 core.memory.GC.addRange ()를 사용하여 객체에 대한 포인터가 저장된 루트를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="480740162b7d8663fa92db29cad733476efc3e9d" translate="yes" xml:space="preserve">
          <source>add a standard curl handle to the multi stack</source>
          <target state="translated">멀티 스택에 표준 컬 핸들 추가</target>
        </trans-unit>
        <trans-unit id="3c58f0ca7b97197d529d2cc9a31562e3ea91ba4f" translate="yes" xml:space="preserve">
          <source>add terminating 0</source>
          <target state="translated">종료 0 추가</target>
        </trans-unit>
        <trans-unit id="f0b01fbc8d31bfe16b50470019d2118ee3b2eafa" translate="yes" xml:space="preserve">
          <source>added in 7.10</source>
          <target state="translated">7.10에서 추가됨</target>
        </trans-unit>
        <trans-unit id="3f869431e3796d025d9b5bf8d0180b0416cb9c74" translate="yes" xml:space="preserve">
          <source>added in 7.10, new in 7.19.4 default is to use CONNECT HTTP/1.1</source>
          <target state="translated">7.10에 추가되었으며, 7.19.4의 새로운 기능은 CONNECT HTTP / 1.1을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8379149f4a61f047d1ac288baf16003208ad98c7" translate="yes" xml:space="preserve">
          <source>added in 7.18.0</source>
          <target state="translated">7.18.0에서 추가됨</target>
        </trans-unit>
        <trans-unit id="ccde6fbd330c9dfc0f65870905bf0bc35a4fdd16" translate="yes" xml:space="preserve">
          <source>added in 7.19.4, force to use CONNECT HTTP/1.0</source>
          <target state="translated">7.19.4에 추가되어 CONNECT HTTP / 1.0을 강제로 사용</target>
        </trans-unit>
        <trans-unit id="07bb8f2a1713eda2b64e7bc1c1eac81b5f0651ba" translate="yes" xml:space="preserve">
          <source>additional message prefix</source>
          <target state="translated">추가 메시지 접두사</target>
        </trans-unit>
        <trans-unit id="f1a7e1fb3467870775548603723fe843b49f7790" translate="yes" xml:space="preserve">
          <source>address of a module's &lt;code&gt;const(MemberInfo)[] getMembers(string)&lt;/code&gt; function, &lt;code&gt;null&lt;/code&gt; if there isn't one</source>
          <target state="translated">모듈의 &lt;code&gt;const(MemberInfo)[] getMembers(string)&lt;/code&gt; 함수의 주소. &lt;code&gt;null&lt;/code&gt; 경우 null</target>
        </trans-unit>
        <trans-unit id="309cbf6efe7a5f366fe768c4e701fc3ec86f5ad7" translate="yes" xml:space="preserve">
          <source>address of function that runs the module's unittests, &lt;code&gt;null&lt;/code&gt; if there isn't one</source>
          <target state="translated">모듈의 단위 테스트를 실행하는 함수의 주소. &lt;code&gt;null&lt;/code&gt; 경우 null</target>
        </trans-unit>
        <trans-unit id="eb12daa81a63939b6aa34dacd341e252df41f3d1" translate="yes" xml:space="preserve">
          <source>address range of a code segment.</source>
          <target state="translated">코드 세그먼트의 주소 범위.</target>
        </trans-unit>
        <trans-unit id="7c6a5cc8945241af7b164bb1ebcd23ef262fd3f9" translate="yes" xml:space="preserve">
          <source>address to be prefetched</source>
          <target state="translated">프리 페치 할 주소</target>
        </trans-unit>
        <trans-unit id="427b037d57302700b1f24e30efda53586a8a7b2a" translate="yes" xml:space="preserve">
          <source>address to store error message, or null</source>
          <target state="translated">오류 메시지를 저장할 주소 또는 null</target>
        </trans-unit>
        <trans-unit id="d14c87a05c28dcaf4160f1bc040d60e8fcbd808d" translate="yes" xml:space="preserve">
          <source>addrlen was a socklen_t type before 7.18.0 but it turned really ugly and painful on the systems that lack this type</source>
          <target state="translated">addrlen은 7.18.0 이전의 socklen_t 타입 이었지만이 타입이없는 시스템에서는 정말 추악하고 고통 스러웠습니다.</target>
        </trans-unit>
        <trans-unit id="53504064b52d1ad530ff07212732650222614ede" translate="yes" xml:space="preserve">
          <source>ae, or ErrorExp if errors occurred</source>
          <target state="translated">ae 또는 오류가 발생한 경우 ErrorExp</target>
        </trans-unit>
        <trans-unit id="3fcb3775702bb9a6593546d016353c5e45ff4cc7" translate="yes" xml:space="preserve">
          <source>after the optional &lt;code&gt;else&lt;/code&gt; is compiled in.</source>
          <target state="translated">옵션 &lt;code&gt;else&lt;/code&gt; 가 컴파일 된 후</target>
        </trans-unit>
        <trans-unit id="d42c6e7cc5ed1af7b62e3b180053a9c0366852ee" translate="yes" xml:space="preserve">
          <source>age of the returned struct</source>
          <target state="translated">반환 된 구조체의 나이</target>
        </trans-unit>
        <trans-unit id="401e2d68a79243739d57ba3ead37788bd8b33ba0" translate="yes" xml:space="preserve">
          <source>aggregate object that should be destroyed</source>
          <target state="translated">파괴해야하는 집합체</target>
        </trans-unit>
        <trans-unit id="e2de68bd1e10225e43cbe7f9474f53da79419131" translate="yes" xml:space="preserve">
          <source>aggregate.d</source>
          <target state="translated">aggregate.d</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="5c69cbf2101b5e31d8dd94771eda6ce48457b09a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AllocateGC&quot;&gt;AllocateGC&lt;/strong&gt; = std.typecons.Flag!&quot;allocateGC&quot;.Flag;</source>
          <target state="translated">별칭 &lt;strong id=&quot;AllocateGC&quot;&gt;AllocateGC&lt;/strong&gt; = std.typecons.Flag! &quot;allocateGC&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="0f1384017b2db76b8e6dbcaca4430216bc96a57e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Allocator&quot;&gt;Allocator&lt;/strong&gt; = typeof(Factory.init(1));</source>
          <target state="translated">별명 &lt;strong id=&quot;Allocator&quot;&gt;할당 자&lt;/strong&gt; = typeof (Factory.init (1));</target>
        </trans-unit>
        <trans-unit id="51eceb63f918c26f2f860b9f02135e245ec51938" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AllowDayOverflow&quot;&gt;AllowDayOverflow&lt;/strong&gt; = std.typecons.Flag!&quot;allowDayOverflow&quot;.Flag;</source>
          <target state="translated">alias &lt;strong id=&quot;AllowDayOverflow&quot;&gt;AllowDayOverflow&lt;/strong&gt; = std.typecons.Flag! &quot;allowDayOverflow&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="c6117121e2f0a186d7fea61c0a407f6b41efb166" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AllowedTypes&quot;&gt;AllowedTypes&lt;/strong&gt; = This2Variant!(VariantN, AllowedTypesParam);</source>
          <target state="translated">alias &lt;strong id=&quot;AllowedTypes&quot;&gt;AllowedTypes&lt;/strong&gt; = This2Variant! (VariantN, AllowedTypesParam);</target>
        </trans-unit>
        <trans-unit id="a6c10e3c6bc0a1d1f1ff6bec39e36250f0832a10" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AsciiString&quot;&gt;AsciiString&lt;/strong&gt; = immutable(AsciiChar)[];</source>
          <target state="translated">별명 &lt;strong id=&quot;AsciiString&quot;&gt;AsciiString&lt;/strong&gt; = 불변 (AsciiChar) [];</target>
        </trans-unit>
        <trans-unit id="4552953b6577669e6d8e4e679c31b8f9d2f34971" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AssertHandler&quot;&gt;AssertHandler&lt;/strong&gt; = void function(string file, ulong line, string msg) nothrow;</source>
          <target state="translated">alias &lt;strong id=&quot;AssertHandler&quot;&gt;AssertHandler&lt;/strong&gt; = void 함수 (문자열 파일, &lt;strong id=&quot;AssertHandler&quot;&gt;긴&lt;/strong&gt; 줄, 문자열 msg) nothrow;</target>
        </trans-unit>
        <trans-unit id="3b6c543bddb447158a3195ca9a0fe5d37dbfce28" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AuthMethod&quot;&gt;AuthMethod&lt;/strong&gt; = etc.c.curl.CurlAuth;</source>
          <target state="translated">별칭 &lt;strong id=&quot;AuthMethod&quot;&gt;AuthMethod&lt;/strong&gt; = etc.c.curl.CurlAuth;</target>
        </trans-unit>
        <trans-unit id="136c22f9b9d295a4a0203d83b60b15db381fa367" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;AutoStart&quot;&gt;AutoStart&lt;/strong&gt; = std.typecons.Flag!&quot;autoStart&quot;.Flag;</source>
          <target state="translated">alias &lt;strong id=&quot;AutoStart&quot;&gt;AutoStart&lt;/strong&gt; = std.typecons.Flag! &quot;autoStart&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="366d804a81d2cc2014441c6698fddcebc2469561" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;BC&quot;&gt;BC&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;BC&quot;&gt;BC&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="109ae4b1be9cf2e5f402ea2203ac9956dffdd304" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;BOMSeq&quot;&gt;BOMSeq&lt;/strong&gt; = std.typecons.Tuple!(BOM, &quot;schema&quot;, ubyte[], &quot;sequence&quot;).Tuple;</source>
          <target state="translated">별칭 &lt;strong id=&quot;BOMSeq&quot;&gt;BOMSeq&lt;/strong&gt; = std.typecons.Tuple! (BOM, &quot;schema&quot;, ubyte [], &quot;sequence&quot;). Tuple;</target>
        </trans-unit>
        <trans-unit id="71dfab7efd0d74d86e57974d10caaa37d023b8a3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Base64&quot;&gt;Base64&lt;/strong&gt; = Base64Impl!('+', '/', '=');</source>
          <target state="translated">별칭 &lt;strong id=&quot;Base64&quot;&gt;Base64&lt;/strong&gt; = Base64Impl! ( '+', '/', '=');</target>
        </trans-unit>
        <trans-unit id="e915b7fec4e5fed0843eb13a9173ca0733d62721" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Base64URL&quot;&gt;Base64URL&lt;/strong&gt; = Base64Impl!('-', '_', '=');</source>
          <target state="translated">별칭 &lt;strong id=&quot;Base64URL&quot;&gt;Base64URL&lt;/strong&gt; = Base64Impl! ( '-', '_', '=');</target>
        </trans-unit>
        <trans-unit id="a1c434286a3e66c884935196e9ff7e35bda813de" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Base64URLNoPadding&quot;&gt;Base64URLNoPadding&lt;/strong&gt; = Base64Impl!('-', '_', '\x00');</source>
          <target state="translated">별칭 &lt;strong id=&quot;Base64URLNoPadding&quot;&gt;Base64URLNoPadding&lt;/strong&gt; = Base64Impl! ( '-', '_', '\ x00');</target>
        </trans-unit>
        <trans-unit id="5e0aea131e6c2b6185d29d987b22ba419abc771b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;BlkInfo&quot;&gt;BlkInfo&lt;/strong&gt; = .BlkInfo_;</source>
          <target state="translated">별명 &lt;strong id=&quot;BlkInfo&quot;&gt;BlkInfo&lt;/strong&gt; = .BlkInfo_;</target>
        </trans-unit>
        <trans-unit id="e982568e8b8366c4d1e542de1ae1dd43ebb802ec" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC32&quot;&gt;CRC32&lt;/strong&gt; = CRC!(32u, 3988292384LU).CRC;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CRC32&quot;&gt;CRC32&lt;/strong&gt; = CRC! (32u, 3988292384LU) .CRC;</target>
        </trans-unit>
        <trans-unit id="c5562bf79a732ea45f5bacef87c682a52fc01ac6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC32Digest&quot;&gt;CRC32Digest&lt;/strong&gt; = std.digest.WrapperDigest!(CRC!(32u, 3988292384LU)).WrapperDigest;</source>
          <target state="translated">alias &lt;strong id=&quot;CRC32Digest&quot;&gt;CRC32Digest&lt;/strong&gt; = std.digest.WrapperDigest! (CRC! (32u, 3988292384LU)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="b0dc1a407e133f2abf7b7389d911d48c159502b9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ECMA&quot;&gt;CRC64ECMA&lt;/strong&gt; = CRC!(64u, 14514072000185962306LU).CRC;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CRC64ECMA&quot;&gt;CRC64ECMA&lt;/strong&gt; = CRC! (64u, 14514072000185962306LU) .CRC;</target>
        </trans-unit>
        <trans-unit id="b0f7180627d8ecc5b955b40ed663c5e00511d193" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ECMADigest&quot;&gt;CRC64ECMADigest&lt;/strong&gt; = std.digest.WrapperDigest!(CRC!(64u, 14514072000185962306LU)).WrapperDigest;</source>
          <target state="translated">별명 &lt;strong id=&quot;CRC64ECMADigest&quot;&gt;CRC64ECMADigest&lt;/strong&gt; = std.digest.WrapperDigest! (CRC! (64u, 14514072000185962306LU)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="d5b3a5fe39e17abf876214d0378f042f0dcf15fc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ISO&quot;&gt;CRC64ISO&lt;/strong&gt; = CRC!(64u, 15564440312192434176LU).CRC;</source>
          <target state="translated">별명 &lt;strong id=&quot;CRC64ISO&quot;&gt;CRC64ISO&lt;/strong&gt; = CRC! (64u, 15564440312192434176LU) .CRC;</target>
        </trans-unit>
        <trans-unit id="0357ac08a8f82faf8e3edd92076e1f9d05285737" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CRC64ISODigest&quot;&gt;CRC64ISODigest&lt;/strong&gt; = std.digest.WrapperDigest!(CRC!(64u, 15564440312192434176LU)).WrapperDigest;</source>
          <target state="translated">별명 &lt;strong id=&quot;CRC64ISODigest&quot;&gt;CRC64ISODigest&lt;/strong&gt; = std.digest.WrapperDigest! (CRC! (64u, 15564440312192434176LU)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="0f1448f8f9b87c6f30dba37e4042754bc3a6ed19" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURL&quot;&gt;CURL&lt;/strong&gt; = void;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURL&quot;&gt;CURL&lt;/strong&gt; = void;</target>
        </trans-unit>
        <trans-unit id="966a04852330b1b1cb2e76ee0334e539669ab654" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLFORMcode&quot;&gt;CURLFORMcode&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;CURLFORMcode&quot;&gt;CURLFORMcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="652c2d4aab0d84b3e534062870328a79b0ae4a56" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLINFO&quot;&gt;CURLINFO&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLINFO&quot;&gt;CURLINFO&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="ca6aec3f85b1cca661f3bc6ffa4541800408df08" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLM&quot;&gt;CURLM&lt;/strong&gt; = void;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLM&quot;&gt;CURLM&lt;/strong&gt; = void;</target>
        </trans-unit>
        <trans-unit id="f478ce0aa30cb8112c24da3b81f7dfff32f1078e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLMSG&quot;&gt;CURLMSG&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLMSG&quot;&gt;CURLMSG&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="9313e5b8be7ba935a145f521a56b0f6c3be75766" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLMcode&quot;&gt;CURLMcode&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLMcode&quot;&gt;CURLMcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="744644df0b7137bafa2f8f0ad370f8a381ff7111" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLMoption&quot;&gt;CURLMoption&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;CURLMoption&quot;&gt;CURLMoption&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="0b0aea0ebbbeb4eacf77ee0fed4dcb2ef4cefb6d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLSH&quot;&gt;CURLSH&lt;/strong&gt; = void;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLSH&quot;&gt;CURLSH&lt;/strong&gt; = void;</target>
        </trans-unit>
        <trans-unit id="828faef142c18fe1bbf8624be0f5ca1c30a21579" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLSHcode&quot;&gt;CURLSHcode&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;CURLSHcode&quot;&gt;CURLSHcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="3fd6606ab1fc09078c162325e0db7acaa1720f06" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLSHoption&quot;&gt;CURLSHoption&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;CURLSHoption&quot;&gt;CURLSHoption&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="bee61d2790cf5b59bf08c583d689695cb51ed39c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURL_SOCKET_TIMEOUT&quot;&gt;CURL_SOCKET_TIMEOUT&lt;/strong&gt; = CURL_SOCKET_BAD;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURL_SOCKET_TIMEOUT&quot;&gt;CURL_SOCKET_TIMEOUT&lt;/strong&gt; = CURL_SOCKET_BAD;</target>
        </trans-unit>
        <trans-unit id="278074d4f088cc5174f3edc0e29586918898ea85" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLcode&quot;&gt;CURLcode&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLcode&quot;&gt;CURLcode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="0ef665c371e21228b752948c3048b6092d18842a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLoption&quot;&gt;CURLoption&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLoption&quot;&gt;CURLoption&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="9a6a37101a378795fff25d58442a41e62b0ff316" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CURLversion&quot;&gt;CURLversion&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CURLversion&quot;&gt;CURLversion&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="43808d3e34b17ca85b402dbb638519917a894cb0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CaseSensitive&quot;&gt;CaseSensitive&lt;/strong&gt; = std.typecons.Flag!&quot;caseSensitive&quot;.Flag;</source>
          <target state="translated">별명 &lt;strong id=&quot;CaseSensitive&quot;&gt;CaseSensitive&lt;/strong&gt; = std.typecons.Flag! &quot;caseSensitive&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="b4eb901fa05a3be796a0cf5c4799366280b8d056" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CheckDns&quot;&gt;CheckDns&lt;/strong&gt; = std.typecons.Flag!&quot;checkDns&quot;.Flag;</source>
          <target state="translated">별명 &lt;strong id=&quot;CheckDns&quot;&gt;CheckDns&lt;/strong&gt; = std.typecons.Flag! &quot;checkDns&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="c986682a26c64c3e9dbab299c77169ad56d30069" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ClassDeclaration_&quot;&gt;ClassDeclaration_&lt;/strong&gt; = void*;</source>
          <target state="translated">별명 &lt;strong id=&quot;ClassDeclaration_&quot;&gt;ClassDeclaration_&lt;/strong&gt; = void *;</target>
        </trans-unit>
        <trans-unit id="33117c2d5a87fda6201623a5437bdb6dcbde64f8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CodepointSet&quot;&gt;CodepointSet&lt;/strong&gt; = InversionList!(GcPolicy).InversionList;</source>
          <target state="translated">alias &lt;strong id=&quot;CodepointSet&quot;&gt;CodepointSet&lt;/strong&gt; = InversionList! (GcPolicy) .InversionList;</target>
        </trans-unit>
        <trans-unit id="f508ca1b9a7da7485846f7fcd6adb0ea31d1c92c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RBRange!(const(RBNode)*);</source>
          <target state="translated">별칭 &lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RBRange! (const (RBNode) *);</target>
        </trans-unit>
        <trans-unit id="06d5acafb4e7407c29de0b70dbf56e268bc6bccc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RangeT!(const(Array));</source>
          <target state="translated">별명 &lt;strong id=&quot;ConstRange&quot;&gt;ConstRange&lt;/strong&gt; = RangeT! (const (Array));</target>
        </trans-unit>
        <trans-unit id="df21137410819c4a39438ff651d33c6bbd8befe8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt; = std.typecons.Flag!&quot;&lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt;&quot;.Flag;</source>
          <target state="translated">alias &lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt; = std.typecons.Flag! &quot; &lt;strong id=&quot;CreateFolder&quot;&gt;CreateFolder&lt;/strong&gt; &quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="e19fa90a591fce0186b9e006303938d8cd29936a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CurlCode&quot;&gt;CurlCode&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CurlCode&quot;&gt;CurlCode&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="16039bb1cbbcf4bb410adef18c14ceb9de6265b4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;CurlProxy&quot;&gt;CurlProxy&lt;/strong&gt; = etc.c.curl.&lt;strong id=&quot;CurlProxy&quot;&gt;CurlProxy&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;CurlProxy&quot;&gt;CurlProxy&lt;/strong&gt; = 등 c. 컬. &lt;strong id=&quot;CurlProxy&quot;&gt;컬 프록시&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="568d17d4cfdd25bd4ad0b2b12e408c3d0f7f9ff6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;DateTimeException&quot;&gt;DateTimeException&lt;/strong&gt; = core.time.TimeException;</source>
          <target state="translated">별명 &lt;strong id=&quot;DateTimeException&quot;&gt;DateTimeException&lt;/strong&gt; = core.time.TimeException;</target>
        </trans-unit>
        <trans-unit id="20e47686ffb05231fce8ce448dadf1c4bdc7ff0e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;DosFileTime&quot;&gt;DosFileTime&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;DosFileTime&quot;&gt;DosFileTime&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="30601f503b93ed109c6af8d5939e449f24092bc5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Elem&quot;&gt;Elem&lt;/strong&gt; = T;</source>
          <target state="translated">별명 &lt;strong id=&quot;Elem&quot;&gt;Elem&lt;/strong&gt; = T;</target>
        </trans-unit>
        <trans-unit id="d7a024ca89d80a0ec754ae7bec15230f24527001" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Element&quot;&gt;Element&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;Element&quot;&gt;요소&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="585f4f639534371feba0c422f3992b968c674e12" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Elf64_Addr&quot;&gt;Elf64_Addr&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;Elf64_Addr&quot;&gt;Elf64_Addr&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="c6d3c2ed45e3be69108685725fb0cb1f9cdb9f9c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ExceptionMask&quot;&gt;ExceptionMask&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;ExceptionMask&quot;&gt;ExceptionMask&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="10b9f21c880baf6866f47c53cfcbbab861ec101c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ExtendedModuleUnitTester&quot;&gt;ExtendedModuleUnitTester&lt;/strong&gt; = UnitTestResult function();</source>
          <target state="translated">별명 &lt;strong id=&quot;ExtendedModuleUnitTester&quot;&gt;ExtendedModuleUnitTester&lt;/strong&gt; = UnitTestResult function ();</target>
        </trans-unit>
        <trans-unit id="205955d5b4a35a9b23cc68f1f0e1cb199ee0d1e6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FILE&quot;&gt;FILE&lt;/strong&gt; = _IO_FILE;</source>
          <target state="translated">별명 &lt;strong id=&quot;FILE&quot;&gt;FILE&lt;/strong&gt; = _IO_FILE;</target>
        </trans-unit>
        <trans-unit id="e6c0f768d495460002889928acd29f5d658d7270" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FL&quot;&gt;FL&lt;/strong&gt; = int;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;FL&quot;&gt;FL&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="417524eabdf4858e02bd33d2414ef0c926fe41f6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt; = core.stdc.math.&lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt; = core.stdc.math. &lt;strong id=&quot;FP_ILOGB0&quot;&gt;FP_ILOGB0&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8a88106b406e76b3acb4a345116637b6f85af776" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt; = core.stdc.math.&lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt; = core.stdc.math. &lt;strong id=&quot;FP_ILOGBNAN&quot;&gt;FP_ILOGBNAN&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="adf01f14a2f2cf7ec7f8e9c82093f8c5ea95b92c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FUNCTIONPOINT&quot;&gt;FUNCTIONPOINT&lt;/strong&gt; = CURLOPTTYPE_FUNCTIONPOINT;</source>
          <target state="translated">별칭 &lt;strong id=&quot;FUNCTIONPOINT&quot;&gt;FUNCTIONPOINT&lt;/strong&gt; = CURLOPTTYPE_FUNCTIONPOINT;</target>
        </trans-unit>
        <trans-unit id="4dac6eb78990d1ff9de2cacc528665dc43262505" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;FieldTypeTuple&quot;&gt;FieldTypeTuple&lt;/strong&gt; = Fields(T);</source>
          <target state="translated">별명 &lt;strong id=&quot;FieldTypeTuple&quot;&gt;FieldTypeTuple&lt;/strong&gt; = 필드 (T);</target>
        </trans-unit>
        <trans-unit id="194c7b6dadbb9ed50b19260b1bea6cf1cb0c64a2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;GCFactory&quot;&gt;GCFactory&lt;/strong&gt; = GC function();</source>
          <target state="translated">별칭 &lt;strong id=&quot;GCFactory&quot;&gt;GCFactory&lt;/strong&gt; = GC 함수 ();</target>
        </trans-unit>
        <trans-unit id="7f59fac0bca7f5e885a4ba1efc923ff555a54434" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT16_C&quot;&gt;INT16_C&lt;/strong&gt; = _typify!short._typify;</source>
          <target state="translated">별칭 &lt;strong id=&quot;INT16_C&quot;&gt;INT16_C&lt;/strong&gt; = _typify! short._typify;</target>
        </trans-unit>
        <trans-unit id="ac47bfab576eea1670d347dad7f45928ed95b138" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT32_C&quot;&gt;INT32_C&lt;/strong&gt; = _typify!int._typify;</source>
          <target state="translated">별칭 &lt;strong id=&quot;INT32_C&quot;&gt;INT32_C&lt;/strong&gt; = _typify! int._typify;</target>
        </trans-unit>
        <trans-unit id="9b961e8b9f0d9f086f0cb15e75f37471fe7216a5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT64_C&quot;&gt;INT64_C&lt;/strong&gt; = _typify!long._typify;</source>
          <target state="translated">별칭 &lt;strong id=&quot;INT64_C&quot;&gt;INT64_C&lt;/strong&gt; = _typify! long._typify;</target>
        </trans-unit>
        <trans-unit id="a3dcc9b8348d68125565dd89f1f552e714998456" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INT8_C&quot;&gt;INT8_C&lt;/strong&gt; = _typify!byte._typify;</source>
          <target state="translated">별칭 &lt;strong id=&quot;INT8_C&quot;&gt;INT8_C&lt;/strong&gt; = _typify! byte._typify;</target>
        </trans-unit>
        <trans-unit id="0598e95dbe8c7a647498e5ad3c7103cf7756ff62" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;INTMAX_C&quot;&gt;INTMAX_C&lt;/strong&gt; = _typify!long._typify;</source>
          <target state="translated">별칭 &lt;strong id=&quot;INTMAX_C&quot;&gt;INTMAX_C&lt;/strong&gt; = _typify! long._typify;</target>
        </trans-unit>
        <trans-unit id="c06a45278f529bcd4312420bdfa5cbcfec5a9f6e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RBRange!(immutable(RBNode)*);</source>
          <target state="translated">별칭 &lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RBRange! (immutable (RBNode) *);</target>
        </trans-unit>
        <trans-unit id="5cfa3534249b3edbc71e16caf2dae764a6914002" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RangeT!(immutable(Array));</source>
          <target state="translated">별칭 &lt;strong id=&quot;ImmutableRange&quot;&gt;ImmutableRange&lt;/strong&gt; = RangeT! (immutable (Array));</target>
        </trans-unit>
        <trans-unit id="0c590d2b82800774c4153178b12ab7cb0a1d9103" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;IsMarkedDg&quot;&gt;IsMarkedDg&lt;/strong&gt; = int delegate(void* addr) nothrow;</source>
          <target state="translated">별칭 &lt;strong id=&quot;IsMarkedDg&quot;&gt;IsMarkedDg&lt;/strong&gt; = int delegate (void * addr) nothrow;</target>
        </trans-unit>
        <trans-unit id="0bb78e2a6e10a581fa50121298d2dc42cb97d40a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;KeepTerminator&quot;&gt;KeepTerminator&lt;/strong&gt; = std.typecons.Flag!&quot;keepTerminator&quot;.Flag;</source>
          <target state="translated">별칭 &lt;strong id=&quot;KeepTerminator&quot;&gt;KeepTerminator&lt;/strong&gt; = std.typecons.Flag! &quot;keepTerminator&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="514c554ea0cf9c21885e9ad7ad66b1196e27d15a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;LONG&quot;&gt;LONG&lt;/strong&gt; = CURLOPTTYPE_LONG;</source>
          <target state="translated">별칭 &lt;strong id=&quot;LONG&quot;&gt;LONG&lt;/strong&gt; = CURLOPTTYPE_LONG;</target>
        </trans-unit>
        <trans-unit id="79f5e1bc6bac448e4f0053160a51712124b167a7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Latin1String&quot;&gt;Latin1String&lt;/strong&gt; = immutable(Latin1Char)[];</source>
          <target state="translated">별명 &lt;strong id=&quot;Latin1String&quot;&gt;Latin1String에&lt;/strong&gt; = 불변 (Latin1Char)];</target>
        </trans-unit>
        <trans-unit id="c12966e74c11e99604171e425127feed3900a595" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Latin2String&quot;&gt;Latin2String&lt;/strong&gt; = immutable(Latin2Char)[];</source>
          <target state="translated">alias &lt;strong id=&quot;Latin2String&quot;&gt;Latin2String&lt;/strong&gt; = 불변 (Latin2Char) [];</target>
        </trans-unit>
        <trans-unit id="00866f41663f0f1ecfbcc6f08cbff2d7f6c35728" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MD5Digest&quot;&gt;MD5Digest&lt;/strong&gt; = std.digest.WrapperDigest!(MD5).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;MD5Digest&quot;&gt;MD5Digest&lt;/strong&gt; = std.digest.WrapperDigest! (MD5) .WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="e2a98a01d50148b31d883760ea72595c31539832" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MinstdRand&quot;&gt;MinstdRand&lt;/strong&gt; = LinearCongruentialEngine!(uint, 48271u, 0u, 2147483647u).LinearCongruentialEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;MinstdRand&quot;&gt;MinstdRand&lt;/strong&gt; = LinearCongruentialEngine! (uint, 48271u, 0u, 2147483647u) .LinearCongruentialEngine;</target>
        </trans-unit>
        <trans-unit id="690baf0bb88b1f642479f27a0e464c32bf144a84" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MinstdRand0&quot;&gt;MinstdRand0&lt;/strong&gt; = LinearCongruentialEngine!(uint, 16807u, 0u, 2147483647u).LinearCongruentialEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;MinstdRand0&quot;&gt;MinstdRand0&lt;/strong&gt; = LinearCongruentialEngine! (uint, 16807u, 0u, 2147483647u) .LinearCongruentialEngine;</target>
        </trans-unit>
        <trans-unit id="4c3e3e926838b170eb2080bfd23e350c41dedf58" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ModuleUnitTester&quot;&gt;ModuleUnitTester&lt;/strong&gt; = bool function();</source>
          <target state="translated">별명 &lt;strong id=&quot;ModuleUnitTester&quot;&gt;ModuleUnitTester&lt;/strong&gt; = bool function ();</target>
        </trans-unit>
        <trans-unit id="4a0664f287125b4e2cf67b0e2e39ed9807e22bb7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;MonoTime&quot;&gt;MonoTime&lt;/strong&gt; = MonoTimeImpl!cast(ClockType)0.MonoTimeImpl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;MonoTime&quot;&gt;MonoTime&lt;/strong&gt; = MonoTimeImpl! cast (ClockType) 0.MonoTimeImpl;</target>
        </trans-unit>
        <trans-unit id="1782de53052c855df00f1dd5074c31e3fa2933a1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Mt19937&quot;&gt;Mt19937&lt;/strong&gt; = MersenneTwisterEngine!(uint, 32LU, 624LU, 397LU, 31LU, 2567483615u, 11LU, 4294967295u, 7LU, 2636928640u, 15LU, 4022730752u, 18LU, 1812433253u).MersenneTwisterEngine;</source>
          <target state="translated">alias &lt;strong id=&quot;Mt19937&quot;&gt;Mt19937&lt;/strong&gt; = MersenneTwisterEngine! (uint, 32LU, 624LU, 397LU, 31LU, 2567483615u, 11LU, 4294967295u, 7LU, 2636928640u, 15LU, 4022730752u, 18LU, 1812433253u) .MersenneTwisterEngine;</target>
        </trans-unit>
        <trans-unit id="33f9205f17b10c29115425ecc23a619d7b727500" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Mt19937_64&quot;&gt;Mt19937_64&lt;/strong&gt; = MersenneTwisterEngine!(ulong, 64LU, 312LU, 156LU, 31LU, 13043109905998158313LU, 29LU, 6148914691236517205LU, 17LU, 8202884508482404352LU, 37LU, 18444473444759240704LU, 43LU, 6364136223846793005LU).MersenneTwisterEngine;</source>
          <target state="translated">alias &lt;strong id=&quot;Mt19937_64&quot;&gt;Mt19937_64&lt;/strong&gt; = MersenneTwisterEngine! (ulong, 64LU, 312LU, 156LU, 31LU, 13043109905998158313LU, 29LU, 6148914691236517205LU, 17LU, 8202884508482404352LU, 37LU, 18444473444759240704LU, 43LU, 6364136223846793005WI)</target>
        </trans-unit>
        <trans-unit id="b65c2f3816a932149a4362b657312be988754b56" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;OBJECTPOINT&quot;&gt;OBJECTPOINT&lt;/strong&gt; = CURLOPTTYPE_OBJECTPOINT;</source>
          <target state="translated">별명 &lt;strong id=&quot;OBJECTPOINT&quot;&gt;OBJECTPOINT&lt;/strong&gt; = CURLOPTTYPE_OBJECTPOINT;</target>
        </trans-unit>
        <trans-unit id="6ff939daa4f4766ad318f76b8e7dbb94c62b992a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;OFF_T&quot;&gt;OFF_T&lt;/strong&gt; = CURLOPTTYPE_OFF_T;</source>
          <target state="translated">별칭 &lt;strong id=&quot;OFF_T&quot;&gt;OFF_T&lt;/strong&gt; = CURLOPTTYPE_OFF_T;</target>
        </trans-unit>
        <trans-unit id="ca9af3ad8d0d1a16d82d664d545342980066f476" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;OpenRight&quot;&gt;OpenRight&lt;/strong&gt; = std.typecons.Flag!&quot;openRight&quot;.Flag;</source>
          <target state="translated">별칭 &lt;strong id=&quot;OpenRight&quot;&gt;OpenRight&lt;/strong&gt; = std.typecons.Flag! &quot;openRight&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="b28a7f4fd04b85b476be44422bce2eef13d43989" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ParameterDefaultValueTuple&quot;&gt;ParameterDefaultValueTuple&lt;/strong&gt; = ParameterDefaults(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func);</source>
          <target state="translated">alias &lt;strong id=&quot;ParameterDefaultValueTuple&quot;&gt;ParameterDefaultValueTuple&lt;/strong&gt; = ParameterDefaults (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func);</target>
        </trans-unit>
        <trans-unit id="06b867874e0236680798e4e6a25be349a6865cd0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ParameterTypeTuple&quot;&gt;ParameterTypeTuple&lt;/strong&gt; = Parameters(func...) if (func.length == 1 &amp;amp;&amp;amp; isCallable!func);</source>
          <target state="translated">alias &lt;strong id=&quot;ParameterTypeTuple&quot;&gt;ParameterTypeTuple&lt;/strong&gt; = 매개 변수 (func ...) if (func.length == 1 &amp;amp;&amp;amp; isCallable! func);</target>
        </trans-unit>
        <trans-unit id="a14f95c5bff227381c095d7a9730dc87659f0304" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;PopFirst&quot;&gt;PopFirst&lt;/strong&gt; = std.typecons.Flag!&quot;popFirst&quot;.Flag;</source>
          <target state="translated">별명 &lt;strong id=&quot;PopFirst&quot;&gt;PopFirst&lt;/strong&gt; = std.typecons.Flag! &quot;popFirst&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="7244c5a2ce8b9d59e2fe1114f3dd5c86967b2129" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RIPEMD160Digest&quot;&gt;RIPEMD160Digest&lt;/strong&gt; = std.digest.WrapperDigest!(RIPEMD160).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;RIPEMD160Digest&quot;&gt;RIPEMD160Digest&lt;/strong&gt; = std.digest.WrapperDigest! (RIPEMD160) .WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="70ca825cdd7c07e65c754bc2275b8044d88eb4ae" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Random&quot;&gt;Random&lt;/strong&gt; = MersenneTwisterEngine!(uint, 32LU, 624LU, 397LU, 31LU, 2567483615u, 11LU, 4294967295u, 7LU, 2636928640u, 15LU, 4022730752u, 18LU, 1812433253u).MersenneTwisterEngine;</source>
          <target state="translated">alias &lt;strong id=&quot;Random&quot;&gt;Random&lt;/strong&gt; = MersenneTwisterEngine! (uint, 32LU, 624LU, 397LU, 31LU, 2567483615u, 11LU, 4294967295u, 7LU, 2636928640u, 15LU, 4022730752u, 18LU, 1812433253u) .MersenneTwisterEngine;</target>
        </trans-unit>
        <trans-unit id="750139e09816e29b8b16a402cf24d512039aec70" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Range&quot;&gt;Range&lt;/strong&gt; = RBRange!(RBNode*);</source>
          <target state="translated">별칭 &lt;strong id=&quot;Range&quot;&gt;범위&lt;/strong&gt; = RBRange! (RBNode *);</target>
        </trans-unit>
        <trans-unit id="3903e796aa41d2a9cdda260c32c09dfda1635563" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Range&quot;&gt;Range&lt;/strong&gt; = RangeT!Array;</source>
          <target state="translated">별명 &lt;strong id=&quot;Range&quot;&gt;범위&lt;/strong&gt; = RangeT! 배열;</target>
        </trans-unit>
        <trans-unit id="9590a9c1c98e6dcfcb4cc03a77fe14074fc1c5a3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RefT&quot;&gt;RefT&lt;/strong&gt; = T;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;RefT&quot;&gt;RefT&lt;/strong&gt; = T;</target>
        </trans-unit>
        <trans-unit id="2f4d5e046a4d82cc85576c72703e5bc33b8dc423" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt; = std.regex.internal.ir.&lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt; = std.regex.internal.ir. &lt;strong id=&quot;RegexException&quot;&gt;RegexException&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e9ae073f4645d1aa4b7fcd9241ded9ffabdf542e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Representation&quot;&gt;Representation&lt;/strong&gt; = T;</source>
          <target state="translated">별명 &lt;strong id=&quot;Representation&quot;&gt;표현&lt;/strong&gt; = T;</target>
        </trans-unit>
        <trans-unit id="3fc9e6d75898aaa07c27402514b32207f82b1284" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ReturnType&quot;&gt;ReturnType&lt;/strong&gt; = typeof(fun(_args));</source>
          <target state="translated">별칭 &lt;strong id=&quot;ReturnType&quot;&gt;ReturnType&lt;/strong&gt; = typeof (fun (_args));</target>
        </trans-unit>
        <trans-unit id="473a1e4ea7fa1426ce8d622e5397a1101f14606f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;RoundingMode&quot;&gt;RoundingMode&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;RoundingMode&quot;&gt;RoundingMode&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="b8b94f6c4ba725a76abd9e975887c05d6c79babe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SC&quot;&gt;SC&lt;/strong&gt; = int;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;SC&quot;&gt;SC&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="f426386f7681664e2efc6f883bbdba5934caa803" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA1&quot;&gt;SHA1&lt;/strong&gt; = SHA!(512u, 160u).SHA;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA1&quot;&gt;SHA1&lt;/strong&gt; = SHA! (512u, 160u) .SHA;</target>
        </trans-unit>
        <trans-unit id="0e211c8b0bc93f32b288cf0264bc3c7c40b1f7a3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA1Digest&quot;&gt;SHA1Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(512u, 160u)).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA1Digest&quot;&gt;SHA1Digest&lt;/strong&gt; = std.digest.WrapperDigest! (SHA! (512u, 160u)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="f7458b1465c12f383eb1e78411fc07b66d5c83f9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA224&quot;&gt;SHA224&lt;/strong&gt; = SHA!(512u, 224u).SHA;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA224&quot;&gt;SHA224&lt;/strong&gt; = SHA! (512u, 224u) .SHA;</target>
        </trans-unit>
        <trans-unit id="8fcad978f632bd33a73fc68aa30cc70832047eb1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA224Digest&quot;&gt;SHA224Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(512u, 224u)).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA224Digest&quot;&gt;SHA224Digest&lt;/strong&gt; = std.digest.WrapperDigest! (SHA! (512u, 224u)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="6a13705eaefc845d593adee0f16acea806fed7f2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA256&quot;&gt;SHA256&lt;/strong&gt; = SHA!(512u, 256u).SHA;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA256&quot;&gt;SHA256&lt;/strong&gt; = SHA! (512u, 256u) .SHA;</target>
        </trans-unit>
        <trans-unit id="783f8f67d503f518f015fb548ac29d62b31133fb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA256Digest&quot;&gt;SHA256Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(512u, 256u)).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA256Digest&quot;&gt;SHA256Digest&lt;/strong&gt; = std.digest.WrapperDigest! (SHA! (512u, 256u)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="c41ae3a8cc057981ffbd5cc37b49e76ce8e00b29" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA384&quot;&gt;SHA384&lt;/strong&gt; = SHA!(1024u, 384u).SHA;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA384&quot;&gt;SHA384&lt;/strong&gt; = SHA! (1024u, 384u) .SHA;</target>
        </trans-unit>
        <trans-unit id="4263c69e1db073c21daa40efabff09c0cb13929a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA384Digest&quot;&gt;SHA384Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 384u)).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA384Digest&quot;&gt;SHA384Digest&lt;/strong&gt; = std.digest.WrapperDigest! (SHA! (1024u, 384u)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="bb3944d4148cf9aa74bbe2342b62919f21090af3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512&quot;&gt;SHA512&lt;/strong&gt; = SHA!(1024u, 512u).SHA;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA512&quot;&gt;SHA512&lt;/strong&gt; = SHA! (1024u, 512u) .SHA;</target>
        </trans-unit>
        <trans-unit id="6479a84e131fd89e4aa4fdfa0cb0f1454d12031a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512Digest&quot;&gt;SHA512Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 512u)).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA512Digest&quot;&gt;SHA512Digest&lt;/strong&gt; = std.digest.WrapperDigest! (SHA! (1024u, 512u)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="b45a0f390042be603390bfb4f83ffa8856799565" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_224&quot;&gt;SHA512_224&lt;/strong&gt; = SHA!(1024u, 224u).SHA;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA512_224&quot;&gt;SHA512_224&lt;/strong&gt; = SHA! (1024u, 224u) .SHA;</target>
        </trans-unit>
        <trans-unit id="3ece9c60a1266a9fb5a8d0d6268db6b1e2a9cb39" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_224Digest&quot;&gt;SHA512_224Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 224u)).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA512_224Digest&quot;&gt;SHA512_224Digest&lt;/strong&gt; = std.digest.WrapperDigest! (SHA! (1024u, 224u)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="dd2421d2fa0975c1bbdefa2cb4a123b7a95be498" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_256&quot;&gt;SHA512_256&lt;/strong&gt; = SHA!(1024u, 256u).SHA;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA512_256&quot;&gt;SHA512_256&lt;/strong&gt; = SHA! (1024u, 256u) .SHA;</target>
        </trans-unit>
        <trans-unit id="9d933be6e96bdeccdc3e74c3b81debea0a997e51" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SHA512_256Digest&quot;&gt;SHA512_256Digest&lt;/strong&gt; = std.digest.WrapperDigest!(SHA!(1024u, 256u)).WrapperDigest;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SHA512_256Digest&quot;&gt;SHA512_256Digest&lt;/strong&gt; = std.digest.WrapperDigest! (SHA! (1024u, 256u)). WrapperDigest;</target>
        </trans-unit>
        <trans-unit id="cae73265c5de54e59b5bf95a1663ada92c6ed8a8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ScanAllThreadsFn&quot;&gt;ScanAllThreadsFn&lt;/strong&gt; = void delegate(void*, void*) nothrow;</source>
          <target state="translated">별칭 &lt;strong id=&quot;ScanAllThreadsFn&quot;&gt;ScanAllThreadsFn&lt;/strong&gt; = void delegate (void *, void *) nothrow;</target>
        </trans-unit>
        <trans-unit id="8c14c9f5050cf47b7cd8ee1601f11f616c97bcd6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ScanAllThreadsTypeFn&quot;&gt;ScanAllThreadsTypeFn&lt;/strong&gt; = void delegate(ScanType, void*, void*) nothrow;</source>
          <target state="translated">별칭 &lt;strong id=&quot;ScanAllThreadsTypeFn&quot;&gt;ScanAllThreadsTypeFn&lt;/strong&gt; = void delegate (ScanType, void *, void *) nothrow;</target>
        </trans-unit>
        <trans-unit id="ef9f324195c918487020d0ce2d2bb03ace83c5fb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;SortOutput&quot;&gt;SortOutput&lt;/strong&gt; = std.typecons.Flag!&quot;sortOutput&quot;.Flag;</source>
          <target state="translated">별칭 &lt;strong id=&quot;SortOutput&quot;&gt;SortOutput&lt;/strong&gt; = std.typecons.Flag! &quot;sortOutput&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="6b429002044dfd5e92db2d06f559e49072d75bcd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;StaticRegex&quot;&gt;StaticRegex&lt;/strong&gt; = Regex(Char);</source>
          <target state="translated">별명 &lt;strong id=&quot;StaticRegex&quot;&gt;StaticRegex&lt;/strong&gt; = 정규식 (Char);</target>
        </trans-unit>
        <trans-unit id="e48dad6a2e5adfa27287ae708ea01dd9dc8c83a7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ThreadID&quot;&gt;ThreadID&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;ThreadID&quot;&gt;ThreadID&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="875adf8104677ede44f6ed0da8dcf7df98fa1644" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ThrowOnError&quot;&gt;ThrowOnError&lt;/strong&gt; = std.typecons.Flag!&quot;throwOnError&quot;.Flag;</source>
          <target state="translated">alias &lt;strong id=&quot;ThrowOnError&quot;&gt;ThrowOnError&lt;/strong&gt; = std.typecons.Flag! &quot;throwOnError&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="a67feb9ac61a52cd66f27661016aaa951c558bba" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;TimeCond&quot;&gt;TimeCond&lt;/strong&gt; = etc.c.curl.CurlTimeCond;</source>
          <target state="translated">별칭 &lt;strong id=&quot;TimeCond&quot;&gt;TimeCond&lt;/strong&gt; = etc.c.curl.CurlTimeCond;</target>
        </trans-unit>
        <trans-unit id="856da67287e30226394545145edd95535dd34795" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;TraceHandler&quot;&gt;TraceHandler&lt;/strong&gt; = TraceInfo function(void* ptr);</source>
          <target state="translated">alias &lt;strong id=&quot;TraceHandler&quot;&gt;TraceHandler&lt;/strong&gt; = TraceInfo 함수 (void * ptr);</target>
        </trans-unit>
        <trans-unit id="1e4f07782e271ccfec4a4d52d52428534752c20f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Types&quot;&gt;Types&lt;/strong&gt; = staticMap!(extractType, fieldSpecs);</source>
          <target state="translated">별명 &lt;strong id=&quot;Types&quot;&gt;유형&lt;/strong&gt; = staticMap! (extractType, fieldSpecs);</target>
        </trans-unit>
        <trans-unit id="95bb23ce63d4298f8ccc31473e000520de4f2171" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT16_C&quot;&gt;UINT16_C&lt;/strong&gt; = _typify!ushort._typify;</source>
          <target state="translated">별명 &lt;strong id=&quot;UINT16_C&quot;&gt;UINT16_C&lt;/strong&gt; = _typify! ushort._typify;</target>
        </trans-unit>
        <trans-unit id="55f75149370054eab9d8f1791b89e8c375a778b3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT32_C&quot;&gt;UINT32_C&lt;/strong&gt; = _typify!uint._typify;</source>
          <target state="translated">별명 &lt;strong id=&quot;UINT32_C&quot;&gt;UINT32_C&lt;/strong&gt; = _typify! uint._typify;</target>
        </trans-unit>
        <trans-unit id="8cb6dd2b6443365daeb3e8fe647536a5816681b1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT64_C&quot;&gt;UINT64_C&lt;/strong&gt; = _typify!ulong._typify;</source>
          <target state="translated">별명 &lt;strong id=&quot;UINT64_C&quot;&gt;UINT64_C&lt;/strong&gt; = _typify! ulong._typify;</target>
        </trans-unit>
        <trans-unit id="6a54464a4452378451f8790bd9f843ffc5261932" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINT8_C&quot;&gt;UINT8_C&lt;/strong&gt; = _typify!ubyte._typify;</source>
          <target state="translated">별명 &lt;strong id=&quot;UINT8_C&quot;&gt;UINT8_C&lt;/strong&gt; = _typify! ubyte._typify;</target>
        </trans-unit>
        <trans-unit id="2b14b4e6e7594f87bf3ead80279dfcd6c87fe005" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UINTMAX_C&quot;&gt;UINTMAX_C&lt;/strong&gt; = _typify!ulong._typify;</source>
          <target state="translated">별명 &lt;strong id=&quot;UINTMAX_C&quot;&gt;UINTMAX_C&lt;/strong&gt; = _typify! ulong._typify;</target>
        </trans-unit>
        <trans-unit id="4c2aa77ff8d91fff84532b7a5468d9fa527e2b7d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;UseReplacementDchar&quot;&gt;UseReplacementDchar&lt;/strong&gt; = std.typecons.Flag!&quot;useReplacementDchar&quot;.Flag;</source>
          <target state="translated">별명 &lt;strong id=&quot;UseReplacementDchar&quot;&gt;UseReplacementDchar&lt;/strong&gt; = std.typecons.Flag! &quot;useReplacementDchar&quot;.Flag;</target>
        </trans-unit>
        <trans-unit id="3ef3557f77a29e58903b2e8194a09bc18d38dad1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Variant&quot;&gt;Variant&lt;/strong&gt; = VariantN!32LU.VariantN;</source>
          <target state="translated">별명 &lt;strong id=&quot;Variant&quot;&gt;Variant&lt;/strong&gt; = VariantN! 32LU.VariantN;</target>
        </trans-unit>
        <trans-unit id="5e2369afe1c0860b53d715f3568f2d3d4b329bbd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Windows1250String&quot;&gt;Windows1250String&lt;/strong&gt; = immutable(Windows1250Char)[];</source>
          <target state="translated">별명 &lt;strong id=&quot;Windows1250String&quot;&gt;Windows1250String&lt;/strong&gt; = 불변 (Windows1250Char) [];</target>
        </trans-unit>
        <trans-unit id="6d951dc7a8b58312220c11fa5df880c4f3097f28" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Windows1251String&quot;&gt;Windows1251String&lt;/strong&gt; = immutable(Windows1251Char)[];</source>
          <target state="translated">별명 &lt;strong id=&quot;Windows1251String&quot;&gt;Windows1251String&lt;/strong&gt; = 불변 (Windows1251Char) [];</target>
        </trans-unit>
        <trans-unit id="e6dee8a64df2307cef1a6c68790b30eb785df11c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Windows1252String&quot;&gt;Windows1252String&lt;/strong&gt; = immutable(Windows1252Char)[];</source>
          <target state="translated">별명 &lt;strong id=&quot;Windows1252String&quot;&gt;Windows1252String&lt;/strong&gt; = 불변 (Windows1252Char) [];</target>
        </trans-unit>
        <trans-unit id="2889a10e8a58186049bc79d11795ad0650e77356" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift&quot;&gt;Xorshift&lt;/strong&gt; = XorshiftEngine!(uint, 128u, 11, -8, -19).XorshiftEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;Xorshift&quot;&gt;Xorshift&lt;/strong&gt; = XorshiftEngine! (uint, 128u, 11, -8, -19) .XorshiftEngine;</target>
        </trans-unit>
        <trans-unit id="7e34f2d9de88961bc53e8d291fba1afbde051ac0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift128&quot;&gt;Xorshift128&lt;/strong&gt; = XorshiftEngine!(uint, 128u, 11, -8, -19).XorshiftEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;Xorshift128&quot;&gt;Xorshift128&lt;/strong&gt; = XorshiftEngine! (uint, 128u, 11, -8, -19) .XorshiftEngine;</target>
        </trans-unit>
        <trans-unit id="a90cbc61c42369a6781d50d1453f624232f58fc1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift160&quot;&gt;Xorshift160&lt;/strong&gt; = XorshiftEngine!(uint, 160u, 2, -1, -4).XorshiftEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;Xorshift160&quot;&gt;Xorshift160&lt;/strong&gt; = XorshiftEngine! (uint, 160u, 2, -1, -4) .XorshiftEngine;</target>
        </trans-unit>
        <trans-unit id="9c5f4792cbc2d087de2518754ab0484da2e59a4a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift192&quot;&gt;Xorshift192&lt;/strong&gt; = XorshiftEngine!(uint, 192u, -2, 1, 4).XorshiftEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;Xorshift192&quot;&gt;Xorshift192&lt;/strong&gt; = XorshiftEngine! (uint, 192u, -2, 1, 4) .XorshiftEngine;</target>
        </trans-unit>
        <trans-unit id="ae0fbf3f1d08d5693da7dadf400095eb9d46e65d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift32&quot;&gt;Xorshift32&lt;/strong&gt; = XorshiftEngine!(uint, 32u, 13, -17, 15).XorshiftEngine;</source>
          <target state="translated">alias &lt;strong id=&quot;Xorshift32&quot;&gt;Xorshift32&lt;/strong&gt; = XorshiftEngine! (uint, 32u, 13, -17, 15) .XorshiftEngine;</target>
        </trans-unit>
        <trans-unit id="c9bf71fdcf1d7a5c1aff8e6b1e471f66a525b219" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift64&quot;&gt;Xorshift64&lt;/strong&gt; = XorshiftEngine!(uint, 64u, 10, -13, -10).XorshiftEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;Xorshift64&quot;&gt;Xorshift64&lt;/strong&gt; = XorshiftEngine! (uint, 64u, 10, -13, -10) .XorshiftEngine;</target>
        </trans-unit>
        <trans-unit id="332c4d85169c7e7d2a2f5f1b8a3cc83612a54d65" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;Xorshift96&quot;&gt;Xorshift96&lt;/strong&gt; = XorshiftEngine!(uint, 96u, 10, -5, -26).XorshiftEngine;</source>
          <target state="translated">별칭 &lt;strong id=&quot;Xorshift96&quot;&gt;Xorshift96&lt;/strong&gt; = XorshiftEngine! (uint, 96u, 10, -5, -26) .XorshiftEngine;</target>
        </trans-unit>
        <trans-unit id="28c311c7947fa20ce90a701713546d166c854a80" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_compare_fp_t&quot;&gt;_compare_fp_t&lt;/strong&gt; = extern (C) int function(const(void*), const(void*)) @system;</source>
          <target state="translated">별명 &lt;strong id=&quot;_compare_fp_t&quot;&gt;_compare_fp_t&lt;/strong&gt; = extern (C) int 함수 (const (void *), const (void *)) @system;</target>
        </trans-unit>
        <trans-unit id="eb86794d34bf7966554d7c3d4f5bb36e1eabc283" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arrayappendTTrace&quot;&gt;_d_arrayappendTTrace&lt;/strong&gt; = _d_HookTraceImpl!(Tarr, _d_arrayappendT, errorMessage);</source>
          <target state="translated">별칭 &lt;strong id=&quot;_d_arrayappendTTrace&quot;&gt;_d_arrayappendTTrace&lt;/strong&gt; = _d_HookTraceImpl! (Tarr, _d_arrayappendT, errorMessage);</target>
        </trans-unit>
        <trans-unit id="63fbdd765e2492b357e2b0542cb7ca2957861316" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arrayappendcTXTrace&quot;&gt;_d_arrayappendcTXTrace&lt;/strong&gt; = _d_HookTraceImpl!(Tarr, _d_arrayappendcTX, errorMessage);</source>
          <target state="translated">별칭 &lt;strong id=&quot;_d_arrayappendcTXTrace&quot;&gt;_d_arrayappendcTXTrace&lt;/strong&gt; = _d_HookTraceImpl! (Tarr, _d_arrayappendcTX, errorMessage);</target>
        </trans-unit>
        <trans-unit id="983a64934348d856be83fc8f23400608c814a784" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arraycatnTXTrace&quot;&gt;_d_arraycatnTXTrace&lt;/strong&gt; = _d_HookTraceImpl!(ResultArrT, _d_arraycatnTX, errorMessage);</source>
          <target state="translated">별칭 &lt;strong id=&quot;_d_arraycatnTXTrace&quot;&gt;_d_arraycatnTXTrace&lt;/strong&gt; = _d_HookTraceImpl! (ResultArrT, _d_arraycatnTX, errorMessage);</target>
        </trans-unit>
        <trans-unit id="beac3785c51090bee8f14ba9c2a851aa2d53d5ed" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_d_arraysetlengthTTrace&quot;&gt;_d_arraysetlengthTTrace&lt;/strong&gt; = _d_HookTraceImpl!(Tarr, _d_arraysetlengthT, errorMessage);</source>
          <target state="translated">별칭 &lt;strong id=&quot;_d_arraysetlengthTTrace&quot;&gt;_d_arraysetlengthTTrace&lt;/strong&gt; = _d_HookTraceImpl! (Tarr, _d_arraysetlengthT, errorMessage);</target>
        </trans-unit>
        <trans-unit id="d52c52fc523fdb9d6e695bffd8dfe119a62236d2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;_iobuf&quot;&gt;_iobuf&lt;/strong&gt; = _IO_FILE;</source>
          <target state="translated">별명 &lt;strong id=&quot;_iobuf&quot;&gt;_iobuf&lt;/strong&gt; = _IO_FILE;</target>
        </trans-unit>
        <trans-unit id="0526c1f80e3c213c5a4b8431b208ad0576e0645a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="618ba3c9884aaa07e8f1c2115af51569f65ea930" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = core.stdc.complex.cacosl;</source>
          <target state="translated">별명 &lt;strong id=&quot;acos&quot;&gt;acos&lt;/strong&gt; = core.stdc.complex.cacosl;</target>
        </trans-unit>
        <trans-unit id="e4ac032daafe310d85ee66c4d80417c1d6cd40a2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ec0fa6cb9dd432e6d568e6a0c3bed0364cc74ac8" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = core.stdc.complex.cacoshl;</source>
          <target state="translated">별명 &lt;strong id=&quot;acosh&quot;&gt;acosh&lt;/strong&gt; = core.stdc.complex.cacoshl;</target>
        </trans-unit>
        <trans-unit id="b3d59802dc0171e30bdce02c43146a3998fb9e9f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = Allocator.&lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;alignment&quot;&gt;정렬&lt;/strong&gt; = 할당 자. &lt;strong id=&quot;alignment&quot;&gt;정렬&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="87d13510f865687a84e4b5f58fb2b1d2ddb2661d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = ParentAllocator.&lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;alignment&quot;&gt;정렬&lt;/strong&gt; = ParentAllocator. &lt;strong id=&quot;alignment&quot;&gt;정렬&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d50d5567db97149d8a526a8e094a4aaf0bd1907e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = minAlign;</source>
          <target state="translated">별칭 &lt;strong id=&quot;alignment&quot;&gt;정렬&lt;/strong&gt; = minAlign;</target>
        </trans-unit>
        <trans-unit id="b7c43f9fb7f990fe73d420eecda47bb4b66976aa" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;alignment&quot;&gt;alignment&lt;/strong&gt; = theAlignment;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;alignment&quot;&gt;정렬&lt;/strong&gt; = &lt;strong id=&quot;alignment&quot;&gt;정렬&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="85333218887429326223c71e0b78402ce9d647af" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;allocator_type&quot;&gt;allocator_type&lt;/strong&gt; = Alloc;</source>
          <target state="translated">별명 &lt;strong id=&quot;allocator_type&quot;&gt;allocator_type&lt;/strong&gt; = Alloc;</target>
        </trans-unit>
        <trans-unit id="fe37c3081642f1eb2800360e02e4b56d4707520d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;args&quot;&gt;args&lt;/strong&gt; = _args[1 .. __dollar];</source>
          <target state="translated">별칭 &lt;strong id=&quot;args&quot;&gt;인수&lt;/strong&gt; = _args [1 .. __dollar];</target>
        </trans-unit>
        <trans-unit id="5b973575924434354028fca5629213321bd68cd2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ede0f1b7163b376f1c2fdf8fce9dc916ef6f3173" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = core.stdc.complex.casinl;</source>
          <target state="translated">별명 &lt;strong id=&quot;asin&quot;&gt;asin&lt;/strong&gt; = core.stdc.complex.casinl;</target>
        </trans-unit>
        <trans-unit id="4246e2d0c71e1360cb3abedb9fb0321e14c8c0bd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6a58837fabe1ac7990b323b49b29e5aaedbf6cd3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = core.stdc.complex.casinhl;</source>
          <target state="translated">별명 &lt;strong id=&quot;asinh&quot;&gt;asinh&lt;/strong&gt; = core.stdc.complex.casinhl;</target>
        </trans-unit>
        <trans-unit id="1bd9379549e84d21391aca0a2c6e33125ab31d4d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="aade6c62ad19ed5bf1656de0da761f80deba1695" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = core.stdc.complex.catanl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;atan&quot;&gt;atan&lt;/strong&gt; = core.stdc.complex.catanl;</target>
        </trans-unit>
        <trans-unit id="943b2a59ff6322ac0a9a30a13d3c8f3ac2ac6659" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5755e94d8aff9f54caa7b4d4214c9c56cd8c4ebc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = core.stdc.math.atan2l;</source>
          <target state="translated">별칭 &lt;strong id=&quot;atan2&quot;&gt;atan2&lt;/strong&gt; = core.stdc.math.atan2l;</target>
        </trans-unit>
        <trans-unit id="ee23b807c81dff1b4c738c740b75df9ff6e99a8b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="64ba8a11e3a6dd0bc48a214d4c03e2dd89ead9e3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = core.stdc.complex.catanhl;</source>
          <target state="translated">별명 &lt;strong id=&quot;atanh&quot;&gt;atanh&lt;/strong&gt; = core.stdc.complex.catanhl;</target>
        </trans-unit>
        <trans-unit id="cd3c30e39b5c3d6830295ed51960f9738aa6ab3a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;blockSize&quot;&gt;blockSize&lt;/strong&gt; = theBlockSize;</source>
          <target state="translated">별명 &lt;strong id=&quot;blockSize&quot;&gt;blockSize&lt;/strong&gt; = theBlockSize;</target>
        </trans-unit>
        <trans-unit id="b660fe91bfb693ed5d712f7fceff607302218ebd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF!(char, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">alias &lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF!(char, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</target>
        </trans-unit>
        <trans-unit id="fe3266f7da1a19efef18c2c23eee693e22637dee" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF!char.byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">별명 &lt;strong id=&quot;byChar&quot;&gt;byChar&lt;/strong&gt; = byUTF! char.byUTF (R) (R r) if (isAutodecodableString! R &amp;amp;&amp;amp; isInputRange! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R));</target>
        </trans-unit>
        <trans-unit id="afbd9556602c3b419bdd291a883453e9ecfa933d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF!(dchar, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">alias &lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF!(dchar, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</target>
        </trans-unit>
        <trans-unit id="cf181ef3cf7a348b492b5818cebe7a41e5aaa5f2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF!dchar.byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">별명 &lt;strong id=&quot;byDchar&quot;&gt;byDchar&lt;/strong&gt; = byUTF! dchar.byUTF (R) (R r) if (isAutodecodableString! R &amp;amp;&amp;amp; isInputRange! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R));</target>
        </trans-unit>
        <trans-unit id="4782be22424396f92cc819e8cc3429ab999b4571" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF!(wchar, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">alias &lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF!(wchar, cast(Flag)true).byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</target>
        </trans-unit>
        <trans-unit id="58a83a2c569747fdbe377878cef199c974d64adb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF!wchar.byUTF(R)(R r) if (isAutodecodableString!R &amp;amp;&amp;amp; isInputRange!R &amp;amp;&amp;amp; isSomeChar!(ElementEncodingType!R));</source>
          <target state="translated">별명 &lt;strong id=&quot;byWchar&quot;&gt;byWchar&lt;/strong&gt; = byUTF! wchar.byUTF (R) (R r) if (isAutodecodableString! R &amp;amp;&amp;amp; isInputRange! R &amp;amp;&amp;amp; isSomeChar! (ElementEncodingType! R));</target>
        </trans-unit>
        <trans-unit id="2d5b21ba34eb95da18300c864ed4a77cb9630e33" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;byte16&quot;&gt;byte16&lt;/strong&gt; = __vector(byte[16]);</source>
          <target state="translated">별명 &lt;strong id=&quot;byte16&quot;&gt;byte16&lt;/strong&gt; = __vector (바이트 [16]);</target>
        </trans-unit>
        <trans-unit id="7d70d558525ef4cc2b52192560b3e40c0ca5c4ba" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt; = &lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt;;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;carg&quot;&gt;카그&lt;/strong&gt; = &lt;strong id=&quot;carg&quot;&gt;카그&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="760b93d24837f552ad25028b9fcb0a515537c362" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt; = core.stdc.complex.cargl;</source>
          <target state="translated">별명 &lt;strong id=&quot;carg&quot;&gt;carg&lt;/strong&gt; = core.stdc.complex.cargl;</target>
        </trans-unit>
        <trans-unit id="4fcfa15dfc03e25d6197d9dfeba2549940974119" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="abbb6f1bda6a60e80554fd1480dc0610142be29a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = core.stdc.math.cbrtl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;cbrt&quot;&gt;cbrt&lt;/strong&gt; = core.stdc.math.cbrtl;</target>
        </trans-unit>
        <trans-unit id="a83059b6f2f0bb76cd7e0fc66a47e33f3817949b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fc0d53c025e031125ab29e3c56b891a578ae3835" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = core.stdc.math.ceill;</source>
          <target state="translated">별명 &lt;strong id=&quot;ceil&quot;&gt;ceil&lt;/strong&gt; = core.stdc.math.ceill;</target>
        </trans-unit>
        <trans-unit id="645aac154274589f4130d04936985e8614802808" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="49b143d0368d14b216d204117a45ecd9723d6d07" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = core.stdc.complex.cimagl;</source>
          <target state="translated">별명 &lt;strong id=&quot;cimag&quot;&gt;cimag&lt;/strong&gt; = core.stdc.complex.cimagl;</target>
        </trans-unit>
        <trans-unit id="94ad54f56cdbc4da396e341f28a1e9a7bad81ccd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;complex&quot;&gt;complex&lt;/strong&gt; = creal;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;complex&quot;&gt;컴플렉스&lt;/strong&gt; = creal;</target>
        </trans-unit>
        <trans-unit id="0c4d977f8648380aaae1e698d17ca09c155f2e62" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="08f5ebba614915d807c974e6544552caf8b9fadd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = core.stdc.complex.conjl;</source>
          <target state="translated">별명 &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt; = core.stdc.complex.conjl;</target>
        </trans-unit>
        <trans-unit id="9369e12ad4f5a2dfba11254af79f235d23cbe8ec" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const(T)*;</source>
          <target state="translated">별칭 &lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const (T) *;</target>
        </trans-unit>
        <trans-unit id="169d5d15b2ffa4172203eaff3850b48faa8871e3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const(value_type)*;</source>
          <target state="translated">별칭 &lt;strong id=&quot;const_pointer&quot;&gt;const_pointer&lt;/strong&gt; = const (value_type) *;</target>
        </trans-unit>
        <trans-unit id="bcc1f6a9188a928e8e2a049c85f0da342f1eb139" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="356f5b6311b4f55554f7b01779b334f0a47bb7ae" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = core.stdc.math.copysignl;</source>
          <target state="translated">별명 &lt;strong id=&quot;copysign&quot;&gt;copysign&lt;/strong&gt; = core.stdc.math.copysignl;</target>
        </trans-unit>
        <trans-unit id="1fdb7a80fe353c4b06b8cca32319091daf7d586e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="18976074d8dc55ebfb022926bd199e96d12a9e3b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = core.stdc.complex.ccosl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; = core.stdc.complex.ccosl;</target>
        </trans-unit>
        <trans-unit id="cd2f22447a9191e0503b649f9e3c02411e448c6a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4b4724c9c997fa033cd797a550bff7a6132af38e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = core.stdc.complex.ccoshl;</source>
          <target state="translated">별명 &lt;strong id=&quot;cosh&quot;&gt;cosh&lt;/strong&gt; = core.stdc.complex.ccoshl;</target>
        </trans-unit>
        <trans-unit id="c1b95e204122438d9bebb8be107540e58a8e1992" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2329a46232c07f4e418d4e99773ae9ec9baf849a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = core.stdc.complex.cprojl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;cproj&quot;&gt;cproj&lt;/strong&gt; = core.stdc.complex.cprojl;</target>
        </trans-unit>
        <trans-unit id="9193c8afa4b755d18b91323063c5982254261d9f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1cbc0795ec8ec9640b654b016d76261208d0b68d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = std.digest.toHexString!(cast(Order)true, 16LU, cast(LetterCase)false).toHexString;</source>
          <target state="translated">별칭 &lt;strong id=&quot;crcHexString&quot;&gt;crcHexString&lt;/strong&gt; = std.digest.toHexString! (cast (Order) true, 16LU, cast (LetterCase) false) .toHexString;</target>
        </trans-unit>
        <trans-unit id="72701b09ee939e3ea0f24807774f28d74e646d82" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;critical&quot;&gt;critical&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)160u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">별칭 &lt;strong id=&quot;critical&quot;&gt;중요&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 160u.logImpl (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) if (args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (A [0] : bool));</target>
        </trans-unit>
        <trans-unit id="bf66195049ea30aecc8b48b99fe77d4335312671" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;critical&quot;&gt;critical&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)160u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">별명 &lt;strong id=&quot;critical&quot;&gt;중요&lt;/strong&gt; = defaultLogFunction! cast (LogLevel) cast (ubyte) 160u.defaultLogFunction (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy A args) if (args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (Unqual! (A [0]) : bool) || args.length == 0);</target>
        </trans-unit>
        <trans-unit id="5f7748db48f723cce4db6336ac844f1ea0da3b3d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)160u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 160u.logImplf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 문자열 메시지, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="4131543b85b58c5d636e1394f42b7ae535bf384d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)160u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;criticalf&quot;&gt;criticalf&lt;/strong&gt; = defaultLogFunctionf! cast (LogLevel) cast (ubyte) 160u.defaultLogFunctionf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 모듈 이름 = __MODULE__, A ...) (lazy string msg, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="e4481ad01faf13363fea0b61ddcaa508a347898b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dd39beab14ea25a81a52b4ee6cff8bf5315eaec2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = core.stdc.complex.csinl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;csin&quot;&gt;csin&lt;/strong&gt; = core.stdc.complex.csinl;</target>
        </trans-unit>
        <trans-unit id="9a949b71883cfcdedf8a83999712d89495a9ea36" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_TimeCond&quot;&gt;curl_TimeCond&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_TimeCond&quot;&gt;curl_TimeCond&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="58e86d120cab1f781c36181aaa523ec96829be3b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_calloc_callback&quot;&gt;curl_calloc_callback&lt;/strong&gt; = void* function(ulong nmemb, ulong size);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_calloc_callback&quot;&gt;curl_calloc_callback&lt;/strong&gt; = void * 함수 (ulong nmemb, ulong 크기);</target>
        </trans-unit>
        <trans-unit id="8b2be8b8d52c35ad034039fa7fcc3a34da6a4017" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_chunk_bgn_callback&quot;&gt;curl_chunk_bgn_callback&lt;/strong&gt; = long function(const(void)* transfer_info, void* ptr, int remains);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_chunk_bgn_callback&quot;&gt;curl_chunk_bgn_callback&lt;/strong&gt; = 긴 함수 (const (void) * transfer_info, void * ptr, int &lt;strong id=&quot;curl_chunk_bgn_callback&quot;&gt;left&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="d2ff16a57891d95c9145b18426014ef6bfacfdbc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_chunk_end_callback&quot;&gt;curl_chunk_end_callback&lt;/strong&gt; = long function(void* ptr);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_chunk_end_callback&quot;&gt;curl_chunk_end_callback&lt;/strong&gt; = 긴 함수 (void * ptr);</target>
        </trans-unit>
        <trans-unit id="af81d2948fcc31b894ebf224351049dff4198252" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_closepolicy&quot;&gt;curl_closepolicy&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_closepolicy&quot;&gt;curl_closepolicy&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="a1c05c3f2befcc55b905f71f68420a9107be5f14" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_conv_callback&quot;&gt;curl_conv_callback&lt;/strong&gt; = int function(char* buffer, ulong length);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_conv_callback&quot;&gt;curl_conv_callback&lt;/strong&gt; = int 함수 (char * 버퍼, ulong 길이);</target>
        </trans-unit>
        <trans-unit id="c59d1e1472eeb6d0af1ae428c3d59801b3a6ffed" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_debug_callback&quot;&gt;curl_debug_callback&lt;/strong&gt; = int function(void* handle, int type, char* data, ulong size, void* userptr);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_debug_callback&quot;&gt;curl_debug_callback&lt;/strong&gt; = int 함수 (void * handle, int type, char * data, ulong size, void * userptr);</target>
        </trans-unit>
        <trans-unit id="6618f55227faf7a7355394072306115078ba209f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int function(void* ptr, const(char*) pattern, const(char*) string);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int 함수 (void * ptr, const (char *) 패턴, const (char *) 문자열);</target>
        </trans-unit>
        <trans-unit id="60e42a7877a0218abd2f97a19446e6bdd06693d0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int function(void* ptr, in char* pattern, in char* string);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_fnmatch_callback&quot;&gt;curl_fnmatch_callback&lt;/strong&gt; = int function(void* ptr, in char* pattern, in char* string);</target>
        </trans-unit>
        <trans-unit id="da9837c51d6af1fdd38177c0b544bbfd9c96694c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern (C) ulong function(void* arg, const(char*) buf, ulong len);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern (C) ulong 함수 (void * arg, const (char *) buf, ulong len);</target>
        </trans-unit>
        <trans-unit id="89ef21b279a5540edb266ccefbcf31154661cc4f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern (C) ulong function(void* arg, in char* buf, ulong len);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_formget_callback&quot;&gt;curl_formget_callback&lt;/strong&gt; = extern (C) ulong function(void* arg, in char* buf, ulong len);</target>
        </trans-unit>
        <trans-unit id="0ba2b61739eb89d274e92cf716137dd6b58a6cdc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_free_callback&quot;&gt;curl_free_callback&lt;/strong&gt; = void function(void* ptr);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_free_callback&quot;&gt;curl_free_callback&lt;/strong&gt; = void 함수 (void * ptr);</target>
        </trans-unit>
        <trans-unit id="7eae2b512d24161e9b33a80a38c30ec5ab03b221" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpauth&quot;&gt;curl_ftpauth&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_ftpauth&quot;&gt;curl_ftpauth&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="33bbc666f342bb5b5ef70da067ff0bab880a6664" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpccc&quot;&gt;curl_ftpccc&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_ftpccc&quot;&gt;curl_ftpccc&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="8961d9b69e08e966e4772527b72c740260dd1abd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpcreatedir&quot;&gt;curl_ftpcreatedir&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_ftpcreatedir&quot;&gt;curl_ftpcreatedir&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="5e37e5db17a21111efd9baa298cd0d7b6bfd7c65" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ftpmethod&quot;&gt;curl_ftpmethod&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_ftpmethod&quot;&gt;curl_ftpmethod&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="98a6ea725cf666644bc014a65c90b00a884dee09" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_infotype&quot;&gt;curl_infotype&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_infotype&quot;&gt;curl_infotype&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="6de51e23231c3d87891df945b1b2e2d86a3bef44" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ioctl_callback&quot;&gt;curl_ioctl_callback&lt;/strong&gt; = int function(void* handle, int cmd, void* clientp);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_ioctl_callback&quot;&gt;curl_ioctl_callback&lt;/strong&gt; = int 함수 (void * handle, int cmd, void * clientp);</target>
        </trans-unit>
        <trans-unit id="73969dd142445296fbaa39d08a7cd17c0ec824e4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_lock_access&quot;&gt;curl_lock_access&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_lock_access&quot;&gt;curl_lock_access&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="0d682ea89ac66d71a6432b0ef6ac6aa13fdf7131" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_lock_data&quot;&gt;curl_lock_data&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_lock_data&quot;&gt;curl_lock_data&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="9466dc84d5e4334ff73d99dd84c110ea752116e2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_lock_function&quot;&gt;curl_lock_function&lt;/strong&gt; = void function(void* handle, int data, int locktype, void* userptr);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_lock_function&quot;&gt;curl_lock_function&lt;/strong&gt; = void 함수 (void * handle, int 데이터, int locktype, void * userptr);</target>
        </trans-unit>
        <trans-unit id="47cfdd59335226d1e6b450314a1e15bab2ea4018" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_malloc_callback&quot;&gt;curl_malloc_callback&lt;/strong&gt; = void* function(ulong size);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_malloc_callback&quot;&gt;curl_malloc_callback&lt;/strong&gt; = void * 함수 (ulong size);</target>
        </trans-unit>
        <trans-unit id="6f11645fcf7d678fe408a3541df8b66781ee1db0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_multi_timer_callback&quot;&gt;curl_multi_timer_callback&lt;/strong&gt; = extern (C) int function(void* multi, long timeout_ms, void* userp);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_multi_timer_callback&quot;&gt;curl_multi_timer_callback&lt;/strong&gt; = extern (C) int 함수 (void * multi, long timeout_ms, void * userp);</target>
        </trans-unit>
        <trans-unit id="c5d3345371ca80aad0c7b6fe3f71b172bbc9a869" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_off_t&quot;&gt;curl_off_t&lt;/strong&gt; = long;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_off_t&quot;&gt;curl_off_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="818131d29990ef07b62ccf2963afbea8985fb717" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_opensocket_callback&quot;&gt;curl_opensocket_callback&lt;/strong&gt; = socket_t function(void* clientp, int purpose, curl_sockaddr* address);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_opensocket_callback&quot;&gt;curl_opensocket_callback&lt;/strong&gt; = socket_t 함수 (void * clientp, int 목적, curl_sockaddr * 주소);</target>
        </trans-unit>
        <trans-unit id="3e7349367da3fb4202fc8297d7f98591f5981e90" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_progress_callback&quot;&gt;curl_progress_callback&lt;/strong&gt; = int function(void* clientp, double dltotal, double dlnow, double ultotal, double ulnow);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_progress_callback&quot;&gt;curl_progress_callback&lt;/strong&gt; = int 함수 (void * clientp, double dltotal, double dlnow, double ultotal, double ulnow);</target>
        </trans-unit>
        <trans-unit id="608344257cdfcbc299c4512fb683c8987edba573" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_proxytype&quot;&gt;curl_proxytype&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;curl_proxytype&quot;&gt;curl_proxytype&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="693b28e9e16da63cd1f3cbbb8618345a5ba9e734" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_read_callback&quot;&gt;curl_read_callback&lt;/strong&gt; = ulong function(char* buffer, ulong size, ulong nitems, void* instream);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_read_callback&quot;&gt;curl_read_callback&lt;/strong&gt; = ulong 함수 (char * 버퍼, ulong 크기, ulong nitems, void * 인스 트림);</target>
        </trans-unit>
        <trans-unit id="bc3a96315e0ccdd8842d86e843fea5829fb8b9fe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_realloc_callback&quot;&gt;curl_realloc_callback&lt;/strong&gt; = void* function(void* ptr, ulong size);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_realloc_callback&quot;&gt;curl_realloc_callback&lt;/strong&gt; = void * 함수 (void * ptr, ulong 크기);</target>
        </trans-unit>
        <trans-unit id="b7cf64205e0403fd361b4d7ad7737a5b477648e4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_seek_callback&quot;&gt;curl_seek_callback&lt;/strong&gt; = int function(void* instream, long offset, int origin);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_seek_callback&quot;&gt;curl_seek_callback&lt;/strong&gt; = int 함수 (void * &lt;strong id=&quot;curl_seek_callback&quot;&gt;instream&lt;/strong&gt; , long offset, int origin);</target>
        </trans-unit>
        <trans-unit id="c983d93187d0f16ed301d4790b05d876e438464a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_socket_callback&quot;&gt;curl_socket_callback&lt;/strong&gt; = extern (C) int function(void* easy, socket_t s, int what, void* userp, void* socketp);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_socket_callback&quot;&gt;curl_socket_callback&lt;/strong&gt; = extern (C) int 함수 (void * easy, socket_t s, int what, void * userp, void * socketp);</target>
        </trans-unit>
        <trans-unit id="92104eb3af2bf15b670027196afa4ed37a671aaa" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_socket_t&quot;&gt;curl_socket_t&lt;/strong&gt; = std.socket.socket_t;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_socket_t&quot;&gt;curl_socket_t&lt;/strong&gt; = std.socket.socket_t;</target>
        </trans-unit>
        <trans-unit id="ffc0def919f1639273b8e4f191b798914096f52d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_sockopt_callback&quot;&gt;curl_sockopt_callback&lt;/strong&gt; = int function(void* clientp, socket_t curlfd, int purpose);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_sockopt_callback&quot;&gt;curl_sockopt_callback&lt;/strong&gt; = int 함수 (void * clientp, socket_t curlfd, int 목적);</target>
        </trans-unit>
        <trans-unit id="9fc153a4dcfba47c6b5dec09b02308a807a6010e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_sshkeycallback&quot;&gt;curl_sshkeycallback&lt;/strong&gt; = int function(void* easy, const(curl_khkey)* knownkey, const(curl_khkey)* foundkey, CurlKHMatch m, void* clientp);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_sshkeycallback&quot;&gt;curl_sshkeycallback&lt;/strong&gt; = int 함수 (void * easy, const (curl_khkey) * 알려진 키, const (curl_khkey) * foundkey, CurlKHMatch m, void * clientp);</target>
        </trans-unit>
        <trans-unit id="7b8fbd83fe489d7166281f3ba4867fd46236e82b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_ssl_ctx_callback&quot;&gt;curl_ssl_ctx_callback&lt;/strong&gt; = int function(void* curl, void* ssl_ctx, void* userptr);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_ssl_ctx_callback&quot;&gt;curl_ssl_ctx_callback&lt;/strong&gt; = int 함수 (void * curl, void * ssl_ctx, void * userptr);</target>
        </trans-unit>
        <trans-unit id="e7d43d99be8abcc3b4447eea02dcb98d3787c4d0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char* function(const(char*) str);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char * 함수 (const (char *) str);</target>
        </trans-unit>
        <trans-unit id="64bbab93c784df2d8836f1d30bbc7f71a1fd6451" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char* function(in char* str);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_strdup_callback&quot;&gt;curl_strdup_callback&lt;/strong&gt; = char* function(in char* str);</target>
        </trans-unit>
        <trans-unit id="f72712febad332b2e79a7009d74d0591db9b1c90" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_unlock_function&quot;&gt;curl_unlock_function&lt;/strong&gt; = void function(void* handle, int data, void* userptr);</source>
          <target state="translated">alias &lt;strong id=&quot;curl_unlock_function&quot;&gt;curl_unlock_function&lt;/strong&gt; = void 함수 (void * handle, int data, void * userptr);</target>
        </trans-unit>
        <trans-unit id="7a207413716cc69fef3f8c11d363b616d9bc15f5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_usessl&quot;&gt;curl_usessl&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_usessl&quot;&gt;curl_usessl&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="fdd618516d52f279b219a8ef5763648bbc81b1ac" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_version_info_data&quot;&gt;curl_version_info_data&lt;/strong&gt; = _N28;</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_version_info_data&quot;&gt;curl_version_info_data&lt;/strong&gt; = _N28;</target>
        </trans-unit>
        <trans-unit id="4a83e9c6ecf6bbba7e8e1dec380008f7f7bd72ef" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curl_write_callback&quot;&gt;curl_write_callback&lt;/strong&gt; = ulong function(char* buffer, ulong size, ulong nitems, void* outstream);</source>
          <target state="translated">별칭 &lt;strong id=&quot;curl_write_callback&quot;&gt;curl_write_callback&lt;/strong&gt; = ulong 함수 (char * 버퍼, ulong 크기, ulong nitems, void * 아웃 스트림);</target>
        </trans-unit>
        <trans-unit id="8ddd69c112f7157012959e4fe66d94b75a4fbbf9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curlfiletype&quot;&gt;curlfiletype&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;curlfiletype&quot;&gt;curlfiletype&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="c02b5daf309adf5bced5a496c792334b768848c9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curliocmd&quot;&gt;curliocmd&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;curliocmd&quot;&gt;curliocmd&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="85617e27259cd6a0446dbf51e8a383c546fb0071" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curlioerr&quot;&gt;curlioerr&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;curlioerr&quot;&gt;curlioerr&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="a5bdf9726bee8dab51eb77f0f4f962ee92801b1c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;curlsocktype&quot;&gt;curlsocktype&lt;/strong&gt; = int;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;curlsocktype&quot;&gt;컬 타입&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="aa3e1452ca65ed9225c4502630e61727262f82fd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;days&quot;&gt;days&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;days&quot;&gt;days&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별칭 &lt;strong id=&quot;days&quot;&gt;일&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;days&quot;&gt;일&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="b025ac1574175ab2f99a2181749e43b8a8fe4a7c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;dg2_t&quot;&gt;dg2_t&lt;/strong&gt; = int delegate(void*, void*);</source>
          <target state="translated">별명 &lt;strong id=&quot;dg2_t&quot;&gt;dg2_t&lt;/strong&gt; = int delegate (void *, void *);</target>
        </trans-unit>
        <trans-unit id="ba4079ad8ff6a67dae036c57593b3c02e6248d12" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;dg_t&quot;&gt;dg_t&lt;/strong&gt; = int delegate(void*);</source>
          <target state="translated">별칭 &lt;strong id=&quot;dg_t&quot;&gt;dg_t&lt;/strong&gt; = int delegate (void *);</target>
        </trans-unit>
        <trans-unit id="2a9b037fd4bfa4ff38345c74e277cf86dfef4f12" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt; = allocator_type.&lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;difference_type&quot;&gt;차이&lt;/strong&gt; _ 유형 = 할당 자 _ 유형. &lt;strong id=&quot;difference_type&quot;&gt;차이 _ 유형&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8741e31177e1595292fc44a856d4f00790882f36" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;difference_type&quot;&gt;difference_type&lt;/strong&gt; = ptrdiff_t;</source>
          <target state="translated">별칭 &lt;strong id=&quot;difference_type&quot;&gt;차이&lt;/strong&gt; _ 유형 = ptrdiff_t;</target>
        </trans-unit>
        <trans-unit id="2c52cac7636598598f313bc9bab614923e7e7851" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;double2&quot;&gt;double2&lt;/strong&gt; = __vector(double[2]);</source>
          <target state="translated">별칭 &lt;strong id=&quot;double2&quot;&gt;double2&lt;/strong&gt; = __vector (double [2]);</target>
        </trans-unit>
        <trans-unit id="8dfd1d328e39656c8deef5a64eda69724c3d4b37" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;double_t&quot;&gt;double_t&lt;/strong&gt; = double;</source>
          <target state="translated">별칭 &lt;strong id=&quot;double_t&quot;&gt;double_t&lt;/strong&gt; = double;</target>
        </trans-unit>
        <trans-unit id="618198c95843c3fe6c1e58c3c1eb14d5d28b368b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;enum_flags_t&quot;&gt;enum_flags_t&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;enum_flags_t&quot;&gt;enum_flags_t&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="6d0751ae4a67ceb7d76c173d7e9cff4112112ba9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;equalTo&quot;&gt;equalTo&lt;/strong&gt; = safeOp!&quot;==&quot;.safeOp(T0, T1)(auto ref T0 a, auto ref T1 b);</source>
          <target state="translated">alias &lt;strong id=&quot;equalTo&quot;&gt;equalTo&lt;/strong&gt; = safeOp! &quot;==&quot;. safeOp (T0, T1) (자동 참조 T0 a, 자동 참조 T1 b);</target>
        </trans-unit>
        <trans-unit id="6f09aac2bcbd9a2897c94869156540d3ed815a23" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b3296733ad34bd9615eaf69df8283533074f4671" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = core.stdc.math.erfl;</source>
          <target state="translated">별명 &lt;strong id=&quot;erf&quot;&gt;erf&lt;/strong&gt; = core.stdc.math.erfl;</target>
        </trans-unit>
        <trans-unit id="e609ec4341a48a8a750d95a27726345b03745513" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d122fac91e37a5c8729b9e1e704259bc1383192c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = core.stdc.math.erfcl;</source>
          <target state="translated">별명 &lt;strong id=&quot;erfc&quot;&gt;erfc&lt;/strong&gt; = core.stdc.math.erfcl;</target>
        </trans-unit>
        <trans-unit id="d9063d659044cf51e9cc965dda62279c7b620c66" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;errnoEnforce&quot;&gt;errnoEnforce&lt;/strong&gt; = enforce!(ErrnoException).enforce(T)(T value, lazy const(char)[] msg = null, string file = __FILE__, size_t line = __LINE__) if (is(typeof(() { if (!value) { } } )));</source>
          <target state="translated">alias &lt;strong id=&quot;errnoEnforce&quot;&gt;errnoEnforce&lt;/strong&gt; = enforce! (ErrnoException) .enforce (T) (T value, lazy const (char) [] msg = null, 문자열 파일 = __FILE__, size_t line = __LINE__) if (is (typeof (() {if (! value) {}})));</target>
        </trans-unit>
        <trans-unit id="447172d3ad40a71d7ed829e9d0418495e8018346" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)128u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">별칭 &lt;strong id=&quot;error&quot;&gt;오류&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 128u.logImpl (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) if (args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (A [0] : bool));</target>
        </trans-unit>
        <trans-unit id="82a2627f90877ad3505a83961256de6d5c1ba5f7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)128u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">별칭 &lt;strong id=&quot;error&quot;&gt;오류&lt;/strong&gt; = defaultLogFunction! cast (LogLevel) cast (ubyte) 128u.defaultLogFunction (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy A args) if (args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (Unqual! (A [0]) : bool) || args.length == 0);</target>
        </trans-unit>
        <trans-unit id="4e235ae564c0a0e796c2b1089b4f7b7ac337f4e4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)128u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 128u.logImplf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 문자열 메시지, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="09d8be46088ed5055601e43ef194715549282d57" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)128u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">별명 &lt;strong id=&quot;errorf&quot;&gt;errorf&lt;/strong&gt; = defaultLogFunctionf! cast (LogLevel) cast (ubyte) 128u.defaultLogFunctionf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 모듈 이름 = __MODULE__, A ...) (lazy string msg, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="bdb6a6a71ba3292a78719cb29cca2f8bbb73b324" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a763a89fde6207ea26282d57ddb72cfe0f60c341" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = core.stdc.complex.cexpl;</source>
          <target state="translated">별명 &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; = core.stdc.complex.cexpl;</target>
        </trans-unit>
        <trans-unit id="60e56da2d2e0acd344c745e09f8b93b4a6edb711" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="bb7321d58e976ff74a680655fb1da02f4be3878f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = core.stdc.math.exp2l;</source>
          <target state="translated">별명 &lt;strong id=&quot;exp2&quot;&gt;exp2&lt;/strong&gt; = core.stdc.math.exp2l;</target>
        </trans-unit>
        <trans-unit id="ae10acffc126d3400f587d66fc7e26cac2404a95" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cbc3e66b62fc6557ba0661252df59f31b4f3b754" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = core.stdc.math.expm1l;</source>
          <target state="translated">별명 &lt;strong id=&quot;expm1&quot;&gt;expm1&lt;/strong&gt; = core.stdc.math.expm1l;</target>
        </trans-unit>
        <trans-unit id="e4a5947ef92b1e17a8c19496aab435aa37965b7c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; = &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;fabs&quot;&gt;팹&lt;/strong&gt; = &lt;strong id=&quot;fabs&quot;&gt;팹&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5b8151574f03c901640c148933358716d810c704" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; = core.stdc.complex.cabsl;</source>
          <target state="translated">별명 &lt;strong id=&quot;fabs&quot;&gt;fabs&lt;/strong&gt; = core.stdc.complex.cabsl;</target>
        </trans-unit>
        <trans-unit id="0d1f86aa3e812df99cad3fb48ac779d0de46cb4c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;false_type&quot;&gt;false_type&lt;/strong&gt; = integral_constant!(bool, false).integral_constant;</source>
          <target state="translated">alias &lt;strong id=&quot;false_type&quot;&gt;false_type&lt;/strong&gt; = &lt;strong id=&quot;false_type&quot;&gt;integer_constant&lt;/strong&gt; ! (bool, false) .integral_constant;</target>
        </trans-unit>
        <trans-unit id="09ea54bdab555de209f9984793c18a30056b5818" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatal&quot;&gt;fatal&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)192u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">alias &lt;strong id=&quot;fatal&quot;&gt;fatal&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 192u.logImpl (int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A ...) if (args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (A [0] : bool));</target>
        </trans-unit>
        <trans-unit id="6d05d8c9a2473517929fa029fe61c3e6c55aed7c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatal&quot;&gt;fatal&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)192u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">별칭 &lt;strong id=&quot;fatal&quot;&gt;치명적&lt;/strong&gt; = defaultLogFunction! cast (LogLevel) cast (ubyte) 192u.defaultLogFunction (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy A args) if (args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (Unqual! (A [0]) : bool) || args.length == 0);</target>
        </trans-unit>
        <trans-unit id="74e050175aeb5dffef6e320510ba79fd6e2d1372" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)192u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 192u.logImplf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 문자열 메시지, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="a70f22dd1f1712102f579ad0e11fce1ec177f07a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)192u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;fatalf&quot;&gt;fatalf&lt;/strong&gt; = defaultLogFunctionf! cast (LogLevel) cast (ubyte) 192u.defaultLogFunctionf (int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A ...) (게으른 문자열 msg, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="3df64f048a39b2f594b4da992f17ea3de61b8127" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fd_set&quot;&gt;fd_set&lt;/strong&gt; = int;</source>
          <target state="translated">별칭 &lt;strong id=&quot;fd_set&quot;&gt;fd_set&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="e402ba28bc56434c0c97e1ece5fd5d86e5d97bef" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="eac035b41cca6013ff4cee988e05370d9c750f0f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = core.stdc.math.fdiml;</source>
          <target state="translated">별칭 &lt;strong id=&quot;fdim&quot;&gt;fdim&lt;/strong&gt; = core.stdc.math.fdiml;</target>
        </trans-unit>
        <trans-unit id="191e95dabbefbad78b4aefcf87f5e8ec6d8e6570" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fieldNames&quot;&gt;fieldNames&lt;/strong&gt; = staticMap!(extractName, fieldSpecs);</source>
          <target state="translated">별명 &lt;strong id=&quot;fieldNames&quot;&gt;fieldNames&lt;/strong&gt; = staticMap! (extractName, fieldSpecs);</target>
        </trans-unit>
        <trans-unit id="647a300f652c7c2371558508d1c49d333d746afb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;float4&quot;&gt;float4&lt;/strong&gt; = __vector(float[4]);</source>
          <target state="translated">alias &lt;strong id=&quot;float4&quot;&gt;float4&lt;/strong&gt; = __vector (float [4]);</target>
        </trans-unit>
        <trans-unit id="d9b4907872e355147abd9046813ee5e717c7ff5d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;float_t&quot;&gt;float_t&lt;/strong&gt; = float;</source>
          <target state="translated">별칭 &lt;strong id=&quot;float_t&quot;&gt;float_t&lt;/strong&gt; = float;</target>
        </trans-unit>
        <trans-unit id="930400c4196eedc89223e9a9d1621f3a8bb15f8d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;floor&quot;&gt;floor&lt;/strong&gt; = &lt;strong id=&quot;floor&quot;&gt;floor&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;floor&quot;&gt;바닥&lt;/strong&gt; = &lt;strong id=&quot;floor&quot;&gt;바닥&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="053ab22463b06f2cf25e7f9666d3729369ea36d2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;floor&quot;&gt;floor&lt;/strong&gt; = core.stdc.math.floorl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;floor&quot;&gt;층&lt;/strong&gt; = core.stdc.math.floorl;</target>
        </trans-unit>
        <trans-unit id="a78502808249c2a1987ddb87c967d69423ac2c50" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="49d1b86ae544159cc1aa654eb753b0b4fff2726a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = core.stdc.math.fmal;</source>
          <target state="translated">별명 &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; = core.stdc.math.fmal;</target>
        </trans-unit>
        <trans-unit id="cfe7906d58b71c75f021b52905c1d569c18fa71b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt;;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f5d48e8b74614bc612564a820e11fa323f37c747" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = core.stdc.math.fmaxl;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt; = core.stdc.math.fmaxl;</target>
        </trans-unit>
        <trans-unit id="b3b692a6739dc9ede38eda3e443518d69044a4d1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f396a8f9ac4db9633914b754d89439a9d7ec0b97" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = core.stdc.math.fminl;</source>
          <target state="translated">별명 &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt; = core.stdc.math.fminl;</target>
        </trans-unit>
        <trans-unit id="58b5365b2be289c3ecb8273e5096266c1a793bc5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b9eb7f51d099711a013023235f2f6f3b2c882296" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = core.stdc.math.fmodl;</source>
          <target state="translated">별명 &lt;strong id=&quot;fmod&quot;&gt;fmod&lt;/strong&gt; = core.stdc.math.fmodl;</target>
        </trans-unit>
        <trans-unit id="6e30f6c6fa158de00ab24de3d0c8e5159001f3ec" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="13a3b27a949be06e6c7616edff1fcfff53619208" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = core.stdc.math.frexpl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;frexp&quot;&gt;frexp&lt;/strong&gt; = core.stdc.math.frexpl;</target>
        </trans-unit>
        <trans-unit id="ab4ac1d4eab61f6485c4df7a3cd3163ae47631dc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;fts5_extension_function&quot;&gt;fts5_extension_function&lt;/strong&gt; = extern (C) void function(const(Fts5ExtensionApi*) pApi, Fts5Context* pFts, sqlite3_context* pCtx, int nVal, sqlite3_value** apVal) nothrow;</source>
          <target state="translated">별명 &lt;strong id=&quot;fts5_extension_function&quot;&gt;fts5_extension_function&lt;/strong&gt; = extern (C) void 함수 (const (Fts5ExtensionApi *) pApi, Fts5Context * pFts, sqlite3_context * pCtx, int nVal, sqlite3_value ** apVal) nothrow;</target>
        </trans-unit>
        <trans-unit id="d1157c51c97dfc5056057d3e75081848467d1f91" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;gcClrFn&quot;&gt;gcClrFn&lt;/strong&gt; = extern (C) void function();</source>
          <target state="translated">별칭 &lt;strong id=&quot;gcClrFn&quot;&gt;gcClrFn&lt;/strong&gt; = extern (C) void function ();</target>
        </trans-unit>
        <trans-unit id="6a0b82b00d551e37916a8df71f2ea18b55192306" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;gcGetFn&quot;&gt;gcGetFn&lt;/strong&gt; = extern (C) void* function();</source>
          <target state="translated">별칭 &lt;strong id=&quot;gcGetFn&quot;&gt;gcGetFn&lt;/strong&gt; = extern (C) void * function ();</target>
        </trans-unit>
        <trans-unit id="12a1a5ce49605fb0b87b37b2ca38f7a2f5fc250b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;gcSetFn&quot;&gt;gcSetFn&lt;/strong&gt; = extern (C) void function(void*);</source>
          <target state="translated">별칭 &lt;strong id=&quot;gcSetFn&quot;&gt;gcSetFn&lt;/strong&gt; = extern (C) void 함수 (void *);</target>
        </trans-unit>
        <trans-unit id="5546b5ca3ce0eb55b8312e0e07f3e584d4454e44" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;getpid&quot;&gt;getpid&lt;/strong&gt; = core.sys.posix.unistd.&lt;strong id=&quot;getpid&quot;&gt;getpid&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;getpid&quot;&gt;getpid&lt;/strong&gt; = core.sys.posix.unistd. &lt;strong id=&quot;getpid&quot;&gt;getpid&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="72470660f42a93a763736f84d0fa0b7745fb9aee" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;greaterThan&quot;&gt;greaterThan&lt;/strong&gt; = safeOp!&quot;&amp;gt;&quot;.safeOp(T0, T1)(auto ref T0 a, auto ref T1 b);</source>
          <target state="translated">alias &lt;strong id=&quot;greaterThan&quot;&gt;greaterThan&lt;/strong&gt; = safeOp! &quot;&amp;gt;&quot;. safeOp (T0, T1) (자동 참조 T0 a, 자동 참조 T1 b);</target>
        </trans-unit>
        <trans-unit id="254f04dbdcdd078872c5dee9d13531e4ebf7fca9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별명 &lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="009cc77f25a38fb8854d1926b21d038c0ca26c44" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hours&quot;&gt;hours&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;hours&quot;&gt;hours&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별칭 &lt;strong id=&quot;hours&quot;&gt;시간&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;hours&quot;&gt;hours&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="7c20c0fcdf02912adfdbd501d2a96e77806e6fac" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; = &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt;;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; = &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4b8dd7a2d6a819b8d1dcee378c53c5f6f88e90af" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; = core.stdc.math.hypotl;</source>
          <target state="translated">별명 &lt;strong id=&quot;hypot&quot;&gt;hypot&lt;/strong&gt; = core.stdc.math.hypotl;</target>
        </trans-unit>
        <trans-unit id="e11794c2a6fef14be5a474387eaec51fc611eb8b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7b75669f6326ec453ddbfffa2574a0ff8d6f76f1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = core.stdc.math.ilogbl;</source>
          <target state="translated">별명 &lt;strong id=&quot;ilogb&quot;&gt;ilogb&lt;/strong&gt; = core.stdc.math.ilogbl;</target>
        </trans-unit>
        <trans-unit id="88abf7565636c3fff93c5c5491b3bf12fbd1cc17" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;imaginary&quot;&gt;imaginary&lt;/strong&gt; = ireal;</source>
          <target state="translated">별명 &lt;strong id=&quot;imaginary&quot;&gt;가상&lt;/strong&gt; = ireal;</target>
        </trans-unit>
        <trans-unit id="1db986705439e3be32417cc44e181f7931ba18e7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;info&quot;&gt;info&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)64u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">별칭 &lt;strong id=&quot;info&quot;&gt;정보&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 64u.logImpl (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) if (args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (A [0] : bool));</target>
        </trans-unit>
        <trans-unit id="1c0f4e431fb00a2c95a800c4151384e7b0bfd537" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;info&quot;&gt;info&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)64u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">별칭 &lt;strong id=&quot;info&quot;&gt;정보&lt;/strong&gt; = defaultLogFunction! cast (LogLevel) cast (ubyte) 64u.defaultLogFunction (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy A args) if (args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (Unqual! (A [0]) : bool) || args.length == 0);</target>
        </trans-unit>
        <trans-unit id="194c4de22f2da8ff8029b84998814e0209e18e58" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)64u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 64u.logImplf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 문자열 메시지, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="da3a4ae28771efac9ce7731a5a77e054b194dc71" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)64u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;infof&quot;&gt;infof&lt;/strong&gt; = defaultLogFunctionf! cast (LogLevel) cast (ubyte) 64u.defaultLogFunctionf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 모듈 이름 = __MODULE__, A ...) (게으른 문자열 msg, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="b8aeabb76fc8df350ee662d907d051acd47055ca" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = insertBack;</source>
          <target state="translated">별명 &lt;strong id=&quot;insert&quot;&gt;삽입&lt;/strong&gt; = insertBack;</target>
        </trans-unit>
        <trans-unit id="b4d436274378ca3c9e4313d40392b5c5b187bd9f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = insertFront;</source>
          <target state="translated">별명 &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = insertFront;</target>
        </trans-unit>
        <trans-unit id="472e113d06fe974aaafada3f717ebae6c78df469" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;insert&quot;&gt;insert&lt;/strong&gt; = stableInsert;</source>
          <target state="translated">별명 &lt;strong id=&quot;insert&quot;&gt;삽입&lt;/strong&gt; = 안정 &lt;strong id=&quot;insert&quot;&gt;삽입&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="63c644f0388342b356f6df09446322ee85fd65ce" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int16_t&quot;&gt;int16_t&lt;/strong&gt; = short;</source>
          <target state="translated">별명 &lt;strong id=&quot;int16_t&quot;&gt;int16_t&lt;/strong&gt; = 짧음;</target>
        </trans-unit>
        <trans-unit id="938053c3db1a2f952f9837a408a37e6aca729f5b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int32_t&quot;&gt;int32_t&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;int32_t&quot;&gt;int32_t&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="aee7457cf0fa039b4d36fc709a814a9dfc9dcd31" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int4&quot;&gt;int4&lt;/strong&gt; = __vector(int[4]);</source>
          <target state="translated">별명 &lt;strong id=&quot;int4&quot;&gt;int4&lt;/strong&gt; = __vector (int [4]);</target>
        </trans-unit>
        <trans-unit id="d09ac7a514014921e753325664c4b7692553d08c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int64_t&quot;&gt;int64_t&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;int64_t&quot;&gt;int64_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="a2fdb8fc4f7935df32cb8f521759c47359d4ad53" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int8_t&quot;&gt;int8_t&lt;/strong&gt; = byte;</source>
          <target state="translated">별명 &lt;strong id=&quot;int8_t&quot;&gt;int8_t&lt;/strong&gt; = 바이트;</target>
        </trans-unit>
        <trans-unit id="ef10d7904263c2c68ee37680881fbf5cab8da090" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast16_t&quot;&gt;int_fast16_t&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_fast16_t&quot;&gt;int_fast16_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="72f4ea0f6044879fcd85e4b16c381993888e0e4c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast32_t&quot;&gt;int_fast32_t&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_fast32_t&quot;&gt;int_fast32_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="c6ebe00fe5b4b3407edefc41775701e0c86492cf" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast64_t&quot;&gt;int_fast64_t&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_fast64_t&quot;&gt;int_fast64_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="d74549578a0b3548b0f2c6e70f56037dd7f5dfd1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_fast8_t&quot;&gt;int_fast8_t&lt;/strong&gt; = byte;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_fast8_t&quot;&gt;int_fast8_t&lt;/strong&gt; = 바이트;</target>
        </trans-unit>
        <trans-unit id="fbce74d115baf8f06fddb26c06f2bf0df519b910" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least16_t&quot;&gt;int_least16_t&lt;/strong&gt; = short;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_least16_t&quot;&gt;int_least16_t&lt;/strong&gt; = 짧음;</target>
        </trans-unit>
        <trans-unit id="67f73d437b2304e3b407c8ab87cd000282603143" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least32_t&quot;&gt;int_least32_t&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_least32_t&quot;&gt;int_least32_t&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="5817a8981d079e5e1dc046d0a7e4f59dc3ed6a2a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least64_t&quot;&gt;int_least64_t&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_least64_t&quot;&gt;int_least64_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="44cc1b815f41f02e035206aa5793b4ea760a2dc7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;int_least8_t&quot;&gt;int_least8_t&lt;/strong&gt; = byte;</source>
          <target state="translated">별명 &lt;strong id=&quot;int_least8_t&quot;&gt;int_least8_t&lt;/strong&gt; = 바이트;</target>
        </trans-unit>
        <trans-unit id="8eb07e228710eb2adebe5faff10d1e90bf9b1d58" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;intmax_t&quot;&gt;intmax_t&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;intmax_t&quot;&gt;intmax_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="203b6c89737da4a11f46cb099705a2cd71312e19" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;intptr_t&quot;&gt;intptr_t&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;intptr_t&quot;&gt;intptr_t&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="b2220c08db7d1cb26676cf1f8ae84a288f55a5e5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;isExpressionTuple&quot;&gt;isExpressionTuple&lt;/strong&gt; = isExpressions(T...);</source>
          <target state="translated">별명 &lt;strong id=&quot;isExpressionTuple&quot;&gt;isExpressionTuple&lt;/strong&gt; = isExpressions (T ...);</target>
        </trans-unit>
        <trans-unit id="e5bfe324afeac8d43a0b29768ce8c9fc64686c7f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5a2ae907a38aedddf316557818b905a71f1f9767" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = core.stdc.math.ldexpl;</source>
          <target state="translated">별명 &lt;strong id=&quot;ldexp&quot;&gt;ldexp&lt;/strong&gt; = core.stdc.math.ldexpl;</target>
        </trans-unit>
        <trans-unit id="cf63d6637832063bc30b67f97730f7d6801fc643" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt; = size;</source>
          <target state="translated">별명 &lt;strong id=&quot;length&quot;&gt;길이&lt;/strong&gt; = 크기;</target>
        </trans-unit>
        <trans-unit id="f08be964780f77b29d62652f674be3726dd6ffce" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lessThan&quot;&gt;lessThan&lt;/strong&gt; = safeOp!&quot;&amp;lt;&quot;.safeOp(T0, T1)(auto ref T0 a, auto ref T1 b);</source>
          <target state="translated">alias &lt;strong id=&quot;lessThan&quot;&gt;lessThan&lt;/strong&gt; = safeOp! &quot;&amp;lt;&quot;. safeOp (T0, T1) (자동 참조 T0 a, 자동 참조 T1 b);</target>
        </trans-unit>
        <trans-unit id="919d6edc6ee50f8e6b80bbd1e5eb4cd641dbf1c5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; = &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; = &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a3c50ca502dc7175879a4ddb56d49d6e6104e086" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; = core.stdc.math.lgammal;</source>
          <target state="translated">별명 &lt;strong id=&quot;lgamma&quot;&gt;lgamma&lt;/strong&gt; = core.stdc.math.lgammal;</target>
        </trans-unit>
        <trans-unit id="9ba7f609c07cee2cd58245e9ddd336e3eb675b83" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;linearInsert&quot;&gt;linearInsert&lt;/strong&gt; = insertBack;</source>
          <target state="translated">별칭 &lt;strong id=&quot;linearInsert&quot;&gt;linearInsert&lt;/strong&gt; = insertBack;</target>
        </trans-unit>
        <trans-unit id="9a3e53f928cb943cc25c73ca06dd48f2cf6171f6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d8087b5da29833db77c79f911503c34ea63b6c0a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = core.stdc.math.llrintl;</source>
          <target state="translated">별명 &lt;strong id=&quot;llrint&quot;&gt;llrint&lt;/strong&gt; = core.stdc.math.llrintl;</target>
        </trans-unit>
        <trans-unit id="cb83ff1e7d9571c62d5ea21a4fc745fe47c33e34" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;llround&quot;&gt;llround&lt;/strong&gt; = &lt;strong id=&quot;llround&quot;&gt;llround&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;llround&quot;&gt;llround&lt;/strong&gt; = &lt;strong id=&quot;llround&quot;&gt;llround&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fc5533c73837850a8519bcbc4ea7cda3e9387c68" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;llround&quot;&gt;llround&lt;/strong&gt; = core.stdc.math.llroundl;</source>
          <target state="translated">별명 &lt;strong id=&quot;llround&quot;&gt;llround&lt;/strong&gt; = core.stdc.math.llroundl;</target>
        </trans-unit>
        <trans-unit id="7e716d2f7da494f0771d0c7d485d579c544f3736" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt; = &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; = &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6385eca9e2e1fe3344fcc6ff15e0613c333a3e9a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt; = core.stdc.complex.clogl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;log&quot;&gt;로그&lt;/strong&gt; = core.stdc.complex.clogl;</target>
        </trans-unit>
        <trans-unit id="9262c9a7470ddf5ba5a1a33d09320533ef050814" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log10&quot;&gt;log10&lt;/strong&gt; = &lt;strong id=&quot;log10&quot;&gt;log10&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;log10&quot;&gt;log10&lt;/strong&gt; = &lt;strong id=&quot;log10&quot;&gt;log10&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="63c59b1353c26ba23da072cdab0d9f4d405ddc75" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log10&quot;&gt;log10&lt;/strong&gt; = core.stdc.math.log10l;</source>
          <target state="translated">별명 &lt;strong id=&quot;log10&quot;&gt;log10&lt;/strong&gt; = core.stdc.math.log10l;</target>
        </trans-unit>
        <trans-unit id="115ac5899421d2084035bf773648b410ff54d22f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log1p&quot;&gt;log1p&lt;/strong&gt; = &lt;strong id=&quot;log1p&quot;&gt;log1p&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;log1p&quot;&gt;log1p&lt;/strong&gt; = &lt;strong id=&quot;log1p&quot;&gt;log1p&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="043b3f99ff6d26a5b86b3393bfd287ff3f3fc1fe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log1p&quot;&gt;log1p&lt;/strong&gt; = core.stdc.math.log1pl;</source>
          <target state="translated">별명 &lt;strong id=&quot;log1p&quot;&gt;log1p&lt;/strong&gt; = core.stdc.math.log1pl;</target>
        </trans-unit>
        <trans-unit id="9ffe99a22186cd6520147f8b2c8ad493d7f89206" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log2&quot;&gt;log2&lt;/strong&gt; = &lt;strong id=&quot;log2&quot;&gt;log2&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;log2&quot;&gt;log2&lt;/strong&gt; = &lt;strong id=&quot;log2&quot;&gt;log2&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="52f48330b18a77ed1e44680632f550f56bd8c2c6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;log2&quot;&gt;log2&lt;/strong&gt; = core.stdc.math.log2l;</source>
          <target state="translated">별명 &lt;strong id=&quot;log2&quot;&gt;log2&lt;/strong&gt; = core.stdc.math.log2l;</target>
        </trans-unit>
        <trans-unit id="6c0e4c89349979cec863cc4a5d26185ff6d66149" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;logb&quot;&gt;logb&lt;/strong&gt; = &lt;strong id=&quot;logb&quot;&gt;logb&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;logb&quot;&gt;logb&lt;/strong&gt; = &lt;strong id=&quot;logb&quot;&gt;logb&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0932d61ab54094553e6930a3e1cd91a68218880f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;logb&quot;&gt;logb&lt;/strong&gt; = core.stdc.math.logbl;</source>
          <target state="translated">별명 &lt;strong id=&quot;logb&quot;&gt;logb&lt;/strong&gt; = core.stdc.math.logbl;</target>
        </trans-unit>
        <trans-unit id="391ff7cb968e1a506aa9b55436e73a10c604af02" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;long2&quot;&gt;long2&lt;/strong&gt; = __vector(long[2]);</source>
          <target state="translated">별명 &lt;strong id=&quot;long2&quot;&gt;long2&lt;/strong&gt; = __vector (long [2]);</target>
        </trans-unit>
        <trans-unit id="d6e3c7aff88a42f057721752775a4cd63377945b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lrint&quot;&gt;lrint&lt;/strong&gt; = &lt;strong id=&quot;lrint&quot;&gt;lrint&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;lrint&quot;&gt;lrint&lt;/strong&gt; = &lt;strong id=&quot;lrint&quot;&gt;lrint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3b27d4316f2e30b22e337daaa1c15c07db41ddd4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lrint&quot;&gt;lrint&lt;/strong&gt; = core.stdc.math.lrintl;</source>
          <target state="translated">별명 &lt;strong id=&quot;lrint&quot;&gt;lrint&lt;/strong&gt; = core.stdc.math.lrintl;</target>
        </trans-unit>
        <trans-unit id="27acd03b6264acb4ee7dd636c954df369f517cd3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lround&quot;&gt;lround&lt;/strong&gt; = &lt;strong id=&quot;lround&quot;&gt;lround&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;lround&quot;&gt;lround&lt;/strong&gt; = &lt;strong id=&quot;lround&quot;&gt;lround&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8c416f6b5568992d9c4784e6fbd01ff8197bdbc3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;lround&quot;&gt;lround&lt;/strong&gt; = core.stdc.math.lroundl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;lround&quot;&gt;lround&lt;/strong&gt; = core.stdc.math.lroundl;</target>
        </trans-unit>
        <trans-unit id="bf52b6d3b376a4f789ca0148fb3be9a7cb1dbb36" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;mapFunction&quot;&gt;mapFunction&lt;/strong&gt; = extern (C) void function(sqlite3_context*, int, sqlite3_value**) nothrow;</source>
          <target state="translated">별명 &lt;strong id=&quot;mapFunction&quot;&gt;mapFunction&lt;/strong&gt; = extern (C) void 함수 (sqlite3_context *, int, sqlite3_value **) nothrow;</target>
        </trans-unit>
        <trans-unit id="3d1c4a652591d2a83c7fc82d9e05d12e67707a34" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;minutes&quot;&gt;minutes&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;minutes&quot;&gt;minutes&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별칭 &lt;strong id=&quot;minutes&quot;&gt;분&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;minutes&quot;&gt;분&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="258c8d3e5315f47bf36ac65a519426a16a1cfc1c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;modf&quot;&gt;modf&lt;/strong&gt; = &lt;strong id=&quot;modf&quot;&gt;modf&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;modf&quot;&gt;modf&lt;/strong&gt; = &lt;strong id=&quot;modf&quot;&gt;modf&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="13bb353f641b91cc149d224e35dbfb03d059c2ae" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;modf&quot;&gt;modf&lt;/strong&gt; = core.stdc.math.modfl;</source>
          <target state="translated">별명 &lt;strong id=&quot;modf&quot;&gt;modf&lt;/strong&gt; = core.stdc.math.modfl;</target>
        </trans-unit>
        <trans-unit id="8bd5cb7c8149e5ad18a09e2fe0ea68de984fa42e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;mptr_flags_t&quot;&gt;mptr_flags_t&lt;/strong&gt; = char;</source>
          <target state="translated">별칭 &lt;strong id=&quot;mptr_flags_t&quot;&gt;mptr_flags_t&lt;/strong&gt; = char;</target>
        </trans-unit>
        <trans-unit id="b14ac27f3875635796f4a255c0c5e331a8d2a2ef" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;msecs&quot;&gt;msecs&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;msecs&quot;&gt;msecs&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별명 &lt;strong id=&quot;msecs&quot;&gt;msecs&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;msecs&quot;&gt;msecs&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="6f107543dcc2cc456de9ef026cc27f7d89fe097f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nan&quot;&gt;nan&lt;/strong&gt; = &lt;strong id=&quot;nan&quot;&gt;nan&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;nan&quot;&gt;nan&lt;/strong&gt; = &lt;strong id=&quot;nan&quot;&gt;nan&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="88f03a29662462315cc891a07a7d9b9a6d70533d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nan&quot;&gt;nan&lt;/strong&gt; = core.stdc.math.nanl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;nan&quot;&gt;nan&lt;/strong&gt; = core.stdc.math.nanl;</target>
        </trans-unit>
        <trans-unit id="d9d5f842eabea5f2e6efec4ca827d15cd64f6634" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nearbyint&quot;&gt;nearbyint&lt;/strong&gt; = &lt;strong id=&quot;nearbyint&quot;&gt;nearbyint&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;nearbyint&quot;&gt;주변 int&lt;/strong&gt; = &lt;strong id=&quot;nearbyint&quot;&gt;intintint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="604ff3a5814007fc20b6b060fc0f3f7d11010915" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nearbyint&quot;&gt;nearbyint&lt;/strong&gt; = core.stdc.math.nearbyintl;</source>
          <target state="translated">&lt;strong id=&quot;nearbyint&quot;&gt;인근&lt;/strong&gt; 별칭 &lt;strong id=&quot;nearbyint&quot;&gt;int&lt;/strong&gt; = core.stdc.math.nearbyintl;</target>
        </trans-unit>
        <trans-unit id="558965acf79caa84d2f10807f3dbef153f0a711d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nextafter&quot;&gt;nextafter&lt;/strong&gt; = &lt;strong id=&quot;nextafter&quot;&gt;nextafter&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;nextafter&quot;&gt;nextafter&lt;/strong&gt; = &lt;strong id=&quot;nextafter&quot;&gt;다음&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f125d1707f7657493975fcd3887dd674f8e1d900" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nextafter&quot;&gt;nextafter&lt;/strong&gt; = core.stdc.math.nextafterl;</source>
          <target state="translated">별명 &lt;strong id=&quot;nextafter&quot;&gt;nextafter&lt;/strong&gt; = core.stdc.math.nextafterl;</target>
        </trans-unit>
        <trans-unit id="811d06282b512b4986483bd93bf191f7abc9a9d7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nexttoward&quot;&gt;nexttoward&lt;/strong&gt; = &lt;strong id=&quot;nexttoward&quot;&gt;nexttoward&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;nexttoward&quot;&gt;nexttoward&lt;/strong&gt; = &lt;strong id=&quot;nexttoward&quot;&gt;nexttoward&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6a0764de6913580fbd77f92971a5ee90c2499072" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nexttoward&quot;&gt;nexttoward&lt;/strong&gt; = core.stdc.math.nexttowardl;</source>
          <target state="translated">별명 &lt;strong id=&quot;nexttoward&quot;&gt;nexttoward&lt;/strong&gt; = core.stdc.math.nexttowardl;</target>
        </trans-unit>
        <trans-unit id="8e4364921967a2debf6ab147f823f05aaad1000f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nsecs&quot;&gt;nsecs&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;nsecs&quot;&gt;nsecs&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별칭 &lt;strong id=&quot;nsecs&quot;&gt;nsecs&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;nsecs&quot;&gt;nsecs&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="4e143a195b400d1c42401670e0893f4d6367664f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;nullptr_t&quot;&gt;nullptr_t&lt;/strong&gt; = typeof(null);</source>
          <target state="translated">별명 &lt;strong id=&quot;nullptr_t&quot;&gt;nullptr_t&lt;/strong&gt; = typeof (null);</target>
        </trans-unit>
        <trans-unit id="dfe9db040221e2e48b7fa496288be9953f7955fa" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;opDollar&quot;&gt;opDollar&lt;/strong&gt; = length;</source>
          <target state="translated">별명 &lt;strong id=&quot;opDollar&quot;&gt;opDollar&lt;/strong&gt; = 길이;</target>
        </trans-unit>
        <trans-unit id="6a0edfd1086059016e778281e802af8d95f9ddad" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;opflag_t&quot;&gt;opflag_t&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;opflag_t&quot;&gt;opflag_t&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="993b9a6a383090186c7de9c0b10c6149b2285c93" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;pflags_t&quot;&gt;pflags_t&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;pflags_t&quot;&gt;pflags_t&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="d09d6adec16026ea81a55995d09cce2da3f09162" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;pointer&quot;&gt;pointer&lt;/strong&gt; = T*;</source>
          <target state="translated">별명 &lt;strong id=&quot;pointer&quot;&gt;포인터&lt;/strong&gt; = T *;</target>
        </trans-unit>
        <trans-unit id="5c31d0eab2cedb00ad1d31cb957e2167b1eac767" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;pointer&quot;&gt;pointer&lt;/strong&gt; = allocator_type.&lt;strong id=&quot;pointer&quot;&gt;pointer&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;pointer&quot;&gt;포인터&lt;/strong&gt; = allocator_type. &lt;strong id=&quot;pointer&quot;&gt;포인터&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="2747ad1a03e4ec187f5c69e4371efb444253dcfe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;pointer&quot;&gt;pointer&lt;/strong&gt; = value_type*;</source>
          <target state="translated">별칭 &lt;strong id=&quot;pointer&quot;&gt;포인터&lt;/strong&gt; = value_type *;</target>
        </trans-unit>
        <trans-unit id="7e11b393fc3c83c2bbdf21db9c9e643e312dc1f2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt; = removeFront;</source>
          <target state="translated">별명 &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt; = removeFront;</target>
        </trans-unit>
        <trans-unit id="834a51720dc4d0faa149098392b180aa93cc2d6f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;pow&quot;&gt;pow&lt;/strong&gt; = &lt;strong id=&quot;pow&quot;&gt;pow&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;pow&quot;&gt;pow&lt;/strong&gt; = &lt;strong id=&quot;pow&quot;&gt;pow&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="86b39e9811de6e86cb694ccb8b170db858c43ebd" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;pow&quot;&gt;pow&lt;/strong&gt; = core.stdc.complex.cpowl;</source>
          <target state="translated">별명 &lt;strong id=&quot;pow&quot;&gt;pow&lt;/strong&gt; = core.stdc.complex.cpowl;</target>
        </trans-unit>
        <trans-unit id="8314b5d7c43e31928f00ad93ac7da2a17933642f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;put&quot;&gt;put&lt;/strong&gt; = write;</source>
          <target state="translated">별명 &lt;strong id=&quot;put&quot;&gt;넣어&lt;/strong&gt; = 쓰기;</target>
        </trans-unit>
        <trans-unit id="da39eb88ac4fb559964cff56d0051820b9c9f62f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;remainder&quot;&gt;remainder&lt;/strong&gt; = &lt;strong id=&quot;remainder&quot;&gt;remainder&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;remainder&quot;&gt;나머지&lt;/strong&gt; = &lt;strong id=&quot;remainder&quot;&gt;나머지&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="26c457004f9e571ce770157a5416145dc55c56fc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;remainder&quot;&gt;remainder&lt;/strong&gt; = core.stdc.math.remainderl;</source>
          <target state="translated">별명 &lt;strong id=&quot;remainder&quot;&gt;나머지&lt;/strong&gt; = core.stdc.math.remainderl;</target>
        </trans-unit>
        <trans-unit id="ee028a2409f6ff45d4c75af148eb02ffe62644b4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;remquo&quot;&gt;remquo&lt;/strong&gt; = &lt;strong id=&quot;remquo&quot;&gt;remquo&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;remquo&quot;&gt;remquo&lt;/strong&gt; = &lt;strong id=&quot;remquo&quot;&gt;remquo&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="48c68ba698f7f1d17ae00d0eae0f746f43a4263c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;remquo&quot;&gt;remquo&lt;/strong&gt; = core.stdc.math.remquol;</source>
          <target state="translated">별칭 &lt;strong id=&quot;remquo&quot;&gt;remquo&lt;/strong&gt; = core.stdc.math.remquol;</target>
        </trans-unit>
        <trans-unit id="07b24216f2fc7e6c40a8fb023cbbdb986834bcf7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;requestAbort&quot;&gt;requestAbort&lt;/strong&gt; = etc.c.curl.CurlReadFunc.abort;</source>
          <target state="translated">별칭 &lt;strong id=&quot;requestAbort&quot;&gt;requestAbort&lt;/strong&gt; = etc.c.curl.CurlReadFunc.abort;</target>
        </trans-unit>
        <trans-unit id="503ac5bc33cf638b133c431d65eace3df88ec82e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;requestPause&quot;&gt;requestPause&lt;/strong&gt; = etc.c.curl.CurlReadFunc.pause;</source>
          <target state="translated">별칭 &lt;strong id=&quot;requestPause&quot;&gt;requestPause&lt;/strong&gt; = 등 c. curl.CurlReadFunc.pause;</target>
        </trans-unit>
        <trans-unit id="f4e326f111e7c43690d2e5c7916a759ecfb4df45" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;rint&quot;&gt;rint&lt;/strong&gt; = &lt;strong id=&quot;rint&quot;&gt;rint&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;rint&quot;&gt;rint&lt;/strong&gt; = &lt;strong id=&quot;rint&quot;&gt;rint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f9ed9727ba927ce19d15f4fa37f558c3a8c6c80e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;rint&quot;&gt;rint&lt;/strong&gt; = core.stdc.math.rintl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;rint&quot;&gt;린트&lt;/strong&gt; = core.stdc.math.rintl;</target>
        </trans-unit>
        <trans-unit id="2dc41bd7955ed837d2e6e4e634bac7abba627321" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;round&quot;&gt;round&lt;/strong&gt; = &lt;strong id=&quot;round&quot;&gt;round&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;round&quot;&gt;라운드&lt;/strong&gt; = &lt;strong id=&quot;round&quot;&gt;라운드&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dcbf67f6fd526815bf6ac7f9ad7be43275c5a48a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;round&quot;&gt;round&lt;/strong&gt; = core.stdc.math.roundl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;round&quot;&gt;라운드&lt;/strong&gt; = core.stdc.math.roundl;</target>
        </trans-unit>
        <trans-unit id="59c9dafbd019d8c3ac1965a367a1cb9b3dbd926a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;scalbln&quot;&gt;scalbln&lt;/strong&gt; = &lt;strong id=&quot;scalbln&quot;&gt;scalbln&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;scalbln&quot;&gt;scalbln&lt;/strong&gt; = &lt;strong id=&quot;scalbln&quot;&gt;scalbln&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9b7241f16c59655cc5c1b2f2fc92ebcab16f62ae" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;scalbln&quot;&gt;scalbln&lt;/strong&gt; = core.stdc.math.scalblnl;</source>
          <target state="translated">별명 &lt;strong id=&quot;scalbln&quot;&gt;scalbln&lt;/strong&gt; = core.stdc.math.scalblnl;</target>
        </trans-unit>
        <trans-unit id="e9532eb86810ed8b69ac52d54b79fe61fb528fe1" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;scalbn&quot;&gt;scalbn&lt;/strong&gt; = &lt;strong id=&quot;scalbn&quot;&gt;scalbn&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;scalbn&quot;&gt;scalbn&lt;/strong&gt; = &lt;strong id=&quot;scalbn&quot;&gt;scalbn&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="24b3da412cc9c542e454265e4071527c01379d17" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;scalbn&quot;&gt;scalbn&lt;/strong&gt; = core.stdc.math.scalbnl;</source>
          <target state="translated">별명 &lt;strong id=&quot;scalbn&quot;&gt;scalbn&lt;/strong&gt; = core.stdc.math.scalbnl;</target>
        </trans-unit>
        <trans-unit id="d7d9bb2fb8bbcea9ce8c9bdcc9708b12261c97ec" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;seconds&quot;&gt;seconds&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;seconds&quot;&gt;seconds&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별칭 &lt;strong id=&quot;seconds&quot;&gt;초&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;seconds&quot;&gt;초&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="a7d66736a5880fc2c60364478c8334f007219ee2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;short8&quot;&gt;short8&lt;/strong&gt; = __vector(short[8]);</source>
          <target state="translated">별칭 &lt;strong id=&quot;short8&quot;&gt;short8&lt;/strong&gt; = __vector (short [8]);</target>
        </trans-unit>
        <trans-unit id="05b22c6212a65d918617c6e9c2b1183adb0445b6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sig_atomic_t&quot;&gt;sig_atomic_t&lt;/strong&gt; = int;</source>
          <target state="translated">별명 &lt;strong id=&quot;sig_atomic_t&quot;&gt;sig_atomic_t&lt;/strong&gt; = int;</target>
        </trans-unit>
        <trans-unit id="346d2238332f0aedc6517a83b92879fb4669a3ae" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt; = &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt; = &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e5f6dd3a74913a923d38a79239a1352e9346d61a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt; = core.stdc.math.sinl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt; = core.stdc.math.sinl;</target>
        </trans-unit>
        <trans-unit id="91c602a24360043be5eb3738720b1d3e9ed1fc77" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sinh&quot;&gt;sinh&lt;/strong&gt; = &lt;strong id=&quot;sinh&quot;&gt;sinh&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;sinh&quot;&gt;sinh&lt;/strong&gt; = &lt;strong id=&quot;sinh&quot;&gt;sinh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b4cad9d8cda57aa93e5490b03a810752b54da2d6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sinh&quot;&gt;sinh&lt;/strong&gt; = core.stdc.complex.csinhl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;sinh&quot;&gt;sinh&lt;/strong&gt; = core.stdc.complex.csinhl;</target>
        </trans-unit>
        <trans-unit id="c1e3cf8aad4ca1b4c0932fc0e9ab332caa3b104e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;size_type&quot;&gt;size_type&lt;/strong&gt; = allocator_type.&lt;strong id=&quot;size_type&quot;&gt;size_type&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;size_type&quot;&gt;size_type&lt;/strong&gt; = allocator_type. &lt;strong id=&quot;size_type&quot;&gt;size_type&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f21f017df2bd89d8b3435ed8af27b69a4dc465fe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;size_type&quot;&gt;size_type&lt;/strong&gt; = size_t;</source>
          <target state="translated">별명 &lt;strong id=&quot;size_type&quot;&gt;size_type&lt;/strong&gt; = size_t;</target>
        </trans-unit>
        <trans-unit id="229672832d9ee27d496755ced34295b5dad5165b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;slot_t&quot;&gt;slot_t&lt;/strong&gt; = void delegate(T1);</source>
          <target state="translated">별명 &lt;strong id=&quot;slot_t&quot;&gt;slot_t&lt;/strong&gt; = 무효 델리게이트 (T1);</target>
        </trans-unit>
        <trans-unit id="b69635b1d575593cca71ca4d95b0619c0925439b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sqlite3_callback&quot;&gt;sqlite3_callback&lt;/strong&gt; = extern (C) int function(void*, int, char**, char**) nothrow;</source>
          <target state="translated">별명 &lt;strong id=&quot;sqlite3_callback&quot;&gt;sqlite3_callback&lt;/strong&gt; = extern (C) int 함수 (void *, int, char **, char **) nothrow;</target>
        </trans-unit>
        <trans-unit id="8090850c799513d5da7ce811d8e192c565864707" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sqlite3_destructor_type&quot;&gt;sqlite3_destructor_type&lt;/strong&gt; = extern (C) void function(void*) nothrow;</source>
          <target state="translated">별명 &lt;strong id=&quot;sqlite3_destructor_type&quot;&gt;sqlite3_destructor_type&lt;/strong&gt; = extern (C) void function (void *) nothrow;</target>
        </trans-unit>
        <trans-unit id="477fa7a37aec980336a1263a86030d84ccf55aa3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sqlite3_int64&quot;&gt;sqlite3_int64&lt;/strong&gt; = long;</source>
          <target state="translated">별명 &lt;strong id=&quot;sqlite3_int64&quot;&gt;sqlite3_int64&lt;/strong&gt; = 긴;</target>
        </trans-unit>
        <trans-unit id="ec348d8e1d211539f2e32feb8580921027393164" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sqlite3_syscall_ptr&quot;&gt;sqlite3_syscall_ptr&lt;/strong&gt; = extern (C) void function() nothrow;</source>
          <target state="translated">별명 &lt;strong id=&quot;sqlite3_syscall_ptr&quot;&gt;sqlite3_syscall_ptr&lt;/strong&gt; = extern (C) void function () nothrow;</target>
        </trans-unit>
        <trans-unit id="eb2445f0c24b61f1da7402f665c37734221515ba" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sqlite3_uint64&quot;&gt;sqlite3_uint64&lt;/strong&gt; = ulong;</source>
          <target state="translated">별칭 &lt;strong id=&quot;sqlite3_uint64&quot;&gt;sqlite3_uint64&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="752e7668cefeb7bde2211b220d103e90184a74c9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt; = &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt; = &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f4df7b9ce4698fbf5d552a5243435d018aa3627b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt; = core.stdc.complex.csqrtl;</source>
          <target state="translated">별명 &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt; = core.stdc.complex.csqrtl;</target>
        </trans-unit>
        <trans-unit id="014cd2b329b7815c65ee386d82e54dd42db2b082" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableInsert&quot;&gt;stableInsert&lt;/strong&gt; = insert;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableInsert&quot;&gt;안정&lt;/strong&gt; 삽입 = 삽입;</target>
        </trans-unit>
        <trans-unit id="6a92f5876bc947717fcc4bd6df0d9b781e50b47f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableInsert&quot;&gt;stableInsert&lt;/strong&gt; = insertBack;</source>
          <target state="translated">alias &lt;strong id=&quot;stableInsert&quot;&gt;안정적 삽입&lt;/strong&gt; = insertBack;</target>
        </trans-unit>
        <trans-unit id="35c3360c2f72b3bef324e9cae484581e2078304b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableInsertAfter&quot;&gt;stableInsertAfter&lt;/strong&gt; = insertAfter;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableInsertAfter&quot;&gt;안정 InsertAfter&lt;/strong&gt; = insertAfter;</target>
        </trans-unit>
        <trans-unit id="16f8cbe43c50e68360c1bea8e3c69b9bd48ff5bc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableInsertBack&quot;&gt;stableInsertBack&lt;/strong&gt; = insertBack;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableInsertBack&quot;&gt;stableInsertBack&lt;/strong&gt; = insertBack;</target>
        </trans-unit>
        <trans-unit id="df1831f5f727b600e57e4edcb8c60d7906afdb73" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableInsertBefore&quot;&gt;stableInsertBefore&lt;/strong&gt; = insertBefore;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableInsertBefore&quot;&gt;안정 InsertBefore&lt;/strong&gt; = insertBefore;</target>
        </trans-unit>
        <trans-unit id="0491e42f8ecc727751ec6b7ed51834cb4afe3f1f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableInsertFront&quot;&gt;stableInsertFront&lt;/strong&gt; = insertFront;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableInsertFront&quot;&gt;stableInsertFront&lt;/strong&gt; = insertFront;</target>
        </trans-unit>
        <trans-unit id="59046fd9b4976ce1d2e94d55b408d38e6846710f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableLinearInsert&quot;&gt;stableLinearInsert&lt;/strong&gt; = insertBack;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableLinearInsert&quot;&gt;안정 LinearInsert&lt;/strong&gt; = insertBack;</target>
        </trans-unit>
        <trans-unit id="bc4c96a11f2c3cbb714c35fbe0615cc879323829" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableLinearRemove&quot;&gt;stableLinearRemove&lt;/strong&gt; = linearRemove;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableLinearRemove&quot;&gt;stableLinearRemove&lt;/strong&gt; = linearRemove;</target>
        </trans-unit>
        <trans-unit id="66bb75c5f43aefc8ca94cd4fdf30be738a5b1862" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableRemove&quot;&gt;stableRemove&lt;/strong&gt; = remove;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableRemove&quot;&gt;안정&lt;/strong&gt; 제거 = 제거;</target>
        </trans-unit>
        <trans-unit id="7e0c264697d6ebee9d3cb79c611dd179ede6ea3d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableRemoveAny&quot;&gt;stableRemoveAny&lt;/strong&gt; = removeAny;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableRemoveAny&quot;&gt;안정 제거 Any&lt;/strong&gt; = 제거 Any;</target>
        </trans-unit>
        <trans-unit id="c5662b075cc407ba2b2c435b5fdf858dc9db6df6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableRemoveBack&quot;&gt;stableRemoveBack&lt;/strong&gt; = removeBack;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableRemoveBack&quot;&gt;안정 RemoveBack&lt;/strong&gt; = removeBack;</target>
        </trans-unit>
        <trans-unit id="c9ae6de446551d1ad87237c873afa7924d578cf2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableRemoveFront&quot;&gt;stableRemoveFront&lt;/strong&gt; = removeFront;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableRemoveFront&quot;&gt;안정 RemoveFront&lt;/strong&gt; = removeFront;</target>
        </trans-unit>
        <trans-unit id="16c596bf809f68f35c1aad382fddfa7e6fa6c41c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stableReplace&quot;&gt;stableReplace&lt;/strong&gt; = replace;</source>
          <target state="translated">별명 &lt;strong id=&quot;stableReplace&quot;&gt;안정&lt;/strong&gt; 교체 = 교체;</target>
        </trans-unit>
        <trans-unit id="78acd3c58a80293d1458d68a0eac7a0660fa13e7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stderr&quot;&gt;stderr&lt;/strong&gt; = makeGlobal!&quot;core.stdc.stdio.&lt;strong id=&quot;stderr&quot;&gt;stderr&lt;/strong&gt;&quot;.makeGlobal;</source>
          <target state="translated">별칭 &lt;strong id=&quot;stderr&quot;&gt;stderr&lt;/strong&gt; = makeGlobal! &quot;core.stdc.stdio. &lt;strong id=&quot;stderr&quot;&gt;stderr&lt;/strong&gt; &quot;.makeGlobal;</target>
        </trans-unit>
        <trans-unit id="46167ca3ab8220bf493c445689dd829463f25cc0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stdin&quot;&gt;stdin&lt;/strong&gt; = makeGlobal!&quot;core.stdc.stdio.&lt;strong id=&quot;stdin&quot;&gt;stdin&lt;/strong&gt;&quot;.makeGlobal;</source>
          <target state="translated">별칭 &lt;strong id=&quot;stdin&quot;&gt;stdin&lt;/strong&gt; = makeGlobal! &quot;core.stdc.stdio. &lt;strong id=&quot;stdin&quot;&gt;stdin&lt;/strong&gt; &quot;.makeGlobal;</target>
        </trans-unit>
        <trans-unit id="9db77563cd48a6e0f7d6cea32f96926a5cdfc9d5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;stdout&quot;&gt;stdout&lt;/strong&gt; = makeGlobal!&quot;core.stdc.stdio.&lt;strong id=&quot;stdout&quot;&gt;stdout&lt;/strong&gt;&quot;.makeGlobal;</source>
          <target state="translated">별칭 &lt;strong id=&quot;stdout&quot;&gt;stdout&lt;/strong&gt; = makeGlobal! &quot;core.stdc.stdio. &lt;strong id=&quot;stdout&quot;&gt;stdout&lt;/strong&gt; &quot;.makeGlobal;</target>
        </trans-unit>
        <trans-unit id="0246bbec262c188e5fa11e92a2a30a1572ab5bf0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;string_view&quot;&gt;string_view&lt;/strong&gt; = basic_string_view!(char, char_traits!char).basic_string_view;</source>
          <target state="translated">별칭 &lt;strong id=&quot;string_view&quot;&gt;string_view&lt;/strong&gt; = basic_string_view! (char, char_traits! char) .basic_string_view;</target>
        </trans-unit>
        <trans-unit id="02dd7637e030fd85163a53526fce72078927bfa6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;struct_flags_t&quot;&gt;struct_flags_t&lt;/strong&gt; = uint;</source>
          <target state="translated">별칭 &lt;strong id=&quot;struct_flags_t&quot;&gt;struct_flags_t&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="0cf028bf12933ac1d872864b466b6bb6cd387be3" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tan&quot;&gt;tan&lt;/strong&gt; = &lt;strong id=&quot;tan&quot;&gt;tan&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;tan&quot;&gt;tan&lt;/strong&gt; = &lt;strong id=&quot;tan&quot;&gt;tan&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a6081667339590e12fb7be99c9991ca8dda873bb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tan&quot;&gt;tan&lt;/strong&gt; = core.stdc.complex.ctanl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;tan&quot;&gt;tan&lt;/strong&gt; = core.stdc.complex.ctanl;</target>
        </trans-unit>
        <trans-unit id="7d5f6fffab995892df6f7d0c8badcecf837e56be" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tanh&quot;&gt;tanh&lt;/strong&gt; = &lt;strong id=&quot;tanh&quot;&gt;tanh&lt;/strong&gt;;</source>
          <target state="translated">별명 &lt;strong id=&quot;tanh&quot;&gt;tanh&lt;/strong&gt; = &lt;strong id=&quot;tanh&quot;&gt;tanh&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b25570a7529af6ea4bcb2ab44adf371785bf39c6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tanh&quot;&gt;tanh&lt;/strong&gt; = core.stdc.complex.ctanhl;</source>
          <target state="translated">별명 &lt;strong id=&quot;tanh&quot;&gt;tanh&lt;/strong&gt; = core.stdc.complex.ctanhl;</target>
        </trans-unit>
        <trans-unit id="40fcfbbfe3f02a66f4ab244c8bcda96fda1510a6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;terminate_handler&quot;&gt;terminate_handler&lt;/strong&gt; = extern (C++) void function() nothrow @nogc;</source>
          <target state="translated">alias &lt;strong id=&quot;terminate_handler&quot;&gt;terminate_handler&lt;/strong&gt; = extern (C ++) void function () nothrow @nogc;</target>
        </trans-unit>
        <trans-unit id="4b96c769a71fda77bf51481c25569ce24714e967" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tgamma&quot;&gt;tgamma&lt;/strong&gt; = &lt;strong id=&quot;tgamma&quot;&gt;tgamma&lt;/strong&gt;;</source>
          <target state="translated">앨리어스 &lt;strong id=&quot;tgamma&quot;&gt;tgamma&lt;/strong&gt; = &lt;strong id=&quot;tgamma&quot;&gt;tgamma&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="df0e12980f3b03f4285cacbb11ebc9d1b0c4ae93" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tgamma&quot;&gt;tgamma&lt;/strong&gt; = core.stdc.math.tgammal;</source>
          <target state="translated">별명 &lt;strong id=&quot;tgamma&quot;&gt;tgamma&lt;/strong&gt; = core.stdc.math.tgammal;</target>
        </trans-unit>
        <trans-unit id="ca9dc6828c4761c180993ea92ca951998765c727" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; = as_array;</source>
          <target state="translated">별명 &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt; = as_array;</target>
        </trans-unit>
        <trans-unit id="467678c0d906d33a06ea22321d48573c1ff914a2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;totalCPUs&quot;&gt;totalCPUs&lt;/strong&gt; = __lazilyInitializedConstant!(immutable(uint), 4294967295u, totalCPUsImpl).__lazilyInitializedConstant;</source>
          <target state="translated">alias &lt;strong id=&quot;totalCPUs&quot;&gt;totalCPUs&lt;/strong&gt; = __lazilyInitializedConstant! (불변 (uint), 4294967295u, totalCPUsImpl) .__ lazilyInitializedConstant;</target>
        </trans-unit>
        <trans-unit id="5ea1cb6d3f12b40d0ed6e78d9ddc3a17b3142035" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;trace&quot;&gt;trace&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)32u.logImpl(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length == 0 || args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(A[0] : bool));</source>
          <target state="translated">별칭 &lt;strong id=&quot;trace&quot;&gt;추적&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 32u.logImpl (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) if (args.length == 0 || args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (A [0] : bool));</target>
        </trans-unit>
        <trans-unit id="2813ab4c19ba6e4857553db921fa5ce174bb7008" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;trace&quot;&gt;trace&lt;/strong&gt; = defaultLogFunction!cast(LogLevel)cast(ubyte)32u.defaultLogFunction(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy A args) if (args.length &amp;gt; 0 &amp;amp;&amp;amp; !is(Unqual!(A[0]) : bool) || args.length == 0);</source>
          <target state="translated">별칭 &lt;strong id=&quot;trace&quot;&gt;추적&lt;/strong&gt; = defaultLogFunction! cast (LogLevel) cast (ubyte) 32u.defaultLogFunction (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (lazy A args) if (args.length&amp;gt; 0 &amp;amp;&amp;amp;! is (Unqual! (A [0]) : bool) || args.length == 0);</target>
        </trans-unit>
        <trans-unit id="0cf1f6522f521dec9bfa58f900c076393d6cdee4" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tracef&quot;&gt;tracef&lt;/strong&gt; = .Logger.memLogFunctions!cast(LogLevel)cast(ubyte)32u.logImplf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy bool condition, lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;tracef&quot;&gt;tracef&lt;/strong&gt; = .Logger.memLogFunctions! cast (LogLevel) cast (ubyte) 32u.logImplf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 moduleName = __MODULE__, A ...) (게으른 부울 상태, 게으른 문자열 메시지, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="60e18a3034ef19a689a1ef5e67488a34db5c5b71" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;tracef&quot;&gt;tracef&lt;/strong&gt; = defaultLogFunctionf!cast(LogLevel)cast(ubyte)32u.defaultLogFunctionf(int line = __LINE__, string file = __FILE__, string funcName = __FUNCTION__, string prettyFuncName = __PRETTY_FUNCTION__, string moduleName = __MODULE__, A...)(lazy string msg, lazy A args);</source>
          <target state="translated">alias &lt;strong id=&quot;tracef&quot;&gt;tracef&lt;/strong&gt; = defaultLogFunctionf! cast (LogLevel) cast (ubyte) 32u.defaultLogFunctionf (int line = __LINE__, 문자열 파일 = __FILE__, 문자열 funcName = __FUNCTION__, 문자열 prettyFuncName = __PRETTY_FUNCTION__, 문자열 모듈 이름 = __MODULE__, A ...) (게으른 문자열 msg, 게으른 A 인수);</target>
        </trans-unit>
        <trans-unit id="93f6598e6ae8cbd89a1cd1d8914c4a8a17abf1d5" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;traits_type&quot;&gt;traits_type&lt;/strong&gt; = Traits;</source>
          <target state="translated">별명 &lt;strong id=&quot;traits_type&quot;&gt;traits_type&lt;/strong&gt; = 특성;</target>
        </trans-unit>
        <trans-unit id="2007de047493686d1b22f946af8432f5dd23e6e9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;true_type&quot;&gt;true_type&lt;/strong&gt; = integral_constant!(bool, true).integral_constant;</source>
          <target state="translated">alias &lt;strong id=&quot;true_type&quot;&gt;true_type&lt;/strong&gt; = &lt;strong id=&quot;true_type&quot;&gt;integer_constant&lt;/strong&gt; ! (bool, true) .integral_constant;</target>
        </trans-unit>
        <trans-unit id="449debe5293b06ebc9c6f3e2ad86583a88ac4a63" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;trunc&quot;&gt;trunc&lt;/strong&gt; = &lt;strong id=&quot;trunc&quot;&gt;trunc&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;trunc&quot;&gt;trunc&lt;/strong&gt; = &lt;strong id=&quot;trunc&quot;&gt;trunc&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="31974cdc0e6a369eadf38e2ea7f42e8bb5cdf14f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;trunc&quot;&gt;trunc&lt;/strong&gt; = core.stdc.math.truncl;</source>
          <target state="translated">별칭 &lt;strong id=&quot;trunc&quot;&gt;trunc&lt;/strong&gt; = core.stdc.math.truncl;</target>
        </trans-unit>
        <trans-unit id="0fb70b3018c2bc715b07b0e3139e956897cf2c2d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt; = integral_constant!(bool, value);</source>
          <target state="translated">별칭 &lt;strong id=&quot;type&quot;&gt;유형&lt;/strong&gt; = integer_constant! (bool, value);</target>
        </trans-unit>
        <trans-unit id="7b3333cbe9ac4b0a803df461f85f084bcf9037cb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt; = typeof(this);</source>
          <target state="translated">별칭 &lt;strong id=&quot;type&quot;&gt;유형&lt;/strong&gt; = typeof (this);</target>
        </trans-unit>
        <trans-unit id="fa7ef48abf0d941500926880fcd547c01640bc03" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;type_flags_t&quot;&gt;type_flags_t&lt;/strong&gt; = ushort;</source>
          <target state="translated">별명 &lt;strong id=&quot;type_flags_t&quot;&gt;type_flags_t&lt;/strong&gt; = ushort;</target>
        </trans-unit>
        <trans-unit id="cfd9fa566e94e87281efefec57603031005e582e" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;u16string_view&quot;&gt;u16string_view&lt;/strong&gt; = basic_string_view!(wchar, char_traits!wchar).basic_string_view;</source>
          <target state="translated">별명 &lt;strong id=&quot;u16string_view&quot;&gt;u16string_view&lt;/strong&gt; = basic_string_view! (wchar, char_traits! wchar) .basic_string_view;</target>
        </trans-unit>
        <trans-unit id="3d07ad34a35a2e0599c72b79c8fabcd787506bbc" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;u32string_view&quot;&gt;u32string_view&lt;/strong&gt; = basic_string_view!(dchar, char_traits!dchar).basic_string_view;</source>
          <target state="translated">별칭 &lt;strong id=&quot;u32string_view&quot;&gt;u32string_view&lt;/strong&gt; = basic_string_view! (dchar, char_traits! dchar) .basic_string_view;</target>
        </trans-unit>
        <trans-unit id="d1d595e0407be0334471897ed01b921932f4464d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ubyte16&quot;&gt;ubyte16&lt;/strong&gt; = __vector(ubyte[16]);</source>
          <target state="translated">별명 &lt;strong id=&quot;ubyte16&quot;&gt; ubyte16&lt;/strong&gt; = __vector (ubyte [16]);</target>
        </trans-unit>
        <trans-unit id="4e5ac5029dffeeec4570a3a8e1484276907bd375" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint16_t&quot;&gt;uint16_t&lt;/strong&gt; = ushort;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint16_t&quot;&gt; uint16_t&lt;/strong&gt; = ushort;</target>
        </trans-unit>
        <trans-unit id="644a4f37bb024b20c9f6a50109e46effd65315d6" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint32_t&quot;&gt;uint32_t&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint32_t&quot;&gt; uint32_t&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="3d8475a318aa2fd25e9357487bc5080d2a830013" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint4&quot;&gt;uint4&lt;/strong&gt; = __vector(uint[4]);</source>
          <target state="translated">별명 &lt;strong id=&quot;uint4&quot;&gt; uint4&lt;/strong&gt; = __vector (uint [4]);</target>
        </trans-unit>
        <trans-unit id="f3b330ed02a4b8ffc00f972caf0e35288ef5da4a" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint64_t&quot;&gt;uint64_t&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint64_t&quot;&gt; uint64_t&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="4a7cbdd027389225a277486d2354c546b9654d2b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint8_t&quot;&gt;uint8_t&lt;/strong&gt; = ubyte;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint8_t&quot;&gt; uint8_t&lt;/strong&gt; = ubyte;</target>
        </trans-unit>
        <trans-unit id="0f9dfc4acdfefc4c1ce725816f8fa1c8238e4732" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_fast16_t&quot;&gt;uint_fast16_t&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_fast16_t&quot;&gt; uint_fast16_t&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="dbc4adf020b10cdcfd4a36004a24dccdac48c9a9" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_fast32_t&quot;&gt;uint_fast32_t&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_fast32_t&quot;&gt; uint_fast32_t&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="6c08f782cdc1de4614a65b27c57da2697f71e2f2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_fast64_t&quot;&gt;uint_fast64_t&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_fast64_t&quot;&gt; uint_fast64_t&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="3d126b49f6abec357c453551d91cb8dfbd9d5cdb" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_fast8_t&quot;&gt;uint_fast8_t&lt;/strong&gt; = ubyte;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_fast8_t&quot;&gt; uint_fast8_t&lt;/strong&gt; = ubyte;</target>
        </trans-unit>
        <trans-unit id="73ac66deec356eb31187a02fea4cfa9afedc353d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_least16_t&quot;&gt;uint_least16_t&lt;/strong&gt; = ushort;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_least16_t&quot;&gt; uint_least16_t&lt;/strong&gt; = ushort;</target>
        </trans-unit>
        <trans-unit id="d7057926206654ae2f908de72a64a7d97ccd823c" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_least32_t&quot;&gt;uint_least32_t&lt;/strong&gt; = uint;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_least32_t&quot;&gt; uint_least32_t&lt;/strong&gt; = uint;</target>
        </trans-unit>
        <trans-unit id="6518a7850df1b21b1a735ff2d24f250f62cec82d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_least64_t&quot;&gt;uint_least64_t&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_least64_t&quot;&gt; uint_least64_t&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="2d070eba255dda9cd6a5090ff0b8907c7e6edfbe" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uint_least8_t&quot;&gt;uint_least8_t&lt;/strong&gt; = ubyte;</source>
          <target state="translated">별명 &lt;strong id=&quot;uint_least8_t&quot;&gt; uint_least8_t&lt;/strong&gt; = ubyte;</target>
        </trans-unit>
        <trans-unit id="dffc85740eb66103a9a6b8b595ed2c7411fedc27" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uintmax_t&quot;&gt;uintmax_t&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;uintmax_t&quot;&gt; uintmax_t&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="5c7f1a44df01f53d74022f1da5a9472ff04b4c22" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;uintptr_t&quot;&gt;uintptr_t&lt;/strong&gt; = ulong;</source>
          <target state="translated">별명 &lt;strong id=&quot;uintptr_t&quot;&gt;uintptr_t&lt;/strong&gt; = ulong;</target>
        </trans-unit>
        <trans-unit id="f2b5ef4c01da07223d25b3eb74da33dd4465304b" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ulong2&quot;&gt;ulong2&lt;/strong&gt; = __vector(ulong[2]);</source>
          <target state="translated">별칭 &lt;strong id=&quot;ulong2&quot;&gt;ulong2&lt;/strong&gt; = __vector (ulong [2]);</target>
        </trans-unit>
        <trans-unit id="41474ee671416a59b18fb26e4e2c2a5188a2baf2" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;unexpected_handler&quot;&gt;unexpected_handler&lt;/strong&gt; = extern (C++) void function() @nogc;</source>
          <target state="translated">alias &lt;strong id=&quot;unexpected_handler&quot;&gt;unexpected_handler&lt;/strong&gt; = extern (C ++) void function () @nogc;</target>
        </trans-unit>
        <trans-unit id="e83c5decc1ebbde8b0d5147096fa71fa252f3f9d" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;usecs&quot;&gt;usecs&lt;/strong&gt; = dur!&quot;&lt;strong id=&quot;usecs&quot;&gt;usecs&lt;/strong&gt;&quot;.dur;</source>
          <target state="translated">별명 &lt;strong id=&quot;usecs&quot;&gt;usecs&lt;/strong&gt; = dur! &quot; &lt;strong id=&quot;usecs&quot;&gt;usecs&lt;/strong&gt; &quot;.dur;</target>
        </trans-unit>
        <trans-unit id="c1680fd8fb778f4eedcf68276b37a90947f9b0db" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;ushort8&quot;&gt;ushort8&lt;/strong&gt; = __vector(ushort[8]);</source>
          <target state="translated">별명 &lt;strong id=&quot;ushort8&quot;&gt;ushort8&lt;/strong&gt; = __vector (ushort [8]);</target>
        </trans-unit>
        <trans-unit id="1478b4f907e879df3875117440ecd79f89e2a5ee" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt; = &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt; = &lt;strong id=&quot;va_arg&quot;&gt;va_arg&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="80314a34448bd64588dc54243507a551d53ada00" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;va_list&quot;&gt;va_list&lt;/strong&gt; = __va_list_tag*;</source>
          <target state="translated">별칭 &lt;strong id=&quot;va_list&quot;&gt;va_list&lt;/strong&gt; = __va_list_tag *;</target>
        </trans-unit>
        <trans-unit id="c6d1357235d55616a86404c29050125ace90a2d0" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt; = T;</source>
          <target state="translated">별명 &lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt; = T;</target>
        </trans-unit>
        <trans-unit id="79a79c7e9fc62591160bff7cba2803499dd9c00f" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt; = allocator_type.&lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt;;</source>
          <target state="translated">별칭 &lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt; = allocator_type. &lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ed2b3a701a813c0b22d888d898953ce5c075e639" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt; = bool;</source>
          <target state="translated">별칭 &lt;strong id=&quot;value_type&quot;&gt;value_type&lt;/strong&gt; = bool;</target>
        </trans-unit>
        <trans-unit id="a58a4cd01d4e57128b8d8750ccefcf7cca9fdad7" translate="yes" xml:space="preserve">
          <source>alias &lt;strong id=&quot;void16&quot;&gt;void16&lt;/strong&gt; = __vector(void[16]);</source>
          <target state="translated">별칭 &lt;strong id=&quot;void16&quot;&gt;void16&lt;/strong&gt; = __vector (void [16]);</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
