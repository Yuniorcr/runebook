<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="jquery">
    <body>
      <group id="jquery">
        <trans-unit id="8cb0744718997bd96f294785ec7b3705813dca11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Delegated event handlers do not work for SVG.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 위임 된 이벤트 핸들러는 SVG에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="942e6f4af0644024fbe1f44be8be9496f385ab07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Delegated events do not work for SVG.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 위임 된 이벤트는 SVG에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4dece9787706ceca0406ef7099a827799bf99966" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Do not use this method to remove native properties such as checked, disabled, or selected. This will remove the property completely and, once removed, cannot be added again to element. Use &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; to set these properties to &lt;code&gt;false&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 방법을 사용하여 확인, 비활성화 또는 선택과 같은 기본 속성을 제거하지 마십시오. 이렇게하면 속성이 완전히 제거되고 일단 제거되면 요소에 다시 추가 할 수 없습니다. 대신 &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; 를 사용 하여 이러한 속성을 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="54d563021a35ae48b9a3d12c29998bff25f1f923" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For both plain objects and DOM objects other than &lt;code&gt;window&lt;/code&gt;, if a triggered event name matches the name of a property on the object, jQuery will attempt to invoke the property as a method if no event handler calls &lt;a href=&quot;event.preventdefault&quot;&gt;&lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt;. If this behavior is not desired, use &lt;a href=&quot;triggerhandler&quot;&gt;&lt;code&gt;.triggerHandler()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 일반 객체와 &lt;code&gt;window&lt;/code&gt; 이외의 DOM 객체 모두 에서 트리거 된 이벤트 이름이 객체의 속성 이름과 일치하는 경우 이벤트 핸들러가 &lt;a href=&quot;event.preventdefault&quot;&gt; &lt;code&gt;event.preventDefault()&lt;/code&gt; &lt;/a&gt; 호출하지 않으면 jQuery는 속성을 메서드로 호출하려고 시도합니다 . 이 동작이 바람직하지 않은 경우 &lt;a href=&quot;triggerhandler&quot;&gt; &lt;code&gt;.triggerHandler()&lt;/code&gt; &lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f80ae80beca09be1a96db4dcd969d0308f65dc79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For performance reasons, the dynamic state of certain form elements (e.g., user data typed into &lt;code&gt;textarea&lt;/code&gt; and user selections made to a &lt;code&gt;select&lt;/code&gt;) is not copied to the cloned elements. When cloning &lt;code&gt;input&lt;/code&gt; elements, the dynamic state of the element (e.g., user data typed into text inputs and user selections made to a checkbox) is retained in the cloned elements.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 성능상의 이유로 특정 양식 요소 (예 : &lt;code&gt;textarea&lt;/code&gt; 입력 된 사용자 데이터 및 &lt;code&gt;select&lt;/code&gt; 에 대한 사용자 선택 )의 동적 상태 는 복제 된 요소에 복사되지 않습니다. &lt;code&gt;input&lt;/code&gt; 요소를 복제 할 때 요소의 동적 상태 (예 : 텍스트 입력에 입력 된 사용자 데이터 및 확인란에 대한 사용자 선택)가 복제 된 요소에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="d2a6f26fbe51f11a45f5316d5cf51601df5693be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Host objects (or objects used by browser host environments to complete the execution environment of ECMAScript) have a number of inconsistencies which are difficult to robustly feature detect cross-platform. As a result of this, &lt;code&gt;$.isPlainObject()&lt;/code&gt; may evaluate inconsistently across browsers in certain instances.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 호스트 객체 (또는 ECMAScript의 실행 환경을 완성하기 위해 브라우저 호스트 환경에서 사용하는 객체)에는 플랫폼 간 감지 기능을 강력하게 찾기 어려운 여러 가지 불일치가 있습니다. 그 결과 &lt;code&gt;$.isPlainObject()&lt;/code&gt; 는 특정 인스턴스에서 여러 브라우저에서 일관되지 않게 평가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dbe4fcd1e06a58361b95d919ca641229880a635" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you use a custom jQuery build &lt;em&gt;without the effects module&lt;/em&gt;, the &lt;code&gt;:animated&lt;/code&gt; selector will throw an error.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 사용자 정의 jQuery를 빌드를 사용하는 경우 &lt;em&gt;효과 모듈 않고&lt;/em&gt; 는 &lt;code&gt;:animated&lt;/code&gt; 선택에 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8eb67262dcc2dbf13fd200f6c8a7d2033f9cd002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In Internet Explorer up to and including version 9, setting the text content of an HTML element may corrupt the text nodes of its children that are being removed from the document as a result of the operation. If you are keeping references to these DOM elements and need them to be unchanged, use &lt;code&gt;.empty().html( string )&lt;/code&gt; instead of &lt;code&gt;.html(string)&lt;/code&gt; so that the elements are removed from the document before the new string is assigned to the element.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; Internet Explorer 9 이하 버전에서 HTML 요소의 텍스트 내용을 설정하면 작업 결과 문서에서 제거되는 해당 자식의 텍스트 노드가 손상 될 수 있습니다. 이러한 DOM 요소에 대한 참조를 유지하고 변경하지 않으면 &lt;code&gt;.html(string)&lt;/code&gt; 대신 &lt;code&gt;.empty().html( string )&lt;/code&gt; 사용 하여 새 문자열이 문서에 할당되기 전에 문서에서 요소가 제거되도록하십시오. 요소.</target>
        </trans-unit>
        <trans-unit id="4384c305db1376fe87300885ea145d29b4c72323" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In order for .die() to function correctly, the selector used with it must match exactly the selector initially used with .live().</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; .die ()가 올바르게 작동하려면 선택기와 함께 사용 된 선택기가 처음에 .live ()와 함께 사용 된 선택기와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="16d7303d59a5f1ad26660642d43ac1e94b9e8276" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Removing an inline &lt;code&gt;onclick&lt;/code&gt; event handler using &lt;code&gt;.removeAttr()&lt;/code&gt; doesn't achieve the desired effect in Internet Explorer 8, 9 and 11. To avoid potential problems, use &lt;code&gt;.prop()&lt;/code&gt; instead:</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;.removeAttr()&lt;/code&gt; 사용하여 인라인 &lt;code&gt;onclick&lt;/code&gt; 이벤트 핸들러를 제거해도 Internet Explorer 8, 9 및 11에서 원하는 효과를 얻을 수 없습니다. 잠재적 인 문제를 피하려면 &lt;code&gt;.prop()&lt;/code&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f309a9a392ecd03d45bb0301b5e4db8f8ea99503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;.live()&lt;/code&gt; and &lt;code&gt;.delegate()&lt;/code&gt; methods cannot be used to detect the &lt;code&gt;load&lt;/code&gt; event of an iframe. The load event does not correctly bubble up the parent document and the event.target isn't set by Firefox, IE9 or Chrome, which is required to do event delegation.</source>
          <target state="translated">&lt;strong&gt;주 : &lt;/strong&gt; &lt;code&gt;.live()&lt;/code&gt; 및 &lt;code&gt;.delegate()&lt;/code&gt; 메소드는 검출 할 수없는 &lt;code&gt;load&lt;/code&gt; 가 iframe의 이벤트. 로드 이벤트가 상위 문서를 올바르게 버블 링하지 않으며 event.target이 이벤트 위임을 수행하는 데 필요한 Firefox, IE9 또는 Chrome에 의해 설정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="cbff0fff16481c41a79bc297774302cd28c0735f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;deferred.always()&lt;/code&gt; method receives the arguments that were used to &lt;code&gt;.resolve()&lt;/code&gt; or &lt;code&gt;.reject()&lt;/code&gt; the &lt;code&gt;Deferred&lt;/code&gt; object, which are often very different. For this reason, it's best to use it only for actions that do not require inspecting the arguments. In all other cases, use explicit &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;.done()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;.fail()&lt;/code&gt;&lt;/a&gt; handlers since the arguments will have well-known orders.</source>
          <target state="translated">&lt;strong&gt;주 : &lt;/strong&gt; &lt;code&gt;deferred.always()&lt;/code&gt; 방법에 사용 된 인자 수신 &lt;code&gt;.resolve()&lt;/code&gt; 또는 &lt;code&gt;.reject()&lt;/code&gt; &lt;code&gt;Deferred&lt;/code&gt; 종종 매우 상이한 개체. 따라서 인수를 검사 할 필요가없는 작업에만 사용하는 것이 가장 좋습니다. 다른 모든 경우에는 명시 적 &lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;.done()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;.fail()&lt;/code&gt; &lt;/a&gt; 핸들러를 사용하십시오. 인수는 잘 알려진 순서를 갖기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ba1121a8c044ba75d907e526ad026f7e7bd23100" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The first argument &lt;em&gt;must&lt;/em&gt; be a DOM element, not a jQuery object or plain JavaScript object.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 첫 번째 인수 &lt;em&gt;는&lt;/em&gt; jQuery 객체 또는 일반 JavaScript 객체가 아닌 DOM 요소 &lt;em&gt;여야&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="203666d70f4b53f36701fcb1ec9cee4f9090ce80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The settings specified here will affect &lt;em&gt;all&lt;/em&gt; calls to &lt;code&gt;$.ajax&lt;/code&gt; or Ajax-based derivatives such as &lt;code&gt;$.get()&lt;/code&gt;. This can cause undesirable behavior since other callers (for example, plugins) may be expecting the normal default settings. For that reason we &lt;em&gt;strongly recommend against using this API&lt;/em&gt;. Instead, set the options explicitly in the call or define a simple plugin to do so.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 여기에 지정된 설정은 &lt;code&gt;$.ajax&lt;/code&gt; 또는 Ajax 기반 파생물 (예 : &lt;code&gt;$.get()&lt;/code&gt; &lt;em&gt;모든&lt;/em&gt; 호출에 영향을줍니다 . 다른 발신자 (예 : 플러그인)가 일반 기본 설정을 기대할 수 있기 때문에 바람직하지 않은 동작이 발생할 수 있습니다. 이러한 이유로 우리는 &lt;em&gt;강력하게이 API를 사용하여에 추천&lt;/em&gt; . 대신 호출에서 옵션을 명시 적으로 설정하거나 간단한 플러그인을 정의하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b768c1338206091fede1517818ee50ac7f66ef7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function has been deprecated and is now an alias for &lt;a href=&quot;addback&quot;&gt;&lt;code&gt;.addBack()&lt;/code&gt;&lt;/a&gt;, which should be used with jQuery 1.8 and later.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 함수는 더 이상 사용되지 않으며 이제 jQuery 1.8 이상에서 사용해야하는 &lt;a href=&quot;addback&quot;&gt; &lt;code&gt;.addBack()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="8392bec420fa9f575e6bddfe8dca24e33e1fbdd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method, you should probably use &lt;code&gt;&lt;a href=&quot;dequeue&quot;&gt;.dequeue()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이것은 저수준 방법이므로 대신 &lt;code&gt;&lt;a href=&quot;dequeue&quot;&gt;.dequeue()&lt;/a&gt;&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2143ba715e5aedac3e07ff61f22ce44ebfe9656e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method, you should probably use &lt;code&gt;&lt;a href=&quot;queue&quot;&gt;.queue()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이것은 저수준 방법이므로 대신 &lt;code&gt;&lt;a href=&quot;queue&quot;&gt;.queue()&lt;/a&gt;&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d620358b27d72582090e8def2c015269cbea40da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method, you should probably use &lt;code&gt;&lt;a href=&quot;removedata&quot;&gt;.removeData()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;노트 :&lt;/strong&gt; 이 방법은 저수준 방법이므로 &lt;code&gt;&lt;a href=&quot;removedata&quot;&gt;.removeData()&lt;/a&gt;&lt;/code&gt; 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c433687cd5be2c617aa50fa4d31449a6880c5385" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method; a more convenient &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; is also available.</source>
          <target state="translated">&lt;strong&gt;노트 :&lt;/strong&gt; 이것은 저수준 방법입니다. 더 편리한 &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; 도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d604d01e84b827caa2e75b86a9cb4120199c973" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method may cause performance issues, especially when used on many elements. If you're encountering such issues, use performance testing tools to determine whether this method is causing them. Moreover, this method can cause problems with responsive layouts if the display value differs at different viewport sizes.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 방법은 특히 많은 요소에서 사용될 때 성능 문제를 일으킬 수 있습니다. 이러한 문제가 발생하면 성능 테스트 도구를 사용하여이 방법으로 문제가 발생하는지 확인하십시오. 또한 표시 값이 다른 뷰포트 크기에서 다른 경우이 방법으로 반응 형 레이아웃에 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="728cc3c548ab7b7f47d7a7807c7ae6e4b16b5b5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; To reverse the &lt;code&gt;.add()&lt;/code&gt; you can use &lt;a href=&quot;not&quot;&gt;&lt;code&gt;.not( elements | selector )&lt;/code&gt;&lt;/a&gt; to remove elements from the jQuery results, or &lt;a href=&quot;end&quot;&gt;&lt;code&gt;.end()&lt;/code&gt;&lt;/a&gt; to return to the selection before you added.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 반대하는 &lt;code&gt;.add()&lt;/code&gt; 사용할 수있는 &lt;a href=&quot;not&quot;&gt; &lt;code&gt;.not( elements | selector )&lt;/code&gt; &lt;/a&gt; JQuery와 결과에서 요소를 제거하거나&lt;a href=&quot;end&quot;&gt; &lt;code&gt;.end()&lt;/code&gt; &lt;/a&gt; 가 추가 이전 선택으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="7e7ba16dcd759f9653e9fd3781342bdc06b4694b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Unlike shorthand animation methods such as &lt;code&gt;.slideDown()&lt;/code&gt; and &lt;code&gt;.fadeIn()&lt;/code&gt;, the &lt;code&gt;.animate()&lt;/code&gt; method does &lt;em&gt;not&lt;/em&gt; make hidden elements visible as part of the effect. For example, given &lt;code&gt;$( &quot;someElement&quot; ).hide().animate({height: &quot;20px&quot;}, 500)&lt;/code&gt;, the animation will run, but &lt;em&gt;the element will remain hidden&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 예컨대 달리 속기 애니메이션 방법 &lt;code&gt;.slideDown()&lt;/code&gt; 및 &lt;code&gt;.fadeIn()&lt;/code&gt; 은 &lt;code&gt;.animate()&lt;/code&gt; 않는 방식 &lt;em&gt;없는&lt;/em&gt; 효과의 일부 숨겨진 요소 보이게. 예를 들어 &lt;code&gt;$( &quot;someElement&quot; ).hide().animate({height: &quot;20px&quot;}, 500)&lt;/code&gt; 이면 애니메이션이 실행되지만&lt;em&gt; 요소는 숨겨져&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="f65293ea9a02bc3177d8777db0cb2e794c443fcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using &lt;code&gt;.clone()&lt;/code&gt; has the side-effect of producing elements with duplicate &lt;code&gt;id&lt;/code&gt; attributes, which are supposed to be unique. Where possible, it is recommended to avoid cloning elements with this attribute or using &lt;code&gt;class&lt;/code&gt; attributes as identifiers instead.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;.clone()&lt;/code&gt; 을 사용하면 &lt;code&gt;id&lt;/code&gt; 가 중복 된 요소를 생성하는 부작용이 있습니다. 속성을 이 있습니다. 이는 고유해야합니다. 가능하면이 속성으로 요소를 복제하거나 &lt;code&gt;class&lt;/code&gt; 속성을 식별자로 사용하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1e5cc0423e196008d1bc2fbb860b9ab9a93f8a82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using a proxied function to unbind an event on an element will unbind all proxied functions on that element, as the same proxy function is used for all proxied events. To allow unbinding a specific event, use unique class names on the event (e.g. &lt;code&gt;click.proxy1&lt;/code&gt;, &lt;code&gt;click.proxy2&lt;/code&gt;) when attaching them.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 프록시 된 함수를 사용하여 요소의 이벤트 바인딩 해제는 모든 프록시 된 이벤트에 동일한 프록시 기능이 사용되므로 해당 요소의 프록시 된 모든 기능이 바인드 해제됩니다. 특정 이벤트를 바인딩 해제하려면 이벤트에 첨부 할 때 이벤트에 고유 한 클래스 이름 (예 : &lt;code&gt;click.proxy1&lt;/code&gt; , &lt;code&gt;click.proxy2&lt;/code&gt; )을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6e77c80458e4629a10720a7691b951d7439c5b21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When a CSS selector string is passed to &lt;code&gt;.filter()&lt;/code&gt;, text and comment nodes will always be removed from the resulting jQuery object during the filtering process. When a specific node or array of nodes are provided, a text or comment node will be included in the resulting jQuery object only if it matches one of the nodes in the filtering array.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; CSS 선택기 문자열이 전달 될 때 &lt;code&gt;.filter()&lt;/code&gt; 되면 필터링 프로세스 중에 텍스트 및 주석 노드가 결과 jQuery 객체에서 항상 제거됩니다. 특정 노드 또는 노드 배열이 제공되면 텍스트 또는 주석 노드는 필터링 배열의 노드 중 하나와 일치하는 경우에만 결과 jQuery 객체에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="981b4af88352f6e3c6215c9fb8a1f5562779f9a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When a CSS selector string is passed to &lt;code&gt;.not()&lt;/code&gt;, text and comment nodes will always be removed from the resulting jQuery object during the filtering process. When a specific node or array of nodes are provided, text or comment nodes will only be removed from the jQuery object if they match one of the nodes in the filtering array.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; CSS 선택기 문자열이 &lt;code&gt;.not()&lt;/code&gt; 전달 될 때 되면 필터링 프로세스 중에 텍스트 및 주석 노드가 결과 jQuery 객체에서 항상 제거됩니다. 특정 노드 또는 노드 배열이 제공되면 텍스트 또는 주석 노드는 필터링 배열의 노드 중 하나와 일치하는 경우에만 jQuery 객체에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="048769b60993106a56bcdb9e90923a09c8e16cb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When passing a selector string to the &lt;code&gt;.wrapInner()&lt;/code&gt; function, the expected input is well formed HTML with correctly closed tags. Examples of valid input include:</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 선택기 문자열을 &lt;code&gt;.wrapInner()&lt;/code&gt; 전달할 때 함수에 올바르게 입력 된 태그로 HTML의 형식이 올바르게 입력됩니다. 유효한 입력의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b224f83d1b18a1e42df81a9f6bf0f7896be35a9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When triggering with a plain object that is not array-like but still contains a &lt;code&gt;length&lt;/code&gt; property, you should pass the object in an array (e.g. &lt;code&gt;[ { length: 1 } ]&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 배열과는 다르지만 여전히 &lt;code&gt;length&lt;/code&gt; 속성이 포함 된 일반 객체로 트리거 할 경우 객체를 배열에 전달해야합니다 (예 : &lt;code&gt;[ { length: 1 } ]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="455a0d1adee9712e6f37d7ef1c2a9305393095cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When using the &lt;code&gt;.clone()&lt;/code&gt; method, you can modify the cloned elements or their contents before (re-)inserting them into the document.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;.clone()&lt;/code&gt; 사용하는 경우 메서드를 경우 복제 된 요소 또는 해당 내용을 문서에 다시 삽입하기 전에 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16e68a471a6af7b42f4de6d4046645aaf1339a62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can get the returned Ajax contents by looking at &lt;code&gt;xhr.responseText&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;xhr.responseText&lt;/code&gt; 를보고 리턴 된 Ajax 컨텐츠를 얻을 수 있습니다 &lt;strong&gt;.&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ea50e4e0e3ba862e54fc9b39a569e88b0205130d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can get the returned Ajax contents by looking at &lt;code&gt;xhr.responseXML&lt;/code&gt; or &lt;code&gt;xhr.responseText&lt;/code&gt; for xml and html respectively.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;xhr.responseXML&lt;/code&gt; 또는 &lt;code&gt;xhr.responseText&lt;/code&gt; 를 보고 리턴 된 Ajax 컨텐츠를 얻을 수 있습니다 &lt;strong&gt;.&lt;/strong&gt; xml 및 html에 대해 각각 를 .</target>
        </trans-unit>
        <trans-unit id="0fa94b5a700d556c34c708de51291d97cf4a9de5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You will need to specify a complementary entry for this type in &lt;code&gt;converters&lt;/code&gt; for this to work properly.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 올바르게 작동하려면 &lt;code&gt;converters&lt;/code&gt; 에서이 유형에 대한 보완 항목을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d94b2e36820a0d6b14925689b5c0cc889f82eca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; as the &lt;code&gt;keypress&lt;/code&gt; event isn't covered by any official specification, the actual behavior encountered when using it may differ across browsers, browser versions, and platforms.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 는 AS &lt;code&gt;keypress&lt;/code&gt; 이벤트가 공식 사양이 적용되지 않는, 그것을 사용 때 발생하는 실제 동작은 브라우저, 브라우저 버전 및 플랫폼에 걸쳐 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a72439d09acee11e0939a454dab49367b918717f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; if attempting to animate an element with a height or width of 0px, where contents of the element are visible due to overflow, jQuery may clip this overflow during animation. By fixing the dimensions of the original element being hidden however, it is possible to ensure that the animation runs smoothly. A &lt;a href=&quot;https://www.google.com/search?q=clearfix&quot;&gt;clearfix&lt;/a&gt; can be used to automatically fix the dimensions of your main element without the need to set this manually.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 오버플로로 인해 요소의 내용이 표시되는 높이 또는 너비가 0px 인 요소에 애니메이션을 적용하려는 경우 jQuery는 애니메이션 중에이 오버플로를 클리핑 할 수 있습니다. 그러나 숨겨져있는 원래 요소의 치수를 고정함으로써 애니메이션이 부드럽게 실행되도록 할 수 있습니다. &lt;a href=&quot;https://www.google.com/search?q=clearfix&quot;&gt;clearfix&lt;/a&gt; 자동으로 수동으로 설정할 필요없이 기본 요소의 크기를 해결하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c13e9056adf699d6319a7d27d189aa7d259ca1f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; jQuery does not support getting the offset coordinates of hidden elements or accounting for margins set on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; document element.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; jQuery는 숨겨진 요소의 오프셋 좌표 가져 오기 또는 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 문서 요소 에 설정된 여백을 고려하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="3b473018f3deb18da4f1568f4522cf32ce5d1248" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; jQuery does not support getting the position coordinates of hidden elements or accounting for margins set on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; document element.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; jQuery는 숨겨진 요소의 위치 좌표를 가져 오거나 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 문서 요소 에 설정된 여백을 고려하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f8ff59419314b6844ba3e6332f0ebb19610d7989" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.css()&lt;/code&gt; ignores &lt;code&gt;!important&lt;/code&gt; declarations. So, the statement &lt;code&gt;$( &quot;p&quot; ).css( &quot;color&quot;, &quot;red !important&quot; )&lt;/code&gt; does not turn the color of all paragraphs in the page to red. It's strongly advised to use classes instead; otherwise use a jQuery plugin.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;.css()&lt;/code&gt; 는 &lt;code&gt;!important&lt;/code&gt; 선언을 무시합니다 . 따라서 &lt;code&gt;$( &quot;p&quot; ).css( &quot;color&quot;, &quot;red !important&quot; )&lt;/code&gt; 은 페이지의 모든 단락 색상을 빨간색으로 바꾸지 않습니다. 대신 클래스를 사용하는 것이 좋습니다. 그렇지 않으면 jQuery 플러그인을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5cc3cff26ade546c9f5d4c284e2b77b2a01e5127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.scrollLeft()&lt;/code&gt;, when called directly or animated as a property using &lt;code&gt;.animate()&lt;/code&gt;, will not work if the element it is being applied to is hidden.</source>
          <target state="translated">&lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;.scrollLeft()&lt;/code&gt; 사용하여 직접 호출하거나 속성으로 애니메이션 할 때 &lt;code&gt;.animate()&lt;/code&gt; 는 적용되는 요소가 숨겨져 있으면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="290ebec41d77eb54398146f8f43606cb3d38b3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In jQuery 1.3 &lt;code&gt;[@attr]&lt;/code&gt; style selectors were removed (they were previously deprecated in jQuery 1.2). Simply remove the &quot;@&quot; symbol from your selectors in order to make them work again.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : jQuery 1.3 &lt;code&gt;[@attr]&lt;/code&gt; 스타일 선택기는 제거되었습니다 (jQuery 1.2에서는 더 이상 사용되지 않습니다). 선택기에서 &quot;@&quot;기호를 제거하면 다시 작동하게됩니다.</target>
        </trans-unit>
        <trans-unit id="083919582eccdbee288d0dc79d72b61d9575687f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prior to jQuery 1.8&lt;/strong&gt;, the arguments could be a function or an array of functions.</source>
          <target state="translated">&lt;strong&gt;jQuery 1.8 이전&lt;/strong&gt; 에는 인수가 함수 또는 함수 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfcbe621b600aa6855d694faf0c74f8d1a09274d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Promise callbacks&lt;/strong&gt; &amp;mdash; &lt;code&gt;.done()&lt;/code&gt;, &lt;code&gt;.fail()&lt;/code&gt;, &lt;code&gt;.always()&lt;/code&gt;, and &lt;code&gt;.then()&lt;/code&gt; &amp;mdash; are invoked, in the order they are registered.</source>
          <target state="translated">&lt;strong&gt;약속 콜백&lt;/strong&gt; - &lt;code&gt;.done()&lt;/code&gt; , &lt;code&gt;.fail()&lt;/code&gt; , &lt;code&gt;.always()&lt;/code&gt; , 그리고 &lt;code&gt;.then()&lt;/code&gt; - 그들이 등록 된 순서대로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d93bfb24b1a23102fc291e7e03e62436417637a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regarding HTML5 data-* attributes:&lt;/strong&gt; This low-level method does NOT retrieve the &lt;code&gt;data-*&lt;/code&gt; attributes unless the more convenient &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; method has already retrieved them.</source>
          <target state="translated">&lt;strong&gt;HTML5 data- * 속성과 관련하여 :&lt;/strong&gt; 이 저수준 메소드는 보다 편리한 &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; 메소드가 이미 검색 하지 않는 한 &lt;code&gt;data-*&lt;/code&gt; 속성을 검색하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9e77d71525927ede151fd320eadbfacdea57b307" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;.delay()&lt;/code&gt; method is best for delaying between queued jQuery effects. Because it is limited&amp;mdash;it doesn't, for example, offer a way to cancel the delay&amp;mdash;&lt;code&gt;.delay()&lt;/code&gt; is not a replacement for JavaScript's native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setTimeout&quot;&gt;setTimeout&lt;/a&gt; function, which may be more appropriate for certain use cases.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;.delay()&lt;/code&gt; 메소드는 대기의 jQuery 효과 사이의 지연에 가장 적합합니다. 지연을 취소 할 수있는 방법을 제공하는 등 제한적이지 않기 때문에 &lt;code&gt;.delay()&lt;/code&gt; 는 JavaScript의 기본 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setTimeout&quot;&gt;setTimeout&lt;/a&gt; 함수를 대체하지 않으므로 특정 사용 사례에 더 적합 할 수 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86669143bbd5d21b82a59f1f4e5e91757e67ce16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is deprecated as of jQuery 1.7 and will be moved to a plugin in jQuery 1.8.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이 메소드는 jQuery 1.7부터 사용되지 않으며 jQuery 1.8의 플러그인으로 이동합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74d6c322622200f5dbb29a7a9ca67a2bbfd6f378" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This signature (only!) is deprecated as of jQuery 1.7 and &lt;em&gt;removed&lt;/em&gt; in jQuery 1.8&lt;/strong&gt;. It was primarily meant to be used internally or by plugin authors.</source>
          <target state="translated">&lt;strong&gt;이 서명 (만!)은 jQuery 1.7부터 더 이상 사용되지 않으며 jQuery 1.8에서 &lt;em&gt;제거&lt;/em&gt; 되었습니다&lt;/strong&gt; . 주로 내부적으로 또는 플러그인 작성자가 사용하도록되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fd5fcf60a6f94646f4ba72d8cdede8f188a1160" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This signature (only!) is deprecated as of jQuery 3.0&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;이 서명 (만!)은 jQuery 3.0부터 사용되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="1fe1db82d39ba77e44e061d9fee78a30d4624478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: When setting the 'class' attribute, you must always use quotes!</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : 'class'속성을 설정할 때 항상 따옴표를 사용해야합니다!</target>
        </trans-unit>
        <trans-unit id="e6dc6fb5f57d8c8ea692ed100dacfb8198107dcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Passing &lt;code&gt;false&lt;/code&gt; for the first argument is not supported.</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : 첫 번째 인수에 대해 &lt;code&gt;false&lt;/code&gt; 를 전달 하는 것은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1fb3fb2570ad27f79efb22b7e389103f862d5d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Versions prior to 3.4 had a security issue where calling &lt;code&gt;jQuery.extend(true, {}, object)&lt;/code&gt; on an unsanitized object containing a &lt;code&gt;__proto__&lt;/code&gt; property would extend &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : 3.4 이전 버전 에서는 &lt;code&gt;__proto__&lt;/code&gt; 속성을 포함하는 비 &lt;code&gt;jQuery.extend(true, {}, object)&lt;/code&gt; 를 호출 하면 &lt;code&gt;Object.prototype&lt;/code&gt; 이 확장 되는 보안 문제가있었습니다 .</target>
        </trans-unit>
        <trans-unit id="449ddbc4074b15fea463245c5b65d4d02ad1dd35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;accepts&lt;/strong&gt; (default: &lt;code&gt;depends on dataType&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;수락&lt;/strong&gt; (기본값 : &lt;code&gt;depends on dataType&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="121a6731ee5e03d392fcacfb80e61ad30988ee49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;additionalArguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;additionalArguments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c282119bc2aa895f52c7f6ac872b27a2fe59a5dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;always&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;always&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41f2a72ff9f7c1c028db6c3a40648873f85a18c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;alwaysCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;alwaysCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b38ae5d5e0a03398f4e07c891a7c92c0aa15adf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ancestor: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;조상 :&lt;/strong&gt; 모든 유효한 선택기.</target>
        </trans-unit>
        <trans-unit id="cdba158899879c68e7e41af998128bb0678119b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;args&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;args&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="885e8dfd5447855fd5816cce0896037aeab3daec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;arguments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b92f13f438fcb2b029f80ac0d509cc2a83017ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f912ad7c6e93cc65e9aee78cee084ba6099424f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;async&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;비동기&lt;/strong&gt; (기본값 : &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2836d74eabb832fe698bc25e7168f72a722f231a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attribute: &lt;/strong&gt;An attribute name.</source>
          <target state="translated">&lt;strong&gt;속성 :&lt;/strong&gt; 속성 이름.</target>
        </trans-unit>
        <trans-unit id="48c68c2764dab66f12008a1a116854b710269655" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeFilter1: &lt;/strong&gt;An attribute filter.</source>
          <target state="translated">&lt;strong&gt;attributeFilter1 :&lt;/strong&gt; 속성 필터</target>
        </trans-unit>
        <trans-unit id="7d79df8377d46fe14a81e073572917d12486274c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeFilter2: &lt;/strong&gt;Another attribute filter, reducing the selection even more</source>
          <target state="translated">&lt;strong&gt;attributeFilter2 :&lt;/strong&gt; 다른 속성 필터로 선택을 훨씬 더 줄입니다</target>
        </trans-unit>
        <trans-unit id="1aba10d193c48562f44b08990b0b3364ebeced53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeFilterN: &lt;/strong&gt;As many more attribute filters as necessary</source>
          <target state="translated">&lt;strong&gt;attributeFilterN :&lt;/strong&gt; 필요한만큼 더 많은 속성 필터</target>
        </trans-unit>
        <trans-unit id="fa28e1a1acb75ac1d3d8ff85ef13d2c2b2073ba8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeName&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;attributeName&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eee5820e9a97b0f42a52303422e5604a196c3278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;attributes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae77d2a9743e435ed97f2fbb5c402345ec94d4e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;beforeSend&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;beforeSend&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7767771cda5da4a27adda764ee905e9e0a8ba32e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;beforeStart&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;beforeStart&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa39fefbe10d0dc9ca7b6cec90e626336809c034" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cache&lt;/strong&gt; (default: &lt;code&gt;true, false for dataType 'script' and 'jsonp'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;캐시&lt;/strong&gt; (기본값 : &lt;code&gt;true, false for dataType 'script' and 'jsonp'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4a43214cf5ab706755ad25a01745366ed33cc732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;callback&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;callback&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa3b949239b1b24aa8775ff77f86222eb88ed84c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;callbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;callbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cc3e13ef4452b9b6f80fcd92ba3e921c6a06b06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;child: &lt;/strong&gt;A selector to filter the child elements.</source>
          <target state="translated">&lt;strong&gt;child :&lt;/strong&gt; 자식 요소를 필터링하는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="0a36b959ec4267b8580b5725a0a80e426a6b70f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;class: &lt;/strong&gt;A class to search for. An element can have multiple classes; only one of them must match.</source>
          <target state="translated">&lt;strong&gt;class :&lt;/strong&gt; 검색 할 클래스입니다. 요소는 여러 클래스를 가질 수 있습니다. 그들 중 하나만 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f50eaceec527f2fb8060c2170c3716663b95c660" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;className&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;className&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f7d7682daba8c987bf3f23d8782214b8db0222b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;classNames&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;classNames&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc16d5f0974676817b790478cfbe19881ae27ca9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;clearQueue&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;clearQueue&lt;/strong&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3d23e921d1611732cbe1c640713ad7af76f82da2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;code&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91947c44200b5b28dc68f510bad797f6099396cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;complete&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;complete&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88cc8636ba28ae178e1c733c4b06a50b6681923c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contained&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;contained&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6516f6a3293a5cda1292ef4ded696e488afbd4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;container&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;container&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d61514aba3f10993f97a0438d5177e6b3813f3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;content&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;content&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f206468e51127d19dda8988a4332e042af887482" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contentType&lt;/strong&gt; (default: &lt;code&gt;'application/x-www-form-urlencoded; charset=UTF-8'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;contentType&lt;/strong&gt; (기본값 : &lt;code&gt;'application/x-www-form-urlencoded; charset=UTF-8'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fae75d0c59bb07ae304d3284bd261cdf05143271" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contents&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;contents&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="828bab5a4b1caa2320c77fd6531f3bbd6bf4377c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;context&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="915e7a22c26b2e40c36b0d7078938568016f6ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;context&lt;/strong&gt; (default: &lt;code&gt;document&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;컨텍스트&lt;/strong&gt; (기본값 : &lt;code&gt;document&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e143cb3c0d98a21d1ca7d94e13adfea02c48594a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;converters&lt;/strong&gt; (default: &lt;code&gt;{&quot;* text&quot;: window.String, &quot;text html&quot;: true, &quot;text json&quot;: jQuery.parseJSON, &quot;text xml&quot;: jQuery.parseXML}&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;변환기&lt;/strong&gt; (기본값 : &lt;code&gt;{&quot;* text&quot;: window.String, &quot;text html&quot;: true, &quot;text json&quot;: jQuery.parseJSON, &quot;text xml&quot;: jQuery.parseXML}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b5ae46e2fba251c0ecc80d469a0bcf3afeaa1c4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;coordinates&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;coordinates&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e07606c5d9e669d199cb6b6a3ff11ce5cb65f80c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;crossDomain&lt;/strong&gt; (default: &lt;code&gt;false for same-domain requests, true for cross-domain requests&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;crossDomain&lt;/strong&gt; (기본값 : &lt;code&gt;false for same-domain requests, true for cross-domain requests&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f511c1828669c36db5dc8696841675bbe8e71c49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;data&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae01a60e1e4f5928f2e70b804b4fb7fdd8898f9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dataFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e67645e1830e74c5263e3a54c01a5625d7a01ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataType&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dataType&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6975ea6b1f490a4d01b00b1c7dae6ec0abca24df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataType&lt;/strong&gt; (default: &lt;code&gt;Intelligent Guess (xml, json, script, or html)&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;dataType&lt;/strong&gt; (기본값 : &lt;code&gt;Intelligent Guess (xml, json, script, or html)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f795aa7d9a90edcee4b5b48ef73af243d6855fd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataTypes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dataTypes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfab94a86a300efed9642212ffa05f369aedd036" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;deep&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;deep&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f2b673f64fe70c65d504c03d19ff7a177e619f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;deepWithDataAndEvents&lt;/strong&gt; (default: &lt;code&gt;value of withDataAndEvents&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;deepWithDataAndEvents&lt;/strong&gt; (기본값 : &lt;code&gt;value of withDataAndEvents&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8811e29ee1fa93afe4a210efaee262003a55d347" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;deferreds&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;deferreds&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df57e719f54f882f457fb5ef34c9bbb58f163662" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;descendant: &lt;/strong&gt;A selector to filter the descendant elements.</source>
          <target state="translated">&lt;strong&gt;자손 :&lt;/strong&gt; 자손 요소를 필터링하는 선택기.</target>
        </trans-unit>
        <trans-unit id="2777663789c8940d299595628ff36ae8cd96b7c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;display&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;display&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a0a756e9c21533cb5e5b19836218f39338cec69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;doc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;doc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eec21ac3de09c33db7efabbb65f7820e02623173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;done&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;done&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f8a00ce4674481b097543af9945b2fc7bede1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;doneCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;doneCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="accd4c636e7d5db769a776595bfb97414c41cb19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;doneFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;doneFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31e8bf65b1e56c767e045a86fe1b68d72bc46f3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;duration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;duration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9ace4f512b38b12fbea8b46dbb7aa33d7f275bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;duration&lt;/strong&gt; (default: &lt;code&gt;400&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;지속 시간&lt;/strong&gt; (기본값 : &lt;code&gt;400&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bf0ab64d45b1154af99ef62854f3601dd75a9366" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;easing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;easing&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e43e1b521e271931eb89ff3fc66490d6c12d2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;easing&lt;/strong&gt; (default: &lt;code&gt;swing&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;여유&lt;/strong&gt; (기본값 : &lt;code&gt;swing&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e2f2ea85588ba3e8ff74d0e851fd190d7901cfd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;element: &lt;/strong&gt;An element to search for. Refers to the tagName of DOM nodes.</source>
          <target state="translated">&lt;strong&gt;element :&lt;/strong&gt; 검색 할 요소입니다. DOM 노드의 tagName을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2879a1c3b2e81d6f8e2c515b9df10320586351e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;element&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;element&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="497dc782adad663cbf8120bd4437d573637d71cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;elementArray&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;elementArray&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff24cd368b15081f62bfc217e85e8bdc467a1bf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;elements&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8ba21dd86041b818669f3e6424dde2a1b73ea59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;end&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;end&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d77f05acd1e8727edc800e84aad97845d0926578" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;error&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3c6eb2f6fe55ecbfbbd62bbf29a994cf2545ffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;event&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46628bf863a214a4b1be9cdc51338faadcd2e76f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eventData&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eventData&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ad1b988992078bed4266604d821ba4d66aa6a5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eventType&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eventType&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7e22fda5fd73526533f6573f6ddb90dfb45b1f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;events&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;events&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69e9c0b619cc40f3fc3f530da7a4b2a70e6d2aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extraParameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;extraParameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="325b0bab2449ce9608481f59fd37d00eaa4f4aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fail&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;fail&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f172acf16c07e4939d98c861fd45d05e9ccd3c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;failCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;failCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8e12782d74fe2d2722c317977f57613120567eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;failFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;failFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f3b0d5c89c8088634bee90ecb557b288bf604a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;false&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;false&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fe54301c0132c584e46785165b5c59f0cd42a69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;filter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;filter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64a0f945bafc87ef4a5a183104c43bd7162ff6c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;first&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;first&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5fe657ceb750e9efa20ecb6e9605a99cd8606b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;flags&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="076854a4f9effc2429dd08cd1faea400754ebace" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fromIndex&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;fromIndex&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22922a9d9c3d728b35a1da88936aa55d8811ad3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;function-html&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;function-html&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e51a776d72925993e6ee8a134706aa4192c29f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1776b521e9c022cfea6bbb7f91b46f1213453ca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;global&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;전역&lt;/strong&gt; (기본값 : &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="200a9f93aa80b40dd9e55bc675443ed719879e05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handler&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handler&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="966a9adcac483dfba679ff8456c7f189b0e659b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handlerIn&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handlerIn&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3237565032de4d3599f65f94614668b3d16d977a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handlerInOut&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handlerInOut&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="469bd78374762bebff8275bb2084886695d9bb59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handlerOut&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handlerOut&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6671004ac32001324f41124d1df19f2515c3afad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;headers&lt;/strong&gt; (default: &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;헤더&lt;/strong&gt; (기본값 : &lt;code&gt;{}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5a2d9c02e94a212de9b41ba533ad50accd0d29e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hold&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c3fe094561cf03c49f876243d2abbe069ac3c80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;html&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;html&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bff7381775e965dba838b93ae474a93848651195" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;htmlString&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;htmlString&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="208ebaf35ff8ba765919a3ada801ed8cb693caf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;id: &lt;/strong&gt;An ID to search for, specified via the id attribute of an element.</source>
          <target state="translated">&lt;strong&gt;id :&lt;/strong&gt; 검색 할 ID로, 요소의 id 속성을 통해 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="209e1760714d9d91367f4ebd64f29d51b99757b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ifModified&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;ifModified&lt;/strong&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="99d76c407749d72d5806df23fd7eac564e87265b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;includeMargin&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;includeMargin&lt;/strong&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bd1aabe63830d6eb3338be642b47960c6d6aaf7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index-related selectors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;인덱스 관련 선택기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e23dfd738f5166262d3c95f3350fa8046d95ea2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with &lt;code&gt;1&lt;/code&gt;, the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-child(even)&lt;/code&gt;, &lt;code&gt;:nth-child(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;인덱스 :&lt;/strong&gt; 각 하위의 인덱스로 시작하였습니다 &lt;code&gt;1&lt;/code&gt; 문자열을 &lt;code&gt;even&lt;/code&gt; 또는 &lt;code&gt;odd&lt;/code&gt; (또는 방정식 등. &lt;code&gt;:nth-child(even)&lt;/code&gt; , &lt;code&gt;:nth-child(4n)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="06166bac000820e391782b77033ef6f956293b85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with &lt;code&gt;1&lt;/code&gt;, the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-of-type(even)&lt;/code&gt;, &lt;code&gt;:nth-of-type(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;인덱스 :&lt;/strong&gt; 각 하위의 인덱스로 시작하였습니다 &lt;code&gt;1&lt;/code&gt; 문자열을 &lt;code&gt;even&lt;/code&gt; 또는 &lt;code&gt;odd&lt;/code&gt; 또는 방정식 (예. &lt;code&gt;:nth-of-type(even)&lt;/code&gt; , &lt;code&gt;:nth-of-type(4n)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="de8dbe62525754aefd31098b612d0b9d3a860870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with the last one (&lt;code&gt;1&lt;/code&gt;), the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-last-child(even)&lt;/code&gt;, &lt;code&gt;:nth-last-child(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;index :&lt;/strong&gt; 마지막 자식 ( &lt;code&gt;1&lt;/code&gt; ), &lt;code&gt;even&lt;/code&gt; 또는 &lt;code&gt;odd&lt;/code&gt; 문자열 또는 방정식 (예 &lt;code&gt;:nth-last-child(even)&lt;/code&gt; , &lt;code&gt;:nth-last-child(4n)&lt;/code&gt; 부터 시작하여 일치시킬 각 자식의 인덱스 )</target>
        </trans-unit>
        <trans-unit id="4485ab4705a0e2c659d51fb1d31b4acbd79dfbae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with the last one (&lt;code&gt;1&lt;/code&gt;), the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-last-of-type(even)&lt;/code&gt;, &lt;code&gt;:nth-last-of-type(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;index :&lt;/strong&gt; 마지막 자식 ( &lt;code&gt;1&lt;/code&gt; ), &lt;code&gt;even&lt;/code&gt; 또는 &lt;code&gt;odd&lt;/code&gt; 문자열 또는 방정식 (예 &lt;code&gt;:nth-last-of-type(even)&lt;/code&gt; , &lt;code&gt;:nth-last-of-type(4n)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5652e4428286ce29c368164b617c1301394e60a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;Zero-based index of the element to match.</source>
          <target state="translated">&lt;strong&gt;index :&lt;/strong&gt; 일치시킬 요소의 인덱스 (0부터 시작).</target>
        </trans-unit>
        <trans-unit id="a15bea00bc95bc89a667661a96e02052ed6bb528" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;Zero-based index.</source>
          <target state="translated">&lt;strong&gt;인덱스 :&lt;/strong&gt; 0부터 시작하는 인덱스.</target>
        </trans-unit>
        <trans-unit id="69079d90ef1851e2f0bbb8bc6ce5067ce4982a9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;index&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4907e9aaa9f6f8ff01f56f9a961d46d5b47e07e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indexFromEnd: &lt;/strong&gt;Zero-based index of the element to match, counting backwards from the last element.</source>
          <target state="translated">&lt;strong&gt;indexFromEnd :&lt;/strong&gt; 일치시킬 요소의 인덱스 (0부터 시작)이며 마지막 요소부터 거꾸로 세어집니다.</target>
        </trans-unit>
        <trans-unit id="5e8b1c7995a82351a0d6e5fdc505affc6b010af7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indexFromEnd: &lt;/strong&gt;Zero-based index, counting backwards from the last element.</source>
          <target state="translated">&lt;strong&gt;indexFromEnd :&lt;/strong&gt; 0부터 시작하는 인덱스로 마지막 요소부터 거꾸로 세어집니다.</target>
        </trans-unit>
        <trans-unit id="009d509641a25696e20dc6d865aa1c6e41f9e8b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indexFromEnd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;indexFromEnd&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad5fd5c944ea8963ea43842c485cf4c42ae38de3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;invert&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ed1a3cc480524921334877b02e8f618c9ee94bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isLocal&lt;/strong&gt; (default: &lt;code&gt;depends on current location protocol&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;isLocal&lt;/strong&gt; (기본값 : &lt;code&gt;depends on current location protocol&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f1f59635c8a84d5c89e7b4946e5a817c07b1ea1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jQuery 3&lt;/strong&gt; changes the behavior of this method to align it to the &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;Dataset API specifications&lt;/a&gt;. Specifically, jQuery 3 transforms every two-character sequence of &quot;-&quot; (U+002D) followed by a lowercase ASCII letter by the uppercase version of the letter as per definition of &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;the algorithm of the Dataset API&lt;/a&gt;. Writing a statement like &lt;code&gt;$( &quot;body&quot; ).data( { &quot;my-name&quot;: &quot;aValue&quot; } ).data();&lt;/code&gt; will return &lt;code&gt;{ myName: &quot;aValue&quot; }&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;jQuery 3&lt;/strong&gt; 은이 메소드의 동작을 변경하여 &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;Dataset API 사양&lt;/a&gt; 에 맞 춥니 다 . 특히, jQuery 3은 &quot;-&quot;(U + 002D)의 두 문자 시퀀스마다 소문자 ASCII 문자와 대문자의 문자 버전이 뒤 따르는 &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;Dataset API 알고리즘의&lt;/a&gt; 정의에 따라 변환합니다 . &lt;code&gt;$( &quot;body&quot; ).data( { &quot;my-name&quot;: &quot;aValue&quot; } ).data();&lt;/code&gt; 와 같은 문장 작성 &lt;code&gt;{ myName: &quot;aValue&quot; }&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="fa2774f8dadcfeb2f92f696b83048e000c5c9733" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.always(function( data|jqXHR, textStatus, jqXHR|errorThrown ) { });&lt;/strong&gt; (added in jQuery 1.6)</source>
          <target state="translated">&lt;strong&gt;jqXHR.always (함수 (data | jqXHR, textStatus, jqXHR | errorThrown) {}); &lt;/strong&gt;(jQuery 1.6에 추가됨)</target>
        </trans-unit>
        <trans-unit id="9a3e9a5e6a8dab4819b19c11a34b4485f8f0232e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.done(function( data, textStatus, jqXHR ) {});&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jqXHR.done (function (data, textStatus, jqXHR) {});&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="091701b4bcee3995ccdf4ddae82768330149ad94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.fail(function( jqXHR, textStatus, errorThrown ) {});&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jqXHR.fail (함수 (jqXHR, textStatus, errorThrown) {});&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70d70857376c27cac2f17e7fe28169730a2cc6ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.then(function( data, textStatus, jqXHR ) {}, function( jqXHR, textStatus, errorThrown ) {});&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jqXHR.then (함수 (data, textStatus, jqXHR) {}, function (jqXHR, textStatus, errorThrown) {});&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cdb3481b357c5341768790edbd2c31061621574" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;json&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;json&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ea10674490aa358cfe6d1385505801b51a13d45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jsonp&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jsonp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da5f9dd2c5770724408bd88371dcae32041e325a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jsonpCallback&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jsonpCallback&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8855289aebef3a3d57e74210e3bca6b53e75ea56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jumpToEnd&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;jumpToEnd&lt;/strong&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b1acbd806ed98adc57ad69d8ed54bf25ef0aa561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keepScripts&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;keepScripts&lt;/strong&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4be38f119a0ce341e162a99506751307db405b05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;key&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c23578433c6140700740f2a92138adc7b40de1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;language: &lt;/strong&gt;A language code.</source>
          <target state="translated">&lt;strong&gt;언어 :&lt;/strong&gt; 언어 코드.</target>
        </trans-unit>
        <trans-unit id="141fafaccc619483b292ca17a5affe6854d5a601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;list&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32f8330b584dc33f9968fe37d9a9dccb441a3dca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a7f68e50a716078d91746b425543d0bd4b5cbf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (default: &lt;code&gt;'GET'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;방법&lt;/strong&gt; (기본값 : &lt;code&gt;'GET'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="837fbb8844e9c7e46aefb1b3038ec4cdbe5cd9a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mimeType&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;mimeType&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f810f79a2630765b9651210d00a76337d99974d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f11dd5c237d62dc9927c3f874bbe016402a9b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;namespace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc1bb95dd645feab9ff3c585a8983735dca4bcf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;newContent&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;newContent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32b2ebffe364fb15370757502543f745a0a8c3ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;newQueue&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;newQueue&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="446fbcb84852547e918439b48983e76a3c85a41c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;next: &lt;/strong&gt;A selector to match the element that is next to the first selector.</source>
          <target state="translated">&lt;strong&gt;next :&lt;/strong&gt; 첫 번째 선택기 옆에있는 요소와 일치하는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="059b52cec39349d25281b1f0075f3bddf36b3a6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;node&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;node&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e48029ed9b76a47dea127f04063a1aebb89da71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nonce&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;nonce&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c327d8b933a9541eb8e9c716c1c9c07608e24c3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff401e77971919fd31cf87c1bdfd94784ebc48b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;object1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a65af86207932fc6210e8a3dd529e8396b4bbe05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;object&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="845601dde47c345eab24ebd74055f27e24333375" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;objectN&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;objectN&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0d6c1049eb20a3d0ae682d3ab6d79a1491faf1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;opacity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;opacity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b79ca5befdc026d0d3e962decafbd0b6bc0e917" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;options&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="515e3df4e9b262f6d24560a658c47eb646fa7fdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ownerDocument&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ownerDocument&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c2738402aa2e0e6f5d9605066e5f1a1a76de0ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;parent: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;부모 :&lt;/strong&gt; 유효한 선택기.</target>
        </trans-unit>
        <trans-unit id="3e4aed89041b84e5dbea1013ca4d8535922ae1d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;password&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;password&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93d17987b7724031d01c7a0844d9c45ff0f923dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prev: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;이전 :&lt;/strong&gt; 유효한 선택기.</target>
        </trans-unit>
        <trans-unit id="7a15e2eb763cd2c660679acbaa0a782b469e4ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;preventBubble&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;preventBubble&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="235176cd17be8f276794c9dc22d2c019bfdac05f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;processData&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;processData&lt;/strong&gt; (기본값 : &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="82fa1260b7049f5fb337d544d60c3f8b8129ba4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;progress&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;progress&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a621fbf5f32cc7c89e46301503035207492711ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;progressCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;progressCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d56d3c01c4bf2b242eac8f77025dc50604cb5949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;progressFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;progressFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7f489df13b677092b8585271f742ad360a5c7b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aba937385a52d06721c16295239abb4ace4a8676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;propertyName&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;propertyName&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c5d0ea5d73c8fdc2d5ef6e7e8cfd32e952712e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;propertyNames&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;propertyNames&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf3d68c4f71a9b4e779991edccc3c02bd6f74af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queue&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;queue&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8069677388b6c0c56aa6f30dfec340088e8a1730" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queue&lt;/strong&gt; (default: &lt;code&gt;'fx'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;대기열&lt;/strong&gt; (기본값 : &lt;code&gt;'fx'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9d2e80b872dea044b300bd005e08f5e0a39b3baa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queue&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;대기열&lt;/strong&gt; (기본값 : &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8383ce65025eaf79fc22fe6d94d3d491754cd427" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queueName&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;queueName&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e937d6710e03cf470133dbd37f7f00bf412e814b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;removeAll&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;removeAll&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cab33ec3705343b761f090fee09e80d4d8bf05e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scriptAttrs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;scriptAttrs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed6f08f6b02ea4de00ac476ee0d11f5bb304c962" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scriptCharset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;scriptCharset&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad0613d4a89fce9ad43f611fc15f76d893efc7df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;second&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;second&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b9251e29489477ea48a1e92927de58bda699ecf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;selection&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="938386e251491609c8400042c0466442b10ddb12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector1: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;selector1 :&lt;/strong&gt; 유효한 선택기.</target>
        </trans-unit>
        <trans-unit id="3aeb61646c7d1110d56bbadbccc39d5b146db758" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector2: &lt;/strong&gt;Another valid selector.</source>
          <target state="translated">&lt;strong&gt;selector2 :&lt;/strong&gt; 다른 유효한 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="f30902bcc50aca7dcf307db7696691d6d4aec971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector: &lt;/strong&gt;A selector with which to filter by.</source>
          <target state="translated">&lt;strong&gt;선택기 :&lt;/strong&gt; 필터링 기준이되는 선택기.</target>
        </trans-unit>
        <trans-unit id="aefefd2250589ddf2dd176029d76556b143541e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector: &lt;/strong&gt;Any selector.</source>
          <target state="translated">&lt;strong&gt;선택기 :&lt;/strong&gt; 모든 선택기.</target>
        </trans-unit>
        <trans-unit id="5d56cd6c115223115e1b7d3e71b6bcfa4af41b2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;selector&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0da97f9f71d7cfef74cf713ad92e02ad604c300f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selectorN: &lt;/strong&gt;As many more valid selectors as you like.</source>
          <target state="translated">&lt;strong&gt;selectorN : 원하는&lt;/strong&gt; 만큼 더 많은 유효한 선택기가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0d49950222227e0c8f494a8cfc3951a9bc4607e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selectors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;selectors&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c5f26db4014a50a962a8d07b50ccc2102aeee6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;settings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;settings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="161a478723f6d6592dce60d17dda248e9f39e0b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;siblings: &lt;/strong&gt;A selector to filter elements that are the following siblings of the first selector.</source>
          <target state="translated">&lt;strong&gt;형제 :&lt;/strong&gt; 첫 번째 선택기의 다음 형제 인 요소를 필터링하는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="0b49b8110ceea8983a9f0692bc49dd581e2908d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;specialEasing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;specialEasing&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="340d93d630e5f4d5a65d03a2dc1f6b8cd6757131" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;start&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;start&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97eafdd572ef6c531ac977b61dfe3a8d92567760" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;state&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;state&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53bbc8c5ef1f581280b575ad614784b318ce20e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;statusCode&lt;/strong&gt; (default: &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;statusCode&lt;/strong&gt; (기본값 : &lt;code&gt;{}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b5d96c176de391eade95d3eab7f894273c12e2ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;step&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;step&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0aae87bbf1303e1aae4f16f704cc5f3a17b46b3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;str&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;str&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7de2644e5faebc244b72786db4a48425f7bc9714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;success&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;success&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab570f012eef8a22b0f529a22053b8c64a432da6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;target&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;target&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="316b773910d7e6b633f6188cb92ed2d48f3969cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;text: &lt;/strong&gt;A string of text to look for. It's case sensitive.</source>
          <target state="translated">&lt;strong&gt;text :&lt;/strong&gt; 찾을 텍스트 문자열입니다. 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="fcf8f69a27acdf62f1b9ccf27f213246ac8f4353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;text&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;text&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59d73a769f98d9796fd1fd1082837525503b83aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;timeout&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;timeout&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9f8b3bff9d3fc56a2937643d4081b7134b2750" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;traditional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;traditional&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddd45f32ad57791baa66f77cf529514bd23835e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type&lt;/strong&gt; (default: &lt;code&gt;'GET'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;type&lt;/strong&gt; (기본값 : &lt;code&gt;'GET'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a828fcd9191f662c235001b0fb0433c232093abb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type&lt;/strong&gt; (default: &lt;code&gt;fx&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;type&lt;/strong&gt; (기본값 : &lt;code&gt;fx&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ce5a3af0fdf8b9239a29b8efca3845f0b5e7257d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;url&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd066f52641027d05113b21a6066496ab9f98361" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt; (default: &lt;code&gt;The current page&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;url&lt;/strong&gt; (기본값 : &lt;code&gt;The current page&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="20b91c2b4e89299d5bb4c9111828118dfe4327db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;username&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;username&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea8a1c85d9185c658b57e8e3a31c5541416e65f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value: &lt;/strong&gt;An attribute value. &lt;strong&gt;Can be either a &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;valid identifier&lt;/a&gt; or a quoted string.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;값 :&lt;/strong&gt; 속성 값 &lt;strong&gt;이 될 수 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;유효한 식별자&lt;/a&gt; 또는 인용 문자열.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f74c8077c22c9c8f36a020bfbc1edb8c5925caf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value: &lt;/strong&gt;An attribute value. Can be either a &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;valid identifier&lt;/a&gt; or a quoted string.</source>
          <target state="translated">&lt;strong&gt;값 :&lt;/strong&gt; 속성 값 이 될 수 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;유효한 식별자&lt;/a&gt; 또는 인용 문자열.</target>
        </trans-unit>
        <trans-unit id="2fe8c102c8793c67d6746562319d7cce28d3e604" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="513698c3c90424d3723cb7631615b42b5ddf6e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;withDataAndEvents&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;withDataAndEvents&lt;/strong&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="74f914a3291ee61fcac30f5e21c0753316a7d67f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wrappingElement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;wrappingElement&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07c9e2f41a6ec75886feea007ebc82b6dfd008f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xhr&lt;/strong&gt; (default: &lt;code&gt;ActiveXObject when available (IE), the XMLHttpRequest otherwise&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;xhr&lt;/strong&gt; (기본값 : &lt;code&gt;ActiveXObject when available (IE), the XMLHttpRequest otherwise&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="300e8bca1b1ae7e10126dad6b8a5972167110906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xhrFields&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;xhrFields&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="50b2b174a5fb989cc8f8ea6a8a3b4be3f120914d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;category/events/event-object&quot;&gt;&lt;code&gt;jQuery.Event&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;category/events/event-object&quot;&gt; &lt;code&gt;jQuery.Event&lt;/code&gt; 의&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="626ac64b932e199476dbb071878917c879dd21d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;keypress&lt;/code&gt; event handler can be attached to any element, but the event is only sent to the element that has the focus. Focusable elements can vary between browsers, but form controls can always get focus so are reasonable candidates for this event type.</source>
          <target state="translated">&lt;code&gt;keypress&lt;/code&gt; 이벤트 핸들러는 어떤 요소에 부착 될 수 있지만, 이벤트는 포커스를 갖는 요소에 전송된다. 포커스 가능한 요소는 브라우저마다 다를 수 있지만 양식 컨트롤은 항상 포커스를 얻을 수 있으므로이 이벤트 유형에 적합한 후보입니다.</target>
        </trans-unit>
        <trans-unit id="00471909eec233c7deebd79fc454fb846953b8e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;scroll&lt;/code&gt; event is sent whenever the element's scroll position changes, regardless of the cause. A mouse click or drag on the scroll bar, dragging inside the element, pressing the arrow keys, or using the mouse's scroll wheel could cause this event.</source>
          <target state="translated">&lt;code&gt;scroll&lt;/code&gt; 요소의 스크롤 위치는 원인에 관계없이 변화 할 때마다 이벤트가 전송된다. 스크롤 막대에서 마우스를 클릭하거나 드래그하거나 요소 내부를 드래그하거나 화살표 키를 누르거나 마우스의 스크롤 휠을 사용하면이 이벤트가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cadf7bd3373b572121397792ced8447484716e1b" translate="yes" xml:space="preserve">
          <source>A Boolean (not just truthy/falsy) value to determine whether the class should be added or removed.</source>
          <target state="translated">클래스를 추가 또는 제거해야하는지 여부를 결정하는 부울 (진실성 / 거짓이 아닌) 값입니다.</target>
        </trans-unit>
        <trans-unit id="0ec4d31a09917ea70c210aa2a68f62c78d912db7" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether event handlers and data for all children of the cloned element should be copied. By default its value matches the first argument's value (which defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">복제 된 요소의 모든 하위에 대한 이벤트 핸들러 및 데이터를 복사해야하는지 여부를 나타내는 부울입니다. 기본적으로 해당 값은 첫 번째 인수의 값과 일치합니다 (기본값은 &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="920c3bd13fe409f20335d3672f31ea673e261ddb" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether event handlers and data should be copied along with the elements. The default value is &lt;code&gt;false&lt;/code&gt;. &lt;em&gt;*In jQuery 1.5.0 the default value was incorrectly &lt;code&gt;true&lt;/code&gt;; it was changed back to &lt;code&gt;false&lt;/code&gt; in 1.5.1 and up.&lt;/em&gt;</source>
          <target state="translated">이벤트 핸들러와 데이터를 요소와 함께 복사해야하는지 여부를 나타내는 부울입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. &lt;em&gt;* jQuery를 1.5.0에서 기본 값은 잘못이었다 &lt;code&gt;true&lt;/code&gt; ; 1.5.1 이상에서 다시 &lt;code&gt;false&lt;/code&gt; 로 변경되었습니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f919eec872376d34605381386cf5f9fb85d19fe0" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether event handlers should be copied along with the elements. As of jQuery 1.4, element data will be copied as well.</source>
          <target state="translated">이벤트 핸들러를 요소와 함께 복사해야하는지 여부를 나타내는 부울입니다. jQuery 1.4부터 요소 데이터도 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="f59db941393f75c89c1fc8c7da3ed9d869acca6a" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to complete the current animation immediately. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">현재 애니메이션을 즉시 완료할지 여부를 나타내는 부울입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="25e09d30904b8efdce26c2968ea59361fcae58e4" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to include scripts passed in the HTML string</source>
          <target state="translated">HTML 문자열에 전달 된 스크립트를 포함할지 여부를 나타내는 부울</target>
        </trans-unit>
        <trans-unit id="0a0d744f15a1d56d9ae87b925348d78e12a77fce" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to include the element's margin in the calculation.</source>
          <target state="translated">계산에 요소의 여백을 포함할지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="f804d183051d6a0d27db1c39aef4407550e7f5f0" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to new value should account for the element's margin.</source>
          <target state="translated">새 값이 요소의 여백을 고려해야하는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="4e6a7a90884cde2d7b7d736bb5c1534ac2d959d3" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to perform a traditional &quot;shallow&quot; serialization.</source>
          <target state="translated">전통적인 &quot;얕은&quot;직렬화를 수행할지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="c11dee93c846a62d2b582e0d3629879f2fb1afc3" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. &lt;strong&gt;As of jQuery 1.7&lt;/strong&gt;, the queue option can also accept a string, in which case the animation is added to the queue represented by that string. When a custom queue name is used the animation does not automatically start; you must call &lt;code&gt;.dequeue(&quot;queuename&quot;)&lt;/code&gt; to start it.</source>
          <target state="translated">효과 대기열에 애니메이션을 배치할지 여부를 나타내는 부울입니다. False이면 애니메이션이 즉시 시작됩니다. &lt;strong&gt;jQuery 1.7&lt;/strong&gt; 부터 대기열 옵션은 문자열을 허용 할 수 &lt;strong&gt;있으며이&lt;/strong&gt; 경우 애니메이션이 해당 문자열로 표시되는 대기열에 추가됩니다. 사용자 지정 대기열 이름을 사용하면 애니메이션이 자동으로 시작되지 않습니다. 시작하려면 &lt;code&gt;.dequeue(&quot;queuename&quot;)&lt;/code&gt; 를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="e13d16cdd05a32ad075b6e6bf4b4c47ce5a2f70e" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to remove all jQuery variables from the global scope (including jQuery itself).</source>
          <target state="translated">전역 범위에서 모든 jQuery 변수를 제거할지 여부를 나타내는 부울입니다 (jQuery 자체 포함).</target>
        </trans-unit>
        <trans-unit id="c7da3cd3d7fccdcfe1a4e238f54c267d262fa099" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to remove queued animation as well. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">대기중인 애니메이션을 제거할지 여부를 나타내는 부울입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a0206764326c9aeeb36eb2a04265ab7ec2768971" translate="yes" xml:space="preserve">
          <source>A CSS property name.</source>
          <target state="translated">CSS 속성 이름</target>
        </trans-unit>
        <trans-unit id="1d9a424ac18a5524588a6de30886896df9726a11" translate="yes" xml:space="preserve">
          <source>A CSS property.</source>
          <target state="translated">CSS 속성</target>
        </trans-unit>
        <trans-unit id="bca3ac43884a66581ce72f0010645625b64c0ef9" translate="yes" xml:space="preserve">
          <source>A DOM Element, Document, jQuery or selector to use as context</source>
          <target state="translated">컨텍스트로 사용할 DOM 요소, 문서, jQuery 또는 선택기</target>
        </trans-unit>
        <trans-unit id="0a4e6fd668747ce7aeec451a94588f515bfd0824" translate="yes" xml:space="preserve">
          <source>A DOM Element, Document, or jQuery to use as context</source>
          <target state="translated">컨텍스트로 사용할 DOM 요소, 문서 또는 jQuery</target>
        </trans-unit>
        <trans-unit id="bf6f8db638458c0d54ecd199a356441fad514fcc" translate="yes" xml:space="preserve">
          <source>A DOM element from which to remove and execute a queued function.</source>
          <target state="translated">대기중인 함수를 제거하고 실행할 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6d1863a8b326e3d329d040c31d8fc5a7b51c6541" translate="yes" xml:space="preserve">
          <source>A DOM element from which to remove data.</source>
          <target state="translated">데이터를 제거 할 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="d3d26c0e06fc373c118ae41852f8a2af7a04f20e" translate="yes" xml:space="preserve">
          <source>A DOM element on which to add a queued function.</source>
          <target state="translated">대기중인 함수를 추가 할 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="87b27947cf248720c62360b80a49e194db582937" translate="yes" xml:space="preserve">
          <source>A DOM element to be checked for data.</source>
          <target state="translated">데이터를 검사 할 DOM 요소</target>
        </trans-unit>
        <trans-unit id="45caa837053521fb05701b95b0856988c80a5089" translate="yes" xml:space="preserve">
          <source>A DOM element to inspect for an attached queue.</source>
          <target state="translated">연결된 큐를 검사 할 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="dd594c9f3c7e503df9384a470a7baec60d1a116f" translate="yes" xml:space="preserve">
          <source>A DOM element to match elements against.</source>
          <target state="translated">요소와 일치하는 DOM 요소</target>
        </trans-unit>
        <trans-unit id="893b319a3c9368eac617d7d5ec0f2e00d03cff2d" translate="yes" xml:space="preserve">
          <source>A DOM element to wrap in a jQuery object.</source>
          <target state="translated">jQuery 객체를 래핑 할 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="7eadc41cd28ba5d36f6cc6229d6b0b11330467b6" translate="yes" xml:space="preserve">
          <source>A DOM element where the array of queued functions is attached.</source>
          <target state="translated">대기중인 함수의 배열이 첨부 된 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="2ee74e86b63853eb4fcf21549d356240bb5d0398" translate="yes" xml:space="preserve">
          <source>A DOM element within which a matching element may be found.</source>
          <target state="translated">일치하는 요소를 찾을 수있는 DOM 요소</target>
        </trans-unit>
        <trans-unit id="827dbd231c2f10b0fab1e98238915fda6a0b4f2d" translate="yes" xml:space="preserve">
          <source>A DOM node or jQuery object indicating where to stop matching ancestor elements.</source>
          <target state="translated">상위 요소와의 일치를 중지 할 위치를 나타내는 DOM 노드 또는 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a64727482368a47807766530bf4ee2b41024cb45" translate="yes" xml:space="preserve">
          <source>A DOM node or jQuery object indicating where to stop matching following sibling elements.</source>
          <target state="translated">다음 형제 요소와의 일치를 중지 할 위치를 나타내는 DOM 노드 또는 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="17bde10249ad93c47c5e7adaa5199cc2c447f1c1" translate="yes" xml:space="preserve">
          <source>A DOM node or jQuery object indicating where to stop matching preceding sibling elements.</source>
          <target state="translated">선행 형제 요소와의 일치를 중지 할 위치를 나타내는 DOM 노드 또는 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="010801983f9d1a7f0dbf70e0a0dde4f374f712ba" translate="yes" xml:space="preserve">
          <source>A Deferred object starts in the &lt;em&gt;pending&lt;/em&gt; state. Any callbacks added to the object with &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.always&quot;&gt;&lt;code&gt;deferred.always()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;deferred.done()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;deferred.fail()&lt;/code&gt;&lt;/a&gt; are queued to be executed later. Calling &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;deferred.resolve()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.resolvewith&quot;&gt;&lt;code&gt;deferred.resolveWith()&lt;/code&gt;&lt;/a&gt; transitions the Deferred into the &lt;em&gt;resolved&lt;/em&gt; state and immediately executes any &lt;code&gt;doneCallbacks&lt;/code&gt; that are set. Calling &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;deferred.reject()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.rejectwith&quot;&gt;&lt;code&gt;deferred.rejectWith()&lt;/code&gt;&lt;/a&gt; transitions the Deferred into the &lt;em&gt;rejected&lt;/em&gt; state and immediately executes any &lt;code&gt;failCallbacks&lt;/code&gt; that are set. Once the object has entered the resolved or rejected state, it stays in that state. Callbacks can still be added to the resolved or rejected Deferred &amp;mdash; they will execute immediately.</source>
          <target state="translated">지연된 개체는 &lt;em&gt;보류&lt;/em&gt; 상태 에서 시작됩니다 . &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.always&quot;&gt; &lt;code&gt;deferred.always()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;deferred.done()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;deferred.fail()&lt;/code&gt; &lt;/a&gt; 을 사용하여 객체에 추가 된 콜백 은 나중에 실행되도록 대기합니다. &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;deferred.resolve()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;deferred.resolvewith&quot;&gt; &lt;code&gt;deferred.resolveWith()&lt;/code&gt; &lt;/a&gt; 호출 하면 Deferred가 &lt;em&gt;해결 된&lt;/em&gt; 상태 로 전환 되고 설정된 &lt;code&gt;doneCallbacks&lt;/code&gt; 이 즉시 실행 됩니다. &lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;deferred.reject()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;deferred.rejectwith&quot;&gt; &lt;code&gt;deferred.rejectWith()&lt;/code&gt; &lt;/a&gt; 호출 하면 Deferred가 &lt;em&gt;거부 된&lt;/em&gt; 상태 로 전환 되고 즉시 &lt;code&gt;failCallbacks&lt;/code&gt; 가 실행 됩니다.설정되었습니다. 객체가 해결 또는 거부 된 상태가되면 해당 상태를 유지합니다. 콜백은 여전히 ​​해결되거나 거부 된 지연에 추가 될 수 있습니다. 즉각 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="ce3170832ca8da401726b2f69a0723e1a5c2293b" translate="yes" xml:space="preserve">
          <source>A Promise-like object (or &amp;ldquo;thenable&amp;rdquo;) that resolves when the document is ready.</source>
          <target state="translated">문서가 준비 될 때 해결되는 약속 같은 개체 (또는 &quot;thenable&quot;)입니다.</target>
        </trans-unit>
        <trans-unit id="240c0df6ba4ea5ea4bc5b7101fb2745bf460a947" translate="yes" xml:space="preserve">
          <source>A basic usage of &lt;code&gt;.bind()&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;.bind()&lt;/code&gt; 의 기본 사용법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5b74fc0b9ede71ed0f7e999cca15790e6e877188" translate="yes" xml:space="preserve">
          <source>A boolean (not just truthy/falsy) value to determine whether the class should be added or removed.</source>
          <target state="translated">클래스 추가 또는 제거 여부를 결정하는 부울 (진실 / 거짓이 아닌) 값입니다.</target>
        </trans-unit>
        <trans-unit id="d0770e589b3aafd562b33bad9fcf99dbc71fb481" translate="yes" xml:space="preserve">
          <source>A boolean in JavaScript can be either true or false:</source>
          <target state="translated">JavaScript의 부울은 true 또는 false 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e69f234a1ef8b1309106ceb1a0e8c24d44b9ebd" translate="yes" xml:space="preserve">
          <source>A boolean value to determine whether the class should be added or removed.</source>
          <target state="translated">클래스를 추가 또는 제거해야하는지 여부를 결정하는 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="8a0a8c9f1a1b97635466500bd71aacb656b4619b" translate="yes" xml:space="preserve">
          <source>A callback function returning the HTML content or jQuery object to wrap around all the matched elements. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the first element in the set. &lt;strong&gt;Prior to jQuery 3.0&lt;/strong&gt;, the callback was incorrectly called for every element in the set and received the index position of the element in the set as an argument.</source>
          <target state="translated">일치하는 모든 요소를 ​​둘러싸 기 위해 HTML 컨텐츠 또는 jQuery 객체를 반환하는 콜백 함수입니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트의 첫 번째 요소를 지칭한다. &lt;strong&gt;jQuery 3.0 이전&lt;/strong&gt; 에는 콜백이 세트의 모든 요소에 대해 잘못 호출되어 세트의 요소 인덱스 위치를 인수로 수신했습니다.</target>
        </trans-unit>
        <trans-unit id="5b6b9c779501501f6734990d02b1816ab9ac7f36" translate="yes" xml:space="preserve">
          <source>A callback function returning the HTML content or jQuery object to wrap around the matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소를 감싸기 위해 HTML 컨텐츠 또는 jQuery 객체를 반환하는 콜백 함수입니다. 세트 내의 요소의 인덱스 위치를 인수로서받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="c12b01aa0e94a905dc545025988b5b836cf10754" translate="yes" xml:space="preserve">
          <source>A callback function that is executed if the request succeeds.</source>
          <target state="translated">요청이 성공하면 실행되는 콜백 함수입니다.</target>
        </trans-unit>
        <trans-unit id="71b8d3200fe65df02233dffe3ef4ea9995f76aeb" translate="yes" xml:space="preserve">
          <source>A callback function that is executed if the request succeeds. Required if &lt;code&gt;dataType&lt;/code&gt; is provided, but can be &lt;code&gt;null&lt;/code&gt; in that case.</source>
          <target state="translated">요청이 성공하면 실행되는 콜백 함수입니다. &lt;code&gt;dataType&lt;/code&gt; 이 제공되는 경우 필수 이지만이 경우 &lt;code&gt;null&lt;/code&gt; 이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aefd86b7987286d867033e9e3c3c8b2165021d1b" translate="yes" xml:space="preserve">
          <source>A callback function that is executed if the request succeeds. Required if &lt;code&gt;dataType&lt;/code&gt; is provided, but you can use &lt;code&gt;null&lt;/code&gt; or &lt;a href=&quot;jquery.noop&quot;&gt;&lt;code&gt;jQuery.noop&lt;/code&gt;&lt;/a&gt; as a placeholder.</source>
          <target state="translated">요청이 성공하면 실행되는 콜백 함수입니다. &lt;code&gt;dataType&lt;/code&gt; 이 제공되는 경우 필수 이지만 자리 표시 자로 &lt;code&gt;null&lt;/code&gt; 또는 &lt;a href=&quot;jquery.noop&quot;&gt; &lt;code&gt;jQuery.noop&lt;/code&gt; &lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea77c8fa0f085d1fa307cc11eb6c2d36908a37ae" translate="yes" xml:space="preserve">
          <source>A callback function that is executed when the request completes.</source>
          <target state="translated">요청이 완료 될 때 실행되는 콜백 함수입니다.</target>
        </trans-unit>
        <trans-unit id="fc24d0d68837d9ce9a44d8ddba702c51ff899c62" translate="yes" xml:space="preserve">
          <source>A callback function which generates a structure to wrap around the content of the matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소의 내용을 감싸는 구조를 생성하는 콜백 함수입니다. 세트 내의 요소의 인덱스 위치를 인수로서받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="56fc03cb5e820fcf7567d582f4fe60e241e833b1" translate="yes" xml:space="preserve">
          <source>A callback is a plain JavaScript function passed to some method as an argument or option. Some callbacks are just events, called to give the user a chance to react when a certain state is triggered. jQuery's event system uses such callbacks everywhere:</source>
          <target state="translated">콜백은 인수 또는 옵션으로 일부 메소드에 전달되는 일반 JavaScript 함수입니다. 일부 콜백은 특정 상태가 트리거 될 때 사용자에게 반응 할 수있는 기회를 제공하기 위해 호출되는 이벤트입니다. jQuery의 이벤트 시스템은 다음과 같은 콜백을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="adc8027f6bd489ce959848a15303f4211f406e20" translate="yes" xml:space="preserve">
          <source>A collection of properties that represent the presence of different browser features or bugs. Intended for jQuery&amp;rsquo;s internal use; specific properties may be removed when they are no longer needed internally to improve page startup performance. For your own project&amp;rsquo;s feature-detection needs, we strongly recommend the use of an external library such as Modernizr instead of dependency on properties in jQuery.support.</source>
          <target state="translated">다양한 브라우저 기능 또는 버그가 있음을 나타내는 속성 모음입니다. jQuery의 내부 용입니다. 페이지 시작 성능을 향상시키기 위해 더 이상 내부적으로 필요하지 않은 특정 속성을 제거 할 수 있습니다. 자체 프로젝트의 기능 감지 요구를 위해서는 jQuery.support의 속성에 의존하지 않고 Modernizr과 같은 외부 라이브러리를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3e39a6c12e937aad1df5923cb5f95b446fffb324" translate="yes" xml:space="preserve">
          <source>A common challenge developers attempt to solve using the &lt;code&gt;.load()&lt;/code&gt; shortcut is to execute a function when an image (or collection of images) have completely loaded. There are several known caveats with this that should be noted. These are:</source>
          <target state="translated">개발자가 &lt;code&gt;.load()&lt;/code&gt; 바로 가기를 사용하여 해결하려는 일반적인 과제 는 이미지 (또는 이미지 모음)가 완전히로드 된 경우 함수를 실행하는 것입니다. 여기에는 몇 가지 알려진주의 사항이 있습니다. 이것들은:</target>
        </trans-unit>
        <trans-unit id="6b8475a7b6d2289f17daa8d7b422e02b5f2f5a5a" translate="yes" xml:space="preserve">
          <source>A common pattern is to bind the &lt;code&gt;mousemove&lt;/code&gt; handler from within a &lt;code&gt;mousedown&lt;/code&gt; hander, and to unbind it from a corresponding &lt;code&gt;mouseup&lt;/code&gt; handler. If implementing this sequence of events, remember that the &lt;code&gt;mouseup&lt;/code&gt; event might be sent to a different HTML element than the &lt;code&gt;mousemove&lt;/code&gt; event was. To account for this, the &lt;code&gt;mouseup&lt;/code&gt; handler should typically be bound to an element high up in the DOM tree, such as &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">일반적인 패턴은 &lt;code&gt;mousedown&lt;/code&gt; 처리기에서 &lt;code&gt;mousemove&lt;/code&gt; 처리기 를 바인딩하고 해당 &lt;code&gt;mouseup&lt;/code&gt; 처리기 에서 바인딩을 해제하는 것입니다 . 이러한 일련의 이벤트를 구현하는 경우 &lt;code&gt;mouseup&lt;/code&gt; 이벤트는 &lt;code&gt;mousemove&lt;/code&gt; 이벤트 와 다른 HTML 요소로 전송 될 수 있습니다 . 이를 설명하기 위해 &lt;code&gt;mouseup&lt;/code&gt; 핸들러는 일반적으로 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 와 같은 DOM 트리의 최상위 요소에 바인딩되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="184111b0518db1fbd91b3963c0b0ee491c0e3583" translate="yes" xml:space="preserve">
          <source>A common use of single-DOM-element construction is to call jQuery methods on an element that has been passed to a callback function through the keyword &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">단일 DOM 요소 구성의 일반적인 사용은 &lt;code&gt;this&lt;/code&gt; 키워드를 통해 콜백 함수에 전달 된 요소에서 jQuery 메소드를 호출하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="2aafa8f510461d86ff76a1a56b6daec7882bfa2d" translate="yes" xml:space="preserve">
          <source>A contrived example to show some functionality.</source>
          <target state="translated">일부 기능을 보여주기 위해 고안된 예입니다.</target>
        </trans-unit>
        <trans-unit id="e21cdb94c4f2f83c67962ccadad3e451860825de" translate="yes" xml:space="preserve">
          <source>A css hook can also hook into jQuery's animation mechanism by adding a property to the &lt;code&gt;jQuery.fx.step&lt;/code&gt; object:</source>
          <target state="translated">CSS 후크는 &lt;code&gt;jQuery.fx.step&lt;/code&gt; 객체에 속성을 추가하여 jQuery의 애니메이션 메커니즘에 연결할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83ae4bacb8c7d691716078995ce2a81158e945e5" translate="yes" xml:space="preserve">
          <source>A descendant of an element could be a child, grandchild, great-grandchild, and so on, of that element.</source>
          <target state="translated">요소의 자손은 해당 요소의 자식, 손자, 증손자 등이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4e1a1f2c420eb84d4d2ed2fa808a395a262aae3" translate="yes" xml:space="preserve">
          <source>A document in which context the code will be evaluated.</source>
          <target state="translated">코드가 평가 될 컨텍스트가있는 문서입니다.</target>
        </trans-unit>
        <trans-unit id="cc9bbed056015a7899a93f89d20bb309683e5012" translate="yes" xml:space="preserve">
          <source>A document in which the new elements will be created.</source>
          <target state="translated">새로운 요소가 생성 될 문서.</target>
        </trans-unit>
        <trans-unit id="924208eda054c5ccc6d4754b61907a6b659c623e" translate="yes" xml:space="preserve">
          <source>A document object created by the browser's DOM parser, usually from a string representing HTML or XML.</source>
          <target state="translated">일반적으로 HTML 또는 XML을 나타내는 문자열에서 브라우저의 DOM 파서에 의해 생성 된 문서 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1fc72c22e8b173e3f8fecbef3713beee5415191e" translate="yes" xml:space="preserve">
          <source>A document object created by the browser's XML DOM parser, usually from a string representing XML. XML documents have different semantics than HTML documents, but most of the traversing and manipulation methods provided by jQuery will work with them.</source>
          <target state="translated">브라우저의 XML DOM 파서 (일반적으로 XML을 나타내는 문자열)로 만든 문서 객체입니다. XML 문서는 HTML 문서와 다른 의미를 갖지만 jQuery가 제공하는 대부분의 탐색 및 조작 방법이 해당 문서와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="24b051961bce2d1f152c59880502299059f4e42d" translate="yes" xml:space="preserve">
          <source>A factory function that returns a chainable utility object with methods to register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.</source>
          <target state="translated">여러 콜백을 콜백 큐에 등록하고 콜백 큐를 호출하며 동기 또는 비동기 함수의 성공 또는 실패 상태를 릴레이하는 메소드와 함께 체인 가능한 유틸리티 객체를 반환하는 팩토리 함수입니다.</target>
        </trans-unit>
        <trans-unit id="64a1046d639cfc723f7e4690b931fe8de5ceec6e" translate="yes" xml:space="preserve">
          <source>A few of these methods&amp;mdash;such as &lt;code&gt;.attr()&lt;/code&gt;, &lt;code&gt;.html()&lt;/code&gt;, and &lt;code&gt;.val()&lt;/code&gt;&amp;mdash;also act as &quot;getters,&quot; retrieving information from DOM elements for later use.</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt; , &lt;code&gt;.html()&lt;/code&gt; 및 &lt;code&gt;.val()&lt;/code&gt; 과 같은 이러한 메소드 중 일부는 나중에 사용하기 위해 DOM 요소에서 정보를 검색하는 &quot;getters&quot;역할도합니다.</target>
        </trans-unit>
        <trans-unit id="08637979ad548cbb8e7f45e55e9bef1531b9b3ca" translate="yes" xml:space="preserve">
          <source>A float is a plain Number type, just as Integer, but whenever explicitly mentioned, indicates that a floating-point number is expected.</source>
          <target state="translated">부동 소수점은 정수와 마찬가지로 일반 숫자 유형이지만 명시 적으로 언급 될 때마다 부동 소수점 숫자가 예상됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aebd13eed23d9a14e61d2aea09f0bff9b996c4ec" translate="yes" xml:space="preserve">
          <source>A function in JavaScript can be either named or anonymous. Any function can be assigned to a variable or passed to a method, but passing member functions this way can cause them to be called in the context of another object (i.e. with a different &quot;this&quot; object).</source>
          <target state="translated">JavaScript의 함수는 이름을 지정하거나 익명으로 지정할 수 있습니다. 모든 함수를 변수에 할당하거나 메서드에 전달할 수 있지만,이 방법으로 멤버 함수를 전달하면 다른 개체 (예 : 다른 &quot;this&quot;개체)의 컨텍스트에서 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf323156ce3f3cd6fce0ea4c7e4e6e64262dee4d" translate="yes" xml:space="preserve">
          <source>A function object that will be invoked for each element in the current set.</source>
          <target state="translated">현재 세트의 각 요소에 대해 호출 될 함수 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c51314357c391c9d33dbc48dd66562769baf4ef0" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated class names to be added to the existing class name(s). Receives the index position of the element in the set and the existing class name(s) as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">기존 클래스 이름에 추가 할 하나 이상의 공백으로 구분 된 클래스 이름을 반환하는 함수입니다. 세트 내의 요소의 인덱스 위치와 기존의 클래스 명을 인수로서받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="818d1dc0ac6110d854226d8e48e28fbf8ad5df1f" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated class names to be removed. Receives the index position of the element in the set and the old class value as arguments.</source>
          <target state="translated">제거 할 하나 이상의 공백으로 구분 된 클래스 이름을 리턴하는 함수입니다. 집합에서 요소의 색인 위치와 이전 클래스 값을 인수로받습니다.</target>
        </trans-unit>
        <trans-unit id="fde41246699cfab9d72243dffedd881a46bce7bc" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated classes or an array of classes to be added to the existing class name(s). Receives the index position of the element in the set and the existing class name(s) as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">하나 이상의 공백으로 구분 된 클래스 또는 기존 클래스 이름에 추가 할 클래스 배열을 반환하는 함수입니다. 집합에있는 요소의 인덱스 위치와 기존 클래스 이름을 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="33bd20eb1ec321d8b135acf93b477a10467392b5" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated classes or an array of classes to be removed. Receives the index position of the element in the set and the old class value as arguments.</source>
          <target state="translated">하나 이상의 공백으로 구분 된 클래스 또는 제거 할 클래스 배열을 반환하는 함수입니다. 집합에있는 요소의 인덱스 위치와 이전 클래스 값을 인수로받습니다.</target>
        </trans-unit>
        <trans-unit id="14df6d6698c8c9a43b12cfb14201a01a98b042ed" translate="yes" xml:space="preserve">
          <source>A function returning the HTML content to set. Receives the index position of the element in the set and the old HTML value as arguments. jQuery empties the element before calling the function; use the oldhtml argument to reference the previous content. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">설정할 HTML 내용을 반환하는 함수입니다. 집합에서 요소의 색인 위치와 이전 HTML 값을 인수로받습니다. jQuery는 함수를 호출하기 전에 요소를 비 웁니다. oldhtml 인수를 사용하여 이전 컨텐츠를 참조하십시오. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="7f449a822d2b01e88a9aae435584e37309b36090" translate="yes" xml:space="preserve">
          <source>A function returning the height to set. Receives the index position of the element in the set and the old height as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">설정할 높이를 반환하는 함수입니다. 집합에서 요소의 색인 위치와 이전 높이를 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="10d520ab0f74f296c3765f54cf507462ed183996" translate="yes" xml:space="preserve">
          <source>A function returning the inner height (including padding but not border) to set. Receives the index position of the element in the set and the old inner height as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">안쪽 높이 (패딩은 포함하지만 경계는 포함하지 않음)를 반환하도록 설정하는 함수입니다. 세트에서 요소의 색인 위치와 이전 내부 높이를 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="abfbb315afa751b5d7657f654414fd9a7326595a" translate="yes" xml:space="preserve">
          <source>A function returning the inner width (including padding but not border) to set. Receives the index position of the element in the set and the old inner width as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">설정할 안쪽 너비 (패딩은 포함하지만 테두리는 포함하지 않음)를 반환하는 함수입니다. 세트 내의 요소의 인덱스 위치와 구내 폭을 인수로서받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="e1dfc2a0e9bb1f1ea8293ea4107f4f9b246c50dc" translate="yes" xml:space="preserve">
          <source>A function returning the outer height to set. Receives the index position of the element in the set and the old outer height as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">설정할 외부 높이를 반환하는 함수입니다. 세트에서 요소의 색인 위치와 이전 외부 높이를 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="002ceb8e932dc0a4090f1d34edd08705004e050f" translate="yes" xml:space="preserve">
          <source>A function returning the outer width to set. Receives the index position of the element in the set and the old outer width as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">설정할 외부 너비를 반환하는 함수입니다. 집합에서 요소의 인덱스 위치와 이전 외부 너비를 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="7173cc3e505639d489c0afc74affb9a0aefa359f" translate="yes" xml:space="preserve">
          <source>A function returning the text content to set. Receives the index position of the element in the set and the old text value as arguments.</source>
          <target state="translated">설정할 텍스트 내용을 반환하는 함수입니다. 집합에서 요소의 색인 위치와 이전 텍스트 값을 인수로받습니다.</target>
        </trans-unit>
        <trans-unit id="c7f4c26220cd2d712a66f587dabd3603aa0bc4bc" translate="yes" xml:space="preserve">
          <source>A function returning the value to set. &lt;code&gt;this&lt;/code&gt; is the current element. Receives the index position of the element in the set and the old attribute value as arguments.</source>
          <target state="translated">설정할 값을 반환하는 함수입니다. &lt;code&gt;this&lt;/code&gt; 현재 요소입니다. 집합에서 요소의 색인 위치와 이전 속성 값을 인수로받습니다.</target>
        </trans-unit>
        <trans-unit id="e2fea61311c9437cf6fab0f41d4dbd35f5a3260f" translate="yes" xml:space="preserve">
          <source>A function returning the value to set. &lt;code&gt;this&lt;/code&gt; is the current element. Receives the index position of the element in the set and the old value as arguments.</source>
          <target state="translated">설정할 값을 반환하는 함수입니다. &lt;code&gt;this&lt;/code&gt; 현재 요소입니다. 집합에서 요소의 색인 위치와 이전 값을 인수로받습니다.</target>
        </trans-unit>
        <trans-unit id="8c07c262923799511241f410dbf84e30dc94101e" translate="yes" xml:space="preserve">
          <source>A function returning the value to set. Receives the index position of the element in the set and the old property value as arguments. Within the function, the keyword &lt;code&gt;this&lt;/code&gt; refers to the current element.</source>
          <target state="translated">설정할 값을 반환하는 함수입니다. 집합에서 요소의 인덱스 위치와 이전 속성 값을 인수로받습니다. 함수 내에서 키워드 &lt;code&gt;this&lt;/code&gt; 는 현재 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="70484d6751f8eb4fa5e2e97b127affbd2e4209b7" translate="yes" xml:space="preserve">
          <source>A function returning the width to set. Receives the index position of the element in the set and the old width as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">설정할 너비를 반환하는 함수입니다. 집합에서 요소의 색인 위치와 이전 너비를 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="9480b6124b5e2dab92340aaa773d010f9d472092" translate="yes" xml:space="preserve">
          <source>A function that is called just before the constructor returns.</source>
          <target state="translated">생성자가 반환하기 직전에 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="5c2e69d09bec9a695cb64d2d222611074890438b" translate="yes" xml:space="preserve">
          <source>A function that is called once the animation on an element is complete.</source>
          <target state="translated">요소의 애니메이션이 완료되면 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="5d151a7b6ac3e784bc4f27d9af62342e03bd3664" translate="yes" xml:space="preserve">
          <source>A function that is called when the Deferred is rejected.</source>
          <target state="translated">Deferred가 거부 될 때 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="6d1fb608edb694aada2926c988aec8d241506826" translate="yes" xml:space="preserve">
          <source>A function that is called when the Deferred is resolved.</source>
          <target state="translated">Deferred가 해결 될 때 호출되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="4659ac6c87a9f68a56eb5dabf20f2673e6f30adc" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert after each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 뒤에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드 또는 jQuery 객체를 반환하는 함수입니다. 집합에서 요소의 인덱스 위치와 요소의 이전 HTML 값을 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="408898d82b744761f15ea9efbd2a583224388171" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert after each element in the set of matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 뒤에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드 또는 jQuery 객체를 반환하는 함수입니다. 세트 내의 요소의 인덱스 위치를 인수로서받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="f7b2de4c13e0e64a59daf9c899078e0ab82e3bb1" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert at the beginning of each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소의 시작 부분에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드 또는 jQuery 객체를 반환하는 함수입니다. 집합에서 요소의 인덱스 위치와 요소의 이전 HTML 값을 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="5253b07ef8bdb66d405f1c343254cce069b39a3e" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert at the end of each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소의 끝에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드 또는 jQuery 객체를 반환하는 함수입니다. 집합에서 요소의 인덱스 위치와 요소의 이전 HTML 값을 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="c0e3254e931d7e2c26ddc9287bc0c69bf7150c18" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert before each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 앞에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드 또는 jQuery 객체를 반환하는 함수입니다. 집합에서 요소의 인덱스 위치와 요소의 이전 HTML 값을 인수로받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="03952d80c1b1361b1788afb54c65b0769f8535ad" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert before each element in the set of matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 앞에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드 또는 jQuery 객체를 반환하는 함수입니다. 세트 내의 요소의 인덱스 위치를 인수로서받습니다. 함수 내, &lt;code&gt;this&lt;/code&gt; 세트 내의 현재의 구성 요소를 지칭한다.</target>
        </trans-unit>
        <trans-unit id="4bfbfe1fe083e342a10330fd8d4ceaba9e14d827" translate="yes" xml:space="preserve">
          <source>A function that returns class names to be toggled in the class attribute of each element in the matched set. Receives the index position of the element in the set, the old class value, and the state as arguments.</source>
          <target state="translated">일치하는 세트에서 각 요소의 클래스 속성에서 토글 될 클래스 이름을 리턴하는 함수입니다. 집합에서 요소의 인덱스 위치, 이전 클래스 값 및 상태를 인수로받습니다.</target>
        </trans-unit>
        <trans-unit id="59014d0dbf254380c8c9990a936511429cb9368c" translate="yes" xml:space="preserve">
          <source>A function that returns content with which to replace the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합을 바꿀 내용을 반환하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="b6a1e06262c7e6bdb41932d991367e3972437df9" translate="yes" xml:space="preserve">
          <source>A function that returns one or more space-separated classes or an array of classes to be toggled in the class attribute of each element in the matched set. Receives the index position of the element in the set, the old class value, and the state as arguments.</source>
          <target state="translated">일치하는 집합에있는 각 요소의 클래스 속성에서 전환 할 하나 이상의 공백으로 구분 된 클래스 또는 클래스 배열을 반환하는 함수입니다. 집합에있는 요소의 인덱스 위치, 이전 클래스 값 및 상태를 인수로받습니다.</target>
        </trans-unit>
        <trans-unit id="b2e0a2a30a9031f365d69d00594a618e42bea4ed" translate="yes" xml:space="preserve">
          <source>A function to be called after each step of the animation, only once per animated element regardless of the number of animated properties. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">애니메이션 속성의 수에 관계없이 애니메이션 요소마다 한 번 씩만 애니메이션의 각 단계 후에 호출되는 함수입니다. (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="c156388e96eed1e2888c80a5c31c0aef6dd5e455" translate="yes" xml:space="preserve">
          <source>A function to be called for each animated property of each animated element. This function provides an opportunity to modify the Tween object to change the value of the property before it is set.</source>
          <target state="translated">각 애니메이션 요소의 각 애니메이션 속성에 대해 호출 할 함수입니다. 이 함수는 속성을 설정하기 전에 Tween 객체를 수정하여 속성 값을 변경할 수있는 기회를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6f159a4d37ae4fac06aed418777a819e9ab106cb" translate="yes" xml:space="preserve">
          <source>A function to be called if the request fails. The function receives three arguments: The jqXHR (in jQuery 1.4.x, XMLHttpRequest) object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides &lt;code&gt;null&lt;/code&gt;) are &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;abort&quot;&lt;/code&gt;, and &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt;. When an HTTP error occurs, &lt;code&gt;errorThrown&lt;/code&gt; receives the textual portion of the HTTP status, such as &quot;Not Found&quot; or &quot;Internal Server Error.&quot; (in HTTP/2 it may instead be an empty string) &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;error&lt;/code&gt; setting can accept an array of functions. Each function will be called in turn. &lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;This handler is not called for cross-domain script and cross-domain JSONP requests.&lt;/em&gt; This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">요청이 실패 할 경우 호출 할 함수입니다. 이 함수는 세 가지 인수를받습니다. jqXHR (jQuery 1.4.x, XMLHttpRequest) 객체, 발생한 오류 유형을 설명하는 문자열 및 발생한 경우 선택적 예외 객체입니다. 두 번째 인수 ( &lt;code&gt;null&lt;/code&gt; 외 )에 가능한 값 은 &lt;code&gt;&quot;timeout&quot;&lt;/code&gt; , &lt;code&gt;&quot;error&quot;&lt;/code&gt; , &lt;code&gt;&quot;abort&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt; 입니다. HTTP 오류가 발생하면 &lt;code&gt;errorThrown&lt;/code&gt; 은 &quot;찾을 수 없음&quot;또는 &quot;내부 서버 오류&quot;와 같은 HTTP 상태의 텍스트 부분을 수신합니다. (HTTP / 2에서는 대신 빈 문자열 일 수 있습니다.) &lt;strong&gt;jQuery 1.5&lt;/strong&gt; 부터 &lt;code&gt;error&lt;/code&gt; 설정은 함수 배열을 허용 할 수 있습니다.각 함수가 차례로 호출됩니다.&lt;strong&gt;참고 : &lt;/strong&gt;&lt;em&gt;이 핸들러는 교차 도메인 스크립트 및 교차 도메인 JSONP 요청에 대해 호출되지 않습니다. &lt;/em&gt;이것은 &lt;a href=&quot;ajax_events&quot;&gt;Ajax 이벤트&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fa9ed95fe0d396d70a84077bc3fbea7d8f521968" translate="yes" xml:space="preserve">
          <source>A function to be called if the request fails. The function receives three arguments: The jqXHR (in jQuery 1.4.x, XMLHttpRequest) object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides &lt;code&gt;null&lt;/code&gt;) are &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;abort&quot;&lt;/code&gt;, and &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt;. When an HTTP error occurs, &lt;code&gt;errorThrown&lt;/code&gt; receives the textual portion of the HTTP status, such as &quot;Not Found&quot; or &quot;Internal Server Error.&quot; &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;error&lt;/code&gt; setting can accept an array of functions. Each function will be called in turn. &lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;This handler is not called for cross-domain script and cross-domain JSONP requests.&lt;/em&gt; This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">요청이 실패하면 호출 할 함수입니다. 이 함수는 jqXHR (jQuery 1.4.x에서 XMLHttpRequest) 오브젝트, 발생한 오류 유형을 설명하는 문자열 및 발생하는 경우 선택적 예외 오브젝트를 수신합니다. 두 번째 인수 ( &lt;code&gt;null&lt;/code&gt; 제외 )에 가능한 값 은 &lt;code&gt;&quot;timeout&quot;&lt;/code&gt; , &lt;code&gt;&quot;error&quot;&lt;/code&gt; , &lt;code&gt;&quot;abort&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt; 입니다. HTTP 오류가 발생하면 &lt;code&gt;errorThrown&lt;/code&gt; 은 &quot;Not Found&quot;또는 &quot;Internal Server Error&quot;와 같은 HTTP 상태의 텍스트 부분을 수신합니다. &lt;strong&gt;jQuery를 1.5으로&lt;/strong&gt; 의 &lt;code&gt;error&lt;/code&gt; 설정 기능의 배열을 받아 들일 수 있습니다. 각 기능이 차례로 호출됩니다. &lt;strong&gt;노트 :&lt;/strong&gt;&lt;em&gt;이 핸들러는 도메인 간 스크립트 및 도메인 간 JSONP 요청에 대해 호출되지 않습니다. &lt;/em&gt;이것은 &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ad31380401388d46afbf4aa87a9c27790d81c023" translate="yes" xml:space="preserve">
          <source>A function to be called if the request succeeds. The function gets passed three arguments: The data returned from the server, formatted according to the &lt;code&gt;dataType&lt;/code&gt; parameter or the &lt;code&gt;dataFilter&lt;/code&gt; callback function, if specified; a string describing the status; and the &lt;code&gt;jqXHR&lt;/code&gt; (in jQuery 1.4.x, XMLHttpRequest) object. &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, &lt;em&gt;the success setting can accept an array of functions. Each function will be called in turn.&lt;/em&gt; This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">요청이 성공하면 호출 할 함수입니다. 이 함수에는 세 가지 인수가 전달됩니다. &lt;code&gt;dataType&lt;/code&gt; 매개 변수 또는 &lt;code&gt;dataFilter&lt;/code&gt; 콜백 함수 (지정된 경우) 에 따라 형식이 지정된 서버에서 리턴 된 데이터 . 상태를 설명하는 문자열; 상기 &lt;code&gt;jqXHR&lt;/code&gt; (jQuery를 1.4.x로에서, XMLHttpRequest 객체) 개체. &lt;strong&gt;jQuery 1.5&lt;/strong&gt; 부터 &lt;em&gt;성공 설정은 여러 함수를 수용 할 수 있습니다. 각 기능이 차례로 호출됩니다. &lt;/em&gt;이것은 &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb32174cd1d6a5d8a18d1b368a08ceecac710ca9" translate="yes" xml:space="preserve">
          <source>A function to be called when the animation on an element completes (its Promise object is resolved). (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">요소의 애니메이션이 완료 될 때 호출되는 함수입니다 (Promise 객체가 확인 됨). (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="8bbd1abb73263ad0edbc6840f98c3b801c4d0c73" translate="yes" xml:space="preserve">
          <source>A function to be called when the animation on an element completes or stops without completing (its Promise object is either resolved or rejected). (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">요소의 애니메이션이 완료되지 않고 완료되거나 중지 될 때 호출되는 함수입니다 (Promise 객체가 해결되거나 거부 됨). (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="47cf859ff9fdcd9c21b063f0c2db553ac4588eca" translate="yes" xml:space="preserve">
          <source>A function to be called when the animation on an element fails to complete (its Promise object is rejected). (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">요소의 애니메이션이 완료되지 않을 때 호출되는 함수입니다 (Promise 객체가 거부 됨). (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2d29415bebcdb74bed2cee3a491f4186730f315c" translate="yes" xml:space="preserve">
          <source>A function to be called when the request finishes (after &lt;code&gt;success&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; callbacks are executed). The function gets passed two arguments: The jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object and a string categorizing the status of the request (&lt;code&gt;&quot;success&quot;&lt;/code&gt;, &lt;code&gt;&quot;notmodified&quot;&lt;/code&gt;, &lt;code&gt;&quot;nocontent&quot;&lt;/code&gt;, &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, &lt;code&gt;&quot;abort&quot;&lt;/code&gt;, or &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt;). &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;complete&lt;/code&gt; setting can accept an array of functions. Each function will be called in turn. This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">요청이 완료 될 때 호출됩니다 ( &lt;code&gt;success&lt;/code&gt; 및 &lt;code&gt;error&lt;/code&gt; 콜백이 실행 된 후). 이 함수는 jqXHR (jQuery 1.4.x, XMLHTTPRequest) 객체와 요청 상태를 분류하는 문자열 ( &lt;code&gt;&quot;success&quot;&lt;/code&gt; , &lt;code&gt;&quot;notmodified&quot;&lt;/code&gt; , &lt;code&gt;&quot;nocontent&quot;&lt;/code&gt; , &lt;code&gt;&quot;error&quot;&lt;/code&gt; , &lt;code&gt;&quot;timeout&quot;&lt;/code&gt; , &lt;code&gt;&quot;abort&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt; ). &lt;strong&gt;jQuery 1.5&lt;/strong&gt; 부터 &lt;code&gt;complete&lt;/code&gt; 설정은 여러 함수를 수용 할 수 있습니다. 각 기능이 차례로 호출됩니다. 이것은 &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="830af2258f76931e1bc10e0633d9a5c5df74722e" translate="yes" xml:space="preserve">
          <source>A function to be used to handle the raw response data of XMLHttpRequest. This is a pre-filtering function to sanitize the response. You should return the sanitized data. The function accepts two arguments: The raw data returned from the server and the 'dataType' parameter.</source>
          <target state="translated">XMLHttpRequest의 원시 응답 데이터를 처리하는 데 사용되는 함수입니다. 응답을 삭제하기위한 사전 필터링 기능입니다. 소독 된 데이터를 반환해야합니다. 이 함수는 두 가지 인수를 허용합니다. 서버에서 리턴 된 원시 데이터 및 'dataType'매개 변수.</target>
        </trans-unit>
        <trans-unit id="4a538969ce5551c1ec7eb37c0fffbd97a0adae9e" translate="yes" xml:space="preserve">
          <source>A function to call once the animation is complete, called once per matched element.</source>
          <target state="translated">일치하는 요소 당 한 번 호출되는 애니메이션이 완료되면 호출하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="02f3189dae7689756c608f1e49173e72d6b5bfaa" translate="yes" xml:space="preserve">
          <source>A function to call once the animation is complete.</source>
          <target state="translated">애니메이션이 완료되면 호출하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1a2d04f991750751824046581c93078c4ca73c92" translate="yes" xml:space="preserve">
          <source>A function to call when the animation on an element begins. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">요소의 애니메이션이 시작될 때 호출하는 함수입니다. (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="00abc12c6dbd128df3ff31abcd20eee447557006" translate="yes" xml:space="preserve">
          <source>A function to execute after the DOM is ready.</source>
          <target state="translated">DOM이 준비된 후에 실행할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="6c77cd917ae31bd5bab654729b5c8880efc68dbd" translate="yes" xml:space="preserve">
          <source>A function to execute at the time the event is triggered.</source>
          <target state="translated">이벤트가 트리거 될 때 실행할 기능입니다.</target>
        </trans-unit>
        <trans-unit id="a4fc09df3d31e39c3f46bb7443bd9e0461b16463" translate="yes" xml:space="preserve">
          <source>A function to execute each time the event is triggered.</source>
          <target state="translated">이벤트가 트리거 될 때마다 실행되는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="1d7a2f701495fe15a5f2026c1a75a6d6593f8303" translate="yes" xml:space="preserve">
          <source>A function to execute every even time the element is clicked.</source>
          <target state="translated">요소를 클릭 할 때마다 실행되는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="980225d7f36a288fe8940aea1f7f709f50402ec7" translate="yes" xml:space="preserve">
          <source>A function to execute every odd time the element is clicked.</source>
          <target state="translated">요소를 클릭 할 때마다 홀수를 실행하는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="d996e1d0806dc7e5a8a7c65c34cd693846895570" translate="yes" xml:space="preserve">
          <source>A function to execute for each matched element.</source>
          <target state="translated">일치하는 각 요소에 대해 실행할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1f39a010c4c95bce00da7c032d444a38c94b4f0d" translate="yes" xml:space="preserve">
          <source>A function to execute when the event is triggered.</source>
          <target state="translated">이벤트가 트리거 될 때 실행할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="f18a6795613eae497dc9fcd01f68e20e1d0ab6af" translate="yes" xml:space="preserve">
          <source>A function to execute when the event is triggered. The value &lt;code&gt;false&lt;/code&gt; is also allowed as a shorthand for a function that simply does &lt;code&gt;return false&lt;/code&gt;.</source>
          <target state="translated">이벤트가 트리거 될 때 실행할 함수입니다. &lt;code&gt;false&lt;/code&gt; 값 은 단순히 &lt;code&gt;return false&lt;/code&gt; 하는 함수의 약자로도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="082863cdc42f6ee121f3d5d690e79fdaaa2f561f" translate="yes" xml:space="preserve">
          <source>A function to execute when the mouse pointer enters or leaves the element.</source>
          <target state="translated">마우스 포인터가 요소에 들어 오거나 떠날 때 실행할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="e3fc355ad5f2cefe48c73caeafee87c4066182b8" translate="yes" xml:space="preserve">
          <source>A function to execute when the mouse pointer enters the element.</source>
          <target state="translated">마우스 포인터가 요소에 들어갈 때 실행할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="a9d10c2c2e36552c0bf0490f40a6c4d819b49069" translate="yes" xml:space="preserve">
          <source>A function to execute when the mouse pointer leaves the element.</source>
          <target state="translated">마우스 포인터가 요소를 떠날 때 실행할 함수입니다.</target>
        </trans-unit>
        <trans-unit id="753a25946bf5f52e3814052eabc3b8264848b502" translate="yes" xml:space="preserve">
          <source>A function to return the coordinates to set. Receives the index of the element in the collection as the first argument and the current coordinates as the second argument. The function should return an object with the new &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; properties.</source>
          <target state="translated">설정할 좌표를 반환하는 함수입니다. 컬렉션의 요소 인덱스를 첫 번째 인수로 받고 현재 좌표를 두 번째 인수로받습니다. 이 함수는 새로운 &lt;code&gt;top&lt;/code&gt; 속성 과 &lt;code&gt;left&lt;/code&gt; 속성을 가진 객체를 반환해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f05d291a6c84e80c139e5e38c615b05ee2a882d3" translate="yes" xml:space="preserve">
          <source>A function used as a test for each element in the set. &lt;code&gt;this&lt;/code&gt; is the current DOM element.</source>
          <target state="translated">세트의 각 요소에 대한 테스트로 사용되는 함수입니다. &lt;code&gt;this&lt;/code&gt; 현재 DOM 요소입니다.</target>
        </trans-unit>
        <trans-unit id="e2ae8d3a23305e6457ed8e62ecb96ec49e9367c9" translate="yes" xml:space="preserve">
          <source>A function used as a test for each element in the set. It accepts two arguments, &lt;code&gt;index&lt;/code&gt;, which is the element's index in the jQuery collection, and &lt;code&gt;element&lt;/code&gt;, which is the DOM element. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current DOM element.</source>
          <target state="translated">세트의 각 요소에 대한 테스트로 사용되는 함수입니다. 그것은 두 개의 인수, 수용 &lt;code&gt;index&lt;/code&gt; 요소의 JQuery와 컬렉션에서 인덱스이고, &lt;code&gt;element&lt;/code&gt; DOM 요소입니다. 함수 내에서 &lt;code&gt;this&lt;/code&gt; 현재 DOM 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="73041dce596fe7a99887952ee9471320bb8ab111" translate="yes" xml:space="preserve">
          <source>A function used as a test for every element in the set. It accepts two arguments, &lt;code&gt;index&lt;/code&gt;, which is the element's index in the jQuery collection, and &lt;code&gt;element&lt;/code&gt;, which is the DOM element. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current DOM element.</source>
          <target state="translated">세트의 모든 요소에 대한 테스트로 사용되는 함수입니다. 그것은 두 개의 인수, 수용 &lt;code&gt;index&lt;/code&gt; 요소의 JQuery와 컬렉션에서 인덱스이고, &lt;code&gt;element&lt;/code&gt; DOM 요소입니다. 함수 내에서 &lt;code&gt;this&lt;/code&gt; 현재 DOM 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cf177e23d8c6379641152c3437f2aabb016f0f0c" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, called when the Deferred is rejected.</source>
          <target state="translated">지연이 거부 될 때 호출되는 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="f3369f77e56c6e26db096d6ad07679d3dd2cf6b1" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, called when the Deferred is resolved.</source>
          <target state="translated">지연이 해결 될 때 호출되는 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="de834d0c6a69a14edd755f504978c46047906ca8" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, called when the Deferred notifies progress.</source>
          <target state="translated">지연이 진행 상황을 알릴 때 호출되는 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="115f24532655e181de87e9b01d270d724cf4344f" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are called when the Deferred is rejected.</source>
          <target state="translated">지연이 거부 될 때 호출되는 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="634747d8641665697e88856f8b6d50950fbcc02d" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are called when the Deferred is resolved.</source>
          <target state="translated">지연이 해결 될 때 호출되는 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="27643de03084e9c096720511997205f7367ceb63" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are to be added to the callback list.</source>
          <target state="translated">콜백 목록에 추가 할 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="9401192aa8ef9fe415df74b2467402e0bae42e64" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are to be removed from the callback list.</source>
          <target state="translated">콜백 목록에서 제거 할 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="cd5fb3ac6c30ac36c49776d0440d2b93328aa35f" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that is called when the Deferred is resolved or rejected.</source>
          <target state="translated">지연이 해결되거나 거부 될 때 호출되는 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="9cb7be4f39fc09f3fab8f565bfa4f220a5a9fceb" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, to be called when the Deferred generates progress notifications.</source>
          <target state="translated">Deferred가 진행 알림을 생성 할 때 호출되는 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="8f83959f9afcf8112b303e2cb07c9372e8097689" translate="yes" xml:space="preserve">
          <source>A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function&amp;rsquo;s arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.</source>
          <target state="translated">객체와 배열을 완벽하게 반복하는 데 사용할 수있는 일반 반복자 함수입니다. length 속성 (예 : 함수의 arguments 객체)이있는 배열 및 배열 유사 객체는 0에서 길이 -1까지의 숫자 인덱스로 반복됩니다. 다른 객체는 명명 된 속성을 통해 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="2d92bc9edc3a42db0c91576f6ea211416ba256b3" translate="yes" xml:space="preserve">
          <source>A handler can also be removed by specifying the function name in the &lt;code&gt;handler&lt;/code&gt; argument. When jQuery attaches an event handler, it assigns a unique id to the handler function. Handlers proxied by &lt;a href=&quot;jquery.proxy&quot;&gt;&lt;code&gt;jQuery.proxy()&lt;/code&gt;&lt;/a&gt; or a similar mechanism will all have the same unique id (the proxy function), so passing proxied handlers to &lt;code&gt;.off&lt;/code&gt; may remove more handlers than intended. In those situations it is better to attach and remove event handlers using namespaces.</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; 인수 에서 함수 이름을 지정하여 핸들러를 제거 할 수도 있습니다 . jQuery는 이벤트 핸들러를 첨부 할 때 고유 한 ID를 핸들러 함수에 지정합니다. &lt;a href=&quot;jquery.proxy&quot;&gt; &lt;code&gt;jQuery.proxy()&lt;/code&gt; &lt;/a&gt; 또는 유사한 메커니즘에 의해 프록시되는 핸들러 는 모두 동일한 고유 ID (프록시 함수)를 가지므로 프록시 핸들러를 &lt;code&gt;.off&lt;/code&gt; 에 전달하면 의도 한 것보다 많은 핸들러가 제거 될 수 있습니다. 이러한 상황에서는 네임 스페이스를 사용하여 이벤트 핸들러를 연결하고 제거하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="773b0de39c7c8466186cb1d6daf9deaaeccd3e8b" translate="yes" xml:space="preserve">
          <source>A handler function previously attached for the event(s), or the special value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">핸들러 함수는 이전 이벤트 (들), 또는 특수 값에 대한 부착 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d48397dc00398a0be21fbbc3a905f814414a98d" translate="yes" xml:space="preserve">
          <source>A handler to return the new transport object to use with the data type provided in the first argument.</source>
          <target state="translated">첫 번째 인수에서 제공된 데이터 유형과 함께 사용할 새 전송 오브젝트를 리턴하는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="efe45440020f396bb332e155d0131cc0a8b3a6d7" translate="yes" xml:space="preserve">
          <source>A handler to set default values for future Ajax requests.</source>
          <target state="translated">향후 Ajax 요청에 대한 기본값을 설정하는 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="8b616c71e4816d9853dba9be74c74c7bcf058b80" translate="yes" xml:space="preserve">
          <source>A jQuery object contains a collection of Document Object Model (DOM) elements that have been created from an HTML string or selected from a document. Since jQuery methods often use CSS selectors to match elements from a document, the set of elements in a jQuery object is often called a set of &quot;matched elements&quot; or &quot;selected elements&quot;.</source>
          <target state="translated">jQuery 객체는 HTML 문자열에서 생성되거나 문서에서 선택된 DOM (Document Object Model) 요소의 모음을 포함합니다. jQuery 메소드는 종종 CSS 선택기를 사용하여 문서의 요소를 일치시키기 때문에 jQuery 객체의 요소 세트를 종종 &quot;일치 요소&quot;또는 &quot;선택된 요소&quot;라고합니다.</target>
        </trans-unit>
        <trans-unit id="3f76333833f74ff3202934ff64e50dc6406a96b0" translate="yes" xml:space="preserve">
          <source>A jQuery object may be empty, containing no DOM elements. You can create an empty jQuery object with &lt;code&gt;$()&lt;/code&gt; (that is, passing no arguments at all). A jQuery object may also be empty if a selector doesn't select any elements, or if a chained method filters out all the elements. It is not an error; any further methods called on that jQuery object simply have no effect since they have no elements to act upon. So, in this example if there are no bad entries on the page then no elements will be colored red:</source>
          <target state="translated">DOM 요소가없는 jQuery 객체가 비어있을 수 있습니다. &lt;code&gt;$()&lt;/code&gt; 사용하여 빈 jQuery 객체를 만들 수 있습니다 (즉, 인수를 전혀 전달하지 않음). 선택기가 요소를 선택하지 않거나 연결된 메서드가 모든 요소를 ​​필터링하는 경우 jQuery 객체가 비어있을 수도 있습니다. 오류가 아닙니다. 해당 jQuery 객체에서 호출 된 추가 메소드는 작동 할 요소가 없으므로 효과가 없습니다. 따라서이 예에서 페이지에 잘못된 항목이 없으면 빨간색으로 표시되는 요소가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d0e758d7830a95a9d2bd5505c4ec7b4e19086d7f" translate="yes" xml:space="preserve">
          <source>A jQuery object to match elements against.</source>
          <target state="translated">요소를 일치시키는 jQuery 객체.</target>
        </trans-unit>
        <trans-unit id="03fd7b5b9f521b81a56d0eb7c415cdb90b219f0c" translate="yes" xml:space="preserve">
          <source>A long jQuery chain can be visualized as a structured code block, with filtering methods providing the openings of nested blocks and &lt;code&gt;end()&lt;/code&gt; methods closing them:</source>
          <target state="translated">긴 jQuery 체인은 중첩 된 블록의 개구부를 제공하는 필터링 메소드와 이를 닫는 &lt;code&gt;end()&lt;/code&gt; 메소드 를 사용하여 구조화 된 코드 블록으로 시각화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ffe826b2d9c790c2c689cab648729fe13478413" translate="yes" xml:space="preserve">
          <source>A map of additional options to pass to the method.</source>
          <target state="translated">메소드에 전달할 추가 옵션 맵.</target>
        </trans-unit>
        <trans-unit id="c720e16799077544f34b90736e99fa4afffc6844" translate="yes" xml:space="preserve">
          <source>A message is thus logged for each item in the list:</source>
          <target state="translated">따라서 목록의 각 항목에 대한 메시지가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="611ddfc3cf6248ec7db9c5426fa94106df89306f" translate="yes" xml:space="preserve">
          <source>A mime type to override the</source>
          <target state="translated">재정의하는 MIME 유형</target>
        </trans-unit>
        <trans-unit id="624e39acb8caebe47577e44b889b416edc84c92e" translate="yes" xml:space="preserve">
          <source>A multi-purpose callbacks list object that provides a powerful way to manage callback lists.</source>
          <target state="translated">콜백 목록을 관리하는 강력한 방법을 제공하는 다목적 콜백 목록 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a0f82643f79503ae2d928ab14cdffe4a27f5d99b" translate="yes" xml:space="preserve">
          <source>A multi-purpose object that provides a powerful way to manage callback lists. It supports adding, removing, firing, and disabling callbacks. The Callbacks object is created and returned by the &lt;code&gt;$.Callbacks&lt;/code&gt; function and subsequently returned by most of that function's methods.</source>
          <target state="translated">콜백 목록을 관리하는 강력한 방법을 제공하는 다목적 객체입니다. 콜백 추가, 제거, 실행 및 비활성화를 지원합니다. 콜백 객체는 &lt;code&gt;$.Callbacks&lt;/code&gt; 함수에 의해 생성되고 반환되며 그 후 대부분의 해당 함수의 메서드에 의해 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0dda9dce04ebb586f5c2a18836c863b7ab81c911" translate="yes" xml:space="preserve">
          <source>A negative index is counted from the end of the matched set, so this example returns the last item in the list:</source>
          <target state="translated">일치하는 세트의 끝에서 음수 인덱스가 계산되므로이 예제는 목록의 마지막 항목을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="889c716d14887957b66d3ef6c83cca24b46a6b9b" translate="yes" xml:space="preserve">
          <source>A number between 0 and 1 denoting the target opacity.</source>
          <target state="translated">대상 불투명도를 나타내는 0과 1 사이의 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="ba91bf6a0d4a4fa7097a4a3bd75aaa187814c5c9" translate="yes" xml:space="preserve">
          <source>A number indicating the new position to set the scroll bar to.</source>
          <target state="translated">스크롤 바를 설정할 새로운 위치를 나타내는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="084f6554f531f8756e8f4d4ff703ff6b66d6db12" translate="yes" xml:space="preserve">
          <source>A number of techniques are used to determine the exact return value for an object. The [[Class]] is determined as follows:</source>
          <target state="translated">객체의 정확한 반환 값을 결정하기 위해 많은 기술이 사용됩니다. [[Class]]는 다음과 같이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="4b46a2fe3093269d8f79e50cc1582c110bcc921c" translate="yes" xml:space="preserve">
          <source>A number representing the number of pixels, or a number along with an optional unit of measure appended (as a string).</source>
          <target state="translated">픽셀 수를 나타내는 숫자 또는 추가 된 측정 단위 (문자열)와 함께 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="99303541e148ff6daee8bb26aafe77bc001a5b5e" translate="yes" xml:space="preserve">
          <source>A password to be used with XMLHttpRequest in response to an HTTP access authentication request.</source>
          <target state="translated">HTTP 액세스 인증 요청에 대한 응답으로 XMLHttpRequest와 함께 사용할 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="ab19b47675cd8d730a94b4e614887e48acb579ba" translate="yes" xml:space="preserve">
          <source>A plain object of data that will be passed to the event handler.</source>
          <target state="translated">이벤트 핸들러로 전달 될 데이터의 일반 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ba869a3a227bc70e4b8a5d088d801946222c7fc2" translate="yes" xml:space="preserve">
          <source>A plain object of one or more JavaScript event types and functions to execute for them.</source>
          <target state="translated">실행할 하나 이상의 JavaScript 이벤트 유형 및 함수의 일반 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ac417ebac8b0a4a62c307d3c6bd56484576907c3" translate="yes" xml:space="preserve">
          <source>A plain object of one or more event types and functions to execute for them.</source>
          <target state="translated">실행할 하나 이상의 이벤트 유형 및 함수의 일반 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b87b96f2c71d3cc94f93cc3e54495217d3eb1ddb" translate="yes" xml:space="preserve">
          <source>A plain object of one or more event types, such as &lt;code&gt;click&lt;/code&gt; or &lt;code&gt;keydown&lt;/code&gt; and their corresponding functions that are no longer to be executed.</source>
          <target state="translated">같은 하나 개 이상의 이벤트 유형의 일반 개체를 &lt;code&gt;click&lt;/code&gt; 또는 &lt;code&gt;keydown&lt;/code&gt; 더 이상 그들의 해당 기능이 실행된다.</target>
        </trans-unit>
        <trans-unit id="65a7fccb41dcf6ef469cbaf846e13252cdc947d2" translate="yes" xml:space="preserve">
          <source>A plain object or string that is sent to the server with the request.</source>
          <target state="translated">요청과 함께 서버로 전송되는 일반 객체 또는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8870051a98bcbe7a81d944697e971d777e6b20cc" translate="yes" xml:space="preserve">
          <source>A plain object to wrap in a jQuery object.</source>
          <target state="translated">jQuery 객체로 감싸는 일반 객체.</target>
        </trans-unit>
        <trans-unit id="6cbca1d5fade541a587b0771d8b25cf3ed42717a" translate="yes" xml:space="preserve">
          <source>A pre-request callback function that can be used to modify the jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object before it is sent. Use this to set custom headers, etc. The jqXHR and settings objects are passed as arguments. This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;. Returning &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;beforeSend&lt;/code&gt; function will cancel the request. &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;beforeSend&lt;/code&gt; option will be called regardless of the type of request.</source>
          <target state="translated">jqXHR (jQuery 1.4.x에서 XMLHTTPRequest) 오브젝트를 전송하기 전에 수정하는 데 사용할 수있는 사전 요청 콜백 함수입니다. 이를 사용하여 사용자 정의 헤더 등을 설정하십시오. jqXHR 및 설정 오브젝트는 인수로 전달됩니다. 이것은 &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt; 입니다. &lt;code&gt;beforeSend&lt;/code&gt; 함수 에서 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 요청이 취소됩니다. &lt;strong&gt;jQuery를 1.5으로&lt;/strong&gt; 의 &lt;code&gt;beforeSend&lt;/code&gt; 의 옵션에 관계없이 요청 유형의 호출됩니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="092ec48ee827f10c9be7bb97fbc5ce1343151e19" translate="yes" xml:space="preserve">
          <source>A reference to or instance of the object holding all of QUnit's assertions. See the &lt;a href=&quot;https://api.qunitjs.com/QUnit.assert/&quot;&gt;API documentation for &lt;code&gt;QUnit.assert&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">모든 QUnit의 주장을 담고있는 객체에 대한 참조 또는 인스턴스. 자세한 내용은 &lt;a href=&quot;https://api.qunitjs.com/QUnit.assert/&quot;&gt; &lt;code&gt;QUnit.assert&lt;/code&gt; 에&lt;/a&gt; 대한 API 설명서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="0c20a76d0d88023564986ef3b2f40542127c56da" translate="yes" xml:space="preserve">
          <source>A reference to or instance of the object holding all of QUnit's assertions. See the &lt;a href=&quot;https://api.qunitjs.com/config/QUnit.assert&quot;&gt;API documentation for &lt;code&gt;QUnit.assert&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">QUnit의 모든 어설 션을 보유한 객체의 참조 또는 인스턴스입니다. 자세한 내용은 &lt;a href=&quot;https://api.qunitjs.com/config/QUnit.assert&quot;&gt; &lt;code&gt;QUnit.assert&lt;/code&gt; 에&lt;/a&gt; 대한 API 문서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="fa237466d668e2af485a8ada69dd59e5ce48c7cb" translate="yes" xml:space="preserve">
          <source>A reference to the context in which the callbacks in the list should be fired.</source>
          <target state="translated">목록의 콜백이 발생해야하는 컨텍스트에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="197befb9fa33927cf680b0266ece4dec3f477319" translate="yes" xml:space="preserve">
          <source>A second click will show the element once again:</source>
          <target state="translated">두 번 클릭하면 요소가 다시 한 번 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="240db7cd0f957cc5027593ea9b2055d6a9827dc3" translate="yes" xml:space="preserve">
          <source>A selection using a jQuery collection of all span tags. Only spans within p tags are changed to red while others are left blue.</source>
          <target state="translated">모든 범위 태그의 jQuery 모음을 사용하여 선택합니다. p 태그 내의 범위 만 빨간색으로 변경되고 다른 태그는 파란색으로 남습니다.</target>
        </trans-unit>
        <trans-unit id="1aebe38f6ff013a230ec79d74aae9e2e3f0dddfe" translate="yes" xml:space="preserve">
          <source>A selector expression that filters the set of matched elements to be removed.</source>
          <target state="translated">제거 할 일치 요소 세트를 필터링하는 선택기 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="8bc353917b6ca843f07c00695e75b746680722c3" translate="yes" xml:space="preserve">
          <source>A selector is used in jQuery to select DOM elements from a DOM document. That document is, in most cases, the DOM document present in all browsers, but can also be an XML document received via Ajax.</source>
          <target state="translated">선택기는 jQuery에서 DOM 문서에서 DOM 요소를 선택하는 데 사용됩니다. 이 문서는 대부분의 경우 모든 브라우저에 존재하는 DOM 문서이지만 Ajax를 통해받은 XML 문서 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="61044b883373809326dbdb4520b5949305be0945" translate="yes" xml:space="preserve">
          <source>A selector representing a jQuery collection in which to look for an element.</source>
          <target state="translated">요소를 찾을 jQuery 컬렉션을 나타내는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="4555b8647f43620359287d4ec32cf2da53c8d333" translate="yes" xml:space="preserve">
          <source>A selector representing selector passed to jQuery(), if any, when creating the original set.</source>
          <target state="translated">원래 세트를 작성할 때 jQuery ()에 전달 된 선택기를 나타내는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="f8c73427c3128104a631a74524ecb84403358f77" translate="yes" xml:space="preserve">
          <source>A selector string to filter the descendants of the selected elements that trigger the event. If the selector is &lt;code&gt;null&lt;/code&gt; or omitted, the event is always triggered when it reaches the selected element.</source>
          <target state="translated">이벤트를 트리거하는 선택된 요소의 하위 항목을 필터링하는 선택기 문자열입니다. 선택기가 &lt;code&gt;null&lt;/code&gt; 이거나 생략되면 선택한 요소에 도달 할 때 이벤트가 항상 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="9cbf79d728e25a6fc3b6a1e9ad5bce6f8424a9e4" translate="yes" xml:space="preserve">
          <source>A selector string to filter the descendants of the selected elements that will call the handler. If the selector is null or omitted, the handler is always called when it reaches the selected element.</source>
          <target state="translated">핸들러를 호출 할 선택된 요소의 하위 항목을 필터링하는 선택기 문자열입니다. 선택기가 널이거나 생략 된 경우 핸들러는 선택된 요소에 도달 할 때 항상 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f5e6ec2b56fa242c521a687328c06c6fc00cf828" translate="yes" xml:space="preserve">
          <source>A selector string, jQuery object, DOM element, or array of elements indicating which element(s) to replace.</source>
          <target state="translated">대체 할 요소를 나타내는 선택기 문자열, jQuery 객체, DOM 요소 또는 요소 배열입니다.</target>
        </trans-unit>
        <trans-unit id="4a9501785e328fbb08d497028aa330bfbdfb5728" translate="yes" xml:space="preserve">
          <source>A selector to check the parent element against. If an element's parent does not match the selector, the element won't be unwrapped.</source>
          <target state="translated">부모 요소를 확인할 셀렉터입니다. 요소의 부모가 선택자와 일치하지 않으면 요소가 줄 바꿈되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="435581819124b69f642b0223243517af58b24047" translate="yes" xml:space="preserve">
          <source>A selector to filter the elements that trigger the event.</source>
          <target state="translated">이벤트를 트리거하는 요소를 필터링하는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="b223afec38749c3ba658bb4f622af170370af471" translate="yes" xml:space="preserve">
          <source>A selector which should match the one originally passed to &lt;code&gt;.on()&lt;/code&gt; when attaching event handlers.</source>
          <target state="translated">이벤트 핸들러를 연결할 때 원래 &lt;code&gt;.on()&lt;/code&gt; 전달 된 것과 일치해야하는 선택기입니다 .</target>
        </trans-unit>
        <trans-unit id="d288f4f3edb9c199d7e103c67222dcc3df98c3b7" translate="yes" xml:space="preserve">
          <source>A selector which will be used to filter the event results.</source>
          <target state="translated">이벤트 결과를 필터링하는 데 사용되는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="6161bb1925091d5d1767ab5682ac7c1b9490bafa" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, array of elements, or jQuery object; the matched set of elements will be inserted at the beginning of the element(s) specified by this parameter.</source>
          <target state="translated">선택기, 요소, HTML 문자열, 요소 배열 또는 jQuery 객체 일치하는 요소 세트는이 매개 변수로 지정된 요소의 시작 부분에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="b85a830aa6290eb8261e6ce7454e9b57d4f68f7d" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, array of elements, or jQuery object; the matched set of elements will be inserted at the end of the element(s) specified by this parameter.</source>
          <target state="translated">선택기, 요소, HTML 문자열, 요소 배열 또는 jQuery 객체 일치하는 요소 세트는이 매개 변수로 지정된 요소의 끝에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="2048e3033a15c7384490ab51dcb346715258bb36" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, or jQuery object specifying the structure to wrap around the matched elements.</source>
          <target state="translated">일치하는 요소를 감쌀 구조를 지정하는 선택기, 요소, HTML 문자열 또는 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4bb8eb5d193e11fe2e8a28f7a9bc61c7eddf6c02" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, or jQuery object specifying the structure to wrap around the matched elements. When you pass a jQuery collection containing more than one element, or a selector matching more than one element, the first element will be used.</source>
          <target state="translated">일치하는 요소를 감쌀 구조를 지정하는 선택기, 요소, HTML 문자열 또는 jQuery 객체입니다. 둘 이상의 요소를 포함하는 jQuery 컬렉션 또는 둘 이상의 요소와 일치하는 선택기를 전달하면 첫 번째 요소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8b1ab2d888cf6bc4e5db29aff58f73a664ffa53a" translate="yes" xml:space="preserve">
          <source>A selector, element, array of elements, HTML string, or jQuery object; the matched set of elements will be inserted after the element(s) specified by this parameter.</source>
          <target state="translated">선택기, 요소, 요소 배열, HTML 문자열 또는 jQuery 객체 일치하는 요소 세트는이 매개 변수로 지정된 요소 뒤에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="7ca5a1100e219133598fd1008c8929b4691b6d94" translate="yes" xml:space="preserve">
          <source>A selector, element, array of elements, HTML string, or jQuery object; the matched set of elements will be inserted before the element(s) specified by this parameter.</source>
          <target state="translated">선택기, 요소, 요소 배열, HTML 문자열 또는 jQuery 객체 일치하는 요소 세트가이 매개 변수로 지정된 요소 앞에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="a8f2020f4f2a03685d11bc56cfc356f9ba862e67" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All properties except for &lt;code&gt;url&lt;/code&gt; are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;. See &lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax( settings )&lt;/a&gt; for a complete list of all settings. The type option will automatically be set to &lt;code&gt;GET&lt;/code&gt;.</source>
          <target state="translated">Ajax 요청을 구성하는 키 / 값 쌍 세트. &lt;code&gt;url&lt;/code&gt; 을 제외한 모든 속성 은 선택 사항입니다. &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup ()을 사용&lt;/a&gt; 하여 모든 옵션에 기본값을 설정할 수 있습니다 . 모든 설정의 전체 목록은 &lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax (settings)&lt;/a&gt; 를 참조하십시오 . type 옵션은 자동으로 &lt;code&gt;GET&lt;/code&gt; 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d09637d2f4d79e4cdf99c8aa8adf15dc3a0978a4" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All properties except for &lt;code&gt;url&lt;/code&gt; are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;. See &lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax( settings )&lt;/a&gt; for a complete list of all settings. Type will automatically be set to &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">Ajax 요청을 구성하는 키 / 값 쌍 세트. &lt;code&gt;url&lt;/code&gt; 을 제외한 모든 속성 은 선택 사항입니다. &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup ()을 사용&lt;/a&gt; 하여 모든 옵션에 기본값을 설정할 수 있습니다 . 모든 설정의 전체 목록은 &lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax (settings)&lt;/a&gt; 를 참조하십시오 . 유형은 자동으로 &lt;code&gt;POST&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="62044105e05af19bfd1984dacaa143abe7767f2b" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All settings are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;.</source>
          <target state="translated">Ajax 요청을 구성하는 키 / 값 쌍 세트. 모든 설정은 선택 사항입니다. &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup ()을 사용&lt;/a&gt; 하여 모든 옵션에 기본값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0dea1cc5df272df8fdf29792310e10e896f79c0c" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All settings are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;. See &lt;a href=&quot;#jQuery-ajax-settings&quot;&gt;jQuery.ajax( settings )&lt;/a&gt; below for a complete list of all settings.</source>
          <target state="translated">Ajax 요청을 구성하는 키 / 값 쌍 세트. 모든 설정은 선택 사항입니다. &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup ()을 사용&lt;/a&gt; 하여 모든 옵션에 기본값을 설정할 수 있습니다 . 모든 설정의 전체 목록은 아래 &lt;a href=&quot;#jQuery-ajax-settings&quot;&gt;jQuery.ajax (settings)를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8fc373a69f6b5dc161210f77fd661e32cddfc31a" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the default Ajax request. All options are optional.</source>
          <target state="translated">기본 Ajax 요청을 구성하는 키 / 값 쌍 세트. 모든 옵션은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="aa5f15f4fab20ecefd307f8273830834f31a184a" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that map a given &lt;code&gt;dataType&lt;/code&gt; to its MIME type, which gets sent in the &lt;code&gt;Accept&lt;/code&gt; request header. This header tells the server what kind of response it will accept in return. For example, the following defines a custom type &lt;code&gt;mycustomtype&lt;/code&gt; to be sent with the request:</source>
          <target state="translated">주어진 &lt;code&gt;dataType&lt;/code&gt; 을 MIME 유형에 매핑하는 키 / 값 쌍의 집합으로 &lt;code&gt;Accept&lt;/code&gt; 요청 헤더에 전송됩니다 . 이 헤더는 서버에게 어떤 종류의 응답을받을 것인지를 서버에 알려줍니다. 예를 들어, 다음은 요청과 함께 전송 될 사용자 정의 유형 &lt;code&gt;mycustomtype&lt;/code&gt; 을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="b875876239e5de43bcf810ac3e1c2533682c949f" translate="yes" xml:space="preserve">
          <source>A string can be defined using single or double quotes. You can nest single quotes inside of double quotes, and the other way around. To mix double quotes with double quotes (or single with single), the nested ones have to be escaped with a backslash.</source>
          <target state="translated">작은 따옴표 나 큰 따옴표를 사용하여 문자열을 정의 할 수 있습니다. 작은 따옴표 안에 작은 따옴표를 넣을 수 있으며 그 반대의 경우도 가능합니다. 큰 따옴표와 큰 따옴표 (또는 작은 따옴표)를 혼합하려면 중첩 된 따옴표를 백 슬래시로 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4ee796037c8b24b4ea0ffeccd0d1a499ff63d62" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &quot;click&quot; or &quot;keydown&quot;</source>
          <target state="translated">&quot;click&quot;또는 &quot;keydown&quot;과 같은 JavaScript 이벤트 유형을 포함하는 문자열</target>
        </trans-unit>
        <trans-unit id="8122457cc83d84ad4c1974e3c03de520151c1940" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &quot;click&quot; or &quot;keydown.&quot; As of jQuery 1.4 the string can contain multiple, space-separated event types or custom event names.</source>
          <target state="translated">&quot;click&quot;또는 &quot;keydown&quot;과 같은 JavaScript 이벤트 유형을 포함하는 문자열 jQuery 1.4부터 문자열은 공백으로 구분 된 여러 이벤트 유형 또는 사용자 정의 이벤트 이름을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa216c5aa5c38cd38ba70f8d0b472a57ec7a822c" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &lt;code&gt;click&lt;/code&gt; or &lt;code&gt;keydown&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 또는 &lt;code&gt;keydown&lt;/code&gt; 과 같은 JavaScript 이벤트 유형을 포함하는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="7dd7a34444a29f66191f44be7c1a5e1d1e46c395" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &lt;code&gt;click&lt;/code&gt; or &lt;code&gt;submit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 또는 &lt;code&gt;submit&lt;/code&gt; 과 같은 JavaScript 이벤트 유형을 포함하는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="fb545be9e3afd37f4fbe049a8aabeede3a284859" translate="yes" xml:space="preserve">
          <source>A string containing a namespace to unbind all events from.</source>
          <target state="translated">모든 이벤트를 바인딩 해제 할 네임 스페이스가 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b2a2aa21cdb7758666ff7f4202d2568dd1da5b66" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression</source>
          <target state="translated">선택기 표현식을 포함하는 문자열</target>
        </trans-unit>
        <trans-unit id="6b178d4a56422a872bcdddd4aea410127c0d1548" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to escape.</source>
          <target state="translated">이스케이프 할 선택기식이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="1c949e3138f027aa18bef420df2d52afa0468911" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to indicate where to stop matching ancestor elements.</source>
          <target state="translated">조상 요소 일치를 중지 할 위치를 나타내는 선택기식이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8f9322e9bd53c0035f320d6328efece412fd6d59" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to indicate where to stop matching following sibling elements.</source>
          <target state="translated">다음 형제 요소와의 일치를 중지 할 위치를 나타내는 선택기 표현식이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ab519886e81c84738902552f1d4243c03fd936cb" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to indicate where to stop matching preceding sibling elements.</source>
          <target state="translated">선행 형제 요소와의 일치를 중지 할 위치를 나타내는 선택기 표현식이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="874a3b28d8c4819d989673ba4bcc92abb1691039" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to match elements against.</source>
          <target state="translated">요소를 비교할 선택기 표현식이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="53517c5087601fd11e15e0dc06e922e939133e0f" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to match the current set of elements against.</source>
          <target state="translated">현재 요소 집합과 일치하는 선택기식이 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e026b2f26561a7d3599a593d9bd4d72915e3f457" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression, a DOM element, or an array of elements to match against the set.</source>
          <target state="translated">선택자 표현식, DOM 요소 또는 세트와 일치시킬 요소 배열을 포함하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="5be87aef37b8be4bc6fb063251b4b8e37d1c736c" translate="yes" xml:space="preserve">
          <source>A string containing one or more DOM event types, such as &quot;click&quot; or &quot;submit,&quot; or custom event names.</source>
          <target state="translated">&quot;click&quot;또는 &quot;submit&quot;과 같은 하나 이상의 DOM 이벤트 유형 또는 사용자 정의 이벤트 이름을 포함하는 문자열.</target>
        </trans-unit>
        <trans-unit id="991badff8b5ea2ef9b9f7a5684ed5db432f47844" translate="yes" xml:space="preserve">
          <source>A string containing one or more JavaScript event types, such as &quot;click&quot; or &quot;submit,&quot; or custom event names.</source>
          <target state="translated">&quot;click&quot;또는 &quot;submit&quot;과 같은 하나 이상의 JavaScript 이벤트 유형을 포함하는 문자열 또는 사용자 정의 이벤트 이름</target>
        </trans-unit>
        <trans-unit id="b4a34c3b9709c018e0898cbbd1f333b2ff593cba" translate="yes" xml:space="preserve">
          <source>A string containing one or more space-separated JavaScript event types, such as &quot;click&quot; or &quot;keydown,&quot; or custom event names.</source>
          <target state="translated">&quot;click&quot;또는 &quot;keydown&quot;또는 사용자 정의 이벤트 이름과 같이 공백으로 구분 된 하나 이상의 JavaScript 이벤트 유형을 포함하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="6994fb465971f28333ba96c8bb95dd772491e42a" translate="yes" xml:space="preserve">
          <source>A string containing the URL to which the request is sent.</source>
          <target state="translated">요청이 전송되는 URL을 포함하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="280d40a6a1755944383dceab95e23b0639e4c793" translate="yes" xml:space="preserve">
          <source>A string containing the jQuery version number.</source>
          <target state="translated">jQuery 버전 번호가 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0118a75b907e1c80459d45e2c1caa8a299f1c4f5" translate="yes" xml:space="preserve">
          <source>A string containing the name of the queue. Defaults to &lt;code&gt;fx&lt;/code&gt;, the standard effects queue.</source>
          <target state="translated">큐 이름이 포함 된 문자열 표준 이펙트 큐인 &lt;code&gt;fx&lt;/code&gt; 로 기본 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="a5a3a322eaa9009b34fd666c867a73dc13271360" translate="yes" xml:space="preserve">
          <source>A string defining a single, standalone, HTML element (e.g. &amp;lt;div/&amp;gt; or &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;).</source>
          <target state="translated">단일 독립형 HTML 요소 (예 : &amp;lt;div /&amp;gt; 또는 &amp;lt;div&amp;gt; &amp;lt;/ div&amp;gt;)를 정의하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fdf892770269e2e5b22e51159168cd893d9519f2" translate="yes" xml:space="preserve">
          <source>A string identifying the data type to use</source>
          <target state="translated">사용할 데이터 유형을 식별하는 문자열</target>
        </trans-unit>
        <trans-unit id="02f4c8f3f8e451e4ec19e0c2407f8b5c4b4cf0ff" translate="yes" xml:space="preserve">
          <source>A string in JavaScript has some built-in methods to manipulate the string, though the result is always a new string - or something else, eg. split returns an &lt;a href=&quot;types#Array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="translated">JavaScript의 문자열에는 문자열을 조작하는 몇 가지 기본 제공 메소드가 있지만 결과는 항상 새로운 문자열이거나 다른 문자열입니다. split은 &lt;a href=&quot;types#Array&quot;&gt;배열을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bb2fbec40ee6f8afe789d2949c2c083739a6e8a9" translate="yes" xml:space="preserve">
          <source>A string in JavaScript is an immutable primitive value that contains none, one or many characters.</source>
          <target state="translated">JavaScript의 문자열은 하나 이상의 문자를 포함하지 않는 불변의 기본 값입니다.</target>
        </trans-unit>
        <trans-unit id="2e1f6f6516781634bf2cea15d0ec883a43cd236b" translate="yes" xml:space="preserve">
          <source>A string indicating which easing function to use for the transition.</source>
          <target state="translated">전환에 사용할 여유 함수를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8ebb73f51bb164c822cac96b08e926c9d34ec88e" translate="yes" xml:space="preserve">
          <source>A string is designated &lt;strong&gt;htmlString&lt;/strong&gt; in jQuery documentation when it is used to represent one or more DOM elements, typically to be created and inserted in the document. When passed as an argument of the &lt;code&gt;jQuery()&lt;/code&gt; function, the string is identified as HTML if it starts with &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt;) and is parsed as such until the final &lt;code&gt;&amp;gt;&lt;/code&gt; character. Prior to jQuery 1.9, a string was considered to be HTML if it contained &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt;&lt;em&gt;anywhere within the string&lt;/em&gt;.</source>
          <target state="translated">문자열은 일반적으로 문서에서 작성하고 삽입 할 하나 이상의 DOM 요소를 나타내는 데 사용될 때 jQuery 문서에서 &lt;strong&gt;htmlString&lt;/strong&gt; 으로 지정 됩니다. &lt;code&gt;jQuery()&lt;/code&gt; 함수 의 인수로 전달되면 문자열이 &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt; )로 시작하면 HTML로 식별되고 마지막 &lt;code&gt;&amp;gt;&lt;/code&gt; 문자 까지 구문 분석됩니다 . 가 포함 된 경우 이전에 jQuery를 1.9로, 문자열이 HTML을 것으로 간주되었다 &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt; &lt;em&gt;어디서나 문자열에서&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="68e6208a4a77d9a381adee6a6d1e0b94ba4cec11" translate="yes" xml:space="preserve">
          <source>A string naming the piece of data to delete.</source>
          <target state="translated">삭제할 데이터를 명명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="2022df9661ed513ea326f9fd33aa0cd09a5cca69" translate="yes" xml:space="preserve">
          <source>A string naming the piece of data to remove.</source>
          <target state="translated">제거 할 데이터를 명명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="bbaf0b87fe19a3016bd905c02c9e0bb4790cc09b" translate="yes" xml:space="preserve">
          <source>A string naming the piece of data to set.</source>
          <target state="translated">설정할 데이터를 명명하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="469c187b5b09e07d903e894452dbe6feb32f29be" translate="yes" xml:space="preserve">
          <source>A string of HTML to create on the fly. Note that this parses HTML, &lt;strong&gt;not&lt;/strong&gt; XML.</source>
          <target state="translated">즉석에서 생성 할 HTML 문자열. 이것은 XML 이 &lt;strong&gt;아닌&lt;/strong&gt; HTML을 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="fa917126906ddbdff3980fdd12465a254bd63aac" translate="yes" xml:space="preserve">
          <source>A string of HTML to set as the content of each matched element.</source>
          <target state="translated">일치하는 각 요소의 내용으로 설정할 HTML 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="82a5750e07c30e9387fdae249c9a3581e0037e3b" translate="yes" xml:space="preserve">
          <source>A string of text, a number, or an array of strings corresponding to the value of each matched element to set as selected/checked.</source>
          <target state="translated">선택 / 확인 된대로 설정할 각 일치 요소의 값에 해당하는 텍스트 문자열, 숫자 또는 문자열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="5b44c2cc4e18ef0026d8f50c34591c2a857d84ff" translate="yes" xml:space="preserve">
          <source>A string or number determining how long the animation will run.</source>
          <target state="translated">애니메이션 실행 시간을 결정하는 문자열 또는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="81616ca223cb30275ff05264d8e36118db942f20" translate="yes" xml:space="preserve">
          <source>A string representing a selector expression to find additional elements to add to the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에 추가 할 추가 요소를 찾기위한 선택기 표현식을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b79c5f7b15842a1722513c43a3c29d820df27381" translate="yes" xml:space="preserve">
          <source>A transport is an object that provides two methods, &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;abort&lt;/code&gt;, that are used internally by &lt;code&gt;$.ajax()&lt;/code&gt; to issue requests. A transport is the most advanced way to enhance &lt;code&gt;$.ajax()&lt;/code&gt; and should be used only as a last resort when prefilters and converters are insufficient.</source>
          <target state="translated">전송은 요청을 발행하기 위해 &lt;code&gt;$.ajax()&lt;/code&gt; 에 의해 내부적으로 사용되는 &lt;code&gt;send&lt;/code&gt; 및 &lt;code&gt;abort&lt;/code&gt; 두 가지 메소드를 제공하는 오브젝트입니다 . 전송은 &lt;code&gt;$.ajax()&lt;/code&gt; 를 향상시키는 가장 진보 된 방법 이며 프리 필터와 변환기가 충분하지 않은 경우 최후의 수단으로 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ba082c7b0ef01c96cae18101a2223c928a0679f" translate="yes" xml:space="preserve">
          <source>A typical prefilter registration using &lt;code&gt;$.ajaxPrefilter()&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;$.ajaxPrefilter()&lt;/code&gt; 사용한 일반적인 사전 필터 등록 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c47743ee075c61ac1f29b345b0976e32bc8ab623" translate="yes" xml:space="preserve">
          <source>A username to be used with XMLHttpRequest in response to an HTTP access authentication request.</source>
          <target state="translated">HTTP 액세스 인증 요청에 대한 응답으로 XMLHttpRequest와 함께 사용되는 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="483405e13d567b0d5b813c73748d045dd6da0abf" translate="yes" xml:space="preserve">
          <source>A value to set for the attribute. If &lt;code&gt;null&lt;/code&gt;, the specified attribute will be removed (as in &lt;a href=&quot;removeattr&quot;&gt;&lt;code&gt;.removeAttr()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">속성에 설정할 값입니다. 경우 &lt;code&gt;null&lt;/code&gt; 지정된 속성을 제거한다 (같이 &lt;a href=&quot;removeattr&quot;&gt; &lt;code&gt;.removeAttr()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d4d770b273cfa954dfbbc72d0490860f20784c4c" translate="yes" xml:space="preserve">
          <source>A value to set for the property.</source>
          <target state="translated">속성에 설정할 값입니다.</target>
        </trans-unit>
        <trans-unit id="04e5c4d27b7c2943275c6946eb76bed079e7a8dd" translate="yes" xml:space="preserve">
          <source>A zero-based integer indicating which element to retrieve.</source>
          <target state="translated">검색 할 요소를 나타내는 0부터 시작하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="bf808762a54b11b8753bc2e59e4e91378d2ba7be" translate="yes" xml:space="preserve">
          <source>Access the offset of the second paragraph:</source>
          <target state="translated">두 번째 단락의 오프셋에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="b7ae0aa64d3f0cef72314e6b3b5bf62d2351847b" translate="yes" xml:space="preserve">
          <source>Access the position of the second paragraph:</source>
          <target state="translated">두 번째 단락의 위치에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="b597abdf8fb4aacd833519bc6a94cc043505d460" translate="yes" xml:space="preserve">
          <source>According to the &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.4&quot;&gt;W3C forms specification&lt;/a&gt;, the &lt;code&gt;checked&lt;/code&gt; attribute is a &lt;em&gt;&lt;a href=&quot;https://www.w3.org/TR/html4/intro/sgmltut.html#h-3.3.4.2&quot;&gt;boolean attribute&lt;/a&gt;&lt;/em&gt;, which means the corresponding property is &lt;strong&gt;true&lt;/strong&gt; if the attribute is present at all&amp;mdash;even if, for example, the attribute has no value or is set to empty string value or even &quot;false&quot;. This is true of all boolean attributes.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.4&quot;&gt;W3C 양식 스펙&lt;/a&gt; 에 따르면 , &lt;code&gt;checked&lt;/code&gt; 속성은 &lt;em&gt;&lt;a href=&quot;https://www.w3.org/TR/html4/intro/sgmltut.html#h-3.3.4.2&quot;&gt;부울 속성입니다&lt;/a&gt;&lt;/em&gt; . 이는 속성이 전혀 존재하지 않는 경우 (예를 들어 속성에 값이 없거나 빈 문자열 값으로 설정되거나 심지어 짝수 인 경우에도 해당하는 속성이 &lt;strong&gt;참&lt;/strong&gt; 임을 의미 함) &quot;그릇된&quot;. 이것은 모든 부울 속성에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="e5fd1225e4e56322d02ee4a94b479764117cf1d5" translate="yes" xml:space="preserve">
          <source>Add a callback or a collection of callbacks to a callback list.</source>
          <target state="translated">콜백 또는 콜백 모음을 콜백 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ce773313c649231c46235da2376ce49b4450d255" translate="yes" xml:space="preserve">
          <source>Add a class to List 2, item 2 by targeting the second to last &amp;lt;li&amp;gt;</source>
          <target state="translated">마지막 두 번째 &amp;lt;li&amp;gt;를 대상으로하여 목록 2, 항목 2에 클래스 추가</target>
        </trans-unit>
        <trans-unit id="b45b56bcbfd9da994f717482b790c57231ce6289" translate="yes" xml:space="preserve">
          <source>Add a collection of DOM elements onto the jQuery stack.</source>
          <target state="translated">jQuery 스택에 DOM 요소 컬렉션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="be9f2a33dddf764c7177d0f8d9c751204da1f253" translate="yes" xml:space="preserve">
          <source>Add and remove event handlers on the colored button.</source>
          <target state="translated">컬러 버튼에서 이벤트 핸들러를 추가하고 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e9b78982c9def74f29c568c0f4852a564b18303c" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object generates progress notifications.</source>
          <target state="translated">Deferred 객체가 진행 알림을 생성 할 때 호출 될 핸들러를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ac12c3058f7fde572e86b3098ab26500f3453496" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is either resolved or rejected.</source>
          <target state="translated">지연된 오브젝트가 해결되거나 거부 될 때 호출 될 핸들러를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="371bd59760fdc11b58080c83cc145b774bdcb1b1" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is rejected.</source>
          <target state="translated">지연된 오브젝트가 거부 될 때 호출 될 핸들러를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="238cf537c5263bc1113573c2fd378f5cdf992bac" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.</source>
          <target state="translated">지연된 오브젝트가 해결, 거부 또는 진행 중일 때 호출 될 핸들러를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3a37202abed87db8c9af9cdf60d76d2d2f1fef19" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is resolved.</source>
          <target state="translated">지연된 오브젝트가 분석 될 때 호출 될 핸들러를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="30a698a98dc22cad927eebc24df0936f623f8f6d" translate="yes" xml:space="preserve">
          <source>Add or remove one or more classes from each element in the set of matched elements, depending on either the class&amp;rsquo;s presence or the value of the state argument.</source>
          <target state="translated">클래스의 존재 여부 또는 상태 인수의 값에 따라 일치하는 요소 세트의 각 요소에서 하나 이상의 클래스를 추가하거나 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="22a90b3408b0c1a626ed8540d4a2da0ab85c9ac4" translate="yes" xml:space="preserve">
          <source>Add some elements onto the jQuery stack, then pop back off again.</source>
          <target state="translated">jQuery 스택에 요소를 추가 한 다음 다시 팝업을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="2a803ea6d681f9adedac48904077839c4a6bf8bc" translate="yes" xml:space="preserve">
          <source>Add some html to each div then immediately do further manipulations to the inserted html.</source>
          <target state="translated">각 div에 html을 추가 한 다음 삽입 된 html을 즉시 추가 조작하십시오.</target>
        </trans-unit>
        <trans-unit id="65ce11a3b962e38e91fb7ff2b3af6ada0225b1c3" translate="yes" xml:space="preserve">
          <source>Add some html to each div.</source>
          <target state="translated">각 div에 html을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="337b398ab3f45b14c4e5e3d18302f7c0edb27246" translate="yes" xml:space="preserve">
          <source>Add spans around each word then add a hover and italicize words with the letter &lt;strong&gt;t&lt;/strong&gt;.</source>
          <target state="translated">각 단어 주위에 범위를 추가 한 다음 호버를 추가하고 문자 &lt;strong&gt;t&lt;/strong&gt; 로 단어를 기울임 꼴로 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="62cfa4aadd0aba31784b73c37e549d894ccaf707" translate="yes" xml:space="preserve">
          <source>Add text to the paragraph (notice the bold tag is escaped).</source>
          <target state="translated">단락에 텍스트를 추가하십시오 (굵은 체 태그가 이스케이프 됨).</target>
        </trans-unit>
        <trans-unit id="a34a9c785f658c2a6829abc49a23e85e4d46168b" translate="yes" xml:space="preserve">
          <source>Add the &quot;highlight&quot; class to the clicked paragraph on every third click of that paragraph, remove it every first and second click.</source>
          <target state="translated">해당 단락의 세 번째 클릭마다 클릭 한 단락에 &quot;강조 표시&quot;클래스를 추가하고 첫 번째 및 두 번째 클릭마다 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="834c1d53246f37769f79afb3e7cab085edb7dcf3" translate="yes" xml:space="preserve">
          <source>Add the class &quot;selected&quot; to the matched elements.</source>
          <target state="translated">일치하는 요소에 &quot;선택&quot;클래스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="98b550603e7f55e0c398e39c8de0b840abe72777" translate="yes" xml:space="preserve">
          <source>Add the class bigImg to all images with height greater than 100 upon each image load.</source>
          <target state="translated">각 이미지로드시 높이가 100보다 큰 모든 이미지에 bigImg 클래스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9b497d8b22a2a92c4bda16328ba9d8ecbb7ad497" translate="yes" xml:space="preserve">
          <source>Add the classes &quot;selected&quot; and &quot;highlight&quot; to the matched elements (3.3+ syntax).</source>
          <target state="translated">일치하는 요소 (3.3+ 구문)에 &quot;selected&quot;및 &quot;highlight&quot;클래스를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="562c614d5012357faeb3cd3a877dbfc767907e43" translate="yes" xml:space="preserve">
          <source>Add the classes &quot;selected&quot; and &quot;highlight&quot; to the matched elements.</source>
          <target state="translated">&quot;selected&quot;및 &quot;highlight&quot;클래스를 일치하는 요소에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c6247ec805df36e5ec5645e709e8a4ef380933ac" translate="yes" xml:space="preserve">
          <source>Add the previous set of elements on the stack to the current set, optionally filtered by a selector.</source>
          <target state="translated">스택의 이전 요소 집합을 현재 집합에 추가하고 선택적으로 선택기로 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="c9e9cca0eb657c68636c4f45eae5d452ba76f355" translate="yes" xml:space="preserve">
          <source>Add the previous set of elements on the stack to the current set.</source>
          <target state="translated">스택의 이전 요소 세트를 현재 세트에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="51607d436f9d1ef82a2aacd5421562ff9f62a243" translate="yes" xml:space="preserve">
          <source>Add two methods to the jQuery prototype (&lt;code&gt;$.fn&lt;/code&gt;) object and then use one of them.</source>
          <target state="translated">jQuery 프로토 타입 ( &lt;code&gt;$.fn&lt;/code&gt; ) 객체에 두 개의 메소드를 추가 한 후 그 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3b85afd11c83038ed13b02a8d65cd24318c81428" translate="yes" xml:space="preserve">
          <source>Added to jQuery in version 1.4, the &lt;code&gt;.delay()&lt;/code&gt; method allows us to delay the execution of functions that follow it in the queue. It can be used with the standard effects queue or with a custom queue. Only subsequent events in a queue are delayed; for example this will &lt;em&gt;not&lt;/em&gt; delay the no-arguments forms of &lt;code&gt;.show()&lt;/code&gt; or &lt;code&gt;.hide()&lt;/code&gt; which do not use the effects queue.</source>
          <target state="translated">버전 1.4의 jQuery에 추가 된 &lt;code&gt;.delay()&lt;/code&gt; 메소드를 사용하면 큐에서 해당 함수를 따르는 함수의 실행을 지연시킬 수 있습니다. 표준 이펙트 큐 또는 커스텀 큐와 함께 사용할 수 있습니다. 큐의 후속 이벤트 만 지연됩니다. 예를 들어 이것은 것이다 &lt;em&gt;하지&lt;/em&gt; 의 노 인수 형태 지연 &lt;code&gt;.show()&lt;/code&gt; 또는 &lt;code&gt;.hide()&lt;/code&gt; 효과를 사용하지 않는 대기.</target>
        </trans-unit>
        <trans-unit id="ba795a00df86c5677bfb5d2e0dd71eedaf9a7c80" translate="yes" xml:space="preserve">
          <source>Adding a method to a jQuery sub so that it isn't exposed externally:</source>
          <target state="translated">외부 적으로 노출되지 않도록 jQuery 서브에 메소드 추가 :</target>
        </trans-unit>
        <trans-unit id="68a736860550b72f606074f70cdcdccec572150e" translate="yes" xml:space="preserve">
          <source>Additional Arguments</source>
          <target state="translated">추가 인수</target>
        </trans-unit>
        <trans-unit id="a6886107051f6296b301c835737605aa7c616a6a" translate="yes" xml:space="preserve">
          <source>Additional Notes</source>
          <target state="translated">추가 사항</target>
        </trans-unit>
        <trans-unit id="da83617584d2bcf3ead915c16910c45109bbc8de" translate="yes" xml:space="preserve">
          <source>Additional Notes:</source>
          <target state="translated">추가 사항 :</target>
        </trans-unit>
        <trans-unit id="211b632f6521bd2b0bebe085843569e0df097c22" translate="yes" xml:space="preserve">
          <source>Additional handlers to cycle through after clicks.</source>
          <target state="translated">클릭 후 순환 할 추가 핸들러.</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">추가 사항</target>
        </trans-unit>
        <trans-unit id="f71fd57cfa3c24a647af30c996ef3e0480679e21" translate="yes" xml:space="preserve">
          <source>Additional objects containing properties to merge in.</source>
          <target state="translated">병합 할 속성이 포함 된 추가 개체</target>
        </trans-unit>
        <trans-unit id="90398f70fdfa499a7e41f2b2f92a010364f466cb" translate="yes" xml:space="preserve">
          <source>Additional parameters to pass along to the event handler.</source>
          <target state="translated">이벤트 핸들러로 전달할 추가 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="52b64ad863218cb1bfbbb58f4ba3c71e95800cb1" translate="yes" xml:space="preserve">
          <source>Adds a background and text color to all the headers on the page.</source>
          <target state="translated">페이지의 모든 헤더에 배경 및 텍스트 색상을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bb2ee4ca3026806da90f77e4ef2bb858eeb32d01" translate="yes" xml:space="preserve">
          <source>Adds a border to divs that are not green or blue.</source>
          <target state="translated">녹색 또는 파란색이 아닌 div에 테두리를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="82bf9ba53e5c702c6e04c9321444143667249540" translate="yes" xml:space="preserve">
          <source>Adds more elements, created on the fly, to the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에 즉석에서 작성된 더 많은 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8373586919555793f2266124c7b3fde712e12823" translate="yes" xml:space="preserve">
          <source>Adds more elements, matched by the given expression, to the set of matched elements.</source>
          <target state="translated">주어진 표현식과 일치하는 요소를 일치하는 요소 세트에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ed273fd6111a4203a9493a3fba12654b3f9d1077" translate="yes" xml:space="preserve">
          <source>Adds one or more Elements to the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에 하나 이상의 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="326c34ea8dd6625ee9ed7c59408b20fddca6f9d9" translate="yes" xml:space="preserve">
          <source>Adds the class &quot;test&quot; to all divs that have a paragraph inside of them.</source>
          <target state="translated">&quot;test&quot;클래스를 그 안에 단락이있는 모든 div에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f94d96f04532a0477ab76d7f3a5599d5789a18d4" translate="yes" xml:space="preserve">
          <source>Adds the focused class to whatever element has focus</source>
          <target state="translated">포커스가있는 요소에 포커스가있는 클래스를 추가합니다</target>
        </trans-unit>
        <trans-unit id="b80d265ec353e5153c52d99791b35cdedefb4008" translate="yes" xml:space="preserve">
          <source>Adds the specified class(es) to each element in the set of matched elements.</source>
          <target state="translated">지정된 클래스를 일치하는 요소 집합의 각 요소에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="97ac6614ad14f6416b45b25e3d11e9ca8ac85b37" translate="yes" xml:space="preserve">
          <source>Adjust the opacity of the matched elements.</source>
          <target state="translated">일치하는 요소의 불투명도를 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="a73a2ceee060f3a2057665bc437069f75cae0606" translate="yes" xml:space="preserve">
          <source>Advanced Options</source>
          <target state="translated">고급 옵션</target>
        </trans-unit>
        <trans-unit id="a2d5617de761f769e4aa7bd1ae8646b790bf2c6d" translate="yes" xml:space="preserve">
          <source>After the code is executed, a click on the element with ID &lt;code&gt;foo&lt;/code&gt; will display the alert. Subsequent clicks will do nothing. This code is equivalent to:</source>
          <target state="translated">코드가 실행 된 후 ID가 &lt;code&gt;foo&lt;/code&gt; 인 요소를 클릭 하면 경고가 표시됩니다. 후속 클릭은 아무 것도 수행하지 않습니다. 이 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="de162ec04b37592d591dd7a093b0cd510fe9b03b" translate="yes" xml:space="preserve">
          <source>After this code executes, (single) clicks on</source>
          <target state="translated">이 코드가 실행 된 후 (단일) 클릭</target>
        </trans-unit>
        <trans-unit id="38b51d6d79b99318d20f270b7ced98abd8f71dcc" translate="yes" xml:space="preserve">
          <source>After this code executes, clicking on</source>
          <target state="translated">이 코드가 실행되면</target>
        </trans-unit>
        <trans-unit id="975fc1a2b84a0a9e0015dbbfc66021999fe5cd6c" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on</source>
          <target state="translated">이 코드가 실행되면</target>
        </trans-unit>
        <trans-unit id="48dc05219308f86a170992a2daf1ae686f7eb60f" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on the</source>
          <target state="translated">이 코드가 실행 된 후</target>
        </trans-unit>
        <trans-unit id="f22f4f1afcbe8173708126919fd22a1724a44386" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on the Trigger button will also alert the message:</source>
          <target state="translated">이 코드가 실행되면 트리거 버튼을 클릭해도 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4fc0d721b8bef3a9473b657fa8646fcea23d970a" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on the Trigger button will also append the message:</source>
          <target state="translated">이 코드가 실행 된 후 트리거 버튼을 클릭하면 메시지가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d09d81fbce595cc2821e9d9d3018c3593a7a1102" translate="yes" xml:space="preserve">
          <source>After this code is executed, when the user clicks inside the element with an ID of &lt;code&gt;foo&lt;/code&gt;, its text contents will be shown as an alert.</source>
          <target state="translated">이 코드가 실행 된 후 사용자가 ID가 &lt;code&gt;foo&lt;/code&gt; 인 요소 내부를 클릭하면 텍스트 내용이 경고로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="772dc590f4260b29af96b3a654d8879adde657d9" translate="yes" xml:space="preserve">
          <source>Again, we get back the zero-based position of the list item:</source>
          <target state="translated">다시, 우리는리스트 아이템의 0부터 시작하는 위치를 다시 얻습니다 :</target>
        </trans-unit>
        <trans-unit id="e96e133edf2417f71af2cbe9a8e32a29e82791b8" translate="yes" xml:space="preserve">
          <source>Ajax</source>
          <target state="translated">Ajax</target>
        </trans-unit>
        <trans-unit id="1997c6e8193ca98d41b1597d9953afee5b72d803" translate="yes" xml:space="preserve">
          <source>Ajax Events</source>
          <target state="translated">아약스 이벤트</target>
        </trans-unit>
        <trans-unit id="4418f6cc1db2c41fbd687b9820ef6b4cdf66fcc5" translate="yes" xml:space="preserve">
          <source>Ajax requests are time-limited, so errors can be caught and handled to provide a better user experience. Request timeouts are usually either left at their default or set as a global default using &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; rather than being overridden for specific requests with the &lt;code&gt;timeout&lt;/code&gt; option.</source>
          <target state="translated">Ajax 요청은 시간 제한이 있으므로 오류를 포착하고 처리하여 더 나은 사용자 경험을 제공 할 수 있습니다. 요청 시간 초과는 일반적으로 &lt;code&gt;timeout&lt;/code&gt; 옵션으로 특정 요청에 대해 재정의되지 않고 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 사용하여 기본값으로 유지되거나 전역 기본값으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7151308eac5153959a33eeb655a6b12462c3a3f4" translate="yes" xml:space="preserve">
          <source>Ajax requests produce a number of different events that you can subscribe to. Here's a full list of the events and in what order they are triggered.</source>
          <target state="translated">Ajax 요청은 구독 할 수있는 다양한 이벤트를 생성합니다. 다음은 이벤트의 전체 목록과 트리거 된 순서입니다.</target>
        </trans-unit>
        <trans-unit id="c10abf5ce6094230a1ac53038ea83f3f48c39925" translate="yes" xml:space="preserve">
          <source>Alert &quot;this is WebKit!&quot; only for WebKit browsers. &lt;strong&gt;Will not work in jQuery 1.9 or later&lt;/strong&gt; unless the &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; plugin is included.</source>
          <target state="translated">경고 &quot;이것은 WebKit입니다!&quot; WebKit 브라우저에만 해당됩니다. &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; 플러그인이 포함되어 있지 않으면 &lt;strong&gt;jQuery 1.9 이상에서 작동&lt;/strong&gt; 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c34180e79917710f520092edffd7d68640e617c2" translate="yes" xml:space="preserve">
          <source>Alert that currentTarget matches the `this` keyword.</source>
          <target state="translated">currentTarget이`this` 키워드와 일치 함을 경고합니다.</target>
        </trans-unit>
        <trans-unit id="f86faf970df8a349c00d79c2bbf4652fdc44a338" translate="yes" xml:space="preserve">
          <source>Alert the results from requesting test.cgi with an additional payload of data (HTML or XML, depending on what was returned).</source>
          <target state="translated">추가 데이터 페이로드 (반환 된 내용에 따라 HTML 또는 XML)로 test.cgi를 요청한 결과를 알립니다.</target>
        </trans-unit>
        <trans-unit id="7e474ded5020ff001cde4e071c64159b9fae76d1" translate="yes" xml:space="preserve">
          <source>Alert the results from requesting test.php (HTML or XML, depending on what was returned).</source>
          <target state="translated">test.php 요청 결과 (알려진 내용에 따라 HTML 또는 XML)에 경고합니다.</target>
        </trans-unit>
        <trans-unit id="f17bca347565dad724a58abb89a7acd04b6b5528" translate="yes" xml:space="preserve">
          <source>Alert the results from requesting test.php with an additional payload of data (HTML or XML, depending on what was returned).</source>
          <target state="translated">추가 데이터 페이로드 (반환 된 내용에 따라 HTML 또는 XML)로 test.php를 요청한 결과를 알립니다.</target>
        </trans-unit>
        <trans-unit id="ae3009efe067f749a5b87428871e2cfa42e17c7c" translate="yes" xml:space="preserve">
          <source>Alert the version of IE's rendering engine that is being used. &lt;strong&gt;Will not work in jQuery 1.9 or later&lt;/strong&gt; unless the &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; plugin is included.</source>
          <target state="translated">사용중인 IE의 렌더링 엔진 버전을 알려줍니다. &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; 플러그인이 포함되어 있지 않으면 &lt;strong&gt;jQuery 1.9 이상에서 작동&lt;/strong&gt; 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ad0101fc1496516b29cda27f2e907fd10c2ec4c" translate="yes" xml:space="preserve">
          <source>Aliasing the jQuery Object</source>
          <target state="translated">jQuery 객체 앨리어싱</target>
        </trans-unit>
        <trans-unit id="7eaf9e25fb40e98af7144dbbd63aafb9a3ff08f6" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxComplete&lt;/code&gt; handlers are invoked, regardless of what Ajax request was completed. If you must differentiate between the requests, use the parameters passed to the handler. Each time an &lt;code&gt;ajaxComplete&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, and the settings object that was used in the creation of the request. For example, you can restrict the callback to only handling events dealing with a particular URL:</source>
          <target state="translated">완료된 Ajax 요청에 관계없이 모든 &lt;code&gt;ajaxComplete&lt;/code&gt; 핸들러가 호출됩니다. 요청을 구별해야하는 경우 핸들러에 전달 된 매개 변수를 사용하십시오. &lt;code&gt;ajaxComplete&lt;/code&gt; 핸들러가 실행될 때마다 이벤트 오브젝트, &lt;code&gt;XMLHttpRequest&lt;/code&gt; 오브젝트 및 요청 작성에 사용 된 설정 오브젝트가 전달됩니다. 예를 들어 특정 URL을 다루는 이벤트 만 처리하도록 콜백을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f40c611312abde09d2943f8b06b2b416af640f25" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxError&lt;/code&gt; handlers are invoked, regardless of what Ajax request was completed. To differentiate between the requests, use the parameters passed to the handler. Each time an &lt;code&gt;ajaxError&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;jqXHR&lt;/code&gt; object (prior to jQuery 1.5, the &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; object), and the settings object that was used in the creation of the request. When an HTTP error occurs, the fourth argument (&lt;code&gt;thrownError&lt;/code&gt;) receives the textual portion of the HTTP status, such as &quot;Not Found&quot; or &quot;Internal Server Error.&quot; For example, to restrict the error callback to only handling events dealing with a particular URL:</source>
          <target state="translated">완료된 Ajax 요청에 관계없이 모든 &lt;code&gt;ajaxError&lt;/code&gt; 핸들러가 호출됩니다. 요청을 구별하려면 핸들러에 전달 된 매개 변수를 사용하십시오. &lt;code&gt;ajaxError&lt;/code&gt; 핸들러가 실행될 때마다 이벤트 오브젝트, &lt;code&gt;jqXHR&lt;/code&gt; 오브젝트 (jQuery 1.5 이전의 &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; 오브젝트) 및 요청 작성에 사용 된 설정 오브젝트가 전달됩니다. HTTP 오류가 발생하면 네 번째 인수 ( &lt;code&gt;thrownError&lt;/code&gt; )는 &quot;Not Found&quot;또는 &quot;Internal Server Error&quot;와 같은 HTTP 상태의 텍스트 부분을받습니다. 예를 들어, 특정 URL을 다루는 이벤트 만 처리하도록 오류 콜백을 제한하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="3ed336321a178d1c401229ebf5926dee8f37916c" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxSend&lt;/code&gt; handlers are invoked, regardless of what Ajax request is to be sent. If you must differentiate between the requests, use the parameters passed to the handler. Each time an &lt;code&gt;ajaxSend&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;jqXHR&lt;/code&gt; object (in version 1.4, &lt;code&gt;XMLHttpRequest&lt;/code&gt;object), and the &lt;a href=&quot;jquery.ajax&quot;&gt;settings object&lt;/a&gt; that was used in the creation of the Ajax request. For example, you can restrict the callback to only handling events dealing with a particular URL:</source>
          <target state="translated">전송되는 Ajax 요청에 관계없이 모든 &lt;code&gt;ajaxSend&lt;/code&gt; 핸들러가 호출됩니다. 요청을 구별해야하는 경우 핸들러에 전달 된 매개 변수를 사용하십시오. &lt;code&gt;ajaxSend&lt;/code&gt; 핸들러가 실행될 때마다 이벤트 오브젝트, &lt;code&gt;jqXHR&lt;/code&gt; 오브젝트 (버전 1.4의 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 오브젝트) 및 Ajax 요청 작성에 사용 된 &lt;a href=&quot;jquery.ajax&quot;&gt;설정 오브젝트&lt;/a&gt; 가 전달됩니다. 예를 들어 특정 URL을 다루는 이벤트 만 처리하도록 콜백을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac765bf4016ee6703c1756ef57f826b90a35ea2f" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxSuccess&lt;/code&gt; handlers are invoked, regardless of what Ajax request was completed. If you must differentiate between the requests, you can use the parameters passed to the handler. Each time an &lt;code&gt;ajaxSuccess&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, and the settings object that was used in the creation of the request. For example, you can restrict the callback to only handling events dealing with a particular URL:</source>
          <target state="translated">완료된 Ajax 요청에 관계없이 모든 &lt;code&gt;ajaxSuccess&lt;/code&gt; 핸들러가 호출됩니다. 요청을 구별해야하는 경우 핸들러에 전달 된 매개 변수를 사용할 수 있습니다. &lt;code&gt;ajaxSuccess&lt;/code&gt; 핸들러가 실행될 때마다 이벤트 오브젝트, &lt;code&gt;XMLHttpRequest&lt;/code&gt; 오브젝트 및 요청 작성에 사용 된 설정 오브젝트가 전달됩니다. 예를 들어 특정 URL을 다루는 이벤트 만 처리하도록 콜백을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="760631802d5b265c7dff1f01b0d497d2c7690fff" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;option&lt;/code&gt; elements are considered hidden, regardless of their &lt;code&gt;selected&lt;/code&gt; state.</source>
          <target state="translated">&lt;code&gt;selected&lt;/code&gt; 상태에 관계없이 모든 &lt;code&gt;option&lt;/code&gt; 요소는 숨겨진 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a8728475bda933607a291a1ebdcd5fd0f9ef2b7" translate="yes" xml:space="preserve">
          <source>All Selector (&amp;ldquo;*&amp;rdquo;)</source>
          <target state="translated">모든 선택기 (&amp;ldquo;*&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="78d17f9bfb79fba667f26b912ffa4005ac59e5d3" translate="yes" xml:space="preserve">
          <source>All animated properties should be animated to a &lt;em&gt;single numeric value&lt;/em&gt;, except as noted below; most properties that are non-numeric cannot be animated using basic jQuery functionality (For example, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, or &lt;code&gt;left&lt;/code&gt; can be animated but &lt;code&gt;background-color&lt;/code&gt; cannot be, unless the &lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;jQuery.Color&lt;/a&gt; plugin is used). Property values are treated as a number of pixels unless otherwise specified. The units &lt;code&gt;em&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt; can be specified where applicable.</source>
          <target state="translated">아래에 언급 된 것을 제외하고 모든 애니메이션 속성은 &lt;em&gt;단일 숫자 값&lt;/em&gt; 으로 애니메이션되어야 합니다. 숫자가 아닌 대부분의 속성은 기본 jQuery 기능을 사용하여 애니메이션 할 수 없습니다 (예 : &lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;jQuery.Color&lt;/a&gt; 플러그인을 사용 하지 않으면 &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; 또는 &lt;code&gt;left&lt;/code&gt; 는 애니메이션 할 수 있지만 &lt;code&gt;background-color&lt;/code&gt; 은 애니메이션 할 수 없음 ). 달리 지정하지 않는 한 속성 값은 여러 픽셀로 처리됩니다. 해당되는 경우 &lt;code&gt;em&lt;/code&gt; 및 &lt;code&gt;%&lt;/code&gt; 단위를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8647c6b02dad91a501957cad2d142c4b2d209c74" translate="yes" xml:space="preserve">
          <source>All event handlers in jQuery are called with the handling element as the context.</source>
          <target state="translated">jQuery의 모든 이벤트 핸들러는 처리 요소를 컨텍스트로 사용하여 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ad25327557d731ab78e7da76c1b3b23fe160594f" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.animate()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.animate()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8fe57c77f5000c2059cf2941ffde511d272a576" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeIn()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 0으로 효과적으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.fadeIn()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4e60fdc031aee295d0006bfdfaad087fc178a90" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeOut()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 0으로 효과적으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.fadeOut()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8f6d6934f05e3eac2ac070786cc1341f211f773" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeTo()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.fadeTo()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb602a09d3198a5d3efbf84e26795d114ea64475" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeToggle()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 0으로 효과적으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.fadeToggle()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b6aa8c0d770adfa65b735d23e020ed58435b194" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.hide()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.hide()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b48790b65be13af9e47d57a0a844eff622c2615" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.show()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.show()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="105783e1780356ae4c7f712e399bab7a0a0ca525" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.slideDown()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.slideDown()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5f3fe862e7b273a2327fe15ac947e22faaf5c8d" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.slideToggle()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.slideToggle()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f628c06825afec107849a5a09daecb611b2da9bc" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.slideUp()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.slideUp()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29cb5dec492c815817ea58557ff86d1a006d995a" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.toggle()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">지속 시간을 효과적으로 0 으로 설정하는 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 를 설정 하여 &lt;code&gt;.toggle()&lt;/code&gt; 포함한 모든 jQuery 효과를 전체적으로 끌 수 있습니다 . 자세한 내용은 &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="287aa18aba4ffc98a24250125c5079aaa392fbda" translate="yes" xml:space="preserve">
          <source>All objects have a prototype property. Whenever the interpreter looks for a property, it also checks in the object's prototype if the property is not found on the object itself. jQuery uses the prototype extensively to add methods to jQuery instances. Internally, jQuery makes &lt;code&gt;jQuery.fn&lt;/code&gt; an alias of &lt;code&gt;jQuery.prototype&lt;/code&gt; so you can use either one (though plugin developers have standardized on &lt;code&gt;fn&lt;/code&gt;).</source>
          <target state="translated">모든 객체에는 프로토 타입 속성이 있습니다. 인터프리터가 속성을 찾을 때마다 객체 자체에서 속성을 찾을 수없는 경우 객체의 프로토 타입도 확인합니다. jQuery는 프로토 타입을 광범위하게 사용하여 메소드를 jQuery 인스턴스에 추가합니다. 내부적으로 jQuery는 &lt;code&gt;jQuery.fn&lt;/code&gt; 을 &lt;code&gt;jQuery.prototype&lt;/code&gt; 의 별명으로 만들어서 플러그인 개발자가 &lt;code&gt;fn&lt;/code&gt; 으로 표준화했지만 둘 중 하나를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6667426623e3c68f8d6d1d9874ffec96684134b6" translate="yes" xml:space="preserve">
          <source>All of the following jQuery code will work.</source>
          <target state="translated">다음 jQuery 코드가 모두 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2da415ba3d670a3cf463e0ed5df724709d567db6" translate="yes" xml:space="preserve">
          <source>All of the matched DOM nodes are returned by this call, contained in a standard array:</source>
          <target state="translated">일치하는 모든 DOM 노드는 표준 배열에 포함 된이 호출에 의해 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a6b4f3bf6fb68b960039db71d486e3f9ed0678c2" translate="yes" xml:space="preserve">
          <source>All of the methods in this section manipulate the DOM in some manner. A few of them simply change one of the attributes of an element (also listed in the &lt;a href=&quot;attributes&quot;&gt;Attributes category&lt;/a&gt;), while others set an element's style properties (also listed in the &lt;a href=&quot;css&quot;&gt;CSS category&lt;/a&gt;). Still others modify entire elements (or groups of elements) themselves&amp;mdash;inserting, copying, removing, and so on. All of these methods are referred to as &quot;setters,&quot; as they change the values of properties.</source>
          <target state="translated">이 섹션의 모든 메소드는 어떤 방식으로 DOM을 조작합니다. 그중 일부는 단순히 요소의 속성 중 하나 ( &lt;a href=&quot;attributes&quot;&gt;속성 범주&lt;/a&gt; 에도 나열 됨 )를 변경하는 반면 다른 요소는 요소의 스타일 속성 ( &lt;a href=&quot;css&quot;&gt;CSS 범주&lt;/a&gt; 에도 나열 됨 )을 설정합니다. 또 다른 요소는 전체 요소 (또는 요소 그룹) 자체 (삽입, 복사, 제거 등) 자체를 수정합니다. 이러한 메소드는 모두 속성 값을 변경하므로 &quot;세터&quot;라고합니다.</target>
        </trans-unit>
        <trans-unit id="e6c95967beed3d4359c2b9faafbd7d52cba20111" translate="yes" xml:space="preserve">
          <source>All selector (&amp;quot;*&amp;quot;)</source>
          <target state="translated">모든 선택기 ( &quot;*&quot;)</target>
        </trans-unit>
        <trans-unit id="6bb0e22a27a7cedd9aaebd3c2389cfcb18bb2211" translate="yes" xml:space="preserve">
          <source>All selectors are accepted inside &lt;code&gt;:not()&lt;/code&gt;, for example: &lt;code&gt;:not(div a)&lt;/code&gt; and &lt;code&gt;:not(div,a)&lt;/code&gt;.</source>
          <target state="translated">모든 선택기는 &lt;code&gt;:not()&lt;/code&gt; 안에 허용됩니다 ( 예 : &lt;code&gt;:not(div a)&lt;/code&gt; 및 &lt;code&gt;:not(div,a)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81c8af7bd623fc0837e9261cd24e4558aee91a90" translate="yes" xml:space="preserve">
          <source>All strings have a length property.</source>
          <target state="translated">모든 문자열에는 길이 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="283cd48c97fa361d5fab5a9492a8d605c83ee9ae" translate="yes" xml:space="preserve">
          <source>All subsequent Ajax calls using any function will use the new settings, unless overridden by the individual calls, until the next invocation of &lt;code&gt;$.ajaxSetup()&lt;/code&gt;.</source>
          <target state="translated">다음에 &lt;code&gt;$.ajaxSetup()&lt;/code&gt; 호출 할 때까지 개별 호출로 대체되지 않는 한, 함수를 사용하는 모든 후속 Ajax 호출은 새 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="cb381b30d3148c2a47b170f0b32e4bbb5ad0b8c6" translate="yes" xml:space="preserve">
          <source>Allow the current environment to be recognized as &quot;local,&quot; (e.g. the filesystem), even if jQuery does not recognize it as such by default. The following protocols are currently recognized as local: &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;*-extension&lt;/code&gt;, and &lt;code&gt;widget&lt;/code&gt;. If the &lt;code&gt;isLocal&lt;/code&gt; setting needs modification, it is recommended to do so once in the &lt;code&gt;$.ajaxSetup()&lt;/code&gt; method. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5.1/&quot;&gt;1.5.1&lt;/a&gt;)</source>
          <target state="translated">jQuery가 기본적으로 인식하지 않더라도 현재 환경이 &quot;로컬&quot;(예 : 파일 시스템)로 인식되도록합니다. &lt;code&gt;file&lt;/code&gt; , &lt;code&gt;*-extension&lt;/code&gt; 및 &lt;code&gt;widget&lt;/code&gt; 프로토콜은 현재 로컬로 인식됩니다 . 경우 &lt;code&gt;isLocal&lt;/code&gt; 설정 변경이 필요, 그렇게 한 번 할 것을 권장합니다 &lt;code&gt;$.ajaxSetup()&lt;/code&gt; 방법. (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.5.1/&quot;&gt;1.5.1&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="5d695adedf50969dffe6a3a9571817cffc116132" translate="yes" xml:space="preserve">
          <source>Allow the request to be successful only if the response has changed since the last request. This is done by checking the Last-Modified header. Default value is &lt;code&gt;false&lt;/code&gt;, ignoring the header. In jQuery 1.4 this technique also checks the 'etag' specified by the server to catch unmodified data.</source>
          <target state="translated">마지막 요청 이후 응답이 변경된 경우에만 요청이 성공하도록 허용하십시오. Last-Modified 헤더를 확인하면됩니다. 헤더를 무시하고 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. jQuery 1.4에서이 기술은 수정되지 않은 데이터를 포착하기 위해 서버가 지정한 'etag'도 검사합니다.</target>
        </trans-unit>
        <trans-unit id="8d1d3f1e511534dcb1aeb19ce968a6710d15e68a" translate="yes" xml:space="preserve">
          <source>Also, jQuery can equally interpret the CSS and DOM formatting of multiple-word properties. For example, jQuery understands and returns the correct value for both &lt;code&gt;.css( &quot;background-color&quot; )&lt;/code&gt; and &lt;code&gt;.css( &quot;backgroundColor&quot; )&lt;/code&gt;. This means mixed case has a special meaning, &lt;code&gt;.css( &quot;WiDtH&quot; )&lt;/code&gt; won't do the same as &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt;, for example.</source>
          <target state="translated">또한 jQuery는 여러 단어 속성의 CSS 및 DOM 형식을 동일하게 해석 할 수 있습니다. 예를 들어 jQuery는 &lt;code&gt;.css( &quot;background-color&quot; )&lt;/code&gt; 및 &lt;code&gt;.css( &quot;backgroundColor&quot; )&lt;/code&gt; 모두에 대한 올바른 값을 이해하고 반환합니다 . 이는 대소 문자 혼합에 특별한 의미가 있음을 의미 합니다. 예를 들어 &lt;code&gt;.css( &quot;WiDtH&quot; )&lt;/code&gt; 는 &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt; 와 동일하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d67b0c23698c2f9e897edbb1f6880128a530c89f" translate="yes" xml:space="preserve">
          <source>Also, jQuery can equally interpret the CSS and DOM formatting of multiple-word properties. For example, jQuery understands and returns the correct value for both &lt;code&gt;.css({ &quot;background-color&quot;: &quot;#ffe&quot;, &quot;border-left&quot;: &quot;5px solid #ccc&quot; })&lt;/code&gt; and &lt;code&gt;.css({backgroundColor: &quot;#ffe&quot;, borderLeft: &quot;5px solid #ccc&quot; })&lt;/code&gt;. Notice that with the DOM notation, quotation marks around the property names are optional, but with CSS notation they're required due to the hyphen in the name.</source>
          <target state="translated">또한 jQuery는 여러 단어 속성의 CSS 및 DOM 형식을 동일하게 해석 할 수 있습니다. 예를 들어 jQuery는 &lt;code&gt;.css({ &quot;background-color&quot;: &quot;#ffe&quot;, &quot;border-left&quot;: &quot;5px solid #ccc&quot; })&lt;/code&gt; 및 &lt;code&gt;.css({backgroundColor: &quot;#ffe&quot;, borderLeft: &quot;5px solid #ccc&quot; })&lt;/code&gt; 모두에 대한 올바른 값을 이해하고 반환합니다 . ffe &quot;, borderLeft :&quot;5px solid #ccc &quot;}) . DOM 표기법의 경우 속성 이름 주위의 따옴표는 선택 사항이지만 CSS 표기법의 경우 이름의 하이픈으로 인해 필요합니다.</target>
        </trans-unit>
        <trans-unit id="de1564f9eba7b2cff5e05337544ac039c4f1e7d0" translate="yes" xml:space="preserve">
          <source>Alternative way to pass data through an event object:</source>
          <target state="translated">이벤트 객체를 통해 데이터를 전달하는 다른 방법 :</target>
        </trans-unit>
        <trans-unit id="9733efd7d82ebf41277dc79e0322e17b4a7145be" translate="yes" xml:space="preserve">
          <source>Alternatively, you could define a new method that uses the more flexible &lt;code&gt;$.ajax()&lt;/code&gt; method.</source>
          <target state="translated">또는보다 유연한 &lt;code&gt;$.ajax()&lt;/code&gt; 메서드 를 사용하는 새 메서드를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a51558f8b5e860de61cb60a813f01f6aca4ddb1a" translate="yes" xml:space="preserve">
          <source>Although the XHR object is a standard, there are variations in its behavior on different browsers. Refer to the WHATWG site and Mozilla Developer Network for more information:</source>
          <target state="translated">XHR 개체는 표준이지만 브라우저마다 동작에 차이가 있습니다. 자세한 정보는 WHATWG 사이트 및 Mozilla 개발자 네트워크를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1065641ea0d7d77abdf206bc0e7a90026f8e3a18" translate="yes" xml:space="preserve">
          <source>Although the new paragraph has been created and its background color changed, it still does not appear on the page. To place it on the page, we could add one of the insertion methods to the chain.</source>
          <target state="translated">새 단락이 만들어지고 배경색이 변경되었지만 여전히 페이지에 나타나지 않습니다. 페이지에 배치하기 위해 삽입 방법 중 하나를 체인에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fff222df1aaf071c62cd8af31c31f5a7ac004b8" translate="yes" xml:space="preserve">
          <source>Although their resulting selections are usually the same, &lt;code&gt;:enabled&lt;/code&gt; selector is subtly different from &lt;code&gt;:not([disabled])&lt;/code&gt;; &lt;code&gt;:enabled&lt;/code&gt; selects elements that have their boolean disabled property strictly equal to false, while &lt;code&gt;:not([disabled])&lt;/code&gt; selects elements that do not have a disabled &lt;em&gt;attribute&lt;/em&gt; set (regardless of its value).</source>
          <target state="translated">선택 결과는 일반적으로 동일하지만 &lt;code&gt;:enabled&lt;/code&gt; 선택기는 &lt;code&gt;:not([disabled])&lt;/code&gt; 와 약간 다릅니다 . &lt;code&gt;:enabled&lt;/code&gt; 는 부울 disabled 속성이 false와 엄격하게 동일한 요소를 선택하는 반면 &lt;code&gt;:not([disabled])&lt;/code&gt; 는 비활성화 된 &lt;em&gt;속성&lt;/em&gt; 세트 가없는 요소 (값에 관계없이)를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="eb7133d491fa8746ca68cb50d390f93a0c44cee9" translate="yes" xml:space="preserve">
          <source>Although their resulting selections are usually the same, the &lt;code&gt;:disabled&lt;/code&gt; selector is subtly different from the &lt;code&gt;[disabled]&lt;/code&gt; attribute selector;&lt;code&gt;:disabled&lt;/code&gt; matches elements that are &lt;a href=&quot;https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements&quot;&gt;actually disabled&lt;/a&gt; while &lt;code&gt;[disabled]&lt;/code&gt; only checks for the existence of the disabled attribute.</source>
          <target state="translated">선택 결과는 일반적으로 동일하지만 &lt;code&gt;:disabled&lt;/code&gt; 선택기는 &lt;code&gt;[disabled]&lt;/code&gt; 속성 선택기와 미묘하게 다릅니다 . &lt;code&gt;:disabled&lt;/code&gt; 는 &lt;a href=&quot;https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements&quot;&gt;실제로 비활성화 된&lt;/a&gt; 요소와 일치 하지만 &lt;code&gt;[disabled]&lt;/code&gt; 는 disabled 특성이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="aea1345bafb1d0bee4ddbfdd61a79acd6cf14775" translate="yes" xml:space="preserve">
          <source>Although this category is referred to as 'internal', any methods documented within the API site should be considered public and may be freely used.</source>
          <target state="translated">이 범주를 '내부'라고하지만 API 사이트에 문서화 된 모든 방법은 공개 된 것으로 간주하여 자유롭게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3db99a0ce96fa54a74629ff0285d5bfb76b3f16" translate="yes" xml:space="preserve">
          <source>An HTML fragment to add to the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에 추가 할 HTML 조각입니다.</target>
        </trans-unit>
        <trans-unit id="269a14ab868b71bddaa3b4f5eda59baf3cb076d2" translate="yes" xml:space="preserve">
          <source>An HTML snippet, selector expression, jQuery object, or DOM element specifying the structure to wrap around the content of the matched elements.</source>
          <target state="translated">일치하는 요소의 컨텐츠를 랩핑 할 구조를 지정하는 HTML 스 니펫, 선택기 표현식, jQuery 오브젝트 또는 DOM 요소</target>
        </trans-unit>
        <trans-unit id="ec43e6a2e9cdc032cf89120d1645ac4ffa90446f" translate="yes" xml:space="preserve">
          <source>An alias for &lt;code&gt;method&lt;/code&gt;. You should use &lt;code&gt;type&lt;/code&gt; if you're using versions of jQuery prior to 1.9.0.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; 의 별명입니다 . 1.9.0 이전 버전의 jQuery를 사용하는 경우 &lt;code&gt;type&lt;/code&gt; 을 사용해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="4c5ae6da59dd8550169f1da09f18c267f567ac39" translate="yes" xml:space="preserve">
          <source>An alternate way to achieve the above example using an element rather than a jQuery object. Checks against an existing collection of alternating list elements. Blue, alternating list elements slide up while others turn red.</source>
          <target state="translated">jQuery 객체가 아닌 요소를 사용하여 위 예제를 달성하는 다른 방법입니다. 기존의 대체 목록 요소 컬렉션을 검사합니다. 파란색, 교대되는 목록 요소가 위로 올라가고 나머지는 빨간색으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="7366d7bc4562afa81a378487d5c9368eb228ed0d" translate="yes" xml:space="preserve">
          <source>An alternative construct to the complete callback option, the &lt;code&gt;.always()&lt;/code&gt; method replaces the deprecated &lt;code&gt;.complete()&lt;/code&gt; method.</source>
          <target state="translated">전체 콜백 옵션에 대한 대체 구문 인 &lt;code&gt;.always()&lt;/code&gt; 메소드는 더 이상 사용되지 않는 &lt;code&gt;.complete()&lt;/code&gt; 메소드를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="9c146b1bb12f6f42e44c7985e63c8bc8bff2d461" translate="yes" xml:space="preserve">
          <source>An alternative construct to the error callback option, the &lt;code&gt;.fail()&lt;/code&gt; method replaces the deprecated &lt;code&gt;.error()&lt;/code&gt; method. Refer to &lt;code&gt;&lt;a href=&quot;deferred.fail&quot;&gt;deferred.fail()&lt;/a&gt;&lt;/code&gt; for implementation details.</source>
          <target state="translated">오류 콜백 옵션의 대체 구성 인 &lt;code&gt;.fail()&lt;/code&gt; 메소드는 더 이상 사용되지 않는 &lt;code&gt;.error()&lt;/code&gt; 메소드를 대체합니다 . 구현 세부 사항 은 &lt;code&gt;&lt;a href=&quot;deferred.fail&quot;&gt;deferred.fail()&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dd1c9001b07ef10bfada9aa1caa0e1af065ce9ea" translate="yes" xml:space="preserve">
          <source>An alternative construct to the success callback option, refer to &lt;code&gt;&lt;a href=&quot;deferred.done&quot;&gt;deferred.done()&lt;/a&gt;&lt;/code&gt; for implementation details.</source>
          <target state="translated">성공 콜백 옵션의 대체 구성 은 구현 세부 정보는 &lt;code&gt;&lt;a href=&quot;deferred.done&quot;&gt;deferred.done()&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="766fc34a62672ad391c7ca9632b1d9e3518fdeb8" translate="yes" xml:space="preserve">
          <source>An ancestor element is hidden, so the element is not shown on the page.</source>
          <target state="translated">조상 요소가 숨겨져 있으므로 요소가 페이지에 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f46d9103cf06d8d84bfb6ab464482d281ea6ef7" translate="yes" xml:space="preserve">
          <source>An array containing a set of DOM elements to wrap in a jQuery object.</source>
          <target state="translated">jQuery 객체를 래핑 할 DOM 요소 집합을 포함하는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="c04e518fe1288226c83e383869aefefeec1878ee" translate="yes" xml:space="preserve">
          <source>An array has a length property that is useful for iteration:</source>
          <target state="translated">배열에는 반복에 유용한 length 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5957d19e2fdc07469f8936b52e0dec11c033c64e" translate="yes" xml:space="preserve">
          <source>An array of classes to be added to the class attribute of each matched element.</source>
          <target state="translated">일치하는 각 요소의 클래스 속성에 추가 할 클래스 배열입니다.</target>
        </trans-unit>
        <trans-unit id="5a6753c835d165fa6d8917875b31c3d84828290b" translate="yes" xml:space="preserve">
          <source>An array of classes to be removed from the class attribute of each matched element.</source>
          <target state="translated">일치하는 각 요소의 클래스 속성에서 제거 할 클래스 배열입니다.</target>
        </trans-unit>
        <trans-unit id="cd4398f53254161edfeed077991f5e15ca76c913" translate="yes" xml:space="preserve">
          <source>An array of classes to be toggled for each element in the matched set.</source>
          <target state="translated">일치하는 집합의 각 요소에 대해 전환 할 클래스 배열입니다.</target>
        </trans-unit>
        <trans-unit id="30e3b41927450d20c992b8534a8e18118eb2a3f9" translate="yes" xml:space="preserve">
          <source>An array of elements to push onto the stack and make into a new jQuery object.</source>
          <target state="translated">스택에 푸시하고 새로운 jQuery 객체로 만들 요소의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="cbaabba11ff398fd16e5e65656d7160cd2b791bf" translate="yes" xml:space="preserve">
          <source>An array of functions to replace the current queue contents.</source>
          <target state="translated">현재 큐 내용을 대체하는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b45d8e8ebf9ac1035efa09dd65337d89d7c54d1f" translate="yes" xml:space="preserve">
          <source>An array of one or more CSS properties.</source>
          <target state="translated">하나 이상의 CSS 속성 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ad8846c656b44b0174146886a31eb3210aa74373" translate="yes" xml:space="preserve">
          <source>An array or array-like object of arguments to pass to the callbacks in the list. If omitted or undefined, no arguments will be passed.</source>
          <target state="translated">리스트의 콜백에 전달할 인수의 배열 또는 배열 유사 객체입니다. 생략되거나 정의되지 않으면 인수가 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="980db8b0bb417f1db2ab33779be545ecf5c778bf" translate="yes" xml:space="preserve">
          <source>An array or space-separated string naming the pieces of data to delete.</source>
          <target state="translated">삭제할 데이터를 명명하는 배열 또는 공백으로 구분 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e87bff7c74fa68535e1da27eaaa6721787993de0" translate="yes" xml:space="preserve">
          <source>An array or string containing a selector expression to match elements against (can also be a jQuery object).</source>
          <target state="translated">요소를 일치시키기 위해 선택기 표현식을 포함하는 배열 또는 문자열입니다 (jQuery 객체 일 수도 있음).</target>
        </trans-unit>
        <trans-unit id="82c0f9a7a89886fb732ee3d538f30a92a656511d" translate="yes" xml:space="preserve">
          <source>An array through which to search.</source>
          <target state="translated">검색 할 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ca2b0d1cb96e1c2dccd118fbad1285396463214e" translate="yes" xml:space="preserve">
          <source>An array, a plain object, or a jQuery object to serialize.</source>
          <target state="translated">직렬화 할 배열, 일반 객체 또는 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="978707ecb865c7e53f4968940d70c061ac17f6d6" translate="yes" xml:space="preserve">
          <source>An array, no matter if it has elements or not, never defaults to false:</source>
          <target state="translated">배열은 요소가 있는지 여부에 관계없이 기본적으로 false로 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5db10efb8e853ae179d6303731d3f49dc9e08cbb" translate="yes" xml:space="preserve">
          <source>An attribute to remove; as of version 1.7, it can be a space-separated list of attributes.</source>
          <target state="translated">제거 할 속성. 버전 1.7부터는 공백으로 구분 된 속성 목록 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ceac2281cba43c44095b385b1fde3ab0b079f6c" translate="yes" xml:space="preserve">
          <source>An element could also be selected as the replacement:</source>
          <target state="translated">대체품으로 요소를 선택할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2fc7f7fbdc8724603650a944df7c546ca9ffbdf" translate="yes" xml:space="preserve">
          <source>An element in the DOM can also be selected and inserted after another element:</source>
          <target state="translated">DOM의 요소를 선택하고 다른 요소 다음에 삽입 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="30148b85dab23a15c447f036b9752c58adc980cf" translate="yes" xml:space="preserve">
          <source>An element in the Document Object Model (DOM) can have attributes, text, and children. It provides methods to traverse the parent and children and to get access to its attributes. Due to inconsistencies in DOM API specifications and implementations, however, those methods can be a challenge to use. jQuery provides a &quot;wrapper&quot; around those elements to help interacting with the DOM. But sometimes you will be working directly with DOM elements, or see methods that (also) accept DOM elements as arguments.</source>
          <target state="translated">DOM (Document Object Model)의 요소는 속성, 텍스트 및 하위를 가질 수 있습니다. 부모와 자식을 순회하고 해당 속성에 액세스하는 방법을 제공합니다. 그러나 DOM API 사양과 구현에 불일치가 있기 때문에 이러한 방법을 사용하기 어려울 수 있습니다. jQuery는 이러한 요소 주위에 &quot;래퍼&quot;를 제공하여 DOM과의 상호 작용을 돕습니다. 그러나 때로는 DOM 요소로 직접 작업하거나 DOM 요소를 인수로 받아들이는 메소드를 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="922c8e7a90c5ea29cc712e40f6e8e397a8c98777" translate="yes" xml:space="preserve">
          <source>An element or a jQuery object to match elements against.</source>
          <target state="translated">요소를 비교할 요소 또는 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4dc80181edd1d9236c3644bfd87a9d125b6b3e5f" translate="yes" xml:space="preserve">
          <source>An element should be connected to the DOM when calling &lt;code&gt;.css()&lt;/code&gt; on it. If it isn't, jQuery may throw an error.</source>
          <target state="translated">&lt;code&gt;.css()&lt;/code&gt; 를 호출 할 때 요소가 DOM에 연결되어 있어야 합니다. 그렇지 않으면 jQuery에서 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97dfe9c3afe9d7cde1e581d39fcc0325e6a8b9ff" translate="yes" xml:space="preserve">
          <source>An element to match elements against.</source>
          <target state="translated">요소를 비교할 요소입니다.</target>
        </trans-unit>
        <trans-unit id="a9089c00aaaf252c2a707ed96bbe0bc14f75f438" translate="yes" xml:space="preserve">
          <source>An empty function.</source>
          <target state="translated">빈 함수입니다.</target>
        </trans-unit>
        <trans-unit id="4a272c6be8b8c6dfeaa6c9f401c7c6f63d5b6555" translate="yes" xml:space="preserve">
          <source>An empty string defaults to false:</source>
          <target state="translated">빈 문자열의 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="f4302a2953a7ece03d9a5db8f0c0ea0c51051c0a" translate="yes" xml:space="preserve">
          <source>An equivalent selector to &lt;code&gt;$( &quot;:button&quot; )&lt;/code&gt; using valid CSS is &lt;code&gt;$( &quot;button, input[type='button']&quot; )&lt;/code&gt;.</source>
          <target state="translated">유효한 CSS를 사용 하는 &lt;code&gt;$( &quot;:button&quot; )&lt;/code&gt; 와 동등한 선택기 는 &lt;code&gt;$( &quot;button, input[type='button']&quot; )&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="71c2be1387d3eeafb41f4dc2950ddbc2ed23c53b" translate="yes" xml:space="preserve">
          <source>An error can also be thrown by the engine under some circumstances. For example, when trying to access a property of &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">경우에 따라 엔진에서 오류가 발생할 수도 있습니다. 예를 들어, &lt;code&gt;null&lt;/code&gt; 속성에 액세스하려고 할 때 :</target>
        </trans-unit>
        <trans-unit id="bd7f8a3305b0cd5b9f8242b1ca1147142048f55e" translate="yes" xml:space="preserve">
          <source>An error thrown in the function wrapped in &lt;code&gt;jQuery()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;jQuery()&lt;/code&gt; 래핑 된 함수에서 오류가 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="928db9fc6a777865c2d660f55fcf2aaf1b8465e8" translate="yes" xml:space="preserve">
          <source>An event name can be qualified by &lt;em&gt;event namespaces&lt;/em&gt; that simplify removing or triggering the event. For example, &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; defines both the myPlugin and simple namespaces for this particular click event. A click event handler attached via that string could be removed with &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; or &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; without disturbing other click handlers attached to the elements. Namespaces are similar to CSS classes in that they are not hierarchical; only one name needs to match. Namespaces beginning with an underscore are reserved for jQuery's use.</source>
          <target state="translated">이벤트 이름은 &lt;em&gt;이벤트&lt;/em&gt; 제거 또는 트리거를 단순화하는 &lt;em&gt;이벤트 네임 스페이스&lt;/em&gt; 로 규정 될 수 있습니다 . 예를 들어 &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; 은이 특정 클릭 이벤트에 대한 myPlugin 및 단순 네임 스페이스를 모두 정의합니다. 해당 문자열을 통해 연결된 클릭 이벤트 핸들러 는 요소에 연결된 다른 클릭 핸들러를 방해하지 않고 &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; 또는 &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; 로 제거 할 수 있습니다 . 네임 스페이스는 계층 적이 지 않다는 점에서 CSS 클래스와 유사합니다. 하나의 이름 만 일치하면됩니다. 밑줄로 시작하는 네임 스페이스는 jQuery 사용을 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f099e35301146d7b803ea51b01a3f6018d45ae73" translate="yes" xml:space="preserve">
          <source>An event name can be qualified by &lt;em&gt;event namespaces&lt;/em&gt; that simplify removing or triggering the event. For example, &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; defines both the myPlugin and simple namespaces for this particular click event. A click event handler attached via that string could be removed with &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; or &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; without disturbing other click handlers attached to the elements. Namespaces are similar to CSS classes in that they are not hierarchical; only one name needs to match. Namespaces should contain upper/lowercase letters and digits only.</source>
          <target state="translated">이벤트 이름은 &lt;em&gt;이벤트&lt;/em&gt; 제거 또는 트리거를 단순화하는 &lt;em&gt;이벤트 네임 스페이스&lt;/em&gt; 로 한정 될 수 있습니다 . 예를 들어, &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; 은이 특정 클릭 이벤트에 대한 myPlugin 및 단순 네임 스페이스를 모두 정의합니다. 해당 문자열을 통해 연결된 클릭 이벤트 처리기 는 요소에 연결된 다른 클릭 처리기를 방해하지 않고 &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; 또는 &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; 로 제거 할 수 있습니다 . 네임 스페이스는 계층 적이 지 않다는 점에서 CSS 클래스와 유사합니다. 하나의 이름 만 일치하면됩니다. 네임 스페이스에는 대문자 / 소문자와 숫자 만 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c96e3939eb6119ee7b0a6cd65229a682ec69be3c" translate="yes" xml:space="preserve">
          <source>An event-delegation approach attaches an event handler to only one element, the tbody, and the event only needs to bubble up one level (from the clicked &lt;code&gt;tr&lt;/code&gt; to &lt;code&gt;tbody&lt;/code&gt;):</source>
          <target state="translated">이벤트 위임 접근법은 이벤트 핸들러를 하나의 요소 tbody에만 연결하며 이벤트는 클릭 한 &lt;code&gt;tr&lt;/code&gt; 에서 &lt;code&gt;tbody&lt;/code&gt; 로 한 레벨 만 버블 링해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4afa3002569ea926dd550058ca5036368da05c5a" translate="yes" xml:space="preserve">
          <source>An example of this is a test against &lt;code&gt;document.location&lt;/code&gt; using &lt;code&gt;$.isPlainObject()&lt;/code&gt; as follows:</source>
          <target state="translated">이에 대한 예는 다음과 같이 &lt;code&gt;$.isPlainObject()&lt;/code&gt; 를 사용하여 &lt;code&gt;document.location&lt;/code&gt; 에 대한 테스트입니다 .</target>
        </trans-unit>
        <trans-unit id="fc41df76082729861611e0284199427fd491754f" translate="yes" xml:space="preserve">
          <source>An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function. Note, this code will do nothing unless the paragraph element is hidden.</source>
          <target state="translated">다른 스타일의 애니메이션을 제공하기 위해 '여유'기능을 사용하는 예입니다. 이 여유 기능을 제공하는 플러그인이있는 경우에만 작동합니다. 이 코드는 단락 요소가 숨겨져 있지 않으면 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb00ab2592cc87a429b5829e35aa5bac7d994386" translate="yes" xml:space="preserve">
          <source>An existing jQuery object to add to the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에 추가 할 기존 jQuery 객체.</target>
        </trans-unit>
        <trans-unit id="a64eb83f461ec9a2d4658ad1ebbad90d0c2b614b" translate="yes" xml:space="preserve">
          <source>An existing jQuery object to clone.</source>
          <target state="translated">복제 할 기존 jQuery 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f8ac91678c3faa3942170f78efbaa96993d8b6fa" translate="yes" xml:space="preserve">
          <source>An existing jQuery object to match the current set of elements against.</source>
          <target state="translated">현재 요소 세트와 일치하는 기존 jQuery 객체.</target>
        </trans-unit>
        <trans-unit id="a223855e51555d7b6124b53fd9b477d245f82384" translate="yes" xml:space="preserve">
          <source>An instance of an Error object is thrown as an exception when a runtime error occurs. Error can also be used as base to define user custom exception classes. In JavaScript an error can be thrown as shown below:</source>
          <target state="translated">런타임 오류가 발생하면 Error 객체의 인스턴스가 예외로 발생합니다. 오류는 사용자 정의 예외 클래스를 정의하기위한 기반으로 사용될 수도 있습니다. JavaScript에서 아래와 같이 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e6b7e6fa0fd9412f3dc1bbd9c814f6a3d98e01e" translate="yes" xml:space="preserve">
          <source>An integer indicating the 0-based position at which the elements begin to be selected. If negative, it indicates an offset from the end of the set.</source>
          <target state="translated">요소가 선택되기 시작하는 0 기반 위치를 나타내는 정수입니다. 음수 인 경우 세트 끝에서 오프셋을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4a7a97beec7a572bfb8ba925554949c159c98185" translate="yes" xml:space="preserve">
          <source>An integer indicating the 0-based position at which the elements stop being selected. If negative, it indicates an offset from the end of the set. If omitted, the range continues until the end of the set.</source>
          <target state="translated">요소 선택이 중지되는 0 기준 위치를 나타내는 정수입니다. 음수 인 경우 세트 끝에서 오프셋을 나타냅니다. 생략하면 범위는 세트가 끝날 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="72acde568da51e8edcd5e4832db44114a464bdfb" translate="yes" xml:space="preserve">
          <source>An integer indicating the 0-based position of the element.</source>
          <target state="translated">요소의 0 기반 위치를 나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="0061630ad9695b9d25344ff2d5564376e4b848e0" translate="yes" xml:space="preserve">
          <source>An integer indicating the new position to set the scroll bar to.</source>
          <target state="translated">스크롤 바를 설정할 새로운 위치를 나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="ba8db9672051510c1526f62ce05901b75ecb7758" translate="yes" xml:space="preserve">
          <source>An integer indicating the number of milliseconds to delay execution of the next item in the queue.</source>
          <target state="translated">큐에서 다음 항목의 실행을 지연시키는 시간 (밀리 초)을 나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="1e018f035824e90fa4b2628ed81a25bb06f924e2" translate="yes" xml:space="preserve">
          <source>An integer indicating the position of the element, counting backwards from the last element in the set.</source>
          <target state="translated">집합의 마지막 요소부터 거꾸로 세면서 요소의 위치를 ​​나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="9882475293cc26b7a8ea4a8a8237c46c4aa1ac60" translate="yes" xml:space="preserve">
          <source>An integer is a plain Number type, but whenever explicitly mentioned, indicates that a non-floating-point number is expected.</source>
          <target state="translated">정수는 일반 숫자 유형이지만 명시 적으로 언급 될 때마다 부동 소수점 숫자가 예상됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ab1ad08270278401573b013aa2d31d59dea6a909" translate="yes" xml:space="preserve">
          <source>An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).</source>
          <target state="translated">픽셀 수를 나타내는 정수 또는 추가 된 측정 단위 (문자열)와 함께 정수입니다.</target>
        </trans-unit>
        <trans-unit id="8a86ea48edeb4a031904db76363a1c0e171711ff" translate="yes" xml:space="preserve">
          <source>An integer representing the number of pixels, or an integer with an optional unit of measure appended (as a string).</source>
          <target state="translated">픽셀 수를 나타내는 정수 또는 선택적 측정 단위가 추가 된 정수 (문자열)</target>
        </trans-unit>
        <trans-unit id="be5c76eef18779333c7dbbc7bf9f70ad731d34a7" translate="yes" xml:space="preserve">
          <source>An object containing additional properties to merge in.</source>
          <target state="translated">병합 할 추가 속성이 포함 된 객체입니다.</target>
        </trans-unit>
        <trans-unit id="21a9b5cccc7c150baf9479a95a728e5a79271329" translate="yes" xml:space="preserve">
          <source>An object containing all CSS properties that may be used without a unit. The .css() method uses this object to see if it may append px to unitless values.</source>
          <target state="translated">단위없이 사용할 수있는 모든 CSS 속성을 포함하는 객체입니다. .css () 메서드는이 객체를 사용하여 px를 단위없는 값에 추가 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c0f7dc7452be24af322a78b7e9c2c9f73ae0edc9" translate="yes" xml:space="preserve">
          <source>An object containing data that will be passed to the event handler.</source>
          <target state="translated">이벤트 핸들러로 전달 될 데이터를 포함하는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="864fc8ef6fc75e4ce488064cc0f17b3a09c86d97" translate="yes" xml:space="preserve">
          <source>An object containing dataType-to-dataType converters. Each converter's value is a function that returns the transformed value of the response. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">dataType-to-dataType 변환기를 포함하는 오브젝트입니다. 각 변환기의 값은 변환 된 응답 값을 반환하는 함수입니다. (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="8b820f7085f21c973295edee5dad08662b885693" translate="yes" xml:space="preserve">
          <source>An object containing one or more DOM event types and functions to execute for them.</source>
          <target state="translated">실행할 하나 이상의 DOM 이벤트 유형 및 함수를 포함하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1dfdacc858f3acb0ffd3b94803f144f8505d2faf" translate="yes" xml:space="preserve">
          <source>An object containing one or more of the CSS properties defined by the properties argument and their corresponding easing functions. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.4/&quot;&gt;1.4&lt;/a&gt;)</source>
          <target state="translated">properties 인수 및 해당 여유 함수로 정의 된 하나 이상의 CSS 특성을 포함하는 오브젝트입니다. (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.4/&quot;&gt;1.4&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3497c52e084b86b109b2df302f3c16b0ae1513d8" translate="yes" xml:space="preserve">
          <source>An object containing the properties &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;, which are numbers indicating the new top and left coordinates for the elements.</source>
          <target state="translated">&lt;code&gt;top&lt;/code&gt; 및 &lt;code&gt;left&lt;/code&gt; 속성을 포함하는 객체 로, 요소의 새로운 상단 및 왼쪽 좌표를 나타내는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="53214e64070ead40b51fb4bc19345885c476118a" translate="yes" xml:space="preserve">
          <source>An object in which the string keys represent one or more space-separated event types and optional namespaces, and the values represent a handler function to be called for the event(s).</source>
          <target state="translated">문자열 키가 하나 이상의 공백으로 구분 된 이벤트 유형 및 선택적 네임 스페이스를 나타내는 오브젝트이며 값은 이벤트에 대해 호출 될 핸들러 함수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6d635fc9868c04b2999b49a3d5867d850bf4d5c8" translate="yes" xml:space="preserve">
          <source>An object of CSS properties and values that the animation will move toward.</source>
          <target state="translated">애니메이션이 이동할 CSS 속성 및 값의 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a78d38eb72874d64dbaa0e7085e7130dd75a581b" translate="yes" xml:space="preserve">
          <source>An object of additional header key/value pairs to send along with requests using the XMLHttpRequest transport. The header &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; is always added, but its default &lt;code&gt;XMLHttpRequest&lt;/code&gt; value can be changed here. Values in the &lt;code&gt;headers&lt;/code&gt; setting can also be overwritten from within the &lt;code&gt;beforeSend&lt;/code&gt; function. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">XMLHttpRequest 전송을 사용하여 요청과 함께 보낼 추가 헤더 키 / 값 쌍의 객체입니다. &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; 헤더 는 항상 추가되지만 기본 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 값은 여기에서 변경할 수 있습니다. &lt;code&gt;beforeSend&lt;/code&gt; 함수 내에서 &lt;code&gt;headers&lt;/code&gt; 설정의 값을 덮어 쓸 수도 있습니다 . (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="c55fe5b1d672ba68926478a01a9ae434208e2bd8" translate="yes" xml:space="preserve">
          <source>An object of attribute-value pairs to set.</source>
          <target state="translated">설정할 속성-값 쌍의 객체입니다.</target>
        </trans-unit>
        <trans-unit id="48f8022876f9fc64852a81649056552d0bc0891b" translate="yes" xml:space="preserve">
          <source>An object of attributes, events, and methods to call on the newly-created element.</source>
          <target state="translated">새로 작성된 요소를 호출 할 속성, 이벤트 및 메소드의 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="f63487fec3aa830fd635ba5190736ff149953196" translate="yes" xml:space="preserve">
          <source>An object of fieldName-fieldValue pairs to set on the native &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; object. For example, you can use it to set &lt;code&gt;withCredentials&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for cross-domain requests if needed.</source>
          <target state="translated">기본 &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; 객체 에 설정할 fieldName-fieldValue 쌍의 객체입니다. 예를 들어, 필요한 경우 크로스 도메인 요청에 대해 &lt;code&gt;withCredentials&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a25e58be5c3c80344ddb2a04c8d1e99aabcf641d" translate="yes" xml:space="preserve">
          <source>An object of key-value pairs of data to update.</source>
          <target state="translated">업데이트 할 키-값 쌍의 데이터 객체입니다.</target>
        </trans-unit>
        <trans-unit id="29900764937fc05301237dcf6aacbdccc1b51a45" translate="yes" xml:space="preserve">
          <source>An object of numeric HTTP codes and functions to be called when the response has the corresponding code. For example, the following will alert when the response status is a 404:</source>
          <target state="translated">응답에 해당 코드가있는 경우 호출 할 숫자 HTTP 코드 및 함수의 오브젝트입니다. 예를 들어 다음은 응답 상태가 404 일 때 경고합니다.</target>
        </trans-unit>
        <trans-unit id="f4aae8db752d14632ad189b5fd6b4653950b4443" translate="yes" xml:space="preserve">
          <source>An object of one or more event types and previously bound functions to unbind from them.</source>
          <target state="translated">하나 이상의 이벤트 유형 및 이전에 바인드 된 함수를 바인딩 해제하기위한 오브젝트.</target>
        </trans-unit>
        <trans-unit id="1dc2de63e0eb808b7ce570217ba74ac973436ebe" translate="yes" xml:space="preserve">
          <source>An object of property-value pairs to set.</source>
          <target state="translated">설정할 속성-값 쌍의 개체입니다.</target>
        </trans-unit>
        <trans-unit id="65138e5a2120db36e2ab205a7f9374cec508b514" translate="yes" xml:space="preserve">
          <source>An object of string/regular-expression pairs that determine how jQuery will parse the response, given its content type. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">컨텐츠 유형에 따라 jQuery가 응답을 구문 분석하는 방법을 결정하는 문자열 / 정규 표현식 쌍의 오브젝트입니다. (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="1c5033584e4d431d0c1fe992fd84bccf5a86546b" translate="yes" xml:space="preserve">
          <source>An object that will receive the new properties if additional objects are passed in or that will extend the jQuery namespace if it is the sole argument.</source>
          <target state="translated">추가 객체가 전달되면 새 속성을 받거나 유일한 인수 인 경우 jQuery 네임 스페이스를 확장하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="03587202c0138dae5dee1c411be8fe330f4085e0" translate="yes" xml:space="preserve">
          <source>An object that will receive the new properties.</source>
          <target state="translated">새 속성을받을 개체입니다.</target>
        </trans-unit>
        <trans-unit id="ec625f244735ff0c4e2404484fd608b4827b6c7c" translate="yes" xml:space="preserve">
          <source>An object to merge onto the jQuery namespace.</source>
          <target state="translated">jQuery 네임 스페이스에 병합 할 개체입니다.</target>
        </trans-unit>
        <trans-unit id="92a7187114d7a982682762f96ccdc7011afac950" translate="yes" xml:space="preserve">
          <source>An object to merge onto the jQuery prototype.</source>
          <target state="translated">jQuery 프로토 타입에 병합 할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="179f67e8f4c638bbb574025592e7c0a0291ef31e" translate="yes" xml:space="preserve">
          <source>An object where the string keys represent one or more space-separated event types and optional namespaces, and the values represent handler functions previously attached for the event(s).</source>
          <target state="translated">문자열 키가 하나 이상의 공백으로 구분 된 이벤트 유형 및 선택적 네임 스페이스를 나타내고 오브젝트가 이전에 이벤트에 첨부 된 핸들러 함수를 나타내는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="cd319f4b4a4395c085199213984656bfa55d0fad" translate="yes" xml:space="preserve">
          <source>An object, no matter if it has properties or not, never defaults to false:</source>
          <target state="translated">속성이 있는지 여부에 관계없이 객체의 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="f8af5431b5383aabfe902c95f07964b9d3d1e669" translate="yes" xml:space="preserve">
          <source>An optional array of arguments that are passed to the doneCallbacks.</source>
          <target state="translated">doneCallbacks에 전달되는 선택적 인수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="16b8b8010e15b807ba2ccc5e7e52c076696ef081" translate="yes" xml:space="preserve">
          <source>An optional array of arguments that are passed to the failCallbacks.</source>
          <target state="translated">failCallbacks에 전달되는 선택적 인수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="e374272cd607f631653130ac320f49fd306b444f" translate="yes" xml:space="preserve">
          <source>An optional array of arguments that are passed to the progressCallbacks.</source>
          <target state="translated">progressCallbacks에 전달되는 선택적 인수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b8b5b0ad77a356f8693dc818fb9c07982ee27535" translate="yes" xml:space="preserve">
          <source>An optional function that is called when progress notifications are sent to the Deferred.</source>
          <target state="translated">진행 알림을 연기 된 사람에게 보낼 때 호출되는 선택적 함수입니다.</target>
        </trans-unit>
        <trans-unit id="986aafa946c61f7a9eccaf1739ebe3119b89433a" translate="yes" xml:space="preserve">
          <source>An optional function that is called when the Deferred is rejected.</source>
          <target state="translated">Deferred가 거부 될 때 호출되는 선택적 함수입니다.</target>
        </trans-unit>
        <trans-unit id="ed6d4ce2a49f39fb614c56d269e89c9062cf1ab2" translate="yes" xml:space="preserve">
          <source>An optional function that is called when the Deferred is resolved.</source>
          <target state="translated">지연이 해결 될 때 호출되는 선택적 함수입니다.</target>
        </trans-unit>
        <trans-unit id="d0e92ee3c334b5877b6faa0e643c9936a4c3f330" translate="yes" xml:space="preserve">
          <source>An optional list of space-separated flags that change how the callback list behaves.</source>
          <target state="translated">콜백 목록의 작동 방식을 변경하는 공백으로 구분 된 플래그의 선택적 목록입니다.</target>
        </trans-unit>
        <trans-unit id="c9b367a1b8fe3b48af15d5c2d919282309cc0226" translate="yes" xml:space="preserve">
          <source>An optional object of data passed to an event method when the current executing handler is bound.</source>
          <target state="translated">현재 실행중인 핸들러가 바인드 될 때 이벤트 메소드에 전달 된 선택적 데이터 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="685cf1c91544aae0972cbd933a49ded7a9d55ff7" translate="yes" xml:space="preserve">
          <source>An optional string containing one or more space-separated dataTypes</source>
          <target state="translated">하나 이상의 공백으로 구분 된 데이터 유형을 포함하는 선택적 문자열</target>
        </trans-unit>
        <trans-unit id="9b96b0ee46c2488c791121a6ae7c473814939988" translate="yes" xml:space="preserve">
          <source>And then pass this jQuery object to find:</source>
          <target state="translated">그런 다음이 jQuery 객체를 전달하여 다음을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="10144b895c49492955d9dc2f549739d56834cb60" translate="yes" xml:space="preserve">
          <source>Animate all paragraphs and execute a callback function when the animation is complete. The first argument is an object of CSS properties, the second specifies that the animation should take 1000 milliseconds to complete, the third states the easing type, and the fourth argument is an anonymous callback function.</source>
          <target state="translated">애니메이션이 완료되면 모든 단락에 애니메이션을 적용하고 콜백 함수를 실행하십시오. 첫 번째 인수는 CSS 속성의 객체이고 두 번째 인수는 애니메이션을 완료하는 데 1000 밀리 초가 걸리고 세 번째는 여유 유형을 나타내며 네 번째 인수는 익명의 콜백 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c23eafcf3b4ee6b2fccf4f18ccf3142525e967f4" translate="yes" xml:space="preserve">
          <source>Animate all paragraphs to a left style of 50 and opacity of 1 (opaque, visible), completing the animation within 500 milliseconds.</source>
          <target state="translated">모든 단락을 왼쪽 스타일 50과 불투명도 1 (불투명, 표시)로 애니메이션하여 500 밀리 초 이내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="95814719c69bdd73bac331d35696dfe8e949ecff" translate="yes" xml:space="preserve">
          <source>Animate all paragraphs to toggle both height and opacity, completing the animation within 600 milliseconds.</source>
          <target state="translated">모든 단락에 애니메이션을 적용하여 높이와 불투명도를 전환하여 600 밀리 초 내에 애니메이션을 완성하십시오.</target>
        </trans-unit>
        <trans-unit id="76386f70e1b04570ac1c33175bcc81d8b697fa3a" translate="yes" xml:space="preserve">
          <source>Animate the hiding and showing of two divs, delaying the first before showing it.</source>
          <target state="translated">두 div의 숨기기 및 표시에 애니메이션을 적용하여 표시하기 전에 첫 번째를 지연시킵니다.</target>
        </trans-unit>
        <trans-unit id="fa369b8b4ac2214c80394c520a1a2729aee9f9ce" translate="yes" xml:space="preserve">
          <source>Animate the left and opacity style properties of all paragraphs; run the animation &lt;em&gt;outside&lt;/em&gt; the queue, so that it will automatically start without waiting for its turn.</source>
          <target state="translated">모든 단락의 왼쪽 및 불투명 스타일 속성에 애니메이션을 적용하십시오. 대기열 &lt;em&gt;밖에서&lt;/em&gt; 애니메이션을 실행하여 차례를 기다리지 않고 자동으로 시작되도록합니다.</target>
        </trans-unit>
        <trans-unit id="d300d64323cc6323f5d293cfd6b675e0f36e86ea" translate="yes" xml:space="preserve">
          <source>Animated properties can also be relative. If a value is supplied with a leading &lt;code&gt;+=&lt;/code&gt; or &lt;code&gt;-=&lt;/code&gt; sequence of characters, then the target value is computed by adding or subtracting the given number from the current value of the property.</source>
          <target state="translated">애니메이션 속성도 상대적 일 수 있습니다. 값에 선행 &lt;code&gt;+=&lt;/code&gt; 또는 &lt;code&gt;-=&lt;/code&gt; 문자 시퀀스 가 제공되는 경우 대상 값은 속성의 현재 값에서 주어진 숫자를 더하거나 빼서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="bfbda33c256ff2ebdc8c449b185dc61f6ae41d40" translate="yes" xml:space="preserve">
          <source>Animates a div's left property with a relative value. Click several times on the buttons to see the relative animations queued up.</source>
          <target state="translated">div의 left 속성을 상대 값으로 애니메이션합니다. 버튼을 여러 번 클릭하면 대기중인 상대 애니메이션을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7f9381da4f7c7122bfbfa9d12c698a3b99c44d6" translate="yes" xml:space="preserve">
          <source>Animates all divs to slide down and show themselves over 600 milliseconds.</source>
          <target state="translated">모든 div에 애니메이션을 적용하여 600 밀리 초 이상 표시합니다.</target>
        </trans-unit>
        <trans-unit id="88a39736e69be28978f8c87757d5115a01f3d382" translate="yes" xml:space="preserve">
          <source>Animates all divs to slide up, completing the animation within 400 milliseconds.</source>
          <target state="translated">모든 div를 움직이면 위로 움직이고 애니메이션은 400 밀리 초 내에 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="a0e06fa5d7569e78756ab7f035a51136f7b514d3" translate="yes" xml:space="preserve">
          <source>Animates all hidden paragraphs to show slowly, completing the animation within 600 milliseconds.</source>
          <target state="translated">숨겨진 모든 단락에 애니메이션을 천천히 표시하여 600 밀리 초 내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="b413f3d8a6bef743951e9049fa3b207158b4cf4a" translate="yes" xml:space="preserve">
          <source>Animates all inputs to slide down, completing the animation within 1000 milliseconds. Once the animation is done, the input look is changed especially if it is the middle input which gets the focus.</source>
          <target state="translated">모든 입력을 아래로 슬라이드하여 1000 밀리 초 이내에 애니메이션을 완성합니다. 애니메이션이 완료되면 특히 초점이 맞는 중간 입력 인 경우 입력 모양이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="f37fb99081e59299bcdcbd3f1cb58c2f720404e7" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to be shown if they are hidden and hidden if they are visible, completing the animation within 600 milliseconds.</source>
          <target state="translated">모든 단락이 숨겨 지거나 숨겨져 있으면 표시되도록 애니메이션을 표시하고 600 밀리 초 이내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="a8c55a350e7361689de5e4f9a1438e0a03956323" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to fade out, completing the animation within 600 milliseconds.</source>
          <target state="translated">600 밀리 초 이내에 애니메이션을 완성하여 모든 단락에 페이드 아웃 효과를줍니다.</target>
        </trans-unit>
        <trans-unit id="c713123b72be1b756a9deddb46cf82bff2d084c0" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to slide up or down, completing the animation within 600 milliseconds.</source>
          <target state="translated">모든 단락에 애니메이션을 위나 아래로 움직여 600 밀리 초 이내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="d7dedf422710b7e3223d8a3afe416c02c9969070" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to toggle both height and opacity, completing the animation within 600 milliseconds.</source>
          <target state="translated">모든 단락에 애니메이션을 적용하여 높이와 불투명도를 전환하여 600 밀리 초 내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="3cdfe48246d2e90a3260e8352fb855a73de63b98" translate="yes" xml:space="preserve">
          <source>Animates all shown paragraphs to hide slowly, completing the animation within 600 milliseconds.</source>
          <target state="translated">표시된 모든 단락에 애니메이션을 천천히 숨겨 600 밀리 초 내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="95058e027a898bc0d5368bdca1a39e43061e9a98" translate="yes" xml:space="preserve">
          <source>Animates all spans (words in this case) to hide fastly, completing each animation within 200 milliseconds. Once each animation is done, it starts the next one.</source>
          <target state="translated">모든 범위 (이 경우 단어)에 빠르게 숨겨 애니메이션을 200 밀리 초 내에 완료합니다. 각 애니메이션이 완료되면 다음 애니메이션이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="81fc5b786bf1afbdb485f4c7161bd3c142953c45" translate="yes" xml:space="preserve">
          <source>Animates divs between dividers with a toggle that makes some appear and some disappear.</source>
          <target state="translated">일부가 나타나고 일부가 사라지는 토글을 사용하여 디바이더 사이의 div를 애니메이션합니다.</target>
        </trans-unit>
        <trans-unit id="10cc24048d0415bf3ddef00fec236ba4ae1e1fbc" translate="yes" xml:space="preserve">
          <source>Animates first paragraph to fade to an opacity of 0.33 (33%, about one third visible), completing the animation within 600 milliseconds.</source>
          <target state="translated">첫 번째 단락에 애니메이션을 적용하여 불투명도 0.33 (33 %, 약 1/3 표시)으로 사라지고 600 밀리 초 이내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="4585cd7bae4c5fa3468c022c40f0dc1c2133e973" translate="yes" xml:space="preserve">
          <source>Animates hidden divs to fade in one by one, completing each animation within 600 milliseconds.</source>
          <target state="translated">숨겨진 div에 하나씩 페이드되도록 애니메이션을 적용하여 각 애니메이션을 600 밀리 초 내에 완료합니다.</target>
        </trans-unit>
        <trans-unit id="fbbda23ffa789e0069a007414d761aed088d2e19" translate="yes" xml:space="preserve">
          <source>Animates the first div's left property and synchronizes the remaining divs, using the step function to set their left properties at each stage of the animation.</source>
          <target state="translated">step 함수를 사용하여 첫 번째 div의 왼쪽 속성에 애니메이션을 적용하고 나머지 div를 동기화하여 애니메이션의 각 단계에서 왼쪽 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ff08465a9d9d6db43a8c9f3b2951a883f4bdecd2" translate="yes" xml:space="preserve">
          <source>Animates the parent paragraph to slide up, completing the animation within 200 milliseconds. Once the animation is done, it displays an alert.</source>
          <target state="translated">부모 단락을 위로 움직여 애니메이션을 200 밀리 초 내에 완료합니다. 애니메이션이 완료되면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d044d5dda484f7cfe3f0c114600ea0df5edee907" translate="yes" xml:space="preserve">
          <source>Animating with cssHooks</source>
          <target state="translated">cssHooks로 애니메이션</target>
        </trans-unit>
        <trans-unit id="9d7fcd039acb3115d146b3b9b5d687e0fc0bf119" translate="yes" xml:space="preserve">
          <source>Animation Properties and Values</source>
          <target state="translated">애니메이션 속성 및 값</target>
        </trans-unit>
        <trans-unit id="e084417f183d8c27fe1790a868abfc15ca6682ec" translate="yes" xml:space="preserve">
          <source>Animations can be turned back on by setting the property to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">속성을 &lt;code&gt;false&lt;/code&gt; 로 설정하여 애니메이션을 다시 켤 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e03b16164d90f80e5695ef36d36fb1516d1671fc" translate="yes" xml:space="preserve">
          <source>Animations may be stopped globally by setting the property &lt;code&gt;$.fx.off&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. When this is done, all animation methods will immediately set elements to their final state when called, rather than displaying an effect.</source>
          <target state="translated">&lt;code&gt;$.fx.off&lt;/code&gt; 속성 을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 애니메이션이 전체적으로 중지 될 수 있습니다 . 이렇게하면 모든 애니메이션 메서드가 효과를 표시하지 않고 호출 될 때 즉시 요소를 최종 상태로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="10dfd76e459af9db4799f3ae57670352b3308f61" translate="yes" xml:space="preserve">
          <source>Another method supported by &lt;code&gt;$.Callbacks&lt;/code&gt; is &lt;code&gt;.remove()&lt;/code&gt;, which has the ability to remove a particular callback from the callback list. Here's a practical example of &lt;code&gt;.remove()&lt;/code&gt; being used:</source>
          <target state="translated">&lt;code&gt;$.Callbacks&lt;/code&gt; 가 지원하는 또 다른 메소드 는 &lt;code&gt;.remove()&lt;/code&gt; 이며 콜백 목록에서 특정 콜백을 제거 할 수 있습니다. 사용되는 &lt;code&gt;.remove()&lt;/code&gt; 의 실제 예는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ce3dc0bc4b28abd8100c3f2a3201df80849398d6" translate="yes" xml:space="preserve">
          <source>Another variation defines a variable that is filled for each iteration, removing the array-notation from the loop-body. It does not work when the array contains 0 or empty strings!</source>
          <target state="translated">또 다른 변형은 각 반복에 대해 채워지는 변수를 정의하여 루프 본문에서 배열 표기법을 제거합니다. 배열에 0 또는 빈 문자열이 포함되어 있으면 작동하지 않습니다!</target>
        </trans-unit>
        <trans-unit id="a58b9be75317f07da56cfd29c5db4bff14a98191" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;unload&lt;/code&gt; event handler should be bound to the &lt;code&gt;window&lt;/code&gt; object:</source>
          <target state="translated">모든 &lt;code&gt;unload&lt;/code&gt; 이벤트 핸들러는 &lt;code&gt;window&lt;/code&gt; 객체에 바인딩되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="ef4bb6d9c41ca6c8a34062a59d549e00e4e3b8bd" translate="yes" xml:space="preserve">
          <source>Any event handlers attached with &lt;code&gt;.on()&lt;/code&gt; or one of its shortcut methods are triggered when the corresponding event occurs. They can be fired manually, however, with the &lt;code&gt;.trigger()&lt;/code&gt; method. A call to &lt;code&gt;.trigger()&lt;/code&gt; executes the handlers in the same order they would be if the event were triggered naturally by the user:</source>
          <target state="translated">해당 이벤트가 발생하면 &lt;code&gt;.on()&lt;/code&gt; 또는 해당 바로 가기 메소드 중 하나가 첨부 된 모든 이벤트 핸들러 가 트리거됩니다. 그러나 &lt;code&gt;.trigger()&lt;/code&gt; 메소드를 사용하여 수동으로 실행할 수 있습니다 . &lt;code&gt;.trigger()&lt;/code&gt; 호출 하면 이벤트가 사용자에 의해 자연스럽게 트리거 된 경우와 동일한 순서로 핸들러가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9ccb37ec55250bad5e2796069e93398d6c460ecb" translate="yes" xml:space="preserve">
          <source>Any event names can be used for the &lt;code&gt;events&lt;/code&gt; argument. jQuery will pass through the browser's standard JavaScript event types, calling the &lt;code&gt;handler&lt;/code&gt; function when the browser generates events due to user actions such as &lt;code&gt;click&lt;/code&gt;. In addition, the &lt;a href=&quot;trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; method can trigger both standard browser event names and custom event names to call attached handlers. Event names should only contain alphanumerics, underscore, and colon characters.</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 인수에 모든 이벤트 이름을 사용할 수 있습니다 . jQuery는 &lt;code&gt;click&lt;/code&gt; 과 같은 사용자 작업으로 인해 브라우저가 이벤트를 생성 할 때 &lt;code&gt;handler&lt;/code&gt; 함수를 호출하여 브라우저의 표준 JavaScript 이벤트 유형을 전달합니다 . 또한 &lt;a href=&quot;trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt; 메소드는 표준 브라우저 이벤트 이름과 사용자 정의 이벤트 이름을 모두 트리거하여 첨부 된 핸들러를 호출 할 수 있습니다. 이벤트 이름은 영숫자, 밑줄 및 콜론 문자 만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c324a77dd72e351c6ad051d96e89690b65ab780" translate="yes" xml:space="preserve">
          <source>Any handler that has been attached with &lt;code&gt;.live()&lt;/code&gt; can be removed with &lt;code&gt;.die()&lt;/code&gt;. This method is analogous to calling &lt;code&gt;.off()&lt;/code&gt; with no arguments, which is used to remove all handlers attached with &lt;code&gt;.on()&lt;/code&gt;. See the discussions of &lt;code&gt;.live()&lt;/code&gt; and &lt;code&gt;.off()&lt;/code&gt; for further details.</source>
          <target state="translated">부착 된 상관 처리기 &lt;code&gt;.live()&lt;/code&gt; 제거 할 수 &lt;code&gt;.die()&lt;/code&gt; . 이 방법은 호출과 유사하다 &lt;code&gt;.off()&lt;/code&gt; 로 연결된 모든 처리기를 제거하는 데 사용됩니다 인수와 &lt;code&gt;.on()&lt;/code&gt; . 의 논의를 참조하십시오 &lt;code&gt;.live()&lt;/code&gt; 과 &lt;code&gt;.off()&lt;/code&gt; 자세한 내용을.</target>
        </trans-unit>
        <trans-unit id="566f988178c1d721f6afa5318e3e56b3db180d81" translate="yes" xml:space="preserve">
          <source>Any number of arguments to be passed to the function named in the &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 인수로 명명 된 함수에 전달할 인수의 수</target>
        </trans-unit>
        <trans-unit id="c35082a3ff942fe3ec38e1b891112e82ee12e453" translate="yes" xml:space="preserve">
          <source>Any number of arguments to be passed to the function referenced in the &lt;code&gt;function&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 인수 에서 참조되는 함수에 전달할 인수의 수</target>
        </trans-unit>
        <trans-unit id="a4533d769fe92d909b865ff015167b2a0b4d51eb" translate="yes" xml:space="preserve">
          <source>Any object that has a &lt;code&gt;then&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;then&lt;/code&gt; 메소드 가있는 오브젝트</target>
        </trans-unit>
        <trans-unit id="984b466a7cfe7ed396b51ac9a52fb1f4a1717b43" translate="yes" xml:space="preserve">
          <source>Any object to turn into a native Array.</source>
          <target state="translated">네이티브 배열로 변환 할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="270d3e556381146cab98497f80e4c57858013adc" translate="yes" xml:space="preserve">
          <source>Any string is legal for &lt;code&gt;eventType&lt;/code&gt;; if the string is not the name of a native DOM event, then the handler is bound to a custom event. These events are never called by the browser, but may be triggered manually from other JavaScript code using &lt;code&gt;.trigger()&lt;/code&gt; or &lt;code&gt;.triggerHandler()&lt;/code&gt;.</source>
          <target state="translated">모든 문자열은 &lt;code&gt;eventType&lt;/code&gt; 에 유효합니다 . 문자열이 기본 DOM 이벤트의 이름이 아닌 경우 핸들러는 사용자 정의 이벤트에 바인드됩니다. 이러한 이벤트는 브라우저에서 호출되지 않지만 &lt;code&gt;.trigger()&lt;/code&gt; 또는 &lt;code&gt;.triggerHandler()&lt;/code&gt; 사용하여 다른 JavaScript 코드에서 수동으로 트리거 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="474cc1b13f8ef1bd44d4bb025c41f791e8a6b97f" translate="yes" xml:space="preserve">
          <source>Anything</source>
          <target state="translated">Anything</target>
        </trans-unit>
        <trans-unit id="adb21c453333ec2338bfa3d6441c3c092f662924" translate="yes" xml:space="preserve">
          <source>Append all spans to the element with the ID &quot;foo&quot; (Check append() documentation for more examples)</source>
          <target state="translated">ID가 &quot;foo&quot;인 요소에 모든 범위를 추가합니다 (자세한 내용은 append () 설명서를 참조하십시오).</target>
        </trans-unit>
        <trans-unit id="daffde917b6c37dcf62b1ff1d873ea60a0f7b202" translate="yes" xml:space="preserve">
          <source>Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.</source>
          <target state="translated">모든 단락에 jQuery 객체 (DOM 요소 배열과 유사)를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bcfe614922e72b84af6cbc6c4f0961429aade7fc" translate="yes" xml:space="preserve">
          <source>Appends an Element to all paragraphs.</source>
          <target state="translated">모든 단락에 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="695e6a54c5eadeaba212880d08d9019d930f6a9a" translate="yes" xml:space="preserve">
          <source>Appends some HTML to all paragraphs.</source>
          <target state="translated">모든 단락에 일부 HTML을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6691c9c26cd474c3ef1ce4958a54813cfd2519b1" translate="yes" xml:space="preserve">
          <source>Apply the CSS style &lt;code&gt;cursor:pointer&lt;/code&gt; to the element that needs to bubble clicks (or a parent including &lt;code&gt;document.documentElement&lt;/code&gt;). Note however, this will disable copy\paste on the element and cause it to be highlighted when touched.</source>
          <target state="translated">클릭을 버블 링해야하는 요소 (또는 &lt;code&gt;document.documentElement&lt;/code&gt; 를 포함하는 부모 )에 CSS 스타일 &lt;code&gt;cursor:pointer&lt;/code&gt; 를 적용하십시오 . 그러나 이것은 요소에서 복사 / 붙여 넣기를 비활성화하고 터치 할 때 강조 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="82a0f09496a7f911481abd38af9b7cb672943993" translate="yes" xml:space="preserve">
          <source>Apply three different styles to list items to demonstrate that &lt;code&gt;:eq()&lt;/code&gt; is designed to select a single element while &lt;code&gt;:nth-child()&lt;/code&gt; or &lt;code&gt;:eq()&lt;/code&gt; within a looping construct such as &lt;code&gt;.each()&lt;/code&gt; can select multiple elements.</source>
          <target state="translated">&lt;code&gt;:eq()&lt;/code&gt; 는 단일 요소를 선택하도록 설계 되었지만 &lt;code&gt;.each()&lt;/code&gt; 와 같은 루핑 구조 내의 &lt;code&gt;:nth-child()&lt;/code&gt; 또는 &lt;code&gt;:eq()&lt;/code&gt; () 는 여러 요소를 선택할 수 있음을 보여주기 위해 세 가지 다른 스타일을 적용 합니다.</target>
        </trans-unit>
        <trans-unit id="d4c86b27339cca3b4e17f74cb6b3d7791d3dfcdd" translate="yes" xml:space="preserve">
          <source>Applying &lt;code&gt;.toggleClass( &quot;bounce spin&quot; )&lt;/code&gt; to the same &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; alternates between &lt;code&gt;&amp;lt;div class=&quot;tumble bounce spin&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;div class=&quot;tumble&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">동일한 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 에 &lt;code&gt;.toggleClass( &quot;bounce spin&quot; )&lt;/code&gt; 를 적용하면 &lt;code&gt;&amp;lt;div class=&quot;tumble bounce spin&quot;&amp;gt;&lt;/code&gt; 과 &lt;code&gt;&amp;lt;div class=&quot;tumble&quot;&amp;gt;&lt;/code&gt; 이 번갈아 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="bb0cc719fa8cfbfc81c453949aeb5050bb06ba4e" translate="yes" xml:space="preserve">
          <source>Array Notation</source>
          <target state="translated">배열 표기법</target>
        </trans-unit>
        <trans-unit id="d6abbff561024f089bb37bedd66fd9b70814b805" translate="yes" xml:space="preserve">
          <source>Array&amp;lt;Type&amp;gt; Notation</source>
          <target state="translated">배열 &amp;lt;유형&amp;gt; 표기법</target>
        </trans-unit>
        <trans-unit id="aea7efafadaab1cd1d412288c2a7445844c9719c" translate="yes" xml:space="preserve">
          <source>Array-Like Object</source>
          <target state="translated">배열과 같은 객체</target>
        </trans-unit>
        <trans-unit id="f4aa4f8d458749123fa80906cd63312f167548fc" translate="yes" xml:space="preserve">
          <source>Array-like objects &amp;mdash; those with a &lt;code&gt;.length&lt;/code&gt; property &lt;em&gt;and&lt;/em&gt; a value on the &lt;code&gt;.length - 1&lt;/code&gt; index &amp;mdash; must be converted to actual arrays before being passed to &lt;code&gt;$.map()&lt;/code&gt;. The jQuery library provides &lt;a href=&quot;jquery.makearray&quot;&gt;$.makeArray()&lt;/a&gt; for such conversions.</source>
          <target state="translated">&lt;code&gt;.length&lt;/code&gt; 속성 &lt;em&gt;과 &lt;/em&gt; &lt;code&gt;.length - 1&lt;/code&gt; 인덱스 의 값을 가진 객체와 같은 객체 는 &lt;code&gt;$.map()&lt;/code&gt; 에 전달되기 전에 실제 어레이로 변환되어야합니다 . jQuery 라이브러리는 이러한 변환을 위해 &lt;a href=&quot;jquery.makearray&quot;&gt;$ .makeArray ()&lt;/a&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="dc537d4dcf876b7def50d3b5b58899b798744587" translate="yes" xml:space="preserve">
          <source>Arrays in JavaScript are mutable lists with a few built-in methods. You can define arrays using the array literal:</source>
          <target state="translated">JavaScript의 배열은 몇 가지 기본 제공 메소드가있는 변경 가능한 목록입니다. 배열 리터럴을 사용하여 배열을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a63cdb27464a08150495d5039bb04d14a9750803" translate="yes" xml:space="preserve">
          <source>As an alternative or in addition to the &lt;code&gt;data&lt;/code&gt; argument provided to the &lt;code&gt;.on()&lt;/code&gt; method, you can also pass data to an event handler using a second argument to &lt;a href=&quot;trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;triggerhandler&quot;&gt;&lt;code&gt;.triggerHandler()&lt;/code&gt;&lt;/a&gt;. Data provided this way is passed to the event handler as further parameters after the &lt;code&gt;Event&lt;/code&gt; object. If an array was passed to the second argument of &lt;code&gt;.trigger()&lt;/code&gt; or &lt;code&gt;.triggerHandler()&lt;/code&gt;, each element in the array will be presented to the event handler as an individual parameter.</source>
          <target state="translated">대안으로 또는 &lt;code&gt;.on()&lt;/code&gt; 메소드에 제공된 &lt;code&gt;data&lt;/code&gt; 인수 외에 &lt;a href=&quot;trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;triggerhandler&quot;&gt; &lt;code&gt;.triggerHandler()&lt;/code&gt; &lt;/a&gt; 의 두 번째 인수를 사용하여 데이터를 이벤트 핸들러로 전달할 수도 있습니다 . 이러한 방식으로 제공된 데이터는 &lt;code&gt;Event&lt;/code&gt; 객체 다음에 추가 매개 변수로 이벤트 처리기에 전달됩니다 . 배열이 &lt;code&gt;.trigger()&lt;/code&gt; 또는 &lt;code&gt;.triggerHandler()&lt;/code&gt; 의 두 번째 인수로 전달되면 배열의 각 요소가 개별 매개 변수로 이벤트 핸들러에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="db63ee6a85aa74a66c56c44262b9a461236a0a78" translate="yes" xml:space="preserve">
          <source>As described in the discussion for &lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt;, jQuery objects maintain an internal stack that keeps track of changes to the matched set of elements. When one of the DOM traversal methods is called, the new set of elements is pushed onto the stack. If the previous set of elements is desired as well, &lt;code&gt;.addBack()&lt;/code&gt; can help.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt; 대한 설명에서 설명한 것처럼 jQuery 객체는 일치하는 요소 집합에 대한 변경 사항을 추적하는 내부 스택을 유지 관리합니다. DOM 순회 메소드 중 하나가 호출되면 새 요소 세트가 스택으로 푸시됩니다. 이전 요소 세트도 필요한 경우 &lt;code&gt;.addBack()&lt;/code&gt; 이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3adc06685f7490e45dc59084a9100062f0d5c568" translate="yes" xml:space="preserve">
          <source>As described in the discussion for &lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt;, jQuery objects maintain an internal stack that keeps track of changes to the matched set of elements. When one of the DOM traversal methods is called, the new set of elements is pushed onto the stack. If the previous set of elements is desired as well, &lt;code&gt;.andSelf()&lt;/code&gt; can help.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt; 대한 설명에서 설명한 것처럼 jQuery 객체는 일치하는 요소 집합에 대한 변경 사항을 추적하는 내부 스택을 유지 관리합니다. DOM 순회 메소드 중 하나가 호출되면 새 요소 세트가 스택으로 푸시됩니다. 이전 요소 세트도 필요한 경우 &lt;code&gt;.andSelf()&lt;/code&gt; 가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="383c3c295e897d466cd5e0dd7461b25943195430" translate="yes" xml:space="preserve">
          <source>As of 3.0 the default behavior is changed. If the &lt;code&gt;context&lt;/code&gt; is not specified or given as &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a new &lt;code&gt;document&lt;/code&gt; is used. This can potentially improve security because inline events will not execute when the HTML is parsed. Once the parsed HTML is injected into a document it does execute, but this gives tools a chance to traverse the created DOM and remove anything deemed unsafe. This improvement does not apply to internal uses of &lt;code&gt;jQuery.parseHTML&lt;/code&gt; as they usually pass in the current &lt;code&gt;document&lt;/code&gt;. Therefore, a statement like &lt;code&gt;$( &quot;#log&quot; ).append( $( htmlString ) )&lt;/code&gt; is still subject to the injection of malicious code.</source>
          <target state="translated">3.0부터 기본 동작이 변경되었습니다. 경우 &lt;code&gt;context&lt;/code&gt; 지정 또는 지정되지 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 새로운 &lt;code&gt;document&lt;/code&gt; 사용됩니다. HTML을 구문 분석 할 때 인라인 이벤트가 실행되지 않으므로 보안이 향상 될 수 있습니다. 구문 분석 된 HTML이 문서에 주입되면 실행되지만 도구는 생성 된 DOM을 순회하고 안전하지 않은 것으로 간주되는 모든 것을 제거 할 수있는 기회를 제공합니다. &lt;code&gt;jQuery.parseHTML&lt;/code&gt; 의 내부 사용 에는 일반적으로 현재 &lt;code&gt;document&lt;/code&gt; 전달 되므로이 개선 사항은 적용되지 않습니다 . 따라서 &lt;code&gt;$( &quot;#log&quot; ).append( $( htmlString ) )&lt;/code&gt; 와 같은 문장 은 여전히 ​​악성 코드의 삽입에 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="5fe8e36a4d42c73b1d3d31f2930b5ef45b9a3ef0" translate="yes" xml:space="preserve">
          <source>As of &lt;b&gt;jQuery 1.4&lt;/b&gt; the &lt;code&gt;.live()&lt;/code&gt; method supports custom events as well as &lt;em&gt;all JavaScript events that bubble&lt;/em&gt;. It also supports certain events that don't bubble, including &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;focus&lt;/code&gt; and &lt;code&gt;blur&lt;/code&gt;.</source>
          <target state="translated">현재로 &lt;b&gt;jQuery를 1.4 &lt;/b&gt; &lt;code&gt;.live()&lt;/code&gt; 메소드가 지원하는 사용자 정의 이벤트뿐만 아니라 &lt;em&gt;거품 모든 자바 스크립트 이벤트&lt;/em&gt; . 또한 &lt;code&gt;change&lt;/code&gt; , &lt;code&gt;submit&lt;/code&gt; , &lt;code&gt;focus&lt;/code&gt; 및 &lt;code&gt;blur&lt;/code&gt; 를 포함하여 버블 링되지 않는 특정 이벤트를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="b4922af35890577194c285ffb6d255af469c3d1f" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.12/2.2, this behavior is changed to improve the support for XML documents, including SVG. Starting from this version, the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt; is used instead. So, &lt;code&gt;.addClass()&lt;/code&gt; can be used on XML or SVG documents.</source>
          <target state="translated">jQuery 1.12 / 2.2부터 SVG를 포함한 XML 문서에 대한 지원을 개선하기 위해이 동작이 변경되었습니다. 이 버전부터 &lt;code&gt;class&lt;/code&gt; &lt;em&gt;속성&lt;/em&gt; 이 대신 사용됩니다. 따라서 &lt;code&gt;.addClass()&lt;/code&gt; 는 XML 또는 SVG 문서에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff2bf3fb1f5bde5d1ee1a685d5d4e295c1898a96" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.12/2.2, this behavior is changed to improve the support for XML documents, including SVG. Starting from this version, the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt; is used instead. So, &lt;code&gt;.removeClass()&lt;/code&gt; can be used on XML or SVG documents.</source>
          <target state="translated">jQuery 1.12 / 2.2부터 SVG를 포함한 XML 문서에 대한 지원을 개선하기 위해이 동작이 변경되었습니다. 이 버전부터 &lt;code&gt;class&lt;/code&gt; &lt;em&gt;속성&lt;/em&gt; 이 대신 사용됩니다. 따라서 &lt;code&gt;.removeClass()&lt;/code&gt; 는 XML 또는 SVG 문서에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc47af5c660e316a73d9bfbc202b0eab5c7427cb" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.12/2.2, this method supports XML documents, including SVG.</source>
          <target state="translated">jQuery 1.12 / 2.2부터이 메소드는 SVG를 포함한 XML 문서를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1d80a90cbdd16a2225f4248c8b9f027b65fa0192" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.3, &lt;code&gt;.trigger()&lt;/code&gt;ed events bubble up the DOM tree; an event handler can stop the bubbling by returning &lt;code&gt;false&lt;/code&gt; from the handler or calling the &lt;a href=&quot;event.stoppropagation&quot;&gt;&lt;code&gt;.stopPropagation()&lt;/code&gt;&lt;/a&gt; method on the event object passed into the event. Although &lt;code&gt;.trigger()&lt;/code&gt; simulates an event activation, complete with a synthesized event object, it does not perfectly replicate a naturally-occurring event.</source>
          <target state="translated">jQuery 1.3부터 &lt;code&gt;.trigger()&lt;/code&gt; ed 이벤트는 DOM 트리를 버블 링합니다. 이벤트 처리기는 처리기 에서 &lt;code&gt;false&lt;/code&gt; 를 반환 하거나 이벤트로 전달 된 이벤트 객체 에서 &lt;a href=&quot;event.stoppropagation&quot;&gt; &lt;code&gt;.stopPropagation()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 버블 링을 중지 할 수 있습니다 . &lt;code&gt;.trigger()&lt;/code&gt; 는 합성 된 이벤트 객체로 완성 된 이벤트 활성화를 시뮬레이션 하지만 자연 발생 이벤트를 완벽하게 복제하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c8e32bc047b404f56183cc0b0dfd5ad7359f5f1" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.3, the return value of a function is used instead of the function as a String.</source>
          <target state="translated">jQuery 1.3에서 함수의 반환 값은 함수 대신 문자열로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="45bddf91c8817b3d04bba566931a1cf57653396b" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 the results from .add() will always be returned in document order (rather than a simple concatenation).</source>
          <target state="translated">jQuery 1.4부터 .add ()의 결과는 항상 간단한 연결이 아닌 문서 순서로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8b92833ca22111bd848e6df7d54ad52a1f5ee2c5" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 the results will always be returned in document order.</source>
          <target state="translated">jQuery 1.4부터 결과는 항상 문서 순서로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="61a4278855157f578676b23840bbb5b53035fd29" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 this method checks both properties on the object itself and properties inherited from prototypes (in that it doesn't use hasOwnProperty). The argument should always be a plain JavaScript &lt;code&gt;Object&lt;/code&gt; as other types of object (DOM elements, primitive strings/numbers, host objects) may not give consistent results across browsers. To determine if an object is a plain JavaScript object, use &lt;a href=&quot;jquery.isplainobject&quot;&gt;&lt;code&gt;$.isPlainObject()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">jQuery 1.4부터이 메소드는 객체 자체의 속성과 프로토 타입에서 상속 된 속성 (hasOwnProperty를 사용하지 않음)을 모두 확인합니다. 다른 유형의 객체 (DOM 요소, 기본 문자열 / 숫자, 호스트 객체)가 브라우저에서 일관된 결과를 제공하지 않을 수 있으므로 인수는 항상 일반 JavaScript &lt;code&gt;Object&lt;/code&gt; 여야 합니다. 객체가 일반 JavaScript 객체인지 확인하려면 &lt;a href=&quot;jquery.isplainobject&quot;&gt; &lt;code&gt;$.isPlainObject()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8a2815ac6a599777b632ed80b175597a5a7ae75" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 we can bind multiple event handlers simultaneously by passing an object of event type/handler pairs:</source>
          <target state="translated">jQuery 1.4부터 이벤트 유형 / 핸들러 쌍의 객체를 전달하여 여러 이벤트 핸들러를 동시에 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90a4ded90ec1cf89e4cfab7720335a9b1ac8ff60" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 we can no longer attach data (and thus, events) to object, embed, or applet elements because critical errors occur when attaching data to Java applets.</source>
          <target state="translated">jQuery 1.4부터는 데이터를 Java 애플릿에 첨부 할 때 중대한 오류가 발생하기 때문에 더 이상 데이터 (및 이벤트)를 오브젝트, 임베드 또는 애플릿 요소에 첨부 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d134c746f27a767674bf78628c3073c2db61477" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, &lt;code&gt;.after()&lt;/code&gt; supports passing a function that returns the elements to insert.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.after()&lt;/code&gt; 는 삽입 할 요소를 반환하는 함수 전달을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="409ecc2b9569c6330a9b689d28e1e102ea540ad9" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, &lt;code&gt;.css()&lt;/code&gt; allows us to pass a function as the property value:</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.css()&lt;/code&gt; 사용하면 함수를 속성 값으로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ecc82677c406d9b0842869db339355d439d7ac9" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, calling the &lt;code&gt;jQuery()&lt;/code&gt; method with &lt;em&gt;no arguments&lt;/em&gt; returns an empty jQuery set (with a &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property of 0). In previous versions of jQuery, this would return a set containing the document node.</source>
          <target state="translated">jQuery 1.4 &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; &lt;em&gt; 인수없이 &lt;/em&gt; &lt;code&gt;jQuery()&lt;/code&gt; 메서드를 호출하면 빈 jQuery 세트 ( .length 속성이 0 임) 가 반환 됩니다. 이전 버전의 jQuery에서는 문서 노드가 포함 된 집합을 반환합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cac80b3c011e6a5cb72b93c65b67a84581c4842c" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;$.param()&lt;/code&gt; method serializes deep objects recursively to accommodate modern scripting languages and frameworks such as PHP and Ruby on Rails. You can disable this functionality globally by setting &lt;code&gt;jQuery.ajaxSettings.traditional = true;&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;$.param()&lt;/code&gt; 메소드는 최신 스크립팅 언어 및 PHP 및 Ruby on Rails와 같은 프레임 워크를 수용하기 위해 딥 오브젝트를 재귀 적으로 직렬화합니다. &lt;code&gt;jQuery.ajaxSettings.traditional = true;&lt;/code&gt; 설정하여이 기능을 전체적으로 비활성화 할 수 있습니다 . .</target>
        </trans-unit>
        <trans-unit id="65e0f0421ef7011dcd7798a00027e1fa46255307" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.addClass()&lt;/code&gt; method's argument can receive a function.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.addClass()&lt;/code&gt; 메소드의 인수는 함수를 수신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41671d22091b72acf598deb51da105653c810b4f" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.html()&lt;/code&gt; method allows the HTML content to be set by passing in a function.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.html()&lt;/code&gt; 메서드를 사용하면 함수를 전달하여 HTML 내용을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad2176f0988f49b8ace9bad092e54db71ea6a1d3" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.not()&lt;/code&gt; method can take a function as its argument in the same way that &lt;code&gt;.filter()&lt;/code&gt; does. Elements for which the function returns &lt;code&gt;true&lt;/code&gt; are excluded from the filtered set; all other elements are included.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.not()&lt;/code&gt; 메소드는 &lt;code&gt;.filter()&lt;/code&gt; 와 동일한 방식으로 함수를 인수로 사용할 수 있습니다 . 함수가 &lt;code&gt;true&lt;/code&gt; 를 리턴하는 요소 는 필터링 된 세트에서 제외됩니다. 다른 모든 요소가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="abc4d3ab51fc84699c45e50617b6a23f624bcab9" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.removeClass()&lt;/code&gt; method allows us to indicate the class to be removed by passing in a function.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.removeClass()&lt;/code&gt; 메소드를 사용하면 함수를 전달하여 제거 할 클래스를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11868e537b2f911ce09188aa2e303a372f587eeb" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.text()&lt;/code&gt; method allows us to set the text content by passing in a function.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.text()&lt;/code&gt; 메서드를 사용하면 함수를 전달하여 텍스트 내용을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fbe71d81d67af58d49c9ad8fbf88b9eda490957" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.text()&lt;/code&gt; method returns the value of text and CDATA nodes as well as element nodes.</source>
          <target state="translated">jQuery 1.4부터 &lt;code&gt;.text()&lt;/code&gt; 메서드는 텍스트 및 CDATA 노드와 요소 노드의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a22f2639f0f3e7253b48d3f60be4bf8534583c44" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;change&lt;/code&gt; event bubbles in Internet Explorer, behaving consistently with the event in other modern browsers.</source>
          <target state="translated">jQuery 1.4부터 Internet Explorer에서 &lt;code&gt;change&lt;/code&gt; 이벤트가 발생하여 다른 최신 브라우저의 이벤트와 일관되게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a1c4787fb59ddfd1f3eb73b1945b4667a00ac068" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the same event handler can be bound to an element multiple times. This is especially useful when the &lt;code&gt;event.data&lt;/code&gt; feature is being used, or when other unique data resides in a closure around the event handler function. For example:</source>
          <target state="translated">jQuery 1.4부터 동일한 이벤트 핸들러를 요소에 여러 번 바인딩 할 수 있습니다. 이는 &lt;code&gt;event.data&lt;/code&gt; 기능을 사용 중이거나 다른 고유 한 데이터가 이벤트 핸들러 함수 주변에 있을 때 특히 유용 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e95086371502e608f2f3430c00ec72bd1843bbc8" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4.2 duplicate event handlers can be bound to an element instead of being discarded. This is useful when the event data feature is being used, or when other unique data resides in a closure around the event handler function.</source>
          <target state="translated">jQuery 1.4.2부터 중복 이벤트 핸들러는 버리지 않고 요소에 바인딩 할 수 있습니다. 이것은 이벤트 데이터 기능이 사용 중이거나 다른 고유 데이터가 이벤트 핸들러 함수 주위의 클로저에있을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dfa98e13084683fbb59f13713d585fc14da6d8b7" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4.3 &lt;a href=&quot;https://johnresig.com/blog/html-5-data-attributes/&quot;&gt;HTML 5 data- attributes&lt;/a&gt; will be automatically pulled in to jQuery's data object. The treatment of attributes with embedded dashes was changed in jQuery 1.6 to conform to the &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes&quot;&gt;W3C HTML5 specification&lt;/a&gt;.</source>
          <target state="translated">jQuery 1.4.3부터 &lt;a href=&quot;https://johnresig.com/blog/html-5-data-attributes/&quot;&gt;HTML 5 데이터 속성&lt;/a&gt; 은 자동으로 jQuery의 데이터 객체로 가져옵니다. jQuery 1.6에서 &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes&quot;&gt;W3C HTML5 사양&lt;/a&gt; 을 준수하도록 대시가 포함 된 속성 처리가 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a6bdfa160ffe9631926aaed322f4f86696da7183" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4.3, an optional string naming an easing function may be used. Easing functions specify the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called &lt;code&gt;swing&lt;/code&gt;, and one that progresses at a constant pace, called &lt;code&gt;linear&lt;/code&gt;. More easing functions are available with the use of plug-ins, most notably the &lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UI suite&lt;/a&gt;.</source>
          <target state="translated">jQuery 1.4.3부터 여유 함수를 명명하는 선택적 문자열을 사용할 수 있습니다. 완화 기능은 애니메이션이 애니메이션 내 다른 지점에서 진행되는 속도를 지정합니다. jQuery 라이브러리에서 유일하게 구현하는 구현은 &lt;code&gt;swing&lt;/code&gt; 이라고하는 기본값이고 &lt;code&gt;linear&lt;/code&gt; 라는 일정한 속도로 진행되는 것 입니다. 플러그인, 특히 &lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UI 제품군을&lt;/a&gt; 사용하면 더 많은 여유 기능을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab20aaf74b985a1f2cf98c6fc5b5b85c55b08917" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, &lt;code&gt;withDataAndEvents&lt;/code&gt; can be optionally enhanced with &lt;code&gt;deepWithDataAndEvents &lt;/code&gt; to copy the events and data for all children of the cloned element.</source>
          <target state="translated">jQuery를 1.5로, &lt;code&gt;withDataAndEvents&lt;/code&gt; 는 선택적으로 향상 될 수 &lt;code&gt;deepWithDataAndEvents &lt;/code&gt; 복제 된 요소의 모든 아이들을위한 이벤트 및 데이터를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="efa8f1455ec0d83d5c810f929f58950086cd768a" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, the &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred&lt;/a&gt; object provides a way to register multiple callbacks into self-managed callback queues, invoke callback queues as appropriate, and relay the success or failure state of any synchronous or asynchronous function.</source>
          <target state="translated">jQuery 1.5부터 &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred&lt;/a&gt; 객체는 여러 개의 콜백을 자체 관리 콜백 큐에 등록하고 콜백 큐를 적절하게 호출하며 동기 또는 비동기 함수의 성공 또는 실패 상태를 릴레이하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bbc611303b99903072fe277021b7a22997b99eda" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, the &lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt; method returns the jqXHR object, which is a superset of the XMLHTTPRequest object. For more information, see the &lt;a href=&quot;jquery.ajax#jqXHR&quot;&gt;jqXHR section of the $.ajax entry&lt;/a&gt;</source>
          <target state="translated">jQuery 1.5부터 &lt;a href=&quot;jquery.ajax&quot;&gt;$ .ajax ()&lt;/a&gt; 메소드는 XMLHTTPRequest 객체의 수퍼 세트 인 jqXHR 객체를 반환합니다. 자세한 정보 &lt;a href=&quot;jquery.ajax#jqXHR&quot;&gt;는 $ .ajax 항목&lt;/a&gt; 의 jqXHR 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3c8e1f573da4722ec551e628164c1fd456258450" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, you may use &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;.fail()&lt;/code&gt;&lt;/a&gt; to account for errors:</source>
          <target state="translated">jQuery 1.5부터 &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;.fail()&lt;/code&gt; &lt;/a&gt; 을 사용 하여 오류를 해결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e6309b11f3b892aefd6e94ce3523ea53cce2603" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.6, &lt;code&gt;.css()&lt;/code&gt; accepts relative values similar to &lt;code&gt;.animate()&lt;/code&gt;. Relative values are a string starting with &lt;code&gt;+=&lt;/code&gt; or &lt;code&gt;-=&lt;/code&gt; to increment or decrement the current value. For example, if an element's padding-left was 10px, &lt;code&gt;.css( &quot;padding-left&quot;, &quot;+=15&quot; )&lt;/code&gt; would result in a total padding-left of 25px.</source>
          <target state="translated">jQuery 1.6부터 &lt;code&gt;.css()&lt;/code&gt; 는 &lt;code&gt;.animate()&lt;/code&gt; 와 유사한 상대 값을 허용합니다 . 상대 값은 현재 값을 늘리거나 줄이기 위해 &lt;code&gt;+=&lt;/code&gt; 또는 &lt;code&gt;-=&lt;/code&gt; 로 시작하는 문자열 입니다. 예를 들어, 요소의 왼쪽 여백이 10px 인 경우 &lt;code&gt;.css( &quot;padding-left&quot;, &quot;+=15&quot; )&lt;/code&gt; 는 총 왼쪽 여백이 25px입니다.</target>
        </trans-unit>
        <trans-unit id="b8df253d75fb04460ea8a5c48864cdfaebc01975" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.6, the &lt;code&gt;.attr()&lt;/code&gt; method returns &lt;code&gt;undefined&lt;/code&gt; for attributes that have not been set. &lt;strong&gt;To retrieve and change DOM properties such as the &lt;code&gt;checked&lt;/code&gt;, &lt;code&gt;selected&lt;/code&gt;, or &lt;code&gt;disabled&lt;/code&gt; state of form elements, use the &lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt; method.&lt;/strong&gt;</source>
          <target state="translated">jQuery 1.6부터 &lt;code&gt;.attr()&lt;/code&gt; 메소드는 설정 &lt;code&gt;undefined&lt;/code&gt; 속성에 대해 undefined 를 리턴합니다 . &lt;strong&gt;양식 요소 &lt;/strong&gt;&lt;strong&gt;의 &lt;code&gt;checked&lt;/code&gt; , &lt;code&gt;selected&lt;/code&gt; 또는 &lt;code&gt;disabled&lt;/code&gt; 상태 와 같은 DOM 특성을 검색하고 변경하려면 &lt;a href=&quot;prop&quot;&gt;.prop ()&lt;/a&gt; 메소드를 사용하십시오 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cbe4238fa853084ef97be39e8212a576a55a6a7" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.6, you can also pass an object to &lt;code&gt;jQuery.Event()&lt;/code&gt; and its properties will be set on the newly created Event object.</source>
          <target state="translated">jQuery 1.6부터 객체를 &lt;code&gt;jQuery.Event()&lt;/code&gt; 전달할 수 있으며 속성이 새로 생성 된 Event 객체에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5da2c6c1523952bb91a3fd56b7f2e0ba7e03f6a4" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.7 this API has been deprecated; please use &lt;a href=&quot;deferred.state&quot;&gt;&lt;code&gt;deferred.state()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">jQuery 1.7부터이 API는 더 이상 사용되지 않습니다. 사용하십시오 &lt;a href=&quot;deferred.state&quot;&gt; &lt;code&gt;deferred.state()&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="4b48ac1c86618af30fb212ddbe8375cffd96bfb6" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.8, the &lt;code&gt;.css()&lt;/code&gt; setter will automatically take care of prefixing the property name. For example, take &lt;code&gt;.css( &quot;user-select&quot;, &quot;none&quot; )&lt;/code&gt; in Chrome/Safari will set it as &lt;code&gt;-webkit-user-select&lt;/code&gt;, Firefox will use &lt;code&gt;-moz-user-select&lt;/code&gt;, and IE10 will use &lt;code&gt;-ms-user-select&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.8부터 &lt;code&gt;.css()&lt;/code&gt; setter는 자동으로 속성 이름 접두사를 처리합니다. 예를 들어 Chrome / Safari에서 &lt;code&gt;.css( &quot;user-select&quot;, &quot;none&quot; )&lt;/code&gt; 를 사용하면 &lt;code&gt;-webkit-user-select&lt;/code&gt; 로 설정 되고 Firefox는 &lt;code&gt;-moz-user-select&lt;/code&gt; 를 사용하며 IE10은 &lt;code&gt;-ms-user-select&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d3af6d593de158fe669b5a3ac1c021912f220ff" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxComplete()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9부터 &lt;code&gt;.ajaxComplete()&lt;/code&gt; 메소드로 추가 된 &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;이벤트&lt;/a&gt; 를 포함 하여 jQuery 글로벌 Ajax 이벤트에 대한 모든 핸들러 가 &lt;code&gt;document&lt;/code&gt; 에 첨부 &lt;em&gt;되어야합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="074fb93f066bcee32ab0d457291bf1a41a0b671d" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxError()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9부터 &lt;code&gt;.ajaxError()&lt;/code&gt; 메소드로 추가 된 &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;이벤트&lt;/a&gt; 를 포함 하여 jQuery 글로벌 Ajax 이벤트에 대한 모든 핸들러 가 &lt;code&gt;document&lt;/code&gt; 에 첨부 &lt;em&gt;되어야합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a3c5aa8e7bd3fc6d7f245d9517eda08d95cec39" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxSend()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9부터 &lt;code&gt;.ajaxSend()&lt;/code&gt; 메소드로 추가 된 &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;이벤트&lt;/a&gt; 를 포함 하여 jQuery 글로벌 Ajax 이벤트에 대한 모든 핸들러 가 &lt;code&gt;document&lt;/code&gt; 에 첨부 &lt;em&gt;되어야합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5554be43799278ed2cee938b99198504f4de3620" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxStart()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9부터 &lt;code&gt;.ajaxStart()&lt;/code&gt; 메소드로 추가 된 &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;이벤트&lt;/a&gt; 를 포함 하여 jQuery 글로벌 Ajax 이벤트에 대한 모든 핸들러 가 &lt;code&gt;document&lt;/code&gt; 에 첨부 &lt;em&gt;되어야합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e151cc18ebc96b52761440516a84b9000261d78a" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxStop()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9부터 &lt;code&gt;.ajaxStop()&lt;/code&gt; 메소드로 추가 된 &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;이벤트&lt;/a&gt; 를 포함 하여 jQuery 글로벌 Ajax 이벤트에 대한 모든 핸들러 가 &lt;code&gt;document&lt;/code&gt; 에 첨부 &lt;em&gt;되어야합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="958a03c61a6be2f18a5d9a93bd096ab9b6168692" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxSuccess()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9부터 &lt;code&gt;.ajaxSuccess()&lt;/code&gt; 메소드로 추가 된 &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;이벤트&lt;/a&gt; 를 포함 하여 jQuery 글로벌 Ajax 이벤트에 대한 모든 핸들러 가 &lt;code&gt;document&lt;/code&gt; 에 첨부 &lt;em&gt;되어야합니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b7e6b3b8ab53b6962cc4671c0b8e105b936d781" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0 &lt;code&gt;$.isNumeric()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; only if the argument is of type &lt;a href=&quot;types#Number&quot;&gt;&lt;code&gt;number&lt;/code&gt;&lt;/a&gt;, or if it's of type &lt;code&gt;string&lt;/code&gt; and it can be coerced into finite numbers. In all other cases, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">jQuery 3.0부터 &lt;code&gt;$.isNumeric()&lt;/code&gt; 은 인수가 &lt;a href=&quot;types#Number&quot;&gt; &lt;code&gt;number&lt;/code&gt; &lt;/a&gt; 유형 이거나 &lt;code&gt;string&lt;/code&gt; 유형 인 경우 에만 &lt;code&gt;true&lt;/code&gt; 를 리턴 하며 유한 숫자로 강제 변환 될 수 있습니다. 다른 모든 경우에는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e5aa593fc221a03c9b6bf247d27325ac55f1eb78" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;$.parseJSON&lt;/code&gt; is deprecated. To parse JSON strings use the native &lt;code&gt;JSON.parse&lt;/code&gt; method instead.</source>
          <target state="translated">jQuery 3.0부터 &lt;code&gt;$.parseJSON&lt;/code&gt; 은 더 이상 사용되지 않습니다. JSON 문자열을 구문 분석하려면 기본 &lt;code&gt;JSON.parse&lt;/code&gt; 메소드를 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f46dc2289fd1b41645d7ce6a3e70772dc92846c3" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.bind()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt; method for attaching event handlers to a document since jQuery 1.7, so its use was already discouraged. For earlier versions, the &lt;code&gt;.bind()&lt;/code&gt; method is used for attaching an event handler directly to elements. Handlers are attached to the currently selected elements in the jQuery object, so those elements &lt;em&gt;must exist&lt;/em&gt; at the point the call to &lt;code&gt;.bind()&lt;/code&gt; occurs. For more flexible event binding, see the discussion of event delegation in &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">jQuery 3.0부터 &lt;code&gt;.bind()&lt;/code&gt; 는 더 이상 사용되지 않습니다. jQuery 1.7 이후 이벤트 핸들러를 문서에 첨부 하는 &lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt; 메소드 로 대체 되었으므로 이미 사용하지 않는 것이 좋습니다. 이전 버전의 경우 &lt;code&gt;.bind()&lt;/code&gt; 메소드는 이벤트 핸들러를 요소에 직접 첨부하는 데 사용됩니다. 핸들러는 jQuery 객체에서 현재 선택된 요소에 첨부되므로 &lt;code&gt;.bind()&lt;/code&gt; 대한 호출이 발생 하는 시점에 해당 요소 &lt;em&gt;가 존재해야&lt;/em&gt; 합니다. 보다 유연한 이벤트 바인딩에 대해서는 &lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt; 의 이벤트 위임에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d13ae9b9c056d619d357478a9c0a71a11eae8214" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.delegate()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt; method since jQuery 1.7, so its use was already discouraged. For earlier versions, however, it remains the most effective means to use event delegation. More information on event binding and delegation is in the &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt; method. In general, these are the equivalent templates for the two methods:</source>
          <target state="translated">jQuery 3.0부터 &lt;code&gt;.delegate()&lt;/code&gt; 는 더 이상 사용되지 않습니다. jQuery 1.7 이후 &lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt; 메소드 로 대체 되었으므로 이미 사용하지 않는 것이 좋습니다. 그러나 이전 버전의 경우 이벤트 위임을 사용하는 가장 효과적인 방법으로 남아 있습니다. 이벤트 바인딩 및 위임에 대한 자세한 내용은 &lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt; 메서드에 있습니다. 일반적으로 다음 두 가지 방법에 해당하는 템플릿입니다.</target>
        </trans-unit>
        <trans-unit id="77e93be5b34d3f2ab6409e2f2676e808068354a9" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.unbind()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;off&quot;&gt;&lt;code&gt;.off()&lt;/code&gt;&lt;/a&gt; method since jQuery 1.7, so its use was already discouraged.</source>
          <target state="translated">jQuery 3.0부터 &lt;code&gt;.unbind()&lt;/code&gt; 는 더 이상 사용되지 않습니다. jQuery 1.7 이후 &lt;a href=&quot;off&quot;&gt; &lt;code&gt;.off()&lt;/code&gt; &lt;/a&gt; 메소드 로 대체 되었으므로 이미 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="73eaaf23595739f5bed33113ace36bea16a8f789" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.undelegate()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;off&quot;&gt;&lt;code&gt;.off()&lt;/code&gt;&lt;/a&gt; method since jQuery 1.7, so its use was already discouraged.</source>
          <target state="translated">jQuery 3.0부터 &lt;code&gt;.undelegate()&lt;/code&gt; 는 더 이상 사용되지 않습니다. jQuery 1.7 이후 &lt;a href=&quot;off&quot;&gt; &lt;code&gt;.off()&lt;/code&gt; &lt;/a&gt; 메소드 로 대체 되었으므로 이미 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c42636d689138f4824141d5d1c48aba80d4fc491" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, only the first syntax is recommended; the other syntaxes still work but are deprecated. This is because the selection has no bearing on the behavior of the &lt;code&gt;.ready()&lt;/code&gt; method, which is inefficient and can lead to incorrect assumptions about the method's behavior. For example, the third syntax works with &lt;code&gt;&quot;document&quot;&lt;/code&gt; which selects nothing. The fourth syntax waits for the document to be ready but implies (incorrectly) that it waits for images to become ready.</source>
          <target state="translated">jQuery 3.0부터는 첫 번째 구문 만 권장됩니다. 다른 구문은 여전히 ​​작동하지만 더 이상 사용되지 않습니다. 이는 선택시 &lt;code&gt;.ready()&lt;/code&gt; 메소드 의 동작과 관련이 없기 때문에 비효율적이며 메소드의 동작에 대한 잘못된 가정으로 이어질 수 있습니다. 예를 들어, 세 번째 구문은 &lt;code&gt;&quot;document&quot;&lt;/code&gt; 와 함께 작동하여 아무것도 선택하지 않습니다. 네 번째 구문은 문서가 준비 될 때까지 기다리지 만 이미지가 준비 될 때까지 기다린다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4ab79995b015b04dc3ba5bdac9fcba97c892c0cc" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, the &lt;code&gt;$.param()&lt;/code&gt; method no longer uses &lt;code&gt;jQuery.ajaxSettings.traditional&lt;/code&gt; as its default setting and will default to &lt;code&gt;false&lt;/code&gt;. For best compatibility across versions, call &lt;code&gt;$.param()&lt;/code&gt; with an explicit value for the second argument and do not use defaults.</source>
          <target state="translated">jQuery 3.0부터 &lt;code&gt;$.param()&lt;/code&gt; 메소드는 더 이상 &lt;code&gt;jQuery.ajaxSettings.traditional&lt;/code&gt; 을 기본 설정으로 사용하지 않으며 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. 버전 간 호환성을 &lt;code&gt;$.param()&lt;/code&gt; 려면 두 번째 인수에 대해 명시적인 값으로 $ .param () 을 호출 하고 기본값을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c43327ed669e013435c4519310b0ca72b5b7b66c" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, use of this object is supported via &lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt; or the native &lt;code&gt;Promise.resolve()&lt;/code&gt;. Code should not make assumptions about whether this object is a &lt;code&gt;jQuery.Deferred&lt;/code&gt;, native Promise, or some other type of promise object.</source>
          <target state="translated">jQuery 3.0 &lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt; 객체의 사용은 jQuery.when 또는 기본 &lt;code&gt;Promise.resolve()&lt;/code&gt; 를 통해 지원됩니다 . 코드는이 객체가 &lt;code&gt;jQuery.Deferred&lt;/code&gt; , 네이티브 Promise 또는 다른 유형의 promise 객체 인지 여부를 가정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ac48e1524df474a8e85b14636a036a218ff30e9" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.3, &lt;code&gt;jQuery.isFunction()&lt;/code&gt; has been deprecated. In most cases, its use can be replaced by &lt;code&gt;typeof x === &quot;function&quot;&lt;/code&gt;.</source>
          <target state="translated">jQuery 3.3부터 &lt;code&gt;jQuery.isFunction()&lt;/code&gt; 은 더 이상 사용되지 않습니다. 대부분의 경우, 사용은 &lt;code&gt;typeof x === &quot;function&quot;&lt;/code&gt; 으로 대체 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c7f4cbf5ccd269125f02c56ac0975aafbd65060" translate="yes" xml:space="preserve">
          <source>As of jQuery &lt;strong&gt;1.4.3&lt;/strong&gt;, an optional string naming an easing function may be used. Easing functions specify the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called &lt;code&gt;swing&lt;/code&gt;, and one that progresses at a constant pace, called &lt;code&gt;linear&lt;/code&gt;. More easing functions are available with the use of plug-ins, most notably the &lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UI suite&lt;/a&gt;.</source>
          <target state="translated">jQuery &lt;strong&gt;1.4.3&lt;/strong&gt; 부터 여유 함수를 명명하는 선택적 문자열을 사용할 수 있습니다. 완화 기능은 애니메이션이 애니메이션 내 다른 지점에서 진행되는 속도를 지정합니다. jQuery 라이브러리에서 유일하게 구현하는 구현은 &lt;code&gt;swing&lt;/code&gt; 이라고하는 기본값이고 &lt;code&gt;linear&lt;/code&gt; 라는 일정한 속도로 진행되는 것 입니다. 플러그인, 특히 &lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UI 제품군을&lt;/a&gt; 사용하면 더 많은 여유 기능을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e924f4f741ec344a93b78011b3a3fdd3f8103e5" translate="yes" xml:space="preserve">
          <source>As of jQuery version 1.4, you can set per-property easing functions within a single &lt;code&gt;.animate()&lt;/code&gt; call. In the first version of &lt;code&gt;.animate()&lt;/code&gt;, each property can take an array as its value: The first member of the array is the CSS property and the second member is an easing function. If a per-property easing function is not defined for a particular property, it uses the value of the &lt;code&gt;.animate()&lt;/code&gt; method's optional easing argument. If the easing argument is not defined, the default &lt;code&gt;swing&lt;/code&gt; function is used.</source>
          <target state="translated">jQuery 버전 1.4 &lt;code&gt;.animate()&lt;/code&gt; 단일 .animate () 호출 내에서 속성 별 여유 함수를 설정할 수 있습니다 . &lt;code&gt;.animate()&lt;/code&gt; 의 첫 번째 버전 에서 각 속성은 배열을 값으로 사용할 수 있습니다. 배열의 첫 번째 멤버는 CSS 속성이고 두 번째 멤버는 여유 함수입니다. 속성 별 여유 함수가 특정 속성에 대해 정의되지 않은 경우 &lt;code&gt;.animate()&lt;/code&gt; 메서드의 선택적 여유 인수 값을 사용합니다 . 여유 인수가 정의되지 않은 경우 기본 &lt;code&gt;swing&lt;/code&gt; 함수가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="56660c2e6b7048463001854c605eca841870c8ae" translate="yes" xml:space="preserve">
          <source>As previously noted, a plugin is required for the &lt;code&gt;easeOutBounce&lt;/code&gt; function.</source>
          <target state="translated">앞에서 언급했듯이 &lt;code&gt;easeOutBounce&lt;/code&gt; 함수 에는 플러그인이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="13169eef82ea18f6be52b317766d61e85fb86452" translate="yes" xml:space="preserve">
          <source>As shown in the discussion for &lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt;, normally when an element is inserted somewhere in the DOM, it is moved from its old location. So, given the code:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt; 에 대한 토론에서 볼 수 있듯이 일반적으로 요소가 DOM 어딘가에 삽입되면 이전 위치에서 이동합니다. 따라서 코드가 주어지면 :</target>
        </trans-unit>
        <trans-unit id="9416a212e0a7d124a45507d921441a01dcaf27ce" translate="yes" xml:space="preserve">
          <source>As soon as the image has been loaded, the handler is called.</source>
          <target state="translated">이미지가로드 되 자마자 핸들러가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9fbcc855597e08732bfa078cc0d722192c2b8501" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.blur()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;blur&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;blur&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.blur()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;blur&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;blur&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e32ce36fd15cb537e0ea280bfcd9256cab59ddb4" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.change()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;change&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;change&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.change()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;change&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;change&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2efac081f23856e664536fe7d96a41295e3d2278" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.click()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;click&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;click&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.click()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;click&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;click&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f17ef5e115e505ebe8539b7bfaa675a611e2a03" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.contextmenu()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;contextmenu&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;contextmenu&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.contextmenu()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;contextmenu&quot;, handler )&lt;/code&gt; , 분리하여 사용 가능하다 &lt;code&gt;.off( &quot;contextmenu&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1cf9f2c164dd156c7846c039b04784be32aa4d7" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.dblclick()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;dblclick&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;dblclick&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.dblclick()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;dblclick&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;dblclick&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="793cecac7d04330d4ba3e423be8675fd31e9b2cf" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.error()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;error&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.error()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;error&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72be964990eae112061156672059a81e0dc52679" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.focus()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;focus&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;focus&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.focus()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;focus&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;focus&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06fcd1e538d69d16cab9743da39e1665c944d3b7" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.focusin()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;focusin&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;focusin&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.focusin()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;focusin&quot;, handler )&lt;/code&gt; , 분리가 사용 가능하다 &lt;code&gt;.off( &quot;focusin&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46d8bdb755970968552cb2e806ec2af9e939e76c" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.focusout()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;focusout&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;focusout&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.focusout()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;focusout&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;focusout&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94a7c28e2049c4899d33f1e345ce3f78d18c887b" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.keydown()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;keydown&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;keydown&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.keydown()&lt;/code&gt; 메소드에 대한 단지 속기 &lt;code&gt;.on( &quot;keydown&quot;, handler )&lt;/code&gt; , 박리가 사용 가능하다 &lt;code&gt;.off( &quot;keydown&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41da67cd941dc2e9d62bcb2fa8eaede0e8459f37" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.keypress()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;keypress&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;keypress&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.keypress()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;keypress&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;keypress&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82e06ddeafd1eed6dc3231a50263b7f238056455" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.keyup()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;keyup&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;keyup&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.keyup()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;keyup&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;keyup&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba6e6e1990debe8af91f41d664f095238af393b6" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mousedown()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mousedown&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mousedown&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.mousedown()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;mousedown&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;mousedown&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8eaa7f5a31898b0d6a479d83525dd7ec896de2fb" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseenter()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseenter&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseenter&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.mouseenter()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;mouseenter&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;mouseenter&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2928bc1044dc3971651291ecc00775539b48c933" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseleave()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseleave&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseleave&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.mouseleave()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;mouseleave&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;mouseleave&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d851ab9d652544cef9c2a70feadb5248a4d9241" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mousemove()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mousemove&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mousemove&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.mousemove()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;mousemove&quot;, handler )&lt;/code&gt; , 분리가 사용 가능하다 &lt;code&gt;.off( &quot;mousemove&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7b6b5955c63f72813097921d2874f5d372a83f8" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseout()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseout&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseout&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.mouseout()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;mouseout&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;mouseout&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d040f736adc22a1019b5b2bc1f80daa56737d172" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseover()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseover&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseover&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.mouseover()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;mouseover&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;mouseover&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61e0f17ee173d933a88cd897a13169c4cf56e7cc" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseup()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseup&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseup&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.mouseup()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;mouseup&quot;, handler )&lt;/code&gt; , 분리가 사용 가능하다 &lt;code&gt;.off( &quot;mouseup&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="873da6be344a0d0eb199a76c528f0b8203cfaa2d" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.resize()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;resize&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;resize&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.resize()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;resize&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;resize&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81d16b093824b341f82dec86c38ad28b6a4e04cc" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.scroll()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;scroll&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;scroll&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.scroll()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;scroll&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;scroll&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51d128450a11521ab1b0dcf0f7e52e2b736700e3" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.select()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;select&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;select&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.select()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;select&quot;, handler )&lt;/code&gt; , 분리하여 사용 가능하다 &lt;code&gt;.off( &quot;select&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72ef76fdbbf492e23fd862648d4d5d66933b2ef9" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.submit()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;submit&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;submit&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.submit()&lt;/code&gt; 메소드가 단지 속기 &lt;code&gt;.on( &quot;submit&quot;, handler )&lt;/code&gt; , 분리하여 사용 가능하다 &lt;code&gt;.off( &quot;submit&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a113ed3c7bad61421272e8835cbb4ffd1033ae4d" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.unload()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;unload&quot; )&lt;/code&gt;.</source>
          <target state="translated">애즈 &lt;code&gt;.unload()&lt;/code&gt; 메소드는 단지 속기이다 &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt; , 분리하여 가능하다 &lt;code&gt;.off( &quot;unload&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0a32d557fef41ee09fd9115f1e37ea31879c97d" translate="yes" xml:space="preserve">
          <source>As the element is clicked repeatedly, the messages alternate:</source>
          <target state="translated">요소를 반복해서 클릭하면 메시지가 번갈아 나타납니다.</target>
        </trans-unit>
        <trans-unit id="ca3ce62d362c76a6c59e1cb96df08c8205e39cdb" translate="yes" xml:space="preserve">
          <source>As the return value is a jQuery object, which contains an array, it's very common to call &lt;code&gt;.get()&lt;/code&gt; on the result to work with a basic array.</source>
          <target state="translated">반환 값은 배열을 포함하는 jQuery 객체이므로 기본 배열로 작업하기 위해 결과에서 &lt;code&gt;.get()&lt;/code&gt; 을 호출하는 것이 매우 일반적 입니다.</target>
        </trans-unit>
        <trans-unit id="40571ef97d237fc395c12a234f6fe0a13fc08dd1" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;.on()&lt;/code&gt;, you can pass &lt;code&gt;events&lt;/code&gt; as an object instead of specifying an &lt;code&gt;events&lt;/code&gt; string and &lt;code&gt;handler&lt;/code&gt; function as separate arguments. The keys for the &lt;code&gt;events&lt;/code&gt; object are events and/or namespaces; the values are handler functions or the special value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.on()&lt;/code&gt; 과 마찬가지로 &lt;code&gt;events&lt;/code&gt; 문자열과 &lt;code&gt;handler&lt;/code&gt; 함수를 별도의 인수로 지정하는 대신 &lt;code&gt;events&lt;/code&gt; 를 객체로 전달할 수 있습니다 . &lt;code&gt;events&lt;/code&gt; 객체 의 키 는 이벤트 및 / 또는 네임 스페이스입니다. 값은 핸들러 함수 또는 특수 값 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ffce140bc62bef3df132a8a35fcaec913eebc30c" translate="yes" xml:space="preserve">
          <source>As with other pseudo-class selectors (those that begin with a &quot;:&quot;) it is recommended to precede it with a tag name or some other selector; otherwise, the universal selector ( &quot;*&quot; ) is implied. In other words, the bare &lt;code&gt;$( &quot;:enabled&quot; )&lt;/code&gt; is equivalent to &lt;code&gt;$( &quot;*:enabled&quot; )&lt;/code&gt;, so &lt;code&gt;$( &quot;input:enabled&quot; )&lt;/code&gt; or similar should be used instead.</source>
          <target state="translated">다른 의사 클래스 선택기 ( &quot;:&quot;로 시작하는 선택기)와 마찬가지로 태그 이름이나 다른 선택기가 앞에 오는 것이 좋습니다. 그렇지 않으면 범용 선택기 ( &quot;*&quot;)가 내포됩니다. 다시 말해, &lt;code&gt;$( &quot;:enabled&quot; )&lt;/code&gt; 는 &lt;code&gt;$( &quot;*:enabled&quot; )&lt;/code&gt; 와 동일하므로 &lt;code&gt;$( &quot;input:enabled&quot; )&lt;/code&gt; 또는 이와 유사한 것을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="91c7ebdcc15f6d9b2214e27d79e62056968dc760" translate="yes" xml:space="preserve">
          <source>As with other pseudo-class selectors (those that begin with a &quot;:&quot;), it is recommended to precede &lt;code&gt;:focus&lt;/code&gt; with a tag name or some other selector; otherwise, the universal selector ( &quot;*&quot; ) is implied. In other words, the bare &lt;code&gt;$( &quot;:focus&quot; )&lt;/code&gt; is equivalent to &lt;code&gt;$( &quot;*:focus&quot; )&lt;/code&gt;. If you are looking for the currently focused element, &lt;code&gt;$( document.activeElement )&lt;/code&gt; will retrieve it without having to search the whole DOM tree.</source>
          <target state="translated">다른 의사 클래스 선택기 ( &quot;:&quot;로 시작하는 선택기) 와 마찬가지로 태그 이름이나 다른 선택 기가있는 &lt;code&gt;:focus&lt;/code&gt; 사용하는 것이 좋습니다 . 그렇지 않으면 범용 선택기 ( &quot;*&quot;)가 내포됩니다. 다시 말해 베어 &lt;code&gt;$( &quot;:focus&quot; )&lt;/code&gt; 는 &lt;code&gt;$( &quot;*:focus&quot; )&lt;/code&gt; . 현재 초점을 맞춘 요소를 찾고 있다면 &lt;code&gt;$( document.activeElement )&lt;/code&gt; 는 전체 DOM 트리를 검색하지 않고도 요소를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="647e18f3f935a3fd73427c4d7d11bea1159212ab" translate="yes" xml:space="preserve">
          <source>As with other pseudo-class selectors (those that begin with a &quot;:&quot;), it is recommended to precede it with a tag name or some other selector; otherwise, the universal selector (&quot;*&quot;) is implied. In other words, the bare &lt;code&gt;$(':disabled')&lt;/code&gt; is equivalent to &lt;code&gt;$('*:disabled')&lt;/code&gt;, so &lt;code&gt;$('input:disabled')&lt;/code&gt; or similar should be used instead.</source>
          <target state="translated">다른 의사 클래스 선택기 ( &quot;:&quot;로 시작하는 선택기)와 마찬가지로 태그 이름이나 다른 선택기 앞에이를 사용하는 것이 좋습니다. 그렇지 않으면 범용 선택기 ( &quot;*&quot;)가 내포됩니다. 다시 말해, &lt;code&gt;$(':disabled')&lt;/code&gt; 는 &lt;code&gt;$('*:disabled')&lt;/code&gt; 와 동일하므로 &lt;code&gt;$('input:disabled')&lt;/code&gt; 또는 이와 유사한 것을 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="dc98d26ed4dcbb8b34483a0df24a4492b6dd2a42" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;.prop()&lt;/code&gt; method, the &lt;code&gt;.css()&lt;/code&gt; method makes setting properties of elements quick and easy. This method can take either a property name and value as separate parameters, or a single object of key-value pairs.</source>
          <target state="translated">와 마찬가지로 &lt;code&gt;.prop()&lt;/code&gt; 메소드는 &lt;code&gt;.css()&lt;/code&gt; 메소드는 빠르고 쉬운 요소의 속성을 설정합니다. 이 방법은 속성 이름과 값을 별도의 매개 변수 또는 키-값 쌍의 단일 개체로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f0f5f64ced28ad3c6ea1455c27eb3c84bd6fc11" translate="yes" xml:space="preserve">
          <source>As would:</source>
          <target state="translated">그렇듯이</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="2c35a85354eb67c444afe51f46f20865d4490ff1" translate="yes" xml:space="preserve">
          <source>At its simplest, the &lt;code&gt;$.ajax()&lt;/code&gt; function can be called with no arguments:</source>
          <target state="translated">가장 간단한 방법으로 &lt;code&gt;$.ajax()&lt;/code&gt; 함수를 인수없이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eebe9a39cd20a1f9276dc5c15c849b02e2a3d064" translate="yes" xml:space="preserve">
          <source>At present, the only operations supported on plain JavaScript objects wrapped in jQuery are: &lt;code&gt;.data()&lt;/code&gt;,&lt;code&gt;.prop()&lt;/code&gt;,&lt;code&gt;.on()&lt;/code&gt;, &lt;code&gt;.off()&lt;/code&gt;, &lt;code&gt;.trigger()&lt;/code&gt; and &lt;code&gt;.triggerHandler()&lt;/code&gt;. The use of &lt;code&gt;.data()&lt;/code&gt; (or any method requiring &lt;code&gt;.data()&lt;/code&gt;) on a plain object will result in a new property on the object called jQuery{randomNumber} (eg. jQuery123456789).</source>
          <target state="translated">: 현재, 일반 자바 스크립트를 지원하는 유일한 작업은 jQuery를에 싸여 객체 &lt;code&gt;.data()&lt;/code&gt; , &lt;code&gt;.prop()&lt;/code&gt; , &lt;code&gt;.on()&lt;/code&gt; , &lt;code&gt;.off()&lt;/code&gt; , &lt;code&gt;.trigger()&lt;/code&gt; 및 &lt;code&gt;.triggerHandler()&lt;/code&gt; . 일반 객체 에서 &lt;code&gt;.data()&lt;/code&gt; (또는 &lt;code&gt;.data()&lt;/code&gt; 필요한 모든 메소드 )를 사용하면 jQuery {randomNumber}라는 객체에 새 속성이 생성됩니다 (예 : jQuery123456789).</target>
        </trans-unit>
        <trans-unit id="ecb41aecb43a37f1f4714367c6764a2e3a82c718" translate="yes" xml:space="preserve">
          <source>Attach a function to be executed before an Ajax request is sent. This is an Ajax Event.</source>
          <target state="translated">Ajax 요청이 전송되기 전에 실행될 함수를 첨부하십시오. 이것은 Ajax 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="0ef30079b9b383f7f9081a653a7de0d8d877983e" translate="yes" xml:space="preserve">
          <source>Attach a function to be executed whenever an Ajax request completes successfully. This is an Ajax Event.</source>
          <target state="translated">Ajax 요청이 성공적으로 완료 될 때마다 실행될 함수를 첨부하십시오. 이것은 Ajax 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="65abde1e51059fef7b669098c53e4240309a9091" translate="yes" xml:space="preserve">
          <source>Attach a handler to an event for the elements.</source>
          <target state="translated">요소의 이벤트에 핸들러를 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="9520173cdfb3475761e92ec0dc17b67944253d23" translate="yes" xml:space="preserve">
          <source>Attach a handler to an event for the elements. The handler is executed at most once per element per event type.</source>
          <target state="translated">요소의 이벤트에 핸들러를 첨부하십시오. 핸들러는 이벤트 유형 당 요소 당 최대 한 번 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="dd1a0870e2a8de2f0f02247937af519036bbdfed" translate="yes" xml:space="preserve">
          <source>Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.</source>
          <target state="translated">특정 루트 요소 집합을 기반으로 현재 또는 미래에 선택기와 일치하는 모든 요소에 대해 하나 이상의 이벤트에 처리기를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="98c3dfba5b088abc1105aa5e7a293d550b555877" translate="yes" xml:space="preserve">
          <source>Attach an event handler for all elements which match the current selector, now and in the future.</source>
          <target state="translated">현재 선택기와 현재 그리고 미래에 일치하는 모든 요소에 이벤트 핸들러를 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="730a1f9809417de4200e7e766d6835ae722f6f2b" translate="yes" xml:space="preserve">
          <source>Attach an event handler function for one or more events to the selected elements.</source>
          <target state="translated">하나 이상의 이벤트에 대한 이벤트 핸들러 기능을 선택된 요소에 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="7718624e007ddcd5de3d2599efb4ce26ce4be45a" translate="yes" xml:space="preserve">
          <source>Attach and trigger custom (non-browser) events.</source>
          <target state="translated">사용자 정의 (브라우저가 아닌) 이벤트를 첨부하고 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="7d1c1d28d6c7b408d400d9e7372e897fd8a3d9d5" translate="yes" xml:space="preserve">
          <source>Attach multiple event handlers simultaneously using a plain object.</source>
          <target state="translated">일반 객체를 사용하여 여러 이벤트 핸들러를 동시에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="e59663e406a36fe62a2952e44db5f1322fece4b8" translate="yes" xml:space="preserve">
          <source>Attach multiple events&amp;mdash;one on &lt;code&gt;mouseenter&lt;/code&gt; and one on &lt;code&gt;mouseleave&lt;/code&gt; to the same element:</source>
          <target state="translated">여러 이벤트 ( &lt;code&gt;mouseenter&lt;/code&gt; 및 &lt;code&gt;mouseleave&lt;/code&gt; 를 동일한 요소에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="29a3d64891aaf52b7afc66f87a6cb8ea96ce92e0" translate="yes" xml:space="preserve">
          <source>Attach the event handler to any element:</source>
          <target state="translated">이벤트 핸들러를 요소에 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="371fb45c710124ad9004e4e093e3213b75dafc38" translate="yes" xml:space="preserve">
          <source>Attach the event handler to the document:</source>
          <target state="translated">문서에 이벤트 핸들러를 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="b4efd20033489a911c81c3440ceaecdb239411e0" translate="yes" xml:space="preserve">
          <source>Attaches a change event to the select that gets the text for each selected option and writes them in the div. It then triggers the event for the initial text draw.</source>
          <target state="translated">선택한 각 옵션의 텍스트를 가져 와서 div에 쓰는 변경 이벤트를 선택에 첨부합니다. 그런 다음 초기 텍스트 그리기 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="b2556642260143a75c973b3604f203f2a75fc571" translate="yes" xml:space="preserve">
          <source>Attaching many delegated event handlers near the top of the document tree can degrade performance. Each time the event occurs, jQuery must compare all selectors of all attached events of that type to every element in the path from the event target up to the top of the document. For best performance, attach delegated events at a document location as close as possible to the target elements. Avoid excessive use of &lt;code&gt;document&lt;/code&gt; or &lt;code&gt;document.body&lt;/code&gt; for delegated events on large documents.</source>
          <target state="translated">문서 트리 상단 근처에 많은 위임 된 이벤트 처리기를 연결하면 성능이 저하 될 수 있습니다. 이벤트가 발생할 때마다 jQuery는 해당 유형의 모든 첨부 된 이벤트의 모든 선택기를 이벤트 대상에서 문서 상단까지 경로의 모든 요소와 비교해야합니다. 최상의 성능을 위해 대상 요소와 가능한 한 문서 위치에서 위임 된 이벤트를 첨부하십시오. 큰 문서에서 위임 된 이벤트에 &lt;code&gt;document&lt;/code&gt; 또는 &lt;code&gt;document.body&lt;/code&gt; 를 과도하게 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="438031db07e8dbb99581a0eddfde53f05f0428e9" translate="yes" xml:space="preserve">
          <source>Attempting to set focus to a hidden element causes an error in Internet Explorer. Take care to only use &lt;code&gt;.focus()&lt;/code&gt; on elements that are visible. To run an element's focus event handlers without setting focus to the element, use &lt;code&gt;.triggerHandler( &quot;focus&quot; )&lt;/code&gt; instead of &lt;code&gt;.focus()&lt;/code&gt;.</source>
          <target state="translated">숨겨진 요소에 초점을 설정하려고하면 Internet Explorer에서 오류가 발생합니다. 보이는 요소에 대해서만 &lt;code&gt;.focus()&lt;/code&gt; 를 사용하십시오 . 요소에 포커스를 설정하지 않고 요소의 포커스 이벤트 핸들러를 실행하려면 &lt;code&gt;.focus()&lt;/code&gt; 대신 &lt;code&gt;.triggerHandler( &quot;focus&quot; )&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5935930da04000b8b8eeb03cf2914fc69d607c66" translate="yes" xml:space="preserve">
          <source>Attribute Contains Prefix Selector [name|=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">속성에 접두사 선택기 포함 [name | =&amp;rdquo;value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="4d1ad996a352520e7ac2391dfc0c939bd6487d46" translate="yes" xml:space="preserve">
          <source>Attribute Contains Selector [name*=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">속성에 선택기가 포함됨 [name * =&amp;rdquo;value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="3ee11217ff69c7ef9589cf9e185fe878fe24753b" translate="yes" xml:space="preserve">
          <source>Attribute Contains Word Selector [name~=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">속성에 단어 선택기 포함 [name ~ =&amp;rdquo;value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="dfd242a454707599c6b641783fd975c362e1c233" translate="yes" xml:space="preserve">
          <source>Attribute Ends With Selector [name$=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">속성이 선택기로 끝남 [name $ =&amp;rdquo;value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="bfa0e758b75f974a165bd79193bc0240ec4d7418" translate="yes" xml:space="preserve">
          <source>Attribute Equals Selector [name=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">속성과 같음 선택기 [name =&amp;rdquo;value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="21f8a624fb6667c34833bbdf8a2ed1eb35cec8e2" translate="yes" xml:space="preserve">
          <source>Attribute Not Equal Selector [name!=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">속성이 같지 않은 선택기 [name! =&amp;rdquo;value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="449f0a00c9c533ae347d525a683eefcfc4b9d147" translate="yes" xml:space="preserve">
          <source>Attribute Starts With Selector [name^=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">속성이 선택기로 시작합니다 [name ^ =&amp;rdquo;value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="8bbfff9b4e4aa8644187046a2632e35354218de2" translate="yes" xml:space="preserve">
          <source>Attribute contains prefix selector [name|=&amp;quot;value&amp;quot;]</source>
          <target state="translated">속성에 접두사 선택기 [name | = &quot;value&quot;]가 포함됨</target>
        </trans-unit>
        <trans-unit id="1a7e61618b3b0f87a02ee49b9054c696f0c45dba" translate="yes" xml:space="preserve">
          <source>Attribute contains selector [name*=&amp;quot;value&amp;quot;]</source>
          <target state="translated">속성에 선택기 [name * = &quot;value&quot;]가 포함됨</target>
        </trans-unit>
        <trans-unit id="19db7f23c70a5f6ec8b0fafae22e0abd21b0b931" translate="yes" xml:space="preserve">
          <source>Attribute contains word selector [name~=&amp;quot;value&amp;quot;]</source>
          <target state="translated">속성에 단어 선택기가 포함되어 있습니다. [name ~ = &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="35a7afd577f64287ce640b8b8fd9b4862c555777" translate="yes" xml:space="preserve">
          <source>Attribute ends with selector [name$=&amp;quot;value&amp;quot;]</source>
          <target state="translated">속성이 선택기 [name $ = &quot;value&quot;]로 끝남</target>
        </trans-unit>
        <trans-unit id="5eb7374b195c63b7d39ec6e8e1c8f5e6044f7dd8" translate="yes" xml:space="preserve">
          <source>Attribute equals selector [name=&amp;quot;value&amp;quot;]</source>
          <target state="translated">속성이 선택자인 [name = &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="a863fb34a866da876375fb87cfdcad9ce46fa4b9" translate="yes" xml:space="preserve">
          <source>Attribute not equal selector [name!=&amp;quot;value&amp;quot;]</source>
          <target state="translated">속성이 같지 않은 선택기 [name! = &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="6f12c175f84bd5ba7d70e1134e14adf684dac500" translate="yes" xml:space="preserve">
          <source>Attribute starts with selector [name^=&amp;quot;value&amp;quot;]</source>
          <target state="translated">선택기가 [name ^ = &quot;value&quot;]로 시작하는 속성</target>
        </trans-unit>
        <trans-unit id="c50113839a2bac88d41c7500f055b1ea998aa588" translate="yes" xml:space="preserve">
          <source>Attribute values in selector expressions &lt;b&gt;must&lt;/b&gt; follow the rules for W3C CSS selectors; in general, that means anything other than a &lt;a href=&quot;https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier&quot;&gt;valid identifier&lt;/a&gt; should be surrounded by quotation marks.</source>
          <target state="translated">선택 식의 속성 값을 &lt;b&gt;해야한다&lt;/b&gt; W3C의 CSS 선택기에 대한 규칙을 준수; 일반적으로 &lt;a href=&quot;https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier&quot;&gt;유효한 식별자&lt;/a&gt; 이외의 다른 이름 은 따옴표로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="d2aec391cf1973409ad2b68ce96329b520f51268" translate="yes" xml:space="preserve">
          <source>Attributes vs. Properties</source>
          <target state="translated">속성 대 속성</target>
        </trans-unit>
        <trans-unit id="9ef0fd5bc70085a148e41e4440c88433b97d4806" translate="yes" xml:space="preserve">
          <source>Augment the resulting array by returning an array inside the function.</source>
          <target state="translated">함수 내부에서 배열을 반환하여 결과 배열을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="f769ae6c251653928e85afb1703e08f8dc12503e" translate="yes" xml:space="preserve">
          <source>Available flags are:</source>
          <target state="translated">사용 가능한 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="809ade9c90d5ba87eee5ff1513edd2af2b7d3f3d" translate="yes" xml:space="preserve">
          <source>Be aware, however, that jQuery's event binding subsystem assigns a unique id to each event handling function in order to track it when it is used to specify the function to be unbound. The function represented by &lt;code&gt;jQuery.proxy()&lt;/code&gt; is seen as a single function by the event subsystem, even when it is used to bind different contexts. To avoid unbinding the wrong handler, use a unique event namespace for binding and unbinding (e.g., &lt;code&gt;&quot;click.myproxy1&quot;&lt;/code&gt;) rather than specifying the proxied function during unbinding.</source>
          <target state="translated">그러나 jQuery의 이벤트 바인딩 서브 시스템은 바인딩 해제 할 함수를 지정하는 데 사용될 때이를 추적하기 위해 각 이벤트 처리 함수에 고유 한 ID를 지정합니다. 로 표시되는 함수 &lt;code&gt;jQuery.proxy()&lt;/code&gt; 이 다른 상황을 결합하는 데 사용되는 경우에도, 이벤트 서브 시스템에서 하나의 함수로서 보여진다. 잘못된 핸들러 바인딩을 해제하지 않으려면 바인딩 해제 시 프록시 함수를 지정하는 대신 바인딩 및 바인딩 해제 (예 : &lt;code&gt;&quot;click.myproxy1&quot;&lt;/code&gt; )에 고유 한 이벤트 네임 스페이스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="155e75714f44125d3e5465a30666f64968695c99" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;$.Callbacks()&lt;/code&gt; supports a list of flags rather than just one, setting several flags has a cumulative effect similar to &quot;&amp;amp;&amp;amp;&quot;. This means it's possible to combine flags to create callback lists that, say, both are</source>
          <target state="translated">때문에 &lt;code&gt;$.Callbacks()&lt;/code&gt; 여러 플래그를 설정하지 않고 하나 이상의 플래그 목록을 지원합니다 &quot;&amp;amp;&amp;amp;&quot;와 유사한 누적 효과가 있습니다. 즉, 플래그를 결합하여 콜백 목록을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="102f63f32cf11fc98c4592b357e93b6acf9190f8" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;$.browser&lt;/code&gt; uses &lt;code&gt;navigator.userAgent&lt;/code&gt; to determine the platform, it is vulnerable to spoofing by the user or misrepresentation by the browser itself. It is always best to avoid browser-specific code entirely where possible. Instead of relying on &lt;code&gt;$.browser&lt;/code&gt; it's better to use libraries like &lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;$.browser&lt;/code&gt; 사용 &lt;code&gt;navigator.userAgent&lt;/code&gt; 를 플랫폼을 결정하기 위해서는 브라우저 자체에 의해 사용자 또는 허위 진술에 의해 스푸핑에 취약합니다. 가능한 경우 항상 브라우저 별 코드를 완전히 피하는 것이 가장 좋습니다. &lt;code&gt;$.browser&lt;/code&gt; 에 의존하는 대신 &lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt; 과 같은 라이브러리를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="fba62bc075131985dca041eade026044d9c0b20b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:animated&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:animated&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:animated&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:animated&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:animated&lt;/code&gt; JQuery와 확장과 CSS 사양의 일부이며, 사용하는 쿼리 &lt;code&gt;:animated&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:animated&lt;/code&gt; 를 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:animated&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c0ba32512408cd28c001e239134c80a4c8a1ec7" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:button&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:button&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:button&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:button&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:button&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:button&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:button&lt;/code&gt; 을 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:button&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e280d817fea7a068dc01c630e3452a0b8762aa87" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:checkbox&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:checkbox&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;checkbox&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:checkbox&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:checkbox&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;[type=&quot;checkbox&quot;]&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="81d81e9c3fd84ac8ff8994f846e21ab25f9f588b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:eq()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:eq()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$(&quot;your-pure-css-selector&quot;).eq(index)&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:eq()&lt;/code&gt; , JQuery와 확장이 아닌 CSS 사양의 일부 사용하여 쿼리 &lt;code&gt;:eq()&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;$(&quot;your-pure-css-selector&quot;).eq(index)&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="df1efd09e52b8adadf50e4ef32256dff3e5848e2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:even&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:even&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:even&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:even&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:even&lt;/code&gt; , JQuery와 확장이 아닌 CSS 사양의 일부 사용하여 쿼리 &lt;code&gt;:even&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:even&lt;/code&gt; 을 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:even&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cfc302df575a97a73bcc8eb11b4b03cf75bd1f4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:file&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:file&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;file&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:file&lt;/code&gt; , CSS를 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:file&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;[type=&quot;file&quot;]&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9186afa117ea9cf6bd900cf6c121ab212431f201" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:first&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:first&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:first&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:first&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 것은 &lt;code&gt;:first&lt;/code&gt; JQuery와 확장과 CSS 사양의 일부가 사용하는 쿼리입니다 &lt;code&gt;:first&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:first&lt;/code&gt; 를 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:first&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c618e65c204a65f50c5e7e5d92acb9c2506387e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:gt()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:gt()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(index)&lt;/code&gt; instead.</source>
          <target state="translated">왜냐하면 &lt;code&gt;:gt()&lt;/code&gt; , JQuery와 확장이 아닌 CSS 규격의 일부 쿼리하여 &lt;code&gt;:gt()&lt;/code&gt; 기본 DOM에 의해 제공되는 성능 향상의 장점이 걸릴 수 &lt;code&gt;querySelectorAll()&lt;/code&gt; 방법. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(index)&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="67c3d2c92b3cb374d28f6ec3ee73cfe8c216a3f1" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:has()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:has()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).has( selector/DOMElement )&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:has()&lt;/code&gt; 는 CSS 사양의 jQuery를 확장하지 일부 사용하여 조회 &lt;code&gt;:has()&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).has( selector/DOMElement )&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b79c9bf2004c81b510c41f6754dc7a5ab0349048" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:header&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:header&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:header&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:header&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:header&lt;/code&gt; JQuery와 확장이 아닌 CSS 사양의 일부 사용하여 쿼리입니다 &lt;code&gt;:header&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:header&lt;/code&gt; 를 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:header&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df0d7df1ba139b99f1b5b05d109c3112e9b83f61" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:hidden&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:hidden&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:hidden&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:hidden&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:hidden&lt;/code&gt; JQuery와 확장과 CSS 사양의 일부이며, 사용하는 쿼리 &lt;code&gt;:hidden&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:hidden&lt;/code&gt; 을 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:hidden&quot;)&lt;/code&gt; 을 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2315d92211dbb5fe9630dde928552295843e6f5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:image&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:image&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;image&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:image&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:image&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;[type=&quot;image&quot;]&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7b87566111c4af273bc22b379bd5f9124269f7f5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:input&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:input&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:input&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:input&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:input&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:input&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:input&lt;/code&gt; 을 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:input&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="166fbaeb73a5a49004db24f41430b109101e1d32" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:last&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:last&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:last&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:last&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:last&lt;/code&gt; JQuery와 확장과 CSS 사양의 일부입니다 쿼리를 사용하여 &lt;code&gt;:last&lt;/code&gt; 원시 DOM에서 제공하는 성능 향상의 이점을 취할 수 없습니다 &lt;code&gt;querySelectorAll()&lt;/code&gt; 방법. &lt;code&gt;:last&lt;/code&gt; 를 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:last&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e44398bef963cf538e451a511d36b27507e47edd" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:lt()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:lt()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(0, index)&lt;/code&gt; instead.</source>
          <target state="translated">왜냐하면 &lt;code&gt;:lt()&lt;/code&gt; , JQuery와 확장이 아닌 CSS 규격의 일부 쿼리하여 &lt;code&gt;:lt()&lt;/code&gt; 기본 DOM에 의해 제공되는 성능 향상의 장점이 걸릴 수 &lt;code&gt;querySelectorAll()&lt;/code&gt; 방법. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(0, index)&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e4d546b8017e87deed3fa24827c782a3482dec3a" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:odd&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:odd&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:odd&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:odd&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:odd&lt;/code&gt; JQuery와 확장이 아닌 CSS 사양의 일부, 사용하는 쿼리입니다 &lt;code&gt;:odd&lt;/code&gt; 캔은 기본 DOM에서 제공하는 성능 향상의 이점하지 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:odd&lt;/code&gt; 를 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:odd&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4636a2dcb2de766c267501224d0877ed6e9918c" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:parent&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:parent&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:parent&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:parent&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:parent&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:parent&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:parent&lt;/code&gt; 를 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:parent&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc6d187ab769466036265e4d155f8b76b70fe708" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:password&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:password&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;password&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:password&lt;/code&gt; 는 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:password&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;[type=&quot;password&quot;]&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bc37fd11e5c4dc4385cdad98288889e04e8c15b4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:radio&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:radio&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;radio&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:radio&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:radio&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;[type=&quot;radio&quot;]&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c95325ab72ee389dcb1a96eb39c067ae28e4796f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:reset&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:reset&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;reset&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:reset&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:reset&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;[type=&quot;reset&quot;]&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="03bef5abf0e51bfe726beee5091dfe8672e55d75" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:selected&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:selected&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:selected&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:selected&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:selected&lt;/code&gt; JQuery와 확장과 CSS 사양의 일부이며, 사용하는 쿼리 &lt;code&gt;:selected&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:selected&lt;/code&gt; 를 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:selected&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e1d90037209ec897039be5c4a01a3f42990b70c" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:submit&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:submit&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;input[type=&quot;submit&quot;], button[type=&quot;submit&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:submit&lt;/code&gt; JQuery와 확장이 아닌 CSS 사양의 일부 쿼리를 사용하여 &lt;code&gt;:submit&lt;/code&gt; 네이티브 DOM에서 제공하는 성능 향상의 이점을 취할 수 없습니다 &lt;code&gt;querySelectorAll()&lt;/code&gt; 방법. 최신 브라우저에서 더 나은 성능을 얻으려면 &lt;code&gt;input[type=&quot;submit&quot;], button[type=&quot;submit&quot;]&lt;/code&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1078b314d0ec8fdaefc501fbd80cab95e17bb479" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:text&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:text&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;text&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;:text&lt;/code&gt; 의 CSS 사양의 jQuery를 확장하고 일부가 아닌 것은 사용하여 쿼리 &lt;code&gt;:text&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;[type=&quot;text&quot;]&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="560816a74940a28f31d1fc729acfed137a26e2ec" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:visible&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:visible&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:visible&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:visible&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;:visible&lt;/code&gt; JQuery와 확장과 CSS 사양의 일부가 사용하는 쿼리입니다 &lt;code&gt;:visible&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점받을 수 없어 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드를. &lt;code&gt;:visible&lt;/code&gt; 을 사용하여 요소를 선택할 때 최상의 성능을 얻으려면 먼저 순수한 CSS 선택기를 사용하여 요소를 선택한 다음 &lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:visible&quot;)&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02bb2b740533d10901d7713398fd460f693568ed" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).not( &quot;[name='value']&quot; )&lt;/code&gt; instead.</source>
          <target state="translated">때문에 &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; 를 사용하여 jQuery를 확장 아니라 CSS 사양의 일부 쿼리입니다 &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; 기본 DOM에서 제공하는 성능 향상의 이점을 취할 수 없습니다 &lt;code&gt;querySelectorAll()&lt;/code&gt; 방법. 최신 브라우저에서 더 나은 성능을 얻으려면 대신 &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).not( &quot;[name='value']&quot; )&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="57063691614e306ad4ea2a1bec14acee623e5e34" translate="yes" xml:space="preserve">
          <source>Because JavaScript treats 0 as loosely equal to false (i.e. 0 == false, but 0 !== false), to check for the presence of &lt;code&gt;value&lt;/code&gt; within &lt;code&gt;array&lt;/code&gt;, you need to check if it's not equal to (or greater than) -1.</source>
          <target state="translated">JavaScript는 0을 느슨하게 false (예 : 0 == false, 0! == false)로 취급하므로 &lt;code&gt;array&lt;/code&gt; 내 &lt;code&gt;value&lt;/code&gt; 의 존재 여부 를 확인하려면 -1과 같지 않은지 확인해야합니다. .</target>
        </trans-unit>
        <trans-unit id="c7c5e2688cc5e2e14c8f9617ca8354d496dcf606" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; 선택자 구현은 CSS 사양에서 엄격하게 파생 되었기 때문에 &lt;code&gt;n&lt;/code&gt; 값 은 &quot;1- 인덱싱&quot;입니다. 즉, 계산이 1부터 시작됩니다. &lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; 와 같은 다른 선택기 표현식의 경우 jQuery는 JavaScript의 &quot;0- 색인&quot;계산을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="5232024b50f76617575e755c1fa91c3378fab495" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; 선택자 구현은 CSS 사양에서 엄격하게 파생 되었기 때문에 &lt;code&gt;n&lt;/code&gt; 값 은 &quot;1- 인덱싱&quot;입니다. 즉, 계산이 1부터 시작됩니다. &lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; 와 같은 다른 선택기 표현식의 경우 jQuery는 JavaScript의 &quot;0- 색인&quot;계산을 따릅니다. 단일 주어 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 세 함유 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; S를 &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; 제, 마지막 선택 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5596c8923129cc6c65ec0f09f3ff76d6920c979c" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; 선택자 구현은 CSS 사양에서 엄격하게 파생 되었기 때문에 &lt;code&gt;n&lt;/code&gt; 값 은 &quot;1- 인덱싱&quot;입니다. 즉, 계산이 1부터 시작됩니다. &lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; 와 같은 다른 선택기 표현식의 경우 jQuery는 JavaScript의 &quot;0- 색인&quot;계산을 따릅니다. 단일 주어 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 세 함유 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; S를 &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; 제, 마지막 선택 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ea5fa4f9a74540fcadf38f86616f47d2d70803e" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; selectors 구현은 CSS 사양에서 엄격하게 파생되므로 &lt;code&gt;n&lt;/code&gt; 의 값 은 &quot;1-indexed&quot;입니다. 즉, 계산은 1부터 시작합니다 &lt;code&gt;:eq()&lt;/code&gt; 또는 &lt;code&gt;:even&lt;/code&gt; jQuery 와 같은 다른 선택기 식의 경우 JavaScript의 &quot;0 인덱스&quot;계산</target>
        </trans-unit>
        <trans-unit id="18c7c2f80f7cc096128494b692c7bee1d36d9d9a" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; selectors 구현은 CSS 사양에서 엄격하게 파생되므로 &lt;code&gt;n&lt;/code&gt; 의 값 은 &quot;1-indexed&quot;입니다. 즉, 계산은 1부터 시작합니다 &lt;code&gt;:eq()&lt;/code&gt; 또는 &lt;code&gt;:even&lt;/code&gt; jQuery 와 같은 다른 선택기 식의 경우 JavaScript의 &quot;0 인덱스&quot;계산 단일 주어 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 세 함유 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; S를 &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; 제, 마지막 선택 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e55b8aa74165cae99e4a3219bc884520b7812eb" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; selectors 구현은 CSS 사양에서 엄격하게 파생되므로 &lt;code&gt;n&lt;/code&gt; 의 값 은 &quot;1-indexed&quot;입니다. 즉, 계산은 1부터 시작합니다 &lt;code&gt;:eq()&lt;/code&gt; 또는 &lt;code&gt;:even&lt;/code&gt; jQuery 와 같은 다른 선택기 식의 경우 JavaScript의 &quot;0 인덱스&quot;계산 단일 주어 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 세 함유 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; S를 &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; 제, 마지막 선택 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4a6c18948e32235339000716e8a8997c1aad84a" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; selects the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; while &lt;code&gt;$( &quot;li:eq(1)&quot; )&lt;/code&gt; selects the second.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; selectors 구현은 CSS 사양에서 엄격하게 파생되므로 &lt;code&gt;n&lt;/code&gt; 의 값 은 &quot;1-indexed&quot;입니다. 즉, 계산은 1부터 시작합니다 &lt;code&gt;:eq()&lt;/code&gt; 또는 &lt;code&gt;:even&lt;/code&gt; jQuery 와 같은 다른 선택기 식의 경우 JavaScript의 &quot;0 인덱스&quot;계산 주어진 하나의 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 두 함유 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; S를 &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; 최초의 선택 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 동안 &lt;code&gt;$( &quot;li:eq(1)&quot; )&lt;/code&gt; 제를 선택한다.</target>
        </trans-unit>
        <trans-unit id="cf135649f933835bdcbcb1d71b6185dcd9364021" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. jQuery methods like &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; selects the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; while &lt;code&gt;$( &quot;li&quot; ).eq( 1 )&lt;/code&gt; selects the second.</source>
          <target state="translated">jQuery의 &lt;code&gt;:nth-&lt;/code&gt; selectors 구현은 CSS 사양에서 엄격하게 파생 되었기 때문에 &lt;code&gt;n&lt;/code&gt; 값 은 &quot;1-indexed&quot;입니다. 즉, 계산은 1부터 시작됩니다. &lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; 와 같은 jQuery 메서드는 JavaScript를 따릅니다. &quot;0- 색인&quot;계산. 주어진 하나의 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 두 함유 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; S를 &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; 최초의 선택 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 동안 &lt;code&gt;$( &quot;li&quot; ).eq( 1 )&lt;/code&gt; 초를 선택한다.</target>
        </trans-unit>
        <trans-unit id="a39895609d1da7069721a251888780642a29dab4" translate="yes" xml:space="preserve">
          <source>Because the handlers are closures that both have &lt;code&gt;message&lt;/code&gt; in their environment, both will display the message</source>
          <target state="translated">핸들러는 해당 환경에 &lt;code&gt;message&lt;/code&gt; 가있는 클로저이므로 둘 다 메시지 를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="eb873c2fff1625bd36983841d57f798d8fb056a3" translate="yes" xml:space="preserve">
          <source>Before jQuery 1.7, to stop further handlers from executing after one bound using &lt;code&gt;.live()&lt;/code&gt;, the handler must return &lt;code&gt;false&lt;/code&gt;. Calling &lt;code&gt;.stopPropagation()&lt;/code&gt; will not accomplish this.</source>
          <target state="translated">jQuery 1.7 이전에는 &lt;code&gt;.live()&lt;/code&gt; 사용하여 하나의 바인딩 된 후 추가 핸들러가 실행되지 않도록 하려면 핸들러가 &lt;code&gt;false&lt;/code&gt; 를 리턴해야합니다 . &lt;code&gt;.stopPropagation()&lt;/code&gt; 을 호출 하면이 작업을 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="41ef87fdd757c7963c932739a1821aa8b7a83813" translate="yes" xml:space="preserve">
          <source>Before jQuery version 1.12/2.2, the &lt;code&gt;.addClass()&lt;/code&gt; method manipulated the &lt;code&gt;className&lt;/code&gt;&lt;em&gt;property&lt;/em&gt; of the selected elements, not the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt;. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</source>
          <target state="translated">jQuery 버전 1.12 / 2.2 이전에는 &lt;code&gt;.addClass()&lt;/code&gt; 메소드 가 &lt;code&gt;class&lt;/code&gt; &lt;em&gt;속성이&lt;/em&gt; 아닌 선택된 요소 의 &lt;code&gt;className&lt;/code&gt; &lt;em&gt;특성&lt;/em&gt; 을 조작했습니다 . 속성이 변경되면 그에 따라 속성을 업데이트 한 것이 브라우저였습니다. 이 동작의 의미는이 방법이 HTML DOM 의미론 (예 : 순수 XML 문서가 아님)이있는 문서에서만 작동한다는 것입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c66cb765464159d96e2a7ac875b9a4030b673a40" translate="yes" xml:space="preserve">
          <source>Before jQuery version 1.12/2.2, the &lt;code&gt;.removeClass()&lt;/code&gt; method manipulated the &lt;code&gt;className&lt;/code&gt;&lt;em&gt;property&lt;/em&gt; of the selected elements, not the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt;. Once the property was changed, it was the browser that updated the attribute accordingly. This means that when the &lt;code&gt;class&lt;/code&gt; attribute was updated and the last class name was removed, the browser might have set the attribute's value to an empty string instead of removing the attribute completely. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</source>
          <target state="translated">jQuery 버전 1.12 / 2.2 이전에는 &lt;code&gt;.removeClass()&lt;/code&gt; 메소드 가 &lt;code&gt;class&lt;/code&gt; &lt;em&gt;속성이&lt;/em&gt; 아닌 선택된 요소 의 &lt;code&gt;className&lt;/code&gt; &lt;em&gt;특성&lt;/em&gt; 을 조작했습니다 . 속성이 변경되면 그에 따라 속성을 업데이트 한 것이 브라우저였습니다. 이는 &lt;code&gt;class&lt;/code&gt; 속성이 업데이트되고 마지막 클래스 이름이 제거되면 브라우저가 속성을 완전히 제거하는 대신 속성 값을 빈 문자열로 설정했을 수 있음을 의미합니다. 이 동작의 의미는이 방법이 HTML DOM 의미론 (예 : 순수 XML 문서가 아님)이있는 문서에서만 작동한다는 것입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49cafa2f2a412ee2e1f802c1bfc7df49a03f4136" translate="yes" xml:space="preserve">
          <source>Before normalizing a vendor-specific CSS property, first determine whether the browser supports the standard property or a vendor-prefixed variation. For example, to check for support of the &lt;code&gt;border-radius&lt;/code&gt; property, see if any variation is a member of a temporary element's &lt;code&gt;style&lt;/code&gt; object.</source>
          <target state="translated">공급 업체별 CSS 속성을 정규화하기 전에 먼저 브라우저가 표준 속성 또는 공급 업체 접두사 변형을 지원하는지 확인하십시오. 예를 들어 &lt;code&gt;border-radius&lt;/code&gt; 속성 의 지원 여부를 확인하려면 변형이 임시 요소 &lt;code&gt;style&lt;/code&gt; 개체 의 멤버인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="637a5eb69033874690f2f58c7b85efbf7ff0ad0a" translate="yes" xml:space="preserve">
          <source>Begins with the current element</source>
          <target state="translated">현재 요소로 시작</target>
        </trans-unit>
        <trans-unit id="5feeaa7d68127f14007039b4c736d27a3c38a304" translate="yes" xml:space="preserve">
          <source>Begins with the parent element</source>
          <target state="translated">부모 요소로 시작</target>
        </trans-unit>
        <trans-unit id="1bc3dad368acdaada0707799f33febed1af16546" translate="yes" xml:space="preserve">
          <source>Bind a single click to divs with an id that adds the id to the div's text.</source>
          <target state="translated">한 번의 클릭으로 ID를 div 텍스트에 추가하는 ID로 div에 바인딩하십시오.</target>
        </trans-unit>
        <trans-unit id="851052b533894bf64b47bd63454478f66a28d64c" translate="yes" xml:space="preserve">
          <source>Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.</source>
          <target state="translated">마우스가 요소에 들어갈 때 발생하는 이벤트 핸들러를 바인딩하거나 요소에서 해당 핸들러를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="882f176c047ac3d6aa46371bc4ddf1caf6bb48bf" translate="yes" xml:space="preserve">
          <source>Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.</source>
          <target state="translated">마우스가 요소를 떠날 때 발생하도록 이벤트 핸들러를 바인드하거나 해당 핸들러를 요소에서 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="032ec17a21a34446b2222e705fa60c11a8eac9ca" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;blur&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 처리기를&amp;ldquo;흐림&amp;rdquo;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="5f23c4d496a726fad44a992af6d779e8e17abf64" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;change&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;change&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="eea6f5f866a82c3aca113f8801153eb22bcfacba" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;click&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;click&quot;JavaScript 이벤트에 바인드하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="1b9bade6c7acfc3afffee3a8574f63a348276d42" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;contextmenu&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;contextmenu&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="e738d1b9db1a686decdbc73717dd5948c08e8135" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;dblclick&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;dblclick&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="e4b9a09819dd55dc3c8f1d28f30821a0251b9633" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;error&amp;rdquo; JavaScript event.</source>
          <target state="translated">이벤트 핸들러를 &quot;오류&quot;JavaScript 이벤트에 바인드하십시오.</target>
        </trans-unit>
        <trans-unit id="20574032d198c76b3cdf0a4b17794f5a5cdf98ce" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;focus&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;초점&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="34d600be9c8d6096ccbbed7c4d3b116895bed66e" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;focusin&amp;rdquo; event.</source>
          <target state="translated">이벤트 핸들러를 &quot;focusin&quot;이벤트에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="5f713250c674c7d2b5bfc0a2e36bea1ff581f431" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;focusout&amp;rdquo; JavaScript event.</source>
          <target state="translated">이벤트 핸들러를 &quot;focusout&quot;JavaScript 이벤트에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="caed2031efff74c2090bb7b03338b4425548ce4f" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;keydown&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;keydown&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="1d3966dfe615a6c8068c1ee1e44a40ed2e627253" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;keypress&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 처리기를 &quot;keypress&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="87ab6c096c2cf0f64e51e3c6d42f220137502ce9" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;keyup&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 처리기를&amp;ldquo;키업&amp;rdquo;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="b8c442d2cec74119e092347646fdbfc042a981c4" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;load&amp;rdquo; JavaScript event.</source>
          <target state="translated">이벤트 핸들러를 &quot;로드&quot;JavaScript 이벤트에 바인드하십시오.</target>
        </trans-unit>
        <trans-unit id="65b83d5cf409c3310a91a830774a609fc1be19ce" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mousedown&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;mousedown&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="e5bb45f91cb4427cf9423c488a1ccfa88caba945" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mousemove&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;mousemove&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="cbf40019166e08a89113c61d3d408aaf9e8f3286" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mouseout&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;mouseout&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="bb0bacba21117f955e30b9f03cea897d37258ee9" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mouseover&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;마우스 오버&quot;JavaScript 이벤트에 바인드하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="09fd25202784b4e109916a6a5cdf8c550fa2166d" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mouseup&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;마우스&quot;JavaScript 이벤트에 바인드하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="821e997d10f45647c1a27f92fa0329ace6f017a8" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;resize&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;크기 조정&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="94faf9cad8831236c2e0a0a4338faea6b8f8e81b" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;scroll&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 처리기를 &quot;스크롤&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="d827cb9541dd3d7eb7fbd0b82e081a7f4cead162" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;select&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를&amp;ldquo;select&amp;rdquo;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="bc622fcaecffa93a1ddda490076e0d7a83a8c526" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;submit&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">이벤트 핸들러를 &quot;제출&quot;JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="675f07ebfb7a651461d78438cd00a34d86bc4ad3" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;unload&amp;rdquo; JavaScript event.</source>
          <target state="translated">이벤트 핸들러를 &quot;언로드&quot;JavaScript 이벤트에 바인드하십시오.</target>
        </trans-unit>
        <trans-unit id="05e4d5abe2dad5e226681754c378b2b968c6812d" translate="yes" xml:space="preserve">
          <source>Bind custom events with .live().</source>
          <target state="translated">.live ()로 사용자 지정 이벤트를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="2a3a834648736e146ab5d34929a75f7245aaf737" translate="yes" xml:space="preserve">
          <source>Bind custom events.</source>
          <target state="translated">맞춤 이벤트를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="833ce0c9c546b14d09cb0d45bb2b2852e683f85a" translate="yes" xml:space="preserve">
          <source>Bind multiple events simultaneously.</source>
          <target state="translated">여러 이벤트를 동시에 바인드하십시오.</target>
        </trans-unit>
        <trans-unit id="a3dfc98e0b12e4b597738ab3d20c9b3bd4ce3151" translate="yes" xml:space="preserve">
          <source>Bind one or two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.</source>
          <target state="translated">일치하는 요소에 하나 또는 두 개의 핸들러를 바인드하여 마우스 포인터가 요소를 입력하고 떠날 때 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="5f02ab9fdf3fdc70be0b67d750fbe4a408c96438" translate="yes" xml:space="preserve">
          <source>Bind two or more handlers to the matched elements, to be executed on alternate clicks.</source>
          <target state="translated">대체 클릭시 실행되도록 일치하는 요소에 둘 이상의 핸들러를 바인드하십시오.</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="134aab82a8b8a88bd0d6f79e7cfb352682be75c6" translate="yes" xml:space="preserve">
          <source>Boolean Default</source>
          <target state="translated">부울 기본값</target>
        </trans-unit>
        <trans-unit id="9e128578d5def943e4807ecbc159f072a57ecc23" translate="yes" xml:space="preserve">
          <source>Boolean default</source>
          <target state="translated">부울 기본값</target>
        </trans-unit>
        <trans-unit id="6c64b6e3a46e39e929a68dc6157f5afb5d205b8a" translate="yes" xml:space="preserve">
          <source>Borrowing from CSS 1&amp;ndash;3, and then adding its own, jQuery offers a powerful set of tools for matching a set of elements in a document.</source>
          <target state="translated">CSS 1&amp;ndash;3에서 빌린 다음 자체적으로 추가하는 jQuery는 문서의 요소 세트를 일치시키기위한 강력한 도구 세트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f0dde38b7f8442abb6954f7cd4c1a3cc6d6981a4" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;.size()&lt;/code&gt; and &lt;code&gt;.length&lt;/code&gt; identify the number of items:</source>
          <target state="translated">둘 다 &lt;code&gt;.size()&lt;/code&gt; 와 &lt;code&gt;.length&lt;/code&gt; 는 항목의 수를 확인 :</target>
        </trans-unit>
        <trans-unit id="a08d683fc1f979506c7b448a002043ca95161a79" translate="yes" xml:space="preserve">
          <source>Both NaN and Infinity are of type &quot;number&quot;:</source>
          <target state="translated">NaN과 Infinity는 모두 &quot;숫자&quot;유형입니다.</target>
        </trans-unit>
        <trans-unit id="44a3da72766aa1cefecfe87886ba57c6209e3bf7" translate="yes" xml:space="preserve">
          <source>Browsers also provide the &lt;code&gt;load&lt;/code&gt; event on the &lt;code&gt;window&lt;/code&gt; object. When this event fires it indicates that all assets on the page have loaded, including images. This event can be watched in jQuery using &lt;code&gt;$( window ).on( &quot;load&quot;, handler )&lt;/code&gt;. In cases where code relies on loaded assets (for example, if the dimensions of an image are required), the code should be placed in a handler for the &lt;code&gt;load&lt;/code&gt; event instead.</source>
          <target state="translated">브라우저는 또한 &lt;code&gt;window&lt;/code&gt; 객체 에 &lt;code&gt;load&lt;/code&gt; 이벤트를 제공 합니다. 이 이벤트가 발생하면 이미지를 포함하여 페이지의 모든 자산이로드되었음을 나타냅니다. 이 이벤트는 &lt;code&gt;$( window ).on( &quot;load&quot;, handler )&lt;/code&gt; 사용하여 jQuery에서 볼 수 있습니다 . 코드가로드 된 자산에 의존하는 경우 (예 : 이미지의 크기가 필요한 경우) 대신 &lt;code&gt;load&lt;/code&gt; 이벤트 에 대한 핸들러에 코드를 배치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7668c744d8d2f6e0fd344b265e8971e673274ce7" translate="yes" xml:space="preserve">
          <source>Build a list of all the values within a form.</source>
          <target state="translated">양식 내의 모든 값 목록을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="99d86ca93684fdcd47f5093337c5f98e93368ffc" translate="yes" xml:space="preserve">
          <source>Built-in Methods</source>
          <target state="translated">내장 방법</target>
        </trans-unit>
        <trans-unit id="af714f981e3d0837ea96ccaa766e31ed322e29d1" translate="yes" xml:space="preserve">
          <source>But:</source>
          <target state="translated">But:</target>
        </trans-unit>
        <trans-unit id="f599fdac888dcf3cbb48e3afd2745d17b6d06996" translate="yes" xml:space="preserve">
          <source>By default a callback list will act like an event callback list and can be &quot;fired&quot; multiple times.</source>
          <target state="translated">기본적으로 콜백 목록은 이벤트 콜백 목록처럼 작동하며 여러 번 &quot;실행&quot;될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e9c56195b738ad8a182f20495b02413b9845ed7" translate="yes" xml:space="preserve">
          <source>By default the object contains the following properties:</source>
          <target state="translated">기본적으로 개체에는 다음 속성이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9d08857b9fa739aeed4b41ba9940e069c5071ff6" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;$.getScript()&lt;/code&gt; sets the cache setting to &lt;code&gt;false&lt;/code&gt;. This appends a timestamped query parameter to the request URL to ensure that the browser downloads the script each time it is requested. You can override this feature by setting the cache property globally using &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;&lt;code&gt;$.ajaxSetup()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">기본적으로 &lt;code&gt;$.getScript()&lt;/code&gt; 는 캐시 설정을 &lt;code&gt;false&lt;/code&gt; 로 설정합니다 . 요청 된 시간마다 브라우저가 스크립트를 다운로드 할 수 있도록 타임 스탬프 된 쿼리 매개 변수를 요청 URL에 추가합니다. &lt;a href=&quot;jquery.ajaxsetup&quot;&gt; &lt;code&gt;$.ajaxSetup()&lt;/code&gt; &lt;/a&gt; 사용하여 캐시 속성을 전역 적으로 설정하여이 기능을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ab9366a1bea5a4c5c7a977bc4d69433c5595051" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;&quot;fx&quot;&lt;/code&gt;, which means the returned Promise is resolved when all animations of the selected elements have completed.</source>
          <target state="translated">기본적으로 &lt;code&gt;type&lt;/code&gt; 은 &lt;code&gt;&quot;fx&quot;&lt;/code&gt; 이며, 이는 선택한 요소의 모든 애니메이션이 완료되면 반환 된 약속이 해결됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b22c5f6f0fabfe4cd047c2051928f78b488a8574" translate="yes" xml:space="preserve">
          <source>By default, Ajax requests are sent using the GET HTTP method. If the POST method is required, the method can be specified by setting a value for the &lt;code&gt;type&lt;/code&gt; option. This option affects how the contents of the &lt;code&gt;data&lt;/code&gt; option are sent to the server. POST data will always be transmitted to the server using UTF-8 charset, per the W3C XMLHTTPRequest standard.</source>
          <target state="translated">기본적으로 Ajax 요청은 GET HTTP 메소드를 사용하여 전송됩니다. POST 방법이 필요한 경우 &lt;code&gt;type&lt;/code&gt; 옵션 의 값을 설정하여 방법을 지정할 수 있습니다 . 이 옵션은 &lt;code&gt;data&lt;/code&gt; 옵션 의 내용 이 서버로 전송되는 방식에 영향을줍니다 . POST 데이터는 항상 W3C XMLHTTPRequest 표준에 따라 UTF-8 문자 세트를 사용하여 서버로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="426b3ee051b4ee35449ab731f507b89586c3e858" translate="yes" xml:space="preserve">
          <source>By default, all requests are sent asynchronously (i.e. this is set to &lt;code&gt;true&lt;/code&gt; by default). If you need synchronous requests, set this option to &lt;code&gt;false&lt;/code&gt;. Cross-domain requests and &lt;code&gt;dataType: &quot;jsonp&quot;&lt;/code&gt; requests do not support synchronous operation. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active. &lt;strong&gt;As of jQuery 1.8&lt;/strong&gt;, the use of &lt;code&gt;async: false&lt;/code&gt; with jqXHR (&lt;code&gt;$.Deferred&lt;/code&gt;) is deprecated; you must use the success/error/complete callback options instead of the corresponding methods of the jqXHR object such as &lt;code&gt;jqXHR.done()&lt;/code&gt;.</source>
          <target state="translated">기본적으로 모든 요청은 비동기 적으로 전송됩니다 (즉 , 기본적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정 됨). 동기 요청이 필요한 경우이 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 도메인 간 요청 및 &lt;code&gt;dataType: &quot;jsonp&quot;&lt;/code&gt; 요청은 동기 작업을 지원하지 않습니다. 동기 요청은 브라우저를 일시적으로 잠글 수 있으며 요청이 활성화 된 동안 모든 작업을 비활성화 할 수 있습니다. &lt;strong&gt;jQuery 1.8&lt;/strong&gt; 부터 &lt;code&gt;async: false&lt;/code&gt; jqXHR ( &lt;code&gt;$.Deferred&lt;/code&gt; ) 와 함께 false 사용은 더 이상 사용되지 않습니다. &lt;code&gt;jqXHR.done()&lt;/code&gt; 과 같은 jqXHR 객체의 해당 메소드 대신 성공 / 오류 / 완료 콜백 옵션을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ad8d9d8f966f0dfeb28f7ab2c2ca1c093887621e" translate="yes" xml:space="preserve">
          <source>By default, data passed in to the &lt;code&gt;data&lt;/code&gt; option as an object (technically, anything other than a string) will be processed and transformed into a query string, fitting to the default content-type &quot;application/x-www-form-urlencoded&quot;. If you want to send a DOMDocument, or other non-processed data, set this option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;data&lt;/code&gt; 옵션에 객체 (기술적으로 문자열 이외의 것)로 전달 된 데이터 는 기본 콘텐츠 유형 &quot;application / x-www-form-urlencoded&quot;에 맞게 쿼리 문자열로 처리 및 변환됩니다. . DOMDocument 또는 기타 처리되지 않은 데이터를 보내려면이 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d95d71c179f26cbfbe1c0efcca02098e1e2fa681" translate="yes" xml:space="preserve">
          <source>By default, elements are created with an &lt;code&gt;.ownerDocument&lt;/code&gt; matching the document into which the jQuery library was loaded. Elements being injected into a different document should be created using that document, e.g., &lt;code&gt;$(&quot;&amp;lt;p&amp;gt;hello iframe&amp;lt;/p&amp;gt;&quot;, $(&quot;#myiframe&quot;).prop(&quot;contentWindow&quot;).document)&lt;/code&gt;.</source>
          <target state="translated">기본적으로 요소는 jQuery 라이브러리가로드 된 문서 와 일치 하는 &lt;code&gt;.ownerDocument&lt;/code&gt; 로 작성됩니다 . 다른 문서에 주입되는 요소는 해당 문서를 사용하여 작성해야합니다 &lt;code&gt;$(&quot;&amp;lt;p&amp;gt;hello iframe&amp;lt;/p&amp;gt;&quot;, $(&quot;#myiframe&quot;).prop(&quot;contentWindow&quot;).document)&lt;/code&gt; 예 : $ ( &quot;&amp;lt;p&amp;gt; hello iframe &amp;lt;/ p&amp;gt;&quot;, $ ( &quot;# myiframe&quot;). prop ( &quot;contentWindow&quot;). document)) .</target>
        </trans-unit>
        <trans-unit id="bc908bd16fbe6143344de37d896661754868a8b4" translate="yes" xml:space="preserve">
          <source>By default, jQuery adds a &quot;px&quot; unit to the values passed to the &lt;code&gt;.css()&lt;/code&gt; method. This behavior can be prevented by adding the property to the &lt;a href=&quot;jquery.cssnumer&quot;&gt;&lt;code&gt;jQuery.cssNumber&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="translated">기본적으로 jQuery는 &quot;px&quot;단위를 &lt;code&gt;.css()&lt;/code&gt; 메소드에 전달 된 값에 추가합니다 . 이 동작은 &lt;a href=&quot;jquery.cssnumer&quot;&gt; &lt;code&gt;jQuery.cssNumber&lt;/code&gt; &lt;/a&gt; 객체에 속성을 추가하여 방지 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="bb7e062f340afd064069201a47c758f6b46d48a0" translate="yes" xml:space="preserve">
          <source>By default, most events bubble up from the original event target to the &lt;code&gt;document&lt;/code&gt; element. At each element along the way, jQuery calls any matching event handlers that have been attached. A handler can prevent the event from bubbling further up the document tree (and thus prevent handlers on those elements from running) by calling &lt;code&gt;event.stopPropagation()&lt;/code&gt;. Any other handlers attached on the current element &lt;em&gt;will&lt;/em&gt; run however. To prevent that, call &lt;code&gt;event.stopImmediatePropagation()&lt;/code&gt;. (Event handlers bound to an element are called in the same order that they were bound.)</source>
          <target state="translated">기본적으로 대부분의 이벤트는 원래 이벤트 대상에서 &lt;code&gt;document&lt;/code&gt; 요소로 버블 링됩니다 . 그 과정에서 각 요소에서 jQuery는 연결된 일치하는 이벤트 핸들러를 호출합니다. 핸들러는 &lt;code&gt;event.stopPropagation()&lt;/code&gt; 을 호출하여 이벤트가 문서 트리를 추가로 버블 링하는 것을 방지 할 수 있습니다 (따라서 해당 요소의 핸들러가 실행되지 않도록 ) . 그러나 현재 요소에 연결된 다른 핸들러 &lt;em&gt;는&lt;/em&gt; 실행됩니다. 이를 방지하려면 &lt;code&gt;event.stopImmediatePropagation()&lt;/code&gt; 호출 하십시오 . 요소에 바인드 된 이벤트 핸들러는 바인드 된 순서와 동일한 순서로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ce1f745731b5dd745e454e33124fc30c46057d17" translate="yes" xml:space="preserve">
          <source>By default, requests are always issued, but the browser may serve results out of its cache. To disallow use of the cached results, set &lt;code&gt;cache&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. To cause the request to report failure if the asset has not been modified since the last request, set &lt;code&gt;ifModified&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본적으로 요청은 항상 발행되지만 브라우저는 캐시에서 결과를 제공 할 수 있습니다. 캐시 된 결과의 사용을 허용하지 않으려면 &lt;code&gt;cache&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 마지막 요청 이후 자산이 수정되지 않은 경우 요청이 실패를보고하도록하려면 &lt;code&gt;ifModified&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="27d52f4d9026441969d6592066b6f6a2bef76bcf" translate="yes" xml:space="preserve">
          <source>By default, selectors perform their searches within the DOM starting at the document root. However, an alternate context can be given for the search by using the optional second parameter to the &lt;code&gt;$()&lt;/code&gt; function. For example, to do a search within an event handler, the search can be restricted like so:</source>
          <target state="translated">기본적으로 선택기는 문서 루트에서 시작하여 DOM 내에서 검색을 수행합니다. 그러나 &lt;code&gt;$()&lt;/code&gt; 함수에 선택적 두 번째 매개 변수를 사용하여 검색에 대한 대체 컨텍스트를 제공 할 수 있습니다 . 예를 들어, 이벤트 핸들러 내에서 검색을 수행하려면 다음과 같이 검색을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c04a41a9c901d27b78f4c2560deab31a24cc713c" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;context&lt;/code&gt; is the current &lt;code&gt;document&lt;/code&gt; if not specified or given as &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. If the HTML was to be used in another document such as an iframe, that frame's document could be used.</source>
          <target state="translated">기본적으로 &lt;code&gt;context&lt;/code&gt; 는 지정되지 않거나 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 경우 현재 &lt;code&gt;document&lt;/code&gt; 입니다. HTML을 iframe과 같은 다른 문서에서 사용하는 경우 해당 프레임의 문서를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a63b823685bb5a0df45e013f32413b0a23060ed8" translate="yes" xml:space="preserve">
          <source>By design, any jQuery constructor or method that accepts an HTML string &amp;mdash; &lt;a href=&quot;jquery&quot;&gt;jQuery()&lt;/a&gt;, &lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;, &lt;a href=&quot;after&quot;&gt;.after()&lt;/a&gt;, etc. &amp;mdash; can potentially execute code. This can occur by injection of script tags or use of HTML attributes that execute code (for example, &lt;code&gt;&amp;lt;img onload=&quot;&quot;&amp;gt;&lt;/code&gt;). Do not use these methods to insert strings obtained from untrusted sources such as URL query parameters, cookies, or form inputs. Doing so can introduce cross-site-scripting (XSS) vulnerabilities. Remove or escape any user input before adding content to the document.</source>
          <target state="translated">설계 상 HTML 문자열 &lt;a href=&quot;jquery&quot;&gt;(jQuery ()&lt;/a&gt; , &lt;a href=&quot;append&quot;&gt;.append ()&lt;/a&gt; , .after () 등 &lt;a href=&quot;after&quot;&gt;)&lt;/a&gt; 을 허용하는 모든 jQuery 생성자 또는 메소드 는 잠재적으로 코드를 실행할 수 있습니다. 이는 스크립트 태그를 삽입하거나 코드를 실행하는 HTML 속성 (예 : &lt;code&gt;&amp;lt;img onload=&quot;&quot;&amp;gt;&lt;/code&gt; )을 사용하여 발생할 수 있습니다 . URL 쿼리 매개 변수, 쿠키 또는 양식 입력과 같은 신뢰할 수없는 소스에서 얻은 문자열을 삽입하는 데이 방법을 사용하지 마십시오. 그렇게하면 사이트 간 스크립팅 (XSS) 취약점이 발생할 수 있습니다. 문서에 내용을 추가하기 전에 사용자 입력을 제거하거나 이스케이프하십시오.</target>
        </trans-unit>
        <trans-unit id="47d5f282fd7c5b6fc4262f993df66e5c3b67ce39" translate="yes" xml:space="preserve">
          <source>By naming the handler, we can be assured that no other functions are accidentally removed. Note that the following will &lt;em&gt;not&lt;/em&gt; work:</source>
          <target state="translated">핸들러의 이름을 지정하면 실수로 다른 함수가 제거되지 않을 수 있습니다. 다음은 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ee56b1929a9e11ff88b2efda0e09e192d9855044" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;click&lt;/code&gt; event type, only handlers for that event type will be unbound. This approach can still have negative ramifications if other scripts might be attaching behaviors to the same element, however. Robust and extensible applications typically demand the two-argument version for this reason:</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 이벤트 유형 을 지정하면 해당 이벤트 유형에 대한 핸들러 만 바인드되지 않습니다. 그러나 다른 스크립트가 동일한 요소에 동작을 첨부 할 수있는 경우이 방법은 여전히 ​​부정적인 결과를 가져올 수 있습니다. 강력하고 확장 가능한 응용 프로그램은 일반적으로 다음과 같은 이유로 두 개의 인수 버전을 요구합니다.</target>
        </trans-unit>
        <trans-unit id="2042dcd8171d52d088702f4be79627a77b16400c" translate="yes" xml:space="preserve">
          <source>By using a function to set attributes, you can compute the value based on other properties of the element. For example, to concatenate a new value with an existing value:</source>
          <target state="translated">함수를 사용하여 속성을 설정하면 요소의 다른 속성을 기반으로 값을 계산할 수 있습니다. 예를 들어, 새 값을 기존 값과 연결하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="ed5a21f78f1f068a54690dced88c66dd00279ce8" translate="yes" xml:space="preserve">
          <source>By using a function to set properties, you can compute the value based on other properties of the element. For example, to toggle all checkboxes based off their individual values:</source>
          <target state="translated">함수를 사용하여 속성을 설정하면 요소의 다른 속성을 기반으로 값을 계산할 수 있습니다. 예를 들어 개별 값을 기준으로 모든 확인란을 전환하려면</target>
        </trans-unit>
        <trans-unit id="57e93d13177beaa87a4a73aca1f5650d942e3604" translate="yes" xml:space="preserve">
          <source>Caching Responses</source>
          <target state="translated">캐싱 응답</target>
        </trans-unit>
        <trans-unit id="0564a37bec5c23453adaf9321ee666ddc1b4088d" translate="yes" xml:space="preserve">
          <source>Call all callbacks in a list with the given context and arguments.</source>
          <target state="translated">주어진 컨텍스트와 인수를 사용하여 목록의 모든 콜백을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="ccbe9d18f4c8f7ec453f510c75f895efc7226e3d" translate="yes" xml:space="preserve">
          <source>Call all of the callbacks with the given arguments.</source>
          <target state="translated">주어진 인수로 모든 콜백을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="6fd09725bfdf077db26b4f7a241dd8b4150d49a1" translate="yes" xml:space="preserve">
          <source>Call the progressCallbacks on a Deferred object with the given args.</source>
          <target state="translated">주어진 인수로 Deferred 객체에서 progressCallbacks를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="9a8059338e0430066d305f213250eeb9c9fbdd3f" translate="yes" xml:space="preserve">
          <source>Call the progressCallbacks on a Deferred object with the given context and args.</source>
          <target state="translated">주어진 컨텍스트와 인수로 Deferred 객체에서 progressCallbacks를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="c9f2e1265c7a59ea173f0f11e5294ed2b15d6f7c" translate="yes" xml:space="preserve">
          <source>Callback Function</source>
          <target state="translated">콜백 기능</target>
        </trans-unit>
        <trans-unit id="5a601a94e84d57d225183dc3af0474c3a004dc30" translate="yes" xml:space="preserve">
          <source>Callback Function Queues</source>
          <target state="translated">콜백 함수 큐</target>
        </trans-unit>
        <trans-unit id="9c55daf6e61f9dc1556f1ec913e0ca99b7e0ea38" translate="yes" xml:space="preserve">
          <source>Callback Functions</source>
          <target state="translated">콜백 함수</target>
        </trans-unit>
        <trans-unit id="a9af4863d7aa8c65690d68dd4e55654d4dd44161" translate="yes" xml:space="preserve">
          <source>Callback for creating the XMLHttpRequest object. Defaults to the ActiveXObject when available (IE), the XMLHttpRequest otherwise. Override to provide your own implementation for XMLHttpRequest or enhancements to the factory.</source>
          <target state="translated">XMLHttpRequest 객체를 만들기위한 콜백 사용 가능한 경우 ActiveXObject (IE), 그렇지 않으면 XMLHttpRequest가 기본값입니다. XMLHttpRequest에 대한 고유 한 구현 또는 팩토리 향상을 제공하도록 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="a86a66725ddd95d5efed8e749f5570ea831e77d9" translate="yes" xml:space="preserve">
          <source>Callbacks Object</source>
          <target state="translated">콜백 객체</target>
        </trans-unit>
        <trans-unit id="e14e8cd10533a8efa27eb2af602d8c16578fc4cc" translate="yes" xml:space="preserve">
          <source>Callbacks are executed in the order they were added. Since &lt;code&gt;deferred.then&lt;/code&gt; returns a Promise, other methods of the Promise object can be chained to this one, including additional &lt;code&gt;.then()&lt;/code&gt; methods.</source>
          <target state="translated">콜백은 추가 된 순서대로 실행됩니다. &lt;code&gt;deferred.then&lt;/code&gt; 은 Promise를 반환 하므로 추가 &lt;code&gt;.then()&lt;/code&gt; 메서드를 포함하여 Promise 개체의 다른 메서드를이 메서드에 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e69b2026e5eb9b61282dd176dae6d9813026b156" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;event.stoppropagation&quot;&gt;&lt;code&gt;event.stopPropagation()&lt;/code&gt;&lt;/a&gt; in the event handler is ineffective in stopping event handlers attached lower in the document; the event has already propagated to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">이벤트 처리기에서 &lt;a href=&quot;event.stoppropagation&quot;&gt; &lt;code&gt;event.stopPropagation()&lt;/code&gt; &lt;/a&gt; 을 호출 하면 문서 아래쪽에 연결된 이벤트 처리기를 중지하는 데 효과적이지 않습니다. 이벤트가 이미 &lt;code&gt;document&lt;/code&gt; 로 전파되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cf3ba7d5f247ee09f67cae44ec94a40217fbbed4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;$( selector ).hover( handlerIn, handlerOut )&lt;/code&gt; is shorthand for:</source>
          <target state="translated">&lt;code&gt;$( selector ).hover( handlerIn, handlerOut )&lt;/code&gt; 호출 은 다음과 같은 축약 형입니다.</target>
        </trans-unit>
        <trans-unit id="3e72d72cad03f7e24f7f900ab00ea85843a3429b" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;$(selector).hover(handlerInOut)&lt;/code&gt; is shorthand for:</source>
          <target state="translated">&lt;code&gt;$(selector).hover(handlerInOut)&lt;/code&gt; 호출 은 다음과 같은 축약 형입니다.</target>
        </trans-unit>
        <trans-unit id="bc7af523c69befa0bf6af9758496e2d5437611d1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;.data()&lt;/code&gt; with no parameters retrieves all of the values as a JavaScript object. This object can be safely cached in a variable as long as a new object is not set with &lt;code&gt;.data(obj)&lt;/code&gt;. Using the object directly to get or set values is faster than making individual calls to &lt;code&gt;.data()&lt;/code&gt; to get or set each value:</source>
          <target state="translated">매개 변수없이 &lt;code&gt;.data()&lt;/code&gt; 를 호출 하면 모든 값이 JavaScript 객체로 검색됩니다. 이 객체는 새 객체가 &lt;code&gt;.data(obj)&lt;/code&gt; 설정되지 않는 한 변수에 안전하게 캐시 될 수 있습니다 . 객체를 직접 사용하여 값을 가져 오거나 설정하면 &lt;code&gt;.data()&lt;/code&gt; 를 개별적으로 호출하여 각 값을 가져 오거나 설정 하는 것보다 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="8ec2570ac78cc484942d9d02c4a351dc25f7c088" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;.data()&lt;/code&gt; with no parameters returns a JavaScript object containing each stored value as a property. The object can be used directly to get data values (but note that property names originally containing dashes will have been modified as described below).</source>
          <target state="translated">매개 변수없이 &lt;code&gt;.data()&lt;/code&gt; 를 호출 하면 저장된 각 값을 속성으로 포함하는 JavaScript 객체가 반환됩니다. 개체를 직접 사용하여 데이터 값을 가져올 수 있습니다 (그러나 원래 대시가 포함 된 속성 이름은 아래 설명 된대로 수정됩니다).</target>
        </trans-unit>
        <trans-unit id="57d8175940e69eae84e5717801c7dc474c8b80f9" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;jQuery()&lt;/code&gt; (or &lt;code&gt;$()&lt;/code&gt;) with an id selector as its argument will return a jQuery object containing a collection of either zero or one DOM element.</source>
          <target state="translated">호출 &lt;code&gt;jQuery()&lt;/code&gt; (또는 &lt;code&gt;$()&lt;/code&gt; ) 중 0 또는 1 DOM 요소의 집합체를 포함하고있는 jQuery 객체를 반환 인수로서 ID 셀렉터.</target>
        </trans-unit>
        <trans-unit id="5e9e9d9104911a2d5d092dab75ff72c453aa78b3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;jQuery.data( element )&lt;/code&gt; retrieves all of the element's associated values as a JavaScript object. Note that jQuery itself uses this method to store data for internal use, such as event handlers, so do not assume that it contains only data that your own code has stored.</source>
          <target state="translated">&lt;code&gt;jQuery.data( element )&lt;/code&gt; 호출 하면 요소의 모든 관련 값을 JavaScript 객체로 검색합니다. jQuery 자체는이 메소드를 사용하여 이벤트 핸들러와 같은 내부 용 데이터를 저장하므로 자신의 코드에 저장된 데이터 만 포함한다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="ee59480a24569bafc7adb90744d2c735b7662ee4" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;jQuery()&lt;/code&gt; method with &lt;em&gt;no arguments&lt;/em&gt; returns an empty jQuery set (with a &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property of 0). Similarly, if an argument of &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, an empty array (&lt;code&gt;[]&lt;/code&gt;), or an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is passed, the set contains no elements.</source>
          <target state="translated">&lt;em&gt;인수없이 &lt;/em&gt; &lt;code&gt;jQuery()&lt;/code&gt; 메서드를 호출하면 빈 jQuery 집합 ( &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; 속성 0) 이 반환 됩니다. 마찬가지로 &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; , 빈 배열 ( &lt;code&gt;[]&lt;/code&gt; ) 또는 빈 문자열 ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ) 의 인수 가 전달되면 집합에 요소가 포함되지 않습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d6ba7f95738a620806758f743c386b40530f90c" translate="yes" xml:space="preserve">
          <source>Can bind and unbind events to the colored button.</source>
          <target state="translated">컬러 버튼에 이벤트를 바인딩 및 바인딩 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8547a2d5367bc71b00545eeb6dfeefe13505dbc7" translate="yes" xml:space="preserve">
          <source>Can bind custom events too.</source>
          <target state="translated">맞춤 이벤트도 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="474cfa6c77d569b7e72a6a8e59b172c594c8a55c" translate="yes" xml:space="preserve">
          <source>Can cease to fire for images that already live in the browser's cache</source>
          <target state="translated">브라우저의 캐시에 이미 존재하는 이미지에 대한 실행을 중단 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="c09c36c558278a61eada49e27c98ba37887a14e5" translate="yes" xml:space="preserve">
          <source>Cancel a default action and prevent it from bubbling up by returning &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">기본 조치를 취소하고 &lt;code&gt;false&lt;/code&gt; 를 리턴하여 버블 링을 방지하십시오 .</target>
        </trans-unit>
        <trans-unit id="be7682f8165460ae0f4dd7f9463d8cdff09ea450" translate="yes" xml:space="preserve">
          <source>Cancel a default action and prevent it from bubbling up by returning false.</source>
          <target state="translated">기본 조치를 취소하고 false를 리턴하여 버블 링을 방지하십시오.</target>
        </trans-unit>
        <trans-unit id="180fd3e11931320e5d4e36f9483416fac6a9dd4a" translate="yes" xml:space="preserve">
          <source>Cancel a form submit action and prevent the event from bubbling up by returning &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">양식 제출 조치를 취소하고 &lt;code&gt;false&lt;/code&gt; 를 리턴하여 이벤트가 버블 링되지 않도록하십시오 .</target>
        </trans-unit>
        <trans-unit id="2df29b928681084cabf614463b1b1a742e20cbc7" translate="yes" xml:space="preserve">
          <source>Cancel a link's default action using the &lt;code&gt;.preventDefault()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;.preventDefault()&lt;/code&gt; 메소드를 사용하여 링크의 기본 조치를 취소하십시오 .</target>
        </trans-unit>
        <trans-unit id="00ccaf7ce24bf444d721e89dfd2a9b66066610d0" translate="yes" xml:space="preserve">
          <source>Cancel only the default action by using &lt;code&gt;.preventDefault()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.preventDefault()&lt;/code&gt; 를 사용하여 기본 조치 만 취소하십시오 .</target>
        </trans-unit>
        <trans-unit id="064cc3230bae84a39f03c4e6a5e3078058c37dbe" translate="yes" xml:space="preserve">
          <source>Cancel only the default action by using the .preventDefault() method.</source>
          <target state="translated">.preventDefault () 메소드를 사용하여 기본 조치 만 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="c9cbc58f88e6b601ceb9d9ef24cf90f93ff27c5e" translate="yes" xml:space="preserve">
          <source>Cancel only the default action by using the preventDefault method.</source>
          <target state="translated">preventDefault 메소드를 사용하여 기본 조치 만 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="43af0dd4d7532eb12b3767ce9dac612255b1f8eb" translate="yes" xml:space="preserve">
          <source>Cancel the default action (navigation) of the click.</source>
          <target state="translated">클릭의 기본 동작 (탐색)을 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="6ccb60071be8f00760a3824d9f7d0fad57de789f" translate="yes" xml:space="preserve">
          <source>Categories</source>
          <target state="translated">Categories</target>
        </trans-unit>
        <trans-unit id="3ef69c1f0bf7bf91822ac0c69c60b4733105fa7a" translate="yes" xml:space="preserve">
          <source>Category: Ajax</source>
          <target state="translated">카테고리 : 아약스</target>
        </trans-unit>
        <trans-unit id="4f8165cf28e9a7ddd6c8f1f580da0002e5300663" translate="yes" xml:space="preserve">
          <source>Category: Attribute</source>
          <target state="translated">카테고리 : 속성</target>
        </trans-unit>
        <trans-unit id="4d0e61f0b9cbfa5443888453b086bb89d3900b1b" translate="yes" xml:space="preserve">
          <source>Category: Attributes</source>
          <target state="translated">카테고리 : 속성</target>
        </trans-unit>
        <trans-unit id="f80c93036b59266ab5f046dc19f48785b0e62c30" translate="yes" xml:space="preserve">
          <source>Category: Basic</source>
          <target state="translated">카테고리 : 기본</target>
        </trans-unit>
        <trans-unit id="29c442f02e00e68f6b6884a72c9c747b8c6c4998" translate="yes" xml:space="preserve">
          <source>Category: Basic Filter</source>
          <target state="translated">카테고리 : 기본 필터</target>
        </trans-unit>
        <trans-unit id="c7ce1e5f2fc6ce5b4516b9a69ef1879da77ac3f0" translate="yes" xml:space="preserve">
          <source>Category: Basics</source>
          <target state="translated">카테고리 : 기본</target>
        </trans-unit>
        <trans-unit id="f11a895650a15593d02ef441d63c4074ed455f5a" translate="yes" xml:space="preserve">
          <source>Category: Browser Events</source>
          <target state="translated">카테고리 : 브라우저 이벤트</target>
        </trans-unit>
        <trans-unit id="1142e99ed233f23f051d45596f801e94b95af474" translate="yes" xml:space="preserve">
          <source>Category: CSS</source>
          <target state="translated">카테고리 : CSS</target>
        </trans-unit>
        <trans-unit id="900bc4fb38463165a36cffd5c7d81a77b3b292de" translate="yes" xml:space="preserve">
          <source>Category: Callbacks Object</source>
          <target state="translated">카테고리 : 콜백 객체</target>
        </trans-unit>
        <trans-unit id="8519c92e1c42a0087bb0b64b460340e43d687b44" translate="yes" xml:space="preserve">
          <source>Category: Child Filter</source>
          <target state="translated">카테고리 : 자식 필터</target>
        </trans-unit>
        <trans-unit id="4353365c0205af2a97caed1723230e701cd10eb1" translate="yes" xml:space="preserve">
          <source>Category: Class Attribute</source>
          <target state="translated">카테고리 : 클래스 속성</target>
        </trans-unit>
        <trans-unit id="bf227cd77b5899766df9dac01864c822f3fca464" translate="yes" xml:space="preserve">
          <source>Category: Collection Manipulation</source>
          <target state="translated">카테고리 : 컬렉션 조작</target>
        </trans-unit>
        <trans-unit id="1d643ecc48014221cced9ed42b6105a9a5e75747" translate="yes" xml:space="preserve">
          <source>Category: Content Filter</source>
          <target state="translated">카테고리 : 콘텐츠 필터</target>
        </trans-unit>
        <trans-unit id="7db17c6d111ed5ee7d6626a5ae1bfadadca66c41" translate="yes" xml:space="preserve">
          <source>Category: Copying</source>
          <target state="translated">카테고리 : 복사</target>
        </trans-unit>
        <trans-unit id="e146268dd0800825e05247f16fb6c557b98b48c1" translate="yes" xml:space="preserve">
          <source>Category: Core</source>
          <target state="translated">카테고리 : 핵심</target>
        </trans-unit>
        <trans-unit id="01542c1cadafad1f2a7121aa341d006931ebb6f9" translate="yes" xml:space="preserve">
          <source>Category: Custom</source>
          <target state="translated">카테고리 : 관습</target>
        </trans-unit>
        <trans-unit id="5c534935d4cbd2cc27416654f3adc3a016dba12e" translate="yes" xml:space="preserve">
          <source>Category: DOM Element Methods</source>
          <target state="translated">카테고리 : DOM 요소 메소드</target>
        </trans-unit>
        <trans-unit id="83fbfc0fc2b0ad4b896a0887fe72ae9c5e8e0e75" translate="yes" xml:space="preserve">
          <source>Category: DOM Insertion, Around</source>
          <target state="translated">카테고리 : DOM 삽입, 주변</target>
        </trans-unit>
        <trans-unit id="8adc5d12ce90ea615356a727fbc5099a8c196695" translate="yes" xml:space="preserve">
          <source>Category: DOM Insertion, Inside</source>
          <target state="translated">카테고리 : DOM 삽입, 내부</target>
        </trans-unit>
        <trans-unit id="0f7e5bc7980f03e8a8a1f06d7746212c5587fb54" translate="yes" xml:space="preserve">
          <source>Category: DOM Insertion, Outside</source>
          <target state="translated">카테고리 : DOM 삽입, 외부</target>
        </trans-unit>
        <trans-unit id="4c696040cf67a9641011f5d0a1b7b5f0bb2d1adf" translate="yes" xml:space="preserve">
          <source>Category: DOM Removal</source>
          <target state="translated">카테고리 : DOM 제거</target>
        </trans-unit>
        <trans-unit id="928160c6f59a104a863a3c80157c5b25d988ace0" translate="yes" xml:space="preserve">
          <source>Category: DOM Replacement</source>
          <target state="translated">카테고리 : DOM 교체</target>
        </trans-unit>
        <trans-unit id="bc6094e5bbe5aadd5273a110e229f25f8eb40046" translate="yes" xml:space="preserve">
          <source>Category: Data</source>
          <target state="translated">카테고리 : 데이터</target>
        </trans-unit>
        <trans-unit id="67b943ec003a6ea6b970cf1aa7dab873bff46634" translate="yes" xml:space="preserve">
          <source>Category: Data Storage</source>
          <target state="translated">카테고리 : 데이터 스토리지</target>
        </trans-unit>
        <trans-unit id="0fb9af786f6f59cb459a78bbd173ad6dc887c4f7" translate="yes" xml:space="preserve">
          <source>Category: Deferred Object</source>
          <target state="translated">카테고리 : 지연된 객체</target>
        </trans-unit>
        <trans-unit id="70f87adfcfc5130a69deeebfd6b9860553804eab" translate="yes" xml:space="preserve">
          <source>Category: Dimensions</source>
          <target state="translated">카테고리 : 치수</target>
        </trans-unit>
        <trans-unit id="a7610eb73fa005a43acc4df12da3a9e5bcf78b49" translate="yes" xml:space="preserve">
          <source>Category: Document Loading</source>
          <target state="translated">카테고리 : 문서 로딩</target>
        </trans-unit>
        <trans-unit id="5a36ac24203aeb87fa2834a28ec10de4d0c9b2f4" translate="yes" xml:space="preserve">
          <source>Category: Effects</source>
          <target state="translated">카테고리 : 효과</target>
        </trans-unit>
        <trans-unit id="c5133d2f939ea3b0ff0885231596e90c1af03e8e" translate="yes" xml:space="preserve">
          <source>Category: Event Handler Attachment</source>
          <target state="translated">카테고리 : 이벤트 핸들러 첨부</target>
        </trans-unit>
        <trans-unit id="934e13ba2e195c4059e740f4dfb605905ef7e7bf" translate="yes" xml:space="preserve">
          <source>Category: Event Object</source>
          <target state="translated">카테고리 : 이벤트 객체</target>
        </trans-unit>
        <trans-unit id="d9c263ec58d642bc09aad36219724386e5ff15c2" translate="yes" xml:space="preserve">
          <source>Category: Events</source>
          <target state="translated">카테고리 : 이벤트</target>
        </trans-unit>
        <trans-unit id="05f4d65f75262738b2557d4c507fdf769f6253fd" translate="yes" xml:space="preserve">
          <source>Category: Fading</source>
          <target state="translated">카테고리 : 페이딩</target>
        </trans-unit>
        <trans-unit id="ae38070da89db228c17d6969cec20005dff78219" translate="yes" xml:space="preserve">
          <source>Category: Filtering</source>
          <target state="translated">카테고리 : 필터링</target>
        </trans-unit>
        <trans-unit id="e026db8e86bd9d8c7a6b65c10c2414616a945059" translate="yes" xml:space="preserve">
          <source>Category: Form</source>
          <target state="translated">카테고리 : 양식</target>
        </trans-unit>
        <trans-unit id="134e050972d7348dc409bac965083a9442eb6ff3" translate="yes" xml:space="preserve">
          <source>Category: Form Events</source>
          <target state="translated">카테고리 : 양식 이벤트</target>
        </trans-unit>
        <trans-unit id="9feb3d20cc931ef63a845693bf15446431ce2ad9" translate="yes" xml:space="preserve">
          <source>Category: Forms</source>
          <target state="translated">카테고리 : 양식</target>
        </trans-unit>
        <trans-unit id="7a950700adea85f7676161ebc7b15320050ed29c" translate="yes" xml:space="preserve">
          <source>Category: General Attributes</source>
          <target state="translated">카테고리 : 일반 속성</target>
        </trans-unit>
        <trans-unit id="c35449e545b938250e9137e00fee582914cfdeed" translate="yes" xml:space="preserve">
          <source>Category: Global Ajax Event Handlers</source>
          <target state="translated">카테고리 : 글로벌 Ajax 이벤트 핸들러</target>
        </trans-unit>
        <trans-unit id="69a4d9a3089fc0aa7152777e5daf9622cbcfdacb" translate="yes" xml:space="preserve">
          <source>Category: Helper Functions</source>
          <target state="translated">카테고리 : 도우미 기능</target>
        </trans-unit>
        <trans-unit id="82dfe00fce76921f064f322ed2cd73aaa10abf53" translate="yes" xml:space="preserve">
          <source>Category: Hierarchy</source>
          <target state="translated">카테고리 : 계층</target>
        </trans-unit>
        <trans-unit id="de42cfb551d21f728336efc9126decc50e3776d5" translate="yes" xml:space="preserve">
          <source>Category: Internals</source>
          <target state="translated">카테고리 : 내부</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
