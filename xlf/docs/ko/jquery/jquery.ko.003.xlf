<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="jquery">
    <body>
      <group id="jquery">
        <trans-unit id="b4e1550eb2fb445b2150f603ca6698909fa5081c" translate="yes" xml:space="preserve">
          <source>Category: Keyboard Events</source>
          <target state="translated">카테고리 : 키보드 이벤트</target>
        </trans-unit>
        <trans-unit id="4f9ad0a132a6cbde04271b5c37ec5e27033062c0" translate="yes" xml:space="preserve">
          <source>Category: Low-Level Interface</source>
          <target state="translated">카테고리 : 저수준 인터페이스</target>
        </trans-unit>
        <trans-unit id="6315002fcdffae039e3bf194aa7877fb3877b52a" translate="yes" xml:space="preserve">
          <source>Category: Manipulation</source>
          <target state="translated">카테고리 : 조작</target>
        </trans-unit>
        <trans-unit id="da96e8501d1d782a1e8068b4903f0953366ca5bd" translate="yes" xml:space="preserve">
          <source>Category: Miscellaneous</source>
          <target state="translated">카테고리 : 기타</target>
        </trans-unit>
        <trans-unit id="82c196f07012fd8c1f2572439f2b7dd544f1dfff" translate="yes" xml:space="preserve">
          <source>Category: Miscellaneous Traversing</source>
          <target state="translated">카테고리 : 기타 횡단</target>
        </trans-unit>
        <trans-unit id="bdbd7d523e5219d48abfd34d8dd46d5bf79ff561" translate="yes" xml:space="preserve">
          <source>Category: Mouse Events</source>
          <target state="translated">카테고리 : 마우스 이벤트</target>
        </trans-unit>
        <trans-unit id="25e9705503e55d8dbf764d904ceb22b984cbdd0c" translate="yes" xml:space="preserve">
          <source>Category: Offset</source>
          <target state="translated">카테고리 : 오프셋</target>
        </trans-unit>
        <trans-unit id="65051cd2beacbca8e5e63f6651a461af21fb0f2c" translate="yes" xml:space="preserve">
          <source>Category: Properties</source>
          <target state="translated">카테고리 : 속성</target>
        </trans-unit>
        <trans-unit id="51940d05b991fcf9b09178f0efaa07281fd1df97" translate="yes" xml:space="preserve">
          <source>Category: Properties of jQuery Object Instances</source>
          <target state="translated">카테고리 : jQuery 객체 인스턴스의 속성</target>
        </trans-unit>
        <trans-unit id="351c0de821ef4f3ce2d88dbc2e9ae3631cfe99fc" translate="yes" xml:space="preserve">
          <source>Category: Properties of the Global jQuery Object</source>
          <target state="translated">카테고리 : 글로벌 jQuery 객체의 속성</target>
        </trans-unit>
        <trans-unit id="b9b11187aa4210a4cd7f1d0e023936e280097319" translate="yes" xml:space="preserve">
          <source>Category: Removed</source>
          <target state="translated">카테고리 : 제거</target>
        </trans-unit>
        <trans-unit id="2ced56e3f50624c0b6007d5bc3abbbe6fdb03060" translate="yes" xml:space="preserve">
          <source>Category: Selectors</source>
          <target state="translated">카테고리 : 선택기</target>
        </trans-unit>
        <trans-unit id="38c496d98a5b5834de639a88bae424a8da6312a9" translate="yes" xml:space="preserve">
          <source>Category: Setup Methods</source>
          <target state="translated">카테고리 : 설정 방법</target>
        </trans-unit>
        <trans-unit id="d62a40edc446f655505edfb657edd9055842c7eb" translate="yes" xml:space="preserve">
          <source>Category: Shorthand Methods</source>
          <target state="translated">카테고리 : 속기 방법</target>
        </trans-unit>
        <trans-unit id="0bc8d21aa9178e6524410e9b9bef9d901eff3200" translate="yes" xml:space="preserve">
          <source>Category: Sliding</source>
          <target state="translated">카테고리 : 슬라이딩</target>
        </trans-unit>
        <trans-unit id="71c53fb7bf5df96f7e0089e5e7d398f9261ee1c1" translate="yes" xml:space="preserve">
          <source>Category: Style Properties</source>
          <target state="translated">카테고리 : 스타일 속성</target>
        </trans-unit>
        <trans-unit id="b437a8acd6ebefc65d1570e06e3e5fa32c2f0685" translate="yes" xml:space="preserve">
          <source>Category: Traversing</source>
          <target state="translated">카테고리 : 횡단</target>
        </trans-unit>
        <trans-unit id="59aeb71eccbcfac3b1d01d26a7966fc65f9663a3" translate="yes" xml:space="preserve">
          <source>Category: Tree Traversal</source>
          <target state="translated">카테고리 : Tree Traversal</target>
        </trans-unit>
        <trans-unit id="5ba330296e912a408067e72587ec3b647d757321" translate="yes" xml:space="preserve">
          <source>Category: Utilities</source>
          <target state="translated">카테고리 : 유틸리티</target>
        </trans-unit>
        <trans-unit id="d2bfb5bd510478ebeb08fa5be89b59256d8573c7" translate="yes" xml:space="preserve">
          <source>Category: Visibility Filter</source>
          <target state="translated">카테고리 : 가시성 필터</target>
        </trans-unit>
        <trans-unit id="ac5bd99d0ad15f27163526faccd3e23129e99266" translate="yes" xml:space="preserve">
          <source>Category: jQuery Extensions</source>
          <target state="translated">카테고리 : jQuery Extensions</target>
        </trans-unit>
        <trans-unit id="fa3c2e36cd586931a02d579d1ed72e31745f2f1b" translate="yes" xml:space="preserve">
          <source>Cause all animations to run with less frames.</source>
          <target state="translated">더 적은 프레임으로 모든 애니메이션이 실행되도록합니다.</target>
        </trans-unit>
        <trans-unit id="8e92fec21e79611564236026731e6832beecfbe9" translate="yes" xml:space="preserve">
          <source>Caution: The all, or universal, selector is extremely slow, except when used by itself.</source>
          <target state="translated">주의 : 전부 또는 범용 선택기는 단독으로 사용하는 경우를 제외하고는 매우 느립니다.</target>
        </trans-unit>
        <trans-unit id="c42c5a91a8961d5826b8acd26b5d6377fc89b1f3" translate="yes" xml:space="preserve">
          <source>Chain tasks:</source>
          <target state="translated">체인 작업 :</target>
        </trans-unit>
        <trans-unit id="8fef34914a1fb0675d04cdef32d6fdc18a12d7ba" translate="yes" xml:space="preserve">
          <source>Chaining methods is not supported. For example, &lt;code&gt;$( &quot;a&quot; ).find( &quot;.offsite, .external&quot; ).live( ... ); &lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; valid and does not work as expected.</source>
          <target state="translated">연결 방법은 지원되지 않습니다. 예를 들면 다음과 같습니다. &lt;code&gt;$( &quot;a&quot; ).find( &quot;.offsite, .external&quot; ).live( ... ); &lt;/code&gt; 입니다 &lt;em&gt;하지&lt;/em&gt; 유효하고 예상대로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55b53f5dcb198602ceed45df363f893200533790" translate="yes" xml:space="preserve">
          <source>Change the background color of links inside of an iframe.</source>
          <target state="translated">iframe 안에서 링크의 배경색을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="2a94b43836e09ea7f9fdf1a1fe0bbd49a48ba1c2" translate="yes" xml:space="preserve">
          <source>Change the color of all divs; then add a border to the second one (index == 1) and the div with an id of &quot;fourth.&quot;</source>
          <target state="translated">모든 div의 색상을 변경하십시오. 그런 다음 두 번째 테두리 (인덱스 == 1)와 id가 &quot;fourth&quot;인 div에 테두리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="784782ac272f33b08ecf9551800987f874e1ca1e" translate="yes" xml:space="preserve">
          <source>Change the color of all divs; then add a border to those with a &quot;middle&quot; class.</source>
          <target state="translated">모든 div의 색상을 변경하십시오. 그런 다음 &quot;중간&quot;클래스를 가진 사람들에게 테두리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0752ef285d331014b988e4df91c34e99d952ace0" translate="yes" xml:space="preserve">
          <source>Change the color of any div that is animated.</source>
          <target state="translated">움직이는 모든 div의 색상을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="c3224b938be04497764436428f07567f804fa9b4" translate="yes" xml:space="preserve">
          <source>Change the color of any paragraph to red on mouseover event.</source>
          <target state="translated">마우스 오버 이벤트에서 단락의 색상을 빨간색으로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="8cce5293af544072bbf54aa88d214324432e73db" translate="yes" xml:space="preserve">
          <source>Change the context of a function bound to the click handler,</source>
          <target state="translated">클릭 핸들러에 바인딩 된 함수의 컨텍스트를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="a086e4ca8ab88694a7b714754df74b722fe700ae" translate="yes" xml:space="preserve">
          <source>Change the context of functions bound to a click handler using the &quot;function, context&quot; signature. Unbind the first handler after first click.</source>
          <target state="translated">&quot;함수, 컨텍스트&quot;서명을 사용하여 클릭 핸들러에 바인드 된 함수의 컨텍스트를 변경하십시오. 첫 번째 클릭 후 첫 번째 핸들러를 바인드 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="1700335d6fcaeb3fb4ff90596631d062593e9632" translate="yes" xml:space="preserve">
          <source>Change the font weight and background color on mouseenter and mouseleave.</source>
          <target state="translated">mouseenter 및 mouseleave에서 글꼴 두께 및 배경색을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="92d12618e1025c26643733e6e525d713ae7ac025" translate="yes" xml:space="preserve">
          <source>Change the inner height of each div the first time it is clicked (and change its color).</source>
          <target state="translated">처음 클릭 할 때 각 div의 내부 높이를 변경하고 색상을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="3e2ee71befd4e0fa9d694e9ec80febd6e835a50f" translate="yes" xml:space="preserve">
          <source>Change the inner width of each div the first time it is clicked (and change its color).</source>
          <target state="translated">처음 클릭 할 때 각 div의 내부 너비를 변경하고 색상을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="abb7538bd163bb4646dc9eb0d0325a489c21c01e" translate="yes" xml:space="preserve">
          <source>Change the outer height of each div the first time it is clicked (and change its color).</source>
          <target state="translated">처음 클릭 할 때 각 div의 외부 높이를 변경하고 색상을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="e641d228e2a7b0d98f2d9115f3adcaf7145ead52" translate="yes" xml:space="preserve">
          <source>Change the outer width of each div the first time it is clicked (and change its color).</source>
          <target state="translated">처음 클릭 할 때 각 div의 외부 너비를 변경하고 색상을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="e723f2d2fcb08023e5e13931576df9ac606d6ff8" translate="yes" xml:space="preserve">
          <source>Change the text and add a border for each button that is the only child button of its parent.</source>
          <target state="translated">텍스트를 변경하고 부모의 유일한 자식 단추 인 각 단추에 테두리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9daba5a99b9e0cadfd2d9e30cbcd17f690749d3e" translate="yes" xml:space="preserve">
          <source>Change the text and add a border for each button that is the only child of its parent.</source>
          <target state="translated">텍스트를 변경하고 부모의 유일한 자식 인 각 버튼에 테두리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="18a00847ffa7ac461dbec981e0f4bd1f524c0691" translate="yes" xml:space="preserve">
          <source>Change the width of each div the first time it is clicked (and change its color).</source>
          <target state="translated">처음 클릭 할 때 각 div의 너비를 변경하고 색상을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="fc562a6d0449be96713a55fb2e308534a8f31cf6" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;../../trigger&quot;&gt;trigger&lt;/a&gt;'s documentation to see how to combine it with your own event object.</source>
          <target state="translated">확인 &lt;a href=&quot;../../trigger&quot;&gt;트리거&lt;/a&gt; 의 설명서는 자신의 이벤트 객체와 결합하는 방법을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0169aed47c7dc2bf407e5a80a6cd45968cecb02e" translate="yes" xml:space="preserve">
          <source>Check an object to see if it's a plain object.</source>
          <target state="translated">물체가 평범한 물체인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c030bcf1e5585b8a0807160c7b72e6ebd4d4ab92" translate="yes" xml:space="preserve">
          <source>Check an object to see if it's empty.</source>
          <target state="translated">개체가 비어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e011f2637d78fa4a01bd0db28d92e3ec0371ad62" translate="yes" xml:space="preserve">
          <source>Check an object to see if it's in an XML document.</source>
          <target state="translated">객체가 XML 문서에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="806ee0eef6d5bd13a55d33b6e95bb9545b7a6e77" translate="yes" xml:space="preserve">
          <source>Check if an element is a descendant of another.</source>
          <target state="translated">요소가 다른 요소의 자손인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d009eb64a2d88ac06b37dfea1f23c69de3739266" translate="yes" xml:space="preserve">
          <source>Check if an element is inside another.</source>
          <target state="translated">요소가 다른 요소 안에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="407a883c1e8d6a3c415530e389b3778d9c50689a" translate="yes" xml:space="preserve">
          <source>Check the current matched set of elements against a selector, element, or jQuery object and return true if at least one of these elements matches the given arguments.</source>
          <target state="translated">선택기, 요소 또는 jQuery 객체에 대해 현재 일치하는 요소 집합을 확인하고 이러한 요소 중 하나 이상이 지정된 인수와 일치하면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="067eb29fdede1bcc90a65ab30077bc29f98836a2" translate="yes" xml:space="preserve">
          <source>Check to see if a DOM element is a descendant of another DOM element.</source>
          <target state="translated">DOM 요소가 다른 DOM 요소의 자손인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b7b040a3c69a6cc7ad6a4e1ae71e076a79afd4b5" translate="yes" xml:space="preserve">
          <source>Check to see if a DOM node is within an XML document (or is an XML document).</source>
          <target state="translated">DOM 노드가 XML 문서 (또는 XML 문서) 내에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b402e4274db62f5c5deff3f22b26f8e661a3b2ae" translate="yes" xml:space="preserve">
          <source>Check to see if an object is a plain object (created using &amp;ldquo;{}&amp;rdquo; or &amp;ldquo;new Object&amp;rdquo;).</source>
          <target state="translated">객체가 일반 객체인지 확인하십시오 ( &quot;{}&quot;또는 &quot;new Object&quot;를 사용하여 생성).</target>
        </trans-unit>
        <trans-unit id="cbf2d8060e2ab8e8ce7bdc3ec3f311198bfb1efe" translate="yes" xml:space="preserve">
          <source>Check to see if an object is empty (contains no enumerable properties).</source>
          <target state="translated">객체가 비어 있는지 확인하십시오 (열거 가능한 속성이 포함되어 있지 않음).</target>
        </trans-unit>
        <trans-unit id="ef020d4aee2af7ce07b9595176414555bb093e1d" translate="yes" xml:space="preserve">
          <source>Checks against an existing collection of alternating list elements. Blue, alternating list elements slide up while others turn red.</source>
          <target state="translated">기존의 대체 목록 요소 컬렉션을 검사합니다. 파란색, 교대되는 목록 요소가 위로 올라가고 다른 요소는 빨간색으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="28f76e0cc4604968aaff359b2f96faad840f81cf" translate="yes" xml:space="preserve">
          <source>Checks whether event.preventDefault() was called.</source>
          <target state="translated">event.preventDefault ()가 호출되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a184ea3d6b22454269d9a5c4f34e55e7b8168ce1" translate="yes" xml:space="preserve">
          <source>Checks whether event.stopImmediatePropagation() was called.</source>
          <target state="translated">event.stopImmediatePropagation ()이 호출되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9563da5cb9e5c53d629c7157a1ac9902d58d9cad" translate="yes" xml:space="preserve">
          <source>Checks whether event.stopPropagation() was called</source>
          <target state="translated">event.stopPropagation ()이 호출되었는지 확인</target>
        </trans-unit>
        <trans-unit id="742150615d8f62100a8b5953de4ea2c5e6c3a466" translate="yes" xml:space="preserve">
          <source>Child Selector (&amp;ldquo;parent &amp;gt; child&amp;rdquo;)</source>
          <target state="translated">자녀 선택기 (&amp;ldquo;부모&amp;gt; 자녀&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="581558908ee8b47701cd2609610e3d3228c13e71" translate="yes" xml:space="preserve">
          <source>Child selector (&amp;quot;parent &amp;gt; child&amp;quot;)</source>
          <target state="translated">자녀 선택기 ( &quot;부모&amp;gt; 자녀&quot;)</target>
        </trans-unit>
        <trans-unit id="b6d0a052b36831c96cb9527bca464aee550e5208" translate="yes" xml:space="preserve">
          <source>Class Selector (&amp;ldquo;.class&amp;rdquo;)</source>
          <target state="translated">클래스 선택기 (&amp;ldquo;.class&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="447fccb68b56bf5364920a570d06a1cbd245e3c4" translate="yes" xml:space="preserve">
          <source>Class selector (&amp;quot;.class&amp;quot;)</source>
          <target state="translated">클래스 선택기 ( &quot;.class&quot;)</target>
        </trans-unit>
        <trans-unit id="33397cce25c03297b2c53797e336c502ba8b46a0" translate="yes" xml:space="preserve">
          <source>Click a paragraph to add another. Note that .delegate() attaches a click event handler to all paragraphs - even new ones.</source>
          <target state="translated">다른 단락을 추가하려면 단락을 클릭하십시오. .delegate ()는 클릭 이벤트 핸들러를 모든 단락 (새 단락까지)에 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="e19148ca3fa1601f932d70816c695ade49b305a4" translate="yes" xml:space="preserve">
          <source>Click a paragraph to convert it from html to text.</source>
          <target state="translated">단락을 클릭하여 HTML에서 텍스트로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="79e15f896e472a3e9e9f4d0504737edd47735ffe" translate="yes" xml:space="preserve">
          <source>Click any paragraph to add another after it. Note that &lt;code&gt;.on()&lt;/code&gt; allows a click event on any paragraph--even new ones--since the event is handled by the ever-present body element after it bubbles to there.</source>
          <target state="translated">다른 단락을 추가하려면 단락을 클릭하십시오. 참고 &lt;code&gt;.on()&lt;/code&gt; 도 새로 - - 모든 단락에 클릭 이벤트를 할 수 있습니다 거기에 거품 후 이벤트가 항상 존재 body 요소에 의해 처리되기 때문이다.</target>
        </trans-unit>
        <trans-unit id="fc671cda9bc5e7df33784874b7d110bade8aa57d" translate="yes" xml:space="preserve">
          <source>Click the Go button once to start the animation, and then click the other buttons to see how they affect the current and queued animations.</source>
          <target state="translated">이동 버튼을 한 번 클릭하여 애니메이션을 시작한 다음 다른 버튼을 클릭하여 현재 애니메이션과 대기중인 애니메이션에 미치는 영향을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="31f3c7e2aa4f674d4398a009e8fa0fd5f2ac84bb" translate="yes" xml:space="preserve">
          <source>Click the Go button once to start the animation, then click the STOP button to stop it where it's currently positioned. Another option is to click several buttons to queue them up and see that stop just kills the currently playing one.</source>
          <target state="translated">이동 버튼을 한 번 클릭하여 애니메이션을 시작한 다음 중지 버튼을 클릭하여 현재 위치에있는 애니메이션을 중지하십시오. 다른 옵션은 여러 버튼을 클릭하여 대기열에 넣고 중지하면 현재 재생중인 버튼을 죽이는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2f3f0e2bf18d6315362300f6d4629503f0a52301" translate="yes" xml:space="preserve">
          <source>Click the button to animate the div with a number of different properties.</source>
          <target state="translated">버튼을 클릭하면 다양한 속성으로 div에 애니메이션을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82375a91bb95efd06eb38c36f2d7ae91b5679759" translate="yes" xml:space="preserve">
          <source>Click the slideToggle button to start the animation, then click again before the animation is completed. The animation will toggle the other direction from the saved starting point.</source>
          <target state="translated">slideToggle 버튼을 클릭하여 애니메이션을 시작한 다음 애니메이션이 완료되기 전에 다시 클릭하십시오. 저장된 시작점에서 다른 방향으로 애니메이션이 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="12e35f031807495341fd86aab4e25b2e414d0d2f" translate="yes" xml:space="preserve">
          <source>Click to find all unique div parent elements of each span.</source>
          <target state="translated">각 범위의 모든 고유 한 div 상위 요소를 찾으려면 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="15d5287a3edd17d916fb99303c485a40711097ff" translate="yes" xml:space="preserve">
          <source>Click to see the offset.</source>
          <target state="translated">오프셋을 보려면 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="135d857dbe00412e54dac47f95382dd014602880" translate="yes" xml:space="preserve">
          <source>Clicking the button changes the title of the input next to it. Move the mouse pointer over the text input to see the effect of adding and removing the title attribute.</source>
          <target state="translated">버튼을 클릭하면 옆에있는 입력 제목이 변경됩니다. 텍스트 입력 위로 마우스 포인터를 이동하여 제목 속성을 추가 및 제거하는 효과를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="419d6b9dfa8091dced7ef97ffba9bf58b61d1768" translate="yes" xml:space="preserve">
          <source>Clicks to button #2 also trigger a click for button #1.</source>
          <target state="translated">버튼 # 2를 클릭해도 버튼 # 1을 클릭하게됩니다.</target>
        </trans-unit>
        <trans-unit id="0f0fc065b1349e87f25f35c2de489a33910ea10e" translate="yes" xml:space="preserve">
          <source>Clones all b elements (and selects the clones) and prepends them to all paragraphs.</source>
          <target state="translated">모든 b 요소를 복제하고 복제본을 선택하여 모든 단락 앞에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1844e28b7d735429e8422f40b0abb329fc071c7e" translate="yes" xml:space="preserve">
          <source>Cloning jQuery Objects</source>
          <target state="translated">jQuery 객체 복제</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="9aaf6e7843fe176f42283102c9dea7fc8ad53ed0" translate="yes" xml:space="preserve">
          <source>Closures are created whenever a variable that is defined outside the current scope is accessed from within some inner scope. In the following example, the variable</source>
          <target state="translated">현재 범위 외부에서 정의 된 변수에 일부 내부 범위 내에서 액세스 할 때마다 클로저가 작성됩니다. 다음 예에서 변수</target>
        </trans-unit>
        <trans-unit id="074ee7c92fa7f8824ad5e82ac057d381eaa57139" translate="yes" xml:space="preserve">
          <source>Code in a &lt;code&gt;resize&lt;/code&gt; handler should never rely on the number of times the handler is called. Depending on implementation, &lt;code&gt;resize&lt;/code&gt; events can be sent continuously as the resizing is in progress (the typical behavior in Internet Explorer and WebKit-based browsers such as Safari and Chrome), or only once at the end of the resize operation (the typical behavior in some other browsers such as Opera).</source>
          <target state="translated">&lt;code&gt;resize&lt;/code&gt; 핸들러의 코드 는 핸들러가 호출 된 횟수에 의존해서는 안됩니다. 구현에 따라 크기 조정이 진행 중일 때 (Internet Explorer 및 WebKit 기반 브라우저 (Safari 및 Chrome과 같은 일반적인 동작)) 또는 크기 조정 작업이 끝났을 때 한 번만 &lt;code&gt;resize&lt;/code&gt; 이벤트를 계속 전송할 수 있습니다 ( Opera와 같은 다른 브라우저).</target>
        </trans-unit>
        <trans-unit id="774b9ce907bf67455525be060d885971bacb12a1" translate="yes" xml:space="preserve">
          <source>Color div elements according to their language.</source>
          <target state="translated">언어에 따라 div 요소를 색칠하십시오.</target>
        </trans-unit>
        <trans-unit id="138228d00799461403e74ab3b1f4e0e92cda1672" translate="yes" xml:space="preserve">
          <source>Combining the above knowledge gives you as a JavaScript developer quite a lot of power. One way to combine that is to implement a proxy pattern in JavaScript, enabling the basics of aspect-oriented programming (AOP):</source>
          <target state="translated">위의 지식을 결합하면 JavaScript 개발자로서 많은 힘을 얻을 수 있습니다. 이를 결합하는 한 가지 방법은 JavaScript에서 프록시 패턴을 구현하여 AOP (Aspect-Oriented Programming)의 기본을 활성화하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0746723b9ea54df4a9f84f4d0a56d2d09c4af7b0" translate="yes" xml:space="preserve">
          <source>Common Event Properties</source>
          <target state="translated">일반적인 이벤트 속성</target>
        </trans-unit>
        <trans-unit id="2a0e5611cb645b76b3299523de8485dca3826246" translate="yes" xml:space="preserve">
          <source>Completely move jQuery to a new namespace in another object.</source>
          <target state="translated">jQuery를 다른 객체의 새 네임 스페이스로 완전히 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="612322d2ba23eb266e5ba252b6274fa1355088f0" translate="yes" xml:space="preserve">
          <source>Computed attribute values</source>
          <target state="translated">계산 된 속성 값</target>
        </trans-unit>
        <trans-unit id="1711582a69746b097ed6a56cbcf113f4bc17c971" translate="yes" xml:space="preserve">
          <source>Computed property values</source>
          <target state="translated">계산 된 속성 값</target>
        </trans-unit>
        <trans-unit id="17f86e12e62e848e628bb10c6be02a4ec9218168" translate="yes" xml:space="preserve">
          <source>Concerning boolean attributes, consider a DOM element defined by the HTML markup &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; /&amp;gt;&lt;/code&gt;, and assume it is in a JavaScript variable named &lt;code&gt;elem&lt;/code&gt;:</source>
          <target state="translated">부울 속성과 관련하여 HTML 마크 업 &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; /&amp;gt;&lt;/code&gt; 의해 정의 된 DOM 요소를 고려하고 &lt;code&gt;elem&lt;/code&gt; 이라는 JavaScript 변수에 있다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="949d34ffd67f3e29c5ffbaddfb6473e221799a94" translate="yes" xml:space="preserve">
          <source>Consider a page with a basic nested list on it, with a positioned element:</source>
          <target state="translated">위치가 지정된 기본 중첩 목록이있는 페이지를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="5f4faec041f49c9dcfcd85a780aab946086c5a57" translate="yes" xml:space="preserve">
          <source>Consider a page with a basic nested list on it:</source>
          <target state="translated">기본 중첩 목록이있는 페이지를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="ddab0404faa23ca613ef49752b108d4839aacefc" translate="yes" xml:space="preserve">
          <source>Consider a page with a nested list as follows:</source>
          <target state="translated">다음과 같이 중첩 목록이있는 페이지를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="05b20fd6b8eabafdc6674bcefc3e8c36f15ed25c" translate="yes" xml:space="preserve">
          <source>Consider a page with a simple list and a paragraph following it:</source>
          <target state="translated">간단한 목록과 그 뒤에 단락이있는 페이지를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="9e1ee5e7810121724de18980a101e13c322f6485" translate="yes" xml:space="preserve">
          <source>Consider a page with a simple list on it:</source>
          <target state="translated">간단한 목록이있는 페이지를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="16aad2587cfea3ca5f74b14685828c3bdafcc030" translate="yes" xml:space="preserve">
          <source>Consider a simple &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with a number of text nodes, each of which is separated by two line break elements (&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">여러 개의 텍스트 노드가 있는 간단한 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 고려하십시오. 각 노드는 두 개의 줄 바꿈 요소 ( &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; )로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8fdbcb707d36a94ea3dfbb1a83479b5c4615d33" translate="yes" xml:space="preserve">
          <source>Consider a simple unordered list:</source>
          <target state="translated">간단한 비 순차 목록을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="f51baebc5bd1d2e0b40fd7313ce83fec33e18be2" translate="yes" xml:space="preserve">
          <source>Consider the following HTML:</source>
          <target state="translated">다음 HTML을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="5f4303290233dca739ba4ed6e98f22ea739c1824" translate="yes" xml:space="preserve">
          <source>Contains flags for the useragent, read from navigator.userAgent. This property was removed in jQuery 1.9 and is available only through the jQuery.migrate plugin. Please try to use feature detection instead.</source>
          <target state="translated">navigator.userAgent에서 읽은 useragent에 대한 플래그를 포함합니다. 이 속성은 jQuery 1.9에서 제거되었으며 jQuery.migrate 플러그인을 통해서만 사용할 수 있습니다. 대신 기능 감지를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f2e47e198536b3a40ab2ca34c748b0fba14cde39" translate="yes" xml:space="preserve">
          <source>Content can be created and then inserted after several elements at once:</source>
          <target state="translated">여러 요소 다음에 한 번에 내용을 만든 다음 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">Contents</target>
        </trans-unit>
        <trans-unit id="e416e43f493dc03bd7f45d55965a398e7052a174" translate="yes" xml:space="preserve">
          <source>Contents:</source>
          <target state="translated">Contents:</target>
        </trans-unit>
        <trans-unit id="20a2c9986cafe74f73ce5e3e32004dcfa0a20e55" translate="yes" xml:space="preserve">
          <source>Context passed to the doneCallbacks as the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">컨텍스트는 &lt;code&gt;this&lt;/code&gt; 객체 로 doneCallbacks에 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="da1455c53a0b871687f5cabac1e5eda57fa1559e" translate="yes" xml:space="preserve">
          <source>Context passed to the failCallbacks as the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">컨텍스트는 &lt;code&gt;this&lt;/code&gt; 객체 로 failCallbacks에 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d86802706c592a39845ee3718c225980378445e0" translate="yes" xml:space="preserve">
          <source>Context passed to the progressCallbacks as the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">컨텍스트는 &lt;code&gt;this&lt;/code&gt; 객체 로 progressCallbacks에 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="019d8a7c753bd5a6669859dade04a1009ee161f3" translate="yes" xml:space="preserve">
          <source>Context, Call and Apply</source>
          <target state="translated">상황, 전화 및 적용</target>
        </trans-unit>
        <trans-unit id="a0a46948373cd0edc6c48c975a8e813c789f7ab2" translate="yes" xml:space="preserve">
          <source>Convert an array-like object into a true JavaScript array.</source>
          <target state="translated">배열과 유사한 객체를 실제 JavaScript 배열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8b27ea1f4d2a990838e3202bb487cec433d06dc8" translate="yes" xml:space="preserve">
          <source>Count the divs.</source>
          <target state="translated">div를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="d1ee71064b6f7d2ebf4ae7b9250d2e8534ba9aa8" translate="yes" xml:space="preserve">
          <source>Count the divs. Click to add more.</source>
          <target state="translated">div를 계산하십시오. 더 추가하려면 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="7f4b1bf245b8b25d33b6f81dba6519b5569e96b5" translate="yes" xml:space="preserve">
          <source>Create a Deferred and set two timer-based functions to either resolve or reject the Deferred after a random interval. Whichever one fires first &quot;wins&quot; and will call one of the callbacks. The second timeout has no effect since the Deferred is already complete (in a resolved or rejected state) from the first timeout action. Also set a timer-based progress notification function, and call a progress handler that adds &quot;working...&quot; to the document body.</source>
          <target state="translated">지연을 작성하고 임의의 간격 후에 지연을 해결하거나 거부하도록 두 개의 타이머 기반 함수를 설정하십시오. 어느 것이 먼저 &quot;승리&quot;하고 콜백 중 하나를 호출 할 것인지. 지연 시간이 첫 번째 시간 초과 작업에서 이미 완료되었거나 (해결되었거나 거부 된 상태) 두 번째 시간 초과는 적용되지 않습니다. 또한 타이머 기반 진행 알림 기능을 설정하고 문서 본문에 &quot;working ...&quot;을 추가하는 진행 핸들러를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="18f43356a533156a5cefabeb7ce7d818edc577ba" translate="yes" xml:space="preserve">
          <source>Create a deep copy of the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트의 전체 사본을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="78262df5a2cf55819015c128c98126c0c6769c47" translate="yes" xml:space="preserve">
          <source>Create a different alias instead of jQuery to use in the rest of the script.</source>
          <target state="translated">나머지 스크립트에서 사용할 jQuery 대신 다른 별명을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8cfd1baf6cd27616ba0f3d5535d0859d1033de58" translate="yes" xml:space="preserve">
          <source>Create a div element (and all of its contents) dynamically and append it to the body element. Internally, an element is created and its innerHTML property set to the given markup.</source>
          <target state="translated">div 요소 (및 모든 내용)를 동적으로 작성하여 body 요소에 추가하십시오. 내부적으로 요소가 생성되고 innerHTML 속성이 지정된 마크 업으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ce114fb4c30b3accd71b499f9b17e32254acd426" translate="yes" xml:space="preserve">
          <source>Create a jQuery object using an XML string and obtain the value of the title node.</source>
          <target state="translated">XML 문자열을 사용하여 jQuery 객체를 만들고 제목 노드의 값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c79cf06c10e6ccf9eaefae7740fb79323843b7d5" translate="yes" xml:space="preserve">
          <source>Create a new jQuery object with elements added to the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에 요소가 추가 된 새 jQuery 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="efa28447b85f94f6a4ab65641deda121bb2dd723" translate="yes" xml:space="preserve">
          <source>Create a plugin that returns plugin-specific methods.</source>
          <target state="translated">플러그인 별 메소드를 리턴하는 플러그인을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="ca842ae372037f6df5ac6a128229b9d4300e3ed3" translate="yes" xml:space="preserve">
          <source>Create a serialized representation of an array, a plain object, or a jQuery object suitable for use in a URL query string or Ajax request. In case a jQuery object is passed, it should contain input elements with name/value properties.</source>
          <target state="translated">URL 쿼리 문자열 또는 Ajax 요청에 사용하기에 적합한 배열, 일반 객체 또는 jQuery 객체의 직렬화 된 표현을 만듭니다. jQuery 객체가 전달되는 경우 이름 / 값 속성이있는 입력 요소를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="a03522d98fe38004f4abe9bbe3b2448b3739918e" translate="yes" xml:space="preserve">
          <source>Create an array of DOM nodes using an HTML string and insert it into a div.</source>
          <target state="translated">HTML 문자열을 사용하여 DOM 노드의 배열을 만들고 div에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="b683ce8014830f83b81a700bc7ad33eb0863e70c" translate="yes" xml:space="preserve">
          <source>Create some DOM elements.</source>
          <target state="translated">DOM 요소를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a89dfe095377ae76058a179aedfcda485a02b144" translate="yes" xml:space="preserve">
          <source>Creates a new copy of jQuery whose properties and methods can be modified without affecting the original jQuery object.</source>
          <target state="translated">원래 jQuery 객체에 영향을주지 않고 속성 및 메소드를 수정할 수있는 jQuery의 새 사본을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="242c41cf02ec916960efebef4719dc79b811ee17" translate="yes" xml:space="preserve">
          <source>Creates an object containing a set of properties ready to be used in the definition of custom animations.</source>
          <target state="translated">사용자 정의 애니메이션 정의에 사용할 수있는 속성 집합이 포함 된 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bf2455eb714d72af4b5e9cfbfdcae6f2f107f4ce" translate="yes" xml:space="preserve">
          <source>Creates an object that handles the actual transmission of Ajax data.</source>
          <target state="translated">Ajax 데이터의 실제 전송을 처리하는 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c48a88758e3af8353b803fdcf0958d616b01ac70" translate="yes" xml:space="preserve">
          <source>Creating New Elements</source>
          <target state="translated">새로운 요소 만들기</target>
        </trans-unit>
        <trans-unit id="b1210b542d77e865409c44471fd7ff69d6f6c224" translate="yes" xml:space="preserve">
          <source>DOM element, text node, array of elements and text nodes, HTML string, or jQuery object to insert at the beginning of each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에서 각 요소의 시작 부분에 삽입 할 DOM 요소, 텍스트 노드, 요소 배열 및 텍스트 노드, HTML 문자열 또는 jQuery 객체</target>
        </trans-unit>
        <trans-unit id="c53efa2b9475d1ad88681a1186f29467fc076ab0" translate="yes" xml:space="preserve">
          <source>DOM element, text node, array of elements and text nodes, HTML string, or jQuery object to insert at the end of each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에서 각 요소의 끝에 삽입 할 DOM 요소, 텍스트 노드, 요소 배열 및 텍스트 노드, HTML 문자열 또는 jQuery 객체.</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">데이터 타입</target>
        </trans-unit>
        <trans-unit id="a1092396a8cc1f1855ba68c0444266cae73d6bcf" translate="yes" xml:space="preserve">
          <source>Data that is sent to the server is appended to the URL as a query string. If the value of the &lt;code&gt;data&lt;/code&gt; parameter is a plain object, it is converted to a string and url-encoded before it is appended to the URL.</source>
          <target state="translated">서버로 전송 된 데이터는 쿼리 문자열로 URL에 추가됩니다. &lt;code&gt;data&lt;/code&gt; 매개 변수 의 값이 일반 객체 인 경우 문자열로 변환되고 URL에 추가되기 전에 URL로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="ce0f42c3af047598765855258a18262a0d963e82" translate="yes" xml:space="preserve">
          <source>Data to be passed to the handler in &lt;a href=&quot;event.data&quot;&gt;&lt;code&gt;event.data&lt;/code&gt;&lt;/a&gt; when an event is triggered.</source>
          <target state="translated">이벤트가 트리거 될 때 &lt;a href=&quot;event.data&quot;&gt; &lt;code&gt;event.data&lt;/code&gt; &lt;/a&gt; 에서 핸들러로 전달 될 데이터 입니다.</target>
        </trans-unit>
        <trans-unit id="c69908dbae113e4bcc13d12aff11590851402498" translate="yes" xml:space="preserve">
          <source>Data to be passed to the handler in &lt;a href=&quot;event.data&quot;&gt;&lt;code&gt;event.data&lt;/code&gt;&lt;/a&gt; when an event occurs.</source>
          <target state="translated">이벤트가 발생할 때 &lt;a href=&quot;event.data&quot;&gt; &lt;code&gt;event.data&lt;/code&gt; &lt;/a&gt; 에서 핸들러로 전달 될 데이터 입니다.</target>
        </trans-unit>
        <trans-unit id="3ec2ef89b43d005b5462486d724fac8fc882a3ce" translate="yes" xml:space="preserve">
          <source>Data to be sent to the server. If the HTTP method is one that cannot have an entity body, such as GET, the &lt;code&gt;data&lt;/code&gt; is appended to the URL.</source>
          <target state="translated">서버로 보낼 데이터입니다. HTTP 메소드가 GET과 같은 엔티티 본문을 가질 수없는 경우 &lt;code&gt;data&lt;/code&gt; 가 URL에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d1bc895f248252b8bdb0b807299306e24789be49" translate="yes" xml:space="preserve">
          <source>Data to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. See &lt;code&gt;processData&lt;/code&gt; option to prevent this automatic processing. Object must be Key/Value pairs. If value is an Array, jQuery serializes multiple values with same key based on the value of the &lt;code&gt;traditional&lt;/code&gt; setting (described below).</source>
          <target state="translated">서버로 전송 될 데이터. 아직 문자열이 아닌 경우 쿼리 문자열로 변환됩니다. GET 요청의 URL에 추가됩니다. 이 자동 처리를 방지하려면 &lt;code&gt;processData&lt;/code&gt; 옵션을 참조하십시오 . 객체는 키 / 값 쌍이어야합니다. 값이 배열 인 경우 jQuery는 &lt;code&gt;traditional&lt;/code&gt; 설정 값 (아래 설명) 에 따라 동일한 키로 여러 값을 직렬화합니다 .</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="0119fff9201c62c8dabfe4c4e2b7011fe6960490" translate="yes" xml:space="preserve">
          <source>Deferred Object</source>
          <target state="translated">지연된 객체</target>
        </trans-unit>
        <trans-unit id="fa11ca8f9a1a32e2a978982108bb8caec0c06d40" translate="yes" xml:space="preserve">
          <source>Define a $.cachedScript() method that allows fetching a cached script:</source>
          <target state="translated">캐시 된 스크립트를 가져올 수있는 $ .cachedScript () 메소드를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="7a56237509f5d263022560a3ce142b4db3225ec8" translate="yes" xml:space="preserve">
          <source>Defines an object with additional attributes to be used in a &quot;script&quot; or &quot;jsonp&quot; request. The key represents the name of the attribute and the value is the attribute's value. If this object is provided it will force the use of a script-tag transport. For example, this can be used to set &lt;code&gt;nonce&lt;/code&gt;, &lt;code&gt;integrity&lt;/code&gt;, or &lt;code&gt;crossorigin&lt;/code&gt; attributes to satisfy Content Security Policy requirements. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/3.4.0/&quot;&gt;3.4.0&lt;/a&gt;)</source>
          <target state="translated">&quot;script&quot;또는 &quot;jsonp&quot;요청에 사용할 추가 속성이있는 개체를 정의합니다. 키는 속성의 이름을 나타내고 값은 속성의 값입니다. 이 개체가 제공되면 스크립트 태그 전송을 강제로 사용합니다. 예를 들어, 이는 콘텐츠 보안 정책 요구 사항을 충족하기 위해 &lt;code&gt;nonce&lt;/code&gt; , &lt;code&gt;integrity&lt;/code&gt; 또는 &lt;code&gt;crossorigin&lt;/code&gt; 속성을 설정하는 데 사용할 수 있습니다 . (추가 된 버전 : &lt;a href=&quot;https://api.jquery.com/category/version/3.4.0/&quot;&gt;3.4.0&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3b7a2aec93f7d77bda2756a3c000bd551c136921" translate="yes" xml:space="preserve">
          <source>Defining a complete css hook</source>
          <target state="translated">완전한 CSS 후크 정의</target>
        </trans-unit>
        <trans-unit id="4204479fa352ebd62ee5dcf761608ecf949c7277" translate="yes" xml:space="preserve">
          <source>Defining a new css hook is straight-forward. The skeleton template below can serve as a guide to creating your own.</source>
          <target state="translated">새로운 CSS 후크를 정의하는 것은 간단합니다. 아래의 스켈레톤 템플릿은 자신 만의 템플릿을 만드는 가이드 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="f792541f05a843e9076a3f38f7a4727297f6643b" translate="yes" xml:space="preserve">
          <source>Delay the ready event until a custom plugin has loaded.</source>
          <target state="translated">사용자 정의 플러그인이로드 될 때까지 준비 이벤트를 지연시킵니다.</target>
        </trans-unit>
        <trans-unit id="83d36288b5c8873730d74ec2bee7f0a6e4883b2f" translate="yes" xml:space="preserve">
          <source>Demo:</source>
          <target state="translated">Demo:</target>
        </trans-unit>
        <trans-unit id="518457b6231aef2d5c3da50d01d0e280064568c6" translate="yes" xml:space="preserve">
          <source>Demonstrates how to add (or push) elements to an existing collection</source>
          <target state="translated">기존 컬렉션에 요소를 추가하거나 푸시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d654974c9d8133c7ac0206e47d3e386e230465b1" translate="yes" xml:space="preserve">
          <source>Depending on the browser, the Enter key may only cause a form submission if the form has exactly one text field, or only when there is a submit button present. The interface should not rely on a particular behavior for this key unless the issue is forced by observing the keypress event for presses of the Enter key.</source>
          <target state="translated">브라우저에 따라 Enter 키는 양식에 정확히 하나의 텍스트 필드가 있거나 제출 단추가있는 경우에만 양식 제출을 유발할 수 있습니다. Enter 키를 누를 때 키 누르기 이벤트를 관찰하여 문제가 발생하지 않는 한 인터페이스는이 키의 특정 동작에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="238ddbca469b8bfbf69d4c4f92ed5efc32eea0b5" translate="yes" xml:space="preserve">
          <source>Deprecation Notice</source>
          <target state="translated">지원 중단 알림</target>
        </trans-unit>
        <trans-unit id="ccb9b06e549c216e39c1718448e1455748b6566b" translate="yes" xml:space="preserve">
          <source>Descendant Selector (&amp;ldquo;ancestor descendant&amp;rdquo;)</source>
          <target state="translated">후손 선택기 ( &quot;조상 후손&quot;)</target>
        </trans-unit>
        <trans-unit id="1becc7e12f15401e4745789e794fd996bb1a4332" translate="yes" xml:space="preserve">
          <source>Descendant selector (&amp;quot;ancestor descendant&amp;quot;)</source>
          <target state="translated">자손 선택기 ( &quot;조상 자손&quot;)</target>
        </trans-unit>
        <trans-unit id="ed81955c47ba41b8b153e449a8004d377f2197de" translate="yes" xml:space="preserve">
          <source>Describes the nature of the event.</source>
          <target state="translated">이벤트의 성격을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="16db94d22804c588441d8fe28c60c4961d4e86a0" translate="yes" xml:space="preserve">
          <source>Detach all paragraphs from the DOM</source>
          <target state="translated">DOM에서 모든 단락을 분리</target>
        </trans-unit>
        <trans-unit id="7c9a7c0610c1bc20abb9c9d07094daa33576a8f8" translate="yes" xml:space="preserve">
          <source>Detail</source>
          <target state="translated">Detail</target>
        </trans-unit>
        <trans-unit id="c9d7797e9cc7364155598a4e04756b36b291108a" translate="yes" xml:space="preserve">
          <source>Determine how many input elements are checked.</source>
          <target state="translated">점검 할 입력 요소 수를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="c2a5fe05edddc52a22186859bdf4647eba830e42" translate="yes" xml:space="preserve">
          <source>Determine if an object is a jQuery object</source>
          <target state="translated">객체가 jQuery 객체인지 확인</target>
        </trans-unit>
        <trans-unit id="1c7f53147c63bde439c8074e1becc169f211e552" translate="yes" xml:space="preserve">
          <source>Determine if the callbacks have already been called at least once.</source>
          <target state="translated">콜백이 이미 한 번 이상 호출되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="17eebbf7067380871e33a99baf10a28d56740039" translate="yes" xml:space="preserve">
          <source>Determine if the callbacks list has been disabled.</source>
          <target state="translated">콜백 목록이 비활성화되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a4511affecfdfab8773e29c8480f1d15ed2b7afe" translate="yes" xml:space="preserve">
          <source>Determine if the callbacks list has been locked.</source>
          <target state="translated">콜백 목록이 잠겨 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="64058ffc42f7de860fe12aa36bc71383bfc45b68" translate="yes" xml:space="preserve">
          <source>Determine the current state of a Deferred object.</source>
          <target state="translated">지연된 오브젝트의 현재 상태를 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="0d13ae6246a36b4c9adf9a6cf0eb9c3017c8c487" translate="yes" xml:space="preserve">
          <source>Determine the event namespace used.</source>
          <target state="translated">사용 된 이벤트 네임 스페이스를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="18aefed5a9f3014d36185bce173df16b95e91756" translate="yes" xml:space="preserve">
          <source>Determine the exact context used.</source>
          <target state="translated">사용 된 정확한 문맥을 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="3a39909ab4fa3738c3d99794ce1c58609f9cf303" translate="yes" xml:space="preserve">
          <source>Determine the internal JavaScript [[Class]] of an object.</source>
          <target state="translated">객체의 내부 JavaScript [[Class]]를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="9bc00934d104479f61e3921ce23b0cb07dcff669" translate="yes" xml:space="preserve">
          <source>Determine whether a Deferred object has been rejected.</source>
          <target state="translated">지연된 오브젝트가 거부되었는지 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="8414b6b50558b0fbfbada73330b7439bf2eaaca7" translate="yes" xml:space="preserve">
          <source>Determine whether a Deferred object has been resolved.</source>
          <target state="translated">지연된 오브젝트가 해결되었는지 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="701ba83d9edabc1b7b56bf6804861be6766cef17" translate="yes" xml:space="preserve">
          <source>Determine whether an element has any jQuery data associated with it.</source>
          <target state="translated">요소에 연관된 jQuery 데이터가 있는지 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="f9a380197ffd85c57e79c3e649a426b98beb2d26" translate="yes" xml:space="preserve">
          <source>Determine whether any of the matched elements are assigned the given class.</source>
          <target state="translated">일치하는 요소 중 지정된 클래스가 지정되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="24104cef369405db68b0f386d6e7a8f6cb2eef2b" translate="yes" xml:space="preserve">
          <source>Determine whether or not the list has any callbacks attached. If a callback is provided as an argument, determine whether it is in a list.</source>
          <target state="translated">목록에 콜백이 첨부되어 있는지 확인하십시오. 콜백이 인수로 제공되는 경우 콜백이 목록에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="426d80b22ee54a3f059a605131c67f2e91e10208" translate="yes" xml:space="preserve">
          <source>Determine whether the META key was pressed when the event fired.</source>
          <target state="translated">이벤트가 발생했을 때 META 키가 눌 렸는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="20de34ed1b14d5c2867bea789d842eda9cdeef16" translate="yes" xml:space="preserve">
          <source>Determine whether the argument is a window.</source>
          <target state="translated">인수가 창인지 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="ea44cabb0c6d27737749a51b70c6ad4c645ee888" translate="yes" xml:space="preserve">
          <source>Determine whether the argument is an array.</source>
          <target state="translated">인수가 배열인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fbef70d74c06b5dc995dde116391d3b843e91eb8" translate="yes" xml:space="preserve">
          <source>Determines if its argument is callable as a function.</source>
          <target state="translated">인수를 함수로 호출 할 수 있는지 판별합니다.</target>
        </trans-unit>
        <trans-unit id="f4764d3d878ad6909ba20d5915f41b163df3662f" translate="yes" xml:space="preserve">
          <source>Determines whether its argument represents a JavaScript number.</source>
          <target state="translated">인수가 JavaScript 번호를 나타내는 지 판별합니다.</target>
        </trans-unit>
        <trans-unit id="1a58adde57e81ae2206fb2ad8565498c72898fe9" translate="yes" xml:space="preserve">
          <source>Different types of response to &lt;code&gt;$.ajax()&lt;/code&gt; call are subjected to different kinds of pre-processing before being passed to the success handler. The type of pre-processing depends by default upon the Content-Type of the response, but can be set explicitly using the &lt;code&gt;dataType&lt;/code&gt; option. If the &lt;code&gt;dataType&lt;/code&gt; option is provided, the Content-Type header of the response will be disregarded.</source>
          <target state="translated">&lt;code&gt;$.ajax()&lt;/code&gt; 호출 에 대한 다양한 유형의 응답 은 성공 핸들러로 전달되기 전에 다른 종류의 사전 처리를받습니다. 사전 처리 유형은 기본적으로 응답의 내용 유형에 따라 다르지만 &lt;code&gt;dataType&lt;/code&gt; 옵션을 사용하여 명시 적으로 설정할 수 있습니다 . 경우 &lt;code&gt;dataType&lt;/code&gt; 옵션이 제공되며, 응답의 Content-Type 헤더는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9f4ca9ec08715def4a822d25f75f2d9b79b931c0" translate="yes" xml:space="preserve">
          <source>Dimensions</source>
          <target state="translated">Dimensions</target>
        </trans-unit>
        <trans-unit id="17891b02e577fba95d47eaa8433aeb9aa796bd4c" translate="yes" xml:space="preserve">
          <source>Direct and delegated event handlers</source>
          <target state="translated">직접 및 위임 된 이벤트 처리기</target>
        </trans-unit>
        <trans-unit id="ac92802662c9ff0fd47cd7428202377a983d1ad3" translate="yes" xml:space="preserve">
          <source>Direct and delegated events</source>
          <target state="translated">직접 및 위임 된 이벤트</target>
        </trans-unit>
        <trans-unit id="395832e78f5cfc8b5889f675e38b25fbbab95ec9" translate="yes" xml:space="preserve">
          <source>Directional properties (&lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;) have no discernible effect on elements if their &lt;code&gt;position&lt;/code&gt; style property is &lt;code&gt;static&lt;/code&gt;, which it is by default.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 속성이 &lt;code&gt;static&lt;/code&gt; 인 경우 방향 속성 ( &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; )은 요소에 눈에 띄는 영향을 미치지 않습니다 ( 기본적으로).</target>
        </trans-unit>
        <trans-unit id="f989a9d276281527d8dfbfd9c9c27bf2fa2cfa6a" translate="yes" xml:space="preserve">
          <source>Disable a callback list from doing anything more.</source>
          <target state="translated">콜백 목록에서 더 이상 작업을 수행하지 않도록 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="70a683df9932ecdccfdaf7652a6e29d5634f4f12" translate="yes" xml:space="preserve">
          <source>Disable all checkboxes on the page.</source>
          <target state="translated">페이지에서 모든 확인란을 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="77ee421adb869ceeb38a9fbb8d726808199c62f8" translate="yes" xml:space="preserve">
          <source>Display a message when the DOM is loaded.</source>
          <target state="translated">DOM이로드 될 때 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c1a5ae521fef5a5993e4ff16e0b02cb42b7145c0" translate="yes" xml:space="preserve">
          <source>Display a notice if the Ajax request encounters an error.</source>
          <target state="translated">Ajax 요청에 오류가 발생하면 통지를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="9d509086095864e9362886c30bcfcb835929aefe" translate="yes" xml:space="preserve">
          <source>Display a paragraph's text in an alert when it is clicked:</source>
          <target state="translated">클릭하면 경고에 단락 텍스트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="8b6e7f68a7a9abbdda6869d5911fae9f86b178af" translate="yes" xml:space="preserve">
          <source>Display each paragraph's text in an alert box whenever it is clicked:</source>
          <target state="translated">클릭 할 때마다 각 단락의 텍스트를 경고 상자에 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="3259e5a21ad932a3aad4b21eef8185d34b713714" translate="yes" xml:space="preserve">
          <source>Display or hide the matched elements by animating their opacity.</source>
          <target state="translated">불투명도를 애니메이션하여 일치하는 요소를 표시하거나 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="c92837debc05afcddbabe993fb8d83e5ce280544" translate="yes" xml:space="preserve">
          <source>Display or hide the matched elements with a sliding motion.</source>
          <target state="translated">슬라이딩 모션으로 일치하는 요소를 표시하거나 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="1172994cab3b00fc300c4e14baaa355dcbb428dd" translate="yes" xml:space="preserve">
          <source>Display or hide the matched elements.</source>
          <target state="translated">일치하는 요소를 표시하거나 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="e39e1206a301328ffff3e4170af20eedc07ea824" translate="yes" xml:space="preserve">
          <source>Display previous handler's return value</source>
          <target state="translated">이전 핸들러의 리턴 값 표시</target>
        </trans-unit>
        <trans-unit id="4c37de284da336b7ee1e8528e29fb64e1edb234a" translate="yes" xml:space="preserve">
          <source>Display the checked attribute and property of a checkbox as it changes.</source>
          <target state="translated">확인란의 확인 된 속성 및 속성이 변경되면 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1e1c1b89b3f81c5af3ee719da8d6cec69347daa3" translate="yes" xml:space="preserve">
          <source>Display the checked property and attribute of a checkbox as it changes.</source>
          <target state="translated">확인란의 확인 된 속성 및 속성이 변경되면 표시합니다.</target>
        </trans-unit>
        <trans-unit id="46a63b7b108e6005e6d898aa7360362a2fbec4b6" translate="yes" xml:space="preserve">
          <source>Display the matched elements by fading them to opaque.</source>
          <target state="translated">일치하는 요소를 불투명하게 페이드하여 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e8f590af7589bcb0436f153dbd14e0a202398862" translate="yes" xml:space="preserve">
          <source>Display the matched elements with a sliding motion.</source>
          <target state="translated">일치하는 요소를 슬라이딩 모션으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="074aecce42f13d464e3b9efcaed0849f0ee6fdb8" translate="yes" xml:space="preserve">
          <source>Display the matched elements.</source>
          <target state="translated">일치하는 요소를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="7cac6b913db9f0e2a25c23aeba9f672e1df0807f" translate="yes" xml:space="preserve">
          <source>Display the tag name of the click element.</source>
          <target state="translated">클릭 요소의 태그 이름을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="52fd197ff11809d09817c75c2e36544cae64da6d" translate="yes" xml:space="preserve">
          <source>Display the tag name of the root element.</source>
          <target state="translated">루트 요소의 태그 이름을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="58a4bf40275b0ef072ed3110eab93510cfb15774" translate="yes" xml:space="preserve">
          <source>Display the tag's name on click</source>
          <target state="translated">클릭시 태그 이름 표시</target>
        </trans-unit>
        <trans-unit id="356fa8d42b9458e6a7695d02efd4db1196ba19f7" translate="yes" xml:space="preserve">
          <source>Display the time since the click handler last executed.</source>
          <target state="translated">클릭 핸들러가 마지막으로 실행 된 이후의 시간을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="529bf8aff8b12ff382e1087f43fe89523b44e22e" translate="yes" xml:space="preserve">
          <source>Division by zero results in Infinity:</source>
          <target state="translated">0으로 나누면 무한대가됩니다.</target>
        </trans-unit>
        <trans-unit id="3bd94f535958d98d63b4fb13547a129c5fc489f0" translate="yes" xml:space="preserve">
          <source>Do not assume that this method appends the elements to the existing collection in the order they are passed to the &lt;code&gt;.add()&lt;/code&gt; method. When all elements are members of the same document, the resulting collection from &lt;code&gt;.add()&lt;/code&gt; will be sorted in document order; that is, in order of each element's appearance in the document. If the collection consists of elements from different documents or ones not in any document, the sort order is undefined. To create a jQuery object with elements in a well-defined order and without sorting overhead, use the &lt;code&gt;$(array_of_DOM_elements)&lt;/code&gt; signature.</source>
          <target state="translated">이 메소드가 요소를 &lt;code&gt;.add()&lt;/code&gt; 메소드에 전달 된 순서대로 기존 콜렉션에 추가한다고 가정하지 마십시오 . 모든 요소가 동일한 문서의 멤버 인 경우 &lt;code&gt;.add()&lt;/code&gt; 의 결과 콜렉션은 문서 순서로 정렬됩니다. 즉, 문서에서 각 요소가 나타나는 순서입니다. 컬렉션이 다른 문서의 요소 또는 문서에없는 요소로 구성된 경우 정렬 순서가 정의되지 않습니다. 요소를 잘 정의 된 순서로 정렬 오버 헤드없이 jQuery 객체를 만들려면 &lt;code&gt;$(array_of_DOM_elements)&lt;/code&gt; 서명을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e214b8a29923056887b7edf6635d90dcbb2abe88" translate="yes" xml:space="preserve">
          <source>Document</source>
          <target state="translated">Document</target>
        </trans-unit>
        <trans-unit id="0013a82dbaa69864160083a6044105148c9142cd" translate="yes" xml:space="preserve">
          <source>Document element to serve as the context in which the HTML fragment will be created</source>
          <target state="translated">HTML 단편이 작성 될 컨텍스트로 제공되는 문서 요소</target>
        </trans-unit>
        <trans-unit id="61c9ee0e597598436599068f4dcc7b964819d8b3" translate="yes" xml:space="preserve">
          <source>Dot Notation</source>
          <target state="translated">점 표기법</target>
        </trans-unit>
        <trans-unit id="b4f1c8af05a1a7023c78ad0c95839ee10e40926e" translate="yes" xml:space="preserve">
          <source>Double click to toggle background color.</source>
          <target state="translated">배경색을 전환하려면 두 번 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="cf4e84526e0fd3f8fbf657bce40238a9a0655a7b" translate="yes" xml:space="preserve">
          <source>Due to browser security restrictions, most &quot;Ajax&quot; requests are subject to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Same_origin_policy&quot;&gt;same origin policy&lt;/a&gt;; the request can not successfully retrieve data from a different domain, subdomain, port, or protocol.</source>
          <target state="translated">브라우저 보안 제한으로 인해 대부분의 &quot;Ajax&quot;요청은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Same_origin_policy&quot;&gt;동일한 원본 정책을&lt;/a&gt; 따릅니다 . 요청이 다른 도메인, 하위 도메인, 포트 또는 프로토콜에서 데이터를 성공적으로 검색 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b055053777918dfb92dafab7affada539dc43b99" translate="yes" xml:space="preserve">
          <source>Due to the implementation of numbers as double-precision values, the following result is not an error:</source>
          <target state="translated">배정 밀도 값으로 숫자를 구현했기 때문에 다음 결과는 오류가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="021b0866922f9a3728729c1a2471848543c82513" translate="yes" xml:space="preserve">
          <source>Due to the way browsers interact with plugins and external code, the &lt;code&gt;.data()&lt;/code&gt; method cannot be used on &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; (unless it's a Flash plugin), &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">브라우저가 플러그인 및 외부 코드와 상호 작용하는 방식으로 인해 &lt;code&gt;.data()&lt;/code&gt; 메서드는 &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; (Flash 플러그인이 아닌 경우), &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; 요소에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="64d473176641c12a702ffcdf90c0722e0e8d88c6" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The default duration is &lt;code&gt;400&lt;/code&gt; milliseconds. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively.</source>
          <target state="translated">지속 시간은 밀리 초 단위로 제공됩니다. 값이 클수록 애니메이션이 더 빠르며 애니메이션이 더 느립니다. 기본 지속 시간은 &lt;code&gt;400&lt;/code&gt; 밀리 초입니다. &lt;code&gt;'fast'&lt;/code&gt; 및 &lt;code&gt;'slow'&lt;/code&gt; 문자열 은 각각 &lt;code&gt;200&lt;/code&gt; 및 &lt;code&gt;600&lt;/code&gt; 밀리 초의 지속 시간을 표시하기 위해 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d74fd1efa8d5d7a4dfe90136bd510365782e3bd" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of 200 and 600 milliseconds, respectively.</source>
          <target state="translated">지속 시간은 밀리 초 단위로 제공됩니다. 값이 클수록 애니메이션이 더 빠르며 애니메이션이 더 느립니다. &lt;code&gt;'fast'&lt;/code&gt; 및 &lt;code&gt;'slow'&lt;/code&gt; 문자열 은 각각 200 및 600 밀리 초의 지속 시간을 표시하기 위해 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="008d363a00af1c16f4cec47c449f6603f318ea4e" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively.</source>
          <target state="translated">지속 시간은 밀리 초 단위로 제공됩니다. 값이 클수록 애니메이션이 더 빠르며 애니메이션이 더 느립니다. &lt;code&gt;'fast'&lt;/code&gt; 및 &lt;code&gt;'slow'&lt;/code&gt; 문자열 은 각각 &lt;code&gt;200&lt;/code&gt; 및 &lt;code&gt;600&lt;/code&gt; 밀리 초의 지속 시간을 표시하기 위해 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81ee7d2af4a48e334465209074c48f938a3b7c19" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively. If any other string is supplied, or if the &lt;code&gt;duration&lt;/code&gt; parameter is omitted, the default duration of &lt;code&gt;400&lt;/code&gt; milliseconds is used.</source>
          <target state="translated">지속 시간은 밀리 초 단위로 제공됩니다. 값이 클수록 애니메이션이 더 빠르며 애니메이션이 더 느립니다. &lt;code&gt;'fast'&lt;/code&gt; 및 &lt;code&gt;'slow'&lt;/code&gt; 문자열 은 각각 &lt;code&gt;200&lt;/code&gt; 및 &lt;code&gt;600&lt;/code&gt; 밀리 초의 지속 시간을 표시하기 위해 제공 될 수 있습니다 . 다른 문자열을 제공하거나 &lt;code&gt;duration&lt;/code&gt; 매개 변수를 생략하면 기본 지속 시간 인 &lt;code&gt;400&lt;/code&gt; 밀리 초가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="abba1fc0ac0081d2cf925d503d7fb679ed3b3757" translate="yes" xml:space="preserve">
          <source>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings &lt;code&gt;'fast'&lt;/code&gt; and &lt;code&gt;'slow'&lt;/code&gt; can be supplied to indicate durations of &lt;code&gt;200&lt;/code&gt; and &lt;code&gt;600&lt;/code&gt; milliseconds, respectively. If any other string is supplied, the default duration of &lt;code&gt;400&lt;/code&gt; milliseconds is used. Unlike the other effect methods, &lt;code&gt;.fadeTo()&lt;/code&gt; requires that &lt;code&gt;duration&lt;/code&gt; be explicitly specified.</source>
          <target state="translated">지속 시간은 밀리 초 단위로 제공됩니다. 값이 클수록 애니메이션이 더 빠르며 애니메이션이 더 느립니다. &lt;code&gt;'fast'&lt;/code&gt; 및 &lt;code&gt;'slow'&lt;/code&gt; 문자열 은 각각 &lt;code&gt;200&lt;/code&gt; 및 &lt;code&gt;600&lt;/code&gt; 밀리 초의 지속 시간을 표시하기 위해 제공 될 수 있습니다 . 다른 문자열이 제공되면 기본 지속 시간 인 &lt;code&gt;400&lt;/code&gt; 밀리 초가 사용됩니다. 다른 효과 방법과 달리 &lt;code&gt;.fadeTo()&lt;/code&gt; 는 &lt;code&gt;duration&lt;/code&gt; 을 명시 적으로 지정 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="34357aa5e4b4df343d5cf08ca3d750003cd528f7" translate="yes" xml:space="preserve">
          <source>During animations that hide an element, the element is considered visible until the end of the animation. During animations to show an element, the element is considered visible at the start at the animation.</source>
          <target state="translated">요소를 숨기는 애니메이션 중에는 요소가 애니메이션이 끝날 때까지 표시되는 것으로 간주됩니다. 애니메이션에서 요소를 표시하는 동안 요소는 애니메이션의 시작 부분에서 볼 수있는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="dc0830943459f7209f3ca3ec6563c437b7d252bd" translate="yes" xml:space="preserve">
          <source>During animations to show an element, the element is considered to be visible at the start of the animation.</source>
          <target state="translated">애니메이션에서 요소를 표시하는 동안 요소는 애니메이션 시작시 표시되는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="c6c13f597a3a996ac7c7547aa32e021db94af0a2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&amp;lt;div class=&quot;inner&quot;&amp;gt;&lt;/code&gt; element gets this new content:</source>
          <target state="translated">각 &lt;code&gt;&amp;lt;div class=&quot;inner&quot;&amp;gt;&lt;/code&gt; 요소는 다음과 같은 새로운 내용을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e5a4ea595088e957d2a4f0b2cc2d4090045459cf" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;id&lt;/code&gt; value must be used only once within a document. If more than one element has been assigned the same ID, queries that use that ID will only select the first matched element in the DOM. This behavior should not be relied on, however; a document with more than one element using the same ID is invalid.</source>
          <target state="translated">각 &lt;code&gt;id&lt;/code&gt; 값은 문서 내에서 한 번만 사용해야합니다. 둘 이상의 요소에 동일한 ID가 할당 된 경우 해당 ID를 사용하는 쿼리는 DOM에서 처음 일치하는 요소 만 선택합니다. 그러나이 동작에 의존해서는 안됩니다. 동일한 ID를 사용하는 요소가 둘 이상인 문서가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfc909a8ddc269c4f017f9008ede790f5833edcf" translate="yes" xml:space="preserve">
          <source>Each inner &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element gets this new content:</source>
          <target state="translated">각 내부 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 요소는이 새로운 내용을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f22d388a6cd592a8d9e23b5ceddf3a6cc2e9909a" translate="yes" xml:space="preserve">
          <source>Each jQuery object also masquerades as an array, so we can use the array dereferencing operator to get at the list item instead:</source>
          <target state="translated">각 jQuery 객체는 또한 배열로 가장하기 때문에 배열 역 참조 연산자를 사용하여 대신 목록 항목을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ebe40fa1ff9c6f2935fe7eb0bd75be40a3c33a0" translate="yes" xml:space="preserve">
          <source>Each jQuery object created with the jQuery() function contains a number of properties alongside its methods. These properties allow us to inspect various attributes of the object.</source>
          <target state="translated">jQuery () 함수로 작성된 각 jQuery 객체에는 메소드와 함께 여러 속성이 포함되어 있습니다. 이러한 속성을 통해 객체의 다양한 속성을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c8709a43f69a8c12f45e58b4bcdf5a46f1ca867" translate="yes" xml:space="preserve">
          <source>Easing</source>
          <target state="translated">Easing</target>
        </trans-unit>
        <trans-unit id="8f25a859269ca51039632dd6bba28fb061cfb8d4" translate="yes" xml:space="preserve">
          <source>Effects</source>
          <target state="translated">Effects</target>
        </trans-unit>
        <trans-unit id="1ded3f185936ef26584dc91cab7683c2844be148" translate="yes" xml:space="preserve">
          <source>Either a true JavaScript Array or a JavaScript Object that contains a nonnegative integer &lt;code&gt;length&lt;/code&gt; property and index properties from &lt;code&gt;0&lt;/code&gt; up to &lt;code&gt;length - 1&lt;/code&gt;. This latter case includes array-like objects commonly encountered in web-based code such as the &lt;code&gt;arguments&lt;/code&gt; object and the &lt;code&gt;NodeList&lt;/code&gt; object returned by many DOM methods.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 부터 &lt;code&gt;length - 1&lt;/code&gt; -1 까지 의 음이 아닌 정수 &lt;code&gt;length&lt;/code&gt; 속성 및 인덱스 속성 이 포함 된 실제 JavaScript 배열 또는 JavaScript 객체입니다 . 후자의 경우에는 웹 기반 코드에서 일반적으로 발생하는 배열과 유사한 객체 (예 : &lt;code&gt;arguments&lt;/code&gt; 객체 및 많은 DOM 메소드가 반환 한 &lt;code&gt;NodeList&lt;/code&gt; 객체)가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="096c6c2bd743f3326c17f5eedb69150184e4ae4f" translate="yes" xml:space="preserve">
          <source>Element Selector (&amp;ldquo;element&amp;rdquo;)</source>
          <target state="translated">요소 선택기 ( &quot;요소&quot;)</target>
        </trans-unit>
        <trans-unit id="809498eb4107969f327af6a9326868df136899c7" translate="yes" xml:space="preserve">
          <source>Element selector (&amp;quot;element&amp;quot;)</source>
          <target state="translated">요소 선택기 ( &quot;요소&quot;)</target>
        </trans-unit>
        <trans-unit id="fcbf5f2af2996cc0ebae8a3e9f221123b97b5bd8" translate="yes" xml:space="preserve">
          <source>Elements are considered visible if they consume space in the document. Visible elements have a width or height that is greater than zero.</source>
          <target state="translated">요소가 문서에서 공간을 소비하면 표시되는 것으로 간주됩니다. 보이는 요소의 너비 나 높이가 0보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="1630e0ee299d1543426b53c8994a8b18358e0f35" translate="yes" xml:space="preserve">
          <source>Elements can be considered hidden for several reasons:</source>
          <target state="translated">몇 가지 이유로 요소가 숨겨져있는 것으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80e8444d405f10a4612e43f73896d5d6c3991796" translate="yes" xml:space="preserve">
          <source>Elements may have more than one class assigned to them. In HTML, this is represented by separating the class names with a space:</source>
          <target state="translated">요소에는 둘 이상의 클래스가 할당 될 수 있습니다. HTML에서 이것은 클래스 이름을 공백으로 분리하여 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="58a0223bc577a28bb9a708667bd5fa6a7609d9f1" translate="yes" xml:space="preserve">
          <source>Elements that are not in a document are considered hidden; jQuery does not have a way to know if they will be visible when appended to a document since it depends on the applicable styles.</source>
          <target state="translated">문서에없는 요소는 숨겨진 것으로 간주됩니다. jQuery는 해당 스타일에 따라 문서에 추가 될 때 표시되는지 알 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="541c4c3bc1ea3fee4a70094ff61cce347c795384" translate="yes" xml:space="preserve">
          <source>Elements that are not in a document are not considered to be visible; jQuery does not have a way to know if they will be visible when appended to a document since it depends on the applicable styles.</source>
          <target state="translated">문서에없는 요소는 보이지 않는 것으로 간주됩니다. jQuery는 해당 스타일에 따라 문서에 추가 될 때 표시되는지 알 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7509b7469fe800b4d772781c7f3d004ebcf513b5" translate="yes" xml:space="preserve">
          <source>Elements with &lt;code&gt;visibility: hidden&lt;/code&gt; or &lt;code&gt;opacity: 0&lt;/code&gt; are considered to be visible, since they still consume space in the layout. During animations that hide an element, the element is considered to be visible until the end of the animation.</source>
          <target state="translated">&lt;code&gt;visibility: hidden&lt;/code&gt; 또는 &lt;code&gt;opacity: 0&lt;/code&gt; 요소는 여전히 레이아웃에서 공간을 소비하므로 가시적 인 것으로 간주됩니다. 요소를 숨기는 애니메이션 중에는 요소가 애니메이션이 끝날 때까지 표시되는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="06ae90df93265a3200d0a5a71d8539853b0c008f" translate="yes" xml:space="preserve">
          <source>Elements with &lt;code&gt;visibility: hidden&lt;/code&gt; or &lt;code&gt;opacity: 0&lt;/code&gt; are considered visible, since they still consume space in the layout.</source>
          <target state="translated">&lt;code&gt;visibility: hidden&lt;/code&gt; 또는 &lt;code&gt;opacity: 0&lt;/code&gt; 요소는 여전히 레이아웃에서 공간을 소비하므로 가시적 인 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="9183367973c4ee7d5b918805da748918a451fadf" translate="yes" xml:space="preserve">
          <source>Elements with focus are usually highlighted in some way by the browser, for example with a dotted line surrounding the element. The focus is used to determine which element is the first to receive keyboard-related events.</source>
          <target state="translated">포커스가있는 요소는 일반적으로 브라우저를 통해 어떤 방식 으로든 강조 표시됩니다 (예 : 요소를 둘러싼 점선). 포커스는 키보드 관련 이벤트를 가장 먼저받는 요소를 판별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f548aabbe49ed0d61a96c32053b670d671512199" translate="yes" xml:space="preserve">
          <source>Empty the queue.</source>
          <target state="translated">대기열을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="49c23597ab61bc4032f80d4037cddf79fb14f9de" translate="yes" xml:space="preserve">
          <source>Encode a set of form elements as a string for submission.</source>
          <target state="translated">제출할 문자열로 양식 요소 세트를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="abc972bfc17bd3bd6d5cd104914a36578e6378e7" translate="yes" xml:space="preserve">
          <source>Encode a set of form elements as an array of names and values.</source>
          <target state="translated">양식 요소 세트를 이름 및 값의 배열로 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="1daee83bfa9971b8d1e0310c7471576ad5b06a6f" translate="yes" xml:space="preserve">
          <source>End the most recent filtering operation in the current chain and return the set of matched elements to its previous state.</source>
          <target state="translated">현재 체인에서 가장 최근의 필터링 작업을 끝내고 일치하는 요소 집합을 이전 상태로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="eb68349ad2b6e0eb0dd22ced03040fcc45169789" translate="yes" xml:space="preserve">
          <source>Enforce the context of the function using the &quot;context, function name&quot; signature. Unbind the handler after first click.</source>
          <target state="translated">&quot;컨텍스트, 함수 이름&quot;서명을 사용하여 함수의 컨텍스트를 시행하십시오. 첫 번째 클릭 후 핸들러를 바인드 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="9b375592faedfb09a03bac41cda2b523d08cfead" translate="yes" xml:space="preserve">
          <source>Enhanced Callbacks with jQuery Deferred</source>
          <target state="translated">jQuery Deferred를 통한 향상된 콜백</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="878f8c8263a3ffed5732e5e0c69cabe2e66f96c9" translate="yes" xml:space="preserve">
          <source>Equalize the heights of the divs.</source>
          <target state="translated">div의 높이를 동일하게하십시오.</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="1f7a4f9e2f70d0b81cffc15ab30fd344aeb34fb3" translate="yes" xml:space="preserve">
          <source>Esc</source>
          <target state="translated">Esc</target>
        </trans-unit>
        <trans-unit id="01ca167787a3acb7221ffc3742480aedb89a7bc9" translate="yes" xml:space="preserve">
          <source>Escape an ID containing a hash.</source>
          <target state="translated">해시가 포함 된 ID를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="0f0648e349b36f039a081e0b25e850253d8ef860" translate="yes" xml:space="preserve">
          <source>Escapes any character that has a special meaning in a CSS selector.</source>
          <target state="translated">CSS 선택기에서 특별한 의미가있는 모든 문자를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="0d250a2d3b164ecd02335ce23550e0a93ecb207c" translate="yes" xml:space="preserve">
          <source>Even though the two functions are identical in content, they are created separately and so JavaScript is free to keep them as distinct function objects. To unbind a particular handler, we need a reference to that function and not a different one that happens to do the same thing.</source>
          <target state="translated">두 함수는 내용이 동일하더라도 별도로 작성되므로 JavaScript는이를 개별 함수 오브젝트로 자유롭게 유지할 수 있습니다. 특정 핸들러를 바인드 해제하려면 동일한 기능을 수행하는 다른 함수가 아닌 해당 함수에 대한 참조가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="4c874625e9b4c4789838bc2475c5fa96b872d071" translate="yes" xml:space="preserve">
          <source>Event Handlers</source>
          <target state="translated">이벤트 핸들러</target>
        </trans-unit>
        <trans-unit id="de0bce9183cad7958b9375f9e0a045c66918463c" translate="yes" xml:space="preserve">
          <source>Event handlers attached with &lt;code&gt;.bind()&lt;/code&gt; can be removed with &lt;code&gt;.unbind()&lt;/code&gt;. In the simplest case, with no arguments, &lt;code&gt;.unbind()&lt;/code&gt; removes all handlers attached to the elements:</source>
          <target state="translated">부착 이벤트 핸들러 &lt;code&gt;.bind()&lt;/code&gt; 제거 할 수 &lt;code&gt;.unbind()&lt;/code&gt; . 가장 간단한 경우 &lt;code&gt;.unbind()&lt;/code&gt; 없는 .unbind () 는 요소에 연결된 모든 핸들러를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="a7ed6bc170ed4724f9e1058fd487bc3c98e46f34" translate="yes" xml:space="preserve">
          <source>Event handlers can then be bound to the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">그런 다음 이벤트 핸들러를 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 에 바인딩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5daeceef4e01c7e8cb3a3980ef386900d46193ae" translate="yes" xml:space="preserve">
          <source>Event handlers will trigger once per element per event type</source>
          <target state="translated">이벤트 핸들러는 이벤트 유형별로 요소 당 한 번씩 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="945a16bd7e9adb70d03c8737d9d2405169f44fde" translate="yes" xml:space="preserve">
          <source>Event names and namespaces</source>
          <target state="translated">이벤트 이름과 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="00de94e75e05f6bb61c1d5f2a640e307e4e24561" translate="yes" xml:space="preserve">
          <source>Event performance</source>
          <target state="translated">이벤트 실적</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="9ec281effc6638a1cc98e81e0e23ffa851bc12b2" translate="yes" xml:space="preserve">
          <source>Events triggered with &lt;code&gt;.triggerHandler()&lt;/code&gt; do not bubble up the DOM hierarchy; if they are not handled by the target element directly, they do nothing.</source>
          <target state="translated">&lt;code&gt;.triggerHandler()&lt;/code&gt; 트리거 된 이벤트 는 DOM 계층을 버블 링하지 않습니다. 대상 요소가 직접 처리하지 않으면 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da6fa8e41ec78850d6269bdceec6ddb95123045e" translate="yes" xml:space="preserve">
          <source>Every attempt is made to convert the attribute's string value to a JavaScript value (this includes booleans, numbers, objects, arrays, and null). A string is only converted to a number if doing so doesn't change its representation (for example, the string &quot;100&quot; is converted to the number 100, but &quot;1E02&quot; and &quot;100.000&quot; are left as strings because their numeric value of 100 serializes to &quot;100&quot;). When a string starts with '{' or '[', then &lt;code&gt;jQuery.parseJSON&lt;/code&gt; is used to parse it; it must follow &lt;a href=&quot;https://en.wikipedia.org/wiki/JSON#Data_types.2C_syntax_and_example&quot;&gt;valid JSON syntax&lt;/a&gt;&lt;em&gt;including quoted property names&lt;/em&gt;. A string not parseable as a JavaScript value is not converted.</source>
          <target state="translated">속성의 문자열 값을 JavaScript 값 (부울, 숫자, 객체, 배열 및 null 포함)으로 변환하려고 할 때마다 시도됩니다. 문자열은 표현이 변경되지 않는 경우에만 숫자로 변환됩니다 (예 : 문자열 &quot;100&quot;은 숫자 100으로 변환되지만 &quot;1E02&quot;및 &quot;100.000&quot;은 숫자 값이 다음과 같기 때문에 문자열로 남음). 100은 &quot;100&quot;으로 직렬화 됨). 문자열이 '{'또는 '['로 시작하면 &lt;code&gt;jQuery.parseJSON&lt;/code&gt; 이 구문 분석에 사용됩니다. &lt;em&gt;인용 된 속성 이름을 포함하여 &lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/JSON#Data_types.2C_syntax_and_example&quot;&gt;유효한 JSON 구문 &lt;/a&gt;&lt;em&gt;을&lt;/em&gt; 따라야 합니다 . JavaScript 값으로 구문 분석 할 수없는 문자열은 변환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="640314bca3063f84b3530a00dd33f7833d439735" translate="yes" xml:space="preserve">
          <source>Every attempt is made to convert the string to a JavaScript value (this includes booleans, numbers, objects, arrays, and null). A value is only converted to a number if doing so doesn't change the value's representation. For example, &quot;1E02&quot; and &quot;100.000&quot; are equivalent as numbers (numeric value 100) but converting them would alter their representation so they are left as strings. The string value &quot;100&quot; is converted to the number 100.</source>
          <target state="translated">문자열을 JavaScript 값 (부울, 숫자, 객체, 배열 및 null 포함)으로 변환하려고 시도합니다. 그렇게해도 값 표현이 변경되지 않으면 값은 숫자로만 변환됩니다. 예를 들어, &quot;1E02&quot;및 &quot;100.000&quot;은 숫자 (숫자 값 100)와 동일하지만이를 변환하면 표현이 변경되어 문자열로 남습니다. 문자열 값 &quot;100&quot;은 숫자 100으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="ac29b160be22a3f3eb357685f7f736ecccc5dd66" translate="yes" xml:space="preserve">
          <source>Every element can have one or more queues of functions attached to it by jQuery. In most applications, only one queue (called &lt;code&gt;fx&lt;/code&gt;) is used. Queues allow a sequence of actions to be called on an element asynchronously, without halting program execution.</source>
          <target state="translated">모든 요소는 jQuery에 의해 하나 이상의 함수 큐를 첨부 할 수 있습니다. 대부분의 응용 프로그램에서는 하나의 대기열 ( &lt;code&gt;fx&lt;/code&gt; ) 만 사용됩니다. 큐를 사용하면 프로그램 실행을 중단하지 않고 요소에서 비동기 적으로 일련의 작업을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="717c3dfb715b4f64def2db768fd140900f0843f8" translate="yes" xml:space="preserve">
          <source>Every element can have one to many queues of functions attached to it by jQuery. In most applications, only one queue (called &lt;code&gt;fx&lt;/code&gt;) is used. Queues allow a sequence of actions to be called on an element asynchronously, without halting program execution. The typical example of this is calling multiple animation methods on an element. For example:</source>
          <target state="translated">모든 요소는 jQuery에 의해 1에서 다수의 함수 큐를 첨부 할 수 있습니다. 대부분의 응용 프로그램에서는 하나의 대기열 ( &lt;code&gt;fx&lt;/code&gt; ) 만 사용됩니다. 큐를 사용하면 프로그램 실행을 중단하지 않고 요소에서 비동기 적으로 일련의 작업을 호출 할 수 있습니다. 일반적인 예는 요소에서 여러 애니메이션 메서드를 호출하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8a50f8fe9c6688afe321799ea57d40fa3f778d0b" translate="yes" xml:space="preserve">
          <source>Everything else returns &quot;object&quot; as its type.</source>
          <target state="translated">다른 모든 것들은 &quot;object&quot;를 타입으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5b72e8af9443677fe87a74765bb33b789f7898bf" translate="yes" xml:space="preserve">
          <source>Everything in JavaScript is an object, though some are more objective (haha). The easiest way to create an object is the object literal:</source>
          <target state="translated">JavaScript의 모든 것은 객체이지만 일부는 더 객관적입니다 (haha). 객체를 생성하는 가장 쉬운 방법은 객체 리터럴입니다.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="2f6c6de6cd89442f2ca00cfa1e3579423318c49f" translate="yes" xml:space="preserve">
          <source>Execute a function after two Ajax requests are successful. (See the jQuery.ajax() documentation for a complete description of success and error cases for an ajax request).</source>
          <target state="translated">두 개의 Ajax 요청이 성공한 후 기능을 실행하십시오. (아약스 요청의 성공 및 오류 사례에 대한 자세한 설명은 jQuery.ajax () 문서를 참조하십시오).</target>
        </trans-unit>
        <trans-unit id="e57c19e3f8c803b67c3b88a89e442a30a30da945" translate="yes" xml:space="preserve">
          <source>Execute a script in the global context.</source>
          <target state="translated">글로벌 컨텍스트에서 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="d8319394c609adb35e6a9ad6524f3786eddfa311" translate="yes" xml:space="preserve">
          <source>Execute a script with a nonce value on a site with Content Security Policy enabled.</source>
          <target state="translated">콘텐츠 보안 정책이 활성화 된 사이트에서 임시 값으로 스크립트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c441fff6106a9c6af9a365d9d5bc8d04e16a8f19" translate="yes" xml:space="preserve">
          <source>Execute all handlers and behaviors attached to the matched elements for the given event type.</source>
          <target state="translated">주어진 이벤트 유형에 대해 일치하는 요소에 첨부 된 모든 핸들러 및 동작을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a4b8861864b324da929b0a255c51560728a3e333" translate="yes" xml:space="preserve">
          <source>Execute all handlers attached to an element for an event.</source>
          <target state="translated">이벤트 요소에 첨부 된 모든 핸들러를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="e789f7eb99dff3c5f91d3fb5d876eb2d33bf77de" translate="yes" xml:space="preserve">
          <source>Execute some JavaScript code globally.</source>
          <target state="translated">JavaScript 코드를 전체적으로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="64695d2aa5592835b2154fbeed3ce5e9af494067" translate="yes" xml:space="preserve">
          <source>Execute the function &lt;code&gt;myFunc&lt;/code&gt; when both ajax requests are successful, or &lt;code&gt;myFailure&lt;/code&gt; if either one has an error.</source>
          <target state="translated">두 아약스 요청이 모두 성공하면 &lt;code&gt;myFunc&lt;/code&gt; 함수를 실행하고 둘 중 하나에 오류가 있으면 &lt;code&gt;myFailure&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d3f1eef8991eadc7d82a339225e174734a7f42e" translate="yes" xml:space="preserve">
          <source>Execute the function when the DOM is ready to be used.</source>
          <target state="translated">DOM을 사용할 준비가되면 기능을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="675673cc96383dc70fb28b15c507cc2536091b40" translate="yes" xml:space="preserve">
          <source>Execute the next function on the queue for the matched element.</source>
          <target state="translated">일치하는 요소에 대해 큐에서 다음 기능을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1bb04e151e50f0aed52de60038f5e8381c973230" translate="yes" xml:space="preserve">
          <source>Execute the next function on the queue for the matched elements.</source>
          <target state="translated">일치하는 요소에 대해 큐에서 다음 기능을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="2511e58f48414691bc9f687c67710e9be811b5c8" translate="yes" xml:space="preserve">
          <source>Extending Ajax</source>
          <target state="translated">Ajax 확장</target>
        </trans-unit>
        <trans-unit id="83d0a7049df830bf35a5faae871b3772df906b23" translate="yes" xml:space="preserve">
          <source>Fade div to a random opacity on each click, completing the animation within 200 milliseconds.</source>
          <target state="translated">클릭 할 때마다 div를 임의의 불투명도로 페이드하여 200 밀리 초 내에 애니메이션을 완성합니다.</target>
        </trans-unit>
        <trans-unit id="91b047699ea90a9efe0c2ff951cc2d463c611806" translate="yes" xml:space="preserve">
          <source>Fades a red block in over the text. Once the animation is done, it quickly fades in more text on top.</source>
          <target state="translated">텍스트 위에 빨간색 블록을 페이드 인합니다. 애니메이션이 완료되면 더 많은 텍스트가 빠르게 사라집니다.</target>
        </trans-unit>
        <trans-unit id="3fd069b222993f3d6413a7bd4d50326e9ce58614" translate="yes" xml:space="preserve">
          <source>Fades first paragraph in or out, completing the animation within 600 milliseconds and using a linear easing. Fades last paragraph in or out for 200 milliseconds, inserting a &quot;finished&quot; message upon completion.</source>
          <target state="translated">첫 번째 단락을 페이드 인 또는 페이드 아웃하여 600 밀리 초 내에 애니메이션을 완성하고 선형 여유를 사용합니다. 마지막 단락을 200 밀리 초 동안 페이드 아웃하여 완료시 &quot;완료&quot;메시지를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="d37071a7ad214c2515c89f7d0cfdcaa2f0e62d89" translate="yes" xml:space="preserve">
          <source>Fades out spans in one section that you click on.</source>
          <target state="translated">클릭 한 한 섹션에서 범위가 사라집니다.</target>
        </trans-unit>
        <trans-unit id="1516858cf3727c244f734ce0159d4765f20f0c01" translate="yes" xml:space="preserve">
          <source>Fades out two divs, one with a &quot;linear&quot; easing and one with the default, &quot;swing,&quot; easing.</source>
          <target state="translated">하나는 &quot;선형&quot;여유가 있고 다른 하나는 기본 &quot;스윙&quot;여유가있는 두 개의 div를 페이드 아웃합니다.</target>
        </trans-unit>
        <trans-unit id="43c791bb6c7ee02b7ec088f38ec212aa627fd1e4" translate="yes" xml:space="preserve">
          <source>Feature Testing</source>
          <target state="translated">기능 테스트</target>
        </trans-unit>
        <trans-unit id="fadd08dd4eeaa9372e9bebda1ac77cf73507aa82" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;fadeIn()&lt;/code&gt; effect</source>
          <target state="translated">그림 1- &lt;code&gt;fadeIn()&lt;/code&gt; 효과의 예시</target>
        </trans-unit>
        <trans-unit id="87377a8544d89c35a0b6f654b494e0261cbd9b27" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;fadeOut()&lt;/code&gt; effect</source>
          <target state="translated">그림 1- &lt;code&gt;fadeOut()&lt;/code&gt; 효과 의 예시</target>
        </trans-unit>
        <trans-unit id="da6e24e5e738e6df11fbb7480e1789d2f82af8da" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;fadeTo()&lt;/code&gt; effect</source>
          <target state="translated">그림 1- &lt;code&gt;fadeTo()&lt;/code&gt; 효과 의 예시</target>
        </trans-unit>
        <trans-unit id="2051801701c31e155939f3099d125b9287a4c974" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;hide()&lt;/code&gt; effect</source>
          <target state="translated">그림 1- &lt;code&gt;hide()&lt;/code&gt; 효과의 예시</target>
        </trans-unit>
        <trans-unit id="d832023781bd49f3b751e31035ade140352e5008" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;show()&lt;/code&gt; effect</source>
          <target state="translated">그림 1- &lt;code&gt;show()&lt;/code&gt; 효과의 예시</target>
        </trans-unit>
        <trans-unit id="d1d1583c86f13c1d0ea5500c0eea531f32c9059c" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;slideDown()&lt;/code&gt; effect</source>
          <target state="translated">그림 1- &lt;code&gt;slideDown()&lt;/code&gt; 효과 그림</target>
        </trans-unit>
        <trans-unit id="38c9dc7e072f4bad5771cc639cde2fefd66bef2c" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;slideToggle()&lt;/code&gt; effect when hiding the image</source>
          <target state="translated">그림 1- 이미지를 숨길 때 &lt;code&gt;slideToggle()&lt;/code&gt; 효과의 그림</target>
        </trans-unit>
        <trans-unit id="e8f0c37099bd63d263c5b71d61d776bc82e98cde" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;slideUp()&lt;/code&gt; effect</source>
          <target state="translated">그림 1- &lt;code&gt;slideUp()&lt;/code&gt; 효과 그림</target>
        </trans-unit>
        <trans-unit id="c7869d37cf246f526c11e9fadbc5cc3ff9328e14" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the &lt;code&gt;toggle()&lt;/code&gt; effect when hiding the image</source>
          <target state="translated">그림 1- 이미지를 숨길 때 의 &lt;code&gt;toggle()&lt;/code&gt; 효과 그림</target>
        </trans-unit>
        <trans-unit id="6375faab913c2dac1d4df960484dc2da2504d9ae" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the measured height</source>
          <target state="translated">그림 1-측정 된 높이 그림</target>
        </trans-unit>
        <trans-unit id="6b18fc7e18304b4516834bb3ef37a16b3ae72a37" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the measured width</source>
          <target state="translated">그림 1-측정 된 폭의 그림</target>
        </trans-unit>
        <trans-unit id="a46398427549463f42171d00628161ac9b7f6ef2" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the rendered HTML</source>
          <target state="translated">그림 1-렌더링 된 HTML 그림</target>
        </trans-unit>
        <trans-unit id="f109ae55fa2109bca79e6e5594df80b81fc0c945" translate="yes" xml:space="preserve">
          <source>Figure 1 - Illustration of the specified animation effect</source>
          <target state="translated">그림 1-지정된 애니메이션 효과의 그림</target>
        </trans-unit>
        <trans-unit id="3408a9ad1da8b10bb58dd127811f24cd0f57a6a6" translate="yes" xml:space="preserve">
          <source>Figure 2 - Illustration of the &lt;code&gt;slideToggle()&lt;/code&gt; effect when showing the image</source>
          <target state="translated">그림 2- 이미지를 표시 할 때 &lt;code&gt;slideToggle()&lt;/code&gt; 효과의 그림</target>
        </trans-unit>
        <trans-unit id="b55661ae1959c87f6b9cea606d46e4d97e6c5f12" translate="yes" xml:space="preserve">
          <source>Figure 2 - Illustration of the &lt;code&gt;toggle()&lt;/code&gt; effect when showing the image</source>
          <target state="translated">그림 2- 이미지를 표시 할 때 &lt;code&gt;toggle()&lt;/code&gt; 효과의 그림</target>
        </trans-unit>
        <trans-unit id="13d010b61c6e608da3c38444d950a6a38ee6cff6" translate="yes" xml:space="preserve">
          <source>Figure 2 - Illustration of the specified animation effect</source>
          <target state="translated">그림 2-지정된 애니메이션 효과의 그림</target>
        </trans-unit>
        <trans-unit id="334b76d62ec8fcbd58cd23a5f6f2c23bc50bc5c0" translate="yes" xml:space="preserve">
          <source>Filter an array of numbers to include numbers that are not bigger than zero.</source>
          <target state="translated">0보다 크지 않은 숫자를 포함하도록 숫자 배열을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="ec890d0ca46a47b48f395c77710abecd68680bd1" translate="yes" xml:space="preserve">
          <source>Filter an array of numbers to include only numbers bigger then zero.</source>
          <target state="translated">숫자보다 큰 숫자 만 포함하도록 숫자 배열을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="8efe03e2954e18bcb89ea5e687b53af858c97013" translate="yes" xml:space="preserve">
          <source>Filter reject value:</source>
          <target state="translated">필터 거부 값 :</target>
        </trans-unit>
        <trans-unit id="5b45eaed43c911908ecf8b846c86ec9a744ec63c" translate="yes" xml:space="preserve">
          <source>Filter resolve value:</source>
          <target state="translated">필터 분석 값 :</target>
        </trans-unit>
        <trans-unit id="6a099905dc3d245c1cb20d48e243fa179cb18a62" translate="yes" xml:space="preserve">
          <source>Filter the resolve value:</source>
          <target state="translated">확인 값을 필터링하십시오.</target>
        </trans-unit>
        <trans-unit id="653827de35d9ee12d7580e1c0b38e3173c964d0d" translate="yes" xml:space="preserve">
          <source>Filtering isn't, however, limited to these tags. For example, Internet Explorer prior to version 8 will also convert all &lt;code&gt;href&lt;/code&gt; properties on links to absolute URLs, and Internet Explorer prior to version 9 will not correctly handle HTML5 elements without the addition of a separate &lt;a href=&quot;https://code.google.com/p/html5shiv/&quot;&gt;compatibility layer&lt;/a&gt;.</source>
          <target state="translated">그러나 필터링은 이러한 태그로 제한되지 않습니다. 예를 들어, 버전 8 이전의 Internet Explorer 는 링크의 모든 &lt;code&gt;href&lt;/code&gt; 속성을 절대 URL 로 변환 하고 버전 9 이전의 Internet Explorer는 별도의 &lt;a href=&quot;https://code.google.com/p/html5shiv/&quot;&gt;호환성 계층을&lt;/a&gt; 추가하지 않으면 HTML5 요소를 올바르게 처리하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2b1c330450488b4d0fa46e700431bbbfca53a14f" translate="yes" xml:space="preserve">
          <source>Filters the original array of numbers leaving that are not 5 and have an index greater than 4. Then it removes all 9s.</source>
          <target state="translated">5가 아닌 4보다 큰 인덱스를 갖는 원래 숫자 배열을 필터링합니다. 그런 다음 9를 모두 제거합니다.</target>
        </trans-unit>
        <trans-unit id="c800f85c4dc872c7e4f70a6e43e6c3f78218275d" translate="yes" xml:space="preserve">
          <source>Find all button inputs and mark them.</source>
          <target state="translated">모든 버튼 입력을 찾아서 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="a92193c48e7a00a75b8c88250fcb22839921de42" translate="yes" xml:space="preserve">
          <source>Find all children of each div.</source>
          <target state="translated">각 사업부의 모든 자녀를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="5a2f8a88191515b53e2a0ef33c798e64d4a5353f" translate="yes" xml:space="preserve">
          <source>Find all children of the clicked element.</source>
          <target state="translated">클릭 한 요소의 모든 자식을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f588c9b48deea314955d1af0f90ce4f59a16cebd" translate="yes" xml:space="preserve">
          <source>Find all children with a class &quot;selected&quot; of each div.</source>
          <target state="translated">각 div에서 &quot;선택된&quot;클래스를 가진 모든 어린이를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="16371d77b339f012b7c76cec79ef622fa9749d34" translate="yes" xml:space="preserve">
          <source>Find all div elements within an XML document from an Ajax response.</source>
          <target state="translated">Ajax 응답에서 XML 문서 내의 모든 div 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="1b7a13bca82996e6ae9f4902803dedbc15488a41" translate="yes" xml:space="preserve">
          <source>Find all elements within document.body so elements like head, script, etc. are excluded.</source>
          <target state="translated">head.script 등의 요소가 제외되도록 document.body 내의 모든 요소를 ​​찾으십시오.</target>
        </trans-unit>
        <trans-unit id="5c7a481f8b149394eb84a2ecdcc864b0e295c088" translate="yes" xml:space="preserve">
          <source>Find all input elements that are enabled.</source>
          <target state="translated">사용 가능한 모든 입력 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="8125bf92848a5f10e1dd2374bcae1bf80e65235f" translate="yes" xml:space="preserve">
          <source>Find all inputs of type radio within the first form in the document.</source>
          <target state="translated">문서의 첫 번째 양식 내에서 radio 유형의 모든 입력을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="acc6b90ef47aa8eefef911194b42cfac2038674d" translate="yes" xml:space="preserve">
          <source>Find all p elements that are children of a div element and apply a border to them.</source>
          <target state="translated">div 요소의 하위 요소 인 p 요소를 모두 찾아서 테두리를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="4a6811549239dde3563838760c8c68021fb840a7" translate="yes" xml:space="preserve">
          <source>Find all parent elements of each b.</source>
          <target state="translated">각 b의 모든 부모 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="a2365c88bf5cf12eb108fe6bb37da537dd4351f2" translate="yes" xml:space="preserve">
          <source>Find all siblings with a class &quot;selected&quot; of each div.</source>
          <target state="translated">각 div의 &quot;선택된&quot;클래스를 가진 모든 형제를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="132b57ea1d70411b54ec6e62b4ea5062c2c0b0a9" translate="yes" xml:space="preserve">
          <source>Find all the text nodes inside a paragraph and wrap them with a bold tag.</source>
          <target state="translated">단락 안의 모든 텍스트 노드를 찾아 굵은 체 태그로 감 쌉니다.</target>
        </trans-unit>
        <trans-unit id="99085b7331529912fa4cd3d2a25de809c336eb4c" translate="yes" xml:space="preserve">
          <source>Find each span that is second in relation to its sibling spans.</source>
          <target state="translated">형제 범위와 관련하여 두 번째 범위를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="7f0f49132aaa3d4e3ad4d2ff38bd42a502c5b7a2" translate="yes" xml:space="preserve">
          <source>Find every element (including head, body, etc) in the document. Note that if your browser has an extension/add-on enabled that inserts a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element into the DOM, that element will be counted as well.</source>
          <target state="translated">문서에서 모든 요소 (머리, 몸 등 포함)를 찾으십시오. 브라우저에 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 요소를 DOM에 삽입하는 확장 / 추가 기능이 활성화 된 경우 해당 요소도 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="8b7b3b1569539b848b61f359b82d392ba9a77126" translate="yes" xml:space="preserve">
          <source>Find out if the parameter is a RegExp.</source>
          <target state="translated">매개 변수가 RegExp인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b960159ac48bcb44d4a4b2ac888b568a1241e8ee" translate="yes" xml:space="preserve">
          <source>Find the ancestors of &amp;lt;li class=&quot;item-a&quot;&amp;gt; up to &amp;lt;ul class=&quot;level-1&quot;&amp;gt; and give them a red background color. Also, find ancestors of &amp;lt;li class=&quot;item-2&quot;&amp;gt; that have a class of &quot;yes&quot; up to &amp;lt;ul class=&quot;level-1&quot;&amp;gt; and give them a green border.</source>
          <target state="translated">&amp;lt;li class = &quot;item-a&quot;&amp;gt;에서 &amp;lt;ul class = &quot;level-1&quot;&amp;gt;까지의 조상을 찾아서 빨간색 배경색을 지정하십시오. 또한 &amp;lt;ul class = &quot;level-1&quot;&amp;gt;까지 &quot;yes&quot;클래스가있는 &amp;lt;li class = &quot;item-2&quot;&amp;gt;의 조상을 찾아 녹색 테두리를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="fcf8d7f3bd07d9a145de2e5276fee40fbe5f7d5e" translate="yes" xml:space="preserve">
          <source>Find the first span in each matched div and add a class to it.</source>
          <target state="translated">일치하는 각 div에서 첫 번째 범위를 찾아 클래스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f7dd7a7817c7c071a85c28c65b5ddba00a1dac90" translate="yes" xml:space="preserve">
          <source>Find the last span in each matched div and add some css plus a hover state.</source>
          <target state="translated">일치하는 각 div에서 마지막 범위를 찾아 CSS와 호버 상태를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="292bf30049bd8ec189e6e65b9546849b3dfe668c" translate="yes" xml:space="preserve">
          <source>Find the offsetParent of item &quot;A.&quot;</source>
          <target state="translated">&quot;A&quot;항목의 offsetParent를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="ba5a1d54a56d43e0b5e789c6d14ec7cccbb28397" translate="yes" xml:space="preserve">
          <source>Find the parent element of each paragraph with a class &quot;selected&quot;.</source>
          <target state="translated">&quot;selected&quot;클래스가있는 각 단락의 부모 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="52accca5844f55bf2bb05ccbbfc192977706d821" translate="yes" xml:space="preserve">
          <source>Find the right answer! The fade will take 250 milliseconds and change various styles when it completes.</source>
          <target state="translated">정답을 찾으십시오! 페이드는 250 밀리 초가 걸리며 완료되면 다양한 스타일을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="7c7a468868fb7818cbce1026d5bf65eb2899e77e" translate="yes" xml:space="preserve">
          <source>Find the second li in each matched ul and note it.</source>
          <target state="translated">일치하는 각 ul에서 두 번째 li을 찾아서 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="bcb797289b3b2c0067a7a4d28bbc3683cfa1ef43" translate="yes" xml:space="preserve">
          <source>Find the second to last li in each matched ul and note it.</source>
          <target state="translated">일치하는 각 ul에서 마지막 두 번째 li를 찾아서 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="f06d0322ac5193915791ad9c1957588749fa8f2c" translate="yes" xml:space="preserve">
          <source>Find the siblings that follow &amp;lt;dt id=&quot;term-2&quot;&amp;gt; up to the next &amp;lt;dt&amp;gt; and give them a red background color. Also, find &amp;lt;dd&amp;gt; siblings that follow &amp;lt;dt id=&quot;term-1&quot;&amp;gt; up to &amp;lt;dt id=&quot;term-3&quot;&amp;gt; and give them a green text color.</source>
          <target state="translated">&amp;lt;dt id = &quot;term-2&quot;&amp;gt; 다음에 나오는 &amp;lt;dt&amp;gt;까지의 형제를 찾아서 빨간색 배경색을 지정하십시오. 또한 &amp;lt;dt id = &quot;term-1&quot;&amp;gt;에서 &amp;lt;dt id = &quot;term-3&quot;&amp;gt;까지 오는 &amp;lt;dd&amp;gt; 형제를 찾아 녹색 텍스트 색상을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9c1956687a26fdfcda4aa9f64aaf3d1af1c7c24e" translate="yes" xml:space="preserve">
          <source>Find the siblings that precede &amp;lt;dt id=&quot;term-2&quot;&amp;gt; up to the preceding &amp;lt;dt&amp;gt; and give them a red background color. Also, find previous &amp;lt;dd&amp;gt; siblings of &amp;lt;dt id=&quot;term-3&quot;&amp;gt; up to &amp;lt;dt id=&quot;term-1&quot;&amp;gt; and give them a green text color.</source>
          <target state="translated">&amp;lt;dt id = &quot;term-2&quot;&amp;gt; 앞에 오는 &amp;lt;dt&amp;gt;까지 형제를 찾아서 빨간색 배경색을 지정하십시오. 또한 &amp;lt;dt id = &quot;term-3&quot;&amp;gt;에서 &amp;lt;dt id = &quot;term-1&quot;&amp;gt;까지의 이전 &amp;lt;dd&amp;gt; 형제를 찾아 녹색 텍스트 색상을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="0cb16572f395a4bbc06540c7bf595d5aea0e1d24" translate="yes" xml:space="preserve">
          <source>Find the text in the first paragraph (stripping out the html), then set the html of the last paragraph to show it is just text (the red bold is gone).</source>
          <target state="translated">첫 번째 단락에서 텍스트를 찾은 다음 (html 제외) 마지막 단락의 HTML을 텍스트로 표시합니다 (빨간색 굵은 글씨가 사라짐).</target>
        </trans-unit>
        <trans-unit id="ec314ed0c3cf189447a53aca51a350c4ab3d8d11" translate="yes" xml:space="preserve">
          <source>Find the third td.</source>
          <target state="translated">세 번째 td를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="186d825130d2c50e2b4c271b333cf97d9a0242bc" translate="yes" xml:space="preserve">
          <source>Find the title attribute of the first &amp;lt;em&amp;gt; in the page.</source>
          <target state="translated">페이지에서 첫 번째 &amp;lt;em&amp;gt;의 제목 속성을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="e976d9f59cda7105c64c116494f135cdc00359e7" translate="yes" xml:space="preserve">
          <source>Find the unique siblings of all yellow li elements in the 3 lists (including other yellow li elements if appropriate).</source>
          <target state="translated">3 개의 목록에서 모든 노란색 li 요소의 고유 한 형제를 찾으십시오 (적절한 경우 다른 노란색 li 요소 포함).</target>
        </trans-unit>
        <trans-unit id="7b2fcb2e41ac08808577e1f639b614a0174ee7c1" translate="yes" xml:space="preserve">
          <source>Find the value of an input box.</source>
          <target state="translated">입력 상자의 값을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="6965ef49154e3980fc8928b27383ba3a83e1ca47" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each disabled button and change its text &quot;this button is disabled&quot;.</source>
          <target state="translated">비활성화 된 각 버튼의 바로 다음 형제를 찾아 &quot;이 버튼은 비활성화되어 있습니다&quot;라는 텍스트를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="f26de6df62b004f294165f046830f4cd57b466c0" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each paragraph. Keep only the ones with a class &quot;selected&quot;.</source>
          <target state="translated">각 단락의 다음 형제를 찾으십시오. 클래스가 &quot;선택&quot;된 클래스 만 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="2e522b48b2153283875e090abd1d4be61692a5fe" translate="yes" xml:space="preserve">
          <source>Find the very previous sibling of each div.</source>
          <target state="translated">각 div의 이전 형제를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="cd59444e61c96beb5b8754cab0c196cbfed3a0f5" translate="yes" xml:space="preserve">
          <source>Finds all checkbox inputs.</source>
          <target state="translated">모든 확인란 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0fa6d7ddd6a06dae3b3119b0fd8d618c6159e28f" translate="yes" xml:space="preserve">
          <source>Finds all divs and makes a border. Then adds all paragraphs to the jQuery object to set their backgrounds yellow.</source>
          <target state="translated">모든 div를 찾아 테두리를 만듭니다. 그런 다음 모든 단락을 jQuery 객체에 추가하여 배경을 노란색으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1971803dff7a8e0fb6296c5b90c6fd9f78baed9b" translate="yes" xml:space="preserve">
          <source>Finds all divs containing &quot;John&quot; and underlines them.</source>
          <target state="translated">&quot;John&quot;을 포함하는 모든 div를 찾아 밑줄을 그립니다.</target>
        </trans-unit>
        <trans-unit id="ca1c1b12ed4ab46bdfdc631c175b73f472ea64db" translate="yes" xml:space="preserve">
          <source>Finds all divs that are siblings after the element with #prev as its id. Notice the span isn't selected since it is not a div and the &quot;niece&quot; isn't selected since it is a child of a sibling, not an actual sibling.</source>
          <target state="translated">#prev를 id로하여 요소 다음에 형제 인 모든 div를 찾습니다. 스팬은 div가 아니기 때문에 선택되지 않으며 &quot;niece&quot;는 실제 형제가 아닌 형제의 자식이므로 선택되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c15a6da0dcee9815954b3710750cea4da8b5ff1" translate="yes" xml:space="preserve">
          <source>Finds all elements that are empty - they don't have child elements or text.</source>
          <target state="translated">비어있는 모든 요소를 ​​찾습니다. 하위 요소 나 텍스트가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b3afd4ca2dc29eea672680b57b89eb826083ee63" translate="yes" xml:space="preserve">
          <source>Finds all file inputs.</source>
          <target state="translated">모든 파일 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0ab9f3b519c7a56b1b5a2b49d309c4ef923224e6" translate="yes" xml:space="preserve">
          <source>Finds all image inputs.</source>
          <target state="translated">모든 이미지 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="a7974526f109f42d21154f8f285d3fd4694f0c53" translate="yes" xml:space="preserve">
          <source>Finds all input elements that are disabled.</source>
          <target state="translated">비활성화 된 모든 입력 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="22a153dc48e28eb36212e94ad846fe71b9b7645d" translate="yes" xml:space="preserve">
          <source>Finds all input elements.</source>
          <target state="translated">모든 입력 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f3a24533e6d3ebd6b4993de2dc84f4d1ca98180e" translate="yes" xml:space="preserve">
          <source>Finds all inputs that are next to a label.</source>
          <target state="translated">레이블 옆에있는 모든 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6f406d282cbb0086949318d217f53f2dfabc502e" translate="yes" xml:space="preserve">
          <source>Finds all inputs that are not checked and highlights the next sibling span. Notice there is no change when clicking the checkboxes since no click events have been linked.</source>
          <target state="translated">확인되지 않은 모든 입력을 찾고 다음 형제 범위를 강조 표시합니다. 클릭 이벤트가 연결되지 않았으므로 확인란을 클릭해도 변경 사항이 없습니다.</target>
        </trans-unit>
        <trans-unit id="03d7c9da396dd7431afd014f318e946a21f04633" translate="yes" xml:space="preserve">
          <source>Finds all inputs that don't have the name 'newsletter' and appends text to the span next to it.</source>
          <target state="translated">'newsletter'라는 이름이없는 모든 입력을 찾고 그 옆에있는 범위에 텍스트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="06d5302deda496a0024de6fa468294b71c6dfc0f" translate="yes" xml:space="preserve">
          <source>Finds all inputs that have an id attribute and whose name attribute ends with man and sets the value.</source>
          <target state="translated">id 속성이 있고 name 속성이 man으로 끝나고 값을 설정하는 모든 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6a9e41dcf2adcb56ea291811f551a554b208732f" translate="yes" xml:space="preserve">
          <source>Finds all inputs with a name attribute that contains 'man' and sets the value with some text.</source>
          <target state="translated">'man'을 포함하는 name 속성을 가진 모든 입력을 찾고 텍스트로 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c3f5514a13c755b6f43a8d899f5eaa63217a92a7" translate="yes" xml:space="preserve">
          <source>Finds all inputs with a name attribute that contains the word 'man' and sets the value with some text.</source>
          <target state="translated">단어 'man'을 포함하는 이름 속성을 가진 모든 입력을 찾고 일부 텍스트로 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2bfbca7e5a82789a4b5befd315041297a747102d" translate="yes" xml:space="preserve">
          <source>Finds all inputs with a value of &quot;Hot Fuzz&quot; and changes the text of the next sibling span.</source>
          <target state="translated">값이 &quot;Hot Fuzz&quot;인 모든 입력을 찾고 다음 형제 범위의 텍스트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="17f34be09250a871e93434e3d02a8d3396ae0307" translate="yes" xml:space="preserve">
          <source>Finds all inputs with an attribute name that ends with 'letter' and puts text in them.</source>
          <target state="translated">속성 이름이 'letter'로 끝나고 텍스트를 입력하는 모든 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="2bac059205bd05e494e5f75b713d81ffa887e403" translate="yes" xml:space="preserve">
          <source>Finds all inputs with an attribute name that starts with 'news' and puts text in them.</source>
          <target state="translated">'news'로 시작하는 속성 이름을 가진 모든 입력을 찾고 텍스트를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="c5073058cd3c1f66b2bc8b3f3e2bbdd60409a382" translate="yes" xml:space="preserve">
          <source>Finds all links with an hreflang attribute that is english.</source>
          <target state="translated">영어 인 hreflang 속성을 가진 모든 링크를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0644d2625b75128599a33f5ae2c59ef61dc99f90" translate="yes" xml:space="preserve">
          <source>Finds all password inputs.</source>
          <target state="translated">모든 비밀번호 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="65fc54cba1c3693ad4fb4bf04b8171bfc1325bf3" translate="yes" xml:space="preserve">
          <source>Finds all radio inputs.</source>
          <target state="translated">모든 라디오 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="84bc630bf78adeed71d6ff39b31ed3afd2d51599" translate="yes" xml:space="preserve">
          <source>Finds all reset inputs.</source>
          <target state="translated">모든 리셋 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="74d5985c781cb644ee2a43ea2098469c3b78fc7a" translate="yes" xml:space="preserve">
          <source>Finds all submit elements that are descendants of a td element.</source>
          <target state="translated">td 요소의 자손 인 모든 제출 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6ef05ca2ffcf8e15c46a3c7d243049265806b81d" translate="yes" xml:space="preserve">
          <source>Finds all tds with children, including text.</source>
          <target state="translated">텍스트를 포함하여 자식이있는 모든 td를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6865bbe96ddbcf22960cb277c52105eefbff362a" translate="yes" xml:space="preserve">
          <source>Finds all text inputs.</source>
          <target state="translated">모든 텍스트 입력을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0ed1ea8d1a66b0f419967a5a31e5d2cf449ebf58" translate="yes" xml:space="preserve">
          <source>Finds even table rows, matching the first, third and so on (index 0, 2, 4 etc.).</source>
          <target state="translated">첫 번째, 세 번째 등 (인덱스 0, 2, 4 등)과 일치하는 짝수 테이블 행을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="9bff8e64f627d99d0234b9dc1e9983dae60e45d2" translate="yes" xml:space="preserve">
          <source>Finds every DIV element.</source>
          <target state="translated">모든 DIV 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="72f69cf9a581c8efb455b7a3df1e530c0c519ce6" translate="yes" xml:space="preserve">
          <source>Finds odd table rows, matching the second, fourth and so on (index 1, 3, 5 etc.).</source>
          <target state="translated">두 번째, 네 번째 등 (인덱스 1, 3, 5 등)과 일치하는 홀수 테이블 행을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="493bf3dbc460e7b010901b3c1849ca6ea8d7d285" translate="yes" xml:space="preserve">
          <source>Finds out if the parameter is a function.</source>
          <target state="translated">매개 변수가 함수인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ce2d1b5fb1f46b8b4f408ee8fb82eb8d21bf8bee" translate="yes" xml:space="preserve">
          <source>Finds out if the parameter is a window.</source>
          <target state="translated">매개 변수가 창인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d8394c9a281956dec84810d247e584214dbeb5ae" translate="yes" xml:space="preserve">
          <source>Finds out if the parameter is an array.</source>
          <target state="translated">매개 변수가 배열인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f85fa03660a6a790c810341291e705bf864ad3c1" translate="yes" xml:space="preserve">
          <source>Finds the element with both &quot;myclass&quot; and &quot;otherclass&quot; classes.</source>
          <target state="translated">&quot;myclass&quot;및 &quot;otherclass&quot;클래스가 모두있는 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="ac402cb69fd27d2468f8500c916426867fd968e7" translate="yes" xml:space="preserve">
          <source>Finds the element with the class &quot;myClass&quot;.</source>
          <target state="translated">&quot;myClass&quot;클래스를 가진 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="5f88a5bcc8909983d79e27dfdd9856cbce59b52f" translate="yes" xml:space="preserve">
          <source>Finds the elements of an array which satisfy a filter function. The original array is not affected.</source>
          <target state="translated">필터 함수를 만족시키는 배열의 요소를 찾습니다. 원래 배열은 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b58950837bb829c72a14efe2568fa3fd9080f732" translate="yes" xml:space="preserve">
          <source>Finds the elements that match any of these three selectors.</source>
          <target state="translated">이 세 가지 선택기와 일치하는 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="e85a855fa3f28883b3e3697fff7348752bea4940" translate="yes" xml:space="preserve">
          <source>Finds the first span in each matched div to underline and add a hover state.</source>
          <target state="translated">일치하는 각 div에서 첫 번째 범위를 찾아서 밑줄을 긋고 호버 상태를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2751b863a7294ca8cac7381ca44ebc9d46239b04" translate="yes" xml:space="preserve">
          <source>Finds the first table row.</source>
          <target state="translated">첫 번째 테이블 행을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="4b5224d134fb8e8bf9de277940509ac0a9d09746" translate="yes" xml:space="preserve">
          <source>Finds the last table row.</source>
          <target state="translated">마지막 테이블 행을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="c36f804e0aa162645a1c5171235cbf604d5057b4" translate="yes" xml:space="preserve">
          <source>Fire focus.</source>
          <target state="translated">화재 초점.</target>
        </trans-unit>
        <trans-unit id="b8977ffab6c4daa579a9c9533eff9515e4af8f80" translate="yes" xml:space="preserve">
          <source>First handler for .toggle() called.</source>
          <target state="translated">.toggle ()의 첫 번째 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="d792fc1a7aceb881f80a1116f43f89f2103bd381" translate="yes" xml:space="preserve">
          <source>First, the initial selector locates item 3, initializing the stack with the set containing just this item. The call to &lt;code&gt;.nextAll()&lt;/code&gt; then pushes the set of items 4 and 5 onto the stack. Finally, the &lt;code&gt;.addBack()&lt;/code&gt; invocation merges these two sets together, creating a jQuery object that points to all three items in document order: &lt;code&gt;{[&amp;lt;li.third-item&amp;gt;,&amp;lt;li&amp;gt;,&amp;lt;li&amp;gt; ]}&lt;/code&gt;.</source>
          <target state="translated">먼저 초기 선택기는 항목 3을 찾아이 항목 만 포함 된 세트로 스택을 초기화합니다. 그런 다음 &lt;code&gt;.nextAll()&lt;/code&gt; 을 호출하면 항목 4 및 5 세트가 스택으로 푸시됩니다. 마지막으로 &lt;code&gt;.addBack()&lt;/code&gt; 호출은이 두 세트를 병합하여 &lt;code&gt;{[&amp;lt;li.third-item&amp;gt;,&amp;lt;li&amp;gt;,&amp;lt;li&amp;gt; ]}&lt;/code&gt; 문서 순서로 세 항목을 모두 가리키는 jQuery 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="294946cfc881a676badcaff501c6b112a6e1b0be" translate="yes" xml:space="preserve">
          <source>First, the initial selector locates item 3, initializing the stack with the set containing just this item. The call to &lt;code&gt;.nextAll()&lt;/code&gt; then pushes the set of items 4 and 5 onto the stack. Finally, the &lt;code&gt;.andSelf()&lt;/code&gt; invocation merges these two sets together, creating a jQuery object that points to all three items in document order: &lt;code&gt;[ &amp;lt;li.third-item&amp;gt;, &amp;lt;li&amp;gt;, &amp;lt;li&amp;gt; ]&lt;/code&gt;.</source>
          <target state="translated">먼저 초기 선택기는 항목 3을 찾아이 항목 만 포함 된 세트로 스택을 초기화합니다. 그런 다음 &lt;code&gt;.nextAll()&lt;/code&gt; 을 호출하면 항목 4 및 5 세트가 스택으로 푸시됩니다. 마지막으로 &lt;code&gt;.andSelf()&lt;/code&gt; 호출은이 두 세트를 병합하여 문서 순서로 세 항목을 모두 가리키는 jQuery 객체를 만듭니다. &lt;code&gt;[ &amp;lt;li.third-item&amp;gt;, &amp;lt;li&amp;gt;, &amp;lt;li&amp;gt; ]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65448f0f9728e163ce35ca72e94afdb17691cab2" translate="yes" xml:space="preserve">
          <source>Flag combinations with &lt;code&gt;$.Callbacks()&lt;/code&gt; are internally in jQuery for the &lt;code&gt;.done()&lt;/code&gt; and &lt;code&gt;.fail()&lt;/code&gt; functions on a Deferred &amp;mdash; both of which use &lt;code&gt;$.Callbacks('memory once')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$.Callbacks()&lt;/code&gt; 와의 플래그 조합은 Deferred 의 &lt;code&gt;.done()&lt;/code&gt; 및 &lt;code&gt;.fail()&lt;/code&gt; 함수에 대해 내부적으로 jQuery에 있습니다. 둘 다 &lt;code&gt;$.Callbacks('memory once')&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="419b234c0acd0418f489ddbb12253af97af4124c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mouseout&lt;/code&gt;, indicates the element being entered; for &lt;code&gt;mouseover&lt;/code&gt;, indicates the element being exited.</source>
          <target state="translated">내용 &lt;code&gt;mouseout&lt;/code&gt; , 입력되는 원소를 나타내고; 에 대한 &lt;code&gt;mouseover&lt;/code&gt; , 소자가 종료되는 나타낸다.</target>
        </trans-unit>
        <trans-unit id="b3ec9113cfbf4cfb49201c1b9ba1674253e9a92b" translate="yes" xml:space="preserve">
          <source>For HTML elements, the language value is determined by the &lt;code&gt;lang&lt;/code&gt; attribute and possibly information from &lt;code&gt;meta&lt;/code&gt; elements or HTTP headers.</source>
          <target state="translated">HTML 요소의 경우 언어 값은 &lt;code&gt;lang&lt;/code&gt; 속성과 &lt;code&gt;meta&lt;/code&gt; 요소 또는 HTTP 헤더의 정보 로 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d598031fb0ff845d9a9222743d9ec166ea209824" translate="yes" xml:space="preserve">
          <source>For all signatures, the arguments can be &lt;code&gt;null&lt;/code&gt; if no callback of that type is desired. Alternatively, use &lt;code&gt;.done()&lt;/code&gt;, &lt;code&gt;.fail()&lt;/code&gt; or &lt;code&gt;.progress()&lt;/code&gt; to set only one type of callback without filtering status or values.</source>
          <target state="translated">모든 서명에 대해 해당 유형의 콜백이 필요하지 않은 경우 인수는 &lt;code&gt;null&lt;/code&gt; 일 수 있습니다 . 또는 &lt;code&gt;.done()&lt;/code&gt; , &lt;code&gt;.fail()&lt;/code&gt; 또는 &lt;code&gt;.progress()&lt;/code&gt; 를 사용하여 상태 또는 값을 필터링하지 않고 한 가지 유형의 콜백 만 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="504c47b928895b798708feb5bd779733a1df4fc6" translate="yes" xml:space="preserve">
          <source>For backward compatibility with &lt;code&gt;XMLHttpRequest&lt;/code&gt;, a &lt;code&gt;jqXHR&lt;/code&gt; object will expose the following properties and methods:</source>
          <target state="translated">&lt;code&gt;XMLHttpRequest&lt;/code&gt; 와의 호환성을 위해 &lt;code&gt;jqXHR&lt;/code&gt; 객체는 다음과 같은 속성과 메소드를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="3332248b58007f627e0cc0bf9faa5c49bb8ed085" translate="yes" xml:space="preserve">
          <source>For class selectors, jQuery uses JavaScript's native &lt;code&gt;getElementsByClassName()&lt;/code&gt; function if the browser supports it.</source>
          <target state="translated">클래스 선택기의 경우 브라우저가 지원하는 경우 jQuery는 JavaScript의 기본 &lt;code&gt;getElementsByClassName()&lt;/code&gt; 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fc14a50d18ed44706557bc8dbd1c7c596acc0d9e" translate="yes" xml:space="preserve">
          <source>For details on the settings available for &lt;code&gt;$.ajaxSetup()&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$.ajaxSetup()&lt;/code&gt; 사용할 수있는 설정에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="71e3acc4eeb9726ab59c3aa1b16da4f606c19233" translate="yes" xml:space="preserve">
          <source>For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.</source>
          <target state="translated">세트의 각 요소에 대해 요소 자체를 테스트하고 DOM 트리의 조상을 통해 이동하여 선택기와 일치하는 첫 번째 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="08d18d272d50f3007730ac2a3822b17783b09770" translate="yes" xml:space="preserve">
          <source>For each paragraph, find the very previous sibling that has a class &quot;selected&quot;.</source>
          <target state="translated">각 단락에 대해 &quot;선택&quot;클래스가있는 이전 형제를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="71a9c4b9bbdd88e86d16ed9815ffcce2196e6ea0" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;selectedIndex&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;nodeType&lt;/code&gt;, &lt;code&gt;ownerDocument&lt;/code&gt;, &lt;code&gt;defaultChecked&lt;/code&gt;, and &lt;code&gt;defaultSelected&lt;/code&gt; should be retrieved and set with the &lt;code&gt;.prop()&lt;/code&gt; method. Prior to jQuery 1.6, these properties were retrievable with the &lt;code&gt;.attr()&lt;/code&gt; method, but this was not within the scope of &lt;code&gt;attr&lt;/code&gt;. These do not have corresponding attributes and are only properties.</source>
          <target state="translated">예를 들어, &lt;code&gt;selectedIndex&lt;/code&gt; , &lt;code&gt;tagName&lt;/code&gt; , &lt;code&gt;nodeName&lt;/code&gt; , &lt;code&gt;nodeType&lt;/code&gt; , &lt;code&gt;ownerDocument&lt;/code&gt; , &lt;code&gt;defaultChecked&lt;/code&gt; 및 &lt;code&gt;defaultSelected&lt;/code&gt; 를 검색하고 &lt;code&gt;.prop()&lt;/code&gt; 메소드로 설정해야합니다 . jQuery 1.6 이전에는 이러한 속성을 &lt;code&gt;.attr()&lt;/code&gt; 메서드 로 검색 할 수 있었지만 &lt;code&gt;attr&lt;/code&gt; 범위 내에 없었습니다 . 이들은 대응하는 속성이없고 속성 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="0b7f2ace9608767c28b97797076cba450675c345" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;selectedIndex&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;nodeType&lt;/code&gt;, &lt;code&gt;ownerDocument&lt;/code&gt;, &lt;code&gt;defaultChecked&lt;/code&gt;, and &lt;code&gt;defaultSelected&lt;/code&gt; should be retrieved and set with the &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; method. Prior to jQuery 1.6, these properties were retrievable with the &lt;code&gt;.attr()&lt;/code&gt; method, but this was not within the scope of &lt;code&gt;attr&lt;/code&gt;. These do not have corresponding attributes and are only properties.</source>
          <target state="translated">예를 들어, &lt;code&gt;selectedIndex&lt;/code&gt; , &lt;code&gt;tagName&lt;/code&gt; , &lt;code&gt;nodeName&lt;/code&gt; , &lt;code&gt;nodeType&lt;/code&gt; , &lt;code&gt;ownerDocument&lt;/code&gt; , &lt;code&gt;defaultChecked&lt;/code&gt; 및 &lt;code&gt;defaultSelected&lt;/code&gt; 를 검색하고 &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; 메소드로 설정해야합니다 . jQuery 1.6 이전에는 이러한 속성을 &lt;code&gt;.attr()&lt;/code&gt; 메서드 로 검색 할 수 있었지만 &lt;code&gt;attr&lt;/code&gt; 범위 내에 없었습니다 . 이들은 대응하는 속성이없고 속성 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="cc4924d56b62ec1c542022ff31755389372bd7d7" translate="yes" xml:space="preserve">
          <source>For example, clicked anchors will not take the browser to a new URL. We can use &lt;a href=&quot;event.isdefaultprevented&quot;&gt;&lt;code&gt;event.isDefaultPrevented()&lt;/code&gt;&lt;/a&gt; to determine if this method has been called by an event handler that was triggered by this event.</source>
          <target state="translated">예를 들어 클릭 한 앵커는 브라우저를 새 URL로 가져 가지 않습니다. &lt;a href=&quot;event.isdefaultprevented&quot;&gt; &lt;code&gt;event.isDefaultPrevented()&lt;/code&gt; &lt;/a&gt; 를 사용 하여이 이벤트에 의해 트리거 된 이벤트 핸들러가이 메소드를 호출했는지 여부를 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="70c526ce786633871fa1852d883fa998bb18984e" translate="yes" xml:space="preserve">
          <source>For example, consider a page with a simple image element:</source>
          <target state="translated">예를 들어, 간단한 이미지 요소가있는 페이지를 생각해보십시오.</target>
        </trans-unit>
        <trans-unit id="a52244c25352e32df63a99c79e16d5d5806d81f7" translate="yes" xml:space="preserve">
          <source>For example, consider a page with a simple image:</source>
          <target state="translated">예를 들어, 간단한 이미지가있는 페이지를 생각해보십시오.</target>
        </trans-unit>
        <trans-unit id="f35b0a4102aa2118680f95786efd23be027146ce" translate="yes" xml:space="preserve">
          <source>For example, consider the HTML:</source>
          <target state="translated">예를 들어 HTML을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="6ba63985735fc148d46fac8878b7fe1b04328346" translate="yes" xml:space="preserve">
          <source>For example, given the following HTML:</source>
          <target state="translated">예를 들어 다음 HTML이 주어진 경우</target>
        </trans-unit>
        <trans-unit id="3f6839ce62d498d51d360a2fc2fd64f4f1d89419" translate="yes" xml:space="preserve">
          <source>For example, some versions of Webkit-based browsers require &lt;code&gt;-webkit-border-radius&lt;/code&gt; to set the &lt;code&gt;border-radius&lt;/code&gt; on an element, while earlier Firefox versions require &lt;code&gt;-moz-border-radius&lt;/code&gt;. A css hook can normalize these vendor-prefixed properties to let &lt;code&gt;.css()&lt;/code&gt; accept a single, standard property name (&lt;code&gt;border-radius&lt;/code&gt;, or with DOM property syntax, &lt;code&gt;borderRadius&lt;/code&gt;).</source>
          <target state="translated">예를 들어, 일부 웹킷 기반 브라우저 버전에서는 요소에 &lt;code&gt;border-radius&lt;/code&gt; &lt;code&gt;-webkit-border-radius&lt;/code&gt; 을 설정 하려면 -webkit-border-radius 가 필요하지만 이전 Firefox 버전에는 &lt;code&gt;-moz-border-radius&lt;/code&gt; 가 필요합니다 . CSS 후크는 이러한 공급 업체 접두사 속성을 정규화하여 &lt;code&gt;.css()&lt;/code&gt; 가 단일 표준 속성 이름 ( &lt;code&gt;border-radius&lt;/code&gt; 또는 DOM 속성 구문 인 &lt;code&gt;borderRadius&lt;/code&gt; )을 허용하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6eda56df69881f851d2a3c4509a7ad400e6e9947" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;.delegate()&lt;/code&gt; code:</source>
          <target state="translated">예를 들어 다음 &lt;code&gt;.delegate()&lt;/code&gt; 코드 는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="74e0355387d68ae2faceb0166aba41a95d3fb353" translate="yes" xml:space="preserve">
          <source>For example, the following sets a default for the &lt;code&gt;url&lt;/code&gt; parameter before pinging the server repeatedly:</source>
          <target state="translated">예를 들어, 다음 은 서버를 반복적으로 ping하기 전에 &lt;code&gt;url&lt;/code&gt; 매개 변수 의 기본값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="206a46034dff48208d6b64685dbb9ec9b5de0e3a" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; after the first paragraph:</source>
          <target state="translated">예를 들어, 다음은 첫 번째 단락 뒤에 두 개의 새 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 와 기존 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="86d1833a70bd94e20ef8fecd149fb887854da98d" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; as the first three child nodes of the body:</source>
          <target state="translated">예를 들어, 다음은 두 개의 새로운 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 와 기존 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 본문의 첫 세 하위 노드로 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="08a574576a46931260e7915b73ce5658f04a9bb6" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; as the last three child nodes of the body:</source>
          <target state="translated">예를 들어 다음은 두 개의 새로운 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 와 기존 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 본문의 마지막 세 하위 노드로 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="777ae371ad72a0878cf64a8806bef8c44c7ea1ef" translate="yes" xml:space="preserve">
          <source>For example, the following will insert two new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and an existing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; before the first paragraph:</source>
          <target state="translated">예를 들어, 다음은 첫 번째 단락 앞에 두 개의 새 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 와 기존 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="460c42c4bc6d060412994bb142143655fe9d8fe8" translate="yes" xml:space="preserve">
          <source>For example, the jQuery source uses &lt;code&gt;$.ajaxSetup()&lt;/code&gt; to add a converter for &quot;text script&quot;:</source>
          <target state="translated">예를 들어, jQuery 소스는 &lt;code&gt;$.ajaxSetup()&lt;/code&gt; 을 사용 하여 &quot;텍스트 스크립트&quot;에 대한 변환기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f98d7dbb61f00102b13d388417b83ff93f05428e" translate="yes" xml:space="preserve">
          <source>For example, to simultaneously animate the width and height with the &lt;code&gt;swing&lt;/code&gt; easing function and the opacity with the &lt;code&gt;linear&lt;/code&gt; easing function:</source>
          <target state="translated">예를 들어 &lt;code&gt;swing&lt;/code&gt; 여유 기능을 사용하여 너비와 높이를 동시에 애니메이션 하고 &lt;code&gt;linear&lt;/code&gt; 여유 기능을 사용하여 불투명도를 애니메이션하려면</target>
        </trans-unit>
        <trans-unit id="a256c55290037b6b4e4ef59ecac6cc8a8cc90431" translate="yes" xml:space="preserve">
          <source>For examples of how &lt;code&gt;flags&lt;/code&gt; should ideally be used, see below:</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 를 이상적으로 사용 하는 방법에 대한 예는 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2d877f3814f3e614f7cb9479753e3d3ed1d96595" translate="yes" xml:space="preserve">
          <source>For explicit parsing of a string to HTML, the &lt;code&gt;&lt;a href=&quot;jquery.parsehtml&quot;&gt;$.parseHTML()&lt;/a&gt;&lt;/code&gt; method is available as of jQuery 1.8.</source>
          <target state="translated">문자열을 HTML로 명시 적으로 구문 분석하려면 &lt;code&gt;&lt;a href=&quot;jquery.parsehtml&quot;&gt;$.parseHTML()&lt;/a&gt;&lt;/code&gt; 메소드를 jQuery 1.8부터 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a639b88a08f40071011d2f564f13b074990fba6" translate="yes" xml:space="preserve">
          <source>For explicit parsing of a string to HTML, use the &lt;a href=&quot;jquery.parsehtml&quot;&gt;$.parseHTML()&lt;/a&gt; method.</source>
          <target state="translated">문자열을 HTML로 명시 적으로 구문 분석하려면 &lt;a href=&quot;jquery.parsehtml&quot;&gt;$ .parseHTML ()&lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d204a58aac87e45f1411c60b2d65281f54cd95b9" translate="yes" xml:space="preserve">
          <source>For id selectors, jQuery uses the JavaScript function &lt;code&gt;document.getElementById()&lt;/code&gt;, which is extremely efficient. When another selector is attached to the id selector, such as &lt;code&gt;h2#pageTitle&lt;/code&gt;, jQuery performs an additional check before identifying the element as a match.</source>
          <target state="translated">id 선택기의 경우 jQuery 는 매우 효율적인 JavaScript 함수 &lt;code&gt;document.getElementById()&lt;/code&gt; 사용합니다 . &lt;code&gt;h2#pageTitle&lt;/code&gt; 과 같은 다른 선택기가 id 선택기에 연결 되면 jQuery는 요소를 일치하는 것으로 식별하기 전에 추가 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0401f62c26033e7003144ef3a79e42b4cb8c3f3c" translate="yes" xml:space="preserve">
          <source>For key or mouse events, this property indicates the specific key or button that was pressed.</source>
          <target state="translated">키 또는 마우스 이벤트의 경우이 속성은 누른 특정 키 또는 버튼을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="67433ab5e371019c377fa4bfd157633051442b3b" translate="yes" xml:space="preserve">
          <source>For more information on JSONP, see the &lt;a href=&quot;https://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/&quot;&gt;original post detailing its use&lt;/a&gt;.</source>
          <target state="translated">JSONP에 대한 자세한 정보 &lt;a href=&quot;https://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/&quot;&gt;는 사용법이 자세히 나와&lt;/a&gt; 있는 원본 게시물을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cd901094cc8c15efd37a11c3d5524bf90353f62" translate="yes" xml:space="preserve">
          <source>For more information on this method, see the discussion for &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;.trigger()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 메소드에 대한 자세한 정보는 &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;.trigger()&lt;/a&gt;&lt;/code&gt; 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f26a4dbdf809316d7e44e37c2385f59fd1f78d0" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation for &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred object&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;category/deferred-object&quot;&gt;지연된 객체&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c868cda9831ab02d603dca42da87c51873ecc8fc" translate="yes" xml:space="preserve">
          <source>For needs that fall outside of this behavior, write a custom extend method instead, or use a library like &lt;a href=&quot;https://lodash.com&quot;&gt;lodash&lt;/a&gt;.</source>
          <target state="translated">이 동작을 벗어나는 요구의 경우 대신 사용자 정의 확장 메소드를 작성하거나 &lt;a href=&quot;https://lodash.com&quot;&gt;lodash&lt;/a&gt; 와 같은 라이브러리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="71d4eb7fde690f2488796d6d40458af66bc1bb08" translate="yes" xml:space="preserve">
          <source>For non-delegated event handlers attached directly to an element, &lt;code&gt;event.delegateTarget&lt;/code&gt; will always be equal to &lt;code&gt;event.currentTarget&lt;/code&gt;.</source>
          <target state="translated">요소에 직접 연결된 위임되지 않은 이벤트 처리기의 경우 &lt;code&gt;event.delegateTarget&lt;/code&gt; 은 항상 &lt;code&gt;event.currentTarget&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1569a417e5bc013ed8b3b21ac19a98de3f5f1979" translate="yes" xml:space="preserve">
          <source>For pages still using &lt;code&gt;.live()&lt;/code&gt;, this list of version-specific differences may be helpful:</source>
          <target state="translated">여전히 &lt;code&gt;.live()&lt;/code&gt; 사용하는 페이지의 경우이 버전 별 차이점 목록이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a43de00ef2068e64c4b4ec8b88356ff33bf6360a" translate="yes" xml:space="preserve">
          <source>For selects, checkboxes and radio buttons, you can use &lt;a href=&quot;checked-selector&quot;&gt;:checked&lt;/a&gt; to select the right elements. For example:</source>
          <target state="translated">선택, 확인란 및 라디오 버튼의 경우 &lt;a href=&quot;checked-selector&quot;&gt;: checked&lt;/a&gt; 를 사용 하여 올바른 요소를 선택할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6f9453682ae9a735dd902cfe772d3ada7f0247a4" translate="yes" xml:space="preserve">
          <source>Forms and their child elements should not use input names or ids that conflict with properties of a form, such as &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, or &lt;code&gt;method&lt;/code&gt;. Name conflicts can cause confusing failures. For a complete list of rules and to check your markup for these problems, see &lt;a href=&quot;https://kangax.github.com/domlint/&quot;&gt;DOMLint&lt;/a&gt;.</source>
          <target state="translated">양식 및 해당 하위 요소는 &lt;code&gt;submit&lt;/code&gt; , &lt;code&gt;length&lt;/code&gt; 또는 &lt;code&gt;method&lt;/code&gt; 와 같은 양식의 속성과 충돌하는 입력 이름 또는 ID를 사용해서는 안됩니다 . 이름 충돌로 인해 혼란이 발생할 수 있습니다. 전체 규칙 목록과 이러한 문제에 대한 마크 업을 확인하려면 &lt;a href=&quot;https://kangax.github.com/domlint/&quot;&gt;DOMLint를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9aa2d00beb73fcc2216e91a5e1d3a3f40b1bdfc5" translate="yes" xml:space="preserve">
          <source>From this example, we can see that the selected element replaces the target by being moved from its old location, not by being cloned.</source>
          <target state="translated">이 예제에서 선택한 요소가 복제되지 않고 이전 위치에서 이동하여 대상을 대체 함을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="1ed0e208935e6b03dcb71bca099a6875a8b2155b" translate="yes" xml:space="preserve">
          <source>Further discussion of this unusual usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-child-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">이 비정상적인 사용법에 대한 자세한 설명은 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-child-pseudo&quot;&gt;W3C CSS 사양&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="088d508f862a4bef2fd2e215bbde4daefe5221a4" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#lang-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">이 사용법에 대한 자세한 설명은 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#lang-pseudo&quot;&gt;W3C CSS 사양&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08c8a40e35c45545a5b6c98ac5890b94c82b1678" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-child-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">이 사용법에 대한 자세한 설명은 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-child-pseudo&quot;&gt;W3C CSS 사양&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="921705e59313b7a736acda7dca5b051bffceb268" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-of-type-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">이 사용법에 대한 자세한 설명은 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-last-of-type-pseudo&quot;&gt;W3C CSS 사양&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86236dcf3827e429f75104c51657752e6c1760c3" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-of-type-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">이 사용법에 대한 자세한 설명은 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#nth-of-type-pseudo&quot;&gt;W3C CSS 사양&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b75f0ed0d84c2f0a6f58c2aa0bb3d0c26aa22e89" translate="yes" xml:space="preserve">
          <source>Further discussion of this usage can be found in the &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#target-pseudo&quot;&gt;W3C CSS specification&lt;/a&gt;.</source>
          <target state="translated">이 사용법에 대한 자세한 설명은 &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#target-pseudo&quot;&gt;W3C CSS 사양&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3ec4f02d993747e068fc0fcf7f9a2b0f5e9764a" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">선택적으로 선택기로 필터링하여 일치하는 요소 세트에서 각 요소의 다음 형제를 모두 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="225dc925195e1a0f41fce0d2d521e6acce8c701e" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.</source>
          <target state="translated">선택기, DOM 노드 또는 전달 된 jQuery 객체와 일치하는 요소는 포함하지 않고 각 요소의 다음 형제를 모두 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="95a50d7af7f8ca615f109fa1d1455015c47c4991" translate="yes" xml:space="preserve">
          <source>Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">선택적으로 선택기로 필터링하여 일치하는 요소 세트에서 각 요소의 이전 형제를 모두 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b43fd88bcdc784b29698cfa8e804ff7e27b83367" translate="yes" xml:space="preserve">
          <source>Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.</source>
          <target state="translated">선택기, DOM 노드 또는 jQuery 객체와 일치하는 요소를 포함하지 않는 각 요소의 이전 형제를 모두 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="def41336c38d30d9695430a64cd63baf88c111f6" translate="yes" xml:space="preserve">
          <source>Get another page on the same domain. Outputs to console both the data returned and the type of data returned.</source>
          <target state="translated">동일한 도메인에서 다른 페이지를 가져옵니다. 반환 된 데이터와 반환 된 데이터 유형을 모두 콘솔에 출력합니다.</target>
        </trans-unit>
        <trans-unit id="1b5b3295285f15c709634c34b26ac40c53caaa50" translate="yes" xml:space="preserve">
          <source>Get the HTML contents of the first element in the set of matched elements or set the HTML contents of every matched element.</source>
          <target state="translated">일치하는 요소 세트에서 첫 번째 요소의 HTML 컨텐츠를 가져 오거나 일치하는 모든 요소의 HTML 컨텐츠를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f17aab087bb690a38d423c34d29b2d9239935907" translate="yes" xml:space="preserve">
          <source>Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">현재 일치하는 요소 집합에서 각 요소의 조상을 가져오고 선택적으로 선택기로 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="8d432bc5a267366259f120ff12e827235e01a9fd" translate="yes" xml:space="preserve">
          <source>Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.</source>
          <target state="translated">선택기, DOM 노드 또는 jQuery 객체와 일치하는 요소를 포함하여 현재 일치하는 요소 집합에서 각 요소의 조상을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="014871d79f603f8ec9ce8e3f8ea99b12a8d36bbb" translate="yes" xml:space="preserve">
          <source>Get the background color of a clicked div.</source>
          <target state="translated">클릭 한 div의 배경색을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3315cbfac5150265188d20f6695ef441e1b04d8f" translate="yes" xml:space="preserve">
          <source>Get the children of each element in the set of matched elements, including text and comment nodes.</source>
          <target state="translated">텍스트 및 주석 노드를 포함하여 일치하는 요소 세트에서 각 요소의 하위를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="18444208fb696aae10d0acc9ab0d3f650d3c8d38" translate="yes" xml:space="preserve">
          <source>Get the children of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">선택적으로 선택적으로 필터링하여 일치하는 요소 세트에서 각 요소의 하위를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f469d79370aba6cac09c73c00c7965a6c4055d2e" translate="yes" xml:space="preserve">
          <source>Get the closest ancestor element that is positioned.</source>
          <target state="translated">가장 가까운 조상 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a19834b9d5904106cb0b0e73fba9bbba80b0074a" translate="yes" xml:space="preserve">
          <source>Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.</source>
          <target state="translated">하위 요소를 포함하여 일치하는 요소 세트에서 각 요소의 결합 된 텍스트 컨텐츠를 가져 오거나 일치하는 요소의 텍스트 컨텐츠를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6de0dc0760fa8fb63279b7e5efa6b1f22f77f371" translate="yes" xml:space="preserve">
          <source>Get the current computed height for the first element in the set of matched elements or set the height of every matched element.</source>
          <target state="translated">일치하는 요소 세트에서 첫 번째 요소의 현재 계산 된 높이를 가져 오거나 일치하는 모든 요소의 높이를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f6726260a19d26d9f99f1fb235cf9bb018c6b57b" translate="yes" xml:space="preserve">
          <source>Get the current computed inner height (including padding but not border) for the first element in the set of matched elements or set the inner height of every matched element.</source>
          <target state="translated">일치하는 요소 세트의 첫 번째 요소에 대해 현재 계산 된 내부 높이 (패딩은 포함하지만 경계는 포함하지 않음)를 가져 오거나 일치하는 모든 요소의 내부 높이를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a50d923494b0cc1ad667a93b23b0071c14337499" translate="yes" xml:space="preserve">
          <source>Get the current computed inner width (including padding but not border) for the first element in the set of matched elements or set the inner width of every matched element.</source>
          <target state="translated">일치하는 요소 집합의 첫 번째 요소에 대해 현재 계산 된 내부 너비 (패딩은 포함하지만 테두리 제외)를 가져 오거나 일치하는 모든 요소의 내부 너비를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6f7c7ca9a4b8ccc11ca1bae57f48874324d33236" translate="yes" xml:space="preserve">
          <source>Get the current computed outer height (including padding, border, and optionally margin) for the first element in the set of matched elements or set the outer height of every matched element.</source>
          <target state="translated">일치하는 요소 세트의 첫 번째 요소에 대해 현재 계산 된 외부 높이 (패딩, 경계 및 선택적으로 여백 포함)를 가져 오거나 일치하는 모든 요소의 외부 높이를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0c5e57888b0fbf6fc0a64682e3969bf8ef6b22a4" translate="yes" xml:space="preserve">
          <source>Get the current computed outer width (including padding, border, and optionally margin) for the first element in the set of matched elements or set the outer width of every matched element.</source>
          <target state="translated">일치하는 요소 집합의 첫 번째 요소에 대해 현재 계산 된 외부 너비 (패딩, 테두리 및 선택적으로 여백 포함)를 가져 오거나 일치하는 모든 요소의 외부 너비를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d6ecc3ef1de5eef4c8c34e7b7a54f26aa0ce37ab" translate="yes" xml:space="preserve">
          <source>Get the current computed width for the first element in the set of matched elements or set the width of every matched element.</source>
          <target state="translated">일치하는 요소 집합에서 첫 번째 요소의 현재 계산 너비를 가져 오거나 일치하는 모든 요소의 너비를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="fb026a4b436bb1384e0a402f1298ae2dde2d2e5d" translate="yes" xml:space="preserve">
          <source>Get the current coordinates of the first element in the set of matched elements, relative to the offset parent.</source>
          <target state="translated">오프셋 부모를 기준으로 일치하는 요소 집합에서 첫 번째 요소의 현재 좌표를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d9409a70067dfa70abb108b0724394fd7639b300" translate="yes" xml:space="preserve">
          <source>Get the current coordinates of the first element, or set the coordinates of every element, in the set of matched elements, relative to the document.</source>
          <target state="translated">첫 번째 요소의 현재 좌표를 가져 오거나 일치하는 요소 세트에서 문서를 기준으로 모든 요소의 좌표를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b8d2a4b3d2efda8e7482763ad66dade68e1ca37b" translate="yes" xml:space="preserve">
          <source>Get the current horizontal position of the scroll bar for the first element in the set of matched elements or set the horizontal position of the scroll bar for every matched element.</source>
          <target state="translated">일치하는 요소 집합에서 첫 번째 요소에 대한 스크롤 막대의 현재 가로 위치를 가져 오거나 일치하는 모든 요소에 대한 스크롤 막대의 가로 위치를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="77dec0c71a2f90a7de46bf3d6155c0b22ad0c634" translate="yes" xml:space="preserve">
          <source>Get the current value of the first element in the set of matched elements or set the value of every matched element.</source>
          <target state="translated">일치하는 요소 집합에서 첫 번째 요소의 현재 값을 가져 오거나 일치하는 모든 요소의 값을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="41274baaacd1e8e858be16de3fc730699e48bc0f" translate="yes" xml:space="preserve">
          <source>Get the current version of jQuery running on the page</source>
          <target state="translated">페이지에서 실행중인 현재 버전의 jQuery를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="add2712702ca5731aa1538f775be8a1ff6698c2c" translate="yes" xml:space="preserve">
          <source>Get the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.</source>
          <target state="translated">일치하는 요소 집합에서 첫 번째 요소에 대한 스크롤 막대의 현재 세로 위치를 가져 오거나 일치하는 모든 요소에 대한 스크롤 막대의 세로 위치를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5c31c8da7143242d674a7c45207241686267e54e" translate="yes" xml:space="preserve">
          <source>Get the data named &quot;blah&quot; stored at for an element.</source>
          <target state="translated">요소에 저장된 &quot;blah&quot;라는 데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fa5cd6f673783a1c0c7ebd4a1ee81f65ec29e4a3" translate="yes" xml:space="preserve">
          <source>Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.</source>
          <target state="translated">선택기, jQuery 객체 또는 요소로 필터링하여 현재 일치하는 요소 집합에서 각 요소의 자손을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0c1b876e8eb699c70c2112d80741d08fc80f0b2c" translate="yes" xml:space="preserve">
          <source>Get the immediately following sibling of each element in the set of matched elements. If a selector is provided, it retrieves the next sibling only if it matches that selector.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소의 바로 다음 형제를 가져옵니다. 선택자가 제공되면 해당 선택자와 일치하는 경우에만 다음 형제를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="335a02f34e13c343eded1303cf0cd98947e2f766" translate="yes" xml:space="preserve">
          <source>Get the immediately preceding sibling of each element in the set of matched elements. If a selector is provided, it retrieves the previous sibling only if it matches that selector.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소의 바로 앞에있는 형제를 가져옵니다. 선택기가 제공되면 해당 선택기와 일치하는 경우에만 이전 형제를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="8354b71557f579fbe9546f5f8bfbab78772cef5c" translate="yes" xml:space="preserve">
          <source>Get the innerHeight of a paragraph.</source>
          <target state="translated">단락의 innerHeight를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b7168a49097a374663292915bfe1cdfb6d9f57ee" translate="yes" xml:space="preserve">
          <source>Get the innerWidth of a paragraph.</source>
          <target state="translated">단락의 innerWidth를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f46458d2947881340d36b16da1c8f1168dc376e9" translate="yes" xml:space="preserve">
          <source>Get the outerHeight of a paragraph.</source>
          <target state="translated">단락의 outerHeight를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ecf2a430fcecb3a68664aa2e8233a6a8fde8e067" translate="yes" xml:space="preserve">
          <source>Get the outerWidth of a paragraph.</source>
          <target state="translated">단락의 바깥 쪽 너비를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c28eff6f3e91774204a600d9e8f5002a72ca8cf9" translate="yes" xml:space="preserve">
          <source>Get the parent of each element in the current set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">현재 일치하는 요소 집합에서 각 요소의 부모를 가져오고 선택적으로 선택기로 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="eaa95540869200bb1c93d086bf5356cd11d62dab" translate="yes" xml:space="preserve">
          <source>Get the scrollLeft of a paragraph.</source>
          <target state="translated">단락의 scrollLeft를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2731ab38c3a3ee381b42427f06303e6cd46ab7b4" translate="yes" xml:space="preserve">
          <source>Get the scrollTop of a paragraph.</source>
          <target state="translated">단락의 scrollTop을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4191e267b598f4846023d1fd1425f56e41cf8145" translate="yes" xml:space="preserve">
          <source>Get the siblings of each element in the set of matched elements, optionally filtered by a selector.</source>
          <target state="translated">선택적으로 선택적으로 필터링하여 일치하는 요소 세트에서 각 요소의 형제를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="419b311d786b9473904918590185c5b8ab4138d5" translate="yes" xml:space="preserve">
          <source>Get the single value from a single select and an array of values from a multiple select and display their values.</source>
          <target state="translated">단일 선택에서 단일 값과 다중 선택에서 값 배열을 가져 와서 해당 값을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="89315a47ce2ff1fce03f9c5d2e3b9b74103cb3c8" translate="yes" xml:space="preserve">
          <source>Get the test.php page contents, which has been returned in json format (&amp;lt;?php echo json_encode( array( &quot;name&quot;=&amp;gt;&quot;John&quot;,&quot;time&quot;=&amp;gt;&quot;2pm&quot; ) ); ?&amp;gt;), and add it to the page.</source>
          <target state="translated">json 형식으로 반환 된 test.php 페이지 내용을 가져옵니다 (&amp;lt;? php echo json_encode (array ( &quot;name&quot;=&amp;gt; &quot;John&quot;, &quot;time&quot;=&amp;gt; &quot;2pm&quot;));?&amp;gt;). 페이지에.</target>
        </trans-unit>
        <trans-unit id="65152358acbc303fc67a62c0aa11d510c0ed433e" translate="yes" xml:space="preserve">
          <source>Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.</source>
          <target state="translated">일치하는 요소 세트에서 첫 번째 요소의 계산 된 스타일 특성 값을 가져 오거나 일치하는 모든 요소에 대해 하나 이상의 CSS 특성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="3aff954dc0ccfd7540d1ab41043f99d53ed05d25" translate="yes" xml:space="preserve">
          <source>Get the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.</source>
          <target state="translated">일치하는 요소 집합에서 첫 번째 요소의 속성 값을 가져 오거나 일치하는 모든 요소에 대해 하나 이상의 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b2bb03656d1004710f3d5bfa978f3b57de45feae" translate="yes" xml:space="preserve">
          <source>Get the value of an attribute for the first element in the set of matched elements or set one or more attributes for every matched element.</source>
          <target state="translated">일치하는 요소 세트에서 첫 번째 요소의 속성 값을 가져 오거나 일치하는 모든 요소에 대해 하나 이상의 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5e9cffad47fb4bcaec44cecc930ced17c7ca41db" translate="yes" xml:space="preserve">
          <source>Get the values from a form, iterate through them, and append them to a results display.</source>
          <target state="translated">양식에서 값을 가져 와서 반복하여 결과 표시에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7c88b330aac236cb29b103e491fc12e4f4ff9701" translate="yes" xml:space="preserve">
          <source>Get the width, height, text color, and background color of a clicked div.</source>
          <target state="translated">클릭 한 div의 너비, 높이, 텍스트 색 및 배경색을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="e3141924dad5a26b501b478748eb80347442c79e" translate="yes" xml:space="preserve">
          <source>Give TD #5 and higher a yellow background and TD #8 a red text color.</source>
          <target state="translated">TD # 5 이상에 노란색 배경을, TD # 8에 빨간색 텍스트 색을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="c1b6c4599ed573ccdb0a89a914aeab8146f6d68b" translate="yes" xml:space="preserve">
          <source>Give TDs less than the one with the 4th index (TD#4) a yellow background and TDs less than the one with -2nd index a red text color.</source>
          <target state="translated">TD는 4 번째 인덱스 (TD # 4)보다 작은 TD에 노란색 배경을, TD는 -2nd 인덱스보다 작은 TD에 빨간색 텍스트 색상을 부여하십시오.</target>
        </trans-unit>
        <trans-unit id="92be7dd3d6ff92e242adf73381720d683a112d20" translate="yes" xml:space="preserve">
          <source>Given a document with six paragraphs, this example will set the HTML of &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;p&amp;gt;All new content for &amp;lt;em&amp;gt;6 paragraphs!&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">6 개의 단락이있는 문서가 제공된 경우이 예에서는 &lt;code&gt;&amp;lt;div class=&quot;demo-container&quot;&amp;gt;&lt;/code&gt; 의 HTML 을 &lt;code&gt;&amp;lt;p&amp;gt;All new content for &amp;lt;em&amp;gt;6 paragraphs!&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="519900ee0ce2ab5597fb16096223804c32160877" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.add()&lt;/code&gt; method constructs a new jQuery object from the union of those elements and the ones passed into the method. The argument to &lt;code&gt;.add()&lt;/code&gt; can be pretty much anything that &lt;code&gt;$()&lt;/code&gt; accepts, including a jQuery selector expression, references to DOM elements, or an HTML snippet.</source>
          <target state="translated">DOM 요소 세트를 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.add()&lt;/code&gt; 메소드는 해당 요소와 메소드에 전달 된 요소를 결합하여 새 jQuery 객체를 구성합니다. &lt;code&gt;.add()&lt;/code&gt; 대한 인수 는 jQuery 선택기 표현식, DOM 요소에 대한 참조 또는 HTML 스 니펫을 포함하여 &lt;code&gt;$()&lt;/code&gt; 허용 하는 모든 것이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ae30bd138a25c92d3a50c66883288024497bfb5" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.children()&lt;/code&gt; method allows us to search through the children of these elements in the DOM tree and construct a new jQuery object from the matching elements. The &lt;code&gt;.children()&lt;/code&gt; method differs from &lt;code&gt;&lt;a href=&quot;find&quot;&gt;.find()&lt;/a&gt;&lt;/code&gt; in that &lt;code&gt;.children()&lt;/code&gt; only travels a single level down the DOM tree while &lt;code&gt;.find()&lt;/code&gt; can traverse down multiple levels to select descendant elements (grandchildren, etc.) as well. Note also that like most jQuery methods, &lt;code&gt;.children()&lt;/code&gt; does not return text nodes; to get &lt;em&gt;all&lt;/em&gt; children including text and comment nodes, use &lt;code&gt;&lt;a href=&quot;contents&quot;&gt;.contents()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.children()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 자식을 검색하고 일치하는 요소에서 새 jQuery 개체를 구성 할 수 있습니다. &lt;code&gt;.children()&lt;/code&gt; 에서 메소드 상이 &lt;code&gt;&lt;a href=&quot;find&quot;&gt;.find()&lt;/a&gt;&lt;/code&gt; 는 점에서 &lt;code&gt;.children()&lt;/code&gt; 동안 단지 DOM 트리 아래 단일 레벨 이동 &lt;code&gt;.find()&lt;/code&gt; 아니라 하위 요소 (손자 등)를 선택하는 여러 단계를 통과 할 수있다. 또한 대부분의 jQuery 메소드와 &lt;code&gt;.children()&lt;/code&gt; 은 텍스트 노드를 반환하지 않습니다. 텍스트 및 주석 노드를 포함한 &lt;em&gt;모든&lt;/em&gt; 자식 을 가져 오려면 &lt;code&gt;&lt;a href=&quot;contents&quot;&gt;.contents()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa28e77d1f7f5ee68968abbd284d87de28b906a4" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.closest()&lt;/code&gt; method searches through these elements and their ancestors in the DOM tree and constructs a new jQuery object from the matching elements. The &lt;a href=&quot;parents&quot;&gt;&lt;code&gt;.parents()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;.closest()&lt;/code&gt; methods are similar in that they both traverse up the DOM tree. The differences between the two, though subtle, are significant:</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.closest()&lt;/code&gt; 메서드는 DOM 트리에서 이러한 요소와 해당 조상을 검색하여 일치하는 요소에서 새 jQuery 객체를 생성합니다. &lt;a href=&quot;parents&quot;&gt; &lt;code&gt;.parents()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;.closest()&lt;/code&gt; 메소드는 비슷 그들은 그 DOM 트리까지 모두 트래버스. 미묘하지만 둘 사이의 차이점은 중요합니다.</target>
        </trans-unit>
        <trans-unit id="9d57e787f03d92e5bd53cc9be058bc611ecfa380" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.contents()&lt;/code&gt; method allows us to search through the immediate children of these elements in the DOM tree and construct a new jQuery object from the matching elements. The &lt;code&gt;.contents()&lt;/code&gt; and &lt;code&gt;.children()&lt;/code&gt; methods are similar, except that the former includes text nodes and comment nodes as well as HTML elements in the resulting jQuery object. Please note that most jQuery operations don't support text nodes and comment nodes. The few that do will have an explicit note on their API documentation page.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.contents()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 직계 자식을 검색하고 일치하는 요소에서 새 jQuery 객체를 구성 할 수 있습니다. &lt;code&gt;.contents()&lt;/code&gt; 와 &lt;code&gt;.children()&lt;/code&gt; 메소드와 유사 이전뿐만 아니라 결과의 jQuery 객체의 HTML 요소 텍스트 노드 및 주석 노드를 포함하는 것을 제외하고. 대부분의 jQuery 작업은 텍스트 노드와 주석 노드를 지원하지 않습니다. 그 중 몇 가지는 API 문서 페이지에 명시 적 메모가 있습니다.</target>
        </trans-unit>
        <trans-unit id="607593d2221bfb6bceac2883e33eb70479bf755b" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.eq()&lt;/code&gt; method constructs a new jQuery object from one element within that set. The supplied index identifies the position of this element in the set.</source>
          <target state="translated">DOM 요소 세트를 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.eq()&lt;/code&gt; 메소드는 해당 세트 내의 한 요소에서 새 jQuery 객체를 구성합니다. 제공된 색인은 세트에서이 요소의 위치를 ​​식별합니다.</target>
        </trans-unit>
        <trans-unit id="ef67462474d6472ce7f81cf8403e1bb2aafea409" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.filter()&lt;/code&gt; method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against each element; all elements matching the selector will be included in the result.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.filter()&lt;/code&gt; 메서드는 일치하는 요소의 하위 집합에서 새 jQuery 객체를 구성합니다. 제공된 선택기는 각 요소에 대해 테스트됩니다. 선택기와 일치하는 모든 요소가 결과에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b1a131d79323330fe3d7a0ab5d05ef4560501f52" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.find()&lt;/code&gt; method allows us to search through the descendants of these elements in the DOM tree and construct a new jQuery object from the matching elements. The &lt;code&gt;.find()&lt;/code&gt; and &lt;code&gt;.children()&lt;/code&gt; methods are similar, except that the latter only travels a single level down the DOM tree.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.find()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 하위 항목을 검색하고 일치하는 요소에서 새 jQuery 객체를 구성 할 수 있습니다. &lt;code&gt;.find()&lt;/code&gt; 와 &lt;code&gt;.children()&lt;/code&gt; 메소드는 후자의 것을 제외하고 비슷에만 DOM 트리 아래 하나의 레벨을 이동한다.</target>
        </trans-unit>
        <trans-unit id="c7c91c51e5b4f43f344d3a0b4aa8da0409d9b3d7" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.first()&lt;/code&gt; method constructs a new jQuery object from the first element in that set.</source>
          <target state="translated">DOM 요소 세트를 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.first()&lt;/code&gt; 메소드는 해당 세트의 첫 번째 요소에서 새 jQuery 객체를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="7278c9a4a04389d805ee116e619b665dcfb90754" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.has()&lt;/code&gt; method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against the descendants of the matching elements; the element will be included in the result if any of its descendant elements matches the selector.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.has()&lt;/code&gt; 메서드는 일치하는 요소의 하위 집합에서 새 jQuery 객체를 생성합니다. 제공된 선택기는 일치하는 요소의 하위 항목에 대해 테스트됩니다. 하위 요소 중 하나가 선택기와 일치하면 요소가 결과에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="293ce07c121457718c0c003c78434404843d8286" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.last()&lt;/code&gt; method constructs a new jQuery object from the last element in that set.</source>
          <target state="translated">DOM 요소 세트를 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.last()&lt;/code&gt; 메소드는 해당 세트의 마지막 요소에서 새 jQuery 객체를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="7865d670b4ebc09c6358b18de8d6aa45571039d4" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.next()&lt;/code&gt; method allows us to search through the immediately following sibling of these elements in the DOM tree and construct a new jQuery object from the matching elements.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.next()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 바로 다음 형제를 검색하고 일치하는 요소에서 새 jQuery 객체를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d21744608bceb06a63a3bb9aac7ede1a30a390bc" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.nextAll()&lt;/code&gt; method allows us to search through the successors of these elements in the DOM tree and construct a new jQuery object from the matching elements.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.nextAll()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 후속 작업을 검색하고 일치하는 요소에서 새 jQuery 객체를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abb6beec45d71e8925c2cae85c98a7a0df9c7bfe" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.not()&lt;/code&gt; method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against each element; the elements that don't match the selector will be included in the result.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.not()&lt;/code&gt; 메서드는 일치하는 요소의 하위 집합에서 새 jQuery 객체를 생성합니다. 제공된 선택기는 각 요소에 대해 테스트됩니다. 선택기와 일치하지 않는 요소가 결과에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="341a922f79af20e3c10f929effdbbffcc06f4ec0" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.offsetParent()&lt;/code&gt; method allows us to search through the ancestors of these elements in the DOM tree and construct a new jQuery object wrapped around the closest positioned ancestor. An element is said to be positioned if it has a CSS position attribute of &lt;code&gt;relative&lt;/code&gt;, &lt;code&gt;absolute&lt;/code&gt;, or &lt;code&gt;fixed&lt;/code&gt;. This information is useful for calculating offsets for performing animations and placing objects on the page.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.offsetParent()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 조상을 검색하고 가장 가까운 조상을 감싸는 새로운 jQuery 객체를 만들 수 있습니다. element의 &lt;code&gt;relative&lt;/code&gt; , &lt;code&gt;absolute&lt;/code&gt; 또는 &lt;code&gt;fixed&lt;/code&gt; CSS 위치 속성이있는 경우 요소의 위치가 결정됩니다 . 이 정보는 애니메이션을 수행하고 페이지에 객체를 배치하기위한 오프셋을 계산하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7509c84a2954ea5449c4ffee154cd369427ee48a" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.parents()&lt;/code&gt; method allows us to search through the ancestors of these elements in the DOM tree and construct a new jQuery object from the matching elements ordered from immediate parent on up; the elements are returned in order from the closest parent to the outer ones. When multiple DOM elements are in the original set, the resulting set will be in &lt;em&gt;reverse&lt;/em&gt; order of the original elements as well, with duplicates removed.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.parents()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 조상을 검색하고 바로 상위에서 정렬 된 일치하는 요소로 새 jQuery 객체를 구성 할 수 있습니다. 요소는 가장 가까운 부모에서 외부 요소까지 순서대로 반환됩니다. 여러 세트의 DOM 요소가 원래 세트에있는 경우 결과 세트는 원래 요소와 &lt;em&gt;반대&lt;/em&gt; 순서로 복제가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="fc3ad75e089d55bfdf0cd91ccb14823f022963f8" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.prev()&lt;/code&gt; method searches for the predecessor of each of these elements in the DOM tree and constructs a new jQuery object from the matching elements.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.prev()&lt;/code&gt; 메서드는 DOM 트리에서 각 요소의 선행 작업을 검색하고 일치하는 요소에서 새 jQuery 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="749930ced2bb0dc724f26b45b24212979f38c247" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.prevAll()&lt;/code&gt; method searches through the predecessors of these elements in the DOM tree and construct a new jQuery object from the matching elements; the elements are returned in order beginning with the closest sibling.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 제공되면 &lt;code&gt;.prevAll()&lt;/code&gt; 메서드는 DOM 트리에서 이러한 요소의 선행 작업을 검색하고 일치하는 요소에서 새 jQuery 객체를 구성합니다. 가장 가까운 형제부터 시작하여 요소가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="681e0cbe1d7984fe1e049080716dfdef1ba0d585" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.siblings()&lt;/code&gt; method allows us to search through the siblings of these elements in the DOM tree and construct a new jQuery object from the matching elements.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.siblings()&lt;/code&gt; 메서드를 사용하면 DOM 트리에서 이러한 요소의 형제를 검색하고 일치하는 요소에서 새 jQuery 객체를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="116fbd9f9e0799d0fe86d37127d8c911b0e8dafa" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;.slice()&lt;/code&gt; method constructs a new jQuery object containing a subset of the elements specified by the &lt;code&gt;start&lt;/code&gt; and, optionally, &lt;code&gt;end&lt;/code&gt; argument. The supplied &lt;code&gt;start&lt;/code&gt; index identifies the position of one of the elements in the set; if &lt;code&gt;end&lt;/code&gt; is omitted, all elements after this one will be included in the result.</source>
          <target state="translated">DOM 요소 집합을 나타내는 jQuery 객체가 주어지면 &lt;code&gt;.slice()&lt;/code&gt; 메서드는 &lt;code&gt;start&lt;/code&gt; 및 선택적으로 &lt;code&gt;end&lt;/code&gt; 인수로 지정된 요소의 하위 집합을 포함하는 새 jQuery 객체를 구성합니다 . 제공된 &lt;code&gt;start&lt;/code&gt; 색인은 세트에서 요소 중 하나의 위치를 ​​식별합니다. 만약 &lt;code&gt;end&lt;/code&gt; 생략되고, 이것은 결국 소자의 결과를 포함한다.</target>
        </trans-unit>
        <trans-unit id="5bae5485cfc17027249a27621f91f5c4ef3ffa94" translate="yes" xml:space="preserve">
          <source>Given a jQuery object that represents a set of DOM elements, the &lt;code&gt;parent()&lt;/code&gt; method traverses to the immediate parent of each of these elements in the DOM tree and constructs a new jQuery object from the matching elements.</source>
          <target state="translated">DOM 요소 세트를 나타내는 jQuery 객체가 주어지면 &lt;code&gt;parent()&lt;/code&gt; 메소드는 DOM 트리에서 이러한 각 요소의 바로 상위를 탐색하고 일치하는 요소에서 새 jQuery 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="264980733d77ead826c1556c7084db20f44b083c" translate="yes" xml:space="preserve">
          <source>Given a selector expression that represents a set of DOM elements, the &lt;code&gt;.nextUntil()&lt;/code&gt; method searches through the successors of these elements in the DOM tree, stopping when it reaches an element matched by the method's argument. The new jQuery object that is returned contains all following siblings up to but not including the one matched by the &lt;code&gt;.nextUntil()&lt;/code&gt; argument.</source>
          <target state="translated">DOM 요소 집합을 나타내는 선택기식이 주어지면 &lt;code&gt;.nextUntil()&lt;/code&gt; 메서드는 DOM 트리에서 이러한 요소의 후속 요소를 검색하여 메서드의 인수와 일치하는 요소에 도달하면 중지합니다. 반환되는 새로운 jQuery 객체에는 &lt;code&gt;.nextUntil()&lt;/code&gt; 인수 와 일치하는 것을 제외하고 다음의 모든 형제가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="2dcdc8e7d9445a151868c0aef928a4d0d67dbf34" translate="yes" xml:space="preserve">
          <source>Given a selector expression that represents a set of DOM elements, the &lt;code&gt;.parentsUntil()&lt;/code&gt; method traverses through the ancestors of these elements until it reaches an element matched by the selector passed in the method's argument. The resulting jQuery object contains all of the ancestors up to but not including the one matched by the &lt;code&gt;.parentsUntil()&lt;/code&gt; selector.</source>
          <target state="translated">DOM 요소 집합을 나타내는 선택기식이 주어지면 &lt;code&gt;.parentsUntil()&lt;/code&gt; 메서드는 메서드 인수에 전달 된 선택기와 일치하는 요소에 도달 할 때까지 이러한 요소의 조상을 통과합니다. 결과 jQuery 객체에는 &lt;code&gt;.parentsUntil()&lt;/code&gt; 선택기 와 일치하는 것을 제외한 모든 조상이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="139f1b86eb7969ee5296fb8a8b7611d8f7e3a8df" translate="yes" xml:space="preserve">
          <source>Given a selector expression that represents a set of DOM elements, the &lt;code&gt;.prevUntil()&lt;/code&gt; method searches through the predecessors of these elements in the DOM tree, stopping when it reaches an element matched by the method's argument. The new jQuery object that is returned contains all previous siblings up to but not including the one matched by the &lt;code&gt;.prevUntil()&lt;/code&gt; selector; the elements are returned in order from the closest sibling to the farthest.</source>
          <target state="translated">DOM 요소 집합을 나타내는 선택기식이 주어지면 &lt;code&gt;.prevUntil()&lt;/code&gt; 메서드는 DOM 트리에서 이러한 요소의 선행 작업을 검색하여 메서드의 인수와 일치하는 요소에 도달하면 중지합니다. 반환되는 새로운 jQuery 객체는 이전의 모든 형제를 포함하지만 &lt;code&gt;.prevUntil()&lt;/code&gt; 선택기 와 일치하는 것을 포함하지 않습니다 . 가장 가까운 형제에서 가장 먼 순서로 요소가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ab2c09dee6596f41b3a0e801a3e28278aa7b82d5" translate="yes" xml:space="preserve">
          <source>Given a simple unordered list on the page:</source>
          <target state="translated">페이지에 간단한 순서없는 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d48669d5a9dba46c041d31e43a6d0b2afeec72a3" translate="yes" xml:space="preserve">
          <source>Given an unordered list with three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, this example will produce the following DOM output:</source>
          <target state="translated">세 개의 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소가 있는 비 순차 목록 이 제공되면이 예제는 다음 DOM 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2609f2ff3429fcd5251af43279806a01205f09ac" translate="yes" xml:space="preserve">
          <source>Given an unordered list with two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, this example adds the class &quot;item-0&quot; to the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; and &quot;item-1&quot; to the second.</source>
          <target state="translated">두 개의 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소가 있는 순서가없는 목록이 주어지면 이 예제는 &quot;item-0&quot;클래스를 첫 번째 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 에 추가 하고 &quot;item-1&quot;을 두 번째에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="cc9708044791b6281bfe6b93475ccc4c2f535a01" translate="yes" xml:space="preserve">
          <source>Global Events</source>
          <target state="translated">글로벌 이벤트</target>
        </trans-unit>
        <trans-unit id="b6e0b67689e51be3f68a3cdb03c162c89a744091" translate="yes" xml:space="preserve">
          <source>Global events can be disabled for a particular Ajax request by passing in the global option, like so:</source>
          <target state="translated">다음과 같이 전역 옵션을 전달하여 특정 Ajax 요청에 대한 전역 이벤트를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="213da1cf79bd28ca6e290057f7a56c0a179d6cd7" translate="yes" xml:space="preserve">
          <source>Globally disable all animations.</source>
          <target state="translated">모든 애니메이션을 전체적으로 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9410c4873903e5c56ee21f7392ad48311f49fae8" translate="yes" xml:space="preserve">
          <source>HTML string to be parsed</source>
          <target state="translated">파싱 ​​할 HTML 문자열</target>
        </trans-unit>
        <trans-unit id="d54d005b3d20fbbe2ba001c0a9ab24be14f5af50" translate="yes" xml:space="preserve">
          <source>HTML string, DOM element, text node, array of elements and text nodes, or jQuery object to insert after each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 뒤에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드, 요소 및 텍스트 노드 배열 또는 jQuery 객체</target>
        </trans-unit>
        <trans-unit id="31f0314d73165ee592020e3588309f1306be2937" translate="yes" xml:space="preserve">
          <source>HTML string, DOM element, text node, array of elements and text nodes, or jQuery object to insert before each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 앞에 삽입 할 HTML 문자열, DOM 요소, 텍스트 노드, 요소 배열 및 텍스트 노드 또는 jQuery 객체</target>
        </trans-unit>
        <trans-unit id="0d568b590dd1ae02f9a6ec200c3083b5788f6d10" translate="yes" xml:space="preserve">
          <source>HTML5 &lt;code&gt;data-*&lt;/code&gt; Attributes</source>
          <target state="translated">HTML5 &lt;code&gt;data-*&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="3ecc70e54e1aeacdea35ece54e437ac2dfc28e23" translate="yes" xml:space="preserve">
          <source>HTML5 data-* Attributes</source>
          <target state="translated">HTML5 데이터-* 속성</target>
        </trans-unit>
        <trans-unit id="7166302624f4c278735fd7ab1d7acda622a2d57c" translate="yes" xml:space="preserve">
          <source>Handle click and double-click for the paragraph. Note: the coordinates are window relative, so in this case relative to the demo iframe.</source>
          <target state="translated">단락에 대한 클릭 및 두 번 클릭을 처리하십시오. 참고 : 좌표는 창을 기준으로 하므로이 경우 데모 iframe을 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="3d18ee4a996ded9beb44163de3ef8465ac29a8c3" translate="yes" xml:space="preserve">
          <source>Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().</source>
          <target state="translated">각 요청이 전송되기 전과 $ .ajax ()에 의해 처리되기 전에 사용자 정의 Ajax 옵션을 처리하거나 기존 옵션을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="31a745489f51ed140fc2a3bd19aa3618d5054b48" translate="yes" xml:space="preserve">
          <source>Handler for .blur() called.</source>
          <target state="translated">.blur () 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="5cf295b55552a1584f0548cb2d8a3f6a9b7c5282" translate="yes" xml:space="preserve">
          <source>Handler for .click() called.</source>
          <target state="translated">.click () 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="af2cb2d4b94a5f35e78d12bc6da23c6ca87df604" translate="yes" xml:space="preserve">
          <source>Handler for .contextmenu() called.</source>
          <target state="translated">.contextmenu ()의 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="f0676a409ac2576211439d5a9e11a9f93aa24c40" translate="yes" xml:space="preserve">
          <source>Handler for .dblclick() called.</source>
          <target state="translated">.dblclick ()의 ​​핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="9c63f77b51b2bcba313b0e8bcc7de09f4e9a7812" translate="yes" xml:space="preserve">
          <source>Handler for .error() called.</source>
          <target state="translated">.error () 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="4bdac65bc0fa7ee5f6fa2f47560fc4260b35d6cd" translate="yes" xml:space="preserve">
          <source>Handler for .focus() called.</source>
          <target state="translated">.focus ()의 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="6d6a963bbae92ff9bd66d5499f12dcbabdd4ac51" translate="yes" xml:space="preserve">
          <source>Handler for .keydown() called.</source>
          <target state="translated">.keydown ()의 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="3576997406b3a1baeb87fdf79399970eee0be6dc" translate="yes" xml:space="preserve">
          <source>Handler for .keypress() called.</source>
          <target state="translated">.keypress () 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="fd4d78b8cdf018ab2d4611d3f327242d824e000c" translate="yes" xml:space="preserve">
          <source>Handler for .keyup() called.</source>
          <target state="translated">.keyup ()의 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="723380b6bbb9796249b31757d330ef14af7bfa1e" translate="yes" xml:space="preserve">
          <source>Handler for .mousedown() called.</source>
          <target state="translated">.mousedown ()의 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="43e7d8d6be5492b7eef0436221a3d5ab21898c3d" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (396, 42)</source>
          <target state="translated">(396, 42)에서 호출 된 .mousemove ()의 핸들러</target>
        </trans-unit>
        <trans-unit id="0510bcd31da8ae3c38b2b2c27e884ba832f89e96" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (397, 44)</source>
          <target state="translated">(397, 44)에서 호출 된 .mousemove ()의 핸들러</target>
        </trans-unit>
        <trans-unit id="8af1c307f541da2973743a08411a8b4125e692d1" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (398, 46)</source>
          <target state="translated">(398, 46)에서 호출 된 .mousemove ()의 핸들러</target>
        </trans-unit>
        <trans-unit id="3ef228324b7b1f04501ac245224cf7a1b605907a" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (399, 48)</source>
          <target state="translated">(399, 48)에서 호출 된 .mousemove ()의 핸들러</target>
        </trans-unit>
        <trans-unit id="d7fa58cfb8e9def62f94383ac8d1f195c5fb4cba" translate="yes" xml:space="preserve">
          <source>Handler for .mousemove() called at (undefined, undefined)</source>
          <target state="translated">(정의되지 않은, 정의되지 않은)에서 호출 된 .mousemove ()의 핸들러</target>
        </trans-unit>
        <trans-unit id="50ef3820f05ecf273dda5cfd2cf7a75e50edfcd0" translate="yes" xml:space="preserve">
          <source>Handler for .mouseup() called.</source>
          <target state="translated">.mouseup () 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="f8175d7e46c314ec0f8ecba01bc7e8b7190196dd" translate="yes" xml:space="preserve">
          <source>Handler for .scroll() called.</source>
          <target state="translated">.scroll ()의 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="f408d2a748725720372050d5304ff85ecb7339da" translate="yes" xml:space="preserve">
          <source>Handler for .select() called.</source>
          <target state="translated">.select () 핸들러가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="4400541e98548116512419de15cfa15f01f37dc1" translate="yes" xml:space="preserve">
          <source>Handles errors thrown synchronously in functions wrapped in jQuery().</source>
          <target state="translated">jQuery ()로 래핑 된 함수에서 동 기적으로 발생하는 오류를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="911ce78c3b144f1720ac8a51ca6c51695e96afbf" translate="yes" xml:space="preserve">
          <source>Handling Custom Data Types</source>
          <target state="translated">사용자 정의 데이터 유형 처리</target>
        </trans-unit>
        <trans-unit id="0d2d67fd740d7ec7df3d8674c33679652ab92712" translate="yes" xml:space="preserve">
          <source>Handling Errors</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="e40eea9b8809f7ebca0ee12de2ac15bad0ceb9f8" translate="yes" xml:space="preserve">
          <source>Has Attribute Selector [name]</source>
          <target state="translated">속성 선택기가 있음 [이름]</target>
        </trans-unit>
        <trans-unit id="8a1d64e098aaa5d4f69eca750369b9d78f7eea1f" translate="yes" xml:space="preserve">
          <source>Has attribute selector [name]</source>
          <target state="translated">속성 선택기가 있습니다 [name]</target>
        </trans-unit>
        <trans-unit id="c90b0ad8dd6676158efbd2ca638c2d0c85cfb415" translate="yes" xml:space="preserve">
          <source>Here are some typical results:</source>
          <target state="translated">일반적인 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f7a97ef3a3bfaf9dfc8f2c53e51dfdf6b042c162" translate="yes" xml:space="preserve">
          <source>Here, any JavaScript loaded into &lt;code&gt;#a&lt;/code&gt; as a part of the document will successfully execute.</source>
          <target state="translated">여기 에서 문서의 일부로 &lt;code&gt;#a&lt;/code&gt; 에 로드 된 모든 JavaScript 가 성공적으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="15749496c3ca47d16bd58b44d9a3701c4688ee1e" translate="yes" xml:space="preserve">
          <source>Here, none of the list items is turned red, since &lt;code&gt;.eq( 5 )&lt;/code&gt; indicates the sixth of five list items.</source>
          <target state="translated">여기서 &lt;code&gt;.eq( 5 )&lt;/code&gt; 는 다섯 번째 목록 항목 중 여섯 번째를 나타내 므로 목록 항목 중 빨간색으로 바뀌지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6b6481ce222108e00985eddb65becfe22bb2ce0" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;myClass&lt;/code&gt; and &lt;code&gt;noClass&lt;/code&gt; classes are removed from all paragraphs, while &lt;code&gt;yourClass&lt;/code&gt; is added.</source>
          <target state="translated">여기서 &lt;code&gt;myClass&lt;/code&gt; 및 &lt;code&gt;noClass&lt;/code&gt; 클래스는 모든 단락에서 제거되고 &lt;code&gt;yourClass&lt;/code&gt; 는 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="24757d1332411973020afc384112f5d9fd17e3f5" translate="yes" xml:space="preserve">
          <source>Hide a loading message after all the Ajax requests have stopped.</source>
          <target state="translated">모든 Ajax 요청이 중지 된 후로드 메시지를 숨기십시오.</target>
        </trans-unit>
        <trans-unit id="8db03be9822217f55ef7c7931bc09627ab985d6c" translate="yes" xml:space="preserve">
          <source>Hide all the input elements within a form.</source>
          <target state="translated">양식 내에서 모든 입력 요소를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="4fb88857baafd1f982bc0beea2430100b03805fa" translate="yes" xml:space="preserve">
          <source>Hide paragraphs on a page when they are clicked:</source>
          <target state="translated">클릭하면 페이지에서 단락을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="a5baed74e6ca658f55df8ab1bea448b29f5fc1eb" translate="yes" xml:space="preserve">
          <source>Hide the matched elements by fading them to transparent.</source>
          <target state="translated">일치하는 요소를 투명하게 희미하여 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="44279a8fac1488d943c75697290307ade05b78ea" translate="yes" xml:space="preserve">
          <source>Hide the matched elements with a sliding motion.</source>
          <target state="translated">슬라이딩 동작으로 일치하는 요소를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="89420b252f4476037958376be52ade7ef262efdb" translate="yes" xml:space="preserve">
          <source>Hide the matched elements.</source>
          <target state="translated">일치하는 요소를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="cc95b462e1cfec1b5efac1b025d809f9ede574d9" translate="yes" xml:space="preserve">
          <source>Hides all paragraphs then the link on click.</source>
          <target state="translated">모든 단락을 숨기고 클릭시 링크를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="4d406a47fc8d7a6bc8ae780e3a4c911b6f439802" translate="yes" xml:space="preserve">
          <source>Hides the divs when clicked over 2 seconds, then removes the div element when its hidden. Try clicking on more than one box at a time.</source>
          <target state="translated">2 초 이상 클릭하면 div를 숨기고 숨겨진 경우 div 요소를 제거합니다. 한 번에 두 개 이상의 상자를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="a38779a590568354e64be136b0bb692c51f509a5" translate="yes" xml:space="preserve">
          <source>Highlight a clicked word in the paragraph.</source>
          <target state="translated">단락에서 클릭 한 단어를 강조 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="2041b4dcd2a11321f88f1b33ea611a0bc913715d" translate="yes" xml:space="preserve">
          <source>Highlight the first item in a list.</source>
          <target state="translated">목록에서 첫 번째 항목을 강조 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e931eaf7522d83ac6c7c4139fd0cececf1fe6f88" translate="yes" xml:space="preserve">
          <source>Highlight the first span in a paragraph.</source>
          <target state="translated">단락에서 첫 번째 범위를 강조 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="4dd7d239089270c93b11dc22e5be4ec2e09987e3" translate="yes" xml:space="preserve">
          <source>Highlight the last item in a list.</source>
          <target state="translated">목록의 마지막 항목을 강조 표시합니다.</target>
        </trans-unit>
        <trans-unit id="545795b9ffa2ab8666efe2ac433ea368348a674d" translate="yes" xml:space="preserve">
          <source>Highlight the last span in a paragraph.</source>
          <target state="translated">단락에서 마지막 범위를 강조 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="d909f7fd42bfb339f04de2094c2dcf286ed8d5a1" translate="yes" xml:space="preserve">
          <source>Holds or releases the execution of jQuery&amp;rsquo;s ready event.</source>
          <target state="translated">jQuery의 ready 이벤트 실행을 보류하거나 해제합니다.</target>
        </trans-unit>
        <trans-unit id="aede0d33a19f62b66e53d16606fb7614e113405a" translate="yes" xml:space="preserve">
          <source>Hook directly into jQuery to override how particular CSS properties are retrieved or set, normalize CSS property naming, or create custom properties.</source>
          <target state="translated">jQuery에 직접 연결하여 특정 CSS 속성을 검색 또는 설정하는 방법을 재정의하고 CSS 속성 이름을 정규화하거나 사용자 정의 속성을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f81ca4bb14e02909ac2d03ad3f5548ec1647f790" translate="yes" xml:space="preserve">
          <source>How &lt;code&gt;:hidden&lt;/code&gt; is determined was changed in jQuery 1.3.2. An element is assumed to be hidden if it or any of its parents consumes no space in the document. CSS visibility isn't taken into account (therefore &lt;code&gt;$( elem ).css( &quot;visibility&quot;, &quot;hidden&quot; ).is( &quot;:hidden&quot; ) == false&lt;/code&gt;). The &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;release notes&lt;/a&gt; outline the changes in more detail.</source>
          <target state="translated">방법 &lt;code&gt;:hidden&lt;/code&gt; 결정은 jQuery를 1.3.2로 변경되었습니다. 요소 또는 부모가 문서에서 공간을 사용하지 않으면 요소가 숨겨져있는 것으로 간주됩니다. CSS 가시성은 고려되지 않습니다 (따라서 &lt;code&gt;$( elem ).css( &quot;visibility&quot;, &quot;hidden&quot; ).is( &quot;:hidden&quot; ) == false&lt;/code&gt; ). &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;릴리즈 노트는&lt;/a&gt; 자세히 변경 사항을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="877f768bb04245c254ff604e4596d8a747b8b84e" translate="yes" xml:space="preserve">
          <source>How &lt;code&gt;:visible&lt;/code&gt; is calculated was changed in jQuery 1.3.2. The &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;release notes&lt;/a&gt; outline the changes in more detail.</source>
          <target state="translated">방법 &lt;code&gt;:visible&lt;/code&gt; jQuery를 1.3.2로 변경되었습니다 계산됩니다. &lt;a href=&quot;https://blog.jquery.com/2009/02/20/jquery-1-3-2-released/&quot;&gt;릴리즈 노트는&lt;/a&gt; 자세히 변경 사항을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b7b6cf20816665fced6af82f1d0c8a0e1a0e9c41" translate="yes" xml:space="preserve">
          <source>However, if we want to avoid affecting other handlers, we can be more specific:</source>
          <target state="translated">그러나 다른 핸들러에 영향을 미치지 않으려면 더 구체적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e56237eecc43d16764ad1023e74a2791d275e0af" translate="yes" xml:space="preserve">
          <source>However, in the following case, script blocks in the document being loaded into &lt;code&gt;#b&lt;/code&gt; are stripped out and not executed:</source>
          <target state="translated">그러나 다음과 같은 경우 &lt;code&gt;#b&lt;/code&gt; 로로드되는 문서의 스크립트 블록 이 제거되고 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7313aba4601cddedc96883a6e8b8189ee217403" translate="yes" xml:space="preserve">
          <source>However, objects and arrays within element data are not copied and will continue to be shared between the cloned element and the original element. To deep copy all data, copy each one manually:</source>
          <target state="translated">그러나 요소 데이터 내의 개체와 배열은 복사되지 않으며 복제 된 요소와 원래 요소간에 계속 공유됩니다. 모든 데이터를 딥 복사하려면 각 데이터를 수동으로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="8d814fccf970c654b58475d17c020c89ec25730b" translate="yes" xml:space="preserve">
          <source>However, this syntax lacks some of the additional capabilities of .get(), such as specifying a negative index:</source>
          <target state="translated">그러나이 구문에는 음수 인덱스 지정과 같은 .get ()의 일부 추가 기능이 없습니다.</target>
        </trans-unit>
        <trans-unit id="1734880d9b8cdbc25a489d5ba6de680d49144ceb" translate="yes" xml:space="preserve">
          <source>However, while the above fix is short and simple, it puts the burden on you to ensure XHTML-compliant tags in any HTML strings. A more thorough fix for this issue would be this:</source>
          <target state="translated">그러나 위의 수정은 짧고 간단하지만 HTML 문자열에서 XHTML 호환 태그를 보장해야하는 부담이 있습니다. 이 문제에 대한보다 철저한 수정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c1366c0ac6c7c47849d4656216a31083d3c43f9d" translate="yes" xml:space="preserve">
          <source>ID Selector (&amp;ldquo;#id&amp;rdquo;)</source>
          <target state="translated">ID 선택기 (&amp;ldquo;#id&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="69f7524d8b4ad7db7184356d826160af474e76d7" translate="yes" xml:space="preserve">
          <source>ID selector (&amp;quot;#id&amp;quot;)</source>
          <target state="translated">ID 선택기 ( &quot;#id&quot;)</target>
        </trans-unit>
        <trans-unit id="9e19b2ab5587365bdf1a194d251d9e9a6a859a31" translate="yes" xml:space="preserve">
          <source>Identify the checked radio input.</source>
          <target state="translated">확인 된 무선 입력을 식별하십시오.</target>
        </trans-unit>
        <trans-unit id="01ced688e6559efbfbf1cc3c1878e1d6487957ea" translate="yes" xml:space="preserve">
          <source>If &quot;invert&quot; is false, or not provided, then the function returns an array consisting of all elements for which &quot;callback&quot; returns true. If &quot;invert&quot; is true, then the function returns an array consisting of all elements for which &quot;callback&quot; returns false.</source>
          <target state="translated">&quot;invert&quot;가 false이거나 제공되지 않은 경우, 함수는 &quot;콜백&quot;이 true를 리턴하는 모든 요소로 구성된 배열을 리턴합니다. &quot;invert&quot;가 true이면이 함수는 &quot;callback&quot;이 false를 반환하는 모든 요소로 구성된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="32eac473cb6c9d519d79e940ac64eec13b14ff2a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;.index()&lt;/code&gt; is called on a collection of elements and a DOM element or jQuery object is passed in, &lt;code&gt;.index()&lt;/code&gt; returns an integer indicating the position of the passed element relative to the original collection.</source>
          <target state="translated">경우 &lt;code&gt;.index()&lt;/code&gt; 요소들의 집합 및 DOM 요소에 호출되거나 jQuery를 개체에 전달된다 &lt;code&gt;.index()&lt;/code&gt; 원래 컬렉션에 전달 요소의 위치를 나타내는 정수를 반환한다.</target>
        </trans-unit>
        <trans-unit id="9353c86ca16f5ac78071346dfd054f5d9641491f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;.slideDown()&lt;/code&gt; is called on an unordered list (&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;) and its &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements have position (relative, absolute, or fixed), the effect may not work properly in IE6 through at least IE9 unless the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; has &quot;layout.&quot; To remedy the problem, add the &lt;code&gt;position: relative;&lt;/code&gt; and &lt;code&gt;zoom: 1;&lt;/code&gt; CSS declarations to the &lt;code&gt;ul&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;.slideDown()&lt;/code&gt; (비 순차 목록이라고 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; )과 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소 (상대 절대 또는 고정) 위치 효과 통해 IE6에서 정상적으로 작동하지 않을 수있는 적어도 IE9 않는 한 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; &quot;레이아웃&quot;이 있습니다. 문제를 해결하려면 &lt;code&gt;position: relative;&lt;/code&gt; 및 &lt;code&gt;zoom: 1;&lt;/code&gt; &lt;code&gt;ul&lt;/code&gt; 에 대한 CSS 선언 .</target>
        </trans-unit>
        <trans-unit id="74bee9b46623deac5efb6743780330c7d6f6e03c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxComplete()&lt;/code&gt; method will not fire.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 불려 &lt;code&gt;global&lt;/code&gt; 에 대한 옵션을 설정 &lt;code&gt;false&lt;/code&gt; 의 &lt;code&gt;.ajaxComplete()&lt;/code&gt; 메소드는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="02c932c56c55aff02f32800dd2200c51b4a9749e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxError()&lt;/code&gt; method will not fire.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 불려 &lt;code&gt;global&lt;/code&gt; 에 대한 옵션을 설정 &lt;code&gt;false&lt;/code&gt; 의 &lt;code&gt;.ajaxError()&lt;/code&gt; 메소드는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7a8c1c63b0bd4cef2c8a0608da2774134bae1543" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxSend()&lt;/code&gt; method will not fire.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 불려 &lt;code&gt;global&lt;/code&gt; 에 대한 옵션을 설정 &lt;code&gt;false&lt;/code&gt; 의 &lt;code&gt;.ajaxSend()&lt;/code&gt; 메소드는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b1deebf1b0f09555260297f644f66637594c2a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxStart()&lt;/code&gt; method will not fire.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 불려 &lt;code&gt;global&lt;/code&gt; 에 대한 옵션을 설정 &lt;code&gt;false&lt;/code&gt; 의 &lt;code&gt;.ajaxStart()&lt;/code&gt; 메소드는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b48953ee6f680545d36950c5b208c4b12f41113d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxStop()&lt;/code&gt; method will not fire.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 불려 &lt;code&gt;global&lt;/code&gt; 에 대한 옵션을 설정 &lt;code&gt;false&lt;/code&gt; 의 &lt;code&gt;.ajaxStop()&lt;/code&gt; 메소드는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="444413e130e209bad7b68636ea67c23ad7f2cdf6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; is called with the &lt;code&gt;global&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;.ajaxSuccess()&lt;/code&gt; method will not fire.</source>
          <target state="translated">만약 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 불려 &lt;code&gt;global&lt;/code&gt; 에 대한 옵션을 설정 &lt;code&gt;false&lt;/code&gt; 의 &lt;code&gt;.ajaxSuccess()&lt;/code&gt; 메소드는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1bdffe74681c9c3a1d3b0f5c835a018138784ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eventData&lt;/code&gt; is present, it is the second argument to the &lt;code&gt;.bind()&lt;/code&gt; method; if no additional data needs to be sent to the handler, then the callback is passed as the second and final argument.</source>
          <target state="translated">경우 &lt;code&gt;eventData&lt;/code&gt; 존재하는, 상기 두 번째 인자 인 &lt;code&gt;.bind()&lt;/code&gt; 메소드; 추가 데이터를 처리기로 보낼 필요가 없으면 콜백이 두 번째 및 마지막 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f7de334e92ff588cfc2995a1607326278831e730" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;json&lt;/code&gt; is specified, the response is parsed using &lt;a href=&quot;jquery.parsejson&quot;&gt;&lt;code&gt;jQuery.parseJSON&lt;/code&gt;&lt;/a&gt; before being passed, as an object, to the success handler. The parsed JSON object is made available through the &lt;code&gt;responseJSON&lt;/code&gt; property of the &lt;code&gt;jqXHR&lt;/code&gt; object.</source>
          <target state="translated">경우 &lt;code&gt;json&lt;/code&gt; 지정 응답 사용하여 구문 분석됩니다 &lt;a href=&quot;jquery.parsejson&quot;&gt; &lt;code&gt;jQuery.parseJSON&lt;/code&gt; 을&lt;/a&gt; 성공 핸들러 객체로 전달되기 전에. 구문 분석 된 JSON 오브젝트는 &lt;code&gt;jqXHR&lt;/code&gt; 오브젝트 의 &lt;code&gt;responseJSON&lt;/code&gt; 특성을 통해 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="9a32fd3dee0f0b76f086eb7d528cd31a2ac333d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;jsonp&lt;/code&gt; is specified, &lt;code&gt;$.ajax()&lt;/code&gt; will automatically append a query string parameter of (by default) &lt;code&gt;callback=?&lt;/code&gt; to the URL. The &lt;code&gt;jsonp&lt;/code&gt; and &lt;code&gt;jsonpCallback&lt;/code&gt; properties of the settings passed to &lt;code&gt;$.ajax()&lt;/code&gt; can be used to specify, respectively, the name of the query string parameter and the name of the JSONP callback function. The server should return valid JavaScript that passes the JSON response into the callback function. &lt;code&gt;$.ajax()&lt;/code&gt; will execute the returned JavaScript, calling the JSONP callback function, before passing the JSON object contained in the response to the &lt;code&gt;$.ajax()&lt;/code&gt; success handler.</source>
          <target state="translated">경우 &lt;code&gt;jsonp&lt;/code&gt; 지정되어, &lt;code&gt;$.ajax()&lt;/code&gt; 자동 (기본값)의 쿼리 문자열 매개 변수를 추가합니다 &lt;code&gt;callback=?&lt;/code&gt; URL에. &lt;code&gt;$.ajax()&lt;/code&gt; 전달 된 설정 의 &lt;code&gt;jsonp&lt;/code&gt; 및 &lt;code&gt;jsonpCallback&lt;/code&gt; 속성을 사용하여 쿼리 문자열 매개 변수 이름과 JSONP 콜백 함수 이름을 각각 지정할 수 있습니다. 서버는 JSON 응답을 콜백 함수로 전달하는 유효한 JavaScript를 반환해야합니다. &lt;code&gt;$.ajax()&lt;/code&gt; 는 응답에 포함 된 JSON 객체를 &lt;code&gt;$.ajax()&lt;/code&gt; 성공 핸들러에 전달하기 전에 JSONP 콜백 함수를 호출하여 반환 된 JavaScript를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="8f63b79238f2d58c872c7f219e1691894c09f7cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;script&lt;/code&gt; is specified, &lt;code&gt;$.ajax()&lt;/code&gt; will execute the JavaScript that is received from the server before passing it on to the success handler as a string.</source>
          <target state="translated">경우 &lt;code&gt;script&lt;/code&gt; 지정되어, &lt;code&gt;$.ajax()&lt;/code&gt; 문자열로 성공 핸들러에 전달하기 전에 서버에서 수신 된 자바 스크립트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="693a21ebac2536d6fb41470891ccc7bafc573c14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;selector&lt;/code&gt; is omitted or is null, the event handler is referred to as &lt;em&gt;direct&lt;/em&gt; or &lt;em&gt;directly-bound&lt;/em&gt;. The handler is called every time an event occurs on the selected elements, whether it occurs directly on the element or bubbles from a descendant (inner) element.</source>
          <target state="translated">경우 &lt;code&gt;selector&lt;/code&gt; 생략되거나 널되는 이벤트 핸들러라고 &lt;em&gt;직접&lt;/em&gt; 또는이 &lt;em&gt;직접 바인딩&lt;/em&gt; . 핸들러는 이벤트가 요소에서 직접 발생하거나 하위 (내부) 요소에서 거품이 발생하는지 여부에 관계없이 선택한 요소에서 이벤트가 발생할 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="38718c8ac1162b84dd111b66ddbdbe862fa33cbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is provided, &lt;code&gt;.promise()&lt;/code&gt; will attach the methods onto it and then return this object rather than create a new one. This can be useful to attach the Promise behavior to an object that already exists.</source>
          <target state="translated">경우 &lt;code&gt;target&lt;/code&gt; 제공되며, &lt;code&gt;.promise()&lt;/code&gt; 그것에 방법을 첨부하고 다음이 개체를 반환하는 대신 새로 만듭니다. 이미 존재하는 개체에 Promise 동작을 연결하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dca49adacf73cc84b72173beb40c7b200f91e8dd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;target&lt;/code&gt; is provided, &lt;code&gt;deferred.promise()&lt;/code&gt; will attach the methods onto it and then return this object rather than create a new one. This can be useful to attach the Promise behavior to an object that already exists.</source>
          <target state="translated">경우 &lt;code&gt;target&lt;/code&gt; 제공되며, &lt;code&gt;deferred.promise()&lt;/code&gt; 그것에 방법을 첨부하고 다음이 개체를 반환하는 대신 새로 만듭니다. 이미 존재하는 개체에 Promise 동작을 연결하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81c2407f6834dd24e1e36d7dc2ab51a73d698593" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;html&lt;/code&gt; is specified, no pre-processing occurs. The data is simply passed on to the success handler, and made available through the &lt;code&gt;responseText&lt;/code&gt; property of the &lt;code&gt;jqXHR&lt;/code&gt; object.</source>
          <target state="translated">경우 &lt;code&gt;text&lt;/code&gt; 나 &lt;code&gt;html&lt;/code&gt; 지정되어, 어떠한 사전 처리는 발생하지 않는다. 데이터는 단순히 성공 처리기로 전달되고 &lt;code&gt;responseText&lt;/code&gt; &lt;code&gt;jqXHR&lt;/code&gt; 객체 responseText 속성을 .</target>
        </trans-unit>
        <trans-unit id="fed546c86f7fb88219c0a2e84344df053979ad5d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;xml&lt;/code&gt; is specified, the response is parsed using &lt;a href=&quot;jquery.parsexml&quot;&gt;&lt;code&gt;jQuery.parseXML&lt;/code&gt;&lt;/a&gt; before being passed, as an &lt;a href=&quot;types#XMLDocument&quot;&gt;&lt;code&gt;XMLDocument&lt;/code&gt;&lt;/a&gt;, to the success handler. The XML document is made available through the &lt;code&gt;responseXML&lt;/code&gt; property of the &lt;code&gt;jqXHR&lt;/code&gt; object.</source>
          <target state="translated">경우 &lt;code&gt;xml&lt;/code&gt; 지정 응답 사용하여 구문 분석됩니다 &lt;a href=&quot;jquery.parsexml&quot;&gt; &lt;code&gt;jQuery.parseXML&lt;/code&gt; 을&lt;/a&gt; int로서, 전달되기 전에 &lt;a href=&quot;types#XMLDocument&quot;&gt; &lt;code&gt;XMLDocument&lt;/code&gt; 로&lt;/a&gt; 성공 핸들러. XML 문서는 &lt;code&gt;responseXML&lt;/code&gt; &lt;code&gt;jqXHR&lt;/code&gt; 객체 responseXML 속성을 합니다.</target>
        </trans-unit>
        <trans-unit id="1e27472b1e0403fbaa99efa496e2a7650642d975" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a single element&lt;/em&gt; selected this way is inserted into a single location elsewhere in the DOM, it will be moved into the target (&lt;em&gt;not cloned&lt;/em&gt;):</source>
          <target state="translated">&lt;em&gt;단일 요소 인&lt;/em&gt; 경우&lt;em&gt;&lt;/em&gt; 이 방법을 선택한 다른 곳 DOM 내의 한 위치에 삽입되어이를 목표 (내로 이동한다 &lt;em&gt;복제되지&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="779be847a06b4739242be14a0474a6d50d014e89" translate="yes" xml:space="preserve">
          <source>If Selector is specified as the type of an argument, it accepts everything that the jQuery constructor accepts, eg. Strings, Elements, Lists of Elements.</source>
          <target state="translated">Selector가 인자의 타입으로 지정되면, jQuery 생성자가 받아들이는 모든 것을 받아들입니다. 문자열, 요소, 요소 목록.</target>
        </trans-unit>
        <trans-unit id="ff7dfd1c5a0e66f24462b5c8c8f48779bb76e2fa" translate="yes" xml:space="preserve">
          <source>If a &quot;complete&quot; callback is provided, it is executed after post-processing and HTML insertion has been performed. The callback is fired once for each element in the jQuery collection, and &lt;code&gt;this&lt;/code&gt; is set to each DOM element in turn.</source>
          <target state="translated">&quot;완료된&quot;콜백이 제공되면 후 처리 및 HTML 삽입이 수행 된 후에 실행됩니다. 콜백은 jQuery를 컬렉션에서 각 요소에 대해 한 번 해고되고, &lt;code&gt;this&lt;/code&gt; 차례로 각 DOM 요소로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="48f9d87189079de6a1a58a5036337d8f7dca6b8c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;data&lt;/code&gt; argument is provided to &lt;code&gt;.on()&lt;/code&gt; and is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, it is passed to the handler in the &lt;a href=&quot;event.data&quot;&gt;&lt;code&gt;event.data&lt;/code&gt;&lt;/a&gt; property each time an event is triggered. The &lt;code&gt;data&lt;/code&gt; argument can be any type, but if a string is used the &lt;code&gt;selector&lt;/code&gt; must either be provided or explicitly passed as &lt;code&gt;null&lt;/code&gt; so that the data is not mistaken for a selector. Best practice is to use a plain object so that multiple values can be passed as properties.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 인수에 제공된다 &lt;code&gt;.on()&lt;/code&gt; 되지 않고 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; , 그것은 상기 처리기에 전달 &lt;a href=&quot;event.data&quot;&gt; &lt;code&gt;event.data&lt;/code&gt; &lt;/a&gt; 속성 이벤트가 트리거 될 때마다. &lt;code&gt;data&lt;/code&gt; 인수는 유형이 될 수 있지만, 문자열을 사용하는 경우 &lt;code&gt;selector&lt;/code&gt; 중 하나를 제공 또는 명시 적으로 전달해야합니다 &lt;code&gt;null&lt;/code&gt; 데이터가 선택 오인되지 않도록. 모범 사례는 여러 값을 속성으로 전달할 수 있도록 일반 객체를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4f22de08ca60efaa92f68041d8b7552264392595" translate="yes" xml:space="preserve">
          <source>If a class name is included as a parameter, then only that class will be removed from the set of matched elements. If no class names are specified in the parameter, all classes will be removed.</source>
          <target state="translated">클래스 이름이 매개 변수로 포함 된 경우 해당 클래스 만 일치하는 요소 집합에서 제거됩니다. 매개 변수에 클래스 이름이 지정되지 않으면 모든 클래스가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="3c9ede6c8a09c2234f461140abbc34bf646c57e3" translate="yes" xml:space="preserve">
          <source>If a class name is included as a parameter, then only that class will be removed from the set of matched elements. If no classes are specified in the parameter, all classes will be removed.</source>
          <target state="translated">클래스 이름이 매개 변수로 포함되면 일치하는 요소 세트에서 해당 클래스 만 제거됩니다. 매개 변수에 클래스가 지정되지 않은 경우 모든 클래스가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="ac84a07cc340102830a49c1c5ff1cc90a9934a6d" translate="yes" xml:space="preserve">
          <source>If a number is zero, it defaults to false:</source>
          <target state="translated">숫자가 0이면 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="6ddf3197f5804e29818508102ea3b2757d0cb7c0" translate="yes" xml:space="preserve">
          <source>If a request with jQuery.get() returns an error code, it will fail silently unless the script has also called the global &lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError() &lt;/a&gt; method. Alternatively, as of jQuery 1.5, the &lt;code&gt;.error()&lt;/code&gt; method of the &lt;code&gt;jqXHR&lt;/code&gt; object returned by jQuery.get() is also available for error handling.</source>
          <target state="translated">jQuery.get ()을 사용한 요청이 오류 코드를 리턴하면 스크립트가 전역 &lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError ()&lt;/a&gt; 메소드를 호출하지 않으면 자동으로 실패 합니다. 또는 jQuery 1.5에서 &lt;code&gt;.error()&lt;/code&gt; 메소드는 &lt;code&gt;jqXHR&lt;/code&gt; 의 목적은 ()에 의해 리턴 jQuery.get 또한 에러 처리 가능하다.</target>
        </trans-unit>
        <trans-unit id="e0fef66f213d71f4da21822a2381c01681bd71b3" translate="yes" xml:space="preserve">
          <source>If a request with jQuery.post() returns an error code, it will fail silently unless the script has also called the global &lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError() &lt;/a&gt; method. Alternatively, as of jQuery 1.5, the &lt;code&gt;.error()&lt;/code&gt; method of the &lt;code&gt;jqXHR&lt;/code&gt; object returned by jQuery.post() is also available for error handling.</source>
          <target state="translated">jQuery.post () 요청이 오류 코드를 리턴하면 스크립트가 글로벌 &lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError ()&lt;/a&gt; 메소드를 호출하지 않으면 자동으로 실패 합니다. 또는 jQuery 1.5부터 jQuery.post ()에 의해 리턴 된 &lt;code&gt;jqXHR&lt;/code&gt; 객체 의 &lt;code&gt;.error()&lt;/code&gt; 메소드 도 오류 처리에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b447799372a8c6434e6043e8e34dfbe4356cad5" translate="yes" xml:space="preserve">
          <source>If a selector string is passed as an argument, &lt;code&gt;.index()&lt;/code&gt; returns an integer indicating the position of the first element within the jQuery object relative to the elements matched by the selector. If the element is not found, &lt;code&gt;.index()&lt;/code&gt; will return -1.</source>
          <target state="translated">선택자 문자열이 인수로 전달되면 &lt;code&gt;.index()&lt;/code&gt; 는 선택기와 일치하는 요소를 기준으로 jQuery 객체 내 첫 번째 요소의 위치를 ​​나타내는 정수를 반환합니다. 요소를 찾지 &lt;code&gt;.index()&lt;/code&gt; 는 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99a0e3a52aafc24010fec853ea3be580380c213d" translate="yes" xml:space="preserve">
          <source>If a simple event name such as &lt;code&gt;&quot;click&quot;&lt;/code&gt; is provided, &lt;em&gt;all&lt;/em&gt; events of that type (both direct and delegated) are removed from the elements in the jQuery set. When writing code that will be used as a plugin, or simply when working with a large code base, best practice is to attach and remove events using namespaces so that the code will not inadvertently remove event handlers attached by other code. All events of all types in a specific namespace can be removed from an element by providing just a namespace, such as &lt;code&gt;&quot;.myPlugin&quot;&lt;/code&gt;. At minimum, either a namespace or event name must be provided.</source>
          <target state="translated">&lt;code&gt;&quot;click&quot;&lt;/code&gt; 과 같은 간단한 이벤트 이름 이 제공되면 해당 유형의 &lt;em&gt;모든&lt;/em&gt; 이벤트 (직접 및 위임)가 jQuery 세트의 요소에서 제거됩니다. 플러그인으로 사용될 코드를 작성하거나 단순히 큰 코드 기반으로 작업 할 때 네임 스페이스를 사용하여 이벤트를 첨부하고 제거하여 코드가 다른 코드에 의해 첨부 된 이벤트 핸들러를 실수로 제거하지 않는 것이 가장 좋습니다. &lt;code&gt;&quot;.myPlugin&quot;&lt;/code&gt; 과 같은 네임 스페이스 만 제공하면 특정 네임 스페이스에있는 모든 유형의 모든 이벤트를 요소에서 제거 할 수 있습니다 . 최소한 네임 스페이스 또는 이벤트 이름이 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="1e5df75637445b79d72a63723c288146594a2335" translate="yes" xml:space="preserve">
          <source>If a single Deferred is passed to &lt;code&gt;jQuery.when()&lt;/code&gt;, its Promise object (a subset of the Deferred methods) is returned by the method. Additional methods of the Promise object can be called to attach callbacks, such as &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then&lt;/code&gt;&lt;/a&gt;. When the Deferred is resolved or rejected, usually by the code that created the Deferred originally, the appropriate callbacks will be called. For example, the jqXHR object returned by &lt;code&gt;jQuery.ajax()&lt;/code&gt; is a Promise-compatible object and can be used this way:</source>
          <target state="translated">단일 Deferred가 &lt;code&gt;jQuery.when()&lt;/code&gt; 전달 되면 해당 Promise 객체 (Deferred 메소드의 하위 세트)가 메소드에 의해 리턴됩니다. Promise 객체의 추가 메서드를 호출하여 &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then&lt;/code&gt; &lt;/a&gt; 과 같은 콜백을 첨부 할 수 있습니다 . 지연이 원래 지연을 생성 한 코드에 의해 지연되거나 거부되면 적절한 콜백이 호출됩니다. 예를 들어, &lt;code&gt;jQuery.ajax()&lt;/code&gt; 의해 리턴 된 jqXHR 오브젝트 는 Promise 호환 오브젝트이며 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="681c9d732bb210a86966051f95bda5c32025b62f" translate="yes" xml:space="preserve">
          <source>If a single argument is passed to &lt;code&gt;jQuery.when()&lt;/code&gt; and it is not a Deferred or a Promise, it will be treated as a resolved Deferred and any doneCallbacks attached will be executed immediately. The doneCallbacks are passed the original argument. In this case any failCallbacks you might set are never called since the Deferred is never rejected. For example:</source>
          <target state="translated">단일 인수가 &lt;code&gt;jQuery.when()&lt;/code&gt; 전달되고 지연 또는 약속이 아닌 경우, 해결 된 지연으로 처리되며 연결된 doneCallbacks가 즉시 실행됩니다. doneCallbacks에는 원래 인수가 전달됩니다. 이 경우 지연이 거부되지 않기 때문에 설정할 수있는 failCallback은 호출되지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d43f7542e6632e784a83802dcc802d7b00098daf" translate="yes" xml:space="preserve">
          <source>If a string is passed as the parameter to &lt;code&gt;$()&lt;/code&gt;, jQuery examines the string to see if it looks like HTML (i.e., it starts with &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt;). If not, the string is interpreted as a selector expression, as explained above. But if the string appears to be an HTML snippet, jQuery attempts to create new DOM elements as described by the HTML. Then a jQuery object is created and returned that refers to these elements. You can perform any of the usual jQuery methods on this object:</source>
          <target state="translated">문자열이 &lt;code&gt;$()&lt;/code&gt; 매개 변수로 전달 되면 jQuery는 문자열이 HTML처럼 보이는지 확인합니다 (예 : &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt; 시작 ). 그렇지 않은 경우 문자열은 위에서 설명한대로 선택기 표현식으로 해석됩니다. 그러나 문자열이 HTML 스 니펫 인 경우 jQuery는 HTML에 설명 된대로 새 DOM 요소를 작성하려고 시도합니다. 그런 다음 이러한 요소를 참조하는 jQuery 객체가 만들어지고 반환됩니다. 이 객체에서 일반적인 jQuery 메소드를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2da2b26696779a8c65be4272e40d47605c0870b4" translate="yes" xml:space="preserve">
          <source>If an element cannot be found at the specified zero-based index, the method constructs a new jQuery object with an empty set and a &lt;code&gt;length&lt;/code&gt; property of 0.</source>
          <target state="translated">지정된 0부터 시작하는 인덱스에서 요소를 찾을 수없는 경우이 메소드는 빈 세트와 &lt;code&gt;length&lt;/code&gt; 특성이 0 인 새 jQuery 객체를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="e146387a260406e5f6775da304db12d43941afde" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved after the target (not cloned) and a new set consisting of the inserted element is returned:</source>
          <target state="translated">이 방법으로 선택한 요소가 DOM의 다른 위치에있는 단일 위치에 삽입되면 대상 (복제되지 않음) 이후에 이동되고 삽입 된 요소로 구성된 새 세트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5a3880c48c22a10e8a436f281f0881ea7994b16d" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved before the target (not cloned) and a new set consisting of the inserted element is returned:</source>
          <target state="translated">이 방법으로 선택한 요소가 DOM의 다른 위치에있는 단일 위치에 삽입되면 대상 (복제되지 않음) 이전으로 이동되고 삽입 된 요소로 구성된 새 세트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="653dca41a440ba92a973641103d439ecca95f06d" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved before the target (not cloned):</source>
          <target state="translated">이 방법으로 선택한 요소가 DOM의 다른 위치에있는 단일 위치에 삽입되면 복제되지 않은 대상 이전으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="eb771fa00a45228e19655795fd9091cd6e35a77c" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved into the target (not cloned) and a new set consisting of the inserted element is returned:</source>
          <target state="translated">이 방법으로 선택한 요소가 DOM의 다른 위치에있는 단일 위치에 삽입되면 복제되지 않은 대상으로 이동되고 삽입 된 요소로 구성된 새 세트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="389e97f8ae196848086fe8574ac05a29418825f2" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved into the target (not cloned):</source>
          <target state="translated">이 방법으로 선택한 요소가 DOM의 다른 위치에있는 단일 위치에 삽입되면 복제되지 않은 대상으로 이동됩니다.</target>
        </trans-unit>
        <trans-unit id="ca4c6ca81bd585abac046552aa24145ca0c6f870" translate="yes" xml:space="preserve">
          <source>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved rather than cloned:</source>
          <target state="translated">이 방법으로 선택한 요소가 DOM의 다른 위치에있는 단일 위치에 삽입되면 복제되지 않고 이동됩니다.</target>
        </trans-unit>
        <trans-unit id="5fb766610c6dc677759c753c1dc5f933ecedde95" translate="yes" xml:space="preserve">
          <source>If an object is used as the collection, the callback is passed a key-value pair each time:</source>
          <target state="translated">객체가 컬렉션으로 사용되면 콜백은 매번 키-값 쌍으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="bff3162065a6986b64c1d45fb2e4d2d2f0e3bfe6" translate="yes" xml:space="preserve">
          <source>If for some reason two versions of jQuery are loaded (which is not recommended), calling &lt;code&gt;$.noConflict( true )&lt;/code&gt; from the second version will return the globally scoped jQuery variables to those of the first version.</source>
          <target state="translated">어떤 이유로 jQuery의 두 가지 버전이로드되는 경우 (권장되지 않음) 두 번째 버전에서 &lt;code&gt;$.noConflict( true )&lt;/code&gt; 를 호출 하면 전체 범위의 jQuery 변수가 첫 번째 버전의 jQuery 변수로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0dd1e401c813d59f8a7c36f9b51b31c3afac8e38" translate="yes" xml:space="preserve">
          <source>If key presses anywhere need to be caught (for example, to implement global shortcut keys on a page), it is useful to attach this behavior to the &lt;code&gt;document&lt;/code&gt; object. Because of event bubbling, all key presses will make their way up the DOM to the &lt;code&gt;document&lt;/code&gt; object unless explicitly stopped.</source>
          <target state="translated">페이지에서 전역 바로 가기 키를 구현하기 위해 키 누르기를 잡아야하는 경우이 동작을 &lt;code&gt;document&lt;/code&gt; 개체 에 첨부하는 것이 좋습니다. 이벤트 버블 링으로 인해, 모든 키 누름은 명시 적으로 중지되지 않는 한 DOM을 &lt;code&gt;document&lt;/code&gt; 객체로 향하게합니다.</target>
        </trans-unit>
        <trans-unit id="3eba107ee00b8b93dbc335d7dac715a78736d32b" translate="yes" xml:space="preserve">
          <source>If more than one animation method is called on the same element, the later animations are placed in the effects queue for the element. These animations will not begin until the first one completes. When &lt;code&gt;.stop()&lt;/code&gt; is called, the next animation in the queue begins immediately. If the &lt;code&gt;clearQueue&lt;/code&gt; parameter is provided with a value of &lt;code&gt;true&lt;/code&gt;, then the rest of the animations in the queue are removed and never run.</source>
          <target state="translated">동일한 요소에서 둘 이상의 애니메이션 메소드가 호출되면 이후의 애니메이션이 요소의 효과 대기열에 배치됩니다. 이 애니메이션은 첫 번째 애니메이션이 완료 될 때까지 시작되지 않습니다. 때 &lt;code&gt;.stop()&lt;/code&gt; 호출되면 큐의 다음 애니메이션이 즉시 시작됩니다. 는 IF &lt;code&gt;clearQueue&lt;/code&gt; 의 매개 변수의 값으로 제공되는 &lt;code&gt;true&lt;/code&gt; , 다음 큐에있는 애니메이션의 나머지 부분을 제거하고 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4c901c50369a853b16c0a46c6245eab7362f2f21" translate="yes" xml:space="preserve">
          <source>If more than two handlers are provided, &lt;code&gt;.toggle()&lt;/code&gt; will cycle among all of them. For example, if there are three handlers, then the first handler will be called on the first click, the fourth click, the seventh click, and so on.</source>
          <target state="translated">두 개 이상의 처리기가 제공되면 &lt;code&gt;.toggle()&lt;/code&gt; 은 모든 처리기 사이에서 순환합니다. 예를 들어 3 개의 핸들러가 있으면 첫 번째 클릭, 4 번째 클릭, 7 번째 클릭 등에서 첫 번째 핸들러가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e2f6bc7a9f0aa20cbb06f1030996bcda35869f0e" translate="yes" xml:space="preserve">
          <source>If necessary, you can free up the &lt;code&gt;jQuery&lt;/code&gt; name as well by passing &lt;code&gt;true&lt;/code&gt; as an argument to the method. This is rarely necessary, and if you must do this (for example, if you need to use multiple versions of the jQuery library on the same page), you need to consider that most plug-ins rely on the presence of the &lt;code&gt;jQuery&lt;/code&gt; variable and may not operate correctly in this situation.</source>
          <target state="translated">필요한 경우 메소드에 인수로 &lt;code&gt;true&lt;/code&gt; 를 전달 하여 &lt;code&gt;jQuery&lt;/code&gt; 이름을 비울 수 있습니다 . 이것은 거의 필요하지 않으며이를 수행해야하는 경우 (예를 들어, 동일한 페이지에서 여러 버전의 jQuery 라이브러리를 사용해야하는 경우) 대부분의 플러그인은 &lt;code&gt;jQuery&lt;/code&gt; 변수 의 존재에 의존한다는 점을 고려해야합니다. 이 상황에서 제대로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bd00f396099752bd4bd65b449d49215910d0558" translate="yes" xml:space="preserve">
          <source>If no argument is passed to the &lt;code&gt;.index()&lt;/code&gt; method, the return value is an integer indicating the position of the first element within the jQuery object relative to its sibling elements.</source>
          <target state="translated">&lt;code&gt;.index()&lt;/code&gt; 메서드에 인수가 전달되지 않으면 반환 값은 형제 요소를 기준으로 jQuery 객체 내 첫 번째 요소의 위치를 ​​나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="7c346aaa44dd8d567f21bb5aae83752d4561c000" translate="yes" xml:space="preserve">
          <source>If no arguments are passed to &lt;code&gt;jQuery.when()&lt;/code&gt;, it will return a resolved Promise.</source>
          <target state="translated">&lt;code&gt;jQuery.when()&lt;/code&gt; 인수가 전달되지 않으면 해결 된 Promise가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1c6c496b9d37048399b77df9425a1f66cd5047ec" translate="yes" xml:space="preserve">
          <source>If no element is matched by the selector &amp;mdash; in this case, if the document does not contain an element with id=&quot;result&quot; &amp;mdash; the Ajax request will &lt;em&gt;not&lt;/em&gt; be sent.</source>
          <target state="translated">선택기와 일치하는 요소가없는 경우 (이 경우 문서에 id = &quot;result&quot;가있는 요소가없는 경우) Ajax 요청이 전송 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="62ca8fca1a618e5a64840ebaf9f9f1aee603e249" translate="yes" xml:space="preserve">
          <source>If no elements match the provided selector, the new jQuery object is &quot;empty&quot;; that is, it contains no elements and has &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property of 0.</source>
          <target state="translated">제공된 선택자와 일치하는 요소가 없으면 새 jQuery 객체는 &quot;비어 있습니다&quot;. 즉, 요소를 포함하지 않으며 &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; 속성이 0입니다.</target>
        </trans-unit>
        <trans-unit id="4bc36a786e39b4a1c6ae35891fd124eedbdde89c" translate="yes" xml:space="preserve">
          <source>If no explicit unit is specified (like &quot;em&quot; or &quot;%&quot;) then &quot;px&quot; is assumed.</source>
          <target state="translated">&quot;em&quot;또는 &quot;%&quot;와 같이 명시 적 단위를 지정하지 않으면 &quot;px&quot;로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="cff1d0b294614d20c4bf3155f9c43ccc7a2db5ba" translate="yes" xml:space="preserve">
          <source>If no explicit unit was specified (like 'em' or '%') then &quot;px&quot; is concatenated to the value.</source>
          <target state="translated">명시 적 단위가 지정되지 않은 경우 (예 : 'em'또는 '%') &quot;px&quot;가 값에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="ca02c0d41ce1128dc4406d4b06b01b42aa4b0e7e" translate="yes" xml:space="preserve">
          <source>If no previous sibling exists, or if the previous sibling element does not match a supplied selector, an empty jQuery object is returned.</source>
          <target state="translated">이전 형제가 존재하지 않거나 이전 형제 요소가 제공된 선택기와 일치하지 않으면 빈 jQuery 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1b266254b738f1411176a4f0c23844d7112eb175" translate="yes" xml:space="preserve">
          <source>If only one argument is supplied to &lt;code&gt;$.extend()&lt;/code&gt;, this means the target argument was omitted. In this case, the jQuery object itself is assumed to be the target. By doing this, you can add new functions to the jQuery namespace. This can be useful for plugin authors wishing to add new methods to JQuery.</source>
          <target state="translated">&lt;code&gt;$.extend()&lt;/code&gt; 하나의 인수 만 제공 되면 대상 인수가 생략되었음을 의미합니다. 이 경우 jQuery 객체 자체가 대상으로 간주됩니다. 이렇게하면 jQuery 네임 스페이스에 새로운 함수를 추가 할 수 있습니다. 이것은 JQuery에 새로운 메소드를 추가하려는 플러그인 작성자에게 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4db9fb787235af25b18b07fd361a2ed823ae9917" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, it will force requested pages not to be cached by the browser. &lt;strong&gt;Note:&lt;/strong&gt; Setting &lt;code&gt;cache&lt;/code&gt; to false will only work correctly with HEAD and GET requests. It works by appending &quot;_={timestamp}&quot; to the GET parameters. The parameter is not needed for other types of requests, except in IE8 when a POST is made to a URL that has already been requested by a GET.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 로 설정하면 요청 된 페이지가 브라우저에 의해 캐시되지 않습니다. &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;cache&lt;/code&gt; 를 false로 설정하면 HEAD 및 GET 요청에 대해서만 올바르게 작동합니다. &quot;_ = {timestamp}&quot;를 GET 매개 변수에 추가하여 작동합니다. GET에서 이미 요청한 URL에 POST를 수행 할 때 IE8을 제외하고 다른 유형의 요청에는이 매개 변수가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1df39c5d445afdf9bf8b858f0c082e9d064782f0" translate="yes" xml:space="preserve">
          <source>If supplied, the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;progress&lt;/code&gt;, &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;done&lt;/code&gt;, &lt;code&gt;fail&lt;/code&gt;, and &lt;code&gt;always&lt;/code&gt; callbacks are called on a &lt;em&gt;per-element&lt;/em&gt; basis; &lt;code&gt;this&lt;/code&gt; is set to the DOM element being animated. If no elements are in the set, no callbacks are called. If multiple elements are animated, the callback is executed once per matched element, not once for the animation as a whole. Use the &lt;code&gt;.promise()&lt;/code&gt; method to obtain a promise to which you can attach callbacks that fire once for an animated set of any size, including zero elements.</source>
          <target state="translated">제공된 경우 &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;step&lt;/code&gt; , &lt;code&gt;progress&lt;/code&gt; , &lt;code&gt;complete&lt;/code&gt; , &lt;code&gt;done&lt;/code&gt; , &lt;code&gt;fail&lt;/code&gt; 및 &lt;code&gt;always&lt;/code&gt; 콜백은 &lt;em&gt;요소&lt;/em&gt; 별로 호출 됩니다. &lt;code&gt;this&lt;/code&gt; DOM 요소는 애니메이션을 설정한다. 세트에 요소가 없으면 콜백이 호출되지 않습니다. 여러 요소가 애니메이션되는 경우 애니메이션 전체에 대해 한 번이 아니라 일치하는 요소마다 한 번씩 콜백이 실행됩니다. 사용 &lt;code&gt;.promise()&lt;/code&gt; 는 제로 요소를 포함, 모든 규모의 애니메이션 세트 일단 화재 콜백을 첨부 할 수있는에 약속을 얻는 방법.</target>
        </trans-unit>
        <trans-unit id="fb20fb01c9622da07a36721c07ee3011c80a35ae" translate="yes" xml:space="preserve">
          <source>If supplied, the callback is fired once the animation is complete. This can be useful for stringing different animations together in sequence. The callback is not sent any arguments, but &lt;code&gt;this&lt;/code&gt; is set to the DOM element being animated. If multiple elements are animated, it is important to note that the callback is executed once per matched element, not once for the animation as a whole.</source>
          <target state="translated">제공된 경우 애니메이션이 완료되면 콜백이 시작됩니다. 다른 애니메이션을 순서대로 묶는 데 유용 할 수 있습니다. 콜백 인수를 전송하지 않고, &lt;code&gt;this&lt;/code&gt; DOM 요소는 애니메이션을 설정한다. 여러 요소에 애니메이션이 적용되는 경우 애니메이션 전체에 대해 한 번이 아니라 일치하는 요소 당 한 번만 콜백이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="655324e417d63109d35dcd6d26ff59b1e03d8a38" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;eventType&lt;/code&gt; string contains a period (&lt;code&gt;.&lt;/code&gt;) character, then the event is namespaced. The period character separates the event from its namespace. For example, in the call &lt;code&gt;.bind( &quot;click.name&quot;, handler )&lt;/code&gt;, the string &lt;code&gt;click&lt;/code&gt; is the event type, and the string &lt;code&gt;name&lt;/code&gt; is the namespace. Namespacing allows us to unbind or trigger some events of a type without affecting others. See the discussion of &lt;code&gt;.unbind()&lt;/code&gt; for more information.</source>
          <target state="translated">는 IF &lt;code&gt;eventType&lt;/code&gt; 문자열이 기간 (포함 &lt;code&gt;.&lt;/code&gt; ) 문자를, 다음 이벤트는 네임 스페이스된다. 마침표 문자는 이벤트를 네임 스페이스와 분리합니다. 예를 들어, &lt;code&gt;.bind( &quot;click.name&quot;, handler )&lt;/code&gt; 호출 에서 문자열 &lt;code&gt;click&lt;/code&gt; 은 이벤트 유형이고 문자열 &lt;code&gt;name&lt;/code&gt; 은 네임 스페이스입니다. 네임 스페이스를 사용하면 다른 이벤트에 영향을주지 않고 유형의 일부 이벤트를 바인딩 해제하거나 트리거 할 수 있습니다. 자세한 내용은 &lt;code&gt;.unbind()&lt;/code&gt; 대한 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1a53de9b2d75f9e16c82a1ca169ebc7c0fe715da" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;jumpToEnd&lt;/code&gt; argument is provided with a value of &lt;code&gt;true&lt;/code&gt;, the current animation stops, but the element is immediately given its target values for each CSS property. In our above &lt;code&gt;.slideUp()&lt;/code&gt; example, the element would be immediately hidden. The callback function is then immediately called, if provided.</source>
          <target state="translated">경우] &lt;code&gt;jumpToEnd&lt;/code&gt; 의 인수의 값으로 제공된다 &lt;code&gt;true&lt;/code&gt; , 현재 애니메이션은 정지하지만, 소자는 즉시 각 CSS 속성에 대한 목표 값을 설명한다. 위의 &lt;code&gt;.slideUp()&lt;/code&gt; 예제에서 요소는 즉시 숨겨집니다. 콜백 함수는 제공된 경우 즉시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0b084904d70fa6997f9fe7b48cdb6a1f04ea9c73" translate="yes" xml:space="preserve">
          <source>If the Callbacks object is created with the &lt;code&gt;&quot;memory&quot;&lt;/code&gt; flag as its argument, additional functions may be added and fired after the callback list is locked.</source>
          <target state="translated">&lt;code&gt;&quot;memory&quot;&lt;/code&gt; 플래그를 인수로 사용 하여 콜백 객체를 생성 하면 콜백 목록이 잠긴 후에 추가 기능이 추가되고 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2082496bc2ea0b0fb9b8dd91f03b0381b529e20b" translate="yes" xml:space="preserve">
          <source>If the HTML is more complex than a single tag without attributes, as it is in the above example, the actual creation of the elements is handled by the browser's &lt;code&gt;.innerHTML&lt;/code&gt; mechanism. In most cases, jQuery creates a new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element and sets the &lt;code&gt;innerHTML&lt;/code&gt; property of the element to the HTML snippet that was passed in. When the parameter has a single tag (with optional closing tag or quick-closing) &amp;mdash; &lt;code&gt;$( &quot;&amp;lt;img&amp;nbsp;/&amp;gt;&quot; )&lt;/code&gt; or &lt;code&gt;$( &quot;&amp;lt;img&amp;gt;&quot; )&lt;/code&gt;, &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&quot; )&lt;/code&gt; or &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&quot; )&lt;/code&gt; &amp;mdash; jQuery creates the element using the native JavaScript &lt;code&gt;.createElement()&lt;/code&gt; function.</source>
          <target state="translated">위의 예와 같이 HTML이 속성이없는 단일 태그보다 복잡한 경우 요소의 실제 작성은 브라우저의 &lt;code&gt;.innerHTML&lt;/code&gt; 메커니즘으로 처리됩니다 . 대부분의 경우 jQuery는 새 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 요소를 생성하고 요소의 &lt;code&gt;innerHTML&lt;/code&gt; 속성을 전달 된 HTML 스 니펫으로 설정합니다. 매개 변수에 단일 태그가있는 경우 (선택적인 닫기 태그 또는 빠른 닫기) &amp;mdash; &lt;code&gt;$( &quot;&amp;lt;img&amp;nbsp;/&amp;gt;&quot; )&lt;/code&gt; 또는 &lt;code&gt;$( &quot;&amp;lt;img&amp;gt;&quot; )&lt;/code&gt; , &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&quot; )&lt;/code&gt; 또는 &lt;code&gt;$( &quot;&amp;lt;a&amp;gt;&quot; )&lt;/code&gt; &amp;mdash; jQuery는 기본 JavaScript &lt;code&gt;.createElement()&lt;/code&gt; 사용하여 요소를 만듭니다. 함수.</target>
        </trans-unit>
        <trans-unit id="ff739eaa3d2bd09824aa3a1d63034114d170e545" translate="yes" xml:space="preserve">
          <source>If the URL includes the string &quot;callback=?&quot; (or similar, as defined by the server-side API), the request is treated as JSONP instead. See the discussion of the &lt;code&gt;jsonp&lt;/code&gt; data type in &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">URL에 &quot;callback =?&quot;문자열이 포함 된 경우 (또는 서버 측 API에서 정의한 것과 유사) 요청은 대신 JSONP로 처리됩니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;jsonp&lt;/code&gt; 데이터 형식에 대한 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9496723e22f6743fe9d57c524d9388c347722920" translate="yes" xml:space="preserve">
          <source>If the argument is either a primitive value or an instance of a standard built-in ECMAScript object, the [[Class]] internal property is used to determine the type. (&lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt;More details about this technique.&lt;/a&gt;)</source>
          <target state="translated">인수가 기본 값이거나 표준 내장 ECMAScript 객체의 인스턴스 인 경우 [[Class]] 내부 속성을 사용하여 유형을 결정합니다. ( &lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt;이 기술에 대한 자세한 내용.&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d02c0f4426e39615b544ed0464339dadf3b5ebc8" translate="yes" xml:space="preserve">
          <source>If the browser lacks support for any form of the CSS property, vendor-prefixed or not, the style is not applied to the element. However, if the browser supports a proprietary alternative, it can be applied to the cssHooks instead.</source>
          <target state="translated">브라우저에 공급 업체 접두사 여부에 관계없이 CSS 속성 형식이 지원되지 않으면 스타일이 요소에 적용되지 않습니다. 그러나 브라우저가 독점적 인 대안을 지원하는 경우 cssHooks에 대신 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95fde5ca725b070bc532f6b644eadb188d1aba9e" translate="yes" xml:space="preserve">
          <source>If the document's URI contains a fragment identifier, or hash, then the &lt;code&gt;:target&lt;/code&gt; selector will match the element with an ID that matches the identifier. For example, given a document with a URI of https://example.com/#foo, &lt;code&gt;$( &quot;p:target&quot; )&lt;/code&gt; will select the &lt;code&gt;&amp;lt;p id=&quot;foo&quot;&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">문서의 URI에 조각 식별자 또는 해시가 포함 된 경우 &lt;code&gt;:target&lt;/code&gt; 선택기는 요소와 식별자와 일치하는 ID를 일치시킵니다. 예를 들어 URI가 https://example.com/#foo 인 문서에서 &lt;code&gt;$( &quot;p:target&quot; )&lt;/code&gt; 은 &lt;code&gt;&amp;lt;p id=&quot;foo&quot;&amp;gt;&lt;/code&gt; 요소를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c5f65ab7f48ee855a7f29bf67d82a4a9cef3df64" translate="yes" xml:space="preserve">
          <source>If the first argument contains more than one space-separated event types, the event handler is called &lt;em&gt;once for each event type&lt;/em&gt;.</source>
          <target state="translated">첫 번째 인수에 둘 이상의 공백으로 구분 된 이벤트 유형이 포함 된 경우 &lt;em&gt;각 이벤트 유형마다 이벤트&lt;/em&gt; 핸들러가 &lt;em&gt;한 번&lt;/em&gt; 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="324eb4139b24f464ba1deb14fd76275a27cebaf5" translate="yes" xml:space="preserve">
          <source>If the first argument is provided, only the animations in the queue represented by that string will be stopped.</source>
          <target state="translated">첫 번째 인수가 제공되면 해당 문자열이 나타내는 대기열의 애니메이션 만 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="f76268e802fbe39b2a272890d6c8c28f8cfd6576" translate="yes" xml:space="preserve">
          <source>If the id contains characters like periods or colons you have to &lt;a href=&quot;https://learn.jquery.com/using-jquery-core/faq/how-do-i-select-an-element-by-an-id-that-has-characters-used-in-css-notation/&quot;&gt;escape those characters with backslashes&lt;/a&gt;.</source>
          <target state="translated">id에 마침표 나 콜론과 같은 문자가 포함되어 있으면 &lt;a href=&quot;https://learn.jquery.com/using-jquery-core/faq/how-do-i-select-an-element-by-an-id-that-has-characters-used-in-css-notation/&quot;&gt;해당 문자를 백 슬래시&lt;/a&gt; 로 이스케이프해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7fd2595890873077c060a93b00e9916417a06e22" translate="yes" xml:space="preserve">
          <source>If the image cannot be loaded (for example, because it is not present at the supplied URL), the alert is displayed:</source>
          <target state="translated">이미지를로드 할 수없는 경우 (예 : 제공된 URL에없는 이미지) 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="57e3c42650c6bfdf8bd6ccc9410e18108b8a5a8d" translate="yes" xml:space="preserve">
          <source>If the object is undefined or null, then &quot;undefined&quot; or &quot;null&quot; is returned accordingly.</source>
          <target state="translated">객체가 undefined 또는 null 인 경우 &quot;undefined&quot;또는 &quot;null&quot;이 그에 따라 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f722930b4cdd34a274beb0789c10debdca68d84d" translate="yes" xml:space="preserve">
          <source>If the object passed is in an Array, it must be an array of objects in the format returned by &lt;a href=&quot;serializearray&quot;&gt;.serializeArray()&lt;/a&gt;</source>
          <target state="translated">전달 된 객체가 Array에 있으면 &lt;a href=&quot;serializearray&quot;&gt;.serializeArray ()에서&lt;/a&gt; 반환 한 형식의 객체 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="d9bc6c9de573e8aa452dbb8459913aa26e1a533d" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;dataTypes&lt;/code&gt; argument is supplied, the prefilter will be only be applied to requests with the indicated dataTypes. For example, the following only applies the given prefilter to JSON and script requests:</source>
          <target state="translated">선택적 &lt;code&gt;dataTypes&lt;/code&gt; 인수가 제공되면 사전 필터는 표시된 dataTypes를 가진 요청에만 적용됩니다. 예를 들어, 다음은 주어진 프리 필터를 JSON 및 스크립트 요청에만 적용합니다.</target>
        </trans-unit>
        <trans-unit id="6053c8560021416217afb1b788498e7f5aa08f73" translate="yes" xml:space="preserve">
          <source>If the parent has other child elements with the same element name, nothing is matched.</source>
          <target state="translated">부모에 요소 이름이 같은 다른 자식 요소가 있으면 일치하는 항목이 없습니다.</target>
        </trans-unit>
        <trans-unit id="751798212affbc58e8ecaa7df76e7f788a785455" translate="yes" xml:space="preserve">
          <source>If the parent has other child elements, nothing is matched.</source>
          <target state="translated">부모에 다른 자식 요소가 있으면 일치하는 항목이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b53d061765c69adca409964a3650807a86a3b042" translate="yes" xml:space="preserve">
          <source>If the request is successful, the status code functions take the same parameters as the success callback; if it results in an error (including 3xx redirect), they take the same parameters as the &lt;code&gt;error&lt;/code&gt; callback.</source>
          <target state="translated">요청이 성공하면 상태 코드 함수는 성공 콜백과 동일한 매개 변수를 사용합니다. 오류가 발생하면 (3xx 리디렉션 포함) &lt;code&gt;error&lt;/code&gt; 콜백 과 동일한 매개 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ca85ca7ed6f2b72bc7dbaeebb9d91960f9c75846" translate="yes" xml:space="preserve">
          <source>If the selector is not matched or is not supplied, all ancestors will be selected; in these cases it selects the same elements as the &lt;code&gt;.parents()&lt;/code&gt; method does when no selector is provided.</source>
          <target state="translated">선택기가 일치하지 않거나 제공되지 않으면 모든 조상이 선택됩니다. 이 경우 선택기가 제공되지 않을 때 &lt;code&gt;.parents()&lt;/code&gt; 메소드 와 동일한 요소를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="004994e39c154e110bf5a03e59888ce98368676b" translate="yes" xml:space="preserve">
          <source>If the selector is not matched or is not supplied, all following siblings will be selected; in these cases it selects the same elements as the &lt;code&gt;.nextAll()&lt;/code&gt; method does when no filter selector is provided.</source>
          <target state="translated">선택기가 일치하지 않거나 제공되지 않으면 다음의 모든 형제가 선택됩니다. 이 경우 필터 선택기가 제공되지 않을 때 &lt;code&gt;.nextAll()&lt;/code&gt; 메소드 와 동일한 요소를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="290644d9dfe326e1e3334ea562ab608e67eee596" translate="yes" xml:space="preserve">
          <source>If the selector is not matched or is not supplied, all previous siblings will be selected; in these cases it selects the same elements as the &lt;code&gt;&lt;a href=&quot;prevall&quot;&gt;.prevAll()&lt;/a&gt;&lt;/code&gt; method does when no filter selector is provided.</source>
          <target state="translated">선택기가 일치하지 않거나 제공되지 않으면 이전의 모든 형제가 선택됩니다. 이 경우 필터 선택기가 제공되지 않을 때 &lt;code&gt;&lt;a href=&quot;prevall&quot;&gt;.prevAll()&lt;/a&gt;&lt;/code&gt; 메소드 와 동일한 요소를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="585bac3cf89b8d72c6188e141362964ef16cabf0" translate="yes" xml:space="preserve">
          <source>If the server performs HTTP authentication before providing a response, the user name and password pair can be sent via the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; options.</source>
          <target state="translated">응답을 제공하기 전에 서버가 수행하는 HTTP 인증은 사용자 이름과 암호 쌍은 통해 전송 될 수있는 경우 &lt;code&gt;username&lt;/code&gt; 및 &lt;code&gt;password&lt;/code&gt; 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="215cb75803d8e8023a619c9c18a5d9e2266de9b2" translate="yes" xml:space="preserve">
          <source>If the user clicks on an element, drags away from it, and releases the button, this is still counted as a &lt;code&gt;mousedown&lt;/code&gt; event. This sequence of actions is treated as a &quot;canceling&quot; of the button press in most user interfaces, so it is usually better to use the &lt;code&gt;click&lt;/code&gt; event unless we know that the &lt;code&gt;mousedown&lt;/code&gt; event is preferable for a particular situation.</source>
          <target state="translated">사용자가 요소를 클릭하고 다른 요소로 드래그 한 다음 단추를 &lt;code&gt;mousedown&lt;/code&gt; 여전히 마우스 다운 이벤트 로 계산됩니다 . 이러한 일련의 동작은 대부분의 사용자 인터페이스에서 버튼 누름의 &quot;취소&quot;로 취급되므로 특정 상황 에서 &lt;code&gt;mousedown&lt;/code&gt; 이벤트가 바람직 하다는 것을 알지 못하면 일반적으로 &lt;code&gt;click&lt;/code&gt; 이벤트 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0b4eed02f498fd7f0e7bf6cb84cedc4266d09b62" translate="yes" xml:space="preserve">
          <source>If the user clicks outside an element, drags onto it, and releases the button, this is still counted as a &lt;code&gt;mouseup&lt;/code&gt; event. This sequence of actions is not treated as a button press in most user interfaces, so it is usually better to use the &lt;code&gt;click&lt;/code&gt; event unless we know that the &lt;code&gt;mouseup&lt;/code&gt; event is preferable for a particular situation.</source>
          <target state="translated">사용자가 요소 외부를 클릭하고 드래그하여 단추를 &lt;code&gt;mouseup&lt;/code&gt; 여전히 마우스 업 이벤트 로 계산됩니다 . 이러한 일련의 동작은 대부분의 사용자 인터페이스에서 버튼 누름으로 처리되지 않으므로 특정 상황 에서 &lt;code&gt;mouseup&lt;/code&gt; 이벤트가 바람직 하다는 것을 알지 못하면 일반적으로 &lt;code&gt;click&lt;/code&gt; 이벤트 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c2a1f8d8c3b9bb8d8f184b09efedaf1daf673d06" translate="yes" xml:space="preserve">
          <source>If there is more than one target element, however, cloned copies of the inserted element will be created for each target after the first, and that new set (the original element plus clones) is returned.</source>
          <target state="translated">그러나 둘 이상의 대상 요소가있는 경우 첫 번째 이후에 각 대상에 대해 삽입 된 요소의 복제 된 사본이 작성되고 새 세트 (원래 요소 + 복제본)가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5a7e4c1e83aed1b3930722f0d66aa7e5616ab20e" translate="yes" xml:space="preserve">
          <source>If there is more than one target element, however, cloned copies of the inserted element will be created for each target except the last, and that new set (the original element plus clones) is returned.</source>
          <target state="translated">그러나 둘 이상의 대상 요소가있는 경우 마지막을 제외한 각 대상에 대해 삽입 된 요소의 복제 된 사본이 작성되고 새 세트 (원래 요소 + 복제본)가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="8787808293fa05af2e8affadcfd95450a3bf2d50" translate="yes" xml:space="preserve">
          <source>If there is more than one target element, however, cloned copies of the inserted element will be created for each target except the last.</source>
          <target state="translated">그러나 둘 이상의 대상 요소가있는 경우 마지막을 제외한 각 대상에 대해 삽입 된 요소의 복제 된 사본이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="5913f13141a1b15f396f9f4e2a36d612f6fca768" translate="yes" xml:space="preserve">
          <source>If this method is called, the default action of the event will not be triggered.</source>
          <target state="translated">이 메소드를 호출하면 이벤트의 기본 조치가 트리거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f3e2ec105ab7a353f3579c720bcfdd5df6193f9" translate="yes" xml:space="preserve">
          <source>If true, the merge becomes recursive (aka. deep copy). Passing &lt;code&gt;false&lt;/code&gt; for this argument is not supported.</source>
          <target state="translated">참이면 병합이 재귀 적 (일명 딥 카피)이됩니다. 이 인수에 대해 &lt;code&gt;false&lt;/code&gt; 를 전달하는 것은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="75b936e39044adc25a9986e48ff6844145e3ac2d" translate="yes" xml:space="preserve">
          <source>If used without an argument, .die() removes &lt;em&gt;all&lt;/em&gt; event handlers previously attached using &lt;code&gt;.live()&lt;/code&gt; from the elements.</source>
          <target state="translated">인수없이 사용되면 .die ()는 제거 &lt;em&gt;모든&lt;/em&gt; 이벤트 핸들러는 이전에 사용 부착 &lt;code&gt;.live()&lt;/code&gt; 요소로부터.</target>
        </trans-unit>
        <trans-unit id="cf9eeb52aecad2e101bf1aeb299682a772c652b4" translate="yes" xml:space="preserve">
          <source>If we begin at item A, we can find its ancestors:</source>
          <target state="translated">항목 A에서 시작하면 조상을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99c6ee4539e100e93276b49da7e98dec7f1c39f2" translate="yes" xml:space="preserve">
          <source>If we begin at item A, we can find its parents:</source>
          <target state="translated">항목 A에서 시작하면 부모를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b4d9120ffa9c7e00f9e3bbfce8ac082a2dfc6a4" translate="yes" xml:space="preserve">
          <source>If we begin at item A, we can find its positioned ancestor:</source>
          <target state="translated">항목 A에서 시작하면 위치 된 조상을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4012fb1201b5f23319150d87a8dbeb3c716a7954" translate="yes" xml:space="preserve">
          <source>If we begin at item II, we can find list items within it:</source>
          <target state="translated">항목 II에서 시작하면 그 안의 목록 항목을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9870e89d6eb0a3b2d6e730e189ba1a9227203c31" translate="yes" xml:space="preserve">
          <source>If we begin at the level-2 list, we can find its children:</source>
          <target state="translated">레벨 2 목록에서 시작하면 해당 하위 항목을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f5577b86f9eb472a7183d19e7ba3e50e04de7a1" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find its siblings:</source>
          <target state="translated">세 번째 항목부터 시작하면 형제를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ed1bbf6fad4725a8b4a14420edd25b6595ec8b2" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find the element which comes just after it:</source>
          <target state="translated">세 번째 항목에서 시작하면 바로 뒤에 오는 요소를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a49f3c082e2a12e4bdeb8809cedd967999e60ecf" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find the elements which come after it:</source>
          <target state="translated">세 번째 항목부터 시작하면 다음에 나오는 요소를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c80fe02009dd0aad947df32d76ecca7d6b239226" translate="yes" xml:space="preserve">
          <source>If we begin at the third item, we can find the elements which come before it:</source>
          <target state="translated">세 번째 항목부터 시작하면 앞에 오는 요소를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef3c887e1545a45ef8f08a8704c0b7e651ffbec5" translate="yes" xml:space="preserve">
          <source>If we had any number of nested elements inside &lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt;, they would be removed, too.</source>
          <target state="translated">&lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt; 내에 중첩 된 요소가 많으면 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="19d828e697416a5c743df6cb30f665e9fcbb68f4" translate="yes" xml:space="preserve">
          <source>If we had any number of nested elements inside &lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt;, they would be removed, too. Other jQuery constructs such as data or event handlers are erased as well.</source>
          <target state="translated">&lt;code&gt;&amp;lt;div class=&quot;hello&quot;&amp;gt;&lt;/code&gt; 내에 중첩 된 요소가 많으면 제거됩니다. 데이터 또는 이벤트 핸들러와 같은 다른 jQuery 구성도 지워집니다.</target>
        </trans-unit>
        <trans-unit id="911f4bc0b16c3e649ed50fbe1f62d155bfc15c93" translate="yes" xml:space="preserve">
          <source>If we omit the argument, &lt;code&gt;.index()&lt;/code&gt; will return the position of the first element within the set of matched elements in relation to its siblings:</source>
          <target state="translated">인수를 생략하면 &lt;code&gt;.index()&lt;/code&gt; 는 형제와 관련하여 일치하는 요소 집합 내에서 첫 번째 요소의 위치를 ​​반환합니다.</target>
        </trans-unit>
        <trans-unit id="5372f1f4ba9d50e01d6b910310318b2510f41a28" translate="yes" xml:space="preserve">
          <source>If we retrieve one of the three list items (for example, through a DOM function or as the context to an event handler), &lt;code&gt;.index()&lt;/code&gt; can search for this list item within the set of matched elements:</source>
          <target state="translated">세 개의 목록 항목 중 하나를 검색하면 (예 : DOM 함수를 통해 또는 이벤트 핸들러의 컨텍스트로) &lt;code&gt;.index()&lt;/code&gt; 는 일치하는 요소 세트 내에서이 목록 항목을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f7bbbfcd7a21f385ba3781f2e3fff437fc12005" translate="yes" xml:space="preserve">
          <source>If we use a string as the &lt;code&gt;.index()&lt;/code&gt; method's argument, it is interpreted as a jQuery selector string. The first element among the object's matched elements which also matches this selector is located.</source>
          <target state="translated">문자열을 &lt;code&gt;.index()&lt;/code&gt; 메서드의 인수로 사용하면 jQuery 선택기 문자열로 해석됩니다. 이 선택기와 일치하는 객체의 일치하는 요소 중 첫 번째 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="00dc2f91332c649c6921d2235466868be577cdcb" translate="yes" xml:space="preserve">
          <source>If you are creating a Deferred, keep a reference to the Deferred so that it can be resolved or rejected at some point. Return &lt;em&gt;only&lt;/em&gt; the Promise object via &lt;code&gt;deferred.promise()&lt;/code&gt; so other code can register callbacks or inspect the current state.</source>
          <target state="translated">지연을 작성하는 경우 특정 시점에서 해결되거나 거부 될 수 있도록 지연에 대한 참조를 유지하십시오. 다른 코드가 콜백을 등록하거나 현재 상태를 검사 할 수 있도록 &lt;code&gt;deferred.promise()&lt;/code&gt; 를 통해 Promise 객체 &lt;em&gt;만&lt;/em&gt; 반환 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3820d880a925a629e8ccc5bc0f08e2301c0a7685" translate="yes" xml:space="preserve">
          <source>If you called .triggerHandler() on a focus event - the browser's default focus action would not be triggered, only the event handlers bound to the focus event.</source>
          <target state="translated">포커스 이벤트에서 .triggerHandler ()를 호출 한 경우 브라우저의 기본 포커스 동작이 트리거되지 않고 이벤트 핸들러 만 포커스 이벤트에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="dec277cc94e68c28c6f853281e91d776e9ee7249" translate="yes" xml:space="preserve">
          <source>If you don't pass it any arguments at all, &lt;code&gt;jQuery.when()&lt;/code&gt; will return a resolved promise.</source>
          <target state="translated">인수를 전혀 전달하지 않으면 &lt;code&gt;jQuery.when()&lt;/code&gt; 은 해결 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed75025b9282a8dd930010aeb0f25413ea564441" translate="yes" xml:space="preserve">
          <source>If you need the original first array, make a copy of it before calling &lt;code&gt;$.merge()&lt;/code&gt;. Fortunately, &lt;code&gt;$.merge()&lt;/code&gt; itself can be used for this duplication:</source>
          <target state="translated">원래 첫 번째 배열이 필요한 경우 &lt;code&gt;$.merge()&lt;/code&gt; 호출하기 전에 해당 배열을 복사하십시오 . 다행히도 &lt;code&gt;$.merge()&lt;/code&gt; 자체가이 복제에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb8577a17d77c9c21013084798642954a4de2afe" translate="yes" xml:space="preserve">
          <source>If you retrieve the children of the paragraph of the example as follows:</source>
          <target state="translated">다음과 같이 예제 단락의 하위를 검색하는 경우 :</target>
        </trans-unit>
        <trans-unit id="06606cb5712e898802a32fef13c80c73b5d28c5f" translate="yes" xml:space="preserve">
          <source>If you want to remove elements without destroying their data or event handlers (so they can be re-added later), use &lt;a href=&quot;detach&quot;&gt;&lt;code&gt;.detach()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">데이터 또는 이벤트 핸들러를 손상시키지 않고 요소를 제거하려면 (나중에 다시 추가 할 수 있도록 &lt;a href=&quot;detach&quot;&gt; &lt;code&gt;.detach()&lt;/code&gt; &lt;/a&gt; 대신 .detach ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2e3964143dab7f172597463bd73872efe1ce4dcd" translate="yes" xml:space="preserve">
          <source>If you wish to force a crossDomain request (such as JSONP) on the same domain, set the value of crossDomain to &lt;code&gt;true&lt;/code&gt;. This allows, for example, server-side redirection to another domain. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">동일한 도메인에서 crossDomain 요청 (예 : JSONP)을 강제 실행하려면 crossDomain 값을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 이를 통해 예를 들어 다른 도메인으로 서버 측 리디렉션이 가능합니다. (버전 추가 : &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="6ee9c1692e7b0bfda9ad74626e47f006f9a1c4c6" translate="yes" xml:space="preserve">
          <source>If you wish to process a jQuery object &amp;mdash; for example, &lt;code&gt;$('div').map( callback );&lt;/code&gt; &amp;mdash; use &lt;a href=&quot;map&quot;&gt;.map()&lt;/a&gt; instead.</source>
          <target state="translated">jQuery 객체를 처리하려는 경우 &lt;code&gt;$('div').map( callback );&lt;/code&gt; 예 : $ ( 'div'). map (callback); &amp;mdash; 대신 &lt;a href=&quot;map&quot;&gt;.map ()을&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="36c6d226d904e8199ea1bffb26ea26c7df8c5998" translate="yes" xml:space="preserve">
          <source>If you wish to process a plain array or object, use the &lt;a href=&quot;jquery.map&quot;&gt;jQuery.map()&lt;/a&gt; instead.</source>
          <target state="translated">일반 배열이나 객체를 처리하려면 &lt;a href=&quot;jquery.map&quot;&gt;jQuery.map ()을&lt;/a&gt; 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c41e2d016dd648cd720cf19a3eee4903d4812ae" translate="yes" xml:space="preserve">
          <source>If you'd like to prevent forms from being submitted unless a flag variable is set, try:</source>
          <target state="translated">플래그 변수가 설정되지 않은 경우 양식이 제출되지 않게하려면 다음을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="eed9b28367e60b70ac4c8f58dc850614f8d73ee6" translate="yes" xml:space="preserve">
          <source>If you're updating to a newer version of jQuery, be sure to read the release notes published on &lt;a href=&quot;http://blog.jquery.com/&quot;&gt;our blog&lt;/a&gt;. If you're coming from a version prior 1.9, you should check out the &lt;a href=&quot;http://jquery.com/upgrade-guide/1.9/&quot;&gt;1.9 Upgrade Guide&lt;/a&gt; as well.</source>
          <target state="translated">최신 버전의 jQuery로 업데이트하는 경우 &lt;a href=&quot;http://blog.jquery.com/&quot;&gt;블로그에&lt;/a&gt; 게시 된 릴리스 정보를 읽으십시오 . 1.9 이전 버전을 사용하는 경우 &lt;a href=&quot;http://jquery.com/upgrade-guide/1.9/&quot;&gt;1.9 업그레이드 안내서&lt;/a&gt; 도 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2a27ebe2601072f671bf7240fb523d11cef0980" translate="yes" xml:space="preserve">
          <source>If you're updating to a newer version of jQuery, be sure to read the release notes published on &lt;a href=&quot;https://blog.jquery.com/&quot;&gt;our blog&lt;/a&gt;. If you're coming from a version prior 1.9, you should check out the &lt;a href=&quot;https://jquery.com/upgrade-guide/1.9/&quot;&gt;1.9 Upgrade Guide&lt;/a&gt; as well.</source>
          <target state="translated">최신 버전의 jQuery로 업데이트하는 경우 &lt;a href=&quot;https://blog.jquery.com/&quot;&gt;블로그에&lt;/a&gt; 게시 된 릴리스 노트를 읽어보십시오 . 1.9 이전 버전에서 오는 경우 &lt;a href=&quot;https://jquery.com/upgrade-guide/1.9/&quot;&gt;1.9 업그레이드 가이드&lt;/a&gt; 도 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="15a801cb61ff0e03eec1129f4aaf18554bec40a6" translate="yes" xml:space="preserve">
          <source>Implements a simple event delegation: The click handler is added to an unordered list, and the children of its li children are hidden. Clicking one of the li children toggles (see toggle()) their children.</source>
          <target state="translated">간단한 이벤트 위임을 구현합니다. 클릭 핸들러가 정렬되지 않은 목록에 추가되고 li 하위의 하위는 숨겨집니다. li 하위 중 하나를 클릭하면 해당 하위를 토글합니다 (toggle () 참조).</target>
        </trans-unit>
        <trans-unit id="c55f548616e1bdf2313ac81e3a00859473385f2b" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;jQuery 1.3.x&lt;/b&gt; only the following JavaScript events could be bound: &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;dblclick&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;keyup&lt;/code&gt;, &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;mousemove&lt;/code&gt;, &lt;code&gt;mouseout&lt;/code&gt;, &lt;code&gt;mouseover&lt;/code&gt;, and &lt;code&gt;mouseup&lt;/code&gt;.</source>
          <target state="translated">&lt;b&gt;jQuery 1.3.x&lt;/b&gt; 에서는 &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;dblclick&lt;/code&gt; , &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keypress&lt;/code&gt; , &lt;code&gt;keyup&lt;/code&gt; , &lt;code&gt;mousedown&lt;/code&gt; , &lt;code&gt;mousemove&lt;/code&gt; , &lt;code&gt;mouseout&lt;/code&gt; , &lt;code&gt;mouseover&lt;/code&gt; 및 &lt;code&gt;mouseup&lt;/code&gt; 과 같은 JavaScript 이벤트 만 바인딩 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc25b4a7a27326e06b5fd2ad1349c059d2bc75b1" translate="yes" xml:space="preserve">
          <source>In API calls that return &lt;code&gt;jQuery&lt;/code&gt;, the value returned will be the original jQuery object unless otherwise documented by that API. API methods such as &lt;code&gt;.filter()&lt;/code&gt; or &lt;code&gt;.not()&lt;/code&gt; modify their incoming set and thus return a new jQuery object.</source>
          <target state="translated">&lt;code&gt;jQuery&lt;/code&gt; 를 반환하는 API 호출에서 반환 된 값은 해당 API에서 달리 문서화하지 않는 한 원래 jQuery 객체입니다. 같은 API 방식 &lt;code&gt;.filter()&lt;/code&gt; 또는 &lt;code&gt;.not()&lt;/code&gt; 자신의 수신 설정을 수정하고, 따라서 새로운의 jQuery 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f86a079769131d7a257bdbdd2d3a79573d13b84c" translate="yes" xml:space="preserve">
          <source>In HTML, the root of the document, and thus the element that &lt;code&gt;$(&quot;:root&quot;)&lt;/code&gt; selects, is always the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">HTML에서 문서의 루트와 &lt;code&gt;$(&quot;:root&quot;)&lt;/code&gt; 가 선택 하는 요소 는 항상 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 요소입니다.</target>
        </trans-unit>
        <trans-unit id="90b0a7b51c285f152dab2b7964b8c859531963d7" translate="yes" xml:space="preserve">
          <source>In Internet Explorer prior to version 9, using &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; to set a DOM element property to anything other than a simple primitive value (number, string, or boolean) can cause memory leaks if the property is not removed (using &lt;a href=&quot;removeprop&quot;&gt;&lt;code&gt;.removeProp()&lt;/code&gt;&lt;/a&gt;) before the DOM element is removed from the document. To safely set values on DOM objects without memory leaks, use &lt;a href=&quot;data&quot;&gt;&lt;code&gt;.data()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버전 9 이전의 Internet Explorer에서 &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; 를 사용하여 DOM 요소 특성을 단순한 기본 값 (숫자, 문자열 또는 부울) 이외의 값으로 설정하면 특성이 제거되지 않으면 ( &lt;a href=&quot;removeprop&quot;&gt; &lt;code&gt;.removeProp()&lt;/code&gt; &lt;/a&gt; ) 문서에서 DOM 요소를 제거하기 전에 메모리 누수없이 DOM 객체에 값을 안전하게 설정하려면 &lt;a href=&quot;data&quot;&gt; &lt;code&gt;.data()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f939c8b82794880f504f6aa30d38ebf5c4931f87" translate="yes" xml:space="preserve">
          <source>In JavaScript it is common to invoke functions that optionally accept callbacks that are called within that function. For example, in versions prior to jQuery 1.5, asynchronous processes such as &lt;code&gt;jQuery.ajax()&lt;/code&gt; accept callbacks to be invoked some time in the near-future upon success, error, and completion of the ajax request.</source>
          <target state="translated">JavaScript에서는 해당 함수 내에서 호출되는 콜백을 선택적으로 수락하는 함수를 호출하는 것이 일반적입니다. 예를 들어, jQuery 1.5 이전의 버전에서 &lt;code&gt;jQuery.ajax()&lt;/code&gt; 와 같은 비동기 프로세스 는 성공, 오류 및 ajax 요청 완료시 가까운 시일 내에 호출 될 콜백을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="686c39bdf330ce95b8dce6e0ee04b4f1f76e6431" translate="yes" xml:space="preserve">
          <source>In JavaScript, all variables defined inside a function are only visible inside that function scope. Consider the following example:</source>
          <target state="translated">JavaScript에서 함수 내에 정의 된 모든 변수는 해당 함수 범위 내에서만 볼 수 있습니다. 다음 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="047bd61bb9c90687b66ca8ed469784619a48e5af" translate="yes" xml:space="preserve">
          <source>In JavaScript, the variable &quot;this&quot; always refers to the current context. By default, &quot;this&quot; refers to the window object. Within a function this context can change, depending on how the function is called.</source>
          <target state="translated">JavaScript에서 &quot;this&quot;변수는 항상 현재 컨텍스트를 나타냅니다. 기본적으로 &quot;this&quot;는 창 개체를 나타냅니다. 함수 내에서이 컨텍스트는 함수 호출 방법에 따라 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="256edb59b1c2c6b0952e7eaa1150e0d8aa62123f" translate="yes" xml:space="preserve">
          <source>In addition to keeping any additional handlers on an element from being executed, this method also stops the bubbling by implicitly calling &lt;code&gt;event.stopPropagation()&lt;/code&gt;. To simply prevent the event from bubbling to ancestor elements but allow other event handlers to execute on the same element, we can use &lt;code&gt;&lt;a href=&quot;event.stoppropagation&quot;&gt;event.stopPropagation()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">이 메소드는 요소에 대한 추가 핸들러가 실행되지 않도록하는 것 외에도 &lt;code&gt;event.stopPropagation()&lt;/code&gt; 을 암시 적으로 호출하여 버블 링을 중지합니다 . 이벤트가 &lt;code&gt;&lt;a href=&quot;event.stoppropagation&quot;&gt;event.stopPropagation()&lt;/a&gt;&lt;/code&gt; 요소로 버블 링되지 않도록하고 다른 이벤트 핸들러가 동일한 요소에서 실행되도록하기 위해 대신 event.stopPropagation ()을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b85e251b79384759a0dadd805240a05ae01fa83f" translate="yes" xml:space="preserve">
          <source>In addition to numeric values, each property can take the strings &lt;code&gt;'show'&lt;/code&gt;, &lt;code&gt;'hide'&lt;/code&gt;, and &lt;code&gt;'toggle'&lt;/code&gt;. These shortcuts allow for custom hiding and showing animations that take into account the display type of the element. In order to use jQuery's built-in toggle state tracking, the &lt;code&gt;'toggle'&lt;/code&gt; keyword must be consistently given as the value of the property being animated.</source>
          <target state="translated">숫자 값 외에도 각 속성은 &lt;code&gt;'show'&lt;/code&gt; , &lt;code&gt;'hide'&lt;/code&gt; 및 &lt;code&gt;'toggle'&lt;/code&gt; 문자열을 사용할 수 있습니다 . 이 단축키를 사용하면 요소의 표시 유형을 고려한 애니메이션을 사용자 지정 숨기거나 표시 할 수 있습니다. jQuery의 내장 토글 상태 추적을 사용하려면 애니메이션 속성의 값으로 &lt;code&gt;'toggle'&lt;/code&gt; 키워드를 일관되게 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="26f440de122807a7eb84ac76aa1a92b09284db79" translate="yes" xml:space="preserve">
          <source>In addition to providing fine-grained control over how specific style properties are handled, &lt;code&gt;$.cssHooks&lt;/code&gt; also extends the set of properties available to the &lt;code&gt;.animate()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;$.cssHooks&lt;/code&gt; 는 특정 스타일 속성을 처리하는 방법을 세밀하게 제어 할 수 있을 뿐만 아니라 &lt;code&gt;.animate()&lt;/code&gt; 메서드 에서 사용할 수있는 속성 집합을 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="62204ad9c661e7fa91ab538c00b37854a51f0ad3" translate="yes" xml:space="preserve">
          <source>In addition to style properties, some non-style properties such as &lt;code&gt;scrollTop&lt;/code&gt; and &lt;code&gt;scrollLeft&lt;/code&gt;, as well as custom properties, can be animated.</source>
          <target state="translated">스타일 속성 외에도 &lt;code&gt;scrollTop&lt;/code&gt; 및 &lt;code&gt;scrollLeft&lt;/code&gt; 와 같은 일부 비스타 일 속성과 사용자 정의 속성을 애니메이션으로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2aa050be0f2f82522fdba0712355b2ca63f6fb0" translate="yes" xml:space="preserve">
          <source>In addition to their ability to handle events on descendant elements not yet created, another advantage of delegated event handlers is their potential for much lower overhead when many elements must be monitored. On a data table with 1,000 rows in its &lt;code&gt;tbody&lt;/code&gt;, this example attaches a handler to 1,000 elements:</source>
          <target state="translated">아직 생성되지 않은 하위 요소에 대한 이벤트를 처리하는 기능 외에도 위임 된 이벤트 처리기의 또 다른 장점은 많은 요소를 모니터링해야 할 때 훨씬 더 낮은 오버 헤드가 발생할 수 있다는 것입니다. &lt;code&gt;tbody&lt;/code&gt; 에 1,000 개의 행이있는 데이터 테이블 에서이 예제는 처리기를 1,000 개의 요소에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="9c504a12dac5d841b49101cb81d45e400c9ede90" translate="yes" xml:space="preserve">
          <source>In addition to their ability to handle events on descendant elements not yet created, another advantage of delegated events is their potential for much lower overhead when many elements must be monitored. On a data table with 1,000 rows in its &lt;code&gt;tbody&lt;/code&gt;, this example attaches a handler to 1,000 elements:</source>
          <target state="translated">아직 생성되지 않은 하위 요소의 이벤트를 처리하는 기능 외에도 위임 된 이벤트의 또 다른 장점은 많은 요소를 모니터링해야 할 때 오버 헤드가 훨씬 낮아질 수 있다는 것입니다. &lt;code&gt;tbody&lt;/code&gt; 에 1,000 개의 행이있는 데이터 테이블 에서이 예제는 1,000 개의 요소에 핸들러를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="e9c75d2754230691bf946777916346c3689eb636" translate="yes" xml:space="preserve">
          <source>In addition, the default &lt;code&gt;select&lt;/code&gt; action on the field will be fired, so the entire text field will be selected.</source>
          <target state="translated">또한 필드 에서 기본 &lt;code&gt;select&lt;/code&gt; 작업이 시작되므로 전체 텍스트 필드가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="d10575558539578c331579dfa3c05aeffedeaae7" translate="yes" xml:space="preserve">
          <source>In all browsers, the &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;scroll&lt;/code&gt;, and &lt;code&gt;error&lt;/code&gt; events (e.g., on an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element) do not bubble. In Internet Explorer 8 and lower, the &lt;code&gt;paste&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; events do not bubble. Such events are not supported for use with delegation, but they &lt;em&gt;can&lt;/em&gt; be used when the event handler is directly attached to the element generating the event.</source>
          <target state="translated">모든 브라우저에서 &lt;code&gt;load&lt;/code&gt; , &lt;code&gt;scroll&lt;/code&gt; 및 &lt;code&gt;error&lt;/code&gt; 이벤트 (예 : &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 요소)는 버블 링되지 않습니다. Internet Explorer 8 이하에서는 &lt;code&gt;paste&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 이벤트가 버블 링되지 않습니다. 이러한 이벤트는 위임과 함께 사용하도록 지원되지 않지만 이벤트 처리기가 이벤트를 생성하는 요소에 직접 연결되어있는 경우 사용할 &lt;em&gt;수&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cab16519ad45f2303f3431bde5b7704cd8eb4fa" translate="yes" xml:space="preserve">
          <source>In an HTML document, &lt;code&gt;.html()&lt;/code&gt; can be used to get the contents of any element. If the selector expression matches more than one element, only the first match will have its HTML content returned. Consider this code:</source>
          <target state="translated">HTML 문서에서 &lt;code&gt;.html()&lt;/code&gt; 을 사용하여 모든 요소의 내용을 가져올 수 있습니다. 선택자 표현식이 둘 이상의 요소와 일치하면 첫 번째 일치 항목 만 HTML 컨텐츠를 리턴합니다. 이 코드를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="cd04b58d4ecb7b9363da2e9577e7ef03ec1f1fda" translate="yes" xml:space="preserve">
          <source>In general, it is not necessary to wait for all images to be fully loaded. If code can be executed earlier, it is usually best to place it in a handler sent to the &lt;code&gt;.ready()&lt;/code&gt; method.</source>
          <target state="translated">일반적으로 모든 이미지가 완전히로드 될 때까지 기다릴 필요는 없습니다. 코드를 더 일찍 실행할 수있는 경우 일반적으로 &lt;code&gt;.ready()&lt;/code&gt; 메서드로 전송 된 처리기에 배치하는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d33f0aaf3828bdcb50934cc02da424dd0c4363f5" translate="yes" xml:space="preserve">
          <source>In jQuery 1.4, HTML5 input elements are also serialized.</source>
          <target state="translated">jQuery 1.4에서 HTML5 입력 요소도 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="b9c44ed5033d671be098fb144d5a736988fe1961" translate="yes" xml:space="preserve">
          <source>In jQuery 1.4.3 setting an element's data object with &lt;code&gt;.data(obj)&lt;/code&gt; extends the data previously stored with that element.</source>
          <target state="translated">jQuery 1.4.3에서 &lt;code&gt;.data(obj)&lt;/code&gt; 로 요소의 데이터 객체를 설정하면 이전에 해당 요소와 함께 저장된 데이터가 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="4d960d44554ebb4ea8cd004ed4d3c9582c34ecbb" translate="yes" xml:space="preserve">
          <source>In jQuery 1.4.3 you can now pass in &lt;code&gt;false&lt;/code&gt; in place of an event handler. This will bind an event handler equivalent to: &lt;code&gt;function(){ return false; }&lt;/code&gt;. This function can be removed at a later time by calling: &lt;code&gt;.unbind( eventName, false )&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.4.3에서는 이제 이벤트 핸들러 대신 &lt;code&gt;false&lt;/code&gt; 를 전달할 수 있습니다 . 이것은 다음과 같은 이벤트 핸들러를 바인딩합니다 : &lt;code&gt;function(){ return false; }&lt;/code&gt; . 이 함수는 나중에 &lt;code&gt;.unbind( eventName, false )&lt;/code&gt; 를 호출하여 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19e692aa156c0019a291e99a6a8d2bb7ededd9dc" translate="yes" xml:space="preserve">
          <source>In most cases where a jQuery API call returns a Deferred or Promise-compatible object, such as &lt;a href=&quot;jquery.ajax&quot;&gt;&lt;code&gt;jQuery.ajax()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jquery.when&quot;&gt;&lt;code&gt;jQuery.when()&lt;/code&gt;&lt;/a&gt;, you will only want to use the &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;deferred.done()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;deferred.fail()&lt;/code&gt;&lt;/a&gt; methods to add callbacks to the Deferred's queues. The internals of the API call or code that created the Deferred will invoke &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;deferred.resolve()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;deferred.reject()&lt;/code&gt;&lt;/a&gt; on the deferred at some point, causing the appropriate callbacks to run.</source>
          <target state="translated">같은 jQuery를 API 호출은 이연 또는 약속 호환 개체를 반환 대부분의 경우에서 &lt;a href=&quot;jquery.ajax&quot;&gt; &lt;code&gt;jQuery.ajax()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;jquery.when&quot;&gt; &lt;code&gt;jQuery.when()&lt;/code&gt; &lt;/a&gt; , 당신은 단지 사용하기를 원할 것입니다 &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;deferred.done()&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;deferred.fail()&lt;/code&gt; &lt;/a&gt; 메서드는의 이연 큐에 콜백을 추가 할 수 있습니다. Deferred를 생성 한 API 호출 또는 코드의 내부는 어느 시점에서 지연된 지연에서 &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;deferred.resolve()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;deferred.reject()&lt;/code&gt; &lt;/a&gt; 를 호출하여 적절한 콜백을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d0a2331f4adc2b5d5e552bf687f2ce2aefba3477" translate="yes" xml:space="preserve">
          <source>In most cases, an event such as &lt;code&gt;click&lt;/code&gt; occurs infrequently and performance is not a significant concern. However, high frequency events such as &lt;code&gt;mousemove&lt;/code&gt; or &lt;code&gt;scroll&lt;/code&gt; can fire dozens of times per second, and in those cases it becomes more important to use events judiciously. Performance can be increased by reducing the amount of work done in the handler itself, caching information needed by the handler rather than recalculating it, or by rate-limiting the number of actual page updates using &lt;code&gt;setTimeout&lt;/code&gt;.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;click&lt;/code&gt; 과 같은 이벤트 는 드물게 발생하며 성능은 크게 중요하지 않습니다. 그러나 &lt;code&gt;mousemove&lt;/code&gt; 또는 &lt;code&gt;scroll&lt;/code&gt; 과 같은 높은 빈도의 이벤트 는 초당 수십 번 발생할 수 있으므로 이러한 경우 이벤트를 신중하게 사용하는 것이 더 중요합니다. 처리기 자체에서 수행되는 작업량을 줄이거 나 처리기를 다시 계산하지 않고 처리기에서 필요한 정보를 캐싱하거나 &lt;code&gt;setTimeout&lt;/code&gt; 을 사용하여 실제 페이지 업데이트 수를 속도 제한하여 성능을 향상시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="022896c09fc44d201ee28c6ff1e2fe7872fff487" translate="yes" xml:space="preserve">
          <source>In order for the following &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;'s content to be retrieved, it would have to be the first one with &lt;code&gt;class=&quot;demo-container&quot;&lt;/code&gt; in the document:</source>
          <target state="translated">다음 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 의 컨텐츠를 검색 하려면 문서에서 &lt;code&gt;class=&quot;demo-container&quot;&lt;/code&gt; 가있는 첫 번째 컨텐츠 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="b2e64d7d79a08dbc41ad3fd5affb885a441051e2" translate="yes" xml:space="preserve">
          <source>In other words, explicitly calling &lt;code&gt;.off()&lt;/code&gt; from within a regularly-bound handler has exactly the same effect.</source>
          <target state="translated">다시 말해서, 규칙적으로 바인딩 된 핸들러 내에서 명시 적으로 &lt;code&gt;.off()&lt;/code&gt; 를 호출 하면 정확히 같은 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="db094bc071e20c3da110ba9ed5253d3af08c2777" translate="yes" xml:space="preserve">
          <source>In particular, note that the &lt;em&gt;0-based indexing&lt;/em&gt; means that, counter-intuitively, &lt;code&gt;:even&lt;/code&gt; selects the first element, third element, and so on within the matched set.</source>
          <target state="translated">특히, &lt;em&gt;0 기반 색인&lt;/em&gt; 은 반 직관적으로 &lt;code&gt;:even&lt;/code&gt; 짝 지음 집합 내에서 첫 번째 요소, 세 번째 요소 등을 선택 한다는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="cb71fdee8ce1556cf1afb32ab05473f4f6aa0db6" translate="yes" xml:space="preserve">
          <source>In particular, note that the &lt;em&gt;0-based indexing&lt;/em&gt; means that, counter-intuitively, &lt;code&gt;:odd&lt;/code&gt; selects the second element, fourth element, and so on within the matched set.</source>
          <target state="translated">특히, &lt;em&gt;0 기반 색인&lt;/em&gt; 은 반 직관적으로 &lt;code&gt;:odd&lt;/code&gt; 가 일치하는 세트 내에서 두 번째 요소, 네 번째 요소 등을 선택 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="a3c9da35edc3cc5d6ea9065ba771ec075c9db257" translate="yes" xml:space="preserve">
          <source>In requests with &lt;code&gt;dataType: &quot;json&quot;&lt;/code&gt; or &lt;code&gt;dataType: &quot;jsonp&quot;&lt;/code&gt;, if the string contains a double question mark (&lt;code&gt;??&lt;/code&gt;) anywhere in the URL or a single question mark (&lt;code&gt;?&lt;/code&gt;) in the query string, it is replaced with a value generated by jQuery that is unique for each copy of the library on the page (e.g. &lt;code&gt;jQuery21406515378922229067_1479880736745&lt;/code&gt;).</source>
          <target state="translated">와 요청에 &lt;code&gt;dataType: &quot;json&quot;&lt;/code&gt; 나 &lt;code&gt;dataType: &quot;jsonp&quot;&lt;/code&gt; 문자열이 이중 물음표 (포함 된 경우, &lt;code&gt;??&lt;/code&gt; (어디서나 URL 또는 단일 물음표) &lt;code&gt;?&lt;/code&gt; ) 쿼리 문자열에서, 그것은 값으로 대체됩니다 페이지에있는 라이브러리의 각 사본에 대해 고유 한 jQuery에 의해 생성됩니다 (예 : &lt;code&gt;jQuery21406515378922229067_1479880736745&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd522f754a0a197915f75d29b1bc0fbb8bfef608" translate="yes" xml:space="preserve">
          <source>In response to a successful request, the function's arguments are the same as those of &lt;code&gt;.done()&lt;/code&gt;: data, textStatus, and the jqXHR object. For failed requests the arguments are the same as those of &lt;code&gt;.fail()&lt;/code&gt;: the jqXHR object, textStatus, and errorThrown. Refer to &lt;code&gt;&lt;a href=&quot;deferred.always&quot;&gt;deferred.always()&lt;/a&gt;&lt;/code&gt; for implementation details.</source>
          <target state="translated">요청이 성공적으로 수행되면 함수의 인수는 &lt;code&gt;.done()&lt;/code&gt; 의 인수와 동일 합니다 . data, textStatus 및 jqXHR 객체입니다. 실패한 요청의 인수는 jqXHR 객체, textStatus 및 errorThrown과 같은 &lt;code&gt;.fail()&lt;/code&gt; 의 인수와 동일 합니다. 구현에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;deferred.always&quot;&gt;deferred.always()&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="54b28d185b71b0e3cb261df3840cdba7e56abded" translate="yes" xml:space="preserve">
          <source>In the case where multiple Deferred objects are passed to &lt;code&gt;jQuery.when()&lt;/code&gt;, the method returns the Promise from a new &quot;master&quot; Deferred object that tracks the aggregate state of all the Deferreds it has been passed. The method will resolve its master Deferred as soon as all the Deferreds resolve, or reject the master Deferred as soon as one of the Deferreds is rejected. If the master Deferred is resolved, the doneCallbacks for the master Deferred are executed. The arguments passed to the doneCallbacks provide the resolved values for each of the Deferreds, and matches the order the Deferreds were passed to &lt;code&gt;jQuery.when()&lt;/code&gt;. For example:</source>
          <target state="translated">여러 Deferred 객체가 &lt;code&gt;jQuery.when()&lt;/code&gt; 전달되는 경우이 메서드는 전달 된 모든 Deferred의 집계 상태를 추적하는 새로운 &quot;마스터&quot;Deferred 객체에서 Promise를 반환합니다. 이 방법은 모든 지연이 해결 되 자마자 마스터 지연을 해결하거나 지연 중 하나가 거부 되 자마자 지연된 마스터를 거부합니다. 마스터 지연이 해결되면 마스터 지연에 대한 doneCallback이 실행됩니다. doneCallbacks에 전달 된 인수는 각 지연에 대해 해결 된 값을 제공하고 지연이 &lt;code&gt;jQuery.when()&lt;/code&gt; 전달 된 순서와 일치합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="34ac399b3ebafe5d2cefbb444a050714ccd84b64" translate="yes" xml:space="preserve">
          <source>In the code above, &lt;code&gt;handler2&lt;/code&gt; will be executed anyway the first time even if it's removed using &lt;a href=&quot;off&quot;&gt;&lt;code&gt;.off()&lt;/code&gt;&lt;/a&gt;. However, the handler will not be executed the following times the &lt;code&gt;click&lt;/code&gt; event is triggered.</source>
          <target state="translated">위의 코드에서 &lt;code&gt;handler2&lt;/code&gt; 는 &lt;a href=&quot;off&quot;&gt; &lt;code&gt;.off()&lt;/code&gt; &lt;/a&gt; 사용하여 제거하더라도 처음 실행됩니다 . 그러나 다음 번 &lt;code&gt;click&lt;/code&gt; 이벤트가 트리거 되면 핸들러가 실행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7608f442c24912b37c2af38a9841627ef4939aef" translate="yes" xml:space="preserve">
          <source>In the event a Deferred was resolved with no value, the corresponding doneCallback argument will be undefined. If a Deferred resolved to a single value, the corresponding argument will hold that value. In the case where a Deferred resolved to multiple values, the corresponding argument will be an array of those values. For example:</source>
          <target state="translated">Deferred가 값없이 해결 된 경우 해당 doneCallback 인수는 정의되지 않습니다. 지연이 단일 값으로 해석되면 해당 인수는 해당 값을 보유합니다. Deferred가 여러 값으로 해석되는 경우 해당 인수는 해당 값의 배열입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="003a335871d55cb3bfbdbcda7292af8c31c862a7" translate="yes" xml:space="preserve">
          <source>In the example above the alert could be displayed twice due to the &lt;em&gt;two&lt;/em&gt; event types (&lt;code&gt;click&lt;/code&gt; and &lt;code&gt;mouseover&lt;/code&gt;).</source>
          <target state="translated">위의 예에서 &lt;em&gt;두 가지&lt;/em&gt; 이벤트 유형 ( &lt;code&gt;click&lt;/code&gt; 및 &lt;code&gt;mouseover&lt;/code&gt; ) 으로 인해 경고가 두 번 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="158b033fedda8d5eeb74763fdf403e5a800ad317" translate="yes" xml:space="preserve">
          <source>In the first formulation listed above, &lt;code&gt;jQuery()&lt;/code&gt; &amp;mdash; which can also be written as &lt;code&gt;$()&lt;/code&gt; &amp;mdash; searches through the DOM for any elements that match the provided selector and creates a new jQuery object that references these elements:</source>
          <target state="translated">위에 나열된 첫 번째 공식 에서 &lt;code&gt;$()&lt;/code&gt; 로도 쓸 수있는 &lt;code&gt;jQuery()&lt;/code&gt; 는 DOM을 통해 제공된 선택기와 일치하는 요소를 검색하고 이러한 요소를 참조하는 새 jQuery 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b92f2e6fbb0ab5c85244a5eb650169ddb2f9e7c8" translate="yes" xml:space="preserve">
          <source>In the jQuery API you'll often find the notation of Array&amp;lt;Type&amp;gt;:</source>
          <target state="translated">jQuery API에서 종종 Array &amp;lt;Type&amp;gt; 표기법을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74599d3563687c123a40757f250c2d32007c9773" translate="yes" xml:space="preserve">
          <source>In the multiple-Deferreds case where one of the Deferreds is rejected, &lt;code&gt;jQuery.when()&lt;/code&gt; immediately fires the failCallbacks for its master Deferred. Note that some of the Deferreds may still be unresolved at that point. The arguments passed to the failCallbacks match the signature of the failCallback for the Deferred that was rejected. If you need to perform additional processing for this case, such as canceling any unfinished Ajax requests, you can keep references to the underlying jqXHR objects in a closure and inspect/cancel them in the failCallback.</source>
          <target state="translated">지연 중 하나가 거부되는 다중 지연된 경우 &lt;code&gt;jQuery.when()&lt;/code&gt; 즉시 마스터 지연에 대한 failCallbacks를 실행합니다. 이 시점에서 일부 지연이 여전히 해결되지 않을 수 있습니다. failCallbacks에 전달 된 인수는 거부 된 지연에 대한 failCallback의 서명과 일치합니다. 완료되지 않은 Ajax 요청 취소와 같이이 경우 추가 처리를 수행해야하는 경우 클로저에서 기본 jqXHR 오브젝트에 대한 참조를 유지하고 failCallback에서이를 검사 / 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="073b34c6994588f2071a904c50032ed28a98de0e" translate="yes" xml:space="preserve">
          <source>In the second form of &lt;code&gt;.on()&lt;/code&gt;, the &lt;code&gt;events&lt;/code&gt; argument is a plain object. The keys are strings in the same form as the &lt;code&gt;events&lt;/code&gt; argument with space-separated event type names and optional namespaces. The value for each key is a function (or &lt;code&gt;false&lt;/code&gt; value) that is used as the &lt;code&gt;handler&lt;/code&gt; instead of the final argument to the method. In other respects, the two forms are identical in their behavior as described below.</source>
          <target state="translated">&lt;code&gt;.on()&lt;/code&gt; 의 두 번째 형식 에서 &lt;code&gt;events&lt;/code&gt; 인수는 일반 객체입니다. 키는 공백으로 구분 된 이벤트 유형 이름 및 선택적 네임 스페이스가 있는 &lt;code&gt;events&lt;/code&gt; 인수와 동일한 형식의 문자열입니다 . 각 키의 값 은 메소드의 최종 인수 대신 &lt;code&gt;handler&lt;/code&gt; 로 사용되는 함수 (또는 &lt;code&gt;false&lt;/code&gt; 값)입니다 . 다른 측면에서, 두 형태는 아래에 기술 된 바와 같이 그들의 행동에서 동일하다.</target>
        </trans-unit>
        <trans-unit id="045a105119183e0d63b51b5acb27c67f0294a5cb" translate="yes" xml:space="preserve">
          <source>In the second version of &lt;code&gt;.animate()&lt;/code&gt;, the options object can include the &lt;code&gt;specialEasing&lt;/code&gt; property, which is itself an object of CSS properties and their corresponding easing functions. For example, to simultaneously animate the width using the &lt;code&gt;linear&lt;/code&gt; easing function and the height using the &lt;code&gt;easeOutBounce&lt;/code&gt; easing function:</source>
          <target state="translated">&lt;code&gt;.animate()&lt;/code&gt; 의 두 번째 버전 에서 옵션 객체에는 &lt;code&gt;specialEasing&lt;/code&gt; 속성이 포함될 수 있습니다.이 속성은 CSS 속성과 해당 여유 함수의 객체입니다. 예를 들어, &lt;code&gt;linear&lt;/code&gt; 여유 함수를 사용하여 너비 와 &lt;code&gt;easeOutBounce&lt;/code&gt; 여유 함수를 사용하여 높이 에 동시에 애니메이션을 적용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6646018b14d1a79747d2a12cfe072a12bbd46392" translate="yes" xml:space="preserve">
          <source>In the two examples above, if the current document does not contain an element with an ID of &quot;result,&quot; the &lt;code&gt;.load()&lt;/code&gt; method is not executed.</source>
          <target state="translated">위의 두 예제에서 현재 문서에 ID가 &quot;result&quot;인 요소가 없으면 &lt;code&gt;.load()&lt;/code&gt; 메소드가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83c70ec55e1ce30ad8181ce7bec16a26822c9ce7" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;&quot;x defaulted to false&quot;&lt;/code&gt; is printed.</source>
          <target state="translated">이 경우 &lt;code&gt;&quot;x defaulted to false&quot;&lt;/code&gt; 가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="bc5b0f95b72b479fd473e456c7e9a2db5365c5df" translate="yes" xml:space="preserve">
          <source>In this case, jQuery serializes the successful controls within the form. Only &lt;code&gt;form&lt;/code&gt; elements are examined for inputs they contain, in all other cases the input elements to be serialized should be part of the set passed to the &lt;code&gt;.serialize()&lt;/code&gt; method. Selecting both the form and its children in a set will cause duplicates in the serialized string.</source>
          <target state="translated">이 경우 jQuery는 양식 내에서 성공적인 제어를 직렬화합니다. &lt;code&gt;form&lt;/code&gt; 요소 만 포함 된 입력에 대해 검사되며, 다른 모든 경우 직렬화 할 입력 요소는 &lt;code&gt;.serialize()&lt;/code&gt; 메소드에 전달 된 세트의 일부 여야합니다 . 세트에서 양식과 해당 하위를 모두 선택하면 직렬화 된 문자열에 중복이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8e32605075d07df7746bc5df2c037ecc4cec50d9" translate="yes" xml:space="preserve">
          <source>Incorporates the functionality of the &lt;code&gt;.done()&lt;/code&gt; and &lt;code&gt;.fail()&lt;/code&gt; methods, allowing (as of jQuery 1.8) the underlying Promise to be manipulated. Refer to &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt; for implementation details.</source>
          <target state="translated">jQuery 1.8부터 기본 Promise를 조작 할 수 있도록 &lt;code&gt;.done()&lt;/code&gt; 및 &lt;code&gt;.fail()&lt;/code&gt; 메소드 의 기능을 통합합니다 . 구현에 대한 자세한 내용 은 &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="08fe68c2196ab74c49fb9fafa6248aa7d8d54a15" translate="yes" xml:space="preserve">
          <source>Increase the size of a div when you click it.</source>
          <target state="translated">div를 클릭하면 크기가 커집니다.</target>
        </trans-unit>
        <trans-unit id="8c573d89c56832144e82dc0c65822e76ab9d85d5" translate="yes" xml:space="preserve">
          <source>Increase the width of #box by 200 pixels the first time it is clicked.</source>
          <target state="translated">처음 클릭 할 때 #box의 너비를 200 픽셀 씩 늘리십시오.</target>
        </trans-unit>
        <trans-unit id="549a7b530fa5380410a0ff2cb671afdc9647db3c" translate="yes" xml:space="preserve">
          <source>Index: 1</source>
          <target state="translated">색인 : 1</target>
        </trans-unit>
        <trans-unit id="ed0cff7ba7150622b417350187a4e715481bdeb8" translate="yes" xml:space="preserve">
          <source>Indicates whether the META key was pressed when the event fired.</source>
          <target state="translated">이벤트가 발생했을 때 META 키를 눌렀는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9be8e7cd55549531f2184f9b8714999ee341194a" translate="yes" xml:space="preserve">
          <source>Indicates whether the ready hold is being requested or released</source>
          <target state="translated">준비 보류가 요청되는지 또는 해제되는지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="df6bbdbc65c3e880772dec699d1dbf3e558b84df" translate="yes" xml:space="preserve">
          <source>Inner</source>
          <target state="translated">Inner</target>
        </trans-unit>
        <trans-unit id="cf0b3350bf25e8116c205102031c9af9b7c62dfb" translate="yes" xml:space="preserve">
          <source>Insert all paragraphs after an element with id of &quot;foo&quot;. Same as $( &quot;#foo&quot; ).after( &quot;p&quot; )</source>
          <target state="translated">id가 &quot;foo&quot;인 요소 뒤에 모든 단락을 삽입하십시오. $ ( &quot;#foo&quot;) .after ( &quot;p&quot;)와 동일</target>
        </trans-unit>
        <trans-unit id="713a1ea610126247c0c956b3f704ca3d7d89377f" translate="yes" xml:space="preserve">
          <source>Insert all paragraphs before an element with id of &quot;foo&quot;. Same as $( &quot;#foo&quot; ).before( &quot;p&quot; )</source>
          <target state="translated">id가 &quot;foo&quot;인 요소 앞에 모든 단락을 삽입하십시오. $ ( &quot;#foo&quot;)와 같습니다 .before ( &quot;p&quot;)</target>
        </trans-unit>
        <trans-unit id="2a36566b5f7bf551e49303d001450470fb565a18" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, after each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에서 각 요소 뒤에 매개 변수로 지정된 컨텐츠를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="4f33896b01cb4d71115311d9e51d0a69028d263a" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, before each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트의 각 요소 앞에 매개 변수로 지정된 컨텐츠를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="e1317a820c726f2f7abf2b065dbb9d9906663972" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.</source>
          <target state="translated">매개 변수로 지정된 컨텐츠를 일치하는 요소 세트에서 각 요소의 시작 부분에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="252fc9640a2721b3d60f55e214d785d9d12737f1" translate="yes" xml:space="preserve">
          <source>Insert content, specified by the parameter, to the end of each element in the set of matched elements.</source>
          <target state="translated">매개 변수로 지정된 컨텐츠를 일치하는 요소 세트의 각 요소 끝에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="c8ca7bc677de2444cdb05f20c9cb2ef285dfa468" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements after the target.</source>
          <target state="translated">대상 다음에 일치하는 요소 세트의 모든 요소를 ​​삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="433e394091af7dd49ec8b0682e217e24fe9bd2c1" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements before the target.</source>
          <target state="translated">일치하는 요소 세트의 모든 요소를 ​​대상 앞에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="7bff64e9231226c26a9dc7b06b93b6d79e0d3552" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements to the beginning of the target.</source>
          <target state="translated">일치하는 요소 세트의 모든 요소를 ​​대상의 시작 부분에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="7b2c22e52ada1a8014980d94bff9b7b4cfeb9d42" translate="yes" xml:space="preserve">
          <source>Insert every element in the set of matched elements to the end of the target.</source>
          <target state="translated">일치하는 요소 세트의 모든 요소를 ​​대상의 끝에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="7fafafe0d098454dcbfab19c76c5ce49d27c6179" translate="yes" xml:space="preserve">
          <source>Inserts a DOM element after all paragraphs.</source>
          <target state="translated">모든 단락 뒤에 DOM 요소를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="a3f6aa2d5cf3fc5ab3aa271f200c2d6f1ce14203" translate="yes" xml:space="preserve">
          <source>Inserts a DOM element before all paragraphs.</source>
          <target state="translated">모든 단락 앞에 DOM 요소를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="f24e238ed2d6f7ba18c6ded522867eda685f664b" translate="yes" xml:space="preserve">
          <source>Inserts a jQuery object (similar to an Array of DOM Elements) after all paragraphs.</source>
          <target state="translated">모든 단락 뒤에 jQuery 객체 (DOM 요소의 배열과 유사)를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="401338d602b7206134e52efbf29b6ec32f8ec93f" translate="yes" xml:space="preserve">
          <source>Inserts a jQuery object (similar to an Array of DOM Elements) before all paragraphs.</source>
          <target state="translated">모든 단락 앞에 jQuery 객체 (DOM 요소의 배열과 유사)를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="471b94475364d34a8f4078445fc6f7f7d9d495b7" translate="yes" xml:space="preserve">
          <source>Inserts some HTML after all paragraphs.</source>
          <target state="translated">모든 단락 뒤에 HTML을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="6acd8000622936c4294d7c600585eb8bebf03830" translate="yes" xml:space="preserve">
          <source>Inserts some HTML before all paragraphs.</source>
          <target state="translated">모든 단락 앞에 HTML을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="f9488bd2ba1b9c7874018a8a617b9794c4d764b8" translate="yes" xml:space="preserve">
          <source>Inside a function a special variable &quot;arguments&quot; is always available. It's similar to an array in that it has a length property, but it lacks the built-in methods of an array. The elements of the pseudo-array are the argument of the function call.</source>
          <target state="translated">함수 안에서 특별한 변수 &quot;arguments&quot;를 항상 사용할 수 있습니다. 길이 속성이 있지만 배열의 내장 메서드가 없다는 점에서 배열과 비슷합니다. 의사 배열의 요소는 함수 호출의 인수입니다.</target>
        </trans-unit>
        <trans-unit id="889f9bf9f9dc1c396c4d0b554f373c83933abc68" translate="yes" xml:space="preserve">
          <source>Instead of always returning false, the callback could check fields of the form for validity, and return false only when the form is invalid.</source>
          <target state="translated">콜백은 항상 false를 반환하는 대신 폼 필드의 유효성을 검사하고 폼이 유효하지 않은 경우에만 false를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e61f038557f88bd91e1fce28491cecdae04f573" translate="yes" xml:space="preserve">
          <source>Instead of maintaining references to handlers in order to unbind them, we can namespace the events and use this capability to narrow the scope of our unbinding actions. As shown in the discussion for the &lt;code&gt;.bind()&lt;/code&gt; method, namespaces are defined by using a period (&lt;code&gt;.&lt;/code&gt;) character when binding a handler:</source>
          <target state="translated">핸들러 바인딩 해제를 위해 핸들러에 대한 참조를 유지하는 대신 이벤트 네임 스페이스를 사용하고이 기능을 사용하여 바인딩 해제 조치의 범위를 좁힐 수 있습니다. &lt;code&gt;.bind()&lt;/code&gt; 메서드 에 대한 설명에서 볼 수 있듯이 네임 스페이스는 핸들러를 바인딩 할 때 마침표 ( &lt;code&gt;.&lt;/code&gt; ) 문자 를 사용하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="0c7832090687c37c110b6e39c664d1e278683557" translate="yes" xml:space="preserve">
          <source>Instead of returning the jQuery object (to allow chaining), &lt;code&gt;.triggerHandler()&lt;/code&gt; returns whatever value was returned by the last handler it caused to be executed. If no handlers are triggered, it returns &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">연결을 허용하기 위해 jQuery 객체를 반환하는 대신 &lt;code&gt;.triggerHandler()&lt;/code&gt; 는 실행 된 마지막 핸들러에서 반환 된 값을 반환합니다. 처리기가 트리거되지 않으면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="ebeb0debcfb63cd27902be71c9f1d935fc8b7b38" translate="yes" xml:space="preserve">
          <source>Internally, selector context is implemented with the &lt;code&gt;.find()&lt;/code&gt; method, so &lt;code&gt;$( &quot;span&quot;, this )&lt;/code&gt; is equivalent to &lt;code&gt;$( this ).find( &quot;span&quot; )&lt;/code&gt;.</source>
          <target state="translated">내부적으로 선택기 컨텍스트는 &lt;code&gt;.find()&lt;/code&gt; 메소드 로 구현 되므로 &lt;code&gt;$( &quot;span&quot;, this )&lt;/code&gt; 는 &lt;code&gt;$( this ).find( &quot;span&quot; )&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="917ff81ef2ae0c567a9fa3e955b27891825703d3" translate="yes" xml:space="preserve">
          <source>Internet Explorer: 6.0, 7.0, 8.0</source>
          <target state="translated">인터넷 익스플로러 : 6.0, 7.0, 8.0</target>
        </trans-unit>
        <trans-unit id="ef38e4b5eb8bf6f227a0e1ed3e8b1c60fc1f2190" translate="yes" xml:space="preserve">
          <source>It defines a variable</source>
          <target state="translated">변수를 정의합니다</target>
        </trans-unit>
        <trans-unit id="df4361ec1cc6c3b029867e137e66254e9f962d61" translate="yes" xml:space="preserve">
          <source>It doesn't correctly bubble up the DOM tree</source>
          <target state="translated">DOM 트리를 올바르게 버블 링하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f47d47bc32648e947b47ca11b24795692352dd6" translate="yes" xml:space="preserve">
          <source>It doesn't fire correctly in WebKit if the image src is set to the same src as before</source>
          <target state="translated">이미지 src가 이전과 동일한 src로 설정된 경우 WebKit에서 올바르게 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3391b6ddc4de1a10f29fb7134fb504140d475b20" translate="yes" xml:space="preserve">
          <source>It doesn't work consistently nor reliably cross-browser</source>
          <target state="translated">브라우저간에 일관되게 작동하거나 안정적으로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c608f388119fe9af74a5c3dff55d228b4b3a8d87" translate="yes" xml:space="preserve">
          <source>It is inadvisable to bind handlers to both the &lt;code&gt;click&lt;/code&gt; and &lt;code&gt;dblclick&lt;/code&gt; events for the same element. The sequence of events triggered varies from browser to browser, with some receiving two &lt;code&gt;click&lt;/code&gt; events before the &lt;code&gt;dblclick&lt;/code&gt; and others only one. Double-click sensitivity (maximum time between clicks that is detected as a double click) can vary by operating system and browser, and is often user-configurable.</source>
          <target state="translated">동일한 요소에 대해 &lt;code&gt;click&lt;/code&gt; 및 &lt;code&gt;dblclick&lt;/code&gt; 이벤트 모두에 핸들러를 바인드하지 않는 것이 좋습니다 . 트리거되는 이벤트 순서는 브라우저마다 다르며 일부 는 &lt;code&gt;dblclick&lt;/code&gt; 전에 두 번의 &lt;code&gt;click&lt;/code&gt; 이벤트를 수신 하고 다른 하나는 하나만 수신합니다. 두 번 클릭 감도 (더블 클릭으로 감지되는 최대 클릭 시간)는 운영 체제와 브라우저에 따라 다를 수 있으며 종종 사용자가 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6474e15e475efa7ccece7ce1fa87058feb5d9d01" translate="yes" xml:space="preserve">
          <source>It is particularly useful to attach namespaces to event bindings when we are developing plug-ins or otherwise writing code that may interact with other event-handling code in the future.</source>
          <target state="translated">플러그인을 개발하거나 향후 다른 이벤트 처리 코드와 상호 작용할 수있는 코드를 작성할 때 네임 스페이스를 이벤트 바인딩에 첨부하는 것이 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d7eb52688075d1e01ff5b7994d590bd6c763aea8" translate="yes" xml:space="preserve">
          <source>It is typically easier, however, to select the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; itself for serialization:</source>
          <target state="translated">그러나 직렬화를 위해 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 자체 를 선택하는 것이 일반적으로 더 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="94dfab464453f6cf0a69caa2d2915b921be98d51" translate="yes" xml:space="preserve">
          <source>It will appear on a rendered page as though the tags were exposed, like this:</source>
          <target state="translated">다음과 같이 태그가 노출 된 것처럼 렌더링 된 페이지에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="4d4945487485ce1d7a1babb6258cde1b60e4e518" translate="yes" xml:space="preserve">
          <source>It's important to note that this method does not replace a class. It simply adds the class, appending it to any which may already be assigned to the elements.</source>
          <target state="translated">이 메소드는 클래스를 대체하지 않습니다. 단순히 클래스를 추가하여 요소에 이미 할당 된 클래스에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a91fb955ef878ac45d420f89c39f31c4e4cee2a2" translate="yes" xml:space="preserve">
          <source>Iterate over a jQuery object, executing a function for each matched element.</source>
          <target state="translated">일치하는 각 요소에 대해 함수를 실행하여 jQuery 객체를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="921f162ac098f7a2c7cb7ebc3eeebbadb264564e" translate="yes" xml:space="preserve">
          <source>Iterate over three divs and sets their color property.</source>
          <target state="translated">세 개의 div를 반복하고 색상 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="eca10c8706e40e428e0864f290b2a61078e411a5" translate="yes" xml:space="preserve">
          <source>Iterates over items in an array, accessing both the current item and its index.</source>
          <target state="translated">배열의 항목을 반복하여 현재 항목과 해당 색인에 모두 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="7d0530dd66df2d906c050d49a5a7392c77f4570d" translate="yes" xml:space="preserve">
          <source>Iterates over the properties in an object, accessing both the current item and its key.</source>
          <target state="translated">현재 항목과 해당 키에 모두 액세스하여 객체의 속성을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="e701a349ed2833a87683e1bdcab43beeab26fc8f" translate="yes" xml:space="preserve">
          <source>Iterates through the array displaying each number as both a word and numeral</source>
          <target state="translated">각 숫자를 단어와 숫자로 표시하는 배열을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="44dada4850cde6f4691206fddd5fe47cd952a7f9" translate="yes" xml:space="preserve">
          <source>Iterating over objects is easy with the for-in-loop:</source>
          <target state="translated">for-in-loop를 사용하면 객체를 쉽게 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="42c6036ddd5d662bc456c530699d3704be7c5087" translate="yes" xml:space="preserve">
          <source>JSONP</source>
          <target state="translated">JSONP</target>
        </trans-unit>
        <trans-unit id="a9bdf580360f016517f1eb060f1aa02ab34db701" translate="yes" xml:space="preserve">
          <source>JavaScript provides utilities to work with numbers in the Math object:</source>
          <target state="translated">JavaScript는 Math 객체에서 숫자로 작업 할 수있는 유틸리티를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="635671fca1d1a98011a1627023ba1e963f4e8524" translate="yes" xml:space="preserve">
          <source>JavaScript's &lt;code&gt;getElementsByTagName()&lt;/code&gt; function is called to return the appropriate elements when this expression is used.</source>
          <target state="translated">이 표현식이 사용될 때 적절한 요소를 리턴하기 위해 JavaScript의 &lt;code&gt;getElementsByTagName()&lt;/code&gt; 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2bb3a1836093d127b0c0eff22c30e22ddb7d71ac" translate="yes" xml:space="preserve">
          <source>Just like prefilters, a transport's factory function can be attached to a specific dataType:</source>
          <target state="translated">프리 필터와 마찬가지로 전송의 팩토리 기능을 특정 데이터에 첨부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb913d698f6e3828501868f9bc4c98551344bf53" translate="yes" xml:space="preserve">
          <source>Keep in mind that the &lt;code&gt;mousemove&lt;/code&gt; event is triggered whenever the mouse pointer moves, even for a pixel. This means that hundreds of events can be generated over a very small amount of time. If the handler has to do any significant processing, or if multiple handlers for the event exist, this can be a serious performance drain on the browser. It is important, therefore, to optimize &lt;code&gt;mousemove &lt;/code&gt;handlers as much as possible, and to unbind them as soon as they are no longer needed.</source>
          <target state="translated">것을 명심 &lt;code&gt;mousemove&lt;/code&gt; 이벤트가 심지어 픽셀, 때마다 마우스 포인터의 움직임을 트리거됩니다. 이는 매우 적은 시간 동안 수백 개의 이벤트가 생성 될 수 있음을 의미합니다. 핸들러가 중요한 처리를 수행해야하거나 이벤트에 대한 여러 핸들러가 존재하는 경우 이는 브라우저에서 심각한 성능 저하가 될 수 있습니다. 따라서 가능한 한 &lt;code&gt;mousemove &lt;/code&gt; 처리기 를 최적화 하고 더 이상 필요하지 않은 경우 바인딩을 해제하는 것이 중요 합니다.</target>
        </trans-unit>
        <trans-unit id="1c47d3fdd85b435bb8ea81079df0fda78371be45" translate="yes" xml:space="preserve">
          <source>Keep in mind that the target object (first argument) will be modified, and will also be returned from &lt;code&gt;$.extend()&lt;/code&gt;. If, however, you want to preserve both of the original objects, you can do so by passing an empty object as the target:</source>
          <target state="translated">대상 객체 (첫 번째 인수)가 수정되고 &lt;code&gt;$.extend()&lt;/code&gt; 에서 반환됩니다 . 그러나 원본 객체를 모두 유지하려면 빈 객체를 대상으로 전달하면됩니다.</target>
        </trans-unit>
        <trans-unit id="c745b7aef2c8c4024f36a766c1d63bb48c8333f7" translate="yes" xml:space="preserve">
          <source>Keeps the rest of the handlers from being executed and prevents the event from bubbling up the DOM tree.</source>
          <target state="translated">나머지 핸들러가 실행되지 않도록하고 이벤트가 DOM 트리를 버블 링하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="1019bb4eb4abfe127bdb4d847f34fad9cc5f5784" translate="yes" xml:space="preserve">
          <source>Kill the bubbling on the click event.</source>
          <target state="translated">클릭 이벤트에서 버블 링을 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="8587828abc001f57a4599b210e0c568205c4f22a" translate="yes" xml:space="preserve">
          <source>Length Property</source>
          <target state="translated">길이 속성</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="065a912948fec9c97305ff966bbe99fe394d7f04" translate="yes" xml:space="preserve">
          <source>Listen for document ready using &lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt; 을 사용하여 준비된 문서를 청취하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f88de4705d0d628501d4aa45b504406386d0d2d" translate="yes" xml:space="preserve">
          <source>Load JSON-encoded data from the server using a GET HTTP request.</source>
          <target state="translated">GET HTTP 요청을 사용하여 서버에서 JSON 인코딩 데이터를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="6e4304bae798ad78f8b8d684e7187d2580b5f923" translate="yes" xml:space="preserve">
          <source>Load a JavaScript file from the server using a GET HTTP request, then execute it.</source>
          <target state="translated">GET HTTP 요청을 사용하여 서버에서 JavaScript 파일을로드 한 후 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c209a100ae7239055105a81c81e90dc1523b5020" translate="yes" xml:space="preserve">
          <source>Load and execute a JavaScript file.</source>
          <target state="translated">JavaScript 파일을로드하고 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8e9e8e3f60b5cc729072f4a8f2e71c3d397c321b" translate="yes" xml:space="preserve">
          <source>Load another page's list items into an ordered list.</source>
          <target state="translated">다른 페이지의 목록 항목을 순서가 지정된 목록에로드하십시오.</target>
        </trans-unit>
        <trans-unit id="98c3f4f16b706533651a4bc1be4b0278162648e1" translate="yes" xml:space="preserve">
          <source>Load data from the server and place the returned HTML into the matched element.</source>
          <target state="translated">서버에서 데이터를로드하고 리턴 된 HTML을 일치하는 요소에 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="5385a264a84eed3d305a1fa3002318094dab9893" translate="yes" xml:space="preserve">
          <source>Load data from the server and place the returned HTML into the matched elements.</source>
          <target state="translated">서버에서 데이터를로드하고 반환 된 HTML을 일치하는 요소에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="887a3a91b4637338141491da16de5c9eef0ff0ae" translate="yes" xml:space="preserve">
          <source>Load data from the server using a HTTP GET request.</source>
          <target state="translated">HTTP GET 요청을 사용하여 서버에서 데이터를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="4226e0ebd6af9acf9c6723477b638dff4a415beb" translate="yes" xml:space="preserve">
          <source>Load data from the server using a HTTP POST request.</source>
          <target state="translated">HTTP POST 요청을 사용하여 서버에서 데이터를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="9232a7a249f03f118f78ea108071dcabc877b60b" translate="yes" xml:space="preserve">
          <source>Load the &lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;official jQuery Color Animation plugin&lt;/a&gt; dynamically and bind some color animations to occur once the new functionality is loaded.</source>
          <target state="translated">부하 &lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;플러그인 공식 jQuery를 색 애니메이션을&lt;/a&gt; 새로운 기능이로드되면 발생하는 동적 바인딩 일부 색상 애니메이션.</target>
        </trans-unit>
        <trans-unit id="614c191789c3dbe22f5fb47736faaa6d90936f1f" translate="yes" xml:space="preserve">
          <source>Load the JSON data from test.js and access a name from the returned JSON data.</source>
          <target state="translated">test.js에서 JSON 데이터를로드하고 반환 된 JSON 데이터에서 이름에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="98bd0551b7828bb0a31fa946d67a5be5185f2db3" translate="yes" xml:space="preserve">
          <source>Load the JSON data from test.js, passing along additional data, and access a name from the returned JSON data. If an error occurs, log an error message instead.</source>
          <target state="translated">test.js에서 JSON 데이터를로드하고 추가 데이터를 전달하고 반환 된 JSON 데이터에서 이름에 액세스합니다. 오류가 발생하면 대신 오류 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="948313a4df2223d5c2c9afa1f8d232566d0171e0" translate="yes" xml:space="preserve">
          <source>Load the feeds.html file into the div with the ID of feeds.</source>
          <target state="translated">feeds.html 파일을 피드 ID를 사용하여 div에로드하십시오.</target>
        </trans-unit>
        <trans-unit id="20857a3fdf9e0d3d774f1d8757e9671a368e89fb" translate="yes" xml:space="preserve">
          <source>Load two versions of jQuery (not recommended). Then, restore jQuery's globally scoped variables to the first loaded jQuery.</source>
          <target state="translated">두 가지 버전의 jQuery를로드합니다 (권장하지 않음). 그런 다음 jQuery의 전역 범위 변수를 처음로드 된 jQuery로 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="93e9bcc820f0a39dff22d5e0383ca382eb657f72" translate="yes" xml:space="preserve">
          <source>Loading Page Fragments</source>
          <target state="translated">페이지 조각로드</target>
        </trans-unit>
        <trans-unit id="e7f70cc7edf5619431eb502baa5e5f1a76973cf9" translate="yes" xml:space="preserve">
          <source>Loads the four most recent pictures of Mount Rainier from the Flickr JSONP API.</source>
          <target state="translated">Flickr JSONP API에서 Mount Rainier의 가장 최근 사진 4 장을로드합니다.</target>
        </trans-unit>
        <trans-unit id="e6ea6675ec661b201786df7d4aeddafc618ef246" translate="yes" xml:space="preserve">
          <source>Local Events</source>
          <target state="translated">지역 행사</target>
        </trans-unit>
        <trans-unit id="5ec59be3774eb930b04091240bba0aa4788d0783" translate="yes" xml:space="preserve">
          <source>Locate all the divs after the first and give them a class.</source>
          <target state="translated">첫 번째 이후의 모든 div를 찾아서 클래스를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="9164c206aa9f768a072d8795d5e85b5802a0215e" translate="yes" xml:space="preserve">
          <source>Locate all the divs preceding the last div and give them a class.</source>
          <target state="translated">마지막 div 앞의 모든 div를 찾아서 클래스를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="c823c8f7ebcb5abac0a0f25aec4eae4c7d947a09" translate="yes" xml:space="preserve">
          <source>Locate all the paragraphs after the second child in the body and give them a class.</source>
          <target state="translated">본문에서 두 번째 자식 다음의 모든 단락을 찾아서 수업을 진행하십시오.</target>
        </trans-unit>
        <trans-unit id="794206b18edba56f2abc883f735621e1800c735f" translate="yes" xml:space="preserve">
          <source>Lock a callback list in its current state.</source>
          <target state="translated">콜백 목록을 현재 상태로 잠급니다.</target>
        </trans-unit>
        <trans-unit id="e05951f10b1bdd64c056239375d2071333d6becb" translate="yes" xml:space="preserve">
          <source>Log which key was depressed.</source>
          <target state="translated">누른 키를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="9f32f56dbf1cb1758554800df22561139c939267" translate="yes" xml:space="preserve">
          <source>Log which mouse button was depressed.</source>
          <target state="translated">어느 마우스 버튼을 눌렀는지 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="c2062281afbfa779b453ff9d469906ab59340ee4" translate="yes" xml:space="preserve">
          <source>Looks for the paragraph that contains 'selected' as a class.</source>
          <target state="translated">클래스로 'selected'가 포함 된 단락을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="40bb78ac4a8f75b73057a2a259dcfa335c88dad4" translate="yes" xml:space="preserve">
          <source>META</source>
          <target state="translated">META</target>
        </trans-unit>
        <trans-unit id="de15cd74e2d1a536fde94c26d3d53faed8ec044d" translate="yes" xml:space="preserve">
          <source>Make all visible divs turn yellow on click.</source>
          <target state="translated">클릭하면 보이는 모든 div가 노란색으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="02c62a0130255054719e58a94558825165817b75" translate="yes" xml:space="preserve">
          <source>Manipulation</source>
          <target state="translated">Manipulation</target>
        </trans-unit>
        <trans-unit id="cc2d21bb5da530f2472060bc7edae3adb18c1cb5" translate="yes" xml:space="preserve">
          <source>Many JavaScript libraries use &lt;code&gt;$&lt;/code&gt; as a function or variable name, just as jQuery does. In jQuery's case, &lt;code&gt;$&lt;/code&gt; is just an alias for &lt;code&gt;jQuery&lt;/code&gt;, so all functionality is available without using &lt;code&gt;$&lt;/code&gt;. If you need to use another JavaScript library alongside jQuery, return control of &lt;code&gt;$&lt;/code&gt; back to the other library with a call to &lt;code&gt;$.noConflict()&lt;/code&gt;. Old references of &lt;code&gt;$&lt;/code&gt; are saved during jQuery initialization; &lt;code&gt;noConflict()&lt;/code&gt; simply restores them.</source>
          <target state="translated">많은 JavaScript 라이브러리 는 jQuery와 마찬가지로 &lt;code&gt;$&lt;/code&gt; 를 함수 또는 변수 이름으로 사용 합니다. jQuery의 경우, &lt;code&gt;$&lt;/code&gt; 는 단지의 별칭입니다 &lt;code&gt;jQuery&lt;/code&gt; 를 모든 기능을 사용하지 않고 볼 수 있도록 &lt;code&gt;$&lt;/code&gt; 를 . 당신은 jQuery를, 반환 제어와 함께 또 다른 자바 스크립트 라이브러리를 사용해야하는 경우 &lt;code&gt;$&lt;/code&gt; 에 대한 호출로 다른 라이브러리에 다시 &lt;code&gt;$.noConflict()&lt;/code&gt; . jQuery 초기화 중에 &lt;code&gt;$&lt;/code&gt; 에 대한 이전 참조 가 저장됩니다. &lt;code&gt;noConflict()&lt;/code&gt; 단순히 그것들을 복원합니다.</target>
        </trans-unit>
        <trans-unit id="b7f9d793a2819cd670619175574f6c0262c4984d" translate="yes" xml:space="preserve">
          <source>Many methods, both in jQuery and in JavaScript in general, return objects that are array-like. For example, the jQuery factory function &lt;code&gt;$()&lt;/code&gt; returns a jQuery object that has many of the properties of an array (a length, the &lt;code&gt;[]&lt;/code&gt; array access operator, etc.), but is not exactly the same as an array and lacks some of an array's built-in methods (such as &lt;code&gt;.pop()&lt;/code&gt; and &lt;code&gt;.reverse()&lt;/code&gt;).</source>
          <target state="translated">jQuery와 일반적인 JavaScript의 많은 메소드는 배열과 유사한 객체를 반환합니다. 예를 들어, jQuery 팩토리 함수 &lt;code&gt;$()&lt;/code&gt; 는 배열의 속성 (길이, &lt;code&gt;[]&lt;/code&gt; 배열 액세스 연산자 등) 이 많은 jQuery 객체를 반환 하지만 정확히 배열과 동일하지 않고 일부는 부족합니다. 배열의 내장 메소드 (예 : &lt;code&gt;.pop()&lt;/code&gt; 및 &lt;code&gt;.reverse()&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="64d4b8cbd764ba4169b9d144d4602f0c599a9447" translate="yes" xml:space="preserve">
          <source>Map an object's keys to an array.</source>
          <target state="translated">객체의 키를 배열에 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="7c9c16dda54a0507462878069d153f43445ec9b4" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one and add 4 to each value.</source>
          <target state="translated">원래 배열을 새 배열에 맵핑하고 각 값에 4를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7c7ef4d24dba396a0b98b3681ba4188e8f671dea" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one, adding 1 to each value if it is bigger then zero and removing it if not.</source>
          <target state="translated">원래 배열을 새 배열에 매핑하여 0보다 큰 경우 각 값에 1을 더하고 그렇지 않은 경우 제거합니다.</target>
        </trans-unit>
        <trans-unit id="983aa42f1ad4b37c28c18140f02403eba8bde2e9" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one, removing numbers less than 50 by returning &lt;code&gt;null&lt;/code&gt; and subtracting 45 from the rest.</source>
          <target state="translated">원래 배열을 새 배열에 매핑하여 &lt;code&gt;null&lt;/code&gt; 을 반환 하고 나머지에서 45를 빼서 50 미만의 숫자를 제거 하십시오.</target>
        </trans-unit>
        <trans-unit id="0ce5b3b3c8865609956f2304c19f17f204d14b64" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one; each element is added with its original value and the value plus one.</source>
          <target state="translated">원래 배열을 새 배열로 매핑하십시오. 각 요소는 원래 값과 값에 1을 더하여 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="cf80eec3d3943dafd07f7556af073e6dbdda420e" translate="yes" xml:space="preserve">
          <source>Map the original array to a new one; each element is squared.</source>
          <target state="translated">원래 배열을 새 배열로 매핑하십시오. 각 요소는 제곱입니다.</target>
        </trans-unit>
        <trans-unit id="07d80f9f1cd68153a579561618539ca321f0def9" translate="yes" xml:space="preserve">
          <source>Map the original object that was referenced by $ back to $.</source>
          <target state="translated">$로 참조 된 원래 오브젝트를 $로 다시 맵핑하십시오.</target>
        </trans-unit>
        <trans-unit id="6a1e2cce8755f554e0026014775801a429566acc" translate="yes" xml:space="preserve">
          <source>Map the original object to a new array and double each value.</source>
          <target state="translated">원래 객체를 새 배열에 매핑하고 각 값을 두 배로 늘립니다.</target>
        </trans-unit>
        <trans-unit id="ad27fd538ed9960564bd87e3281bec2594b6bf55" translate="yes" xml:space="preserve">
          <source>Mark all inputs that are descendants of a form with a dotted blue border. Give a yellow background to inputs that are descendants of a fieldset that is a descendant of a form.</source>
          <target state="translated">파란색 점선으로 양식의 자손 인 모든 입력을 표시하십시오. 양식의 후손 인 필드 세트의 후손 인 입력에 노란색 배경을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="fa99901f718f4092f329d411976d96dccc8c55e3" translate="yes" xml:space="preserve">
          <source>Matches all elements that are checked or selected.</source>
          <target state="translated">확인되거나 선택된 모든 요소와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="5645a5a0d1e17f22e3e955f9391670847c1d513b" translate="yes" xml:space="preserve">
          <source>Matches elements that match all of the specified attribute filters.</source>
          <target state="translated">지정된 모든 속성 필터와 일치하는 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="15b7b6ee67dde72c7dcf25d1398c900548de9a0e" translate="yes" xml:space="preserve">
          <source>Merge defaults and options, without modifying the defaults. This is a common plugin development pattern.</source>
          <target state="translated">기본값을 수정하지 않고 기본값과 옵션을 병합하십시오. 이것은 일반적인 플러그인 개발 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="794f99831fcf6e759a59983d1701aa124b24570b" translate="yes" xml:space="preserve">
          <source>Merge the contents of an object onto the jQuery prototype to provide new jQuery instance methods.</source>
          <target state="translated">객체의 내용을 jQuery 프로토 타입에 병합하여 새로운 jQuery 인스턴스 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="696574d08ab2f8951c7f6c1818c695a21ee3b3c4" translate="yes" xml:space="preserve">
          <source>Merge the contents of two arrays together into the first array.</source>
          <target state="translated">두 배열의 내용을 첫 번째 배열로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="e2e34ae7653eb5b639210a4826bb8e1149b6f150" translate="yes" xml:space="preserve">
          <source>Merge the contents of two or more objects together into the first object.</source>
          <target state="translated">둘 이상의 객체의 내용을 첫 번째 객체에 병합합니다.</target>
        </trans-unit>
        <trans-unit id="6bf1bfd74d29250e202155177c2731cd2da4a70e" translate="yes" xml:space="preserve">
          <source>Merge two objects recursively, modifying the first.</source>
          <target state="translated">두 객체를 재귀 적으로 병합하여 첫 번째 객체를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="9ed9af223766293600f1c43c5def3762c26d6dc1" translate="yes" xml:space="preserve">
          <source>Merge two objects, modifying the first.</source>
          <target state="translated">두 개체를 병합하여 첫 번째 개체를 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="c0ced1350d67f465e08ebdb8d1d6e12dbd2c5c7d" translate="yes" xml:space="preserve">
          <source>Merges two arrays, altering the first argument.</source>
          <target state="translated">두 개의 배열을 병합하여 첫 번째 인수를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="cc81d687e38855024bcec5948581fca65456b7f3" translate="yes" xml:space="preserve">
          <source>Merges two arrays, but uses a copy, so the original isn't altered.</source>
          <target state="translated">두 개의 배열을 병합하지만 사본을 사용하므로 원본은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="224e9be2b821071df4034017dcd93f7099643b03" translate="yes" xml:space="preserve">
          <source>Modify and filter HTML strings passed through jQuery manipulation methods.</source>
          <target state="translated">jQuery 조작 메소드를 통해 전달 된 HTML 문자열을 수정하고 필터링하십시오.</target>
        </trans-unit>
        <trans-unit id="150a33ecfab90349095e18e50c66f357eaa0f12a" translate="yes" xml:space="preserve">
          <source>More than one class may be added at a time, separated by a space, to the set of matched elements, like so:</source>
          <target state="translated">한 번에 두 개 이상의 클래스를 공백으로 구분하여 일치하는 요소 세트에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5636ada1778a99a686bd55ff016d8fd5ffa7a724" translate="yes" xml:space="preserve">
          <source>More than one class may be removed at a time, separated by a space, from the set of matched elements, like so:</source>
          <target state="translated">일치하는 요소 세트에서 공백으로 구분하여 한 번에 둘 이상의 클래스를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bac9e0ffb6344e9ecad6cb463c7fe355f588504f" translate="yes" xml:space="preserve">
          <source>Most browsers &lt;a href=&quot;https://caniuse.com/#search=DOMContentLoaded&quot;&gt;provide similar functionality&lt;/a&gt; in the form of a &lt;code&gt;DOMContentLoaded&lt;/code&gt; event. However, jQuery's &lt;code&gt;.ready()&lt;/code&gt; method differs in an important and useful way: If the DOM becomes ready and the browser fires &lt;code&gt;DOMContentLoaded&lt;/code&gt; before the code calls &lt;code&gt;.ready( handler )&lt;/code&gt;, the function &lt;code&gt;handler&lt;/code&gt; will still be executed. In contrast, a &lt;code&gt;DOMContentLoaded&lt;/code&gt; event listener added after the event fires is never executed.</source>
          <target state="translated">대부분의 브라우저 는 &lt;code&gt;DOMContentLoaded&lt;/code&gt; 이벤트 형식으로 &lt;a href=&quot;https://caniuse.com/#search=DOMContentLoaded&quot;&gt;유사한 기능&lt;/a&gt; 을 제공합니다 . 그러나 jQuery의 &lt;code&gt;.ready()&lt;/code&gt; 메소드는 중요하고 유용한 방식으로 다릅니다. DOM이 준비되고 코드가 &lt;code&gt;.ready( handler )&lt;/code&gt; 호출하기 전에 브라우저가 &lt;code&gt;DOMContentLoaded&lt;/code&gt; 를 실행 하면 함수 &lt;code&gt;handler&lt;/code&gt; 가 계속 실행됩니다. 반대로, 이벤트 발생 후 추가 된 &lt;code&gt;DOMContentLoaded&lt;/code&gt; 이벤트 리스너는 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cce073c6d48f20212a41fc8c32cfeaa3f1f4066d" translate="yes" xml:space="preserve">
          <source>Most callbacks provide arguments and a context. In the event-handler example, the callback is called with one argument, an Event. The context is set to the handling element, in the above example, document.body.</source>
          <target state="translated">대부분의 콜백은 인수와 컨텍스트를 제공합니다. 이벤트 핸들러 예제에서 콜백은 하나의 인수 인 Event로 호출됩니다. 컨텍스트는 위의 예에서 document.body와 같은 처리 요소로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7bb8f1e100ece700dc634bb35b1ed83b69348b6e" translate="yes" xml:space="preserve">
          <source>Most frequently, you will use the jQuery() function to create a jQuery object. &lt;code&gt;jQuery()&lt;/code&gt; can also be accessed by its familiar single-character alias of &lt;code&gt;$()&lt;/code&gt;, unless you have called &lt;code&gt;jQuery.noConflict()&lt;/code&gt; to disable this option. Many jQuery methods return the jQuery object itself, so that method calls can be chained:</source>
          <target state="translated">가장 자주 jQuery () 함수를 사용하여 jQuery 객체를 만듭니다. 이 옵션을 비활성화하기 위해 &lt;code&gt;jQuery.noConflict()&lt;/code&gt; 를 호출하지 않은 경우 익숙한 단일 문자 별명 &lt;code&gt;$()&lt;/code&gt; &lt;code&gt;jQuery()&lt;/code&gt; 액세스 할 수도 있습니다 . 많은 jQuery 메소드가 jQuery 객체 자체를 리턴하므로 메소드 호출을 체인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64aaea0cbc6a602a95dfe9d3819d2bf0bc6d5e98" translate="yes" xml:space="preserve">
          <source>Most implementations will specify a success handler:</source>
          <target state="translated">대부분의 구현은 성공 처리기를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d5621f5663a042e64efd252844343e23251aea06" translate="yes" xml:space="preserve">
          <source>Most jQuery APIs that accept HTML strings will run scripts that are included in the HTML. &lt;code&gt;jQuery.parseHTML&lt;/code&gt; does not run scripts in the parsed HTML unless &lt;code&gt;keepScripts&lt;/code&gt; is explicitly &lt;code&gt;true&lt;/code&gt;. However, it is still possible in most environments to execute scripts indirectly, for example via the &lt;code&gt;&amp;lt;img onerror&amp;gt;&lt;/code&gt; attribute. The caller should be aware of this and guard against it by cleaning or escaping any untrusted inputs from sources such as the URL or cookies. For future compatibility, callers should not depend on the ability to run &lt;em&gt;any&lt;/em&gt; script content when &lt;code&gt;keepScripts&lt;/code&gt; is unspecified or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">HTML 문자열을 허용하는 대부분의 jQuery API는 HTML에 포함 된 스크립트를 실행합니다. &lt;code&gt;jQuery.parseHTML&lt;/code&gt; 은 하지 않는 구문 분석 된 HTML에 스크립트를 실행하지 않습니다 &lt;code&gt;keepScripts&lt;/code&gt; 이 명시 적입니다 &lt;code&gt;true&lt;/code&gt; . 그러나 여전히 대부분의 환경에서 &lt;code&gt;&amp;lt;img onerror&amp;gt;&lt;/code&gt; 속성을 통해 스크립트를 간접적으로 실행할 수 있습니다. 호출자는이를 알고 URL 또는 쿠키와 같은 소스에서 신뢰할 수없는 입력을 정리하거나 피함으로써이를 방지해야합니다. 미래의 호환성을 위해 발신자가 실행할 수있는 능력에 의존하지 말아야 &lt;em&gt;어떤&lt;/em&gt; 경우 스크립트의 컨텐츠를 &lt;code&gt;keepScripts&lt;/code&gt; 가 지정되지 않거나입니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67593bdb5148add9434b2a97afa37b386577eae8" translate="yes" xml:space="preserve">
          <source>Most of jQuery's &lt;a href=&quot;category/traversing&quot;&gt;DOM traversal&lt;/a&gt; methods operate on a jQuery object instance and produce a new one, matching a different set of DOM elements. When this happens, it is as if the new set of elements is pushed onto a stack that is maintained inside the object. Each successive filtering method pushes a new element set onto the stack. If we need an older element set, we can use &lt;code&gt;end()&lt;/code&gt; to pop the sets back off of the stack.</source>
          <target state="translated">대부분의 jQuery의 &lt;a href=&quot;category/traversing&quot;&gt;DOM 탐색&lt;/a&gt; 메소드는 jQuery 객체 인스턴스에서 작동하고 다른 DOM 요소 세트와 일치하는 새 인스턴스를 생성합니다. 이런 일이 발생하면 마치 새로운 요소 집합이 객체 내부에서 유지되는 스택으로 푸시되는 것처럼 보입니다. 각각의 연속적인 필터링 방법은 새로운 요소 세트를 스택에 푸시합니다. 더 오래된 요소 집합이 필요한 경우 &lt;code&gt;end()&lt;/code&gt; 를 사용 하여 집합을 스택에서 다시 팝할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd847d892e51c9af96a07d5f1327caaaa74f5961" translate="yes" xml:space="preserve">
          <source>Mozilla Developer Network</source>
          <target state="translated">모질라 개발자 네트워크</target>
        </trans-unit>
        <trans-unit id="ae9dfc4b34face1f6a49d5f00bddfa3364657649" translate="yes" xml:space="preserve">
          <source>Mozilla/Firefox/Flock/Camino: 1.7.12, 1.8.1.3, 1.9</source>
          <target state="translated">Mozilla / Firefox / Flock / Camino : 1.7.12, 1.8.1.3, 1.9</target>
        </trans-unit>
        <trans-unit id="1c434465da3c26010d5e461e0d6f60c4615a5db6" translate="yes" xml:space="preserve">
          <source>Multiple Attribute Selector [name=&amp;rdquo;value&amp;rdquo;][name2=&amp;rdquo;value2&amp;Prime;]</source>
          <target state="translated">다중 속성 선택기 [name =&amp;rdquo;value&amp;rdquo;] [name2 =&amp;rdquo;value2 &amp;Prime;]</target>
        </trans-unit>
        <trans-unit id="9da99f299e3acc9dcdbd4d0b069d38991a7922c7" translate="yes" xml:space="preserve">
          <source>Multiple Events</source>
          <target state="translated">여러 이벤트</target>
        </trans-unit>
        <trans-unit id="68b26aa31744cde4bfaa535be002a810bbaa618f" translate="yes" xml:space="preserve">
          <source>Multiple Selector (&amp;ldquo;selector1, selector2, selectorN&amp;rdquo;)</source>
          <target state="translated">다중 선택기 (&amp;ldquo;selector1, selector2, selectorN&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="cbddd87a417599ca4f968d3bcb1256c0e4074131" translate="yes" xml:space="preserve">
          <source>Multiple attribute selector [name=&amp;quot;value&amp;quot;][name2=&amp;quot;value2″]</source>
          <target state="translated">다중 속성 선택기 [name = &quot;value&quot;] [name2 = &quot;value2 &amp;Prime;]</target>
        </trans-unit>
        <trans-unit id="22241cce1dcb835a3235317f247ee1693f9542e0" translate="yes" xml:space="preserve">
          <source>Multiple event types can be bound at once by including each one separated by a space:</source>
          <target state="translated">공백으로 구분 된 각 이벤트 유형을 포함하여 여러 이벤트 유형을 한 번에 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e9c7adb9652196b41e5a89d6cd8836acc345f96" translate="yes" xml:space="preserve">
          <source>Multiple selector (&amp;quot;selector1, selector2, selectorN&amp;quot;)</source>
          <target state="translated">다중 선택기 ( &quot;selector1, selector2, selectorN&quot;)</target>
        </trans-unit>
        <trans-unit id="3e8a3766064a46e113c1cc56095e9a77ecd498fb" translate="yes" xml:space="preserve">
          <source>NaN and Infinity</source>
          <target state="translated">NaN과 무한대</target>
        </trans-unit>
        <trans-unit id="f21a0a1e72a56f83a26a6afce908b42e8c1296be" translate="yes" xml:space="preserve">
          <source>Name of the data stored.</source>
          <target state="translated">저장된 데이터의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1e9b40df72f8a301ec4f0b9563479f5a6f494e87" translate="yes" xml:space="preserve">
          <source>Negative Indices</source>
          <target state="translated">부정적인 지수</target>
        </trans-unit>
        <trans-unit id="7feb8fb7b7d2d9674292d0a0464e419318768d24" translate="yes" xml:space="preserve">
          <source>Nevertheless, the most important concept to remember about the &lt;code&gt;checked&lt;/code&gt; attribute is that it does not correspond to the &lt;code&gt;checked&lt;/code&gt; property. The attribute actually corresponds to the &lt;code&gt;defaultChecked&lt;/code&gt; property and should be used only to set the &lt;em&gt;initial&lt;/em&gt; value of the checkbox. The &lt;code&gt;checked&lt;/code&gt; attribute value does not change with the state of the checkbox, while the &lt;code&gt;checked&lt;/code&gt; property does. Therefore, the cross-browser-compatible way to determine if a checkbox is checked is to use the property:</source>
          <target state="translated">[정보] 그럼에도 불구하고, 가장 중요한 개념은 기억 &lt;code&gt;checked&lt;/code&gt; 속성이이에 해당하지 않는다는 것입니다 &lt;code&gt;checked&lt;/code&gt; 속성입니다. 이 속성은 실제로 &lt;code&gt;defaultChecked&lt;/code&gt; 속성에 해당 하며 확인란 의 &lt;em&gt;초기&lt;/em&gt; 값 을 설정하는 데만 사용해야합니다 . &lt;code&gt;checked&lt;/code&gt; 그동안 속성 값은 체크 박스의 상태로 변경되지 않습니다 &lt;code&gt;checked&lt;/code&gt; 속성은 않습니다. 따라서 확인란이 선택되어 있는지 확인하는 브라우저 간 호환 방법은 속성을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ff487c8eb1153eb19c50d7e6654a840c0be4cdf1" translate="yes" xml:space="preserve">
          <source>Next Adjacent Selector (&amp;ldquo;prev + next&amp;rdquo;)</source>
          <target state="translated">다음 인접 선택기 ( &quot;이전 + 다음&quot;)</target>
        </trans-unit>
        <trans-unit id="6338b2a00a5fc5ce4bd4de1db92f04a5d24308ce" translate="yes" xml:space="preserve">
          <source>Next Siblings Selector (&amp;ldquo;prev ~ siblings&amp;rdquo;)</source>
          <target state="translated">다음 형제 선택기 (&amp;ldquo;이전 ~ 형제&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="5d1a8aee188d81523f2325ebc8e2262d69804f87" translate="yes" xml:space="preserve">
          <source>Next adjacent selector (&amp;quot;prev + next&amp;quot;)</source>
          <target state="translated">다음 인접 선택기 ( &quot;이전 + 다음&quot;)</target>
        </trans-unit>
        <trans-unit id="95b00774ebdd0b3bf7f870b0f6b703f645d9c875" translate="yes" xml:space="preserve">
          <source>Next siblings selector (&amp;quot;prev ~ siblings&amp;quot;)</source>
          <target state="translated">다음 형제 선택기 ( &quot;prev ~ 형제&quot;)</target>
        </trans-unit>
        <trans-unit id="a1db811f820077af1bdc6365df19469e39a95026" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;onreadystatechange&lt;/code&gt; mechanism is provided, however, since &lt;code&gt;done&lt;/code&gt;, &lt;code&gt;fail&lt;/code&gt;, &lt;code&gt;always&lt;/code&gt;, and &lt;code&gt;statusCode&lt;/code&gt; cover all conceivable requirements.</source>
          <target state="translated">&lt;code&gt;onreadystatechange&lt;/code&gt; 메커니즘은 제공 되지 않지만, &lt;code&gt;done&lt;/code&gt; , &lt;code&gt;fail&lt;/code&gt; , &lt;code&gt;always&lt;/code&gt; 및 &lt;code&gt;statusCode&lt;/code&gt; 는 가능한 모든 요구 사항을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="22e004ed1de5e76b460220595256a3c3752ce85d" translate="yes" xml:space="preserve">
          <source>Normally, any event handlers bound to the original element are &lt;em&gt;not&lt;/em&gt; copied to the clone. The optional &lt;code&gt;withDataAndEvents&lt;/code&gt; parameter allows us to change this behavior, and to instead make copies of all of the event handlers as well, bound to the new copy of the element. As of jQuery 1.4, all element data (attached by the &lt;code&gt;.data()&lt;/code&gt; method) is also copied to the new copy.</source>
          <target state="translated">일반적으로 원래 요소에 바인드 된 이벤트 핸들러 는 복제본에 복사 &lt;em&gt;되지 않습니다&lt;/em&gt; . 선택적인 &lt;code&gt;withDataAndEvents&lt;/code&gt; 매개 변수를 사용하면이 동작을 변경하고 대신 모든 이벤트 처리기의 복사본을 만들어 요소의 새 복사본에 바인딩 할 수 있습니다. jQuery 1.4부터 모든 요소 데이터 ( &lt;code&gt;.data()&lt;/code&gt; 메서드로 첨부 )도 새 복사본으로 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="f750da7fadcdc6467670391c98f7b23cd9c8407d" translate="yes" xml:space="preserve">
          <source>Normally, only the creator of a Deferred should call this method; you can prevent other code from changing the Deferred's state by returning a restricted Promise object through &lt;a href=&quot;deferred.promise&quot;&gt;&lt;code&gt;deferred.promise()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반적으로 지연된 작성자 만이 메소드를 호출해야합니다. &lt;a href=&quot;deferred.promise&quot;&gt; &lt;code&gt;deferred.promise()&lt;/code&gt; &lt;/a&gt; 통해 제한된 Promise 객체를 반환하여 다른 코드가 Deferred의 상태를 변경하지 못하게 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1327ce96c9257786d8fa92d26b375a272577b67e" translate="yes" xml:space="preserve">
          <source>Normally, only the creator of a Deferred should call this method; you can prevent other code from changing the Deferred's state or reporting status by returning a restricted Promise object through deferred.promise().</source>
          <target state="translated">일반적으로 지연된 작성자 만이 메소드를 호출해야합니다. deferred.promise ()를 통해 제한된 Promise 객체를 반환하여 다른 코드가 Deferred의 상태 또는보고 상태를 변경하지 못하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d12829610558c4919016759396835e76f92154e" translate="yes" xml:space="preserve">
          <source>Not in the face!</source>
          <target state="translated">얼굴에 없다!</target>
        </trans-unit>
        <trans-unit id="4a809b78403a7277786e27dfe78002911aef5301" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.height()&lt;/code&gt; will always return the content height, regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property. As of jQuery 1.8, this may require retrieving the CSS height plus &lt;code&gt;box-sizing&lt;/code&gt; property and then subtracting any potential border and padding on each element when the element has &lt;code&gt;box-sizing: border-box&lt;/code&gt;. To avoid this penalty, use &lt;code&gt;.css( &quot;height&quot; )&lt;/code&gt; rather than &lt;code&gt;.height()&lt;/code&gt;.</source>
          <target state="translated">참고 &lt;code&gt;.height()&lt;/code&gt; 항상 CSS의 값에 관계없이 내용의 높이를 반환합니다 &lt;code&gt;box-sizing&lt;/code&gt; 속성입니다. jQuery 1.8부터는 CSS 높이와 &lt;code&gt;box-sizing&lt;/code&gt; 속성을 검색 한 다음 요소에 &lt;code&gt;box-sizing: border-box&lt;/code&gt; 가있을 때 각 요소에 대한 잠재적 경계 및 패딩을 뺍니다 . 이러한 불이익을 피하려면 &lt;code&gt;.height()&lt;/code&gt; 대신 &lt;code&gt;.css( &quot;height&quot; )&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d521cb2eb4d847aafab1f33616606222d8fc88c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.height(value)&lt;/code&gt; sets the content height of the box regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property.</source>
          <target state="translated">참고 &lt;code&gt;.height(value)&lt;/code&gt; 에 상관없이 CSS의 값의 콘텐츠 상자의 높이를 설정하는 &lt;code&gt;box-sizing&lt;/code&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="d8db3c634b91a6fa6c43ef2cdaf323cb0f3df79e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.hide()&lt;/code&gt; is fired immediately and will override the animation queue if no duration or a duration of 0 is specified.</source>
          <target state="translated">참고 &lt;code&gt;.hide()&lt;/code&gt; 즉시 해고 및 지속 기간 또는 0의 기간이 지정되지 않은 경우 애니메이션 대기열을 우선합니다.</target>
        </trans-unit>
        <trans-unit id="9711528a8180118ddb0068d72b5ca8ade210f007" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.removeData()&lt;/code&gt; will only remove data from jQuery's internal &lt;code&gt;.data()&lt;/code&gt; cache, and any corresponding &lt;code&gt;data-&lt;/code&gt; attributes on the element will not be removed. A later call to &lt;code&gt;data()&lt;/code&gt; will therefore re-retrieve the value from the &lt;code&gt;data-&lt;/code&gt; attribute. To prevent this, use &lt;code&gt;.removeAttr()&lt;/code&gt; alongside &lt;code&gt;.removeData()&lt;/code&gt; to remove the &lt;code&gt;data-&lt;/code&gt; attribute as well. Prior to jQuery 1.4.3, as &lt;code&gt;data()&lt;/code&gt; did not use &lt;code&gt;data-&lt;/code&gt; attributes, this was not an issue.</source>
          <target state="translated">참고 &lt;code&gt;.removeData()&lt;/code&gt; 단지 jQuery의 내부에서 데이터를 제거합니다 &lt;code&gt;.data()&lt;/code&gt; 캐시, 및 해당 &lt;code&gt;data-&lt;/code&gt; 요소의 특성은 제거되지 않습니다. 이후의 거래 통화 &lt;code&gt;data()&lt;/code&gt; 따라서의 값을 다시 취득 할 &lt;code&gt;data-&lt;/code&gt; 속성. 이를 방지하려면 &lt;code&gt;.removeAttr()&lt;/code&gt; 와 함께 &lt;code&gt;.removeData()&lt;/code&gt; 을 사용하여 &lt;code&gt;data-&lt;/code&gt; attribute도 제거하십시오 . jQuery 1.4.3 이전에는 &lt;code&gt;data()&lt;/code&gt; 가 &lt;code&gt;data-&lt;/code&gt; attribute를 사용하지 않았기 때문에 문제가되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="1ce4423aa16e7afc372ee81caa66561e4d4026df" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.width(&quot;value&quot;)&lt;/code&gt; sets the content width of the box regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property.</source>
          <target state="translated">참고 &lt;code&gt;.width(&quot;value&quot;)&lt;/code&gt; 에 관계없이 CSS의 값의 콘텐츠 상자 폭을 설정 &lt;code&gt;box-sizing&lt;/code&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="acd89c9516269297ec24b5b799dcc1b46b2ce023" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;.width()&lt;/code&gt; will always return the content width, regardless of the value of the CSS &lt;code&gt;box-sizing&lt;/code&gt; property. As of jQuery 1.8, this may require retrieving the CSS width plus &lt;code&gt;box-sizing&lt;/code&gt; property and then subtracting any potential border and padding on each element when the element has &lt;code&gt;box-sizing: border-box&lt;/code&gt;. To avoid this penalty, use &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt; rather than &lt;code&gt;.width()&lt;/code&gt;.</source>
          <target state="translated">참고 &lt;code&gt;.width()&lt;/code&gt; 항상 CSS의 값에 관계없이 내용의 폭을 반환합니다 &lt;code&gt;box-sizing&lt;/code&gt; 속성입니다. jQuery 1.8부터는 CSS 너비와 &lt;code&gt;box-sizing&lt;/code&gt; 속성을 검색 한 다음 요소에 &lt;code&gt;box-sizing: border-box&lt;/code&gt; 가있을 때 각 요소의 잠재적 경계 및 패딩을 뺍니다 . 이러한 불이익을 피하려면 &lt;code&gt;.width()&lt;/code&gt; 대신 &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c354c16ce1b6a860ffeca84649ad14496a8beae0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:last&lt;/code&gt; selects a single element by filtering the current jQuery collection and matching the last element within it.</source>
          <target state="translated">참고 &lt;code&gt;:last&lt;/code&gt; 선택은 현재의 jQuery 컬렉션을 필터링하고 내의 마지막 요소를 일치시켜 하나의 소자.</target>
        </trans-unit>
        <trans-unit id="1d4a8fe70fd6ea9a33f034c902c117c9de9efc19" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; provide a code indicating which key is pressed, while &lt;code&gt;keypress&lt;/code&gt; indicates which character was entered. For example, a lowercase &quot;a&quot; will be reported as 65 by &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt;, but as 97 by &lt;code&gt;keypress&lt;/code&gt;. An uppercase &quot;A&quot; is reported as 65 by all events. Because of this distinction, when catching special keystrokes such as arrow keys, &lt;code&gt;.keydown()&lt;/code&gt; or &lt;code&gt;.keyup()&lt;/code&gt; is a better choice.</source>
          <target state="translated">참고 &lt;code&gt;keydown&lt;/code&gt; 과 &lt;code&gt;keyup&lt;/code&gt; 동안 누르면 어떤 키를 나타내는 코드를 제공 &lt;code&gt;keypress&lt;/code&gt; 입력 된 문자를 나타냅니다. 예를 들어, 소문자 &quot;a&quot;는 &lt;code&gt;keydown&lt;/code&gt; 및 &lt;code&gt;keyup&lt;/code&gt; 에 의해 65로 , &lt;code&gt;keypress&lt;/code&gt; 에 의해 97 로보고됩니다 . 대문자 &quot;A&quot;는 모든 이벤트에서 65로보고됩니다. 이러한 차이점 때문에 화살표 키와 같은 특수 키 입력을 잡을 때는 &lt;code&gt;.keydown()&lt;/code&gt; 또는 &lt;code&gt;.keyup()&lt;/code&gt; 이 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="88ce2b97fcd2128e1217e066af88767f51e98167" translate="yes" xml:space="preserve">
          <source>Note that IE8 claims to be 7 in Compatibility View.</source>
          <target state="translated">호환성보기에서 IE8은 7이라고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="b730bee5fbef2f6b2aa292f37918b6fbe66f6a20" translate="yes" xml:space="preserve">
          <source>Note that NaN compares in a strange way:</source>
          <target state="translated">NaN은 이상한 방식으로 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="17fd40d7d7191bd15983da940f2916a408ad9818" translate="yes" xml:space="preserve">
          <source>Note that a Deferred object can be in one of three states: pending, resolved, or rejected; use &lt;a href=&quot;deferred.isrejected&quot;&gt;&lt;code&gt;deferred.isRejected()&lt;/code&gt;&lt;/a&gt; to determine whether the Deferred object is in the rejected state. These methods are primarily useful for debugging, for example to determine whether a Deferred has already been resolved even though you are inside code that intended to reject it.</source>
          <target state="translated">지연된 개체는 다음 세 가지 상태 중 하나 일 수 있습니다. 보류 중, 확인 중 또는 거부 됨; 사용 &lt;a href=&quot;deferred.isrejected&quot;&gt; &lt;code&gt;deferred.isRejected()&lt;/code&gt; &lt;/a&gt; 우회 목적은 거부 상태에 있는지 여부를 결정한다. 이러한 메소드는 주로 디버깅에 유용합니다. 예를 들어 지연하려는 코드 내부에 있어도 지연된 것이 이미 해결되었는지 확인하는 등의 방법입니다.</target>
        </trans-unit>
        <trans-unit id="9630bd329af38494b591e249ba3082f6bd4c0686" translate="yes" xml:space="preserve">
          <source>Note that a Deferred object can be in one of three states: pending, resolved, or rejected; use &lt;a href=&quot;deferred.isresolved&quot;&gt;&lt;code&gt;deferred.isResolved()&lt;/code&gt;&lt;/a&gt; to determine whether the Deferred object is in the resolved state. These methods are primarily useful for debugging, for example to determine whether a Deferred has already been resolved even though you are inside code that intended to reject it.</source>
          <target state="translated">지연된 개체는 다음 세 가지 상태 중 하나 일 수 있습니다. 보류 중, 확인 중 또는 거부 됨; 사용 &lt;a href=&quot;deferred.isresolved&quot;&gt; &lt;code&gt;deferred.isResolved()&lt;/code&gt; &lt;/a&gt; 우회 개체가 해결 된 상태인지 여부를 확인합니다. 이러한 메소드는 주로 디버깅에 유용합니다. 예를 들어 지연하려는 코드 내부에 있어도 지연된 것이 이미 해결되었는지 확인하는 등의 방법입니다.</target>
        </trans-unit>
        <trans-unit id="26f674beb6e78d8599fa149b6e24e2ae88f6e8c4" translate="yes" xml:space="preserve">
          <source>Note that after the conversion, any special features the object had (such as the jQuery methods in our example) will no longer be present. The object is now a plain array.</source>
          <target state="translated">변환 후에는 객체의 특수 기능 (예 : jQuery 메소드 등)이 더 이상 존재하지 않습니다. 객체는 이제 일반 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b62d69bdfab57f000c6edea0c915770659ae3387" translate="yes" xml:space="preserve">
          <source>Note that although the DOM always becomes ready before the page is fully loaded, it is &lt;em&gt;usually not safe&lt;/em&gt; to attach a &lt;code&gt;load&lt;/code&gt; event listener in code executed during a &lt;code&gt;.ready()&lt;/code&gt; handler. For example, scripts can be loaded dynamically long after the page has loaded using methods such as &lt;code&gt;$.getScript()&lt;/code&gt;. Although handlers added by &lt;code&gt;.ready()&lt;/code&gt; will always be executed in a dynamically loaded script, the &lt;code&gt;window&lt;/code&gt;'s &lt;code&gt;load&lt;/code&gt; event has already occurred and those listeners will never run.</source>
          <target state="translated">DOM이 페이지가 완전히로드되기 전에 항상 준비가 되더라도 &lt;em&gt;일반적으로 &lt;/em&gt; &lt;code&gt;.ready()&lt;/code&gt; 핸들러 동안 실행되는 코드에 &lt;code&gt;load&lt;/code&gt; 이벤트 리스너 를 첨부하는 &lt;em&gt;것은 안전하지 않습니다&lt;/em&gt; . 예를 들어 &lt;code&gt;$.getScript()&lt;/code&gt; 와 같은 메소드를 사용하여 페이지를로드 한 후에도 스크립트를 동적으로로드 할 수 있습니다 . &lt;code&gt;.ready()&lt;/code&gt; 에 의해 추가 된 핸들러 는 항상 동적으로로드 된 스크립트에서 실행되지만 &lt;code&gt;window&lt;/code&gt; 의 &lt;code&gt;load&lt;/code&gt; 이벤트는 이미 발생했으며 해당 리스너는 절대 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="01a3e5dfb28217a94daa28214d6c0477c641548f" translate="yes" xml:space="preserve">
          <source>Note that for-in-loop can be spoiled by extending Object.prototype (see &lt;a href=&quot;http://erik.eae.net/archives/2005/06/06/22.13.54/&quot;&gt;Object.prototype is verboten&lt;/a&gt;) so take care when using other libraries.</source>
          <target state="translated">Object.prototype을 확장하면 for-in-loop가 손상 될 수 있으므로 ( &lt;a href=&quot;http://erik.eae.net/archives/2005/06/06/22.13.54/&quot;&gt;Object.prototype은 verboten&lt;/a&gt; 참조 ) 다른 라이브러리를 사용할 때는주의하십시오.</target>
        </trans-unit>
        <trans-unit id="8bd3ff09d5715f9fe52dabddc8542430bc33d309" translate="yes" xml:space="preserve">
          <source>Note that if the jQuery collection used as the &lt;code&gt;.index()&lt;/code&gt; method's argument contains more than one element, the first element within the matched set of elements will be used.</source>
          <target state="translated">&lt;code&gt;.index()&lt;/code&gt; 메소드의 인수 로 사용 된 jQuery 콜렉션 에 둘 이상의 요소가 포함 된 경우 일치하는 요소 세트 내의 첫 번째 요소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="64d4063be050ac5b068ab028685a6297935553e0" translate="yes" xml:space="preserve">
          <source>Note that if you're looking to use this for plugin development you should first</source>
          <target state="translated">플러그인 개발에이 기능을 사용하려면 먼저</target>
        </trans-unit>
        <trans-unit id="603e2d0c6f8c58fff721f8a185bc7d4842b32343" translate="yes" xml:space="preserve">
          <source>Note that jQuery's event system uses the jQuery data API to store event handlers. Therefore, binding an event to an element using &lt;code&gt;.on()&lt;/code&gt;, &lt;code&gt;.bind()&lt;/code&gt;, &lt;code&gt;.live()&lt;/code&gt;, &lt;code&gt;.delegate()&lt;/code&gt;, or one of the shorthand event methods also associates a data object with that element.</source>
          <target state="translated">jQuery의 이벤트 시스템은 jQuery 데이터 API를 사용하여 이벤트 핸들러를 저장합니다. 따라서, 사용 된 요소에 이벤트를 결합 &lt;code&gt;.on()&lt;/code&gt; , &lt;code&gt;.bind()&lt;/code&gt; , &lt;code&gt;.live()&lt;/code&gt; , &lt;code&gt;.delegate()&lt;/code&gt; 또는 속기 이벤트 방법 중 하나는 해당 요소와 데이터 객체를 연관시킨다.</target>
        </trans-unit>
        <trans-unit id="634f69663bc0abc99416e2453da309a3f7ccb99b" translate="yes" xml:space="preserve">
          <source>Note that jQuery.sub() doesn't attempt to do any sort of isolation - that's not its intention. All the methods on the sub'd version of jQuery will still point to the original jQuery (events bound and triggered will still be through the main jQuery, data will be bound to elements through the main jQuery, Ajax queries and events will run through the main jQuery, etc.).</source>
          <target state="translated">jQuery.sub ()는 어떤 종류의 격리도 시도하지 않습니다. 의도는 아닙니다. 하위 버전의 jQuery에있는 모든 메소드는 여전히 원래 jQuery를 가리 킵니다 (이벤트 바운드 및 트리거 된 이벤트는 여전히 기본 jQuery를 통해, 데이터는 기본 jQuery를 통해 요소에 바인딩되며 Ajax 쿼리 및 이벤트는 주요 jQuery 등).</target>
        </trans-unit>
        <trans-unit id="18879f7ea7679c34db58221ad1b80ff7971dd1de" translate="yes" xml:space="preserve">
          <source>Note that objects are passed to functions &lt;em&gt;by reference&lt;/em&gt;, which further complicates this scenario.</source>
          <target state="translated">객체는 &lt;em&gt;참조&lt;/em&gt; 로 함수 &lt;em&gt;에&lt;/em&gt; 전달 되므로이 시나리오가 더욱 복잡해집니다.</target>
        </trans-unit>
        <trans-unit id="b16ae4b22cd1eb12b6549a616d3b81fc77206238" translate="yes" xml:space="preserve">
          <source>Note that since JavaScript arrays use &lt;em&gt;0-based indexing&lt;/em&gt;, these selectors reflect that fact. This is why &lt;code&gt;$( &quot;.myclass:eq(1)&quot; )&lt;/code&gt; selects the second element in the document with the class myclass, rather than the first. In contrast, &lt;code&gt;:nth-child(n)&lt;/code&gt; uses &lt;em&gt;1-based indexing&lt;/em&gt; to conform to the CSS specification.</source>
          <target state="translated">JavaScript 배열은 &lt;em&gt;0 기반 인덱싱을&lt;/em&gt; 사용하므로 이러한 선택기는 해당 사실을 반영합니다. 그렇기 때문에 &lt;code&gt;$( &quot;.myclass:eq(1)&quot; )&lt;/code&gt; 는 문서에서 첫 번째가 아닌 클래스가 myclass 인 두 번째 요소를 선택하는 이유 입니다. 반대로 &lt;code&gt;:nth-child(n)&lt;/code&gt; 은 &lt;em&gt;1- 기반 색인&lt;/em&gt; 을 사용 하여 CSS 사양을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="06ca820266cda6fdb04709e1a10129b0a00c73b3" translate="yes" xml:space="preserve">
          <source>Note that since JavaScript arrays use &lt;em&gt;0-based indexing&lt;/em&gt;, these selectors reflect that fact. This is why &lt;code&gt;$( &quot;.myclass:gt(1)&quot; )&lt;/code&gt; selects elements after the second element in the document with the class &lt;code&gt;myclass&lt;/code&gt;, rather than after the first. In contrast, &lt;code&gt;:nth-child(n)&lt;/code&gt; uses &lt;em&gt;1-based indexing&lt;/em&gt; to conform to the CSS specification.</source>
          <target state="translated">JavaScript 배열은 &lt;em&gt;0 기반 인덱싱을&lt;/em&gt; 사용하므로 이러한 선택기는 해당 사실을 반영합니다. 그렇기 때문에 &lt;code&gt;$( &quot;.myclass:gt(1)&quot; )&lt;/code&gt; 는 문서 에서 첫 번째가 아닌 &lt;code&gt;myclass&lt;/code&gt; 클래스를 사용하여 문서의 두 번째 요소 다음에있는 요소를 선택하는 이유 입니다. 반대로 &lt;code&gt;:nth-child(n)&lt;/code&gt; 은 &lt;em&gt;1- 기반 색인&lt;/em&gt; 을 사용 하여 CSS 사양을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="4d4a901ef4bf647f88ca26cecb20b6eb14db931d" translate="yes" xml:space="preserve">
          <source>Note that since JavaScript arrays use &lt;em&gt;0-based indexing&lt;/em&gt;, these selectors reflect that fact. This is why &lt;code&gt;$( &quot;.myclass:lt(1)&quot; )&lt;/code&gt; selects the first element in the document with the class &lt;code&gt;myclass&lt;/code&gt;, rather than selecting no elements. In contrast, &lt;code&gt;:nth-child(n)&lt;/code&gt; uses &lt;em&gt;1-based indexing&lt;/em&gt; to conform to the CSS specification.</source>
          <target state="translated">JavaScript 배열은 &lt;em&gt;0 기반 인덱싱을&lt;/em&gt; 사용하므로 이러한 선택기는 해당 사실을 반영합니다. 그렇기 때문에 &lt;code&gt;$( &quot;.myclass:lt(1)&quot; )&lt;/code&gt; 은 요소를 선택하지 않고 &lt;code&gt;myclass&lt;/code&gt; 클래스를 사용하여 문서에서 첫 번째 요소를 선택합니다. 반대로 &lt;code&gt;:nth-child(n)&lt;/code&gt; 은 &lt;em&gt;1- 기반 색인&lt;/em&gt; 을 사용 하여 CSS 사양을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="837cf0dda8587904e1c8b4dc7372d54cd8666fea" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;step&lt;/code&gt; function is called for each animated property on each animated element. For example, given two list items, the &lt;code&gt;step&lt;/code&gt; function fires four times at each step of the animation:</source>
          <target state="translated">점을 유의 &lt;code&gt;step&lt;/code&gt; 함수는, 각 애니메이션 요소의 각 애니메이션 속성이라고한다. 예를 들어, 두 개의 목록 항목이 &lt;code&gt;step&lt;/code&gt; 함수는 애니메이션의 각 단계에서 4 번 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="89bd7bf0525aa8fb6ec233eb8b29af57c43ca4e0" translate="yes" xml:space="preserve">
          <source>Note that the &lt;em&gt;computed style&lt;/em&gt; of an element may not be the same as the value specified for that element in a style sheet. For example, computed styles of dimensions are almost always pixels, but they can be specified as em, ex, px or % in a style sheet. Different browsers may return CSS color values that are logically but not textually equal, e.g., #FFF, #ffffff, and rgb(255,255,255).</source>
          <target state="translated">요소 의 &lt;em&gt;계산 스타일&lt;/em&gt; 은 스타일 시트에서 해당 요소에 지정된 값과 동일하지 않을 수 있습니다. 예를 들어, 계산 된 치수 스타일은 거의 항상 픽셀이지만 스타일 시트에서 em, ex, px 또는 %로 지정할 수 있습니다. 다른 브라우저는 논리적이지만 텍스트 적으로 동일하지 않은 CSS 색상 값을 반환 할 수 있습니다 (예 : #FFF, #ffffff 및 rgb (255,255,255)).</target>
        </trans-unit>
        <trans-unit id="c4e91c74b1d6ce0d63fc1fca5fe358776b395642" translate="yes" xml:space="preserve">
          <source>Note that the context property may only apply to the elements originally selected by &lt;code&gt;jQuery()&lt;/code&gt;, as it is possible for the user to add elements to the collection via methods such as &lt;code&gt;.add()&lt;/code&gt; and these may have a different context.</source>
          <target state="translated">context 속성은 사용자가 &lt;code&gt;.add()&lt;/code&gt; 와 같은 메소드를 통해 컬렉션에 요소를 추가 할 수 있고 다른 컨텍스트를 가질 수 있으므로 &lt;code&gt;jQuery()&lt;/code&gt; 의해 원래 선택된 요소에만 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc4578e5938b3ccd16a00678c9fb299762e48ca3" translate="yes" xml:space="preserve">
          <source>Note that the target value of the &lt;code&gt;height&lt;/code&gt; property is &lt;code&gt;'toggle'&lt;/code&gt;. Since the image was visible before, the animation shrinks the height to 0 to hide it. A second click then reverses this transition:</source>
          <target state="translated">&lt;code&gt;height&lt;/code&gt; 속성 의 대상 값 은 &lt;code&gt;'toggle'&lt;/code&gt; 입니다. 이미지가 이전에 표시되었으므로 애니메이션은 높이를 0으로 축소하여 숨 깁니다. 두 번 클릭하면이 전환이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="4304dd37d492275ef66c42396af7751c4db2cbd2" translate="yes" xml:space="preserve">
          <source>Note that this is the API documentation for jQuery core. Other projects have API docs in other locations:</source>
          <target state="translated">이것은 jQuery 코어에 대한 API 문서입니다. 다른 프로젝트에는 다른 위치에 API 문서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3007f4996fe58fef68b794b50262436db2ee8208" translate="yes" xml:space="preserve">
          <source>Note that this method currently does not provide cross-platform support for setting data on XML documents, as Internet Explorer does not allow data to be attached via expando properties.</source>
          <target state="translated">Internet Explorer에서는 expando 속성을 통해 데이터를 첨부 할 수 없으므로이 방법은 현재 XML 문서에서 데이터를 설정하기위한 크로스 플랫폼 지원을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09023bbb7aa11b2e08f9cd1a97c15fb6606c42a3" translate="yes" xml:space="preserve">
          <source>Note that this will not prevent other handlers &lt;em&gt;on the same element&lt;/em&gt; from running.</source>
          <target state="translated">이로 &lt;em&gt;인해 동일한 요소의&lt;/em&gt; 다른 핸들러 가 실행되는 것을 막을 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8c12a70d1c50da308e089b41b1f4de392a75cd32" translate="yes" xml:space="preserve">
          <source>Note that this works best for simple numeric-value animations. More custom code may be required depending on the CSS property, the type of value it returns, and the animation's complexity.</source>
          <target state="translated">간단한 숫자 값 애니메이션에 가장 적합합니다. CSS 속성, 반환되는 값 유형 및 애니메이션의 복잡성에 따라 더 많은 사용자 지정 코드가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="becce3c8206120d3cd651c78ed72e1ed735a1a17" translate="yes" xml:space="preserve">
          <source>Note that when adding a function with &lt;code&gt;.queue()&lt;/code&gt;, we should ensure that &lt;code&gt;.dequeue()&lt;/code&gt; is eventually called so that the next function in line executes.</source>
          <target state="translated">있는 기능을 추가 할 때주의 &lt;code&gt;.queue()&lt;/code&gt; , 우리가 있는지 확인해야합니다 &lt;code&gt;.dequeue()&lt;/code&gt; 결국 그래서이라고 라인이 실행에서 다음 기능.</target>
        </trans-unit>
        <trans-unit id="8b385a606da8a9fd15636c3d6922ac03a0564c95" translate="yes" xml:space="preserve">
          <source>Note that when adding a function with &lt;code&gt;jQuery.queue()&lt;/code&gt;, we should ensure that &lt;code&gt;jQuery.dequeue()&lt;/code&gt; is eventually called so that the next function in line executes.</source>
          <target state="translated">있는 기능을 추가 할 때주의 &lt;code&gt;jQuery.queue()&lt;/code&gt; , 우리가 있는지 확인해야합니다 &lt;code&gt;jQuery.dequeue()&lt;/code&gt; 결국라고 라인이 실행에서 다음 기능 있도록.</target>
        </trans-unit>
        <trans-unit id="eb6dc18e87cfc3f7fe67b078666d905e3eac0f91" translate="yes" xml:space="preserve">
          <source>Note the difference between the extra parameters passed here and the &lt;code&gt;eventData&lt;/code&gt; parameter to the &lt;a href=&quot;on&quot;&gt;.on()&lt;/a&gt; method. Both are mechanisms for passing information to an event handler, but the &lt;code&gt;extraParameters&lt;/code&gt; argument to &lt;code&gt;.trigger()&lt;/code&gt; allows information to be determined at the time the event is triggered, while the &lt;code&gt;eventData&lt;/code&gt; argument to &lt;code&gt;.on()&lt;/code&gt; requires the information to be already computed at the time the handler is bound.</source>
          <target state="translated">여기에 전달 된 추가 매개 변수와 &lt;a href=&quot;on&quot;&gt;.on ()&lt;/a&gt; 메소드에 대한 &lt;code&gt;eventData&lt;/code&gt; 매개 변수의 차이점에 유의하십시오 . 두 이벤트 처리기에 정보를 전달하는 메커니즘이 있지만 &lt;code&gt;extraParameters&lt;/code&gt; 의 에 인수 &lt;code&gt;.trigger()&lt;/code&gt; 그동안 정보는 이벤트가 트리거 될 때 결정 할 수 &lt;code&gt;eventData&lt;/code&gt; 에 인수 &lt;code&gt;.on()&lt;/code&gt; 에 이미 계산 될 수있는 정보를 필요로 핸들러가 바인드 된 시간</target>
        </trans-unit>
        <trans-unit id="e04b2c1fe338445e39f76c0b8b6d8301cb5a519a" translate="yes" xml:space="preserve">
          <source>Note the parameter added to the anonymous function. This code will cause a click on the element with ID &lt;code&gt;foo&lt;/code&gt; to report the page coordinates of the mouse cursor at the time of the click.</source>
          <target state="translated">익명 함수에 추가 된 매개 변수에 유의하십시오. 이 코드는 ID가 &lt;code&gt;foo&lt;/code&gt; 인 요소를 클릭하면 클릭시 마우스 커서의 페이지 좌표를보고합니다.</target>
        </trans-unit>
        <trans-unit id="f701904f79f165978ae29e638680c1028a521276" translate="yes" xml:space="preserve">
          <source>Note: .unshift() method does not return a length property in Internet Explorer.</source>
          <target state="translated">참고 : .unshift () 메서드는 Internet Explorer에서 길이 속성을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32016c6b7d5a6fddec99d790076c9a63fa50000b" translate="yes" xml:space="preserve">
          <source>Note: A jQuery &lt;code&gt;error&lt;/code&gt; event handler should not be attached to the &lt;code&gt;window&lt;/code&gt; object. The browser fires the &lt;code&gt;window&lt;/code&gt;'s &lt;code&gt;error&lt;/code&gt; event when a script error occurs. However, the window &lt;code&gt;error&lt;/code&gt; event receives different arguments and has different return value requirements than conventional event handlers. Use &lt;code&gt;window.onerror&lt;/code&gt; instead.</source>
          <target state="translated">참고 : jQuery &lt;code&gt;error&lt;/code&gt; 이벤트 핸들러는 &lt;code&gt;window&lt;/code&gt; 객체에 첨부하지 않아야 합니다. 브라우저는 발사 &lt;code&gt;window&lt;/code&gt; 의 &lt;code&gt;error&lt;/code&gt; 스크립트 오류가 발생하면 이벤트. 그러나 창 &lt;code&gt;error&lt;/code&gt; 이벤트는 다른 인수를 수신하며 기존 이벤트 핸들러와 다른 리턴 값 요구 사항을 갖습니다. 대신 &lt;code&gt;window.onerror&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3ca1b3c9a6a8e404fdbe867d0b6c585beff5aa0" translate="yes" xml:space="preserve">
          <source>Note: Due to a &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=238041&quot;&gt;bug open since 2004&lt;/a&gt;, this value is not populated correctly in Firefox and it is not possible to know the time the event was created in that browser.</source>
          <target state="translated">참고 : &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=238041&quot;&gt;2004 년 이후에 열린 버그&lt;/a&gt; 로 인해이 값은 Firefox에서 올바르게 채워지지 않으며 해당 브라우저에서 이벤트가 작성된 시간을 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="42a7714f1f8d157530238b15827fa20fa154221c" translate="yes" xml:space="preserve">
          <source>Note: Global callback functions should be set with their respective global Ajax event handler methods&amp;mdash;&lt;code&gt;&lt;a href=&quot;ajaxstart&quot;&gt;.ajaxStart()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxstop&quot;&gt;.ajaxStop()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxcomplete&quot;&gt;.ajaxComplete()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxsuccess&quot;&gt;.ajaxSuccess()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt;&amp;mdash;rather than within the &lt;code&gt;options&lt;/code&gt; object for &lt;code&gt;$.ajaxSetup()&lt;/code&gt;.</source>
          <target state="translated">참고 : 전역 콜백 함수는 각각의 전역 Ajax 이벤트 핸들러 메소드 ( &lt;code&gt;&lt;a href=&quot;ajaxstart&quot;&gt;.ajaxStart()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxstop&quot;&gt;.ajaxStop()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxcomplete&quot;&gt;.ajaxComplete()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxerror&quot;&gt;.ajaxError()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxsuccess&quot;&gt;.ajaxSuccess()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ajaxsend&quot;&gt;.ajaxSend()&lt;/a&gt;&lt;/code&gt; 해야합니다. &lt;code&gt;$.ajaxSetup()&lt;/code&gt; 의 &lt;code&gt;options&lt;/code&gt; 객체 .</target>
        </trans-unit>
        <trans-unit id="7ab92c4359e4cac3efabf7665a01ec840085e668" translate="yes" xml:space="preserve">
          <source>Note: Only &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.13.2&quot;&gt;&quot;successful controls&quot;&lt;/a&gt; are serialized to the string. No submit button value is serialized since the form was not submitted using a button. For a form element's value to be included in the serialized string, the element must have a &lt;code&gt;name&lt;/code&gt; attribute. Values from checkboxes and radio buttons (&lt;code&gt;input&lt;/code&gt;s of type &quot;radio&quot; or &quot;checkbox&quot;) are included only if they are checked. Data from file select elements is not serialized.</source>
          <target state="translated">참고 : &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.13.2&quot;&gt;&quot;성공적인 컨트롤&quot;&lt;/a&gt; 만 문자열에 직렬화됩니다. 양식을 단추를 사용하여 제출하지 않았기 때문에 제출 단추 값이 직렬화되지 않았습니다. 직렬화 된 문자열에 양식 요소의 값을 포함 시키려면 요소에 &lt;code&gt;name&lt;/code&gt; 속성 이 있어야 합니다. 확인란과 라디오 버튼 ( &quot;라디오&quot;또는 &quot;확인란&quot;유형의 &lt;code&gt;input&lt;/code&gt; 의 값 은 확인 된 경우에만 포함됩니다. 파일 선택 요소의 데이터는 직렬화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="375d0d6a84343703c450f78f5de4ea229fa15811" translate="yes" xml:space="preserve">
          <source>Note: Prior to jQuery 3.0, the event handling suite also had a method named &lt;code&gt;&lt;a href=&quot;load-event&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt;. Older versions of jQuery determined which method to fire based on the set of arguments passed to it.</source>
          <target state="translated">참고 : jQuery 3.0 이전에는 이벤트 처리 제품군에 &lt;code&gt;&lt;a href=&quot;load-event&quot;&gt;.load()&lt;/a&gt;&lt;/code&gt; 라는 메소드가있었습니다 . 이전 버전의 jQuery는 전달 된 인수 세트를 기반으로 실행할 메소드를 결정했습니다.</target>
        </trans-unit>
        <trans-unit id="6b02e208e242588e6c10f7865c6a005487d08580" translate="yes" xml:space="preserve">
          <source>Note: The event handling suite also has a method named &lt;a href=&quot;toggle-event&quot;&gt;.toggle()&lt;/a&gt;. Which one is fired depends on the set of arguments passed.</source>
          <target state="translated">참고 : 이벤트 처리 제품군에는 &lt;a href=&quot;toggle-event&quot;&gt;.toggle ()&lt;/a&gt; 이라는 메서드도 있습니다 . 어느 것이 발생했는지는 전달 된 인수 세트에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8700ec995cd6a062d91bd3a04552f61268ce0e11" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.2. Instead of relying on this global switch, it's better to put explicitly wait for required code. If you need to wait both for the ready state &amp;amp; for a custom promise, use the following pattern:</source>
          <target state="translated">참고 :이 API는 jQuery 3.2에서 더 이상 사용되지 않습니다. 이 전역 스위치에 의존하는 대신 필요한 코드를 명시 적으로 기다리는 것이 좋습니다. 준비 상태와 사용자 지정 약속을 모두 기다려야하는 경우 다음 패턴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c5956b7156a30564e24eb8359016fb6e54bde0ef" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.2; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;&lt;code&gt;Array.isArray&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">참고 :이 API는 jQuery 3.2에서 더 이상 사용되지 않습니다. 대신 기본 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt; &lt;code&gt;Array.isArray&lt;/code&gt; &lt;/a&gt; 메서드 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c9b81f769767fd0b2e8f71b6894d0bfd9044367" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3.</source>
          <target state="translated">참고 :이 API는 jQuery 3.3에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c67b55cc6050ef69efcab7b6d64681443fb15db" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3; if you need this function, reimplement it by yourself:</source>
          <target state="translated">참고 :이 API는 jQuery 3.3에서 더 이상 사용되지 않습니다. 이 기능이 필요하면 직접 다시 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="9154845b3905d4b1dc76a1eb6f8618ba026d9ccc" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">참고 :이 API는 jQuery 3.3에서 더 이상 사용되지 않습니다. 대신 기본 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt; &lt;code&gt;Date.now()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d1a2d60a6cf9732adefde7aa8904f1564d03727b" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.3; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">참고 :이 API는 jQuery 3.3에서 더 이상 사용되지 않습니다. 대신 기본 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind&quot;&gt; &lt;code&gt;Function.prototype.bind&lt;/code&gt; &lt;/a&gt; 메서드 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f538762441baf9b8fbe9ab58d28e338eee730e62" translate="yes" xml:space="preserve">
          <source>Note: This API has been deprecated in jQuery 3.5; please use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim&quot;&gt;&lt;code&gt;String.prototype.trim&lt;/code&gt;&lt;/a&gt; method instead. Unlike &lt;code&gt;jQuery.trim&lt;/code&gt;, &lt;code&gt;String.prototype.trim&lt;/code&gt; does not work with types other than strings (&lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;). Make sure that your code is compatible when migrating.</source>
          <target state="translated">참고 :이 API는 jQuery 3.5에서 더 이상 사용되지 않습니다. 대신 기본 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim&quot;&gt; &lt;code&gt;String.prototype.trim&lt;/code&gt; &lt;/a&gt; 메서드 를 사용하십시오 . 달리 &lt;code&gt;jQuery.trim&lt;/code&gt; , &lt;code&gt;String.prototype.trim&lt;/code&gt; 는 문자열 이외의 유형 (작동하지 않습니다 &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; , &lt;code&gt;Number&lt;/code&gt; ). 마이그레이션 할 때 코드가 호환되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bc4524f3322e89c25a21849a32a338d640f1eadf" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.8; please use &lt;a href=&quot;deferred.state&quot;&gt;&lt;code&gt;deferred.state()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">참고 :이 API는 jQuery 1.8에서 제거되었습니다. 사용하십시오 &lt;a href=&quot;deferred.state&quot;&gt; &lt;code&gt;deferred.state()&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="ef026eb8ac74a988ba2861c5afcf0c1d71df11a1" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.9.</source>
          <target state="translated">참고 :이 API는 jQuery 1.9에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="4544af9b7ab89bc52ce4d6cc66e290a3ea051923" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.9; please rely on feature detection instead.</source>
          <target state="translated">참고 :이 API는 jQuery 1.9에서 제거되었습니다. 대신 기능 감지에 의존하십시오.</target>
        </trans-unit>
        <trans-unit id="ea44b6ce4fdcd08883fe627ac4ef87a50388d739" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 1.9; please use &lt;a href=&quot;on&quot;&gt;&lt;code&gt;on()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">참고 :이 API는 jQuery 1.9에서 제거되었습니다. 사용하십시오 &lt;a href=&quot;on&quot;&gt; &lt;code&gt;on()&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="69a5700b6a79e5c6615fe2767c8b89ffb1724166" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0.</source>
          <target state="translated">참고 :이 API는 jQuery 3.0에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="ad2324d58dde522dd19a4f6aa112e43cf2b1293d" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0. The property was never a reliable indicator of the selector that could be used to obtain the set of elements currently contained in the jQuery set where it was a property, since subsequent traversal methods may have changed the set. Plugins that need to use a selector string within their plugin can require it as a parameter of the method. For example, a &quot;foo&quot; plugin could be written as &lt;code&gt;$.fn.foo = function( selector, options ) { /* plugin code goes here */ };&lt;/code&gt;, and the person using the plugin would write &lt;code&gt;$( &quot;div.bar&quot; ).foo( &quot;div.bar&quot;, {dog: &quot;bark&quot;} );&lt;/code&gt; with the &lt;code&gt;&quot;div.bar&quot;&lt;/code&gt; selector repeated as the first argument of &lt;code&gt;.foo()&lt;/code&gt;.</source>
          <target state="translated">참고 :이 API는 jQuery 3.0에서 제거되었습니다. 후속 순회 메서드가 집합을 변경했을 수 있기 때문에 속성은 속성이었던 jQuery 집합에 현재 포함 된 요소 집합을 가져 오는 데 사용할 수있는 선택 자의 신뢰할 수있는 표시기가 아닙니다. 플러그인 내에서 선택기 문자열을 사용해야하는 플러그인은이를 메서드의 매개 변수로 요구할 수 있습니다. 예를 들어, &quot;foo&quot;플러그인은 &lt;code&gt;$.fn.foo = function( selector, options ) { /* plugin code goes here */ };&lt;/code&gt; , 플러그인을 사용하는 사람은 &lt;code&gt;$( &quot;div.bar&quot; ).foo( &quot;div.bar&quot;, {dog: &quot;bark&quot;} );&lt;/code&gt; 와 &lt;code&gt;&quot;div.bar&quot;&lt;/code&gt; 의 첫번째 인자로 반복 선택기 &lt;code&gt;.foo()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b25ae52bf91e0779260df88cdcf8d529db86254" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; check if &lt;code&gt;.document.compatMode&lt;/code&gt; is equal to &lt;code&gt;&quot;CSS1Compat&quot;&lt;/code&gt; instead. Or, even better - always specify a DOCTYPE and avoid using quirks mode which jQuery doesn't support.</source>
          <target state="translated">참고 :이 API는 jQuery 3.0에서 제거되었습니다. 있는지 확인 &lt;code&gt;.document.compatMode&lt;/code&gt; 이 같다 &lt;code&gt;&quot;CSS1Compat&quot;&lt;/code&gt; 대신. 또는 더 나은 방법-항상 DOCTYPE을 지정하고 jQuery가 지원하지 않는 쿼크 모드를 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="049568fe855138af7a4b4e69058d751555f8ca1d" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; please use &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt; instead of &lt;code&gt;.error( handler )&lt;/code&gt; and &lt;code&gt;.trigger( &quot;error&quot; )&lt;/code&gt; instead of &lt;code&gt;.error()&lt;/code&gt;.</source>
          <target state="translated">참고 :이 API는 jQuery 3.0에서 제거되었습니다. 사용하십시오 &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt; 대신 &lt;code&gt;.error( handler )&lt;/code&gt; 와 &lt;code&gt;.trigger( &quot;error&quot; )&lt;/code&gt; 대신 &lt;code&gt;.error()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ecb8326ae9d7f966d12c47ea5e9450fe701857a" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; please use &lt;code&gt;.on( &quot;load&quot;, handler )&lt;/code&gt; instead of &lt;code&gt;.load( handler )&lt;/code&gt; and &lt;code&gt;.trigger( &quot;load&quot; )&lt;/code&gt; instead of &lt;code&gt;.load()&lt;/code&gt;.</source>
          <target state="translated">참고 :이 API는 jQuery 3.0에서 제거되었습니다. 사용하십시오 &lt;code&gt;.on( &quot;load&quot;, handler )&lt;/code&gt; 대신 &lt;code&gt;.load( handler )&lt;/code&gt; 와 &lt;code&gt;.trigger( &quot;load&quot; )&lt;/code&gt; 대신 &lt;code&gt;.load()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abf9faa6cf8d827f52da5ee9f981a93f589fc4be" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; please use &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt; instead of &lt;code&gt;.unload( handler )&lt;/code&gt; and &lt;code&gt;.trigger( &quot;unload&quot; )&lt;/code&gt; instead of &lt;code&gt;.unload()&lt;/code&gt;.</source>
          <target state="translated">참고 :이 API는 jQuery 3.0에서 제거되었습니다. 사용하십시오 &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt; 대신 &lt;code&gt;.unload( handler )&lt;/code&gt; 와 &lt;code&gt;.trigger( &quot;unload&quot; )&lt;/code&gt; 대신 &lt;code&gt;.unload()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c873e23f1b8328a9dc6f6e63720e441da715d45" translate="yes" xml:space="preserve">
          <source>Note: This API has been removed in jQuery 3.0; use &lt;a href=&quot;addback&quot;&gt;&lt;code&gt;.addBack()&lt;/code&gt;&lt;/a&gt; instead, which should work identically.</source>
          <target state="translated">참고 :이 API는 jQuery 3.0에서 제거되었습니다. 사용하다&lt;a href=&quot;addback&quot;&gt; &lt;code&gt;.addBack()&lt;/code&gt; &lt;/a&gt; 동일하게 작동해야하는 대신.</target>
        </trans-unit>
        <trans-unit id="191597062faba122b7ba54499df3dafb0a188f54" translate="yes" xml:space="preserve">
          <source>Note: This method has been removed in jQuery 3.0. Use the &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property instead.</source>
          <target state="translated">참고 :이 메서드는 jQuery 3.0에서 제거되었습니다. 대신 &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c73a524b8268b424ef6007de91150b5635828515" translate="yes" xml:space="preserve">
          <source>Note: This method signature was deprecated in jQuery 1.8 and removed in jQuery 1.9. jQuery also provides an animation method named &lt;a href=&quot;toggle&quot;&gt;.toggle()&lt;/a&gt; that toggles the visibility of elements. Whether the animation or the event method is fired depends on the set of arguments passed.</source>
          <target state="translated">참고 :이 메소드 서명은 jQuery 1.8에서 더 이상 사용되지 않으며 jQuery 1.9에서 제거되었습니다. jQuery는 또한 요소의 가시성을 토글하는 &lt;a href=&quot;toggle&quot;&gt;.toggle ()&lt;/a&gt; 이라는 애니메이션 메소드를 제공합니다 . 애니메이션 또는 이벤트 메소드의 실행 여부는 전달 된 인수 세트에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a8218e2700a4958410ccaa8b3d117e2195b2f7b9" translate="yes" xml:space="preserve">
          <source>Note: most jQuery methods that return a jQuery object also loop through the set of elements in the jQuery collection &amp;mdash; a process known as</source>
          <target state="translated">참고 : jQuery 객체를 반환하는 대부분의 jQuery 메소드는 jQuery 컬렉션의 요소 세트 (루프라고도 함)를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="449182458d80e2e3a6776498fb9494e672efc40c" translate="yes" xml:space="preserve">
          <source>Now clicking on the first field, or tabbing to it from another field, displays the alert:</source>
          <target state="translated">이제 첫 번째 필드를 클릭하거나 다른 필드에서 탭하면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="117a6584ee35d7f3434599135580b2640ed2d0c8" translate="yes" xml:space="preserve">
          <source>Now double-clicking on this element displays the alert:</source>
          <target state="translated">이제이 요소를 두 번 클릭하면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0d801ef372ff23fa09a60c2d3ecd056a7370ac63" translate="yes" xml:space="preserve">
          <source>Now each time an Ajax request is made, the &quot;ping.php&quot; URL will be used automatically:</source>
          <target state="translated">이제 Ajax 요청이있을 때마다 &quot;ping.php&quot;URL이 자동으로 사용됩니다 :</target>
        </trans-unit>
        <trans-unit id="c1dcf26eac2c773438ce3fceede02a7f078bdd04" translate="yes" xml:space="preserve">
          <source>Now if the first field has the focus, clicking elsewhere or tabbing away from it displays the alert:</source>
          <target state="translated">이제 첫 번째 필드에 초점이 있으면 다른 곳을 클릭하거나 멀리 이동하면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3f0aefcd62e016bbe1fbac67718dc966c0c054d6" translate="yes" xml:space="preserve">
          <source>Now if we click on this element, the alert is displayed:</source>
          <target state="translated">이제이 요소를 클릭하면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7e6bef5d9ba5c6c5dd29087874d5b97464fe825b" translate="yes" xml:space="preserve">
          <source>Now only items 3 and 4 are selected. The index is once again zero-based; the range extends up to but not including the specified index.</source>
          <target state="translated">이제 항목 3과 4 만 선택되었습니다. 인덱스는 다시 한 번 0부터 시작합니다. 범위는 지정된 색인까지 포함되지만 그 범위까지 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="baa345b19e98c7b7e1bf8a0c918bba74520a8284" translate="yes" xml:space="preserve">
          <source>Now right-clicking on this element displays the alert:</source>
          <target state="translated">이제이 요소를 마우스 오른쪽 버튼으로 클릭하면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="76cc6d5115e691351218d8b2980f724a73c77bb2" translate="yes" xml:space="preserve">
          <source>Now when any portion of the text is selected, the alert is displayed. Merely setting the location of the insertion point will not trigger the event. To trigger the event manually, apply &lt;code&gt;.select()&lt;/code&gt; without an argument:</source>
          <target state="translated">이제 텍스트의 일부를 선택하면 경고가 표시됩니다. 삽입 점의 위치를 ​​설정하면 이벤트가 트리거되지 않습니다. 이벤트를 수동으로 트리거하려면 인수없이 &lt;code&gt;.select()&lt;/code&gt; 를 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b47155e7e1990f0b1c67ae920bbddaba7ce0dba" translate="yes" xml:space="preserve">
          <source>Now when the form is submitted, the message is alerted. This happens prior to the actual submission, so we can cancel the submit action by calling &lt;code&gt;.preventDefault()&lt;/code&gt; on the event object or by returning &lt;code&gt;false&lt;/code&gt; from our handler. We can trigger the event manually when another element is clicked:</source>
          <target state="translated">이제 양식이 제출되면 메시지가 표시됩니다. 실제 제출 전에 발생하므로 이벤트 객체에서 &lt;code&gt;.preventDefault()&lt;/code&gt; 를 호출 하거나 &lt;code&gt;false&lt;/code&gt; 를 반환 하여 제출 작업을 취소 할 수 있습니다. 핸들러에서 를 . 다른 요소를 클릭하면 이벤트를 수동으로 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab1a35ce1c4b70524dcf577edaca05d543c38559" translate="yes" xml:space="preserve">
          <source>Now when the insertion point is inside the field and a key is pressed and released, the alert is displayed:</source>
          <target state="translated">이제 삽입 점이 필드 내부에 있고 키를 눌렀다가 놓으면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="325c7b06cba96a484007477ed6e17576ccca8f9a" translate="yes" xml:space="preserve">
          <source>Now when the insertion point is inside the field, pressing a key displays the alert:</source>
          <target state="translated">이제 삽입 점이 필드 내부에있을 때 키를 누르면 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="eb2e64e8f0d47e9725305550a9a935f4c7f81e4c" translate="yes" xml:space="preserve">
          <source>Now when the insertion point is inside the field, pressing a key displays the log:</source>
          <target state="translated">이제 삽입 점이 필드 내부에있을 때 키를 누르면 로그가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9c906bb96b6814248fbc0695ad276f0f6d1bd1c0" translate="yes" xml:space="preserve">
          <source>Now when the mouse pointer moves out of the</source>
          <target state="translated">이제 마우스 포인터가</target>
        </trans-unit>
        <trans-unit id="bdd18963d0049c1fcc1746ce0a0e3c0ca050c019" translate="yes" xml:space="preserve">
          <source>Now when the mouse pointer moves over the</source>
          <target state="translated">이제 마우스 포인터가</target>
        </trans-unit>
        <trans-unit id="2f673561a88619b138d01eb3486c29ef120c5a5a" translate="yes" xml:space="preserve">
          <source>Now when the mouse pointer moves within the target button, the messages are appended to &amp;lt;div id=&quot;log&quot;&amp;gt;:</source>
          <target state="translated">이제 마우스 포인터가 대상 버튼 내에서 움직이면 메시지가 &amp;lt;div id = &quot;log&quot;&amp;gt;에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b2aca8855e03ecb873fa34d6a8257d18e67107c9" translate="yes" xml:space="preserve">
          <source>Now when the second option is selected from the dropdown, the alert is displayed. It is also displayed if you change the text in the field and then click away. If the field loses focus without the contents having changed, though, the event is not triggered. To trigger the event manually, apply &lt;code&gt;.change()&lt;/code&gt; without arguments:</source>
          <target state="translated">드롭 다운에서 두 번째 옵션을 선택하면 경고가 표시됩니다. 필드에서 텍스트를 변경 한 다음 자리를 클릭해도 표시됩니다. 그러나 내용을 변경하지 않고 필드의 포커스를 잃으면 이벤트가 트리거되지 않습니다. 이벤트를 수동으로 트리거하려면 인수없이 &lt;code&gt;.change()&lt;/code&gt; 를 적용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b70885b325ec48060fd73005c879ebe57030fbd" translate="yes" xml:space="preserve">
          <source>Now when the user scrolls the text up or down, one or more messages are appended to &lt;code&gt;&amp;lt;div id=&quot;log&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">이제 사용자가 텍스트를 위나 아래로 스크롤하면 &lt;code&gt;&amp;lt;div id=&quot;log&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 에 하나 이상의 메시지가 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="06b3b87f42192aa9e17a24608537e439cf689949" translate="yes" xml:space="preserve">
          <source>Now whenever the browser window's size is changed, the message is appended to &amp;lt;div id=&quot;log&quot;&amp;gt; one or more times, depending on the browser.</source>
          <target state="translated">이제 브라우저 창의 크기가 변경 될 때마다 브라우저에 따라 메시지가 &amp;lt;div id = &quot;log&quot;&amp;gt;에 한 번 이상 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d17dfc5a9d90229a04be06b524fc118f2a59d607" translate="yes" xml:space="preserve">
          <source>Now, make an Ajax request using any jQuery method:</source>
          <target state="translated">이제 jQuery 메소드를 사용하여 Ajax 요청을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="82009c2de494642c914793e23238b15fb854ad92" translate="yes" xml:space="preserve">
          <source>Now, when the user clicks on the word &quot;list&quot; in the first item or anywhere in the third item, the clicked list item will be given a red background. However, when the user clicks on item 1 in the first item or anywhere in the second item, nothing will occur, because in those cases the target of the event would be &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, respectively.</source>
          <target state="translated">이제 사용자가 첫 번째 항목 또는 세 번째 항목에서 &quot;목록&quot;이라는 단어를 클릭하면 클릭 한 목록 항목에 빨간색 배경이 표시됩니다. 그러나 사용자가 첫 번째 항목 또는 두 번째 항목의 항목 1을 클릭하면 이벤트의 대상이 각각 &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 이기 때문에 아무 일도 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="d3fcd2342e2f633c17c918241809f0e005ac8252" translate="yes" xml:space="preserve">
          <source>Numbers in JavaScript are double-precision 64-bit format IEEE 754 values. They are immutable primitive values, just like &lt;a href=&quot;#String&quot;&gt;strings&lt;/a&gt;. All operators common in c-based languages are available to work with numbers (+, -, *, /, %, =, +=, -=, *=, /=, ++, --).</source>
          <target state="translated">JavaScript의 숫자는 배정도 64 비트 형식 IEEE 754 값입니다. 그것들은 &lt;a href=&quot;#String&quot;&gt;strings&lt;/a&gt; 와 마찬가지로 불변의 기본 값 입니다. c 기반 언어에서 공통적 인 모든 연산자는 숫자 (+,-, *, /, %, =, + =,-=, * =, / =, ++,-)로 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e07870b2a667b92e8d80745716c108a47613a233" translate="yes" xml:space="preserve">
          <source>Numbers to Strings</source>
          <target state="translated">숫자를 문자열로</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="995936b77a0ad0a9116452df12aba4bdf42c246a" translate="yes" xml:space="preserve">
          <source>Object onto which the promise methods have to be attached</source>
          <target state="translated">약속 방법을 첨부해야 할 대상</target>
        </trans-unit>
        <trans-unit id="a18ef01cc2d69922cade1fb3304639d282d9084a" translate="yes" xml:space="preserve">
          <source>Object to get the internal JavaScript [[Class]] of.</source>
          <target state="translated">내부 JavaScript [[Class]]를 가져 오는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ab96ef9ef35bc183fc882af70c8638ad1d95e29e" translate="yes" xml:space="preserve">
          <source>Object to test whether or not it is a window.</source>
          <target state="translated">윈도우인지 아닌지를 테스트하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="793c227df540854970796f2f8089fdf0ddbbb152" translate="yes" xml:space="preserve">
          <source>Object to test whether or not it is an array.</source>
          <target state="translated">배열인지 여부를 테스트 할 개체입니다.</target>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="dcdb1f7fc9d98fea7356232fe865ee5396bbe348" translate="yes" xml:space="preserve">
          <source>On Macintosh keyboards, the</source>
          <target state="translated">Macintosh 키보드에서</target>
        </trans-unit>
        <trans-unit id="44c76b345bb5857866c9a22d08b733b6f2883275" translate="yes" xml:space="preserve">
          <source>On Windows keyboards, the</source>
          <target state="translated">Windows 키보드에서</target>
        </trans-unit>
        <trans-unit id="55457c030ffbe79753eec8a6e457666a955faa10" translate="yes" xml:space="preserve">
          <source>On a &lt;code&gt;deep&lt;/code&gt; extend, Object and Array are extended, but object wrappers on primitive types such as String, Boolean, and Number are not. Deep-extending a cyclical data structure will result in an error.</source>
          <target state="translated">A가에 &lt;code&gt;deep&lt;/code&gt; 연장, 객체 및 배열은 연장되지만, 문자열, 부울 및 번호와 같은 기본 유형에 객체 래퍼는 아니다. 주기적 데이터 구조를 깊게 확장하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d95bdbedfd62bcf38ddbbb67bbaea50c4b8ba3a4" translate="yes" xml:space="preserve">
          <source>On all anchor clicks, alert the event type.</source>
          <target state="translated">모든 앵커 클릭에서 이벤트 유형을 경고하십시오.</target>
        </trans-unit>
        <trans-unit id="7bbe80d69fbc1cdd3afaf946fc19c39ec60007a4" translate="yes" xml:space="preserve">
          <source>On browsers that do not support &lt;code&gt;requestAnimationFrame&lt;/code&gt;, this property can be changed to adjust the interval at which animations will run. The default is 13 milliseconds.</source>
          <target state="translated">&lt;code&gt;requestAnimationFrame&lt;/code&gt; 을 지원하지 않는 브라우저 에서는이 속성을 변경하여 애니메이션이 실행되는 간격을 조정할 수 있습니다. 기본값은 13 밀리 초입니다.</target>
        </trans-unit>
        <trans-unit id="62a2fd35c6091b551a5d1887f32324257bd2cfab" translate="yes" xml:space="preserve">
          <source>On button click, replace the containing div with its child divs and append the class name of the selected element to the paragraph.</source>
          <target state="translated">버튼 클릭시 포함 div를 하위 div로 바꾸고 선택한 요소의 클래스 이름을 단락에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="eaf11b43abd4a21ae872faee64e557346842fe33" translate="yes" xml:space="preserve">
          <source>On click, replace each paragraph with a div that is already in the DOM and selected with the &lt;code&gt;$()&lt;/code&gt; function. Notice it doesn't clone the object but rather moves it to replace the paragraph.</source>
          <target state="translated">클릭하면 각 단락을 이미 DOM에 있고 &lt;code&gt;$()&lt;/code&gt; 선택된 div로 바꿉니다. 함수로 . 객체를 복제하지 않고 단락을 대체하기 위해 이동합니다.</target>
        </trans-unit>
        <trans-unit id="a30d3cc2d1662cb7ae2542b586ebeb2b0e0aeab6" translate="yes" xml:space="preserve">
          <source>On click, replace the button with a div containing the same word.</source>
          <target state="translated">클릭하면 버튼을 같은 단어가 포함 된 div로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="102d2547e0a84e1566f7873416b123cceafb663f" translate="yes" xml:space="preserve">
          <source>On click, returns the index (zero-based) of that div in the page.</source>
          <target state="translated">클릭하면 페이지에서 해당 div의 인덱스 (0부터 시작)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f58d5afa28fded173fd4597dcef55724138f22f" translate="yes" xml:space="preserve">
          <source>On mobile iOS (iPhone, iPad and iPod Touch) the &lt;code&gt;click&lt;/code&gt; event does not bubble to the document body for most elements and cannot be used with &lt;code&gt;.live()&lt;/code&gt; without applying one of the following workarounds:</source>
          <target state="translated">모바일 iOS (iPhone, iPad 및 iPod Touch)에서 &lt;code&gt;click&lt;/code&gt; 이벤트는 대부분의 요소에 대해 문서 본문에 버블 링되지 않으며 다음 해결 방법 중 하나를 적용하지 않고 &lt;code&gt;.live()&lt;/code&gt; 와 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b35162cf62b4979a83c22e5333710f9e55a94498" translate="yes" xml:space="preserve">
          <source>On mouseout of anchors, alert the element type being entered.</source>
          <target state="translated">앵커의 마우스 아웃시 입력되는 요소 유형을 경고합니다.</target>
        </trans-unit>
        <trans-unit id="c6f8cf9ddbd619ef84cd1dddc06f9faddd45d9a8" translate="yes" xml:space="preserve">
          <source>On to the actual types.</source>
          <target state="translated">실제 유형으로.</target>
        </trans-unit>
        <trans-unit id="7345c1c8cc955e2545be7a27992f7ecf80fcee28" translate="yes" xml:space="preserve">
          <source>Once again, this produces two messages:</source>
          <target state="translated">다시 한 번 두 메시지가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="802da2d621d13b29f8654cae0f542d77ae265067" translate="yes" xml:space="preserve">
          <source>One important point to consider with both the next adjacent sibling selector (&lt;code&gt;prev + next&lt;/code&gt;) and the general sibling selector (&lt;code&gt;prev ~ siblings&lt;/code&gt;) is that the elements on either side of the combinator must share the same parent.</source>
          <target state="translated">다음 인접 형제 선택기 ( &lt;code&gt;prev + next&lt;/code&gt; )와 일반 형제 선택기 ( &lt;code&gt;prev ~ siblings&lt;/code&gt; )와 함께 고려해야 할 중요한 사항 ) 있는 요소가 동일한 부모를 공유해야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="211adef72ab5d2b099c2c13814a4914402f80160" translate="yes" xml:space="preserve">
          <source>One important thing to note regarding the use of &lt;code&gt;:parent&lt;/code&gt; (and &lt;code&gt;:empty&lt;/code&gt;) is that child nodes include text nodes.</source>
          <target state="translated">&lt;code&gt;:parent&lt;/code&gt; (및 &lt;code&gt;:empty&lt;/code&gt; ) 사용과 관련하여주의해야 할 중요한 사항 중 하나 는 자식 노드에 텍스트 노드가 포함되어 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ea11b2cecce68c598f2113e7593a4b62bb1ad762" translate="yes" xml:space="preserve">
          <source>One important thing to note with :empty (and :parent) is that child elements include text nodes.</source>
          <target state="translated">: empty (및 : parent)로 주목해야 할 중요한 것은 자식 요소에 텍스트 노드가 포함되어 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="27b8630731ab90a7ea52724333bdd66b2eca5cb4" translate="yes" xml:space="preserve">
          <source>One model for understanding Deferred is to think of it as a chain-aware function wrapper. The &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.always&quot;&gt;&lt;code&gt;deferred.always()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;deferred.done()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;deferred.fail()&lt;/code&gt;&lt;/a&gt; methods specify the functions to be called and the &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;deferred.resolve(args)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;deferred.reject(args)&lt;/code&gt;&lt;/a&gt; methods &quot;call&quot; the functions with the arguments you supply. Once the Deferred has been resolved or rejected it stays in that state; a second call to &lt;code&gt;deferred.resolve()&lt;/code&gt;, for example, is ignored. If more functions are added by &lt;code&gt;deferred.then()&lt;/code&gt;, for example, after the Deferred is resolved, they are called immediately with the arguments previously provided.</source>
          <target state="translated">Deferred를 이해하기위한 한 가지 모델은이를 체인 인식 함수 래퍼로 생각하는 것입니다. &lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.always&quot;&gt; &lt;code&gt;deferred.always()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;deferred.done()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;deferred.fail()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 수있는 기능과 지정 &lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;deferred.resolve(args)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;deferred.reject(args)&lt;/code&gt; &lt;/a&gt; 방식 '이라고 &quot;제공하는 인수가있는 함수. 연기가 해결되거나 거부되면 해당 상태를 유지합니다. 예를 들어 &lt;code&gt;deferred.resolve()&lt;/code&gt; 에 대한 두 번째 호출 은 무시됩니다. 예를 들어 Deferred가 해결 된 후 더 많은 함수가 &lt;code&gt;deferred.then()&lt;/code&gt; 에 의해 추가되면 이전에 제공된 인수와 함께 즉시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f22e058821eac98518a1872b6a37ec5e17b4588c" translate="yes" xml:space="preserve">
          <source>One or more DOM elements to match the current set of elements against.</source>
          <target state="translated">현재 요소 세트와 일치하는 하나 이상의 DOM 요소.</target>
        </trans-unit>
        <trans-unit id="0bf79260770ede5a50190efd993c745cf4f0e071" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert after each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 뒤에 삽입 할 하나 이상의 추가 DOM 요소, 텍스트 노드, 요소 및 텍스트 노드 배열, HTML 문자열 또는 jQuery 객체</target>
        </trans-unit>
        <trans-unit id="590405b9505a9e38875e4ab69eba4c3545a237bf" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert at the beginning of each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소의 시작 부분에 삽입 할 하나 이상의 추가 DOM 요소, 텍스트 노드, 요소 배열 및 텍스트 노드, HTML 문자열 또는 jQuery 객체</target>
        </trans-unit>
        <trans-unit id="abe45385acd2d1a790c72d2749ae527bf7594598" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert at the end of each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에서 각 요소의 끝에 삽입 할 하나 이상의 추가 DOM 요소, 텍스트 노드, 요소 및 텍스트 노드, HTML 문자열 또는 jQuery 객체.</target>
        </trans-unit>
        <trans-unit id="48bdb65d6633ecec1877b1f07ac1fad5443041b1" translate="yes" xml:space="preserve">
          <source>One or more additional DOM elements, text nodes, arrays of elements and text nodes, HTML strings, or jQuery objects to insert before each element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에서 각 요소 앞에 삽입 할 하나 이상의 추가 DOM 요소, 텍스트 노드, 요소 배열 및 텍스트 노드, HTML 문자열 또는 jQuery 객체</target>
        </trans-unit>
        <trans-unit id="bd6f2982e11e7ed7bda62434ea640a01f39a200e" translate="yes" xml:space="preserve">
          <source>One or more class names (separated by spaces) to be toggled for each element in the matched set.</source>
          <target state="translated">일치하는 세트의 각 요소에 대해 토글 될 하나 이상의 클래스 이름 (공백으로 구분).</target>
        </trans-unit>
        <trans-unit id="e3f178acac51c3df9e364272dd2ec84123a1240b" translate="yes" xml:space="preserve">
          <source>One or more classes (separated by spaces) to be toggled for each element in the matched set.</source>
          <target state="translated">일치하는 집합의 각 요소에 대해 전환 할 하나 이상의 클래스 (공백으로 구분)입니다.</target>
        </trans-unit>
        <trans-unit id="03b313303603c250bb78a52e5bffbef9643c6fda" translate="yes" xml:space="preserve">
          <source>One or more elements to add to the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에 추가 할 하나 이상의 요소</target>
        </trans-unit>
        <trans-unit id="356190d117684a7b10afca5525e9592531e9863b" translate="yes" xml:space="preserve">
          <source>One or more elements to match the current set of elements against.</source>
          <target state="translated">현재 요소 세트와 일치하는 하나 이상의 요소</target>
        </trans-unit>
        <trans-unit id="10ccc592c7475392ce01c9eab6fd05ef672dbf27" translate="yes" xml:space="preserve">
          <source>One or more space-separated classes to be added to the class attribute of each matched element.</source>
          <target state="translated">일치하는 각 요소의 클래스 속성에 추가 할 하나 이상의 공백으로 구분 된 클래스.</target>
        </trans-unit>
        <trans-unit id="3c837cc3d0bdaf48386823e0243e81666a7a7597" translate="yes" xml:space="preserve">
          <source>One or more space-separated classes to be removed from the class attribute of each matched element.</source>
          <target state="translated">일치하는 각 요소의 클래스 속성에서 제거 할 하나 이상의 공백으로 구분 된 클래스.</target>
        </trans-unit>
        <trans-unit id="21920e3c8d27960a028b73dfdf1267cec061bfb7" translate="yes" xml:space="preserve">
          <source>One or more space-separated event types and optional namespaces, or just namespaces, such as &quot;click&quot;, &quot;keydown.myPlugin&quot;, or &quot;.myPlugin&quot;.</source>
          <target state="translated">하나 이상의 공백으로 구분 된 이벤트 유형 및 선택적 네임 스페이스 또는 &quot;click&quot;, &quot;keydown.myPlugin&quot;또는 &quot;.myPlugin&quot;과 같은 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="7a8946129ad9cdb22b549accf2c1b5393365ca5d" translate="yes" xml:space="preserve">
          <source>One or more space-separated event types and optional namespaces, such as &quot;click&quot; or &quot;keydown.myPlugin&quot;.</source>
          <target state="translated">하나 이상의 공백으로 구분 된 이벤트 유형 및 &quot;click&quot;또는 &quot;keydown.myPlugin&quot;과 같은 선택적 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="49e74f1147de9675f1f1adc7373ef00b124ecb7c" translate="yes" xml:space="preserve">
          <source>Only applies when the &quot;script&quot; transport is used (e.g., cross-domain requests with &quot;jsonp&quot; or &quot;script&quot; dataType and &quot;GET&quot; type). Sets the &lt;code&gt;charset&lt;/code&gt; attribute on the script tag used in the request. Used when the character set on the local page is not the same as the one on the remote script.</source>
          <target state="translated">&quot;스크립트&quot;전송이 사용될 때만 적용됩니다 (예 : &quot;jsonp&quot;또는 &quot;script&quot;dataType 및 &quot;GET&quot;유형의 도메인 간 요청). 요청에 사용 된 스크립트 태그 에서 &lt;code&gt;charset&lt;/code&gt; 집합 속성을 설정합니다 . 로컬 페이지의 문자 세트가 원격 스크립트의 문자 세트와 동일하지 않을 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8755ce38f6ec06731d96bc01f0518d71be0b5140" translate="yes" xml:space="preserve">
          <source>Only applies when the &quot;script&quot; transport is used. Sets the &lt;code&gt;charset&lt;/code&gt; attribute on the script tag used in the request. Used when the character set on the local page is not the same as the one on the remote script. Alternatively, the &lt;code&gt;charset&lt;/code&gt; attribute can be specified in &lt;code&gt;scriptAttrs&lt;/code&gt; instead, which will also ensure the use of the &quot;script&quot; transport.</source>
          <target state="translated">&quot;스크립트&quot;전송이 사용되는 경우에만 적용됩니다. 요청에 사용 된 스크립트 태그에 &lt;code&gt;charset&lt;/code&gt; 속성을 설정합니다 . 로컬 페이지의 문자 집합이 원격 스크립트의 문자 집합과 동일하지 않을 때 사용됩니다. 또는 &lt;code&gt;charset&lt;/code&gt; 속성을 대신 &lt;code&gt;scriptAttrs&lt;/code&gt; 에 지정 하여 &quot;스크립트&quot;전송을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7651d83a3e89e2bf4ea3e8af4b0c0b8aa1a7c45" translate="yes" xml:space="preserve">
          <source>Opera: 10.06, 11.01</source>
          <target state="translated">오페라 : 10.06, 11.01</target>
        </trans-unit>
        <trans-unit id="2353331784a63eeb08a22b78bf1cb383b2d3c81a" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, that are called when the Deferred is rejected.</source>
          <target state="translated">지연이 거부 될 때 호출되는 선택적 추가 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="a150ad05233ef54482f5c8d8071ca7e9232efb68" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, that are called when the Deferred is resolved or rejected.</source>
          <target state="translated">지연이 해결되거나 거부 될 때 호출되는 선택적 추가 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="c0c1cff77c109f72cef834e3fdf87f039420fa48" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, that are called when the Deferred is resolved.</source>
          <target state="translated">지연이 해결 될 때 호출되는 선택적 추가 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="0813b2bf248956038768453c5b7b3db2ac9aaeec" translate="yes" xml:space="preserve">
          <source>Optional additional functions, or arrays of functions, to be called when the Deferred generates progress notifications.</source>
          <target state="translated">Deferred가 진행 알림을 생성 할 때 호출되는 선택적 추가 함수 또는 함수 배열입니다.</target>
        </trans-unit>
        <trans-unit id="7f369099034aae5bedf66670ec63705aab243dbf" translate="yes" xml:space="preserve">
          <source>Optional arguments that are passed to the doneCallbacks.</source>
          <target state="translated">doneCallbacks에 전달되는 선택적 인수입니다.</target>
        </trans-unit>
        <trans-unit id="744141bff3f72d6719090186f1fcba53aaf4ddc6" translate="yes" xml:space="preserve">
          <source>Optional arguments that are passed to the failCallbacks.</source>
          <target state="translated">failCallbacks에 전달되는 선택적 인수입니다.</target>
        </trans-unit>
        <trans-unit id="2527ec539a4716b560c20f6dbd43b8a9aab0df8f" translate="yes" xml:space="preserve">
          <source>Optional arguments that are passed to the progressCallbacks.</source>
          <target state="translated">progressCallbacks에 전달되는 선택적 인수입니다.</target>
        </trans-unit>
        <trans-unit id="621cd454a75bdd31392b97082f27e19b856c07ca" translate="yes" xml:space="preserve">
          <source>Or you use the String class provided by javascript, which try to parse a value as string:</source>
          <target state="translated">또는 javascript에서 제공하는 String 클래스를 사용하여 값을 문자열로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="9dd39d797efd7dccaa1618b4e628ca61cbd30967" translate="yes" xml:space="preserve">
          <source>Or you write and read properties using the array notation, which allows you to dynamically choose the property:</source>
          <target state="translated">또는 배열 표기법을 사용하여 속성을 쓰고 읽고, 속성을 동적으로 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d493b777eab6dc156a668fdbd4d790d46ece2523" translate="yes" xml:space="preserve">
          <source>Or, we could select an element to use as the replacement:</source>
          <target state="translated">또는 교체품으로 사용할 요소를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="2e4443e4e50ba760b8445cff513b37784cdd2e52" translate="yes" xml:space="preserve">
          <source>Other Properties</source>
          <target state="translated">다른 속성</target>
        </trans-unit>
        <trans-unit id="be58a6b8362f6415457d3a081b2399ecb4853efe" translate="yes" xml:space="preserve">
          <source>Other built-in methods are reverse, join, shift, unshift, pop, slice, splice and sort:</source>
          <target state="translated">다른 내장 방법은 반전, 결합, 이동, 이동, 이동, 팝, 슬라이스, 스플 라이스 및 정렬입니다.</target>
        </trans-unit>
        <trans-unit id="c119b7bd04b345a4aba1284bc7d3bffab5a836d3" translate="yes" xml:space="preserve">
          <source>Outer</source>
          <target state="translated">Outer</target>
        </trans-unit>
        <trans-unit id="6f694a4190c8f21333d2753e0aa40865a1174d20" translate="yes" xml:space="preserve">
          <source>Override jQuery.error for display in Firebug.</source>
          <target state="translated">Firebug에 표시되도록 jQuery.error를 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="410462044b9074fa8d06ea191e542debc1f0cec2" translate="yes" xml:space="preserve">
          <source>Override some jQuery methods to provide new functionality.</source>
          <target state="translated">새로운 기능을 제공하기 위해 일부 jQuery 메소드를 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="d5005ff9604476fd5e7977f9b4c327e8989c9682" translate="yes" xml:space="preserve">
          <source>Override the callback function name in a JSONP request. This value will be used instead of 'callback' in the 'callback=?' part of the query string in the url. So &lt;code&gt;{jsonp:'onJSONPLoad'}&lt;/code&gt; would result in &lt;code&gt;'onJSONPLoad=?'&lt;/code&gt; passed to the server. &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, setting the &lt;code&gt;jsonp&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; prevents jQuery from adding the &quot;?callback&quot; string to the URL or attempting to use &quot;=?&quot; for transformation. In this case, you should also explicitly set the &lt;code&gt;jsonpCallback&lt;/code&gt; setting. For example, &lt;code&gt;{ jsonp: false, jsonpCallback: &quot;callbackName&quot; }&lt;/code&gt;. If you don't trust the target of your Ajax requests, consider setting the &lt;code&gt;jsonp&lt;/code&gt; property to &lt;code&gt;false&lt;/code&gt; for security reasons.</source>
          <target state="translated">JSONP 요청에서 콜백 함수 이름을 대체하십시오. 이 값은 'callback =?'에서 'callback'대신 사용됩니다. URL에서 쿼리 문자열의 일부입니다. 따라서 &lt;code&gt;{jsonp:'onJSONPLoad'}&lt;/code&gt; 는 &lt;code&gt;'onJSONPLoad=?'&lt;/code&gt; 서버로 전달되었습니다. &lt;strong&gt;jQuery 1.5&lt;/strong&gt; 부터 &lt;code&gt;jsonp&lt;/code&gt; 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 jQuery가 &quot;? callback&quot;문자열을 URL에 추가하거나 &quot;=?&quot;를 사용하지 못합니다. 변환을 위해. 이 경우 &lt;code&gt;jsonpCallback&lt;/code&gt; 설정을 명시 적으로 설정해야 합니다. 예를 들어, &lt;code&gt;{ jsonp: false, jsonpCallback: &quot;callbackName&quot; }&lt;/code&gt; 입니다. Ajax 요청의 대상을 신뢰할 수없는 경우 &lt;code&gt;jsonp&lt;/code&gt; 를 속성을 &lt;code&gt;false&lt;/code&gt; 로 설정하는 것을 고려하십시오.보안상의 이유로 입니다.</target>
        </trans-unit>
        <trans-unit id="934d248876b810b0c7ad5d0a5a6a579fab8d43dc" translate="yes" xml:space="preserve">
          <source>Pages fetched with &lt;code&gt;POST&lt;/code&gt; are never cached, so the &lt;code&gt;cache&lt;/code&gt; and &lt;code&gt;ifModified&lt;/code&gt; options in &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;jQuery.ajaxSetup()&lt;/a&gt;&lt;/code&gt; have no effect on these requests.</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 로 가져온 페이지 는 &lt;code&gt;cache&lt;/code&gt; 되지 않으므로 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;jQuery.ajaxSetup()&lt;/a&gt;&lt;/code&gt; 의 캐시 및 &lt;code&gt;ifModified&lt;/code&gt; 옵션은 이러한 요청에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f157f22d1e7cadabaf9b14d950e4fb77941992fe" translate="yes" xml:space="preserve">
          <source>Parse a JSON string.</source>
          <target state="translated">JSON 문자열을 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="e2c94cc61e84c8a1a04f4d5e976bee6a311a7592" translate="yes" xml:space="preserve">
          <source>Parses a string into an XML document.</source>
          <target state="translated">문자열을 XML 문서로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="4fa1cca297a65b8600cd23f5cceede29408c237b" translate="yes" xml:space="preserve">
          <source>Parses a string into an array of DOM nodes.</source>
          <target state="translated">문자열을 DOM 노드 배열로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="17f9460d6a421df96fbfb8d68d99ce89b4c54cf1" translate="yes" xml:space="preserve">
          <source>Parsing Numbers</source>
          <target state="translated">파싱 ​​번호</target>
        </trans-unit>
        <trans-unit id="a0be064309844211f23e104c7c321f409cc5550a" translate="yes" xml:space="preserve">
          <source>Parsing something that isn't a number results in NaN. isNaN helps to detect those cases:</source>
          <target state="translated">숫자가 아닌 것을 구문 분석하면 NaN이됩니다. isNaN은 이러한 경우를 감지하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="25454cd3dbc5c1cc2d742428f4b68f93dd161877" translate="yes" xml:space="preserve">
          <source>Pass a jQuery object to closest. The closest list element toggles a yellow background when it or its descendent is clicked.</source>
          <target state="translated">jQuery 객체를 가장 가까운 곳에 전달하십시오. 가장 가까운 목록 요소는 배경 또는 그 하위 항목을 클릭 할 때 노란색 배경을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="8f461239c0ba4eda09fe6ae7ea6d4dc4aab1f400" translate="yes" xml:space="preserve">
          <source>Pass arrays of data to the server (while still ignoring the return results).</source>
          <target state="translated">데이터 배열을 서버로 전달합니다 (반환 결과는 무시 함).</target>
        </trans-unit>
        <trans-unit id="5459b34514fbb48a2884b8af85f8007063d364a0" translate="yes" xml:space="preserve">
          <source>Pass data to the event handler using the second argument to &lt;code&gt;.trigger()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 두 번째 인수를 사용하여 데이터를 이벤트 핸들러로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="152c072aad3718d0eb0fbfd3d7556bfd272df9f1" translate="yes" xml:space="preserve">
          <source>Pass data to the event handler, which is specified here by name:</source>
          <target state="translated">여기에서 이름으로 지정된 이벤트 핸들러로 데이터를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="7ad84e71aff61e69f038999c72297df126f47453" translate="yes" xml:space="preserve">
          <source>Pass each element in the current matched set through a function, producing a new jQuery object containing the return values.</source>
          <target state="translated">현재 일치하는 세트의 각 요소를 함수를 통해 전달하여 반환 값이 포함 된 새 jQuery 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c02606da718909946602b2f4afe4d19e6804a26b" translate="yes" xml:space="preserve">
          <source>Pass in a function to &lt;code&gt;.addClass()&lt;/code&gt; to add the &quot;green&quot; class to a div that already has a &quot;red&quot; class.</source>
          <target state="translated">이미 &quot;red&quot;클래스가있는 div에 &quot;green&quot;클래스를 추가하려면 &lt;code&gt;.addClass()&lt;/code&gt; 함수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="adfe3a571e9161297540ed9ece18ac0ef5695140" translate="yes" xml:space="preserve">
          <source>Pass the received error to &lt;code&gt;console.error&lt;/code&gt;.</source>
          <target state="translated">수신 된 오류를 &lt;code&gt;console.error&lt;/code&gt; 로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="24668f69e38ec30af5430ec57c38e4f3a360d781" translate="yes" xml:space="preserve">
          <source>Passing Event Data</source>
          <target state="translated">이벤트 데이터 전달</target>
        </trans-unit>
        <trans-unit id="be8d5a856c78d9ea61953d1aae50161b1479b08d" translate="yes" xml:space="preserve">
          <source>Passing a Function</source>
          <target state="translated">함수 전달</target>
        </trans-unit>
        <trans-unit id="94b296314bd220f16316eba73ac6a0293f79631e" translate="yes" xml:space="preserve">
          <source>Passing and handling event data works the same way as it does for &lt;code&gt;.on()&lt;/code&gt;.</source>
          <target state="translated">이벤트 데이터 전달 및 처리는 &lt;code&gt;.on()&lt;/code&gt; 과 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="79b9493aad121249c06485be783dab64a5565634" translate="yes" xml:space="preserve">
          <source>Passing data to the handler</source>
          <target state="translated">핸들러로 데이터 전달</target>
        </trans-unit>
        <trans-unit id="ff30533028ec97d95729586d791f43cc566b973b" translate="yes" xml:space="preserve">
          <source>Passing in a malformed JSON string results in a JavaScript exception being thrown. For example, the following are all invalid JSON strings:</source>
          <target state="translated">잘못된 JSON 문자열을 전달하면 JavaScript 예외가 발생합니다. 예를 들어, 다음은 모두 유효하지 않은 JSON 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0d0c656b1b2892a427f97eda703e8d098445da3c" translate="yes" xml:space="preserve">
          <source>Per-property Easing</source>
          <target state="translated">속성 별 완화</target>
        </trans-unit>
        <trans-unit id="9589684d53470a15aa562a26841a8da7dc6623de" translate="yes" xml:space="preserve">
          <source>Perform a custom animation of a set of CSS properties.</source>
          <target state="translated">CSS 속성 세트의 사용자 정의 애니메이션을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7fbb6be2c9386631b75a15df0b73a775f134538b" translate="yes" xml:space="preserve">
          <source>Perform an asynchronous HTTP (Ajax) request.</source>
          <target state="translated">비동기 HTTP (Ajax) 요청을 수행하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
