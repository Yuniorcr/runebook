<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="99da3b3be3036f1246d1b4696137cc748825965b" translate="yes" xml:space="preserve">
          <source>Data type for data or columns. E.g. {&amp;lsquo;a&amp;rsquo;: np.float64, &amp;lsquo;b&amp;rsquo;: np.int32} Use</source>
          <target state="translated">데이터 또는 열의 데이터 유형입니다. 예 : { 'a': np.float64, 'b': np.int32} 사용</target>
        </trans-unit>
        <trans-unit id="f3a644ac61569dccaedce46722423c0504ff325f" translate="yes" xml:space="preserve">
          <source>Data type for data or columns. E.g. {&amp;lsquo;a&amp;rsquo;: np.float64, &amp;lsquo;b&amp;rsquo;: np.int32} Use &lt;code&gt;object&lt;/code&gt; to preserve data as stored in Excel and not interpret dtype. If converters are specified, they will be applied INSTEAD of dtype conversion.</source>
          <target state="translated">데이터 또는 열의 데이터 유형 예 : { 'a': np.float64, 'b': np.int32} &lt;code&gt;object&lt;/code&gt; 를 사용 하여 Excel에 저장된 데이터를 유지하고 dtype을 해석하지 않습니다. 변환기가 지정되면 dtype 변환의 INSTEAD가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c149e9560b023fbd4561b035aef30d94e4859eb2" translate="yes" xml:space="preserve">
          <source>Data type for new columns. Only a single dtype is allowed.</source>
          <target state="translated">새 열의 데이터 유형 단일 dtype 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="890091b0f42448a6a46293ca59443764b0929c23" translate="yes" xml:space="preserve">
          <source>Data type for the output Series. If not specified, this will be inferred from</source>
          <target state="translated">출력 시리즈의 데이터 유형입니다. 지정하지 않으면 다음에서 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="539736773ddde528e7912a6a108dcb02e6c8fdac" translate="yes" xml:space="preserve">
          <source>Data type for the output Series. If not specified, this will be inferred from &lt;code&gt;data&lt;/code&gt;. See the &lt;a href=&quot;../../getting_started/basics#basics-dtypes&quot;&gt;user guide&lt;/a&gt; for more usages.</source>
          <target state="translated">출력 시리즈의 데이터 유형. 지정하지 않으면 &lt;code&gt;data&lt;/code&gt; 에서 유추됩니다 . 자세한 사용법 은 &lt;a href=&quot;../../getting_started/basics#basics-dtypes&quot;&gt;사용 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c15960dcb4bd42ddaf12b3f1bd9716afd31b1889" translate="yes" xml:space="preserve">
          <source>Data type object or one of their string representations.</source>
          <target state="translated">데이터 유형 객체 또는 해당 문자열 표현 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="31c266d6d34c9cb8dd1680be706eecc108f59cb6" translate="yes" xml:space="preserve">
          <source>Data type to force, otherwise infer.</source>
          <target state="translated">강제 할 데이터 유형, 그렇지 않으면 추론.</target>
        </trans-unit>
        <trans-unit id="754eefff5169ab6c14e949df9bc2c972db5d0549" translate="yes" xml:space="preserve">
          <source>Data type to force. Only a single dtype is allowed. If None, infer</source>
          <target state="translated">강제 할 데이터 유형 단일 dtype 만 허용됩니다. 없는 경우 추론</target>
        </trans-unit>
        <trans-unit id="2fc51daa94603b65e750ebb331ad572603c1c17b" translate="yes" xml:space="preserve">
          <source>Data type to force. Only a single dtype is allowed. If None, infer.</source>
          <target state="translated">강제 할 데이터 유형입니다. 단일 dtype 만 허용됩니다. 없음 인 경우 추론하십시오.</target>
        </trans-unit>
        <trans-unit id="d2c77c7585441d29ab76d53b20e81a7a7e7d0c74" translate="yes" xml:space="preserve">
          <source>Data types can be specified for the columns:</source>
          <target state="translated">열에 데이터 유형을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca5b03e00974d3b3d578fc435d13537066b98672" translate="yes" xml:space="preserve">
          <source>Data types related functionality</source>
          <target state="translated">데이터 유형 관련 기능</target>
        </trans-unit>
        <trans-unit id="0c31d827262954909d3e332388837d1a1fd933ae" translate="yes" xml:space="preserve">
          <source>Data used in the example should be as compact as possible. The number of rows is recommended to be around 4, but make it a number that makes sense for the specific example. For example in the &lt;code&gt;head&lt;/code&gt; method, it requires to be higher than 5, to show the example with the default values. If doing the &lt;code&gt;mean&lt;/code&gt;, we could use something like &lt;code&gt;[1, 2, 3]&lt;/code&gt;, so it is easy to see that the value returned is the mean.</source>
          <target state="translated">예제에 사용 된 데이터는 가능한 한 작아야합니다. 행 수는 약 4 인 것이 좋지만 특정 예에 적합한 수로 만드십시오. 예를 들어 &lt;code&gt;head&lt;/code&gt; 메소드에서는 예제를 기본값으로 표시하려면 5보다 커야합니다. &lt;code&gt;mean&lt;/code&gt; 을 수행하면 &lt;code&gt;[1, 2, 3]&lt;/code&gt; 과 같은 것을 사용할 수 있으므로 반환 된 값이 평균임을 쉽게 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac512b2277dc12fb253b90cadeff4b79f7f0c52d" translate="yes" xml:space="preserve">
          <source>Data validation</source>
          <target state="translated">데이터 유효성 검사</target>
        </trans-unit>
        <trans-unit id="10f2e3a155c76110ed353603ed478b17256e2f1d" translate="yes" xml:space="preserve">
          <source>Data where a single value is repeated many times (e.g. &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;) may be stored efficiently as a &lt;a href=&quot;api/pandas.arrays.sparsearray#pandas.arrays.SparseArray&quot;&gt;&lt;code&gt;arrays.SparseArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">단일 값이 여러 번 반복되는 데이터 (예 : &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;NaN&lt;/code&gt; )는 &lt;a href=&quot;api/pandas.arrays.sparsearray#pandas.arrays.SparseArray&quot;&gt; &lt;code&gt;arrays.SparseArray&lt;/code&gt; &lt;/a&gt; 로 효율적으로 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c737e17aaa6d7236af77efe92df4cb5a32d8c8b0" translate="yes" xml:space="preserve">
          <source>Data where a single value is repeated many times (e.g. &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;) may be stored efficiently as a &lt;a href=&quot;api/pandas.sparsearray#pandas.SparseArray&quot;&gt;&lt;code&gt;SparseArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">단일 값이 여러 번 반복되는 데이터 (예 : &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;NaN&lt;/code&gt; )는 &lt;a href=&quot;api/pandas.sparsearray#pandas.SparseArray&quot;&gt; &lt;code&gt;SparseArray&lt;/code&gt; &lt;/a&gt; 로 효율적으로 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9ac27621acb033bbf1ab2c6f1ffd61347159420" translate="yes" xml:space="preserve">
          <source>DataFrame</source>
          <target state="translated">DataFrame</target>
        </trans-unit>
        <trans-unit id="8811bdca43cadf3b9feb57b869ff3efd02da58c1" translate="yes" xml:space="preserve">
          <source>DataFrame : when</source>
          <target state="translated">DataFrame : 언제</target>
        </trans-unit>
        <trans-unit id="732175610fe2cff6e892e9808ff5dbb25b7fa090" translate="yes" xml:space="preserve">
          <source>DataFrame : when &lt;code&gt;self&lt;/code&gt; is a DataFrame and &lt;code&gt;where&lt;/code&gt; is an array-like</source>
          <target state="translated">DataFrame : 때 &lt;code&gt;self&lt;/code&gt; DataFrame이며, &lt;code&gt;where&lt;/code&gt; 배열 형인</target>
        </trans-unit>
        <trans-unit id="029e593a9eebe5ecdb4c9e18b4901d89844429ab" translate="yes" xml:space="preserve">
          <source>DataFrame : when DataFrame.agg is called with several functions</source>
          <target state="translated">DataFrame : DataFrame.agg가 여러 함수로 호출 된 경우</target>
        </trans-unit>
        <trans-unit id="6a13eddb799738937c9173ad156765155b620ab5" translate="yes" xml:space="preserve">
          <source>DataFrame accessor for sparse data.</source>
          <target state="translated">스파 스 데이터를위한 DataFrame 접근 자.</target>
        </trans-unit>
        <trans-unit id="e862480ad53278f1b822e15d6710c32a83fec41d" translate="yes" xml:space="preserve">
          <source>DataFrame also has an &lt;a href=&quot;../reference/api/pandas.dataframe.isin#pandas.DataFrame.isin&quot;&gt;&lt;code&gt;isin()&lt;/code&gt;&lt;/a&gt; method. When calling &lt;code&gt;isin&lt;/code&gt;, pass a set of values as either an array or dict. If values is an array, &lt;code&gt;isin&lt;/code&gt; returns a DataFrame of booleans that is the same shape as the original DataFrame, with True wherever the element is in the sequence of values.</source>
          <target state="translated">DataFrame에는 &lt;a href=&quot;../reference/api/pandas.dataframe.isin#pandas.DataFrame.isin&quot;&gt; &lt;code&gt;isin()&lt;/code&gt; &lt;/a&gt; 메서드도 있습니다. &lt;code&gt;isin&lt;/code&gt; 을 호출 할 때 값 집합을 배열 또는 dict로 전달합니다. 값이 배열 인 경우 &lt;code&gt;isin&lt;/code&gt; 은 요소가 값 시퀀스에있을 때마다 True와 함께 원래 DataFrame과 동일한 모양 인 부울의 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99dfc2e7f13e4fca0532aaa60080f215331c4f03" translate="yes" xml:space="preserve">
          <source>DataFrame column attribute access and IPython completion</source>
          <target state="translated">DataFrame 열 속성 액세스 및 IPython 완성</target>
        </trans-unit>
        <trans-unit id="114235b214c0e7e7e26d7fbb2ec6ff7c97281d80" translate="yes" xml:space="preserve">
          <source>DataFrame column selection in GroupBy</source>
          <target state="translated">GroupBy에서 DataFrame 열 선택</target>
        </trans-unit>
        <trans-unit id="412c4dbeef09623577d3190669817f339de668a5" translate="yes" xml:space="preserve">
          <source>DataFrame columns on the second level.</source>
          <target state="translated">두 번째 수준의 DataFrame 열.</target>
        </trans-unit>
        <trans-unit id="de8a8f9ac8f97125528bf94d49efd44de8af56be" translate="yes" xml:space="preserve">
          <source>DataFrame containing strings that will be translated to CSS classes, mapped by identical column and index values that must exist on the underlying</source>
          <target state="translated">기본에 존재해야하는 동일한 열 및 인덱스 값으로 매핑 된 CSS 클래스로 변환 될 문자열이 포함 된 DataFrame</target>
        </trans-unit>
        <trans-unit id="c49dc7ef527269621183907971f0c0c8e1415bc5" translate="yes" xml:space="preserve">
          <source>DataFrame containing the original Index data.</source>
          <target state="translated">원래 인덱스 데이터를 포함하는 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="22a999e654f19ab61c6d0e750f098ab0c20d1975" translate="yes" xml:space="preserve">
          <source>DataFrame creation</source>
          <target state="translated">데이터 프레임 생성</target>
        </trans-unit>
        <trans-unit id="c4875999df192bcf5bbdd308fdcb7d64fde286ea" translate="yes" xml:space="preserve">
          <source>DataFrame either on index or on a key column. Efficiently join multiple DataFrame objects by index at once by passing a list.</source>
          <target state="translated">인덱스 또는 키 열의 DataFrame. 목록을 전달하여 인덱스별로 여러 DataFrame 개체를 한 번에 효율적으로 조인합니다.</target>
        </trans-unit>
        <trans-unit id="fe8e6a84031eae2495266a3bb1d89d4bcbc1f63d" translate="yes" xml:space="preserve">
          <source>DataFrame ewm.</source>
          <target state="translated">DataFrame ewm.</target>
        </trans-unit>
        <trans-unit id="75480dc44bce712de1332272bd126ddc958c9ffb" translate="yes" xml:space="preserve">
          <source>DataFrame expanding.</source>
          <target state="translated">데이터 프레임 확장.</target>
        </trans-unit>
        <trans-unit id="38774eed0e277afff1a06ec48d3639cf3d22fade" translate="yes" xml:space="preserve">
          <source>DataFrame from dict of array-like or dicts.</source>
          <target state="translated">배열과 유사한 dict 또는 dicts의 DataFrame.</target>
        </trans-unit>
        <trans-unit id="78bb0477e4837d3a3490bc5e1550ba7f4d4e589a" translate="yes" xml:space="preserve">
          <source>DataFrame from ndarray (structured dtype), list of tuples, dict, or DataFrame.</source>
          <target state="translated">ndarray (구조화 된 dtype), 튜플, dict 또는 DataFrame의 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="65e11fcaa0fda38d3cc2d2e55979e7697a35c695" translate="yes" xml:space="preserve">
          <source>DataFrame from structured ndarray, sequence of tuples or dicts, or DataFrame.</source>
          <target state="translated">구조화 된 ndarray, 튜플 또는 딕셔너리 시퀀스 또는 DataFrame의 DataFrame.</target>
        </trans-unit>
        <trans-unit id="6c9808cc6ed627dc162e2536a1dcd2134205a86a" translate="yes" xml:space="preserve">
          <source>DataFrame from the passed in Excel file.</source>
          <target state="translated">전달 된 Excel 파일의 DataFrame</target>
        </trans-unit>
        <trans-unit id="51bcf799c16924593e8b5c01d22a45636449f071" translate="yes" xml:space="preserve">
          <source>DataFrame from the passed in Excel file. See notes in sheet_name argument for more information on when a dict of DataFrames is returned.</source>
          <target state="translated">전달 된 Excel 파일의 DataFrame DataFrames dict가 리턴되는시기에 대한 자세한 정보는 sheet_name 인수의 참고 사항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8c73f5ab3f930fbf001a4161cff983743b43f3f9" translate="yes" xml:space="preserve">
          <source>DataFrame has a &lt;a href=&quot;../reference/api/pandas.dataframe.set_index#pandas.DataFrame.set_index&quot;&gt;&lt;code&gt;set_index()&lt;/code&gt;&lt;/a&gt; method which takes a column name (for a regular &lt;code&gt;Index&lt;/code&gt;) or a list of column names (for a &lt;code&gt;MultiIndex&lt;/code&gt;). To create a new, re-indexed DataFrame:</source>
          <target state="translated">DataFrame는이 &lt;a href=&quot;../reference/api/pandas.dataframe.set_index#pandas.DataFrame.set_index&quot;&gt; &lt;code&gt;set_index()&lt;/code&gt; &lt;/a&gt; (일반에 대한 열 이름을 사용하는 방법 &lt;code&gt;Index&lt;/code&gt; ) 또는 (A의 열 이름의 목록 &lt;code&gt;MultiIndex&lt;/code&gt; 을 ). 다시 인덱싱 된 새 DataFrame을 만들려면 :</target>
        </trans-unit>
        <trans-unit id="b94248e3f72dd16e07f01368bc24b9b63a8875a3" translate="yes" xml:space="preserve">
          <source>DataFrame has the methods &lt;a href=&quot;../reference/api/pandas.dataframe.add#pandas.DataFrame.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.sub#pandas.DataFrame.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.mul#pandas.DataFrame.mul&quot;&gt;&lt;code&gt;mul()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.div#pandas.DataFrame.div&quot;&gt;&lt;code&gt;div()&lt;/code&gt;&lt;/a&gt; and related functions &lt;a href=&quot;../reference/api/pandas.dataframe.radd#pandas.DataFrame.radd&quot;&gt;&lt;code&gt;radd()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.rsub#pandas.DataFrame.rsub&quot;&gt;&lt;code&gt;rsub()&lt;/code&gt;&lt;/a&gt;, &amp;hellip; for carrying out binary operations. For broadcasting behavior, Series input is of primary interest. Using these functions, you can use to either match on the &lt;em&gt;index&lt;/em&gt; or &lt;em&gt;columns&lt;/em&gt; via the &lt;strong&gt;axis&lt;/strong&gt; keyword:</source>
          <target state="translated">DataFrame에는 이진 연산을 수행하기위한 &lt;a href=&quot;../reference/api/pandas.dataframe.add#pandas.DataFrame.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../reference/api/pandas.dataframe.sub#pandas.DataFrame.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../reference/api/pandas.dataframe.mul#pandas.DataFrame.mul&quot;&gt; &lt;code&gt;mul()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../reference/api/pandas.dataframe.div#pandas.DataFrame.div&quot;&gt; &lt;code&gt;div()&lt;/code&gt; &lt;/a&gt; 및 관련 함수 &lt;a href=&quot;../reference/api/pandas.dataframe.radd#pandas.DataFrame.radd&quot;&gt; &lt;code&gt;radd()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../reference/api/pandas.dataframe.rsub#pandas.DataFrame.rsub&quot;&gt; &lt;code&gt;rsub()&lt;/code&gt; &lt;/a&gt; ,&amp;hellip; 방송 동작의 경우 시리즈 입력이 주요 관심사입니다. 이러한 함수를 사용 하면 &lt;strong&gt;축&lt;/strong&gt; 키워드 를 통해 &lt;em&gt;인덱스&lt;/em&gt; 또는 &lt;em&gt;열&lt;/em&gt; 에서 일치하는 데 사용할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="221da8602e1ae4541709fe14a03c6b51988dbf17" translate="yes" xml:space="preserve">
          <source>DataFrame if iterator=False and chunksize=None, else SAS7BDATReader</source>
          <target state="translated">iterator = False이고 chunksize = None 인 경우 DataFrame, 그렇지 않은 경우 SAS7BDATReader</target>
        </trans-unit>
        <trans-unit id="9caa97c75a6b7340bc1f8c402508aa328f9baa2c" translate="yes" xml:space="preserve">
          <source>DataFrame in Markdown-friendly format.</source>
          <target state="translated">Markdown 친화적 인 형식의 DataFrame.</target>
        </trans-unit>
        <trans-unit id="f012ba1bb18b571ddd84d35b06cc8a109aa0cfe5" translate="yes" xml:space="preserve">
          <source>DataFrame interoperability with NumPy functions</source>
          <target state="translated">NumPy 함수와 DataFrame 상호 운용성</target>
        </trans-unit>
        <trans-unit id="d702da6fdecf7eb44eb6f883af60103e2b242382" translate="yes" xml:space="preserve">
          <source>DataFrame is not intended to be a drop-in replacement for ndarray as its indexing semantics and data model are quite different in places from an n-dimensional array.</source>
          <target state="translated">DataFrame은 인덱싱 의미 체계와 데이터 모델이 n 차원 배열과 매우 다르기 때문에 ndarray의 드롭 인 대체물이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6e6d19861d2d9550ebd9ffe4c56bddb7ad541414" translate="yes" xml:space="preserve">
          <source>DataFrame is not intended to work exactly like a 2-dimensional NumPy ndarray.</source>
          <target state="translated">DataFrame은 2 차원 NumPy ndarray와 똑같이 작동하도록 설계되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="07770da1f90feb1a179a30f0c7e1a2348f72f8e2" translate="yes" xml:space="preserve">
          <source>DataFrame memory usage</source>
          <target state="translated">DataFrame 메모리 사용량</target>
        </trans-unit>
        <trans-unit id="eef077992ece4dcaed9d656ee6ad59d6ce2a6adb" translate="yes" xml:space="preserve">
          <source>DataFrame must have a MultiIndex. Can pass an array as the join key if it is not already contained in the calling DataFrame. Like an Excel VLOOKUP operation.</source>
          <target state="translated">DataFrame에는 MultiIndex가 있어야합니다. 호출 DataFrame에 아직 포함되지 않은 경우 배열을 조인 키로 전달할 수 있습니다. Excel VLOOKUP 작업과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41f922b78d76b2b0edf1b4c00bdd6a9a4124010c" translate="yes" xml:space="preserve">
          <source>DataFrame object creation using constructor.</source>
          <target state="translated">생성자를 사용하여 DataFrame 객체 생성</target>
        </trans-unit>
        <trans-unit id="97c2b05aaa91862ac3fb872b599be34a80551531" translate="yes" xml:space="preserve">
          <source>DataFrame of bool</source>
          <target state="translated">부울의 데이터 프레임</target>
        </trans-unit>
        <trans-unit id="d0c3357d10f7125c794a01081e96b1a7165fac7d" translate="yes" xml:space="preserve">
          <source>DataFrame of booleans showing whether each element in the DataFrame is contained in values.</source>
          <target state="translated">DataFrame의 각 요소가 값에 포함되어 있는지 여부를 표시하는 부울의 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="93afdb400081a6c313aa8c52ccf4e18db2ceb679" translate="yes" xml:space="preserve">
          <source>DataFrame only &lt;code&gt;(use Series.to_frame().style)&lt;/code&gt;</source>
          <target state="translated">DataFrame 만 &lt;code&gt;(use Series.to_frame().style)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2392c7063c11374d2667304c51143ae4e02919d4" translate="yes" xml:space="preserve">
          <source>DataFrame or Iterator[DataFrame]</source>
          <target state="translated">DataFrame 또는 Iterator [DataFrame]</target>
        </trans-unit>
        <trans-unit id="78c2b19df3ff1843cfc6c4b4c485ac95c2524c96" translate="yes" xml:space="preserve">
          <source>DataFrame or None</source>
          <target state="translated">DataFrame 또는 없음</target>
        </trans-unit>
        <trans-unit id="7441364b1dcf1fb40247367bf99329defb7773b9" translate="yes" xml:space="preserve">
          <source>DataFrame or Series</source>
          <target state="translated">데이터 프레임 또는 시리즈</target>
        </trans-unit>
        <trans-unit id="b366c01cfd00d186759b7bb356f997125b441974" translate="yes" xml:space="preserve">
          <source>DataFrame or Series of boolean values, where a value is True if all elements are True within its respective group, False otherwise.</source>
          <target state="translated">DataFrame 또는 일련의 부울 값. 여기서 값은 해당 그룹 내에서 모든 요소가 True이면 True이고 그렇지 않으면 False입니다.</target>
        </trans-unit>
        <trans-unit id="116e8486b46a5a811a095c96a9dad270b04d3afb" translate="yes" xml:space="preserve">
          <source>DataFrame or Series of boolean values, where a value is True if any element is True within its respective group, False otherwise.</source>
          <target state="translated">DataFrame 또는 일련의 부울 값. 여기서 값은 해당 그룹 내에서 요소가 True이면 True이고 그렇지 않으면 False입니다.</target>
        </trans-unit>
        <trans-unit id="7a125c766a4fe0501d158262d45c59c72cfbf3b5" translate="yes" xml:space="preserve">
          <source>DataFrame or Series or Index</source>
          <target state="translated">데이터 프레임 또는 시리즈 또는 인덱스</target>
        </trans-unit>
        <trans-unit id="47a3bb1ab312bae30e10d5fdda6193afe3d864a3" translate="yes" xml:space="preserve">
          <source>DataFrame or StataReader</source>
          <target state="translated">DataFrame 또는 StataReader</target>
        </trans-unit>
        <trans-unit id="7ffc7fd67aa0ed3fd53a733015f6248b9f35fe39" translate="yes" xml:space="preserve">
          <source>DataFrame or TextParser</source>
          <target state="translated">DataFrame 또는 TextParser</target>
        </trans-unit>
        <trans-unit id="fccc33dc0015358106cfd82f007ead65114bb49c" translate="yes" xml:space="preserve">
          <source>DataFrame or dict of DataFrames</source>
          <target state="translated">DataFrame 또는 DataFrame의 받아쓰기</target>
        </trans-unit>
        <trans-unit id="b266c21adda6d4efba1d9abd44b2a7e28a4c1196" translate="yes" xml:space="preserve">
          <source>DataFrame plotting accessor and method</source>
          <target state="translated">DataFrame 플로팅 접근 자와 메소드</target>
        </trans-unit>
        <trans-unit id="ee308898bcba83318571f3011612192a4e124841" translate="yes" xml:space="preserve">
          <source>DataFrame representation of Series.</source>
          <target state="translated">Series의 DataFrame 표현.</target>
        </trans-unit>
        <trans-unit id="179fd48d6fb800e336f6797a3e9febb73d24f1ea" translate="yes" xml:space="preserve">
          <source>DataFrame representing results of query.</source>
          <target state="translated">쿼리 결과를 나타내는 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="23839f1b66e799a28d1c3a03db1d47d8f78fc7fc" translate="yes" xml:space="preserve">
          <source>DataFrame resampling is done column-wise. All the same options are available.</source>
          <target state="translated">DataFrame 리샘플링은 열 단위로 수행됩니다. 동일한 옵션을 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0e2f799a427c424b039aeb4f99b961a4917cd73" translate="yes" xml:space="preserve">
          <source>DataFrame resulting from the provided query expression or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">제공된 쿼리 표현식의 결과 인 DataFrame 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 None 입니다.</target>
        </trans-unit>
        <trans-unit id="c472f9d1ffa03dd2b239d29ddbb7c6a5299a5e1a" translate="yes" xml:space="preserve">
          <source>DataFrame resulting from the provided query expression.</source>
          <target state="translated">제공된 쿼리 표현식으로 인한 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="76bb2eedb755813fab2047507675c3cb194cf610" translate="yes" xml:space="preserve">
          <source>DataFrame rolling.</source>
          <target state="translated">데이터 프레임 롤링.</target>
        </trans-unit>
        <trans-unit id="ba48cf0c2e285b60f1f2c68a15b2783717f84669" translate="yes" xml:space="preserve">
          <source>DataFrame that shows the differences stacked side by side.</source>
          <target state="translated">나란히 쌓인 차이점을 보여주는 DataFrame.</target>
        </trans-unit>
        <trans-unit id="55247ca5c970b492bb733b21a6e8736858211d32" translate="yes" xml:space="preserve">
          <source>DataFrame to be converted to MultiIndex.</source>
          <target state="translated">MultiIndex로 변환 할 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="22a5e1fe18749a7c59dfec57469c78e95e0dffe2" translate="yes" xml:space="preserve">
          <source>DataFrame to print information about.</source>
          <target state="translated">정보를 인쇄 할 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="443db662cd2655001dc2436863a1cd7b10d957e9" translate="yes" xml:space="preserve">
          <source>DataFrame using</source>
          <target state="translated">DataFrame 사용</target>
        </trans-unit>
        <trans-unit id="d2e664b74767e7f572afd414e6b60cff9f6fa48a" translate="yes" xml:space="preserve">
          <source>DataFrame with DatetimeIndex</source>
          <target state="translated">DatetimeIndex가있는 DataFrame</target>
        </trans-unit>
        <trans-unit id="eeeebf9417310654913363d7489ef829f4845dab" translate="yes" xml:space="preserve">
          <source>DataFrame with NA entries dropped from it or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">NA 항목이 삭제 된 DataFrame 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 None .</target>
        </trans-unit>
        <trans-unit id="ad947e885dc096e656d89a79a5faebf39dd5e946" translate="yes" xml:space="preserve">
          <source>DataFrame with NA entries dropped from it.</source>
          <target state="translated">NA 항목이있는 DataFrame이 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="5c6c66f676aafa47a52af36cc8574d01627d8bb7" translate="yes" xml:space="preserve">
          <source>DataFrame with PeriodIndex</source>
          <target state="translated">PeriodIndex가있는 DataFrame</target>
        </trans-unit>
        <trans-unit id="acb8852d15f19b561336d4b7156d5d1b37ba901a" translate="yes" xml:space="preserve">
          <source>DataFrame with changed index.</source>
          <target state="translated">인덱스가 변경된 DataFrame입니다.</target>
        </trans-unit>
        <trans-unit id="25efbf2e450d0b2f986f819e128aad928e9f65b2" translate="yes" xml:space="preserve">
          <source>DataFrame with duplicates removed or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">중복이 제거 된 DataFrame 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 None .</target>
        </trans-unit>
        <trans-unit id="835de20b02f4633d395a6218ca02694f2049aeab" translate="yes" xml:space="preserve">
          <source>DataFrame with ranking of values within each group</source>
          <target state="translated">각 그룹 내의 값 순위가있는 DataFrame</target>
        </trans-unit>
        <trans-unit id="2186033b3994ea954faa05b8b6fd21ef9b8ced5a" translate="yes" xml:space="preserve">
          <source>DataFrame with requested index / column level(s) removed.</source>
          <target state="translated">요청 된 인덱스 / 열 수준이 제거 된 DataFrame.</target>
        </trans-unit>
        <trans-unit id="219e1e8e565ffb2c282b8b95f5b37578570892c9" translate="yes" xml:space="preserve">
          <source>DataFrame with sorted index if inplace=False, None otherwise.</source>
          <target state="translated">inplace = False이면 정렬 된 인덱스가있는 DataFrame, 그렇지 않으면 None</target>
        </trans-unit>
        <trans-unit id="8d3fe7e8b2af8df2aa14ddc4b01fbc1499dc2c22" translate="yes" xml:space="preserve">
          <source>DataFrame with sorted values if inplace=False, None otherwise.</source>
          <target state="translated">inplace = False이면 정렬 된 값을 가진 DataFrame, 그렇지 않으면 None</target>
        </trans-unit>
        <trans-unit id="80287a87c4b668f254b69d3daa82bd569b16e697" translate="yes" xml:space="preserve">
          <source>DataFrame with sorted values or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">정렬 된 값이있는 DataFrame 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 None .</target>
        </trans-unit>
        <trans-unit id="9c52f708d00992b5118bfd7991374034aa85f00f" translate="yes" xml:space="preserve">
          <source>DataFrame with the new index or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">새 인덱스가있는 DataFrame 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 None .</target>
        </trans-unit>
        <trans-unit id="c017d5c4b4ff2b39887071cc3982a48a2707f8a8" translate="yes" xml:space="preserve">
          <source>DataFrame with the new index.</source>
          <target state="translated">새 인덱스가있는 DataFrame</target>
        </trans-unit>
        <trans-unit id="1b2fa5f39b23597915e659ad021464308bee0506" translate="yes" xml:space="preserve">
          <source>DataFrame with the renamed axis labels or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">이름이 변경된 축 레이블이있는 DataFrame 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 None .</target>
        </trans-unit>
        <trans-unit id="7700a7d6c400d07ad8b7686cbba5ae597cc00999" translate="yes" xml:space="preserve">
          <source>DataFrame with the renamed axis labels.</source>
          <target state="translated">이름이 변경된 축 레이블이있는 DataFrame</target>
        </trans-unit>
        <trans-unit id="7f077667cf0b4b28ac4f28e3e19b88c101c7773e" translate="yes" xml:space="preserve">
          <source>DataFrame without the removed index or column labels or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">제거 된 인덱스 또는 열 레이블이없는 DataFrame 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 None .</target>
        </trans-unit>
        <trans-unit id="c4883ee66c683c6b3826741bf2daffad4754a89a" translate="yes" xml:space="preserve">
          <source>DataFrame without the removed index or column labels.</source>
          <target state="translated">인덱스 또는 열 레이블이 제거되지 않은 DataFrame</target>
        </trans-unit>
        <trans-unit id="d48df69691149f67d4dd0931083759fc999233a9" translate="yes" xml:space="preserve">
          <source>DataFrame()</source>
          <target state="translated">DataFrame()</target>
        </trans-unit>
        <trans-unit id="940b2b46e9cac6125b520d129a1b06be4aa30b4b" translate="yes" xml:space="preserve">
          <source>DataFrame, Series, or scalar</source>
          <target state="translated">DataFrame, Series 또는 스칼라</target>
        </trans-unit>
        <trans-unit id="1f3255dbf9a77aae78dc0dbfc8e2897e037234c4" translate="yes" xml:space="preserve">
          <source>DataFrame.T</source>
          <target state="translated">DataFrame.T</target>
        </trans-unit>
        <trans-unit id="da06e1a842288ffaf564081c870a14e49af38317" translate="yes" xml:space="preserve">
          <source>DataFrame.at</source>
          <target state="translated">DataFrame.at</target>
        </trans-unit>
        <trans-unit id="e5cf8763fbdfcc0c2f927a021f09b519391d0b77" translate="yes" xml:space="preserve">
          <source>DataFrame.axes</source>
          <target state="translated">DataFrame.axes</target>
        </trans-unit>
        <trans-unit id="432a297cabc1f719e5ccacfcc63960159e3a322a" translate="yes" xml:space="preserve">
          <source>DataFrame.droplevel()</source>
          <target state="translated">DataFrame.droplevel()</target>
        </trans-unit>
        <trans-unit id="5e7ea6e7860b459a561b72c97d93c5bc91e27d31" translate="yes" xml:space="preserve">
          <source>DataFrame.eq()</source>
          <target state="translated">DataFrame.eq()</target>
        </trans-unit>
        <trans-unit id="8b91b4701b96b36f47bf32c356d21059d83a8d78" translate="yes" xml:space="preserve">
          <source>DataFrame.ge()</source>
          <target state="translated">DataFrame.ge()</target>
        </trans-unit>
        <trans-unit id="718436a74dfa8dc0013240e0ee9224a6d7c5e239" translate="yes" xml:space="preserve">
          <source>DataFrame.gt()</source>
          <target state="translated">DataFrame.gt()</target>
        </trans-unit>
        <trans-unit id="ad87f71e5593d7610f916196325d5e2c5de008bc" translate="yes" xml:space="preserve">
          <source>DataFrame.iat</source>
          <target state="translated">DataFrame.iat</target>
        </trans-unit>
        <trans-unit id="22699f3af68ffe2c7674ca4bc9c99334bc8f74bb" translate="yes" xml:space="preserve">
          <source>DataFrame.iloc</source>
          <target state="translated">DataFrame.iloc</target>
        </trans-unit>
        <trans-unit id="4c13c8d0effbf4f52c6b5dd595d086fd56725c23" translate="yes" xml:space="preserve">
          <source>DataFrame.info</source>
          <target state="translated">DataFrame.info</target>
        </trans-unit>
        <trans-unit id="acf9dbfe60d8998e4e04387a0e781b7d213aa0a6" translate="yes" xml:space="preserve">
          <source>DataFrame.ix</source>
          <target state="translated">DataFrame.ix</target>
        </trans-unit>
        <trans-unit id="d90a71094ac38bbf918a2e239172ba5b347f51bd" translate="yes" xml:space="preserve">
          <source>DataFrame.le()</source>
          <target state="translated">DataFrame.le()</target>
        </trans-unit>
        <trans-unit id="5333a7f0b33690fd7dd6121ffee6c4357123e006" translate="yes" xml:space="preserve">
          <source>DataFrame.loc</source>
          <target state="translated">DataFrame.loc</target>
        </trans-unit>
        <trans-unit id="4d05e57d05fc6dadf2775f9b08e30237ac0a8ae3" translate="yes" xml:space="preserve">
          <source>DataFrame.lt()</source>
          <target state="translated">DataFrame.lt()</target>
        </trans-unit>
        <trans-unit id="d0eb1f8396f9d234030e0d715e014c9cea7759fe" translate="yes" xml:space="preserve">
          <source>DataFrame.ndim</source>
          <target state="translated">DataFrame.ndim</target>
        </trans-unit>
        <trans-unit id="8f86ab7a0fc793a0e30e7b2cde48558d5de2c9bb" translate="yes" xml:space="preserve">
          <source>DataFrame.ne()</source>
          <target state="translated">DataFrame.ne()</target>
        </trans-unit>
        <trans-unit id="ad0d403a206228df45cb5862be32ba82fd361907" translate="yes" xml:space="preserve">
          <source>DataFrame.pivot_table</source>
          <target state="translated">DataFrame.pivot_table</target>
        </trans-unit>
        <trans-unit id="8d7d4eea7b0fb8b110aad116d7ece7e6c480b93b" translate="yes" xml:space="preserve">
          <source>DataFrame.shift</source>
          <target state="translated">DataFrame.shift</target>
        </trans-unit>
        <trans-unit id="1d7ea2f9eef6e043a2819ba5472037982425ee68" translate="yes" xml:space="preserve">
          <source>DataFrame.size</source>
          <target state="translated">DataFrame.size</target>
        </trans-unit>
        <trans-unit id="f674c091ca0942e30b8d3b5613b8c03090e2dbc6" translate="yes" xml:space="preserve">
          <source>DataFrame.to_sql()</source>
          <target state="translated">DataFrame.to_sql()</target>
        </trans-unit>
        <trans-unit id="f24f0475dae5aacddffa64a4f12da998df41182b" translate="yes" xml:space="preserve">
          <source>DataFrame.xs()</source>
          <target state="translated">DataFrame.xs()</target>
        </trans-unit>
        <trans-unit id="fd4c7d21bb73593ebdae595548ed9296275de21a" translate="yes" xml:space="preserve">
          <source>DataFrame/MultiIndex or Series/Index of objects</source>
          <target state="translated">DataFrame / MultiIndex 또는 Series / Object 객체</target>
        </trans-unit>
        <trans-unit id="7b9f31f83cd058fa0a6e68a5030ff03cf210e31c" translate="yes" xml:space="preserve">
          <source>DataFrame:</source>
          <target state="translated">DataFrame:</target>
        </trans-unit>
        <trans-unit id="002e38a4f985ecc9aef690fd2e0763755b0d6d45" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy</source>
          <target state="translated">DataFrameGroupBy</target>
        </trans-unit>
        <trans-unit id="88cf85b258544f2aa115b5c5bad8a367ec21ff3a" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy or SeriesGroupBy</source>
          <target state="translated">DataFrameGroupBy 또는 SeriesGroupBy</target>
        </trans-unit>
        <trans-unit id="efb397a7db5906ab00a7777351ee99f28f22b656" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.all()</source>
          <target state="translated">DataFrameGroupBy.all()</target>
        </trans-unit>
        <trans-unit id="8f5fafbd24cf21f806560d622617f84151396c92" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.any()</source>
          <target state="translated">DataFrameGroupBy.any()</target>
        </trans-unit>
        <trans-unit id="605bd726c38c5dc6bcbd330a99a23561036ea954" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.bfill()</source>
          <target state="translated">DataFrameGroupBy.bfill()</target>
        </trans-unit>
        <trans-unit id="0f86b06b183c306c3c88bf73e1c347f155a5608d" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.boxplot()</source>
          <target state="translated">DataFrameGroupBy.boxplot()</target>
        </trans-unit>
        <trans-unit id="0a6e407c5806ae3f0f2a0564a3bd65720faf6f75" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.corr</source>
          <target state="translated">DataFrameGroupBy.corr</target>
        </trans-unit>
        <trans-unit id="2a81f2ad689f62e8c472a2519411edfe17d4bc9b" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.corrwith</source>
          <target state="translated">DataFrameGroupBy.corrwith</target>
        </trans-unit>
        <trans-unit id="61a04956038ca9f32b6157438b7daa74b75405de" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.count()</source>
          <target state="translated">DataFrameGroupBy.count()</target>
        </trans-unit>
        <trans-unit id="d83b1cfda6bb06dc6ddb551f4bce115e28212d91" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.cov</source>
          <target state="translated">DataFrameGroupBy.cov</target>
        </trans-unit>
        <trans-unit id="398a62dc6e825ed631f456fee1c33c26477762d0" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.cummax()</source>
          <target state="translated">DataFrameGroupBy.cummax()</target>
        </trans-unit>
        <trans-unit id="5498763e0770383e41e3ba3d5cd5c7b2e40cad85" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.cummin()</source>
          <target state="translated">DataFrameGroupBy.cummin()</target>
        </trans-unit>
        <trans-unit id="a3c7acc345e2c61b3e7e26573066a5b7bac63094" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.cumprod()</source>
          <target state="translated">DataFrameGroupBy.cumprod()</target>
        </trans-unit>
        <trans-unit id="085d3a7844981dacd4058169d3e6e7a531fac4c7" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.cumsum()</source>
          <target state="translated">DataFrameGroupBy.cumsum()</target>
        </trans-unit>
        <trans-unit id="0240c6d936a66c54767c49fe6464a4d00e338dd9" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.describe()</source>
          <target state="translated">DataFrameGroupBy.describe()</target>
        </trans-unit>
        <trans-unit id="3e110836eeadb973a2956830b15d69265959c982" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.diff</source>
          <target state="translated">DataFrameGroupBy.diff</target>
        </trans-unit>
        <trans-unit id="572379276efa1cc2169cbd0306e8fa38f6e61014" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.ffill()</source>
          <target state="translated">DataFrameGroupBy.ffill()</target>
        </trans-unit>
        <trans-unit id="98e4121f41b6c2df398c99acdae804b36441f201" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.fillna</source>
          <target state="translated">DataFrameGroupBy.fillna</target>
        </trans-unit>
        <trans-unit id="d59aa7108b7a2cf251f00b5bdb1de2010bd6474b" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.filter()</source>
          <target state="translated">DataFrameGroupBy.filter()</target>
        </trans-unit>
        <trans-unit id="f00499fd8784d4481aa9c632ace0581edf1ca111" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.hist</source>
          <target state="translated">DataFrameGroupBy.hist</target>
        </trans-unit>
        <trans-unit id="eb502ca9229eda9ff684a3b1ce08d9d4141d6fcb" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.idxmax</source>
          <target state="translated">DataFrameGroupBy.idxmax</target>
        </trans-unit>
        <trans-unit id="039d3611df996e763967f0c7a78ae7dec5c14e0b" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.idxmin</source>
          <target state="translated">DataFrameGroupBy.idxmin</target>
        </trans-unit>
        <trans-unit id="f509c20e36fc470957b78dec97e2adcec823291e" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.mad</source>
          <target state="translated">DataFrameGroupBy.mad</target>
        </trans-unit>
        <trans-unit id="b80a98c4cd2f6b6332d95aecfeefd6f4d248ed37" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.nunique()</source>
          <target state="translated">DataFrameGroupBy.nunique()</target>
        </trans-unit>
        <trans-unit id="da370724337510a405731d5cb247b591e4a8b8eb" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.pct_change()</source>
          <target state="translated">DataFrameGroupBy.pct_change()</target>
        </trans-unit>
        <trans-unit id="f3c9f0af124090dfd3221c93f03acea06866782e" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.plot</source>
          <target state="translated">DataFrameGroupBy.plot</target>
        </trans-unit>
        <trans-unit id="c440f876193cad766034a270ed9483d45512bffd" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.quantile()</source>
          <target state="translated">DataFrameGroupBy.quantile()</target>
        </trans-unit>
        <trans-unit id="50e10e623e0cec8495f651680f5a8b53821ea939" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.rank()</source>
          <target state="translated">DataFrameGroupBy.rank()</target>
        </trans-unit>
        <trans-unit id="9391b2a02dd9c03fe7dff3b2655e24c3052620c2" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.resample()</source>
          <target state="translated">DataFrameGroupBy.resample()</target>
        </trans-unit>
        <trans-unit id="1f10840276baac9d1e0e907e051910bcf780fa5c" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.shift()</source>
          <target state="translated">DataFrameGroupBy.shift()</target>
        </trans-unit>
        <trans-unit id="bb97318dfd38a77f621faa81a86746c134308726" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.size()</source>
          <target state="translated">DataFrameGroupBy.size()</target>
        </trans-unit>
        <trans-unit id="2e687856ee3149b7d0789100d08a99502e4af005" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.skew</source>
          <target state="translated">DataFrameGroupBy.skew</target>
        </trans-unit>
        <trans-unit id="b8e26d02b0fe9fba447a18e9b5488abddf34b5df" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.take</source>
          <target state="translated">DataFrameGroupBy.take</target>
        </trans-unit>
        <trans-unit id="95cdf15ef024c00b936b1dd9d7d5a985d052ddb0" translate="yes" xml:space="preserve">
          <source>DataFrameGroupBy.tshift</source>
          <target state="translated">DataFrameGroupBy.tshift</target>
        </trans-unit>
        <trans-unit id="c47ae6675be285e6fd95b4562aa298b338ed6854" translate="yes" xml:space="preserve">
          <source>DataFrames can be compared to a scalar.</source>
          <target state="translated">DataFrame은 스칼라와 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a701f93dc4a7fe5904e0c8030b9e361e9dc56c00" translate="yes" xml:space="preserve">
          <source>DataFrames can be filtered in multiple ways; the most intuitive of which is using &lt;a href=&quot;../../user_guide/indexing#indexing-boolean&quot;&gt;boolean indexing&lt;/a&gt;</source>
          <target state="translated">DataFrame은 여러 가지 방법으로 필터링 할 수 있습니다. 가장 직관적 인 것은 &lt;a href=&quot;../../user_guide/indexing#indexing-boolean&quot;&gt;부울 인덱싱을&lt;/a&gt; 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b3909aaa52259b5b30c1a3dc48ceeb26b6cc0ba5" translate="yes" xml:space="preserve">
          <source>DataFrames can be filtered in multiple ways; the most intuitive of which is using &lt;a href=&quot;../../user_guide/indexing#indexing-boolean&quot;&gt;boolean indexing&lt;/a&gt;.</source>
          <target state="translated">DataFrame은 여러 가지 방법으로 필터링 할 수 있습니다. 가장 직관적 인 것은 &lt;a href=&quot;../../user_guide/indexing#indexing-boolean&quot;&gt;부울 인덱싱을&lt;/a&gt; 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="92b5b941979a772f27a3c3218506ba2160dfed9b" translate="yes" xml:space="preserve">
          <source>DataFrames can be filtered in multiple ways; the most intuitive of which is using &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/indexing.html#boolean-indexing&quot;&gt;boolean indexing&lt;/a&gt;.</source>
          <target state="translated">DataFrame은 여러 가지 방법으로 필터링 할 수 있습니다. 가장 직관적 인 것은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/indexing.html#boolean-indexing&quot;&gt;부울 인덱싱을&lt;/a&gt; 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="a901eacdad05bd6669cdb5db6000a89264bbfdd3" translate="yes" xml:space="preserve">
          <source>DataFrames df and different_column_type have the same element types and values, but have different types for the column labels, which will still return True.</source>
          <target state="translated">DataFrames df와 different_column_type은 요소 유형과 값이 동일하지만 열 레이블에 대해 다른 유형을 가지므로 여전히 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ecf392e23155d90b077d48be67688d29752dd0b6" translate="yes" xml:space="preserve">
          <source>DataFrames df and different_data_type have different types for the same values for their elements, and will return False even though their column labels are the same values and types.</source>
          <target state="translated">DataFrames df와 different_data_type은 요소의 동일한 값에 대해 다른 유형을 가지며 열 레이블이 동일한 값과 유형 인 경우에도 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c430a5c7188b2ab8622283718babfa9018f44384" translate="yes" xml:space="preserve">
          <source>DataFrames df and exactly_equal have the same types and values for their elements and column labels, which will return True.</source>
          <target state="translated">DataFrames df 및 exactly_equal은 요소 및 열 레이블에 대해 동일한 유형 및 값을 가지며 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="452dae9d92ae82969a792e2c32fbd27f5b783894" translate="yes" xml:space="preserve">
          <source>DataTypes</source>
          <target state="translated">DataTypes</target>
        </trans-unit>
        <trans-unit id="61074f1c958d6cdd32dad889b3d58a2d0704cbe3" translate="yes" xml:space="preserve">
          <source>Database</source>
          <target state="translated">Database</target>
        </trans-unit>
        <trans-unit id="fa2cfbb533741889a1130ab9ce459643c052f063" translate="yes" xml:space="preserve">
          <source>Database-style DataFrame or named Series joining/merging</source>
          <target state="translated">데이터베이스 스타일 DataFrame 또는 명명 된 Series 결합 / 병합</target>
        </trans-unit>
        <trans-unit id="1f50c05df4a74b08773b2a628777bf464e00987d" translate="yes" xml:space="preserve">
          <source>Databases supported by SQLAlchemy &lt;a href=&quot;#r689dfd12abe5-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; are supported. Tables can be newly created, appended to, or overwritten.</source>
          <target state="translated">SQLAlchemy &lt;a href=&quot;#r689dfd12abe5-1&quot; id=&quot;id1&quot;&gt;[1]에서&lt;/a&gt; 지원하는 데이터베이스 가 지원됩니다. 테이블을 새로 만들거나 추가하거나 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67f1cfb36006327760829d6d7f2e8785b405a8d7" translate="yes" xml:space="preserve">
          <source>Databases supported by SQLAlchemy &lt;a href=&quot;#rb112c6730e63-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; are supported. Tables can be newly created, appended to, or overwritten.</source>
          <target state="translated">SQLAlchemy &lt;a href=&quot;#rb112c6730e63-1&quot; id=&quot;id1&quot;&gt;[1]에서&lt;/a&gt; 지원하는 데이터베이스 가 지원됩니다. 테이블을 새로 만들거나 추가하거나 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="674b424e90c7292f6c1d2b442cd20a46676cc706" translate="yes" xml:space="preserve">
          <source>Dataframe</source>
          <target state="translated">Dataframe</target>
        </trans-unit>
        <trans-unit id="d5fbd8d1850280af11e2256f305aee47cf32c525" translate="yes" xml:space="preserve">
          <source>Dataframes</source>
          <target state="translated">Dataframes</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="4dd0f4b991d2d69a160c8b41ec59951d8cd1c520" translate="yes" xml:space="preserve">
          <source>Date Handling</source>
          <target state="translated">날짜 처리</target>
        </trans-unit>
        <trans-unit id="10bf7213a53985bdcb6e663f0fa1d7b65b51ca7c" translate="yes" xml:space="preserve">
          <source>Date Offset</source>
          <target state="translated">날짜 오프셋</target>
        </trans-unit>
        <trans-unit id="476ac8ce616a2506adab840fb475901256d8c3b0" translate="yes" xml:space="preserve">
          <source>Date and Time Types: &lt;code&gt;'datetime', 'datetimetz'&lt;/code&gt;, &lt;code&gt;'timedelta'&lt;/code&gt;</source>
          <target state="translated">날짜 및 시간 유형 : &lt;code&gt;'datetime', 'datetimetz'&lt;/code&gt; , &lt;code&gt;'timedelta'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9ce143418af7f924e57d558b41f96d7eb907991" translate="yes" xml:space="preserve">
          <source>Date corresponding to a proleptic Gregorian ordinal.</source>
          <target state="translated">proleptic Gregorian 서수에 해당하는 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="f049c082cff44adfbf192989f9e5ddd9d35099d0" translate="yes" xml:space="preserve">
          <source>Date format string (e.g. &amp;ldquo;%Y-%m-%d&amp;rdquo;).</source>
          <target state="translated">날짜 형식 문자열 (예 : &quot;% Y- % m- % d&quot;).</target>
        </trans-unit>
        <trans-unit id="f6c220156350921566dcdfa29115ecb4fdf93c88" translate="yes" xml:space="preserve">
          <source>Date functionality</source>
          <target state="translated">날짜 기능</target>
        </trans-unit>
        <trans-unit id="8678e3b306ef18c5601a41c36d67302ac8056ac1" translate="yes" xml:space="preserve">
          <source>Date handling</source>
          <target state="translated">날짜 처리</target>
        </trans-unit>
        <trans-unit id="aaa7ab960f7e42d38b680da82bdd59f64dc299c9" translate="yes" xml:space="preserve">
          <source>Date offsets</source>
          <target state="translated">날짜 오프셋</target>
        </trans-unit>
        <trans-unit id="6605fabedf0b0f1eb8905a6c8cc8bdd0a4fecb4c" translate="yes" xml:space="preserve">
          <source>Date offsets: A relative time duration that respects calendar arithmetic. Similar to &lt;code&gt;dateutil.relativedelta.relativedelta&lt;/code&gt; from the &lt;code&gt;dateutil&lt;/code&gt; package.</source>
          <target state="translated">날짜 오프셋 : 달력 산술을 고려하는 상대 시간 기간입니다. 유사 &lt;code&gt;dateutil.relativedelta.relativedelta&lt;/code&gt; 로부터 &lt;code&gt;dateutil&lt;/code&gt; 패키지로 제공된다.</target>
        </trans-unit>
        <trans-unit id="85b05533e0c7713cb97f98a9006b0044b0d2db23" translate="yes" xml:space="preserve">
          <source>Date parsing functions</source>
          <target state="translated">날짜 구문 분석 기능</target>
        </trans-unit>
        <trans-unit id="a9db77a856ba03cc2e0d854a0acd2f42d1273534" translate="yes" xml:space="preserve">
          <source>Date times</source>
          <target state="translated">날짜 시간</target>
        </trans-unit>
        <trans-unit id="ddce74d0fe7c5dcfdb4aa08af5d33d0433ed1651" translate="yes" xml:space="preserve">
          <source>Date times: A specific date and time with timezone support. Similar to &lt;code&gt;datetime.datetime&lt;/code&gt; from the standard library.</source>
          <target state="translated">날짜 시간 : 시간대가 지원되는 특정 날짜 및 시간입니다. 표준 라이브러리의 &lt;code&gt;datetime.datetime&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="edbd1e34b5cb2708e15c277800daf3a54bdf9980" translate="yes" xml:space="preserve">
          <source>Date(s) before which the last row(s) are returned.</source>
          <target state="translated">마지막 행이 반환되기 전의 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="befddc045aa60373c63ef4f4364aeb6ed420f92a" translate="yes" xml:space="preserve">
          <source>DateOffset</source>
          <target state="translated">DateOffset</target>
        </trans-unit>
        <trans-unit id="f809bf223d21683ed220ae1bc0b8ab97adeb6d6b" translate="yes" xml:space="preserve">
          <source>DateOffset for the Easter holiday using logic defined in dateutil.</source>
          <target state="translated">dateutil에 정의 된 논리를 사용하여 부활절 휴가를위한 DateOffset입니다.</target>
        </trans-unit>
        <trans-unit id="018bdecc5045c8ad5db096e42325e1090f82bd38" translate="yes" xml:space="preserve">
          <source>DateOffset increments between Quarter end dates.</source>
          <target state="translated">DateOffset은 분기 종료 날짜 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="7a238204c8c10edea383ceb35d38711eb7978d54" translate="yes" xml:space="preserve">
          <source>DateOffset increments between Quarter start dates.</source>
          <target state="translated">DateOffset은 분기 시작 날짜 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="b825d02ade77c929733bfb860e4f21d74425563c" translate="yes" xml:space="preserve">
          <source>DateOffset increments between business EOM dates.</source>
          <target state="translated">DateOffset은 비즈니스 EOM 날짜 사이에서 증가합니다.</target>
        </trans-unit>
        <trans-unit id="7da1b3b04cfdb6e5a9316dcac80afef0470427c3" translate="yes" xml:space="preserve">
          <source>DateOffset increments between business Quarter dates.</source>
          <target state="translated">비즈니스 분기 날짜 사이에 DateOffset이 증가합니다.</target>
        </trans-unit>
        <trans-unit id="a94f5e070dbf8266e6d5cfce96d0f792c268b9ee" translate="yes" xml:space="preserve">
          <source>DateOffset increments between business quarter dates for 52-53 week fiscal year (also known as a 4-4-5 calendar).</source>
          <target state="translated">DateOffset은 52-53 주 회계 연도의 영업 분기 날짜 사이에서 증가합니다 (4-4-5 캘린더라고도 함).</target>
        </trans-unit>
        <trans-unit id="2c1845f840ca23a7e9d81874c890b5b626570ad2" translate="yes" xml:space="preserve">
          <source>DateOffset increments between business year begin dates.</source>
          <target state="translated">비즈니스 연도 시작 날짜 사이의 DateOffset 증분입니다.</target>
        </trans-unit>
        <trans-unit id="00c88d36827cd1a811d37833ad8986448f6b83c6" translate="yes" xml:space="preserve">
          <source>DateOffset increments between calendar year begin dates.</source>
          <target state="translated">DateOffset은 연도 시작 날짜 사이에서 증가합니다.</target>
        </trans-unit>
        <trans-unit id="1ae039519955fbfdb3021e8dbf66df3d0f61d7c6" translate="yes" xml:space="preserve">
          <source>DateOffset increments between calendar year ends.</source>
          <target state="translated">DateOffset은 연도 말 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="c1c47106d8a0df04722fe2a3e256007cef9058b4" translate="yes" xml:space="preserve">
          <source>DateOffset increments between the first business day of each Quarter.</source>
          <target state="translated">DateOffset은 각 분기의 첫 번째 영업일 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="e5153228202907d4d3713388f0dd5404d166ad2c" translate="yes" xml:space="preserve">
          <source>DateOffset increments between the first business day of the year.</source>
          <target state="translated">DateOffset은 해당 연도의 첫 번째 영업일 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="6a8246587a67087479930a6ddf3903dc18af575c" translate="yes" xml:space="preserve">
          <source>DateOffset increments between the last business day of each Quarter.</source>
          <target state="translated">DateOffset은 각 분기의 마지막 영업일 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="3c132fdffb128825bf23557622d730bcefed53f5" translate="yes" xml:space="preserve">
          <source>DateOffset increments between the last business day of the month</source>
          <target state="translated">DateOffset은 해당 월의 마지막 영업일 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="f06e9646ce342294cc78def2c18c780590758d57" translate="yes" xml:space="preserve">
          <source>DateOffset increments between the last business day of the year.</source>
          <target state="translated">DateOffset은 해당 연도의 마지막 영업일 사이에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="d8af3d1d25d08c8fb031db6e019f15381dd3941a" translate="yes" xml:space="preserve">
          <source>DateOffset objects</source>
          <target state="translated">DateOffset 객체</target>
        </trans-unit>
        <trans-unit id="0a2ffe070fb7bdb6c72385dc22032a52d1c345e8" translate="yes" xml:space="preserve">
          <source>DateOffset of one business month at beginning.</source>
          <target state="translated">시작일로부터 1 개월의 영업일 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="b697867e585850c7b6ee88f0b8c07863b1ad2442" translate="yes" xml:space="preserve">
          <source>DateOffset of one month at beginning.</source>
          <target state="translated">Date 시작시 한 달의 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="4f92798e1f9a61933cd34a2d6a53d6bbce5b0d92" translate="yes" xml:space="preserve">
          <source>DateOffset of one month at the first business day.</source>
          <target state="translated">첫 영업일에 한 달의 DateOffset입니다.</target>
        </trans-unit>
        <trans-unit id="ec0892a545a68729da4d9678d8494ddf34157620" translate="yes" xml:space="preserve">
          <source>DateOffset of one month end.</source>
          <target state="translated">한 달 종료 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="eaf3238d5e97d095d80426297755e0162d11b7b4" translate="yes" xml:space="preserve">
          <source>DateOffset or None</source>
          <target state="translated">DateOffset 또는 None</target>
        </trans-unit>
        <trans-unit id="6a5b5d7635ec00dc8cf23f956f561519cd1592a7" translate="yes" xml:space="preserve">
          <source>DateOffset subclass representing custom business days excluding holidays.</source>
          <target state="translated">휴일을 제외한 사용자 지정 영업일을 나타내는 DateOffset 하위 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="88074eb502fa6a22507b896a91d69880a4da0022" translate="yes" xml:space="preserve">
          <source>DateOffset subclass representing custom business month(s).</source>
          <target state="translated">사용자 지정 업무 월을 나타내는 DateOffset 하위 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="e9809bd0caeb05fe7e81271df2fd9f14d6dc1e65" translate="yes" xml:space="preserve">
          <source>DateOffset subclass representing possibly n business days.</source>
          <target state="translated">가능한 n 영업일을 나타내는 DateOffset 하위 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="55af90665ee34cd77a521875d1a88210541bb221" translate="yes" xml:space="preserve">
          <source>DateOffset subclass representing possibly n business hours.</source>
          <target state="translated">가능한 n 업무 시간을 나타내는 DateOffset 서브 클래스.</target>
        </trans-unit>
        <trans-unit id="72206301f1f62b58f6deec8220834bb48cc3f8a5" translate="yes" xml:space="preserve">
          <source>DateOffset subclass representing possibly n custom business days, excluding holidays.</source>
          <target state="translated">공휴일을 제외하고 n 일의 사용자 정의 영업일을 나타내는 DateOffset 서브 클래스.</target>
        </trans-unit>
        <trans-unit id="01d75bfc472f1f10f58efe0a39a3a89ff1d07f58" translate="yes" xml:space="preserve">
          <source>DateOffset subclass representing possibly n custom business days.</source>
          <target state="translated">가능한 n 개의 사용자 정의 영업일을 나타내는 DateOffset 서브 클래스.</target>
        </trans-unit>
        <trans-unit id="fa9ca172d1cb78a5d9b533ce8b2a1f49da0ec449" translate="yes" xml:space="preserve">
          <source>DateOffset that just needs a month.</source>
          <target state="translated">한 달만 필요한 DateOffset입니다.</target>
        </trans-unit>
        <trans-unit id="fa99c289abb4e02e4c31f5493d90553b06e125f8" translate="yes" xml:space="preserve">
          <source>DateOffset work as follows. Each offset specify a set of dates that conform to the DateOffset. For example, Bday defines this set to be the set of dates that are weekdays (M-F). To test if a date is in the set of a DateOffset dateOffset we can use the is_on_offset method: dateOffset.is_on_offset(date).</source>
          <target state="translated">DateOffset은 다음과 같이 작동합니다. 각 오프셋은 DateOffset을 준수하는 날짜 세트를 지정합니다. 예를 들어, Bday는이 ​​집합을 평일 (MF) 날짜 집합으로 정의합니다. 날짜가 DateOffset dateOffset 집합에 있는지 테스트하려면 is_on_offset 메서드 인 dateOffset.is_on_offset (date)를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b4aca1d052e7b66074990769bab70626b0bcc17" translate="yes" xml:space="preserve">
          <source>DateOffset work as follows. Each offset specify a set of dates that conform to the DateOffset. For example, Bday defines this set to be the set of dates that are weekdays (M-F). To test if a date is in the set of a DateOffset dateOffset we can use the onOffset method: dateOffset.onOffset(date).</source>
          <target state="translated">DateOffset은 다음과 같이 작동합니다. 각 오프셋은 DateOffset을 따르는 날짜 집합을 지정합니다. 예를 들어, Bday는이 ​​세트를 주중 (MF) 인 날짜 세트로 정의합니다. 날짜가 DateOffset dateOffset 세트에 있는지 테스트하기 위해 onOffset 메소드를 사용할 수 있습니다 : dateOffset.onOffset (date).</target>
        </trans-unit>
        <trans-unit id="c4aca29834916bdc5aa200f8ac763dee198fefb8" translate="yes" xml:space="preserve">
          <source>DateOffset.apply()</source>
          <target state="translated">DateOffset.apply()</target>
        </trans-unit>
        <trans-unit id="c63489d28dfcc369ddb726d90c4f511d0647400b" translate="yes" xml:space="preserve">
          <source>DateOffset.apply_index()</source>
          <target state="translated">DateOffset.apply_index()</target>
        </trans-unit>
        <trans-unit id="80ff35892b67be06957a34269ce3a9fe9ad28583" translate="yes" xml:space="preserve">
          <source>DateOffset.base</source>
          <target state="translated">DateOffset.base</target>
        </trans-unit>
        <trans-unit id="bdbb0c1afbc86c485493d1de48bb5515a440f8aa" translate="yes" xml:space="preserve">
          <source>DateOffset.copy()</source>
          <target state="translated">DateOffset.copy()</target>
        </trans-unit>
        <trans-unit id="f8042f70b8ae3624ab508c2c122158d9cdbf0da8" translate="yes" xml:space="preserve">
          <source>DateOffset.freqstr</source>
          <target state="translated">DateOffset.freqstr</target>
        </trans-unit>
        <trans-unit id="75aab382edeec664ac9f2d10f9cdfff7e5f2f109" translate="yes" xml:space="preserve">
          <source>DateOffset.isAnchored()</source>
          <target state="translated">DateOffset.isAnchored()</target>
        </trans-unit>
        <trans-unit id="bbad71b5c49cb252ad7bf273f4544fe38b6ad923" translate="yes" xml:space="preserve">
          <source>DateOffset.kwds</source>
          <target state="translated">DateOffset.kwds</target>
        </trans-unit>
        <trans-unit id="d112c15f4079d89f0837da92871709bb39cb9d09" translate="yes" xml:space="preserve">
          <source>DateOffset.name</source>
          <target state="translated">DateOffset.name</target>
        </trans-unit>
        <trans-unit id="25180e207f907e8aa87e29ba76d77e4774560a46" translate="yes" xml:space="preserve">
          <source>DateOffset.nanos</source>
          <target state="translated">DateOffset.nanos</target>
        </trans-unit>
        <trans-unit id="c0eb11bcb55fb01c7114b90d64fabc787da7c695" translate="yes" xml:space="preserve">
          <source>DateOffset.normalize</source>
          <target state="translated">DateOffset.normalize</target>
        </trans-unit>
        <trans-unit id="ccecb96fc98e0119f27714fb06d32a217f81e458" translate="yes" xml:space="preserve">
          <source>DateOffset.onOffset()</source>
          <target state="translated">DateOffset.onOffset()</target>
        </trans-unit>
        <trans-unit id="5ccd2d09614ac07acfbc3ab5e3b820a43303d952" translate="yes" xml:space="preserve">
          <source>DateOffset.rollback()</source>
          <target state="translated">DateOffset.rollback()</target>
        </trans-unit>
        <trans-unit id="1f269b6634f4df14092482c70900bb3aa37724cf" translate="yes" xml:space="preserve">
          <source>DateOffset.rollforward()</source>
          <target state="translated">DateOffset.rollforward()</target>
        </trans-unit>
        <trans-unit id="34fdb1a00c3506d140d4a8b7acd0feaf87f2a548" translate="yes" xml:space="preserve">
          <source>DateOffset.rule_code</source>
          <target state="translated">DateOffset.rule_code</target>
        </trans-unit>
        <trans-unit id="6285cd845615843ca1bcf9aa069450742ec22b67" translate="yes" xml:space="preserve">
          <source>DateOffsets can be created to move dates forward a given number of valid dates. For example, Bday(2) can be added to a date to move it two business days forward. If the date does not start on a valid date, first it is moved to a valid date. Thus pseudo code is:</source>
          <target state="translated">주어진 날짜 수만큼 유효한 날짜로 날짜를 이동하기 위해 DateOffset을 만들 수 있습니다. 예를 들어, Bday (2)를 날짜에 추가하여 영업일 기준 2 일 전으로 이동할 수 있습니다. 날짜가 유효한 날짜에 시작되지 않으면 먼저 유효한 날짜로 이동합니다. 따라서 의사 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7366489c0e93b2c40b371b948a46bf2675bc23cc" translate="yes" xml:space="preserve">
          <source>DateTimeIndex</source>
          <target state="translated">DateTimeIndex</target>
        </trans-unit>
        <trans-unit id="b3090e71cd710cc7be4a14af61bce545af4fc40d" translate="yes" xml:space="preserve">
          <source>Dates and strings that parse to timestamps can be passed as indexing parameters:</source>
          <target state="translated">타임 스탬프로 구문 분석되는 날짜 및 문자열은 인덱싱 매개 변수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6f6a5f2173c7d89dde1bc70197644f533febd4e" translate="yes" xml:space="preserve">
          <source>Dates are assumed to be sorted. Raises if this is not the case.</source>
          <target state="translated">날짜는 정렬 된 것으로 가정합니다. 그렇지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9c6593c6bead0eec5b6abe5a82dd85419dd3ac97" translate="yes" xml:space="preserve">
          <source>Dates to exclude from the set of valid business days, passed to &lt;code&gt;numpy.busdaycalendar&lt;/code&gt;, only used when custom frequency strings are passed.</source>
          <target state="translated">유효한 영업일 세트에서 제외 할 날짜는 &lt;code&gt;numpy.busdaycalendar&lt;/code&gt; 로 전달되며 사용자 정의 빈도 문자열이 전달 될 때만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="69c5c7d29f56fe9626dece83ac57dd81a7598075" translate="yes" xml:space="preserve">
          <source>Dates written in nanoseconds need to be read back in nanoseconds:</source>
          <target state="translated">나노초로 작성된 날짜는 나노초로 다시 읽어야합니다.</target>
        </trans-unit>
        <trans-unit id="ae373c7eadbd9c6b3e097047f5c910c216623ee0" translate="yes" xml:space="preserve">
          <source>Datetime data</source>
          <target state="translated">날짜 / 시간 데이터</target>
        </trans-unit>
        <trans-unit id="0d87e4e14f4aac3e3d576cddbf24081c9111d32f" translate="yes" xml:space="preserve">
          <source>Datetime data types</source>
          <target state="translated">Datetime 데이터 유형</target>
        </trans-unit>
        <trans-unit id="2a283c25d4d8eab34c71816add37f2ab95cff80f" translate="yes" xml:space="preserve">
          <source>Datetime handling</source>
          <target state="translated">날짜 시간 처리</target>
        </trans-unit>
        <trans-unit id="d2ae284a6934eeff7366d80dfa13a92776f1987a" translate="yes" xml:space="preserve">
          <source>Datetime methods</source>
          <target state="translated">날짜 / 시간 방법</target>
        </trans-unit>
        <trans-unit id="c5ceb6a10f263f3a51af55a8a54e0d2814d7fce0" translate="yes" xml:space="preserve">
          <source>Datetime properties</source>
          <target state="translated">날짜 / 시간 속성</target>
        </trans-unit>
        <trans-unit id="0494bd6f4ad2f966f52407b28102da25fa1cf8bc" translate="yes" xml:space="preserve">
          <source>Datetime with Timezone</source>
          <target state="translated">시간대가있는 날짜 / 시간</target>
        </trans-unit>
        <trans-unit id="42f133defe7322c03afad36ac9a4f24559f7b960" translate="yes" xml:space="preserve">
          <source>Datetime, Timedelta, Period</source>
          <target state="translated">날짜 / 시간, 기간</target>
        </trans-unit>
        <trans-unit id="ab8e8d7e0078f92949bcf1fc4b2cf52d6d61d661" translate="yes" xml:space="preserve">
          <source>Datetime-like values are normally automatically converted to the appropriate dtype when reading the excel file. But if you have a column of strings that &lt;em&gt;look&lt;/em&gt; like dates (but are not actually formatted as dates in excel), you can use the &lt;code&gt;parse_dates&lt;/code&gt; keyword to parse those strings to datetimes:</source>
          <target state="translated">날짜 시간과 유사한 값은 일반적으로 Excel 파일을 읽을 때 적절한 dtype으로 자동 변환됩니다. 그러나 날짜처럼 &lt;em&gt;보이는&lt;/em&gt; 문자열 열이있는 경우 (실제로 Excel에서는 날짜 형식이 아님) &lt;code&gt;parse_dates&lt;/code&gt; 키워드를 사용하여 해당 문자열을 datetimes로 구문 분석 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1e0fd66fbdc7b547c6445bb41db267c519d75f2" translate="yes" xml:space="preserve">
          <source>DatetimeArray</source>
          <target state="translated">DatetimeArray</target>
        </trans-unit>
        <trans-unit id="e620b477192d7f686e6196ce8a6447a142ebac6b" translate="yes" xml:space="preserve">
          <source>DatetimeArray is currently experimental, and its API may change without warning. In particular, &lt;code&gt;DatetimeArray.dtype&lt;/code&gt; is expected to change to always be an instance of an &lt;code&gt;ExtensionDtype&lt;/code&gt; subclass.</source>
          <target state="translated">DatetimeArray는 현재 실험 중이며 API는 경고없이 변경 될 수 있습니다. 특히 &lt;code&gt;DatetimeArray.dtype&lt;/code&gt; 은 항상 &lt;code&gt;ExtensionDtype&lt;/code&gt; 하위 클래스 의 인스턴스로 변경 될 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="ef83a9d9a8bda1e37eb7aa3e8a7cbf2c8187e5c5" translate="yes" xml:space="preserve">
          <source>DatetimeArray, DatetimeIndex or Series</source>
          <target state="translated">DatetimeArray, DatetimeIndex 또는 시리즈</target>
        </trans-unit>
        <trans-unit id="ed09a3da47081aac3ada4efcabc3b564714102b3" translate="yes" xml:space="preserve">
          <source>DatetimeArray/Index</source>
          <target state="translated">DatetimeArray/Index</target>
        </trans-unit>
        <trans-unit id="ec1605594d02e33afd13f463b3d1e00a9b9debef" translate="yes" xml:space="preserve">
          <source>DatetimeIndex</source>
          <target state="translated">DatetimeIndex</target>
        </trans-unit>
        <trans-unit id="098e12a19272af30b69bcec524a8cccb5378128a" translate="yes" xml:space="preserve">
          <source>DatetimeIndex, TimedeltaIndex, or Series</source>
          <target state="translated">DatetimeIndex, TimedeltaIndex 또는 Series</target>
        </trans-unit>
        <trans-unit id="ac916d4a0950dbd2e89ac374afea5d2a28256e1c" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.ceil()</source>
          <target state="translated">DatetimeIndex.ceil()</target>
        </trans-unit>
        <trans-unit id="04ddda63bbc4ef4a2df6412227dc97762f879d30" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.date</source>
          <target state="translated">DatetimeIndex.date</target>
        </trans-unit>
        <trans-unit id="dc2e5d292e24b68ed0867242d470664e6b555727" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.day</source>
          <target state="translated">DatetimeIndex.day</target>
        </trans-unit>
        <trans-unit id="305c50b52766014999e51f7123ad4d30397840d2" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.day_name()</source>
          <target state="translated">DatetimeIndex.day_name()</target>
        </trans-unit>
        <trans-unit id="9f7257700514baed2ae407b78bf6816cd17ed9b5" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.dayofweek</source>
          <target state="translated">DatetimeIndex.dayofweek</target>
        </trans-unit>
        <trans-unit id="a8010457cf5a39c30e71c13d3d8caba4b3ffbce9" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.dayofyear</source>
          <target state="translated">DatetimeIndex.dayofyear</target>
        </trans-unit>
        <trans-unit id="ea5be9feba939a7247a26d3e3bf63040513e38da" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.floor()</source>
          <target state="translated">DatetimeIndex.floor()</target>
        </trans-unit>
        <trans-unit id="957ad6c5da1bf66f5beca9be1715775fc5aef32f" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.freq</source>
          <target state="translated">DatetimeIndex.freq</target>
        </trans-unit>
        <trans-unit id="6ec304de55501064de930b3a524d071824e36cc1" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.freqstr</source>
          <target state="translated">DatetimeIndex.freqstr</target>
        </trans-unit>
        <trans-unit id="e437b434acbbea4b6db48b5a05614ddd13a033d4" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.hour</source>
          <target state="translated">DatetimeIndex.hour</target>
        </trans-unit>
        <trans-unit id="d6d5339fcfb1b411f7feb9880cbdaaafe332d0be" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.indexer_at_time()</source>
          <target state="translated">DatetimeIndex.indexer_at_time()</target>
        </trans-unit>
        <trans-unit id="b131cf1f32da78cf6bf6f1bc9d4afec60bc67b46" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.indexer_between_time()</source>
          <target state="translated">DatetimeIndex.indexer_between_time()</target>
        </trans-unit>
        <trans-unit id="4e6d443464a1b9b1fa9679447cf5c2c1cdc01e63" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.inferred_freq</source>
          <target state="translated">DatetimeIndex.inferred_freq</target>
        </trans-unit>
        <trans-unit id="68f33d80a9aba62927cf7103745b121d33111c67" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.is_leap_year</source>
          <target state="translated">DatetimeIndex.is_leap_year</target>
        </trans-unit>
        <trans-unit id="f9b2a5407d3a70179046e85660a1d2e209df7c78" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.is_month_end</source>
          <target state="translated">DatetimeIndex.is_month_end</target>
        </trans-unit>
        <trans-unit id="caa686233e81c7ccebfce250728d76db79f76080" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.is_month_start</source>
          <target state="translated">DatetimeIndex.is_month_start</target>
        </trans-unit>
        <trans-unit id="9fc295675eda632869f089c1e1361b8d9699b8cd" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.is_quarter_end</source>
          <target state="translated">DatetimeIndex.is_quarter_end</target>
        </trans-unit>
        <trans-unit id="756ad46ec836d4075bd55881833bbb47133c80ac" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.is_quarter_start</source>
          <target state="translated">DatetimeIndex.is_quarter_start</target>
        </trans-unit>
        <trans-unit id="990ac2d076fa87990a15d40063933b6eb10da2ef" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.is_year_end</source>
          <target state="translated">DatetimeIndex.is_year_end</target>
        </trans-unit>
        <trans-unit id="b0dca367de5d5bcd8d0aa717651435f070e8c2fe" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.is_year_start</source>
          <target state="translated">DatetimeIndex.is_year_start</target>
        </trans-unit>
        <trans-unit id="9f1e749d45e17f5536265129506afc687434caca" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.mean()</source>
          <target state="translated">DatetimeIndex.mean()</target>
        </trans-unit>
        <trans-unit id="03e352569e7dbc16809b920da8efa394a65daee5" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.microsecond</source>
          <target state="translated">DatetimeIndex.microsecond</target>
        </trans-unit>
        <trans-unit id="62379a64b8e792387671b47934449f5505a79725" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.minute</source>
          <target state="translated">DatetimeIndex.minute</target>
        </trans-unit>
        <trans-unit id="1a53c9a53d56560957e2c334a4e60bcb85e0c9dc" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.month</source>
          <target state="translated">DatetimeIndex.month</target>
        </trans-unit>
        <trans-unit id="37f460a4016c1b374b747a632702682dfc91a73f" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.month_name()</source>
          <target state="translated">DatetimeIndex.month_name()</target>
        </trans-unit>
        <trans-unit id="012e05bb5095575d2097b3e308c9c3da1253922e" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.nanosecond</source>
          <target state="translated">DatetimeIndex.nanosecond</target>
        </trans-unit>
        <trans-unit id="7a9ecf91d0907b51845a70a1f2509d1ea3ea69ac" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.normalize()</source>
          <target state="translated">DatetimeIndex.normalize()</target>
        </trans-unit>
        <trans-unit id="e487fc299e242ccc26faea4c160210ee8b4db68a" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.quarter</source>
          <target state="translated">DatetimeIndex.quarter</target>
        </trans-unit>
        <trans-unit id="8b1285bdbbc1f567561fe50f987a6fc6588eab0e" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.round()</source>
          <target state="translated">DatetimeIndex.round()</target>
        </trans-unit>
        <trans-unit id="e383db9f00b891dfe1af650e8d8a0b0f9c507f54" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.second</source>
          <target state="translated">DatetimeIndex.second</target>
        </trans-unit>
        <trans-unit id="daff94097b034e5e32012e4f2c019ba76abb4144" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.shift</source>
          <target state="translated">DatetimeIndex.shift</target>
        </trans-unit>
        <trans-unit id="5f570796e2f11a6024df32e9769d02d2520c354c" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.snap()</source>
          <target state="translated">DatetimeIndex.snap()</target>
        </trans-unit>
        <trans-unit id="7074e782c152a78420c02600a9e0f43c079c570c" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.strftime()</source>
          <target state="translated">DatetimeIndex.strftime()</target>
        </trans-unit>
        <trans-unit id="cc59e1e21144adeb4abf0a34ed1e71633aabfc57" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.time</source>
          <target state="translated">DatetimeIndex.time</target>
        </trans-unit>
        <trans-unit id="e2e1bdace48a70e384c9ff19a5777636328fca2e" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.timetz</source>
          <target state="translated">DatetimeIndex.timetz</target>
        </trans-unit>
        <trans-unit id="9cae788554087b6b97fda300669cd596f8da0487" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.to_frame()</source>
          <target state="translated">DatetimeIndex.to_frame()</target>
        </trans-unit>
        <trans-unit id="00f1c532b7359294aa7eb21e9928b9f397d8bc9f" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.to_period()</source>
          <target state="translated">DatetimeIndex.to_period()</target>
        </trans-unit>
        <trans-unit id="d66990c3864285c267690147c6ff4a485fd04940" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.to_perioddelta()</source>
          <target state="translated">DatetimeIndex.to_perioddelta()</target>
        </trans-unit>
        <trans-unit id="05dc56f6a7afdaf63d6bebb27069474fc91cfb9d" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.to_pydatetime()</source>
          <target state="translated">DatetimeIndex.to_pydatetime()</target>
        </trans-unit>
        <trans-unit id="1785db56fa61b76d46dbad818948945852ae835a" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.to_series()</source>
          <target state="translated">DatetimeIndex.to_series()</target>
        </trans-unit>
        <trans-unit id="db659208334e6168dbfc59757a11e9e2672bd1fe" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.tz</source>
          <target state="translated">DatetimeIndex.tz</target>
        </trans-unit>
        <trans-unit id="565db773be3cbaa64b7c3c3e4902bc02b87f6c0a" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.tz_convert()</source>
          <target state="translated">DatetimeIndex.tz_convert()</target>
        </trans-unit>
        <trans-unit id="220c016bc6ad6c207700149ce8aa73c0fc87e8de" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.tz_localize()</source>
          <target state="translated">DatetimeIndex.tz_localize()</target>
        </trans-unit>
        <trans-unit id="d1ac6caf6ebb2b9c6b20d24f2f40be4ee4b85ab5" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.week</source>
          <target state="translated">DatetimeIndex.week</target>
        </trans-unit>
        <trans-unit id="20307f3422d4925332c258ac3975fd45788bfa4d" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.weekday</source>
          <target state="translated">DatetimeIndex.weekday</target>
        </trans-unit>
        <trans-unit id="4e4e762465c4d5526172772d17a2eef37cd9c302" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.weekofyear</source>
          <target state="translated">DatetimeIndex.weekofyear</target>
        </trans-unit>
        <trans-unit id="35e5c048ff373cb0b7ab93244aa316cad7f5f2f6" translate="yes" xml:space="preserve">
          <source>DatetimeIndex.year</source>
          <target state="translated">DatetimeIndex.year</target>
        </trans-unit>
        <trans-unit id="4ec4817a7ab723b43a998fb4caef01f0173ed1bd" translate="yes" xml:space="preserve">
          <source>DatetimeIndex[source]</source>
          <target state="translated">DatetimeIndex[source]</target>
        </trans-unit>
        <trans-unit id="2dcdd951715a427b894d7d5b047a5d64464837d9" translate="yes" xml:space="preserve">
          <source>DatetimeTZDtype()</source>
          <target state="translated">DatetimeTZDtype()</target>
        </trans-unit>
        <trans-unit id="8d19968d103393cae1d416b38755fe94c488e470" translate="yes" xml:space="preserve">
          <source>DatetimeTZDtype.tz</source>
          <target state="translated">DatetimeTZDtype.tz</target>
        </trans-unit>
        <trans-unit id="0e42f56dd2c9f5d75e40af69337b77657f0a7469" translate="yes" xml:space="preserve">
          <source>DatetimeTZDtype.unit</source>
          <target state="translated">DatetimeTZDtype.unit</target>
        </trans-unit>
        <trans-unit id="230408d9e1faf14a85a3add14062c217e57b7403" translate="yes" xml:space="preserve">
          <source>Datetimelike properties</source>
          <target state="translated">날짜 / 시간과 같은 속성</target>
        </trans-unit>
        <trans-unit id="3dc63f0ccee0278e6656b0b187a2f5db6cfb6f0f" translate="yes" xml:space="preserve">
          <source>Datetimes</source>
          <target state="translated">Datetimes</target>
        </trans-unit>
        <trans-unit id="acec1e7f4f11a4260c18029d619a9263cec70b42" translate="yes" xml:space="preserve">
          <source>Datetimes are localized to UTC first before converting to the specified timezone:</source>
          <target state="translated">날짜 시간은 지정된 시간대로 변환하기 전에 먼저 UTC로 현지화됩니다.</target>
        </trans-unit>
        <trans-unit id="987b9ced08d4ac5d11d286ca4b54b99a4f69164b" translate="yes" xml:space="preserve">
          <source>Day</source>
          <target state="translated">Day</target>
        </trans-unit>
        <trans-unit id="132c2320be0655c7221b45185f2547bcd42d8db0" translate="yes" xml:space="preserve">
          <source>Day of the month as a decimal number [01,31].</source>
          <target state="translated">월의 일을 10 진수로 표시 [01,31].</target>
        </trans-unit>
        <trans-unit id="232f188c18baa6ec73f240c2283edac2e895ead4" translate="yes" xml:space="preserve">
          <source>Day of the month.</source>
          <target state="translated">달의 일.</target>
        </trans-unit>
        <trans-unit id="fc7b3b1acd3449a6d239dd11d639e3cf37c805a1" translate="yes" xml:space="preserve">
          <source>Day of the week the period lies in, with Monday=0 and Sunday=6.</source>
          <target state="translated">월요일이 0이고 일요일이 6 인 요일입니다.</target>
        </trans-unit>
        <trans-unit id="3d0993d50222157eff9732ee0792a3a7df53f677" translate="yes" xml:space="preserve">
          <source>Day of the week the period lies in.</source>
          <target state="translated">기간이 속하는 요일.</target>
        </trans-unit>
        <trans-unit id="e41975464a9f88e7f9ec6d70817b97f3ef84bcb9" translate="yes" xml:space="preserve">
          <source>Day of the week.</source>
          <target state="translated">요일.</target>
        </trans-unit>
        <trans-unit id="32b517546eb8b5fa413be2223efc36cd26437580" translate="yes" xml:space="preserve">
          <source>Day of the year as a decimal number [001,366].</source>
          <target state="translated">연도를 10 진수 [001,366]로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9d217acf15d9c91018c040a87e1a6703ff4783db" translate="yes" xml:space="preserve">
          <source>Day of the year.</source>
          <target state="translated">올해의 날.</target>
        </trans-unit>
        <trans-unit id="66ab849cc4f71827a5137a75ff8189bfdd9f1e55" translate="yes" xml:space="preserve">
          <source>Day value of the period.</source>
          <target state="translated">기간의 날짜 값입니다.</target>
        </trans-unit>
        <trans-unit id="4cb80307ec726e223f21b4bdc8c1ac9d34b4325e" translate="yes" xml:space="preserve">
          <source>Day.apply()</source>
          <target state="translated">Day.apply()</target>
        </trans-unit>
        <trans-unit id="bd6650253f3fc19a2a82a70c1658fb79a2fd51ec" translate="yes" xml:space="preserve">
          <source>Day.apply_index()</source>
          <target state="translated">Day.apply_index()</target>
        </trans-unit>
        <trans-unit id="8c342dc7a3877e9cd480232398f7956df21b7d38" translate="yes" xml:space="preserve">
          <source>Day.base</source>
          <target state="translated">Day.base</target>
        </trans-unit>
        <trans-unit id="93a6b4e36f64663815763aebd20d79ca8785c2e8" translate="yes" xml:space="preserve">
          <source>Day.copy()</source>
          <target state="translated">Day.copy()</target>
        </trans-unit>
        <trans-unit id="900feaed195f5e8ef75ae474590a21c6870b1bdf" translate="yes" xml:space="preserve">
          <source>Day.delta</source>
          <target state="translated">Day.delta</target>
        </trans-unit>
        <trans-unit id="f86bae157404440facb6109eb95d19aca465a29f" translate="yes" xml:space="preserve">
          <source>Day.freqstr</source>
          <target state="translated">Day.freqstr</target>
        </trans-unit>
        <trans-unit id="3cf728510286775737d1152877601bdc321a631c" translate="yes" xml:space="preserve">
          <source>Day.isAnchored()</source>
          <target state="translated">Day.isAnchored()</target>
        </trans-unit>
        <trans-unit id="999cc7e1f1dc6c89e4e5ad778112cd00a31c349a" translate="yes" xml:space="preserve">
          <source>Day.kwds</source>
          <target state="translated">Day.kwds</target>
        </trans-unit>
        <trans-unit id="d855bc9d47c657ddb464df403eadb276d7b9103b" translate="yes" xml:space="preserve">
          <source>Day.name</source>
          <target state="translated">Day.name</target>
        </trans-unit>
        <trans-unit id="55408378cdb99ceccff139c18cc6207f24f30564" translate="yes" xml:space="preserve">
          <source>Day.nanos</source>
          <target state="translated">Day.nanos</target>
        </trans-unit>
        <trans-unit id="23766d26d15dcb4a941cb0effd65efa273799a9f" translate="yes" xml:space="preserve">
          <source>Day.normalize</source>
          <target state="translated">Day.normalize</target>
        </trans-unit>
        <trans-unit id="f22f0cf24d70e298a3e2269bd243a8060545f135" translate="yes" xml:space="preserve">
          <source>Day.onOffset()</source>
          <target state="translated">Day.onOffset()</target>
        </trans-unit>
        <trans-unit id="90922713065cbb7cfb9e1c56d447e4561cbfb2ea" translate="yes" xml:space="preserve">
          <source>Day.rollback()</source>
          <target state="translated">Day.rollback()</target>
        </trans-unit>
        <trans-unit id="04ce1bd0d927404128fdd5513b113846684c305c" translate="yes" xml:space="preserve">
          <source>Day.rollforward()</source>
          <target state="translated">Day.rollforward()</target>
        </trans-unit>
        <trans-unit id="6d9ec265eb819541b52e8c398cd94aaeab34190e" translate="yes" xml:space="preserve">
          <source>Day.rule_code</source>
          <target state="translated">Day.rule_code</target>
        </trans-unit>
        <trans-unit id="36c5bba45bec327196a85e65652eaeb50c92e059" translate="yes" xml:space="preserve">
          <source>Days: &amp;lsquo;D&amp;rsquo;</source>
          <target state="translated">일 : 'D'</target>
        </trans-unit>
        <trans-unit id="5324c356286a6f51e7faa6e6d2f64589fe460538" translate="yes" xml:space="preserve">
          <source>De-duplicating a large store by chunks, essentially a recursive reduction operation. Shows a function for taking in data from csv file and creating a store by chunks, with date parsing as well. &lt;a href=&quot;https://stackoverflow.com/questions/16110252/need-to-compare-very-large-files-around-1-5gb-in-python/16110391#16110391&quot;&gt;See here&lt;/a&gt;</source>
          <target state="translated">큰 저장소를 청크 단위로 중복 제거 (기본적으로 재귀 감소 작업)합니다. csv 파일에서 데이터를 가져 와서 날짜 파싱과 함께 청크 단위로 저장소를 생성하는 기능을 보여줍니다. &lt;a href=&quot;https://stackoverflow.com/questions/16110252/need-to-compare-very-large-files-around-1-5gb-in-python/16110391#16110391&quot;&gt;여기를 봐&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48ae31a96eb86e6a252c33f041cf06f5bb83a680" translate="yes" xml:space="preserve">
          <source>Dealing with Unicode data</source>
          <target state="translated">유니 코드 데이터 다루기</target>
        </trans-unit>
        <trans-unit id="6f6419f7399a3e9c63e3aab3415c70acf10a562c" translate="yes" xml:space="preserve">
          <source>Dealing with bad lines</source>
          <target state="translated">나쁜 라인 다루기</target>
        </trans-unit>
        <trans-unit id="93eb7526948defd2a7d6e92a6abffdb7031ad9ec" translate="yes" xml:space="preserve">
          <source>Dealing with bad lines II</source>
          <target state="translated">나쁜 라인 다루기 II</target>
        </trans-unit>
        <trans-unit id="098e0afbf029c5be38739774387441187cccb82c" translate="yes" xml:space="preserve">
          <source>Dealing with duplicates when reindexing a timeseries to a specified frequency</source>
          <target state="translated">시계열을 지정된 빈도로 다시 색인화 할 때 중복 처리</target>
        </trans-unit>
        <trans-unit id="f775329a5b94da0d8b124d7e0ac6a8c3f9336607" translate="yes" xml:space="preserve">
          <source>Debian</source>
          <target state="translated">Debian</target>
        </trans-unit>
        <trans-unit id="a32688868e6a19f869b76003ac5cdc315486f53e" translate="yes" xml:space="preserve">
          <source>Debian &amp;amp; Ubuntu</source>
          <target state="translated">데비안 &amp;amp; 우분투</target>
        </trans-unit>
        <trans-unit id="5aa2090435b79b51172d33b3b889c859ab67dd18" translate="yes" xml:space="preserve">
          <source>Debugging Tip: If you&amp;rsquo;re having trouble writing your style function, try just passing it into DataFrame.apply. Internally, Styler.apply uses DataFrame.apply so the result should be the same.</source>
          <target state="translated">디버깅 팁 : 스타일 함수를 작성하는 데 문제가 있으면 DataFrame.apply에 전달하십시오. 내부적으로 Styler.apply는 DataFrame.apply를 사용하므로 결과는 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="7553eeb24c79214f77e3ff502b14115dfc75543f" translate="yes" xml:space="preserve">
          <source>Decode character string in the Series/Index using indicated encoding.</source>
          <target state="translated">표시된 인코딩을 사용하여 시리즈 / 인덱스에서 문자열을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="fb7685bbdabc05c795013058cb5d3ea6218af190" translate="yes" xml:space="preserve">
          <source>Decode character string in the Series/Index using indicated encoding. Equivalent to &lt;code&gt;str.decode()&lt;/code&gt; in python2 and &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; in python3.</source>
          <target state="translated">표시된 인코딩을 사용하여 시리즈 / 인덱스에서 문자열을 디코딩합니다. 동등 &lt;code&gt;str.decode()&lt;/code&gt; python2 및 예약 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt; python3있다.</target>
        </trans-unit>
        <trans-unit id="4b5201b121c642c7cf3ef4f05507b89ed7003825" translate="yes" xml:space="preserve">
          <source>Deep copy has own copy of data and index.</source>
          <target state="translated">딥 카피에는 자체 데이터 및 인덱스 카피가 있습니다.</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="fc6fe66ae27d0a93c464fc648526ddf2c9e11d9b" translate="yes" xml:space="preserve">
          <source>Default &amp;lsquo;None&amp;rsquo; results in equal probability weighting. If passed a Series, will align with target object on index. Index values in weights not found in sampled object will be ignored and index values in sampled object not in weights will be assigned weights of zero. If called on a DataFrame, will accept the name of a column when axis = 0. Unless weights are a Series, weights must be same length as axis being sampled. If weights do not sum to 1, they will be normalized to sum to 1. Missing values in the weights column will be treated as zero. Infinite values not allowed.</source>
          <target state="translated">기본 '없음'은 확률 가중치가 같습니다. Series를 전달하면 인덱스의 대상 객체와 정렬됩니다. 샘플링 된 개체에서 찾을 수없는 가중치의 인덱스 값은 무시되고 가중치가없는 샘플링 된 개체의 인덱스 값에는 가중치 0이 할당됩니다. DataFrame에서 호출 된 경우 axis = 0 일 때 열 이름을 수락합니다. 가중치가 Series가 아닌 한 가중치는 샘플링되는 축과 길이가 같아야합니다. 가중치의 합계가 1이 아닌 경우 합계는 1로 정규화됩니다. 가중치 열의 결 측값은 0으로 처리됩니다. 무한 값은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="acdd838609a927ab98eafc2c3b897470f2e68e03" translate="yes" xml:space="preserve">
          <source>Default NA value to use for this type.</source>
          <target state="translated">이 유형에 사용할 기본 NA 값입니다.</target>
        </trans-unit>
        <trans-unit id="cf7fd6a63b6f7084c94faeb8652e4bb0b70a996a" translate="yes" xml:space="preserve">
          <source>Default None results in equal probability weighting. If passed a list-like then values must have the same length as the underlying DataFrame or Series object and will be used as sampling probabilities after normalization within each group. Values must be non-negative with at least one positive element within each group.</source>
          <target state="translated">기본값 없음은 동일한 확률 가중치를 제공합니다. 목록과 같이 전달되면 값은 기본 DataFrame 또는 Series 객체와 길이가 같아야하며 각 그룹 내에서 정규화 후 샘플링 확률로 사용됩니다. 값은 음수가 아니어야하며 각 그룹 내에 하나 이상의 양수 요소가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6e315c7b9494680d5cf38077310231e0bbe0cfcc" translate="yes" xml:space="preserve">
          <source>Default None.</source>
          <target state="translated">기본값 없음.</target>
        </trans-unit>
        <trans-unit id="d0381842b7756dcdf40e31adf2951a8a2a1675b9" translate="yes" xml:space="preserve">
          <source>Default behavior is to infer the column names: if no names are passed the behavior is identical to &lt;code&gt;header=0&lt;/code&gt; and column names are inferred from the first non-blank line of the file, if column names are passed explicitly then the behavior is identical to &lt;code&gt;header=None&lt;/code&gt;.</source>
          <target state="translated">기본 동작은 열 이름을 추론하는 것입니다. 이름이 전달되지 않으면 동작은 &lt;code&gt;header=0&lt;/code&gt; 과 동일 하고 열 이름은 파일의 공백이 아닌 첫 번째 줄에서 유추됩니다. 열 이름이 명시 적으로 전달되면 동작은 다음과 같습니다. &lt;code&gt;header=None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3b609c665af54d6a554ba5b87d93c2d3d0c9660" translate="yes" xml:space="preserve">
          <source>Default behaviour checks if column-wise values all return True.</source>
          <target state="translated">기본 동작은 열 단위 값이 모두 True를 반환하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="51204f07d8ca6acb3b5c18425f3daf4e71d5751d" translate="yes" xml:space="preserve">
          <source>Default is latin-1. Unicode is not supported.</source>
          <target state="translated">기본값은 latin-1입니다. 유니 코드는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1772b19171a70defff04e295b364e8867416e5d7" translate="yes" xml:space="preserve">
          <source>Default is to swap the two innermost levels of the index.</source>
          <target state="translated">기본값은 인덱스의 가장 안쪽 수준 두 개를 교체하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5804b6af5b140eb429b45fb1cb1dffc26638b42d" translate="yes" xml:space="preserve">
          <source>Default is to use xlwt for xls, openpyxl for xlsx, odf for ods. See DataFrame.to_excel for typical usage.</source>
          <target state="translated">기본값은 xls에는 xlwt, xlsx에는 openpyxl, ods에는 odf를 사용하는 것입니다. 일반적인 사용법은 DataFrame.to_excel을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b06028ba62d62eab819b2f4e164d6b91b068570b" translate="yes" xml:space="preserve">
          <source>Default usage:</source>
          <target state="translated">기본 사용법 :</target>
        </trans-unit>
        <trans-unit id="7ae11d451074b7f37191bfb78e4be34f3a6d4c9e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt;: 1st sheet as a</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; : 1st sheet as a</target>
        </trans-unit>
        <trans-unit id="23009cb11a46866d019f3b829b15c35473373b1a" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt;: 1st sheet as a &lt;code&gt;DataFrame&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; : 첫 번째 시트를 &lt;code&gt;DataFrame&lt;/code&gt; 으로</target>
        </trans-unit>
        <trans-unit id="a8fd5f072b8be22f085830e55ac9286242f18834" translate="yes" xml:space="preserve">
          <source>Defaults to csv.QUOTE_MINIMAL. If you have set a</source>
          <target state="translated">기본값은 csv.QUOTE_MINIMAL입니다. 설정 한 경우</target>
        </trans-unit>
        <trans-unit id="984145cedd87d3438e33ebb68e80aa68dbebdc37" translate="yes" xml:space="preserve">
          <source>Defaults to csv.QUOTE_MINIMAL. If you have set a &lt;code&gt;float_format&lt;/code&gt; then floats are converted to strings and thus csv.QUOTE_NONNUMERIC will treat them as non-numeric.</source>
          <target state="translated">기본값은 csv.QUOTE_MINIMAL입니다. &lt;code&gt;float_format&lt;/code&gt; 을 설정하면 float는 문자열로 변환되므로 csv.QUOTE_NONNUMERIC은이를 숫자가 아닌 것으로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="b459d33915aa6a96bad7d61df4a8c9aa373a6186" translate="yes" xml:space="preserve">
          <source>Defaults to the detected encoding of the console. Specifies the encoding to be used for strings returned by to_string, these are generally strings meant to be displayed on the console.</source>
          <target state="translated">콘솔의 감지 된 인코딩이 기본값입니다. to_string이 반환하는 문자열에 사용할 인코딩을 지정합니다. 일반적으로 콘솔에 표시되는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="281dff388138e42529ea3eb81088871a246eb889" translate="yes" xml:space="preserve">
          <source>Defaults to the detected encoding of the console. Specifies the encoding to be used for strings returned by to_string, these are generally strings meant to be displayed on the console. [default: utf-8] [currently: utf-8]</source>
          <target state="translated">콘솔의 감지 된 인코딩이 기본값입니다. to_string이 반환하는 문자열에 사용할 인코딩을 지정합니다. 일반적으로 콘솔에 표시되는 문자열입니다. [기본값 : utf-8] [현재 : utf-8]</target>
        </trans-unit>
        <trans-unit id="18dd638b0b231cd50b563eeed6291b4526811e15" translate="yes" xml:space="preserve">
          <source>Define &lt;code&gt;_internal_names&lt;/code&gt; and &lt;code&gt;_internal_names_set&lt;/code&gt; for temporary properties which WILL NOT be passed to manipulation results.</source>
          <target state="translated">조작 결과에 전달되지 않는 임시 특성에 대해 &lt;code&gt;_internal_names&lt;/code&gt; 및 &lt;code&gt;_internal_names_set&lt;/code&gt; 을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="e47cce0982b881670cab38827a6bfcd52d3eac5d" translate="yes" xml:space="preserve">
          <source>Define &lt;code&gt;_metadata&lt;/code&gt; for normal properties which will be passed to manipulation results.</source>
          <target state="translated">조작 결과에 전달 될 일반 특성에 대해 &lt;code&gt;_metadata&lt;/code&gt; 를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="9bf5dd3a6df4858d136f9450de0b969d4c898af1" translate="yes" xml:space="preserve">
          <source>Define a custom function that needs additional positional arguments and pass these additional arguments using the &lt;code&gt;args&lt;/code&gt; keyword.</source>
          <target state="translated">추가 위치 인수가 필요한 사용자 정의 함수를 정의하고 &lt;code&gt;args&lt;/code&gt; 키워드를 사용하여 이러한 추가 인수를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ce9049822e516697c535f331996f5153d1d6b7d" translate="yes" xml:space="preserve">
          <source>Define a custom function that takes keyword arguments and pass these arguments to &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">키워드 인수를 사용하고 &lt;code&gt;apply&lt;/code&gt; 인수를 전달하는 사용자 정의 함수를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="41be194eaa1ba6584b4386068915bc986b7a61da" translate="yes" xml:space="preserve">
          <source>Define default roll function to be called in apply method.</source>
          <target state="translated">apply 메소드에서 호출 할 기본 롤 기능을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="b5d9bcb7aa6740b2b39453aa8b0a8546072aa477" translate="yes" xml:space="preserve">
          <source>Define each of the operators on your &lt;code&gt;ExtensionArray&lt;/code&gt; subclass.</source>
          <target state="translated">&lt;code&gt;ExtensionArray&lt;/code&gt; 서브 클래스 에서 각 연산자를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="23c490b81ba8c36e410b0c00a7c4b11fe4c04a56" translate="yes" xml:space="preserve">
          <source>Define in which columns to look for missing values.</source>
          <target state="translated">결 측값을 찾을 열을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="5269ea82acc06098716d4a6585d5d4472cb2d0b2" translate="yes" xml:space="preserve">
          <source>Define original properties</source>
          <target state="translated">원래 속성 정의</target>
        </trans-unit>
        <trans-unit id="1f88935922d24d354e26abc5906a01b82d65497d" translate="yes" xml:space="preserve">
          <source>Define the reference date. The numeric values would be parsed as number of units (defined by</source>
          <target state="translated">참조 날짜를 정의하십시오. 숫자 값은 단위 수로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="97df4d92ee5f3a20806fe053873877166d8182f2" translate="yes" xml:space="preserve">
          <source>Define the reference date. The numeric values would be parsed as number of units (defined by &lt;code&gt;unit&lt;/code&gt;) since this reference date.</source>
          <target state="translated">참조 날짜를 정의하십시오. 이 참조 날짜 이후 숫자 값은 단위 수 ( &lt;code&gt;unit&lt;/code&gt; 로 정의 됨 ) 로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="abc34926620a595520bf2716fc2b68712d08f6ac" translate="yes" xml:space="preserve">
          <source>Defined levels</source>
          <target state="translated">정의 된 수준</target>
        </trans-unit>
        <trans-unit id="c020878684406748e3a2bcdb186152fb8ba2a4e2" translate="yes" xml:space="preserve">
          <source>Degrees of freedom.</source>
          <target state="translated">자유도.</target>
        </trans-unit>
        <trans-unit id="4888aa53588208d67504cf88b6105f178399a04e" translate="yes" xml:space="preserve">
          <source>Delete any rows and column from NumPy array (ndarray).</source>
          <target state="translated">NumPy 배열 (ndarray)에서 모든 행과 열을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="38d3c3ecbcaeda3cbe46723f878858a96145df4b" translate="yes" xml:space="preserve">
          <source>Delete columns to be used as the new index.</source>
          <target state="translated">새 인덱스로 사용할 열을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="9cd901c2994b33bb07c61d22e0d18bb50e8171ec" translate="yes" xml:space="preserve">
          <source>Delete from a table</source>
          <target state="translated">표에서 삭제</target>
        </trans-unit>
        <trans-unit id="5ee9f29a70b60aef3ea71dc44268ebb8a3f6a236" translate="yes" xml:space="preserve">
          <source>Delete your merged branch (optional)</source>
          <target state="translated">병합 된 지점 삭제 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="619c4c425d78d74fcf97b244a6522e35db3f2fa8" translate="yes" xml:space="preserve">
          <source>Deleting file with data:</source>
          <target state="translated">데이터가 포함 된 파일 삭제 :</target>
        </trans-unit>
        <trans-unit id="633edd2b73c3f0228195d3d278ba2d3ad82e0115" translate="yes" xml:space="preserve">
          <source>Deletion of the object specified by the key:</source>
          <target state="translated">키로 지정된 객체 삭제 :</target>
        </trans-unit>
        <trans-unit id="3defb0598dfa2546769f9225de488dde7568bc8b" translate="yes" xml:space="preserve">
          <source>Delimiter to use between list entries.</source>
          <target state="translated">목록 항목 사이에 사용할 구분 기호입니다.</target>
        </trans-unit>
        <trans-unit id="29a357591781595ca2c1d3b5130697caef8bf1d4" translate="yes" xml:space="preserve">
          <source>Delimiter to use. If sep is &lt;code&gt;None&lt;/code&gt;, the C engine cannot automatically detect the separator, but the Python parsing engine can, meaning the latter will be used and automatically detect the separator by Python&amp;rsquo;s builtin sniffer tool, &lt;a href=&quot;https://docs.python.org/3/library/csv.html#csv.Sniffer&quot;&gt;&lt;code&gt;csv.Sniffer&lt;/code&gt;&lt;/a&gt;. In addition, separators longer than 1 character and different from &lt;code&gt;'\s+'&lt;/code&gt; will be interpreted as regular expressions and will also force the use of the Python parsing engine. Note that regex delimiters are prone to ignoring quoted data. Regex example: &lt;code&gt;'\\r\\t'&lt;/code&gt;.</source>
          <target state="translated">사용할 구분자입니다. sep가 &lt;code&gt;None&lt;/code&gt; 이면 C 엔진은 자동으로 구분 기호를 감지 할 수 없지만 Python 구문 분석 엔진은 구분 기호가 사용되며 Python의 내장 스니퍼 도구 인 &lt;a href=&quot;https://docs.python.org/3/library/csv.html#csv.Sniffer&quot;&gt; &lt;code&gt;csv.Sniffer&lt;/code&gt; 에&lt;/a&gt; 의해 구분 기호를 자동으로 감지합니다 . 또한 1 자보다 길고 &lt;code&gt;'\s+'&lt;/code&gt; 와 다른 구분 기호 는 정규식으로 해석되며 Python 구문 분석 엔진을 사용해야합니다. 정규식 구분 기호는 인용 된 데이터를 무시하기 쉽습니다. 정규식 예 : &lt;code&gt;'\\r\\t'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="334213c5c1307ebc69b94287a58e8b064c8b92bf" translate="yes" xml:space="preserve">
          <source>Delimiter to use. If sep is None, the C engine cannot automatically detect the separator, but the Python parsing engine can, meaning the latter will be used and automatically detect the separator by Python&amp;rsquo;s builtin sniffer tool, &lt;code&gt;csv.Sniffer&lt;/code&gt;. In addition, separators longer than 1 character and different from &lt;code&gt;'\s+'&lt;/code&gt; will be interpreted as regular expressions and will also force the use of the Python parsing engine. Note that regex delimiters are prone to ignoring quoted data. Regex example: &lt;code&gt;'\r\t'&lt;/code&gt;.</source>
          <target state="translated">사용할 구분자입니다. sep가 None이면 C 엔진은 자동으로 구분 기호를 감지 할 수 없지만 Python 구문 분석 엔진은 구분 기호가 사용되며 Python의 내장 스니퍼 도구 인 &lt;code&gt;csv.Sniffer&lt;/code&gt; 로 구분 기호를 자동 감지합니다 . 또한 1 자보다 길고 &lt;code&gt;'\s+'&lt;/code&gt; 와 다른 구분 기호 는 정규식으로 해석되며 Python 구문 분석 엔진을 사용해야합니다. 정규식 구분 기호는 인용 된 데이터를 무시하기 쉽습니다. 정규식 예 : &lt;code&gt;'\r\t'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c07d2485017871a86e2b6891af9169b2205dae9" translate="yes" xml:space="preserve">
          <source>Delta Degrees of Freedom. The divisor used in calculations is &lt;code&gt;N - ddof&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the number of elements.</source>
          <target state="translated">델타 자유도. 계산에 사용 된 제수는 &lt;code&gt;N - ddof&lt;/code&gt; 이며 여기서 &lt;code&gt;N&lt;/code&gt; 은 요소 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d9541d46ce74de554740c22fd3c98441b136c83a" translate="yes" xml:space="preserve">
          <source>Delta Degrees of Freedom. The divisor used in calculations is N - ddof, where N represents the number of elements.</source>
          <target state="translated">델타 자유도. 계산에 사용 된 제수는 N-ddof이며, 여기서 N은 요소 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5134be3a589ed2ac375632fe71a5f5551d9c00f7" translate="yes" xml:space="preserve">
          <source>Delta degrees of freedom. The divisor used in calculations is &lt;code&gt;N - ddof&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the number of elements.</source>
          <target state="translated">델타 자유도. 계산에 사용되는 제수는 &lt;code&gt;N - ddof&lt;/code&gt; . 여기서 &lt;code&gt;N&lt;/code&gt; 은 요소의 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9c10cf8fb59528be413dbe4a37baea79ee6bf447" translate="yes" xml:space="preserve">
          <source>Demonstrating the preference of the passed in dataframe.</source>
          <target state="translated">전달 된 데이터 프레임의 선호도를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c5bcc893110c1023b4ba63254dfb1ec6efffde5d" translate="yes" xml:space="preserve">
          <source>Denote the unit of the input, if input is an integer.</source>
          <target state="translated">입력이 정수인 경우 입력 단위를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="76f3d12a3630fde2fbd3505ef2ece854e63e19bd" translate="yes" xml:space="preserve">
          <source>Denote the unit of the input, if input is an integer. Default &amp;lsquo;ns&amp;rsquo;. Possible values: {&amp;lsquo;Y&amp;rsquo;, &amp;lsquo;M&amp;rsquo;, &amp;lsquo;W&amp;rsquo;, &amp;lsquo;D&amp;rsquo;, &amp;lsquo;days&amp;rsquo;, &amp;lsquo;day&amp;rsquo;, &amp;lsquo;hours&amp;rsquo;, hour&amp;rsquo;, &amp;lsquo;hr&amp;rsquo;, &amp;lsquo;h&amp;rsquo;, &amp;lsquo;m&amp;rsquo;, &amp;lsquo;minute&amp;rsquo;, &amp;lsquo;min&amp;rsquo;, &amp;lsquo;minutes&amp;rsquo;, &amp;lsquo;T&amp;rsquo;, &amp;lsquo;S&amp;rsquo;, &amp;lsquo;seconds&amp;rsquo;, &amp;lsquo;sec&amp;rsquo;, &amp;lsquo;second&amp;rsquo;, &amp;lsquo;ms&amp;rsquo;, &amp;lsquo;milliseconds&amp;rsquo;, &amp;lsquo;millisecond&amp;rsquo;, &amp;lsquo;milli&amp;rsquo;, &amp;lsquo;millis&amp;rsquo;, &amp;lsquo;L&amp;rsquo;, &amp;lsquo;us&amp;rsquo;, &amp;lsquo;microseconds&amp;rsquo;, &amp;lsquo;microsecond&amp;rsquo;, &amp;lsquo;micro&amp;rsquo;, &amp;lsquo;micros&amp;rsquo;, &amp;lsquo;U&amp;rsquo;, &amp;lsquo;ns&amp;rsquo;, &amp;lsquo;nanoseconds&amp;rsquo;, &amp;lsquo;nano&amp;rsquo;, &amp;lsquo;nanos&amp;rsquo;, &amp;lsquo;nanosecond&amp;rsquo;, &amp;lsquo;N&amp;rsquo;}</source>
          <target state="translated">입력이 정수인 경우 입력 단위를 나타냅니다. 기본 'ns'. 가능한 값 : { 'Y', 'M', 'W', 'D', 'days', 'day', 'hours', hour ','hr ','h ','m ','minute ' , '분', '분', 'T', 'S', '초', '초', '초', 'ms', '밀리 초', '밀리 초', '밀리 초', '밀리 초', ' L ','us ','microseconds ','microsecond ','micro ','micros ','U ','ns ','nanoseconds ','nano ','nanos ','nanosecond ','N ' }</target>
        </trans-unit>
        <trans-unit id="7037fc1624450a962df4244f0dc46e4a73679a88" translate="yes" xml:space="preserve">
          <source>Denotes the unit of the arg for numeric</source>
          <target state="translated">숫자에 대한 인수의 단위를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bcd93b5533bbb4955fbfa79b2c758967653ebbac" translate="yes" xml:space="preserve">
          <source>Denotes the unit of the arg. Possible values: (&amp;lsquo;Y&amp;rsquo;, &amp;lsquo;M&amp;rsquo;, &amp;lsquo;W&amp;rsquo;, &amp;lsquo;D&amp;rsquo;, &amp;lsquo;days&amp;rsquo;, &amp;lsquo;day&amp;rsquo;, &amp;lsquo;hours&amp;rsquo;, hour&amp;rsquo;, &amp;lsquo;hr&amp;rsquo;, &amp;lsquo;h&amp;rsquo;, &amp;lsquo;m&amp;rsquo;, &amp;lsquo;minute&amp;rsquo;, &amp;lsquo;min&amp;rsquo;, &amp;lsquo;minutes&amp;rsquo;, &amp;lsquo;T&amp;rsquo;, &amp;lsquo;S&amp;rsquo;, &amp;lsquo;seconds&amp;rsquo;, &amp;lsquo;sec&amp;rsquo;, &amp;lsquo;second&amp;rsquo;, &amp;lsquo;ms&amp;rsquo;, &amp;lsquo;milliseconds&amp;rsquo;, &amp;lsquo;millisecond&amp;rsquo;, &amp;lsquo;milli&amp;rsquo;, &amp;lsquo;millis&amp;rsquo;, &amp;lsquo;L&amp;rsquo;, &amp;lsquo;us&amp;rsquo;, &amp;lsquo;microseconds&amp;rsquo;, &amp;lsquo;microsecond&amp;rsquo;, &amp;lsquo;micro&amp;rsquo;, &amp;lsquo;micros&amp;rsquo;, &amp;lsquo;U&amp;rsquo;, &amp;lsquo;ns&amp;rsquo;, &amp;lsquo;nanoseconds&amp;rsquo;, &amp;lsquo;nano&amp;rsquo;, &amp;lsquo;nanos&amp;rsquo;, &amp;lsquo;nanosecond&amp;rsquo;, &amp;lsquo;N&amp;rsquo;).</source>
          <target state="translated">인수의 단위를 나타냅니다. 가능한 값 : ( 'Y', 'M', 'W', 'D', 'days', 'day', 'hours', hour ','hr ','h ','m ','minute ' , '분', '분', 'T', 'S', '초', '초', '초', 'ms', '밀리 초', '밀리 초', '밀리 초', '밀리 초', ' L ','us ','microseconds ','microsecond ','micro ','micros ','U ','ns ','nanoseconds ','nano ','nanos ','nanosecond ','N ' ).</target>
        </trans-unit>
        <trans-unit id="3268dea879d3c12934aff719dafbe2a33c353220" translate="yes" xml:space="preserve">
          <source>Dense %(klass)s.</source>
          <target state="translated">조밀 한 % (klass).</target>
        </trans-unit>
        <trans-unit id="9c2c2e81068846e8ecefecb777ef94f384c2c18a" translate="yes" xml:space="preserve">
          <source>Density plot</source>
          <target state="translated">밀도 플롯</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="ce311abe7bbcb35898a8ac0bf7c2dca01106d8f6" translate="yes" xml:space="preserve">
          <source>Dependency</source>
          <target state="translated">Dependency</target>
        </trans-unit>
        <trans-unit id="e23be8ae331345a7a3a683e9493516823b0d99b9" translate="yes" xml:space="preserve">
          <source>Depending on df construction, &lt;code&gt;ignore_index&lt;/code&gt; may be needed</source>
          <target state="translated">df 구성에 따라 &lt;code&gt;ignore_index&lt;/code&gt; 가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d77939eea400ba3b066874c7efa86f9c61d571b" translate="yes" xml:space="preserve">
          <source>Depending on system architecture, the return value of</source>
          <target state="translated">시스템 아키텍처에 따라 반환 값</target>
        </trans-unit>
        <trans-unit id="cbd3327b95edcd6d65e097b28547b322a7019db8" translate="yes" xml:space="preserve">
          <source>Depending on system architecture, the return value of &lt;code&gt;is_int64_dtype( int)&lt;/code&gt; will be True if the OS uses 64-bit integers and False if the OS uses 32-bit integers.</source>
          <target state="translated">시스템 아키텍처에 따라 &lt;code&gt;is_int64_dtype( int)&lt;/code&gt; 의 반환 값은 OS가 64 비트 정수를 사용하면 True이고 OS가 32 비트 정수를 사용하면 False입니다.</target>
        </trans-unit>
        <trans-unit id="d14f13487f791240c4fb7fb356d50f4a2d8f3be0" translate="yes" xml:space="preserve">
          <source>Depends on the calling object and returns groupby object that contains information about the groups.</source>
          <target state="translated">호출 객체에 따라 다르며 그룹에 대한 정보가 포함 된 그룹 별 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dd2e3910ab7980079912d39160b5730f453cf10c" translate="yes" xml:space="preserve">
          <source>Deprecated in pandas-gbq version 0.4.0. Use the &lt;a href=&quot;https://pandas-gbq.readthedocs.io/en/latest/intro.html#logging&quot;&gt;logging module to adjust verbosity instead&lt;/a&gt;.</source>
          <target state="translated">pandas-gbq 버전 0.4.0에서 더 이상 사용되지 않습니다. &lt;a href=&quot;https://pandas-gbq.readthedocs.io/en/latest/intro.html#logging&quot;&gt;대신 로깅 모듈을&lt;/a&gt; 사용하여 자세한 정보를 조정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3629d11c8cb3a6eed1b2dbd3d0740bb8a73c71aa" translate="yes" xml:space="preserve">
          <source>Deprecated in pandas-gbq version 0.8.0. Use the &lt;code&gt;credentials&lt;/code&gt; parameter and &lt;code&gt;google.oauth2.service_account.Credentials.from_service_account_info()&lt;/code&gt; or &lt;code&gt;google.oauth2.service_account.Credentials.from_service_account_file()&lt;/code&gt; instead.</source>
          <target state="translated">pandas-gbq 버전 0.8.0에서 더 이상 사용되지 않습니다. 대신 &lt;code&gt;credentials&lt;/code&gt; 매개 변수와 &lt;code&gt;google.oauth2.service_account.Credentials.from_service_account_info()&lt;/code&gt; 또는 &lt;code&gt;google.oauth2.service_account.Credentials.from_service_account_file()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e9e7f0fbf3cac299ca80b86937d3d24eb70bd4a1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.18.0.</source>
          <target state="translated">버전 0.18.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="738817c7402e52840e3e59fc424283da920b8428" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.18.0: The new syntax is &lt;code&gt;.resample(...).&amp;lt;func&amp;gt;()&lt;/code&gt;, e.g. &lt;code&gt;.resample(...).pad()&lt;/code&gt;</source>
          <target state="translated">버전 0.18.0부터 사용되지 않음 : 새 구문은 &lt;code&gt;.resample(...).&amp;lt;func&amp;gt;()&lt;/code&gt; (예 : &lt;code&gt;.resample(...).pad()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff9f339365503a0a4c18f99ced916c2821723b48" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.18.0: The new syntax is &lt;code&gt;.resample(...).mean()&lt;/code&gt;, or &lt;code&gt;.resample(...).apply(&amp;lt;func&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">버전 0.18.0부터 사용되지 않음 : 새 구문은 &lt;code&gt;.resample(...).mean()&lt;/code&gt; 또는 &lt;code&gt;.resample(...).apply(&amp;lt;func&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13ceeacf55ab16f6ab86e00f01865ef3071d20e3" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.21.0.</source>
          <target state="translated">버전 0.21.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e354b29d2f596a24cc569bfeae8ebbb210e35b8c" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.21.0: Please use .at[] or .iat[] accessors.</source>
          <target state="translated">버전 0.21.0부터 사용되지 않습니다. .at [] 또는 .iat [] 접근자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1c93a7897eed170854472bfccc9055fce8418f59" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.21.0: Use .at[] or .iat[] accessors instead.</source>
          <target state="translated">버전 0.21.0부터 사용되지 않습니다. 대신 .at [] 또는 .iat [] 접근자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6d0e2f146a5f77ac153976b026e705e401bbf058" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aeaf06a66b922ec5aa760eb9a328b97c0276ef3a" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: &lt;code&gt;from_items&lt;/code&gt; is deprecated and will be removed in a future version. Use &lt;a href=&quot;pandas.dataframe.from_dict#pandas.DataFrame.from_dict&quot;&gt;&lt;code&gt;DataFrame.from_dict(dict(items))&lt;/code&gt;&lt;/a&gt; instead. &lt;a href=&quot;pandas.dataframe.from_dict#pandas.DataFrame.from_dict&quot;&gt;&lt;code&gt;DataFrame.from_dict(OrderedDict(items))&lt;/code&gt;&lt;/a&gt; may be used to preserve the key order.</source>
          <target state="translated">버전 0.23.0부터 더 이상 사용되지 않음 : &lt;code&gt;from_items&lt;/code&gt; 는 더 이상 사용되지 않으며 향후 버전에서 제거 될 예정입니다. 대신 &lt;a href=&quot;pandas.dataframe.from_dict#pandas.DataFrame.from_dict&quot;&gt; &lt;code&gt;DataFrame.from_dict(dict(items))&lt;/code&gt; &lt;/a&gt; 사용하십시오. &lt;a href=&quot;pandas.dataframe.from_dict#pandas.DataFrame.from_dict&quot;&gt; &lt;code&gt;DataFrame.from_dict(OrderedDict(items))&lt;/code&gt; &lt;/a&gt; 는 키 순서를 유지하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a17e8f3b1d82702ed9bdfbbcb44d41f12aacceec" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Pass tuple or list to drop on multiple axes. Only a single axis is allowed.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 : 튜플 또는 목록을 전달하여 여러 축에 놓으십시오. 단일 축만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="8930a8f9cc2fcd532cee633dd9c1299fe4e59a87" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: This argument will be removed in a future version, replaced by &lt;code&gt;result_type='reduce'&lt;/code&gt;.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 :이 인수는 이후 버전에서 제거되며 &lt;code&gt;result_type='reduce'&lt;/code&gt; 로 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="0bebcf26d7d6529913c812aabb58f78867505074" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: This argument will be removed in a future version, replaced by result_type=&amp;rsquo;broadcast&amp;rsquo;.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 :이 인수는 이후 버전에서 제거되며 result_type = 'broadcast'로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="0874837ef3732213c686c8150976fe9e1d1a04c5" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: This parameter has no effect and is deprecated.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 :이 매개 변수는 적용되지 않으며 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2a3fae799637772b8a479c797adc9fa7c03bd6b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Use &lt;a href=&quot;pandas.dataframe.values#pandas.DataFrame.values&quot;&gt;&lt;code&gt;DataFrame.values()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않습니다 . 대신 &lt;a href=&quot;pandas.dataframe.values#pandas.DataFrame.values&quot;&gt; &lt;code&gt;DataFrame.values()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ca72c69cb5f8ed982ed66889d400b10fd708637" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Use &lt;a href=&quot;pandas.series.dropna#pandas.Series.dropna&quot;&gt;&lt;code&gt;Series.dropna()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않습니다 . 대신 &lt;a href=&quot;pandas.series.dropna#pandas.Series.dropna&quot;&gt; &lt;code&gt;Series.dropna()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a64aa3717f2977274ec9052e94f6859470748cea" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Use &lt;code&gt;Timestamp.day_name()&lt;/code&gt; instead</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 : 대신 &lt;code&gt;Timestamp.day_name()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0cffdf280b31bc965daa9b1f9099f802cfd40102" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Use &lt;code&gt;astype(object)&lt;/code&gt; instead.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않습니다 . 대신 &lt;code&gt;astype(object)&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4516168b9cac245b036409f485cbf25c2d9f19b5" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Use &lt;code&gt;skipfooter&lt;/code&gt; instead.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 : 대신 &lt;code&gt;skipfooter&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="214f1248b35176c68df59a957ec4cfda046cce04" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Use idx[idx.duplicated()].unique() instead</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 : 대신 idx [idx.duplicated ()]. ​​unique ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="36b265a3e48f3588f8583de27cc8146953172126" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.23.0: Use pd.Series(..) constructor instead.</source>
          <target state="translated">버전 0.23.0부터 사용되지 않음 : 대신 pd.Series (..) 생성자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b66a47ec149dbf6e38214dc41d181a00961a0c2c" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0.</source>
          <target state="translated">버전 0.24.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2fb16b3789e25fe10cf972689e207abe9e6ff8a8" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Pass in a list of int instead from 0 to &lt;code&gt;usecols&lt;/code&gt; inclusive.</source>
          <target state="translated">버전 0.24.0부터 사용되지 않음 : int 목록을 0에서 &lt;code&gt;usecols&lt;/code&gt; ( 포함)로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="9b7f575a7823b281b3ebe158d4e131726da889c4" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Please use .to_numpy().nonzero() as a replacement.</source>
          <target state="translated">버전 0.24.0부터 사용되지 않음 : .to_numpy (). nonzero ()를 대체로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="66b92115e6fb269305cd6bcc890070837b2bea1e" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Use &lt;a href=&quot;pandas.api.extensions.extensionarray._formatter#pandas.api.extensions.ExtensionArray._formatter&quot;&gt;&lt;code&gt;ExtensionArray._formatter()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.24.0부터 사용되지 않습니다 . 대신 &lt;a href=&quot;pandas.api.extensions.extensionarray._formatter#pandas.api.extensions.ExtensionArray._formatter&quot;&gt; &lt;code&gt;ExtensionArray._formatter()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="77dd9ef643b900ffcc1ea704f5ba448bc692d6c6" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Use &lt;code&gt;codes&lt;/code&gt; instead</source>
          <target state="translated">버전 0.24.0부터 사용되지 않음 : 대신 &lt;code&gt;codes&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="a9391d795e79172f36abed1e409744d9d6b6ddcb" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Use &lt;code&gt;sep&lt;/code&gt; instead</source>
          <target state="translated">버전 0.24.0부터 사용되지 않음 : 대신 &lt;code&gt;sep&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="935dfb5cddbcb1e21fa4ae23d9e129d31c643256" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Use clip(lower=threshold) instead.</source>
          <target state="translated">버전 0.24.0부터 사용되지 않음 : 대신 clip (lower = threshold)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="63be3a5defd58c818b13b77f9c2c01e9a5ba5485" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Use clip(upper=threshold) instead.</source>
          <target state="translated">버전 0.24.0부터 사용되지 않음 : 대신 clip (upper = threshold)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f2e5bc4f184a9fc2e44ba6ee6412fcd43187e4c1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.0: Use numpy.ptp instead</source>
          <target state="translated">버전 0.24.0부터 사용되지 않음 : 대신 numpy.ptp를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="213448d9efe7145332d478e91bd250176695962e" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.24.: 0</source>
          <target state="translated">버전 0.24부터 사용되지 않습니다. : 0</target>
        </trans-unit>
        <trans-unit id="1bf5754e361d6b1d1aefae624b438edb3a46c343" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a50084206097c4613c96695a985961645cc470e2" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;a href=&quot;pandas.dataframe.dtypes#pandas.DataFrame.dtypes&quot;&gt;&lt;code&gt;dtypes()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않음 : 대신 &lt;a href=&quot;pandas.dataframe.dtypes#pandas.DataFrame.dtypes&quot;&gt; &lt;code&gt;dtypes()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="48c0ee2f4d5e76afc025920c64131e3072a6b1d5" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;a href=&quot;pandas.index.to_numpy#pandas.Index.to_numpy&quot;&gt;&lt;code&gt;Index.to_numpy()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.index.array#pandas.Index.array&quot;&gt;&lt;code&gt;Index.array&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않습니다 . 대신 &lt;a href=&quot;pandas.index.to_numpy#pandas.Index.to_numpy&quot;&gt; &lt;code&gt;Index.to_numpy()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pandas.index.array#pandas.Index.array&quot;&gt; &lt;code&gt;Index.array&lt;/code&gt; 를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2386d70e106eb88343e431f44644e9fda4fb223f" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;a href=&quot;pandas.series.dtype#pandas.Series.dtype&quot;&gt;&lt;code&gt;dtype()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않음 : 대신 &lt;a href=&quot;pandas.series.dtype#pandas.Series.dtype&quot;&gt; &lt;code&gt;dtype()&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d21620fafc8ac6f5d753f75b9a8c6ca9b23760bd" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;a href=&quot;pandas.series.dtypes#pandas.Series.dtypes&quot;&gt;&lt;code&gt;dtypes()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않음 : 대신 &lt;a href=&quot;pandas.series.dtypes#pandas.Series.dtypes&quot;&gt; &lt;code&gt;dtypes()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3269dea074d5713baebf8b02dce18bd2331b596c" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt;&lt;code&gt;Series.array&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않습니다 . 대신 &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt; &lt;code&gt;Series.array&lt;/code&gt; 를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="415df08b0228e04648de2f9661bdfcc0e558e6f8" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.timedelta.to_timedelta64#pandas.Timedelta.to_timedelta64&quot;&gt;&lt;code&gt;Timedelta.to_timedelta64()&lt;/code&gt;&lt;/a&gt; instead to get an ndarray of values or numpy.timedelta64, respectively.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않음 : &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pandas.timedelta.to_timedelta64#pandas.Timedelta.to_timedelta64&quot;&gt; &lt;code&gt;Timedelta.to_timedelta64()&lt;/code&gt; &lt;/a&gt; 대신 사용하여 값의 ndarray 또는 numpy.timedelta64를 각각 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="c7bcff7c598ceddf510d16720ee47c490fa970c1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.timestamp.to_datetime64#pandas.Timestamp.to_datetime64&quot;&gt;&lt;code&gt;Timestamp.to_datetime64()&lt;/code&gt;&lt;/a&gt; instead to get an ndarray of values or numpy.datetime64, respectively.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않음 : &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pandas.timestamp.to_datetime64#pandas.Timestamp.to_datetime64&quot;&gt; &lt;code&gt;Timestamp.to_datetime64()&lt;/code&gt; &lt;/a&gt; 대신 사용하여 값의 ndarray 또는 numpy.datetime64를 각각 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="0793f59e302c3832105d10e872d711d22e506bc7" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;code&gt;key in index&lt;/code&gt; instead of &lt;code&gt;index.contains(key)&lt;/code&gt;.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않음 : &lt;code&gt;index.contains(key)&lt;/code&gt; 대신 &lt;code&gt;key in index&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="adb8f3298c72b850d89baf075ffd5073f161f23f" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.25.0: Use &lt;code&gt;np.asarray(..)&lt;/code&gt; or &lt;a href=&quot;pandas.dataframe.values#pandas.DataFrame.values&quot;&gt;&lt;code&gt;DataFrame.values()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">버전 0.25.0부터 사용되지 않음 : 대신 &lt;code&gt;np.asarray(..)&lt;/code&gt; 또는 &lt;a href=&quot;pandas.dataframe.values#pandas.DataFrame.values&quot;&gt; &lt;code&gt;DataFrame.values()&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8651cbd3db5980f9114a83b490a1e2d2b5247027" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.0.</source>
          <target state="translated">버전 1.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2b590bd67a0045dfda74bff6a608caa187ac7f9" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.0.0.</source>
          <target state="translated">버전 1.0.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9a2ad8f66b1171014cb0e73c9f9aae79c9c38e64" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.0.0: Use &lt;code&gt;is_extension_array_dtype&lt;/code&gt; instead.</source>
          <target state="translated">버전 1.0.0부터 사용되지 않음 : 대신 &lt;code&gt;is_extension_array_dtype&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff8fa649a6f8a92da6617cda83024e997aabec3d" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.1.0.</source>
          <target state="translated">버전 1.1.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7da8d8ab6c80ec0644f753865c08bdbb1a2cc27a" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.1.0: The new arguments that you should use are &amp;lsquo;offset&amp;rsquo; or &amp;lsquo;origin&amp;rsquo;.</source>
          <target state="translated">버전 1.1.0부터 폐지 : 사용해야하는 새 인수는 'offset'또는 'origin'입니다.</target>
        </trans-unit>
        <trans-unit id="d57b3c3834b67e85b3de844ad6fdb88221749b0b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.1.0: Use</source>
          <target state="translated">버전 1.1.0부터 폐지 : 사용</target>
        </trans-unit>
        <trans-unit id="38a25af4eacaa5d5a27c07ed8144bb6ede6d49ad" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.1.0: You should add the loffset to the</source>
          <target state="translated">버전 1.1.0부터 폐지 : loffset을</target>
        </trans-unit>
        <trans-unit id="e845eb1d622e1196492d47f59df3da664a0ea284" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.1.0: loffset is only working for &lt;code&gt;.resample(...)&lt;/code&gt; and not for Grouper (&lt;a href=&quot;https://github.com/pandas-dev/pandas/issues/28302&quot;&gt;GH28302&lt;/a&gt;). However, loffset is also deprecated for &lt;code&gt;.resample(...)&lt;/code&gt; See: &lt;a href=&quot;pandas.dataframe.resample#pandas.DataFrame.resample&quot;&gt;&lt;code&gt;DataFrame.resample&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">버전 1.1.0부터 폐지 : loffset은 &lt;code&gt;.resample(...)&lt;/code&gt; 에서만 작동 하고 Grouper ( &lt;a href=&quot;https://github.com/pandas-dev/pandas/issues/28302&quot;&gt;GH28302&lt;/a&gt; ) 에서는 작동 하지 않습니다 . 그러나 loffset은 &lt;code&gt;.resample(...)&lt;/code&gt; 에서도 사용되지 않습니다 . 참조 : &lt;a href=&quot;pandas.dataframe.resample#pandas.DataFrame.resample&quot;&gt; &lt;code&gt;DataFrame.resample&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe9176f968a6d4b9c575f7e43e33dcf5be74f09f" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0.</source>
          <target state="translated">버전 1.2.0부터 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b04b1d157566ffc41c8aff164ddb90827fbe94c3" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0: As &lt;a href=&quot;https://pypi.org/project/xlwt/&quot;&gt;xlwt&lt;/a&gt; package is no longer maintained, the &lt;code&gt;xlwt&lt;/code&gt; engine will be removed in a future version of pandas. Since this is the only engine in pandas that supports writing to &lt;code&gt;.xls&lt;/code&gt; files, this option will also be removed.</source>
          <target state="translated">버전 1.2.0부터 사용되지 않음 : &lt;a href=&quot;https://pypi.org/project/xlwt/&quot;&gt;xlwt&lt;/a&gt; 패키지가 더 이상 유지되지 않으므로 &lt;code&gt;xlwt&lt;/code&gt; 엔진은 향후 버전의 pandas에서 제거됩니다. &lt;code&gt;.xls&lt;/code&gt; 파일 쓰기를 지원하는 pandas의 유일한 엔진이므로이 옵션도 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="07749c27e2dcda4edb8a2375085e421f04ef11e8" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0: As the &lt;a href=&quot;https://pypi.org/project/xlwt/&quot;&gt;xlwt&lt;/a&gt; package is no longer maintained, the &lt;code&gt;xlwt&lt;/code&gt; engine will be removed from a future version of pandas. This is the only engine in pandas that supports writing to &lt;code&gt;.xls&lt;/code&gt; files.</source>
          <target state="translated">버전 1.2.0부터 사용되지 않음 : &lt;a href=&quot;https://pypi.org/project/xlwt/&quot;&gt;xlwt&lt;/a&gt; 패키지가 더 이상 유지되지 않으므로 &lt;code&gt;xlwt&lt;/code&gt; 엔진은 향후 버전의 pandas에서 제거됩니다. 이것은 &lt;code&gt;.xls&lt;/code&gt; 파일에 쓰기를 지원하는 Pandas의 유일한 엔진입니다 .</target>
        </trans-unit>
        <trans-unit id="de4b3f79d7311e44a24ae149cea18b883ec2c1b8" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0: As the &lt;a href=&quot;https://pypi.org/project/xlwt/&quot;&gt;xlwt&lt;/a&gt; package is no longer maintained, the &lt;code&gt;xlwt&lt;/code&gt; engine will be removed in a future version of pandas.</source>
          <target state="translated">버전 1.2.0부터 사용되지 않음 : &lt;a href=&quot;https://pypi.org/project/xlwt/&quot;&gt;xlwt&lt;/a&gt; 패키지가 더 이상 유지되지 않으므로 &lt;code&gt;xlwt&lt;/code&gt; 엔진은 향후 버전의 pandas에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="41c665d7b03a02afbead630bc9189a41b7b3cb01" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0: DataFrame.lookup is deprecated, use DataFrame.melt and DataFrame.loc instead. For an example see &lt;a href=&quot;#pandas.DataFrame.lookup&quot;&gt;&lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; in the user guide.</source>
          <target state="translated">버전 1.2.0부터 사용되지 않음 : DataFrame.lookup은 사용되지 않습니다. 대신 DataFrame.melt 및 DataFrame.loc을 사용하세요. 예제 는 사용 설명서의 &lt;a href=&quot;#pandas.DataFrame.lookup&quot;&gt; &lt;code&gt;lookup()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0da7e95bd6f0e638f705b106cd9c88c5408566a6" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0: Use show_counts instead.</source>
          <target state="translated">버전 1.2.0부터 사용되지 않음 : 대신 show_counts를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="816c9e0a7ae0f99b04acecdea274929edf4f6bb8" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0: slice_shift is deprecated, use DataFrame/Series.shift instead.</source>
          <target state="translated">버전 1.2.0부터 폐지 : slice_shift는 폐지되었습니다. 대신 DataFrame / Series.shift를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="83f13e64346c2f1f20967bd62bbc314e1efd9708" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2.0: use &lt;code&gt;astype&lt;/code&gt; method instead.</source>
          <target state="translated">버전 1.2.0부터 &lt;code&gt;astype&lt;/code&gt; : 대신 astype 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c779e8f7eaabc026d1262231848c8231a01692e7" translate="yes" xml:space="preserve">
          <source>Deprecated since version 1.2: Strings with units &amp;lsquo;M&amp;rsquo;, &amp;lsquo;Y&amp;rsquo; and &amp;lsquo;y&amp;rsquo; do not represent unambiguous timedelta values and will be removed in a future version</source>
          <target state="translated">버전 1.2부터 사용되지 않음 : 단위가 'M', 'Y'및 'y'인 문자열은 명확한 timedelta 값을 나타내지 않으며 향후 버전에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="3942ecb35bbbbc15558d8c0b1e7129c3529f17e4" translate="yes" xml:space="preserve">
          <source>Deprecated since version This: is a legacy method. Use &lt;code&gt;read&lt;/code&gt; in new code.</source>
          <target state="translated">버전 이후로 사용되지 않음 이것은 레거시 방법입니다. 새 코드에서 &lt;code&gt;read&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="08711f64f423731c7330b0535ddc04501bf9c143" translate="yes" xml:space="preserve">
          <source>Describes 52-53 week fiscal year.</source>
          <target state="translated">52-53 주 회계 연도를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="82a584196c8ed45b918e61f54d6e94e484516c97" translate="yes" xml:space="preserve">
          <source>Describes 52-53 week fiscal year. This is also known as a 4-4-5 calendar.</source>
          <target state="translated">52-53 주 회계 연도를 설명합니다. 이것은 4-4-5 달력이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="9e855f106e23ca5ea95761bab9aa7262fdf959a6" translate="yes" xml:space="preserve">
          <source>Describes monthly dates in last week of month like &amp;ldquo;the last Tuesday of each month&amp;rdquo;.</source>
          <target state="translated">&quot;매월 마지막 화요일&quot;과 같이 매월 마지막 주에 월별 날짜를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="dd70b76af50cbb1904b21bd68578f7ad13c2547b" translate="yes" xml:space="preserve">
          <source>Describes monthly dates like &amp;ldquo;the Tuesday of the 2nd week of each month&amp;rdquo;.</source>
          <target state="translated">&amp;ldquo;매월 둘째 주 화요일&amp;rdquo;과 같은 월별 날짜를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3ad164399ae41c9e127997d35986642ade6bf5e3" translate="yes" xml:space="preserve">
          <source>Describing a &lt;code&gt;DataFrame&lt;/code&gt;. By default only numeric fields are returned.</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 설명 . 기본적으로 숫자 필드 만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e108ef4796b534ff4070e40d3a780cd1073692ac" translate="yes" xml:space="preserve">
          <source>Describing a categorical &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">범주 형 &lt;code&gt;Series&lt;/code&gt; 설명 .</target>
        </trans-unit>
        <trans-unit id="9a388edc3aaa790a3a22db027770ea13372b5696" translate="yes" xml:space="preserve">
          <source>Describing a column from a &lt;code&gt;DataFrame&lt;/code&gt; by accessing it as an attribute.</source>
          <target state="translated">속성으로 액세스 하여 &lt;code&gt;DataFrame&lt;/code&gt; 에서 열을 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="c614c571580533465cf59f211e96b14db2911594" translate="yes" xml:space="preserve">
          <source>Describing a numeric &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">숫자 &lt;code&gt;Series&lt;/code&gt; 설명 .</target>
        </trans-unit>
        <trans-unit id="4929232981b5f4e35ff2e847c0a0e527a49143ef" translate="yes" xml:space="preserve">
          <source>Describing a timestamp &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">타임 스탬프 &lt;code&gt;Series&lt;/code&gt; 설명 .</target>
        </trans-unit>
        <trans-unit id="087375cce23a3ff5aa74a3348020f8e9021a8023" translate="yes" xml:space="preserve">
          <source>Describing all columns of a &lt;code&gt;DataFrame&lt;/code&gt; regardless of data type.</source>
          <target state="translated">데이터 유형에 관계없이 &lt;code&gt;DataFrame&lt;/code&gt; 의 모든 열을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="a5c17b4c8df5cdfabc5506bb3a8775f1491b5e08" translate="yes" xml:space="preserve">
          <source>Describing the common type of the input data.</source>
          <target state="translated">입력 데이터의 일반적인 유형을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1dc3820c09705438fd9bccbef1b0f19bbca1305e" translate="yes" xml:space="preserve">
          <source>Describing the data, where data component is like &lt;code&gt;orient='records'&lt;/code&gt;.</source>
          <target state="translated">데이터를 설명합니다. 여기서 데이터 구성 요소는 &lt;code&gt;orient='records'&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="d024012fa6528361117a8641ebca223f7d84006e" translate="yes" xml:space="preserve">
          <source>Descriptive statistics</source>
          <target state="translated">기술 통계</target>
        </trans-unit>
        <trans-unit id="68feec8930b69b9fe7d4f55071fcca5661496da1" translate="yes" xml:space="preserve">
          <source>Descriptive statistics include those that summarize the central tendency, dispersion and shape of a dataset&amp;rsquo;s distribution, excluding &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">기술 통계에는 &lt;code&gt;NaN&lt;/code&gt; 값을 제외한 데이터 세트 분포의 중심 경향, 분산 및 모양을 요약하는 통계가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="1b46fcf31de8f5800fa520747a076730d08c3dc6" translate="yes" xml:space="preserve">
          <source>Designed for ordered data like time series data. Optionally perform group-wise merge (see examples).</source>
          <target state="translated">시계열 데이터와 같은 정렬 된 데이터를 위해 설계되었습니다. 선택적으로 그룹 단위 병합을 수행합니다 (예제 참조).</target>
        </trans-unit>
        <trans-unit id="31cecb11a83e2c077100089610c088dfc121e49f" translate="yes" xml:space="preserve">
          <source>Desired frequency.</source>
          <target state="translated">원하는 주파수.</target>
        </trans-unit>
        <trans-unit id="6975a8458b53a883ea7d85cbdc6c478c2d7dd14d" translate="yes" xml:space="preserve">
          <source>Despite the warning, the CSV file is read with mixed types in a single column which will be an object type. See the examples below to better understand this issue.</source>
          <target state="translated">경고에도 불구하고 CSV 파일은 단일 유형의 혼합 유형으로 읽혀지며 이는 객체 유형이됩니다. 이 문제를 더 잘 이해하려면 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0f8776e18513aab3d2da031d4c8b33fb7812dfe1" translate="yes" xml:space="preserve">
          <source>Details and a sample callable implementation can be found in the section &lt;a href=&quot;../../user_guide/io#io-sql-method&quot;&gt;insert method&lt;/a&gt;.</source>
          <target state="translated">세부 사항 및 샘플 호출 가능 구현은 &lt;a href=&quot;../../user_guide/io#io-sql-method&quot;&gt;insert 메소드&lt;/a&gt; 섹션에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9f7b39104f987dc7f1f8ab2ec9b450ef6ad1109d" translate="yes" xml:space="preserve">
          <source>Detect existing (non-missing) values.</source>
          <target state="translated">기존 (비결 측) 값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="e4a0d806229959f5c0f1cdd8abe7e4d03d807e17" translate="yes" xml:space="preserve">
          <source>Detect missing value markers (empty strings and the value of na_values). In data without any NAs, passing &lt;code&gt;na_filter=False&lt;/code&gt; can improve the performance of reading a large file.</source>
          <target state="translated">누락 된 값 마커 (빈 문자열 및 na_values ​​값)를 감지합니다. NA가없는 데이터에서 &lt;code&gt;na_filter=False&lt;/code&gt; 를 전달 하면 큰 파일을 읽는 성능이 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fec0d52173b1d17cfd4e4ab85adecba72693d46" translate="yes" xml:space="preserve">
          <source>Detect missing value markers (empty strings and the value of na_values). In data without any NAs, passing na_filter=False can improve the performance of reading a large file.</source>
          <target state="translated">결 측값 마커 (빈 문자열 및 na_value 값)를 감지합니다. NA가없는 데이터에서 na_filter = False를 전달하면 큰 파일을 읽는 성능이 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b61856c1bffc845c29ccc92da44e3aee4b69aa8e" translate="yes" xml:space="preserve">
          <source>Detect missing values for an array-like object.</source>
          <target state="translated">배열과 같은 객체의 결 측값을 탐지합니다.</target>
        </trans-unit>
        <trans-unit id="b9648506c71cac54257b79e13ddd5440217d3ea2" translate="yes" xml:space="preserve">
          <source>Detect missing values in Series object.</source>
          <target state="translated">Series 객체에서 결 측값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="e694a9f7e6a05afa1ec8ad5cd3f2d5d65b7a3006" translate="yes" xml:space="preserve">
          <source>Detect missing values in a DataFrame.</source>
          <target state="translated">DataFrame에서 결 측값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="8f2ca3ed6115c637f8ed0e563c56615c66cee19b" translate="yes" xml:space="preserve">
          <source>Detect missing values in a Series.</source>
          <target state="translated">Series에서 결 측값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="58f94c42954c2676a856265f163f4cfc34f89c54" translate="yes" xml:space="preserve">
          <source>Detect missing values in an Index.</source>
          <target state="translated">인덱스에서 결 측값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="230430e3a7523d5b3c891cb5f19aebdcdfbdde2b" translate="yes" xml:space="preserve">
          <source>Detect missing values.</source>
          <target state="translated">결 측값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="1208fc52bf4ad16f0d8bdda0d84f44fdf31d9219" translate="yes" xml:space="preserve">
          <source>Detect non-missing values for an array-like object.</source>
          <target state="translated">배열과 같은 객체의 결 측값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="4dbd945a55b4062647bcd0cf2c35473e843ab4a3" translate="yes" xml:space="preserve">
          <source>Detect valid values in a DataFrame.</source>
          <target state="translated">DataFrame에서 유효한 값을 감지하십시오.</target>
        </trans-unit>
        <trans-unit id="81e4f1f9274614d619b0add57c36eec867533f73" translate="yes" xml:space="preserve">
          <source>Detect valid values in a Series.</source>
          <target state="translated">Series에서 유효한 값을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="7c45fe6ec2033bad98dc5f94b082d13544413477" translate="yes" xml:space="preserve">
          <source>Detect valid values in an Index.</source>
          <target state="translated">인덱스에서 유효한 값을 감지하십시오.</target>
        </trans-unit>
        <trans-unit id="aab7e348c0c6da3a95c7ebd269531c3ed0fa2230" translate="yes" xml:space="preserve">
          <source>Determine if each string matches a regular expression.</source>
          <target state="translated">각 문자열이 정규식과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="44a5fdd6c581b3c26de8a6e78c991aedf2e1f308" translate="yes" xml:space="preserve">
          <source>Determine if each string starts with a match of a regular expression.</source>
          <target state="translated">각 문자열이 정규식의 일치로 시작하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="84195e171d31ae2af5c207d5ff82710a67928c0b" translate="yes" xml:space="preserve">
          <source>Determine if row or column is removed from DataFrame, when we have at least one NA or all NA.</source>
          <target state="translated">하나 이상의 NA 또는 모든 NA가있을 때 DataFrame에서 행 또는 열이 제거되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e97faeb32c51070d38e846fafb4dad33d3bd979a" translate="yes" xml:space="preserve">
          <source>Determine if rows or columns which contain missing values are removed.</source>
          <target state="translated">결 측값이 포함 된 행 또는 열이 제거되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="53043822f64f3cb5b52b71dbf85c366b5d596563" translate="yes" xml:space="preserve">
          <source>Determine if two CategoricalIndex objects contain the same elements.</source>
          <target state="translated">두 CategoricalIndex 객체에 동일한 요소가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5713abd81d8a5b775bb198a82a3793ea91faa1fe" translate="yes" xml:space="preserve">
          <source>Determine if two Index object are equal.</source>
          <target state="translated">두 Index 객체가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cf663ff3e02b4450327fd1ee7891d66f4f2119c1" translate="yes" xml:space="preserve">
          <source>Determine if two Index objects contain the same elements.</source>
          <target state="translated">두 개의 Index 객체에 동일한 요소가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7d0870976c8222998438858cefef3be2ae03d68f" translate="yes" xml:space="preserve">
          <source>Determine range time on index or columns value.</source>
          <target state="translated">인덱스 또는 열 값에 대한 범위 시간을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a4c7f9badd3bcdf0c5bb888538845528fb412f98" translate="yes" xml:space="preserve">
          <source>Determine which axis to align the comparison on.</source>
          <target state="translated">비교를 정렬 할 축을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9b93bc439551ae365b816a13e8965500592930e8" translate="yes" xml:space="preserve">
          <source>Determines if assumes the passed-in pattern is a regular expression:</source>
          <target state="translated">전달 된 패턴이 정규식이라고 가정하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3bc97a50a3018b43d854cdc0ff2bb0d08e2c272a" translate="yes" xml:space="preserve">
          <source>Determines if replace is case sensitive:</source>
          <target state="translated">교체가 대소 문자를 구분하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="279ff4d1c97728bd5991db1bce4625c33618b2a3" translate="yes" xml:space="preserve">
          <source>Determines if row or column is passed as a Series or ndarray object:</source>
          <target state="translated">행 또는 열이 Series 또는 ndarray 객체로 전달되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="858c28fe6bb2dde7e94fb1ea32cefd5c07e79785" translate="yes" xml:space="preserve">
          <source>Determines the join-style between the calling Series/Index and any Series/Index/DataFrame in</source>
          <target state="translated">호출하는 Series / Index와 모든 Series / Index / DataFrame 간의 조인 스타일을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="fe2bc1a06de6be23b2fea079e726290dbccdc4e2" translate="yes" xml:space="preserve">
          <source>Determines the join-style between the calling Series/Index and any Series/Index/DataFrame in &lt;code&gt;others&lt;/code&gt; (objects without an index need to match the length of the calling Series/Index). If None, alignment is disabled, but this option will be removed in a future version of pandas and replaced with a default of &lt;code&gt;&amp;lsquo;left&amp;rsquo;&lt;/code&gt;. To disable alignment, use &lt;code&gt;.values&lt;/code&gt; on any Series/Index/DataFrame in &lt;code&gt;others&lt;/code&gt;.</source>
          <target state="translated">의 호출 시리즈 / 색인 및 시리즈 / 색인 / DataFrame 사이의 결합 스타일 결정 &lt;code&gt;others&lt;/code&gt; (호출 시리즈 / 인덱스의 길이와 일치하는 인덱스 필요없이 객체). None이면 정렬이 비활성화되지만이 옵션은 이후 버전의 pandas에서 제거되고 기본값은 &lt;code&gt;&amp;lsquo;left&amp;rsquo;&lt;/code&gt; 로 바뀝니다 . 비활성화 정렬하려면, 사용 &lt;code&gt;.values&lt;/code&gt; 어떤 시리즈 / 색인 / DataFrame에있는 &lt;code&gt;others&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="366d46811e71f358c6898fc7063bacd56e9148e0" translate="yes" xml:space="preserve">
          <source>Determines the type of the values of the dictionary.</source>
          <target state="translated">사전 값의 유형을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="3042a6a092bf128c68ca41cbcc7ed3ac7ff0c964" translate="yes" xml:space="preserve">
          <source>Determines which duplicates (if any) to keep. - &lt;code&gt;first&lt;/code&gt; : Drop duplicates except for the first occurrence. - &lt;code&gt;last&lt;/code&gt; : Drop duplicates except for the last occurrence. - False : Drop all duplicates.</source>
          <target state="translated">유지할 중복 (있는 경우)을 결정합니다. - &lt;code&gt;first&lt;/code&gt; : 드롭은 첫 번째 항목을 제외하고 복제합니다. - &lt;code&gt;last&lt;/code&gt; : 드롭 마지막 발생을 제외하고 복제합니다. -False : 모든 중복을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="9ad3c7307bfbe28236f9bfd89bd2c38b68c33b85" translate="yes" xml:space="preserve">
          <source>Determines which duplicates (if any) to mark.</source>
          <target state="translated">표시 할 중복 (있는 경우)을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="7e08ebec5e6f80a136fa4076e041dd0c811a5e70" translate="yes" xml:space="preserve">
          <source>Developer</source>
          <target state="translated">Developer</target>
        </trans-unit>
        <trans-unit id="5b702fd6b1ad51ebc4ddf6d6b218e8d01d9c852d" translate="yes" xml:space="preserve">
          <source>Developer guide</source>
          <target state="translated">개발자 가이드</target>
        </trans-unit>
        <trans-unit id="7cae7be5213918d98225b262f1222b757b12e0a4" translate="yes" xml:space="preserve">
          <source>Developers guide can be found at &lt;a href=&quot;https://pandas.pydata.org/docs/dev/development/extending.html#plotting-backends&quot;&gt;https://pandas.pydata.org/docs/dev/development/extending.html#plotting-backends&lt;/a&gt;</source>
          <target state="translated">개발자 가이드는 &lt;a href=&quot;https://pandas.pydata.org/docs/dev/development/extending.html#plotting-backends&quot;&gt;https://pandas.pydata.org/docs/dev/development/extending.html#plotting-backends&lt;/a&gt; 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="86ce22df3c3077e7dd49013f230f3fdf6ed9ff9d" translate="yes" xml:space="preserve">
          <source>Development team</source>
          <target state="translated">개발팀</target>
        </trans-unit>
        <trans-unit id="93949a50661fff90601b64094a7495e48a30e6f2" translate="yes" xml:space="preserve">
          <source>Dialect</source>
          <target state="translated">Dialect</target>
        </trans-unit>
        <trans-unit id="4ef0032086c81bbf31a5f1914bd7b709178690ea" translate="yes" xml:space="preserve">
          <source>Dict can contain Series, arrays, constants, dataclass or list-like objects. If data is a dict, column order follows insertion-order.</source>
          <target state="translated">Dict는 시리즈, 배열, 상수, 데이터 클래스 또는 목록과 유사한 객체를 포함 할 수 있습니다. 데이터가 dict이면 열 순서는 삽입 순서를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="0902dad72d5174da2899bd03df9dc4fb801096cc" translate="yes" xml:space="preserve">
          <source>Dict can contain Series, arrays, constants, or list-like objects</source>
          <target state="translated">Dict는 Series, arrays, constants 또는 list-like objects를 포함 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="1a4ebfd30deaeed29afe57559fad190d0e965a5b" translate="yes" xml:space="preserve">
          <source>Dict of 1D ndarrays, lists, dicts, or Series</source>
          <target state="translated">1D ndarray, 목록, 사전 또는 시리즈 사전</target>
        </trans-unit>
        <trans-unit id="bf32d65c882e0cd51c59559bd9b63802befc24a1" translate="yes" xml:space="preserve">
          <source>Dict of &lt;code&gt;{column_name: arg dict}&lt;/code&gt;, where the arg dict corresponds to the keyword arguments of &lt;a href=&quot;pandas.to_datetime#pandas.to_datetime&quot;&gt;&lt;code&gt;pandas.to_datetime()&lt;/code&gt;&lt;/a&gt; Especially useful with databases without native Datetime support, such as SQLite.</source>
          <target state="translated">&lt;code&gt;{column_name: arg dict}&lt;/code&gt; Dict . 여기서 arg dict는 &lt;a href=&quot;pandas.to_datetime#pandas.to_datetime&quot;&gt; &lt;code&gt;pandas.to_datetime()&lt;/code&gt; &lt;/a&gt; 의 키워드 인수에 해당합니다. . SQLite와 같은 기본 Datetime 지원이없는 데이터베이스에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="96350a85d4742aa07abdedbb44c9a5176ccf89a0" translate="yes" xml:space="preserve">
          <source>Dict of &lt;code&gt;{column_name: format string}&lt;/code&gt; where format string is strftime compatible in case of parsing string times or is one of (D, s, ns, ms, us) in case of parsing integer timestamps.</source>
          <target state="translated">&lt;code&gt;{column_name: format string}&lt;/code&gt; Dict 문자열 시간을 구문 분석하는 경우 형식 문자열이 strftime 호환 가능하거나 정수 시간 소인을 구문 분석하는 경우 (D, s, ns, ms, us) 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="0abb5a10e7722f6c76429111237c03c8b43f806c" translate="yes" xml:space="preserve">
          <source>Dict of &lt;code&gt;{column_name: format string}&lt;/code&gt; where format string is strftime compatible in case of parsing string times, or is one of (D, s, ns, ms, us) in case of parsing integer timestamps.</source>
          <target state="translated">&lt;code&gt;{column_name: format string}&lt;/code&gt; Dict 형식 문자열은 문자열 시간을 구문 분석하는 경우 strftime 호환 가능하거나 정수 시간 소인을 구문 분석하는 경우 (D, s, ns, ms, us) 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="fbac9ab6cd7b6052e5c056dece8ddff7b8f410de" translate="yes" xml:space="preserve">
          <source>Dict of functions for converting values in certain columns. Keys can either be integers or column labels, values are functions that take one input argument, the Excel cell content, and return the transformed content.</source>
          <target state="translated">특정 열의 값을 변환하기위한 함수입니다. 키는 정수 또는 열 레이블 일 수 있으며, 값은 하나의 입력 인수 인 Excel 셀 컨텐츠를 사용하고 변환 된 컨텐츠를 리턴하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="e7c120a46216503cae856a9d2983f8fb9b9366f5" translate="yes" xml:space="preserve">
          <source>Dict of functions for converting values in certain columns. Keys can either be integers or column labels, values are functions that take one input argument, the cell (not column) content, and return the transformed content.</source>
          <target state="translated">특정 열의 값을 변환하기위한 함수입니다. 키는 정수 또는 열 레이블 일 수 있으며, 값은 하나의 입력 인수 인 셀 (열이 아닌) 내용을 사용하고 변환 된 내용을 반환하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="84562a3d495d43e1a45b61c0eda056523788b154" translate="yes" xml:space="preserve">
          <source>Dict of functions for converting values in certain columns. Keys can either be integers or column labels.</source>
          <target state="translated">특정 열의 값을 변환하기위한 함수입니다. 키는 정수 또는 열 레이블 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d3cc830b3fc711d26ee2bda9e55cc95835982de" translate="yes" xml:space="preserve">
          <source>Dict {group name -&amp;gt; group indices}.</source>
          <target state="translated">점 {그룹 이름-&amp;gt; 그룹 색인}.</target>
        </trans-unit>
        <trans-unit id="1926b201f314f2d43cd1a6c9b16968521545d30b" translate="yes" xml:space="preserve">
          <source>Dict {group name -&amp;gt; group labels}.</source>
          <target state="translated">Dict {그룹 이름-&amp;gt; 그룹 레이블}.</target>
        </trans-unit>
        <trans-unit id="0b31323cb074cc55a49fbaddb7812fe60513b9df" translate="yes" xml:space="preserve">
          <source>Dict-like or function transformations to apply to that axis&amp;rsquo; values. Use either &lt;code&gt;mapper&lt;/code&gt; and &lt;code&gt;axis&lt;/code&gt; to specify the axis to target with &lt;code&gt;mapper&lt;/code&gt;, or &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">해당 축의 값에 적용 할 사전 유사 또는 함수 변환. 중 하나를 사용 &lt;code&gt;mapper&lt;/code&gt; 하고 &lt;code&gt;axis&lt;/code&gt; 으로 대상 축을 지정 &lt;code&gt;mapper&lt;/code&gt; , 또는 &lt;code&gt;index&lt;/code&gt; 및 &lt;code&gt;columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9aa0d50a36607d74b260092fd2deb5597c047ee" translate="yes" xml:space="preserve">
          <source>Dict-like or functions transformations to apply to that axis&amp;rsquo; values. Use either &lt;code&gt;mapper&lt;/code&gt; and &lt;code&gt;axis&lt;/code&gt; to specify the axis to target with &lt;code&gt;mapper&lt;/code&gt;, or &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">해당 축의 값에 적용 할 Dict 유사 또는 함수 변환. 중 하나를 사용 &lt;code&gt;mapper&lt;/code&gt; 하고 &lt;code&gt;axis&lt;/code&gt; 으로 대상 축을 지정 &lt;code&gt;mapper&lt;/code&gt; , 또는 &lt;code&gt;index&lt;/code&gt; 및 &lt;code&gt;columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8fe5e160be8582a74338c557c03d6fc8ceb9e6d" translate="yes" xml:space="preserve">
          <source>Dictionary containing columns as keys and variable labels as values. Each label must be 80 characters or smaller.</source>
          <target state="translated">열을 키로 포함하고 변수 레이블을 값으로 포함하는 사전. 각 레이블은 80 자 이하 여야합니다.</target>
        </trans-unit>
        <trans-unit id="11f11ef052925719ded671269c6bdf0ba563def6" translate="yes" xml:space="preserve">
          <source>Dictionary mapping columns containing datetime types to stata internal format to use when writing the dates. Options are &amp;lsquo;tc&amp;rsquo;, &amp;lsquo;td&amp;rsquo;, &amp;lsquo;tm&amp;rsquo;, &amp;lsquo;tw&amp;rsquo;, &amp;lsquo;th&amp;rsquo;, &amp;lsquo;tq&amp;rsquo;, &amp;lsquo;ty&amp;rsquo;. Column can be either an integer or a name. Datetime columns that do not have a conversion type specified will be converted to &amp;lsquo;tc&amp;rsquo;. Raises NotImplementedError if a datetime column has timezone information.</source>
          <target state="translated">날짜 시간 유형을 포함하는 사전 맵핑 열을 날짜를 쓸 때 사용할 stata 내부 형식으로 맵핑합니다. 옵션은 'tc', 'td', 'tm', 'tw', 'th', 'tq', 'ty'입니다. 열은 정수 또는 이름 일 수 있습니다. 변환 유형이 지정되지 않은 날짜 / 시간 열은 'tc'로 변환됩니다. 날짜 시간 열에 시간대 정보가있는 경우 NotImplementedError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1f533e3288ba4f8735bca557e0d4bc6d45593b9e" translate="yes" xml:space="preserve">
          <source>Dictionary of global attributes of this dataset.</source>
          <target state="translated">이 데이터 세트의 전역 속성 사전입니다.</target>
        </trans-unit>
        <trans-unit id="8670e42e620597034f0796ff62bca2b6707f793a" translate="yes" xml:space="preserve">
          <source>Dictionary-like &lt;a href=&quot;../reference/api/pandas.dataframe.get#pandas.DataFrame.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="translated">사전과 같은 &lt;a href=&quot;../reference/api/pandas.dataframe.get#pandas.DataFrame.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드</target>
        </trans-unit>
        <trans-unit id="987c65b6f35bdca30438ea557c8a8f8b81cbf542" translate="yes" xml:space="preserve">
          <source>Dictionary-like &lt;code&gt;get()&lt;/code&gt; method</source>
          <target state="translated">사전과 유사한 &lt;code&gt;get()&lt;/code&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="577ce690c6a3a8ecccb0854a41cf2e5055f08f9d" translate="yes" xml:space="preserve">
          <source>Dictionary-like get() method</source>
          <target state="translated">사전과 같은 get () 메서드</target>
        </trans-unit>
        <trans-unit id="10902f8528bb8e6c5a30af137a75729895fca4f9" translate="yes" xml:space="preserve">
          <source>Dicts can be used to specify different replacement values for different existing values. For example, &lt;code&gt;{'a': 'b', 'y': 'z'}&lt;/code&gt; replaces the value &amp;lsquo;a&amp;rsquo; with &amp;lsquo;b&amp;rsquo; and &amp;lsquo;y&amp;rsquo; with &amp;lsquo;z&amp;rsquo;. To use a dict in this way the</source>
          <target state="translated">사전을 사용하여 기존 값마다 다른 대체 값을 지정할 수 있습니다. 예를 들어, &lt;code&gt;{'a': 'b', 'y': 'z'}&lt;/code&gt; 는 'a'값을 'b'로, 'y'를 'z'로 바꿉니다. 이런 식으로 dict를 사용하려면</target>
        </trans-unit>
        <trans-unit id="61e605e8140a5b5bbd5003492028b2f67df1b0f4" translate="yes" xml:space="preserve">
          <source>Dicts can be used to specify different replacement values for different existing values. For example, &lt;code&gt;{'a': 'b', 'y': 'z'}&lt;/code&gt; replaces the value &amp;lsquo;a&amp;rsquo; with &amp;lsquo;b&amp;rsquo; and &amp;lsquo;y&amp;rsquo; with &amp;lsquo;z&amp;rsquo;. To use a dict in this way the &lt;code&gt;value&lt;/code&gt; parameter should be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">다른 기존 값에 대해 다른 대체 값을 지정하는 데 Dicts를 사용할 수 있습니다. 예를 들어, &lt;code&gt;{'a': 'b', 'y': 'z'}&lt;/code&gt; 는 값 'a'를 'b'로, 'y'를 'z'로 바꿉니다. 이런 방식으로 dict를 사용하려면 &lt;code&gt;value&lt;/code&gt; 매개 변수가 &lt;code&gt;None&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d5bb0d5d04e6c946ce32644884c585f68a345d95" translate="yes" xml:space="preserve">
          <source>Difference with 3rd previous row</source>
          <target state="translated">3 번째 이전 행과의 차이점</target>
        </trans-unit>
        <trans-unit id="9ebb679cd89fa76c6228409c8bc3264b3502458a" translate="yes" xml:space="preserve">
          <source>Difference with following row</source>
          <target state="translated">다음 행과의 차이점</target>
        </trans-unit>
        <trans-unit id="caaa4211c7486e88a5ec72b62c8bd09796837690" translate="yes" xml:space="preserve">
          <source>Difference with previous column</source>
          <target state="translated">이전 열과의 차이점</target>
        </trans-unit>
        <trans-unit id="bef6726777cabe03465c33b3ace58d633f53a804" translate="yes" xml:space="preserve">
          <source>Difference with previous row</source>
          <target state="translated">이전 행과의 차이점</target>
        </trans-unit>
        <trans-unit id="4a3be562677bcefcde2f1c5e021f115689629af1" translate="yes" xml:space="preserve">
          <source>Differences to R&amp;rsquo;s &lt;code&gt;factor&lt;/code&gt;</source>
          <target state="translated">R &lt;code&gt;factor&lt;/code&gt; 의 차이점</target>
        </trans-unit>
        <trans-unit id="c81d0535356cf54e385e4a64fe3cd7d56cbe8128" translate="yes" xml:space="preserve">
          <source>Differences to R&amp;rsquo;s factor</source>
          <target state="translated">R의 요인과의 차이</target>
        </trans-unit>
        <trans-unit id="0125b19cf6faba9b7faf01e02bba65b6789d4df2" translate="yes" xml:space="preserve">
          <source>Differences with NumPy</source>
          <target state="translated">NumPy와의 차이점</target>
        </trans-unit>
        <trans-unit id="be99f3cb5c3fe0fa7cadffeeb4f12afee9a3dad8" translate="yes" xml:space="preserve">
          <source>Different aggregations per column</source>
          <target state="translated">열당 다른 집계</target>
        </trans-unit>
        <trans-unit id="c47ed5e734b08b79a895b0f83243e6b5a6fef9b2" translate="yes" xml:space="preserve">
          <source>Different aggregations per column.</source>
          <target state="translated">열마다 다른 집계</target>
        </trans-unit>
        <trans-unit id="a1d7957d98e91c7100d80bcc590e0e1c84731660" translate="yes" xml:space="preserve">
          <source>Different choices for indexing</source>
          <target state="translated">인덱싱을위한 다른 선택</target>
        </trans-unit>
        <trans-unit id="9b3c6a073fd35949ae60e47ab648308351ac232f" translate="yes" xml:space="preserve">
          <source>Differs from &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.zfill&quot;&gt;&lt;code&gt;str.zfill()&lt;/code&gt;&lt;/a&gt; which has special handling for &amp;lsquo;+&amp;rsquo;/&amp;rsquo;-&amp;lsquo; in the string.</source>
          <target state="translated">문자열에서 '+'/ '-'를 특별히 처리하는 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.zfill&quot;&gt; &lt;code&gt;str.zfill()&lt;/code&gt; &lt;/a&gt; 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="9f4ca9ec08715def4a822d25f75f2d9b79b931c0" translate="yes" xml:space="preserve">
          <source>Dimensions</source>
          <target state="translated">Dimensions</target>
        </trans-unit>
        <trans-unit id="15ecb1c9ea86b3bbef6c93e69c76f06cb99a10c6" translate="yes" xml:space="preserve">
          <source>Direct NumPy decoding makes a number of assumptions and may fail or produce unexpected output if these assumptions are not satisfied:</source>
          <target state="translated">직접 NumPy 디코딩은 여러 가지 가정을하고 이러한 가정이 충족되지 않으면 실패하거나 예기치 않은 출력을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f8bef093eafc9c538893eade2d7483eb293a3bd" translate="yes" xml:space="preserve">
          <source>Direct decoding to numpy arrays. Supports numeric data only, but non-numeric column and index labels are supported. Note also that the JSON ordering MUST be the same for each term if numpy=True.</source>
          <target state="translated">numpy 배열로 직접 디코딩 숫자 데이터 만 지원하지만 숫자가 아닌 열 및 색인 레이블이 지원됩니다. numpy = True 인 경우 JSON 순서는 각 용어에 대해 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="164e0b79063f11a2936cf830fb48b8c7054cc118" translate="yes" xml:space="preserve">
          <source>Directive</source>
          <target state="translated">Directive</target>
        </trans-unit>
        <trans-unit id="87c2c559b5074e60b9509f3f2e1dfdb19c95c56d" translate="yes" xml:space="preserve">
          <source>Disallowing Duplicate Labels</source>
          <target state="translated">중복 라벨 허용 안함</target>
        </trans-unit>
        <trans-unit id="60613c086633cd24de6ca21378fb05965c58f618" translate="yes" xml:space="preserve">
          <source>Discard data that belongs to groups with only a few members.</source>
          <target state="translated">회원이 적은 그룹에 속하는 데이터는 폐기하십시오.</target>
        </trans-unit>
        <trans-unit id="11c4a5b474a4e19e2447ae63965764bd541f795d" translate="yes" xml:space="preserve">
          <source>Discovers the same bins, but assign them specific labels. Notice that the returned Categorical&amp;rsquo;s categories are</source>
          <target state="translated">동일한 저장소를 검색하지만 특정 레이블을 할당합니다. 반환 된 Categorical의 범주는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7798b0cd0a7f417836b84571b613db8655935d4f" translate="yes" xml:space="preserve">
          <source>Discovers the same bins, but assign them specific labels. Notice that the returned Categorical&amp;rsquo;s categories are &lt;code&gt;labels&lt;/code&gt; and is ordered.</source>
          <target state="translated">동일한 출력 함을 발견하지만 특정 출력 함을 지정하십시오. 반환 된 Categorical의 범주는 &lt;code&gt;labels&lt;/code&gt; 이며 순서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1acc6c355efb4bbcd1f37af836fbe5fae378325" translate="yes" xml:space="preserve">
          <source>Discretization and quantiling</source>
          <target state="translated">이산화 및 양자화</target>
        </trans-unit>
        <trans-unit id="9a7817596db97f58b1773a8198e256819db452c2" translate="yes" xml:space="preserve">
          <source>Discretize continuous-valued array.</source>
          <target state="translated">연속 값 배열을 이산합니다.</target>
        </trans-unit>
        <trans-unit id="39c2db5e8ae6921e662a015ebed612bf2cd638bc" translate="yes" xml:space="preserve">
          <source>Discretize into three equal-sized bins.</source>
          <target state="translated">동일한 크기의 빈 3 개로 분리하십시오.</target>
        </trans-unit>
        <trans-unit id="248dd3503a9b89fe2bf72512c4cc1ab897525708" translate="yes" xml:space="preserve">
          <source>Discretize variable into equal-sized buckets based on rank or based on sample quantiles.</source>
          <target state="translated">순위 또는 샘플 Quantile을 기준으로 변수를 동일한 크기의 버킷으로 분리합니다.</target>
        </trans-unit>
        <trans-unit id="1f1c853b4bca817106c3c4a40844c55cbeecbbcd" translate="yes" xml:space="preserve">
          <source>Discretize variable into equal-sized buckets based on rank or based on sample quantiles. For example 1000 values for 10 quantiles would produce a Categorical object indicating quantile membership for each data point.</source>
          <target state="translated">순위 또는 샘플 분위수를 기반으로 변수를 동일한 크기의 버킷으로 이산화합니다. 예를 들어 10 개의 Quantile에 대한 1000 개의 값은 각 데이터 포인트에 대한 Quantile 멤버쉽을 나타내는 Categorical 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3af6eb76847b9d3f14a4231075e1fc50761d56eb" translate="yes" xml:space="preserve">
          <source>Dispatching to instance methods</source>
          <target state="translated">인스턴스 메소드로 디스패치</target>
        </trans-unit>
        <trans-unit id="11a15079af236d40fc62120e55ec0da3b4f955d2" translate="yes" xml:space="preserve">
          <source>Display DataFrame dimensions (number of rows by number of columns).</source>
          <target state="translated">DataFrame 차원을 표시합니다 (열 수별 행 수).</target>
        </trans-unit>
        <trans-unit id="67ec1d446512ec9a0caf4a874ed7910693a608e8" translate="yes" xml:space="preserve">
          <source>Display more information in the error logs.</source>
          <target state="translated">오류 로그에 자세한 정보를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="2a99237e950b50b43d9ea57343c660e9c4b17bf0" translate="yes" xml:space="preserve">
          <source>Display the index, columns:</source>
          <target state="translated">색인, 열을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d79ff1d47ce799f960a27c6d9c56ec3aa4f8e78b" translate="yes" xml:space="preserve">
          <source>Distinguish between these and other types by trying the call to hash() and seeing if they raise TypeError.</source>
          <target state="translated">hash () 호출을 시도하고 TypeError가 발생하는지 확인하여 이러한 유형과 다른 유형을 구별하십시오.</target>
        </trans-unit>
        <trans-unit id="1d3c457cbe3e35739086346e0a4048653efa42e7" translate="yes" xml:space="preserve">
          <source>Distribution</source>
          <target state="translated">Distribution</target>
        </trans-unit>
        <trans-unit id="92a9cdf2167435ad2973e99f97b1ee21d41caa94" translate="yes" xml:space="preserve">
          <source>Divide DataFrames (float division).</source>
          <target state="translated">데이터 프레임 나누기 (부동 나누기).</target>
        </trans-unit>
        <trans-unit id="2c1c10e8fa2b29b84763b8c0e3d19f7417c67e26" translate="yes" xml:space="preserve">
          <source>Divide DataFrames (integer division).</source>
          <target state="translated">데이터 프레임 나누기 (정수 나누기).</target>
        </trans-unit>
        <trans-unit id="068762a2f44e41ca6b56c260e9639cf3c322f4d3" translate="yes" xml:space="preserve">
          <source>Divide by a MultiIndex by level.</source>
          <target state="translated">레벨별로 다중 인덱스로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="632b9fb8616cb56fe8a5d7dcc44cab9bbe8fe7e6" translate="yes" xml:space="preserve">
          <source>Divide by constant with reverse version.</source>
          <target state="translated">역 버전으로 상수로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="8ec4252b070f8ce9720bf7b4b75551b77a84fa5b" translate="yes" xml:space="preserve">
          <source>Divide by decaying adjustment factor in beginning periods to account for imbalance in relative weightings (viewing EWMA as a moving average).</source>
          <target state="translated">상대적 가중치의 불균형을 설명하기 위해 시작 기간의 조정 계수를 쇠약으로 나눕니다 (EWMA를 이동 평균으로 간주).</target>
        </trans-unit>
        <trans-unit id="875288eeab9dd4a7a5ed5789036ab64e49942a7d" translate="yes" xml:space="preserve">
          <source>Dividing or multiplying a &lt;code&gt;timedelta64[ns]&lt;/code&gt; Series by an integer or integer Series yields another &lt;code&gt;timedelta64[ns]&lt;/code&gt; dtypes Series.</source>
          <target state="translated">&lt;code&gt;timedelta64[ns]&lt;/code&gt; 시리즈를 정수 또는 정수 시리즈로 나누거나 곱 하면 다른 timedelta64 &lt;code&gt;timedelta64[ns]&lt;/code&gt; dtypes 시리즈가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5b67bbf0b93e33ab35641c94df5a6312e323fa04" translate="yes" xml:space="preserve">
          <source>Do not include columns whose entries are all NaN</source>
          <target state="translated">항목이 모두 NaN 인 열은 포함하지 마십시오</target>
        </trans-unit>
        <trans-unit id="769226359b4bac955ffcc9a69f46d4018963306d" translate="yes" xml:space="preserve">
          <source>Do not include columns whose entries are all NaN.</source>
          <target state="translated">항목이 모두 NaN 인 열은 포함하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="11923b64a05d45653206bba98fbcdcb42780f69c" translate="yes" xml:space="preserve">
          <source>Do not try to insert index into dataframe columns. This resets the index to the default integer index.</source>
          <target state="translated">데이터 프레임 열에 인덱스를 삽입하지 마십시오. 인덱스를 기본 정수 인덱스로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="a29c1be19c2a40d80f6883cb21e7a288e2ea0592" translate="yes" xml:space="preserve">
          <source>Do not write an ALL nan row to the store settable by the option &amp;lsquo;io.hdf.dropna_table&amp;rsquo;.</source>
          <target state="translated">'io.hdf.dropna_table'옵션으로 설정 가능한 저장소에 ALL nan 행을 쓰지 마십시오.</target>
        </trans-unit>
        <trans-unit id="cf53b770936e50ba7fa7a0c622f2ab2e6410fe3f" translate="yes" xml:space="preserve">
          <source>Do note that this tool is best-effort, meaning that it will try to correct as many errors as possible, but it may not correct &lt;em&gt;all&lt;/em&gt; of them. Thus, it is recommended that you run &lt;code&gt;cpplint&lt;/code&gt; to double check and make any other style fixes manually.</source>
          <target state="translated">이 도구는 최선의 노력이므로 가능한 많은 오류를 수정하려고 시도하지만 &lt;em&gt;모든&lt;/em&gt; 오류를 수정하지는 않습니다 . 따라서 &lt;code&gt;cpplint&lt;/code&gt; 를 실행 하여 이중 스타일을 다시 확인하고 다른 스타일을 수동으로 수정 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="eef04bf86961dba3dba442009aa434c6b6b41698" translate="yes" xml:space="preserve">
          <source>Do the same thing but fall back on a named index if there is no column with the name &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">동일한 작업을 수행하되 이름이 &lt;code&gt;a&lt;/code&gt; 인 열이없는 경우 명명 된 인덱스로 폴백 합니다 .</target>
        </trans-unit>
        <trans-unit id="73e74b196b30a15ffad04b19040262ef87d25db2" translate="yes" xml:space="preserve">
          <source>Docstrings must be defined with three double-quotes. No blank lines should be left before or after the docstring. The text starts in the next line after the opening quotes. The closing quotes have their own line (meaning that they are not at the end of the last sentence).</source>
          <target state="translated">Docstring은 3 개의 큰 따옴표로 정의해야합니다. docstring 앞뒤에 빈 줄이 없어야합니다. 텍스트는 여는 따옴표 다음 줄에서 시작합니다. 닫는 따옴표에는 자체 줄이 있습니다 (마지막 문장의 끝에 있지 않음을 의미).</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="ed0350dc3257153d84758ae6cd511caacb10aa9d" translate="yes" xml:space="preserve">
          <source>Documentation:</source>
          <target state="translated">Documentation:</target>
        </trans-unit>
        <trans-unit id="19b346dbaee5e0d711986b82632950a569fa0424" translate="yes" xml:space="preserve">
          <source>Documenting your code</source>
          <target state="translated">코드 문서화</target>
        </trans-unit>
        <trans-unit id="fc2089b963c183d321dffacd391881704b015f6c" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; check if data being appended overlaps with existing data in the table, so be careful</source>
          <target state="translated">않습니다 &lt;em&gt;하지&lt;/em&gt; 데이터가 테이블에있는 기존 데이터와 중복을 추가하고 있는지 확인, 그래서 조심</target>
        </trans-unit>
        <trans-unit id="d02eed1bba36c1e37920c000db6edf8be68eff77" translate="yes" xml:space="preserve">
          <source>Does not sort by remaining levels when sorting by levels</source>
          <target state="translated">레벨별로 정렬 할 때 나머지 레벨을 기준으로 정렬하지 않습니다</target>
        </trans-unit>
        <trans-unit id="18c25e91f25d4279f188f6b143a2c5258a090fed" translate="yes" xml:space="preserve">
          <source>Does not work for negative values of</source>
          <target state="translated">음수 값에는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2193f06b47266f34d976a6ef76e332cd0d5df2ef" translate="yes" xml:space="preserve">
          <source>Doing &amp;lsquo;git status&amp;rsquo; again should give something like:</source>
          <target state="translated">'git status'를 다시 수행하면 다음과 같은 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="66f425d97f507545e758977b195e5e2e478f5337" translate="yes" xml:space="preserve">
          <source>Domain specific</source>
          <target state="translated">도메인 별</target>
        </trans-unit>
        <trans-unit id="a8d8935c61723e99c64d77cee80ff285eb3dd32e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t consider counts of NaN/NaT.</source>
          <target state="translated">NaN / NaT의 수를 고려하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="fe875d887ac130b31dc0c558e101e0995161810a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t convert any data (but still convert axes and dates):</source>
          <target state="translated">데이터를 변환하지 마십시오 (하지만 여전히 축과 날짜를 변환하십시오).</target>
        </trans-unit>
        <trans-unit id="e4afb66e6c2a7b2873815ed684833d2c53e6e854" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t include NaN in the count.</source>
          <target state="translated">카운트에 NaN을 포함시키지 마십시오.</target>
        </trans-unit>
        <trans-unit id="758dfe524bfd9d313a243a608577a6cb704725dc" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t include NaN in the counts.</source>
          <target state="translated">카운트에 NaN을 포함시키지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e8221ee9fd2dbee40e363f9709dd51471d4bfe9b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t include counts of NaN.</source>
          <target state="translated">NaN을 포함하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="5cdb38b5494f71f96d93123a705ba3b1b039803b" translate="yes" xml:space="preserve">
          <source>Downcast dtypes if possible.</source>
          <target state="translated">가능한 경우 다운 캐스트 dtypes.</target>
        </trans-unit>
        <trans-unit id="68fdcbeedb3886ad9d2e75a01a954575ecd0103f" translate="yes" xml:space="preserve">
          <source>Download / Repository Link</source>
          <target state="translated">다운로드 / 리포지토리 링크</target>
        </trans-unit>
        <trans-unit id="7ae76478103995f3248cc3177c55b578bc6279c2" translate="yes" xml:space="preserve">
          <source>Downsample the DataFrame into 3 minute bins and sum the values of the timestamps falling into a bin.</source>
          <target state="translated">DataFrame을 3 분 구간으로 다운 샘플링하고 타임 스탬프 값을 구간으로 합산합니다.</target>
        </trans-unit>
        <trans-unit id="5436e249242bac590e3e6187d996f49d130ec928" translate="yes" xml:space="preserve">
          <source>Downsample the series into 3 minute bins and close the right side of the bin interval, but label each bin using the right edge instead of the left.</source>
          <target state="translated">시리즈를 3 분 빈으로 다운 샘플링하고 빈 간격의 오른쪽을 닫습니다. 그러나 왼쪽 대신 오른쪽 가장자리를 사용하여 각 빈에 레이블을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="f4c9d16c77ab77e75a3cf2dd80cc4ec172fd4d9f" translate="yes" xml:space="preserve">
          <source>Downsample the series into 3 minute bins and sum the values of the timestamps falling into a bin.</source>
          <target state="translated">계열을 3 분 구간으로 다운 샘플링하고 타임 스탬프 값을 구간으로 합산합니다.</target>
        </trans-unit>
        <trans-unit id="62c070f737d02e2d061bc936df7584718c342a74" translate="yes" xml:space="preserve">
          <source>Downsample the series into 3 minute bins as above, but close the right side of the bin interval.</source>
          <target state="translated">위와 같이 시리즈를 3 분 구간으로 다운 샘플링하지만 구간 간격의 오른쪽을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="ce595024d07bfa52c37b7cdf58652f2030c4c1ba" translate="yes" xml:space="preserve">
          <source>Downsample the series into 3 minute bins as above, but label each bin using the right edge instead of the left. Please note that the value in the bucket used as the label is not included in the bucket, which it labels. For example, in the original series the bucket &lt;code&gt;2000-01-01 00:03:00&lt;/code&gt; contains the value 3, but the summed value in the resampled bucket with the label &lt;code&gt;2000-01-01 00:03:00&lt;/code&gt; does not include 3 (if it did, the summed value would be 6, not 3). To include this value close the right side of the bin interval as illustrated in the example below this one.</source>
          <target state="translated">위와 같이 시리즈를 3 분 빈으로 다운 샘플링하지만 왼쪽 대신 오른쪽 가장자리를 사용하여 각 빈에 레이블을 지정하십시오. 레이블로 사용 된 버킷의 값은 레이블이있는 버킷에 포함되지 않습니다. 예를 들어, 원래 시리즈에서 버킷 &lt;code&gt;2000-01-01 00:03:00&lt;/code&gt; 에는 값 3이 포함되지만 레이블이 &lt;code&gt;2000-01-01 00:03:00&lt;/code&gt; 인 리샘플링 된 버킷의 합계 값 에는 3 ( 만약 그렇다면, 합산 된 값은 3이 아닌 6이 될 것입니다. 이 값을 포함 시키려면 아래의 예와 같이 빈 간격의 오른쪽을 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="def55660a766ae654ab8de753f72cd68f1deb937" translate="yes" xml:space="preserve">
          <source>Draw a box plot from a DataFrame with four columns of randomly generated data.</source>
          <target state="translated">임의로 생성 된 4 개의 데이터 열이있는 DataFrame에서 상자 그림을 그립니다.</target>
        </trans-unit>
        <trans-unit id="e960874b21c390bd66d94e46fe611b469c142d96" translate="yes" xml:space="preserve">
          <source>Draw a box plot from a Series object.</source>
          <target state="translated">Series 객체에서 상자 그림을 그립니다.</target>
        </trans-unit>
        <trans-unit id="5dda623a6d466a3786920c45d56c94e6777f6440" translate="yes" xml:space="preserve">
          <source>Draw a box plot in matplotlib.</source>
          <target state="translated">matplotlib에 상자 그림을 그립니다.</target>
        </trans-unit>
        <trans-unit id="64d2f047de77cfeb76193b9a678d41513a8b88d8" translate="yes" xml:space="preserve">
          <source>Draw a histogram with Series&amp;rsquo; data.</source>
          <target state="translated">Series의 데이터로 히스토그램을 그립니다.</target>
        </trans-unit>
        <trans-unit id="61357227db99aafe57155d188e7f627c07fd2cda" translate="yes" xml:space="preserve">
          <source>Draw a matrix of scatter plots.</source>
          <target state="translated">산점도 행렬을 그립니다.</target>
        </trans-unit>
        <trans-unit id="ede0af29fd8fafd6140d5dbb780c71d4f125624b" translate="yes" xml:space="preserve">
          <source>Draw a stacked area plot.</source>
          <target state="translated">누적 면적 플롯을 그립니다.</target>
        </trans-unit>
        <trans-unit id="2b04d9a73ed455e76976b3359086ec7cea88a931" translate="yes" xml:space="preserve">
          <source>Draw an area plot based on basic business metrics:</source>
          <target state="translated">기본 비즈니스 메트릭을 기반으로 면적 플롯을 그립니다.</target>
        </trans-unit>
        <trans-unit id="0d0beebd4c468bfa9e154eb04f38c43785ff756e" translate="yes" xml:space="preserve">
          <source>Draw an area plot for a single column:</source>
          <target state="translated">단일 열에 대한 면적 플롯을 그립니다.</target>
        </trans-unit>
        <trans-unit id="be78724794c264078f7d8d966389ea7c432246aa" translate="yes" xml:space="preserve">
          <source>Draw bar chart in the cell backgrounds.</source>
          <target state="translated">셀 배경에서 막대 차트를 그립니다.</target>
        </trans-unit>
        <trans-unit id="b6363c93bffb37c7c525a065be4d55055fe42936" translate="yes" xml:space="preserve">
          <source>Draw histogram of the input series using matplotlib.</source>
          <target state="translated">matplotlib을 사용하여 입력 계열의 히스토그램을 그립니다.</target>
        </trans-unit>
        <trans-unit id="9bba38bc26fb9423b2b624c8e05479b1b7c45885" translate="yes" xml:space="preserve">
          <source>Draw histograms per DataFrame&amp;rsquo;s Series.</source>
          <target state="translated">DataFrame 시리즈마다 히스토그램을 그립니다.</target>
        </trans-unit>
        <trans-unit id="b92a03087348c848961408502b4d92892e61ba03" translate="yes" xml:space="preserve">
          <source>Draw one histogram of the DataFrame&amp;rsquo;s columns.</source>
          <target state="translated">DataFrame 열의 히스토그램 하나를 그립니다.</target>
        </trans-unit>
        <trans-unit id="65dec93bf30568f64ab789e6a98169f62e82d032" translate="yes" xml:space="preserve">
          <source>Draw with a different</source>
          <target state="translated">다른 것으로 그리기</target>
        </trans-unit>
        <trans-unit id="8c6c6a1ba341e1953a47616c5da6f375a05a5af6" translate="yes" xml:space="preserve">
          <source>Draw with a different &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">다른 &lt;code&gt;x&lt;/code&gt; 로 그리기 :</target>
        </trans-unit>
        <trans-unit id="e93a3b567b13dba63e9b268b9e6c60b49f7424d9" translate="yes" xml:space="preserve">
          <source>Drawbacks</source>
          <target state="translated">Drawbacks</target>
        </trans-unit>
        <trans-unit id="108427301ccbbf77f782e474a9beba61dd26b294" translate="yes" xml:space="preserve">
          <source>Drop 2nd level label in MultiIndex Series</source>
          <target state="translated">MultiIndex 시리즈에서 2 단계 레이블 삭제</target>
        </trans-unit>
        <trans-unit id="40a2bb978e27d6d0344affcba76b5909a8b8260b" translate="yes" xml:space="preserve">
          <source>Drop NA values from a Series.</source>
          <target state="translated">Series에서 NA 값을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="be4e39db09c8c8b7b2562abb8ede568a2387ff75" translate="yes" xml:space="preserve">
          <source>Drop NaNs</source>
          <target state="translated">NaN 삭제</target>
        </trans-unit>
        <trans-unit id="9e092c5c14dc77c7bbd805dcdbb5275e22ba2756" translate="yes" xml:space="preserve">
          <source>Drop NaNs (column-wise)</source>
          <target state="translated">NaN 삭제 (열 단위)</target>
        </trans-unit>
        <trans-unit id="81bc534fe6882c953b43df811e283890ba92339d" translate="yes" xml:space="preserve">
          <source>Drop a row by index</source>
          <target state="translated">인덱스로 행을 삭제</target>
        </trans-unit>
        <trans-unit id="19545c0571c3c324b1c1a3ced8e2ff8a35d977dc" translate="yes" xml:space="preserve">
          <source>Drop columns</source>
          <target state="translated">열 삭제</target>
        </trans-unit>
        <trans-unit id="88de99fdc36793fce3828264d05d5dfb568ef394" translate="yes" xml:space="preserve">
          <source>Drop columns and/or rows of MultiIndex DataFrame</source>
          <target state="translated">MultiIndex DataFrame의 열 및 / 또는 행 삭제</target>
        </trans-unit>
        <trans-unit id="6d8c61a37b26df681a35b72fcdc0291ad5269c66" translate="yes" xml:space="preserve">
          <source>Drop labels B en C</source>
          <target state="translated">드롭 레이블 B en C</target>
        </trans-unit>
        <trans-unit id="a2b584bd1cb7a1261c2b2bb4395ae487eccb68e3" translate="yes" xml:space="preserve">
          <source>Drop missing indices from result.</source>
          <target state="translated">결과에서 누락 된 인덱스를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="164bcdce8dd8dc77bb3c967c02934e24e8609d6e" translate="yes" xml:space="preserve">
          <source>Drop missing indices.</source>
          <target state="translated">누락 된 인덱스를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="1fafc2076493863b294cbb25cf023a947e63e795" translate="yes" xml:space="preserve">
          <source>Drop missing values.</source>
          <target state="translated">결 측값을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="af18a275e92d742b03494fc3c62f3ee2d26add6b" translate="yes" xml:space="preserve">
          <source>Drop rows or columns which contain NA values.</source>
          <target state="translated">NA 값을 포함하는 행 또는 열을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="eb8e2ea85717ee20257e8ebf6c3803374502a053" translate="yes" xml:space="preserve">
          <source>Drop specified labels from rows or columns.</source>
          <target state="translated">행이나 열에서 지정된 레이블을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="d0d348f61b422466f2b06364141675bcbd0f4904" translate="yes" xml:space="preserve">
          <source>Drop the columns where at least one element is missing.</source>
          <target state="translated">하나 이상의 요소가 누락 된 열을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="33d64cad21db8fa6d57035f982ac07da6c06f0b4" translate="yes" xml:space="preserve">
          <source>Drop the rows where all elements are missing.</source>
          <target state="translated">모든 요소가 누락 된 행을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="9f1d4bdf0f8e50bf95fff915576f44d903a54d30" translate="yes" xml:space="preserve">
          <source>Drop the rows where at least one element is missing.</source>
          <target state="translated">하나 이상의 요소가 누락 된 행을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="1b8135ca3f00100e1badcd07ab200529fa756599" translate="yes" xml:space="preserve">
          <source>Dropping axis labels with missing data: dropna</source>
          <target state="translated">누락 된 데이터가있는 축 레이블 삭제 : dropna</target>
        </trans-unit>
        <trans-unit id="ad1274aacd10fa153b1d0c4ec256985a1c33f84f" translate="yes" xml:space="preserve">
          <source>Dropping labels from an axis</source>
          <target state="translated">축에서 레이블 삭제</target>
        </trans-unit>
        <trans-unit id="79dbdf7eba678e5137c040075888a2396065c624" translate="yes" xml:space="preserve">
          <source>Dtype and sparsity information.</source>
          <target state="translated">Dtype 및 희소성 정보.</target>
        </trans-unit>
        <trans-unit id="1c90ef93db37cfd01516109b8a76a090833a36e3" translate="yes" xml:space="preserve">
          <source>Dtype comparisons work:</source>
          <target state="translated">Dtype 비교는 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="145179585587cbb8c5b8eb10f1a4b8932c4559f4" translate="yes" xml:space="preserve">
          <source>Dtype for data stored in &lt;a href=&quot;api/pandas.sparsearray#pandas.SparseArray&quot;&gt;&lt;code&gt;SparseArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 저장된 데이터에 대한 D- 타입 &lt;a href=&quot;api/pandas.sparsearray#pandas.SparseArray&quot;&gt; &lt;code&gt;SparseArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b87b24da070c9d765cc08c099ebb2bf7547c413" translate="yes" xml:space="preserve">
          <source>Dtype for data stored in &lt;a href=&quot;pandas.sparsearray#pandas.SparseArray&quot;&gt;&lt;code&gt;SparseArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 저장된 데이터에 대한 D- 타입 &lt;a href=&quot;pandas.sparsearray#pandas.SparseArray&quot;&gt; &lt;code&gt;SparseArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3981725cdf8cd548b84de12fae8ab5bd0cb4dfcd" translate="yes" xml:space="preserve">
          <source>Dtype for data stored in &lt;code&gt;SparseArray&lt;/code&gt;.</source>
          <target state="translated">에 저장된 데이터에 대한 D- 타입 &lt;code&gt;SparseArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e3c9252f671ea9596d2a73a2544e1f4170c39ff" translate="yes" xml:space="preserve">
          <source>Dtype introspection</source>
          <target state="translated">Dtype 검사</target>
        </trans-unit>
        <trans-unit id="7a732e96a843c85357265deba4e546ef43b1c7cf" translate="yes" xml:space="preserve">
          <source>Dtype specifications</source>
          <target state="translated">Dtype 사양</target>
        </trans-unit>
        <trans-unit id="5c75c136bcc375f9b879adefb4d3552ab9c7c0ae" translate="yes" xml:space="preserve">
          <source>Dtypes</source>
          <target state="translated">Dtypes</target>
        </trans-unit>
        <trans-unit id="c2dfdb766413c10942fabb5de249d937018530b2" translate="yes" xml:space="preserve">
          <source>Due to daylight saving time, one wall clock time can occur twice when shifting from summer to winter time; fold describes whether the datetime-like corresponds to the first (0) or the second time (1) the wall clock hits the ambiguous time</source>
          <target state="translated">일광 절약 시간으로 인해 여름 시간에서 겨울 시간으로 전환 할 때 벽시계 시간이 두 번 발생할 수 있습니다. fold는 datetime-like가 첫 번째 (0) 또는 두 번째 (1) 벽시계가 모호한 시간에 해당하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c16b573d394d80c3da20dd8a1dd3281580cff0b4" translate="yes" xml:space="preserve">
          <source>Due to the limited support for timedelta&amp;rsquo;s in the different database flavors, columns with type &lt;code&gt;timedelta64&lt;/code&gt; will be written as integer values as nanoseconds to the database and a warning will be raised.</source>
          <target state="translated">때문에 다른 데이터베이스 맛에 timedelta의에 대한 제한된 지원에 입력과 열 &lt;code&gt;timedelta64&lt;/code&gt; 는 데이터베이스에 나노초로 정수 값으로 기록됩니다 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="10bea2b234344f2cdbfc15a69a434a7f3739f7ea" translate="yes" xml:space="preserve">
          <source>Dummy argument for consistency with Series</source>
          <target state="translated">시리즈와의 일관성을위한 더미 논쟁</target>
        </trans-unit>
        <trans-unit id="1b22cf098bfda8d2f9ed1a4d5a7ee0fa0aaf3a60" translate="yes" xml:space="preserve">
          <source>Dummy argument for consistency with Series.</source>
          <target state="translated">시리즈와의 일관성을위한 더미 인수.</target>
        </trans-unit>
        <trans-unit id="d61ef14814f319def69f6cc72ece262d7dd85606" translate="yes" xml:space="preserve">
          <source>Dummy variables corresponding to values of the Series.</source>
          <target state="translated">Series의 값에 해당하는 더미 변수.</target>
        </trans-unit>
        <trans-unit id="60fba4f8e978823cb00be06f94e4fc5cb8717cec" translate="yes" xml:space="preserve">
          <source>Dummy-coded data.</source>
          <target state="translated">더미 코딩 된 데이터.</target>
        </trans-unit>
        <trans-unit id="b55cce3210f8eb1244f6f964cdc6c0b31c664ba6" translate="yes" xml:space="preserve">
          <source>Duplicate Label Detection</source>
          <target state="translated">중복 라벨 감지</target>
        </trans-unit>
        <trans-unit id="ec7eb3a2bfcb6c52f93d75f87b04e69e0c1416ee" translate="yes" xml:space="preserve">
          <source>Duplicate Label Propagation</source>
          <target state="translated">중복 레이블 전파</target>
        </trans-unit>
        <trans-unit id="9a968295612e899a53bc76ee2d3ec76ab22ea6c1" translate="yes" xml:space="preserve">
          <source>Duplicate Labels</source>
          <target state="translated">중복 라벨</target>
        </trans-unit>
        <trans-unit id="382dfcc8ac11e32c4880b7fdc48aaf02bad1926e" translate="yes" xml:space="preserve">
          <source>Duplicate column names and non-string columns names are not supported</source>
          <target state="translated">중복 열 이름 및 문자열이 아닌 열 이름은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13442251491dfc5d16987e9528d9b5f85ce6ecee" translate="yes" xml:space="preserve">
          <source>Duplicate column names and non-string columns names are not supported.</source>
          <target state="translated">중복 열 이름 및 문자열이 아닌 열 이름은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="21bb0db6feb6ab980a01a15124b37760dfafca86" translate="yes" xml:space="preserve">
          <source>Duplicate columns will be specified as &amp;lsquo;X&amp;rsquo;, &amp;lsquo;X.1&amp;rsquo;&amp;hellip;&amp;rsquo;X.N&amp;rsquo;, rather than &amp;lsquo;X&amp;rsquo;&amp;hellip;&amp;rsquo;X&amp;rsquo;. Passing in &lt;code&gt;False&lt;/code&gt; will cause data to be overwritten if there are duplicate names in the columns.</source>
          <target state="translated">중복 열은 'X'&amp;hellip; 'X'가 아니라 'X', 'X.1'&amp;hellip; 'X.N'으로 지정됩니다. &lt;code&gt;False&lt;/code&gt; 를 전달 하면 열에 중복 된 이름이있는 경우 데이터를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="988ccf123f50106db918f969bd0630792d3bd25c" translate="yes" xml:space="preserve">
          <source>Duplicate columns will be specified as &amp;lsquo;X&amp;rsquo;, &amp;lsquo;X.1&amp;rsquo;, &amp;hellip;&amp;rsquo;X.N&amp;rsquo;, rather than &amp;lsquo;X&amp;rsquo;&amp;hellip;&amp;rsquo;X&amp;rsquo;. Passing in False will cause data to be overwritten if there are duplicate names in the columns.</source>
          <target state="translated">중복 열은 'X'&amp;hellip; 'X'가 아닌 'X', 'X.1',&amp;hellip; 'X.N'으로 지정됩니다. False로 전달하면 열에 중복 된 이름이있는 경우 데이터를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="e2ec01ddd4626730ea03407eeedca5510af44695" translate="yes" xml:space="preserve">
          <source>Duplicate data</source>
          <target state="translated">중복 데이터</target>
        </trans-unit>
        <trans-unit id="d8652f75e621a5df4d66f15711157cf3d006476c" translate="yes" xml:space="preserve">
          <source>Duplicate each string in the Series or Index.</source>
          <target state="translated">시리즈 또는 색인에서 각 문자열을 복제하십시오.</target>
        </trans-unit>
        <trans-unit id="35d5e56841c69c50de01ab52893369c23c36720c" translate="yes" xml:space="preserve">
          <source>Duplicate names parsing</source>
          <target state="translated">중복 이름 구문 분석</target>
        </trans-unit>
        <trans-unit id="ec197801ce20557f82fadff04725e7ed3984d7fc" translate="yes" xml:space="preserve">
          <source>Duplicate rows can be written to tables, but are filtered out in selection (with the last items being selected; thus a table is unique on major, minor pairs)</source>
          <target state="translated">중복 행을 테이블에 쓸 수 있지만 선택시 필터링됩니다 (마지막 항목이 선택되어 있으므로 테이블은 주, 부 쌍에서 고유함).</target>
        </trans-unit>
        <trans-unit id="2112abb26df4e1137b21eca5c62b8e147afe09fc" translate="yes" xml:space="preserve">
          <source>Duplicate values (&lt;code&gt;s.str.repeat(3)&lt;/code&gt; equivalent to &lt;code&gt;x * 3&lt;/code&gt;)</source>
          <target state="translated">중복 값 ( &lt;code&gt;s.str.repeat(3)&lt;/code&gt; 에 상응하는 &lt;code&gt;x * 3&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="241b9a11c9f9f3b970918ff7cf7527f3ff46f86a" translate="yes" xml:space="preserve">
          <source>Duplicated values are indicated as &lt;code&gt;True&lt;/code&gt; values in the resulting Series. Either all duplicates, all except the first or all except the last occurrence of duplicates can be indicated.</source>
          <target state="translated">중복 된 값은 결과 계열에서 &lt;code&gt;True&lt;/code&gt; 값으로 표시됩니다 . 첫 번째 복제를 제외한 모든 복제본 또는 마지막 복제를 제외한 모든 복제본을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="875b783f984231029994ee15ba2c350731984f19" translate="yes" xml:space="preserve">
          <source>Duplicated values are indicated as &lt;code&gt;True&lt;/code&gt; values in the resulting array. Either all duplicates, all except the first, or all except the last occurrence of duplicates can be indicated.</source>
          <target state="translated">중복 된 값은 결과 배열에서 &lt;code&gt;True&lt;/code&gt; 값으로 표시됩니다 . 모든 복제본, 첫 번째 복제본을 제외한 모든 복제본 또는 마지막 복제물을 제외한 모든 복제본을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53104a339587d0f55179d00c5c1051994a349614" translate="yes" xml:space="preserve">
          <source>During parsing a number of disallowed characters inside the backtick quoted string are replaced by strings that are allowed as a Python identifier. These characters include all operators in Python, the space character, the question mark, the exclamation mark, the dollar sign, and the euro sign. For other characters that fall outside the ASCII range (U+0001..U+007F) and those that are not further specified in PEP 3131, the query parser will raise an error. This excludes whitespace different than the space character, but also the hashtag (as it is used for comments) and the backtick itself (backtick can also not be escaped).</source>
          <target state="translated">구문 분석하는 동안 백틱 인용 문자열 내의 허용되지 않는 여러 문자는 Python 식별자로 허용되는 문자열로 대체됩니다. 이러한 문자에는 Python의 모든 연산자, 공백 문자, 물음표, 느낌표, 달러 기호 및 유로 기호가 포함됩니다. ASCII 범위 (U + 0001..U + 007F)를 벗어나는 다른 문자와 PEP 3131에 더 이상 지정되지 않은 문자의 경우 쿼리 구문 분석기가 오류를 발생시킵니다. 여기에는 공백 문자와 다른 공백은 제외되지만 해시 태그 (주석에 사용됨) 및 백틱 자체 (백틱도 이스케이프 될 수 없음)도 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="a05ebde6e1d0c48fe628440ecd9e455727bb1e8b" translate="yes" xml:space="preserve">
          <source>Dynamically reduce a list of criteria using a binary operators</source>
          <target state="translated">이항 연산자를 사용하여 기준 목록을 동적으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="b096fb924a35243e991b8993f18f87f655bdd27b" translate="yes" xml:space="preserve">
          <source>ENH: Enhancement, new functionality</source>
          <target state="translated">ENH : 향상, 새로운 기능</target>
        </trans-unit>
        <trans-unit id="2d145b777f2d85242b57e4cf7b6b7486a4d5cfc8" translate="yes" xml:space="preserve">
          <source>EPEL repository</source>
          <target state="translated">EPEL 저장소</target>
        </trans-unit>
        <trans-unit id="0c35af59922d6fb32c048527e86fc09a75f27fc4" translate="yes" xml:space="preserve">
          <source>EWM.corr()</source>
          <target state="translated">EWM.corr()</target>
        </trans-unit>
        <trans-unit id="6dfa103b973e1071479462a698646aa041b698af" translate="yes" xml:space="preserve">
          <source>EWM.cov()</source>
          <target state="translated">EWM.cov()</target>
        </trans-unit>
        <trans-unit id="d789ad7e2359fc1fed605937df017e8106dcf5bf" translate="yes" xml:space="preserve">
          <source>EWM.mean()</source>
          <target state="translated">EWM.mean()</target>
        </trans-unit>
        <trans-unit id="3b31559519d3b709952667011c437b5cd0531e28" translate="yes" xml:space="preserve">
          <source>EWM.std()</source>
          <target state="translated">EWM.std()</target>
        </trans-unit>
        <trans-unit id="577cb41900a97c729c95f60c1e3ac44670f47466" translate="yes" xml:space="preserve">
          <source>EWM.var()</source>
          <target state="translated">EWM.var()</target>
        </trans-unit>
        <trans-unit id="2dd324a512d78c7af08fc0c5cd433a3e9e7bb899" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Series&lt;/code&gt; in a &lt;code&gt;DataFrame&lt;/code&gt; can be plotted on a different axis with the &lt;code&gt;subplots&lt;/code&gt; keyword:</source>
          <target state="translated">각 &lt;code&gt;Series&lt;/code&gt; A의 &lt;code&gt;DataFrame&lt;/code&gt; 는 와 다른 축에 표시 할 수 &lt;code&gt;subplots&lt;/code&gt; 키워드 :</target>
        </trans-unit>
        <trans-unit id="f04df6df6d519b15a66af0ae6843a6f0ad5a5e29" translate="yes" xml:space="preserve">
          <source>Each Series in the DataFrame is represented as a evenly distributed slice on a circle. Each data point is rendered in the circle according to the value on each Series. Highly correlated</source>
          <target state="translated">DataFrame의 각 시리즈는 원에 고르게 분포 된 슬라이스로 표시됩니다. 각 데이터 포인트는 각 시리즈의 값에 따라 원으로 렌더링됩니다. 높은 상관 관계</target>
        </trans-unit>
        <trans-unit id="3869b61940cd1f5599403949c16b66dfd496b577" translate="yes" xml:space="preserve">
          <source>Each Series in the DataFrame is represented as a evenly distributed slice on a circle. Each data point is rendered in the circle according to the value on each Series. Highly correlated &lt;code&gt;Series&lt;/code&gt; in the &lt;code&gt;DataFrame&lt;/code&gt; are placed closer on the unit circle.</source>
          <target state="translated">DataFrame의 각 계열은 원에서 균일하게 분산 된 조각으로 표시됩니다. 각 데이터 포인트는 각 시리즈의 값에 따라 원 안에 렌더링됩니다. &lt;code&gt;DataFrame&lt;/code&gt; 에서 고도로 상관 된 &lt;code&gt;Series&lt;/code&gt; 는 단위 원에 더 가깝게 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="86acf40ed3fbef9f40b21ca1ae22f839f8ab9d1f" translate="yes" xml:space="preserve">
          <source>Each array-like gives one level&amp;rsquo;s value for each data point. len(arrays) is the number of levels.</source>
          <target state="translated">각 배열 형은 각 데이터 포인트에 대해 하나의 레벨 값을 제공합니다. len (배열)은 레벨 수입니다.</target>
        </trans-unit>
        <trans-unit id="31c1b2e0f38a0082e5dca3545f0fdcaecd76315a" translate="yes" xml:space="preserve">
          <source>Each column of the DataFrame is stored as a &lt;a href=&quot;pandas.arrays.sparsearray#pandas.arrays.SparseArray&quot;&gt;&lt;code&gt;arrays.SparseArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DataFrame 각각의 열은로서 저장된다 &lt;a href=&quot;pandas.arrays.sparsearray#pandas.arrays.SparseArray&quot;&gt; &lt;code&gt;arrays.SparseArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d018bcfdd928b0b3711d20a3a9ca9053606c7e6c" translate="yes" xml:space="preserve">
          <source>Each column of the DataFrame is stored as a &lt;code&gt;SparseArray&lt;/code&gt;.</source>
          <target state="translated">DataFrame 각각의 열은로서 저장된다 &lt;code&gt;SparseArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56fa224e60c0fd80b35d7c5c2d731ccddc9875ca" translate="yes" xml:space="preserve">
          <source>Each data structure has several &lt;em&gt;constructor properties&lt;/em&gt; for returning a new data structure as the result of an operation. By overriding these properties, you can retain subclasses through &lt;code&gt;pandas&lt;/code&gt; data manipulations.</source>
          <target state="translated">각 데이터 구조에는 작업 결과로 새 데이터 구조를 반환하기위한 여러 &lt;em&gt;생성자 속성&lt;/em&gt; 이 있습니다. 이러한 속성을 재정의함으로써 &lt;code&gt;pandas&lt;/code&gt; 데이터 조작을 통해 서브 클래스를 유지할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6b49a10db22b4daa3836d4183aa855c3fc401b4" translate="yes" xml:space="preserve">
          <source>Each element of</source>
          <target state="translated">의 각 요소</target>
        </trans-unit>
        <trans-unit id="c3bdeead196f6640c60c1d7b1261ff912f1c6fa3" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;left&lt;/code&gt; must be less than or equal to the &lt;code&gt;right&lt;/code&gt; element at the same position. If an element is missing, it must be missing in both &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;. A TypeError is raised when using an unsupported type for &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;. At the moment, &amp;lsquo;category&amp;rsquo;, &amp;lsquo;object&amp;rsquo;, and &amp;lsquo;string&amp;rsquo; subtypes are not supported.</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; 각 요소 는 동일한 위치에서 &lt;code&gt;right&lt;/code&gt; 요소 보다 작거나 같아야합니다 . 요소가 누락 된 경우 &lt;code&gt;left&lt;/code&gt; 및 &lt;code&gt;right&lt;/code&gt; 모두에서 누락되어야합니다 . &lt;code&gt;left&lt;/code&gt; 또는 &lt;code&gt;right&lt;/code&gt; 에 지원되지 않는 유형을 사용하면 TypeError가 발생 합니다. 현재 'category', 'object'및 'string'하위 유형은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="107f3da2d3b27126310814590909068d1f72396a" translate="yes" xml:space="preserve">
          <source>Each element will be an instance of the scalar type for this array, &lt;code&gt;cls.dtype.type&lt;/code&gt; or be converted into this type in this method.</source>
          <target state="translated">각 요소는이 배열, &lt;code&gt;cls.dtype.type&lt;/code&gt; 에 대한 스칼라 유형의 인스턴스가 되거나이 메소드에서이 유형으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="c4bea018c9b28447ff1b2f2f401568ff5bed077b" translate="yes" xml:space="preserve">
          <source>Each element will be an instance of the scalar type for this array, &lt;code&gt;cls.dtype.type&lt;/code&gt;.</source>
          <target state="translated">각 요소는이 배열에 대한 스칼라 유형 인 &lt;code&gt;cls.dtype.type&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="62d6b43c95a9a49f1ca98155bd1215aad85816ec" translate="yes" xml:space="preserve">
          <source>Each group is endowed the attribute &amp;lsquo;name&amp;rsquo; in case you need to know which group you are working on.</source>
          <target state="translated">작업중인 그룹을 알아야하는 경우 각 그룹에는 '이름'속성이 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="979fa3a0a58cb15e12dab4dab8aaaa84266f43b1" translate="yes" xml:space="preserve">
          <source>Each individual table_style should be a dictionary with &lt;code&gt;selector&lt;/code&gt; and &lt;code&gt;props&lt;/code&gt; keys. &lt;code&gt;selector&lt;/code&gt; should be a CSS selector that the style will be applied to (automatically prefixed by the table&amp;rsquo;s UUID) and &lt;code&gt;props&lt;/code&gt; should be a list of tuples with &lt;code&gt;(attribute, value)&lt;/code&gt;.</source>
          <target state="translated">각각의 개별 table_style은 &lt;code&gt;selector&lt;/code&gt; 및 &lt;code&gt;props&lt;/code&gt; 키 가있는 사전이어야 합니다. &lt;code&gt;selector&lt;/code&gt; 는 스타일을 적용 할 CSS 선택기 여야하고 (테이블의 UUID로 자동 접두사가 붙습니다) &lt;code&gt;props&lt;/code&gt; 는 &lt;code&gt;(attribute, value)&lt;/code&gt; 가있는 튜플 목록이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="88cffc79768748d3aa6a486dfc44adb555926052" translate="yes" xml:space="preserve">
          <source>Each iterable has unique labels for each level of the index.</source>
          <target state="translated">각 iterable에는 각 색인 레벨마다 고유 한 레이블이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eda884dc7e75e2bafee5d92579c6851ff12484de" translate="yes" xml:space="preserve">
          <source>Each node returned is not a pandas storage object.</source>
          <target state="translated">반환 된 각 노드는 pandas 스토리지 객체가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="73db8bb28c2f7c0feb28e3d5d503c7a459fb9a9a" translate="yes" xml:space="preserve">
          <source>Each of Series or DataFrame have a &lt;code&gt;get&lt;/code&gt; method which can return a default value.</source>
          <target state="translated">Series 또는 DataFrame 각각 에는 기본값을 반환 할 수 있는 &lt;code&gt;get&lt;/code&gt; 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="61cdb517ea978192ad739cd9249c6dbdbfdf3b49" translate="yes" xml:space="preserve">
          <source>Each of returned indexes corresponds to the position where the substring is fully contained between [start:end]. Return -1 on failure. Equivalent to standard &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.find&quot;&gt;&lt;code&gt;str.find()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 된 각 인덱스는 [start : end] 사이에 하위 문자열이 완전히 포함 된 위치에 해당합니다. 실패하면 -1을 반환합니다. 표준 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.find&quot;&gt; &lt;code&gt;str.find()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b5688d02573eeaff1a5173d7cd0a130611f4d063" translate="yes" xml:space="preserve">
          <source>Each of returned indexes corresponds to the position where the substring is fully contained between [start:end]. Return -1 on failure. Equivalent to standard &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.rfind&quot;&gt;&lt;code&gt;str.rfind()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 된 각 인덱스는 [start : end] 사이에 하위 문자열이 완전히 포함 된 위치에 해당합니다. 실패하면 -1을 반환합니다. 표준 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.rfind&quot;&gt; &lt;code&gt;str.rfind()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7cabcd6dc7b649e1fea21346213ed5119ed10485" translate="yes" xml:space="preserve">
          <source>Each of the returned indexes corresponds to the position where the substring is fully contained between [start:end]. This is the same as &lt;code&gt;str.find&lt;/code&gt; except instead of returning -1, it raises a ValueError when the substring is not found. Equivalent to standard &lt;code&gt;str.index&lt;/code&gt;.</source>
          <target state="translated">반환 된 각 인덱스는 [start : end] 사이에 하위 문자열이 완전히 포함 된 위치에 해당합니다. -1을 반환하는 대신 부분 문자열을 찾을 수 없을 때 ValueError를 발생 &lt;code&gt;str.find&lt;/code&gt; 점을 제외하면 str.find 와 동일 합니다. 표준 &lt;code&gt;str.index&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="40f787a4de9ace78e5fd178f5a2c9506188f09a7" translate="yes" xml:space="preserve">
          <source>Each of the returned indexes corresponds to the position where the substring is fully contained between [start:end]. This is the same as &lt;code&gt;str.rfind&lt;/code&gt; except instead of returning -1, it raises a ValueError when the substring is not found. Equivalent to standard &lt;code&gt;str.rindex&lt;/code&gt;.</source>
          <target state="translated">반환 된 각 인덱스는 [start : end] 사이에 하위 문자열이 완전히 포함 된 위치에 해당합니다. -1을 반환하는 대신 부분 문자열을 찾을 수 없을 때 ValueError를 발생 &lt;code&gt;str.rfind&lt;/code&gt; 점을 제외하면 str.rfind 와 동일 합니다. 표준 &lt;code&gt;str.rindex&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="48a8e34bbea4f54f181ecd64fc1af2053c887067" translate="yes" xml:space="preserve">
          <source>Each of these calls is instant because the result isn&amp;rsquo;t being computed yet. We&amp;rsquo;re just building up a list of computation to do when someone needs the result. Dask knows that the return type of a &lt;code&gt;pandas.Series.value_counts&lt;/code&gt; is a pandas Series with a certain dtype and a certain name. So the Dask version returns a Dask Series with the same dtype and the same name.</source>
          <target state="translated">결과가 아직 계산되지 않았기 때문에 이러한 각 호출은 즉각적입니다. 누군가 결과가 필요할 때 수행 할 계산 목록을 작성하는 중입니다. Dask는 &lt;code&gt;pandas.Series.value_counts&lt;/code&gt; 의 반환 유형이 특정 dtype 및 특정 이름을 가진 pandas Series 임을 알고 있습니다. 따라서 Dask 버전은 동일한 dtype 및 동일한 이름을 가진 Dask 시리즈를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f07de398ca3be9efffef9970965e6f8c701df02" translate="yes" xml:space="preserve">
          <source>Each of these can be specified in two ways:</source>
          <target state="translated">이들 각각은 두 가지 방법으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54d91ac60b622212bee7b33746e90bf1f76a3e0b" translate="yes" xml:space="preserve">
          <source>Each row of these wide variables are assumed to be uniquely identified by</source>
          <target state="translated">이러한 와이드 변수의 각 행은 다음과 같이 고유하게 식별되는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="810c3d92837210b477f24d08da4a2d48f9486930" translate="yes" xml:space="preserve">
          <source>Each row of these wide variables are assumed to be uniquely identified by &lt;code&gt;i&lt;/code&gt; (can be a single column name or a list of column names)</source>
          <target state="translated">이 넓은 변수의 각 행은 &lt;code&gt;i&lt;/code&gt; 로 고유하게 식별되는 것으로 가정합니다 (단일 열 이름 또는 열 이름 목록 일 수 있음)</target>
        </trans-unit>
        <trans-unit id="45547bfb2620cb6bbf17f1b8801231267251b1c7" translate="yes" xml:space="preserve">
          <source>Each shared docstring will have a base template with variables, like &lt;code&gt;%(klass)s&lt;/code&gt;. The variables filled in later on using the &lt;code&gt;Substitution&lt;/code&gt; decorator. Finally, docstrings can be appended to with the &lt;code&gt;Appender&lt;/code&gt; decorator.</source>
          <target state="translated">각 공유 docstring에는 &lt;code&gt;%(klass)s&lt;/code&gt; 와 같은 변수가있는 기본 템플릿이 있습니다 . &lt;code&gt;Substitution&lt;/code&gt; 데코레이터 를 사용하여 나중에 채워지는 변수 입니다. 마지막으로, docstring을 &lt;code&gt;Appender&lt;/code&gt; 데코레이터에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3658ec2488c4eaf093a5c0ad0883dcfef10fea90" translate="yes" xml:space="preserve">
          <source>Each string in Series is split by sep and returned as a DataFrame of dummy/indicator variables.</source>
          <target state="translated">Series의 각 문자열은 sep에 의해 분할되고 더미 / 인디케이터 변수의 DataFrame으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5b38ed55a3174be9411e640ddaeef6f8721fc91c" translate="yes" xml:space="preserve">
          <source>Each subframe is endowed the attribute &amp;lsquo;name&amp;rsquo; in case you need to know which group you are working on.</source>
          <target state="translated">작업중인 그룹을 알아야하는 경우 각 서브 프레임에는 'name'속성이 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="4e86b43c67405d3f92c3df17e9ebfdda48e4b140" translate="yes" xml:space="preserve">
          <source>Each time you push to &lt;em&gt;your&lt;/em&gt; fork, a &lt;em&gt;new&lt;/em&gt; run of the tests will be triggered on the CI. You can enable the auto-cancel feature, which removes any non-currently-running tests for that same pull-request, for &lt;a href=&quot;https://docs.travis-ci.com/user/customizing-the-build/#Building-only-the-latest-commit&quot;&gt;Travis-CI here&lt;/a&gt;.</source>
          <target state="translated">당신이 누를 때마다 &lt;em&gt;당신의&lt;/em&gt; 포크하는 &lt;em&gt;새로운&lt;/em&gt; 테스트의 실행은 CI에 트리거됩니다. &lt;a href=&quot;https://docs.travis-ci.com/user/customizing-the-build/#Building-only-the-latest-commit&quot;&gt;Travis-CI에&lt;/a&gt; 대해 동일한 풀 요청에 대해 현재 실행 중이 아닌 테스트를 제거하는 자동 취소 기능을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc71ebdc6ebeec48ba837b9b5d311f59264c7cf9" translate="yes" xml:space="preserve">
          <source>Each timedelta has a defined resolution that represents the lowest OR most granular level of precision. Each level of resolution is represented by a short string as defined below:</source>
          <target state="translated">각 타임 델타에는 가장 낮은 수준 또는 가장 세분화 된 수준의 정밀도를 나타내는 해상도가 정의되어 있습니다. 각 해상도 수준은 아래에 정의 된대로 짧은 문자열로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="236f8c0c2f3efe1300739ad118846e36389afff7" translate="yes" xml:space="preserve">
          <source>Each tuple is the index of one row/column.</source>
          <target state="translated">각 튜플은 한 행 / 열의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="2606285359704adc2fe251511f5adeb24d53898b" translate="yes" xml:space="preserve">
          <source>Easter</source>
          <target state="translated">Easter</target>
        </trans-unit>
        <trans-unit id="a29bc2658f8e090a9e529893b8dc7678ed812411" translate="yes" xml:space="preserve">
          <source>Easter holiday</source>
          <target state="translated">부활절</target>
        </trans-unit>
        <trans-unit id="b95989b85bac37a2acfdab9ba64ce91d95c70cd1" translate="yes" xml:space="preserve">
          <source>Easter.apply()</source>
          <target state="translated">Easter.apply()</target>
        </trans-unit>
        <trans-unit id="71f78c6c4117219d0bd8b7313237ef3539bb214b" translate="yes" xml:space="preserve">
          <source>Easter.apply_index()</source>
          <target state="translated">Easter.apply_index()</target>
        </trans-unit>
        <trans-unit id="18a774ff80c4e866e1a6fc9804080ac5fc4bb0f9" translate="yes" xml:space="preserve">
          <source>Easter.base</source>
          <target state="translated">Easter.base</target>
        </trans-unit>
        <trans-unit id="117f7a2cfb405c4f1e663460fe3d5e843c3ecf6d" translate="yes" xml:space="preserve">
          <source>Easter.copy()</source>
          <target state="translated">Easter.copy()</target>
        </trans-unit>
        <trans-unit id="a64c3ce290ff950d00ad93e21618b487059365a5" translate="yes" xml:space="preserve">
          <source>Easter.freqstr</source>
          <target state="translated">Easter.freqstr</target>
        </trans-unit>
        <trans-unit id="e1589f6d56e997fea99706cd9f60f36e99c6001f" translate="yes" xml:space="preserve">
          <source>Easter.isAnchored()</source>
          <target state="translated">Easter.isAnchored()</target>
        </trans-unit>
        <trans-unit id="750946e5844da641cf840194928208395385950e" translate="yes" xml:space="preserve">
          <source>Easter.kwds</source>
          <target state="translated">Easter.kwds</target>
        </trans-unit>
        <trans-unit id="c3bf124c76487590e34235a519c62e73aa442ca0" translate="yes" xml:space="preserve">
          <source>Easter.name</source>
          <target state="translated">Easter.name</target>
        </trans-unit>
        <trans-unit id="d7d0455d2ae8bfa65b35bdfc79e8686f974d5cd2" translate="yes" xml:space="preserve">
          <source>Easter.nanos</source>
          <target state="translated">Easter.nanos</target>
        </trans-unit>
        <trans-unit id="97132f52f72da121d6a4153d9f705dfd8a9d3c45" translate="yes" xml:space="preserve">
          <source>Easter.normalize</source>
          <target state="translated">Easter.normalize</target>
        </trans-unit>
        <trans-unit id="50f10ef1a6bd46758b2b6e6086a90e95a9a92037" translate="yes" xml:space="preserve">
          <source>Easter.onOffset()</source>
          <target state="translated">Easter.onOffset()</target>
        </trans-unit>
        <trans-unit id="7c21a59efa785e8af76178ba9211d81b8b45bb8d" translate="yes" xml:space="preserve">
          <source>Easter.rollback()</source>
          <target state="translated">Easter.rollback()</target>
        </trans-unit>
        <trans-unit id="b08258186c8a2caa11452ce091e1a982ffa87e8e" translate="yes" xml:space="preserve">
          <source>Easter.rollforward()</source>
          <target state="translated">Easter.rollforward()</target>
        </trans-unit>
        <trans-unit id="fc84dcfd5acb60d71b225168052c612be8ca232f" translate="yes" xml:space="preserve">
          <source>Easter.rule_code</source>
          <target state="translated">Easter.rule_code</target>
        </trans-unit>
        <trans-unit id="3999a6af6346493cd0944da9f3622efaf0ed1815" translate="yes" xml:space="preserve">
          <source>Easy handling of &lt;strong&gt;missing data&lt;/strong&gt; (represented as NaN) in floating point as well as non-floating point data</source>
          <target state="translated">부동 소수점 및 비 부동 소수점 데이터에서 &lt;strong&gt;누락 된 데이터&lt;/strong&gt; (NaN으로 표시)를 쉽게 처리</target>
        </trans-unit>
        <trans-unit id="901923f5a72f0a01e2ef0971e177e40b33ae3921" translate="yes" xml:space="preserve">
          <source>Efficiently and dynamically creating new columns using applymap</source>
          <target state="translated">applymap을 사용하여 효율적이고 동적으로 새 열 생성</target>
        </trans-unit>
        <trans-unit id="0c9f362bf0b0d7206f473320bebf61de12af2e79" translate="yes" xml:space="preserve">
          <source>Efficiently infer the type of a passed val, or list-like array of values.</source>
          <target state="translated">전달 된 val의 유형 또는 목록과 같은 값의 배열을 효율적으로 유추합니다.</target>
        </trans-unit>
        <trans-unit id="59c4a061029ebb6291c893c075dac2a8ab793ab7" translate="yes" xml:space="preserve">
          <source>Efficiently infer the type of a passed val, or list-like array of values. Return a string describing the type.</source>
          <target state="translated">전달 된 val의 유형 또는 목록과 같은 값의 배열을 효율적으로 유추합니다. 유형을 설명하는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1cc67a0cde4826da830110855e0a2e644530ed8d" translate="yes" xml:space="preserve">
          <source>Either a path to a file (a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;py._path.local.LocalPath&lt;/code&gt;), URL (including http, ftp, and S3 locations), or any object with a &lt;code&gt;read()&lt;/code&gt; method (such as an open file or &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">파일의 경로 ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;py._path.local.LocalPath&lt;/code&gt; ), URL (http, ftp 및 S3 위치 포함) 또는 &lt;code&gt;read()&lt;/code&gt; 메서드가 있는 객체 (예 : open) 파일 또는 &lt;a href=&quot;https://docs.python.org/3/library/io.html#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0806e323865f06601a1d1b593f5382b282662614" translate="yes" xml:space="preserve">
          <source>Element 0: int, slice object or boolean array Element 1: The resulting sliced multiindex/index. If the key contains all levels, this will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">요소 0 : int, 슬라이스 객체 또는 부울 배열 요소 1 : 결과적으로 슬라이스 된 다중 인덱스 / 인덱스. 키에 모든 레벨이 포함되어 있으면 &lt;code&gt;None&lt;/code&gt; 이됩니다 .</target>
        </trans-unit>
        <trans-unit id="22c3e0a922cc2a3d50bb376c722c5a066ce9ef98" translate="yes" xml:space="preserve">
          <source>Element order is ignored, so &lt;code&gt;usecols=['baz', 'joe']&lt;/code&gt; is the same as &lt;code&gt;['joe', 'baz']&lt;/code&gt;.</source>
          <target state="translated">요소 순서는 무시되므로 &lt;code&gt;usecols=['baz', 'joe']&lt;/code&gt; 는 &lt;code&gt;['joe', 'baz']&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a9111cf36d99579686e371492252d1cb8d8f64fb" translate="yes" xml:space="preserve">
          <source>Element order is ignored, so &lt;code&gt;usecols=[0, 1]&lt;/code&gt; is the same as &lt;code&gt;[1, 0]&lt;/code&gt;.</source>
          <target state="translated">요소 순서는 무시되므로 &lt;code&gt;usecols=[0, 1]&lt;/code&gt; 은 &lt;code&gt;[1, 0]&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="503e5ce89f68e008a14e19be91370e18e79b2bf6" translate="yes" xml:space="preserve">
          <source>Element order is ignored, so &lt;code&gt;usecols=[0, 1]&lt;/code&gt; is the same as &lt;code&gt;[1, 0]&lt;/code&gt;. To instantiate a DataFrame from &lt;code&gt;data&lt;/code&gt; with element order preserved use &lt;code&gt;pd.read_csv(data, usecols=['foo', 'bar'])[['foo', 'bar']]&lt;/code&gt; for columns in &lt;code&gt;['foo', 'bar']&lt;/code&gt; order or &lt;code&gt;pd.read_csv(data, usecols=['foo', 'bar'])[['bar', 'foo']]&lt;/code&gt; for &lt;code&gt;['bar', 'foo']&lt;/code&gt; order.</source>
          <target state="translated">요소 순서는 무시되므로 &lt;code&gt;usecols=[0, 1]&lt;/code&gt; 은 &lt;code&gt;[1, 0]&lt;/code&gt; . 로부터 DataFrame 인스턴스화 &lt;code&gt;data&lt;/code&gt; 요소 위해 보존 용도와 &lt;code&gt;pd.read_csv(data, usecols=['foo', 'bar'])[['foo', 'bar']]&lt;/code&gt; 로 열에 &lt;code&gt;['foo', 'bar']&lt;/code&gt; 순서 또는 &lt;code&gt;pd.read_csv(data, usecols=['foo', 'bar'])[['bar', 'foo']]&lt;/code&gt; 에 대한 &lt;code&gt;['bar', 'foo']&lt;/code&gt; 순서.</target>
        </trans-unit>
        <trans-unit id="02024aea0e551e0f0b1f21fb398d88bff2590cba" translate="yes" xml:space="preserve">
          <source>Element-wise Addition, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 추가, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="77cc116b91ba6d7d768f5e707f1a4adfca7487be" translate="yes" xml:space="preserve">
          <source>Element-wise Exponential power, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 지수 거듭 제곱, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="6196927fe0db2c315d019e2f0c457f9b6b5e8b30" translate="yes" xml:space="preserve">
          <source>Element-wise Floating division, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 부동 분할, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="72eda28458a8eb96c3537be9ad464fd201a81039" translate="yes" xml:space="preserve">
          <source>Element-wise Integer division and modulo, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 정수 나누기 및 모듈로, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="732572b03ad3cb105583bb8462e5e6bb490a2c22" translate="yes" xml:space="preserve">
          <source>Element-wise Integer division, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 정수 나누기, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="55f84da6a2bbef043ccf045595c38f1f78c8e6d5" translate="yes" xml:space="preserve">
          <source>Element-wise Modulo, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 모듈로, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="146526515166dd0585ed18d94bb439e7b8acb7cd" translate="yes" xml:space="preserve">
          <source>Element-wise Multiplication, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 곱셈, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="ca8b71eafd48526072046a9a63bf1dfd0a5400a6" translate="yes" xml:space="preserve">
          <source>Element-wise Subtraction, see &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python documentation&lt;/a&gt; for more details.</source>
          <target state="translated">요소 별 빼기, 자세한 내용 은 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types&quot;&gt;Python 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="1ae1a37714d0610ea1809571f8bd3df40faf9bf6" translate="yes" xml:space="preserve">
          <source>Elements above the &lt;code&gt;threshold&lt;/code&gt; will be changed to match the &lt;code&gt;threshold&lt;/code&gt; value(s). Threshold can be a single value or an array, in the latter case it performs the truncation element-wise.</source>
          <target state="translated">&lt;code&gt;threshold&lt;/code&gt; 을 초과하는 요소 는 &lt;code&gt;threshold&lt;/code&gt; 값 과 일치하도록 변경됩니다 . 임계 값은 단일 값 또는 배열 일 수 있으며 후자의 경우 요소 단위로 절단을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5caa312a51c1d416a9b18eb195148af1ee06abd1" translate="yes" xml:space="preserve">
          <source>Elements below the &lt;code&gt;threshold&lt;/code&gt; will be changed to match the &lt;code&gt;threshold&lt;/code&gt; value(s). Threshold can be a single value or an array, in the latter case it performs the truncation element-wise.</source>
          <target state="translated">&lt;code&gt;threshold&lt;/code&gt; 미만의 요소 는 &lt;code&gt;threshold&lt;/code&gt; 값 과 일치하도록 변경됩니다 . 임계 값은 단일 값 또는 배열 일 수 있으며 후자의 경우 요소 단위로 절단을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="13b33aa0c02e53fe50adad215bfa2bfe68cd9468" translate="yes" xml:space="preserve">
          <source>Elements can be set to &lt;code&gt;NaT&lt;/code&gt; using &lt;code&gt;np.nan&lt;/code&gt; analogously to datetimes:</source>
          <target state="translated">날짜 시간과 유사하게 &lt;code&gt;np.nan&lt;/code&gt; 을 사용하여 요소를 &lt;code&gt;NaT&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d8d6c9f2d3628880be790b26c257194fad83c4a" translate="yes" xml:space="preserve">
          <source>Elements from groups are filtered if they do not satisfy the boolean criterion specified by func.</source>
          <target state="translated">func에서 지정한 부울 기준을 충족하지 않는 경우 그룹의 요소가 필터링됩니다.</target>
        </trans-unit>
        <trans-unit id="773a005673a61fa1b63fc3fd1cf8d2476d27f030" translate="yes" xml:space="preserve">
          <source>Elements in</source>
          <target state="translated">요소</target>
        </trans-unit>
        <trans-unit id="6a5a13010537642f63040189901c08f9b1c09480" translate="yes" xml:space="preserve">
          <source>Elements in &lt;code&gt;data&lt;/code&gt; that are &lt;code&gt;fill_value&lt;/code&gt; are not stored in the SparseArray. For memory savings, this should be the most common value in &lt;code&gt;data&lt;/code&gt;. By default, &lt;code&gt;fill_value&lt;/code&gt; depends on the dtype of &lt;code&gt;data&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;fill_value&lt;/code&gt; 인 &lt;code&gt;data&lt;/code&gt; 요소 는 SparseArray 에 저장되지 않습니다. 메모리 절약을 위해서는 &lt;code&gt;data&lt;/code&gt; 에서 가장 일반적인 값이어야합니다 . 기본적으로 &lt;code&gt;fill_value&lt;/code&gt; 는 &lt;code&gt;data&lt;/code&gt; 의 dtype에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="77b5eb8f62e2448bc78867bd7f5fbbf0033b80af" translate="yes" xml:space="preserve">
          <source>Elements in &lt;code&gt;data&lt;/code&gt; that are &lt;code&gt;fill_value&lt;/code&gt; are not stored.</source>
          <target state="translated">요소 &lt;code&gt;data&lt;/code&gt; 입니다 &lt;code&gt;fill_value&lt;/code&gt; 를가 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e917d82dc7f4daa4da37d4e1a2902215f6bbc82c" translate="yes" xml:space="preserve">
          <source>Elements in the split lists can be accessed using &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt; notation:</source>
          <target state="translated">분할 목록의 요소는 &lt;code&gt;get&lt;/code&gt; 또는 &lt;code&gt;[]&lt;/code&gt; 표기법을 사용하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74b8286619a5ad7924b7c9e9c4b30845457766fe" translate="yes" xml:space="preserve">
          <source>Elements of given indices.</source>
          <target state="translated">주어진 지수의 요소.</target>
        </trans-unit>
        <trans-unit id="80e355b942f33179ff3b0468b6c5c1917dec9678" translate="yes" xml:space="preserve">
          <source>Elements that do not match return a row filled with &lt;code&gt;NaN&lt;/code&gt;. Thus, a Series of messy strings can be &amp;ldquo;converted&amp;rdquo; into a like-indexed Series or DataFrame of cleaned-up or more useful strings, without necessitating &lt;code&gt;get()&lt;/code&gt; to access tuples or &lt;code&gt;re.match&lt;/code&gt; objects. The dtype of the result is always object, even if no match is found and the result only contains &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">일치하지 않는 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 채워진 행을 반환 합니다. 따라서 일련의 지저분한 문자열은 튜플 또는 &lt;code&gt;re.match&lt;/code&gt; 객체 에 액세스하기 &lt;code&gt;get()&lt;/code&gt; 을 사용할 필요없이 정리 된 또는 더 유용한 문자열의 유사한 인덱스 Series 또는 DataFrame으로 &quot;변환&quot;될 수 있습니다 . 결과의 dtype은 일치하는 항목이없고 결과에 &lt;code&gt;NaN&lt;/code&gt; 만 포함되어 있어도 항상 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="2f8c0eebbadc48dffeb2cf7f130c320282dd5020" translate="yes" xml:space="preserve">
          <source>Elementwise NumPy ufuncs (log, exp, sqrt, &amp;hellip;) and various other NumPy functions can be used with no issues on Series and DataFrame, assuming the data within are numeric:</source>
          <target state="translated">요소 별 NumPy ufuncs (log, exp, sqrt,&amp;hellip;) 및 기타 다양한 NumPy 함수를 Series 및 DataFrame에서 문제없이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="525c74cb301c325c8922de73a58aca7c95a470da" translate="yes" xml:space="preserve">
          <source>Empty list of categoricals passed</source>
          <target state="translated">전달 된 범주의 빈 목록</target>
        </trans-unit>
        <trans-unit id="5d270d22e155e070504dd49956fd91c78e0191eb" translate="yes" xml:space="preserve">
          <source>Empty strings are not considered NA values. &lt;code&gt;None&lt;/code&gt; is considered an NA value.</source>
          <target state="translated">빈 문자열은 NA 값으로 간주되지 않습니다. NA 값으로 간주 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed3d92015ba57cff6027ae4287635a629ce85ce2" translate="yes" xml:space="preserve">
          <source>Empty strings are not considered NA values. None is considered a NA value.</source>
          <target state="translated">빈 문자열은 NA 값으로 간주되지 않습니다. NA 값으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13c37f3447b6849621e78a688e9b674a3e18107d" translate="yes" xml:space="preserve">
          <source>Empty strings are not considered NA values. None is considered an NA value.</source>
          <target state="translated">빈 문자열은 NA 값으로 간주되지 않습니다. NA 값으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8fa001186ab2b408d9fe8108b9c849a15bfb6875" translate="yes" xml:space="preserve">
          <source>Enable compression for all objects within the file:</source>
          <target state="translated">파일 내의 모든 개체에 대해 압축을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e901d4ccbaee8f880324e15076757dac346544f0" translate="yes" xml:space="preserve">
          <source>Enables automatic and explicit data alignment.</source>
          <target state="translated">자동적이고 명시적인 데이터 정렬을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="f9688ab8e4da569b3fe887bd63f82bc66c9b333b" translate="yes" xml:space="preserve">
          <source>Enabling &lt;code&gt;display.unicode.ambiguous_as_wide&lt;/code&gt; makes pandas interpret these characters&amp;rsquo; widths to be 2. (Note that this option will only be effective when &lt;code&gt;display.unicode.east_asian_width&lt;/code&gt; is enabled.)</source>
          <target state="translated">&lt;code&gt;display.unicode.ambiguous_as_wide&lt;/code&gt; 를 활성화 하면 pandas는 이러한 문자의 너비를 2로 해석합니다 (이 옵션은 &lt;code&gt;display.unicode.east_asian_width&lt;/code&gt; 가 활성화 된 경우에만 유효 합니다.)</target>
        </trans-unit>
        <trans-unit id="07e408e2d61e7b0f8c8f98914b513d46e4408fcd" translate="yes" xml:space="preserve">
          <source>Enabling &lt;code&gt;display.unicode.east_asian_width&lt;/code&gt; allows pandas to check each character&amp;rsquo;s &amp;ldquo;East Asian Width&amp;rdquo; property. These characters can be aligned properly by setting this option to &lt;code&gt;True&lt;/code&gt;. However, this will result in longer render times than the standard &lt;code&gt;len&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;display.unicode.east_asian_width&lt;/code&gt; 를 활성화 하면 팬더가 각 캐릭터의 &quot;동아시아 너비&quot;속성을 확인할 수 있습니다. 이 옵션을 &lt;code&gt;True&lt;/code&gt; 로 설정하면 이러한 문자를 올바르게 정렬 할 수 있습니다 . 그러나 이로 인해 표준 &lt;code&gt;len&lt;/code&gt; 함수 보다 렌더링 시간이 더 길어집니다 .</target>
        </trans-unit>
        <trans-unit id="b6955c2a6241af731b85bda8974ac0e2fd6a1a94" translate="yes" xml:space="preserve">
          <source>Enabling this option will affect the performance for printing of DataFrame and Series (about 2 times slower). Use only when it is actually required.</source>
          <target state="translated">이 옵션을 활성화하면 DataFrame 및 Series 인쇄 성능에 영향을줍니다 (약 2 배 느림). 실제로 필요한 경우에만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="00b367113f5eed913f54368cfcda8e21ac5273c9" translate="yes" xml:space="preserve">
          <source>Encode character string in the Series/Index using indicated encoding.</source>
          <target state="translated">표시된 인코딩을 사용하여 시리즈 / 인덱스에서 문자열을 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="04047600b6dbaaaca9cb9599345ed6b8017a2c18" translate="yes" xml:space="preserve">
          <source>Encode character string in the Series/Index using indicated encoding. Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.encode&quot;&gt;&lt;code&gt;str.encode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">표시된 인코딩을 사용하여 시리즈 / 인덱스에서 문자열을 인코딩하십시오. &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.encode&quot;&gt; &lt;code&gt;str.encode()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="89e3364b9a2984f9e759fd77173c6abbdb754cdf" translate="yes" xml:space="preserve">
          <source>Encode the extension array as an enumerated type.</source>
          <target state="translated">확장 배열을 열거 형으로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="3f63b5b0bb4c290c6f8ec670fd4b7637a23a0cf9" translate="yes" xml:space="preserve">
          <source>Encode the object as an enumerated type or categorical variable.</source>
          <target state="translated">열거 된 유형 또는 범주 형 변수로 개체를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="09f05f02cd4a21e611b6517c3064d6409e1974e7" translate="yes" xml:space="preserve">
          <source>Encoding for data &amp;amp; key when strings.</source>
          <target state="translated">문자열 일 때 데이터 및 키 인코딩.</target>
        </trans-unit>
        <trans-unit id="c448d7a424e7034a20f769d4658fdabd579b8f66" translate="yes" xml:space="preserve">
          <source>Encoding for text data. If None, text data are stored as raw bytes.</source>
          <target state="translated">텍스트 데이터를 인코딩합니다. None 인 경우 텍스트 데이터는 원시 바이트로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="f34821b241bfe6e8be06cac4712ac5fe316cc36f" translate="yes" xml:space="preserve">
          <source>Encoding of the resulting excel file. Only necessary for xlwt, other writers support unicode natively.</source>
          <target state="translated">결과 엑셀 파일의 인코딩. xlwt에만 필요하며 다른 작성자는 기본적으로 유니 코드를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c38a009a8e7ed2f30a8f7e640aaaba9a75824504" translate="yes" xml:space="preserve">
          <source>Encoding to use for UTF when reading/writing (e.g. &lt;code&gt;'utf-8'&lt;/code&gt;). &lt;a href=&quot;https://docs.python.org/3/library/codecs.html#standard-encodings&quot;&gt;List of Python standard encodings&lt;/a&gt;.</source>
          <target state="translated">읽기 / 쓰기시 UTF에 사용할 인코딩 (예 : &lt;code&gt;'utf-8'&lt;/code&gt; ). &lt;a href=&quot;https://docs.python.org/3/library/codecs.html#standard-encodings&quot;&gt;Python 표준 인코딩 목록&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0fa12d49e845b40df6fcb1110b45a9b133a2e23" translate="yes" xml:space="preserve">
          <source>Encoding to use for UTF when reading/writing (ex. &amp;lsquo;utf-8&amp;rsquo;). &lt;a href=&quot;https://docs.python.org/3/library/codecs.html#standard-encodings&quot;&gt;List of Python standard encodings&lt;/a&gt; .</source>
          <target state="translated">읽기 / 쓰기시 UTF에 사용할 인코딩 (예 : 'utf-8') &lt;a href=&quot;https://docs.python.org/3/library/codecs.html#standard-encodings&quot;&gt;파이썬 표준 인코딩 목록&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0345ae4a94c5a7775719abd4bf58badc59912f20" translate="yes" xml:space="preserve">
          <source>Encoding used to parse the files. None defaults to latin-1.</source>
          <target state="translated">파일을 구문 분석하는 데 사용되는 인코딩 기본적으로 latin-1이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3226cbbeda736b6a185ebb432071dfdd46499b9c" translate="yes" xml:space="preserve">
          <source>Encoding with Table Schema</source>
          <target state="translated">테이블 스키마로 인코딩</target>
        </trans-unit>
        <trans-unit id="a7cff9928d6cf928c036bc4c2b34e33a10e59923" translate="yes" xml:space="preserve">
          <source>Encoding with Table Schema:</source>
          <target state="translated">테이블 스키마로 인코딩 :</target>
        </trans-unit>
        <trans-unit id="949e387e8d30902145cda7ada343a60721efe726" translate="yes" xml:space="preserve">
          <source>Encoding/decoding a Dataframe using &lt;code&gt;'columns'&lt;/code&gt; formatted JSON:</source>
          <target state="translated">&lt;code&gt;'columns'&lt;/code&gt; 형식의 JSON을 사용하여 데이터 프레임 인코딩 / 디코딩 :</target>
        </trans-unit>
        <trans-unit id="a4d5758f62adb3bdb7352a20a8d2d77da65dff23" translate="yes" xml:space="preserve">
          <source>Encoding/decoding a Dataframe using &lt;code&gt;'index'&lt;/code&gt; formatted JSON:</source>
          <target state="translated">&lt;code&gt;'index'&lt;/code&gt; 형식의 JSON을 사용하여 데이터 프레임 인코딩 / 디코딩 :</target>
        </trans-unit>
        <trans-unit id="e5c708857a4146c92b53ec0e2de3c8574813442a" translate="yes" xml:space="preserve">
          <source>Encoding/decoding a Dataframe using &lt;code&gt;'records'&lt;/code&gt; formatted JSON. Note that index labels are not preserved with this encoding.</source>
          <target state="translated">&lt;code&gt;'records'&lt;/code&gt; 형식의 JSON을 사용하여 데이터 프레임을 인코딩 / 디코딩합니다 . 이 인코딩에서는 인덱스 레이블이 유지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="618ef73e561d4802a159e38e582bd2d562ddbc09" translate="yes" xml:space="preserve">
          <source>Encoding/decoding a Dataframe using &lt;code&gt;'split'&lt;/code&gt; formatted JSON:</source>
          <target state="translated">&lt;code&gt;'split'&lt;/code&gt; 형식의 JSON을 사용하여 데이터 프레임 인코딩 / 디코딩 :</target>
        </trans-unit>
        <trans-unit id="4cbea9441f14e19d4c81ed36d46e57e42cccb100" translate="yes" xml:space="preserve">
          <source>Encoding/decoding a Dataframe using &lt;code&gt;'values'&lt;/code&gt; formatted JSON:</source>
          <target state="translated">다음을 사용하여 데이터 프레임 인코딩 / 디코딩 &lt;code&gt;'values'&lt;/code&gt; 형식의 JSON을 :</target>
        </trans-unit>
        <trans-unit id="fe2356f284c627434dc28bad48476fcc4f4b75ae" translate="yes" xml:space="preserve">
          <source>End time as a time filter limit.</source>
          <target state="translated">시간 필터 제한으로서의 종료 시간.</target>
        </trans-unit>
        <trans-unit id="446416dc80865595053f605d8078061ae26c13ba" translate="yes" xml:space="preserve">
          <source>End time of your custom business hour in 24h format.</source>
          <target state="translated">24 시간 형식으로 된 사용자 지정 업무 시간의 종료 시간입니다.</target>
        </trans-unit>
        <trans-unit id="7f8023cf8f2eb1519e6feae1e1a1079df42f8628" translate="yes" xml:space="preserve">
          <source>Endpoints are inclusive</source>
          <target state="translated">엔드 포인트는 포괄적입니다.</target>
        </trans-unit>
        <trans-unit id="43addc28c20634ce912ae6e7fe27b3d649b37805" translate="yes" xml:space="preserve">
          <source>Engarde</source>
          <target state="translated">Engarde</target>
        </trans-unit>
        <trans-unit id="65d73bdf59fd21540bf6975570ceea0f552f37b7" translate="yes" xml:space="preserve">
          <source>Engarde is a lightweight library used to explicitly state your assumptions about your datasets and check that they&amp;rsquo;re &lt;em&gt;actually&lt;/em&gt; true.</source>
          <target state="translated">Engarde는 데이터 세트에 대한 가정을 명시 적으로 밝히고 &lt;em&gt;실제&lt;/em&gt; 데이터인지 확인하는 데 사용되는 간단한 라이브러리입니다.&lt;em&gt;&lt;/em&gt; 사실 입니다.</target>
        </trans-unit>
        <trans-unit id="282f5b73cc5ba6e37aedbe5b5e315d93a699efaa" translate="yes" xml:space="preserve">
          <source>Engine connection examples</source>
          <target state="translated">엔진 연결 예</target>
        </trans-unit>
        <trans-unit id="bc316ac1bd016af1f56c630d571e28b866f2fd3e" translate="yes" xml:space="preserve">
          <source>Engine to use for writing. If None, defaults to &lt;code&gt;io.excel.&amp;lt;extension&amp;gt;.writer&lt;/code&gt;. NOTE: can only be passed as a keyword argument.</source>
          <target state="translated">쓰기에 사용할 엔진. None 인 경우 기본값은 &lt;code&gt;io.excel.&amp;lt;extension&amp;gt;.writer&lt;/code&gt; 입니다. 입니다. 참고 : 키워드 인수로만 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5a6cba95a0d1e40dc8f11a7f2764bcdcec8b352" translate="yes" xml:space="preserve">
          <source>Enhancing performance</source>
          <target state="translated">성능 향상</target>
        </trans-unit>
        <trans-unit id="c10e88af3792c9f19b02140375564114734c4cc3" translate="yes" xml:space="preserve">
          <source>Enigma</source>
          <target state="translated">Enigma</target>
        </trans-unit>
        <trans-unit id="f67cf007e34de2aa51b2f41a376748dcee68afd0" translate="yes" xml:space="preserve">
          <source>Ensure</source>
          <target state="translated">Ensure</target>
        </trans-unit>
        <trans-unit id="e2dd9460b98190efc65e85d605a10b089d283a46" translate="yes" xml:space="preserve">
          <source>Ensure &lt;code&gt;pat&lt;/code&gt; is a not a literal pattern when &lt;code&gt;regex&lt;/code&gt; is set to True. Note in the following example one might expect only &lt;code&gt;s2[1]&lt;/code&gt; and &lt;code&gt;s2[3]&lt;/code&gt; to return &lt;code&gt;True&lt;/code&gt;. However, &amp;lsquo;.0&amp;rsquo; as a regex matches any character followed by a 0.</source>
          <target state="translated">&lt;code&gt;regex&lt;/code&gt; 이 True로 설정된 경우 &lt;code&gt;pat&lt;/code&gt; 이 리터럴 패턴이 아닌지 확인하십시오 . 다음 예제에서는 &lt;code&gt;s2[1]&lt;/code&gt; 및 &lt;code&gt;s2[3]&lt;/code&gt; &lt;code&gt;True&lt;/code&gt; 를 반환 할 것으로 예상 할 수 있습니다. . 그러나 정규식으로 '.0'은 0이 오는 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8943c13f49ef4213dce257c113d15d9934d5311d" translate="yes" xml:space="preserve">
          <source>Entries where</source>
          <target state="translated">항목</target>
        </trans-unit>
        <trans-unit id="d8065eb6e1360c939ccbf6d8324895bfbc2e2b6e" translate="yes" xml:space="preserve">
          <source>Entries where &lt;code&gt;cond&lt;/code&gt; is False are replaced with corresponding value from &lt;code&gt;other&lt;/code&gt;. If other is callable, it is computed on the Series/DataFrame and should return scalar or Series/DataFrame. The callable must not change input Series/DataFrame (though pandas doesn&amp;rsquo;t check it).</source>
          <target state="translated">&lt;code&gt;cond&lt;/code&gt; 가 False 인 항목 은 &lt;code&gt;other&lt;/code&gt; 항목의 해당 값으로 대체됩니다. . 다른 것이 호출 가능하면 Series / DataFrame에서 계산되며 스칼라 또는 Series / DataFrame을 리턴해야합니다. 콜 러블은 팬더가 확인하지 않아도 입력 시리즈 / 데이터 프레임을 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a49acce1a8a0936ac5ee0e836da10f60b0337b10" translate="yes" xml:space="preserve">
          <source>Entries where &lt;code&gt;cond&lt;/code&gt; is True are replaced with corresponding value from &lt;code&gt;other&lt;/code&gt;. If other is callable, it is computed on the Series/DataFrame and should return scalar or Series/DataFrame. The callable must not change input Series/DataFrame (though pandas doesn&amp;rsquo;t check it).</source>
          <target state="translated">&lt;code&gt;cond&lt;/code&gt; 가 True 인 항목 은 &lt;code&gt;other&lt;/code&gt; 의 해당 값으로 바뀝니다 . 다른 것이 호출 가능하면 Series / DataFrame에서 계산되며 스칼라 또는 Series / DataFrame을 리턴해야합니다. 콜 러블은 팬더가 확인하지 않아도 입력 시리즈 / 데이터 프레임을 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cf8b60e2a31b77a3d133bf80e17c18e3a8f6b1eb" translate="yes" xml:space="preserve">
          <source>Enumerate group items</source>
          <target state="translated">그룹 항목 열거</target>
        </trans-unit>
        <trans-unit id="02e91c8c5be8ed0211723e6ddc8bea480acbeaa9" translate="yes" xml:space="preserve">
          <source>Enumerate groups</source>
          <target state="translated">그룹 열거</target>
        </trans-unit>
        <trans-unit id="9ea8b0a4be7e169d088665c3b5a03423c18e7b83" translate="yes" xml:space="preserve">
          <source>Epoch times will be rounded to the nearest nanosecond.</source>
          <target state="translated">에포크 시간은 가장 가까운 나노초로 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="5b9a97f4f4ce1d67143b8a252270c4c51631bab9" translate="yes" xml:space="preserve">
          <source>Epoch timestamps</source>
          <target state="translated">Epoch 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="92a82859b1414312e2fca276d0c8b1d3beba1d40" translate="yes" xml:space="preserve">
          <source>Epoch timestamps, in seconds:</source>
          <target state="translated">Epoch 타임 스탬프 (초) :</target>
        </trans-unit>
        <trans-unit id="35ce1336fe67a461f842a71cf72b4840bbd0f636" translate="yes" xml:space="preserve">
          <source>Equality comparisons work with any list-like object of same length and scalars:</source>
          <target state="translated">같음 비교는 길이와 스칼라가 같은 목록과 같은 모든 객체에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2a950dec52b6680c2e9d4677f8ae2f9d66d2ac29" translate="yes" xml:space="preserve">
          <source>Equality semantics</source>
          <target state="translated">평등 의미</target>
        </trans-unit>
        <trans-unit id="b7b65bacf0dcfe557f503ac2c6ada5790666cad6" translate="yes" xml:space="preserve">
          <source>Equality test for DataFrame.</source>
          <target state="translated">DataFrame에 대한 평등 테스트.</target>
        </trans-unit>
        <trans-unit id="f0f4741ae43ac85766b1a151f8ca3b0e693ca5b9" translate="yes" xml:space="preserve">
          <source>Equals 0 or &amp;lsquo;index&amp;rsquo; for row-wise, 1 or &amp;lsquo;columns&amp;rsquo; for column-wise.</source>
          <target state="translated">행 단위의 경우 0 또는 '색인', 열 단위의 경우 1 또는 '열'과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bec372b0c63afa94384d73892b7edc5938dad0bb" translate="yes" xml:space="preserve">
          <source>Equivalent behaviour to:</source>
          <target state="translated">동등한 행동 :</target>
        </trans-unit>
        <trans-unit id="eafaf50a3fc5d2f5632eab755aab7b1168625ca7" translate="yes" xml:space="preserve">
          <source>Equivalent function for Index.</source>
          <target state="translated">인덱스에 해당하는 기능.</target>
        </trans-unit>
        <trans-unit id="5150ea9de645c73202cdf25bf15aef5fef0f71b9" translate="yes" xml:space="preserve">
          <source>Equivalent function for Series.</source>
          <target state="translated">시리즈에 해당하는 기능.</target>
        </trans-unit>
        <trans-unit id="b66a5dd4be04652a12ce7c24108f9ce5d66216c7" translate="yes" xml:space="preserve">
          <source>Equivalent means that both arrays have the same shape and dtype, and all values compare equal. Missing values in the same location are considered equal (in contrast with normal equality).</source>
          <target state="translated">Equivalent는 두 배열의 모양과 dtype이 같고 모든 값이 같음을 의미합니다. 동일한 위치에서 누락 된 값은 동일한 것으로 간주됩니다 (일반 같음과 달리).</target>
        </trans-unit>
        <trans-unit id="e3cc6e244cfdf3912de98f274cade02cea1ebbd9" translate="yes" xml:space="preserve">
          <source>Equivalent method for DataFrame.</source>
          <target state="translated">DataFrame에 해당하는 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="34d5af3caa4160a58f0c4e672e7c721b5f0ac60e" translate="yes" xml:space="preserve">
          <source>Equivalent method for Numpy array.</source>
          <target state="translated">Numpy 배열에 해당하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="86be3a008063ea0fa5cbc465de95ff0781aa0274" translate="yes" xml:space="preserve">
          <source>Equivalent method for Series.</source>
          <target state="translated">시리즈에 해당하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="e5bcf283c3a2ff6510396df3839d6bf440131764" translate="yes" xml:space="preserve">
          <source>Equivalent method for asserting Series equality.</source>
          <target state="translated">Series 평등을 주장하는 동등한 방법.</target>
        </trans-unit>
        <trans-unit id="6aac8809755a43f3a1522e028588220d843ac2f0" translate="yes" xml:space="preserve">
          <source>Equivalent method for numpy arrays.</source>
          <target state="translated">numpy 배열에 해당하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1766b2ea538d4da67aacc27e7da2c4776f50878d" translate="yes" xml:space="preserve">
          <source>Equivalent method on DataFrame.</source>
          <target state="translated">DataFrame에서 동등한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a971bb0883f8fadf0741740896fa0d70c66b6e94" translate="yes" xml:space="preserve">
          <source>Equivalent method on DataFrames.</source>
          <target state="translated">DataFrames의 동등한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="cf2bcecfe27133c9d3af500dbe79e4b8fbabe6b9" translate="yes" xml:space="preserve">
          <source>Equivalent method on Index.</source>
          <target state="translated">인덱스에서 동등한 방법.</target>
        </trans-unit>
        <trans-unit id="039526d3053d69abdcef44477b44dd885203684b" translate="yes" xml:space="preserve">
          <source>Equivalent method on Series.</source>
          <target state="translated">시리즈에서 동등한 방법.</target>
        </trans-unit>
        <trans-unit id="24e152aa30842b5b75379ed7254450d609faadd4" translate="yes" xml:space="preserve">
          <source>Equivalent method on index.</source>
          <target state="translated">색인에 대한 동등한 방법.</target>
        </trans-unit>
        <trans-unit id="89a8e5826b0c825951697c4f94220cfb2ec6df47" translate="yes" xml:space="preserve">
          <source>Equivalent method on pandas.DataFrame.</source>
          <target state="translated">pandas.DataFrame에 해당하는 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="02cf099c7617448ab418841eb93c3d26c95440b9" translate="yes" xml:space="preserve">
          <source>Equivalent method on pandas.Index.</source>
          <target state="translated">pandas.Index에 해당하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="8af0c4c82417b823e82121cf4a2e70da57832460" translate="yes" xml:space="preserve">
          <source>Equivalent method on pandas.Series.</source>
          <target state="translated">판다에 대한 동등한 방법.</target>
        </trans-unit>
        <trans-unit id="50ca5e48933fda492931c90b1bcf99318326d92c" translate="yes" xml:space="preserve">
          <source>Equivalent numpy function to create a new view of the same data in memory.</source>
          <target state="translated">동일한 numpy 함수는 메모리에서 동일한 데이터의 새보기를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="fdd6abe4d3e43555fd6a8a4c1cf45b848e487e53" translate="yes" xml:space="preserve">
          <source>Equivalent to</source>
          <target state="translated">에 해당</target>
        </trans-unit>
        <trans-unit id="79d8bf0ed3a917a129bad860eafd03364618b48f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.capitalize&quot;&gt;&lt;code&gt;str.capitalize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.capitalize&quot;&gt; &lt;code&gt;str.capitalize()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="67e4634e8d10e65ad571767afdaef7f48e17792d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.casefold&quot;&gt;&lt;code&gt;str.casefold()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.casefold&quot;&gt; &lt;code&gt;str.casefold()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8a19e9f97d664ff7646cbf48a2b0f4de31bc401b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.center&quot;&gt;&lt;code&gt;str.center()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.center&quot;&gt; &lt;code&gt;str.center()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e29877ebd9f2d11db9a73c54566769390daf09b0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.encode&quot;&gt;&lt;code&gt;str.encode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.encode&quot;&gt; &lt;code&gt;str.encode()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b3dd64b77ea4698e10d9f62a8768c893079c960b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.endswith&quot;&gt;&lt;code&gt;str.endswith()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.endswith&quot;&gt; &lt;code&gt;str.endswith()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f32069a8d402dda0e4955ec3eff24ae0b8521a31" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.ljust&quot;&gt;&lt;code&gt;str.ljust()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.ljust&quot;&gt; &lt;code&gt;str.ljust()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8557c34d1a99255dea29f10640e1e53e23c15306" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.lower&quot;&gt;&lt;code&gt;str.lower()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.lower&quot;&gt; &lt;code&gt;str.lower()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5078d208f9fcd43e48aa9ee8a59c82f49eb62a2f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt;&lt;code&gt;str.replace()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt;&lt;code&gt;re.sub()&lt;/code&gt;&lt;/a&gt;, depending on the regex value.</source>
          <target state="translated">regex 값에 따라 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt; &lt;code&gt;str.replace()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt; &lt;code&gt;re.sub()&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="11fc893ee4699c223edebdd3d49049632aefb6a4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.rjust&quot;&gt;&lt;code&gt;str.rjust()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.rjust&quot;&gt; &lt;code&gt;str.rjust()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="fdee95d9552c753b4628a2110af8c042a59db3c9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.startswith&quot;&gt;&lt;code&gt;str.startswith()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.startswith&quot;&gt; &lt;code&gt;str.startswith()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="61ab9766e4a4bf3cf0f9ed4e0351a549bae6c273" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.swapcase&quot;&gt;&lt;code&gt;str.swapcase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.swapcase&quot;&gt; &lt;code&gt;str.swapcase()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="33bb37c42b71289bed4bee7209ae17f58969f592" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.title&quot;&gt;&lt;code&gt;str.title()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.title&quot;&gt; &lt;code&gt;str.title()&lt;/code&gt; &lt;/a&gt; 같습니다 .</target>
        </trans-unit>
        <trans-unit id="93d0def0adae00f9922d3794fa4ae0d97942d98c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.upper&quot;&gt;&lt;code&gt;str.upper()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.upper&quot;&gt; &lt;code&gt;str.upper()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="cf2de26dd66dedb8c3f2fcebc2d8932f397d78e4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;=!&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; with support to choose axis (rows or columns) and level for comparison.</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; , &lt;code&gt;=!&lt;/code&gt; 와 같습니다 . , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; 는 축 (행 또는 열)과 비교할 수준을 선택할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7ce25ba2ac69fd4a7495e9e2331130a8d783e3c7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe % other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">&lt;code&gt;dataframe % other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="af8325a24b9cd76b68211c33b20206559dac1841" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe % other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;rmod&lt;/code&gt;.</source>
          <target state="translated">data &lt;code&gt;dataframe % other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다. 리버스 버전 인 &lt;code&gt;rmod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bcbe7ae7e8fb9171aab9130fdeead82606a252b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe * other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">&lt;code&gt;dataframe * other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="2ded5ebbec616aeaf49692d5f13776690d34f783" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe * other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;rmul&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataframe * other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다. 리버스 버전 인 &lt;code&gt;rmul&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3c015f696c2b26d4f9f995d73213819b5f4962a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe ** other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">&lt;code&gt;dataframe ** other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="ed44b090cee048d7ac666bc47b3885eea740bfce" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe ** other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;rpow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataframe ** other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다. 리버스 버전 인 &lt;code&gt;rpow&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b0c3fc33340f7f1182327d4aefe88112522499a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe + other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">&lt;code&gt;dataframe + other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="d3508dbe976dd0fac991f7cabd11b0932aad8560" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe + other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;radd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataframe + other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다. 리버스 버전에서는 &lt;code&gt;radd&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="40f29eed46aa1d19734683a8ce8ea29f2c59601d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe - other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">&lt;code&gt;dataframe - other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="0b67f6f8e2fc863c8c012894e8a90b18d995890e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe - other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;rsub&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataframe - other&lt;/code&gt; 동일 하지만 input 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다. 역 버전 인 &lt;code&gt;rsub&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57ffc866080535b1ecd73c06fbfbcacf7eabb536" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe / other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">&lt;code&gt;dataframe / other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="53b512b1905b0d90b5b250d18aeb8ffc80bb6664" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe / other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;rtruediv&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dataframe / other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다. 역 버전으로, &lt;code&gt;rtruediv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="462c4903c05aa359e973ca266a204a2647a9d25b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe // other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">&lt;code&gt;dataframe // other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="26f88988466f5867490f5c6d5db7466cbf156923" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;dataframe // other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;rfloordiv&lt;/code&gt;.</source>
          <target state="translated">data &lt;code&gt;dataframe // other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다. 역 버전으로 &lt;code&gt;rfloordiv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b25e0b2b60a1bdf90a5de4b6012607dfa56d6bb3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;divmod(series, other)&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">상당 &lt;code&gt;divmod(series, other)&lt;/code&gt; , 그러나 지원은 입력 중 어느 하나에 데이터를 누락하는 fill_value를 대체한다.</target>
        </trans-unit>
        <trans-unit id="01edc469184bd26f540745b2f821e804adfe756d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other % dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">상당 &lt;code&gt;other % dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="2d9855623cca51925b961366f57ef44b9d0df009" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other % dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;mod&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;other % dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 역 버전에서는 &lt;code&gt;mod&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b193ad767739ccf01c509858ecf90a1b9abeb2ae" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other % series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other % series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ab056889489aaca415e641a436727e11fa841310" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other % series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other % series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1ad597a591d8fe5122bc124a056764f116fc154" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other * dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">상당 &lt;code&gt;other * dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="4ecafbefdcd9e37afc570bed2602a27ec7f735ad" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other * dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;mul&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;other * dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 역 버전 인 &lt;code&gt;mul&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8847a5a053d0c21e284a38b323f15ffd735ba37a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other * series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other * series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a841af3c68b714de344b9e707cbb8941d6e7a32d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other * series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other * series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="051dfeb2816c59ac251d025c23e5e0bd4e7bf861" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other ** dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">동등 &lt;code&gt;other ** dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="de1ba76737080e52f19b48426bbb517d5f1f74eb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other ** dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;pow&lt;/code&gt;.</source>
          <target state="translated">동등 &lt;code&gt;other ** dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 역 버전 인 &lt;code&gt;pow&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47e2bb51428b42f646e01a6385e882aac84ba1d5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other ** series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other ** series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="96eed61bd77546a7701549d667a943c31c1f866d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other ** series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other ** series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c8230ca3c83b66331987d61fafd1b863ee4b3e9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other + dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">상당 &lt;code&gt;other + dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="6adcd240f3181e9f8f4b3d298f6ff23ac74bd0e5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other + dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;other + dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 역 버전의 경우을 &lt;code&gt;add&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="479887e72ae67ffd4c01eda3a9538f1f9e61b08f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other + series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other + series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="0c20cee94dbad2d3c6e7cca8e27f27100bfa4206" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other + series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other + series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2d282e03aca03b9b02d18b4f7e13d06c88f8ff2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other - dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">동등 &lt;code&gt;other - dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="0c8a7d43b0b03d3c4c1abe018667138886de3688" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other - dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;sub&lt;/code&gt;.</source>
          <target state="translated">동등 &lt;code&gt;other - dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 역 버전, &lt;code&gt;sub&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48d548664234ab2b979d65c6b69a25e08c8216f1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other - series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other - series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c1022760fcd533b5ca5d8f45c515df7b35256794" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other - series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other - series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85ed27f133c95769ddc77aac3ac952ca357b3a16" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other / dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">상당 &lt;code&gt;other / dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="9ab0bcf24dbfec8d2836a8050a87fecdf04da0d1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other / dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;truediv&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;other / dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 역 버전으로 &lt;code&gt;truediv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63bf17103c29153805a3c7907e5a6e235cb173ba" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other / series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other / series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a6cff1388b459faeedd981155ab3756cc10ebfab" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other / series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other / series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ac3709cb325d572cd817685de7c32fff961bcb1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other // dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version,</source>
          <target state="translated">상당 &lt;code&gt;other // dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 리버스 버전을 사용하면</target>
        </trans-unit>
        <trans-unit id="e2ada1c3deca00a0b98bf91c4975c66bf3f2a32e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other // dataframe&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs. With reverse version, &lt;code&gt;floordiv&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;other // dataframe&lt;/code&gt; 있지만 지원 입력 중 하나에 데이터를 누락하는 fill_value를 대체한다. 역 버전, &lt;code&gt;floordiv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0edd723971c441abaa13379011d8c164929a9abe" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other // series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other // series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a14c6dba93c6143a2bb337395a7c265afa05ed21" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other // series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other // series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="333367bc3bba30a1828693a425cb11eb9e85f1cb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other divmod series&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;other divmod series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="611a69a3865183033248686aa072d739ec83d7e7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;other divmod series&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;other divmod series&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="807d94825b3f0bc1766a5929b9c618a23a76cbbf" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series != other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series != other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체하도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5dac5f7642ebb0b2fce97a1975324da6575133cd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series != other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series != other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bf12356873f87836ec8da2a4e48cd461a2ea41a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series % other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series % other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="97fd03888867509823d41425c9f98ba84a338efd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series % other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series % other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15e2579055afcdcbba15c4a96b924ef4e487e22a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;gt; other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;gt; other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="146806a4320c1fc791a2b50f1818d29b1697b282" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;gt; other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;gt; other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cac0720a865c4fd9da7cec79ebc9d8b83b4c8ff" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;gt;= other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;gt;= other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="232615fe7359c047031039f09fef437e55b47800" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;gt;= other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;gt;= other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="387fbb5a35168e57a435e82e52465a1fd6334006" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;lt; other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;lt; other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b1422746116ba43c3363350a637a5dc17850fe1c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;lt; other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;lt; other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba8f66cc4cdc30555940fb58e234ccbb7b55ed97" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;lt;= other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;lt;= other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1187d2ecbe2e9b77fa4311abd96e99ca8625bd2e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series &amp;lt;= other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series &amp;lt;= other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0756c317e2e6ff08ed5908efa4bd896208a9fe05" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series * other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series * other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8d57c26e8b6844f7cf58d845a28a1a951ffed1d3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series * other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series * other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65ea749d220d97d4b57dc1c9f80f4c1b8751b1a5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series ** other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series ** other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7f79e49fa785542cc761f929276f109fd3b576f2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series ** other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series ** other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="790be456d7355e65fa8b9361dce557312ebc0d99" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series + other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series + other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ddc8927b1f6ad3dc690c03681a97e73b97fbc6a0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series + other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series + other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="485954f2d7172d8ef0c6cde8551ce7f8c7932aee" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series - other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series - other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="65653d57fbabc40af1af2eb8f591d8c6b08143cd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series - other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series - other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b1493d48fda35c6e5c7ee5ac61b9d84c8be97f2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series / other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series / other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="32e71bac53d43967b346a0405f4abd972a091f33" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series / other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series / other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fe8e62ed67fd5c500a6bcfd615ecc92f89afeb7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series // other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series // other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="842d93ee127c79fe632f0aa8f57be4246cd1b9ab" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series // other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series // other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff17dae9d36459c39473bbcbaffc97dfa28a456f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series == other&lt;/code&gt;, but with support to substitute a fill_value for missing data in either one of the inputs.</source>
          <target state="translated">&lt;code&gt;series == other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6ff3654e90f2c78e8c86db7727c62ef0a699f4ca" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series == other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series == other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76fac95a25a099666c46f923f5396cb9473e9e77" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;series divmod other&lt;/code&gt;, but with support to substitute a fill_value for missing data in one of the inputs.</source>
          <target state="translated">&lt;code&gt;series divmod other&lt;/code&gt; 와 동일 하지만 입력 중 하나에서 누락 된 데이터를 fill_value로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb850af4cc7c4e90f496384c03c331f8870f06bc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;shift&lt;/code&gt; without copying data.</source>
          <target state="translated">데이터를 복사하지 않고 &lt;code&gt;shift&lt;/code&gt; 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3535eff68e0e3f0566b60a87623480c31b4217de" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;shift&lt;/code&gt; without copying data. The shifted data will not include the dropped periods and the shifted axis will be smaller than the original.</source>
          <target state="translated">데이터를 복사하지 않고 &lt;code&gt;shift&lt;/code&gt; 것과 같습니다 . 이동 된 데이터에는 삭제 된 기간이 포함되지 않으며 이동 된 축은 원래보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="9e554d5558caaa5ca0484b49823e986a5329d209" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.capitalize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.capitalize&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="57230ee7c8c5e6264e0c058040891eeaa6650e9d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.casefold&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.casefold&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="f89ac97eb64ddf7a8481a747cdbcfdd90b42036c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.center&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.center&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="9276bf258e0b7f640e231843ee2bffd69cb2595c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.decode()&lt;/code&gt; in python2 and &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; in python3.</source>
          <target state="translated">동등 &lt;code&gt;str.decode()&lt;/code&gt; python2 및 예약 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt; python3있다.</target>
        </trans-unit>
        <trans-unit id="552ed49559a5788490a3622357e30777647862f0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.endswith(pat)&lt;/code&gt; for each element</source>
          <target state="translated">각 요소의 &lt;code&gt;str.endswith(pat)&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="e1f7035f5bd4e4cb68eb05eaba56e5932f73a9c1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.find&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.find&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="5ec0c8a53ae1a980e855158bc965984a6105119a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.index&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.index&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="b691c68a8465aa36b0544104d1827eab31fc1179" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.isalnum&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.isalnum&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="42517ec5e26cdf4fe197c107743f062a5d53b6f3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.isalpha&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.isalpha&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="88a9c9571ab0968d577d613734a3ff549a24d577" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.isdecimal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.isdecimal&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="2048166176c73fa69c8e8ea460c2957d4480e666" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.isdigit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.isdigit&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="a6b60b36c70dca0441eeae3d45aa0448cd109825" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.islower&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.islower&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="e71303c0b72a9d4385445cfe8f3a2a1bbf92c141" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.isnumeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.isnumeric&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="f5c71573c060becf4715039f8e9d02bbefc5e6be" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.isspace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.isspace&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="332cdd167ee75de14db221f3c9e5b2492e557f12" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.istitle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.istitle&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="f3c110984cd87a9d6c00aded8b192934237e3bc6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.isupper&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.isupper&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="472788e25cb2cbfea6444f29f234b62ef8575fdd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.ljust&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.ljust&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="7d71e72d1b1b0710f49d0979ad4bf488d51d99a6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.lower&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.lower&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="cfe48179e51f31780fef6ef438b0d44d5c037fb1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.lstrip&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.lstrip&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="18098876ebfdd3899af4583f90c7d5ca2d1dc8f1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.partition&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.partition&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="7b2d8cfdbc02181acdefbb536b8a78cad651b350" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.rfind&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.rfind&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="86d2697964ef5248a69ce71685e70d2439f1ce06" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.rindex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.rindex&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="e741e67904f1a3a221dea6ea8ce7b438b308e28f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.rjust&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.rjust&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="d6a282de1338356188e1858b64fe5ac84dd4d18d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.rpartition&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.rpartition&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="07dc6115b96fb7b893688a88d7feb1e61e613150" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.rstrip&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.rstrip&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="734c9b4fe265266160630a8eb71fce0ee87e3a77" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.startswith(pat)&lt;/code&gt; for each element</source>
          <target state="translated">각 요소의 &lt;code&gt;str.startswith(pat)&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="5505767a72a3e4b17f985437aa12c483ae4cf3db" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.strip&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.strip&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="953bc865466c83bfffbde971792bdf54de185346" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.swapcase&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.swapcase&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="08f1ef4b78a95e823baaee4615eea3f85fc98fbb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.translate&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.translate&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="78247887a2f7ed99d32b162bd9e4835a666fd811" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.upper&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.upper&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="695ca47fb55fafd841a91cd4d3029c549fa2f575" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;str.zfill&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str.zfill&lt;/code&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="bac92cb546b7c54bee4fa3940b7026532be25dee" translate="yes" xml:space="preserve">
          <source>Equivalent to Series.items for DataFrame.</source>
          <target state="translated">DataFrame의 Series.items와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0c4261dfee78912175d1810d6966131be8adfd8e" translate="yes" xml:space="preserve">
          <source>Equivalent to applying &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.findall&quot;&gt;&lt;code&gt;re.findall()&lt;/code&gt;&lt;/a&gt; to all the elements in the Series/Index.</source>
          <target state="translated">시리즈 / 인덱스의 모든 요소에 &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.findall&quot;&gt; &lt;code&gt;re.findall()&lt;/code&gt; &lt;/a&gt; 을 적용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3f43fc77aa2450edb40bc2d9ce2e0ca5e1d28c2a" translate="yes" xml:space="preserve">
          <source>Equivalent to read_excel(ExcelFile, &amp;hellip;) See the read_excel docstring for more info on accepted parameters</source>
          <target state="translated">read_excel (ExcelFile,&amp;hellip;)과 동일 허용되는 매개 변수에 대한 자세한 정보는 read_excel docstring을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f7b53f769044d693a750eeda4ae2ec40bf98cc07" translate="yes" xml:space="preserve">
          <source>Equivalent to read_excel(ExcelFile, &amp;hellip;) See the read_excel docstring for more info on accepted parameters.</source>
          <target state="translated">read_excel (ExcelFile,&amp;hellip;)과 동일합니다. 허용되는 매개 변수에 대한 자세한 내용은 read_excel docstring을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="67b77929e2349fee429025ffb6b165a73200121a" translate="yes" xml:space="preserve">
          <source>Equivalent to standard &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.translate&quot;&gt;&lt;code&gt;str.translate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">표준 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.translate&quot;&gt; &lt;code&gt;str.translate()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ef613adbebaaadd93a24202a54a389d62354301a" translate="yes" xml:space="preserve">
          <source>Equivalent to yerr.</source>
          <target state="translated">yerr과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="dabd8f0f4f6ace5b4b5a696031e3eeeed5525aef" translate="yes" xml:space="preserve">
          <source>Error raised for unsupported Numba engine routines.</source>
          <target state="translated">지원되지 않는 Numba 엔진 루틴에 대해 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="7ba94fb81bca0ce40111d26366d2a3731cca5e74" translate="yes" xml:space="preserve">
          <source>Error raised when a null</source>
          <target state="translated">null 일 때 발생하는 오류</target>
        </trans-unit>
        <trans-unit id="98eb69ce32ff7f4e4afe1efc79d5cfdfec0927c1" translate="yes" xml:space="preserve">
          <source>Error raised when an operation would introduce duplicate labels.</source>
          <target state="translated">작업이 중복 레이블을 도입 할 때 발생하는 오류입니다.</target>
        </trans-unit>
        <trans-unit id="5d1de4dc9275f5b326291d028b6c4e7beb261032" translate="yes" xml:space="preserve">
          <source>Error raised when attempting to get a slice of a MultiIndex, and the index has not been lexsorted.</source>
          <target state="translated">MultiIndex 슬라이스를 가져 오려고 시도 할 때 오류가 발생했으며 인덱스가 어휘 분류되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="ed037d4402d31efe1e706fa750333dbb7f215410" translate="yes" xml:space="preserve">
          <source>Error raised when attempting to get a slice of a MultiIndex, and the index has not been lexsorted. Subclass of</source>
          <target state="translated">MultiIndex의 슬라이스를 가져 오려고 시도 할 때 오류가 발생하고 인덱스가 lexsort되지 않았습니다. 하위 클래스</target>
        </trans-unit>
        <trans-unit id="284d2b630c672fea6ad1786cada4bc360b6c3116" translate="yes" xml:space="preserve">
          <source>Error raised when attempting to get a slice of a MultiIndex, and the index has not been lexsorted. Subclass of &lt;code&gt;KeyError&lt;/code&gt;.</source>
          <target state="translated">MultiIndex 슬라이스를 가져 오려고 시도 할 때 오류가 발생했으며 인덱스가 어휘 분류되지 않았습니다. 하위 클래스 &lt;code&gt;KeyError&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="79d9cfc28b446bc2d0ed2a133fde32d077061be9" translate="yes" xml:space="preserve">
          <source>Error raised when problems arise during merging due to problems with input data.</source>
          <target state="translated">입력 데이터 문제로 인해 병합 중에 문제가 발생하면 오류가 발생합니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="21181f6af95ee275264302322cea9bd5b32bb055" translate="yes" xml:space="preserve">
          <source>Error raised when problems arise during merging due to problems with input data. Subclass of</source>
          <target state="translated">입력 데이터 문제로 인해 병합 중에 문제가 발생하면 오류가 발생합니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 하위 클래스</target>
        </trans-unit>
        <trans-unit id="e799be9c8eb9f580f314888275aa754f240a6423" translate="yes" xml:space="preserve">
          <source>Escape &lt;code&gt;'$'&lt;/code&gt; to find the literal dollar sign.</source>
          <target state="translated">리터럴 달러 기호를 찾으려면 &lt;code&gt;'$'&lt;/code&gt; 를 이스케이프 하십시오.</target>
        </trans-unit>
        <trans-unit id="13d6cab1912065d2f08db87785f579622ec47ebd" translate="yes" xml:space="preserve">
          <source>Escaped:</source>
          <target state="translated">Escaped:</target>
        </trans-unit>
        <trans-unit id="4c254ff3d8e1218dcc8fc64eec71256e82543dd2" translate="yes" xml:space="preserve">
          <source>Escapes special characters in DataFrames, when using the to_latex method.</source>
          <target state="translated">to_latex 메서드를 사용할 때 DataFrames에서 특수 문자를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="6b84de02044e2a7061edbc0b85c3a5a4ced1aa6e" translate="yes" xml:space="preserve">
          <source>Essential basic functionality</source>
          <target state="translated">필수 기본 기능</target>
        </trans-unit>
        <trans-unit id="ae92e13bb44b71bed7ba7cb82aaa2d3fc93794e3" translate="yes" xml:space="preserve">
          <source>Essentially equivalent to &lt;code&gt;.apply(lambda x: x.head(n))&lt;/code&gt;, except ignores as_index flag.</source>
          <target state="translated">as_index 플래그를 무시한다는 점을 제외하고 기본적으로 &lt;code&gt;.apply(lambda x: x.head(n))&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="16cc716cfc52e6db21503a58e00a78c7a8ed1057" translate="yes" xml:space="preserve">
          <source>Essentially equivalent to &lt;code&gt;.apply(lambda x: x.tail(n))&lt;/code&gt;, except ignores as_index flag.</source>
          <target state="translated">as_index 플래그를 무시한다는 점을 제외하고는 기본적으로 &lt;code&gt;.apply(lambda x: x.tail(n))&lt;/code&gt; 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa7928183fe39e38720bbea220be96edc1744520" translate="yes" xml:space="preserve">
          <source>Essentially this is equivalent to</source>
          <target state="translated">본질적으로 이것은</target>
        </trans-unit>
        <trans-unit id="cb79438666021b8aa6eba922d09fbc0bae397e83" translate="yes" xml:space="preserve">
          <source>Eurostat</source>
          <target state="translated">Eurostat</target>
        </trans-unit>
        <trans-unit id="12344a389beba7b5dde1f09a5a218e785dc0991d" translate="yes" xml:space="preserve">
          <source>Evaluate a Python expression as a string using various backends.</source>
          <target state="translated">다양한 백엔드를 사용하여 Python 표현식을 문자열로 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="5754da883ef7aaf474568f97756c6e700b0fcc89" translate="yes" xml:space="preserve">
          <source>Evaluate a string describing operations on DataFrame columns.</source>
          <target state="translated">DataFrame 열에 대한 작업을 설명하는 문자열을 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="e97ddde9cf360353f78e8f33c76e9617854f5748" translate="yes" xml:space="preserve">
          <source>Evaluates a boolean expression to query the columns of a frame.</source>
          <target state="translated">부울 식을 평가하여 프레임의 열을 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="28e2230e41f94e336a0458a2f25290db0a7ce24d" translate="yes" xml:space="preserve">
          <source>Evaluation order matters</source>
          <target state="translated">평가 순서가 중요합니다.</target>
        </trans-unit>
        <trans-unit id="66773db6c7a8d9d488390637d123c5ed08018f27" translate="yes" xml:space="preserve">
          <source>Evaluation points for the estimated PDF. If None (default), 1000 equally spaced points are used. If</source>
          <target state="translated">예상 PDF에 대한 평가 포인트입니다. None (기본값)이면 1000 개의 동일한 간격의 포인트가 사용됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="81fe6bf2fa71772fd5fd103b69b4e56394678ca2" translate="yes" xml:space="preserve">
          <source>Evaluation points for the estimated PDF. If None (default), 1000 equally spaced points are used. If &lt;code&gt;ind&lt;/code&gt; is a NumPy array, the KDE is evaluated at the points passed. If &lt;code&gt;ind&lt;/code&gt; is an integer, &lt;code&gt;ind&lt;/code&gt; number of equally spaced points are used.</source>
          <target state="translated">예상 PDF에 대한 평가 포인트. None (기본값) 인 경우 1000 개의 동일한 간격 점이 사용됩니다. 경우 &lt;code&gt;ind&lt;/code&gt; NumPy와 배열되면, KDE는 전달 된 지점에서 평가된다. 경우 &lt;code&gt;ind&lt;/code&gt; 정수이고, &lt;code&gt;ind&lt;/code&gt; 등 간격 포인트 개수가 사용된다.</target>
        </trans-unit>
        <trans-unit id="330c35fc45026a7e20a0b2660ec4ed24e28c2950" translate="yes" xml:space="preserve">
          <source>Even complicated fancy indexing that breaks the &lt;code&gt;DatetimeIndex&lt;/code&gt; frequency regularity will result in a &lt;code&gt;DatetimeIndex&lt;/code&gt;, although frequency is lost:</source>
          <target state="translated">&lt;code&gt;DatetimeIndex&lt;/code&gt; 빈도 규칙 성 을 깨뜨리는 복잡한 고급 인덱싱조차도 빈도가 손실 되더라도 &lt;code&gt;DatetimeIndex&lt;/code&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="e98f24522182bbab093284e8a62b8a8974ad8ae6" translate="yes" xml:space="preserve">
          <source>Even faster, with the caveat that a bug in our Cython code (an off-by-one error, for example) might cause a segfault because memory access isn&amp;rsquo;t checked. For more about &lt;code&gt;boundscheck&lt;/code&gt; and &lt;code&gt;wraparound&lt;/code&gt;, see the Cython docs on &lt;a href=&quot;http://cython.readthedocs.io/en/latest/src/reference/compilation.html?highlight=wraparound#compiler-directives&quot;&gt;compiler directives&lt;/a&gt;.</source>
          <target state="translated">Cython 코드의 버그 (예를 들어, 한 번에 한 가지 오류)로 인해 메모리 액세스가 확인되지 않아 segfault가 발생할 수 있다는 경고가 더 빠릅니다. &lt;code&gt;boundscheck&lt;/code&gt; 및 &lt;code&gt;wraparound&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;http://cython.readthedocs.io/en/latest/src/reference/compilation.html?highlight=wraparound#compiler-directives&quot;&gt;컴파일러 지시문&lt;/a&gt; 에 대한 Cython 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94b4474608f52d83e3bae75e02bb41904bf94211" translate="yes" xml:space="preserve">
          <source>Even faster, with the caveat that a bug in our Cython code (an off-by-one error, for example) might cause a segfault because memory access isn&amp;rsquo;t checked. For more about &lt;code&gt;boundscheck&lt;/code&gt; and &lt;code&gt;wraparound&lt;/code&gt;, see the Cython docs on &lt;a href=&quot;https://cython.readthedocs.io/en/latest/src/reference/compilation.html?highlight=wraparound#compiler-directives&quot;&gt;compiler directives&lt;/a&gt;.</source>
          <target state="translated">메모리 액세스가 확인되지 않기 때문에 Cython 코드의 버그 (예 : off-by-one 오류)로 인해 segfault가 발생할 수 있다는 경고가 있습니다. &lt;code&gt;boundscheck&lt;/code&gt; 및 &lt;code&gt;wraparound&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;https://cython.readthedocs.io/en/latest/src/reference/compilation.html?highlight=wraparound#compiler-directives&quot;&gt;컴파일러 지시문&lt;/a&gt; 에 대한 Cython 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="566315b35a900f8b2b036b0b3551475c7244fdd9" translate="yes" xml:space="preserve">
          <source>Even if the Series is backed by a &lt;a href=&quot;../reference/api/pandas.api.extensions.extensionarray#pandas.api.extensions.ExtensionArray&quot;&gt;&lt;code&gt;ExtensionArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; will return a NumPy ndarray.</source>
          <target state="translated">시리즈가 뒷받침 경우에도 &lt;a href=&quot;../reference/api/pandas.api.extensions.extensionarray#pandas.api.extensions.ExtensionArray&quot;&gt; &lt;code&gt;ExtensionArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; NumPy와의 ndarray를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="250d9ad569739efcc777dab3943105b20aa37dd8" translate="yes" xml:space="preserve">
          <source>Even if there&amp;rsquo;s a missing value in</source>
          <target state="translated">누락 된 값이 있어도</target>
        </trans-unit>
        <trans-unit id="0884df4d3b2d9b850dcff21822169991b0be59ba" translate="yes" xml:space="preserve">
          <source>Even if there&amp;rsquo;s a missing value in &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;uniques&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; contain an entry for it.</source>
          <target state="translated">에서 누락 된 값이 경우에도 &lt;code&gt;values&lt;/code&gt; , &lt;code&gt;uniques&lt;/code&gt; 것 &lt;em&gt;아니&lt;/em&gt; 그것에 대한 항목이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7acab491881f1540d1baa1a789cb348c6131638" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;Index&lt;/code&gt; can hold missing values (&lt;code&gt;NaN&lt;/code&gt;), it should be avoided if you do not want any unexpected results. For example, some operations exclude missing values implicitly.</source>
          <target state="translated">&lt;code&gt;Index&lt;/code&gt; 는 결 측값 ( &lt;code&gt;NaN&lt;/code&gt; )을 보유 할 수 있지만 예기치 않은 결과를 원하지 않는 경우 피해야합니다. 예를 들어 일부 작업에서는 누락 된 값을 암시 적으로 제외합니다.</target>
        </trans-unit>
        <trans-unit id="b16beae7c7a67108a3ace3392a9c92169de0a7e4" translate="yes" xml:space="preserve">
          <source>Even though the resulting DataFrame must have the same length as the input DataFrame, it is possible to provide several input functions:</source>
          <target state="translated">결과 DataFrame의 길이가 입력 DataFrame의 길이와 같아야하지만 몇 가지 입력 기능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5d5644476ece525b6be0e4ac57ee9eb2a831fba" translate="yes" xml:space="preserve">
          <source>Even though the resulting Series must have the same length as the input Series, it is possible to provide several input functions:</source>
          <target state="translated">결과 시리즈는 입력 시리즈와 길이가 같아야하지만 몇 가지 입력 기능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8f9ae416c145266e1ef37cc1a3d406e35b59e99" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;DataFrame&lt;/code&gt; and &lt;code&gt;Series&lt;/code&gt; has an &lt;code&gt;Index&lt;/code&gt; &amp;ndash; labels on the &lt;em&gt;rows&lt;/em&gt; of the data. Stata does not have an exactly analogous concept. In Stata, a data set&amp;rsquo;s rows are essentially unlabeled, other than an implicit integer index that can be accessed with &lt;code&gt;_n&lt;/code&gt;.</source>
          <target state="translated">모든 &lt;code&gt;DataFrame&lt;/code&gt; 및 &lt;code&gt;Series&lt;/code&gt; 에는 데이터 &lt;em&gt;행&lt;/em&gt; 에 &lt;code&gt;Index&lt;/code&gt; 레이블 이 있습니다. Stata는 정확히 유사한 개념을 가지고 있지 않습니다. Stata에서 데이터 세트의 행은 본질적으로 &lt;code&gt;_n&lt;/code&gt; 으로 액세스 할 수있는 암시 적 정수 인덱스 이외의 레이블이 없습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e9897b3b4c66dc603d785935dbf0bda3267bab4" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;DataFrame&lt;/code&gt; and &lt;code&gt;Series&lt;/code&gt; has an &lt;code&gt;Index&lt;/code&gt; - which are labels on the &lt;em&gt;rows&lt;/em&gt; of the data. SAS does not have an exactly analogous concept. A data set&amp;rsquo;s rows are essentially unlabeled, other than an implicit integer index that can be accessed during the &lt;code&gt;DATA&lt;/code&gt; step (&lt;code&gt;_N_&lt;/code&gt;).</source>
          <target state="translated">모든 &lt;code&gt;DataFrame&lt;/code&gt; 및 &lt;code&gt;Series&lt;/code&gt; 에는 데이터 &lt;em&gt;행&lt;/em&gt; 의 레이블 인 &lt;code&gt;Index&lt;/code&gt; 가 있습니다. SAS에는 정확히 유사한 개념이 없습니다. &lt;code&gt;DATA&lt;/code&gt; 단계 ( &lt;code&gt;_N_&lt;/code&gt; ) 중에 액세스 할 수있는 내재적 정수 인덱스 이외의 데이터 세트 행은 본질적으로 레이블이 없습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c64f970f76863311a056a8099da503807cae4780" translate="yes" xml:space="preserve">
          <source>Every calendar class is accessible by name using the &lt;code&gt;get_calendar&lt;/code&gt; function which returns a holiday class instance. Any imported calendar class will automatically be available by this function. Also, &lt;code&gt;HolidayCalendarFactory&lt;/code&gt; provides an easy interface to create calendars that are combinations of calendars or calendars with additional rules.</source>
          <target state="translated">모든 달력 클래스는 휴일 클래스 인스턴스를 반환하는 &lt;code&gt;get_calendar&lt;/code&gt; 함수를 사용하여 이름으로 액세스 할 수 있습니다 . 가져온 캘린더 클래스는이 기능을 통해 자동으로 사용할 수 있습니다. 또한 &lt;code&gt;HolidayCalendarFactory&lt;/code&gt; 는 추가 규칙이있는 캘린더 또는 캘린더의 조합 인 캘린더를 생성 할 수있는 쉬운 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2ee5df4e5a71accf89b7d1b60df2f71751bfdf6c" translate="yes" xml:space="preserve">
          <source>Every index column is stored with a name matching the pattern &lt;code&gt;__index_level_\d+__&lt;/code&gt; and its corresponding column information is can be found with the following code snippet.</source>
          <target state="translated">모든 인덱스 열은 &lt;code&gt;__index_level_\d+__&lt;/code&gt; 패턴과 일치하는 이름으로 저장되며 해당 열 정보는 다음 코드 스 니펫으로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51fa2a907f50fe0be16238514f41568c5af9adc8" translate="yes" xml:space="preserve">
          <source>Every method should be included in a &lt;code&gt;toctree&lt;/code&gt; in &lt;code&gt;api.rst&lt;/code&gt;, else Sphinx will emit a warning.</source>
          <target state="translated">모든 방법이 포함되어야한다 &lt;code&gt;toctree&lt;/code&gt; 에서 &lt;code&gt;api.rst&lt;/code&gt; , 다른 스핑크스는 경고를 방출합니다.</target>
        </trans-unit>
        <trans-unit id="b91fb3af6e4eb4dce581316a2276daa24d2d1f3d" translate="yes" xml:space="preserve">
          <source>Everything else that follows in the rest of this document applies equally to &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; dtype.</source>
          <target state="translated">이 문서의 나머지 부분에 나오는 다른 모든 내용은 &lt;code&gt;string&lt;/code&gt; 및 &lt;code&gt;object&lt;/code&gt; dtype에 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d61378dae57bdd1071fd580129054ae15415ebf2" translate="yes" xml:space="preserve">
          <source>Exact indexing</source>
          <target state="translated">정확한 인덱싱</target>
        </trans-unit>
        <trans-unit id="d2e2275c021dc54551f99a29d6a7c924e31b6bec" translate="yes" xml:space="preserve">
          <source>Exactly one of center of mass, span, half-life, and alpha must be provided. Allowed values and relationship between the parameters are specified in the parameter descriptions above; see the link at the end of this section for a detailed explanation.</source>
          <target state="translated">질량 중심, 스팬, 반감기 및 알파 중 하나를 정확하게 제공해야합니다. 허용되는 값과 매개 변수 간의 관계는 위의 매개 변수 설명에 지정되어 있습니다. 자세한 설명은이 섹션의 끝에있는 링크를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0e31a3bc459c362483fe84664bc28548c4e1e082" translate="yes" xml:space="preserve">
          <source>Exactly one parameter: &lt;code&gt;com&lt;/code&gt;, &lt;code&gt;span&lt;/code&gt;, &lt;code&gt;halflife&lt;/code&gt;, or &lt;code&gt;alpha&lt;/code&gt; must be provided.</source>
          <target state="translated">&lt;code&gt;com&lt;/code&gt; , &lt;code&gt;span&lt;/code&gt; , &lt;code&gt;halflife&lt;/code&gt; 또는 &lt;code&gt;alpha&lt;/code&gt; 중 정확히 하나의 매개 변수를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="5feffc2be1365c1372f6ac77996efda885dbcb7c" translate="yes" xml:space="preserve">
          <source>Example of a callable using PostgreSQL &lt;a href=&quot;https://www.postgresql.org/docs/current/static/sql-copy.html&quot;&gt;COPY clause&lt;/a&gt;:</source>
          <target state="translated">PostgreSQL &lt;a href=&quot;https://www.postgresql.org/docs/current/static/sql-copy.html&quot;&gt;COPY 절을&lt;/a&gt; 사용하는 콜 러블의 예 :</target>
        </trans-unit>
        <trans-unit id="dd6d090e2f2b5d493b5ec024d9a77ec31da9516d" translate="yes" xml:space="preserve">
          <source>Example pyarrow usage:</source>
          <target state="translated">pyarrow 사용 예 :</target>
        </trans-unit>
        <trans-unit id="4f3297ad3c5677acf0abf16b61cafebe6b79a7e9" translate="yes" xml:space="preserve">
          <source>Example that demonstrates the use of</source>
          <target state="translated">사용을 보여주는 예</target>
        </trans-unit>
        <trans-unit id="d5611bbe6191480a7a2c993aa5b23372bc7bed93" translate="yes" xml:space="preserve">
          <source>Example that demonstrates the use of &lt;code&gt;overwrite&lt;/code&gt; and behavior when the axis differ between the dataframes.</source>
          <target state="translated">데이터 프레임간에 축이 다를 때 &lt;code&gt;overwrite&lt;/code&gt; 및 동작 사용을 보여주는 예제입니다 .</target>
        </trans-unit>
        <trans-unit id="c322e17f3f5ae9cccab44ae6bb30a01e21c392eb" translate="yes" xml:space="preserve">
          <source>Example using a true element-wise combine function.</source>
          <target state="translated">진정한 요소 별 결합 함수를 사용하는 예제.</target>
        </trans-unit>
        <trans-unit id="0a8eec0aec52fd6e9b5231dff334382dfe84caa7" translate="yes" xml:space="preserve">
          <source>Example with a list that contains non-string elements.</source>
          <target state="translated">문자열이 아닌 요소가 포함 된 목록이있는 예</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="aa4b78eac1e654399b27734956eda31c582f7d95" translate="yes" xml:space="preserve">
          <source>Examples in docstrings, besides illustrating the usage of the function or method, must be valid Python code, that in a deterministic way returns the presented output, and that can be copied and run by users.</source>
          <target state="translated">docstrings의 예제는 함수 나 메소드의 사용법을 보여주는 것 외에, 결정적인 방식으로 제시된 출력을 리턴하고 사용자가 복사하고 실행할 수있는 유효한 Python 코드 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a08e11119aefc863a42db70003513594d2824191" translate="yes" xml:space="preserve">
          <source>Excel</source>
          <target state="translated">Excel</target>
        </trans-unit>
        <trans-unit id="d3814721f2dc82e17fb622728ae9818a37bb5392" translate="yes" xml:space="preserve">
          <source>Excel charts with pandas, vincent and xlsxwriter</source>
          <target state="translated">팬더, Vincent 및 xlsxwriter가 포함 된 Excel 차트</target>
        </trans-unit>
        <trans-unit id="84074766472bfcd2794860ad21251f9fa68009e7" translate="yes" xml:space="preserve">
          <source>Excel files</source>
          <target state="translated">엑셀 파일</target>
        </trans-unit>
        <trans-unit id="7875729fe29ef24086d082ea4fc5ab3008b175b0" translate="yes" xml:space="preserve">
          <source>Excel reading</source>
          <target state="translated">엑셀 읽기</target>
        </trans-unit>
        <trans-unit id="ba9708ab777f33c9f7347e65fd289b5cc5de6f5e" translate="yes" xml:space="preserve">
          <source>Excel writer engines</source>
          <target state="translated">Excel 작성기 엔진</target>
        </trans-unit>
        <trans-unit id="c30d394f7e5cd769a44f667e9734d6dbd25afbbb" translate="yes" xml:space="preserve">
          <source>Excel writing</source>
          <target state="translated">엑셀 쓰기</target>
        </trans-unit>
        <trans-unit id="2007c27e432bdbef48d1e4c4b0cf65bfe2467fc9" translate="yes" xml:space="preserve">
          <source>ExcelFile class</source>
          <target state="translated">ExcelFile 클래스</target>
        </trans-unit>
        <trans-unit id="ea75110f2cd4d5edbc168572f6b47e5fed81af06" translate="yes" xml:space="preserve">
          <source>ExcelFile.parse()</source>
          <target state="translated">ExcelFile.parse()</target>
        </trans-unit>
        <trans-unit id="eb6ce63c59eaf65be12f1d89c3ee2a0c9fb2bed4" translate="yes" xml:space="preserve">
          <source>ExcelWriter</source>
          <target state="translated">ExcelWriter</target>
        </trans-unit>
        <trans-unit id="c5990cf28526c0f0fa3623887b68a12f95906f2e" translate="yes" xml:space="preserve">
          <source>ExcelWriter can also be used to append to an existing Excel file:</source>
          <target state="translated">ExcelWriter를 사용하여 기존 Excel 파일에 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="02a714b0c25e9f7828ab3fdeac629c3e538220c4" translate="yes" xml:space="preserve">
          <source>ExcelWriter()</source>
          <target state="translated">ExcelWriter()</target>
        </trans-unit>
        <trans-unit id="5acc2c8b09c26d7573c86ce55cd415796a7a756e" translate="yes" xml:space="preserve">
          <source>Exception raised when attempting to call a numpy function on a pandas object, but that function is not supported by the object e.g.</source>
          <target state="translated">pandas 객체에서 numpy 함수를 호출하려고 할 때 예외가 발생했지만 해당 함수는 객체에서 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5f25bd5c29207b4e5050e20c635da91670ac025" translate="yes" xml:space="preserve">
          <source>Exception raised when attempting to call a numpy function on a pandas object, but that function is not supported by the object e.g. &lt;code&gt;np.cumsum(groupby_object)&lt;/code&gt;.</source>
          <target state="translated">pandas 객체에서 numpy 함수를 호출하려고 할 때 예외가 발생했지만 해당 함수는 &lt;code&gt;np.cumsum(groupby_object)&lt;/code&gt; 같은 객체에서 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5220cdfe7c21fae215e98215a0af3e0794222454" translate="yes" xml:space="preserve">
          <source>Exception raised when attempting to use an invalid index key.</source>
          <target state="translated">잘못된 인덱스 키를 사용하려고 할 때 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="843c1cb34c2503e349228fa83f29d0d0718b94eb" translate="yes" xml:space="preserve">
          <source>Exception that is raised by an error encountered in parsing file contents.</source>
          <target state="translated">파일 내용을 구문 분석 할 때 발생한 오류로 인해 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="493b4d223ff535b4a16949d691549874d48d4bc2" translate="yes" xml:space="preserve">
          <source>Exception that is thrown in</source>
          <target state="translated">던져진 예외</target>
        </trans-unit>
        <trans-unit id="3a77685e7d6f22dc4a8cabebf737ee456a9d0e5f" translate="yes" xml:space="preserve">
          <source>Exception that is thrown in &lt;code&gt;pd.read_csv&lt;/code&gt; (by both the C and Python engines) when empty data or header is encountered.</source>
          <target state="translated">빈 데이터 또는 헤더가 발견되면 &lt;code&gt;pd.read_csv&lt;/code&gt; (C 및 Python 엔진 모두 에서)에서 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ccf1573108e16e6d38ba26ddc8eacf022ebd30f9" translate="yes" xml:space="preserve">
          <source>Exceptions and warnings</source>
          <target state="translated">예외 및 경고</target>
        </trans-unit>
        <trans-unit id="fe900ddd9912c0e428fe50054166d6d912f56296" translate="yes" xml:space="preserve">
          <source>Exclude NA/null values when computing the result.</source>
          <target state="translated">결과를 계산할 때 NA / 널 값을 제외하십시오.</target>
        </trans-unit>
        <trans-unit id="927b768cb0945adc4c0b6a7e1c3654a48c83e2b7" translate="yes" xml:space="preserve">
          <source>Exclude NA/null values when showing the result.</source>
          <target state="translated">결과를 표시 할 때 NA / null 값을 제외하십시오.</target>
        </trans-unit>
        <trans-unit id="b228ef72ff8704ad50848ff3cc89e2944cdf4a2f" translate="yes" xml:space="preserve">
          <source>Exclude NA/null values. If an entire row/column is NA, the result will be NA</source>
          <target state="translated">NA / 널 값을 제외합니다. 전체 행 / 열이 NA 인 경우 결과는 NA입니다.</target>
        </trans-unit>
        <trans-unit id="5250f19083893fe22421fd1681459cf405c441b8" translate="yes" xml:space="preserve">
          <source>Exclude NA/null values. If an entire row/column is NA, the result will be NA.</source>
          <target state="translated">NA / 널 값을 제외합니다. 전체 행 / 열이 NA 인 경우 결과는 NA입니다.</target>
        </trans-unit>
        <trans-unit id="07da6f1aa6ddafc28f59057e76741b9fce1a37ce" translate="yes" xml:space="preserve">
          <source>Exclude NA/null values. If the entire Series is NA, the result will be NA.</source>
          <target state="translated">NA / 널 값을 제외합니다. 전체 계열이 NA 인 경우 결과는 NA입니다.</target>
        </trans-unit>
        <trans-unit id="297ab665bc832298cb922d60aa4de6bf59b88617" translate="yes" xml:space="preserve">
          <source>Exclude NA/null values. If the entire row/column is NA and skipna is True, then the result will be False, as for an empty row/column. If skipna is False, then NA are treated as True, because these are not equal to zero.</source>
          <target state="translated">NA / 널 값을 제외합니다. 전체 행 / 열이 NA이고 skipna가 True이면 빈 행 / 열과 마찬가지로 결과는 False입니다. skipna가 False이면 NA는 0이 아니기 때문에 True로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="90d256846e2ecad664af3184318f257ed8e015cd" translate="yes" xml:space="preserve">
          <source>Exclude NA/null values. If the entire row/column is NA and skipna is True, then the result will be True, as for an empty row/column. If skipna is False, then NA are treated as True, because these are not equal to zero.</source>
          <target state="translated">NA / 널 값을 제외합니다. 전체 행 / 열이 NA이고 스킵 나가 True 인 경우 빈 행 / 열과 같이 결과는 True입니다. skipna가 False이면 NA는 0이 아니기 때문에 True로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="5db56469943052480b74223068265bc604528139" translate="yes" xml:space="preserve">
          <source>Excludes NA values by default.</source>
          <target state="translated">기본적으로 NA 값을 제외합니다.</target>
        </trans-unit>
        <trans-unit id="835ce0b250fb0430b506bc63b934fe1a52b5b50c" translate="yes" xml:space="preserve">
          <source>Excluding numeric columns from a &lt;code&gt;DataFrame&lt;/code&gt; description.</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 설명 에서 숫자 열을 제외합니다 .</target>
        </trans-unit>
        <trans-unit id="df36fecd7aaa8fdae342e23cc34696d35ddd031b" translate="yes" xml:space="preserve">
          <source>Excluding object columns from a &lt;code&gt;DataFrame&lt;/code&gt; description.</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 설명 에서 개체 열을 제외합니다 .</target>
        </trans-unit>
        <trans-unit id="057316b728286aafdc943dc4178eb286f23d8645" translate="yes" xml:space="preserve">
          <source>Exercises for new users</source>
          <target state="translated">신규 사용자를위한 연습</target>
        </trans-unit>
        <trans-unit id="0b865439ce64dfdb016ab5b3036e294bc8ae7b14" translate="yes" xml:space="preserve">
          <source>Expand the split strings into separate columns.</source>
          <target state="translated">분할 된 문자열을 별도의 열로 확장합니다.</target>
        </trans-unit>
        <trans-unit id="831fab1cc83d91d9f92b8af73c8ca0a7ce14ac1f" translate="yes" xml:space="preserve">
          <source>Expand the splitted strings into separate columns.</source>
          <target state="translated">분리 된 문자열을 별도의 열로 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="da18dcb517e77686e5aeb15457a37f366e8d1b4e" translate="yes" xml:space="preserve">
          <source>Expanding apply</source>
          <target state="translated">확장 적용</target>
        </trans-unit>
        <trans-unit id="0966336ed0a69be287eb64518f883bbf76df4cae" translate="yes" xml:space="preserve">
          <source>Expanding data</source>
          <target state="translated">데이터 확장</target>
        </trans-unit>
        <trans-unit id="09d2c884735282948a00483a56f6259f88c79edd" translate="yes" xml:space="preserve">
          <source>Expanding sample covariance.</source>
          <target state="translated">표본 공분산 확장.</target>
        </trans-unit>
        <trans-unit id="33c64ef29d98ec02026187c4a06b2c3325891d45" translate="yes" xml:space="preserve">
          <source>Expanding window</source>
          <target state="translated">확장 창</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
